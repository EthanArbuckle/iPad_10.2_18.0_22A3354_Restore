void sub_1000034F4(id a1)
{
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  void *i;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle allFrameworks](NSBundle, "allFrameworks"));
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v11;
    do
    {
      for (i = 0; i != v3; i = (char *)i + 1)
      {
        if (*(_QWORD *)v11 != v4)
          objc_enumerationMutation(v1);
        v6 = *(void **)(*((_QWORD *)&v10 + 1) + 8 * (_QWORD)i);
        v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForInfoDictionaryKey:", CFSTR("CFBundleName")));
        if (objc_msgSend(v7, "isEqualToString:", CFSTR("Vision")))
        {
          v8 = objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForInfoDictionaryKey:", CFSTR("CFBundleShortVersionString")));
          v9 = (void *)off_1000D5020;
          off_1000D5020 = v8;

        }
      }
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
    }
    while (v3);
  }

}

Class sub_100003A6C()
{
  Class result;

  if (qword_1000D85D0 != -1)
    dispatch_once(&qword_1000D85D0, &stru_1000C14C8);
  result = objc_getClass("CMMotionManager");
  qword_1000D85C8 = (uint64_t)result;
  off_1000D5028 = (uint64_t (*)())sub_100003AC8;
  return result;
}

id sub_100003AC8()
{
  return (id)qword_1000D85C8;
}

void sub_100003AD4(id a1)
{
  qword_1000D85D8 = (uint64_t)dlopen("/System/Library/Frameworks/CoreMotion.framework/CoreMotion", 2);
}

void sub_100003EE0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

id sub_100003F04(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v8;
  id v9;
  id v10;
  id WeakRetained;
  void *v12;
  void *v13;
  void *v14;

  v8 = a2;
  v9 = a3;
  v10 = a4;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 8), a2);
  if (WeakRetained || objc_msgSend(v10, "isEmpty"))
  {
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "voices"));
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "objectAtIndexedSubscript:", objc_msgSend(v9, "row")));

    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_tableCellForVoiceViewModel:indexPath:", v13, v9));
  }
  else
  {
    v14 = 0;
  }

  return v14;
}

id sub_100004874(uint64_t a1)
{
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 67) = 0;
  return _objc_msgSend(*(id *)(a1 + 32), "clearHistory");
}

void sub_100004980(uint64_t a1)
{
  size_t Width;
  size_t Height;
  unint64_t v4;
  double v5;
  uint64_t v6;

  Width = CVPixelBufferGetWidth(*(CVPixelBufferRef *)(a1 + 40));
  Height = CVPixelBufferGetHeight(*(CVPixelBufferRef *)(a1 + 40));
  if (Width >= Height)
    v4 = Height;
  else
    v4 = Width;
  v5 = (double)v4;
  v6 = *(_QWORD *)(a1 + 32);
  objc_msgSend(*(id *)(v6 + 48), "setCropRect:", (double)Width * 0.5 - *(double *)(v6 + 72) * v5 * 0.5, (double)Height * 0.5 - *(double *)(v6 + 72) * v5 * 0.5, *(double *)(v6 + 72) * v5, *(double *)(v6 + 72) * v5);
  objc_msgSend(*(id *)(a1 + 32), "processVideoFrame:", *(_QWORD *)(a1 + 40));
  CFRelease(*(CFTypeRef *)(a1 + 40));
}

void sub_100004A54(uint64_t a1)
{
  CVPixelBufferRef pixelBufferOut;

  pixelBufferOut = 0;
  if (!CVPixelBufferCreate(0, 1uLL, 1uLL, 0x42475241u, 0, &pixelBufferOut))
    objc_msgSend(*(id *)(a1 + 32), "processVideoFrame:", pixelBufferOut);
  CVPixelBufferRelease(pixelBufferOut);
}

void sub_100004C70(uint64_t a1)
{
  void (**v1)(void);
  void (**v2)(void);

  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 64) = 0;
  v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
  if (v1)
  {
    v2 = v1;
    v1[2]();
    v1 = v2;
  }

}

uint64_t sub_100004CAC(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(result + 32) + 64) = 0;
  return result;
}

void sub_1000058E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  id *v22;
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100005920(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "_handleAgreeFromObjectModel:", v3);

}

void sub_100005968(uint64_t a1)
{
  _QWORD block[4];
  id v2;

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000059E0;
  block[3] = &unk_1000C15B8;
  objc_copyWeak(&v2, (id *)(a1 + 32));
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(&v2);
}

void sub_1000059E0(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_termsDisagree");

}

void sub_100005A0C(id a1, BOOL a2, NSError *a3)
{
  const __CFString *v3;

  v3 = CFSTR("Fail");
  if (a2)
    v3 = CFSTR("Success");
  NSLog(CFSTR("results = %@, with error = %@"), v3, a3);
}

void sub_100005B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD block[5];

  if (a4)
    NSLog(CFSTR("Failed to mark terms as agreed in iCloud: %@"), a4);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100005BA8;
  block[3] = &unk_1000C1518;
  block[4] = *(_QWORD *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_100005BA8(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "dismissTerms:", 1);
}

uint64_t start(int a1, char **a2)
{
  void *v4;
  objc_class *v5;
  NSString *v6;
  NSString *v7;
  uint64_t v8;

  v4 = objc_autoreleasePoolPush();
  v5 = (objc_class *)objc_opt_class(AppDelegate);
  v6 = NSStringFromClass(v5);
  v7 = (NSString *)objc_claimAutoreleasedReturnValue(v6);
  LogControl("?.*:level=chatty,.*:flags=public");
  v8 = UIApplicationMain(a1, a2, 0, v7);

  objc_autoreleasePoolPop(v4);
  return v8;
}

id sub_100006250(void *a1)
{
  id v1;
  void *v2;
  void *v3;

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "localizedStringForKey:value:table:", v1, &stru_1000C6580, CFSTR("Localizable")));

  return v3;
}

BOOL sub_1000062BC()
{
  return MKBGetDeviceLockState(0) - 1 < 2;
}

void sub_1000062E0(id a1)
{
  char v1;

  if ((MGGetBoolAnswer(CFSTR("green-tea")) & 1) != 0)
    v1 = 1;
  else
    v1 = MGGetBoolAnswer(CFSTR("wapi"));
  byte_1000D85E0 = v1;
}

id sub_10000631C(char a1)
{
  __CFString *v1;

  if ((a1 - 2) > 3u)
    v1 = CFSTR("iPhone");
  else
    v1 = off_1000C1660[(char)(a1 - 2)];
  return sub_100006364(CFSTR("Localizable"), v1);
}

id sub_100006354(void *a1)
{
  return sub_100006364(CFSTR("Localizable"), a1);
}

id sub_100006364(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;

  v3 = a2;
  v4 = a1;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v6 = sub_1000063D4(v5, v4, v3);
  v7 = (void *)objc_claimAutoreleasedReturnValue(v6);

  return v7;
}

id sub_1000063D4(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  if (qword_1000D85E8 != -1)
    dispatch_once(&qword_1000D85E8, &stru_1000C1640);
  if (byte_1000D85E0)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "stringByAppendingString:", CFSTR("_GT")));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "localizedStringForKey:value:table:", v8, CFSTR("_GT"), v6));

    if (!objc_msgSend(v9, "isEqual:", CFSTR("_GT")))
      goto LABEL_7;

  }
  v9 = 0;
LABEL_7:
  if (!objc_msgSend(v9, "length"))
  {
    v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "localizedStringForKey:value:table:", v7, &stru_1000C6580, v6));

    v9 = (void *)v10;
  }
  if (v9)
    v11 = v9;
  else
    v11 = v7;
  v12 = v11;

  return v12;
}

id sub_1000064FC(void *a1, void *a2, uint64_t a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v14;
  void *v15;
  id v16;

  v5 = a1;
  v6 = a2;
  v7 = sub_100006364(CFSTR("Localizable"), v5);
  v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  v16 = 0;
  v9 = objc_msgSend(objc_alloc((Class)NSString), "initWithValidatedFormat:validFormatSpecifiers:arguments:error:", v8, v6, a3, &v16);

  v10 = v16;
  v11 = v9;
  if (!v9)
  {
    v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](NSAssertionHandler, "currentHandler"));
    v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "NSString * _Nonnull SVSLocalizedStringV(NSString * _Nonnull __strong, NSString *__strong _Nonnull, va_list)"));
    objc_msgSend(v14, "handleFailureInFunction:file:lineNumber:description:", v15, CFSTR("Utilities.m"), 109, CFSTR("nil localized string for %@ key - %@"), v5, v10);

    v11 = v5;
  }
  v12 = v11;

  return v12;
}

id sub_100006618()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v0 = CUAddSuffixForCurrentDeviceClass();
  v1 = (void *)objc_claimAutoreleasedReturnValue(v0);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "stringByAppendingString:", CFSTR("_HOMEPOD")));

  return v2;
}

id sub_100006658()
{
  _QWORD v1[2];
  _QWORD v2[2];

  v1[0] = FBSOpenApplicationOptionKeyUnlockDevice;
  v1[1] = FBSOpenApplicationOptionKeyPromptUnlockDevice;
  v2[0] = &__kCFBooleanTrue;
  v2[1] = &__kCFBooleanTrue;
  return (id)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v2, v1, 2));
}

uint64_t sub_1000066E0(void *a1)
{
  size_t v1;
  const char *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  const char *v7;

  v5 = 0;
  v6 = 0;
  v7 = (const char *)objc_msgSend(objc_retainAutorelease(a1), "UTF8String");
  v1 = strlen(v7);
  v2 = &v7[v1];
  v3 = 1;
  while (TextSep(v7, v2, "-, ", &v6, &v5, &v7))
  {
    if (strnicmpx(v6, v5, "Fail"))
    {
      if (strnicmpx(v6, v5, "NoCode"))
      {
        if (strnicmpx(v6, v5, "NoWiFi"))
        {
          if (strnicmpx(v6, v5, "BadWiFi"))
          {
            if (strnicmpx(v6, v5, "NoiCloud"))
            {
              if (strnicmpx(v6, v5, "NoiTunes"))
              {
                if (strnicmpx(v6, v5, "NoHome"))
                {
                  if (strnicmpx(v6, v5, "NoKC"))
                  {
                    if (strnicmpx(v6, v5, "NoHSA2"))
                    {
                      if (strnicmpx(v6, v5, "ShareSplit"))
                      {
                        if (strnicmpx(v6, v5, "AudioPasscode"))
                        {
                          if (strnicmpx(v6, v5, "SiriPasscode"))
                          {
                            if (strnicmpx(v6, v5, "StereoEnable"))
                            {
                              if (strnicmpx(v6, v5, "StereoPicker"))
                              {
                                if (strnicmpx(v6, v5, "NonOwnerHome"))
                                {
                                  if (strnicmpx(v6, v5, "NoHomeApp"))
                                  {
                                    if (strnicmpx(v6, v5, "Personal"))
                                    {
                                      if (strnicmpx(v6, v5, "Terms"))
                                      {
                                        if (strnicmpx(v6, v5, "SiriAskMe"))
                                        {
                                          if (strnicmpx(v6, v5, "SiriWelcome"))
                                          {
                                            if (strnicmpx(v6, v5, "Share"))
                                            {
                                              if (strnicmpx(v6, v5, "NoPreflight"))
                                              {
                                                if (strnicmpx(v6, v5, "NoConfig"))
                                                {
                                                  if (strnicmpx(v6, v5, "RealIO"))
                                                  {
                                                    if (strnicmp_prefix(v6, v5, "WiFiJoin"))
                                                    {
                                                      if (strnicmp_prefix(v6, v5, "WiFiReach"))
                                                      {
                                                        if (strnicmp_prefix(v6, v5, "Location"))
                                                        {
                                                          if (strnicmp_prefix(v6, v5, "SiriEnable"))
                                                          {
                                                            if (strnicmp_prefix(v6, v5, "StereoMultiple"))
                                                            {
                                                              if (strnicmp_prefix(v6, v5, "ResetHome"))
                                                              {
                                                                if (strnicmp_prefix(v6, v5, "BonjourTest"))
                                                                {
                                                                  if (strnicmpx(v6, v5, "NoCard"))
                                                                  {
                                                                    if (strnicmpx(v6, v5, "TVAudio"))
                                                                    {
                                                                      if (strnicmpx(v6, v5, "SWUpdate"))
                                                                      {
                                                                        if (strnicmpx(v6, v5, "LEDPasscode"))
                                                                        {
                                                                          if (strnicmpx(v6, v5, "B520"))
                                                                          {
                                                                            if (!strnicmpx(v6, v5, "B620"))v3 |= 0x10000000000uLL;
                                                                          }
                                                                          else
                                                                          {
                                                                            v3 |= 0x1000000000uLL;
                                                                          }
                                                                        }
                                                                        else
                                                                        {
                                                                          v3 |= 0x800000000uLL;
                                                                        }
                                                                      }
                                                                      else
                                                                      {
                                                                        v3 |= 0x400000000uLL;
                                                                      }
                                                                    }
                                                                    else
                                                                    {
                                                                      v3 |= 0x200000000uLL;
                                                                    }
                                                                  }
                                                                  else
                                                                  {
                                                                    v3 |= (unint64_t)&_mh_execute_header;
                                                                  }
                                                                }
                                                                else
                                                                {
                                                                  v3 |= 0x80000000uLL;
                                                                }
                                                              }
                                                              else
                                                              {
                                                                v3 |= 0x20000000uLL;
                                                              }
                                                            }
                                                            else
                                                            {
                                                              v3 |= 0x10000000uLL;
                                                            }
                                                          }
                                                          else
                                                          {
                                                            v3 |= 0x8000000uLL;
                                                          }
                                                        }
                                                        else
                                                        {
                                                          v3 |= 0x4000000uLL;
                                                        }
                                                      }
                                                      else
                                                      {
                                                        v3 |= 0x40000000uLL;
                                                      }
                                                    }
                                                    else
                                                    {
                                                      v3 |= 0x2000000uLL;
                                                    }
                                                  }
                                                  else
                                                  {
                                                    v3 |= 0x1000000uLL;
                                                  }
                                                }
                                                else
                                                {
                                                  v3 |= 0x800000uLL;
                                                }
                                              }
                                              else
                                              {
                                                v3 |= 0x400000uLL;
                                              }
                                            }
                                            else
                                            {
                                              v3 |= 0x200000uLL;
                                            }
                                          }
                                          else
                                          {
                                            v3 |= 0x100000uLL;
                                          }
                                        }
                                        else
                                        {
                                          v3 |= 0x80000uLL;
                                        }
                                      }
                                      else
                                      {
                                        v3 |= 0x40000uLL;
                                      }
                                    }
                                    else
                                    {
                                      v3 |= 0x20000uLL;
                                    }
                                  }
                                  else
                                  {
                                    v3 |= 0x10000uLL;
                                  }
                                }
                                else
                                {
                                  v3 |= 0x8000uLL;
                                }
                              }
                              else
                              {
                                v3 |= 0x4000uLL;
                              }
                            }
                            else
                            {
                              v3 |= 0x2000uLL;
                            }
                          }
                          else
                          {
                            v3 |= 0x1000uLL;
                          }
                        }
                        else
                        {
                          v3 |= 0x800uLL;
                        }
                      }
                      else
                      {
                        v3 |= 0x400uLL;
                      }
                    }
                    else
                    {
                      v3 |= 0x200uLL;
                    }
                  }
                  else
                  {
                    v3 |= 0x100uLL;
                  }
                }
                else
                {
                  v3 |= 0x80uLL;
                }
              }
              else
              {
                v3 |= 0x40uLL;
              }
            }
            else
            {
              v3 |= 0x20uLL;
            }
          }
          else
          {
            v3 |= 0x10uLL;
          }
        }
        else
        {
          v3 |= 8uLL;
        }
      }
      else
      {
        v3 |= 4uLL;
      }
    }
    else
    {
      v3 |= 2uLL;
    }
  }
  return v3;
}

void sub_100006BB8(uint64_t a1, unsigned int a2, uint64_t a3, id *a4, id *a5, id *a6, id *a7, void **a8, void **a9)
{
  sub_100006BEC(a1, a2, a3, a4, a5, a6, 0, a7, a8, a9, 0);
}

void sub_100006BEC(uint64_t a1, unsigned int a2, uint64_t a3, id *a4, id *a5, id *a6, void **a7, id *a8, void **a9, void **a10, id *a11)
{
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  __CFString *v20;
  __CFString *v21;
  const __CFString *v22;
  const __CFString *v23;
  const __CFString *v24;
  uint64_t v25;
  unsigned __int8 v26;
  void *v27;
  const __CFString *v28;
  id v29;
  void *v30;
  dispatch_semaphore_t v31;
  id v32;
  dispatch_queue_t v33;
  id v34;
  NSObject *v35;
  id v36;
  dispatch_time_t v37;
  intptr_t v38;
  intptr_t v39;
  void *v40;
  __CFString *v41;
  __CFString *v42;
  __CFString *v43;
  __CFString *v44;
  id v45;
  void *v46;
  void *v47;
  const __CFString *v48;
  const __CFString *v49;
  void *v50;
  __CFString *v51;
  __CFString *v52;
  id v53;
  void *v54;
  void *v55;
  void *v56;
  _QWORD v61[4];
  NSObject *v62;
  uint64_t *v63;
  uint64_t v64;
  int v65;
  char v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t (*v70)(uint64_t, uint64_t);
  void (*v71)(uint64_t);
  id v72;

  v67 = 0;
  v68 = &v67;
  v69 = 0x3032000000;
  v70 = sub_1000076A4;
  v71 = sub_1000076B4;
  v72 = 0;
  if ((a3 & 4) == 0)
  {
    v15 = 0;
    if ((a3 & 8) != 0)
      goto LABEL_3;
LABEL_78:
    v45 = sub_100006354(CFSTR("AUDIO_ACCESSORY"));
    v46 = (void *)objc_claimAutoreleasedReturnValue(v45);
    v47 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor grayColor](UIColor, "grayColor"));
    v20 = 0;
    v21 = CFSTR("UnsupportedAccessory.png");
    goto LABEL_111;
  }
  if (dword_1000D5270 <= 30 && (dword_1000D5270 != -1 || _LogCategory_Initialize(&dword_1000D5270, 30)))
    LogPrintF(&dword_1000D5270, "void SVSBluetoothDeviceInfoToUIInfoEx(uint32_t, SFBluetoothColorCode, SVSBluetoothDeviceInfoFlags, NSString * _Nonnull __strong * _Nullable, UIColor * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSBundle * _Nonnull __strong * _Nullable)", 30, "Looking up assets for product ID %u, color code %u, %#{flags}\n", a1, a2, a3, &unk_100098080);
  v25 = mach_absolute_time();
  v26 = a2;
  if ((a3 & 0x1060) == 0x60)
  {
    v26 = (a2 != 2) != ((a3 & 0x800) == 0) ? 2 : 1;
    if (dword_1000D5270 <= 30
      && (dword_1000D5270 != -1 || _LogCategory_Initialize(&dword_1000D5270, 30)))
    {
      LogPrintF(&dword_1000D5270, "void SVSBluetoothDeviceInfoToUIInfoEx(uint32_t, SFBluetoothColorCode, SVSBluetoothDeviceInfoFlags, NSString * _Nonnull __strong * _Nullable, UIColor * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSBundle * _Nonnull __strong * _Nullable)", 30, "SVSBluetoothDeviceInfoToUIInfoEx stereo/mixed color code %u, assetcode %u \n", a2, v26);
    }
  }
  if ((a3 & 8) != 0)
    v29 = objc_msgSend(objc_alloc((Class)SFDeviceAssetQuery), "initWithHomePodColor:version:", v26, a1);
  else
    v29 = objc_msgSend(objc_alloc((Class)SFDeviceAssetQuery), "initWithBluetoothProductIdentifier:color:", a1, v26);
  v30 = v29;
  v31 = dispatch_semaphore_create(0);
  v32 = objc_alloc_init((Class)SFDeviceAssetManager);
  v33 = dispatch_queue_create("MobileAssetLookup", 0);
  objc_msgSend(v32, "setDispatchQueue:", v33);

  objc_msgSend(v32, "activate");
  v34 = objc_alloc((Class)SFDeviceAssetRequestConfiguration);
  v61[0] = _NSConcreteStackBlock;
  v61[1] = 3221225472;
  v61[2] = sub_1000076BC;
  v61[3] = &unk_1000C1688;
  v65 = a1;
  v66 = a2;
  v63 = &v67;
  v64 = v25;
  v35 = v31;
  v62 = v35;
  v36 = objc_msgSend(v34, "initWithQueryResultHandler:", v61);
  objc_msgSend(v36, "setTimeout:", 3.0);
  objc_msgSend(v32, "getAssetBundleForDeviceQuery:withRequestConfiguration:", v30, v36);
  v37 = dispatch_time(0, 5000000000);
  v38 = dispatch_semaphore_wait(v35, v37);
  if (v38)
  {
    if (dword_1000D5270 <= 60)
    {
      v39 = v38;
      if (dword_1000D5270 != -1 || _LogCategory_Initialize(&dword_1000D5270, 60))
        LogPrintF(&dword_1000D5270, "void SVSBluetoothDeviceInfoToUIInfoEx(uint32_t, SFBluetoothColorCode, SVSBluetoothDeviceInfoFlags, NSString * _Nonnull __strong * _Nullable, UIColor * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSBundle * _Nonnull __strong * _Nullable)", 60, "### Get MobileAsset timeout (%ld)\n", v39);
    }
  }
  v15 = 0;
  if ((a3 & 8) != 0)
  {
    v40 = (void *)v68[5];
    if (v40)
    {
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v40, "pathForResource:ofType:", CFSTR("ProxCard_connect-engage.mov"), 0));
      if (!v15)
      {
        if (dword_1000D5270 <= 90
          && (dword_1000D5270 != -1 || _LogCategory_Initialize(&dword_1000D5270, 90)))
        {
          LogPrintF(&dword_1000D5270, "void SVSBluetoothDeviceInfoToUIInfoEx(uint32_t, SFBluetoothColorCode, SVSBluetoothDeviceInfoFlags, NSString * _Nonnull __strong * _Nullable, UIColor * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSBundle * _Nonnull __strong * _Nullable)", 90, "### HomePod intro movie asset missing\n");
        }
        v15 = 0;
      }
    }
  }

  if ((a3 & 8) == 0)
    goto LABEL_78;
LABEL_3:
  v16 = (void *)GestaltCopyAnswer(CFSTR("main-screen-scale"), 0, 0);
  v17 = objc_msgSend(v16, "intValue");
  v19 = v17;
  if ((a3 & 0x10) != 0)
  {
    if (SFDeviceClassCodeGet(v17, v18) != 3)
    {
      if ((_DWORD)v19 == 2)
        v20 = CFSTR("ProxCard_Lockup-iPhone9_1@2x.png");
      else
        v20 = CFSTR("ProxCard_Lockup-iPhone9_2@3x.png");
      v21 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v68[5], "pathForResource:ofType:", v20, 0));
      if (v21)
        goto LABEL_107;
      if (dword_1000D5270 <= 90
        && (dword_1000D5270 != -1 || _LogCategory_Initialize(&dword_1000D5270, 90)))
      {
        LogPrintF(&dword_1000D5270, "void SVSBluetoothDeviceInfoToUIInfoEx(uint32_t, SFBluetoothColorCode, SVSBluetoothDeviceInfoFlags, NSString * _Nonnull __strong * _Nullable, UIColor * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSBundle * _Nonnull __strong * _Nullable)", 90, "### HomePod iPhone lockup asset missing\n");
      }
      goto LABEL_81;
    }
    v21 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v68[5], "pathForResource:ofType:", CFSTR("ProxCard_Lockup-iPad@2x.png"), 0));
    if (!v21)
    {
      if (dword_1000D5270 <= 90
        && (dword_1000D5270 != -1 || _LogCategory_Initialize(&dword_1000D5270, 90)))
      {
        LogPrintF(&dword_1000D5270, "void SVSBluetoothDeviceInfoToUIInfoEx(uint32_t, SFBluetoothColorCode, SVSBluetoothDeviceInfoFlags, NSString * _Nonnull __strong * _Nullable, UIColor * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSBundle * _Nonnull __strong * _Nullable)", 90, "### HomePod iPad lockup asset missing\n");
      }
      v20 = 0;
      goto LABEL_81;
    }
    goto LABEL_74;
  }
  if ((a3 & 0x400) != 0)
  {
    v22 = CFSTR("HomePod");
    if ((_DWORD)a1 == 6)
      v22 = CFSTR("HomePod6");
    if ((a3 & 0x20) != 0)
    {
      if ((a3 & 0x40) != 0)
      {
        if ((a2 != 2) != ((a3 & 0x800) == 0))
          v28 = CFSTR("TVAudio_Stereo%@_LeftWhite_RightBlack");
        else
          v28 = CFSTR("TVAudio_Stereo%@_LeftBlack_RightWhite");
        goto LABEL_73;
      }
      v23 = CFSTR("TVAudio_Stereo%@_BothWhite");
      v24 = CFSTR("TVAudio_Stereo%@_BothBlack");
    }
    else
    {
      v23 = CFSTR("TVAudio_Single%@_White");
      v24 = CFSTR("TVAudio_Single%@_Black");
    }
    if (a2 == 2)
      v28 = v23;
    else
      v28 = v24;
LABEL_73:
    v21 = (__CFString *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", v28, v22));
LABEL_74:
    v20 = 0;
    goto LABEL_107;
  }
  if ((a3 & 0x20) != 0)
  {
    if ((a3 & 0x40) != 0)
    {
      if (a2 == 1)
        v41 = CFSTR("2");
      else
        v41 = CFSTR("1");
      v42 = v41;
      if ((a3 & 0x1000) == 0)
      {
        if ((a2 != 2) != ((a3 & 0x800) == 0))
          v43 = CFSTR("1");
        else
          v43 = CFSTR("2");
        v44 = v43;

        v42 = v44;
      }
      if (dword_1000D5270 <= 30
        && (dword_1000D5270 != -1 || _LogCategory_Initialize(&dword_1000D5270, 30)))
      {
        LogPrintF(&dword_1000D5270, "void SVSBluetoothDeviceInfoToUIInfoEx(uint32_t, SFBluetoothColorCode, SVSBluetoothDeviceInfoFlags, NSString * _Nonnull __strong * _Nullable, UIColor * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSBundle * _Nonnull __strong * _Nullable)", 30, "SVSBluetoothDeviceInfoToUIInfoEx stereo role unknown: '%@'\n", v42);
      }
      if ((a3 & 2) != 0)
        v48 = CFSTR("ProxCard_StereoPair-Mixed-CL_%@-Small@%dx.png");
      else
        v48 = CFSTR("ProxCard_StereoPair-Mixed-CL_%@-Large@%dx.png");
      v20 = (__CFString *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", v48, v42, v19));
      if (dword_1000D5270 <= 30
        && (dword_1000D5270 != -1 || _LogCategory_Initialize(&dword_1000D5270, 30)))
      {
        LogPrintF(&dword_1000D5270, "void SVSBluetoothDeviceInfoToUIInfoEx(uint32_t, SFBluetoothColorCode, SVSBluetoothDeviceInfoFlags, NSString * _Nonnull __strong * _Nullable, UIColor * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSBundle * _Nonnull __strong * _Nullable)", 30, "SVSBluetoothDeviceInfoToUIInfoEx fileName: '%@'\n", v20);
      }
      v21 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v68[5], "pathForResource:ofType:", v20, 0));
      if (v21)
      {

        goto LABEL_107;
      }
      v27 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("ProxCard_StereoPair-Mixed-CL_%@@%dx.png"), v42, v19));

      v21 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v68[5], "pathForResource:ofType:", v27, 0));
      if (dword_1000D5270 <= 90
        && (dword_1000D5270 != -1 || _LogCategory_Initialize(&dword_1000D5270, 90)))
      {
        LogPrintF(&dword_1000D5270, "void SVSBluetoothDeviceInfoToUIInfoEx(uint32_t, SFBluetoothColorCode, SVSBluetoothDeviceInfoFlags, NSString * _Nonnull __strong * _Nullable, UIColor * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSBundle * _Nonnull __strong * _Nullable)", 90, "### HomePod stereo mixed asset missing: '%@'\n", v27);
      }

    }
    else
    {
      v27 = 0;
      v21 = 0;
    }
    if ((a3 & 2) != 0)
      v49 = CFSTR("ProxCard_StereoPair-Small@%dx.png");
    else
      v49 = CFSTR("ProxCard_StereoPair-Large@%dx.png");
    v50 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", v49, v19));

    v51 = (__CFString *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("ProxCard_StereoPair@%dx.png"), v19));
    if (v21
      || (v21 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v68[5], "pathForResource:ofType:", v51, 0))) != 0)
    {
      v20 = v51;
      goto LABEL_107;
    }
    v20 = (__CFString *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("ProxCard_StereoPair-Small@%dx.png"), v19));

    v21 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v68[5], "pathForResource:ofType:", v20, 0));
    if (v21)
      goto LABEL_107;
    if (dword_1000D5270 <= 90
      && (dword_1000D5270 != -1 || _LogCategory_Initialize(&dword_1000D5270, 90)))
    {
      LogPrintF(&dword_1000D5270, "void SVSBluetoothDeviceInfoToUIInfoEx(uint32_t, SFBluetoothColorCode, SVSBluetoothDeviceInfoFlags, NSString * _Nonnull __strong * _Nullable, UIColor * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSBundle * _Nonnull __strong * _Nullable)", 90, "### HomePod stereo asset missing: '%@'\n", v20);
    }
    goto LABEL_81;
  }
  v20 = (__CFString *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("ProxCard_Setup@%dx.png"), v17));
  v21 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v68[5], "pathForResource:ofType:", v20, 0));
  if (!v21)
  {
    if (dword_1000D5270 <= 90
      && (dword_1000D5270 != -1 || _LogCategory_Initialize(&dword_1000D5270, 90)))
    {
      LogPrintF(&dword_1000D5270, "void SVSBluetoothDeviceInfoToUIInfoEx(uint32_t, SFBluetoothColorCode, SVSBluetoothDeviceInfoFlags, NSString * _Nonnull __strong * _Nullable, UIColor * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSBundle * _Nonnull __strong * _Nullable)", 90, "### HomePod setup asset missing\n");
    }
LABEL_81:
    v21 = CFSTR("UnsupportedAccessory.png");
  }
LABEL_107:
  if ((_DWORD)a1 == 5)
    v52 = CFSTR("AS_HOMEPODMINI");
  else
    v52 = CFSTR("HOMEPOD");
  v53 = sub_100006354(v52);
  v46 = (void *)objc_claimAutoreleasedReturnValue(v53);

  v47 = 0;
LABEL_111:
  if (a7)
  {
    v54 = *a7;
    *a7 = 0;

  }
  if (a10)
  {
    v55 = *a10;
    *a10 = 0;

  }
  if (a9)
  {
    v56 = *a9;
    *a9 = 0;

  }
  if (a5)
    objc_storeStrong(a5, v47);
  if (a8)
    objc_storeStrong(a8, v15);
  if (a6)
    objc_storeStrong(a6, v46);
  if (a4)
    objc_storeStrong(a4, v21);
  if (a11)
    objc_storeStrong(a11, (id)v68[5]);
  _Block_object_dispose(&v67, 8);

}

void sub_10000765C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  _Block_object_dispose(&a26, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000076A4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1000076B4(uint64_t a1)
{

}

void sub_1000076BC(uint64_t a1, void *a2, void *a3, int a4, void *a5)
{
  id v9;
  id v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  const char *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;

  v9 = a2;
  v20 = a3;
  v10 = a5;
  v11 = mach_absolute_time();
  v12 = UpTicksToSecondsF(v11 - *(_QWORD *)(a1 + 48)) * 1000.0;
  if (v10)
  {
    if (dword_1000D5270 <= 60
      && (dword_1000D5270 != -1 || _LogCategory_Initialize(&dword_1000D5270, 60)))
    {
      LogPrintF(&dword_1000D5270, "void SVSBluetoothDeviceInfoToUIInfoEx(uint32_t, SFBluetoothColorCode, SVSBluetoothDeviceInfoFlags, NSString * _Nonnull __strong * _Nullable, UIColor * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSBundle * _Nonnull __strong * _Nullable)_block_invoke", 60, "### Look up assets for product ID %u (aka %@), color code %u failed after %f ms: %{error}\n", *(unsigned int *)(a1 + 56), v20, *(unsigned __int8 *)(a1 + 60), *(_QWORD *)&v12, v10);
    }
  }
  else if (dword_1000D5270 <= 30
         && (dword_1000D5270 != -1 || _LogCategory_Initialize(&dword_1000D5270, 30)))
  {
    v13 = *(unsigned __int8 *)(a1 + 60);
    if (a4)
      v14 = "yes";
    else
      v14 = "no";
    v15 = *(unsigned int *)(a1 + 56);
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "bundleIdentifier"));
    LogPrintF(&dword_1000D5270, "void SVSBluetoothDeviceInfoToUIInfoEx(uint32_t, SFBluetoothColorCode, SVSBluetoothDeviceInfoFlags, NSString * _Nonnull __strong * _Nullable, UIColor * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSString * _Nonnull __strong * _Nullable, NSBundle * _Nonnull __strong * _Nullable)_block_invoke", 30, "Found assets for product ID %u (aka %@), color code %u, fallback %s, %f ms, bundle %@\n", v15, v20, v13, v14, *(_QWORD *)&v12, v16);

  }
  v17 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v18 = *(void **)(v17 + 40);
  *(_QWORD *)(v17 + 40) = v9;
  v19 = v9;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100008354(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100008370(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6;
  id WeakRetained;
  _QWORD *v8;
  void *v9;
  uint64_t Int64;
  uint64_t v11;
  id v12;

  v12 = a2;
  v6 = a4;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v8 = WeakRetained;
  if (WeakRetained && objc_msgSend(*((id *)WeakRetained + 3), "isEqual:", *(_QWORD *)(a1 + 32)))
  {
    v9 = (void *)v8[3];
    v8[3] = 0;

  }
  Int64 = CFDictionaryGetInt64(v6, CFSTR("siriVPSuccess"), 0);
  v11 = *(_QWORD *)(a1 + 40);
  if (v11)
    (*(void (**)(uint64_t, BOOL, id))(v11 + 16))(v11, Int64 != 0, v12);

}

void sub_10000852C(void *a1, void *a2)
{
  id v3;
  id v4;

  v4 = a1;
  v3 = a2;
  if (dword_1000D53A0 <= 30 && (dword_1000D53A0 != -1 || _LogCategory_Initialize(&dword_1000D53A0, 30)))
    LogPrintF(&dword_1000D53A0, "void HDSMetricsLog(NSString * _Nonnull __strong, NSDictionary<NSString *,NSObject *> * _Nonnull __strong)", 30, "MetricEvent '%@' : %##@\n", v4, v3);
  off_1000D5410(v4, v3);

}

void sub_1000085D4(void *a1, void *a2)
{
  uint64_t v3;
  id v4;
  id v5;

  v3 = qword_1000D85F0;
  v4 = a2;
  v5 = a1;
  if (v3 != -1)
    dispatch_once(&qword_1000D85F0, &stru_1000C16D0);
  off_1000D5410 = (uint64_t (*)())dlsym((void *)qword_1000D85F8, "AnalyticsSendEvent");
  ((void (*)(id, id))off_1000D5410)(v5, v4);

}

void sub_10000866C(id a1)
{
  qword_1000D85F8 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/CoreAnalytics.framework/CoreAnalytics", 2);
}

void sub_1000088FC(CMTime *a1, uint64_t a2, int a3, uint64_t a4, unsigned int a5, uint64_t a6)
{
  unsigned int v6;
  unint64_t v10;
  unsigned int v11;
  unint64_t v12;
  float Seconds;
  uint64_t v14;
  double v15;
  float v16;
  float v17;
  float v18;
  unsigned int v19;
  CMTime v21;
  CMTime v22;
  CMTime rhs;
  CMTime lhs;
  CMTime time;
  CMTime v26;

  v26 = *a1;
  if (a5)
  {
    v6 = a3 - 1;
    if (a3 != 1)
    {
      v10 = 0;
      v11 = 0;
      v19 = a3 - 2;
      v12 = a5;
      do
      {
        lhs = a1[v11];
        rhs = v26;
        CMTimeSubtract(&time, &lhs, &rhs);
        Seconds = CMTimeGetSeconds(&time);
        v14 = v11 + 1;
        lhs = a1[v14];
        rhs = v26;
        CMTimeSubtract(&v22, &lhs, &rhs);
        v15 = CMTimeGetSeconds(&v22);
        lhs = *(CMTime *)(a4 + 24 * v10);
        rhs = v26;
        CMTimeSubtract(&v21, &lhs, &rhs);
        v16 = CMTimeGetSeconds(&v21);
        if (v16 <= Seconds)
        {
          v18 = *(float *)(a2 + 4 * v11);
        }
        else
        {
          v17 = v15;
          if (v16 <= v17)
          {
            v18 = *(float *)(a2 + 4 * v11)
                + (float)((float)((float)(v16 - Seconds) * (float)(*(float *)(a2 + 4 * v14) - *(float *)(a2 + 4 * v11)))
                        / (float)(v17 - Seconds));
          }
          else
          {
            if (v11 < v19)
            {
              ++v11;
              continue;
            }
            v18 = *(float *)(a2 + 4 * v14);
          }
        }
        *(float *)(a6 + 4 * v10++) = v18;
      }
      while (v10 < v12 && v11 < v6);
    }
  }
}

void sub_100008B6C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v6 = a2;
  v5 = a3;
  if (dword_1000D5418 <= 30 && (dword_1000D5418 != -1 || _LogCategory_Initialize(&dword_1000D5418, 30)))
    LogPrintF(&dword_1000D5418, "-[AppleMusicServiceUtilities serviceEnabled:]_block_invoke", 30, "SubscriptionStatusFetcher: subscriptionStatus=%@, error=%@\n", v6, v5);
  if (v6 && !v5 && objc_msgSend(v6, "statusType") == (id)3)
    objc_msgSend(v6, "isInFreeTrial");
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

void sub_100008F00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100008F2C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void (*v6)(void);
  id WeakRetained;
  id v8;

  v8 = a2;
  v5 = a3;
  if (v5)
  {
    if (dword_1000D5418 <= 90
      && (dword_1000D5418 != -1 || _LogCategory_Initialize(&dword_1000D5418, 90)))
    {
      LogPrintF(&dword_1000D5418, "-[AppleMusicServiceUtilities registerDevice:model:callback:]_block_invoke", 90, "AMSDeviceOfferRegistrationTask: %@ AppleMusic skipping because we were not able to determine subscription state", v5);
    }
LABEL_14:
    v6 = *(void (**)(void))(*(_QWORD *)(a1 + 32) + 16);
    goto LABEL_17;
  }
  if (!objc_msgSend(v8, "count"))
  {
    if (dword_1000D5418 <= 90
      && (dword_1000D5418 != -1 || _LogCategory_Initialize(&dword_1000D5418, 90)))
    {
      LogPrintF(&dword_1000D5418, "-[AppleMusicServiceUtilities registerDevice:model:callback:]_block_invoke", 90, "AMSDeviceOfferRegistrationTask: Successfully registered for device but there are no offers so we are skipping AppleMusic");
    }
    goto LABEL_14;
  }
  if (dword_1000D5418 <= 40 && (dword_1000D5418 != -1 || _LogCategory_Initialize(&dword_1000D5418, 40)))
    LogPrintF(&dword_1000D5418, "-[AppleMusicServiceUtilities registerDevice:model:callback:]_block_invoke", 40, "AMSDeviceOfferRegistrationTask: Successfully registered device (%@)", v8);
  v6 = *(void (**)(void))(*(_QWORD *)(a1 + 32) + 16);
LABEL_17:
  v6();
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "setAmsDeviceRegistrationPromise:", 0);

}

void sub_1000096AC(uint64_t a1, void *a2)
{
  HPdetector_SceneClassifier_B238 *v3;
  id v4;

  v4 = a2;
  if (v4)
  {
    v3 = -[HPdetector_SceneClassifier_B238 initWithMLModel:]([HPdetector_SceneClassifier_B238 alloc], "initWithMLModel:", v4);
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

  }
  else
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  }

}

void sub_100009914(uint64_t a1, void *a2, void *a3)
{
  id v5;
  HPdetector_SceneClassifier_B238Output *v6;
  void *v7;
  void *v8;
  HPdetector_SceneClassifier_B238Output *v9;
  uint64_t v10;
  void (*v11)(uint64_t, _QWORD, HPdetector_SceneClassifier_B238Output *);
  id v12;

  v12 = a2;
  if (v12)
  {
    v5 = a3;
    v6 = [HPdetector_SceneClassifier_B238Output alloc];
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "featureValueForName:", CFSTR("HomePodDetected")));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "multiArrayValue"));
    v9 = -[HPdetector_SceneClassifier_B238Output initWithHomePodDetected:](v6, "initWithHomePodDetected:", v8);

    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  }
  else
  {
    v10 = *(_QWORD *)(a1 + 32);
    v11 = *(void (**)(uint64_t, _QWORD, HPdetector_SceneClassifier_B238Output *))(v10 + 16);
    v9 = a3;
    v11(v10, 0, v9);
  }

}

void sub_100009AB4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  HPdetector_SceneClassifier_B238Output *v6;
  void *v7;
  void *v8;
  HPdetector_SceneClassifier_B238Output *v9;
  uint64_t v10;
  void (*v11)(uint64_t, _QWORD, HPdetector_SceneClassifier_B238Output *);
  id v12;

  v12 = a2;
  if (v12)
  {
    v5 = a3;
    v6 = [HPdetector_SceneClassifier_B238Output alloc];
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "featureValueForName:", CFSTR("HomePodDetected")));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "multiArrayValue"));
    v9 = -[HPdetector_SceneClassifier_B238Output initWithHomePodDetected:](v6, "initWithHomePodDetected:", v8);

    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  }
  else
  {
    v10 = *(_QWORD *)(a1 + 32);
    v11 = *(void (**)(uint64_t, _QWORD, HPdetector_SceneClassifier_B238Output *))(v10 + 16);
    v9 = a3;
    v11(v10, 0, v9);
  }

}

void sub_10000A38C(uint64_t a1, void *a2)
{
  HPdetector_SmartCam_B238 *v3;
  id v4;

  v4 = a2;
  if (v4)
  {
    v3 = -[HPdetector_SmartCam_B238 initWithMLModel:]([HPdetector_SmartCam_B238 alloc], "initWithMLModel:", v4);
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

  }
  else
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  }

}

void sub_10000A5F4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  HPdetector_SmartCam_B238Output *v6;
  void *v7;
  void *v8;
  HPdetector_SmartCam_B238Output *v9;
  uint64_t v10;
  void (*v11)(uint64_t, _QWORD, HPdetector_SmartCam_B238Output *);
  id v12;

  v12 = a2;
  if (v12)
  {
    v5 = a3;
    v6 = [HPdetector_SmartCam_B238Output alloc];
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "featureValueForName:", CFSTR("HomePodDetected")));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "multiArrayValue"));
    v9 = -[HPdetector_SmartCam_B238Output initWithHomePodDetected:](v6, "initWithHomePodDetected:", v8);

    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  }
  else
  {
    v10 = *(_QWORD *)(a1 + 32);
    v11 = *(void (**)(uint64_t, _QWORD, HPdetector_SmartCam_B238Output *))(v10 + 16);
    v9 = a3;
    v11(v10, 0, v9);
  }

}

void sub_10000A794(uint64_t a1, void *a2, void *a3)
{
  id v5;
  HPdetector_SmartCam_B238Output *v6;
  void *v7;
  void *v8;
  HPdetector_SmartCam_B238Output *v9;
  uint64_t v10;
  void (*v11)(uint64_t, _QWORD, HPdetector_SmartCam_B238Output *);
  id v12;

  v12 = a2;
  if (v12)
  {
    v5 = a3;
    v6 = [HPdetector_SmartCam_B238Output alloc];
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "featureValueForName:", CFSTR("HomePodDetected")));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "multiArrayValue"));
    v9 = -[HPdetector_SmartCam_B238Output initWithHomePodDetected:](v6, "initWithHomePodDetected:", v8);

    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  }
  else
  {
    v10 = *(_QWORD *)(a1 + 32);
    v11 = *(void (**)(uint64_t, _QWORD, HPdetector_SmartCam_B238Output *))(v10 + 16);
    v9 = a3;
    v11(v10, 0, v9);
  }

}

void sub_10000B06C(uint64_t a1, void *a2)
{
  HPdetector_SceneClassifier_B520 *v3;
  id v4;

  v4 = a2;
  if (v4)
  {
    v3 = -[HPdetector_SceneClassifier_B520 initWithMLModel:]([HPdetector_SceneClassifier_B520 alloc], "initWithMLModel:", v4);
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

  }
  else
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  }

}

void sub_10000B2D4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  HPdetector_SceneClassifier_B520Output *v6;
  void *v7;
  void *v8;
  HPdetector_SceneClassifier_B520Output *v9;
  uint64_t v10;
  void (*v11)(uint64_t, _QWORD, HPdetector_SceneClassifier_B520Output *);
  id v12;

  v12 = a2;
  if (v12)
  {
    v5 = a3;
    v6 = [HPdetector_SceneClassifier_B520Output alloc];
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "featureValueForName:", CFSTR("HomePodDetected")));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "multiArrayValue"));
    v9 = -[HPdetector_SceneClassifier_B520Output initWithHomePodDetected:](v6, "initWithHomePodDetected:", v8);

    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  }
  else
  {
    v10 = *(_QWORD *)(a1 + 32);
    v11 = *(void (**)(uint64_t, _QWORD, HPdetector_SceneClassifier_B520Output *))(v10 + 16);
    v9 = a3;
    v11(v10, 0, v9);
  }

}

void sub_10000B474(uint64_t a1, void *a2, void *a3)
{
  id v5;
  HPdetector_SceneClassifier_B520Output *v6;
  void *v7;
  void *v8;
  HPdetector_SceneClassifier_B520Output *v9;
  uint64_t v10;
  void (*v11)(uint64_t, _QWORD, HPdetector_SceneClassifier_B520Output *);
  id v12;

  v12 = a2;
  if (v12)
  {
    v5 = a3;
    v6 = [HPdetector_SceneClassifier_B520Output alloc];
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "featureValueForName:", CFSTR("HomePodDetected")));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "multiArrayValue"));
    v9 = -[HPdetector_SceneClassifier_B520Output initWithHomePodDetected:](v6, "initWithHomePodDetected:", v8);

    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  }
  else
  {
    v10 = *(_QWORD *)(a1 + 32);
    v11 = *(void (**)(uint64_t, _QWORD, HPdetector_SceneClassifier_B520Output *))(v10 + 16);
    v9 = a3;
    v11(v10, 0, v9);
  }

}

unint64_t sub_10000B764()
{
  unsigned __int8 *v0;
  Swift::String v1;
  void *object;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  Swift::String v7;
  void *v8;
  Swift::String v9;
  Swift::String v11;
  uint64_t v12;
  _QWORD v13[5];
  unint64_t v14;
  unint64_t v15;

  v14 = 0xD000000000000013;
  v15 = 0x800000010009CFD0;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease(0xE000000000000000);
  v13[0] = 0x64657463656C6573;
  v13[1] = 0xEF3D6E6F69746341;
  v1._countAndFlagsBits = sub_10000E9EC(*v0);
  object = v1._object;
  String.append(_:)(v1);
  swift_bridgeObjectRelease(object);
  v3._countAndFlagsBits = 32;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  v4._countAndFlagsBits = 0x64657463656C6573;
  v4._object = (void *)0xEF3D6E6F69746341;
  String.append(_:)(v4);
  swift_bridgeObjectRelease(0xEF3D6E6F69746341);
  sub_10000E0F0((uint64_t)(v0 + 8), (uint64_t)&v11, &qword_1000D6ED0);
  if (v12)
  {
    sub_10000DC7C((__int128 *)&v11._countAndFlagsBits, (uint64_t)v13);
    v11._countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(18);
    v5._object = (void *)0xEF3D6E6F6974704FLL;
    v5._countAndFlagsBits = 0x64657463656C6573;
    String.append(_:)(v5);
    v6 = sub_10000D604(&qword_1000D5750);
    _print_unlocked<A, B>(_:_:)(v13, &v11, v6, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v7._countAndFlagsBits = 32;
    v7._object = (void *)0xE100000000000000;
    String.append(_:)(v7);
    v8 = v11._object;
    String.append(_:)(v11);
    swift_bridgeObjectRelease(v8);
    sub_10000CDB8(v13);
  }
  else
  {
    sub_10000DC40((uint64_t)&v11, &qword_1000D6ED0);
  }
  v9._countAndFlagsBits = 62;
  v9._object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  return v14;
}

uint64_t sub_10000B918@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  char v6;
  unint64_t v7;
  char v8;
  char v9;
  char v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  __int128 v26;
  _OWORD *v27;
  __int128 *v28;
  uint64_t result;
  char v30;
  _OWORD *v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  _UNKNOWN **v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;

  *(_OWORD *)(a2 + 8) = 0u;
  v4 = a2 + 8;
  *(_QWORD *)(a2 + 40) = 0;
  *(_OWORD *)(a2 + 24) = 0u;
  strcpy((char *)&v47, "selectedAction");
  HIBYTE(v47) = -18;
  AnyHashable.init<A>(_:)(&v52, &v47, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v5 = sub_10004A78C((uint64_t)&v52), (v6 & 1) != 0))
  {
    sub_10000DB98(*(_QWORD *)(a1 + 56) + 32 * v5, (uint64_t)&v50);
  }
  else
  {
    v50 = 0u;
    v51 = 0u;
  }
  sub_10000DAE8((uint64_t)&v52);
  if (!*((_QWORD *)&v51 + 1))
  {
    sub_10000DC40((uint64_t)&v50, &qword_1000D5820);
    goto LABEL_9;
  }
  if ((swift_dynamicCast(&v47, &v50, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {
LABEL_9:
    *(_QWORD *)&v47 = 0x44496E6F74747562;
    *((_QWORD *)&v47 + 1) = 0xE800000000000000;
    AnyHashable.init<A>(_:)(&v52, &v47, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(a1 + 16) && (v7 = sub_10004A78C((uint64_t)&v52), (v8 & 1) != 0))
    {
      sub_10000DB98(*(_QWORD *)(a1 + 56) + 32 * v7, (uint64_t)&v50);
    }
    else
    {
      v50 = 0u;
      v51 = 0u;
    }
    sub_10000DAE8((uint64_t)&v52);
    if (*((_QWORD *)&v51 + 1))
    {
      if ((swift_dynamicCast(&v47, &v50, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      sub_10000DC40((uint64_t)&v50, &qword_1000D5820);
    }
    v10 = 0;
    goto LABEL_20;
  }
LABEL_15:
  v9 = sub_10000EF74(v47, *((uint64_t *)&v47 + 1));
  if (v9 == 32)
    v10 = 0;
  else
    v10 = v9;
LABEL_20:
  *(_BYTE *)a2 = v10;
  strcpy((char *)&v47, "selectedOption");
  HIBYTE(v47) = -18;
  AnyHashable.init<A>(_:)(&v52, &v47, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v11 = sub_10004A78C((uint64_t)&v52), (v12 & 1) != 0))
  {
    sub_10000DB98(*(_QWORD *)(a1 + 56) + 32 * v11, (uint64_t)&v50);
  }
  else
  {
    v50 = 0u;
    v51 = 0u;
  }
  sub_10000DAE8((uint64_t)&v52);
  if (!*((_QWORD *)&v51 + 1))
  {
    sub_10000DC40((uint64_t)&v50, &qword_1000D5820);
    goto LABEL_33;
  }
  v13 = sub_10000D604(&qword_1000D5828);
  if ((swift_dynamicCast(&v47, &v50, (char *)&type metadata for Any + 8, v13, 6) & 1) == 0)
    goto LABEL_33;
  v14 = v47;
  *(_QWORD *)&v50 = 1701869940;
  *((_QWORD *)&v50 + 1) = 0xE400000000000000;
  AnyHashable.init<A>(_:)(&v52, &v50, &type metadata for String, &protocol witness table for String);
  if (!*(_QWORD *)(v14 + 16) || (v15 = sub_10004A78C((uint64_t)&v52), (v16 & 1) == 0))
  {
    sub_10000DAE8((uint64_t)&v52);
    swift_bridgeObjectRelease(v14);
LABEL_33:
    *(_QWORD *)&v47 = 0x44496E6F6974706FLL;
    *((_QWORD *)&v47 + 1) = 0xE800000000000000;
    AnyHashable.init<A>(_:)(&v52, &v47, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(a1 + 16) && (v24 = sub_10004A78C((uint64_t)&v52), (v25 & 1) != 0))
    {
      sub_10000DB98(*(_QWORD *)(a1 + 56) + 32 * v24, (uint64_t)&v50);
    }
    else
    {
      v50 = 0u;
      v51 = 0u;
    }
    swift_bridgeObjectRelease(a1);
    sub_10000DAE8((uint64_t)&v52);
    if (*((_QWORD *)&v51 + 1))
    {
      if ((swift_dynamicCast(&v47, &v50, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      {
        v26 = v47;
        *((_QWORD *)&v53 + 1) = &type metadata for SimpleOption;
        *(_QWORD *)&v54 = &off_1000C2A58;
        v27 = (_OWORD *)swift_allocObject(&unk_1000C2628, 64, 7);
        *(_QWORD *)&v52 = v27;
        v27[1] = v26;
        v27[2] = v26;
        v27[3] = v26;
        swift_bridgeObjectRetain_n(*((_QWORD *)&v26 + 1), 2);
LABEL_40:
        v28 = &v52;
        return sub_10000DB50((uint64_t)v28, v4);
      }
    }
    else
    {
      sub_10000DC40((uint64_t)&v50, &qword_1000D5820);
    }
    result = sub_10000DC40(v4, &qword_1000D6ED0);
    *(_OWORD *)v4 = 0u;
    *(_OWORD *)(v4 + 16) = 0u;
    *(_QWORD *)(v4 + 32) = 0;
    return result;
  }
  v17 = (uint64_t *)(*(_QWORD *)(v14 + 56) + 16 * v15);
  v19 = *v17;
  v18 = v17[1];
  swift_bridgeObjectRetain(v18);
  sub_10000DAE8((uint64_t)&v52);
  swift_bridgeObjectRelease(a1);
  *(_QWORD *)&v52 = &type metadata for SimpleOption;
  v20 = sub_10000D604(&qword_1000D5830);
  v22 = String.init<A>(describing:)(&v52, v20);
  v23 = v21;
  if (v19 == v22 && v18 == v21)
  {
    swift_bridgeObjectRelease(v18);
LABEL_45:
    swift_bridgeObjectRelease(v18);
    sub_10000E650(v14, (uint64_t *)&v50);
    swift_bridgeObjectRelease(v14);
    sub_10000DBF8((uint64_t)&v50, (uint64_t)&v52);
    if (*((_QWORD *)&v52 + 1))
    {
      *((_QWORD *)&v48 + 1) = &type metadata for SimpleOption;
      v49 = &off_1000C2A58;
      v31 = (_OWORD *)swift_allocObject(&unk_1000C2628, 64, 7);
      *(_QWORD *)&v47 = v31;
      v32 = v53;
      v31[1] = v52;
      v31[2] = v32;
      v31[3] = v54;
    }
    else
    {
      v49 = 0;
      v47 = 0u;
      v48 = 0u;
    }
    v28 = &v47;
    return sub_10000DB50((uint64_t)v28, v4);
  }
  v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v18, v22, v21, 0);
  swift_bridgeObjectRelease(v23);
  if ((v30 & 1) != 0)
    goto LABEL_45;
  *(_QWORD *)&v52 = &type metadata for RoomOption;
  v33 = sub_10000D604(&qword_1000D5838);
  v35 = String.init<A>(describing:)(&v52, v33);
  v36 = v34;
  if (v19 == v35 && v18 == v34)
  {
    swift_bridgeObjectRelease_n(v18, 2);
    goto LABEL_53;
  }
  v37 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v18, v35, v34, 0);
  swift_bridgeObjectRelease(v36);
  swift_bridgeObjectRelease(v18);
  if ((v37 & 1) != 0)
  {
LABEL_53:
    v38 = sub_100081C70(v14);
    if (v40)
    {
      v42 = v38;
      v43 = v39;
      v44 = v40;
      v45 = v41 & 1;
      *((_QWORD *)&v53 + 1) = &type metadata for RoomOption;
      *(_QWORD *)&v54 = &off_1000C56F8;
      v46 = swift_allocObject(&unk_1000C2650, 41, 7);
      *(_QWORD *)&v52 = v46;
      *(_BYTE *)(v46 + 16) = v42 & 1;
      *(_QWORD *)(v46 + 24) = v43;
      *(_QWORD *)(v46 + 32) = v44;
      *(_BYTE *)(v46 + 40) = v45;
    }
    else
    {
      *(_QWORD *)&v54 = 0;
      v52 = 0u;
      v53 = 0u;
    }
    goto LABEL_40;
  }
  return swift_bridgeObjectRelease(v14);
}

unint64_t sub_10000BF08()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[176];
  _BYTE v22[176];
  _BYTE v23[176];
  _BYTE v24[24];
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  char v29[24];
  uint64_t v30;
  uint64_t v31;

  sub_10000E0F0((uint64_t)(v0 + 8), (uint64_t)v24, &qword_1000D6ED0);
  if (v25)
  {
    v1 = sub_10000D604(&qword_1000D5750);
    v2 = sub_10000D604(&qword_1000D5858);
    if ((swift_dynamicCast(&v26, v24, v1, v2, 6) & 1) != 0)
    {
      if (*((_QWORD *)&v27 + 1))
      {
        sub_10000DC7C(&v26, (uint64_t)v29);
        v3 = sub_10000D604(&qword_1000D5850);
        inited = swift_initStackObject(v3, v21);
        *(_OWORD *)(inited + 16) = xmmword_100098100;
        strcpy((char *)&v26, "selectedAction");
        HIBYTE(v26) = -18;
        AnyHashable.init<A>(_:)((_QWORD *)(inited + 32), &v26, &type metadata for String, &protocol witness table for String);
        v5 = sub_10000E9EC(*v0);
        *(_QWORD *)(inited + 96) = &type metadata for String;
        *(_QWORD *)(inited + 72) = v5;
        *(_QWORD *)(inited + 80) = v6;
        strcpy((char *)&v26, "selectedOption");
        HIBYTE(v26) = -18;
        AnyHashable.init<A>(_:)((_QWORD *)(inited + 104), &v26, &type metadata for String, &protocol witness table for String);
        v7 = v30;
        v8 = v31;
        sub_10000DC94(v29, v30);
        v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
        *(_QWORD *)(inited + 168) = sub_10000D604(&qword_1000D5828);
        *(_QWORD *)(inited + 144) = v9;
        v10 = sub_10000C35C(inited);
        sub_10000CDB8(v29);
        return v10;
      }
    }
    else
    {
      v28 = 0;
      v26 = 0u;
      v27 = 0u;
    }
  }
  else
  {
    sub_10000DC40((uint64_t)v24, &qword_1000D6ED0);
    v26 = 0u;
    v27 = 0u;
    v28 = 0;
  }
  sub_10000DC40((uint64_t)&v26, &qword_1000D5848);
  sub_10000E0F0((uint64_t)(v0 + 8), (uint64_t)v29, &qword_1000D6ED0);
  v11 = v30;
  sub_10000DC40((uint64_t)v29, &qword_1000D6ED0);
  v12 = sub_10000D604(&qword_1000D5850);
  if (v11)
  {
    v13 = swift_initStackObject(v12, v22);
    *(_OWORD *)(v13 + 16) = xmmword_100098100;
    strcpy(v29, "selectedAction");
    v29[15] = -18;
    AnyHashable.init<A>(_:)((_QWORD *)(v13 + 32), v29, &type metadata for String, &protocol witness table for String);
    v14 = sub_10000E9EC(*v0);
    *(_QWORD *)(v13 + 96) = &type metadata for String;
    *(_QWORD *)(v13 + 72) = v14;
    *(_QWORD *)(v13 + 80) = v15;
    strcpy(v29, "selectedOption");
    v29[15] = -18;
    AnyHashable.init<A>(_:)((_QWORD *)(v13 + 104), v29, &type metadata for String, &protocol witness table for String);
    *(_QWORD *)(v13 + 168) = &type metadata for String;
    v16 = 0xD000000000000024;
    v17 = 0x800000010009CFF0;
  }
  else
  {
    v13 = swift_initStackObject(v12, v23);
    *(_OWORD *)(v13 + 16) = xmmword_100098100;
    strcpy(v29, "selectedAction");
    v29[15] = -18;
    AnyHashable.init<A>(_:)((_QWORD *)(v13 + 32), v29, &type metadata for String, &protocol witness table for String);
    v18 = sub_10000E9EC(*v0);
    *(_QWORD *)(v13 + 96) = &type metadata for String;
    *(_QWORD *)(v13 + 72) = v18;
    *(_QWORD *)(v13 + 80) = v19;
    strcpy(v29, "selectedOption");
    v29[15] = -18;
    AnyHashable.init<A>(_:)((_QWORD *)(v13 + 104), v29, &type metadata for String, &protocol witness table for String);
    *(_QWORD *)(v13 + 168) = &type metadata for String;
    v16 = 7104878;
    v17 = 0xE300000000000000;
  }
  *(_QWORD *)(v13 + 144) = v16;
  *(_QWORD *)(v13 + 152) = v17;
  return sub_10000C35C(v13);
}

unint64_t sub_10000C22C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  _OWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000D604(&qword_1000D59A0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_10000E0F0(v6, (uint64_t)v17, &qword_1000D59A8);
    result = sub_10004A78C((uint64_t)v17);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = v4[6] + 40 * result;
    v10 = v17[0];
    v11 = v17[1];
    *(_QWORD *)(v9 + 32) = v18;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    v12 = (_QWORD *)(v4[7] + 16 * result);
    v13 = v20;
    *v12 = v19;
    v12[1] = v13;
    v14 = v4[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v4[2] = v16;
    v6 += 56;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10000C35C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000D604(&qword_1000D57E0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_10000E0F0(v7, (uint64_t)v16, &qword_1000D57E8);
    result = sub_10004A78C((uint64_t)v16);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v10 = v4[6] + 40 * result;
    v11 = v16[0];
    v12 = v16[1];
    *(_QWORD *)(v10 + 32) = v17;
    *(_OWORD *)v10 = v11;
    *(_OWORD *)(v10 + 16) = v12;
    result = (unint64_t)sub_10000DAD8(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 72;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10000C49C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000D604(&qword_1000D5768);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v7 = *(v6 - 3);
    v8 = *(v6 - 2);
    v10 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    result = sub_10004A7C0(v7, v8);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v4[6] + 16 * result);
    *v13 = v7;
    v13[1] = v8;
    v14 = (_QWORD *)(v4[7] + 16 * result);
    *v14 = v10;
    v14[1] = v9;
    v15 = v4[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v6 += 4;
    v4[2] = v17;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10000C5BC(uint64_t a1)
{
  return sub_10000C838(a1, &qword_1000D5758, &qword_1000D5760, (uint64_t (*)(uint64_t))sub_10004A7BC);
}

unint64_t sub_10000C5D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000D604(&qword_1000D57F0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_10000E0F0(v7, (uint64_t)&v16, &qword_1000D57F8);
    v8 = v16;
    v9 = v17;
    result = sub_10004A7C0(v16, v17);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v8;
    v12[1] = v9;
    result = (unint64_t)sub_10000DAD8(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 48;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10000C70C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000D604(&qword_1000D5800);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v7 = *(v6 - 2);
    v8 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    result = sub_10004A7C0(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v6 += 3;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10000C81C(uint64_t a1)
{
  return sub_10000C838(a1, &qword_1000D57D0, &qword_1000D57D8, (uint64_t (*)(uint64_t))sub_10004A824);
}

unint64_t sub_10000C838(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
    v9 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000D604(a2);
  v8 = static _DictionaryStorage.allocate(capacity:)(v5);
  v9 = (_QWORD *)v8;
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v9;
  }
  v11 = v8 + 64;
  v12 = a1 + 32;
  swift_retain(v8);
  while (1)
  {
    sub_10000E0F0(v12, (uint64_t)&v19, a3);
    v13 = v19;
    result = a4(v19);
    if ((v15 & 1) != 0)
      break;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v9[6] + 8 * result) = v13;
    result = (unint64_t)sub_10000DAD8(&v20, (_OWORD *)(v9[7] + 32 * result));
    v16 = v9[2];
    v17 = __OFADD__(v16, 1);
    v18 = v16 + 1;
    if (v17)
      goto LABEL_11;
    v9[2] = v18;
    v12 += 40;
    if (!--v10)
    {
      swift_release(v9);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10000C960(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v18 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v18);
    return (unint64_t)v4;
  }
  sub_10000D604(&qword_1000D5860);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
    goto LABEL_9;
  v6 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_10000E0F0(v6, (uint64_t)&v19, &qword_1000D5868);
    v7 = v19;
    v8 = v20;
    result = sub_10004A7C0(v19, v20);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v4[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    v12 = (_OWORD *)(v4[7] + 48 * result);
    v13 = v21;
    v14 = v23;
    v12[1] = v22;
    v12[2] = v14;
    *v12 = v13;
    v15 = v4[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_12;
    v4[2] = v17;
    v6 += 64;
    if (!--v5)
    {
      swift_release(v4);
      v18 = a1;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_10000CAA8(uint64_t a1)
{
  return sub_10000C838(a1, &qword_1000D5810, &qword_1000D5818, (uint64_t (*)(uint64_t))sub_10004A7BC);
}

unint64_t sub_10000CAC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void **v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000D604(&qword_1000D5808);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (void **)(a1 + 48);
  while (1)
  {
    v7 = (uint64_t)*(v6 - 2);
    v8 = (uint64_t)*(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    v10 = v9;
    result = sub_10004A7C0(v7, v8);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v4[6] + 16 * result);
    *v13 = v7;
    v13[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v10;
    v14 = v4[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v4[2] = v16;
    v6 += 3;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t variable initialization expression of HomePodSetupAutomation.automationStepResults()
{
  return sub_10000C960((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t variable initialization expression of SVSHomePodIDViewController.startIngesting()
{
  return 0;
}

uint64_t variable initialization expression of SVSHomePodIDViewController.engine()
{
  return 0;
}

void *variable initialization expression of HomePodSetupAutomation.forcedStateSequence()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t variable initialization expression of HomePodSetupAutomation.forcedPasscode()
{
  return 0;
}

id variable initialization expression of SVSLPCActivityIndicatorViewController.v()
{
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SVSLEDPasscodeActivityIndicatorView()), "init");
}

id variable initialization expression of SVSHomePodIDViewController.preView()
{
  uint64_t v0;

  v0 = type metadata accessor for PreviewView();
  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v0)), "init");
}

id variable initialization expression of SVSHomePodIDViewController.session()
{
  return objc_msgSend(objc_allocWithZone((Class)AVCaptureSession), "init");
}

id variable initialization expression of SVSHomePodIDViewController.feedbackGenerator()
{
  return objc_msgSend(objc_allocWithZone((Class)UINotificationFeedbackGenerator), "init");
}

id variable initialization expression of SVSHomePodIDViewController.output()
{
  return objc_msgSend(objc_allocWithZone((Class)AVCaptureVideoDataOutput), "init");
}

uint64_t variable initialization expression of SVSHomePodIDViewController.handler()
{
  return 0;
}

void type metadata accessor for SDAirDropStatus(uint64_t a1)
{
  sub_10000E148(a1, &qword_1000D56F8, (uint64_t)&unk_1000C2488);
}

void type metadata accessor for HPProductVersion(uint64_t a1)
{
  sub_10000E148(a1, &qword_1000D5700, (uint64_t)&unk_1000C24A8);
}

void type metadata accessor for SFDeviceActionType(uint64_t a1)
{
  sub_10000E148(a1, &qword_1000D5708, (uint64_t)&unk_1000C24C8);
}

void type metadata accessor for SFStereoRole(uint64_t a1)
{
  sub_10000E148(a1, &qword_1000D5710, (uint64_t)&unk_1000C24E8);
}

void type metadata accessor for SFDeviceSetupProgressEvent(uint64_t a1)
{
  sub_10000E148(a1, &qword_1000D5718, (uint64_t)&unk_1000C2508);
}

void type metadata accessor for SFDeviceModelCode(uint64_t a1)
{
  sub_10000E148(a1, &qword_1000D5720, (uint64_t)&unk_1000C2528);
}

void type metadata accessor for SFOSVersion(uint64_t a1)
{
  sub_10000E148(a1, &qword_1000D5728, (uint64_t)&unk_1000C2548);
}

void type metadata accessor for UserActionType(uint64_t a1)
{
  sub_10000E148(a1, &qword_1000D5730, (uint64_t)&unk_1000C2568);
}

uint64_t initializeBufferWithCopyOfBuffer for HomePodSetupStepResult(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

uint64_t destroy for HomePodSetupStepResult(uint64_t result)
{
  if (*(_QWORD *)(result + 32))
    return sub_10000CDB8((_QWORD *)(result + 8));
  return result;
}

uint64_t sub_10000CDB8(_QWORD *a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1[3] - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release(*a1);
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t initializeWithCopy for HomePodSetupStepResult(uint64_t a1, char *a2)
{
  char *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v5 = *a2;
  v4 = a2 + 8;
  *(_BYTE *)a1 = v5;
  v6 = a1 + 8;
  v7 = *((_QWORD *)a2 + 4);
  if (v7)
  {
    v8 = *((_QWORD *)a2 + 5);
    *(_QWORD *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 40) = v8;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(v6, (uint64_t)v4);
  }
  else
  {
    v9 = *((_OWORD *)v4 + 1);
    *(_OWORD *)v6 = *(_OWORD *)v4;
    *(_OWORD *)(v6 + 16) = v9;
    *(_QWORD *)(v6 + 32) = *((_QWORD *)v4 + 4);
  }
  return a1;
}

uint64_t assignWithCopy for HomePodSetupStepResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 *v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = a1 + 8;
  v4 = (__int128 *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 32);
  if (!*(_QWORD *)(a1 + 32))
  {
    if (v5)
    {
      *(_QWORD *)(a1 + 32) = v5;
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 8, a2 + 8);
      return a1;
    }
LABEL_7:
    v6 = *v4;
    v7 = v4[1];
    *(_QWORD *)(v3 + 32) = *((_QWORD *)v4 + 4);
    *(_OWORD *)v3 = v6;
    *(_OWORD *)(v3 + 16) = v7;
    return a1;
  }
  if (!v5)
  {
    sub_10000CDB8((_QWORD *)(a1 + 8));
    goto LABEL_7;
  }
  sub_10000CECC((_QWORD *)(a1 + 8), (_QWORD *)(a2 + 8));
  return a1;
}

_QWORD *sub_10000CECC(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v11 = *result;
        v12 = *a2;
        swift_retain(*a2);
        result = (_QWORD *)swift_release(v11);
        *v3 = v12;
      }
      else
      {
        return (_QWORD *)(*(uint64_t (**)(_QWORD *, _QWORD *, _QWORD))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        v10 = *result;
        if ((v8 & 0x20000) != 0)
        {
          v14 = *a2;
          *v3 = *a2;
          swift_retain(v14);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (_QWORD *)swift_release(v10);
      }
      else
      {
        (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v6 + 32))(v15, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          v13 = *a2;
          *v3 = *a2;
          swift_retain(v13);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (_QWORD *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
      }
    }
  }
  return result;
}

__n128 initializeWithTake for HomePodSetupStepResult(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for HomePodSetupStepResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = a1 + 8;
  if (*(_QWORD *)(a1 + 32))
    sub_10000CDB8((_QWORD *)(a1 + 8));
  v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)v4 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(v4 + 16) = v5;
  *(_QWORD *)(v4 + 32) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for HomePodSetupStepResult(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for HomePodSetupStepResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 32) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for HomePodSetupStepResult()
{
  return &type metadata for HomePodSetupStepResult;
}

void type metadata accessor for PRXImageStyle(uint64_t a1)
{
  sub_10000E148(a1, &qword_1000D5738, (uint64_t)&unk_1000C2608);
}

void sub_10000D184(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_10000D18C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_10000D1A0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_10000D1B4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_10000D1C8(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_10000D1F8@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_10000D224@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_10000D248(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_10000D25C(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_10000D270(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_10000D284@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_10000D298(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_10000D2AC(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_10000D2C0(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_10000D2D4()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_10000D2E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

_QWORD *sub_10000D2FC(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

void sub_10000D310(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_DWORD *sub_10000D31C@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

void sub_10000D32C(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

unsigned __int8 *sub_10000D338@<X0>(unsigned __int8 *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10000D348(uint64_t a1, uint64_t a2)
{
  return sub_10000D964(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_10000D360(uint64_t a1, uint64_t a2)
{
  return sub_10000D964(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

BOOL sub_10000D374(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_10000D388()
{
  Swift::UInt32 *v0;
  Swift::UInt32 v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_10000D3CC()
{
  Swift::UInt32 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_10000D3F4(uint64_t a1)
{
  Swift::UInt32 *v1;
  Swift::UInt32 v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

uint64_t sub_10000D434(uint64_t a1, id *a2)
{
  uint64_t result;
  uint64_t v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = 0;
  result = static String._forceBridgeFromObjectiveC(_:result:)(a1, &v7);
  v5 = v8;
  if (v8)
  {
    v6 = String._bridgeToObjectiveC()();
    result = swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_10000D4A8(uint64_t a1, id *a2)
{
  char v4;
  uint64_t v5;
  NSString v6;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  v4 = static String._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v8);
  v5 = v9;
  if (v9)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return v4 & 1;
}

uint64_t sub_10000D524@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  NSString v4;
  uint64_t result;

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  v3 = v2;
  v4 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v3);
  *a1 = v4;
  return result;
}

BOOL sub_10000D564(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

_QWORD *sub_10000D578@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

BOOL sub_10000D584(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_10000D598@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_10004CE64(a1);
  result = swift_bridgeObjectRelease(a1);
  *a2 = v4;
  return result;
}

uint64_t sub_10000D5D8()
{
  return sub_10000DD98((unint64_t *)&unk_1000D5740, (uint64_t (*)(uint64_t))type metadata accessor for SFDeviceSetupProgressEvent, (uint64_t)&unk_10009830C);
}

uint64_t sub_10000D604(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

_QWORD *sub_10000D644@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_10000D654(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_10000D664@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;
  uint64_t v4;

  result = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10000D68C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10000DD98((unint64_t *)&qword_1000D5980, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100098E28);
  v3 = sub_10000DD98(&qword_1000D5988, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100098968);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000D710(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10000DD98((unint64_t *)&qword_1000D5970, (uint64_t (*)(uint64_t))type metadata accessor for SKCloudServiceSetupOptionsKey, (uint64_t)&unk_100098DE4);
  v3 = sub_10000DD98(&qword_1000D5978, (uint64_t (*)(uint64_t))type metadata accessor for SKCloudServiceSetupOptionsKey, (uint64_t)&unk_100098A88);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000D794(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10000DD98(&qword_1000D5960, (uint64_t (*)(uint64_t))type metadata accessor for SKCloudServiceSetupAction, (uint64_t)&unk_100098BFC);
  v3 = sub_10000DD98(&qword_1000D5968, (uint64_t (*)(uint64_t))type metadata accessor for SKCloudServiceSetupAction, (uint64_t)&unk_100098B9C);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000D818(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10000DD98(&qword_1000D5950, (uint64_t (*)(uint64_t))type metadata accessor for SKCloudServiceSetupMessageIdentifier, (uint64_t)&unk_100098D54);
  v3 = sub_10000DD98(&qword_1000D5958, (uint64_t (*)(uint64_t))type metadata accessor for SKCloudServiceSetupMessageIdentifier, (uint64_t)&unk_100098CF4);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000D89C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  NSString v4;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v3);
  *a2 = v4;
  return result;
}

uint64_t sub_10000D8E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10000DD98(&qword_1000D5990, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100098E6C);
  v3 = sub_10000DD98(&qword_1000D5998, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100098848);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000D964(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v3);
  v7 = v6;
  v8 = a3(v5);
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_10000D9A0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_10000D9E0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  _QWORD v8[9];

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  Hasher.init(_seed:)(v8, a1);
  String.hash(into:)(v8, v3, v5);
  v6 = Hasher._finalize()();
  swift_bridgeObjectRelease(v5);
  return v6;
}

uint64_t sub_10000DA50(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*a1);
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

_OWORD *sub_10000DAD8(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_10000DAE8(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for AnyHashable - 1) + 8))();
  return a1;
}

uint64_t sub_10000DB1C()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10000DB50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000D604(&qword_1000D6ED0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000DB98(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_10000DBD4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 41, 7);
}

uint64_t sub_10000DBF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000D604(&qword_1000D5840);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000DC40(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_10000D604(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10000DC7C(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

_QWORD *sub_10000DC94(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

void type metadata accessor for SKCloudServiceSetupMessageIdentifier(uint64_t a1)
{
  sub_10000E148(a1, &qword_1000D5870, (uint64_t)&unk_1000C2678);
}

void type metadata accessor for SKCloudServiceSetupAction(uint64_t a1)
{
  sub_10000E148(a1, &qword_1000D5878, (uint64_t)&unk_1000C26A0);
}

void type metadata accessor for SKCloudServiceSetupOptionsKey(uint64_t a1)
{
  sub_10000E148(a1, &qword_1000D5880, (uint64_t)&unk_1000C26C8);
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_10000E148(a1, &qword_1000D5888, (uint64_t)&unk_1000C26F0);
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
  sub_10000E148(a1, &qword_1000D5890, (uint64_t)&unk_1000C2718);
}

void type metadata accessor for CGColor(uint64_t a1)
{
  sub_10000E148(a1, &qword_1000D5898, (uint64_t)&unk_1000C2740);
}

void type metadata accessor for CGPath(uint64_t a1)
{
  sub_10000E148(a1, &qword_1000D58A0, (uint64_t)&unk_1000C2770);
}

void type metadata accessor for ContentMode(uint64_t a1)
{
  sub_10000E148(a1, &qword_1000D58A8, (uint64_t)&unk_1000C27A0);
}

void type metadata accessor for PRXDismissalType(uint64_t a1)
{
  sub_10000E148(a1, &qword_1000D58B0, (uint64_t)&unk_1000C27C0);
}

uint64_t sub_10000DD6C()
{
  return sub_10000DD98(&qword_1000D58B8, (uint64_t (*)(uint64_t))type metadata accessor for PRXDismissalType, (uint64_t)&unk_100098674);
}

uint64_t sub_10000DD98(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10000DDD8()
{
  return sub_10000DD98(&qword_1000D58C0, (uint64_t (*)(uint64_t))type metadata accessor for PRXDismissalType, (uint64_t)&unk_100098644);
}

uint64_t sub_10000DE04()
{
  return sub_10000DD98(&qword_1000D58C8, (uint64_t (*)(uint64_t))type metadata accessor for PRXDismissalType, (uint64_t)&unk_10009869C);
}

uint64_t sub_10000DE30()
{
  return sub_10000DD98(&qword_1000D58D0, (uint64_t (*)(uint64_t))type metadata accessor for PRXDismissalType, (uint64_t)&unk_1000986D4);
}

uint64_t sub_10000DE5C()
{
  return sub_10000DD98(&qword_1000D58D8, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_10009880C);
}

uint64_t sub_10000DE88()
{
  return sub_10000DD98(&qword_1000D58E0, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_1000987E0);
}

uint64_t sub_10000DEB4()
{
  return sub_10000DD98(&qword_1000D58E8, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10009892C);
}

uint64_t sub_10000DEE0()
{
  return sub_10000DD98(&qword_1000D58F0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100098900);
}

uint64_t sub_10000DF0C()
{
  return sub_10000DD98(&qword_1000D58F8, (uint64_t (*)(uint64_t))type metadata accessor for SKCloudServiceSetupOptionsKey, (uint64_t)&unk_100098A4C);
}

uint64_t sub_10000DF38()
{
  return sub_10000DD98(&qword_1000D5900, (uint64_t (*)(uint64_t))type metadata accessor for SKCloudServiceSetupOptionsKey, (uint64_t)&unk_100098A20);
}

uint64_t sub_10000DF64()
{
  return sub_10000DD98(&qword_1000D5908, (uint64_t (*)(uint64_t))type metadata accessor for SKCloudServiceSetupAction, (uint64_t)&unk_100098B60);
}

uint64_t sub_10000DF90()
{
  return sub_10000DD98(&qword_1000D5910, (uint64_t (*)(uint64_t))type metadata accessor for SKCloudServiceSetupAction, (uint64_t)&unk_100098B34);
}

uint64_t sub_10000DFBC()
{
  return sub_10000DD98(&qword_1000D5918, (uint64_t (*)(uint64_t))type metadata accessor for SKCloudServiceSetupAction, (uint64_t)&unk_100098BD0);
}

uint64_t sub_10000DFE8()
{
  return sub_10000DD98(&qword_1000D5920, (uint64_t (*)(uint64_t))type metadata accessor for SKCloudServiceSetupMessageIdentifier, (uint64_t)&unk_100098CB8);
}

uint64_t sub_10000E014()
{
  return sub_10000DD98(&qword_1000D5928, (uint64_t (*)(uint64_t))type metadata accessor for SKCloudServiceSetupMessageIdentifier, (uint64_t)&unk_100098C8C);
}

uint64_t sub_10000E040()
{
  return sub_10000DD98(&qword_1000D5930, (uint64_t (*)(uint64_t))type metadata accessor for SKCloudServiceSetupMessageIdentifier, (uint64_t)&unk_100098D28);
}

uint64_t sub_10000E06C()
{
  return sub_10000DD98(&qword_1000D5938, (uint64_t (*)(uint64_t))type metadata accessor for SKCloudServiceSetupOptionsKey, (uint64_t)&unk_100098ABC);
}

uint64_t sub_10000E098()
{
  return sub_10000DD98(&qword_1000D5940, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10009899C);
}

uint64_t sub_10000E0C4()
{
  return sub_10000DD98(&qword_1000D5948, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_10009887C);
}

uint64_t sub_10000E0F0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_10000D604(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void type metadata accessor for PRXActionStyle(uint64_t a1)
{
  sub_10000E148(a1, (unint64_t *)&unk_1000D59B0, (uint64_t)&unk_1000C27E8);
}

void sub_10000E148(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(0, a3);
    if (!v5)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_10000E1B0()
{
  uint64_t *v0;
  uint64_t *v1;
  unint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _QWORD v18[2];
  _QWORD v19[5];

  v1 = v0;
  v2 = sub_10000C22C((uint64_t)_swiftEmptyArrayStorage);
  v18[0] = 1701869940;
  v18[1] = 0xE400000000000000;
  AnyHashable.init<A>(_:)(v19, v18, &type metadata for String, &protocol witness table for String);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v2);
  v18[0] = v2;
  sub_10004BD20(0x704F656C706D6953, 0xEC0000006E6F6974, (uint64_t)v19, isUniquelyReferenced_nonNull_native);
  v4 = v18[0];
  swift_bridgeObjectRelease(0x8000000000000000);
  sub_10000DAE8((uint64_t)v19);
  v18[0] = 7955819;
  v18[1] = 0xE300000000000000;
  AnyHashable.init<A>(_:)(v19, v18, &type metadata for String, &protocol witness table for String);
  v5 = *v1;
  v6 = v1[1];
  swift_bridgeObjectRetain(v6);
  v7 = swift_isUniquelyReferenced_nonNull_native(v4);
  v18[0] = v4;
  sub_10004BD20(v5, v6, (uint64_t)v19, v7);
  v8 = v18[0];
  swift_bridgeObjectRelease(0x8000000000000000);
  sub_10000DAE8((uint64_t)v19);
  v18[0] = 0x65756C6176;
  v18[1] = 0xE500000000000000;
  AnyHashable.init<A>(_:)(v19, v18, &type metadata for String, &protocol witness table for String);
  v9 = v1[4];
  v10 = v1[5];
  swift_bridgeObjectRetain(v10);
  v11 = swift_isUniquelyReferenced_nonNull_native(v8);
  v18[0] = v8;
  sub_10004BD20(v9, v10, (uint64_t)v19, v11);
  v12 = v18[0];
  swift_bridgeObjectRelease(0x8000000000000000);
  sub_10000DAE8((uint64_t)v19);
  strcpy((char *)v18, "displayValue");
  BYTE5(v18[1]) = 0;
  HIWORD(v18[1]) = -5120;
  AnyHashable.init<A>(_:)(v19, v18, &type metadata for String, &protocol witness table for String);
  v14 = v1[2];
  v13 = v1[3];
  swift_bridgeObjectRetain(v13);
  v15 = swift_isUniquelyReferenced_nonNull_native(v12);
  v18[0] = v12;
  sub_10004BD20(v14, v13, (uint64_t)v19, v15);
  v16 = v18[0];
  swift_bridgeObjectRelease(0x8000000000000000);
  sub_10000DAE8((uint64_t)v19);
  return v16;
}

uint64_t sub_10000E3C4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 24));
  return v1;
}

uint64_t sub_10000E3F4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain(v0[1]);
  return v1;
}

uint64_t sub_10000E420()
{
  uint64_t *v0;
  uint64_t v1;
  Swift::String v2;
  void *object;
  Swift::String v4;
  Swift::String v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v10;
  void *v11;
  Swift::String v12;
  uint64_t v13;
  void *v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v19;
  void *v20;
  Swift::String v21;
  uint64_t v22;
  void *v23;
  Swift::String v24;
  uint64_t v25;
  Swift::String v26;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];

  v30[0] = 1031365995;
  v30[1] = 0xE400000000000000;
  v1 = v0[1];
  v28 = *v0;
  v29 = v1;
  swift_bridgeObjectRetain(v1);
  v2._countAndFlagsBits = String.init<A>(reflecting:)(&v28, &type metadata for String);
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  v4._countAndFlagsBits = 32;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  v5._countAndFlagsBits = v30[0];
  v6 = (void *)v30[1];
  strcpy((char *)v30, "<SimpleOption ");
  HIBYTE(v30[1]) = -18;
  v5._object = v6;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(v6);
  v8 = v30[0];
  v7 = v30[1];
  v30[0] = 0;
  v30[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease(v30[1]);
  strcpy((char *)v30, "displayValue=");
  HIWORD(v30[1]) = -4864;
  v9 = v0[3];
  v28 = v0[2];
  v29 = v9;
  swift_bridgeObjectRetain(v9);
  v10._countAndFlagsBits = String.init<A>(reflecting:)(&v28, &type metadata for String);
  v11 = v10._object;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(v11);
  v12._countAndFlagsBits = 32;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  v13 = v30[0];
  v14 = (void *)v30[1];
  v30[0] = v8;
  v30[1] = v7;
  swift_bridgeObjectRetain(v7);
  v15._countAndFlagsBits = v13;
  v15._object = v14;
  String.append(_:)(v15);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v14);
  v17 = v30[0];
  v16 = v30[1];
  v30[0] = 0x3D65756C6176;
  v30[1] = 0xE600000000000000;
  v18 = v0[5];
  v28 = v0[4];
  v29 = v18;
  swift_bridgeObjectRetain(v18);
  v19._countAndFlagsBits = String.init<A>(reflecting:)(&v28, &type metadata for String);
  v20 = v19._object;
  String.append(_:)(v19);
  swift_bridgeObjectRelease(v20);
  v21._countAndFlagsBits = 32;
  v21._object = (void *)0xE100000000000000;
  String.append(_:)(v21);
  v22 = v30[0];
  v23 = (void *)v30[1];
  v30[0] = v17;
  v30[1] = v16;
  swift_bridgeObjectRetain(v16);
  v24._countAndFlagsBits = v22;
  v24._object = v23;
  String.append(_:)(v24);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v23);
  v25 = v30[1];
  swift_bridgeObjectRetain(v30[1]);
  v26._countAndFlagsBits = 62;
  v26._object = (void *)0xE100000000000000;
  String.append(_:)(v26);
  swift_bridgeObjectRelease(v25);
  return v30[0];
}

uint64_t sub_10000E650@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  _QWORD v14[2];
  _QWORD v15[5];

  v14[0] = 7955819;
  v14[1] = 0xE300000000000000;
  AnyHashable.init<A>(_:)(v15, v14, &type metadata for String, &protocol witness table for String);
  v4 = sub_100084B28((uint64_t)v15, 0x6E776F6B6E75, 0xE600000000000000, a1);
  v6 = v5;
  swift_bridgeObjectRetain(v5);
  sub_10000DAE8((uint64_t)v15);
  v14[0] = 0x65756C6176;
  v14[1] = 0xE500000000000000;
  AnyHashable.init<A>(_:)(v15, v14, &type metadata for String, &protocol witness table for String);
  v7 = sub_100084B28((uint64_t)v15, 0x76206E776F6B6E75, 0xEC00000065756C61, a1);
  v9 = v8;
  swift_bridgeObjectRetain(v8);
  sub_10000DAE8((uint64_t)v15);
  strcpy((char *)v14, "displayValue");
  BYTE5(v14[1]) = 0;
  HIWORD(v14[1]) = -5120;
  AnyHashable.init<A>(_:)(v15, v14, &type metadata for String, &protocol witness table for String);
  v10 = sub_100084B28((uint64_t)v15, 0xD000000000000013, 0x800000010009D020, a1);
  v12 = v11;
  swift_bridgeObjectRetain(v11);
  result = sub_10000DAE8((uint64_t)v15);
  *a2 = v4;
  a2[1] = v6;
  a2[2] = v10;
  a2[3] = v12;
  a2[4] = v7;
  a2[5] = v9;
  return result;
}

uint64_t destroy for SimpleOption(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  return swift_bridgeObjectRelease(a1[5]);
}

_QWORD *initializeWithCopy for SimpleOption(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

_QWORD *assignWithCopy for SimpleOption(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  v8 = a2[5];
  v9 = a1[5];
  a1[5] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  return a1;
}

_QWORD *assignWithTake for SimpleOption(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease(v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for SimpleOption(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SimpleOption(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SimpleOption()
{
  return &type metadata for SimpleOption;
}

uint64_t sub_10000E9EC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10000EA20 + 4 * byte_100098F30[a1]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_10000EA20()
{
  return 0x7972616D697270;
}

uint64_t sub_10000EA34()
{
  return 0x7261646E6F636573;
}

uint64_t sub_10000EA54()
{
  return 0x65756E69746E6F63;
}

uint64_t sub_10000EA6C()
{
  return 0x6F6572657473;
}

uint64_t sub_10000EA80()
{
  return 1869508461;
}

uint64_t sub_10000EA90()
{
  return 0x654C6F6572657473;
}

uint64_t sub_10000EAAC()
{
  return 0x69526F6572657473;
}

uint64_t sub_10000EACC()
{
  return 0x6565726761;
}

uint64_t sub_10000EAE0()
{
  return 0x65726741746E6F64;
}

uint64_t sub_10000EB00()
{
  return 0x6E456C61756E616DLL;
}

uint64_t sub_10000EB20()
{
  return 0x7361506B61657073;
}

uint64_t sub_10000EB44()
{
  return 0x69466957776F6873;
}

uint64_t sub_10000EB64()
{
  return 0x534449656C707061;
}

uint64_t sub_10000EB88()
{
  return 0x73676E6974746573;
}

uint64_t sub_10000EBA0()
{
  return 0x655373656E755469;
}

uint64_t sub_10000EBC4()
{
  return 0x776F4E746F6ELL;
}

uint64_t sub_10000EBD8()
{
  return 0x754274726F706572;
}

uint64_t sub_10000EBF8()
{
  return 0x6F4C6E4F6E727574;
}

uint64_t sub_10000EC1C()
{
  return 0x747542636973756DLL;
}

uint64_t sub_10000EC3C()
{
  return 0x7542657461647075;
}

unint64_t sub_10000EC5C()
{
  return 0xD000000000000014;
}

uint64_t sub_10000ED94(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = sub_10000E9EC(*a1);
  v5 = v4;
  v6 = sub_10000E9EC(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

Swift::Int sub_10000EE1C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  v1 = *v0;
  Hasher.init(_seed:)(v6, 0);
  v2 = sub_10000E9EC(v1);
  v4 = v3;
  String.hash(into:)(v6, v2, v3);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_10000EE7C(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_10000E9EC(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_10000EEBC(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[9];

  v2 = *v1;
  Hasher.init(_seed:)(v7, a1);
  v3 = sub_10000E9EC(v2);
  v5 = v4;
  String.hash(into:)(v7, v3, v4);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_10000EF18@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_10000EF74(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_10000EF44@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_10000E9EC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10000EF6C()
{
  unsigned __int8 *v0;

  return sub_10000E9EC(*v0);
}

uint64_t sub_10000EF74(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = _findStringSwitchCaseWithCache(cases:string:cache:)(&off_1000C1790, a1, a2, &unk_1000D5678);
  swift_bridgeObjectRelease(a2);
  if (v3 >= 0x20)
    return 32;
  else
    return v3;
}

_BYTE *initializeBufferWithCopyOfBuffer for HomePodSetupStepAction(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for HomePodSetupStepAction(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE1)
    goto LABEL_17;
  if (a2 + 31 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 31) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 31;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 31;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 31;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x20;
  v8 = v6 - 32;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for HomePodSetupStepAction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 31 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 31) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE0)
    return ((uint64_t (*)(void))((char *)&loc_10000F0B0 + 4 * byte_100098F55[v4]))();
  *a1 = a2 + 31;
  return ((uint64_t (*)(void))((char *)sub_10000F0E4 + 4 * byte_100098F50[v4]))();
}

uint64_t sub_10000F0E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10000F0EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10000F0F4);
  return result;
}

uint64_t sub_10000F100(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10000F108);
  *(_BYTE *)result = a2 + 31;
  return result;
}

uint64_t sub_10000F10C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10000F114(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10000F120(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_10000F12C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for HomePodSetupStepAction()
{
  return &type metadata for HomePodSetupStepAction;
}

unint64_t sub_10000F148()
{
  unint64_t result;

  result = qword_1000D5B40;
  if (!qword_1000D5B40)
  {
    result = swift_getWitnessTable(&unk_100099018, &type metadata for HomePodSetupStepAction);
    atomic_store(result, (unint64_t *)&qword_1000D5B40);
  }
  return result;
}

uint64_t sub_10000F18C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000111E8(v2, qword_1000D5B48);
  v3 = sub_10001118C(v2, (uint64_t)qword_1000D5B48);
  if (qword_1000D55C0 != -1)
    swift_once(&qword_1000D55C0, sub_100058090);
  v4 = sub_10001118C(v2, (uint64_t)qword_1000DB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

id sub_10000F21C(void *a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  char *v5;
  char *v6;
  id v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  objc_super v14;

  *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_presenter + 8] = 0;
  swift_unknownObjectWeakInit();
  v3 = &v1[OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_viewModel];
  v4 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = &v1[OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_bodyText];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0xE000000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_style] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_images] = _swiftEmptyArrayStorage;
  v6 = &v1[OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_estimatedSecondsText];
  strcpy(&v1[OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_estimatedSecondsText], "Estimating...");
  *((_WORD *)v6 + 7) = -4864;
  *(_DWORD *)&v1[OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_currentProgress] = -1082130432;
  v7 = objc_allocWithZone((Class)type metadata accessor for HomePodSetupProgressBarView());
  v8 = v1;
  v9 = objc_msgSend(v7, "initWithCardStyle:", 0);
  *(_QWORD *)&v8[OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_myContentView] = v9;
  v10 = v9;
  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v14.receiver = v8;
  v14.super_class = (Class)type metadata accessor for HomePodSetupFileTransferViewController(0);
  v11 = v10;
  v12 = objc_msgSendSuper2(&v14, "initWithContentView:", v11);

  return v12;
}

void sub_10000F3CC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char *v11;
  objc_class *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  NSString v33;
  void *v34;
  id v35;
  NSString v36;
  NSString v37;
  NSString v38;
  NSString v39;
  uint8_t *v40;
  char *v41;
  uint64_t v42;
  uint64_t aBlock[5];
  uint64_t v44;
  char v45[24];
  objc_super v46;

  v1 = v0;
  v2 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v2);
  v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  v6 = *((_QWORD *)v5 - 1);
  v7 = __chkstk_darwin(v5);
  v9 = (uint64_t *)((char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  v11 = (char *)&v40 - v10;
  v12 = (objc_class *)type metadata accessor for HomePodSetupFileTransferViewController(0);
  v46.receiver = v1;
  v46.super_class = v12;
  objc_msgSendSuper2(&v46, "viewDidLoad");
  v13 = (uint64_t)&v1[OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_viewModel];
  swift_beginAccess(&v1[OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_viewModel], v45, 0, 0);
  sub_10000E0F0(v13, (uint64_t)v4, (uint64_t *)&unk_1000D6EC0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v6 + 48))(v4, 1, v5) != 1)
  {
    sub_100011228((uint64_t)v4, (uint64_t)v11, type metadata accessor for HomePodSetupViewModel);
    if (qword_1000D54F0 != -1)
      swift_once(&qword_1000D54F0, sub_10000F18C);
    v21 = type metadata accessor for Logger(0, v20);
    sub_10001118C(v21, (uint64_t)qword_1000D5B48);
    v22 = sub_1000111A4((uint64_t)v11, (uint64_t)v9);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(12, -1);
      v26 = swift_slowAlloc(32, -1);
      aBlock[0] = v26;
      v41 = v1;
      *(_DWORD *)v25 = 136315138;
      v40 = v25 + 4;
      v28 = *v9;
      v27 = v9[1];
      swift_bridgeObjectRetain(v27);
      v42 = sub_10003EF58(v28, v27, aBlock);
      v1 = v41;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, aBlock);
      swift_bridgeObjectRelease(v27);
      sub_10001126C((uint64_t)v9, type metadata accessor for HomePodSetupViewModel);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "HomePodSetupFileTransferViewController: viewDidLoad with title %s", v25, 0xCu);
      swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1, -1);
      swift_slowDealloc(v25, -1, -1);
    }
    else
    {
      sub_10001126C((uint64_t)v9, type metadata accessor for HomePodSetupViewModel);
    }

    sub_10000FC10((uint64_t)v11);
    v29 = *(_QWORD *)&v11[v5[10]];
    v30 = swift_allocObject(&unk_1000C2BC0, 24, 7);
    swift_unknownObjectWeakInit(v30 + 16, v1);
    sub_10007E6FC(v29, (uint64_t)sub_1000112CC, v30);
    swift_release(v30);
    if (v11[v5[39]] == 1)
    {
      v31 = swift_allocObject(&unk_1000C2BE8, 24, 7);
      *(_QWORD *)(v31 + 16) = v1;
      v32 = v1;
      v33 = String._bridgeToObjectiveC()();
      aBlock[4] = (uint64_t)sub_1000112D4;
      v44 = v31;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100038D38;
      aBlock[3] = (uint64_t)&unk_1000C2C00;
      v34 = _Block_copy(aBlock);
      v35 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v33, 0, v34);

      _Block_release(v34);
      swift_release(v44);
    }
    else
    {
      if ((v11[v5[18]] & 2) != 0 || !*(_QWORD *)&v11[v5[19] + 8])
        goto LABEL_18;
      v36 = String._bridgeToObjectiveC()();
      v37 = String._bridgeToObjectiveC()();
      v38 = String._bridgeToObjectiveC()();
      v39 = String._bridgeToObjectiveC()();
      v35 = objc_msgSend(v1, "dismissalConfirmationActionWithTitle:message:confirmButtonTitle:cancelButtonTitle:", v36, v37, v38, v39);

    }
    objc_msgSend(v1, "setDismissButtonAction:", v35);

LABEL_18:
    sub_10001126C((uint64_t)v11, type metadata accessor for HomePodSetupViewModel);
    return;
  }
  sub_10000DC40((uint64_t)v4, (uint64_t *)&unk_1000D6EC0);
  if (qword_1000D54F0 != -1)
    swift_once(&qword_1000D54F0, sub_10000F18C);
  v15 = type metadata accessor for Logger(0, v14);
  v16 = sub_10001118C(v15, (uint64_t)qword_1000D5B48);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "HomePodSetupFileTransferViewController: viewDidLoad failed because viewModel not set.", v19, 2u);
    swift_slowDealloc(v19, -1, -1);
  }

}

void sub_10000F96C(unsigned __int8 *a1, uint64_t a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t Strong;
  void *v14;
  uint64_t v15;
  _BYTE v16[48];
  _OWORD v17[2];
  uint64_t v18;
  _OWORD v19[3];
  _BYTE v20[24];

  v2 = *a1;
  v3 = a2 + 16;
  if (qword_1000D54F0 != -1)
    swift_once(&qword_1000D54F0, sub_10000F18C);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10001118C(v4, (uint64_t)qword_1000D5B48);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v19[0] = v9;
    *(_DWORD *)v8 = 136315138;
    v10 = sub_10000E9EC(v2);
    v12 = v11;
    *(_QWORD *)v16 = sub_10003EF58(v10, v11, (uint64_t *)v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v16, &v16[8]);
    swift_bridgeObjectRelease(v12);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "HomePodSetupFileTransferViewController: User tapped on button: %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }

  swift_beginAccess(v3, v20, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v14 = (void *)Strong;
    v15 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_presenter);

    if (v15)
    {
      v18 = 0;
      memset(v17, 0, sizeof(v17));
      memset(&v16[8], 0, 40);
      v16[0] = v2;
      sub_100011340((uint64_t)v17, (uint64_t)&v16[8], &qword_1000D6ED0);
      v19[0] = *(_OWORD *)v16;
      v19[1] = *(_OWORD *)&v16[16];
      v19[2] = *(_OWORD *)&v16[32];
      sub_10006B04C((char *)v19);
      swift_unknownObjectRelease(v15);
      sub_100011384((uint64_t)v19);
    }
  }
}

void sub_10000FC10(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  NSString v10;
  NSString v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  id v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  id v35;
  NSString v36;
  uint64_t v37;
  uint64_t v38;

  v2 = v1;
  sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin();
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AdjustedImage(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (uint64_t *)((char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setTitle:", v10);

  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setSubtitle:", v11);

  v12 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  sub_1000103AC(*(_QWORD *)(a1 + v12[7]), *(_QWORD *)(a1 + v12[7] + 8));
  sub_1000104D0(*(float *)(a1 + v12[40]), v13, v14);
  v16 = v12[11];
  v17 = *(_QWORD *)(a1 + v16);
  if ((unint64_t)v17 >> 62)
  {
    if (v17 < 0)
      v22 = *(_QWORD *)(a1 + v16);
    else
      v22 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(a1 + v16));
    v23 = _CocoaArrayWrapper.endIndex.getter(v22);
    swift_bridgeObjectRelease(v17);
    if (v23)
      goto LABEL_3;
  }
  else if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    if (qword_1000D54F0 != -1)
      swift_once(&qword_1000D54F0, sub_10000F18C);
    v18 = type metadata accessor for Logger(0, v15);
    sub_10001118C(v18, (uint64_t)qword_1000D5B48);
    v19 = Logger.logObject.getter();
    v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "HomePodSetupIconContent: iconImages used", v21, 2u);
      swift_slowDealloc(v21, -1, -1);
    }

    sub_100010074(*(_QWORD *)(a1 + v16));
    goto LABEL_19;
  }
  sub_10000E0F0(a1 + v12[27], (uint64_t)v5, &qword_1000D5E60);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_10000DC40((uint64_t)v5, &qword_1000D5E60);
  }
  else
  {
    sub_100011228((uint64_t)v5, (uint64_t)v9, type metadata accessor for AdjustedImage);
    if (qword_1000D54F0 != -1)
      swift_once(&qword_1000D54F0, sub_10000F18C);
    v25 = type metadata accessor for Logger(0, v24);
    sub_10001118C(v25, (uint64_t)qword_1000D5B48);
    v26 = Logger.logObject.getter();
    v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "HomePodSetupIconContent: iconImages empty, prodImage used", v28, 2u);
      swift_slowDealloc(v28, -1, -1);
    }

    v29 = objc_msgSend(objc_allocWithZone((Class)SFAdjustedImageView), "initWithImage:", *v9);
    sub_100073038((uint64_t)v9 + *(int *)(v6 + 20));
    objc_msgSend(v29, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v30 = *(char **)&v2[OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_myContentView];
    v31 = sub_10000D604(&qword_1000D6EE0);
    v32 = swift_allocObject(v31, 40, 7);
    *(_OWORD *)(v32 + 16) = xmmword_100099060;
    *(_QWORD *)(v32 + 32) = v29;
    v38 = v32;
    specialized Array._endMutation()(v32);
    v33 = *(_QWORD *)&v30[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViews];
    *(_QWORD *)&v30[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViews] = v38;
    v34 = v30;
    v35 = v29;
    sub_10007AE78(v33);

    swift_bridgeObjectRelease(v33);
    sub_10001126C((uint64_t)v9, type metadata accessor for AdjustedImage);
  }
LABEL_19:
  objc_msgSend(v2, "setDismissalType:", *(_QWORD *)(a1 + v12[18]));
  if (*(_BYTE *)(a1 + v12[38]) == 1)
  {
    v36 = String._bridgeToObjectiveC()();
    objc_msgSend(v2, "showActivityIndicatorWithStatus:", v36);

  }
}

id sub_100010074(unint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  id result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  char *v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  char v35[24];
  unint64_t v36;

  v2 = v1;
  sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin();
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_images;
  v7 = *(_QWORD *)&v2[OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_images];
  v8 = swift_bridgeObjectRetain(v7);
  v9 = sub_10007E89C(v8, a1);
  result = (id)swift_bridgeObjectRelease(v7);
  if ((v9 & 1) == 0)
  {
    v11 = *(_QWORD *)&v2[v6];
    *(_QWORD *)&v2[v6] = a1;
    swift_bridgeObjectRetain(a1);
    swift_bridgeObjectRelease(v11);
    result = objc_msgSend(v2, "isViewLoaded");
    if ((_DWORD)result)
    {
      v36 = (unint64_t)_swiftEmptyArrayStorage;
      v12 = *(_QWORD *)&v2[v6];
      if ((unint64_t)v12 >> 62)
      {
        if (v12 < 0)
          v27 = *(_QWORD *)&v2[v6];
        else
          v27 = v12 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n(*(_QWORD *)&v2[v6], 2);
        result = (id)_CocoaArrayWrapper.endIndex.getter(v27);
        v13 = (uint64_t)result;
        if (result)
          goto LABEL_5;
      }
      else
      {
        v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
        result = (id)swift_bridgeObjectRetain_n(v12, 2);
        if (v13)
        {
LABEL_5:
          if (v13 < 1)
          {
            __break(1u);
            return result;
          }
          v32 = v12 & 0xC000000000000001;
          v33 = &v2[OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_viewModel];
          v34 = OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_style;
          swift_beginAccess(&v2[OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_viewModel], v35, 0, 0);
          v14 = 0;
          do
          {
            if (v32)
              v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v12);
            else
              v15 = *(id *)(v12 + 8 * v14 + 32);
            v16 = v15;
            v17 = objc_msgSend(objc_allocWithZone((Class)PRXImageView), "initWithStyle:", *(_QWORD *)&v2[v34]);
            objc_msgSend(v17, "setImage:", v16);
            objc_msgSend(v17, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
            sub_10000E0F0((uint64_t)v33, (uint64_t)v5, (uint64_t *)&unk_1000D6EC0);
            v18 = type metadata accessor for HomePodSetupViewModel(0);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v5, 1, v18))
            {
              v19 = (id)sub_10000DC40((uint64_t)v5, (uint64_t *)&unk_1000D6EC0);
            }
            else
            {
              v20 = &v5[*(int *)(v18 + 124)];
              v21 = *(_QWORD *)v20;
              v22 = v20[8];
              v19 = (id)sub_10000DC40((uint64_t)v5, (uint64_t *)&unk_1000D6EC0);
              if ((v22 & 1) == 0)
                v19 = objc_msgSend(v17, "setContentMode:", v21);
            }
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v19);
            v24 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v23 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v24 >= v23 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v23 > 1, v24 + 1, 1);
            ++v14;
            v25 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v17);
            specialized Array._endMutation()(v25);

          }
          while (v13 != v14);
          swift_bridgeObjectRelease_n(v12, 2);
          v26 = (_QWORD *)v36;
          goto LABEL_23;
        }
      }
      swift_bridgeObjectRelease_n(v12, 2);
      v26 = _swiftEmptyArrayStorage;
LABEL_23:
      v28 = *(char **)&v2[OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_myContentView];
      v29 = *(_QWORD *)&v28[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViews];
      *(_QWORD *)&v28[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViews] = v26;
      v30 = v28;
      swift_bridgeObjectRetain(v26);
      sub_10007AE78(v29);
      swift_bridgeObjectRelease(v26);

      return (id)swift_bridgeObjectRelease(v29);
    }
  }
  return result;
}

void sub_1000103AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  id v10;
  NSString v11;
  id v12;
  id v13;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_bodyText);
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_bodyText);
  v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_bodyText + 8);
  v8 = v6 == a1 && v7 == a2;
  if (!v8 && (_stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, a1, a2, 0) & 1) == 0)
  {
    v9 = v5[1];
    *v5 = a1;
    v5[1] = a2;
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRelease(v9);
    v10 = objc_msgSend(objc_allocWithZone((Class)PRXLabel), "initWithStyle:", 1);
    v11 = String._bridgeToObjectiveC()();
    objc_msgSend(v10, "setText:", v11);

    objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v13 = *(id *)(v2 + OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_myContentView);
    v12 = v10;
    sub_10007B074(v10);

  }
}

void sub_1000104D0(float a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  double v10;
  uint64_t v11;
  id v12;
  double v13;
  id v14;
  id v15;
  BOOL v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  void *v20;
  double v21;
  uint64_t v22;

  v4 = v3;
  if (qword_1000D54F0 != -1)
    swift_once(&qword_1000D54F0, sub_10000F18C);
  v6 = type metadata accessor for Logger(0, a3);
  sub_10001118C(v6, (uint64_t)qword_1000D5B48);
  v7 = Logger.logObject.getter();
  v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v9 = 134217984;
    v21 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "HomePodSetupFileTransferViewController: setting progress view to %f", v9, 0xCu);
    swift_slowDealloc(v9, -1, -1);
  }

  v11 = OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_myContentView;
  if (!*(_QWORD *)(*(_QWORD *)(v4
                              + OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_myContentView)
                  + OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_progressView))
  {
    v12 = objc_msgSend(objc_allocWithZone((Class)UIProgressView), "initWithProgressViewStyle:", 0);
    LODWORD(v13) = 0;
    objc_msgSend(v12, "setProgress:animated:", 0, v13);
    objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v14 = *(id *)(v4 + v11);
    v15 = v12;
    sub_10007B060(v12);

  }
  v16 = (LODWORD(a1) & 0x7FFFFF) != 0 && (~LODWORD(a1) & 0x7F800000) == 0;
  if (!v16 && a1 >= 0.0)
  {
    if (*(float *)(v4 + OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_currentProgress) == a1)
    {
      v17 = Logger.logObject.getter();
      v18 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v19 = 0;
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "HomePodSetupFileTransferViewController: progresses are the same, not updating progress view", v19, 2u);
        swift_slowDealloc(v19, -1, -1);
      }

    }
    else
    {
      *(float *)(v4 + OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_currentProgress) = a1;
      v20 = *(void **)(*(_QWORD *)(v4 + v11) + OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_progressView);
      if (v20)
      {
        *(float *)&v10 = a1;
        objc_msgSend(v20, "setProgress:animated:", 1, v10);
      }
    }
  }
}

id sub_100010754()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupFileTransferViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100010810()
{
  return type metadata accessor for HomePodSetupFileTransferViewController(0);
}

uint64_t type metadata accessor for HomePodSetupFileTransferViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1000D5B90;
  if (!qword_1000D5B90)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HomePodSetupFileTransferViewController);
  return result;
}

void sub_100010854(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[8];

  v4[0] = &unk_100099098;
  sub_100010910(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_1000990B0;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[4] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[6] = &unk_1000990B0;
    v4[7] = (char *)&value witness table for Builtin.Int32 + 64;
    swift_updateClassMetadata2(a1, 256, 8, v4, a1 + 80);
  }
}

void sub_100010910(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1000D7B40)
  {
    v2 = type metadata accessor for HomePodSetupViewModel(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1000D7B40);
  }
}

uint64_t sub_100010964(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_presenter + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease(a1);
}

void sub_10001099C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100010F70(a3);
}

void sub_1000109A4(uint64_t a1, void *a2)
{
  NSString v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  NSString v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSString v19;
  void *v20;
  void *v21;
  id v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  NSString v29;
  void *v30;
  id v31;
  NSString v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  NSString v38;
  void *v39;
  id v40;
  id v41;
  void **aBlock;
  uint64_t v43;
  void (*v44)(uint64_t, void *);
  void *v45;
  void *v46;
  uint64_t v47;

  v3 = String._bridgeToObjectiveC()();
  v4 = sub_100006354(v3);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v6 = v5;

  v7 = String._bridgeToObjectiveC()();
  v8 = sub_100006354(v7);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v10 = v9;

  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v10);
  v41 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v11, v12, 1);

  v13 = String._bridgeToObjectiveC()();
  v14 = sub_100006354(v13);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v16 = v15;

  v17 = swift_allocObject(&unk_1000C2C38, 24, 7);
  *(_QWORD *)(v17 + 16) = a2;
  v18 = a2;
  v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v16);
  v46 = sub_1000112F4;
  v47 = v17;
  aBlock = _NSConcreteStackBlock;
  v43 = 1107296256;
  v44 = sub_100038D38;
  v45 = &unk_1000C2C50;
  v20 = _Block_copy(&aBlock);
  swift_release(v47);
  v21 = (void *)objc_opt_self(UIAlertAction);
  v22 = objc_msgSend(v21, "actionWithTitle:style:handler:", v19, 0, v20);
  _Block_release(v20);

  v23 = String._bridgeToObjectiveC()();
  v24 = sub_100006354(v23);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v26 = v25;

  v27 = swift_allocObject(&unk_1000C2C88, 24, 7);
  *(_QWORD *)(v27 + 16) = v18;
  v28 = v18;
  v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v26);
  v46 = sub_100011320;
  v47 = v27;
  aBlock = _NSConcreteStackBlock;
  v43 = 1107296256;
  v44 = sub_100038D38;
  v45 = &unk_1000C2CA0;
  v30 = _Block_copy(&aBlock);
  swift_release(v47);
  v31 = objc_msgSend(v21, "actionWithTitle:style:handler:", v29, 0, v30);
  _Block_release(v30);

  v32 = String._bridgeToObjectiveC()();
  v33 = sub_100006354(v32);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
  v35 = v34;

  v36 = swift_allocObject(&unk_1000C2CD8, 24, 7);
  *(_QWORD *)(v36 + 16) = v41;
  v37 = v41;
  v38 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v35);
  v46 = sub_100011328;
  v47 = v36;
  aBlock = _NSConcreteStackBlock;
  v43 = 1107296256;
  v44 = sub_100038D38;
  v45 = &unk_1000C2CF0;
  v39 = _Block_copy(&aBlock);
  swift_release(v47);
  v40 = objc_msgSend(v21, "actionWithTitle:style:handler:", v38, 1, v39);
  _Block_release(v39);

  objc_msgSend(v37, "addAction:", v22);
  objc_msgSend(v37, "addAction:", v31);
  objc_msgSend(v37, "addAction:", v40);
  objc_msgSend(v37, "setPreferredAction:", v22);
  objc_msgSend(v28, "presentViewController:animated:completion:", v37, 1, 0);

}

uint64_t sub_100010E40(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v3;
  _BYTE v4[48];
  _OWORD v5[2];
  uint64_t v6;
  _OWORD v7[3];

  result = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_presenter);
  if (result)
  {
    v3 = result;
    v6 = 0;
    memset(v5, 0, sizeof(v5));
    memset(&v4[8], 0, 40);
    v4[0] = 30;
    sub_100011340((uint64_t)v5, (uint64_t)&v4[8], &qword_1000D6ED0);
    v7[0] = *(_OWORD *)v4;
    v7[1] = *(_OWORD *)&v4[16];
    v7[2] = *(_OWORD *)&v4[32];
    sub_10006B04C((char *)v7);
    swift_unknownObjectRelease(v3);
    return sub_100011384((uint64_t)v7);
  }
  return result;
}

uint64_t sub_100010ED8(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v3;
  _BYTE v4[48];
  _OWORD v5[2];
  uint64_t v6;
  _OWORD v7[3];

  result = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_presenter);
  if (result)
  {
    v3 = result;
    v6 = 0;
    memset(v5, 0, sizeof(v5));
    memset(&v4[8], 0, 40);
    v4[0] = 31;
    sub_100011340((uint64_t)v5, (uint64_t)&v4[8], &qword_1000D6ED0);
    v7[0] = *(_OWORD *)v4;
    v7[1] = *(_OWORD *)&v4[16];
    v7[2] = *(_OWORD *)&v4[32];
    sub_10006B04C((char *)v7);
    swift_unknownObjectRelease(v3);
    return sub_100011384((uint64_t)v7);
  }
  return result;
}

void sub_100010F70(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  _BYTE v19[24];

  v3 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_1000D54F0 != -1)
    swift_once(&qword_1000D54F0, sub_10000F18C);
  v7 = type metadata accessor for Logger(0, v4);
  v8 = sub_10001118C(v7, (uint64_t)qword_1000D5B48);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "HomePodSetupFileTransferViewController: presenter:didUpdate viewModel", v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }

  sub_1000111A4(a1, (uint64_t)v6);
  v12 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 0, 1, v12);
  v13 = (uint64_t)&v1[OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_viewModel];
  swift_beginAccess(&v1[OBJC_IVAR____TtC14HDSViewService38HomePodSetupFileTransferViewController_viewModel], v19, 33, 0);
  sub_100011340((uint64_t)v6, v13, (uint64_t *)&unk_1000D6EC0);
  swift_endAccess(v19);
  v14 = objc_msgSend(v1, "isViewLoaded");
  if ((_DWORD)v14)
  {
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "HomePodSetupFileTransferViewController: configureUI", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

    sub_10000FC10(a1);
  }
}

uint64_t sub_10001118C(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_1000111A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1000111E8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 - 8);
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    v4 = swift_slowAlloc(*(_QWORD *)(v3 + 64), *(_DWORD *)(v3 + 80));
    *a2 = v4;
    return (uint64_t *)v4;
  }
  return a2;
}

uint64_t sub_100011228(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10001126C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000112A8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1000112CC(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_10000F96C(a1, v1);
}

void sub_1000112D4(uint64_t a1)
{
  uint64_t v1;

  sub_1000109A4(a1, *(void **)(v1 + 16));
}

uint64_t sub_1000112DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000112EC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000112F4(uint64_t a1)
{
  uint64_t v1;

  return sub_100010E40(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1000112FC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100011320(uint64_t a1)
{
  uint64_t v1;

  return sub_100010ED8(a1, *(_QWORD *)(v1 + 16));
}

id sub_100011328()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "dismissViewControllerAnimated:completion:", 1, 0);
}

uint64_t sub_100011340(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_10000D604(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_100011384(uint64_t a1)
{
  destroy for HomePodSetupStepResult(a1);
  return a1;
}

uint64_t sub_1000113B8(uint64_t a1)
{
  swift_unknownObjectWeakDestroy(a1);
  return a1;
}

uint64_t sub_100011400(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000111E8(v2, qword_1000D5BA0);
  v3 = sub_10001118C(v2, (uint64_t)qword_1000D5BA0);
  if (qword_1000D55C0 != -1)
    swift_once(&qword_1000D55C0, sub_100058090);
  v4 = sub_10001118C(v2, (uint64_t)qword_1000DB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

uint64_t sub_100011490()
{
  uint64_t *v0;
  uint64_t v1;
  Swift::String v2;
  void *object;
  Swift::String v4;
  Swift::String v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v10;
  void *v11;
  Swift::String v12;
  uint64_t v13;
  void *v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v19;
  void *v20;
  Swift::String v21;
  uint64_t v22;
  void *v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  Swift::String v27;
  void *v28;
  Swift::String v29;
  uint64_t v30;
  void *v31;
  Swift::String v32;
  uint64_t v33;
  Swift::String v34;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[2];

  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease(0xE000000000000000);
  strcpy((char *)v38, "serialNumber=");
  HIWORD(v38[1]) = -4864;
  v1 = v0[1];
  v36 = *v0;
  v37 = v1;
  swift_bridgeObjectRetain(v1);
  v2._countAndFlagsBits = String.init<A>(reflecting:)(&v36, &type metadata for String);
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  v4._countAndFlagsBits = 32;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  v5._countAndFlagsBits = v38[0];
  v6 = (void *)v38[1];
  v38[0] = 0xD00000000000001DLL;
  v38[1] = 0x800000010009D270;
  v5._object = v6;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(v6);
  v8 = v38[0];
  v7 = v38[1];
  strcpy((char *)v38, "modelNum=");
  WORD1(v38[1]) = 0;
  HIDWORD(v38[1]) = -385875968;
  v9 = v0[3];
  v36 = v0[2];
  v37 = v9;
  swift_bridgeObjectRetain(v9);
  v10._countAndFlagsBits = String.init<A>(reflecting:)(&v36, &type metadata for String);
  v11 = v10._object;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(v11);
  v12._countAndFlagsBits = 32;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  v13 = v38[0];
  v14 = (void *)v38[1];
  v38[0] = v8;
  v38[1] = v7;
  swift_bridgeObjectRetain(v7);
  v15._countAndFlagsBits = v13;
  v15._object = v14;
  String.append(_:)(v15);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v14);
  v17 = v38[0];
  v16 = v38[1];
  strcpy((char *)v38, "wifiAddress=");
  BYTE5(v38[1]) = 0;
  HIWORD(v38[1]) = -5120;
  v18 = v0[5];
  v36 = v0[4];
  v37 = v18;
  swift_bridgeObjectRetain(v18);
  v19._countAndFlagsBits = String.init<A>(reflecting:)(&v36, &type metadata for String);
  v20 = v19._object;
  String.append(_:)(v19);
  swift_bridgeObjectRelease(v20);
  v21._countAndFlagsBits = 32;
  v21._object = (void *)0xE100000000000000;
  String.append(_:)(v21);
  v22 = v38[0];
  v23 = (void *)v38[1];
  v38[0] = v17;
  v38[1] = v16;
  swift_bridgeObjectRetain(v16);
  v24._countAndFlagsBits = v22;
  v24._object = v23;
  String.append(_:)(v24);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v23);
  v26 = v38[0];
  v25 = v38[1];
  v38[0] = 0;
  v38[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease(v38[1]);
  strcpy((char *)v38, "featureFlags=");
  HIWORD(v38[1]) = -4864;
  v36 = v0[6];
  v27._countAndFlagsBits = String.init<A>(reflecting:)(&v36, &type metadata for UInt64);
  v28 = v27._object;
  String.append(_:)(v27);
  swift_bridgeObjectRelease(v28);
  v29._countAndFlagsBits = 32;
  v29._object = (void *)0xE100000000000000;
  String.append(_:)(v29);
  v30 = v38[0];
  v31 = (void *)v38[1];
  v38[0] = v26;
  v38[1] = v25;
  swift_bridgeObjectRetain(v25);
  v32._countAndFlagsBits = v30;
  v32._object = v31;
  String.append(_:)(v32);
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v31);
  v33 = v38[1];
  swift_bridgeObjectRetain(v38[1]);
  v34._countAndFlagsBits = 62;
  v34._object = (void *)0xE100000000000000;
  String.append(_:)(v34);
  swift_bridgeObjectRelease(v33);
  return v38[0];
}

uint64_t sub_10001177C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD aBlock[5];
  uint64_t v22;
  char v23[24];

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v23, 0, 0);
  result = swift_weakLoadStrong(a1);
  if (result)
  {
    v11 = result;
    sub_100012BE8();
    v12 = static OS_dispatch_queue.main.getter();
    v20 = v3;
    v13 = (void *)v12;
    aBlock[4] = sub_100012C24;
    v22 = v11;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10007C6B4;
    aBlock[3] = &unk_1000C2DF8;
    v14 = _Block_copy(aBlock);
    v15 = v22;
    swift_retain(v11);
    swift_release(v15);
    static DispatchQoS.unspecified.getter(v16);
    aBlock[0] = _swiftEmptyArrayStorage;
    v17 = sub_100012C2C();
    v18 = sub_10000D604((uint64_t *)&unk_1000D7B60);
    v19 = sub_100012C74();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v18, v19, v2, v17);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v14);
    _Block_release(v14);
    swift_release(v11);

    (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return result;
}

_QWORD *sub_100011968(uint64_t a1)
{
  _QWORD *result;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t *);
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;

  result = objc_msgSend(*(id *)(a1 + 72), "preAuthResponse");
  if (result)
  {
    v3 = result;
    v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(result, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    v5 = sub_100011A9C(v4);
    result = (_QWORD *)swift_bridgeObjectRelease(v4);
    if (v5)
    {
      sub_100012370(v5, &v18);
      v6 = v19;
      v7 = v20;
      v8 = v21;
      v9 = v22;
      v10 = *(_QWORD *)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 24);
      v12 = *(_QWORD *)(a1 + 32);
      v13 = *(_QWORD *)(a1 + 40);
      v14 = *(_QWORD *)(a1 + 48);
      v15 = *(_QWORD *)(a1 + 56);
      *(_QWORD *)(a1 + 16) = v18;
      *(_OWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 40) = v7;
      *(_OWORD *)(a1 + 48) = v8;
      *(_QWORD *)(a1 + 64) = v9;
      sub_100012D04(&v18);
      sub_100012D4C(v10, v11, v12, v13, v14, v15);
      *(_BYTE *)(a1 + 80) = 1;
      v17 = *(void (**)(uint64_t *))(a1 + 88);
      v16 = *(_QWORD *)(a1 + 96);
      swift_retain(v16);
      v17(&v18);
      swift_release(v16);
      return sub_100012D88(&v18);
    }
  }
  return result;
}

unint64_t sub_100011A9C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t result;
  int64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD v29[2];
  _OWORD v30[2];
  __int128 v31;
  _OWORD v32[2];
  _OWORD v33[2];
  _OWORD v34[2];
  _OWORD v35[2];
  uint64_t v36;
  _OWORD v37[2];
  _OWORD v38[2];
  uint64_t v39;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_10000D604(&qword_1000D57F0);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v26 = a1 + 64;
  v4 = -1;
  v5 = -1 << *(_BYTE *)(a1 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(a1 + 64);
  v25 = (unint64_t)(63 - v5) >> 6;
  result = swift_bridgeObjectRetain(a1);
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v11 = (v6 - 1) & v6;
      v12 = __clz(__rbit64(v6)) | (v8 << 6);
      v13 = v8;
    }
    else
    {
      v14 = v8 + 1;
      if (__OFADD__(v8, 1))
        goto LABEL_37;
      if (v14 >= v25)
      {
LABEL_33:
        sub_100012E0C(a1);
        return (unint64_t)v3;
      }
      v15 = *(_QWORD *)(v26 + 8 * v14);
      v13 = v8 + 1;
      if (!v15)
      {
        v13 = v8 + 2;
        if (v8 + 2 >= v25)
          goto LABEL_33;
        v15 = *(_QWORD *)(v26 + 8 * v13);
        if (!v15)
        {
          v13 = v8 + 3;
          if (v8 + 3 >= v25)
            goto LABEL_33;
          v15 = *(_QWORD *)(v26 + 8 * v13);
          if (!v15)
          {
            v13 = v8 + 4;
            if (v8 + 4 >= v25)
              goto LABEL_33;
            v15 = *(_QWORD *)(v26 + 8 * v13);
            if (!v15)
            {
              v16 = v8 + 5;
              if (v8 + 5 >= v25)
                goto LABEL_33;
              v15 = *(_QWORD *)(v26 + 8 * v16);
              if (!v15)
              {
                while (1)
                {
                  v13 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    goto LABEL_38;
                  if (v13 >= v25)
                    goto LABEL_33;
                  v15 = *(_QWORD *)(v26 + 8 * v13);
                  ++v16;
                  if (v15)
                    goto LABEL_26;
                }
              }
              v13 = v8 + 5;
            }
          }
        }
      }
LABEL_26:
      v11 = (v15 - 1) & v15;
      v12 = __clz(__rbit64(v15)) + (v13 << 6);
    }
    sub_100012DD0(*(_QWORD *)(a1 + 48) + 40 * v12, (uint64_t)v37);
    sub_10000DB98(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v38 + 8);
    v35[0] = v38[0];
    v35[1] = v38[1];
    v36 = v39;
    v34[0] = v37[0];
    v34[1] = v37[1];
    sub_100012DD0((uint64_t)v34, (uint64_t)v29);
    if (!swift_dynamicCast(&v27, v29, &type metadata for AnyHashable, &type metadata for String, 6))
    {
      v27 = 0;
      v28 = 0;
      sub_10000DC40((uint64_t)v34, &qword_1000D5CC0);
      swift_bridgeObjectRelease(v28);
      sub_100012E0C(a1);
      swift_release(v3);
      return 0;
    }
    v17 = v27;
    v18 = v28;
    sub_10000DB98((uint64_t)v35 + 8, (uint64_t)v29);
    sub_10000DC40((uint64_t)v34, &qword_1000D5CC0);
    sub_10000DAD8(v29, v30);
    *(_QWORD *)&v31 = v17;
    *((_QWORD *)&v31 + 1) = v18;
    sub_10000DAD8(v30, v32);
    v19 = v31;
    sub_10000DAD8(v32, v33);
    sub_10000DAD8(v33, &v31);
    result = sub_10004A7C0(v19, *((uint64_t *)&v19 + 1));
    v20 = result;
    if ((v21 & 1) != 0)
    {
      v9 = v3[6] + 16 * result;
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + 8));
      *(_OWORD *)v9 = v19;
      v10 = (_QWORD *)(v3[7] + 32 * v20);
      sub_10000CDB8(v10);
      result = (unint64_t)sub_10000DAD8(&v31, v10);
      goto LABEL_8;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_OWORD *)(v3[6] + 16 * result) = v19;
    result = (unint64_t)sub_10000DAD8(&v31, (_OWORD *)(v3[7] + 32 * result));
    v22 = v3[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_36;
    v3[2] = v24;
LABEL_8:
    v8 = v13;
    v6 = v11;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_100011E6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 *v25;
  uint64_t v26;
  void *v27;
  uint64_t v29;
  void (*v30)(void **);
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v3 = v2;
  v4 = a2;
  if (qword_1000D54F8 != -1)
    swift_once(&qword_1000D54F8, sub_100011400);
  v6 = type metadata accessor for Logger(0, a2);
  sub_10001118C(v6, (uint64_t)qword_1000D5BA0);
  v7 = swift_retain_n(v2, 2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v10 = 138412290;
    v29 = v4;
    v12 = a1;
    v13 = *(void **)(v3 + 72);
    v31 = v13;
    v14 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32);
    *v11 = v13;
    a1 = v12;
    v4 = v29;
    swift_release_n(v3, 2);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "HomePodSetupPreAuth: preAuth requested for session: %@", v10, 0xCu);
    v15 = sub_10000D604(&qword_1000D5CC8);
    swift_arrayDestroy(v11, 1, v15);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

    swift_release_n(v3, 2);
  }
  v16 = *(_QWORD *)(v3 + 96);
  *(_QWORD *)(v3 + 88) = a1;
  *(_QWORD *)(v3 + 96) = v4;
  swift_retain(v4);
  *(_QWORD *)&v17 = swift_release(v16).n128_u64[0];
  v18 = *(_QWORD *)(v3 + 24);
  if (!v18)
    goto LABEL_9;
  v19 = *(_QWORD *)(v3 + 16);
  v20 = *(_QWORD *)(v3 + 32);
  v21 = *(_QWORD *)(v3 + 40);
  v22 = *(_QWORD *)(v3 + 48);
  v23 = *(_QWORD *)(v3 + 56);
  v24 = *(_QWORD *)(v3 + 64);
  v31 = (void *)v19;
  v32 = v18;
  v33 = v20;
  v34 = v21;
  v35 = v22;
  v36 = v23;
  v37 = v24;
  if (*(_BYTE *)(v3 + 80) == 1)
  {
    v25 = (unsigned __int8 *)(v3 + 80);
    v26 = *(_QWORD *)(v3 + 96);
    v30 = *(void (**)(void **))(v3 + 88);
    sub_100012E14(v19, v18, v20, v21, v22, v23);
    swift_retain(v26);
    v30(&v31);
    sub_100012D4C(v19, v18, v20, v21, v22, v23);
    swift_release(v26);
  }
  else
  {
LABEL_9:
    v27 = *(void **)(v3 + 72);
    objc_msgSend(v27, "setPauseAfterPreAuth:", 1, v17, v29, v31, v32, v33, v34, v35, v36, v37);
    objc_msgSend(v27, "activate");
    v25 = (unsigned __int8 *)(v3 + 80);
  }
  return *v25;
}

uint64_t sub_100012104()
{
  uint64_t v0;

  sub_100012D4C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));

  swift_release(*(_QWORD *)(v0 + 96));
  return swift_deallocClassInstance(v0, 104, 7);
}

uint64_t type metadata accessor for HomePodSetupPreAuthFetcher()
{
  return objc_opt_self(_TtC14HDSViewService26HomePodSetupPreAuthFetcher);
}

_QWORD *initializeWithCopy for HomePodSetupPreAuthResponse(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

_QWORD *assignWithCopy for HomePodSetupPreAuthResponse(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  v8 = a2[5];
  v9 = a1[5];
  a1[5] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  a1[6] = a2[6];
  return a1;
}

__n128 initializeWithTake for HomePodSetupPreAuthResponse(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *assignWithTake for HomePodSetupPreAuthResponse(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease(v9);
  a1[6] = a2[6];
  return a1;
}

uint64_t getEnumTagSinglePayload for HomePodSetupPreAuthResponse(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HomePodSetupPreAuthResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HomePodSetupPreAuthResponse()
{
  return &type metadata for HomePodSetupPreAuthResponse;
}

void sub_100012370(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  unint64_t v26;
  uint8_t *v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  unint64_t v35;
  uint8_t *v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  unint64_t v44;
  uint8_t *v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  unint64_t v52;
  uint8_t *v53;
  uint8_t *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  uint64_t v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  uint8_t *v68;
  uint64_t *v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;

  if (*(_QWORD *)(a1 + 16)
    && (v4 = sub_10004A7C0(7238500, 0xE300000000000000), (v5 & 1) != 0)
    && (sub_10000DB98(*(_QWORD *)(a1 + 56) + 32 * v4, (uint64_t)&v77),
        swift_dynamicCast(&v74, &v77, (char *)&type metadata for Any + 8, &type metadata for String, 6)))
  {
    v6 = v75;
    v73 = v74;
  }
  else
  {
    v73 = 0;
    v6 = 0xE000000000000000;
  }
  v7 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain(v6);
  if (v7
    && (v8 = sub_10004A7C0(5137517, 0xE300000000000000), (v9 & 1) != 0)
    && (sub_10000DB98(*(_QWORD *)(a1 + 56) + 32 * v8, (uint64_t)&v77),
        swift_dynamicCast(&v74, &v77, (char *)&type metadata for Any + 8, &type metadata for String, 6)))
  {
    v10 = v75;
    v72 = v74;
  }
  else
  {
    v72 = 0;
    v10 = 0xE000000000000000;
  }
  v11 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain(v10);
  if (v11
    && (v12 = sub_10004A7C0(0x414D69666977, 0xE600000000000000), (v13 & 1) != 0)
    && (sub_10000DB98(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)&v77),
        swift_dynamicCast(&v74, &v77, (char *)&type metadata for Any + 8, &type metadata for String, 6)))
  {
    v15 = v74;
    v14 = v75;
    if (!*(_QWORD *)(a1 + 16))
    {
LABEL_15:
      v77 = 0u;
      v78 = 0u;
      swift_bridgeObjectRetain(v14);
      goto LABEL_20;
    }
  }
  else
  {
    v15 = 0;
    v14 = 0xE000000000000000;
    if (!*(_QWORD *)(a1 + 16))
      goto LABEL_15;
  }
  swift_bridgeObjectRetain(v14);
  v16 = sub_10004A7C0(26214, 0xE200000000000000);
  if ((v17 & 1) != 0)
  {
    sub_10000DB98(*(_QWORD *)(a1 + 56) + 32 * v16, (uint64_t)&v77);
  }
  else
  {
    v77 = 0u;
    v78 = 0u;
  }
LABEL_20:
  swift_bridgeObjectRelease(a1);
  if (*((_QWORD *)&v78 + 1))
  {
    if (swift_dynamicCast(&v74, &v77, (char *)&type metadata for Any + 8, &type metadata for UInt64, 6))
    {
      v19 = v74;
      goto LABEL_25;
    }
  }
  else
  {
    sub_10000DC40((uint64_t)&v77, &qword_1000D5820);
  }
  v19 = 0;
LABEL_25:
  v20 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0)
    v20 = v73 & 0xFFFFFFFFFFFFLL;
  if (!v20)
  {
    if (qword_1000D54F8 != -1)
      swift_once(&qword_1000D54F8, sub_100011400);
    v21 = type metadata accessor for Logger(0, v18);
    v22 = sub_10001118C(v21, (uint64_t)qword_1000D5BA0);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = v19;
      v26 = v14;
      v27 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "HomePodSetupPreAuthFetcher: No serial number returned from PreAuthorization call.", v27, 2u);
      v28 = v27;
      v14 = v26;
      v19 = v25;
      swift_slowDealloc(v28, -1, -1);
    }

  }
  v29 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v29 = v72 & 0xFFFFFFFFFFFFLL;
  if (!v29)
  {
    if (qword_1000D54F8 != -1)
      swift_once(&qword_1000D54F8, sub_100011400);
    v30 = type metadata accessor for Logger(0, v18);
    v31 = sub_10001118C(v30, (uint64_t)qword_1000D5BA0);
    v32 = Logger.logObject.getter(v31);
    v33 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = v19;
      v35 = v14;
      v36 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "HomePodSetupPreAuthFetcher: No model number returned from PreAuthorization call.", v36, 2u);
      v37 = v36;
      v14 = v35;
      v19 = v34;
      swift_slowDealloc(v37, -1, -1);
    }

  }
  v38 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0)
    v38 = v15 & 0xFFFFFFFFFFFFLL;
  if (v38)
  {
    if (v19)
      goto LABEL_56;
    goto LABEL_51;
  }
  if (qword_1000D54F8 != -1)
    swift_once(&qword_1000D54F8, sub_100011400);
  v39 = type metadata accessor for Logger(0, v18);
  v40 = sub_10001118C(v39, (uint64_t)qword_1000D5BA0);
  v41 = Logger.logObject.getter(v40);
  v42 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v41, v42))
  {
    v43 = v19;
    v44 = v14;
    v45 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v45 = 0;
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "HomePodSetupPreAuthFetcher: No model WiFi MAC address returned from PreAuthorization call.", v45, 2u);
    v46 = v45;
    v14 = v44;
    v19 = v43;
    swift_slowDealloc(v46, -1, -1);
  }

  if (!v19)
  {
LABEL_51:
    if (qword_1000D54F8 != -1)
      swift_once(&qword_1000D54F8, sub_100011400);
    v47 = type metadata accessor for Logger(0, v18);
    v48 = sub_10001118C(v47, (uint64_t)qword_1000D5BA0);
    v49 = Logger.logObject.getter(v48);
    v50 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = v19;
      v52 = v14;
      v53 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v53 = 0;
      _os_log_impl((void *)&_mh_execute_header, v49, v50, "HomePodSetupPreAuthFetcher: No featureFlags returned from PreAuthorization call.", v53, 2u);
      v54 = v53;
      v14 = v52;
      v19 = v51;
      swift_slowDealloc(v54, -1, -1);
    }

  }
LABEL_56:
  *(_QWORD *)&v77 = v73;
  *((_QWORD *)&v77 + 1) = v6;
  *(_QWORD *)&v78 = v72;
  *((_QWORD *)&v78 + 1) = v10;
  v71 = v15;
  v79 = v15;
  v80 = v14;
  v81 = v19;
  v55 = sub_100011490();
  v56 = v14;
  v57 = v55;
  v59 = v58;
  v70 = v56;
  swift_bridgeObjectRelease(v56);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v6);
  if (qword_1000D54F8 != -1)
    swift_once(&qword_1000D54F8, sub_100011400);
  v61 = type metadata accessor for Logger(0, v60);
  sub_10001118C(v61, (uint64_t)qword_1000D5BA0);
  v62 = swift_bridgeObjectRetain(v59);
  v63 = Logger.logObject.getter(v62);
  v65 = static os_log_type_t.default.getter(v63, v64);
  if (os_log_type_enabled(v63, v65))
  {
    v69 = a2;
    v66 = (uint8_t *)swift_slowAlloc(12, -1);
    v67 = swift_slowAlloc(32, -1);
    v74 = v67;
    *(_DWORD *)v66 = 136315138;
    swift_bridgeObjectRetain(v59);
    v76 = sub_10003EF58(v57, v59, &v74);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, &v77);
    swift_bridgeObjectRelease_n(v59, 3);
    _os_log_impl((void *)&_mh_execute_header, v63, v65, "HomePodSetupPreAuthFetcher: results=%s", v66, 0xCu);
    swift_arrayDestroy(v67, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v67, -1, -1);
    v68 = v66;
    a2 = v69;
    swift_slowDealloc(v68, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v59, 2);
  }
  *a2 = v73;
  a2[1] = v6;
  a2[2] = v72;
  a2[3] = v10;
  a2[4] = v71;
  a2[5] = v70;
  a2[6] = v19;
}

uint64_t sub_100012ABC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  _QWORD v6[5];
  uint64_t v7;

  *(_BYTE *)(v1 + 80) = 0;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_QWORD *)(v1 + 88) = nullsub_1;
  *(_QWORD *)(v1 + 96) = 0;
  *(_QWORD *)(v1 + 64) = 0;
  *(_QWORD *)(v1 + 72) = a1;
  v3 = swift_allocObject(&unk_1000C2DB8, 24, 7);
  swift_weakInit(v3 + 16, v1);
  v6[4] = sub_100012BC8;
  v7 = v3;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_10007C6B4;
  v6[3] = &unk_1000C2DD0;
  v4 = _Block_copy(v6);
  objc_msgSend(a1, "setPreAuthHandler:", v4, swift_release(v7).n128_f64[0]);
  _Block_release(v4);
  return v1;
}

uint64_t sub_100012BA4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100012BC8()
{
  uint64_t v0;

  return sub_10001177C(v0);
}

uint64_t sub_100012BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100012BE0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_100012BE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D7B50;
  if (!qword_1000D7B50)
  {
    v1 = objc_opt_self(OS_dispatch_queue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1000D7B50);
  }
  return result;
}

_QWORD *sub_100012C24()
{
  uint64_t v0;

  return sub_100011968(v0);
}

unint64_t sub_100012C2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D7CA0;
  if (!qword_1000D7CA0)
  {
    v1 = type metadata accessor for DispatchWorkItemFlags(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for DispatchWorkItemFlags, v1);
    atomic_store(result, (unint64_t *)&qword_1000D7CA0);
  }
  return result;
}

unint64_t sub_100012C74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D7CB0;
  if (!qword_1000D7CB0)
  {
    v1 = sub_100012CC0((uint64_t *)&unk_1000D7B60);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1000D7CB0);
  }
  return result;
}

uint64_t sub_100012CC0(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContextInMetadataState2(255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

_QWORD *sub_100012D04(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[3];
  v3 = a1[5];
  swift_bridgeObjectRetain(a1[1]);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t sub_100012D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a4);
    return swift_bridgeObjectRelease(a6);
  }
  return result;
}

_QWORD *sub_100012D88(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a1[3];
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t sub_100012DD0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for AnyHashable - 1) + 16))(a2, a1);
  return a2;
}

uint64_t sub_100012E0C(uint64_t a1)
{
  return swift_release(a1 & 0x7FFFFFFFFFFFFFFFLL);
}

uint64_t sub_100012E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(a4);
    return swift_bridgeObjectRetain(a6);
  }
  return result;
}

uint64_t sub_100012E58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000111E8(v2, qword_1000D5CD0);
  v3 = sub_10001118C(v2, (uint64_t)qword_1000D5CD0);
  if (qword_1000D55C0 != -1)
    swift_once(&qword_1000D55C0, sub_100058090);
  v4 = sub_10001118C(v2, (uint64_t)qword_1000DB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

id sub_100012EE8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC14HDSViewService36HomePodSetupDisclaimerViewController____lazy_storage___moreInfoButton;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC14HDSViewService36HomePodSetupDisclaimerViewController____lazy_storage___moreInfoButton);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC14HDSViewService36HomePodSetupDisclaimerViewController____lazy_storage___moreInfoButton);
  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_100012F64()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC14HDSViewService36HomePodSetupDisclaimerViewController____lazy_storage___disclaimerLabel;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC14HDSViewService36HomePodSetupDisclaimerViewController____lazy_storage___disclaimerLabel);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC14HDSViewService36HomePodSetupDisclaimerViewController____lazy_storage___disclaimerLabel);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)PRXLabel), "initWithStyle:", 3);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_100012FD8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char *v11;
  objc_class *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  NSString v30;
  NSString v31;
  id v32;
  NSString v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSString v38;
  NSString v39;
  NSString v40;
  NSString v41;
  id v42;
  id v43;
  id v44;
  char *v45;
  uint64_t v46;
  NSString v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  double v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  Class isa;
  uint64_t v101;
  int *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char v106[24];
  objc_super v107;

  v1 = v0;
  v2 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v2);
  v4 = (char *)&v101 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  v6 = *((_QWORD *)v5 - 1);
  v7 = __chkstk_darwin(v5);
  v9 = (uint64_t *)((char *)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  v11 = (char *)&v101 - v10;
  v12 = (objc_class *)type metadata accessor for HomePodSetupDisclaimerViewController(0);
  v107.receiver = v1;
  v107.super_class = v12;
  objc_msgSendSuper2(&v107, "viewDidLoad");
  v13 = (uint64_t)&v1[OBJC_IVAR____TtC14HDSViewService36HomePodSetupDisclaimerViewController_viewModel];
  swift_beginAccess(&v1[OBJC_IVAR____TtC14HDSViewService36HomePodSetupDisclaimerViewController_viewModel], v106, 0, 0);
  sub_100014824(v13, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v6 + 48))(v4, 1, v5) != 1)
  {
    sub_1000148AC((uint64_t)v4, (uint64_t)v11);
    if (qword_1000D5500 != -1)
      swift_once(&qword_1000D5500, sub_100012E58);
    v21 = type metadata accessor for Logger(0, v20);
    sub_10001118C(v21, (uint64_t)qword_1000D5CD0);
    v22 = sub_1000111A4((uint64_t)v11, (uint64_t)v9);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.default.getter();
    v25 = os_log_type_enabled(v23, v24);
    v103 = v11;
    if (v25)
    {
      v26 = (uint8_t *)swift_slowAlloc(12, -1);
      v27 = swift_slowAlloc(32, -1);
      v105 = v27;
      *(_DWORD *)v26 = 136315138;
      v102 = v5;
      v28 = *v9;
      v29 = v9[1];
      swift_bridgeObjectRetain(v29);
      v104 = sub_10003EF58(v28, v29, &v105);
      v5 = v102;
      v11 = v103;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, &v105);
      swift_bridgeObjectRelease(v29);
      sub_1000148F0((uint64_t)v9);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "HomePodSetupDisclaimer: viewDidLoad with title %s", v26, 0xCu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v26, -1, -1);
    }
    else
    {
      sub_1000148F0((uint64_t)v9);
    }

    v30 = String._bridgeToObjectiveC()();
    objc_msgSend(v1, "setTitle:", v30);

    v31 = String._bridgeToObjectiveC()();
    objc_msgSend(v1, "setSubtitle:", v31);

    v32 = sub_100012F64();
    v33 = String._bridgeToObjectiveC()();
    objc_msgSend(v32, "setText:", v33);

    v34 = v5[18];
    objc_msgSend(v1, "setDismissalType:", *(_QWORD *)&v11[v34]);
    v35 = *(_QWORD *)&v11[v5[10]];
    v36 = swift_allocObject(&unk_1000C2E90, 24, 7);
    swift_unknownObjectWeakInit(v36 + 16, v1);
    v37 = swift_bridgeObjectRetain(v35);
    sub_10007E6FC(v37, (uint64_t)sub_10001492C, v36);
    swift_bridgeObjectRelease(v35);
    swift_release(v36);
    if ((v11[v34] & 2) == 0 && *(_QWORD *)&v11[v5[19] + 8])
    {
      v38 = String._bridgeToObjectiveC()();
      v39 = String._bridgeToObjectiveC()();
      v40 = String._bridgeToObjectiveC()();
      v41 = String._bridgeToObjectiveC()();
      v42 = objc_msgSend(v1, "dismissalConfirmationActionWithTitle:message:confirmButtonTitle:cancelButtonTitle:", v38, v39, v40, v41);

      objc_msgSend(v1, "setDismissButtonAction:", v42);
    }
    v43 = sub_100012EE8();
    objc_msgSend(v43, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

    v44 = sub_100012EE8();
    v45 = &v11[v5[23]];
    v46 = *((_QWORD *)v45 + 1);
    if (v46)
    {
      swift_bridgeObjectRetain(*((_QWORD *)v45 + 1));
      v47 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v46);
    }
    else
    {
      v47 = 0;
    }
    objc_msgSend(v44, "setTitle:forState:", v47, 0);

    v48 = sub_100012EE8();
    objc_msgSend(v48, "addTarget:action:forControlEvents:", v1, "moreInfoButtonTapped:", 0x2000);

    v49 = sub_100012EE8();
    v50 = objc_msgSend(v49, "titleLabel");

    if (v50)
    {
      v51 = objc_msgSend((id)objc_opt_self(UIFontDescriptor), "preferredFontDescriptorWithTextStyle:", UIFontTextStyleFootnote);
      v52 = objc_msgSend(v51, "fontDescriptorWithSymbolicTraits:", 2);

      if (!v52)
      {
        __break(1u);
        return;
      }
      v53 = v52;
      objc_msgSend(v53, "pointSize");
      v55 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v53, v54);

      objc_msgSend(v50, "setFont:", v55);
      objc_msgSend(v50, "setAdjustsFontForContentSizeCategory:", 1);
      objc_msgSend(v50, "setNumberOfLines:", 0);

    }
    v56 = objc_msgSend(v1, "contentView");
    v57 = sub_100012EE8();
    objc_msgSend(v56, "addSubview:", v57);

    v58 = sub_100012F64();
    objc_msgSend(v58, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

    v59 = objc_msgSend(v1, "contentView");
    v60 = sub_100012F64();
    objc_msgSend(v59, "addSubview:", v60);

    v61 = objc_msgSend(v1, "contentView");
    v62 = objc_msgSend(v61, "mainContentGuide");

    v102 = (int *)objc_opt_self(NSLayoutConstraint);
    v63 = sub_10000D604(&qword_1000D6EE0);
    v64 = swift_allocObject(v63, 96, 7);
    *(_OWORD *)(v64 + 16) = xmmword_100099170;
    v65 = sub_100012F64();
    v66 = objc_msgSend(v65, "topAnchor");

    v67 = objc_msgSend(v62, "topAnchor");
    v68 = objc_msgSend(v66, "constraintEqualToAnchor:", v67);

    *(_QWORD *)(v64 + 32) = v68;
    v69 = sub_100012F64();
    v70 = objc_msgSend(v69, "leadingAnchor");

    v71 = objc_msgSend(v62, "leadingAnchor");
    v72 = objc_msgSend(v70, "constraintEqualToAnchor:", v71);

    *(_QWORD *)(v64 + 40) = v72;
    v73 = sub_100012F64();
    v74 = objc_msgSend(v73, "trailingAnchor");

    v75 = objc_msgSend(v62, "trailingAnchor");
    v76 = objc_msgSend(v74, "constraintEqualToAnchor:", v75);

    *(_QWORD *)(v64 + 48) = v76;
    v77 = sub_100012EE8();
    v78 = objc_msgSend(v77, "topAnchor");

    v79 = sub_100012F64();
    v80 = objc_msgSend(v79, "bottomAnchor");

    v81 = objc_msgSend(v78, "constraintEqualToAnchor:constant:", v80, 8.0);
    *(_QWORD *)(v64 + 56) = v81;
    v82 = sub_100012EE8();
    v83 = objc_msgSend(v82, "leadingAnchor");

    v84 = objc_msgSend(v62, "leadingAnchor");
    v85 = objc_msgSend(v83, "constraintGreaterThanOrEqualToAnchor:", v84);

    *(_QWORD *)(v64 + 64) = v85;
    v86 = sub_100012EE8();
    v87 = objc_msgSend(v86, "trailingAnchor");

    v88 = objc_msgSend(v62, "trailingAnchor");
    v89 = objc_msgSend(v87, "constraintLessThanOrEqualToAnchor:", v88);

    *(_QWORD *)(v64 + 72) = v89;
    v90 = sub_100012EE8();
    v91 = objc_msgSend(v90, "centerXAnchor");

    v92 = objc_msgSend(v62, "centerXAnchor");
    v93 = objc_msgSend(v91, "constraintEqualToAnchor:", v92);

    *(_QWORD *)(v64 + 80) = v93;
    v94 = sub_100012EE8();
    v95 = objc_msgSend(v94, "bottomAnchor");

    v96 = objc_msgSend(v62, "bottomAnchor");
    v97 = objc_msgSend(v95, "constraintEqualToAnchor:", v96);

    *(_QWORD *)(v64 + 88) = v97;
    v105 = v64;
    specialized Array._endMutation()(v98);
    v99 = v105;
    sub_100014934();
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v99);
    objc_msgSend(v102, "activateConstraints:", isa);

    sub_1000148F0((uint64_t)v103);
    return;
  }
  sub_10001486C((uint64_t)v4);
  if (qword_1000D5500 != -1)
    swift_once(&qword_1000D5500, sub_100012E58);
  v15 = type metadata accessor for Logger(0, v14);
  v16 = sub_10001118C(v15, (uint64_t)qword_1000D5CD0);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "HomePodSetupDisclaimer: viewDidLoad failed because viewModel not set.", v19, 2u);
    swift_slowDealloc(v19, -1, -1);
  }

}

void sub_100013B50(unsigned __int8 *a1, uint64_t a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t Strong;
  void *v14;
  uint64_t v15;
  _BYTE v16[48];
  _OWORD v17[2];
  uint64_t v18;
  _OWORD v19[3];
  _BYTE v20[24];

  v2 = *a1;
  v3 = a2 + 16;
  if (qword_1000D5500 != -1)
    swift_once(&qword_1000D5500, sub_100012E58);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10001118C(v4, (uint64_t)qword_1000D5CD0);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v19[0] = v9;
    *(_DWORD *)v8 = 136315138;
    v10 = sub_10000E9EC(v2);
    v12 = v11;
    *(_QWORD *)v16 = sub_10003EF58(v10, v11, (uint64_t *)v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v16, &v16[8]);
    swift_bridgeObjectRelease(v12);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "HomePodSetupDisclaimer: User tapped on button: %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }

  swift_beginAccess(v3, v20, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v14 = (void *)Strong;
    v15 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC14HDSViewService36HomePodSetupDisclaimerViewController_presenter);

    if (v15)
    {
      v18 = 0;
      memset(v17, 0, sizeof(v17));
      memset(&v16[8], 0, 40);
      v16[0] = v2;
      sub_100011340((uint64_t)v17, (uint64_t)&v16[8], &qword_1000D6ED0);
      v19[0] = *(_OWORD *)v16;
      v19[1] = *(_OWORD *)&v16[16];
      v19[2] = *(_OWORD *)&v16[32];
      sub_10006B04C((char *)v19);
      swift_unknownObjectRelease(v15);
      sub_100011384((uint64_t)v19);
    }
  }
}

void sub_100013E28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  NSObject *oslog;

  if (qword_1000D5500 != -1)
    swift_once(&qword_1000D5500, sub_100012E58);
  v2 = type metadata accessor for Logger(0, a2);
  v3 = sub_10001118C(v2, (uint64_t)qword_1000D5CD0);
  oslog = Logger.logObject.getter(v3);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v4, "HomePodSetupDisclaimer: termsManager loaded handler was called", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }

}

uint64_t sub_100013EF4(char a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t Strong;
  void *v15;
  uint64_t v16;
  uint64_t v18;
  _BYTE v19[48];
  _OWORD v20[2];
  uint64_t v21;
  _OWORD v22[3];

  v21 = 0;
  v2 = a2 + 16;
  memset(v20, 0, sizeof(v20));
  if ((a1 & 1) != 0)
    v3 = 8;
  else
    v3 = 9;
  memset(&v19[8], 0, 40);
  v19[0] = v3;
  sub_100011340((uint64_t)v20, (uint64_t)&v19[8], &qword_1000D6ED0);
  v22[0] = *(_OWORD *)v19;
  v22[1] = *(_OWORD *)&v19[16];
  v22[2] = *(_OWORD *)&v19[32];
  if (qword_1000D5500 != -1)
    swift_once(&qword_1000D5500, sub_100012E58);
  v5 = type metadata accessor for Logger(0, v4);
  sub_10001118C(v5, (uint64_t)qword_1000D5CD0);
  v6 = sub_1000147E8((char *)v22, (uint64_t)v19);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v20[0] = v10;
    *(_DWORD *)v9 = 136315138;
    v11 = sub_10000B764();
    v13 = v12;
    v18 = sub_10003EF58(v11, v12, (uint64_t *)v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, v19);
    swift_bridgeObjectRelease(v13);
    sub_100011384((uint64_t)v19);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "HomePodSetupDisclaimer: termsManager completion handler was called so selecting the %s button.", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    sub_100011384((uint64_t)v19);
  }

  swift_beginAccess(v2, v19, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v15 = (void *)Strong;
    v16 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC14HDSViewService36HomePodSetupDisclaimerViewController_presenter);

    if (v16)
    {
      sub_10006B04C((char *)v22);
      swift_unknownObjectRelease(v16);
    }
  }
  return sub_100011384((uint64_t)v22);
}

id sub_100014178(uint64_t a1)
{
  void *v1;
  NSString v3;
  NSString v4;
  id v5;
  uint64_t v6;
  NSString v7;

  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setTitle:", v3);

  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setSubtitle:", v4);

  v5 = sub_100012F64();
  v6 = type metadata accessor for HomePodSetupViewModel(0);
  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "setText:", v7);

  return objc_msgSend(v1, "setDismissalType:", *(_QWORD *)(a1 + *(int *)(v6 + 72)));
}

id sub_100014304()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupDisclaimerViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000143A0()
{
  return type metadata accessor for HomePodSetupDisclaimerViewController(0);
}

uint64_t type metadata accessor for HomePodSetupDisclaimerViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1000D5D28;
  if (!qword_1000D5D28)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HomePodSetupDisclaimerViewController);
  return result;
}

void sub_1000143E4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_1000991A8;
  sub_100010910(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_1000991C0;
    v4[3] = &unk_1000991C0;
    v4[4] = &unk_1000991C0;
    swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
  }
}

uint64_t sub_100014468(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService36HomePodSetupDisclaimerViewController_presenter + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease(a1);
}

id sub_1000144A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000145FC(a3);
}

void sub_1000144A8()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void **v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;

  v1 = objc_msgSend(objc_allocWithZone((Class)SFTermsAndConditionsManager), "initWithPresenter:showWarranty:", v0, 1);
  v10 = sub_100013E28;
  v11 = 0;
  v6 = _NSConcreteStackBlock;
  v7 = 1107296256;
  v8 = sub_10007C6B4;
  v9 = &unk_1000C2E58;
  v2 = _Block_copy(&v6);
  objc_msgSend(v1, "setLoadedHandler:", v2);
  _Block_release(v2);
  v3 = swift_allocObject(&unk_1000C2E90, 24, 7);
  swift_unknownObjectWeakInit(v3 + 16, v0);
  v10 = sub_1000147E0;
  v11 = v3;
  v6 = _NSConcreteStackBlock;
  v7 = 1107296256;
  v8 = sub_100084D9C;
  v9 = &unk_1000C2EA8;
  v4 = _Block_copy(&v6);
  swift_release(v11);
  objc_msgSend(v1, "setCompletionHandler:", v4);
  _Block_release(v4);
  objc_msgSend(v1, "activate");
  v5 = *(void **)(v0 + OBJC_IVAR____TtC14HDSViewService36HomePodSetupDisclaimerViewController_termsManager);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC14HDSViewService36HomePodSetupDisclaimerViewController_termsManager) = v1;

}

id sub_1000145FC(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  id result;
  _BYTE v17[24];

  v2 = v1;
  v4 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v4);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_1000D5500 != -1)
    swift_once(&qword_1000D5500, sub_100012E58);
  v8 = type metadata accessor for Logger(0, v5);
  v9 = sub_10001118C(v8, (uint64_t)qword_1000D5CD0);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "HomePodSetupDisclaimer: presenter:didUpdate viewModel", v12, 2u);
    swift_slowDealloc(v12, -1, -1);
  }

  sub_1000111A4(a1, (uint64_t)v7);
  v13 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v7, 0, 1, v13);
  v14 = (uint64_t)&v2[OBJC_IVAR____TtC14HDSViewService36HomePodSetupDisclaimerViewController_viewModel];
  swift_beginAccess(&v2[OBJC_IVAR____TtC14HDSViewService36HomePodSetupDisclaimerViewController_viewModel], v17, 33, 0);
  sub_100011340((uint64_t)v7, v14, (uint64_t *)&unk_1000D6EC0);
  swift_endAccess(v17);
  result = objc_msgSend(v2, "isViewLoaded");
  if ((_DWORD)result)
    return sub_100014178(a1);
  return result;
}

uint64_t sub_1000147A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000147B4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000147BC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000147E0(char a1)
{
  uint64_t v1;

  return sub_100013EF4(a1, v1);
}

uint64_t sub_1000147E8(char *a1, uint64_t a2)
{
  initializeWithCopy for HomePodSetupStepResult(a2, a1);
  return a2;
}

uint64_t sub_100014824(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001486C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000148AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000148F0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10001492C(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_100013B50(a1, v1);
}

unint64_t sub_100014934()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D7080;
  if (!qword_1000D7080)
  {
    v1 = objc_opt_self(NSLayoutConstraint);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1000D7080);
  }
  return result;
}

void sub_100014978()
{
  qword_1000D5D38 = 0x4044000000000000;
}

void sub_100014988()
{
  qword_1000D5D40 = 0x4028000000000000;
}

void sub_100014998()
{
  qword_1000D5D48 = 0x4010000000000000;
}

char *sub_1000149A8(void *a1)
{
  char *v1;
  id v3;
  char *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  char *v9;
  uint64_t v10;
  void *v11;
  char *v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  NSString v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  NSString v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  Class isa;
  id v69;
  void *v70;
  objc_super v71;

  *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService23HomePodSetupFeatureView_feature] = a1;
  v3 = objc_allocWithZone((Class)PRXImageView);
  v4 = v1;
  v5 = a1;
  v6 = objc_msgSend(v3, "initWithStyle:", 1);
  *(_QWORD *)&v4[OBJC_IVAR____TtC14HDSViewService23HomePodSetupFeatureView_iconView] = v6;
  v7 = objc_msgSend(objc_allocWithZone((Class)PRXLabel), "initWithStyle:", 4);
  *(_QWORD *)&v4[OBJC_IVAR____TtC14HDSViewService23HomePodSetupFeatureView_titleLabel] = v7;
  v8 = objc_msgSend(objc_allocWithZone((Class)PRXLabel), "initWithStyle:", 5);
  *(_QWORD *)&v4[OBJC_IVAR____TtC14HDSViewService23HomePodSetupFeatureView_subTitleLabel] = v8;

  v71.receiver = v4;
  v71.super_class = (Class)type metadata accessor for HomePodSetupFeatureView();
  v9 = (char *)objc_msgSendSuper2(&v71, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v10 = OBJC_IVAR____TtC14HDSViewService23HomePodSetupFeatureView_iconView;
  v11 = *(void **)&v9[OBJC_IVAR____TtC14HDSViewService23HomePodSetupFeatureView_iconView];
  v12 = v9;
  v13 = v11;
  v14 = objc_msgSend(v5, "icon");
  objc_msgSend(v13, "setImage:", v14);

  v15 = OBJC_IVAR____TtC14HDSViewService23HomePodSetupFeatureView_titleLabel;
  v16 = v5;
  v17 = *(id *)&v12[OBJC_IVAR____TtC14HDSViewService23HomePodSetupFeatureView_titleLabel];
  v18 = objc_msgSend(v5, "title");
  if (!v18)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v20 = v19;
    v18 = String._bridgeToObjectiveC()();
    v21 = v20;
    v16 = v5;
    swift_bridgeObjectRelease(v21);
  }
  objc_msgSend(v17, "setText:", v18);

  v22 = OBJC_IVAR____TtC14HDSViewService23HomePodSetupFeatureView_subTitleLabel;
  v23 = *(id *)&v12[OBJC_IVAR____TtC14HDSViewService23HomePodSetupFeatureView_subTitleLabel];
  v70 = v16;
  v24 = objc_msgSend(v16, "detailText");
  if (!v24)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v26 = v25;
    v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v26);
  }
  objc_msgSend(v23, "setText:", v24);

  v27 = *(void **)&v12[v15];
  objc_msgSend(v27, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v28 = *(void **)&v12[v22];
  objc_msgSend(v28, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v29 = *(void **)&v9[v10];
  objc_msgSend(v29, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v12, "addSubview:", v29);
  objc_msgSend(v12, "addSubview:", v27);
  objc_msgSend(v12, "addSubview:", v28);
  v69 = (id)objc_opt_self(NSLayoutConstraint);
  v30 = sub_10000D604(&qword_1000D6EE0);
  v31 = swift_allocObject(v30, 128, 7);
  *(_OWORD *)(v31 + 16) = xmmword_1000991F0;
  v32 = objc_msgSend(v29, "topAnchor");
  v33 = objc_msgSend(v12, "topAnchor");
  v34 = objc_msgSend(v32, "constraintEqualToAnchor:", v33);

  *(_QWORD *)(v31 + 32) = v34;
  v35 = objc_msgSend(*(id *)&v9[v10], "leadingAnchor");
  v36 = objc_msgSend(v12, "leadingAnchor");
  v37 = objc_msgSend(v35, "constraintEqualToAnchor:", v36);

  *(_QWORD *)(v31 + 40) = v37;
  v38 = objc_msgSend(*(id *)&v9[v10], "bottomAnchor");
  v39 = objc_msgSend(v12, "bottomAnchor");
  v40 = objc_msgSend(v38, "constraintLessThanOrEqualToAnchor:", v39);

  *(_QWORD *)(v31 + 48) = v40;
  v41 = objc_msgSend(*(id *)&v9[v10], "heightAnchor");
  if (qword_1000D5508 != -1)
    swift_once(&qword_1000D5508, sub_100014978);
  v42 = objc_msgSend(v41, "constraintEqualToConstant:", *(double *)&qword_1000D5D38);

  *(_QWORD *)(v31 + 56) = v42;
  v43 = objc_msgSend(*(id *)&v9[v10], "widthAnchor");
  v44 = objc_msgSend(v43, "constraintEqualToConstant:", *(double *)&qword_1000D5D38);

  *(_QWORD *)(v31 + 64) = v44;
  v45 = objc_msgSend(*(id *)&v12[v15], "topAnchor");
  v46 = objc_msgSend(v12, "topAnchor");
  v47 = objc_msgSend(v45, "constraintEqualToAnchor:", v46);

  *(_QWORD *)(v31 + 72) = v47;
  v48 = objc_msgSend(*(id *)&v12[v15], "leadingAnchor");
  v49 = objc_msgSend(*(id *)&v9[v10], "trailingAnchor");
  if (qword_1000D5510 != -1)
    swift_once(&qword_1000D5510, sub_100014988);
  v50 = objc_msgSend(v48, "constraintEqualToAnchor:constant:", v49, *(double *)&qword_1000D5D40);

  *(_QWORD *)(v31 + 80) = v50;
  v51 = objc_msgSend(*(id *)&v12[v15], "trailingAnchor");
  v52 = objc_msgSend(v12, "trailingAnchor");
  v53 = objc_msgSend(v51, "constraintEqualToAnchor:", v52);

  *(_QWORD *)(v31 + 88) = v53;
  v54 = objc_msgSend(*(id *)&v12[v22], "topAnchor");
  v55 = objc_msgSend(*(id *)&v12[v15], "bottomAnchor");
  if (qword_1000D5518 != -1)
    swift_once(&qword_1000D5518, sub_100014998);
  v56 = objc_msgSend(v54, "constraintEqualToAnchor:constant:", v55, *(double *)&qword_1000D5D48);

  *(_QWORD *)(v31 + 96) = v56;
  v57 = objc_msgSend(*(id *)&v12[v22], "leadingAnchor");
  v58 = objc_msgSend(*(id *)&v12[v15], "leadingAnchor");
  v59 = objc_msgSend(v57, "constraintEqualToAnchor:", v58);

  *(_QWORD *)(v31 + 104) = v59;
  v60 = objc_msgSend(*(id *)&v12[v22], "trailingAnchor");
  v61 = objc_msgSend(*(id *)&v12[v15], "trailingAnchor");
  v62 = objc_msgSend(v60, "constraintEqualToAnchor:", v61);

  *(_QWORD *)(v31 + 112) = v62;
  v63 = objc_msgSend(*(id *)&v12[v22], "bottomAnchor");
  v64 = objc_msgSend(v12, "bottomAnchor");
  v65 = objc_msgSend(v63, "constraintLessThanOrEqualToAnchor:", v64);

  *(_QWORD *)(v31 + 120) = v65;
  specialized Array._endMutation()(v66);
  sub_100014934();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v31);
  objc_msgSend(v69, "activateConstraints:", isa);

  return v12;
}

id sub_100015214()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupFeatureView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for HomePodSetupFeatureView()
{
  return objc_opt_self(_TtC14HDSViewService23HomePodSetupFeatureView);
}

void **sub_1000152BC(void **a1, void **a2, uint64_t a3)
{
  int v3;
  char *v4;
  void **v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  char *v12;
  uint64_t v13;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain(v4);
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for URL(0);
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    v12 = v4;
    if (v11(v8, 1, v9))
    {
      v13 = sub_10000D604(&qword_1000D5DB8);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v5;
}

uint64_t sub_1000153AC(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

void **sub_100015428(void **a1, void **a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(char *, uint64_t, uint64_t);
  id v11;
  uint64_t v12;

  v4 = *a2;
  *a1 = *a2;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  v11 = v4;
  if (v10(v7, 1, v8))
  {
    v12 = sub_10000D604(&qword_1000D5DB8);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void **sub_1000154F0(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = *(int *)(a3 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = sub_10000D604(&qword_1000D5DB8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

_QWORD *sub_10001560C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = sub_10000D604(&qword_1000D5DB8);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void **sub_1000156C8(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = *a1;
  *a1 = *a2;

  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = sub_10000D604(&qword_1000D5DB8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1000157E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000157EC);
}

uint64_t sub_1000157EC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_10000D604(&qword_1000D5DB8);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_10001586C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100015878);
}

char *sub_100015878(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_10000D604(&qword_1000D5DB8);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for AdjustedImage(uint64_t a1)
{
  return sub_100019130(a1, (uint64_t *)&unk_1000D5E18, (uint64_t)&nominal type descriptor for AdjustedImage);
}

void sub_100015904(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_1000192F4(319, (unint64_t *)&unk_1000D5E28, (uint64_t (*)(uint64_t))&type metadata accessor for URL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

_QWORD *sub_10001598C(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  int *v12;
  uint64_t v13;
  unsigned int (*v14)(_QWORD *, uint64_t, int *);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int (*v94)(char *, uint64_t, uint64_t);
  id v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  unsigned int (*v103)(char *, uint64_t, uint64_t);
  id v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  _QWORD *v122;
  uint64_t v123;
  void **v124;
  void **v125;
  uint64_t v126;
  uint64_t v127;
  unsigned int (*v128)(void **, uint64_t, uint64_t);
  uint64_t v129;
  void *v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  unsigned int (*v136)(char *, uint64_t, uint64_t);
  id v137;
  uint64_t v138;
  uint64_t v139;
  void **v140;
  void **v141;
  uint64_t v142;
  uint64_t v143;
  void *v144;
  uint64_t v145;
  char *v146;
  char *v147;
  id v148;
  uint64_t v149;
  uint64_t v150;
  void *v151;
  void (*v152)(void **, _QWORD, uint64_t, uint64_t);
  id v153;
  uint64_t v155;
  unsigned int (*v156)(char *, uint64_t, uint64_t);
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *__dsta;
  void **__dst;
  char *v162;
  uint64_t v163;
  void **v164;
  uint64_t v165;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v12 = (int *)type metadata accessor for AdjustedMovie(0);
    v13 = *((_QWORD *)v12 - 1);
    v14 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v13 + 48);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    if (v14(v11, 1, v12))
    {
      v15 = sub_10000D604(&qword_1000D5E58);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v17 = v11[1];
      *v10 = *v11;
      v10[1] = v17;
      v18 = v12[5];
      __dsta = (char *)v11 + v18;
      v162 = (char *)v10 + v18;
      v19 = type metadata accessor for URL(0);
      v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      swift_bridgeObjectRetain(v17);
      v20(v162, __dsta, v19);
      *(_QWORD *)((char *)v10 + v12[6]) = *(_QWORD *)((char *)v11 + v12[6]);
      *(_QWORD *)((char *)v10 + v12[7]) = *(_QWORD *)((char *)v11 + v12[7]);
      *(_QWORD *)((char *)v10 + v12[8]) = *(_QWORD *)((char *)v11 + v12[8]);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
    }
    v21 = a3[7];
    v22 = a3[8];
    v23 = (_QWORD *)((char *)v4 + v21);
    v24 = (_QWORD *)((char *)a2 + v21);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = (_QWORD *)((char *)v4 + v22);
    v27 = (_QWORD *)((char *)a2 + v22);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = a3[9];
    v30 = a3[10];
    v31 = (_QWORD *)((char *)v4 + v29);
    v32 = (_QWORD *)((char *)a2 + v29);
    v33 = v32[1];
    *v31 = *v32;
    v31[1] = v33;
    v34 = *(_QWORD *)((char *)a2 + v30);
    *(_QWORD *)((char *)v4 + v30) = v34;
    v35 = a3[11];
    v36 = a3[12];
    v37 = *(_QWORD *)((char *)a2 + v35);
    *(_QWORD *)((char *)v4 + v35) = v37;
    v163 = *(_QWORD *)((char *)a2 + v36);
    *(_QWORD *)((char *)v4 + v36) = v163;
    v38 = a3[13];
    v39 = (char *)v4 + v38;
    v40 = (char *)a2 + v38;
    v41 = *(_QWORD *)((char *)a2 + v38 + 24);
    swift_bridgeObjectRetain(v25);
    swift_bridgeObjectRetain(v28);
    swift_bridgeObjectRetain(v33);
    swift_bridgeObjectRetain(v34);
    swift_bridgeObjectRetain(v37);
    swift_bridgeObjectRetain(v163);
    if (v41)
    {
      v42 = *((_QWORD *)v40 + 4);
      *((_QWORD *)v39 + 3) = v41;
      *((_QWORD *)v39 + 4) = v42;
      (**(void (***)(char *, char *, uint64_t))(v41 - 8))(v39, v40, v41);
    }
    else
    {
      v43 = *((_OWORD *)v40 + 1);
      *(_OWORD *)v39 = *(_OWORD *)v40;
      *((_OWORD *)v39 + 1) = v43;
      *((_QWORD *)v39 + 4) = *((_QWORD *)v40 + 4);
    }
    v44 = a3[14];
    v45 = a3[15];
    v46 = *(_QWORD *)((char *)a2 + v44);
    *(_QWORD *)((char *)v4 + v44) = v46;
    v47 = *(_QWORD *)((char *)a2 + v45);
    *(_QWORD *)((char *)v4 + v45) = v47;
    v48 = a3[17];
    *((_BYTE *)v4 + a3[16]) = *((_BYTE *)a2 + a3[16]);
    v49 = (char *)v4 + v48;
    v50 = (char *)a2 + v48;
    *(_DWORD *)v49 = *(_DWORD *)v50;
    v51 = a3[18];
    v52 = a3[19];
    v53 = *(_QWORD *)((char *)a2 + v51);
    v49[4] = v50[4];
    *(_QWORD *)((char *)v4 + v51) = v53;
    v54 = (_QWORD *)((char *)v4 + v52);
    v55 = (_QWORD *)((char *)a2 + v52);
    v56 = *(_QWORD *)((char *)a2 + v52 + 8);
    swift_bridgeObjectRetain(v46);
    swift_bridgeObjectRetain(v47);
    if (v56)
    {
      *v54 = *v55;
      v54[1] = v56;
      v57 = v55[3];
      v54[2] = v55[2];
      v54[3] = v57;
      v58 = v55[5];
      v54[4] = v55[4];
      v54[5] = v58;
      v59 = v55[7];
      v54[6] = v55[6];
      v54[7] = v59;
      v60 = v55[8];
      v61 = v55[9];
      v54[8] = v60;
      v54[9] = v61;
      swift_bridgeObjectRetain(v56);
      swift_bridgeObjectRetain(v57);
      swift_bridgeObjectRetain(v58);
      swift_bridgeObjectRetain(v59);
      swift_bridgeObjectRetain(v61);
    }
    else
    {
      v62 = *((_OWORD *)v55 + 3);
      *((_OWORD *)v54 + 2) = *((_OWORD *)v55 + 2);
      *((_OWORD *)v54 + 3) = v62;
      *((_OWORD *)v54 + 4) = *((_OWORD *)v55 + 4);
      v63 = *((_OWORD *)v55 + 1);
      *(_OWORD *)v54 = *(_OWORD *)v55;
      *((_OWORD *)v54 + 1) = v63;
    }
    v64 = a3[20];
    v65 = (_QWORD *)((char *)v4 + v64);
    v66 = (_QWORD *)((char *)a2 + v64);
    v67 = v66[1];
    if (v67)
    {
      *v65 = *v66;
      v65[1] = v67;
      v68 = v66[3];
      v65[2] = v66[2];
      v65[3] = v68;
      v69 = v66[5];
      v65[4] = v66[4];
      v65[5] = v69;
      v70 = v66[7];
      v65[6] = v66[6];
      v65[7] = v70;
      v71 = v66[9];
      v65[8] = v66[8];
      v65[9] = v71;
      swift_bridgeObjectRetain(v67);
      swift_bridgeObjectRetain(v68);
      swift_bridgeObjectRetain(v69);
      swift_bridgeObjectRetain(v70);
      swift_bridgeObjectRetain(v71);
    }
    else
    {
      v72 = *((_OWORD *)v66 + 3);
      *((_OWORD *)v65 + 2) = *((_OWORD *)v66 + 2);
      *((_OWORD *)v65 + 3) = v72;
      *((_OWORD *)v65 + 4) = *((_OWORD *)v66 + 4);
      v73 = *((_OWORD *)v66 + 1);
      *(_OWORD *)v65 = *(_OWORD *)v66;
      *((_OWORD *)v65 + 1) = v73;
    }
    v74 = a3[21];
    v75 = a3[22];
    v76 = *(_QWORD *)((char *)a2 + v74);
    *(_QWORD *)((char *)v4 + v74) = v76;
    v77 = *(void **)((char *)a2 + v75);
    *(_QWORD *)((char *)v4 + v75) = v77;
    v78 = a3[23];
    v79 = a3[24];
    v80 = (_QWORD *)((char *)v4 + v78);
    v81 = (_QWORD *)((char *)a2 + v78);
    v82 = v81[1];
    *v80 = *v81;
    v80[1] = v82;
    v83 = (_QWORD *)((char *)v4 + v79);
    v84 = (_QWORD *)((char *)a2 + v79);
    v85 = v84[1];
    *v83 = *v84;
    v83[1] = v85;
    v86 = a3[25];
    v87 = a3[26];
    v88 = (_QWORD *)((char *)v4 + v86);
    v89 = (_QWORD *)((char *)a2 + v86);
    v90 = *v89;
    v91 = v89[1];
    LOBYTE(v89) = *((_BYTE *)a2 + v87);
    *v88 = v90;
    v88[1] = v91;
    *((_BYTE *)v4 + v87) = (_BYTE)v89;
    v92 = a3[27];
    __dst = (void **)((char *)v4 + v92);
    v164 = (void **)((char *)a2 + v92);
    v93 = type metadata accessor for AdjustedImage(0);
    v157 = *(_QWORD *)(v93 - 8);
    v94 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v157 + 48);
    swift_bridgeObjectRetain(v76);
    v95 = v77;
    swift_bridgeObjectRetain(v82);
    swift_bridgeObjectRetain(v85);
    swift_bridgeObjectRetain(v91);
    v156 = v94;
    if (v94((char *)v164, 1, v93))
    {
      v96 = sub_10000D604(&qword_1000D5E60);
      memcpy(__dst, v164, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
    }
    else
    {
      v97 = *v164;
      *__dst = *v164;
      v158 = v93;
      v98 = *(int *)(v93 + 20);
      v99 = (char *)__dst + v98;
      v100 = (char *)v164 + v98;
      v101 = type metadata accessor for URL(0);
      v102 = *(_QWORD *)(v101 - 8);
      v103 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48);
      v104 = v97;
      if (v103(v100, 1, v101))
      {
        v105 = sub_10000D604(&qword_1000D5DB8);
        memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v99, v100, v101);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v102 + 56))(v99, 0, 1, v101);
      }
      v93 = v158;
      (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v157 + 56))(__dst, 0, 1, v158);
    }
    v106 = a3[29];
    *((_BYTE *)v4 + a3[28]) = *((_BYTE *)a2 + a3[28]);
    *(_QWORD *)((char *)v4 + v106) = *(_QWORD *)((char *)a2 + v106);
    v107 = a3[31];
    *(_QWORD *)((char *)v4 + a3[30]) = *(_QWORD *)((char *)a2 + a3[30]);
    v108 = (char *)v4 + v107;
    v109 = (char *)a2 + v107;
    *(_QWORD *)v108 = *(_QWORD *)v109;
    v108[8] = v109[8];
    v110 = a3[33];
    *((_BYTE *)v4 + a3[32]) = *((_BYTE *)a2 + a3[32]);
    *((_BYTE *)v4 + v110) = *((_BYTE *)a2 + v110);
    v111 = a3[35];
    *((_BYTE *)v4 + a3[34]) = *((_BYTE *)a2 + a3[34]);
    *(_DWORD *)((char *)v4 + v111) = *(_DWORD *)((char *)a2 + v111);
    v112 = a3[37];
    *(_DWORD *)((char *)v4 + a3[36]) = *(_DWORD *)((char *)a2 + a3[36]);
    v113 = (_QWORD *)((char *)v4 + v112);
    v114 = (_QWORD *)((char *)a2 + v112);
    v115 = v114[1];
    *v113 = *v114;
    v113[1] = v115;
    v116 = a3[39];
    *((_BYTE *)v4 + a3[38]) = *((_BYTE *)a2 + a3[38]);
    *((_BYTE *)v4 + v116) = *((_BYTE *)a2 + v116);
    v117 = a3[41];
    *(_DWORD *)((char *)v4 + a3[40]) = *(_DWORD *)((char *)a2 + a3[40]);
    *((_BYTE *)v4 + v117) = *((_BYTE *)a2 + v117);
    v118 = a3[43];
    *((_BYTE *)v4 + a3[42]) = *((_BYTE *)a2 + a3[42]);
    *((_BYTE *)v4 + v118) = *((_BYTE *)a2 + v118);
    v119 = a3[44];
    v120 = a3[45];
    v121 = (_QWORD *)((char *)v4 + v119);
    v122 = (_QWORD *)((char *)a2 + v119);
    v123 = v122[1];
    v124 = (void **)((char *)a2 + v120);
    v125 = (void **)((char *)v4 + v120);
    *v121 = *v122;
    v121[1] = v123;
    v126 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
    v127 = *(_QWORD *)(v126 - 8);
    v128 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v127 + 48);
    swift_bridgeObjectRetain(v115);
    swift_bridgeObjectRetain(v123);
    if (v128(v124, 1, v126))
    {
      v129 = sub_10000D604(&qword_1000D5E68);
      memcpy(v125, v124, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
    }
    else
    {
      v165 = v127;
      v130 = *v124;
      *v125 = *v124;
      v159 = v93;
      v131 = *(int *)(v93 + 20);
      v132 = (char *)v125 + v131;
      v133 = (char *)v124 + v131;
      v134 = type metadata accessor for URL(0);
      v135 = *(_QWORD *)(v134 - 8);
      v136 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v135 + 48);
      v137 = v130;
      v155 = v135;
      if (v136(v133, 1, v134))
      {
        v138 = sub_10000D604(&qword_1000D5DB8);
        memcpy(v132, v133, *(_QWORD *)(*(_QWORD *)(v138 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v132, v133, v134);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v135 + 56))(v132, 0, 1, v134);
      }
      v139 = *(int *)(v126 + 20);
      v140 = (void **)((char *)v125 + v139);
      v141 = (void **)((char *)v124 + v139);
      if (v156((char *)v124 + v139, 1, v159))
      {
        v142 = sub_10000D604(&qword_1000D5E60);
        memcpy(v140, v141, *(_QWORD *)(*(_QWORD *)(v142 - 8) + 64));
        v143 = v165;
      }
      else
      {
        v144 = *v141;
        *v140 = *v141;
        v145 = *(int *)(v159 + 20);
        v146 = (char *)v140 + v145;
        v147 = (char *)v141 + v145;
        v148 = v144;
        if (v136(v147, 1, v134))
        {
          v149 = sub_10000D604(&qword_1000D5DB8);
          memcpy(v146, v147, *(_QWORD *)(*(_QWORD *)(v149 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v155 + 16))(v146, v147, v134);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v155 + 56))(v146, 0, 1, v134);
        }
        v143 = v165;
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v157 + 56))(v140, 0, 1, v159);
      }
      v150 = *(int *)(v126 + 24);
      v151 = *(void **)((char *)v124 + v150);
      *(void **)((char *)v125 + v150) = v151;
      v152 = *(void (**)(void **, _QWORD, uint64_t, uint64_t))(v143 + 56);
      v153 = v151;
      v152(v125, 0, 1, v126);
    }
  }
  return v4;
}

uint64_t type metadata accessor for AdjustedMovie(uint64_t a1)
{
  return sub_100019130(a1, qword_1000D60A8, (uint64_t)&nominal type descriptor for AdjustedMovie);
}

uint64_t type metadata accessor for HomePodSetupViewModel.StereoPairImage(uint64_t a1)
{
  return sub_100019130(a1, qword_1000D6010, (uint64_t)&nominal type descriptor for HomePodSetupViewModel.StereoPairImage);
}

void sub_1000161B8(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  id *v13;
  uint64_t v14;
  unsigned int (*v15)(id *, uint64_t, uint64_t);
  char *v16;
  uint64_t v17;
  uint64_t v18;
  id *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  id *v25;
  char *v26;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v4 = a1 + a2[6];
  v5 = type metadata accessor for AdjustedMovie(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v4 + 8));
    v6 = v4 + *(int *)(v5 + 20);
    v7 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[8] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[9] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[10]));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[11]));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[12]));
  v8 = (_QWORD *)(a1 + a2[13]);
  if (v8[3])
    sub_10000CDB8(v8);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[14]));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[15]));
  v9 = (_QWORD *)(a1 + a2[19]);
  v10 = v9[1];
  if (v10)
  {
    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v9[3]);
    swift_bridgeObjectRelease(v9[5]);
    swift_bridgeObjectRelease(v9[7]);
    swift_bridgeObjectRelease(v9[9]);
  }
  v11 = (_QWORD *)(a1 + a2[20]);
  v12 = v11[1];
  if (v12)
  {
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v11[3]);
    swift_bridgeObjectRelease(v11[5]);
    swift_bridgeObjectRelease(v11[7]);
    swift_bridgeObjectRelease(v11[9]);
  }
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[21]));

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[23] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[24] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[25] + 8));
  v13 = (id *)(a1 + a2[27]);
  v14 = type metadata accessor for AdjustedImage(0);
  v15 = *(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48);
  if (!v15(v13, 1, v14))
  {

    v16 = (char *)v13 + *(int *)(v14 + 20);
    v17 = type metadata accessor for URL(0);
    v18 = *(_QWORD *)(v17 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v17);
  }
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[37] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[44] + 8));
  v19 = (id *)(a1 + a2[45]);
  v20 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v19, 1, v20))
  {

    v21 = (char *)v19 + *(int *)(v14 + 20);
    v22 = type metadata accessor for URL(0);
    v23 = *(_QWORD *)(v22 - 8);
    v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    if (!v24(v21, 1, v22))
      (*(void (**)(char *, uint64_t))(v23 + 8))(v21, v22);
    v25 = (id *)((char *)v19 + *(int *)(v20 + 20));
    if (!v15(v25, 1, v14))
    {

      v26 = (char *)v25 + *(int *)(v14 + 20);
      if (!v24(v26, 1, v22))
        (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v22);
    }

  }
}

_QWORD *sub_10001650C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  int *v10;
  uint64_t v11;
  unsigned int (*v12)(_QWORD *, uint64_t, int *);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void **v92;
  uint64_t v93;
  unsigned int (*v94)(char *, uint64_t, int *);
  id v95;
  uint64_t v96;
  int *v97;
  void *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  unsigned int (*v104)(char *, uint64_t, uint64_t);
  id v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  _QWORD *v123;
  uint64_t v124;
  void **v125;
  void **v126;
  uint64_t v127;
  uint64_t v128;
  unsigned int (*v129)(void **, uint64_t, uint64_t);
  uint64_t v130;
  void *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  unsigned int (*v137)(char *, uint64_t, uint64_t);
  id v138;
  uint64_t v139;
  uint64_t v140;
  void **v141;
  void **v142;
  uint64_t v143;
  void *v144;
  uint64_t v145;
  char *v146;
  char *v147;
  id v148;
  uint64_t v149;
  uint64_t v150;
  void *v151;
  void (*v152)(void **, _QWORD, uint64_t, uint64_t);
  id v153;
  unsigned int (*v155)(char *, uint64_t, int *);
  uint64_t v156;
  char *__dstb;
  void **__dst;
  int *__dsta;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a3[6];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = (int *)type metadata accessor for AdjustedMovie(0);
  v11 = *((_QWORD *)v10 - 1);
  v12 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v11 + 48);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  if (v12(v9, 1, v10))
  {
    v13 = sub_10000D604(&qword_1000D5E58);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = v9[1];
    *v8 = *v9;
    v8[1] = v14;
    v15 = v10[5];
    __dstb = (char *)v8 + v15;
    v16 = (char *)v9 + v15;
    v17 = type metadata accessor for URL(0);
    v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    swift_bridgeObjectRetain(v14);
    v18(__dstb, v16, v17);
    *(_QWORD *)((char *)v8 + v10[6]) = *(_QWORD *)((char *)v9 + v10[6]);
    *(_QWORD *)((char *)v8 + v10[7]) = *(_QWORD *)((char *)v9 + v10[7]);
    *(_QWORD *)((char *)v8 + v10[8]) = *(_QWORD *)((char *)v9 + v10[8]);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
  }
  v19 = a3[7];
  v20 = a3[8];
  v21 = (_QWORD *)((char *)a1 + v19);
  v22 = (_QWORD *)((char *)a2 + v19);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v24 = (_QWORD *)((char *)a1 + v20);
  v25 = (_QWORD *)((char *)a2 + v20);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  v27 = a3[9];
  v28 = a3[10];
  v29 = (_QWORD *)((char *)a1 + v27);
  v30 = (_QWORD *)((char *)a2 + v27);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  v32 = *(_QWORD *)((char *)a2 + v28);
  *(_QWORD *)((char *)a1 + v28) = v32;
  v33 = a3[11];
  v34 = a3[12];
  v35 = *(_QWORD *)((char *)a2 + v33);
  *(_QWORD *)((char *)a1 + v33) = v35;
  v36 = *(_QWORD *)((char *)a2 + v34);
  *(_QWORD *)((char *)a1 + v34) = v36;
  v37 = a3[13];
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  v40 = *(_QWORD *)((char *)a2 + v37 + 24);
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRetain(v31);
  swift_bridgeObjectRetain(v32);
  swift_bridgeObjectRetain(v35);
  swift_bridgeObjectRetain(v36);
  if (v40)
  {
    v41 = *((_QWORD *)v39 + 4);
    *((_QWORD *)v38 + 3) = v40;
    *((_QWORD *)v38 + 4) = v41;
    (**(void (***)(char *, char *, uint64_t))(v40 - 8))(v38, v39, v40);
  }
  else
  {
    v42 = *((_OWORD *)v39 + 1);
    *(_OWORD *)v38 = *(_OWORD *)v39;
    *((_OWORD *)v38 + 1) = v42;
    *((_QWORD *)v38 + 4) = *((_QWORD *)v39 + 4);
  }
  v43 = a3[14];
  v44 = a3[15];
  v45 = *(_QWORD *)((char *)a2 + v43);
  *(_QWORD *)((char *)a1 + v43) = v45;
  v46 = *(_QWORD *)((char *)a2 + v44);
  *(_QWORD *)((char *)a1 + v44) = v46;
  v47 = a3[17];
  *((_BYTE *)a1 + a3[16]) = *((_BYTE *)a2 + a3[16]);
  v48 = (char *)a1 + v47;
  v49 = (char *)a2 + v47;
  *(_DWORD *)v48 = *(_DWORD *)v49;
  v50 = a3[18];
  v51 = a3[19];
  v52 = *(_QWORD *)((char *)a2 + v50);
  v48[4] = v49[4];
  *(_QWORD *)((char *)a1 + v50) = v52;
  v53 = (_QWORD *)((char *)a1 + v51);
  v54 = (_QWORD *)((char *)a2 + v51);
  v55 = *(_QWORD *)((char *)a2 + v51 + 8);
  swift_bridgeObjectRetain(v45);
  swift_bridgeObjectRetain(v46);
  if (v55)
  {
    *v53 = *v54;
    v53[1] = v55;
    v56 = v54[3];
    v53[2] = v54[2];
    v53[3] = v56;
    v57 = v54[5];
    v53[4] = v54[4];
    v53[5] = v57;
    v58 = v54[7];
    v53[6] = v54[6];
    v53[7] = v58;
    v59 = v54[8];
    v60 = v54[9];
    v53[8] = v59;
    v53[9] = v60;
    swift_bridgeObjectRetain(v55);
    swift_bridgeObjectRetain(v56);
    swift_bridgeObjectRetain(v57);
    swift_bridgeObjectRetain(v58);
    swift_bridgeObjectRetain(v60);
  }
  else
  {
    v61 = *((_OWORD *)v54 + 3);
    *((_OWORD *)v53 + 2) = *((_OWORD *)v54 + 2);
    *((_OWORD *)v53 + 3) = v61;
    *((_OWORD *)v53 + 4) = *((_OWORD *)v54 + 4);
    v62 = *((_OWORD *)v54 + 1);
    *(_OWORD *)v53 = *(_OWORD *)v54;
    *((_OWORD *)v53 + 1) = v62;
  }
  v63 = a3[20];
  v64 = (_QWORD *)((char *)a1 + v63);
  v65 = (_QWORD *)((char *)a2 + v63);
  v66 = v65[1];
  if (v66)
  {
    *v64 = *v65;
    v64[1] = v66;
    v67 = v65[3];
    v64[2] = v65[2];
    v64[3] = v67;
    v68 = v65[5];
    v64[4] = v65[4];
    v64[5] = v68;
    v69 = v65[7];
    v64[6] = v65[6];
    v64[7] = v69;
    v70 = v65[9];
    v64[8] = v65[8];
    v64[9] = v70;
    swift_bridgeObjectRetain(v66);
    swift_bridgeObjectRetain(v67);
    swift_bridgeObjectRetain(v68);
    swift_bridgeObjectRetain(v69);
    swift_bridgeObjectRetain(v70);
  }
  else
  {
    v71 = *((_OWORD *)v65 + 3);
    *((_OWORD *)v64 + 2) = *((_OWORD *)v65 + 2);
    *((_OWORD *)v64 + 3) = v71;
    *((_OWORD *)v64 + 4) = *((_OWORD *)v65 + 4);
    v72 = *((_OWORD *)v65 + 1);
    *(_OWORD *)v64 = *(_OWORD *)v65;
    *((_OWORD *)v64 + 1) = v72;
  }
  v73 = a3[21];
  v74 = a3[22];
  v75 = *(_QWORD *)((char *)a2 + v73);
  *(_QWORD *)((char *)a1 + v73) = v75;
  v76 = *(void **)((char *)a2 + v74);
  *(_QWORD *)((char *)a1 + v74) = v76;
  v77 = a3[23];
  v78 = a3[24];
  v79 = (_QWORD *)((char *)a1 + v77);
  v80 = (_QWORD *)((char *)a2 + v77);
  v81 = v80[1];
  *v79 = *v80;
  v79[1] = v81;
  v82 = (_QWORD *)((char *)a1 + v78);
  v83 = (_QWORD *)((char *)a2 + v78);
  v84 = v83[1];
  *v82 = *v83;
  v82[1] = v84;
  v85 = a3[25];
  v86 = a3[26];
  v87 = (_QWORD *)((char *)a1 + v85);
  v88 = (_QWORD *)((char *)a2 + v85);
  v89 = *v88;
  v90 = v88[1];
  LOBYTE(v88) = *((_BYTE *)a2 + v86);
  *v87 = v89;
  v87[1] = v90;
  *((_BYTE *)a1 + v86) = (_BYTE)v88;
  v91 = a3[27];
  __dst = (void **)((char *)a1 + v91);
  v92 = (void **)((char *)a2 + v91);
  v93 = type metadata accessor for AdjustedImage(0);
  v156 = *(_QWORD *)(v93 - 8);
  v94 = *(unsigned int (**)(char *, uint64_t, int *))(v156 + 48);
  swift_bridgeObjectRetain(v75);
  v95 = v76;
  swift_bridgeObjectRetain(v81);
  swift_bridgeObjectRetain(v84);
  swift_bridgeObjectRetain(v90);
  v155 = v94;
  if (v94((char *)v92, 1, (int *)v93))
  {
    v96 = sub_10000D604(&qword_1000D5E60);
    memcpy(__dst, v92, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
    v97 = (int *)v93;
  }
  else
  {
    v98 = *v92;
    *__dst = *v92;
    v99 = *(int *)(v93 + 20);
    v100 = (char *)__dst + v99;
    v101 = (char *)v92 + v99;
    v102 = type metadata accessor for URL(0);
    v103 = *(_QWORD *)(v102 - 8);
    v104 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48);
    v105 = v98;
    if (v104(v101, 1, v102))
    {
      v106 = sub_10000D604(&qword_1000D5DB8);
      memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v100, v101, v102);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v103 + 56))(v100, 0, 1, v102);
    }
    v97 = (int *)v93;
    (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v156 + 56))(__dst, 0, 1, v93);
  }
  v107 = a3[29];
  *((_BYTE *)a1 + a3[28]) = *((_BYTE *)a2 + a3[28]);
  *(_QWORD *)((char *)a1 + v107) = *(_QWORD *)((char *)a2 + v107);
  v108 = a3[31];
  *(_QWORD *)((char *)a1 + a3[30]) = *(_QWORD *)((char *)a2 + a3[30]);
  v109 = (char *)a1 + v108;
  v110 = (char *)a2 + v108;
  *(_QWORD *)v109 = *(_QWORD *)v110;
  v109[8] = v110[8];
  v111 = a3[33];
  *((_BYTE *)a1 + a3[32]) = *((_BYTE *)a2 + a3[32]);
  *((_BYTE *)a1 + v111) = *((_BYTE *)a2 + v111);
  v112 = a3[35];
  *((_BYTE *)a1 + a3[34]) = *((_BYTE *)a2 + a3[34]);
  *(_DWORD *)((char *)a1 + v112) = *(_DWORD *)((char *)a2 + v112);
  v113 = a3[37];
  *(_DWORD *)((char *)a1 + a3[36]) = *(_DWORD *)((char *)a2 + a3[36]);
  v114 = (_QWORD *)((char *)a1 + v113);
  v115 = (_QWORD *)((char *)a2 + v113);
  v116 = v115[1];
  *v114 = *v115;
  v114[1] = v116;
  v117 = a3[39];
  *((_BYTE *)a1 + a3[38]) = *((_BYTE *)a2 + a3[38]);
  *((_BYTE *)a1 + v117) = *((_BYTE *)a2 + v117);
  v118 = a3[41];
  *(_DWORD *)((char *)a1 + a3[40]) = *(_DWORD *)((char *)a2 + a3[40]);
  *((_BYTE *)a1 + v118) = *((_BYTE *)a2 + v118);
  v119 = a3[43];
  *((_BYTE *)a1 + a3[42]) = *((_BYTE *)a2 + a3[42]);
  *((_BYTE *)a1 + v119) = *((_BYTE *)a2 + v119);
  v120 = a3[44];
  v121 = a3[45];
  v122 = (_QWORD *)((char *)a1 + v120);
  v123 = (_QWORD *)((char *)a2 + v120);
  v124 = v123[1];
  v125 = (void **)((char *)a2 + v121);
  v126 = (void **)((char *)a1 + v121);
  *v122 = *v123;
  v122[1] = v124;
  v127 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v128 = *(_QWORD *)(v127 - 8);
  v129 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v128 + 48);
  swift_bridgeObjectRetain(v116);
  swift_bridgeObjectRetain(v124);
  if (v129(v125, 1, v127))
  {
    v130 = sub_10000D604(&qword_1000D5E68);
    memcpy(v126, v125, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
  }
  else
  {
    v131 = *v125;
    *v126 = *v125;
    __dsta = v97;
    v132 = v97[5];
    v133 = (char *)v126 + v132;
    v134 = (char *)v125 + v132;
    v135 = type metadata accessor for URL(0);
    v136 = *(_QWORD *)(v135 - 8);
    v137 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v136 + 48);
    v138 = v131;
    if (v137(v134, 1, v135))
    {
      v139 = sub_10000D604(&qword_1000D5DB8);
      memcpy(v133, v134, *(_QWORD *)(*(_QWORD *)(v139 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v136 + 16))(v133, v134, v135);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v136 + 56))(v133, 0, 1, v135);
    }
    v140 = *(int *)(v127 + 20);
    v141 = (void **)((char *)v126 + v140);
    v142 = (void **)((char *)v125 + v140);
    if (v155((char *)v125 + v140, 1, __dsta))
    {
      v143 = sub_10000D604(&qword_1000D5E60);
      memcpy(v141, v142, *(_QWORD *)(*(_QWORD *)(v143 - 8) + 64));
    }
    else
    {
      v144 = *v142;
      *v141 = *v142;
      v145 = __dsta[5];
      v146 = (char *)v141 + v145;
      v147 = (char *)v142 + v145;
      v148 = v144;
      if (v137(v147, 1, v135))
      {
        v149 = sub_10000D604(&qword_1000D5DB8);
        memcpy(v146, v147, *(_QWORD *)(*(_QWORD *)(v149 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v136 + 16))(v146, v147, v135);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v136 + 56))(v146, 0, 1, v135);
      }
      (*(void (**)(void **, _QWORD, uint64_t, int *))(v156 + 56))(v141, 0, 1, __dsta);
    }
    v150 = *(int *)(v127 + 24);
    v151 = *(void **)((char *)v125 + v150);
    *(void **)((char *)v126 + v150) = v151;
    v152 = *(void (**)(void **, _QWORD, uint64_t, uint64_t))(v128 + 56);
    v153 = v151;
    v152(v126, 0, 1, v127);
  }
  return a1;
}

_QWORD *sub_100016CE8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  int *v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD *, uint64_t, int *);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  void *v124;
  id v125;
  uint64_t v126;
  _QWORD *v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void **v142;
  void **v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t (*v146)(void **, uint64_t, uint64_t);
  int v147;
  int v148;
  void *v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  unsigned int (*v155)(char *, uint64_t, uint64_t);
  id v156;
  uint64_t v157;
  uint64_t v158;
  void *v159;
  void *v160;
  id v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t (*v168)(char *, uint64_t, uint64_t);
  int v169;
  int v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  _QWORD *v177;
  _QWORD *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  _QWORD *v182;
  _QWORD *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void **v187;
  void **v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t (*v191)(void **, uint64_t, uint64_t);
  int v192;
  int v193;
  void *v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  unsigned int (*v199)(char *, uint64_t, uint64_t);
  id v200;
  uint64_t v201;
  uint64_t v202;
  void *v203;
  void *v204;
  id v205;
  uint64_t v206;
  char *v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t (*v211)(char *, uint64_t, uint64_t);
  int v212;
  int v213;
  uint64_t v214;
  void **v215;
  void **v216;
  uint64_t v217;
  void **v218;
  void *v219;
  uint64_t v220;
  char *v221;
  char *v222;
  id v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  void **v227;
  void **v228;
  int v229;
  int v230;
  void *v231;
  uint64_t v232;
  char *v233;
  char *v234;
  id v235;
  uint64_t v236;
  size_t v237;
  void **v238;
  void **v239;
  uint64_t v240;
  void *v241;
  void (*v242)(void **, _QWORD, uint64_t, uint64_t);
  id v243;
  void *v244;
  void *v245;
  id v246;
  uint64_t v247;
  char *v248;
  char *v249;
  int v250;
  int v251;
  uint64_t v252;
  void *v253;
  void *v254;
  id v255;
  unsigned int (*v257)(char *, uint64_t, uint64_t);
  char *__dst;
  void (**__dsta)(char *, char *, uint64_t);
  void **v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  char *v265;
  uint64_t (*v266)(char *, uint64_t, uint64_t);
  char *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[2] = a2[2];
  v8 = a2[3];
  v9 = a1[3];
  a1[3] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  v13 = (int *)type metadata accessor for AdjustedMovie(0);
  v14 = *((_QWORD *)v13 - 1);
  v15 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *v11 = *v12;
      v18 = v12[1];
      v11[1] = v18;
      v19 = v13[5];
      v265 = (char *)v12 + v19;
      v267 = (char *)v11 + v19;
      v20 = type metadata accessor for URL(0);
      v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
      swift_bridgeObjectRetain(v18);
      v21(v267, v265, v20);
      *(_QWORD *)((char *)v11 + v13[6]) = *(_QWORD *)((char *)v12 + v13[6]);
      *(_QWORD *)((char *)v11 + v13[7]) = *(_QWORD *)((char *)v12 + v13[7]);
      *(_QWORD *)((char *)v11 + v13[8]) = *(_QWORD *)((char *)v12 + v13[8]);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_10001126C((uint64_t)v11, type metadata accessor for AdjustedMovie);
LABEL_6:
    v22 = sub_10000D604(&qword_1000D5E58);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  *v11 = *v12;
  v85 = v12[1];
  v86 = v11[1];
  v11[1] = v85;
  swift_bridgeObjectRetain(v85);
  swift_bridgeObjectRelease(v86);
  v87 = v13[5];
  v88 = (char *)v11 + v87;
  v89 = (char *)v12 + v87;
  v90 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 24))(v88, v89, v90);
  *(_QWORD *)((char *)v11 + v13[6]) = *(_QWORD *)((char *)v12 + v13[6]);
  *(_QWORD *)((char *)v11 + v13[7]) = *(_QWORD *)((char *)v12 + v13[7]);
  *(_QWORD *)((char *)v11 + v13[8]) = *(_QWORD *)((char *)v12 + v13[8]);
LABEL_7:
  v23 = a3[7];
  v24 = (_QWORD *)((char *)a1 + v23);
  v25 = (_QWORD *)((char *)a2 + v23);
  *v24 = *v25;
  v26 = v25[1];
  v27 = v24[1];
  v24[1] = v26;
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRelease(v27);
  v28 = a3[8];
  v29 = (_QWORD *)((char *)a1 + v28);
  v30 = (_QWORD *)((char *)a2 + v28);
  *v29 = *v30;
  v31 = v30[1];
  v32 = v29[1];
  v29[1] = v31;
  swift_bridgeObjectRetain(v31);
  swift_bridgeObjectRelease(v32);
  v33 = a3[9];
  v34 = (_QWORD *)((char *)a1 + v33);
  v35 = (_QWORD *)((char *)a2 + v33);
  *v34 = *v35;
  v36 = v35[1];
  v37 = v34[1];
  v34[1] = v36;
  swift_bridgeObjectRetain(v36);
  swift_bridgeObjectRelease(v37);
  v38 = a3[10];
  v39 = *(_QWORD *)((char *)a2 + v38);
  v40 = *(_QWORD *)((char *)a1 + v38);
  *(_QWORD *)((char *)a1 + v38) = v39;
  swift_bridgeObjectRetain(v39);
  swift_bridgeObjectRelease(v40);
  v41 = a3[11];
  v42 = *(_QWORD *)((char *)a2 + v41);
  v43 = *(_QWORD *)((char *)a1 + v41);
  *(_QWORD *)((char *)a1 + v41) = v42;
  swift_bridgeObjectRetain(v42);
  swift_bridgeObjectRelease(v43);
  v44 = a3[12];
  v45 = *(_QWORD *)((char *)a2 + v44);
  v46 = *(_QWORD *)((char *)a1 + v44);
  *(_QWORD *)((char *)a1 + v44) = v45;
  swift_bridgeObjectRetain(v45);
  swift_bridgeObjectRelease(v46);
  v47 = a3[13];
  v48 = (char *)a1 + v47;
  v49 = (char *)a2 + v47;
  v50 = *(_QWORD *)((char *)a2 + v47 + 24);
  if (*(_QWORD *)((char *)a1 + v47 + 24))
  {
    if (v50)
    {
      sub_10000CECC(v48, v49);
      goto LABEL_14;
    }
    sub_10000CDB8(v48);
  }
  else if (v50)
  {
    *((_QWORD *)v48 + 3) = v50;
    *((_QWORD *)v48 + 4) = *((_QWORD *)v49 + 4);
    (**(void (***)(char *, char *))(v50 - 8))(v48, v49);
    goto LABEL_14;
  }
  v51 = *(_OWORD *)v49;
  v52 = *((_OWORD *)v49 + 1);
  *((_QWORD *)v48 + 4) = *((_QWORD *)v49 + 4);
  *(_OWORD *)v48 = v51;
  *((_OWORD *)v48 + 1) = v52;
LABEL_14:
  v53 = a3[14];
  v54 = *(_QWORD *)((char *)a2 + v53);
  v55 = *(_QWORD *)((char *)a1 + v53);
  *(_QWORD *)((char *)a1 + v53) = v54;
  swift_bridgeObjectRetain(v54);
  swift_bridgeObjectRelease(v55);
  v56 = a3[15];
  v57 = *(_QWORD *)((char *)a2 + v56);
  v58 = *(_QWORD *)((char *)a1 + v56);
  *(_QWORD *)((char *)a1 + v56) = v57;
  swift_bridgeObjectRetain(v57);
  swift_bridgeObjectRelease(v58);
  *((_BYTE *)a1 + a3[16]) = *((_BYTE *)a2 + a3[16]);
  v59 = a3[17];
  v60 = (char *)a1 + v59;
  v61 = (char *)a2 + v59;
  v62 = v61[4];
  *(_DWORD *)v60 = *(_DWORD *)v61;
  v60[4] = v62;
  *(_QWORD *)((char *)a1 + a3[18]) = *(_QWORD *)((char *)a2 + a3[18]);
  v63 = a3[19];
  v64 = (_QWORD *)((char *)a1 + v63);
  v65 = (_QWORD *)((char *)a2 + v63);
  v66 = *(_QWORD *)((char *)a1 + v63 + 8);
  v67 = *(_QWORD *)((char *)a2 + v63 + 8);
  if (v66)
  {
    if (v67)
    {
      *v64 = *v65;
      v68 = v65[1];
      v64[1] = v68;
      swift_bridgeObjectRetain(v68);
      swift_bridgeObjectRelease(v66);
      v64[2] = v65[2];
      v69 = v65[3];
      v70 = v64[3];
      v64[3] = v69;
      swift_bridgeObjectRetain(v69);
      swift_bridgeObjectRelease(v70);
      v64[4] = v65[4];
      v71 = v65[5];
      v72 = v64[5];
      v64[5] = v71;
      swift_bridgeObjectRetain(v71);
      swift_bridgeObjectRelease(v72);
      v64[6] = v65[6];
      v73 = v65[7];
      v74 = v64[7];
      v64[7] = v73;
      swift_bridgeObjectRetain(v73);
      swift_bridgeObjectRelease(v74);
      v64[8] = v65[8];
      v75 = v65[9];
      v76 = v64[9];
      v64[9] = v75;
      swift_bridgeObjectRetain(v75);
      swift_bridgeObjectRelease(v76);
    }
    else
    {
      sub_100017CD0(v64);
      *(_OWORD *)v64 = *(_OWORD *)v65;
      v82 = *((_OWORD *)v65 + 4);
      v84 = *((_OWORD *)v65 + 1);
      v83 = *((_OWORD *)v65 + 2);
      *((_OWORD *)v64 + 3) = *((_OWORD *)v65 + 3);
      *((_OWORD *)v64 + 4) = v82;
      *((_OWORD *)v64 + 1) = v84;
      *((_OWORD *)v64 + 2) = v83;
    }
  }
  else if (v67)
  {
    *v64 = *v65;
    v77 = v65[1];
    v64[1] = v77;
    v64[2] = v65[2];
    v78 = v65[3];
    v64[3] = v78;
    v64[4] = v65[4];
    v79 = v65[5];
    v64[5] = v79;
    v64[6] = v65[6];
    v80 = v65[7];
    v64[7] = v80;
    v64[8] = v65[8];
    v81 = v65[9];
    v64[9] = v81;
    swift_bridgeObjectRetain(v77);
    swift_bridgeObjectRetain(v78);
    swift_bridgeObjectRetain(v79);
    swift_bridgeObjectRetain(v80);
    swift_bridgeObjectRetain(v81);
  }
  else
  {
    *(_OWORD *)v64 = *(_OWORD *)v65;
    v91 = *((_OWORD *)v65 + 1);
    v92 = *((_OWORD *)v65 + 2);
    v93 = *((_OWORD *)v65 + 4);
    *((_OWORD *)v64 + 3) = *((_OWORD *)v65 + 3);
    *((_OWORD *)v64 + 4) = v93;
    *((_OWORD *)v64 + 1) = v91;
    *((_OWORD *)v64 + 2) = v92;
  }
  v94 = a3[20];
  v95 = (_QWORD *)((char *)a1 + v94);
  v96 = (_QWORD *)((char *)a2 + v94);
  v97 = *(_QWORD *)((char *)a1 + v94 + 8);
  v98 = *(_QWORD *)((char *)a2 + v94 + 8);
  if (v97)
  {
    if (v98)
    {
      *v95 = *v96;
      v99 = v96[1];
      v95[1] = v99;
      swift_bridgeObjectRetain(v99);
      swift_bridgeObjectRelease(v97);
      v95[2] = v96[2];
      v100 = v96[3];
      v101 = v95[3];
      v95[3] = v100;
      swift_bridgeObjectRetain(v100);
      swift_bridgeObjectRelease(v101);
      v95[4] = v96[4];
      v102 = v96[5];
      v103 = v95[5];
      v95[5] = v102;
      swift_bridgeObjectRetain(v102);
      swift_bridgeObjectRelease(v103);
      v95[6] = v96[6];
      v104 = v96[7];
      v105 = v95[7];
      v95[7] = v104;
      swift_bridgeObjectRetain(v104);
      swift_bridgeObjectRelease(v105);
      v95[8] = v96[8];
      v106 = v96[9];
      v107 = v95[9];
      v95[9] = v106;
      swift_bridgeObjectRetain(v106);
      swift_bridgeObjectRelease(v107);
    }
    else
    {
      sub_100017CD0(v95);
      *(_OWORD *)v95 = *(_OWORD *)v96;
      v113 = *((_OWORD *)v96 + 4);
      v115 = *((_OWORD *)v96 + 1);
      v114 = *((_OWORD *)v96 + 2);
      *((_OWORD *)v95 + 3) = *((_OWORD *)v96 + 3);
      *((_OWORD *)v95 + 4) = v113;
      *((_OWORD *)v95 + 1) = v115;
      *((_OWORD *)v95 + 2) = v114;
    }
  }
  else if (v98)
  {
    *v95 = *v96;
    v108 = v96[1];
    v95[1] = v108;
    v95[2] = v96[2];
    v109 = v96[3];
    v95[3] = v109;
    v95[4] = v96[4];
    v110 = v96[5];
    v95[5] = v110;
    v95[6] = v96[6];
    v111 = v96[7];
    v95[7] = v111;
    v95[8] = v96[8];
    v112 = v96[9];
    v95[9] = v112;
    swift_bridgeObjectRetain(v108);
    swift_bridgeObjectRetain(v109);
    swift_bridgeObjectRetain(v110);
    swift_bridgeObjectRetain(v111);
    swift_bridgeObjectRetain(v112);
  }
  else
  {
    *(_OWORD *)v95 = *(_OWORD *)v96;
    v116 = *((_OWORD *)v96 + 1);
    v117 = *((_OWORD *)v96 + 2);
    v118 = *((_OWORD *)v96 + 4);
    *((_OWORD *)v95 + 3) = *((_OWORD *)v96 + 3);
    *((_OWORD *)v95 + 4) = v118;
    *((_OWORD *)v95 + 1) = v116;
    *((_OWORD *)v95 + 2) = v117;
  }
  v119 = a3[21];
  v120 = *(_QWORD *)((char *)a1 + v119);
  v121 = *(_QWORD *)((char *)a2 + v119);
  *(_QWORD *)((char *)a1 + v119) = v121;
  swift_bridgeObjectRetain(v121);
  swift_bridgeObjectRelease(v120);
  v122 = a3[22];
  v123 = *(void **)((char *)a1 + v122);
  v124 = *(void **)((char *)a2 + v122);
  *(_QWORD *)((char *)a1 + v122) = v124;
  v125 = v124;

  v126 = a3[23];
  v127 = (_QWORD *)((char *)a1 + v126);
  v128 = (_QWORD *)((char *)a2 + v126);
  *v127 = *v128;
  v129 = v128[1];
  v130 = v127[1];
  v127[1] = v129;
  swift_bridgeObjectRetain(v129);
  swift_bridgeObjectRelease(v130);
  v131 = a3[24];
  v132 = (_QWORD *)((char *)a1 + v131);
  v133 = (_QWORD *)((char *)a2 + v131);
  *v132 = *v133;
  v134 = v133[1];
  v135 = v132[1];
  v132[1] = v134;
  swift_bridgeObjectRetain(v134);
  swift_bridgeObjectRelease(v135);
  v136 = a3[25];
  v137 = (_QWORD *)((char *)a1 + v136);
  v138 = (_QWORD *)((char *)a2 + v136);
  *v137 = *v138;
  v139 = v138[1];
  v140 = v137[1];
  v137[1] = v139;
  swift_bridgeObjectRetain(v139);
  swift_bridgeObjectRelease(v140);
  *((_BYTE *)a1 + a3[26]) = *((_BYTE *)a2 + a3[26]);
  v141 = a3[27];
  v142 = (void **)((char *)a1 + v141);
  v143 = (void **)((char *)a2 + v141);
  v144 = type metadata accessor for AdjustedImage(0);
  v145 = *(_QWORD *)(v144 - 8);
  v146 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v145 + 48);
  v147 = v146(v142, 1, v144);
  v148 = v146(v143, 1, v144);
  v266 = (uint64_t (*)(char *, uint64_t, uint64_t))v146;
  if (!v147)
  {
    if (v148)
    {
      sub_10001126C((uint64_t)v142, type metadata accessor for AdjustedImage);
      goto LABEL_35;
    }
    v262 = v145;
    v159 = *v143;
    v160 = *v142;
    *v142 = *v143;
    v161 = v159;

    v162 = v144;
    v163 = *(int *)(v144 + 20);
    v164 = (char *)v142 + v163;
    v165 = (char *)v143 + v163;
    v166 = type metadata accessor for URL(0);
    v167 = *(_QWORD *)(v166 - 8);
    v168 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v167 + 48);
    v169 = v168(v164, 1, v166);
    v170 = v168(v165, 1, v166);
    if (v169)
    {
      if (!v170)
      {
        (*(void (**)(char *, char *, uint64_t))(v167 + 16))(v164, v165, v166);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v167 + 56))(v164, 0, 1, v166);
LABEL_44:
        v144 = v162;
        v145 = v262;
        goto LABEL_45;
      }
    }
    else
    {
      if (!v170)
      {
        (*(void (**)(char *, char *, uint64_t))(v167 + 24))(v164, v165, v166);
        goto LABEL_44;
      }
      (*(void (**)(char *, uint64_t))(v167 + 8))(v164, v166);
    }
    v171 = sub_10000D604(&qword_1000D5DB8);
    memcpy(v164, v165, *(_QWORD *)(*(_QWORD *)(v171 - 8) + 64));
    goto LABEL_44;
  }
  if (v148)
  {
LABEL_35:
    v158 = sub_10000D604(&qword_1000D5E60);
    memcpy(v142, v143, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
    goto LABEL_45;
  }
  v261 = v145;
  v149 = *v143;
  *v142 = *v143;
  v268 = v144;
  v150 = *(int *)(v144 + 20);
  v151 = (char *)v142 + v150;
  v152 = (char *)v143 + v150;
  v153 = type metadata accessor for URL(0);
  v154 = *(_QWORD *)(v153 - 8);
  v155 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v154 + 48);
  v156 = v149;
  if (v155(v152, 1, v153))
  {
    v157 = sub_10000D604(&qword_1000D5DB8);
    memcpy(v151, v152, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v154 + 16))(v151, v152, v153);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v154 + 56))(v151, 0, 1, v153);
  }
  v144 = v268;
  v145 = v261;
  (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v261 + 56))(v142, 0, 1, v268);
LABEL_45:
  *((_BYTE *)a1 + a3[28]) = *((_BYTE *)a2 + a3[28]);
  *(_QWORD *)((char *)a1 + a3[29]) = *(_QWORD *)((char *)a2 + a3[29]);
  *(_QWORD *)((char *)a1 + a3[30]) = *(_QWORD *)((char *)a2 + a3[30]);
  v172 = a3[31];
  v173 = (char *)a1 + v172;
  v174 = (char *)a2 + v172;
  v175 = *(_QWORD *)v174;
  v173[8] = v174[8];
  *(_QWORD *)v173 = v175;
  *((_BYTE *)a1 + a3[32]) = *((_BYTE *)a2 + a3[32]);
  *((_BYTE *)a1 + a3[33]) = *((_BYTE *)a2 + a3[33]);
  *((_BYTE *)a1 + a3[34]) = *((_BYTE *)a2 + a3[34]);
  *(_DWORD *)((char *)a1 + a3[35]) = *(_DWORD *)((char *)a2 + a3[35]);
  *(_DWORD *)((char *)a1 + a3[36]) = *(_DWORD *)((char *)a2 + a3[36]);
  v176 = a3[37];
  v177 = (_QWORD *)((char *)a1 + v176);
  v178 = (_QWORD *)((char *)a2 + v176);
  *v177 = *v178;
  v179 = v178[1];
  v180 = v177[1];
  v177[1] = v179;
  swift_bridgeObjectRetain(v179);
  swift_bridgeObjectRelease(v180);
  *((_BYTE *)a1 + a3[38]) = *((_BYTE *)a2 + a3[38]);
  *((_BYTE *)a1 + a3[39]) = *((_BYTE *)a2 + a3[39]);
  *(_DWORD *)((char *)a1 + a3[40]) = *(_DWORD *)((char *)a2 + a3[40]);
  *((_BYTE *)a1 + a3[41]) = *((_BYTE *)a2 + a3[41]);
  *((_BYTE *)a1 + a3[42]) = *((_BYTE *)a2 + a3[42]);
  *((_BYTE *)a1 + a3[43]) = *((_BYTE *)a2 + a3[43]);
  v181 = a3[44];
  v182 = (_QWORD *)((char *)a1 + v181);
  v183 = (_QWORD *)((char *)a2 + v181);
  *v182 = *v183;
  v184 = v183[1];
  v185 = v182[1];
  v182[1] = v184;
  swift_bridgeObjectRetain(v184);
  swift_bridgeObjectRelease(v185);
  v186 = a3[45];
  v187 = (void **)((char *)a1 + v186);
  v188 = (void **)((char *)a2 + v186);
  v189 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v190 = *(_QWORD *)(v189 - 8);
  v191 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v190 + 48);
  v192 = v191(v187, 1, v189);
  v193 = v191(v188, 1, v189);
  if (!v192)
  {
    if (v193)
    {
      sub_10001126C((uint64_t)v187, type metadata accessor for HomePodSetupViewModel.StereoPairImage);
      goto LABEL_51;
    }
    v264 = v145;
    v203 = *v188;
    v204 = *v187;
    *v187 = *v188;
    v205 = v203;

    v270 = v144;
    v206 = *(int *)(v144 + 20);
    v207 = (char *)v187 + v206;
    v208 = (char *)v188 + v206;
    v209 = type metadata accessor for URL(0);
    v210 = *(_QWORD *)(v209 - 8);
    v211 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v210 + 48);
    v212 = v211(v207, 1, v209);
    v213 = v211(v208, 1, v209);
    __dsta = (void (**)(char *, char *, uint64_t))v210;
    if (v212)
    {
      if (!v213)
      {
        (*(void (**)(char *, char *, uint64_t))(v210 + 16))(v207, v208, v209);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v210 + 56))(v207, 0, 1, v209);
        goto LABEL_63;
      }
    }
    else
    {
      if (!v213)
      {
        (*(void (**)(char *, char *, uint64_t))(v210 + 24))(v207, v208, v209);
LABEL_63:
        v226 = *(int *)(v189 + 20);
        v227 = (void **)((char *)v187 + v226);
        v228 = (void **)((char *)v188 + v226);
        v229 = v266((char *)v187 + v226, 1, v270);
        v230 = v266((char *)v228, 1, v270);
        if (v229)
        {
          if (!v230)
          {
            v231 = *v228;
            *v227 = *v228;
            v232 = *(int *)(v270 + 20);
            v233 = (char *)v227 + v232;
            v234 = (char *)v228 + v232;
            v235 = v231;
            if (v211(v234, 1, v209))
            {
              v236 = sub_10000D604(&qword_1000D5DB8);
              memcpy(v233, v234, *(_QWORD *)(*(_QWORD *)(v236 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v210 + 16))(v233, v234, v209);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v210 + 56))(v233, 0, 1, v209);
            }
            (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v264 + 56))(v227, 0, 1, v270);
            goto LABEL_81;
          }
        }
        else
        {
          if (!v230)
          {
            v244 = *v228;
            v245 = *v227;
            *v227 = *v228;
            v246 = v244;

            v247 = *(int *)(v270 + 20);
            v248 = (char *)v227 + v247;
            v249 = (char *)v228 + v247;
            v250 = v211(v248, 1, v209);
            v251 = v211(v249, 1, v209);
            if (v250)
            {
              if (!v251)
              {
                __dsta[2](v248, v249, v209);
                ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dsta[7])(v248, 0, 1, v209);
                goto LABEL_81;
              }
            }
            else
            {
              if (!v251)
              {
                __dsta[3](v248, v249, v209);
                goto LABEL_81;
              }
              ((void (*)(char *, uint64_t))__dsta[1])(v248, v209);
            }
            v237 = *(_QWORD *)(*(_QWORD *)(sub_10000D604(&qword_1000D5DB8) - 8) + 64);
            v238 = (void **)v248;
            v239 = (void **)v249;
LABEL_70:
            memcpy(v238, v239, v237);
LABEL_81:
            v252 = *(int *)(v189 + 24);
            v253 = *(void **)((char *)v187 + v252);
            v254 = *(void **)((char *)v188 + v252);
            *(void **)((char *)v187 + v252) = v254;
            v255 = v254;

            return a1;
          }
          sub_10001126C((uint64_t)v227, type metadata accessor for AdjustedImage);
        }
        v237 = *(_QWORD *)(*(_QWORD *)(sub_10000D604(&qword_1000D5E60) - 8) + 64);
        v238 = v227;
        v239 = v228;
        goto LABEL_70;
      }
      (*(void (**)(char *, uint64_t))(v210 + 8))(v207, v209);
    }
    v225 = sub_10000D604(&qword_1000D5DB8);
    memcpy(v207, v208, *(_QWORD *)(*(_QWORD *)(v225 - 8) + 64));
    goto LABEL_63;
  }
  if (v193)
  {
LABEL_51:
    v202 = sub_10000D604(&qword_1000D5E68);
    memcpy(v187, v188, *(_QWORD *)(*(_QWORD *)(v202 - 8) + 64));
    return a1;
  }
  v194 = *v188;
  *v187 = *v188;
  v269 = v144;
  v195 = *(int *)(v144 + 20);
  __dst = (char *)v187 + v195;
  v260 = v188;
  v196 = (char *)v188 + v195;
  v197 = type metadata accessor for URL(0);
  v198 = *(_QWORD *)(v197 - 8);
  v199 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v198 + 48);
  v200 = v194;
  v257 = v199;
  v263 = v145;
  if (v199(v196, 1, v197))
  {
    v201 = sub_10000D604(&qword_1000D5DB8);
    memcpy(__dst, v196, *(_QWORD *)(*(_QWORD *)(v201 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v198 + 16))(__dst, v196, v197);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v198 + 56))(__dst, 0, 1, v197);
  }
  v214 = *(int *)(v189 + 20);
  v215 = (void **)((char *)v187 + v214);
  v216 = (void **)((char *)v260 + v214);
  if (v266((char *)v260 + v214, 1, v269))
  {
    v217 = sub_10000D604(&qword_1000D5E60);
    memcpy(v215, v216, *(_QWORD *)(*(_QWORD *)(v217 - 8) + 64));
    v218 = v260;
  }
  else
  {
    v219 = *v216;
    *v215 = *v216;
    v220 = *(int *)(v269 + 20);
    v221 = (char *)v215 + v220;
    v222 = (char *)v216 + v220;
    v223 = v219;
    if (v257(v222, 1, v197))
    {
      v224 = sub_10000D604(&qword_1000D5DB8);
      memcpy(v221, v222, *(_QWORD *)(*(_QWORD *)(v224 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v198 + 16))(v221, v222, v197);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v198 + 56))(v221, 0, 1, v197);
    }
    v218 = v260;
    (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v263 + 56))(v215, 0, 1, v269);
  }
  v240 = *(int *)(v189 + 24);
  v241 = *(void **)((char *)v218 + v240);
  *(void **)((char *)v187 + v240) = v241;
  v242 = *(void (**)(void **, _QWORD, uint64_t, uint64_t))(v190 + 56);
  v243 = v241;
  v242(v187, 0, 1, v189);
  return a1;
}

_QWORD *sub_100017CD0(_QWORD *a1)
{
  destroy for DismissalConfirmationInformation(a1);
  return a1;
}

_OWORD *sub_100017D04(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  _OWORD *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _OWORD *v37;
  _OWORD *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v89;
  unsigned int (*v90)(char *, uint64_t, uint64_t);
  uint64_t v91;
  unsigned int (*v92)(_QWORD *, uint64_t, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (_OWORD *)((char *)a1 + v7);
  v9 = (_OWORD *)((char *)a2 + v7);
  v10 = (int *)type metadata accessor for AdjustedMovie(0);
  v11 = *((_QWORD *)v10 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_10000D604(&qword_1000D5E58);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *v8 = *v9;
    v13 = v10[5];
    v14 = (char *)v8 + v13;
    v15 = (char *)v9 + v13;
    v16 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    *(_QWORD *)((char *)v8 + v10[6]) = *(_QWORD *)((char *)v9 + v10[6]);
    *(_QWORD *)((char *)v8 + v10[7]) = *(_QWORD *)((char *)v9 + v10[7]);
    *(_QWORD *)((char *)v8 + v10[8]) = *(_QWORD *)((char *)v9 + v10[8]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
  }
  v17 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v17) = *(_OWORD *)((char *)a2 + v17);
  v18 = a3[10];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  *(_QWORD *)((char *)a1 + v18) = *(_QWORD *)((char *)a2 + v18);
  v19 = a3[12];
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  *(_QWORD *)((char *)a1 + v19) = *(_QWORD *)((char *)a2 + v19);
  v20 = a3[13];
  v21 = a3[14];
  v22 = (char *)a1 + v20;
  v23 = (char *)a2 + v20;
  v24 = *((_OWORD *)v23 + 1);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *((_OWORD *)v22 + 1) = v24;
  *((_QWORD *)v22 + 4) = *((_QWORD *)v23 + 4);
  *(_QWORD *)((char *)a1 + v21) = *(_QWORD *)((char *)a2 + v21);
  v25 = a3[16];
  *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  *((_BYTE *)a1 + v25) = *((_BYTE *)a2 + v25);
  v26 = a3[17];
  v27 = a3[18];
  v28 = (char *)a1 + v26;
  v29 = (char *)a2 + v26;
  *(_DWORD *)v28 = *(_DWORD *)v29;
  v28[4] = v29[4];
  *(_QWORD *)((char *)a1 + v27) = *(_QWORD *)((char *)a2 + v27);
  v30 = a3[19];
  v31 = a3[20];
  v32 = (_OWORD *)((char *)a1 + v30);
  v33 = (_OWORD *)((char *)a2 + v30);
  v34 = v33[4];
  v35 = v33[2];
  v32[3] = v33[3];
  v32[4] = v34;
  v36 = v33[1];
  *v32 = *v33;
  v32[1] = v36;
  v32[2] = v35;
  v37 = (_OWORD *)((char *)a1 + v31);
  v38 = (_OWORD *)((char *)a2 + v31);
  v39 = v38[4];
  v40 = v38[2];
  v37[3] = v38[3];
  v37[4] = v39;
  v41 = v38[1];
  *v37 = *v38;
  v37[1] = v41;
  v37[2] = v40;
  v42 = a3[22];
  *(_QWORD *)((char *)a1 + a3[21]) = *(_QWORD *)((char *)a2 + a3[21]);
  *(_QWORD *)((char *)a1 + v42) = *(_QWORD *)((char *)a2 + v42);
  v43 = a3[24];
  *(_OWORD *)((char *)a1 + a3[23]) = *(_OWORD *)((char *)a2 + a3[23]);
  *(_OWORD *)((char *)a1 + v43) = *(_OWORD *)((char *)a2 + v43);
  v44 = a3[26];
  *(_OWORD *)((char *)a1 + a3[25]) = *(_OWORD *)((char *)a2 + a3[25]);
  *((_BYTE *)a1 + v44) = *((_BYTE *)a2 + v44);
  v45 = a3[27];
  v46 = (_QWORD *)((char *)a1 + v45);
  v47 = (_QWORD *)((char *)a2 + v45);
  v48 = type metadata accessor for AdjustedImage(0);
  v49 = *(_QWORD *)(v48 - 8);
  v92 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v49 + 48);
  v91 = v49;
  if (v92(v47, 1, v48))
  {
    v50 = sub_10000D604(&qword_1000D5E60);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    *v46 = *v47;
    v51 = *(int *)(v48 + 20);
    v52 = (char *)v46 + v51;
    v53 = (char *)v47 + v51;
    v54 = type metadata accessor for URL(0);
    v55 = *(_QWORD *)(v54 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
    {
      v56 = sub_10000D604(&qword_1000D5DB8);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v52, v53, v54);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
  }
  v57 = a3[29];
  *((_BYTE *)a1 + a3[28]) = *((_BYTE *)a2 + a3[28]);
  *(_QWORD *)((char *)a1 + v57) = *(_QWORD *)((char *)a2 + v57);
  v58 = a3[31];
  *(_QWORD *)((char *)a1 + a3[30]) = *(_QWORD *)((char *)a2 + a3[30]);
  v59 = (char *)a1 + v58;
  v60 = (char *)a2 + v58;
  *(_QWORD *)v59 = *(_QWORD *)v60;
  v59[8] = v60[8];
  v61 = a3[33];
  *((_BYTE *)a1 + a3[32]) = *((_BYTE *)a2 + a3[32]);
  *((_BYTE *)a1 + v61) = *((_BYTE *)a2 + v61);
  v62 = a3[35];
  *((_BYTE *)a1 + a3[34]) = *((_BYTE *)a2 + a3[34]);
  *(_DWORD *)((char *)a1 + v62) = *(_DWORD *)((char *)a2 + v62);
  v63 = a3[37];
  *(_DWORD *)((char *)a1 + a3[36]) = *(_DWORD *)((char *)a2 + a3[36]);
  *(_OWORD *)((char *)a1 + v63) = *(_OWORD *)((char *)a2 + v63);
  v64 = a3[39];
  *((_BYTE *)a1 + a3[38]) = *((_BYTE *)a2 + a3[38]);
  *((_BYTE *)a1 + v64) = *((_BYTE *)a2 + v64);
  v65 = a3[41];
  *(_DWORD *)((char *)a1 + a3[40]) = *(_DWORD *)((char *)a2 + a3[40]);
  *((_BYTE *)a1 + v65) = *((_BYTE *)a2 + v65);
  v66 = a3[43];
  *((_BYTE *)a1 + a3[42]) = *((_BYTE *)a2 + a3[42]);
  *((_BYTE *)a1 + v66) = *((_BYTE *)a2 + v66);
  v67 = a3[44];
  v68 = a3[45];
  v69 = (_QWORD *)((char *)a1 + v68);
  v70 = (_QWORD *)((char *)a2 + v68);
  *(_OWORD *)((char *)a1 + v67) = *(_OWORD *)((char *)a2 + v67);
  v71 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v72 = *(_QWORD *)(v71 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v72 + 48))(v70, 1, v71))
  {
    v73 = sub_10000D604(&qword_1000D5E68);
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
  }
  else
  {
    *v69 = *v70;
    v74 = *(int *)(v48 + 20);
    v75 = (char *)v69 + v74;
    v76 = (char *)v70 + v74;
    v77 = type metadata accessor for URL(0);
    v78 = *(_QWORD *)(v77 - 8);
    v90 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48);
    v89 = v78;
    if (v90(v76, 1, v77))
    {
      v79 = sub_10000D604(&qword_1000D5DB8);
      memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v75, v76, v77);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v77);
    }
    v80 = *(int *)(v71 + 20);
    v81 = (_QWORD *)((char *)v69 + v80);
    v82 = (_QWORD *)((char *)v70 + v80);
    if (v92((_QWORD *)((char *)v70 + v80), 1, v48))
    {
      v83 = sub_10000D604(&qword_1000D5E60);
      memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
    }
    else
    {
      *v81 = *v82;
      v84 = *(int *)(v48 + 20);
      v85 = (char *)v81 + v84;
      v86 = (char *)v82 + v84;
      if (v90(v86, 1, v77))
      {
        v87 = sub_10000D604(&qword_1000D5DB8);
        memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v85, v86, v77);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v85, 0, 1, v77);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v81, 0, 1, v48);
    }
    *(_QWORD *)((char *)v69 + *(int *)(v71 + 24)) = *(_QWORD *)((char *)v70 + *(int *)(v71 + 24));
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
  }
  return a1;
}

_QWORD *sub_1000182F0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  int *v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD *, uint64_t, int *);
  int v16;
  int v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void **v113;
  void **v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t (*v117)(void **, uint64_t, uint64_t);
  int v118;
  int v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  void *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t (*v138)(void **, uint64_t, uint64_t);
  int v139;
  int v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  void **v163;
  void **v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t (*v167)(void **, uint64_t, uint64_t);
  int v168;
  int v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void *v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  unsigned int (*v183)(char *, uint64_t, uint64_t);
  unsigned int v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  _QWORD *v188;
  _QWORD *v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  void **v197;
  void **v198;
  int v199;
  int v200;
  uint64_t v201;
  char *v202;
  char *v203;
  uint64_t v204;
  size_t v205;
  void **v206;
  const void *v207;
  void *v208;
  uint64_t v209;
  char *v210;
  char *v211;
  unsigned int v212;
  unsigned int v213;
  uint64_t v214;
  void *v215;
  unsigned int (*v217)(char *, uint64_t, uint64_t);
  void *v218;
  void (**__src)(void *, const void *, uint64_t);
  unsigned int (*v220)(char *, uint64_t, uint64_t);
  uint64_t v221;
  uint64_t v222;
  uint64_t (*v223)(char *, uint64_t, uint64_t);

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[3];
  v9 = a1[3];
  a1[2] = a2[2];
  a1[3] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  v13 = (int *)type metadata accessor for AdjustedMovie(0);
  v14 = *((_QWORD *)v13 - 1);
  v15 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *(_OWORD *)v11 = *(_OWORD *)v12;
      v18 = v13[5];
      v19 = (char *)v11 + v18;
      v20 = (char *)v12 + v18;
      v21 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      *(_QWORD *)((char *)v11 + v13[6]) = *(_QWORD *)((char *)v12 + v13[6]);
      *(_QWORD *)((char *)v11 + v13[7]) = *(_QWORD *)((char *)v12 + v13[7]);
      *(_QWORD *)((char *)v11 + v13[8]) = *(_QWORD *)((char *)v12 + v13[8]);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_10001126C((uint64_t)v11, type metadata accessor for AdjustedMovie);
LABEL_6:
    v22 = sub_10000D604(&qword_1000D5E58);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  v128 = v12[1];
  v129 = v11[1];
  *v11 = *v12;
  v11[1] = v128;
  swift_bridgeObjectRelease(v129);
  v130 = v13[5];
  v131 = (char *)v11 + v130;
  v132 = (char *)v12 + v130;
  v133 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v133 - 8) + 40))(v131, v132, v133);
  *(_QWORD *)((char *)v11 + v13[6]) = *(_QWORD *)((char *)v12 + v13[6]);
  *(_QWORD *)((char *)v11 + v13[7]) = *(_QWORD *)((char *)v12 + v13[7]);
  *(_QWORD *)((char *)v11 + v13[8]) = *(_QWORD *)((char *)v12 + v13[8]);
LABEL_7:
  v23 = a3[7];
  v24 = (_QWORD *)((char *)a1 + v23);
  v25 = (_QWORD *)((char *)a2 + v23);
  v27 = *v25;
  v26 = v25[1];
  v28 = v24[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease(v28);
  v29 = a3[8];
  v30 = (_QWORD *)((char *)a1 + v29);
  v31 = (_QWORD *)((char *)a2 + v29);
  v33 = *v31;
  v32 = v31[1];
  v34 = v30[1];
  *v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease(v34);
  v35 = a3[9];
  v36 = (_QWORD *)((char *)a1 + v35);
  v37 = (_QWORD *)((char *)a2 + v35);
  v39 = *v37;
  v38 = v37[1];
  v40 = v36[1];
  *v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease(v40);
  v41 = a3[10];
  v42 = *(_QWORD *)((char *)a1 + v41);
  *(_QWORD *)((char *)a1 + v41) = *(_QWORD *)((char *)a2 + v41);
  swift_bridgeObjectRelease(v42);
  v43 = a3[11];
  v44 = *(_QWORD *)((char *)a1 + v43);
  *(_QWORD *)((char *)a1 + v43) = *(_QWORD *)((char *)a2 + v43);
  swift_bridgeObjectRelease(v44);
  v45 = a3[12];
  v46 = *(_QWORD *)((char *)a1 + v45);
  *(_QWORD *)((char *)a1 + v45) = *(_QWORD *)((char *)a2 + v45);
  swift_bridgeObjectRelease(v46);
  v47 = a3[13];
  v48 = (char *)a1 + v47;
  v49 = (char *)a2 + v47;
  if (*(_QWORD *)((char *)a1 + v47 + 24))
    sub_10000CDB8(v48);
  v50 = *((_OWORD *)v49 + 1);
  *(_OWORD *)v48 = *(_OWORD *)v49;
  *((_OWORD *)v48 + 1) = v50;
  *((_QWORD *)v48 + 4) = *((_QWORD *)v49 + 4);
  v51 = a3[14];
  v52 = *(_QWORD *)((char *)a1 + v51);
  *(_QWORD *)((char *)a1 + v51) = *(_QWORD *)((char *)a2 + v51);
  swift_bridgeObjectRelease(v52);
  v53 = a3[15];
  v54 = *(_QWORD *)((char *)a1 + v53);
  *(_QWORD *)((char *)a1 + v53) = *(_QWORD *)((char *)a2 + v53);
  swift_bridgeObjectRelease(v54);
  v55 = a3[17];
  *((_BYTE *)a1 + a3[16]) = *((_BYTE *)a2 + a3[16]);
  v56 = (char *)a1 + v55;
  v57 = (char *)a2 + v55;
  *(_DWORD *)v56 = *(_DWORD *)v57;
  v58 = a3[18];
  v59 = a3[19];
  v60 = *(_QWORD *)((char *)a2 + v58);
  v56[4] = v57[4];
  *(_QWORD *)((char *)a1 + v58) = v60;
  v61 = (_QWORD *)((char *)a1 + v59);
  v62 = (_QWORD *)((char *)a2 + v59);
  v63 = *(_QWORD *)((char *)a1 + v59 + 8);
  if (v63)
  {
    v64 = v62[1];
    if (v64)
    {
      *v61 = *v62;
      v61[1] = v64;
      swift_bridgeObjectRelease(v63);
      v65 = v62[3];
      v66 = v61[3];
      v61[2] = v62[2];
      v61[3] = v65;
      swift_bridgeObjectRelease(v66);
      v67 = v62[5];
      v68 = v61[5];
      v61[4] = v62[4];
      v61[5] = v67;
      swift_bridgeObjectRelease(v68);
      v69 = v62[7];
      v70 = v61[7];
      v61[6] = v62[6];
      v61[7] = v69;
      swift_bridgeObjectRelease(v70);
      v71 = v62[9];
      v72 = v61[9];
      v61[8] = v62[8];
      v61[9] = v71;
      swift_bridgeObjectRelease(v72);
      goto LABEL_14;
    }
    sub_100017CD0((_QWORD *)((char *)a1 + v59));
  }
  v73 = *((_OWORD *)v62 + 3);
  *((_OWORD *)v61 + 2) = *((_OWORD *)v62 + 2);
  *((_OWORD *)v61 + 3) = v73;
  *((_OWORD *)v61 + 4) = *((_OWORD *)v62 + 4);
  v74 = *((_OWORD *)v62 + 1);
  *(_OWORD *)v61 = *(_OWORD *)v62;
  *((_OWORD *)v61 + 1) = v74;
LABEL_14:
  v75 = a3[20];
  v76 = (_QWORD *)((char *)a1 + v75);
  v77 = (_QWORD *)((char *)a2 + v75);
  v78 = *(_QWORD *)((char *)a1 + v75 + 8);
  if (v78)
  {
    v79 = v77[1];
    if (v79)
    {
      *v76 = *v77;
      v76[1] = v79;
      swift_bridgeObjectRelease(v78);
      v80 = v77[3];
      v81 = v76[3];
      v76[2] = v77[2];
      v76[3] = v80;
      swift_bridgeObjectRelease(v81);
      v82 = v77[5];
      v83 = v76[5];
      v76[4] = v77[4];
      v76[5] = v82;
      swift_bridgeObjectRelease(v83);
      v84 = v77[7];
      v85 = v76[7];
      v76[6] = v77[6];
      v76[7] = v84;
      swift_bridgeObjectRelease(v85);
      v86 = v77[9];
      v87 = v76[9];
      v76[8] = v77[8];
      v76[9] = v86;
      swift_bridgeObjectRelease(v87);
      goto LABEL_19;
    }
    sub_100017CD0(v76);
  }
  v88 = *((_OWORD *)v77 + 3);
  *((_OWORD *)v76 + 2) = *((_OWORD *)v77 + 2);
  *((_OWORD *)v76 + 3) = v88;
  *((_OWORD *)v76 + 4) = *((_OWORD *)v77 + 4);
  v89 = *((_OWORD *)v77 + 1);
  *(_OWORD *)v76 = *(_OWORD *)v77;
  *((_OWORD *)v76 + 1) = v89;
LABEL_19:
  v90 = a3[21];
  v91 = *(_QWORD *)((char *)a1 + v90);
  *(_QWORD *)((char *)a1 + v90) = *(_QWORD *)((char *)a2 + v90);
  swift_bridgeObjectRelease(v91);
  v92 = a3[22];
  v93 = *(void **)((char *)a1 + v92);
  *(_QWORD *)((char *)a1 + v92) = *(_QWORD *)((char *)a2 + v92);

  v94 = a3[23];
  v95 = (_QWORD *)((char *)a1 + v94);
  v96 = (_QWORD *)((char *)a2 + v94);
  v98 = *v96;
  v97 = v96[1];
  v99 = v95[1];
  *v95 = v98;
  v95[1] = v97;
  swift_bridgeObjectRelease(v99);
  v100 = a3[24];
  v101 = (_QWORD *)((char *)a1 + v100);
  v102 = (_QWORD *)((char *)a2 + v100);
  v104 = *v102;
  v103 = v102[1];
  v105 = v101[1];
  *v101 = v104;
  v101[1] = v103;
  swift_bridgeObjectRelease(v105);
  v106 = a3[25];
  v107 = (_QWORD *)((char *)a1 + v106);
  v108 = (_QWORD *)((char *)a2 + v106);
  v110 = *v108;
  v109 = v108[1];
  v111 = v107[1];
  *v107 = v110;
  v107[1] = v109;
  swift_bridgeObjectRelease(v111);
  v112 = a3[27];
  *((_BYTE *)a1 + a3[26]) = *((_BYTE *)a2 + a3[26]);
  v113 = (void **)((char *)a1 + v112);
  v114 = (void **)((char *)a2 + v112);
  v115 = type metadata accessor for AdjustedImage(0);
  v116 = *(_QWORD *)(v115 - 8);
  v117 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v116 + 48);
  v118 = v117(v113, 1, v115);
  v223 = (uint64_t (*)(char *, uint64_t, uint64_t))v117;
  v119 = v117(v114, 1, v115);
  v222 = v116;
  if (!v118)
  {
    if (!v119)
    {
      v134 = *v113;
      *v113 = *v114;

      v135 = *(int *)(v115 + 20);
      v113 = (void **)((char *)v113 + v135);
      v114 = (void **)((char *)v114 + v135);
      v136 = type metadata accessor for URL(0);
      v137 = *(_QWORD *)(v136 - 8);
      v138 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v137 + 48);
      v139 = v138(v113, 1, v136);
      v140 = v138(v114, 1, v136);
      if (v139)
      {
        if (!v140)
        {
          (*(void (**)(void **, void **, uint64_t))(v137 + 32))(v113, v114, v136);
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v137 + 56))(v113, 0, 1, v136);
          goto LABEL_33;
        }
      }
      else
      {
        if (!v140)
        {
          (*(void (**)(void **, void **, uint64_t))(v137 + 40))(v113, v114, v136);
          goto LABEL_33;
        }
        (*(void (**)(void **, uint64_t))(v137 + 8))(v113, v136);
      }
      v126 = &qword_1000D5DB8;
LABEL_26:
      v127 = sub_10000D604(v126);
      memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
      goto LABEL_33;
    }
    sub_10001126C((uint64_t)v113, type metadata accessor for AdjustedImage);
LABEL_25:
    v126 = &qword_1000D5E60;
    goto LABEL_26;
  }
  if (v119)
    goto LABEL_25;
  *v113 = *v114;
  v120 = *(int *)(v115 + 20);
  v121 = (char *)v113 + v120;
  v122 = (char *)v114 + v120;
  v123 = type metadata accessor for URL(0);
  v124 = *(_QWORD *)(v123 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v124 + 48))(v122, 1, v123))
  {
    v125 = sub_10000D604(&qword_1000D5DB8);
    memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v124 + 32))(v121, v122, v123);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v121, 0, 1, v123);
  }
  (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v116 + 56))(v113, 0, 1, v115);
LABEL_33:
  v141 = a3[29];
  *((_BYTE *)a1 + a3[28]) = *((_BYTE *)a2 + a3[28]);
  *(_QWORD *)((char *)a1 + v141) = *(_QWORD *)((char *)a2 + v141);
  v142 = a3[31];
  *(_QWORD *)((char *)a1 + a3[30]) = *(_QWORD *)((char *)a2 + a3[30]);
  v143 = (char *)a1 + v142;
  v144 = (char *)a2 + v142;
  *(_QWORD *)v143 = *(_QWORD *)v144;
  v143[8] = v144[8];
  v145 = a3[33];
  *((_BYTE *)a1 + a3[32]) = *((_BYTE *)a2 + a3[32]);
  *((_BYTE *)a1 + v145) = *((_BYTE *)a2 + v145);
  v146 = a3[35];
  *((_BYTE *)a1 + a3[34]) = *((_BYTE *)a2 + a3[34]);
  *(_DWORD *)((char *)a1 + v146) = *(_DWORD *)((char *)a2 + v146);
  v147 = a3[37];
  *(_DWORD *)((char *)a1 + a3[36]) = *(_DWORD *)((char *)a2 + a3[36]);
  v148 = (_QWORD *)((char *)a1 + v147);
  v149 = (_QWORD *)((char *)a2 + v147);
  v151 = *v149;
  v150 = v149[1];
  v152 = v148[1];
  *v148 = v151;
  v148[1] = v150;
  swift_bridgeObjectRelease(v152);
  v153 = a3[39];
  *((_BYTE *)a1 + a3[38]) = *((_BYTE *)a2 + a3[38]);
  *((_BYTE *)a1 + v153) = *((_BYTE *)a2 + v153);
  v154 = a3[41];
  *(_DWORD *)((char *)a1 + a3[40]) = *(_DWORD *)((char *)a2 + a3[40]);
  *((_BYTE *)a1 + v154) = *((_BYTE *)a2 + v154);
  v155 = a3[43];
  *((_BYTE *)a1 + a3[42]) = *((_BYTE *)a2 + a3[42]);
  *((_BYTE *)a1 + v155) = *((_BYTE *)a2 + v155);
  v156 = a3[44];
  v157 = (_QWORD *)((char *)a1 + v156);
  v158 = (_QWORD *)((char *)a2 + v156);
  v160 = *v158;
  v159 = v158[1];
  v161 = v157[1];
  *v157 = v160;
  v157[1] = v159;
  swift_bridgeObjectRelease(v161);
  v162 = a3[45];
  v163 = (void **)((char *)a1 + v162);
  v164 = (void **)((char *)a2 + v162);
  v165 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v166 = *(_QWORD *)(v165 - 8);
  v167 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v166 + 48);
  v168 = v167(v163, 1, v165);
  v169 = v167(v164, 1, v165);
  if (!v168)
  {
    if (v169)
    {
      sub_10001126C((uint64_t)v163, type metadata accessor for HomePodSetupViewModel.StereoPairImage);
      goto LABEL_39;
    }
    v177 = *v163;
    *v163 = *v164;

    v178 = *(int *)(v115 + 20);
    v179 = (char *)v163 + v178;
    v180 = (char *)v164 + v178;
    v181 = type metadata accessor for URL(0);
    v182 = *(_QWORD *)(v181 - 8);
    v183 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v182 + 48);
    v218 = v179;
    LODWORD(v179) = v183(v179, 1, v181);
    v221 = v181;
    v217 = v183;
    v184 = v183(v180, 1, v181);
    if ((_DWORD)v179)
    {
      if (v184)
      {
        v185 = sub_10000D604(&qword_1000D5DB8);
        memcpy(v218, v180, *(_QWORD *)(*(_QWORD *)(v185 - 8) + 64));
        v186 = v181;
      }
      else
      {
        v186 = v181;
        (*(void (**)(void *, char *, uint64_t))(v182 + 32))(v218, v180, v181);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v182 + 56))(v218, 0, 1, v181);
      }
    }
    else
    {
      v186 = v181;
      if (v184)
      {
        (*(void (**)(void *, uint64_t))(v182 + 8))(v218, v181);
        v195 = sub_10000D604(&qword_1000D5DB8);
        memcpy(v218, v180, *(_QWORD *)(*(_QWORD *)(v195 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v182 + 40))(v218, v180, v181);
      }
    }
    v196 = *(int *)(v165 + 20);
    v197 = (void **)((char *)v163 + v196);
    v198 = (void **)((char *)v164 + v196);
    v199 = v223((char *)v163 + v196, 1, v115);
    v200 = v223((char *)v198, 1, v115);
    if (v199)
    {
      if (!v200)
      {
        *v197 = *v198;
        v201 = *(int *)(v115 + 20);
        v202 = (char *)v197 + v201;
        v203 = (char *)v198 + v201;
        if (v217(v203, 1, v186))
        {
          v204 = sub_10000D604(&qword_1000D5DB8);
          memcpy(v202, v203, *(_QWORD *)(*(_QWORD *)(v204 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v182 + 32))(v202, v203, v186);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v182 + 56))(v202, 0, 1, v186);
        }
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v222 + 56))(v197, 0, 1, v115);
        goto LABEL_72;
      }
    }
    else
    {
      if (!v200)
      {
        v208 = *v197;
        *v197 = *v198;

        v209 = *(int *)(v115 + 20);
        v210 = (char *)v197 + v209;
        v211 = (char *)v198 + v209;
        v212 = v217(v210, 1, v186);
        v213 = v217(v211, 1, v186);
        if (v212)
        {
          if (!v213)
          {
            (*(void (**)(char *, char *, uint64_t))(v182 + 32))(v210, v211, v221);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v182 + 56))(v210, 0, 1, v221);
            goto LABEL_72;
          }
        }
        else
        {
          if (!v213)
          {
            (*(void (**)(char *, char *, uint64_t))(v182 + 40))(v210, v211, v221);
            goto LABEL_72;
          }
          (*(void (**)(char *, uint64_t))(v182 + 8))(v210, v221);
        }
        v205 = *(_QWORD *)(*(_QWORD *)(sub_10000D604(&qword_1000D5DB8) - 8) + 64);
        v206 = (void **)v210;
        v207 = v211;
LABEL_66:
        memcpy(v206, v207, v205);
LABEL_72:
        v214 = *(int *)(v165 + 24);
        v215 = *(void **)((char *)v163 + v214);
        *(void **)((char *)v163 + v214) = *(void **)((char *)v164 + v214);

        return a1;
      }
      sub_10001126C((uint64_t)v197, type metadata accessor for AdjustedImage);
    }
    v205 = *(_QWORD *)(*(_QWORD *)(sub_10000D604(&qword_1000D5E60) - 8) + 64);
    v206 = v197;
    v207 = v198;
    goto LABEL_66;
  }
  if (v169)
  {
LABEL_39:
    v176 = sub_10000D604(&qword_1000D5E68);
    memcpy(v163, v164, *(_QWORD *)(*(_QWORD *)(v176 - 8) + 64));
    return a1;
  }
  *v163 = *v164;
  v170 = *(int *)(v115 + 20);
  v171 = (char *)v163 + v170;
  v172 = (char *)v164 + v170;
  v173 = type metadata accessor for URL(0);
  v174 = *(_QWORD *)(v173 - 8);
  v220 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v174 + 48);
  __src = (void (**)(void *, const void *, uint64_t))v174;
  if (v220(v172, 1, v173))
  {
    v175 = sub_10000D604(&qword_1000D5DB8);
    memcpy(v171, v172, *(_QWORD *)(*(_QWORD *)(v175 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v174 + 32))(v171, v172, v173);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v174 + 56))(v171, 0, 1, v173);
  }
  v187 = *(int *)(v165 + 20);
  v188 = (void **)((char *)v163 + v187);
  v189 = (void **)((char *)v164 + v187);
  if (v223((char *)v164 + v187, 1, v115))
  {
    v190 = sub_10000D604(&qword_1000D5E60);
    memcpy(v188, v189, *(_QWORD *)(*(_QWORD *)(v190 - 8) + 64));
  }
  else
  {
    *v188 = *v189;
    v191 = *(int *)(v115 + 20);
    v192 = (char *)v188 + v191;
    v193 = (char *)v189 + v191;
    if (v220(v193, 1, v173))
    {
      v194 = sub_10000D604(&qword_1000D5DB8);
      memcpy(v192, v193, *(_QWORD *)(*(_QWORD *)(v194 - 8) + 64));
    }
    else
    {
      __src[4](v192, v193, v173);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))__src[7])(v192, 0, 1, v173);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v222 + 56))(v188, 0, 1, v115);
  }
  *(void **)((char *)v163 + *(int *)(v165 + 24)) = *(void **)((char *)v164 + *(int *)(v165 + 24));
  (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v166 + 56))(v163, 0, 1, v165);
  return a1;
}

uint64_t sub_100018F68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100018F74);
}

uint64_t sub_100018F74(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_10000D604(&qword_1000D5E58);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[6];
    }
    else
    {
      v12 = sub_10000D604(&qword_1000D5E60);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[27];
      }
      else
      {
        v10 = sub_10000D604(&qword_1000D5E68);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[45];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_100019044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100019050);
}

uint64_t sub_100019050(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_10000D604(&qword_1000D5E58);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[6];
    }
    else
    {
      v12 = sub_10000D604(&qword_1000D5E60);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[27];
      }
      else
      {
        v10 = sub_10000D604(&qword_1000D5E68);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[45];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for HomePodSetupViewModel(uint64_t a1)
{
  return sub_100019130(a1, (uint64_t *)&unk_1000D5EC8, (uint64_t)&nominal type descriptor for HomePodSetupViewModel);
}

uint64_t sub_100019130(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata(a1, a3);
  return result;
}

void sub_100019164(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[42];

  v8[0] = &unk_100099308;
  v8[1] = &unk_100099308;
  sub_1000192F4(319, &qword_1000D5ED8, type metadata accessor for AdjustedMovie);
  if (v3 <= 0x3F)
  {
    v8[2] = *(_QWORD *)(v2 - 8) + 64;
    v8[3] = &unk_100099308;
    v8[4] = &unk_100099308;
    v8[5] = &unk_100099308;
    v8[6] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v8[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v8[8] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v8[9] = &unk_100099320;
    v8[10] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v8[11] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v8[12] = &unk_100099338;
    v8[13] = &unk_100099350;
    v8[14] = (char *)&value witness table for Builtin.Int64 + 64;
    v8[15] = &unk_100099368;
    v8[16] = &unk_100099368;
    v8[17] = &unk_100099380;
    v8[18] = &unk_100099380;
    v8[19] = &unk_100099398;
    v8[20] = &unk_100099398;
    v8[21] = &unk_100099398;
    v8[22] = &unk_100099338;
    sub_1000192F4(319, &qword_1000D5EE0, type metadata accessor for AdjustedImage);
    if (v5 <= 0x3F)
    {
      v8[23] = *(_QWORD *)(v4 - 8) + 64;
      v8[24] = &unk_100099338;
      v8[25] = (char *)&value witness table for Builtin.Int64 + 64;
      v8[26] = (char *)&value witness table for Builtin.Int64 + 64;
      v8[27] = &unk_1000993B0;
      v8[28] = &unk_100099338;
      v8[29] = &unk_100099338;
      v8[30] = &unk_100099338;
      v8[31] = (char *)&value witness table for Builtin.Int32 + 64;
      v8[32] = (char *)&value witness table for Builtin.Int32 + 64;
      v8[33] = &unk_100099308;
      v8[34] = &unk_100099338;
      v8[35] = &unk_100099338;
      v8[36] = (char *)&value witness table for Builtin.Int32 + 64;
      v8[37] = &unk_100099338;
      v8[38] = &unk_100099338;
      v8[39] = &unk_100099338;
      v8[40] = &unk_100099308;
      sub_1000192F4(319, (unint64_t *)&unk_1000D5EE8, type metadata accessor for HomePodSetupViewModel.StereoPairImage);
      if (v7 <= 0x3F)
      {
        v8[41] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 42, v8, a1 + 16);
      }
    }
  }
}

void sub_1000192F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = a3(255);
    v6 = type metadata accessor for Optional(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void **sub_100019340(void **a1, void **a2, uint64_t a3)
{
  int v3;
  char *v4;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void **v18;
  void **v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  char *__dst;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = type metadata accessor for AdjustedImage(0);
    v9 = *(int *)(v8 + 20);
    v10 = (char *)v7 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for URL(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    v15 = v4;
    if (v14(v11, 1, v12))
    {
      v16 = sub_10000D604(&qword_1000D5DB8);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v17 = *(int *)(a3 + 20);
    v18 = (void **)((char *)v7 + v17);
    v19 = (void **)((char *)a2 + v17);
    v20 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))((char *)a2 + v17, 1, v8))
    {
      v21 = sub_10000D604(&qword_1000D5E60);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v22 = *v19;
      *v18 = *v19;
      v23 = *(int *)(v8 + 20);
      __dst = (char *)v18 + v23;
      v24 = (char *)v19 + v23;
      v25 = v22;
      if (v14(v24, 1, v12))
      {
        v26 = sub_10000D604(&qword_1000D5DB8);
        memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v24, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
      }
      (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v20 + 56))(v18, 0, 1, v8);
    }
    v27 = *(int *)(a3 + 24);
    v28 = *(void **)((char *)a2 + v27);
    *(void **)((char *)v7 + v27) = v28;
    v29 = v28;
  }
  return v7;
}

void sub_10001954C(id *a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  id *v9;
  char *v10;

  v4 = type metadata accessor for AdjustedImage(0);
  v5 = (char *)a1 + *(int *)(v4 + 20);
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  v9 = (id *)((char *)a1 + *(int *)(a2 + 20));
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v9, 1, v4))
  {

    v10 = (char *)v9 + *(int *)(v4 + 20);
    if (!v8(v10, 1, v6))
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }

}

void **sub_100019638(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  uint64_t v16;
  void **v17;
  void **v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  char *__dst;

  v6 = *a2;
  *a1 = *a2;
  v7 = type metadata accessor for AdjustedImage(0);
  v8 = *(int *)(v7 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v6;
  if (v13(v10, 1, v11))
  {
    v15 = sub_10000D604(&qword_1000D5DB8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v16 = *(int *)(a3 + 20);
  v17 = (void **)((char *)a1 + v16);
  v18 = (void **)((char *)a2 + v16);
  v19 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))((char *)a2 + v16, 1, v7))
  {
    v20 = sub_10000D604(&qword_1000D5E60);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v21 = *v18;
    *v17 = *v18;
    v22 = *(int *)(v7 + 20);
    __dst = (char *)v17 + v22;
    v23 = (char *)v18 + v22;
    v24 = v21;
    if (v13(v23, 1, v11))
    {
      v25 = sub_10000D604(&qword_1000D5DB8);
      memcpy(__dst, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v23, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v7);
  }
  v26 = *(int *)(a3 + 24);
  v27 = *(void **)((char *)a2 + v26);
  *(void **)((char *)a1 + v26) = v27;
  v28 = v27;
  return a1;
}

void **sub_10001981C(void **a1, void **a2, uint64_t a3)
{
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  void **v19;
  void **v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  int v24;
  void *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  id v29;
  uint64_t v30;
  size_t v31;
  void **v32;
  void **v33;
  void *v34;
  void *v35;
  id v36;
  uint64_t v37;
  char *v38;
  char *v39;
  int v40;
  int v41;
  uint64_t v42;
  void *v43;
  void *v44;
  id v45;
  void **v47;

  v5 = *a2;
  v6 = *a1;
  *a1 = *a2;
  v7 = v5;

  v8 = type metadata accessor for AdjustedImage(0);
  v9 = *(int *)(v8 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    v17 = sub_10000D604(&qword_1000D5DB8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  v18 = *(int *)(a3 + 20);
  v19 = (void **)((char *)a1 + v18);
  v47 = a2;
  v20 = (void **)((char *)a2 + v18);
  v21 = *(_QWORD *)(v8 - 8);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22((char *)a1 + v18, 1, v8);
  v24 = v22((char *)v20, 1, v8);
  if (!v23)
  {
    if (!v24)
    {
      v34 = *v20;
      v35 = *v19;
      *v19 = *v20;
      v36 = v34;

      v37 = *(int *)(v8 + 20);
      v38 = (char *)v19 + v37;
      v39 = (char *)v20 + v37;
      v40 = v14(v38, 1, v12);
      v41 = v14(v39, 1, v12);
      if (v40)
      {
        if (!v41)
        {
          (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v38, v39, v12);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v38, 0, 1, v12);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v41)
        {
          (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v38, v39, v12);
          goto LABEL_21;
        }
        (*(void (**)(char *, uint64_t))(v13 + 8))(v38, v12);
      }
      v31 = *(_QWORD *)(*(_QWORD *)(sub_10000D604(&qword_1000D5DB8) - 8) + 64);
      v32 = (void **)v38;
      v33 = (void **)v39;
      goto LABEL_14;
    }
    sub_10001126C((uint64_t)v19, type metadata accessor for AdjustedImage);
LABEL_13:
    v31 = *(_QWORD *)(*(_QWORD *)(sub_10000D604(&qword_1000D5E60) - 8) + 64);
    v32 = v19;
    v33 = v20;
LABEL_14:
    memcpy(v32, v33, v31);
    goto LABEL_21;
  }
  if (v24)
    goto LABEL_13;
  v25 = *v20;
  *v19 = *v20;
  v26 = *(int *)(v8 + 20);
  v27 = (char *)v19 + v26;
  v28 = (char *)v20 + v26;
  v29 = v25;
  if (v14(v28, 1, v12))
  {
    v30 = sub_10000D604(&qword_1000D5DB8);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v27, v28, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v27, 0, 1, v12);
  }
  (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v21 + 56))(v19, 0, 1, v8);
LABEL_21:
  v42 = *(int *)(a3 + 24);
  v43 = *(void **)((char *)a1 + v42);
  v44 = *(void **)((char *)v47 + v42);
  *(void **)((char *)a1 + v42) = v44;
  v45 = v44;

  return a1;
}

_QWORD *sub_100019B48(_QWORD *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *__dst;

  *a1 = *(_QWORD *)a2;
  v6 = type metadata accessor for AdjustedImage(0);
  v7 = *(int *)(v6 + 20);
  v8 = (char *)a1 + v7;
  v9 = &a2[v7];
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    v13 = sub_10000D604(&qword_1000D5DB8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = *(int *)(a3 + 20);
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = &a2[v14];
  v17 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(&a2[v14], 1, v6))
  {
    v18 = sub_10000D604(&qword_1000D5E60);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    *v15 = *(_QWORD *)v16;
    v19 = *(int *)(v6 + 20);
    __dst = (char *)v15 + v19;
    v20 = &v16[v19];
    if (v12(v20, 1, v10))
    {
      v21 = sub_10000D604(&qword_1000D5DB8);
      memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(__dst, v20, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v6);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

void **sub_100019D20(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  void **v18;
  void **v19;
  void **v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  char *v26;
  char *v27;
  void **v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v6 = *a1;
  *a1 = *a2;

  v7 = type metadata accessor for AdjustedImage(0);
  v8 = *(int *)(v7 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  v42 = v12;
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    v16 = sub_10000D604(&qword_1000D5DB8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  v43 = a3;
  v17 = *(int *)(a3 + 20);
  v18 = (void **)((char *)a1 + v17);
  v19 = a2;
  v20 = (void **)((char *)a2 + v17);
  v21 = *(_QWORD *)(v7 - 8);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22((char *)a1 + v17, 1, v7);
  v24 = v22((char *)v20, 1, v7);
  if (v23)
  {
    if (!v24)
    {
      *v18 = *v20;
      v25 = *(int *)(v7 + 20);
      v26 = (char *)v18 + v25;
      v27 = (char *)v20 + v25;
      v28 = v19;
      if (v13(v27, 1, v11))
      {
        v29 = sub_10000D604(&qword_1000D5DB8);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v26, v27, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v26, 0, 1, v11);
      }
      (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v7);
      goto LABEL_20;
    }
LABEL_13:
    v30 = sub_10000D604(&qword_1000D5E60);
    memcpy(v18, v20, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    v28 = v19;
LABEL_20:
    v37 = v43;
    goto LABEL_21;
  }
  if (v24)
  {
    sub_10001126C((uint64_t)v18, type metadata accessor for AdjustedImage);
    goto LABEL_13;
  }
  v31 = *v18;
  *v18 = *v20;

  v32 = *(int *)(v7 + 20);
  v33 = (char *)v18 + v32;
  v34 = (char *)v20 + v32;
  v35 = v13(v33, 1, v11);
  v36 = v13(v34, 1, v11);
  v28 = v19;
  if (!v35)
  {
    v37 = v43;
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 40))(v33, v34, v11);
      goto LABEL_21;
    }
    (*(void (**)(char *, uint64_t))(v42 + 8))(v33, v11);
    goto LABEL_24;
  }
  v37 = v43;
  if (v36)
  {
LABEL_24:
    v41 = sub_10000D604(&qword_1000D5DB8);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_21;
  }
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v33, v34, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v33, 0, 1, v11);
LABEL_21:
  v38 = *(int *)(v37 + 24);
  v39 = *(void **)((char *)a1 + v38);
  *(void **)((char *)a1 + v38) = *(void **)((char *)v28 + v38);

  return a1;
}

uint64_t sub_10001A06C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10001A078);
}

uint64_t sub_10001A078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;
  int v15;

  v6 = type metadata accessor for AdjustedImage(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_10000D604(&qword_1000D5E60);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  v15 = v14 - 1;
  if (v15 < 0)
    v15 = -1;
  return (v15 + 1);
}

uint64_t sub_10001A130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10001A13C);
}

uint64_t sub_10001A13C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for AdjustedImage(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_10000D604(&qword_1000D5E60);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = a2;
  return result;
}

void sub_10001A1E4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  v2 = type metadata accessor for AdjustedImage(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1000192F4(319, &qword_1000D5EE0, type metadata accessor for AdjustedImage);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = &unk_100099380;
      swift_initStructMetadata(a1, 256, 3, v6, a1 + 16);
    }
  }
}

uint64_t *sub_10001A280(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v14);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for URL(0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain(v7);
    v12(v9, v10, v11);
    v13 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)v4 + v13) = *(uint64_t *)((char *)a2 + v13);
    *(uint64_t *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
  }
  return v4;
}

uint64_t sub_10001A34C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_10001A394(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for URL(0);
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain(v6);
  v11(v8, v9, v10);
  v12 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  return a1;
}

_QWORD *sub_10001A434(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  return a1;
}

_OWORD *sub_10001A4DC(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v10) = *(_QWORD *)((char *)a2 + v10);
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  return a1;
}

_QWORD *sub_10001A568(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  return a1;
}

uint64_t sub_10001A5FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10001A608);
}

uint64_t sub_10001A608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for URL(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_10001A684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10001A690);
}

uint64_t sub_10001A690(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for URL(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_10001A704(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_100099308;
  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[4] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10001A788(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000111E8(v2, qword_1000D5DA0);
  v3 = sub_10001118C(v2, (uint64_t)qword_1000D5DA0);
  if (qword_1000D55C0 != -1)
    swift_once(&qword_1000D55C0, sub_100058090);
  v4 = sub_10001118C(v2, (uint64_t)qword_1000DB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

uint64_t sub_10001A818()
{
  void **v0;
  void **v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  id v7;
  Swift::String v8;
  void *object;
  Swift::String v10;
  Swift::String v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  void *v17;
  Swift::String v18;
  uint64_t v19;
  void *v20;
  Swift::String v21;
  uint64_t v22;
  Swift::String v23;
  uint64_t v25;
  void *v26;
  _QWORD v27[2];

  v1 = v0;
  v2 = sub_10000D604(&qword_1000D5DB8);
  __chkstk_darwin(v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27[0] = 0x3D6567616D69;
  v27[1] = 0xE600000000000000;
  v26 = *v0;
  v5 = v26;
  v6 = sub_100035CA4(0, &qword_1000D60F0, UIImage_ptr);
  v7 = v5;
  v8._countAndFlagsBits = String.init<A>(reflecting:)(&v26, v6);
  object = v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(object);
  v10._countAndFlagsBits = 32;
  v10._object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  v11._countAndFlagsBits = v27[0];
  v12 = (void *)v27[1];
  v27[0] = 0x657473756A64413CLL;
  v27[1] = 0xEF206567616D4964;
  v11._object = v12;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(v12);
  v14 = v27[0];
  v13 = v27[1];
  v27[0] = 0;
  v27[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease(v27[1]);
  strcpy((char *)v27, "adjustmentURL=");
  HIBYTE(v27[1]) = -18;
  v15 = type metadata accessor for AdjustedImage(0);
  sub_10000E0F0((uint64_t)v1 + *(int *)(v15 + 20), (uint64_t)v4, &qword_1000D5DB8);
  v16._countAndFlagsBits = String.init<A>(reflecting:)(v4, v2);
  v17 = v16._object;
  String.append(_:)(v16);
  swift_bridgeObjectRelease(v17);
  v18._countAndFlagsBits = 32;
  v18._object = (void *)0xE100000000000000;
  String.append(_:)(v18);
  v19 = v27[0];
  v20 = (void *)v27[1];
  v27[0] = v14;
  v27[1] = v13;
  swift_bridgeObjectRetain(v13);
  v21._countAndFlagsBits = v19;
  v21._object = v20;
  String.append(_:)(v21);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v20);
  v22 = v27[1];
  swift_bridgeObjectRetain(v27[1]);
  v23._countAndFlagsBits = 62;
  v23._object = (void *)0xE100000000000000;
  String.append(_:)(v23);
  swift_bridgeObjectRelease(v22);
  return v27[0];
}

uint64_t sub_10001AA10()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  Swift::String v6;
  void *object;
  Swift::String v8;
  Swift::String v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  Swift::String v14;
  void *v15;
  Swift::String v16;
  uint64_t v17;
  void *v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  Swift::String v22;
  void *v23;
  Swift::String v24;
  uint64_t v25;
  void *v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  Swift::String v30;
  void *v31;
  Swift::String v32;
  uint64_t v33;
  void *v34;
  Swift::String v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  void *v39;
  Swift::String v40;
  uint64_t v41;
  void *v42;
  Swift::String v43;
  uint64_t v44;
  Swift::String v45;
  _QWORD v47[2];
  _QWORD v48[2];

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  strcpy((char *)v48, "fileName=");
  WORD1(v48[1]) = 0;
  HIDWORD(v48[1]) = -385875968;
  v5 = *((_QWORD *)v0 + 1);
  v47[0] = *(_QWORD *)v0;
  v47[1] = v5;
  swift_bridgeObjectRetain(v5);
  v6._countAndFlagsBits = String.init<A>(reflecting:)(v47, &type metadata for String);
  object = v6._object;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(object);
  v8._countAndFlagsBits = 32;
  v8._object = (void *)0xE100000000000000;
  String.append(_:)(v8);
  v9._countAndFlagsBits = v48[0];
  v10 = (void *)v48[1];
  v48[0] = 0x657473756A64413CLL;
  v48[1] = 0xEF206569766F4D64;
  v9._object = v10;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(v10);
  v12 = v48[0];
  v11 = v48[1];
  v48[0] = 0;
  v48[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease(v48[1]);
  strcpy((char *)v48, "adjustmentURL=");
  HIBYTE(v48[1]) = -18;
  v13 = (int *)type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, &v0[v13[5]], v1);
  v14._countAndFlagsBits = String.init<A>(reflecting:)(v4, v1);
  v15 = v14._object;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(v15);
  v16._countAndFlagsBits = 32;
  v16._object = (void *)0xE100000000000000;
  String.append(_:)(v16);
  v17 = v48[0];
  v18 = (void *)v48[1];
  v48[0] = v12;
  v48[1] = v11;
  swift_bridgeObjectRetain(v11);
  v19._countAndFlagsBits = v17;
  v19._object = v18;
  String.append(_:)(v19);
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(v18);
  v21 = v48[0];
  v20 = v48[1];
  v48[0] = 0x3D6874646977;
  v48[1] = 0xE600000000000000;
  v47[0] = *(_QWORD *)&v0[v13[6]];
  v22._countAndFlagsBits = String.init<A>(reflecting:)(v47, &type metadata for CGFloat);
  v23 = v22._object;
  String.append(_:)(v22);
  swift_bridgeObjectRelease(v23);
  v24._countAndFlagsBits = 32;
  v24._object = (void *)0xE100000000000000;
  String.append(_:)(v24);
  v25 = v48[0];
  v26 = (void *)v48[1];
  v48[0] = v21;
  v48[1] = v20;
  swift_bridgeObjectRetain(v20);
  v27._countAndFlagsBits = v25;
  v27._object = v26;
  String.append(_:)(v27);
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v26);
  v29 = v48[0];
  v28 = v48[1];
  strcpy((char *)v48, "height=");
  v48[1] = 0xE700000000000000;
  v47[0] = *(_QWORD *)&v0[v13[7]];
  v30._countAndFlagsBits = String.init<A>(reflecting:)(v47, &type metadata for CGFloat);
  v31 = v30._object;
  String.append(_:)(v30);
  swift_bridgeObjectRelease(v31);
  v32._countAndFlagsBits = 32;
  v32._object = (void *)0xE100000000000000;
  String.append(_:)(v32);
  v33 = v48[0];
  v34 = (void *)v48[1];
  v48[0] = v29;
  v48[1] = v28;
  swift_bridgeObjectRetain(v28);
  v35._countAndFlagsBits = v33;
  v35._object = v34;
  String.append(_:)(v35);
  swift_bridgeObjectRelease(v28);
  swift_bridgeObjectRelease(v34);
  v37 = v48[0];
  v36 = v48[1];
  v48[0] = 0;
  v48[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease(v48[1]);
  strcpy((char *)v48, "productHeight=");
  HIBYTE(v48[1]) = -18;
  v47[0] = *(_QWORD *)&v0[v13[8]];
  v38._countAndFlagsBits = String.init<A>(reflecting:)(v47, &type metadata for CGFloat);
  v39 = v38._object;
  String.append(_:)(v38);
  swift_bridgeObjectRelease(v39);
  v40._countAndFlagsBits = 32;
  v40._object = (void *)0xE100000000000000;
  String.append(_:)(v40);
  v41 = v48[0];
  v42 = (void *)v48[1];
  v48[0] = v37;
  v48[1] = v36;
  swift_bridgeObjectRetain(v36);
  v43._countAndFlagsBits = v41;
  v43._object = v42;
  String.append(_:)(v43);
  swift_bridgeObjectRelease(v36);
  swift_bridgeObjectRelease(v42);
  v44 = v48[1];
  swift_bridgeObjectRetain(v48[1]);
  v45._countAndFlagsBits = 62;
  v45._object = (void *)0xE100000000000000;
  String.append(_:)(v45);
  swift_bridgeObjectRelease(v44);
  return v48[0];
}

void sub_10001AD98(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v3);
  v4 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v4);
  v5 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v5);
  __asm { BR              X10 }
}

uint64_t sub_10001AE94()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  NSString v10;
  uint64_t Int64;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  int v18;

  v6 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v2, 1, 1, v6);
  v7 = type metadata accessor for AdjustedImage(0);
  *(_OWORD *)(v5 - 176) = 0u;
  *(_OWORD *)(v5 - 160) = 0u;
  *(_OWORD *)(v5 - 144) = 0u;
  *(_OWORD *)(v5 - 128) = 0u;
  *(_OWORD *)(v5 - 112) = 0u;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
  *(_QWORD *)(v0 + 64) = 0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  v9 = String._bridgeToObjectiveC()();
  v10 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v9, v10, 0);

  sub_10005B198((uint64_t *)(v0 + 80));
  v12 = *(_OWORD *)(v0 + 96);
  v13 = *(_OWORD *)(v0 + 112);
  v14 = *(_OWORD *)(v0 + 128);
  v15 = *(_QWORD *)(v0 + 144);
  v16 = *(_QWORD *)(v0 + 152);
  *(_OWORD *)(v0 + 160) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 176) = v12;
  *(_OWORD *)(v0 + 192) = v13;
  *(_OWORD *)(v0 + 208) = v14;
  *(_BYTE *)(v0 + 28) = 1;
  *(_QWORD *)(v0 + 224) = v15;
  *(_QWORD *)(v0 + 232) = v16;
  return sub_1000328AC(0, 0xE000000000000000, 0, 0xE000000000000000, v2, 0, 0xE000000000000000, 0, v1, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, v0 + 32,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v18,
           0,
           1,
           1,
           v0 + 160,
           v5 - 176,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           v3,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           v4);
}

uint64_t sub_10001B49C()
{
  _QWORD *v0;
  uint64_t v1;

  return sub_10001CE7C(v1, v0);
}

uint64_t sub_10001B4C4()
{
  _QWORD *v0;

  return sub_10001DB78(v0);
}

uint64_t sub_10001B4E8()
{
  _QWORD *v0;

  return sub_10001DEF8(v0);
}

uint64_t sub_10001B50C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_10001E2F4(v1, v0);
}

uint64_t sub_10001B534()
{
  _QWORD *v0;
  uint64_t v1;

  return sub_10001EC28(v1, v0);
}

uint64_t sub_10001B55C()
{
  _QWORD *v0;

  return sub_10001F148(v0);
}

uint64_t sub_10001B580()
{
  _QWORD *v0;
  uint64_t v1;

  return sub_100024954(v1, v0);
}

void sub_10001B5A8()
{
  _QWORD *v0;

  sub_100025750(v0);
}

uint64_t sub_10001B5CC()
{
  _QWORD *v0;
  uint64_t v1;

  return sub_100020550(v1, v0);
}

uint64_t sub_10001B5F4()
{
  _QWORD *v0;

  return sub_10002ED50(v0);
}

uint64_t sub_10001B61C()
{
  _QWORD *v0;

  return sub_100028218(v0);
}

uint64_t sub_10001B640()
{
  _QWORD *v0;

  return sub_1000289A8(v0);
}

uint64_t sub_10001B664()
{
  _QWORD *v0;

  return sub_100028F04(v0);
}

uint64_t sub_10001B68C()
{
  _QWORD *v0;

  return sub_1000294EC(v0);
}

uint64_t sub_10001B6B0()
{
  _QWORD *v0;
  uint64_t v1;

  return sub_1000299E4(v1, v0);
}

uint64_t sub_10001B6D8()
{
  _QWORD *v0;
  uint64_t v1;

  return sub_100029E80(v1, v0);
}

uint64_t sub_10001B700()
{
  _QWORD *v0;
  uint64_t v1;

  return sub_10002A9D4(v1, v0);
}

uint64_t sub_10001B728()
{
  _QWORD *v0;
  uint64_t v1;

  return sub_10002A45C(v1, v0);
}

void sub_10001B750()
{
  _QWORD *v0;

  sub_10002BB58(v0);
}

uint64_t sub_10001B778()
{
  _QWORD *v0;

  return sub_10002C32C(v0);
}

uint64_t sub_10001B7A0()
{
  _QWORD *v0;

  return sub_10002CA98(v0);
}

uint64_t sub_10001B7C8()
{
  _QWORD *v0;

  return sub_10002D2A4(v0);
}

uint64_t sub_10001B7F0()
{
  _QWORD *v0;

  return sub_10002D800(v0);
}

uint64_t sub_10001B818()
{
  _QWORD *v0;
  uint64_t v1;

  return sub_10002DE54(v1, v0);
}

uint64_t sub_10001B840()
{
  _QWORD *v0;

  return sub_10002E4B4(v0);
}

uint64_t sub_10001B864()
{
  _QWORD *v0;

  return sub_10002E9AC(v0);
}

uint64_t sub_10001B88C()
{
  _QWORD *v0;

  return sub_10002AF24(v0);
}

uint64_t sub_10001B8B4()
{
  _QWORD *v0;
  uint64_t v1;

  return sub_10002F610(v1, v0);
}

void sub_10001B8DC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_100027790(v1, v0);
}

uint64_t sub_10001B904()
{
  _QWORD *v0;
  uint64_t v1;

  return sub_100027D78(v1, v0);
}

uint64_t sub_10001B92C()
{
  _QWORD *v0;
  uint64_t v1;

  return sub_1000229B0(v1, v0);
}

double sub_10001B954()
{
  _QWORD *v0;
  uint64_t v1;
  double result;

  *(_QWORD *)&result = sub_1000220C0(v1, v0).n128_u64[0];
  return result;
}

uint64_t sub_10001B97C()
{
  _QWORD *v0;
  uint64_t v1;

  return sub_10002B4F0(v1, v0);
}

void sub_10001B9A4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_1000233EC(v1, v2, v0);
}

uint64_t sub_10001B9D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  return sub_100023AE0(v1, v2, v0);
}

uint64_t sub_10001B9FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  return sub_100031818(v1, v2, v0);
}

uint64_t sub_10001BA28()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1000310F4(v1, v2, v0);
}

uint64_t sub_10001BA54()
{
  uint64_t *v0;
  uint64_t v1;

  return sub_10001F4C8(v1, v0);
}

uint64_t sub_10001BA7C()
{
  _QWORD *v0;

  return sub_100025C1C(v0);
}

uint64_t sub_10001BAA0()
{
  _QWORD *v0;

  return sub_10002FD9C(v0);
}

uint64_t sub_10001BAC8()
{
  _QWORD *v0;

  return sub_100030158(v0);
}

double sub_10001BAF0()
{
  _QWORD *v0;
  uint64_t v1;
  double result;

  *(_QWORD *)&result = sub_100030930(v1, v0).n128_u64[0];
  return result;
}

uint64_t sub_10001BB18()
{
  _QWORD *v0;
  uint64_t v1;

  return sub_100030518(v1, v0);
}

uint64_t sub_10001BC38@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  void *v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSString v48;
  NSString v49;
  uint64_t Int64;
  int v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  _QWORD *v59;
  char v60;
  _BYTE v61[32];
  uint64_t v62;
  _OWORD v63[4];
  uint64_t v64;
  uint64_t v65;
  _OWORD v66[4];
  uint64_t v67;
  uint64_t v68;
  _BYTE v69[96];

  v59 = a2;
  v3 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v3);
  v58 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v5);
  v57 = (uint64_t)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000D604(&qword_1000D5DB8);
  __chkstk_darwin(v7);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v53 = (char *)&v53 - v15;
  v16 = sub_10000D604(&qword_1000D5E58);
  v17 = __chkstk_darwin(v16);
  v56 = (uint64_t)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v55 = (char **)((char *)&v53 - v19);
  if (*(_BYTE *)(a1 + 69))
    v20 = 8;
  else
    v20 = 9;
  sub_10004F878(v20);
  v22 = v21;
  v23 = String._bridgeToObjectiveC()();
  v24 = sub_100006354(v23);

  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v27 = v26;
  swift_bridgeObjectRelease(v22);

  v28 = sub_10000D604(&qword_1000D6168);
  v29 = swift_allocObject(v28, 64, 7);
  *(_OWORD *)(v29 + 16) = xmmword_100099220;
  *(_QWORD *)(v29 + 32) = v25;
  *(_QWORD *)(v29 + 40) = v27;
  *(_QWORD *)(v29 + 48) = 0;
  v30 = *(void **)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_assetBundle);
  v54 = v29;
  *(_BYTE *)(v29 + 56) = 1;
  v31 = objc_msgSend(v30, "URLForResource:withExtension:", SFDeviceAssetNameAdjustments, 0);
  if (!v31)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_14;
  }
  v32 = v31;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  v33 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v33(v9, v14, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
LABEL_14:
    sub_10000DC40((uint64_t)v9, &qword_1000D5DB8);
    v42 = type metadata accessor for AdjustedMovie(0);
    v41 = v55;
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v55, 1, 1, v42);
    goto LABEL_15;
  }
  v34 = (uint64_t)v53;
  v33(v53, v9, v10);
  v35 = qword_100099230[*(_BYTE *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode) == 5];
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode) == 5)
    v36 = 150.0;
  else
    v36 = 200.0;
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode) == 5)
    v37 = 260.0;
  else
    v37 = 291.333333;
  v38 = *(_QWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_movieName);
  v39 = *(_QWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_movieName + 8);
  v40 = (int *)type metadata accessor for AdjustedMovie(0);
  v41 = v55;
  v33((char *)v55 + v40[5], (char *)v34, v10);
  *v41 = v38;
  v41[1] = v39;
  *(_QWORD *)((char *)v41 + v40[6]) = v35;
  *(double *)((char *)v41 + v40[7]) = v37;
  *(double *)((char *)v41 + v40[8]) = v36;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(*((_QWORD *)v40 - 1) + 56))(v41, 0, 1, v40);
  swift_bridgeObjectRetain(v39);
LABEL_15:
  v43 = *(_QWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_productName + 8);
  v55 = *(_QWORD **)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_productName);
  v53 = (char *)v43;
  v44 = v56;
  sub_10000E0F0((uint64_t)v41, v56, &qword_1000D5E58);
  memset(v69, 0, 80);
  swift_bridgeObjectRetain(v43);
  v45 = v57;
  sub_100045F1C(0, 0, v57);
  v46 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v47 = (uint64_t)v58;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v58, 1, 1, v46);
  v62 = 0;
  memset(v61, 0, sizeof(v61));
  v48 = String._bridgeToObjectiveC()();
  v49 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v48, v49, 0);

  sub_10005B198((uint64_t *)v63);
  v66[0] = v63[0];
  v66[1] = v63[1];
  v66[2] = v63[2];
  v66[3] = v63[3];
  v67 = v64;
  v68 = v65;
  sub_10000DC40((uint64_t)v41, &qword_1000D5E58);
  v60 = 1;
  return sub_1000328AC((uint64_t)v55, (uint64_t)v53, 0, 0xE000000000000000, v44, 0, 0xE000000000000000, 0, v59, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v54, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v61,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v52,
           0,
           1,
           1,
           (uint64_t)v66,
           (uint64_t)v69,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           v45,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           v47);
}

uint64_t sub_10001C234@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  unint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSString v42;
  NSString v43;
  uint64_t Int64;
  int v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  _QWORD *v51;
  char *v52;
  char v53;
  __int128 v54;
  __int128 v55;
  _UNKNOWN **v56;
  _OWORD v57[4];
  uint64_t v58;
  uint64_t v59;
  _OWORD v60[4];
  uint64_t v61;
  uint64_t v62;
  _QWORD v63[12];

  v4 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v4);
  v50 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v6);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v9);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = String._bridgeToObjectiveC()();
  v13 = sub_100006354(v12);

  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v48 = v15;
  v49 = v14;

  v16 = String._bridgeToObjectiveC()();
  v17 = sub_100006354(v16);

  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v20 = v19;

  v21 = sub_10000D604(&qword_1000D6168);
  v22 = swift_allocObject(v21, 64, 7);
  *(_OWORD *)(v22 + 16) = xmmword_100099220;
  *(_QWORD *)(v22 + 32) = v18;
  *(_QWORD *)(v22 + 40) = v20;
  *(_QWORD *)(v22 + 48) = 0;
  *(_BYTE *)(v22 + 56) = 1;
  v46 = a1;
  v23 = *(_QWORD *)(a1 + 40);
  v51 = a2;
  v52 = v11;
  if (!v23)
  {
    v31 = 0;
    goto LABEL_17;
  }
  if ((unint64_t)v23 >> 62)
  {
    if (v23 >= 0)
      v32 = v23 & 0xFFFFFFFFFFFFFF8;
    else
      v32 = v23;
    swift_bridgeObjectRetain(v23);
    v24 = _CocoaArrayWrapper.endIndex.getter(v32);
    if (v24)
      goto LABEL_4;
LABEL_16:
    swift_bridgeObjectRelease(v23);
    v31 = _swiftEmptyArrayStorage;
    goto LABEL_17;
  }
  v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v23);
  if (!v24)
    goto LABEL_16;
LABEL_4:
  v63[0] = _swiftEmptyArrayStorage;
  result = specialized ContiguousArray.reserveCapacity(_:)(v24);
  if (v24 < 0)
    goto LABEL_28;
  v47 = v8;
  v26 = 0;
  do
  {
    if ((v23 & 0xC000000000000001) != 0)
      v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v26, v23);
    else
      v27 = *(id *)(v23 + 8 * v26 + 32);
    v28 = v27;
    ++v26;
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v27);
    v29 = *(_QWORD *)(v63[0] + 16);
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v29);
    v30 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v28);
    specialized ContiguousArray._endMutation()(v30);
  }
  while (v24 != v26);
  v31 = (_QWORD *)v63[0];
  swift_bridgeObjectRelease(v23);
  v11 = v52;
  v8 = v47;
LABEL_17:
  v33 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v11, 1, 1, v33);
  if (v31)
    v34 = v31;
  else
    v34 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain(v31);
  v35 = (char *)sub_100077A24((uint64_t)v34);
  result = swift_bridgeObjectRelease(v34);
  v47 = v35;
  if (!v31)
  {
    v56 = 0;
    v54 = 0u;
    v55 = 0u;
    goto LABEL_25;
  }
  v36 = *(_QWORD *)(v46 + 72);
  *((_QWORD *)&v55 + 1) = &type metadata for HomeOption;
  v56 = &off_1000C57A8;
  if ((v36 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v36 < v31[2])
  {
    v37 = (id)v31[v36 + 4];
    swift_bridgeObjectRelease(v31);
    *(_QWORD *)&v54 = v37;
LABEL_25:
    v38 = type metadata accessor for AdjustedImage(0);
    memset(v63, 0, 80);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v8, 1, 1, v38);
    v39 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
    v40 = (uint64_t)v8;
    v41 = (uint64_t)v50;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v50, 1, 1, v39);
    v42 = String._bridgeToObjectiveC()();
    v43 = String._bridgeToObjectiveC()();
    Int64 = CFPrefs_GetInt64(v42, v43, 0);

    sub_10005B198((uint64_t *)v57);
    v60[0] = v57[0];
    v60[1] = v57[1];
    v60[2] = v57[2];
    v60[3] = v57[3];
    v53 = 1;
    v61 = v58;
    v62 = v59;
    return sub_1000328AC(v49, v48, 0, 0xE000000000000000, (uint64_t)v52, 0, 0xE000000000000000, 0, v51, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v22, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v47, (uint64_t)&v54,
             (uint64_t)_swiftEmptyArrayStorage,
             (uint64_t)_swiftEmptyArrayStorage,
             Int64 != 0,
             v45,
             0,
             1,
             1,
             (uint64_t)v60,
             (uint64_t)v63,
             0,
             0,
             0,
             0,
             0,
             0,
             0,
             0,
             0,
             v40,
             0,
             0,
             1,
             0,
             0,
             0,
             0,
             0,
             0,
             0xE000000000000000,
             0,
             0,
             0,
             0,
             0,
             0,
             0xE000000000000000,
             v41);
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_10001C748@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t inited;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t result;
  unint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  NSString v67;
  NSString v68;
  uint64_t Int64;
  int v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  _QWORD *v82;
  char *v83;
  char v84;
  __int128 v85;
  __int128 v86;
  _UNKNOWN **v87;
  uint64_t v88;
  uint64_t v89;
  _OWORD v90[4];
  uint64_t v91;
  uint64_t v92;
  _OWORD v93[4];
  uint64_t v94;
  uint64_t v95;
  _QWORD v96[12];

  v4 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v4);
  v81 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v6);
  v8 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v9);
  v83 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)type metadata accessor for IndexPath(0);
  v76 = *(v11 - 1);
  v77 = v11;
  __chkstk_darwin(v11);
  v75 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000D604(&qword_1000D6170);
  __chkstk_darwin(v13);
  v15 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = String._bridgeToObjectiveC()();
  v17 = sub_100006354(v16);

  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v79 = v19;
  v80 = v18;

  v20 = a1;
  v21 = String._bridgeToObjectiveC()();
  v22 = sub_100006354(v21);

  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v25 = v24;

  v26 = sub_10000D604(&qword_1000D6168);
  v27 = swift_allocObject(v26, 64, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100099220;
  *(_QWORD *)(v27 + 32) = v23;
  *(_QWORD *)(v27 + 40) = v25;
  *(_QWORD *)(v27 + 48) = 0;
  v78 = v27;
  *(_BYTE *)(v27 + 56) = 1;
  v28 = *(_QWORD *)(v20 + 48);
  v82 = a2;
  if (v28)
  {
    v29 = *(_QWORD *)(v28 + 16);
    v30 = _swiftEmptyArrayStorage;
    if (v29)
    {
      v72 = v15;
      v73 = v20;
      v74 = v8;
      v96[0] = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain(v28);
      sub_10007A248(0, v29, 0);
      v30 = (_QWORD *)v96[0];
      v71 = v28;
      v31 = (uint64_t *)(v28 + 40);
      do
      {
        v33 = *(v31 - 1);
        v32 = *v31;
        v96[0] = v30;
        v35 = v30[2];
        v34 = v30[3];
        swift_bridgeObjectRetain(v32);
        if (v35 >= v34 >> 1)
        {
          sub_10007A248(v34 > 1, v35 + 1, 1);
          v30 = (_QWORD *)v96[0];
        }
        v30[2] = v35 + 1;
        v36 = &v30[4 * v35];
        *((_BYTE *)v36 + 32) = 0;
        v31 += 2;
        v36[5] = v33;
        v36[6] = v32;
        *((_BYTE *)v36 + 56) = 1;
        --v29;
      }
      while (v29);
      swift_bridgeObjectRelease(v71);
      v20 = v73;
      v8 = v74;
      v15 = v72;
    }
  }
  else
  {
    v30 = _swiftEmptyArrayStorage;
  }
  v37 = *(_QWORD *)(v20 + 56);
  v38 = _swiftEmptyArrayStorage;
  if (v37)
  {
    swift_bridgeObjectRetain(v30);
    v39 = swift_bridgeObjectRetain(v37);
    v38 = sub_100035260(v39, (uint64_t)v30);
    swift_bridgeObjectRelease(v37);
    swift_bridgeObjectRelease(v30);
  }
  v96[0] = v30;
  swift_bridgeObjectRetain(v30);
  v40 = swift_bridgeObjectRetain(v38);
  sub_1000350CC(v40);
  v41 = v96[0];
  if (!*(_QWORD *)(v96[0] + 16))
  {
    swift_bridgeObjectRelease(v38);
    swift_bridgeObjectRelease(v30);
    v52 = 0;
    v53 = 0;
    v54 = 0;
    v55 = 0;
    v51 = (uint64_t)v83;
    goto LABEL_21;
  }
  v42 = sub_10000D604(&qword_1000D6178);
  inited = swift_initStackObject(v42, &v89);
  *(_OWORD *)(inited + 16) = xmmword_100098100;
  v44 = v30[2];
  swift_bridgeObjectRelease(v30);
  *(_QWORD *)(inited + 32) = v44;
  v45 = v38[2];
  swift_bridgeObjectRelease(v38);
  *(_QWORD *)(inited + 40) = v45;
  v46 = v20 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_defaultRoomIndexPath;
  swift_beginAccess(v20 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_defaultRoomIndexPath, &v88, 0, 0);
  sub_10000E0F0(v46, (uint64_t)v15, &qword_1000D6170);
  v47 = v76;
  v48 = v77;
  if (!(*(unsigned int (**)(char *, uint64_t, _QWORD *))(v76 + 48))(v15, 1, v77))
  {
    v56 = (uint64_t)v15;
    v57 = v75;
    (*(void (**)(char *, uint64_t, _QWORD *))(v47 + 16))(v75, v56, v48);
    sub_10000DC40(v56, &qword_1000D6170);
    v58 = v47;
    v50 = sub_100041904(inited);
    LOBYTE(v56) = v59;
    swift_bridgeObjectRelease(inited);
    result = (*(uint64_t (**)(char *, _QWORD *))(v58 + 8))(v57, v48);
    v51 = (uint64_t)v83;
    if ((v56 & 1) == 0)
    {
      if ((v50 & 0x8000000000000000) == 0)
        goto LABEL_19;
      __break(1u);
    }
    v50 = 0;
    goto LABEL_19;
  }
  swift_bridgeObjectRelease(inited);
  result = sub_10000DC40((uint64_t)v15, &qword_1000D6170);
  v50 = 0;
  v51 = (uint64_t)v83;
LABEL_19:
  if (v50 >= *(_QWORD *)(v41 + 16))
  {
    __break(1u);
    return result;
  }
  v60 = v41 + 32 * v50;
  v52 = *(_BYTE *)(v60 + 32);
  v53 = *(_QWORD *)(v60 + 40);
  v54 = *(_QWORD *)(v60 + 48);
  v55 = *(_BYTE *)(v60 + 56);
  swift_bridgeObjectRetain(v54);
LABEL_21:
  v61 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v51, 1, 1, v61);
  v77 = sub_100077A38(v41);
  swift_bridgeObjectRelease(v41);
  if (v54)
  {
    *((_QWORD *)&v86 + 1) = &type metadata for RoomOption;
    v87 = &off_1000C5708;
    v62 = swift_allocObject(&unk_1000C2EE8, 41, 7);
    *(_QWORD *)&v85 = v62;
    *(_BYTE *)(v62 + 16) = v52;
    *(_QWORD *)(v62 + 24) = v53;
    *(_QWORD *)(v62 + 32) = v54;
    *(_BYTE *)(v62 + 40) = v55;
  }
  else
  {
    v87 = 0;
    v85 = 0u;
    v86 = 0u;
  }
  v63 = type metadata accessor for AdjustedImage(0);
  memset(v96, 0, 80);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v8, 1, 1, v63);
  v64 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v65 = (uint64_t)v8;
  v66 = (uint64_t)v81;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v81, 1, 1, v64);
  v67 = String._bridgeToObjectiveC()();
  v68 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v67, v68, 0);

  sub_10005B198((uint64_t *)v90);
  v93[0] = v90[0];
  v93[1] = v90[1];
  v93[2] = v90[2];
  v93[3] = v90[3];
  v84 = 1;
  v94 = v91;
  v95 = v92;
  return sub_1000328AC(v80, v79, 0, 0xE000000000000000, v51, 0, 0xE000000000000000, 0, v82, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v78, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v77, (uint64_t)&v85,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v70,
           0,
           1,
           1,
           (uint64_t)v93,
           (uint64_t)v96,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           v65,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           v66);
}

uint64_t sub_10001CE7C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  NSString v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  double v29;
  id v30;
  uint64_t inited;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  char v37;
  int v38;
  NSString v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  Swift::String v50;
  void *v51;
  id v52;
  _QWORD *v53;
  unint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  char v59;
  id v60;
  NSString v61;
  uint64_t v62;
  NSDictionary v63;
  id v64;
  uint64_t v65;
  void *v66;
  NSString *v67;
  id v68;
  id v69;
  NSString *v70;
  id v71;
  unint64_t v72;
  NSString v73;
  id v74;
  uint64_t v75;
  void *v76;
  void *v77;
  Swift::String v78;
  id v79;
  NSString v80;
  id v81;
  uint64_t v82;
  void *v83;
  void *v84;
  Swift::String v85;
  id v86;
  Swift::String v87;
  id v88;
  unint64_t v89;
  NSString v90;
  unint64_t v91;
  Class isa;
  uint64_t v93;
  unint64_t v94;
  id v95;
  uint64_t v96;
  NSString v97;
  Class v98;
  id v99;
  NSString *v100;
  NSString v101;
  Class v102;
  uint64_t v103;
  unint64_t v104;
  id v105;
  NSString v106;
  Class v107;
  void *v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  id v119;
  NSString v120;
  NSString v121;
  uint64_t Int64;
  uint64_t v123;
  uint64_t v124;
  int v126;
  _QWORD v127[2];
  _QWORD *v128;
  NSString *v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  id v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  _QWORD *v142;
  id v143;
  uint64_t v144;
  char v145;
  _BYTE v146[32];
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  _OWORD v152[4];
  uint64_t v153;
  uint64_t v154;
  _OWORD v155[4];
  uint64_t v156;
  uint64_t v157;
  id v158[12];

  v142 = a2;
  v3 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v3);
  v141 = (char *)v127 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v5);
  v140 = (char *)v127 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v7);
  v144 = (uint64_t)v127 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = String._bridgeToObjectiveC()();
  v10 = sub_100006354(v9);

  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v138 = v12;
  v139 = v11;

  v13 = String._bridgeToObjectiveC()();
  v14 = sub_100006618();

  if (!v14)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v16 = v15;
    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v16);
  }
  v17 = sub_100006354(v14);

  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v20 = v19;

  v150 = v18;
  v151 = v20;
  v21 = String._bridgeToObjectiveC()();
  v22 = sub_100006354(v21);

  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v134 = v24;
  v135 = v23;

  v25 = objc_msgSend((id)objc_opt_self(UIFontDescriptor), "preferredFontDescriptorWithTextStyle:", UIFontTextStyleHeadline);
  v26 = objc_msgSend(v25, "fontDescriptorWithSymbolicTraits:", 2);

  *(_QWORD *)&v155[0] = v26;
  v27 = sub_10000D604(&qword_1000D6180);
  Optional.unwrap(_:file:line:)(v158, sub_1000340B0, 0, "HDSViewService/HomePodSetupViewModel.swift", 42, 2, 1199, v27);

  v28 = v158[0];
  objc_msgSend(v28, "pointSize");
  v30 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v28, v29);
  v137 = v28;

  *(_QWORD *)&v132 = sub_10000D604(&qword_1000D6188);
  inited = swift_initStackObject(v132, &v149);
  v131 = xmmword_100098100;
  *(_OWORD *)(inited + 16) = xmmword_100098100;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v32 = sub_100035CA4(0, &qword_1000D6190, UIFont_ptr);
  *(_QWORD *)(inited + 40) = v30;
  *(_QWORD *)(inited + 64) = v32;
  *(_QWORD *)(inited + 72) = NSForegroundColorAttributeName;
  v33 = (void *)objc_opt_self(UIColor);
  *(_QWORD *)&v130 = NSFontAttributeName;
  v34 = v30;
  v129 = NSForegroundColorAttributeName;
  v35 = objc_msgSend(v33, "labelColor");
  v36 = sub_100035CA4(0, (unint64_t *)&unk_1000D6198, UIColor_ptr);
  *(_QWORD *)(inited + 104) = v36;
  *(_QWORD *)(inited + 80) = v35;
  *(_QWORD *)&v133 = sub_10000C81C(inited);
  v37 = *(_BYTE *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeHasLocationEnabled);
  v143 = v34;
  if ((v37 & 1) != 0)
  {
    v38 = 0;
  }
  else
  {
    v38 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeHasExistingHomePods) ^ 1;
    if (*(_BYTE *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_userEnabledLocationForHomePod) == 1
      && (v38 & 1) != 0)
    {
      v39 = String._bridgeToObjectiveC()();
      v40 = sub_100006354(v39);

      v136 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
      v42 = v41;

      v43 = sub_10000D604((uint64_t *)&unk_1000D7B70);
      v44 = swift_allocObject(v43, 72, 7);
      *(_OWORD *)(v44 + 16) = xmmword_100099220;
      v46 = *(_QWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeName);
      v45 = *(_QWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeName + 8);
      *(_QWORD *)(v44 + 56) = &type metadata for String;
      *(_QWORD *)(v44 + 64) = sub_100035088();
      *(_QWORD *)(v44 + 32) = v46;
      *(_QWORD *)(v44 + 40) = v45;
      swift_bridgeObjectRetain(v42);
      swift_bridgeObjectRetain(v45);
      v47 = String.init(format:_:)(v136, v42, v44);
      v49 = v48;
      swift_bridgeObjectRelease(v42);
      v158[0] = (id)2570;
      v158[1] = (id)0xE200000000000000;
      v50._countAndFlagsBits = v47;
      v50._object = v49;
      String.append(_:)(v50);
      v51 = v49;
      v34 = v143;
      swift_bridgeObjectRelease(v51);
      v52 = v158[1];
      String.append(_:)(*(Swift::String *)v158);
      swift_bridgeObjectRelease(v42);
      swift_bridgeObjectRelease(v52);
      v38 = 1;
    }
  }
  v53 = (_QWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_iCloudId);
  v54 = *(_QWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_iCloudId + 8);
  v55 = (_QWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_iTunesId);
  v56 = *(_QWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_iTunesId + 8);
  LODWORD(v136) = v38;
  if (v54)
  {
    if (v56)
    {
      if (*v53 == *v55 && v54 == v56)
      {
        v57 = v54;
LABEL_16:
        v60 = objc_allocWithZone((Class)NSAttributedString);
        swift_bridgeObjectRetain(v54);
        v61 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v57);
        type metadata accessor for Key(0);
        sub_100035BD4();
        v62 = v133;
        v63.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v62);
        v64 = objc_msgSend(v60, "initWithString:attributes:", v61, v63.super.isa);
        goto LABEL_24;
      }
      v58 = (_QWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_iTunesId);
      v59 = _stringCompareWithSmolCheck(_:_:expecting:)(*v53, v54, *v55, v56, 0);
      v55 = v58;
      v57 = v54;
      if ((v59 & 1) != 0)
        goto LABEL_16;
    }
  }
  else if (!v56)
  {
    v54 = 0;
    v57 = 0xE100000000000000;
    goto LABEL_16;
  }
  v128 = v55;
  v65 = swift_initStackObject(v132, &v148);
  *(_OWORD *)(v65 + 16) = v131;
  v66 = (void *)v130;
  *(_QWORD *)(v65 + 32) = v130;
  *(_QWORD *)(v65 + 40) = v34;
  *(_QWORD *)(v65 + 64) = v32;
  v67 = v129;
  *(_QWORD *)(v65 + 72) = v129;
  v68 = v34;
  v69 = v66;
  v70 = v67;
  v71 = objc_msgSend(v33, "secondaryLabelColor");
  *(_QWORD *)(v65 + 104) = v36;
  *(_QWORD *)(v65 + 80) = v71;
  v72 = sub_10000C81C(v65);
  v73 = String._bridgeToObjectiveC()();
  v74 = sub_100006354(v73);

  v75 = static String._unconditionallyBridgeFromObjectiveC(_:)(v74);
  v77 = v76;

  v158[0] = (id)v75;
  v158[1] = v77;
  swift_bridgeObjectRetain(v77);
  v78._countAndFlagsBits = 32;
  v78._object = (void *)0xE100000000000000;
  String.append(_:)(v78);
  swift_bridgeObjectRelease(v77);
  v79 = v158[1];
  v80 = String._bridgeToObjectiveC()();
  v81 = sub_100006354(v80);

  v82 = static String._unconditionallyBridgeFromObjectiveC(_:)(v81);
  v84 = v83;

  v158[0] = (id)10;
  v158[1] = (id)0xE100000000000000;
  v85._countAndFlagsBits = v82;
  v85._object = v84;
  String.append(_:)(v85);
  swift_bridgeObjectRelease(v84);
  v86 = v158[1];
  swift_bridgeObjectRetain(v158[1]);
  v87._countAndFlagsBits = 32;
  v87._object = (void *)0xE100000000000000;
  String.append(_:)(v87);
  swift_bridgeObjectRelease(v86);
  v129 = (NSString *)v158[1];
  *(id *)&v130 = v158[0];
  v88 = objc_allocWithZone((Class)NSAttributedString);
  v89 = v72;
  swift_bridgeObjectRetain(v72);
  v90 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v79);
  type metadata accessor for Key(0);
  v91 = sub_100035BD4();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v89);
  *(_QWORD *)&v132 = objc_msgSend(v88, "initWithString:attributes:", v90, isa);

  v93 = v53[1];
  if (v93)
    v94 = v53[1];
  else
    v94 = 0xE100000000000000;
  v95 = objc_allocWithZone((Class)NSAttributedString);
  v96 = v133;
  swift_bridgeObjectRetain(v133);
  swift_bridgeObjectRetain(v93);
  v97 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v94);
  v127[1] = v91;
  v98 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v96);
  *(_QWORD *)&v131 = objc_msgSend(v95, "initWithString:attributes:", v97, v98);

  v99 = objc_allocWithZone((Class)NSAttributedString);
  v100 = v129;
  v101 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v100);
  v102 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v89);
  v61 = objc_msgSend(v99, "initWithString:attributes:", v101, v102);

  v103 = v128[1];
  if (v103)
    v104 = v128[1];
  else
    v104 = 0xE100000000000000;
  v105 = objc_allocWithZone((Class)NSAttributedString);
  swift_bridgeObjectRetain(v103);
  v106 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v104);
  v107 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v96);
  v63.super.isa = (Class)objc_msgSend(v105, "initWithString:attributes:", v106, v107);

  v64 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "init");
  v108 = (void *)v132;
  objc_msgSend(v64, "appendAttributedString:", (_QWORD)v132);
  v109 = (void *)v131;
  objc_msgSend(v64, "appendAttributedString:", (_QWORD)v131);
  objc_msgSend(v64, "appendAttributedString:", v61);
  objc_msgSend(v64, "appendAttributedString:", v63.super.isa);

LABEL_24:
  v111 = v134;
  v110 = v135;

  v112 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 56))(v144, 1, 1, v112);
  v134 = v151;
  v135 = v150;
  v113 = sub_10000D604(&qword_1000D6168);
  v114 = swift_allocObject(v113, 64, 7);
  *(_OWORD *)(v114 + 16) = xmmword_100099220;
  *(_QWORD *)(v114 + 32) = v110;
  *(_QWORD *)(v114 + 40) = v111;
  *(_QWORD *)(v114 + 48) = 0;
  *(_BYTE *)(v114 + 56) = 1;
  v136 = (uint64_t)sub_10003535C(v136 & 1);
  v115 = type metadata accessor for AdjustedImage(0);
  memset(v158, 0, 80);
  v116 = (uint64_t)v140;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 56))(v140, 1, 1, v115);
  v117 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v118 = (uint64_t)v141;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 56))(v141, 1, 1, v117);
  v147 = 0;
  memset(v146, 0, sizeof(v146));
  v119 = v64;
  v120 = String._bridgeToObjectiveC()();
  v121 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v120, v121, 0);

  LOBYTE(v120) = Int64 != 0;
  sub_10005B198((uint64_t *)v152);
  v132 = v152[1];
  v133 = v152[0];
  v130 = v152[3];
  v131 = v152[2];
  v123 = v153;
  v124 = v154;

  v155[0] = v133;
  v155[1] = v132;
  v155[2] = v131;
  v155[3] = v130;
  v156 = v123;
  v157 = v124;
  v145 = 1;
  return sub_1000328AC(v139, v138, 0, 0xE000000000000000, v144, v135, v134, 0, v142, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v114, v136, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v146,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           (char)v120,
           v126,
           0,
           1,
           1,
           (uint64_t)v155,
           (uint64_t)v158,
           0,
           (uint64_t)v64,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           v116,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           v118);
}

uint64_t sub_10001DB78@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSString v24;
  NSString v25;
  uint64_t Int64;
  int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  char v32;
  _BYTE v33[32];
  uint64_t v34;
  _OWORD v35[4];
  uint64_t v36;
  uint64_t v37;
  _OWORD v38[4];
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[96];

  v31 = a1;
  v1 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v1);
  v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = String._bridgeToObjectiveC()();
  v11 = sub_100006354(v10);

  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v29 = v13;
  v30 = v12;

  v14 = String._bridgeToObjectiveC()();
  v15 = sub_100006354(v14);

  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  v19 = sub_10000D604(&qword_1000D6168);
  v20 = swift_allocObject(v19, 64, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100099220;
  *(_QWORD *)(v20 + 32) = v16;
  *(_QWORD *)(v20 + 40) = v18;
  *(_QWORD *)(v20 + 48) = 1;
  *(_BYTE *)(v20 + 56) = 10;
  v21 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v9, 1, 1, v21);
  v22 = type metadata accessor for AdjustedImage(0);
  memset(v41, 0, 80);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v6, 1, 1, v22);
  v23 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v3, 1, 1, v23);
  v34 = 0;
  memset(v33, 0, sizeof(v33));
  v24 = String._bridgeToObjectiveC()();
  v25 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v24, v25, 0);

  sub_10005B198((uint64_t *)v35);
  v38[0] = v35[0];
  v38[1] = v35[1];
  v38[2] = v35[2];
  v38[3] = v35[3];
  v32 = 1;
  v39 = v36;
  v40 = v37;
  return sub_1000328AC(v30, v29, 0, 0xE000000000000000, (uint64_t)v9, 0, 0xE000000000000000, 0, v31, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v20, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v33,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v28,
           0,
           1,
           1,
           (uint64_t)v38,
           (uint64_t)v41,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           (uint64_t)v6,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           (uint64_t)v3);
}

uint64_t sub_10001DEF8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSString v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSString v32;
  NSString v33;
  uint64_t Int64;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  char v44;
  _BYTE v45[32];
  uint64_t v46;
  _OWORD v47[4];
  uint64_t v48;
  uint64_t v49;
  _OWORD v50[4];
  uint64_t v51;
  uint64_t v52;
  _BYTE v53[96];

  v43 = a1;
  v1 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v1);
  v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v7);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = String._bridgeToObjectiveC()();
  v11 = sub_100006354(v10);

  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v41 = v13;
  v42 = v12;

  v14 = String._bridgeToObjectiveC()();
  v15 = sub_100006354(v14);

  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v39 = v17;
  v40 = v16;

  v18 = String._bridgeToObjectiveC()();
  v19 = sub_100006354(v18);

  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v22 = v21;

  v23 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v9, 1, 1, v23);
  v24 = String._bridgeToObjectiveC()();
  v25 = sub_100006354(v24);

  v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  v27 = v26;

  v28 = sub_10000D604(&qword_1000D6168);
  v29 = swift_allocObject(v28, 64, 7);
  *(_OWORD *)(v29 + 16) = xmmword_100099220;
  *(_QWORD *)(v29 + 32) = v20;
  *(_QWORD *)(v29 + 40) = v22;
  *(_QWORD *)(v29 + 48) = 0;
  *(_BYTE *)(v29 + 56) = 11;
  v30 = type metadata accessor for AdjustedImage(0);
  memset(v53, 0, 80);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v6, 1, 1, v30);
  v31 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v3, 1, 1, v31);
  v46 = 0;
  memset(v45, 0, sizeof(v45));
  v32 = String._bridgeToObjectiveC()();
  v33 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v32, v33, 0);

  sub_10005B198((uint64_t *)v47);
  v50[0] = v47[0];
  v50[1] = v47[1];
  v50[2] = v47[2];
  v50[3] = v47[3];
  v44 = 1;
  v51 = v48;
  v52 = v49;
  return sub_1000328AC(v42, v41, v40, v39, (uint64_t)v9, 0, 0xE000000000000000, 0, v43, 0.0, 0.0, 0.0, 0xE000000000000000, v38, v27, v29, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v45,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v36,
           0,
           1,
           1,
           (uint64_t)v50,
           (uint64_t)v53,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           (uint64_t)v6,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           (uint64_t)v3);
}

uint64_t sub_10001E2F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  NSString v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  NSString v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSString v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  NSString v61;
  NSString v62;
  uint64_t Int64;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BOOL4 v75;
  uint64_t v76;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  _QWORD *v95;
  char v96[24];
  _DWORD v97[8];
  uint64_t v98;
  _OWORD v99[4];
  uint64_t v100;
  uint64_t v101;
  _OWORD v102[4];
  uint64_t v103;
  uint64_t v104;
  _BYTE v105[96];

  v83 = a1;
  v92 = a2;
  v2 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v2);
  v91 = (char *)&v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = type metadata accessor for HomePodSetupViewModel(0);
  __chkstk_darwin(v93);
  v95 = (uint64_t *)((char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_10000D604(&qword_1000D5E68);
  v6 = __chkstk_darwin(v5);
  v82 = (uint64_t)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v89 = (char *)&v79 - v9;
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v79 - v11;
  __chkstk_darwin(v10);
  v14 = (char *)&v79 - v13;
  v15 = sub_10000D604(&qword_1000D5E60);
  v16 = __chkstk_darwin(v15);
  v81 = (uint64_t)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v90 = (uint64_t)&v79 - v19;
  v20 = __chkstk_darwin(v18);
  v88 = (uint64_t)&v79 - v21;
  __chkstk_darwin(v20);
  v23 = (char *)&v79 - v22;
  v24 = String._bridgeToObjectiveC()();
  v25 = sub_100006354(v24);

  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  v86 = v27;
  v87 = v26;

  v28 = String._bridgeToObjectiveC()();
  v29 = sub_100006354(v28);

  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
  v84 = v31;
  v85 = v30;

  v32 = String._bridgeToObjectiveC()();
  v33 = sub_100006354(v32);

  v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
  v36 = v35;

  v37 = String._bridgeToObjectiveC()();
  v38 = sub_100006354(v37);

  v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
  v41 = v40;

  v42 = sub_10000D604(&qword_1000D6168);
  v43 = swift_allocObject(v42, 96, 7);
  *(_OWORD *)(v43 + 16) = xmmword_100098100;
  *(_QWORD *)(v43 + 32) = v34;
  *(_QWORD *)(v43 + 40) = v36;
  *(_QWORD *)(v43 + 48) = 0;
  *(_BYTE *)(v43 + 56) = 4;
  *(_QWORD *)(v43 + 64) = v39;
  *(_QWORD *)(v43 + 72) = v41;
  v44 = v83;
  *(_QWORD *)(v43 + 80) = 1;
  *(_BYTE *)(v43 + 88) = 5;
  v45 = *(unsigned __int8 *)(v44 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode);
  v94 = v14;
  if (v45 == 5)
  {
    sub_100032C94(v44, 0, 1, (uint64_t)v14);
    sub_10000E0F0((uint64_t)v14, (uint64_t)v12, &qword_1000D5E68);
    v46 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
    v47 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v46 - 8) + 48))(v12, 1);
    sub_10000DC40((uint64_t)v12, &qword_1000D5E68);
    if (v47 == 1)
    {
      if (qword_1000D5520 != -1)
        swift_once(&qword_1000D5520, sub_10001A788);
      v49 = type metadata accessor for Logger(0, v48);
      v50 = sub_10001118C(v49, (uint64_t)qword_1000D5DA0);
      v51 = Logger.logObject.getter(v50);
      v52 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v51, v52))
      {
        v53 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v53 = 0;
        _os_log_impl((void *)&_mh_execute_header, v51, v52, "createStereoPairViewModel: stereoPairImages are nil", v53, 2u);
        swift_slowDealloc(v53, -1, -1);
      }

      sub_100045F1C(0, 1, (uint64_t)v23);
    }
    else
    {
      v55 = type metadata accessor for AdjustedImage(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v23, 1, 1, v55);
    }
    v54 = v46;
  }
  else
  {
    sub_100045F1C(0, 1, (uint64_t)v23);
    v54 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v14, 1, 1, v54);
  }
  v56 = type metadata accessor for AdjustedMovie(0);
  v57 = (uint64_t)v91;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v91, 1, 1, v56);
  memset(v105, 0, 80);
  v58 = v88;
  sub_10000E0F0((uint64_t)v23, v88, &qword_1000D5E60);
  type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v80 = *(_QWORD *)(v54 - 8);
  v59 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v80 + 56);
  v60 = (uint64_t)v89;
  v83 = v54;
  v59(v89, 1, 1, v54);
  v98 = 0;
  memset(v97, 0, sizeof(v97));
  v61 = String._bridgeToObjectiveC()();
  v62 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v61, v62, 0);

  LOBYTE(v61) = Int64 != 0;
  sub_10005B198((uint64_t *)v99);
  v102[0] = v99[0];
  v102[1] = v99[1];
  v102[2] = v99[2];
  v102[3] = v99[3];
  v96[0] = 1;
  v103 = v100;
  v104 = v101;
  v64 = v95;
  sub_1000328AC(v87, v86, v85, v84, v57, 0, 0xE000000000000000, 0, v95, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v43, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v97,
    (uint64_t)_swiftEmptyArrayStorage,
    (uint64_t)_swiftEmptyArrayStorage,
    (char)v61,
    v78,
    0,
    1,
    1,
    (uint64_t)v102,
    (uint64_t)v105,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    v58,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    v60);
  sub_100035C1C((uint64_t)v94, (uint64_t)v64 + *(int *)(v93 + 180), &qword_1000D5E68);
  if (qword_1000D5520 != -1)
    swift_once(&qword_1000D5520, sub_10001A788);
  v66 = type metadata accessor for Logger(0, v65);
  sub_10001118C(v66, (uint64_t)qword_1000D5DA0);
  v91 = v23;
  v67 = (uint64_t)v23;
  v68 = v90;
  v69 = sub_10000E0F0(v67, v90, &qword_1000D5E60);
  v70 = Logger.logObject.getter(v69);
  v71 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v70, v71))
  {
    v72 = swift_slowAlloc(14, -1);
    *(_DWORD *)v72 = 67109376;
    v73 = v81;
    sub_10000E0F0(v68, v81, &qword_1000D5E60);
    v74 = type metadata accessor for AdjustedImage(0);
    v75 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 48))(v73, 1, v74) != 1;
    sub_10000DC40(v73, &qword_1000D5E60);
    sub_10000DC40(v68, &qword_1000D5E60);
    v97[0] = v75;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v97, &v97[1]);
    *(_WORD *)(v72 + 8) = 1024;
    swift_beginAccess(v95, v96, 0, 0);
    v76 = v82;
    sub_10000E0F0((uint64_t)v95 + *(int *)(v93 + 180), v82, &qword_1000D5E68);
    LODWORD(v73) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v76, 1, v83) != 1;
    sub_10000DC40(v76, &qword_1000D5E68);
    v97[0] = v73;
    v64 = v95;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v97, &v97[1]);
    _os_log_impl((void *)&_mh_execute_header, v70, v71, "createStereoPairViewModel: productImage exists = %{BOOL}d | stereoPairImages exists = %{BOOL}d", (uint8_t *)v72, 0xEu);
    swift_slowDealloc(v72, -1, -1);
  }
  else
  {
    sub_10000DC40(v68, &qword_1000D5E60);
  }

  sub_10000DC40((uint64_t)v94, &qword_1000D5E68);
  sub_10000DC40((uint64_t)v91, &qword_1000D5E60);
  swift_beginAccess(v64, v97, 0, 0);
  sub_100035CDC((uint64_t)v64, v92, type metadata accessor for HomePodSetupViewModel);
  return sub_10001126C((uint64_t)v64, type metadata accessor for HomePodSetupViewModel);
}

uint64_t sub_10001EC28@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSString v44;
  NSString v45;
  uint64_t Int64;
  uint64_t v47;
  int v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  _QWORD *v57;
  char v58;
  _BYTE v59[32];
  uint64_t v60;
  _OWORD v61[4];
  uint64_t v62;
  uint64_t v63;
  _OWORD v64[4];
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[12];

  v4 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v4);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v7);
  v54 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v9);
  v56 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = String._bridgeToObjectiveC()();
  v12 = sub_100006354(v11);

  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v52 = v14;
  v53 = v13;

  v15 = String._bridgeToObjectiveC()();
  v16 = sub_100006354(v15);

  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  v20 = String._bridgeToObjectiveC()();
  v21 = sub_100006354(v20);

  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v24 = v23;

  v25 = sub_10000D604(&qword_1000D6168);
  v26 = swift_allocObject(v25, 96, 7);
  *(_OWORD *)(v26 + 16) = xmmword_100098100;
  *(_QWORD *)(v26 + 32) = v17;
  *(_QWORD *)(v26 + 40) = v19;
  *(_QWORD *)(v26 + 48) = 0;
  *(_BYTE *)(v26 + 56) = 1;
  *(_QWORD *)(v26 + 64) = v22;
  *(_QWORD *)(v26 + 72) = v24;
  *(_QWORD *)(v26 + 80) = 1;
  *(_BYTE *)(v26 + 88) = 2;
  v27 = (_QWORD *)OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_availableAccessories;
  v51 = a1;
  v28 = *(_QWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_availableAccessories);
  if ((unint64_t)v28 >> 62)
  {
    if (v28 < 0)
      v47 = *(_QWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_availableAccessories);
    else
      v47 = v28 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_availableAccessories));
    v29 = _CocoaArrayWrapper.endIndex.getter(v47);
  }
  else
  {
    v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_availableAccessories));
  }
  v57 = a2;
  v55 = v6;
  if (!v29)
  {
    swift_bridgeObjectRelease(v28);
    v36 = _swiftEmptyArrayStorage;
LABEL_12:
    v37 = type metadata accessor for AdjustedMovie(0);
    v38 = (uint64_t)v56;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v56, 1, 1, v37);
    v50 = sub_100077B5C((uint64_t)v36);
    swift_bridgeObjectRelease(v36);
    v39 = *(_QWORD *)((char *)v27 + v51);
    v40 = type metadata accessor for AdjustedImage(0);
    memset(v67, 0, 80);
    v41 = (uint64_t)v54;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v54, 1, 1, v40);
    v42 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
    v43 = (uint64_t)v55;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v55, 1, 1, v42);
    v60 = 0;
    memset(v59, 0, sizeof(v59));
    swift_bridgeObjectRetain(v39);
    v44 = String._bridgeToObjectiveC()();
    v45 = String._bridgeToObjectiveC()();
    Int64 = CFPrefs_GetInt64(v44, v45, 0);

    sub_10005B198((uint64_t *)v61);
    v64[0] = v61[0];
    v64[1] = v61[1];
    v64[2] = v61[2];
    v64[3] = v61[3];
    v58 = 1;
    v65 = v62;
    v66 = v63;
    return sub_1000328AC(v53, v52, 0, 0xE000000000000000, v38, 0, 0xE000000000000000, 0, v57, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v26, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v50, (uint64_t)v59,
             v39,
             (uint64_t)_swiftEmptyArrayStorage,
             Int64 != 0,
             v48,
             0,
             1,
             1,
             (uint64_t)v64,
             (uint64_t)v67,
             0,
             0,
             0,
             0,
             0,
             0,
             0,
             0,
             0,
             v41,
             0,
             0,
             1,
             0,
             0,
             0,
             0,
             0,
             0,
             0xE000000000000000,
             0,
             0,
             0,
             0,
             0,
             0,
             0xE000000000000000,
             v43);
  }
  v67[0] = _swiftEmptyArrayStorage;
  result = specialized ContiguousArray.reserveCapacity(_:)(v29);
  if ((v29 & 0x8000000000000000) == 0)
  {
    v50 = v27;
    v31 = 0;
    do
    {
      if ((v28 & 0xC000000000000001) != 0)
        v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v31, v28);
      else
        v32 = *(id *)(v28 + 8 * v31 + 32);
      v33 = v32;
      ++v31;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v32);
      v34 = *(_QWORD *)(v67[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v34);
      v35 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v34, v33);
      specialized ContiguousArray._endMutation()(v35);
    }
    while (v29 != v31);
    v36 = (_QWORD *)v67[0];
    swift_bridgeObjectRelease(v28);
    v27 = v50;
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_10001F148@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSString v24;
  NSString v25;
  uint64_t Int64;
  int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  char v32;
  _BYTE v33[32];
  uint64_t v34;
  _OWORD v35[4];
  uint64_t v36;
  uint64_t v37;
  _OWORD v38[4];
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[96];

  v31 = a1;
  v1 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v1);
  v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = String._bridgeToObjectiveC()();
  v11 = sub_100006354(v10);

  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v29 = v13;
  v30 = v12;

  v14 = String._bridgeToObjectiveC()();
  v15 = sub_100006354(v14);

  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  v19 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v9, 1, 1, v19);
  v20 = sub_10000D604(&qword_1000D6168);
  v21 = swift_allocObject(v20, 64, 7);
  *(_OWORD *)(v21 + 16) = xmmword_100099220;
  *(_QWORD *)(v21 + 32) = v16;
  *(_QWORD *)(v21 + 40) = v18;
  *(_QWORD *)(v21 + 48) = 1;
  *(_BYTE *)(v21 + 56) = 1;
  v22 = type metadata accessor for AdjustedImage(0);
  memset(v41, 0, 80);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v6, 1, 1, v22);
  v23 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v3, 1, 1, v23);
  v34 = 0;
  memset(v33, 0, sizeof(v33));
  v24 = String._bridgeToObjectiveC()();
  v25 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v24, v25, 0);

  sub_10005B198((uint64_t *)v35);
  v38[0] = v35[0];
  v38[1] = v35[1];
  v38[2] = v35[2];
  v38[3] = v35[3];
  v32 = 1;
  v39 = v36;
  v40 = v37;
  return sub_1000328AC(v30, v29, 0, 0xE000000000000000, (uint64_t)v9, 0, 0xE000000000000000, 0, v31, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v21, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v33,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v28,
           0,
           1,
           1,
           (uint64_t)v38,
           (uint64_t)v41,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           (uint64_t)v6,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           (uint64_t)v3);
}

uint64_t sub_10001F4C8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  NSString v24;
  NSString v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSString v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  double v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  Swift::String v49;
  void *object;
  Swift::String v51;
  NSString v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  _QWORD *v61;
  const char *v62;
  uint64_t v63;
  uint64_t v64;
  Swift::String v65;
  void *v66;
  Swift::String v67;
  Swift::String v68;
  void *v69;
  Swift::String v70;
  uint64_t v71;
  NSString v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  NSString v83;
  id v84;
  id v85;
  void *v86;
  uint64_t v87;
  id v88;
  char *v89;
  void (*v90)(char *, char *, uint64_t);
  uint64_t v91;
  char *v92;
  uint64_t v93;
  void (*v94)(char *, _QWORD, uint64_t, uint64_t);
  char *v95;
  void (*v96)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  NSString v106;
  NSString v107;
  uint64_t v108;
  uint64_t Int64;
  uint64_t v110;
  uint64_t v111;
  __int128 v112;
  __int128 v113;
  uint64_t v115;
  void *v116;
  id v117;
  NSString v118;
  void *v119;
  id v120;
  NSString v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  NSString v128;
  NSString v129;
  uint64_t v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  uint64_t v134;
  uint64_t v135;
  int v136;
  _QWORD *v137;
  id v138;
  uint64_t v139;
  char *v140;
  char *v141;
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  char *v146;
  uint64_t *v147;
  uint64_t v148;
  __int128 v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  __int128 v155;
  uint64_t v156;
  __int128 v157;
  __int128 v158;
  char v159;
  __int128 v160;
  __int128 v161;
  uint64_t v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  _BYTE v170[72];
  void *v171;
  unint64_t v172;

  *(_QWORD *)&v158 = a1;
  v3 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v3);
  v154 = (char *)&v137 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v5);
  v7 = (char *)&v137 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000D604(&qword_1000D5E58);
  v9 = __chkstk_darwin(v8);
  *(_QWORD *)&v157 = (char *)&v137 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v143 = (uint64_t)&v137 - v11;
  v12 = type metadata accessor for AdjustedImage(0);
  v148 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)&v149 = v12;
  __chkstk_darwin(v12);
  v140 = (char *)&v137 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000D604(&qword_1000D5DB8);
  __chkstk_darwin(v14);
  v144 = (char *)&v137 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v155 = type metadata accessor for URL(0);
  v156 = *(_QWORD *)(v155 - 8);
  v16 = __chkstk_darwin(v155);
  v18 = (char *)&v137 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v142 = (char *)&v137 - v19;
  v20 = String._bridgeToObjectiveC()();
  v21 = sub_100006354(v20);

  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v152 = v23;
  v153 = v22;

  v24 = String._bridgeToObjectiveC()();
  v25 = sub_100006618();

  if (!v25)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v27 = v26;
    v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v27);
  }
  v28 = sub_100006354(v25);

  v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v150 = v30;
  v151 = v29;

  v31 = String._bridgeToObjectiveC()();
  v32 = sub_100006354(v31);

  v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
  v35 = v34;

  v36 = String._bridgeToObjectiveC()();
  v37 = sub_100006354(v36);

  v38 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
  v40 = v39;

  v41 = sub_10000D604(&qword_1000D6168);
  v42 = swift_allocObject(v41, 96, 7);
  *(_OWORD *)(v42 + 16) = xmmword_100098100;
  *(_QWORD *)(v42 + 32) = v33;
  *(_QWORD *)(v42 + 40) = v35;
  *(_QWORD *)(v42 + 48) = 0;
  *(_BYTE *)(v42 + 56) = 1;
  *(_QWORD *)(v42 + 64) = v38;
  *(_QWORD *)(v42 + 72) = v40;
  *(_QWORD *)(v42 + 80) = 1;
  *(_BYTE *)(v42 + 88) = 2;
  v43 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v43, "scale");
  v45 = v44;

  if ((~*(_QWORD *)&v45 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v45 <= -9.22337204e18)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (v45 >= 9.22337204e18)
  {
LABEL_36:
    __break(1u);
LABEL_37:
    swift_once(&qword_1000D5520, sub_10001A788);
LABEL_9:
    v55 = type metadata accessor for Logger(0, v54);
    sub_10001118C(v55, (uint64_t)qword_1000D5DA0);
    v56 = v158;
    swift_retain_n(v158, 2);
    v57 = swift_bridgeObjectRetain(v7);
    v58 = Logger.logObject.getter(v57);
    v59 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v58, v59))
    {
      v60 = swift_slowAlloc(22, -1);
      v137 = (_QWORD *)swift_slowAlloc(8, -1);
      v139 = swift_slowAlloc(32, -1);
      a2[10] = v139;
      *(_DWORD *)v60 = 136315394;
      swift_bridgeObjectRetain(v7);
      *a2 = sub_10003EF58((uint64_t)v37, (unint64_t)v7, (uint64_t *)&v171);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v169, v170);
      swift_bridgeObjectRelease_n(v7, 3);
      *(_WORD *)(v60 + 12) = 2112;
      *a2 = (uint64_t)v38;
      v138 = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v169, v170);
      v61 = v137;
      *v137 = v38;
      swift_release_n(v56, 2);
      v62 = "HomePodSetupViewModel: ### HomePod iPad lockup asset missing %s in %@";
LABEL_20:
      _os_log_impl((void *)&_mh_execute_header, v58, v59, v62, (uint8_t *)v60, 0x16u);
      v80 = sub_10000D604(&qword_1000D5CC8);
      swift_arrayDestroy(v61, 1, v80);
      swift_slowDealloc(v61, -1, -1);
      v81 = v139;
      swift_arrayDestroy(v139, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v81, -1, -1);
      swift_slowDealloc(v60, -1, -1);

      v75 = 0x800000010009DAF0;
      v38 = v138;
LABEL_22:
      v76 = v155;
      v77 = v156;
      goto LABEL_23;
    }
    goto LABEL_21;
  }
  v146 = v7;
  v147 = a2;
  a2 = &v169;
  v48 = SFDeviceClassCodeGet(v46, v47);
  v141 = v18;
  v145 = v42;
  if (v48 == 3)
  {
    v171 = 0;
    v172 = 0xE000000000000000;
    _StringGuts.grow(_:)(28);
    swift_bridgeObjectRelease(v172);
    v171 = (void *)0xD000000000000015;
    v172 = 0x800000010009DB10;
    v169 = (uint64_t)v45;
    v49._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = v49._object;
    String.append(_:)(v49);
    swift_bridgeObjectRelease(object);
    v51._countAndFlagsBits = 0x676E702E78;
    v51._object = (void *)0xE500000000000000;
    String.append(_:)(v51);
    v37 = v171;
    v7 = (char *)v172;
    v38 = *(void **)(v158 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_assetBundle);
    v52 = String._bridgeToObjectiveC()();
    v53 = objc_msgSend(v38, "pathForResource:ofType:", v52, 0);

    if (!v53)
    {
      if (qword_1000D5520 == -1)
        goto LABEL_9;
      goto LABEL_37;
    }
  }
  else
  {
    v63 = v158;
    if (*(_BYTE *)(v158 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode) == 5)
      v64 = 2;
    else
      v64 = 1;
    v171 = 0;
    v172 = 0xE000000000000000;
    _StringGuts.grow(_:)(34);
    swift_bridgeObjectRelease(v172);
    v171 = (void *)0xD000000000000018;
    v172 = 0x800000010009DAD0;
    v169 = v64;
    v65._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v66 = v65._object;
    String.append(_:)(v65);
    swift_bridgeObjectRelease(v66);
    v67._countAndFlagsBits = 64;
    v67._object = (void *)0xE100000000000000;
    String.append(_:)(v67);
    v169 = (uint64_t)v45;
    v68._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v69 = v68._object;
    String.append(_:)(v68);
    swift_bridgeObjectRelease(v69);
    v70._countAndFlagsBits = 0x676E702E78;
    v70._object = (void *)0xE500000000000000;
    String.append(_:)(v70);
    v71 = (uint64_t)v171;
    v7 = (char *)v172;
    v38 = *(void **)(v63 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_assetBundle);
    v72 = String._bridgeToObjectiveC()();
    v53 = objc_msgSend(v38, "pathForResource:ofType:", v72, 0);

    if (!v53)
    {
      if (qword_1000D5520 != -1)
        swift_once(&qword_1000D5520, sub_10001A788);
      v78 = type metadata accessor for Logger(0, v73);
      sub_10001118C(v78, (uint64_t)qword_1000D5DA0);
      v56 = v158;
      swift_retain_n(v158, 2);
      v79 = swift_bridgeObjectRetain(v7);
      v58 = Logger.logObject.getter(v79);
      v59 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v58, v59))
      {
        v60 = swift_slowAlloc(22, -1);
        v137 = (_QWORD *)swift_slowAlloc(8, -1);
        v139 = swift_slowAlloc(32, -1);
        v171 = (void *)v139;
        *(_DWORD *)v60 = 136315394;
        swift_bridgeObjectRetain(v7);
        v169 = sub_10003EF58(v71, (unint64_t)v7, (uint64_t *)&v171);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v169, v170);
        swift_bridgeObjectRelease_n(v7, 3);
        *(_WORD *)(v60 + 12) = 2112;
        v169 = (uint64_t)v38;
        v138 = v38;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v169, v170);
        v61 = v137;
        *v137 = v38;
        swift_release_n(v56, 2);
        v62 = "HomePodSetupViewModel: ### HomePod iPhone lockup asset missing %s in %@";
        goto LABEL_20;
      }
LABEL_21:

      swift_release_n(v56, 2);
      swift_bridgeObjectRelease_n(v7, 2);
      v75 = 0x800000010009DAF0;
      goto LABEL_22;
    }
  }
  swift_bridgeObjectRelease(v7);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
  v75 = v74;

  v76 = v155;
  v77 = v156;
  v56 = v158;
LABEL_23:
  if (*(_BYTE *)(v56 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode) == 6)
  {
    swift_bridgeObjectRetain(v75);
    v82 = v38;
    v83 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v75);
    v84 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:inBundle:", v83, v82);

    if (v84)
    {
      v85 = objc_msgSend(v82, "URLForResource:withExtension:", SFDeviceAssetNameAdjustments, 0);
      if (v85)
      {
        v86 = v85;
        v87 = v76;
        v88 = v84;
        v89 = v141;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        v90 = *(void (**)(char *, char *, uint64_t))(v77 + 32);
        v91 = (uint64_t)v144;
        v92 = v89;
        v84 = v88;
        v93 = v87;
        v90(v144, v92, v87);
        v94 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56);
        v94((char *)v91, 0, 1, v93);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48))(v91, 1, v93) != 1)
        {
          swift_bridgeObjectRelease(v75);
          v95 = v142;
          v90(v142, (char *)v91, v93);
          v96 = v94;
          v97 = v149;
          v98 = v77;
          v99 = v140;
          v100 = &v140[*(int *)(v149 + 20)];
          (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v100, v95, v93);
          v96(v100, 0, 1, v93);
          *v99 = v84;
          v101 = type metadata accessor for AdjustedMovie(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 56))(v143, 1, 1, v101);
          *((_OWORD *)a2 + 8) = 0u;
          *((_OWORD *)a2 + 9) = 0u;
          *((_OWORD *)a2 + 6) = 0u;
          *((_OWORD *)a2 + 7) = 0u;
          *((_OWORD *)a2 + 5) = 0u;
          v102 = (uint64_t)v146;
          sub_100035CDC((uint64_t)v99, (uint64_t)v146, type metadata accessor for AdjustedImage);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v148 + 56))(v102, 0, 1, v97);
          v103 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
          v104 = (uint64_t)v154;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 56))(v154, 1, 1, v103);
          v162 = 0;
          v160 = 0u;
          v161 = 0u;
          v105 = v84;
          v106 = String._bridgeToObjectiveC()();
          v107 = String._bridgeToObjectiveC()();
          v108 = v93;
          Int64 = CFPrefs_GetInt64(v106, v107, 0);

          LOBYTE(v106) = Int64 != 0;
          sub_10005B198((uint64_t *)&v163);
          v157 = v164;
          v158 = v163;
          v155 = v165;
          v149 = v166;
          v110 = v167;
          v111 = v168;

          v112 = v157;
          *(_OWORD *)a2 = v158;
          *((_OWORD *)a2 + 1) = v112;
          v113 = v149;
          *((_OWORD *)a2 + 2) = v155;
          *((_OWORD *)a2 + 3) = v113;
          a2[8] = v110;
          a2[9] = v111;
          sub_10001126C((uint64_t)v99, type metadata accessor for AdjustedImage);
          (*(void (**)(char *, uint64_t))(v156 + 8))(v142, v108);
          v159 = 1;
          return sub_1000328AC(v153, v152, v151, v150, v143, 0, 0xE000000000000000, 0, v147, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v145, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v160,
                   (uint64_t)_swiftEmptyArrayStorage,
                   (uint64_t)_swiftEmptyArrayStorage,
                   (char)v106,
                   v136,
                   0,
                   1,
                   1,
                   (uint64_t)&v169,
                   (uint64_t)&v171,
                   0,
                   0,
                   0,
                   0,
                   0,
                   0,
                   0,
                   0,
                   0,
                   v102,
                   0,
                   0,
                   1,
                   0,
                   0,
                   0,
                   0,
                   0,
                   0,
                   0xE000000000000000,
                   0,
                   0,
                   0,
                   0,
                   0,
                   0,
                   0xE000000000000000,
                   v104);
        }
      }
      else
      {
        v91 = (uint64_t)v144;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v77 + 56))(v144, 1, 1, v76);
      }

      sub_10000DC40(v91, &qword_1000D5DB8);
    }
  }
  v115 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 56))(v157, 1, 1, v115);
  v116 = (void *)objc_opt_self(_UIImageSymbolConfiguration);
  swift_bridgeObjectRetain(v75);
  v117 = objc_msgSend(v116, "configurationWithPointSize:", 72.0);
  v118 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v75);
  v119 = (void *)objc_opt_self(UIImage);
  v120 = objc_msgSend(v119, "systemImageNamed:withConfiguration:", v118, v117);

  if (!v120)
  {
    swift_bridgeObjectRetain(v75);
    v121 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v75);
    v120 = objc_msgSend(v119, "imageNamed:", v121);

    if (!v120)
      v120 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  }
  v122 = sub_10000D604(&qword_1000D6EE0);
  v123 = swift_allocObject(v122, 40, 7);
  *(_OWORD *)(v123 + 16) = xmmword_100099060;
  *(_QWORD *)(v123 + 32) = v120;
  a2[10] = v123;
  specialized Array._endMutation()(v123);
  v124 = a2[10];
  swift_bridgeObjectRelease(v75);
  *((_OWORD *)a2 + 5) = 0u;
  *((_OWORD *)a2 + 6) = 0u;
  *((_OWORD *)a2 + 7) = 0u;
  *((_OWORD *)a2 + 8) = 0u;
  *((_OWORD *)a2 + 9) = 0u;
  v125 = (uint64_t)v146;
  (*(void (**)(char *, uint64_t, uint64_t, _QWORD))(v148 + 56))(v146, 1, 1, v149);
  v126 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v127 = (uint64_t)v154;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v126 - 8) + 56))(v154, 1, 1, v126);
  v162 = 0;
  v160 = 0u;
  v161 = 0u;
  v128 = String._bridgeToObjectiveC()();
  v129 = String._bridgeToObjectiveC()();
  v130 = CFPrefs_GetInt64(v128, v129, 0);

  sub_10005B198((uint64_t *)&v163);
  v131 = v164;
  v132 = v165;
  v133 = v166;
  v134 = v167;
  v135 = v168;
  *(_OWORD *)a2 = v163;
  *((_OWORD *)a2 + 1) = v131;
  *((_OWORD *)a2 + 2) = v132;
  *((_OWORD *)a2 + 3) = v133;
  v159 = 1;
  a2[8] = v134;
  a2[9] = v135;
  return sub_1000328AC(v153, v152, v151, v150, v157, 0, 0xE000000000000000, 0, v147, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v145, v124, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v160,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           v130 != 0,
           v136,
           0,
           1,
           1,
           (uint64_t)&v169,
           (uint64_t)&v171,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           v125,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           v127);
}

uint64_t sub_100020550@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSString v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSString v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  NSString v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSString v54;
  NSString v55;
  uint64_t v56;
  uint64_t Int64;
  _QWORD *v58;
  uint64_t v59;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  _QWORD *v69;
  uint64_t v70;
  char v71;
  _BYTE v72[32];
  uint64_t v73;
  _OWORD v74[4];
  uint64_t v75;
  uint64_t v76;
  _OWORD v77[4];
  uint64_t v78;
  uint64_t v79;
  _BYTE v80[96];

  v69 = a2;
  v3 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v3);
  v65 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000D604(&qword_1000D5E68);
  v6 = __chkstk_darwin(v5);
  v68 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v62 = (uint64_t)&v62 - v9;
  __chkstk_darwin(v8);
  v70 = (uint64_t)&v62 - v10;
  v11 = sub_10000D604(&qword_1000D5E60);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v62 - v15;
  if ((*(_DWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoRole) & 0xFFFFFFFE) == 2)
    v17 = 113;
  else
    v17 = 112;
  if ((*(_DWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoRole) & 0xFFFFFFFE) == 2)
    v18 = 115;
  else
    v18 = 114;
  sub_10004F878(v17);
  v20 = v19;
  v21 = String._bridgeToObjectiveC()();
  v22 = sub_100006354(v21);

  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v66 = v24;
  v67 = v23;
  swift_bridgeObjectRelease(v20);

  sub_10004F878(v18);
  v26 = v25;
  v27 = String._bridgeToObjectiveC()();
  v28 = sub_100006354(v27);

  v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v31 = v30;
  swift_bridgeObjectRelease(v26);

  v32 = String._bridgeToObjectiveC()();
  v33 = sub_100006354(v32);

  v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
  v63 = v35;
  v64 = v34;

  v36 = String._bridgeToObjectiveC()();
  v37 = sub_100006354(v36);

  v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
  v40 = v39;

  v41 = sub_10000D604(&qword_1000D6168);
  v42 = swift_allocObject(v41, 96, 7);
  *(_OWORD *)(v42 + 16) = xmmword_100098100;
  *(_QWORD *)(v42 + 32) = v29;
  *(_QWORD *)(v42 + 40) = v31;
  *(_QWORD *)(v42 + 48) = 0;
  *(_BYTE *)(v42 + 56) = 1;
  *(_QWORD *)(v42 + 64) = v38;
  *(_QWORD *)(v42 + 72) = v40;
  *(_QWORD *)(v42 + 80) = 1;
  *(_BYTE *)(v42 + 88) = 2;
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode) == 5)
  {
    v43 = v70;
    sub_100032C94(a1, 1, 0, v70);
    v44 = v62;
    sub_10000E0F0(v43, v62, &qword_1000D5E68);
    v45 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
    v46 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 48))(v44, 1, v45);
    sub_10000DC40(v44, &qword_1000D5E68);
    v47 = v46 == 1;
    v48 = (uint64_t)v16;
    if (v47)
    {
      sub_100045F1C(1, 0, (uint64_t)v16);
    }
    else
    {
      v49 = type metadata accessor for AdjustedImage(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v16, 1, 1, v49);
    }
  }
  else
  {
    sub_100045F1C(1, 0, (uint64_t)v16);
    v45 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v70, 1, 1, v45);
    v48 = (uint64_t)v16;
  }
  v50 = type metadata accessor for AdjustedMovie(0);
  v51 = (uint64_t)v65;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v65, 1, 1, v50);
  memset(v80, 0, 80);
  v52 = (uint64_t)v14;
  sub_10000E0F0(v48, (uint64_t)v14, &qword_1000D5E60);
  type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v53 = (uint64_t)v68;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v68, 1, 1, v45);
  v73 = 0;
  memset(v72, 0, sizeof(v72));
  v54 = String._bridgeToObjectiveC()();
  v55 = String._bridgeToObjectiveC()();
  v56 = v48;
  Int64 = CFPrefs_GetInt64(v54, v55, 0);

  sub_10005B198((uint64_t *)v74);
  v77[0] = v74[0];
  v77[1] = v74[1];
  v77[2] = v74[2];
  v77[3] = v74[3];
  v78 = v75;
  v79 = v76;
  sub_10000DC40(v56, &qword_1000D5E60);
  v71 = 1;
  v58 = v69;
  sub_1000328AC(v67, v66, v64, v63, v51, 0, 0xE000000000000000, 0, v69, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v42, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v72,
    (uint64_t)_swiftEmptyArrayStorage,
    (uint64_t)_swiftEmptyArrayStorage,
    Int64 != 0,
    v61,
    0,
    1,
    1,
    (uint64_t)v77,
    (uint64_t)v80,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    v52,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    v53);
  v59 = type metadata accessor for HomePodSetupViewModel(0);
  return sub_100035D20(v70, (uint64_t)v58 + *(int *)(v59 + 180));
}

uint64_t sub_100020B28@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  NSString v24;
  id v25;
  id v26;
  NSString v27;
  NSString v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t inited;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSString v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  NSString v45;
  void *v46;
  id v47;
  NSString v48;
  uint64_t v49;
  uint64_t v50;
  NSString v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSString v60;
  NSString v61;
  uint64_t Int64;
  uint64_t v63;
  uint64_t v64;
  int v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  _QWORD *v81;
  uint64_t v82;
  char v83;
  _BYTE v84[32];
  uint64_t v85;
  uint64_t v86;
  _OWORD v87[4];
  uint64_t v88;
  uint64_t v89;
  _OWORD v90[4];
  uint64_t v91;
  uint64_t v92;
  uint64_t v93[12];

  v4 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v4);
  v6 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v7);
  v79 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v9);
  v82 = (uint64_t)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_jsEnabled);
  v12 = String._bridgeToObjectiveC()();
  v13 = sub_100006354(v12);

  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v77 = v15;
  v78 = v14;

  v16 = String._bridgeToObjectiveC()();
  v17 = sub_100006354(v16);

  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v20 = v19;

  v21 = *(_QWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_selectedSiriLanguageCode + 8);
  v22 = (void *)objc_opt_self(AFLocalization);
  swift_bridgeObjectRetain(v21);
  v23 = objc_msgSend(v22, "sharedInstance");
  v80 = v6;
  v81 = a2;
  v76 = v23;
  if (v11 == 1)
  {
    swift_bridgeObjectRelease(v21);
    v24 = String._bridgeToObjectiveC()();
    v25 = sub_100006354(v24);
  }
  else
  {
    if (v23)
    {
      v26 = v23;
      v27 = String._bridgeToObjectiveC()();
      if (v21)
      {
        v28 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v21);
      }
      else
      {
        v28 = 0;
      }
      v29 = objc_msgSend(v26, "localizedUIUtteranceForKey:languageCode:", v27, v28);

      if (v29)
        goto LABEL_11;
    }
    else
    {
      swift_bridgeObjectRelease(v21);
    }
    v24 = String._bridgeToObjectiveC()();
    v25 = sub_100006354(v24);
  }
  v29 = v25;

LABEL_11:
  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
  v32 = v31;

  v33 = sub_10000D604((uint64_t *)&unk_1000D7B70);
  inited = swift_initStackObject(v33, &v86);
  v73 = xmmword_100099220;
  *(_OWORD *)(inited + 16) = xmmword_100099220;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v35 = sub_100035088();
  *(_QWORD *)(inited + 32) = v30;
  *(_QWORD *)(inited + 64) = v35;
  *(_QWORD *)(inited + 40) = v32;
  v93[0] = 0;
  v93[1] = 0xE000000000000000;
  sub_1000340CC(inited, v93, 0xD000000000000020, 0x800000010009DB50, 16421, 0xE200000000000000);
  swift_setDeallocating(inited);
  v36 = sub_10000D604(&qword_1000D61B0);
  swift_arrayDestroy(inited + 32, 1, v36);
  v74 = v93[1];
  v75 = v93[0];
  v37 = sub_10000D604(&qword_1000D6168);
  v38 = swift_allocObject(v37, 64, 7);
  *(_OWORD *)(v38 + 16) = v73;
  *(_QWORD *)(v38 + 32) = v18;
  *(_QWORD *)(v38 + 40) = v20;
  *(_QWORD *)(v38 + 48) = 0;
  *(_BYTE *)(v38 + 56) = 1;
  v39 = String._bridgeToObjectiveC()();
  v40 = sub_100006354(v39);

  v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
  v72 = v42;
  *(_QWORD *)&v73 = v41;

  v43 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v82, 1, 1, v43);
  v44 = objc_msgSend((id)objc_opt_self(_UIImageSymbolConfiguration), "configurationWithPointSize:", 72.0);
  v45 = String._bridgeToObjectiveC()();
  v46 = (void *)objc_opt_self(UIImage);
  v47 = objc_msgSend(v46, "systemImageNamed:withConfiguration:", v45, v44);

  if (!v47)
  {
    v48 = String._bridgeToObjectiveC()();
    v47 = objc_msgSend(v46, "imageNamed:", v48);

    if (!v47)
      v47 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  }
  v49 = sub_10000D604(&qword_1000D6EE0);
  v50 = swift_allocObject(v49, 40, 7);
  *(_OWORD *)(v50 + 16) = xmmword_100099060;
  *(_QWORD *)(v50 + 32) = v47;
  v93[0] = v50;
  specialized Array._endMutation()(v50);
  v71 = v93[0];
  memset(v93, 0, 80);
  v51 = String._bridgeToObjectiveC()();
  v52 = sub_100006354(v51);

  v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
  v55 = v54;

  v56 = type metadata accessor for AdjustedImage(0);
  v57 = (uint64_t)v79;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v79, 1, 1, v56);
  v58 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v59 = (uint64_t)v80;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v80, 1, 1, v58);
  v85 = 0;
  memset(v84, 0, sizeof(v84));
  v60 = String._bridgeToObjectiveC()();
  v61 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v60, v61, 0);

  LOBYTE(v60) = Int64 != 0;
  sub_10005B198((uint64_t *)v87);
  v69 = v87[1];
  v70 = v87[0];
  v67 = v87[3];
  v68 = v87[2];
  v63 = v88;
  v64 = v89;

  v90[0] = v70;
  v90[1] = v69;
  v90[2] = v68;
  v90[3] = v67;
  v91 = v63;
  v92 = v64;
  v83 = 1;
  return sub_1000328AC(v78, v77, v75, v74, v82, v73, v72, 0, v81, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v38, v71, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v84,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           (char)v60,
           v66,
           0,
           1,
           1,
           (uint64_t)v90,
           (uint64_t)v93,
           0,
           0,
           v53,
           v55,
           0xD000000000000019,
           0x800000010009DBD0,
           0,
           0,
           0,
           v57,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           v59);
}

void sub_1000212C4(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  NSString v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  NSString v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  NSString v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  NSString v31;
  NSString v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  NSString v38;
  NSString v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  NSString v45;
  NSString v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  NSString v62;
  NSString v63;
  uint64_t Int64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  id v75;
  char *v76;
  id v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  _QWORD *v85;
  char v86;
  _BYTE v87[32];
  uint64_t v88;
  _OWORD v89[4];
  uint64_t v90;
  uint64_t v91;
  _OWORD v92[4];
  uint64_t v93;
  uint64_t v94;
  _QWORD v95[12];

  v85 = a1;
  v1 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v1);
  v84 = (char *)&v68 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v3);
  v83 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v5);
  v76 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)objc_opt_self(NSBundle);
  v8 = objc_msgSend(v7, "mainBundle");
  v9 = String._bridgeToObjectiveC()();
  v10 = String._bridgeToObjectiveC()();
  v11 = sub_1000063D4(v8, v9, v10);

  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v81 = v13;
  v82 = v12;

  v14 = objc_msgSend(v7, "mainBundle");
  v15 = String._bridgeToObjectiveC()();
  v16 = String._bridgeToObjectiveC()();
  v17 = sub_1000063D4(v14, v15, v16);

  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v79 = v19;
  v80 = v18;

  v20 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", 72.0, UIFontWeightRegular);
  v21 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v22 = objc_msgSend(v21, "configurationWithFont:", v20);

  v23 = objc_msgSend((id)objc_opt_self(UIColor), "orangeColor");
  v24 = objc_msgSend(v21, "configurationWithHierarchicalColor:", v23);

  v25 = String._bridgeToObjectiveC()();
  v26 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v25);

  v78 = v22;
  v27 = objc_msgSend(v26, "imageByApplyingSymbolConfiguration:", v22);

  v77 = v24;
  v28 = objc_msgSend(v27, "imageByApplyingSymbolConfiguration:", v24);

  v29 = v28;
  if (!v28)
    v29 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  *(_QWORD *)&v74 = v29;
  v75 = v28;
  v30 = objc_msgSend(v7, "mainBundle");
  v31 = String._bridgeToObjectiveC()();
  v32 = String._bridgeToObjectiveC()();
  v33 = sub_1000063D4(v30, v31, v32);

  v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
  v36 = v35;

  v37 = objc_msgSend(v7, "mainBundle");
  v38 = String._bridgeToObjectiveC()();
  v39 = String._bridgeToObjectiveC()();
  v40 = sub_1000063D4(v37, v38, v39);

  v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
  v43 = v42;

  v44 = objc_msgSend(v7, "mainBundle");
  v45 = String._bridgeToObjectiveC()();
  v46 = String._bridgeToObjectiveC()();
  v47 = sub_1000063D4(v44, v45, v46);

  v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
  v72 = v49;
  v73 = v48;

  v50 = sub_10000D604(&qword_1000D6168);
  v51 = swift_allocObject(v50, 96, 7);
  *(_OWORD *)(v51 + 16) = xmmword_100098100;
  *(_QWORD *)(v51 + 32) = v34;
  *(_QWORD *)(v51 + 40) = v36;
  *(_QWORD *)(v51 + 48) = 0;
  *(_BYTE *)(v51 + 56) = 8;
  *(_QWORD *)(v51 + 64) = v41;
  *(_QWORD *)(v51 + 72) = v43;
  *(_QWORD *)(v51 + 80) = 1;
  *(_BYTE *)(v51 + 88) = 9;
  v52 = type metadata accessor for AdjustedMovie(0);
  v53 = (uint64_t)v76;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v76, 1, 1, v52);
  v54 = sub_10000D604(&qword_1000D6EE0);
  v55 = swift_allocObject(v54, 40, 7);
  *(_OWORD *)(v55 + 16) = xmmword_100099060;
  v56 = (void *)v74;
  *(_QWORD *)(v55 + 32) = v74;
  v95[0] = v55;
  specialized Array._endMutation()(v55);
  v71 = v95[0];
  v57 = type metadata accessor for AdjustedImage(0);
  memset(v95, 0, 80);
  v58 = (uint64_t)v83;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v83, 1, 1, v57);
  v59 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v60 = (uint64_t)v84;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v84, 1, 1, v59);
  v88 = 0;
  memset(v87, 0, sizeof(v87));
  v61 = v56;
  v62 = String._bridgeToObjectiveC()();
  v63 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v62, v63, 0);

  LOBYTE(v62) = Int64 != 0;
  sub_10005B198((uint64_t *)v89);
  v74 = v89[0];
  v69 = v89[2];
  v70 = v89[1];
  v68 = v89[3];
  v65 = v90;
  v66 = v91;

  v92[0] = v74;
  v92[1] = v70;
  v92[2] = v69;
  v92[3] = v68;
  v93 = v65;
  v94 = v66;
  v86 = 1;
  sub_1000328AC(v82, v81, v80, v79, v53, 0, 0xE000000000000000, v73, v85, 0.0, 0.0, 0.0, v72, 0, 0xE000000000000000, v51, v71, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v87,
    (uint64_t)_swiftEmptyArrayStorage,
    (uint64_t)_swiftEmptyArrayStorage,
    (char)v62,
    v67,
    0,
    1,
    1,
    (uint64_t)v92,
    (uint64_t)v95,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    v58,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    v60);

}

uint64_t sub_100021A94@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSString v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  NSString v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  NSString v47;
  NSString v48;
  uint64_t Int64;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t result;
  char *v54;
  int v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  char *v61;
  id v62;
  id v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  _QWORD *v70;
  char v71;
  _BYTE v72[32];
  uint64_t v73;
  _OWORD v74[4];
  uint64_t v75;
  uint64_t v76;
  _OWORD v77[4];
  uint64_t v78;
  uint64_t v79;
  _QWORD v80[12];

  v70 = a1;
  v1 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v1);
  v69 = (char *)&v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v3);
  v64 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v5);
  v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = String._bridgeToObjectiveC()();
  v9 = sub_100006354(v8);

  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v67 = v11;
  v68 = v10;

  v12 = String._bridgeToObjectiveC()();
  v13 = sub_100006354(v12);

  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v65 = v15;
  v66 = v14;

  v16 = String._bridgeToObjectiveC()();
  v17 = sub_100006354(v16);

  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v60 = v19;
  v61 = (char *)v18;

  v20 = String._bridgeToObjectiveC()();
  v21 = sub_100006354(v20);

  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v24 = v23;

  v25 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", 72.0, UIFontWeightRegular);
  v26 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v27 = objc_msgSend(v26, "configurationWithFont:", v25);

  v28 = objc_msgSend((id)objc_opt_self(UIColor), "lightGrayColor");
  v29 = objc_msgSend(v26, "configurationWithHierarchicalColor:", v28);

  v30 = String._bridgeToObjectiveC()();
  v31 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v30);

  v63 = v27;
  v32 = objc_msgSend(v31, "imageByApplyingSymbolConfiguration:", v27);

  v62 = v29;
  v33 = objc_msgSend(v32, "imageByApplyingSymbolConfiguration:", v29);

  v34 = v33;
  if (!v33)
    v34 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  v35 = sub_10000D604(&qword_1000D6168);
  v36 = swift_allocObject(v35, 96, 7);
  *(_OWORD *)(v36 + 16) = xmmword_100098100;
  v37 = v60;
  *(_QWORD *)(v36 + 32) = v61;
  *(_QWORD *)(v36 + 40) = v37;
  *(_QWORD *)(v36 + 48) = 0;
  *(_BYTE *)(v36 + 56) = 8;
  *(_QWORD *)(v36 + 64) = v22;
  *(_QWORD *)(v36 + 72) = v24;
  *(_QWORD *)(v36 + 80) = 1;
  *(_BYTE *)(v36 + 88) = 9;
  v38 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v7, 1, 1, v38);
  v39 = sub_10000D604(&qword_1000D6EE0);
  v40 = swift_allocObject(v39, 40, 7);
  *(_OWORD *)(v40 + 16) = xmmword_100099060;
  *(_QWORD *)(v40 + 32) = v34;
  v80[0] = v40;
  specialized Array._endMutation()(v40);
  v60 = v80[0];
  v61 = v7;
  v41 = type metadata accessor for AdjustedImage(0);
  memset(v80, 0, 80);
  v42 = (uint64_t)v64;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v64, 1, 1, v41);
  v43 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v44 = (uint64_t)v69;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v69, 1, 1, v43);
  v73 = 0;
  memset(v72, 0, sizeof(v72));
  v45 = v33;
  v46 = v34;
  v47 = String._bridgeToObjectiveC()();
  v48 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v47, v48, 0);

  LOBYTE(v47) = Int64 != 0;
  sub_10005B198((uint64_t *)v74);
  v58 = v74[1];
  v59 = v74[0];
  v56 = v74[3];
  v57 = v74[2];
  v50 = v75;
  v51 = v76;

  v77[0] = v59;
  v77[1] = v58;
  v77[2] = v57;
  v77[3] = v56;
  v78 = v50;
  v79 = v51;
  v71 = 1;
  v52 = v70;
  sub_1000328AC(v68, v67, v66, v65, (uint64_t)v61, 0, 0xE000000000000000, 0, v70, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v36, v60, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v72,
    (uint64_t)_swiftEmptyArrayStorage,
    (uint64_t)_swiftEmptyArrayStorage,
    (char)v47,
    v55,
    0,
    1,
    1,
    (uint64_t)v77,
    (uint64_t)v80,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    v42,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    v44);

  result = type metadata accessor for HomePodSetupViewModel(0);
  v54 = (char *)v52 + *(int *)(result + 124);
  *(_QWORD *)v54 = 1;
  v54[8] = 0;
  return result;
}

__n128 sub_1000220C0@<Q0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  NSString v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  int v16;
  NSString v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  NSString v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  NSString v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  id v54;
  void *v55;
  id v56;
  id v57;
  id v58;
  unint64_t v59;
  NSString v60;
  id v61;
  id v62;
  id v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  NSString v74;
  NSString v75;
  uint64_t Int64;
  _QWORD *v77;
  int *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  __int128 v85;
  __n128 result;
  uint64_t v87;
  int v88;
  uint64_t v89;
  id v90;
  uint64_t v91;
  id v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __n128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  _QWORD *v101;
  char v102;
  _OWORD v103[4];
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __n128 v109;
  uint64_t v110;
  uint64_t v111;
  _OWORD v112[4];
  uint64_t v113;
  uint64_t v114;
  _QWORD v115[12];

  v101 = a2;
  v3 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v3);
  *(_QWORD *)&v99 = (char *)&v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v5);
  *(_QWORD *)&v98 = (char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v7);
  *(_QWORD *)&v100 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_forcedADPSoftwareUpdate);
  v10 = *(_DWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homePodProductVersion);
  if (v10 == 2)
  {
    if ((v9 & 1) == 0)
    {
LABEL_3:
      v11 = String._bridgeToObjectiveC()();
      v12 = sub_100006354(v11);

      v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
      v96 = v14;
      v97.n128_u64[0] = v13;

      v15 = String._bridgeToObjectiveC()();
      v16 = 1;
      goto LABEL_6;
    }
  }
  else if (((v10 == 3) & ~v9) != 0)
  {
    goto LABEL_3;
  }
  v17 = String._bridgeToObjectiveC()();
  v18 = sub_100006354(v17);

  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v96 = v20;
  v97.n128_u64[0] = v19;

  v15 = String._bridgeToObjectiveC()();
  v16 = 0;
LABEL_6:
  v21 = sub_100006354(v15);

  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v24 = v23;

  v25 = String._bridgeToObjectiveC()();
  v26 = sub_100006354(v25);

  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v29 = v28;

  v30 = (_OWORD *)&unk_100099000;
  if ((v16 & 1) != 0)
  {
    v94 = v27;
  }
  else
  {
    swift_bridgeObjectRelease(v29);
    v31 = String._bridgeToObjectiveC()();
    v32 = sub_100006354(v31);

    v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    v35 = v34;

    v36 = sub_10000D604((uint64_t *)&unk_1000D7B70);
    v37 = swift_allocObject(v36, 72, 7);
    *(_OWORD *)(v37 + 16) = xmmword_100099220;
    v38 = a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeName;
    v39 = a1;
    v40 = *(_QWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeName);
    v41 = *(_QWORD *)(v38 + 8);
    *(_QWORD *)(v37 + 56) = &type metadata for String;
    *(_QWORD *)(v37 + 64) = sub_100035088();
    *(_QWORD *)(v37 + 32) = v40;
    *(_QWORD *)(v37 + 40) = v41;
    a1 = v39;
    swift_bridgeObjectRetain(v41);
    v42 = v37;
    v30 = &unk_100099000;
    v94 = String.init(format:_:)(v33, v35, v42);
    v29 = v43;
    swift_bridgeObjectRelease(v35);
  }
  v95 = v29;
  v44 = sub_10000D604(&qword_1000D6168);
  v45 = (_QWORD *)swift_allocObject(v44, 64, 7);
  *((_OWORD *)v45 + 1) = v30[34];
  v45[4] = v22;
  v45[5] = v24;
  v45[6] = 0;
  *((_BYTE *)v45 + 56) = 1;
  if (v16)
  {
    v46 = String._bridgeToObjectiveC()();
    v47 = sub_100006354(v46);

    v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
    v50 = v49;

    v52 = v45[2];
    v51 = v45[3];
    if (v52 >= v51 >> 1)
      v45 = sub_10004A354((_QWORD *)(v51 > 1), v52 + 1, 1, v45);
    v45[2] = v52 + 1;
    v53 = &v45[4 * v52];
    v53[4] = v48;
    v53[5] = v50;
    v53[6] = 1;
    *((_BYTE *)v53 + 56) = 2;
  }
  v54 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", 80.0, UIFontWeightRegular);
  v55 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v56 = objc_msgSend(v55, "configurationWithFont:", v54);

  v57 = objc_msgSend((id)objc_opt_self(UIColor), "tertiaryLabelColor");
  v58 = objc_msgSend(v55, "configurationWithHierarchicalColor:", v57);

  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode) == 5)
    v59 = 0x800000010009DEC0;
  else
    v59 = 0xEC0000006C6C6966;
  v60 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v59);
  v61 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v60);

  v91 = a1;
  v93 = v56;
  v62 = objc_msgSend(v61, "imageByApplyingSymbolConfiguration:", v56);

  v92 = v58;
  v63 = objc_msgSend(v62, "imageByApplyingSymbolConfiguration:", v58);

  v64 = v63;
  if (!v63)
    v64 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  v65 = type metadata accessor for AdjustedMovie(0);
  v66 = v100;
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v100, 1, 1, v65);
  v67 = sub_10000D604(&qword_1000D6EE0);
  v68 = swift_allocObject(v67, 40, 7);
  *(_OWORD *)(v68 + 16) = xmmword_100099060;
  *(_QWORD *)(v68 + 32) = v64;
  v115[0] = v68;
  specialized Array._endMutation()(v68);
  v89 = v115[0];
  v69 = type metadata accessor for AdjustedImage(0);
  memset(v115, 0, 80);
  v70 = v98;
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v98, 1, 1, v69);
  v71 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v72 = v99;
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v99, 1, 1, v71);
  *(_QWORD *)&v108 = 0;
  v106 = 0u;
  v107 = 0u;
  v90 = v63;
  v73 = v64;
  v74 = String._bridgeToObjectiveC()();
  v75 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v74, v75, 0);

  sub_10005B198((uint64_t *)v103);
  v112[0] = v103[0];
  v112[1] = v103[1];
  v112[2] = v103[2];
  v112[3] = v103[3];
  v102 = 1;
  v113 = v104;
  v114 = v105;
  v87 = (uint64_t)v45;
  v77 = v101;
  sub_1000328AC(v97.n128_i64[0], v96, v94, v95, v66, 0, 0xE000000000000000, 0, v101, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v87, v89, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v106,
    (uint64_t)_swiftEmptyArrayStorage,
    (uint64_t)_swiftEmptyArrayStorage,
    Int64 != 0,
    v88,
    0,
    1,
    1,
    (uint64_t)v112,
    (uint64_t)v115,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    v70,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    v72);
  v78 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  v79 = (char *)v77 + v78[31];
  *(_QWORD *)v79 = 1;
  v79[8] = 0;
  *((_BYTE *)v77 + v78[32]) = 1;
  v80 = *(_QWORD *)(v91 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeName);
  v81 = *(_QWORD *)(v91 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeName + 8);
  swift_bridgeObjectRetain(v81);
  sub_10005B38C(v80, v81, (uint64_t *)&v106);
  v99 = v107;
  v100 = v106;
  v97 = v109;
  v98 = v108;
  v82 = v110;
  v83 = v111;
  swift_bridgeObjectRelease(v81);

  v84 = (_QWORD *)((char *)v77 + v78[20]);
  sub_100035DAC(*v84, v84[1], v84[2], v84[3], v84[4], v84[5], v84[6], v84[7], v84[8], v84[9]);

  v85 = v99;
  *(_OWORD *)v84 = v100;
  *((_OWORD *)v84 + 1) = v85;
  result = v97;
  *((_OWORD *)v84 + 2) = v98;
  *((__n128 *)v84 + 3) = result;
  v84[8] = v82;
  v84[9] = v83;
  return result;
}

uint64_t sub_1000229B0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSString v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  id v16;
  NSString v17;
  NSString v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  NSString v25;
  NSString v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  NSString v42;
  NSString v43;
  uint64_t Int64;
  uint64_t v45;
  uint64_t v46;
  int v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  _QWORD *v60;
  char v61;
  _BYTE v62[32];
  uint64_t v63;
  _OWORD v64[4];
  uint64_t v65;
  uint64_t v66;
  _OWORD v67[4];
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[12];

  v4 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v4);
  v59 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v6);
  v58 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v8);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = String._bridgeToObjectiveC()();
  v12 = sub_100006354(v11);

  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v56 = v14;
  v57 = v13;

  v15 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_subscribedToMusicService);
  v60 = a2;
  if (v15 == 1)
  {
    v16 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v17 = String._bridgeToObjectiveC()();
    v18 = String._bridgeToObjectiveC()();
    v19 = sub_1000063D4(v16, v17, v18);

    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v22 = v21;

  }
  else
  {
    v20 = 0;
    v22 = 0xE000000000000000;
  }
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_selectedHomeIsROAR) != 1)
    goto LABEL_8;
  v23 = HIBYTE(v22) & 0xF;
  if ((v22 & 0x2000000000000000) == 0)
    v23 = v20 & 0xFFFFFFFFFFFFLL;
  if (!v23)
  {
    v24 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v25 = String._bridgeToObjectiveC()();
    v26 = String._bridgeToObjectiveC()();
    v27 = sub_1000063D4(v24, v25, v26);

    v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v29 = v28;

    swift_bridgeObjectRelease(v22);
    v55 = v29;
  }
  else
  {
LABEL_8:
    v54 = v20;
    v55 = v22;
  }
  v30 = sub_10003584C(0x6C7070612E6D6F63, 0xEE00656D6F482E65);
  v31 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v10, 1, 1, v31);
  sub_100035AA8(a1);
  v53 = v32;
  v33 = sub_10000D604(&qword_1000D6EE0);
  v34 = swift_allocObject(v33, 40, 7);
  *(_OWORD *)(v34 + 16) = xmmword_100099060;
  *(_QWORD *)(v34 + 32) = v30;
  v70[0] = v34;
  specialized Array._endMutation()(v34);
  v35 = (uint64_t)v10;
  v36 = v70[0];
  v37 = type metadata accessor for AdjustedImage(0);
  memset(v70, 0, 80);
  v38 = (uint64_t)v58;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v58, 1, 1, v37);
  v39 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v40 = (uint64_t)v59;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v59, 1, 1, v39);
  v63 = 0;
  memset(v62, 0, sizeof(v62));
  v41 = v30;
  v42 = String._bridgeToObjectiveC()();
  v43 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v42, v43, 0);

  LOBYTE(v42) = Int64 != 0;
  sub_10005B198((uint64_t *)v64);
  v51 = v64[1];
  v52 = v64[0];
  v49 = v64[3];
  v50 = v64[2];
  v45 = v65;
  v46 = v66;

  v67[0] = v52;
  v67[1] = v51;
  v67[2] = v50;
  v67[3] = v49;
  v68 = v45;
  v69 = v46;
  v61 = 1;
  return sub_1000328AC(v57, v56, v54, v55, v35, 0, 0xE000000000000000, 0, v60, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v53, v36, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v62,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           (char)v42,
           v48,
           0,
           1,
           1,
           (uint64_t)v67,
           (uint64_t)v70,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           v38,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           v40);
}

uint64_t sub_100022F34@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  NSString v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSString v41;
  NSString v42;
  uint64_t Int64;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  char v57;
  _BYTE v58[32];
  uint64_t v59;
  _OWORD v60[4];
  uint64_t v61;
  uint64_t v62;
  _OWORD v63[4];
  uint64_t v64;
  uint64_t v65;
  _BYTE v66[96];

  v56 = a1;
  v1 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v1);
  v51 = (char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v3);
  v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v6);
  v50 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = String._bridgeToObjectiveC()();
  v9 = sub_100006354(v8);

  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v54 = v11;
  v55 = v10;

  v12 = String._bridgeToObjectiveC()();
  v13 = sub_100006354(v12);

  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v52 = v15;
  v53 = v14;

  v16 = String._bridgeToObjectiveC()();
  v17 = sub_100006354(v16);

  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v20 = v19;

  v21 = String._bridgeToObjectiveC()();
  v22 = sub_100006354(v21);

  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v25 = v24;

  v26 = String._bridgeToObjectiveC()();
  v27 = sub_100006354(v26);

  v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v48 = v29;
  v49 = v28;

  v30 = String._bridgeToObjectiveC()();
  v31 = sub_100006354(v30);

  v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
  v46 = v33;
  v47 = v32;

  v34 = sub_10000D604(&qword_1000D6168);
  v35 = swift_allocObject(v34, 96, 7);
  *(_OWORD *)(v35 + 16) = xmmword_100098100;
  *(_QWORD *)(v35 + 32) = v18;
  *(_QWORD *)(v35 + 40) = v20;
  *(_QWORD *)(v35 + 48) = 0;
  *(_BYTE *)(v35 + 56) = 8;
  *(_QWORD *)(v35 + 64) = v23;
  *(_QWORD *)(v35 + 72) = v25;
  *(_QWORD *)(v35 + 80) = 1;
  *(_BYTE *)(v35 + 88) = 9;
  v36 = type metadata accessor for AdjustedMovie(0);
  v37 = (uint64_t)v50;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v50, 1, 1, v36);
  v38 = type metadata accessor for AdjustedImage(0);
  memset(v66, 0, 80);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v5, 1, 1, v38);
  v39 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v40 = (uint64_t)v51;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v51, 1, 1, v39);
  v59 = 0;
  memset(v58, 0, sizeof(v58));
  v41 = String._bridgeToObjectiveC()();
  v42 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v41, v42, 0);

  sub_10005B198((uint64_t *)v60);
  v63[0] = v60[0];
  v63[1] = v60[1];
  v63[2] = v60[2];
  v63[3] = v60[3];
  v57 = 1;
  v64 = v61;
  v65 = v62;
  return sub_1000328AC(v55, v54, v53, v52, v37, 0, 0xE000000000000000, v49, v56, 0.0, 0.0, 0.0, v48, 0, 0xE000000000000000, v35, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v58,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v45,
           0,
           1,
           1,
           (uint64_t)v63,
           (uint64_t)v66,
           0,
           0,
           v47,
           v46,
           0,
           0,
           0,
           0,
           0,
           (uint64_t)v5,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           v40);
}

void sub_1000233EC(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  id v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  int v25;
  int v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  NSString v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  Swift::String v40;
  Swift::String v41;
  void *object;
  Swift::String v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSString v49;
  NSString v50;
  uint64_t Int64;
  int v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  _QWORD *v59;
  char v60;
  _BYTE v61[32];
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  _OWORD v69[4];
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;

  v58 = a1;
  v59 = a3;
  v4 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v4);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v7);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v10);
  v57 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = "RMS_OF_USE_MORE_INFO_BUTTON";
  v12 = String._bridgeToObjectiveC()();
  v13 = sub_100006354(v12);

  v14 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  v17 = String._bridgeToObjectiveC()();
  v18 = (id)CUAddSuffixForCurrentDeviceClass(v17);

  if (v18)
  {
    v19 = sub_100006354(v18);

    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v22 = v21;

    v55 = v22;
    v56 = v20;
    if (a2)
    {
      swift_bridgeObjectRelease(v16);
      *(_QWORD *)&v69[0] = 0x72655F6473;
      *((_QWORD *)&v69[0] + 1) = 0xE500000000000000;
      AnyHashable.init<A>(_:)(&v72, v69, &type metadata for String, &protocol witness table for String);
      if (*(_QWORD *)(a2 + 16) && (v23 = sub_10004A78C((uint64_t)&v72), (v24 & 1) != 0))
      {
        sub_10000DB98(*(_QWORD *)(a2 + 56) + 32 * v23, (uint64_t)&v63);
      }
      else
      {
        v63 = 0u;
        v64 = 0u;
      }
      sub_10000DAE8((uint64_t)&v72);
      if (*((_QWORD *)&v64 + 1))
      {
        sub_10000DAD8(&v63, v69);
        sub_10000DAD8(v69, &v72);
        v25 = swift_dynamicCast(&v63, &v72, (char *)&type metadata for Any + 8, &type metadata for Int32, 6);
        v26 = v63;
        if (!v25)
          v26 = 0;
        LODWORD(v53) = v26;
      }
      else
      {
        sub_10000DC40((uint64_t)&v63, &qword_1000D5820);
        LODWORD(v53) = 0;
      }
      *(_QWORD *)&v69[0] = 0x64655F6473;
      *((_QWORD *)&v69[0] + 1) = 0xE500000000000000;
      AnyHashable.init<A>(_:)(&v72, v69, &type metadata for String, &protocol witness table for String);
      if (*(_QWORD *)(a2 + 16) && (v29 = sub_10004A78C((uint64_t)&v72), (v30 & 1) != 0))
      {
        sub_10000DB98(*(_QWORD *)(a2 + 56) + 32 * v29, (uint64_t)&v63);
      }
      else
      {
        v63 = 0u;
        v64 = 0u;
      }
      sub_10000DAE8((uint64_t)&v72);
      if (*((_QWORD *)&v64 + 1))
      {
        sub_10000DAD8(&v63, v69);
        sub_10000DB98((uint64_t)v69, (uint64_t)&v72);
        if (swift_dynamicCast(&v63, &v72, (char *)&type metadata for Any + 8, &type metadata for String, 6))v31 = *((_QWORD *)&v63 + 1);
        else
          v31 = 0xE700000000000000;
        sub_10000CDB8(v69);
        swift_bridgeObjectRelease(v31);
      }
      else
      {
        sub_10000DC40((uint64_t)&v63, &qword_1000D5820);
      }
      *(_QWORD *)&v69[0] = 0x65645F6473;
      *((_QWORD *)&v69[0] + 1) = 0xE500000000000000;
      AnyHashable.init<A>(_:)(&v72, v69, &type metadata for String, &protocol witness table for String);
      if (*(_QWORD *)(a2 + 16) && (v32 = sub_10004A78C((uint64_t)&v72), (v33 & 1) != 0))
      {
        sub_10000DB98(*(_QWORD *)(a2 + 56) + 32 * v32, (uint64_t)&v63);
      }
      else
      {
        v63 = 0u;
        v64 = 0u;
      }
      sub_10000DAE8((uint64_t)&v72);
      if (*((_QWORD *)&v64 + 1))
      {
        v27 = v6;
        sub_10000DAD8(&v63, v69);
        sub_10000DB98((uint64_t)v69, (uint64_t)&v72);
        if (swift_dynamicCast(&v63, &v72, (char *)&type metadata for Any + 8, &type metadata for String, 6))v34 = *((_QWORD *)&v63 + 1);
        else
          v34 = 0xE700000000000000;
        sub_10000CDB8(v69);
        swift_bridgeObjectRelease(v34);
      }
      else
      {
        v27 = v6;
        sub_10000DC40((uint64_t)&v63, &qword_1000D5820);
      }
      v28 = (uint64_t)v57;
      v35 = String._bridgeToObjectiveC()();
      v36 = sub_100006354(v35);

      v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
      v39 = v38;

      *(_QWORD *)&v72 = v37;
      *((_QWORD *)&v72 + 1) = v39;
      v40._countAndFlagsBits = 10272;
      v40._object = (void *)0xE200000000000000;
      String.append(_:)(v40);
      LODWORD(v69[0]) = v53;
      v41._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int32, &protocol witness table for Int32);
      object = v41._object;
      String.append(_:)(v41);
      swift_bridgeObjectRelease(object);
      v43._countAndFlagsBits = 41;
      v43._object = (void *)0xE100000000000000;
      String.append(_:)(v43);
      v53 = *((_QWORD *)&v72 + 1);
      v54 = (char *)v72;
    }
    else
    {
      v27 = v6;
      v28 = (uint64_t)v57;
      v53 = v16;
      v54 = v14;
    }
    *((_QWORD *)&v73 + 1) = &type metadata for HomeDeviceSetupFeatureFlags;
    *(_QWORD *)&v74 = sub_100035E08();
    LOBYTE(v72) = 2;
    v44 = isFeatureEnabled(_:)(&v72);
    sub_10000CDB8(&v72);
    v45 = type metadata accessor for AdjustedMovie(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v28, 1, 1, v45);
    v75 = 0u;
    v76 = 0u;
    v73 = 0u;
    v74 = 0u;
    v72 = 0u;
    v46 = (uint64_t)v9;
    sub_100045F1C(0, 0, (uint64_t)v9);
    v47 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
    v48 = (uint64_t)v27;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v27, 1, 1, v47);
    v62 = 0;
    memset(v61, 0, sizeof(v61));
    v49 = String._bridgeToObjectiveC()();
    v50 = String._bridgeToObjectiveC()();
    Int64 = CFPrefs_GetInt64(v49, v50, 0);

    sub_10005B198((uint64_t *)&v63);
    v69[0] = v63;
    v69[1] = v64;
    v69[2] = v65;
    v69[3] = v66;
    v60 = 1;
    v70 = v67;
    v71 = v68;
    sub_1000328AC((uint64_t)v54, v53, v56, v55, v28, 0, 0xE000000000000000, 0, v59, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v61,
      (uint64_t)_swiftEmptyArrayStorage,
      (uint64_t)_swiftEmptyArrayStorage,
      Int64 != 0,
      v52,
      0,
      1,
      1,
      (uint64_t)v69,
      (uint64_t)&v72,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      v46,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0xE000000000000000,
      1,
      1,
      (v44 & 1) == 0,
      0,
      0,
      0,
      0xE000000000000000,
      v48);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100023AE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  int v20;
  int v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  char v33;
  NSString v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  Swift::String v39;
  Swift::String v40;
  void *object;
  Swift::String v42;
  NSString v43;
  id v44;
  uint64_t v45;
  void *v46;
  void *v47;
  Swift::String v48;
  NSString v49;
  id v50;
  uint64_t v51;
  NSString v52;
  NSString v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  Swift::String v59;
  void *v60;
  Swift::String v61;
  NSString v62;
  id v63;
  uint64_t v64;
  void *v65;
  void *v66;
  Swift::String v67;
  NSString v68;
  id v69;
  uint64_t v70;
  int v71;
  int v72;
  unint64_t v73;
  char v74;
  uint64_t v75;
  unint64_t v76;
  NSString v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  Swift::String v82;
  Swift::String v83;
  void *v84;
  Swift::String v85;
  NSString v86;
  id v87;
  uint64_t v88;
  void *v89;
  void *v90;
  Swift::String v91;
  NSString v92;
  id v93;
  uint64_t v94;
  id v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  NSString v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  NSString v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  NSString v113;
  NSString v114;
  uint64_t Int64;
  _QWORD *v116;
  int *v117;
  uint64_t *v118;
  uint64_t result;
  unint64_t v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  int v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  _QWORD *v136;
  int v137;
  char v138;
  __int128 v139;
  __int128 v140;
  uint64_t v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  uint64_t v146;
  uint64_t v147;
  _OWORD v148[4];
  uint64_t v149;
  uint64_t v150;
  _OWORD v151[6];

  v133 = a1;
  v5 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v5);
  v7 = (char *)&v122 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v8);
  v10 = (char *)&v122 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v11);
  v13 = (char *)&v122 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = String._bridgeToObjectiveC()();
  v15 = sub_100006354(v14);

  v123 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v17 = v16;

  v135 = v7;
  v136 = a3;
  v134 = v10;
  if (a2)
  {
    *(_QWORD *)&v148[0] = 0x72655F6473;
    *((_QWORD *)&v148[0] + 1) = 0xE500000000000000;
    AnyHashable.init<A>(_:)(v151, v148, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(a2 + 16) && (v18 = sub_10004A78C((uint64_t)v151), (v19 & 1) != 0))
    {
      sub_10000DB98(*(_QWORD *)(a2 + 56) + 32 * v18, (uint64_t)&v142);
    }
    else
    {
      v142 = 0u;
      v143 = 0u;
    }
    sub_10000DAE8((uint64_t)v151);
    if (*((_QWORD *)&v143 + 1))
    {
      sub_10000DAD8(&v142, v148);
      sub_10000DAD8(v148, v151);
      if (swift_dynamicCast(&v142, v151, (char *)&type metadata for Any + 8, &type metadata for Int32, 6))v20 = v142;
      else
        v20 = 0;
    }
    else
    {
      sub_10000DC40((uint64_t)&v142, &qword_1000D5820);
      v20 = 0;
    }
    *(_QWORD *)&v148[0] = 0x64655F6473;
    *((_QWORD *)&v148[0] + 1) = 0xE500000000000000;
    AnyHashable.init<A>(_:)(v151, v148, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(a2 + 16) && (v24 = sub_10004A78C((uint64_t)v151), (v25 & 1) != 0))
    {
      sub_10000DB98(*(_QWORD *)(a2 + 56) + 32 * v24, (uint64_t)&v142);
    }
    else
    {
      v142 = 0u;
      v143 = 0u;
    }
    sub_10000DAE8((uint64_t)v151);
    if (*((_QWORD *)&v143 + 1))
    {
      sub_10000DAD8(&v142, v148);
      sub_10000DB98((uint64_t)v148, (uint64_t)v151);
      if (swift_dynamicCast(&v142, v151, (char *)&type metadata for Any + 8, &type metadata for String, 6))v26 = *((_QWORD *)&v142 + 1);
      else
        v26 = 0xE700000000000000;
      sub_10000CDB8(v148);
      swift_bridgeObjectRelease(v26);
    }
    else
    {
      sub_10000DC40((uint64_t)&v142, &qword_1000D5820);
    }
    *(_QWORD *)&v148[0] = 0x65645F6473;
    *((_QWORD *)&v148[0] + 1) = 0xE500000000000000;
    AnyHashable.init<A>(_:)(v151, v148, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(a2 + 16) && (v27 = sub_10004A78C((uint64_t)v151), (v28 & 1) != 0))
    {
      sub_10000DB98(*(_QWORD *)(a2 + 56) + 32 * v27, (uint64_t)&v142);
    }
    else
    {
      v142 = 0u;
      v143 = 0u;
    }
    sub_10000DAE8((uint64_t)v151);
    if (*((_QWORD *)&v143 + 1))
    {
      sub_10000DAD8(&v142, v148);
      sub_10000DB98((uint64_t)v148, (uint64_t)v151);
      if (swift_dynamicCast(&v142, v151, (char *)&type metadata for Any + 8, &type metadata for String, 6))v29 = *((_QWORD *)&v142 + 1);
      else
        v29 = 0xE700000000000000;
      sub_10000CDB8(v148);
      swift_bridgeObjectRelease(v29);
    }
    else
    {
      sub_10000DC40((uint64_t)&v142, &qword_1000D5820);
    }
    *(_QWORD *)&v142 = 0x655F64615F6473;
    *((_QWORD *)&v142 + 1) = 0xE700000000000000;
    AnyHashable.init<A>(_:)(v151, &v142, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(a2 + 16) && (v30 = sub_10004A78C((uint64_t)v151), (v31 & 1) != 0))
    {
      sub_10000DB98(*(_QWORD *)(a2 + 56) + 32 * v30, (uint64_t)&v142);
    }
    else
    {
      v142 = 0u;
      v143 = 0u;
    }
    sub_10000DAE8((uint64_t)v151);
    if (*((_QWORD *)&v143 + 1))
    {
      sub_10000DAD8(&v142, v148);
      sub_10000DB98((uint64_t)v148, (uint64_t)v151);
      swift_dynamicCast(&v142, v151, (char *)&type metadata for Any + 8, &type metadata for UInt32, 7);
      v137 = v142;
      if ((_DWORD)v142 == 5)
      {
        v126 = 0;
        a2 = 0;
        v129 = 0;
        v130 = 0;
        v124 = 0xE000000000000000;
        v125 = 0;
        v22 = 0xE000000000000000;
        v127 = 0xE000000000000000;
        v128 = 0xE000000000000000;
        v131 = 0xE000000000000000;
        v132 = 0;
        v23 = v17;
      }
      else
      {
        if ((_DWORD)v142 == 4)
        {
          v34 = String._bridgeToObjectiveC()();
          v35 = sub_100006354(v34);

          v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
          v38 = v37;

          *(_QWORD *)&v151[0] = v36;
          *((_QWORD *)&v151[0] + 1) = v38;
          v39._countAndFlagsBits = 10272;
          v39._object = (void *)0xE200000000000000;
          String.append(_:)(v39);
          LODWORD(v142) = v20;
          v40._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int32, &protocol witness table for Int32);
          object = v40._object;
          String.append(_:)(v40);
          swift_bridgeObjectRelease(object);
          v42._countAndFlagsBits = 2601;
          v42._object = (void *)0xE200000000000000;
          String.append(_:)(v42);
          v43 = String._bridgeToObjectiveC()();
          v44 = sub_100006354(v43);

          v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
          v47 = v46;

          v48._countAndFlagsBits = v45;
          v48._object = v47;
          String.append(_:)(v48);
          swift_bridgeObjectRelease(v47);
          v131 = *((_QWORD *)&v151[0] + 1);
          v132 = *(_QWORD *)&v151[0];
          v49 = String._bridgeToObjectiveC()();
          v50 = sub_100006354(v49);

          v129 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
          v127 = v51;

          v52 = String._bridgeToObjectiveC()();
          v126 = 0;
          v130 = 0;
          v124 = 0xE000000000000000;
          v125 = 0;
          v128 = 0xE000000000000000;
        }
        else
        {
          if ((_DWORD)v142 == 3)
          {
            *(_QWORD *)&v142 = 0x72655F64615F6473;
            *((_QWORD *)&v142 + 1) = 0xE800000000000000;
            AnyHashable.init<A>(_:)(v151, &v142, &type metadata for String, &protocol witness table for String);
            if (*(_QWORD *)(a2 + 16) && (v32 = sub_10004A78C((uint64_t)v151), (v33 & 1) != 0))
            {
              sub_10000DB98(*(_QWORD *)(a2 + 56) + 32 * v32, (uint64_t)&v139);
            }
            else
            {
              v139 = 0u;
              v140 = 0u;
            }
            sub_10000DAE8((uint64_t)v151);
            if (*((_QWORD *)&v140 + 1))
            {
              sub_10000DAD8(&v139, &v142);
              sub_10000DAD8(&v142, v151);
              v71 = swift_dynamicCast(&v139, v151, (char *)&type metadata for Any + 8, &type metadata for Int32, 6);
              v72 = v139;
              if (!v71)
                v72 = 0;
              v126 = v72;
            }
            else
            {
              sub_10000DC40((uint64_t)&v139, &qword_1000D5820);
              v126 = 0;
            }
            *(_QWORD *)&v142 = 0x64655F64615F6473;
            *((_QWORD *)&v142 + 1) = 0xE800000000000000;
            AnyHashable.init<A>(_:)(v151, &v142, &type metadata for String, &protocol witness table for String);
            if (*(_QWORD *)(a2 + 16) && (v73 = sub_10004A78C((uint64_t)v151), (v74 & 1) != 0))
            {
              sub_10000DB98(*(_QWORD *)(a2 + 56) + 32 * v73, (uint64_t)&v139);
            }
            else
            {
              v139 = 0u;
              v140 = 0u;
            }
            sub_10000DAE8((uint64_t)v151);
            if (*((_QWORD *)&v140 + 1))
            {
              sub_10000DAD8(&v139, &v142);
              sub_10000DB98((uint64_t)&v142, (uint64_t)v151);
              if (swift_dynamicCast(&v139, v151, (char *)&type metadata for Any + 8, &type metadata for String, 6))
              {
                v76 = *((_QWORD *)&v139 + 1);
                v75 = v139;
              }
              else
              {
                v76 = 0xE700000000000000;
                v75 = 0x6E776F6E6B6E55;
              }
              v124 = v76;
              v125 = v75;
              sub_10000CDB8(&v142);
            }
            else
            {
              sub_10000DC40((uint64_t)&v139, &qword_1000D5820);
              v124 = 0xE000000000000000;
              v125 = 0;
            }
            v77 = String._bridgeToObjectiveC()();
            v78 = sub_100006354(v77);

            v79 = static String._unconditionallyBridgeFromObjectiveC(_:)(v78);
            v81 = v80;

            *(_QWORD *)&v151[0] = v79;
            *((_QWORD *)&v151[0] + 1) = v81;
            v82._countAndFlagsBits = 10272;
            v82._object = (void *)0xE200000000000000;
            String.append(_:)(v82);
            LODWORD(v142) = v20;
            v83._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int32, &protocol witness table for Int32);
            v84 = v83._object;
            String.append(_:)(v83);
            swift_bridgeObjectRelease(v84);
            v85._countAndFlagsBits = 2601;
            v85._object = (void *)0xE200000000000000;
            String.append(_:)(v85);
            v86 = String._bridgeToObjectiveC()();
            v87 = sub_100006354(v86);

            v88 = static String._unconditionallyBridgeFromObjectiveC(_:)(v87);
            v90 = v89;

            v91._countAndFlagsBits = v88;
            v91._object = v90;
            String.append(_:)(v91);
            swift_bridgeObjectRelease(v90);
            v131 = *((_QWORD *)&v151[0] + 1);
            v132 = *(_QWORD *)&v151[0];
            v92 = String._bridgeToObjectiveC()();
            v93 = sub_100006354(v92);

            v130 = static String._unconditionallyBridgeFromObjectiveC(_:)(v93);
            v128 = v94;

            v52 = String._bridgeToObjectiveC()();
            v129 = 0;
          }
          else
          {
            v53 = String._bridgeToObjectiveC()();
            v54 = sub_100006354(v53);

            v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
            v57 = v56;

            *(_QWORD *)&v151[0] = v55;
            *((_QWORD *)&v151[0] + 1) = v57;
            v58._countAndFlagsBits = 10272;
            v58._object = (void *)0xE200000000000000;
            String.append(_:)(v58);
            LODWORD(v142) = v20;
            v59._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int32, &protocol witness table for Int32);
            v60 = v59._object;
            String.append(_:)(v59);
            swift_bridgeObjectRelease(v60);
            v61._countAndFlagsBits = 2601;
            v61._object = (void *)0xE200000000000000;
            String.append(_:)(v61);
            v62 = String._bridgeToObjectiveC()();
            v63 = sub_100006354(v62);

            v64 = static String._unconditionallyBridgeFromObjectiveC(_:)(v63);
            v66 = v65;

            v67._countAndFlagsBits = v64;
            v67._object = v66;
            String.append(_:)(v67);
            swift_bridgeObjectRelease(v66);
            v131 = *((_QWORD *)&v151[0] + 1);
            v132 = *(_QWORD *)&v151[0];
            v68 = String._bridgeToObjectiveC()();
            v69 = sub_100006354(v68);

            v130 = static String._unconditionallyBridgeFromObjectiveC(_:)(v69);
            v128 = v70;

            v52 = String._bridgeToObjectiveC()();
            v126 = 0;
            v129 = 0;
            v124 = 0xE000000000000000;
            v125 = 0;
          }
          v127 = 0xE000000000000000;
        }
        v23 = v17;
        v95 = sub_100006354(v52);

        a2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v95);
        v22 = v96;

      }
      sub_10000CDB8(v148);
      v21 = v137;
    }
    else
    {
      sub_10000DC40((uint64_t)&v142, &qword_1000D5820);
      v126 = 0;
      v21 = 0;
      a2 = 0;
      v129 = 0;
      v130 = 0;
      v124 = 0xE000000000000000;
      v125 = 0;
      v22 = 0xE000000000000000;
      v127 = 0xE000000000000000;
      v128 = 0xE000000000000000;
      v131 = 0xE000000000000000;
      v132 = 0;
      v23 = v17;
    }
  }
  else
  {
    v126 = 0;
    v21 = 0;
    v129 = 0;
    v130 = 0;
    v124 = 0xE000000000000000;
    v125 = 0;
    v22 = 0xE000000000000000;
    v127 = 0xE000000000000000;
    v128 = 0xE000000000000000;
    v131 = 0xE000000000000000;
    v132 = 0;
    v23 = v17;
  }
  v97 = sub_10000D604(&qword_1000D6168);
  v98 = swift_allocObject(v97, 128, 7);
  *(_OWORD *)(v98 + 16) = xmmword_100099240;
  *(_QWORD *)(v98 + 32) = a2;
  *(_QWORD *)(v98 + 40) = v22;
  *(_QWORD *)(v98 + 48) = 0;
  *(_BYTE *)(v98 + 56) = 26;
  v99 = String._bridgeToObjectiveC()();
  v100 = sub_100006354(v99);

  v101 = static String._unconditionallyBridgeFromObjectiveC(_:)(v100);
  v103 = v102;

  *(_QWORD *)(v98 + 64) = v101;
  *(_QWORD *)(v98 + 72) = v103;
  *(_QWORD *)(v98 + 80) = 1;
  *(_BYTE *)(v98 + 88) = 25;
  v137 = v21;
  if (v21 == 4)
  {
    swift_bridgeObjectRelease(v23);
    v104 = String._bridgeToObjectiveC()();
    v105 = sub_100006354(v104);

    v106 = static String._unconditionallyBridgeFromObjectiveC(_:)(v105);
    v23 = v107;

    v108 = 17;
  }
  else
  {
    v108 = 29;
    v106 = v123;
  }
  *(_QWORD *)(v98 + 96) = v106;
  *(_QWORD *)(v98 + 104) = v23;
  *(_QWORD *)(v98 + 112) = 1;
  *(_BYTE *)(v98 + 120) = v108;
  v109 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 56))(v13, 1, 1, v109);
  memset(v151, 0, 80);
  v110 = (uint64_t)v134;
  sub_100045F1C(0, 0, (uint64_t)v134);
  v111 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v112 = (uint64_t)v135;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 56))(v135, 1, 1, v111);
  v141 = 0;
  v139 = 0u;
  v140 = 0u;
  v113 = String._bridgeToObjectiveC()();
  v114 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v113, v114, 0);

  sub_10005B198((uint64_t *)&v142);
  v148[0] = v142;
  v148[1] = v143;
  v148[2] = v144;
  v148[3] = v145;
  v138 = 1;
  v149 = v146;
  v150 = v147;
  v116 = v136;
  sub_1000328AC(v132, v131, v130, v128, (uint64_t)v13, v129, v127, 0, v136, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v98, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v139,
    (uint64_t)_swiftEmptyArrayStorage,
    (uint64_t)_swiftEmptyArrayStorage,
    Int64 != 0,
    v121,
    0,
    1,
    1,
    (uint64_t)v148,
    (uint64_t)v151,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    v110,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    1,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    v112);
  v117 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  *(_DWORD *)((char *)v116 + v117[35]) = v137;
  *(_DWORD *)((char *)v116 + v117[36]) = v126;
  v118 = (_QWORD *)((char *)v116 + v117[37]);
  result = swift_bridgeObjectRelease(v118[1]);
  v120 = v124;
  *v118 = v125;
  v118[1] = v120;
  return result;
}

uint64_t sub_100024954@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  NSString v74;
  void *v75;
  NSString v76;
  uint64_t Int64;
  uint64_t *v79;
  uint64_t v80;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  _QWORD *v91;
  uint64_t v92;
  _QWORD *v93;
  _BYTE v94[32];
  uint64_t v95;
  __int128 v96;
  __int128 v97;
  _UNKNOWN **v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _OWORD v103[4];
  uint64_t v104;
  uint64_t v105;
  _OWORD v106[4];
  uint64_t v107;
  uint64_t v108;
  uint64_t v109[12];

  v91 = a2;
  v3 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v3);
  v90 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v5);
  v89 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v7);
  v92 = (uint64_t)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = String._bridgeToObjectiveC()();
  v10 = sub_100006354(v9);

  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v87 = v12;
  v88 = v11;

  v13 = String._bridgeToObjectiveC()();
  v14 = sub_100006354(v13);

  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  v18 = String._bridgeToObjectiveC()();
  v19 = sub_100006354(v18);

  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v22 = v21;

  v23 = sub_10000D604(&qword_1000D6168);
  v24 = swift_allocObject(v23, 96, 7);
  *(_OWORD *)(v24 + 16) = xmmword_100098100;
  *(_QWORD *)(v24 + 32) = v15;
  *(_QWORD *)(v24 + 40) = v17;
  *(_QWORD *)(v24 + 48) = 0;
  *(_BYTE *)(v24 + 56) = 1;
  *(_QWORD *)(v24 + 64) = v20;
  *(_QWORD *)(v24 + 72) = v22;
  *(_QWORD *)(v24 + 80) = 1;
  v86 = v24;
  *(_BYTE *)(v24 + 88) = 2;
  v26 = *(_QWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_availableSiriLanguages);
  v27 = *(_QWORD *)(v26 + 16);
  v28 = (uint64_t)_swiftEmptyArrayStorage;
  if (v27)
  {
    v85 = a1;
    v109[0] = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v26);
    sub_10007A264(0, v27, 0);
    v28 = v109[0];
    v84 = v26;
    v29 = (uint64_t *)(v26 + 56);
    do
    {
      v30 = *(v29 - 2);
      v93 = (_QWORD *)*(v29 - 3);
      v32 = *(v29 - 1);
      v31 = *v29;
      v109[0] = v28;
      v34 = *(_QWORD *)(v28 + 16);
      v33 = *(_QWORD *)(v28 + 24);
      swift_bridgeObjectRetain(v30);
      swift_bridgeObjectRetain(v31);
      if (v34 >= v33 >> 1)
      {
        sub_10007A264(v33 > 1, v34 + 1, 1);
        v28 = v109[0];
      }
      v29 += 4;
      *(_QWORD *)(v28 + 16) = v34 + 1;
      v35 = (_QWORD *)(v28 + 32 * v34);
      v35[4] = v93;
      v35[5] = v30;
      v35[6] = v32;
      v35[7] = v31;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease(v84);
    a1 = v85;
  }
  v36 = *(_QWORD *)(v28 + 16);
  if (v36)
    goto LABEL_12;
  if (qword_1000D5520 != -1)
    goto LABEL_53;
  while (1)
  {
    v37 = type metadata accessor for Logger(0, v25);
    v38 = sub_10001118C(v37, (uint64_t)qword_1000D5DA0);
    v39 = Logger.logObject.getter(v38);
    v40 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v41 = 0;
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "HomePodSetupViewModel: Array of available Siri languages unexpectedly empty.", v41, 2u);
      swift_slowDealloc(v41, -1, -1);
    }

LABEL_12:
    v42 = (_QWORD *)v28;
    v43 = *(_QWORD *)(v28 + 16);
    if (v43)
      break;
LABEL_20:
    if (!v36)
      goto LABEL_29;
    v53 = v42[4];
    v52 = v42[5];
    v54 = v42[6];
    a1 = v42[7];
    if (v53 == 0x53552D6E65 && v52 == 0xE500000000000000)
    {
LABEL_23:
      v52 = 0xE500000000000000;
      swift_bridgeObjectRetain(0xE500000000000000);
      v53 = 0x53552D6E65;
      goto LABEL_27;
    }
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(v42[4], v42[5], 0x53552D6E65, 0xE500000000000000, 0) & 1) != 0)
    {
LABEL_26:
      swift_bridgeObjectRetain(v52);
LABEL_27:
      swift_bridgeObjectRetain(a1);
LABEL_30:
      v99 = v53;
      v100 = v52;
      v101 = v54;
      v102 = a1;
      goto LABEL_31;
    }
    if (v36 == 1)
    {
LABEL_29:
      v53 = 0;
      v52 = 0;
      v54 = 0;
      a1 = 0;
      goto LABEL_30;
    }
    v79 = v42 + 11;
    v28 = 1;
    while (1)
    {
      v80 = v28 + 1;
      if (__OFADD__(v28, 1))
        break;
      v53 = *(v79 - 3);
      v52 = *(v79 - 2);
      v54 = *(v79 - 1);
      a1 = *v79;
      if (v53 == 0x53552D6E65 && v52 == 0xE500000000000000)
        goto LABEL_23;
      if ((_stringCompareWithSmolCheck(_:_:expecting:)(*(v79 - 3), *(v79 - 2), 0x53552D6E65, 0xE500000000000000, 0) & 1) != 0)goto LABEL_26;
      v53 = 0;
      v52 = 0;
      v54 = 0;
      a1 = 0;
      ++v28;
      v79 += 4;
      if (v80 == v36)
        goto LABEL_30;
    }
    __break(1u);
LABEL_53:
    swift_once(&qword_1000D5520, sub_10001A788);
  }
  v44 = (_QWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preferredSiriLanguageCode);
  v45 = v42 + 7;
  while (1)
  {
    v47 = *(v45 - 3);
    v46 = *(v45 - 2);
    v49 = *(v45 - 1);
    v48 = *v45;
    v50 = v44[1];
    v51 = v47 == *v44 && v46 == v50;
    if (v51 || (_stringCompareWithSmolCheck(_:_:expecting:)(*(v45 - 3), *(v45 - 2), *v44, v50, 0) & 1) != 0)
      break;
    v45 += 4;
    if (!--v43)
      goto LABEL_20;
  }
  v99 = v47;
  v100 = v46;
  v101 = v49;
  v102 = v48;
  swift_bridgeObjectRetain(v46);
  swift_bridgeObjectRetain(v48);
LABEL_31:
  v55 = (uint64_t)v42;
  if (qword_1000D5520 != -1)
    swift_once(&qword_1000D5520, sub_10001A788);
  v56 = type metadata accessor for Logger(0, v25);
  v57 = sub_10001118C(v56, (uint64_t)qword_1000D5DA0);
  v58 = Logger.logObject.getter(v57);
  v59 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v58, v59))
  {
    v60 = (uint8_t *)swift_slowAlloc(12, -1);
    v61 = swift_slowAlloc(32, -1);
    v109[0] = v61;
    *(_DWORD *)v60 = 136315138;
    swift_beginAccess(&v99, v94, 0, 0);
    v62 = v100;
    if (v100)
    {
      v63 = v99;
      swift_bridgeObjectRetain(v100);
    }
    else
    {
      v62 = 0xE300000000000000;
      v63 = 7104878;
    }
    *(_QWORD *)&v106[0] = sub_10003EF58(v63, v62, v109);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v106, (char *)v106 + 8);
    swift_bridgeObjectRelease(v62);
    _os_log_impl((void *)&_mh_execute_header, v58, v59, "HomePodSetupViewModel: Default Option %s will be preselected in picker.", v60, 0xCu);
    swift_arrayDestroy(v61, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v61, -1, -1);
    swift_slowDealloc(v60, -1, -1);

    v55 = (uint64_t)v42;
  }
  else
  {

  }
  v64 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v92, 1, 1, v64);
  v93 = sub_100077C60(v55);
  swift_bridgeObjectRelease(v55);
  swift_beginAccess(&v99, &v95, 0, 0);
  v65 = v99;
  v66 = v100;
  v67 = v101;
  v68 = v102;
  if (v100)
  {
    *((_QWORD *)&v97 + 1) = &type metadata for LanguageOption;
    v98 = &off_1000C4260;
    v69 = (_QWORD *)swift_allocObject(&unk_1000C2F10, 48, 7);
    *(_QWORD *)&v96 = v69;
    v69[2] = v65;
    v69[3] = v66;
    v69[4] = v67;
    v69[5] = v68;
  }
  else
  {
    v98 = 0;
    v96 = 0u;
    v97 = 0u;
  }
  v70 = type metadata accessor for AdjustedImage(0);
  memset(v109, 0, 80);
  v71 = (uint64_t)v89;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v89, 1, 1, v70);
  v72 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v73 = (uint64_t)v90;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v90, 1, 1, v72);
  sub_100035E4C(v65, v66, v67, v68);
  v74 = String._bridgeToObjectiveC()();
  v85 = v65;
  v75 = v74;
  v76 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v75, v76, 0);

  sub_10005B198((uint64_t *)v103);
  v106[0] = v103[0];
  v106[1] = v103[1];
  v106[2] = v103[2];
  v106[3] = v103[3];
  v94[28] = 1;
  v107 = v104;
  v108 = v105;
  sub_1000328AC(v88, v87, 0, 0xE000000000000000, v92, 0, 0xE000000000000000, 0, v91, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v86, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v93, (uint64_t)&v96,
    (uint64_t)_swiftEmptyArrayStorage,
    (uint64_t)_swiftEmptyArrayStorage,
    Int64 != 0,
    v82,
    0,
    1,
    1,
    (uint64_t)v106,
    (uint64_t)v109,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    v71,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    v73);
  return sub_100035E7C(v85, v66, v67, v68);
}

uint64_t sub_10002526C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  id v27;
  NSString v28;
  void *v29;
  id v30;
  NSString v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSString v37;
  NSString v38;
  uint64_t Int64;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  _QWORD *v48;
  char v49;
  _BYTE v50[32];
  uint64_t v51;
  _OWORD v52[4];
  uint64_t v53;
  uint64_t v54;
  _OWORD v55[4];
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[12];

  v48 = a1;
  v1 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v1);
  v3 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v4);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v7);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = String._bridgeToObjectiveC()();
  v11 = sub_100006354(v10);

  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v45 = v13;
  v46 = v12;

  v14 = String._bridgeToObjectiveC()();
  v15 = sub_100006354(v14);

  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  v19 = String._bridgeToObjectiveC()();
  v20 = sub_100006354(v19);

  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v43 = v22;
  v44 = v21;

  v23 = type metadata accessor for AdjustedMovie(0);
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
  v47 = v9;
  v24(v9, 1, 1, v23);
  v25 = sub_10000D604(&qword_1000D6168);
  v26 = swift_allocObject(v25, 64, 7);
  *(_OWORD *)(v26 + 16) = xmmword_100099220;
  *(_QWORD *)(v26 + 32) = v16;
  *(_QWORD *)(v26 + 40) = v18;
  *(_QWORD *)(v26 + 48) = 0;
  *(_BYTE *)(v26 + 56) = 1;
  v27 = objc_msgSend((id)objc_opt_self(_UIImageSymbolConfiguration), "configurationWithPointSize:", 72.0);
  v28 = String._bridgeToObjectiveC()();
  v29 = (void *)objc_opt_self(UIImage);
  v30 = objc_msgSend(v29, "systemImageNamed:withConfiguration:", v28, v27);

  if (!v30)
  {
    v31 = String._bridgeToObjectiveC()();
    v30 = objc_msgSend(v29, "imageNamed:", v31);

    if (!v30)
      v30 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  }
  v32 = sub_10000D604(&qword_1000D6EE0);
  v33 = swift_allocObject(v32, 40, 7);
  *(_OWORD *)(v33 + 16) = xmmword_100099060;
  *(_QWORD *)(v33 + 32) = v30;
  v58[0] = v33;
  specialized Array._endMutation()(v33);
  v34 = v58[0];
  v35 = type metadata accessor for AdjustedImage(0);
  memset(v58, 0, 80);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v6, 1, 1, v35);
  v36 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v3, 1, 1, v36);
  v51 = 0;
  memset(v50, 0, sizeof(v50));
  v37 = String._bridgeToObjectiveC()();
  v38 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v37, v38, 0);

  sub_10005B198((uint64_t *)v52);
  v55[0] = v52[0];
  v55[1] = v52[1];
  v55[2] = v52[2];
  v55[3] = v52[3];
  v49 = 1;
  v56 = v53;
  v57 = v54;
  return sub_1000328AC(v46, v45, v44, v43, (uint64_t)v47, 0, 0xE000000000000000, 0, v48, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v26, v34, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v50,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v41,
           0,
           1,
           1,
           (uint64_t)v55,
           (uint64_t)v58,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           (uint64_t)v6,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           (uint64_t)v3);
}

void sub_100025750(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSString v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSString v43;
  NSString v44;
  uint64_t Int64;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  _QWORD *v53;
  char v54;
  _BYTE v55[32];
  uint64_t v56;
  _OWORD v57[4];
  uint64_t v58;
  uint64_t v59;
  _OWORD v60[4];
  uint64_t v61;
  uint64_t v62;
  _BYTE v63[96];

  v53 = a1;
  v1 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v1);
  v52 = (char *)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v3);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v6);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = String._bridgeToObjectiveC()();
  v10 = sub_100006354(v9);

  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v50 = v12;
  v51 = v11;

  v13 = String._bridgeToObjectiveC()();
  v14 = sub_100006354(v13);

  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v48 = v16;
  v49 = v15;

  v17 = String._bridgeToObjectiveC()();
  v18 = sub_100006354(v17);

  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v21 = v20;

  v22 = String._bridgeToObjectiveC()();
  v23 = sub_100006354(v22);

  v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
  v26 = v25;

  v27 = sub_10000D604(&qword_1000D6168);
  v28 = swift_allocObject(v27, 96, 7);
  *(_OWORD *)(v28 + 16) = xmmword_100098100;
  *(_QWORD *)(v28 + 32) = v19;
  *(_QWORD *)(v28 + 40) = v21;
  *(_QWORD *)(v28 + 48) = 0;
  *(_BYTE *)(v28 + 56) = 22;
  *(_QWORD *)(v28 + 64) = v24;
  *(_QWORD *)(v28 + 72) = v26;
  *(_QWORD *)(v28 + 80) = 1;
  *(_BYTE *)(v28 + 88) = 2;
  v29 = String._bridgeToObjectiveC()();
  v30 = sub_100006354(v29);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
  v32 = v31;

  v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v32);
  v34 = (id)CUAddSuffixForCurrentDeviceClass(v33);

  if (v34)
  {
    v35 = sub_100006354(v34);

    v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    v37 = v36;

    v38 = type metadata accessor for AdjustedMovie(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v8, 1, 1, v38);
    v39 = type metadata accessor for AdjustedImage(0);
    memset(v63, 0, 80);
    v40 = (uint64_t)v5;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v5, 1, 1, v39);
    v41 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
    v42 = (uint64_t)v52;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v52, 1, 1, v41);
    v56 = 0;
    memset(v55, 0, sizeof(v55));
    v43 = String._bridgeToObjectiveC()();
    v44 = String._bridgeToObjectiveC()();
    Int64 = CFPrefs_GetInt64(v43, v44, 0);

    sub_10005B198((uint64_t *)v57);
    v60[0] = v57[0];
    v60[1] = v57[1];
    v60[2] = v57[2];
    v60[3] = v57[3];
    v54 = 1;
    v61 = v58;
    v62 = v59;
    sub_1000328AC(v51, v50, v49, v48, (uint64_t)v8, v47, v37, 0, v53, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v28, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v55,
      (uint64_t)_swiftEmptyArrayStorage,
      (uint64_t)_swiftEmptyArrayStorage,
      Int64 != 0,
      v46,
      0,
      1,
      1,
      (uint64_t)v60,
      (uint64_t)v63,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      v40,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0xE000000000000000,
      0,
      0,
      0,
      0,
      0,
      0,
      0xE000000000000000,
      v42);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100025C1C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  NSString v34;
  uint64_t Int64;
  int v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  char v47;
  _BYTE v48[32];
  uint64_t v49;
  _OWORD v50[4];
  uint64_t v51;
  uint64_t v52;
  _OWORD v53[4];
  uint64_t v54;
  uint64_t v55;
  _BYTE v56[96];

  v46 = a1;
  v1 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v1);
  v41 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v3);
  v40 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v5);
  v39 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = String._bridgeToObjectiveC()();
  v8 = sub_100006354(v7);

  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v44 = v10;
  v45 = v9;

  v11 = String._bridgeToObjectiveC()();
  v12 = sub_100006354(v11);

  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v42 = v14;
  v43 = v13;

  v15 = String._bridgeToObjectiveC()();
  v16 = sub_100006354(v15);

  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  v20 = String._bridgeToObjectiveC()();
  v21 = sub_100006354(v20);

  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v24 = v23;

  v25 = sub_10000D604(&qword_1000D6168);
  v26 = swift_allocObject(v25, 96, 7);
  *(_OWORD *)(v26 + 16) = xmmword_100098100;
  *(_QWORD *)(v26 + 32) = v17;
  *(_QWORD *)(v26 + 40) = v19;
  *(_QWORD *)(v26 + 48) = 0;
  *(_BYTE *)(v26 + 56) = 1;
  *(_QWORD *)(v26 + 64) = v22;
  *(_QWORD *)(v26 + 72) = v24;
  *(_QWORD *)(v26 + 80) = 1;
  *(_BYTE *)(v26 + 88) = 2;
  v27 = type metadata accessor for AdjustedMovie(0);
  v28 = (uint64_t)v39;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v39, 1, 1, v27);
  v29 = type metadata accessor for AdjustedImage(0);
  memset(v56, 0, 80);
  v30 = (uint64_t)v40;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v40, 1, 1, v29);
  v31 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v32 = (uint64_t)v41;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v41, 1, 1, v31);
  v49 = 0;
  memset(v48, 0, sizeof(v48));
  v33 = String._bridgeToObjectiveC()();
  v34 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v33, v34, 0);

  sub_10005B198((uint64_t *)v50);
  v53[0] = v50[0];
  v53[1] = v50[1];
  v53[2] = v50[2];
  v53[3] = v50[3];
  v47 = 1;
  v54 = v51;
  v55 = v52;
  return sub_1000328AC(v45, v44, v43, v42, v28, 0, 0xE000000000000000, 0, v46, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v26, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v48,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v37,
           0,
           1,
           1,
           (uint64_t)v53,
           (uint64_t)v56,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           v30,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           v32);
}

uint64_t sub_100026040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  NSString v29;
  uint64_t Int64;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  char *v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BOOL4 v56;
  uint64_t v57;
  uint64_t v58;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int *v71;
  uint64_t v72;
  uint64_t v73;
  char v74[24];
  _DWORD v75[8];
  uint64_t v76;
  _OWORD v77[4];
  uint64_t v78;
  uint64_t v79;
  _OWORD v80[4];
  uint64_t v81;
  uint64_t v82;
  _BYTE v83[96];

  v70 = a2;
  v72 = a3;
  v4 = sub_10000D604(&qword_1000D5E68);
  v5 = __chkstk_darwin(v4);
  v65 = (uint64_t)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v73 = (uint64_t)&v61 - v7;
  v8 = sub_10000D604(&qword_1000D5E60);
  v9 = __chkstk_darwin(v8);
  v64 = (uint64_t)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = (char *)&v61 - v11;
  v13 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v13);
  v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for HomePodSetupViewModel(0);
  v17 = __chkstk_darwin(v16);
  v19 = (uint64_t *)((char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v69 = OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode;
  v71 = (int *)v17;
  v20 = String._bridgeToObjectiveC()();
  v21 = sub_100006354(v20);

  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v67 = v23;
  v68 = v22;

  v24 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v15, 1, 1, v24);
  sub_100035AA8(a1);
  v66 = v25;
  memset(v83, 0, 80);
  sub_100045F1C(0, 0, (uint64_t)v12);
  v26 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v62 = *(_QWORD *)(v26 - 8);
  v63 = v26;
  v27 = v73;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 56))(v73, 1, 1);
  v76 = 0;
  memset(v75, 0, sizeof(v75));
  v28 = String._bridgeToObjectiveC()();
  v29 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v28, v29, 0);

  sub_10005B198((uint64_t *)v77);
  v80[0] = v77[0];
  v80[1] = v77[1];
  v80[2] = v77[2];
  v80[3] = v77[3];
  v74[0] = 1;
  v81 = v78;
  v82 = v79;
  sub_1000328AC(v68, v67, 0, 0xE000000000000000, (uint64_t)v15, 0, 0xE000000000000000, 0, v19, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v66, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v75,
    (uint64_t)_swiftEmptyArrayStorage,
    (uint64_t)_swiftEmptyArrayStorage,
    Int64 != 0,
    v60,
    0,
    1,
    1,
    (uint64_t)v80,
    (uint64_t)v83,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    (uint64_t)v12,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    v27);
  v32 = v69;
  if (*(_BYTE *)(a1 + v69) == 5
    && (*(_DWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoRole) & 0xFFFFFFFE) == 2)
  {
    v33 = v71;
    if (qword_1000D5520 != -1)
      swift_once(&qword_1000D5520, sub_10001A788);
    v34 = type metadata accessor for Logger(0, v31);
    v35 = sub_10001118C(v34, (uint64_t)qword_1000D5DA0);
    v36 = Logger.logObject.getter(v35);
    v37 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v38 = 0;
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "createProgressViewModel creating stereo pair image for mini", v38, 2u);
      swift_slowDealloc(v38, -1, -1);
    }

    v39 = v73;
    sub_100032C94(a1, 0, 0, v73);
    sub_100035D20(v39, (uint64_t)v19 + v33[45]);
  }
  else
  {
    v33 = v71;
    if (qword_1000D5520 != -1)
      swift_once(&qword_1000D5520, sub_10001A788);
    v41 = type metadata accessor for Logger(0, v31);
    v42 = sub_10001118C(v41, (uint64_t)qword_1000D5DA0);
    v43 = Logger.logObject.getter(v42);
    v44 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v45 = 0;
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "createProgressViewModel useSoloHomePodConstraints set to true", v45, 2u);
      swift_slowDealloc(v45, -1, -1);
    }

    *((_BYTE *)v19 + v33[28]) = 1;
    v46 = OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoRole;
    *(double *)((char *)v19 + v33[29]) = sub_100035ED8(1, *(unsigned int *)(a1+ OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoRole), *(_BYTE *)(a1 + v32));
    *(double *)((char *)v19 + v33[30]) = sub_100035ED8(0, *(unsigned int *)(a1 + v46), *(_BYTE *)(a1 + v32));
  }
  v47 = (char *)v19 + v33[17];
  v48 = BYTE4(v70);
  *(_DWORD *)v47 = v70;
  v47[4] = v48 & 1;
  if (qword_1000D5520 != -1)
    swift_once(&qword_1000D5520, sub_10001A788);
  v49 = type metadata accessor for Logger(0, v40);
  v50 = sub_10001118C(v49, (uint64_t)qword_1000D5DA0);
  v51 = Logger.logObject.getter(v50);
  v52 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v51, v52))
  {
    v53 = swift_slowAlloc(14, -1);
    *(_DWORD *)v53 = 67109376;
    swift_beginAccess(v19, v74, 0, 0);
    v54 = v64;
    sub_10000E0F0((uint64_t)v19 + v33[27], v64, &qword_1000D5E60);
    v55 = type metadata accessor for AdjustedImage(0);
    v56 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 48))(v54, 1, v55) != 1;
    sub_10000DC40(v54, &qword_1000D5E60);
    v75[0] = v56;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v75, &v75[1]);
    *(_WORD *)(v53 + 8) = 1024;
    v57 = (uint64_t)v19 + v33[45];
    v58 = v65;
    sub_10000E0F0(v57, v65, &qword_1000D5E68);
    LODWORD(v54) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v58, 1, v63) != 1;
    sub_10000DC40(v58, &qword_1000D5E68);
    v75[0] = v54;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v75, &v75[1]);
    _os_log_impl((void *)&_mh_execute_header, v51, v52, "createProgressViewModel: productImage exists = %{BOOL}d | stereoPairImages exists = %{BOOL}d", (uint8_t *)v53, 0xEu);
    swift_slowDealloc(v53, -1, -1);
  }

  swift_beginAccess(v19, v75, 0, 0);
  sub_100035CDC((uint64_t)v19, v72, type metadata accessor for HomePodSetupViewModel);
  return sub_10001126C((uint64_t)v19, type metadata accessor for HomePodSetupViewModel);
}

double sub_1000267F4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  unint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  NSString v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSString v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  int v37;
  int v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  char v42;
  NSString v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  void *v49;
  void *v50;
  NSString v51;
  id v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  NSString v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  Swift::String v60;
  Swift::String v61;
  NSString v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  NSString v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  NSString v79;
  NSString v80;
  uint64_t Int64;
  _QWORD *v82;
  int *v83;
  uint64_t v84;
  double result;
  uint64_t v86;
  char *v87;
  char v88;
  int v89;
  _BYTE v90[12];
  int v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _BYTE *v98;
  _BYTE *v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint8_t *v103;
  _BYTE *v104;
  char v105;
  _BYTE v106[32];
  uint64_t v107;
  _OWORD v108[4];
  uint64_t v109;
  uint64_t v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117[12];

  v101 = a4;
  v102 = a2;
  v6 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v6);
  v99 = &v90[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v8);
  v98 = &v90[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v10);
  v104 = &v90[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1000D5520 != -1)
    swift_once(&qword_1000D5520, sub_10001A788);
  v13 = type metadata accessor for Logger(0, v11);
  sub_10001118C(v13, (uint64_t)qword_1000D5DA0);
  v14 = swift_bridgeObjectRetain_n(a3, 2);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter();
  v17 = os_log_type_enabled(v15, v16);
  v100 = a1;
  if (v17)
  {
    v18 = a3;
    v19 = (uint8_t *)swift_slowAlloc(12, -1);
    v20 = swift_slowAlloc(32, -1);
    v117[0] = v20;
    *(_DWORD *)v19 = 136315138;
    v21 = v18;
    if (!v18)
      v21 = sub_10000C35C((uint64_t)_swiftEmptyArrayStorage);
    v103 = v19 + 4;
    swift_bridgeObjectRetain(v18);
    v22 = Dictionary.description.getter(v21, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
    v24 = v23;
    swift_bridgeObjectRelease(v21);
    *(_QWORD *)&v111 = sub_10003EF58(v22, v24, v117);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v111, (char *)&v111 + 8);
    swift_bridgeObjectRelease_n(v18, 2);
    swift_bridgeObjectRelease(v24);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "createProgressUIForHomePodSUViewModel created, dict = %s", v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);

    a3 = v18;
  }
  else
  {

    swift_bridgeObjectRelease_n(a3, 2);
  }
  v25 = String._bridgeToObjectiveC()();
  v26 = sub_100006354(v25);

  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v29 = v28;

  v30 = String._bridgeToObjectiveC()();
  v31 = sub_100006354(v30);

  v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
  v34 = v33;

  v96 = v29;
  v97 = v27;
  v103 = (uint8_t *)v32;
  if (!a3)
  {
    v95 = v34;
    v111 = 0u;
    v112 = 0u;
    sub_10000DC40((uint64_t)&v111, &qword_1000D5820);
    v111 = 0u;
    v112 = 0u;
    sub_10000DC40((uint64_t)&v111, &qword_1000D5820);
    v111 = 0u;
    v112 = 0u;
    sub_10000DC40((uint64_t)&v111, &qword_1000D5820);
    v94 = 0;
    v38 = 0;
    v111 = 0u;
    v112 = 0u;
LABEL_46:
    sub_10000DC40((uint64_t)&v111, &qword_1000D5820);
    goto LABEL_47;
  }
  *(_QWORD *)&v108[0] = 0xD00000000000001ALL;
  *((_QWORD *)&v108[0] + 1) = 0x800000010009E690;
  AnyHashable.init<A>(_:)(v117, v108, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a3 + 16) && (v35 = sub_10004A78C((uint64_t)v117), (v36 & 1) != 0))
  {
    sub_10000DB98(*(_QWORD *)(a3 + 56) + 32 * v35, (uint64_t)&v111);
  }
  else
  {
    v111 = 0u;
    v112 = 0u;
  }
  sub_10000DAE8((uint64_t)v117);
  if (!*((_QWORD *)&v112 + 1))
  {
    sub_10000DC40((uint64_t)&v111, &qword_1000D5820);
    goto LABEL_18;
  }
  if (!swift_dynamicCast(v117, &v111, (char *)&type metadata for Any + 8, &type metadata for Bool, 6))
  {
LABEL_18:
    v37 = 0;
    goto LABEL_19;
  }
  v37 = LOBYTE(v117[0]);
LABEL_19:
  *(_QWORD *)&v108[0] = 0xD000000000000013;
  *((_QWORD *)&v108[0] + 1) = 0x800000010009E670;
  AnyHashable.init<A>(_:)(v117, v108, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a3 + 16) && (v39 = sub_10004A78C((uint64_t)v117), (v40 & 1) != 0))
  {
    sub_10000DB98(*(_QWORD *)(a3 + 56) + 32 * v39, (uint64_t)&v111);
  }
  else
  {
    v111 = 0u;
    v112 = 0u;
  }
  sub_10000DAE8((uint64_t)v117);
  if (!*((_QWORD *)&v112 + 1))
  {
    sub_10000DC40((uint64_t)&v111, &qword_1000D5820);
    goto LABEL_27;
  }
  if (!swift_dynamicCast(v117, &v111, (char *)&type metadata for Any + 8, &type metadata for Int32, 6))
  {
LABEL_27:
    v38 = 0;
    goto LABEL_28;
  }
  v38 = v117[0];
LABEL_28:
  *(_QWORD *)&v108[0] = 0xD000000000000016;
  *((_QWORD *)&v108[0] + 1) = 0x800000010009E650;
  AnyHashable.init<A>(_:)(v117, v108, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a3 + 16) && (v41 = sub_10004A78C((uint64_t)v117), (v42 & 1) != 0))
  {
    sub_10000DB98(*(_QWORD *)(a3 + 56) + 32 * v41, (uint64_t)&v111);
  }
  else
  {
    v111 = 0u;
    v112 = 0u;
  }
  sub_10000DAE8((uint64_t)v117);
  if (*((_QWORD *)&v112 + 1))
  {
    if (swift_dynamicCast(v117, &v111, (char *)&type metadata for Any + 8, &type metadata for Bool, 6))
    {
      v94 = LOBYTE(v117[0]);
      if ((v37 & 1) == 0)
        goto LABEL_39;
LABEL_37:
      swift_bridgeObjectRelease(v34);
      v43 = String._bridgeToObjectiveC()();
      v44 = sub_100006354(v43);

      v103 = (uint8_t *)static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
      v95 = v45;

      v92 = 0xE000000000000000;
      v93 = 0;
      v91 = 1;
      goto LABEL_53;
    }
    v94 = 0;
    if ((v37 & 1) != 0)
      goto LABEL_37;
  }
  else
  {
    sub_10000DC40((uint64_t)&v111, &qword_1000D5820);
    v94 = 0;
    if (v37)
      goto LABEL_37;
  }
LABEL_39:
  strcpy((char *)v108, "hp_su_est_time");
  HIBYTE(v108[0]) = -18;
  AnyHashable.init<A>(_:)(v117, v108, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a3 + 16) && (v46 = sub_10004A78C((uint64_t)v117), (v47 & 1) != 0))
  {
    sub_10000DB98(*(_QWORD *)(a3 + 56) + 32 * v46, (uint64_t)&v111);
  }
  else
  {
    v111 = 0u;
    v112 = 0u;
  }
  sub_10000DAE8((uint64_t)v117);
  v95 = v34;
  if (!*((_QWORD *)&v112 + 1))
    goto LABEL_46;
  if ((swift_dynamicCast(v117, &v111, (char *)&type metadata for Any + 8, &type metadata for Double, 6) & 1) != 0)
  {
    v48 = sub_100036190();
    v50 = v49;
    goto LABEL_48;
  }
LABEL_47:
  v51 = String._bridgeToObjectiveC()();
  v52 = sub_100006354(v51);

  v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
  v50 = v53;

LABEL_48:
  v54 = sub_100036370();
  if (v38 == 5)
  {
    v92 = v55;
    v93 = v54;
    swift_bridgeObjectRelease(v50);
    v91 = 0;
  }
  else if (v38)
  {
    v117[0] = v54;
    v117[1] = v55;
    v60._countAndFlagsBits = 8250;
    v60._object = (void *)0xE200000000000000;
    String.append(_:)(v60);
    v61._countAndFlagsBits = v48;
    v61._object = v50;
    String.append(_:)(v61);
    swift_bridgeObjectRelease(v50);
    v91 = 0;
    v92 = v117[1];
    v93 = v117[0];
  }
  else
  {
    swift_bridgeObjectRelease(v55);
    swift_bridgeObjectRelease(v50);
    v56 = String._bridgeToObjectiveC()();
    v57 = sub_100006354(v56);

    v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(v57);
    v92 = v59;
    v93 = v58;

    v91 = 0;
  }
LABEL_53:
  v62 = String._bridgeToObjectiveC()();
  v63 = sub_100006354(v62);

  v64 = static String._unconditionallyBridgeFromObjectiveC(_:)(v63);
  v66 = v65;

  v67 = String._bridgeToObjectiveC()();
  v68 = sub_100006354(v67);

  v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(v68);
  v71 = v70;

  v72 = sub_10000D604(&qword_1000D6168);
  v73 = swift_allocObject(v72, 96, 7);
  *(_OWORD *)(v73 + 16) = xmmword_100098100;
  *(_QWORD *)(v73 + 32) = v64;
  *(_QWORD *)(v73 + 40) = v66;
  *(_QWORD *)(v73 + 48) = 0;
  *(_BYTE *)(v73 + 56) = 1;
  *(_QWORD *)(v73 + 64) = v69;
  *(_QWORD *)(v73 + 72) = v71;
  *(_QWORD *)(v73 + 80) = 1;
  *(_BYTE *)(v73 + 88) = 21;
  v74 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v104, 1, 1, v74);
  memset(v117, 0, 80);
  v75 = v98;
  v76 = v100;
  sub_100045F1C(0, 0, (uint64_t)v98);
  v77 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v78 = (uint64_t)v99;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56))(v99, 1, 1, v77);
  v107 = 0;
  memset(v106, 0, sizeof(v106));
  v79 = String._bridgeToObjectiveC()();
  v80 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v79, v80, 0);

  sub_10005B198((uint64_t *)v108);
  v111 = v108[0];
  v112 = v108[1];
  v113 = v108[2];
  v114 = v108[3];
  v105 = 1;
  v115 = v109;
  v116 = v110;
  v82 = v101;
  sub_1000328AC(v97, v96, (uint64_t)v103, v95, (uint64_t)v104, v93, v92, 0, v101, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v73, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v106,
    (uint64_t)_swiftEmptyArrayStorage,
    (uint64_t)_swiftEmptyArrayStorage,
    Int64 != 0,
    v89,
    0,
    1,
    1,
    (uint64_t)&v111,
    (uint64_t)v117,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    (uint64_t)v75,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    v78);
  v83 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  *((_BYTE *)v82 + v83[28]) = 1;
  if (v94)
    *((_BYTE *)v82 + v83[33]) = 1;
  *((_BYTE *)v82 + v83[34]) = v91;
  v84 = 8 * (*(_BYTE *)(v76 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode) == 5);
  result = *(double *)((char *)&unk_100099250 + v84);
  v86 = *(_QWORD *)((char *)&unk_100099260 + v84);
  *(double *)((char *)v82 + v83[29]) = result;
  *(_QWORD *)((char *)v82 + v83[30]) = v86;
  v87 = (char *)v82 + v83[17];
  v88 = BYTE4(v102);
  *(_DWORD *)v87 = v102;
  v87[4] = v88 & 1;
  return result;
}

double sub_100027368@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSString v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  NSString v32;
  uint64_t Int64;
  _QWORD *v34;
  int *v35;
  uint64_t v36;
  double result;
  uint64_t v38;
  char *v39;
  char v40;
  int v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  char v51;
  _BYTE v52[32];
  uint64_t v53;
  _OWORD v54[4];
  uint64_t v55;
  uint64_t v56;
  _OWORD v57[4];
  uint64_t v58;
  uint64_t v59;
  _BYTE v60[96];

  v49 = a3;
  v50 = a2;
  v44 = a1;
  v3 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v3);
  v43 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v5);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v8);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = v10;
  v11 = String._bridgeToObjectiveC()();
  v12 = sub_100006354(v11);

  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v47 = v14;
  v48 = v13;

  v15 = String._bridgeToObjectiveC()();
  v16 = sub_100006354(v15);

  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v45 = v18;
  v46 = v17;

  v19 = String._bridgeToObjectiveC()();
  v20 = sub_100006354(v19);

  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v23 = v22;

  v24 = sub_10000D604(&qword_1000D6168);
  v25 = swift_allocObject(v24, 64, 7);
  *(_OWORD *)(v25 + 16) = xmmword_100099220;
  *(_QWORD *)(v25 + 32) = v21;
  *(_QWORD *)(v25 + 40) = v23;
  *(_QWORD *)(v25 + 48) = 0;
  *(_BYTE *)(v25 + 56) = 1;
  v26 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v10, 1, 1, v26);
  memset(v60, 0, 80);
  v27 = (uint64_t)v7;
  v28 = v44;
  sub_100045F1C(0, 0, (uint64_t)v7);
  v29 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v30 = (uint64_t)v43;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v43, 1, 1, v29);
  v53 = 0;
  memset(v52, 0, sizeof(v52));
  v31 = String._bridgeToObjectiveC()();
  v32 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v31, v32, 0);

  sub_10005B198((uint64_t *)v54);
  v57[0] = v54[0];
  v57[1] = v54[1];
  v57[2] = v54[2];
  v57[3] = v54[3];
  v51 = 1;
  v58 = v55;
  v59 = v56;
  v34 = v49;
  sub_1000328AC(v48, v47, v46, v45, (uint64_t)v42, 0, 0xE000000000000000, 0, v49, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v25, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v52,
    (uint64_t)_swiftEmptyArrayStorage,
    (uint64_t)_swiftEmptyArrayStorage,
    Int64 != 0,
    v41,
    0,
    1,
    1,
    (uint64_t)v57,
    (uint64_t)v60,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    v27,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    v30);
  v35 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  *((_BYTE *)v34 + v35[28]) = 1;
  v36 = 8 * (*(_BYTE *)(v28 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode) == 5);
  result = *(double *)((char *)&unk_100099250 + v36);
  v38 = *(_QWORD *)((char *)&unk_100099260 + v36);
  *(double *)((char *)v34 + v35[29]) = result;
  *(_QWORD *)((char *)v34 + v35[30]) = v38;
  v39 = (char *)v34 + v35[17];
  v40 = BYTE4(v50);
  *(_DWORD *)v39 = v50;
  v39[4] = v40 & 1;
  return result;
}

void sub_100027790(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  int v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSString v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  uint64_t Int64;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  int *v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  char v60;
  _BYTE v61[32];
  uint64_t v62;
  _OWORD v63[4];
  uint64_t v64;
  uint64_t v65;
  _OWORD v66[4];
  uint64_t v67;
  uint64_t v68;
  _BYTE v69[96];

  v4 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v4);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v7);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v10);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_BYTE *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_forcedADPSoftwareUpdate);
  v14 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_showHomepodSoftwareUpdate);
  v59 = a2;
  if (v14 == 1)
    v13 |= *(_BYTE *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_isHomeInHH2);
  if ((v13 & 1) != 0)
  {
    v15 = String._bridgeToObjectiveC()();
    v16 = sub_100006354(v15);

    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v57 = v18;
    v58 = v17;

    v19 = String._bridgeToObjectiveC()();
    v20 = sub_100006354(v19);

    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v55 = v22;
    v56 = v21;

  }
  else
  {
    v23 = String._bridgeToObjectiveC()();
    v24 = sub_100006354(v23);

    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    v57 = v26;
    v58 = v25;

    v55 = 0xE000000000000000;
    v56 = 0;
  }
  v27 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v12, 1, 1, v27);
  sub_100035AA8(a1);
  v54 = v28;
  memset(v69, 0, 80);
  sub_100045F1C(0, 0, (uint64_t)v9);
  v29 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v6, 1, 1, v29);
  v62 = 0;
  memset(v61, 0, sizeof(v61));
  v30 = String._bridgeToObjectiveC()();
  v31 = (uint64_t)v12;
  v32 = (uint64_t)v6;
  v33 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v30, v33, 0);

  v35 = v32;
  sub_10005B198((uint64_t *)v63);
  v66[0] = v63[0];
  v66[1] = v63[1];
  v66[2] = v63[2];
  v66[3] = v63[3];
  v60 = 1;
  v67 = v64;
  v68 = v65;
  v36 = v59;
  sub_1000328AC(v58, v57, v56, v55, v31, 0, 0xE000000000000000, 0, v59, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v54, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v61,
    (uint64_t)_swiftEmptyArrayStorage,
    (uint64_t)_swiftEmptyArrayStorage,
    Int64 != 0,
    v52,
    0,
    1,
    1,
    (uint64_t)v66,
    (uint64_t)v69,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    (uint64_t)v9,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    v32);
  v38 = OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode;
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode) == 5
    && (*(_DWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoRole) & 0xFFFFFFFE) == 2)
  {
    if (qword_1000D5520 != -1)
      swift_once(&qword_1000D5520, sub_10001A788);
    v39 = type metadata accessor for Logger(0, v37);
    v40 = sub_10001118C(v39, (uint64_t)qword_1000D5DA0);
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v43 = 0;
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "createDoneViewModel creating stereo pair image for mini", v43, 2u);
      swift_slowDealloc(v43, -1, -1);
    }

    sub_100032C94(a1, 0, 0, v35);
    v44 = type metadata accessor for HomePodSetupViewModel(0);
    sub_100035D20(v35, (uint64_t)v36 + *(int *)(v44 + 180));
  }
  else
  {
    if (qword_1000D5520 != -1)
      swift_once(&qword_1000D5520, sub_10001A788);
    v45 = type metadata accessor for Logger(0, v37);
    v46 = sub_10001118C(v45, (uint64_t)qword_1000D5DA0);
    v47 = Logger.logObject.getter(v46);
    v48 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v47, v48))
    {
      v49 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v49 = 0;
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "createDoneViewModel useSoloHomePodConstraints set to true", v49, 2u);
      swift_slowDealloc(v49, -1, -1);
    }

    v50 = (int *)type metadata accessor for HomePodSetupViewModel(0);
    *((_BYTE *)v36 + v50[28]) = 1;
    v51 = OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoRole;
    *(double *)((char *)v36 + v50[29]) = sub_100035ED8(1, *(unsigned int *)(a1+ OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoRole), *(_BYTE *)(a1 + v38));
    *(double *)((char *)v36 + v50[30]) = sub_100035ED8(0, *(unsigned int *)(a1 + v51), *(_BYTE *)(a1 + v38));
  }
}

uint64_t sub_100027D78@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  void *v35;
  void *v36;
  Swift::String v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  Swift::String v41;
  void *object;
  uint64_t v43;
  uint64_t v44;
  NSString v45;
  NSString v46;
  uint64_t Int64;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  char v55;
  _BYTE v56[32];
  uint64_t v57;
  _OWORD v58[4];
  uint64_t v59;
  uint64_t v60;
  _OWORD v61[4];
  uint64_t v62;
  uint64_t v63;
  _QWORD v64[12];

  v4 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v4);
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v7);
  v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v10);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = String._bridgeToObjectiveC()();
  v14 = sub_100006354(v13);

  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  v53 = sub_100036490(v15, v17, 0, 1);
  swift_bridgeObjectRelease(v17);
  v18 = String._bridgeToObjectiveC()();
  v19 = sub_100006354(v18);

  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v22 = v21;

  v23 = sub_10000D604((uint64_t *)&unk_1000D7B70);
  v24 = swift_allocObject(v23, 72, 7);
  v25 = OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_status;
  v26 = *(_DWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_status);
  *(_OWORD *)(v24 + 16) = xmmword_100099220;
  *(_QWORD *)(v24 + 56) = &type metadata for Int32;
  *(_QWORD *)(v24 + 64) = &protocol witness table for Int32;
  *(_DWORD *)(v24 + 32) = v26;
  v27 = String.init(format:_:)(v20, v22, v24);
  v51 = v28;
  v29 = swift_bridgeObjectRelease(v22);
  v30 = IsAppleInternalBuild(v29);
  v54 = a2;
  v52 = v27;
  if (v30)
  {
    v31 = *(void **)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_error);
    v64[0] = 0x6C616E7265746E49;
    v64[1] = 0xEA0000000000203ALL;
    if (v31)
    {
      v32 = v31;
      v33 = objc_msgSend(v32, "description");
      v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
      v36 = v35;

      v37._countAndFlagsBits = v34;
      v37._object = v36;
      String.append(_:)(v37);

      v38 = v36;
    }
    else
    {
      LODWORD(v61[0]) = *(_DWORD *)(a1 + v25);
      v41._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int32, &protocol witness table for Int32);
      object = v41._object;
      String.append(_:)(v41);
      v38 = object;
    }
    swift_bridgeObjectRelease(v38);
    v40 = v64[1];
    v39 = v64[0];
  }
  else
  {
    v39 = 0;
    v40 = 0xE000000000000000;
  }
  v43 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v12, 1, 1, v43);
  memset(v64, 0, 80);
  sub_100045F1C(0, 0, (uint64_t)v9);
  v44 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v6, 1, 1, v44);
  v57 = 0;
  memset(v56, 0, sizeof(v56));
  v45 = String._bridgeToObjectiveC()();
  v46 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v45, v46, 0);

  sub_10005B198((uint64_t *)v58);
  v61[0] = v58[0];
  v61[1] = v58[1];
  v61[2] = v58[2];
  v61[3] = v58[3];
  v55 = 1;
  v62 = v59;
  v63 = v60;
  return sub_1000328AC(v52, v51, v39, v40, (uint64_t)v12, 0, 0xE000000000000000, 0, v54, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v53, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v56,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v49,
           0,
           1,
           1,
           (uint64_t)v61,
           (uint64_t)v64,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           (uint64_t)v9,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           (uint64_t)v6);
}

uint64_t sub_100028218@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  double v17;
  double v18;
  NSString v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  NSString v24;
  NSString v25;
  NSString v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  NSString v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  double v35;
  double v36;
  NSString v37;
  id v38;
  id v39;
  NSString v40;
  NSString v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  NSString v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSString v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  NSString v64;
  NSString v65;
  uint64_t Int64;
  uint64_t v67;
  uint64_t v68;
  int v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  _QWORD *v80;
  uint64_t v81;
  char v82;
  _BYTE v83[32];
  uint64_t v84;
  _OWORD v85[4];
  uint64_t v86;
  uint64_t v87;
  _OWORD v88[4];
  uint64_t v89;
  uint64_t v90;
  _QWORD v91[12];

  v80 = a1;
  v1 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v1);
  v79 = (char *)&v71 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v3);
  v78 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v5);
  v81 = (uint64_t)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = String._bridgeToObjectiveC()();
  v8 = sub_100006354(v7);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v10 = v9;

  v11 = String._bridgeToObjectiveC()();
  v12 = sub_100006354(v11);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v14 = v13;

  v15 = (void *)objc_opt_self(UIScreen);
  v16 = objc_msgSend(v15, "mainScreen");
  objc_msgSend(v16, "scale");
  v18 = v17;

  v19 = String._bridgeToObjectiveC()();
  v20 = (void *)objc_opt_self(UIImage);
  v21 = objc_msgSend(v20, "imageNamed:", v19);

  if (!v21
    || (v22 = objc_msgSend(v21, "_applicationIconImageForFormat:precomposed:scale:", 2, 1, v18),
        v21,
        !v22))
  {
    v22 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  }
  v23 = objc_allocWithZone((Class)PRXFeature);
  v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v10);
  v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14);
  *(_QWORD *)&v75 = objc_msgSend(v23, "initWithTitle:detailText:icon:tintColor:valueChangedBlock:", v24, v25, v22, 0, 0);

  v26 = String._bridgeToObjectiveC()();
  v27 = sub_100006354(v26);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v29 = v28;

  v30 = String._bridgeToObjectiveC()();
  v31 = sub_100006354(v30);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
  v33 = v32;

  v34 = objc_msgSend(v15, "mainScreen");
  objc_msgSend(v34, "scale");
  v36 = v35;

  v37 = String._bridgeToObjectiveC()();
  v38 = objc_msgSend(v20, "_applicationIconImageForBundleIdentifier:format:scale:", v37, 2, v36);

  if (!v38)
    v38 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  v39 = objc_allocWithZone((Class)PRXFeature);
  v40 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v29);
  v41 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v33);
  v42 = objc_msgSend(v39, "initWithTitle:detailText:icon:tintColor:valueChangedBlock:", v40, v41, v38, 0, 0);

  v43 = sub_10000D604(&qword_1000D6168);
  v44 = swift_allocObject(v43, 64, 7);
  *(_OWORD *)(v44 + 16) = xmmword_100099220;
  v45 = String._bridgeToObjectiveC()();
  v46 = sub_100006354(v45);

  v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
  v49 = v48;

  *(_QWORD *)(v44 + 32) = v47;
  *(_QWORD *)(v44 + 40) = v49;
  *(_QWORD *)(v44 + 48) = 0;
  *(_BYTE *)(v44 + 56) = 15;
  v50 = String._bridgeToObjectiveC()();
  v51 = sub_100006354(v50);

  v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
  v76 = v53;
  v77 = v52;

  v54 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v81, 1, 1, v54);
  v55 = sub_10000D604(&qword_1000D6EE0);
  v56 = swift_allocObject(v55, 48, 7);
  *(_OWORD *)(v56 + 16) = xmmword_100099270;
  v57 = (void *)v75;
  *(_QWORD *)(v56 + 32) = v75;
  *(_QWORD *)(v56 + 40) = v42;
  v91[0] = v56;
  specialized Array._endMutation()(v56);
  v74 = v91[0];
  v58 = type metadata accessor for AdjustedImage(0);
  memset(v91, 0, 80);
  v59 = (uint64_t)v78;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v78, 1, 1, v58);
  v60 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v61 = (uint64_t)v79;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v79, 1, 1, v60);
  v84 = 0;
  memset(v83, 0, sizeof(v83));
  v62 = v57;
  v63 = v42;
  v64 = String._bridgeToObjectiveC()();
  v65 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v64, v65, 0);

  LOBYTE(v64) = Int64 != 0;
  sub_10005B198((uint64_t *)v85);
  v75 = v85[0];
  v72 = v85[2];
  v73 = v85[1];
  v71 = v85[3];
  v67 = v86;
  v68 = v87;

  v88[0] = v75;
  v88[1] = v73;
  v88[2] = v72;
  v88[3] = v71;
  v89 = v67;
  v90 = v68;
  v82 = 1;
  return sub_1000328AC(v77, v76, 0, 0xE000000000000000, v81, 0, 0xE000000000000000, 0, v80, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v44, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v83,
           (uint64_t)_swiftEmptyArrayStorage,
           v74,
           (char)v64,
           v70,
           0,
           1,
           1,
           (uint64_t)v88,
           (uint64_t)v91,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           v59,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           v61);
}

uint64_t sub_1000289A8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  double v35;
  double v36;
  void *v37;
  NSString v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSString v44;
  NSString v45;
  uint64_t Int64;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  _QWORD *v55;
  char v56;
  _BYTE v57[32];
  uint64_t v58;
  _OWORD v59[4];
  uint64_t v60;
  uint64_t v61;
  _OWORD v62[4];
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;

  v2 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v2);
  v4 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v5);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v8);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000D604(&qword_1000D6168);
  v12 = swift_allocObject(v11, 96, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100098100;
  v13 = String._bridgeToObjectiveC()();
  v14 = sub_100006354(v13);

  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  *(_QWORD *)(v12 + 32) = v15;
  *(_QWORD *)(v12 + 40) = v17;
  *(_QWORD *)(v12 + 48) = 0;
  *(_BYTE *)(v12 + 56) = 15;
  v18 = String._bridgeToObjectiveC()();
  v19 = sub_100006354(v18);

  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v22 = v21;

  *(_QWORD *)(v12 + 64) = v20;
  *(_QWORD *)(v12 + 72) = v22;
  *(_QWORD *)(v12 + 80) = 1;
  *(_BYTE *)(v12 + 88) = 2;
  v23 = String._bridgeToObjectiveC()();
  v24 = sub_100006354(v23);

  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v52 = v26;

  v27 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v10, 1, 1, v27);
  *((_QWORD *)&v66 + 1) = &type metadata for AppleAccountFeatureFlags;
  *(_QWORD *)&v67 = sub_1000365AC();
  isFeatureEnabled(_:)(&v65);
  sub_10000CDB8(&v65);
  v54 = v10;
  v55 = a1;
  v53 = v25;
  v28 = String._bridgeToObjectiveC()();
  v29 = sub_100006354(v28);

  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
  v50 = v31;
  v51 = v30;

  v32 = sub_10000D604(&qword_1000D6EE0);
  v33 = swift_allocObject(v32, 40, 7);
  *(_OWORD *)(v33 + 16) = xmmword_100099060;
  v34 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v34, "scale");
  v36 = v35;

  v37 = (void *)objc_opt_self(UIImage);
  v38 = String._bridgeToObjectiveC()();
  v39 = objc_msgSend(v37, "_applicationIconImageForBundleIdentifier:format:scale:", v38, 2, v36);

  if (!v39)
  {
    v40 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
    v39 = v40;
  }
  *(_QWORD *)(v33 + 32) = v39;
  *(_QWORD *)&v65 = v33;
  specialized Array._endMutation()(v40);
  v41 = v65;
  v42 = type metadata accessor for AdjustedImage(0);
  v65 = 0u;
  v66 = 0u;
  v67 = 0u;
  v68 = 0u;
  v69 = 0u;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v7, 1, 1, v42);
  v43 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v4, 1, 1, v43);
  v58 = 0;
  memset(v57, 0, sizeof(v57));
  v44 = String._bridgeToObjectiveC()();
  v45 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v44, v45, 0);

  sub_10005B198((uint64_t *)v59);
  v62[0] = v59[0];
  v62[1] = v59[1];
  v62[2] = v59[2];
  v62[3] = v59[3];
  v56 = 1;
  v63 = v60;
  v64 = v61;
  return sub_1000328AC(v53, v52, 0, 0xE000000000000000, (uint64_t)v54, v51, v50, 0, v55, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v12, v41, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v57,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v48,
           0,
           1,
           1,
           (uint64_t)v62,
           (uint64_t)&v65,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           (uint64_t)v7,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           (uint64_t)v4);
}

uint64_t sub_100028F04@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  double v14;
  double v15;
  NSString v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  NSString v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSString v47;
  uint64_t v48;
  NSString v49;
  uint64_t Int64;
  uint64_t v51;
  uint64_t v52;
  int v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  _QWORD *v67;
  char v68;
  _BYTE v69[32];
  uint64_t v70;
  _OWORD v71[4];
  uint64_t v72;
  uint64_t v73;
  _OWORD v74[4];
  uint64_t v75;
  uint64_t v76;
  _QWORD v77[12];

  v67 = a1;
  v1 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v1);
  v66 = (char *)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v3);
  v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v6);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = String._bridgeToObjectiveC()();
  v10 = sub_100006354(v9);

  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v64 = v12;
  v65 = v11;

  v13 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v13, "scale");
  v15 = v14;

  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v16);

  if (!v17
    || (v18 = objc_msgSend(v17, "_applicationIconImageForFormat:precomposed:scale:", 2, 1, v15),
        v17,
        !v18))
  {
    v18 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  }
  v19 = sub_10000D604(&qword_1000D6168);
  v20 = swift_allocObject(v19, 96, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100098100;
  v21 = String._bridgeToObjectiveC()();
  v22 = sub_100006354(v21);

  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v25 = v24;

  *(_QWORD *)(v20 + 32) = v23;
  *(_QWORD *)(v20 + 40) = v25;
  *(_QWORD *)(v20 + 48) = 0;
  *(_BYTE *)(v20 + 56) = 18;
  v26 = String._bridgeToObjectiveC()();
  v27 = sub_100006354(v26);

  v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v30 = v29;

  *(_QWORD *)(v20 + 64) = v28;
  *(_QWORD *)(v20 + 72) = v30;
  *(_QWORD *)(v20 + 80) = 1;
  *(_BYTE *)(v20 + 88) = 2;
  v31 = String._bridgeToObjectiveC()();
  v32 = sub_100006354(v31);

  v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
  v62 = v34;
  v63 = v33;

  v35 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v8, 1, 1, v35);
  v36 = sub_10000D604(&qword_1000D6EE0);
  v37 = swift_allocObject(v36, 40, 7);
  *(_OWORD *)(v37 + 16) = xmmword_100099060;
  *(_QWORD *)(v37 + 32) = v18;
  v77[0] = v37;
  specialized Array._endMutation()(v37);
  v61 = v77[0];
  memset(v77, 0, 80);
  v38 = v18;
  v39 = String._bridgeToObjectiveC()();
  v40 = sub_100006354(v39);

  v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
  v59 = v42;
  v60 = v41;

  v43 = type metadata accessor for AdjustedImage(0);
  v44 = (uint64_t)v5;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v5, 1, 1, v43);
  v45 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v46 = (uint64_t)v66;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v66, 1, 1, v45);
  v70 = 0;
  memset(v69, 0, sizeof(v69));
  v47 = String._bridgeToObjectiveC()();
  v48 = (uint64_t)v8;
  v49 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v47, v49, 0);

  sub_10005B198((uint64_t *)v71);
  v57 = v71[1];
  v58 = v71[0];
  v55 = v71[3];
  v56 = v71[2];
  v51 = v72;
  v52 = v73;

  v74[0] = v58;
  v74[1] = v57;
  v74[2] = v56;
  v74[3] = v55;
  v75 = v51;
  v76 = v52;
  v68 = 1;
  return sub_1000328AC(v63, v62, 0, 0xE000000000000000, v48, v65, v64, 0, v67, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v20, v61, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v69,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v54,
           0,
           1,
           1,
           (uint64_t)v74,
           (uint64_t)v77,
           0,
           0,
           v60,
           v59,
           0xD000000000000025,
           0x800000010009EC80,
           0,
           0,
           0,
           v44,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           v46);
}

uint64_t sub_1000294EC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSString v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  double v13;
  double v14;
  void *v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  NSString v37;
  NSString v38;
  uint64_t Int64;
  uint64_t v40;
  uint64_t v41;
  int v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  _QWORD *v55;
  char v56;
  _BYTE v57[32];
  uint64_t v58;
  _OWORD v59[4];
  uint64_t v60;
  uint64_t v61;
  _OWORD v62[4];
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[12];

  v55 = a1;
  v1 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v1);
  v54 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v3);
  v53 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v5);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = String._bridgeToObjectiveC()();
  v9 = sub_100006354(v8);

  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v51 = v11;
  v52 = v10;

  v12 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v12, "scale");
  v14 = v13;

  v15 = (void *)objc_opt_self(UIImage);
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v15, "_applicationIconImageForBundleIdentifier:format:scale:", v16, 2, v14);

  if (!v17)
    v17 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  v18 = sub_10000D604(&qword_1000D6168);
  v19 = swift_allocObject(v18, 64, 7);
  *(_OWORD *)(v19 + 16) = xmmword_100099220;
  v20 = String._bridgeToObjectiveC()();
  v21 = sub_100006354(v20);

  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v24 = v23;

  *(_QWORD *)(v19 + 32) = v22;
  *(_QWORD *)(v19 + 40) = v24;
  *(_QWORD *)(v19 + 48) = 0;
  *(_BYTE *)(v19 + 56) = 1;
  v25 = String._bridgeToObjectiveC()();
  v26 = sub_100006354(v25);

  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v49 = v28;
  v50 = v27;

  v29 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v7, 1, 1, v29);
  v30 = sub_10000D604(&qword_1000D6EE0);
  v31 = swift_allocObject(v30, 40, 7);
  *(_OWORD *)(v31 + 16) = xmmword_100099060;
  *(_QWORD *)(v31 + 32) = v17;
  v65[0] = v31;
  specialized Array._endMutation()(v31);
  v48 = v65[0];
  v32 = type metadata accessor for AdjustedImage(0);
  memset(v65, 0, 80);
  v33 = (uint64_t)v53;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v53, 1, 1, v32);
  v34 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v35 = (uint64_t)v54;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v54, 1, 1, v34);
  v58 = 0;
  memset(v57, 0, sizeof(v57));
  v36 = v17;
  v37 = String._bridgeToObjectiveC()();
  v38 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v37, v38, 0);

  LOBYTE(v37) = Int64 != 0;
  sub_10005B198((uint64_t *)v59);
  v46 = v59[1];
  v47 = v59[0];
  v44 = v59[3];
  v45 = v59[2];
  v40 = v60;
  v41 = v61;

  v62[0] = v47;
  v62[1] = v46;
  v62[2] = v45;
  v62[3] = v44;
  v63 = v40;
  v64 = v41;
  v56 = 1;
  return sub_1000328AC(v50, v49, 0, 0xE000000000000000, (uint64_t)v7, v52, v51, 0, v55, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v19, v48, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v57,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           (char)v37,
           v43,
           0,
           1,
           1,
           (uint64_t)v62,
           (uint64_t)v65,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           v33,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           v35);
}

uint64_t sub_1000299E4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  NSString v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSString v37;
  NSString v38;
  uint64_t Int64;
  uint64_t v40;
  uint64_t v41;
  int v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  _QWORD *v55;
  char v56;
  _BYTE v57[32];
  uint64_t v58;
  _OWORD v59[4];
  uint64_t v60;
  uint64_t v61;
  _OWORD v62[4];
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[12];

  *(_QWORD *)&v47 = a1;
  v55 = a2;
  v2 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v2);
  v53 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v4);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v7);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000365F0();
  v11 = String._bridgeToObjectiveC()();
  v12 = sub_100006354(v11);

  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v51 = v14;
  v52 = v13;

  v15 = String._bridgeToObjectiveC()();
  v16 = sub_100006354(v15);

  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v49 = v18;
  v50 = v17;

  v19 = type metadata accessor for AdjustedMovie(0);
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v54 = v9;
  v20(v9, 1, 1, v19);
  v21 = String._bridgeToObjectiveC()();
  v22 = sub_100006354(v21);

  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v25 = v24;

  v26 = sub_10000D604(&qword_1000D6168);
  v27 = swift_allocObject(v26, 64, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100099220;
  *(_QWORD *)(v27 + 32) = v23;
  *(_QWORD *)(v27 + 40) = v25;
  *(_QWORD *)(v27 + 48) = 0;
  *(_BYTE *)(v27 + 56) = 1;
  v28 = sub_10000D604(&qword_1000D6EE0);
  v29 = swift_allocObject(v28, 40, 7);
  *(_OWORD *)(v29 + 16) = xmmword_100099060;
  *(_QWORD *)(v29 + 32) = v10;
  v65[0] = v29;
  specialized Array._endMutation()(v29);
  v48 = v65[0];
  v30 = qword_1000D5530;
  v31 = v10;
  if (v30 != -1)
    swift_once(&qword_1000D5530, sub_100036860);
  v32 = 1;
  if (!*(_QWORD *)(qword_1000DB5C8 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_testFlags))
    v32 = *(_QWORD *)(v47 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 8) != 0;
  v33 = type metadata accessor for AdjustedImage(0);
  memset(v65, 0, 80);
  v34 = (uint64_t)v6;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v6, 1, 1, v33);
  v35 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v36 = (uint64_t)v53;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v53, 1, 1, v35);
  v58 = 0;
  memset(v57, 0, sizeof(v57));
  v37 = String._bridgeToObjectiveC()();
  v38 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v37, v38, 0);

  LOBYTE(v37) = Int64 != 0;
  sub_10005B198((uint64_t *)v59);
  v46 = v59[1];
  v47 = v59[0];
  v44 = v59[3];
  v45 = v59[2];
  v40 = v60;
  v41 = v61;

  v62[0] = v47;
  v62[1] = v46;
  v62[2] = v45;
  v62[3] = v44;
  v63 = v40;
  v64 = v41;
  v56 = 1;
  return sub_1000328AC(v52, v51, 0, 0xE000000000000000, (uint64_t)v54, v50, v49, 0, v55, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v27, v48, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v57,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           (char)v37,
           v43,
           0,
           1,
           1,
           (uint64_t)v62,
           (uint64_t)v65,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           v32,
           v34,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           v36);
}

uint64_t sub_100029E80@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t inited;
  unint64_t v22;
  uint64_t v23;
  NSString v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  NSString v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSString v46;
  NSString v47;
  uint64_t Int64;
  uint64_t v49;
  uint64_t v50;
  int v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  _QWORD *v65;
  char v66;
  _BYTE v67[32];
  uint64_t v68;
  uint64_t v69;
  _OWORD v70[4];
  uint64_t v71;
  uint64_t v72;
  _OWORD v73[4];
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;

  *(_QWORD *)&v56 = a1;
  v3 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v3);
  v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v6);
  v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v9);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000365F0();
  v13 = WiFiCopyCurrentNetworkInfo(0);
  v65 = a2;
  v62 = v8;
  v63 = v5;
  if (!v13
    || (v14 = (void *)v13,
        *(_QWORD *)&v76 = 0,
        static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)(v13, &v76, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String), v14, (v15 = v76) == 0))
  {
    v76 = 0u;
    v77 = 0u;
    goto LABEL_10;
  }
  if (!*(_QWORD *)(v76 + 16) || (v16 = sub_10004A7C0(1684632435, 0xE400000000000000), (v17 & 1) == 0))
  {
    v76 = 0u;
    v77 = 0u;
    swift_bridgeObjectRelease(v15);
    goto LABEL_10;
  }
  sub_10000DB98(*(_QWORD *)(v15 + 56) + 32 * v16, (uint64_t)&v76);
  swift_bridgeObjectRelease(v15);
  if (!*((_QWORD *)&v77 + 1))
  {
LABEL_10:
    sub_10000DC40((uint64_t)&v76, &qword_1000D5820);
    goto LABEL_11;
  }
  if (swift_dynamicCast(v73, &v76, (char *)&type metadata for Any + 8, &type metadata for String, 6))
  {
    v18 = *((_QWORD *)&v73[0] + 1);
    v19 = *(_QWORD *)&v73[0];
    goto LABEL_12;
  }
LABEL_11:
  v18 = 0xE100000000000000;
  v19 = 63;
LABEL_12:
  v20 = sub_10000D604((uint64_t *)&unk_1000D7B70);
  inited = swift_initStackObject(v20, &v69);
  v57 = xmmword_100099220;
  *(_OWORD *)(inited + 16) = xmmword_100099220;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v22 = sub_100035088();
  *(_QWORD *)(inited + 32) = v19;
  *(_QWORD *)(inited + 64) = v22;
  *(_QWORD *)(inited + 40) = v18;
  *(_QWORD *)&v76 = 0;
  *((_QWORD *)&v76 + 1) = 0xE000000000000000;
  sub_1000340CC(inited, (uint64_t *)&v76, 0xD000000000000024, 0x800000010009EDB0, 16421, 0xE200000000000000);
  swift_setDeallocating(inited);
  v23 = sub_10000D604(&qword_1000D61B0);
  swift_arrayDestroy(inited + 32, 1, v23);
  v60 = *((_QWORD *)&v76 + 1);
  v61 = v76;
  v24 = String._bridgeToObjectiveC()();
  v25 = sub_100006354(v24);

  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  v58 = v27;
  v59 = v26;

  v28 = type metadata accessor for AdjustedMovie(0);
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
  v64 = v11;
  v29(v11, 1, 1, v28);
  v30 = String._bridgeToObjectiveC()();
  v31 = sub_100006354(v30);

  v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
  v34 = v33;

  v35 = sub_10000D604(&qword_1000D6168);
  v36 = swift_allocObject(v35, 64, 7);
  *(_OWORD *)(v36 + 16) = v57;
  *(_QWORD *)(v36 + 32) = v32;
  *(_QWORD *)(v36 + 40) = v34;
  *(_QWORD *)(v36 + 48) = 0;
  *(_BYTE *)(v36 + 56) = 1;
  v37 = sub_10000D604(&qword_1000D6EE0);
  v38 = swift_allocObject(v37, 40, 7);
  *(_OWORD *)(v38 + 16) = xmmword_100099060;
  *(_QWORD *)(v38 + 32) = v12;
  *(_QWORD *)&v76 = v38;
  specialized Array._endMutation()(v38);
  *(_QWORD *)&v57 = v76;
  v39 = qword_1000D5530;
  v40 = v12;
  if (v39 != -1)
    swift_once(&qword_1000D5530, sub_100036860);
  v41 = 1;
  if (!*(_QWORD *)(qword_1000DB5C8 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_testFlags))
    v41 = *(_QWORD *)(v56 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 8) != 0;
  v42 = type metadata accessor for AdjustedImage(0);
  v76 = 0u;
  v77 = 0u;
  v78 = 0u;
  v79 = 0u;
  v80 = 0u;
  v43 = (uint64_t)v62;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v62, 1, 1, v42);
  v44 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v45 = (uint64_t)v63;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v63, 1, 1, v44);
  v68 = 0;
  memset(v67, 0, sizeof(v67));
  v46 = String._bridgeToObjectiveC()();
  v47 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v46, v47, 0);

  sub_10005B198((uint64_t *)v70);
  v55 = v70[1];
  v56 = v70[0];
  v53 = v70[3];
  v54 = v70[2];
  v49 = v71;
  v50 = v72;

  v73[0] = v56;
  v73[1] = v55;
  v73[2] = v54;
  v73[3] = v53;
  v74 = v49;
  v75 = v50;
  v66 = 1;
  return sub_1000328AC(v59, v58, 0, 0xE000000000000000, (uint64_t)v64, v61, v60, 0, v65, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v36, v57, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v67,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v52,
           0,
           1,
           1,
           (uint64_t)v73,
           (uint64_t)&v76,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           v41,
           v43,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           v45);
}

uint64_t sub_10002A45C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  NSString v15;
  NSString v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSString v32;
  id v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSString v40;
  NSString v41;
  uint64_t Int64;
  uint64_t v43;
  uint64_t v44;
  int v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  _QWORD *v61;
  uint64_t v62;
  char v63;
  _BYTE v64[32];
  uint64_t v65;
  _OWORD v66[4];
  uint64_t v67;
  uint64_t v68;
  _OWORD v69[4];
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[12];

  v61 = a2;
  v3 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v3);
  v59 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v5);
  v58 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v7);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = String._bridgeToObjectiveC()();
  v11 = sub_100006354(v10);

  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v56 = v13;
  v57 = v12;

  v14 = sub_1000365F0();
  v15 = String._bridgeToObjectiveC()();
  v16 = sub_100006618();

  if (!v16)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v18 = v17;
    v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v18);
  }
  v19 = sub_100006354(v16);

  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v54 = v21;
  v55 = v20;

  v22 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v9, 1, 1, v22);
  v23 = String._bridgeToObjectiveC()();
  v24 = sub_100006354(v23);

  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v27 = v26;

  v28 = sub_10000D604(&qword_1000D6168);
  v29 = swift_allocObject(v28, 64, 7);
  *(_OWORD *)(v29 + 16) = xmmword_100099220;
  *(_QWORD *)(v29 + 32) = v25;
  *(_QWORD *)(v29 + 40) = v27;
  *(_QWORD *)(v29 + 48) = 0;
  *(_BYTE *)(v29 + 56) = 1;
  v30 = sub_10000D604(&qword_1000D6EE0);
  v31 = swift_allocObject(v30, 40, 7);
  *(_OWORD *)(v31 + 16) = xmmword_100099060;
  *(_QWORD *)(v31 + 32) = v14;
  v72[0] = v31;
  specialized Array._endMutation()(v31);
  v53 = v72[0];
  v51 = v14;
  v32 = String._bridgeToObjectiveC()();
  v33 = sub_100006354(v32);

  v62 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
  v52 = v34;

  if (qword_1000D5530 != -1)
    swift_once(&qword_1000D5530, sub_100036860);
  v60 = v9;
  v35 = 1;
  if (!*(_QWORD *)(qword_1000DB5C8 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_testFlags))
    v35 = *(_QWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 8) != 0;
  v36 = type metadata accessor for AdjustedImage(0);
  memset(v72, 0, 80);
  v37 = (uint64_t)v58;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v58, 1, 1, v36);
  v38 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v39 = (uint64_t)v59;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v59, 1, 1, v38);
  v65 = 0;
  memset(v64, 0, sizeof(v64));
  v40 = String._bridgeToObjectiveC()();
  v41 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v40, v41, 0);

  LOBYTE(v40) = Int64 != 0;
  sub_10005B198((uint64_t *)v66);
  v49 = v66[1];
  v50 = v66[0];
  v47 = v66[3];
  v48 = v66[2];
  v43 = v67;
  v44 = v68;

  v69[0] = v50;
  v69[1] = v49;
  v69[2] = v48;
  v69[3] = v47;
  v70 = v43;
  v71 = v44;
  v63 = 1;
  return sub_1000328AC(v57, v56, 0, 0xE000000000000000, (uint64_t)v60, v55, v54, 0, v61, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v29, v53, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v64,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           (char)v40,
           v46,
           0,
           1,
           1,
           (uint64_t)v69,
           (uint64_t)v72,
           0,
           0,
           v62,
           v52,
           0,
           0,
           0xD000000000000025,
           0x800000010009EE50,
           v35,
           v37,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           v39);
}

uint64_t sub_10002A9D4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  NSString v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSString v32;
  id v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSString v40;
  NSString v41;
  uint64_t Int64;
  uint64_t v43;
  uint64_t v44;
  int v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  _QWORD *v61;
  uint64_t v62;
  char v63;
  _BYTE v64[32];
  uint64_t v65;
  _OWORD v66[4];
  uint64_t v67;
  uint64_t v68;
  _OWORD v69[4];
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[12];

  *(_QWORD *)&v50 = a1;
  v61 = a2;
  v2 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v2);
  v59 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v4);
  v58 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v6);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000365F0();
  v10 = String._bridgeToObjectiveC()();
  v11 = sub_100006354(v10);

  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v56 = v13;
  v57 = v12;

  v14 = String._bridgeToObjectiveC()();
  v15 = sub_100006618();

  if (!v15)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v17 = v16;
    v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17);
  }
  v18 = sub_100006354(v15);

  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v54 = v20;
  v55 = v19;

  v21 = type metadata accessor for AdjustedMovie(0);
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
  v60 = v8;
  v22(v8, 1, 1, v21);
  v23 = String._bridgeToObjectiveC()();
  v24 = sub_100006354(v23);

  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v27 = v26;

  v28 = sub_10000D604(&qword_1000D6168);
  v29 = swift_allocObject(v28, 64, 7);
  *(_OWORD *)(v29 + 16) = xmmword_100099220;
  *(_QWORD *)(v29 + 32) = v25;
  *(_QWORD *)(v29 + 40) = v27;
  *(_QWORD *)(v29 + 48) = 0;
  *(_BYTE *)(v29 + 56) = 1;
  v30 = sub_10000D604(&qword_1000D6EE0);
  v31 = swift_allocObject(v30, 40, 7);
  *(_OWORD *)(v31 + 16) = xmmword_100099060;
  *(_QWORD *)(v31 + 32) = v9;
  v72[0] = v31;
  specialized Array._endMutation()(v31);
  v53 = v72[0];
  v51 = v9;
  v32 = String._bridgeToObjectiveC()();
  v33 = sub_100006354(v32);

  v62 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
  v52 = v34;

  if (qword_1000D5530 != -1)
    swift_once(&qword_1000D5530, sub_100036860);
  v35 = 1;
  if (!*(_QWORD *)(qword_1000DB5C8 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_testFlags))
    v35 = *(_QWORD *)(v50 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 8) != 0;
  v36 = type metadata accessor for AdjustedImage(0);
  memset(v72, 0, 80);
  v37 = (uint64_t)v58;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v58, 1, 1, v36);
  v38 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v39 = (uint64_t)v59;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v59, 1, 1, v38);
  v65 = 0;
  memset(v64, 0, sizeof(v64));
  v40 = String._bridgeToObjectiveC()();
  v41 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v40, v41, 0);

  sub_10005B198((uint64_t *)v66);
  v49 = v66[1];
  v50 = v66[0];
  v47 = v66[3];
  v48 = v66[2];
  v43 = v67;
  v44 = v68;

  v69[0] = v50;
  v69[1] = v49;
  v69[2] = v48;
  v69[3] = v47;
  v70 = v43;
  v71 = v44;
  v63 = 1;
  return sub_1000328AC(v57, v56, 0, 0xE000000000000000, (uint64_t)v60, v55, v54, 0, v61, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v29, v53, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v64,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v46,
           0,
           1,
           1,
           (uint64_t)v69,
           (uint64_t)v72,
           0,
           0,
           v62,
           v52,
           0,
           0,
           0xD000000000000025,
           0x800000010009EE50,
           v35,
           v37,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           v39);
}

uint64_t sub_10002AF24@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  NSString v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSString v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  NSString v46;
  NSString v47;
  uint64_t Int64;
  uint64_t v49;
  uint64_t v50;
  int v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  char v66;
  _BYTE v67[32];
  uint64_t v68;
  uint64_t v69;
  _OWORD v70[4];
  uint64_t v71;
  uint64_t v72;
  _OWORD v73[4];
  uint64_t v74;
  uint64_t v75;
  uint64_t v76[12];

  v65 = a1;
  v1 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v1);
  v62 = (char *)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v3);
  v58 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v5);
  v61 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000365F0();
  v8 = String._bridgeToObjectiveC()();
  v9 = sub_100006354(v8);

  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v63 = v11;
  v64 = v10;

  v12 = sub_10000D604((uint64_t *)&unk_1000D7B70);
  inited = swift_initStackObject(v12, &v69);
  v57 = xmmword_100099220;
  *(_OWORD *)(inited + 16) = xmmword_100099220;
  v14 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v15 = objc_msgSend(v14, "localizedModel");

  static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v17 = v16;

  v18 = String._bridgeToObjectiveC()();
  v19 = sub_100006354(v18);

  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v22 = v21;
  swift_bridgeObjectRelease(v17);

  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_100035088();
  *(_QWORD *)(inited + 32) = v20;
  *(_QWORD *)(inited + 40) = v22;
  v76[0] = 0;
  v76[1] = 0xE000000000000000;
  sub_1000340CC(inited, v76, 0xD00000000000001BLL, 0x800000010009EEE0, 16421, 0xE200000000000000);
  swift_setDeallocating(inited);
  v23 = sub_10000D604(&qword_1000D61B0);
  swift_arrayDestroy(inited + 32, 1, v23);
  v59 = v76[1];
  v60 = v76[0];
  v24 = String._bridgeToObjectiveC()();
  v25 = sub_100006354(v24);

  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  v28 = v27;

  v29 = sub_10000D604(&qword_1000D6168);
  v30 = swift_allocObject(v29, 64, 7);
  *(_OWORD *)(v30 + 16) = v57;
  *(_QWORD *)(v30 + 32) = v26;
  *(_QWORD *)(v30 + 40) = v28;
  *(_QWORD *)(v30 + 48) = 0;
  *(_BYTE *)(v30 + 56) = 1;
  v31 = String._bridgeToObjectiveC()();
  v32 = sub_100006354(v31);

  v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
  v35 = v34;

  v36 = sub_10004A354((_QWORD *)1, 2, 1, (_QWORD *)v30);
  v36[2] = 2;
  v36[8] = v33;
  v36[9] = v35;
  v36[10] = 1;
  *((_BYTE *)v36 + 88) = 24;
  v37 = type metadata accessor for AdjustedMovie(0);
  v38 = (uint64_t)v61;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v61, 1, 1, v37);
  v39 = sub_10000D604(&qword_1000D6EE0);
  v40 = swift_allocObject(v39, 40, 7);
  *(_OWORD *)(v40 + 16) = xmmword_100099060;
  *(_QWORD *)(v40 + 32) = v7;
  v76[0] = v40;
  specialized Array._endMutation()(v40);
  *(_QWORD *)&v57 = v76[0];
  v41 = type metadata accessor for AdjustedImage(0);
  memset(v76, 0, 80);
  v42 = (uint64_t)v58;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v58, 1, 1, v41);
  v43 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v44 = (uint64_t)v62;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v62, 1, 1, v43);
  v68 = 0;
  memset(v67, 0, sizeof(v67));
  v45 = v7;
  v46 = String._bridgeToObjectiveC()();
  v47 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v46, v47, 0);

  LOBYTE(v46) = Int64 != 0;
  sub_10005B198((uint64_t *)v70);
  v55 = v70[1];
  v56 = v70[0];
  v53 = v70[3];
  v54 = v70[2];
  v49 = v71;
  v50 = v72;

  v73[0] = v56;
  v73[1] = v55;
  v73[2] = v54;
  v73[3] = v53;
  v74 = v49;
  v75 = v50;
  v66 = 1;
  return sub_1000328AC(v64, v63, 0, 0xE000000000000000, v38, v60, v59, 0, v65, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, (uint64_t)v36, v57, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v67,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           (char)v46,
           v52,
           0,
           1,
           1,
           (uint64_t)v73,
           (uint64_t)v76,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           v42,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           v44);
}

uint64_t sub_10002B4F0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  NSString v12;
  id v13;
  id v14;
  id v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t inited;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSString v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  NSString v47;
  NSString v48;
  uint64_t Int64;
  uint64_t v50;
  uint64_t v51;
  int v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  _QWORD *v64;
  char v65;
  _BYTE v66[32];
  uint64_t v67;
  uint64_t v68;
  _OWORD v69[4];
  uint64_t v70;
  uint64_t v71;
  _OWORD v72[4];
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;

  v64 = a2;
  v3 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v3);
  v63 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v5);
  v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v8);
  v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode) == 5)
    v11 = 0x800000010009EF70;
  else
    v11 = 0x800000010009EF00;
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  v13 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v12);

  if (!v13
    || (v14 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor"),
        v15 = objc_msgSend(v13, "imageWithTintColor:", v14),
        v13,
        v14,
        !v15))
  {
    v15 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  }
  v16 = String._bridgeToObjectiveC()();
  v17 = sub_100006354(v16);

  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v61 = v19;
  v62 = v18;

  v20 = WiFiCopyCurrentNetworkInfo(0);
  if (!v20
    || (v21 = (void *)v20,
        *(_QWORD *)&v75 = 0,
        static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)(v20, &v75, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String), v21, (v22 = v75) == 0))
  {
    v75 = 0u;
    v76 = 0u;
    goto LABEL_16;
  }
  if (!*(_QWORD *)(v75 + 16) || (v23 = sub_10004A7C0(1684632435, 0xE400000000000000), (v24 & 1) == 0))
  {
    v75 = 0u;
    v76 = 0u;
    swift_bridgeObjectRelease(v22);
    goto LABEL_16;
  }
  sub_10000DB98(*(_QWORD *)(v22 + 56) + 32 * v23, (uint64_t)&v75);
  swift_bridgeObjectRelease(v22);
  if (!*((_QWORD *)&v76 + 1))
  {
LABEL_16:
    sub_10000DC40((uint64_t)&v75, &qword_1000D5820);
    goto LABEL_17;
  }
  if (!swift_dynamicCast(v72, &v75, (char *)&type metadata for Any + 8, &type metadata for String, 6))
  {
LABEL_17:
    v25 = 0xE100000000000000;
    v26 = 63;
    goto LABEL_18;
  }
  v25 = *((_QWORD *)&v72[0] + 1);
  v26 = *(_QWORD *)&v72[0];
LABEL_18:
  v27 = sub_10000D604((uint64_t *)&unk_1000D7B70);
  inited = swift_initStackObject(v27, &v68);
  v57 = xmmword_100099220;
  *(_OWORD *)(inited + 16) = xmmword_100099220;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v29 = sub_100035088();
  *(_QWORD *)(inited + 32) = v26;
  *(_QWORD *)(inited + 64) = v29;
  *(_QWORD *)(inited + 40) = v25;
  *(_QWORD *)&v75 = 0;
  *((_QWORD *)&v75 + 1) = 0xE000000000000000;
  sub_1000340CC(inited, (uint64_t *)&v75, 0xD000000000000023, 0x800000010009EF40, 16421, 0xE200000000000000);
  swift_setDeallocating(inited);
  v30 = sub_10000D604(&qword_1000D61B0);
  swift_arrayDestroy(inited + 32, 1, v30);
  v59 = *((_QWORD *)&v75 + 1);
  v60 = v75;
  v31 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v10, 1, 1, v31);
  v32 = sub_10000D604(&qword_1000D6168);
  v33 = swift_allocObject(v32, 64, 7);
  v58 = v10;
  v34 = v33;
  *(_OWORD *)(v33 + 16) = v57;
  v35 = String._bridgeToObjectiveC()();
  v36 = sub_100006354(v35);

  v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
  v39 = v38;

  *(_QWORD *)(v34 + 32) = v37;
  *(_QWORD *)(v34 + 40) = v39;
  *(_QWORD *)(v34 + 48) = 0;
  *(_BYTE *)(v34 + 56) = 1;
  v40 = sub_10000D604(&qword_1000D6EE0);
  v41 = swift_allocObject(v40, 40, 7);
  *(_OWORD *)(v41 + 16) = xmmword_100099060;
  *(_QWORD *)(v41 + 32) = v15;
  *(_QWORD *)&v75 = v41;
  specialized Array._endMutation()(v41);
  v42 = v75;
  v43 = type metadata accessor for AdjustedImage(0);
  v75 = 0u;
  v76 = 0u;
  v77 = 0u;
  v78 = 0u;
  v79 = 0u;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v7, 1, 1, v43);
  v44 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v45 = (uint64_t)v63;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v63, 1, 1, v44);
  v67 = 0;
  memset(v66, 0, sizeof(v66));
  v46 = v15;
  v47 = String._bridgeToObjectiveC()();
  v48 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v47, v48, 0);

  LOBYTE(v47) = Int64 != 0;
  sub_10005B198((uint64_t *)v69);
  v56 = v69[1];
  v57 = v69[0];
  v54 = v69[3];
  v55 = v69[2];
  v50 = v70;
  v51 = v71;

  v72[0] = v57;
  v72[1] = v56;
  v72[2] = v55;
  v72[3] = v54;
  v73 = v50;
  v74 = v51;
  v65 = 1;
  return sub_1000328AC(v62, v61, v60, v59, (uint64_t)v58, 0, 0xE000000000000000, 0, v64, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v34, v42, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v66,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           (char)v47,
           v53,
           0,
           1,
           1,
           (uint64_t)v72,
           (uint64_t)&v75,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           (uint64_t)v7,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           v45);
}

void sub_10002BB58(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  double v25;
  double v26;
  NSString v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  double v32;
  double v33;
  NSString v34;
  id v35;
  id v36;
  double v37;
  double v38;
  NSString v39;
  id v40;
  uint64_t v41;
  NSString v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  id v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  id v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  id v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSString v64;
  NSString v65;
  uint64_t Int64;
  uint64_t v67;
  uint64_t v68;
  int v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  _QWORD *v82;
  uint64_t v83;
  char v84;
  _BYTE v85[32];
  uint64_t v86;
  _OWORD v87[4];
  uint64_t v88;
  uint64_t v89;
  _OWORD v90[4];
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;

  v2 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v2);
  v4 = (char *)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v5);
  v7 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v8);
  v83 = (uint64_t)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = String._bridgeToObjectiveC()();
  v11 = (id)CUAddSuffixForCurrentDeviceClass(v10);

  if (v11)
  {
    v12 = sub_100006354(v11);

    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v15 = v14;

    v16 = sub_10000D604(&qword_1000D6168);
    v17 = swift_allocObject(v16, 64, 7);
    *(_OWORD *)(v17 + 16) = xmmword_100099220;
    *((_QWORD *)&v94 + 1) = &type metadata for AppleAccountFeatureFlags;
    v77 = sub_1000365AC();
    *(_QWORD *)&v95 = v77;
    isFeatureEnabled(_:)(&v93);
    sub_10000CDB8(&v93);
    v81 = v4;
    v82 = a1;
    v79 = v15;
    v80 = v13;
    v75 = v7;
    v18 = String._bridgeToObjectiveC()();
    v19 = sub_100006354(v18);

    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v22 = v21;

    *(_QWORD *)(v17 + 32) = v20;
    *(_QWORD *)(v17 + 40) = v22;
    *(_QWORD *)(v17 + 48) = 0;
    v78 = v17;
    *(_BYTE *)(v17 + 56) = 13;
    v23 = (void *)objc_opt_self(UIScreen);
    v24 = objc_msgSend(v23, "mainScreen");
    objc_msgSend(v24, "scale");
    v26 = v25;

    v27 = String._bridgeToObjectiveC()();
    v28 = (void *)objc_opt_self(UIImage);
    v29 = objc_msgSend(v28, "imageNamed:", v27);

    if (!v29
      || (v30 = objc_msgSend(v29, "_applicationIconImageForFormat:precomposed:scale:", 2, 1, v26),
          v29,
          !v30))
    {
      v30 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
    }
    v31 = objc_msgSend(v23, "mainScreen");
    objc_msgSend(v31, "scale");
    v33 = v32;

    v34 = String._bridgeToObjectiveC()();
    v35 = objc_msgSend(v28, "_applicationIconImageForBundleIdentifier:format:scale:", v34, 2, v33);

    if (!v35)
      v35 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
    v36 = objc_msgSend(v23, "mainScreen");
    objc_msgSend(v36, "scale");
    v38 = v37;

    v39 = String._bridgeToObjectiveC()();
    v40 = objc_msgSend(v28, "_applicationIconImageForBundleIdentifier:format:scale:", v39, 2, v38);

    if (!v40)
      v40 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
    v41 = type metadata accessor for AdjustedMovie(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v83, 1, 1, v41);
    *((_QWORD *)&v94 + 1) = &type metadata for AppleAccountFeatureFlags;
    *(_QWORD *)&v95 = v77;
    isFeatureEnabled(_:)(&v93);
    sub_10000CDB8(&v93);
    v42 = String._bridgeToObjectiveC()();
    v43 = sub_100006354(v42);

    v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
    v76 = v45;
    v77 = v44;

    *(_QWORD *)&v93 = _swiftEmptyArrayStorage;
    v46 = v30;
    v47 = v35;
    v48 = v40;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v48);
    v50 = *(_QWORD *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v49 = *(_QWORD *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v50 >= v49 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v49 > 1, v50 + 1, 1);
    v51 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v50, v46);
    specialized Array._endMutation()(v51);
    v52 = v47;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v52);
    v54 = *(_QWORD *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v53 = *(_QWORD *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v54 >= v53 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v53 > 1, v54 + 1, 1);
    v55 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v54, v52);
    specialized Array._endMutation()(v55);
    v56 = v48;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v56);
    v58 = *(_QWORD *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v57 = *(_QWORD *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v58 >= v57 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v57 > 1, v58 + 1, 1);
    v59 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v58, v56);
    specialized Array._endMutation()(v59);
    v74 = v93;

    v60 = type metadata accessor for AdjustedImage(0);
    v93 = 0u;
    v94 = 0u;
    v95 = 0u;
    v96 = 0u;
    v97 = 0u;
    v61 = (uint64_t)v75;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v75, 1, 1, v60);
    v62 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
    v63 = (uint64_t)v81;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v81, 1, 1, v62);
    v86 = 0;
    memset(v85, 0, sizeof(v85));
    v64 = String._bridgeToObjectiveC()();
    v65 = String._bridgeToObjectiveC()();
    Int64 = CFPrefs_GetInt64(v64, v65, 0);

    LOBYTE(v64) = Int64 != 0;
    sub_10005B198((uint64_t *)v87);
    v72 = v87[1];
    v73 = v87[0];
    v70 = v87[3];
    v71 = v87[2];
    v67 = v88;
    v68 = v89;

    v90[0] = v73;
    v90[1] = v72;
    v90[2] = v71;
    v90[3] = v70;
    v91 = v67;
    v92 = v68;
    v84 = 1;
    sub_1000328AC(v80, v79, 0, 0xE000000000000000, v83, v77, v76, 0, v82, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v78, v74, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v85,
      (uint64_t)_swiftEmptyArrayStorage,
      (uint64_t)_swiftEmptyArrayStorage,
      (char)v64,
      v69,
      0,
      1,
      1,
      (uint64_t)v90,
      (uint64_t)&v93,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      v61,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0xE000000000000000,
      0,
      0,
      0,
      0,
      0,
      0,
      0xE000000000000000,
      v63);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10002C32C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  double v16;
  double v17;
  NSString v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  double v23;
  double v24;
  NSString v25;
  id v26;
  id v27;
  double v28;
  double v29;
  NSString v30;
  id v31;
  NSString v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  NSString v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  id v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  id v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  id v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  NSString v59;
  NSString v60;
  uint64_t Int64;
  uint64_t v62;
  uint64_t v63;
  int v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  _QWORD *v78;
  uint64_t v79;
  char v80;
  _BYTE v81[32];
  uint64_t v82;
  _OWORD v83[4];
  uint64_t v84;
  uint64_t v85;
  _OWORD v86[4];
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;

  v78 = a1;
  v1 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v1);
  v77 = (char *)&v66 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v3);
  v71 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v5);
  v79 = (uint64_t)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000D604(&qword_1000D6168);
  v8 = swift_allocObject(v7, 64, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100099220;
  *((_QWORD *)&v90 + 1) = &type metadata for AppleAccountFeatureFlags;
  *(_QWORD *)&v91 = sub_1000365AC();
  isFeatureEnabled(_:)(&v89);
  sub_10000CDB8(&v89);
  v9 = String._bridgeToObjectiveC()();
  v10 = sub_100006354(v9);

  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  *(_QWORD *)(v8 + 32) = v11;
  *(_QWORD *)(v8 + 40) = v13;
  *(_QWORD *)(v8 + 48) = 0;
  v76 = v8;
  *(_BYTE *)(v8 + 56) = 13;
  v14 = (void *)objc_opt_self(UIScreen);
  v15 = objc_msgSend(v14, "mainScreen");
  objc_msgSend(v15, "scale");
  v17 = v16;

  v18 = String._bridgeToObjectiveC()();
  v19 = (void *)objc_opt_self(UIImage);
  v20 = objc_msgSend(v19, "imageNamed:", v18);

  if (!v20
    || (v21 = objc_msgSend(v20, "_applicationIconImageForFormat:precomposed:scale:", 2, 1, v17),
        v20,
        !v21))
  {
    v21 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  }
  v22 = objc_msgSend(v14, "mainScreen");
  objc_msgSend(v22, "scale");
  v24 = v23;

  v25 = String._bridgeToObjectiveC()();
  v26 = objc_msgSend(v19, "_applicationIconImageForBundleIdentifier:format:scale:", v25, 2, v24);

  if (!v26)
    v26 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  v27 = objc_msgSend(v14, "mainScreen");
  objc_msgSend(v27, "scale");
  v29 = v28;

  v30 = String._bridgeToObjectiveC()();
  v31 = objc_msgSend(v19, "_applicationIconImageForBundleIdentifier:format:scale:", v30, 2, v29);

  if (!v31)
    v31 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  v32 = String._bridgeToObjectiveC()();
  v33 = sub_100006354(v32);

  v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
  v74 = v35;
  v75 = v34;

  v36 = String._bridgeToObjectiveC()();
  v37 = sub_100006354(v36);

  v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
  v72 = v39;
  v73 = v38;

  v40 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v79, 1, 1, v40);
  *(_QWORD *)&v89 = _swiftEmptyArrayStorage;
  v41 = v21;
  v42 = v26;
  v43 = v31;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v43);
  v45 = *(_QWORD *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v44 = *(_QWORD *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v45 >= v44 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v44 > 1, v45 + 1, 1);
  v46 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v45, v41);
  specialized Array._endMutation()(v46);
  v47 = v42;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v47);
  v49 = *(_QWORD *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v48 = *(_QWORD *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v49 >= v48 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v48 > 1, v49 + 1, 1);
  v50 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v49, v47);
  specialized Array._endMutation()(v50);
  v51 = v43;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v51);
  v53 = *(_QWORD *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v52 = *(_QWORD *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v53 >= v52 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v52 > 1, v53 + 1, 1);
  v54 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v53, v51);
  specialized Array._endMutation()(v54);
  v70 = v89;

  v55 = type metadata accessor for AdjustedImage(0);
  v89 = 0u;
  v90 = 0u;
  v91 = 0u;
  v92 = 0u;
  v93 = 0u;
  v56 = (uint64_t)v71;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v71, 1, 1, v55);
  v57 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v58 = (uint64_t)v77;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v77, 1, 1, v57);
  v82 = 0;
  memset(v81, 0, sizeof(v81));
  v59 = String._bridgeToObjectiveC()();
  v60 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v59, v60, 0);

  LOBYTE(v59) = Int64 != 0;
  sub_10005B198((uint64_t *)v83);
  v68 = v83[1];
  v69 = v83[0];
  v66 = v83[3];
  v67 = v83[2];
  v62 = v84;
  v63 = v85;

  v86[0] = v69;
  v86[1] = v68;
  v86[2] = v67;
  v86[3] = v66;
  v87 = v62;
  v88 = v63;
  v80 = 1;
  return sub_1000328AC(v73, v72, 0, 0xE000000000000000, v79, v75, v74, 0, v78, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v76, v70, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v81,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           (char)v59,
           v65,
           0,
           1,
           1,
           (uint64_t)v86,
           (uint64_t)&v89,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           v56,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           v58);
}

uint64_t sub_10002CA98@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  double v17;
  double v18;
  NSString v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  double v25;
  double v26;
  NSString v27;
  id v28;
  id v29;
  double v30;
  double v31;
  NSString v32;
  id v33;
  char v34;
  unint64_t v35;
  NSString v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  NSString v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  id v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  id v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  id v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSString v63;
  NSString v64;
  uint64_t Int64;
  uint64_t v66;
  uint64_t v67;
  int v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  _QWORD *v82;
  uint64_t v83;
  char v84;
  _BYTE v85[32];
  uint64_t v86;
  _OWORD v87[4];
  uint64_t v88;
  uint64_t v89;
  _OWORD v90[4];
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;

  v82 = a1;
  v1 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v1);
  v81 = (char *)&v70 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v3);
  v77 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v5);
  v83 = (uint64_t)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000D604(&qword_1000D6168);
  v8 = swift_allocObject(v7, 64, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100099220;
  *((_QWORD *)&v94 + 1) = &type metadata for AppleAccountFeatureFlags;
  v9 = sub_1000365AC();
  *(_QWORD *)&v95 = v9;
  isFeatureEnabled(_:)(&v93);
  sub_10000CDB8(&v93);
  v10 = String._bridgeToObjectiveC()();
  v11 = sub_100006354(v10);

  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v14 = v13;

  *(_QWORD *)(v8 + 32) = v12;
  *(_QWORD *)(v8 + 40) = v14;
  *(_QWORD *)(v8 + 48) = 0;
  v80 = v8;
  *(_BYTE *)(v8 + 56) = 13;
  v15 = (void *)objc_opt_self(UIScreen);
  v16 = objc_msgSend(v15, "mainScreen");
  objc_msgSend(v16, "scale");
  v18 = v17;

  v19 = String._bridgeToObjectiveC()();
  v20 = (void *)objc_opt_self(UIImage);
  v21 = objc_msgSend(v20, "imageNamed:", v19);

  if (!v21
    || (v22 = objc_msgSend(v21, "_applicationIconImageForFormat:precomposed:scale:", 2, 1, v18),
        v21,
        !v22))
  {
    v22 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  }
  v23 = v22;
  v24 = objc_msgSend(v15, "mainScreen");
  objc_msgSend(v24, "scale");
  v26 = v25;

  v27 = String._bridgeToObjectiveC()();
  v28 = objc_msgSend(v20, "_applicationIconImageForBundleIdentifier:format:scale:", v27, 2, v26);

  if (!v28)
    v28 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  v29 = objc_msgSend(v15, "mainScreen");
  objc_msgSend(v29, "scale");
  v31 = v30;

  v32 = String._bridgeToObjectiveC()();
  v33 = objc_msgSend(v20, "_applicationIconImageForBundleIdentifier:format:scale:", v32, 2, v31);

  if (!v33)
    v33 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  *((_QWORD *)&v94 + 1) = &type metadata for AppleAccountFeatureFlags;
  *(_QWORD *)&v95 = v9;
  v34 = isFeatureEnabled(_:)(&v93);
  sub_10000CDB8(&v93);
  if ((v34 & 1) != 0)
    v35 = 0x800000010009F0A0;
  else
    v35 = 0x800000010009F080;
  v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v35);
  v37 = sub_100006354(v36);

  v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
  v78 = v39;
  v79 = v38;

  *((_QWORD *)&v94 + 1) = &type metadata for AppleAccountFeatureFlags;
  *(_QWORD *)&v95 = v9;
  isFeatureEnabled(_:)(&v93);
  sub_10000CDB8(&v93);
  v40 = String._bridgeToObjectiveC()();
  v41 = sub_100006354(v40);

  v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
  v75 = v43;
  v76 = v42;

  v44 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v83, 1, 1, v44);
  *(_QWORD *)&v93 = _swiftEmptyArrayStorage;
  v45 = v23;
  v46 = v28;
  v47 = v33;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v47);
  v49 = *(_QWORD *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v48 = *(_QWORD *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v49 >= v48 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v48 > 1, v49 + 1, 1);
  v50 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v49, v45);
  specialized Array._endMutation()(v50);
  v51 = v46;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v51);
  v53 = *(_QWORD *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v52 = *(_QWORD *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v53 >= v52 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v52 > 1, v53 + 1, 1);
  v54 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v53, v51);
  specialized Array._endMutation()(v54);
  v55 = v47;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v55);
  v57 = *(_QWORD *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v56 = *(_QWORD *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v57 >= v56 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v56 > 1, v57 + 1, 1);
  v58 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v57, v55);
  specialized Array._endMutation()(v58);
  v74 = v93;

  v59 = type metadata accessor for AdjustedImage(0);
  v93 = 0u;
  v94 = 0u;
  v95 = 0u;
  v96 = 0u;
  v97 = 0u;
  v60 = (uint64_t)v77;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v77, 1, 1, v59);
  v61 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v62 = (uint64_t)v81;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v81, 1, 1, v61);
  v86 = 0;
  memset(v85, 0, sizeof(v85));
  v63 = String._bridgeToObjectiveC()();
  v64 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v63, v64, 0);

  LOBYTE(v63) = Int64 != 0;
  sub_10005B198((uint64_t *)v87);
  v72 = v87[1];
  v73 = v87[0];
  v70 = v87[3];
  v71 = v87[2];
  v66 = v88;
  v67 = v89;

  v90[0] = v73;
  v90[1] = v72;
  v90[2] = v71;
  v90[3] = v70;
  v91 = v66;
  v92 = v67;
  v84 = 1;
  return sub_1000328AC(v76, v75, 0, 0xE000000000000000, v83, v79, v78, 0, v82, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v80, v74, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v85,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           (char)v63,
           v69,
           0,
           1,
           1,
           (uint64_t)v90,
           (uint64_t)&v93,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           v60,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           v62);
}

uint64_t sub_10002D2A4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  NSString v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  NSString v26;
  void *v27;
  id v28;
  NSString v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSString v37;
  NSString v38;
  uint64_t Int64;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  _QWORD *v50;
  char v51;
  _BYTE v52[32];
  uint64_t v53;
  _OWORD v54[4];
  uint64_t v55;
  uint64_t v56;
  _OWORD v57[4];
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;

  v50 = a1;
  v1 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v1);
  v48 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v3);
  v47 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v5);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000D604(&qword_1000D6168);
  v9 = swift_allocObject(v8, 64, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100099220;
  *((_QWORD *)&v61 + 1) = &type metadata for AppleAccountFeatureFlags;
  v10 = sub_1000365AC();
  *(_QWORD *)&v62 = v10;
  isFeatureEnabled(_:)(&v60);
  sub_10000CDB8(&v60);
  v11 = String._bridgeToObjectiveC()();
  v12 = sub_100006354(v11);

  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  *(_QWORD *)(v9 + 32) = v13;
  *(_QWORD *)(v9 + 40) = v15;
  *(_QWORD *)(v9 + 48) = 0;
  *(_BYTE *)(v9 + 56) = 13;
  v16 = String._bridgeToObjectiveC()();
  v17 = sub_100006354(v16);

  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v45 = v19;
  v46 = v18;

  v20 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v7, 1, 1, v20);
  *((_QWORD *)&v61 + 1) = &type metadata for AppleAccountFeatureFlags;
  *(_QWORD *)&v62 = v10;
  isFeatureEnabled(_:)(&v60);
  sub_10000CDB8(&v60);
  v49 = v7;
  v21 = String._bridgeToObjectiveC()();
  v22 = sub_100006354(v21);

  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v43 = v24;
  v44 = v23;

  v25 = objc_msgSend((id)objc_opt_self(_UIImageSymbolConfiguration), "configurationWithPointSize:", 72.0);
  v26 = String._bridgeToObjectiveC()();
  v27 = (void *)objc_opt_self(UIImage);
  v28 = objc_msgSend(v27, "systemImageNamed:withConfiguration:", v26, v25);

  if (!v28)
  {
    v29 = String._bridgeToObjectiveC()();
    v28 = objc_msgSend(v27, "imageNamed:", v29);

    if (!v28)
      v28 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  }
  v30 = sub_10000D604(&qword_1000D6EE0);
  v31 = swift_allocObject(v30, 40, 7);
  *(_OWORD *)(v31 + 16) = xmmword_100099060;
  *(_QWORD *)(v31 + 32) = v28;
  *(_QWORD *)&v60 = v31;
  specialized Array._endMutation()(v31);
  v32 = v60;
  v33 = type metadata accessor for AdjustedImage(0);
  v60 = 0u;
  v61 = 0u;
  v62 = 0u;
  v63 = 0u;
  v64 = 0u;
  v34 = (uint64_t)v47;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v47, 1, 1, v33);
  v35 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v36 = (uint64_t)v48;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v48, 1, 1, v35);
  v53 = 0;
  memset(v52, 0, sizeof(v52));
  v37 = String._bridgeToObjectiveC()();
  v38 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v37, v38, 0);

  sub_10005B198((uint64_t *)v54);
  v57[0] = v54[0];
  v57[1] = v54[1];
  v57[2] = v54[2];
  v57[3] = v54[3];
  v51 = 1;
  v58 = v55;
  v59 = v56;
  return sub_1000328AC(v46, v45, 0, 0xE000000000000000, (uint64_t)v49, v44, v43, 0, v50, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v9, v32, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v52,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v41,
           0,
           1,
           1,
           (uint64_t)v57,
           (uint64_t)&v60,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           v34,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           v36);
}

uint64_t sub_10002D800@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  double v13;
  double v14;
  NSString v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  double v20;
  double v21;
  NSString v22;
  id v23;
  id v24;
  NSString v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSString v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  id v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSString v50;
  NSString v51;
  uint64_t Int64;
  uint64_t v53;
  uint64_t v54;
  int v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  _QWORD *v68;
  uint64_t v69;
  char v70;
  _BYTE v71[32];
  uint64_t v72;
  _OWORD v73[4];
  uint64_t v74;
  uint64_t v75;
  _OWORD v76[4];
  uint64_t v77;
  uint64_t v78;
  _QWORD v79[12];

  v68 = a1;
  v1 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v1);
  v67 = (char *)&v57 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v3);
  v66 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v5);
  v69 = (uint64_t)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = String._bridgeToObjectiveC()();
  v8 = sub_100006354(v7);

  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v64 = v10;
  v65 = v9;

  v11 = (void *)objc_opt_self(UIScreen);
  v12 = objc_msgSend(v11, "mainScreen");
  objc_msgSend(v12, "scale");
  v14 = v13;

  v15 = String._bridgeToObjectiveC()();
  v16 = (void *)objc_opt_self(UIImage);
  v17 = objc_msgSend(v16, "imageNamed:", v15);

  if (!v17
    || (v18 = objc_msgSend(v17, "_applicationIconImageForFormat:precomposed:scale:", 2, 1, v14),
        v17,
        !v18))
  {
    v18 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  }
  v19 = objc_msgSend(v11, "mainScreen");
  objc_msgSend(v19, "scale");
  v21 = v20;

  v22 = String._bridgeToObjectiveC()();
  v23 = objc_msgSend(v16, "imageNamed:", v22);

  if (!v23
    || (v24 = objc_msgSend(v23, "_applicationIconImageForFormat:precomposed:scale:", 2, 1, v21),
        v23,
        !v24))
  {
    v24 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  }
  v25 = String._bridgeToObjectiveC()();
  v26 = sub_100006354(v25);

  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v62 = v28;
  v63 = v27;

  v29 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v69, 1, 1, v29);
  v30 = sub_10000D604(&qword_1000D6168);
  v31 = swift_allocObject(v30, 64, 7);
  *(_OWORD *)(v31 + 16) = xmmword_100099220;
  v32 = String._bridgeToObjectiveC()();
  v33 = sub_100006354(v32);

  v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
  v36 = v35;

  *(_QWORD *)(v31 + 32) = v34;
  *(_QWORD *)(v31 + 40) = v36;
  *(_QWORD *)(v31 + 48) = 0;
  *(_BYTE *)(v31 + 56) = 1;
  v79[0] = _swiftEmptyArrayStorage;
  v37 = v18;
  v38 = v24;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v38);
  v40 = *(_QWORD *)((v79[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
  v39 = *(_QWORD *)((v79[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v40 >= v39 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v39 > 1, v40 + 1, 1);
  v41 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v40, v37);
  specialized Array._endMutation()(v41);
  v42 = v38;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v42);
  v44 = *(_QWORD *)((v79[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
  v43 = *(_QWORD *)((v79[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v44 >= v43 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v43 > 1, v44 + 1, 1);
  v45 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v44, v42);
  specialized Array._endMutation()(v45);
  v61 = v79[0];

  v46 = type metadata accessor for AdjustedImage(0);
  memset(v79, 0, 80);
  v47 = (uint64_t)v66;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v66, 1, 1, v46);
  v48 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v49 = (uint64_t)v67;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v67, 1, 1, v48);
  v72 = 0;
  memset(v71, 0, sizeof(v71));
  v50 = String._bridgeToObjectiveC()();
  v51 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v50, v51, 0);

  LOBYTE(v50) = Int64 != 0;
  sub_10005B198((uint64_t *)v73);
  v59 = v73[1];
  v60 = v73[0];
  v57 = v73[3];
  v58 = v73[2];
  v53 = v74;
  v54 = v75;

  v76[0] = v60;
  v76[1] = v59;
  v76[2] = v58;
  v76[3] = v57;
  v77 = v53;
  v78 = v54;
  v70 = 1;
  return sub_1000328AC(v63, v62, 0, 0xE000000000000000, v69, v65, v64, 0, v68, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v31, v61, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v71,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           (char)v50,
           v56,
           0,
           1,
           1,
           (uint64_t)v76,
           (uint64_t)v79,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           v47,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           v49);
}

uint64_t sub_10002DE54@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t inited;
  uint64_t v20;
  id v21;
  double v22;
  double v23;
  void *v24;
  NSString v25;
  id v26;
  NSString v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSString v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  NSString v47;
  NSString v48;
  uint64_t Int64;
  uint64_t v50;
  uint64_t v51;
  int v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  _QWORD *v66;
  char v67;
  _BYTE v68[32];
  uint64_t v69;
  uint64_t v70;
  _OWORD v71[4];
  uint64_t v72;
  uint64_t v73;
  _OWORD v74[4];
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;

  v4 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v4);
  v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v7);
  v64 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v9);
  v11 = *(void **)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_error);
  v65 = v6;
  v66 = a2;
  v63 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v11)
  {
    v77 = 0u;
    v78 = 0u;
    goto LABEL_9;
  }
  v12 = objc_msgSend(v11, "userInfo");
  v13 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v12, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  if (!*(_QWORD *)(v13 + 16) || (v14 = sub_10004A7C0(0xD000000000000012, 0x800000010009F1D0), (v15 & 1) == 0))
  {
    v77 = 0u;
    v78 = 0u;
    swift_bridgeObjectRelease(v13);
    goto LABEL_9;
  }
  sub_10000DB98(*(_QWORD *)(v13 + 56) + 32 * v14, (uint64_t)&v77);
  swift_bridgeObjectRelease(v13);
  if (!*((_QWORD *)&v78 + 1))
  {
LABEL_9:
    sub_10000DC40((uint64_t)&v77, &qword_1000D5820);
    goto LABEL_10;
  }
  if (swift_dynamicCast(v74, &v77, (char *)&type metadata for Any + 8, &type metadata for String, 6))
  {
    v16 = *((_QWORD *)&v74[0] + 1);
    v17 = *(_QWORD *)&v74[0];
    goto LABEL_11;
  }
LABEL_10:
  v16 = 0xE100000000000000;
  v17 = 63;
LABEL_11:
  v18 = sub_10000D604((uint64_t *)&unk_1000D7B70);
  inited = swift_initStackObject(v18, &v70);
  v60 = xmmword_100099220;
  *(_OWORD *)(inited + 16) = xmmword_100099220;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_100035088();
  *(_QWORD *)(inited + 32) = v17;
  *(_QWORD *)(inited + 40) = v16;
  *(_QWORD *)&v77 = 0;
  *((_QWORD *)&v77 + 1) = 0xE000000000000000;
  sub_1000340CC(inited, (uint64_t *)&v77, 0xD00000000000001DLL, 0x800000010009F1F0, 16421, 0xE200000000000000);
  swift_setDeallocating(inited);
  v20 = sub_10000D604(&qword_1000D61B0);
  swift_arrayDestroy(inited + 32, 1, v20);
  v61 = *((_QWORD *)&v77 + 1);
  v62 = v77;
  v21 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v21, "scale");
  v23 = v22;

  v24 = (void *)objc_opt_self(UIImage);
  v25 = String._bridgeToObjectiveC()();
  v26 = objc_msgSend(v24, "_applicationIconImageForBundleIdentifier:format:scale:", v25, 2, v23);

  if (!v26)
    v26 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  v27 = String._bridgeToObjectiveC()();
  v28 = sub_100006354(v27);

  v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v31 = v30;

  v32 = sub_10000D604(&qword_1000D6168);
  v33 = swift_allocObject(v32, 64, 7);
  *(_OWORD *)(v33 + 16) = v60;
  *(_QWORD *)(v33 + 32) = v29;
  *(_QWORD *)(v33 + 40) = v31;
  *(_QWORD *)(v33 + 48) = 0;
  *(_BYTE *)(v33 + 56) = 1;
  v34 = String._bridgeToObjectiveC()();
  v35 = sub_100006354(v34);

  v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
  v59 = v37;
  *(_QWORD *)&v60 = v36;

  v38 = type metadata accessor for AdjustedMovie(0);
  v39 = (uint64_t)v63;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v63, 1, 1, v38);
  v40 = sub_10000D604(&qword_1000D6EE0);
  v41 = swift_allocObject(v40, 40, 7);
  *(_OWORD *)(v41 + 16) = xmmword_100099060;
  *(_QWORD *)(v41 + 32) = v26;
  *(_QWORD *)&v77 = v41;
  specialized Array._endMutation()(v41);
  v58 = v77;
  v42 = type metadata accessor for AdjustedImage(0);
  v77 = 0u;
  v78 = 0u;
  v79 = 0u;
  v80 = 0u;
  v81 = 0u;
  v43 = (uint64_t)v64;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v64, 1, 1, v42);
  v44 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v45 = (uint64_t)v65;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v65, 1, 1, v44);
  v69 = 0;
  memset(v68, 0, sizeof(v68));
  v46 = v26;
  v47 = String._bridgeToObjectiveC()();
  v48 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v47, v48, 0);

  sub_10005B198((uint64_t *)v71);
  v56 = v71[1];
  v57 = v71[0];
  v54 = v71[3];
  v55 = v71[2];
  v50 = v72;
  v51 = v73;

  v74[0] = v57;
  v74[1] = v56;
  v74[2] = v55;
  v74[3] = v54;
  v75 = v50;
  v76 = v51;
  v67 = 1;
  return sub_1000328AC(v60, v59, 0, 0xE000000000000000, v39, v62, v61, 0, v66, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v33, v58, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v68,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v53,
           0,
           1,
           1,
           (uint64_t)v74,
           (uint64_t)&v77,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           v43,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           v45);
}

uint64_t sub_10002E4B4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  double v19;
  double v20;
  void *v21;
  NSString v22;
  id v23;
  NSString v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  NSString v38;
  NSString v39;
  uint64_t Int64;
  uint64_t v41;
  uint64_t v42;
  int v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  _QWORD *v56;
  char v57;
  _BYTE v58[32];
  uint64_t v59;
  _OWORD v60[4];
  uint64_t v61;
  uint64_t v62;
  _OWORD v63[4];
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[12];

  v56 = a1;
  v1 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v1);
  v55 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v3);
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v6);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = String._bridgeToObjectiveC()();
  v10 = sub_100006354(v9);

  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v53 = v12;
  v54 = v11;

  v13 = String._bridgeToObjectiveC()();
  v14 = sub_100006354(v13);

  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  v18 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v18, "scale");
  v20 = v19;

  v21 = (void *)objc_opt_self(UIImage);
  v22 = String._bridgeToObjectiveC()();
  v23 = objc_msgSend(v21, "_applicationIconImageForBundleIdentifier:format:scale:", v22, 2, v20);

  if (!v23)
    v23 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  v24 = String._bridgeToObjectiveC()();
  v25 = sub_100006354(v24);

  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  v51 = v27;
  v52 = v26;

  v28 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v8, 1, 1, v28);
  v29 = sub_10000D604(&qword_1000D6168);
  v30 = swift_allocObject(v29, 64, 7);
  *(_OWORD *)(v30 + 16) = xmmword_100099220;
  *(_QWORD *)(v30 + 32) = v15;
  *(_QWORD *)(v30 + 40) = v17;
  *(_QWORD *)(v30 + 48) = 0;
  *(_BYTE *)(v30 + 56) = 1;
  v31 = sub_10000D604(&qword_1000D6EE0);
  v32 = swift_allocObject(v31, 40, 7);
  *(_OWORD *)(v32 + 16) = xmmword_100099060;
  *(_QWORD *)(v32 + 32) = v23;
  v66[0] = v32;
  specialized Array._endMutation()(v32);
  v49 = v66[0];
  v50 = v8;
  v33 = type metadata accessor for AdjustedImage(0);
  memset(v66, 0, 80);
  v34 = (uint64_t)v5;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v5, 1, 1, v33);
  v35 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v36 = (uint64_t)v55;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v55, 1, 1, v35);
  v59 = 0;
  memset(v58, 0, sizeof(v58));
  v37 = v23;
  v38 = String._bridgeToObjectiveC()();
  v39 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v38, v39, 0);

  LOBYTE(v38) = Int64 != 0;
  sub_10005B198((uint64_t *)v60);
  v47 = v60[1];
  v48 = v60[0];
  v45 = v60[3];
  v46 = v60[2];
  v41 = v61;
  v42 = v62;

  v63[0] = v48;
  v63[1] = v47;
  v63[2] = v46;
  v63[3] = v45;
  v64 = v41;
  v65 = v42;
  v57 = 1;
  return sub_1000328AC(v54, v53, 0, 0xE000000000000000, (uint64_t)v50, v52, v51, 0, v56, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v30, v49, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v58,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           (char)v38,
           v44,
           0,
           1,
           1,
           (uint64_t)v63,
           (uint64_t)v66,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           v34,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           v36);
}

uint64_t sub_10002E9AC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSString v27;
  NSString v28;
  uint64_t Int64;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  char v37;
  _BYTE v38[32];
  uint64_t v39;
  _OWORD v40[4];
  uint64_t v41;
  uint64_t v42;
  _OWORD v43[4];
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[96];

  v36 = a1;
  v1 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v1);
  v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = String._bridgeToObjectiveC()();
  v11 = sub_100006354(v10);

  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v34 = v13;
  v35 = v12;

  v14 = String._bridgeToObjectiveC()();
  v15 = sub_100006354(v14);

  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v32 = v17;
  v33 = v16;

  v18 = String._bridgeToObjectiveC()();
  v19 = sub_100006354(v18);

  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v22 = v21;

  v23 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v9, 1, 1, v23);
  v24 = sub_100036490(v20, v22, 0, 1);
  swift_bridgeObjectRelease(v22);
  v25 = type metadata accessor for AdjustedImage(0);
  memset(v46, 0, 80);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v6, 1, 1, v25);
  v26 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v3, 1, 1, v26);
  v39 = 0;
  memset(v38, 0, sizeof(v38));
  v27 = String._bridgeToObjectiveC()();
  v28 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v27, v28, 0);

  sub_10005B198((uint64_t *)v40);
  v43[0] = v40[0];
  v43[1] = v40[1];
  v43[2] = v40[2];
  v43[3] = v40[3];
  v37 = 1;
  v44 = v41;
  v45 = v42;
  return sub_1000328AC(v35, v34, v33, v32, (uint64_t)v9, 0, 0xE000000000000000, 0, v36, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v24, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v38,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v31,
           0,
           1,
           1,
           (uint64_t)v43,
           (uint64_t)v46,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           (uint64_t)v6,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           (uint64_t)v3);
}

uint64_t sub_10002ED50@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  NSString v27;
  uint64_t Int64;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char v36;
  _BYTE v37[32];
  uint64_t v38;
  _OWORD v39[4];
  uint64_t v40;
  uint64_t v41;
  _OWORD v42[4];
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[96];

  v35 = a1;
  v1 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v1);
  v3 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = String._bridgeToObjectiveC()();
  v11 = sub_100006354(v10);

  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v33 = v13;
  v34 = v12;

  v14 = String._bridgeToObjectiveC()();
  v15 = sub_100006354(v14);

  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v31 = v17;
  v32 = v16;

  v18 = String._bridgeToObjectiveC()();
  v19 = sub_100006354(v18);

  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v22 = v21;

  v23 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v9, 1, 1, v23);
  v24 = sub_100036490(v20, v22, 0, 1);
  swift_bridgeObjectRelease(v22);
  memset(v45, 0, 80);
  sub_100045F1C(0, 0, (uint64_t)v6);
  v25 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v3, 1, 1, v25);
  v38 = 0;
  memset(v37, 0, sizeof(v37));
  v26 = String._bridgeToObjectiveC()();
  v27 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v26, v27, 0);

  sub_10005B198((uint64_t *)v39);
  v42[0] = v39[0];
  v42[1] = v39[1];
  v42[2] = v39[2];
  v42[3] = v39[3];
  v36 = 1;
  v43 = v40;
  v44 = v41;
  return sub_1000328AC(v34, v33, v32, v31, (uint64_t)v9, 0, 0xE000000000000000, 0, v35, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v24, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v37,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v30,
           0,
           1,
           1,
           (uint64_t)v42,
           (uint64_t)v45,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           (uint64_t)v6,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           (uint64_t)v3);
}

uint64_t sub_10002F0F0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  NSString v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSString v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSString v45;
  NSString v46;
  uint64_t Int64;
  int v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  _QWORD *v56;
  uint64_t v57;
  char v58;
  _BYTE v59[32];
  uint64_t v60;
  _OWORD v61[4];
  uint64_t v62;
  uint64_t v63;
  _OWORD v64[4];
  uint64_t v65;
  uint64_t v66;
  _BYTE v67[96];

  v56 = a2;
  v3 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v3);
  v54 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v5);
  v57 = (uint64_t)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v7);
  v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = String._bridgeToObjectiveC()();
  v11 = sub_100006354(v10);

  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v52 = v13;
  v53 = v12;

  if (SFDeviceClassCodeGet(v14, v15) == 1)
    v16 = 0x800000010009F310;
  else
    v16 = 0xEF454C5449545F4ELL;
  v17 = String._bridgeToObjectiveC()();
  v18 = sub_100006354(v17);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v20 = v19;

  v21 = sub_10000D604(&qword_1000D6168);
  v22 = (_QWORD *)swift_allocObject(v21, 64, 7);
  *((_OWORD *)v22 + 1) = xmmword_100099220;
  v23 = String._bridgeToObjectiveC()();
  v24 = sub_100006354(v23);

  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v27 = v26;
  swift_bridgeObjectRelease(v16);

  v22[4] = v25;
  v22[5] = v27;
  v22[6] = 0;
  *((_BYTE *)v22 + 56) = 1;
  if (SFDeviceClassCodeGet(v28, v29) == 1)
  {
    v30 = String._bridgeToObjectiveC()();
    v31 = sub_100006354(v30);

    v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    v34 = v33;
    swift_bridgeObjectRelease(v20);

    v36 = v22[2];
    v35 = v22[3];
    if (v36 >= v35 >> 1)
      v22 = sub_10004A354((_QWORD *)(v35 > 1), v36 + 1, 1, v22);
    v22[2] = v36 + 1;
    v37 = &v22[4 * v36];
    v37[4] = v32;
    v37[5] = v34;
    v37[6] = 1;
    *((_BYTE *)v37 + 56) = 2;
  }
  else
  {
    swift_bridgeObjectRelease(v20);
  }
  v38 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v9, 1, 1, v38);
  sub_100045F1C(0, 0, v57);
  v51 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_voiceRecognitionEnabled);
  v50 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_jsEnabled);
  v39 = (uint64_t *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_selectedSiriLanguageCode);
  v40 = *(_QWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_selectedSiriLanguageCode + 8);
  v55 = v9;
  if (v40)
  {
    v41 = *v39;
    v42 = v40;
  }
  else
  {
    v42 = 0xE500000000000000;
    v41 = 0x53552D6E65;
  }
  v43 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  memset(v67, 0, 80);
  v44 = (uint64_t)v54;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v54, 1, 1, v43);
  v60 = 0;
  memset(v59, 0, sizeof(v59));
  swift_bridgeObjectRetain(v40);
  v45 = String._bridgeToObjectiveC()();
  v46 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v45, v46, 0);

  sub_10005B198((uint64_t *)v61);
  v64[0] = v61[0];
  v64[1] = v61[1];
  v64[2] = v61[2];
  v64[3] = v61[3];
  v58 = 1;
  v65 = v62;
  v66 = v63;
  return sub_1000328AC(v53, v52, 0, 0xE000000000000000, (uint64_t)v55, 0, 0xE000000000000000, 0, v56, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, (uint64_t)v22, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v59,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v49,
           0,
           1,
           1,
           (uint64_t)v64,
           (uint64_t)v67,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           v57,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           1,
           0,
           v51,
           v50,
           v41,
           v42,
           v44);
}

uint64_t sub_10002F610@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  unint64_t v13;
  unint64_t v14;
  int v15;
  Swift::String v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  NSString v24;
  char v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t inited;
  unint64_t v34;
  uint64_t v35;
  NSString v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  NSString v43;
  void *v44;
  id v45;
  NSString v46;
  uint64_t v47;
  uint64_t v48;
  NSString v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  NSString v57;
  NSString v58;
  uint64_t Int64;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  unint64_t v67;
  char *v68;
  char *v69;
  _QWORD *v70;
  uint64_t v71;
  char v72;
  _BYTE v73[32];
  uint64_t v74;
  uint64_t v75;
  _OWORD v76[4];
  uint64_t v77;
  uint64_t v78;
  _OWORD v79[4];
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;

  v4 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v4);
  v69 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v6);
  v68 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000D604(&qword_1000D5E58);
  v9 = __chkstk_darwin(v8);
  v71 = (uint64_t)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = SFDeviceClassCodeGet(v9, v11);
  if (v12 == 3)
    v13 = 0xD000000000000021;
  else
    v13 = 0xD000000000000023;
  if (v12 == 3)
    v14 = 0x800000010009F3B0;
  else
    v14 = 0x800000010009F330;
  v15 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode);
  v70 = a2;
  if (v15 == 5)
  {
    *(_QWORD *)&v82 = v13;
    *((_QWORD *)&v82 + 1) = v14;
    swift_bridgeObjectRetain(v14);
    v16._countAndFlagsBits = 1768843629;
    v16._object = (void *)0xE400000000000000;
    String.append(_:)(v16);
    swift_bridgeObjectRelease(v14);
    v14 = *((_QWORD *)&v82 + 1);
    v13 = v82;
  }
  v17 = WiFiCopyCurrentNetworkInfo(0);
  if (!v17)
    goto LABEL_18;
  v18 = (void *)v17;
  *(_QWORD *)&v82 = 0;
  static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)(v17, &v82, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v19 = v82;
  if (!(_QWORD)v82)
    goto LABEL_18;
  if (!*(_QWORD *)(v82 + 16) || (v20 = sub_10004A7C0(1684632435, 0xE400000000000000), (v21 & 1) == 0))
  {
    v82 = 0u;
    v83 = 0u;
    swift_bridgeObjectRelease(v19);
    goto LABEL_17;
  }
  sub_10000DB98(*(_QWORD *)(v19 + 56) + 32 * v20, (uint64_t)&v82);
  swift_bridgeObjectRelease(v19);
  if (!*((_QWORD *)&v83 + 1))
  {
LABEL_17:
    sub_10000DC40((uint64_t)&v82, &qword_1000D5820);
    goto LABEL_18;
  }
  if (!swift_dynamicCast(v79, &v82, (char *)&type metadata for Any + 8, &type metadata for String, 6))
  {
LABEL_18:
    v22 = 0;
    v23 = 0xE000000000000000;
    goto LABEL_19;
  }
  v23 = *((_QWORD *)&v79[0] + 1);
  v22 = *(_QWORD *)&v79[0];
LABEL_19:
  v67 = v13;
  if ((sub_1000431F0() & 1) != 0
    || *(_QWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_amsMarketingItem)
    && *(_BYTE *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_acceptedMusicTerms) == 1)
  {
    v24 = String._bridgeToObjectiveC()();
    v25 = 20;
  }
  else
  {
    v24 = String._bridgeToObjectiveC()();
    v25 = 1;
  }
  v26 = sub_100006354(v24);

  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v29 = v28;

  v30 = sub_10000D604(&qword_1000D6168);
  v31 = swift_allocObject(v30, 64, 7);
  v66 = xmmword_100099220;
  *(_OWORD *)(v31 + 16) = xmmword_100099220;
  *(_QWORD *)(v31 + 32) = v27;
  *(_QWORD *)(v31 + 40) = v29;
  *(_QWORD *)(v31 + 48) = 0;
  *(_BYTE *)(v31 + 56) = v25;
  v32 = sub_10000D604((uint64_t *)&unk_1000D7B70);
  inited = swift_initStackObject(v32, &v75);
  *(_OWORD *)(inited + 16) = v66;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v34 = sub_100035088();
  *(_QWORD *)(inited + 32) = v22;
  *(_QWORD *)(inited + 64) = v34;
  *(_QWORD *)(inited + 40) = v23;
  *(_QWORD *)&v82 = 0;
  *((_QWORD *)&v82 + 1) = 0xE000000000000000;
  sub_1000340CC(inited, (uint64_t *)&v82, 0xD00000000000001FLL, 0x800000010009F360, 16421, 0xE200000000000000);
  swift_setDeallocating(inited);
  v35 = sub_10000D604(&qword_1000D61B0);
  swift_arrayDestroy(inited + 32, 1, v35);
  v65 = *((_QWORD *)&v82 + 1);
  *(_QWORD *)&v66 = v82;
  v36 = String._bridgeToObjectiveC()();
  v37 = sub_100006354(v36);

  v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
  v63 = v39;
  v64 = v38;

  v40 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v71, 1, 1, v40);
  v41 = (void *)objc_opt_self(_UIImageSymbolConfiguration);
  swift_bridgeObjectRetain(v14);
  v42 = objc_msgSend(v41, "configurationWithPointSize:", 72.0);
  v43 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14);
  v44 = (void *)objc_opt_self(UIImage);
  v45 = objc_msgSend(v44, "systemImageNamed:withConfiguration:", v43, v42);

  if (!v45)
  {
    swift_bridgeObjectRetain(v14);
    v46 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v14);
    v45 = objc_msgSend(v44, "imageNamed:", v46);

    if (!v45)
      v45 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  }
  v47 = sub_10000D604(&qword_1000D6EE0);
  v48 = swift_allocObject(v47, 40, 7);
  *(_OWORD *)(v48 + 16) = xmmword_100099060;
  *(_QWORD *)(v48 + 32) = v45;
  *(_QWORD *)&v82 = v48;
  specialized Array._endMutation()(v48);
  v67 = v82;
  swift_bridgeObjectRelease(v14);
  v82 = 0u;
  v83 = 0u;
  v84 = 0u;
  v85 = 0u;
  v86 = 0u;
  v49 = String._bridgeToObjectiveC()();
  v50 = sub_100006354(v49);

  v62 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
  v52 = v51;

  v53 = type metadata accessor for AdjustedImage(0);
  v54 = (uint64_t)v68;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v68, 1, 1, v53);
  v55 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v56 = (uint64_t)v69;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v69, 1, 1, v55);
  v74 = 0;
  memset(v73, 0, sizeof(v73));
  v57 = String._bridgeToObjectiveC()();
  v58 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v57, v58, 0);

  sub_10005B198((uint64_t *)v76);
  v79[0] = v76[0];
  v79[1] = v76[1];
  v79[2] = v76[2];
  v79[3] = v76[3];
  v72 = 1;
  v80 = v77;
  v81 = v78;
  return sub_1000328AC(v64, v63, 0, 0xE000000000000000, v71, v66, v65, 0, v70, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v31, v67, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v73,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v61,
           0,
           1,
           1,
           (uint64_t)v79,
           (uint64_t)&v82,
           0,
           0,
           v62,
           v52,
           0,
           0,
           0xD000000000000025,
           0x800000010009EE50,
           0,
           v54,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           v56);
}

uint64_t sub_10002FD9C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  NSString v29;
  uint64_t Int64;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  char v38;
  _BYTE v39[32];
  uint64_t v40;
  _OWORD v41[4];
  uint64_t v42;
  uint64_t v43;
  _OWORD v44[4];
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[96];

  v37 = a1;
  v1 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v1);
  v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = String._bridgeToObjectiveC()();
  v11 = sub_100006354(v10);

  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v35 = v13;
  v36 = v12;

  v14 = String._bridgeToObjectiveC()();
  v15 = sub_100006354(v14);

  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v33 = v17;
  v34 = v16;

  v18 = String._bridgeToObjectiveC()();
  v19 = sub_100006354(v18);

  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v22 = v21;

  v23 = sub_10000D604(&qword_1000D6168);
  v24 = swift_allocObject(v23, 64, 7);
  *(_OWORD *)(v24 + 16) = xmmword_100099220;
  *(_QWORD *)(v24 + 32) = v20;
  *(_QWORD *)(v24 + 40) = v22;
  *(_QWORD *)(v24 + 48) = 0;
  *(_BYTE *)(v24 + 56) = 8;
  v25 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v9, 1, 1, v25);
  v26 = type metadata accessor for AdjustedImage(0);
  memset(v47, 0, 80);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v6, 1, 1, v26);
  v27 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v3, 1, 1, v27);
  v40 = 0;
  memset(v39, 0, sizeof(v39));
  v28 = String._bridgeToObjectiveC()();
  v29 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v28, v29, 0);

  sub_10005B198((uint64_t *)v41);
  v44[0] = v41[0];
  v44[1] = v41[1];
  v44[2] = v41[2];
  v44[3] = v41[3];
  v38 = 1;
  v45 = v42;
  v46 = v43;
  return sub_1000328AC(v36, v35, v34, v33, (uint64_t)v9, 0, 0xE000000000000000, 0, v37, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v24, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v39,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v32,
           0,
           1,
           1,
           (uint64_t)v44,
           (uint64_t)v47,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           (uint64_t)v6,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           (uint64_t)v3);
}

uint64_t sub_100030158@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  NSString v29;
  uint64_t Int64;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  char v38;
  _BYTE v39[32];
  uint64_t v40;
  _OWORD v41[4];
  uint64_t v42;
  uint64_t v43;
  _OWORD v44[4];
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[96];

  v37 = a1;
  v1 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v1);
  v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = String._bridgeToObjectiveC()();
  v11 = sub_100006354(v10);

  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v35 = v13;
  v36 = v12;

  v14 = String._bridgeToObjectiveC()();
  v15 = sub_100006354(v14);

  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v33 = v17;
  v34 = v16;

  v18 = String._bridgeToObjectiveC()();
  v19 = sub_100006354(v18);

  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v22 = v21;

  v23 = sub_10000D604(&qword_1000D6168);
  v24 = swift_allocObject(v23, 64, 7);
  *(_OWORD *)(v24 + 16) = xmmword_100099220;
  *(_QWORD *)(v24 + 32) = v20;
  *(_QWORD *)(v24 + 40) = v22;
  *(_QWORD *)(v24 + 48) = 0;
  *(_BYTE *)(v24 + 56) = 8;
  v25 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v9, 1, 1, v25);
  v26 = type metadata accessor for AdjustedImage(0);
  memset(v47, 0, 80);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v6, 1, 1, v26);
  v27 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v3, 1, 1, v27);
  v40 = 0;
  memset(v39, 0, sizeof(v39));
  v28 = String._bridgeToObjectiveC()();
  v29 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v28, v29, 0);

  sub_10005B198((uint64_t *)v41);
  v44[0] = v41[0];
  v44[1] = v41[1];
  v44[2] = v41[2];
  v44[3] = v41[3];
  v38 = 1;
  v45 = v42;
  v46 = v43;
  return sub_1000328AC(v36, v35, v34, v33, (uint64_t)v9, 0, 0xE000000000000000, 0, v37, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v24, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v39,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v32,
           0,
           1,
           1,
           (uint64_t)v44,
           (uint64_t)v47,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           (uint64_t)v6,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           (uint64_t)v3);
}

uint64_t sub_100030518@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSString v29;
  uint64_t v30;
  NSString v31;
  uint64_t Int64;
  _QWORD *v33;
  uint64_t v34;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  char v44;
  _BYTE v45[32];
  uint64_t v46;
  _OWORD v47[4];
  uint64_t v48;
  uint64_t v49;
  _OWORD v50[4];
  uint64_t v51;
  uint64_t v52;
  _BYTE v53[96];

  v43 = a2;
  v3 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v3);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D5520 != -1)
    swift_once(&qword_1000D5520, sub_10001A788);
  v13 = type metadata accessor for Logger(0, v10);
  v14 = sub_10001118C(v13, (uint64_t)qword_1000D5DA0);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "HomePodSetupViewModel: createDone2ViewModel", v17, 2u);
    swift_slowDealloc(v17, -1, -1);
  }

  v18 = String._bridgeToObjectiveC()();
  v19 = sub_100006354(v18);

  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v41 = v21;
  v42 = v20;

  v22 = String._bridgeToObjectiveC()();
  v23 = sub_100006354(v22);

  v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
  v39 = v25;
  v40 = v24;

  v26 = type metadata accessor for AdjustedMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v12, 1, 1, v26);
  sub_100035AA8(a1);
  v38 = v27;
  memset(v53, 0, 80);
  sub_100045F1C(0, 0, (uint64_t)v8);
  v28 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v5, 1, 1, v28);
  v46 = 0;
  memset(v45, 0, sizeof(v45));
  v29 = String._bridgeToObjectiveC()();
  v30 = a1;
  v31 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v29, v31, 0);

  sub_10005B198((uint64_t *)v47);
  v50[0] = v47[0];
  v50[1] = v47[1];
  v50[2] = v47[2];
  v50[3] = v47[3];
  v44 = 1;
  v51 = v48;
  v52 = v49;
  v33 = v43;
  sub_1000328AC(v42, v41, v40, v39, (uint64_t)v12, 0, 0xE000000000000000, 0, v43, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v38, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v45,
    (uint64_t)_swiftEmptyArrayStorage,
    (uint64_t)_swiftEmptyArrayStorage,
    Int64 != 0,
    v36,
    0,
    1,
    1,
    (uint64_t)v50,
    (uint64_t)v53,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    (uint64_t)v8,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    (uint64_t)v5);
  sub_100032C94(v30, 0, 0, (uint64_t)v5);
  v34 = type metadata accessor for HomePodSetupViewModel(0);
  return sub_100035D20((uint64_t)v5, (uint64_t)v33 + *(int *)(v34 + 180));
}

__n128 sub_100030930@<Q0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  NSString v15;
  id v16;
  unint64_t v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSString v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  unint64_t v40;
  NSString v41;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  NSString v55;
  NSString v56;
  uint64_t Int64;
  _QWORD *v58;
  int *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  __int128 v66;
  __n128 result;
  int v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  id v73;
  id v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  _QWORD *v82;
  char v83;
  _OWORD v84[4];
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __n128 v90;
  uint64_t v91;
  uint64_t v92;
  _OWORD v93[4];
  uint64_t v94;
  uint64_t v95;
  _QWORD v96[12];

  v82 = a2;
  v3 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v3);
  *(_QWORD *)&v81 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v5);
  *(_QWORD *)&v80 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v7);
  v75 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D5520 != -1)
    swift_once(&qword_1000D5520, sub_10001A788);
  v10 = type metadata accessor for Logger(0, v8);
  v11 = sub_10001118C(v10, (uint64_t)qword_1000D5DA0);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "HomePodSetupViewModel: createSoftwareUpdateForHomePodViewModel2", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  v15 = String._bridgeToObjectiveC()();
  v16 = sub_100006354(v15);

  *(_QWORD *)&v79 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v78.n128_u64[0] = v17;

  v18 = String._bridgeToObjectiveC()();
  v19 = sub_100006354(v18);

  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v22 = v21;

  v23 = String._bridgeToObjectiveC()();
  v24 = sub_100006354(v23);

  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v76 = v26;
  v77 = v25;

  v27 = sub_10000D604(&qword_1000D6168);
  v28 = swift_allocObject(v27, 64, 7);
  *(_OWORD *)(v28 + 16) = xmmword_100099220;
  *(_QWORD *)(v28 + 32) = v20;
  *(_QWORD *)(v28 + 40) = v22;
  *(_QWORD *)(v28 + 48) = 0;
  *(_BYTE *)(v28 + 56) = 1;
  v29 = String._bridgeToObjectiveC()();
  v30 = sub_100006354(v29);

  v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
  v33 = v32;

  v34 = sub_10004A354((_QWORD *)1, 2, 1, (_QWORD *)v28);
  v34[2] = 2;
  v34[8] = v31;
  v34[9] = v33;
  v34[10] = 1;
  *((_BYTE *)v34 + 88) = 2;
  v35 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", 80.0, UIFontWeightRegular);
  v36 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v37 = objc_msgSend(v36, "configurationWithFont:", v35);

  v38 = objc_msgSend((id)objc_opt_self(UIColor), "tertiaryLabelColor");
  v39 = objc_msgSend(v36, "configurationWithHierarchicalColor:", v38);

  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode) == 5)
    v40 = 0x800000010009DEC0;
  else
    v40 = 0xEC0000006C6C6966;
  v41 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v40);
  v72 = a1;
  v42 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v41);

  v74 = v37;
  v43 = objc_msgSend(v42, "imageByApplyingSymbolConfiguration:", v37);

  v73 = v39;
  v44 = objc_msgSend(v43, "imageByApplyingSymbolConfiguration:", v39);

  v45 = v44;
  if (!v44)
    v45 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  v46 = type metadata accessor for AdjustedMovie(0);
  v47 = (uint64_t)v75;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v75, 1, 1, v46);
  v48 = sub_10000D604(&qword_1000D6EE0);
  v49 = swift_allocObject(v48, 40, 7);
  *(_OWORD *)(v49 + 16) = xmmword_100099060;
  *(_QWORD *)(v49 + 32) = v45;
  v96[0] = v49;
  specialized Array._endMutation()(v49);
  v70 = v96[0];
  v50 = type metadata accessor for AdjustedImage(0);
  memset(v96, 0, 80);
  v51 = v80;
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v80, 1, 1, v50);
  v52 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v53 = v81;
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v81, 1, 1, v52);
  *(_QWORD *)&v89 = 0;
  v87 = 0u;
  v88 = 0u;
  v71 = v44;
  v54 = v45;
  v55 = String._bridgeToObjectiveC()();
  v56 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v55, v56, 0);

  sub_10005B198((uint64_t *)v84);
  v93[0] = v84[0];
  v93[1] = v84[1];
  v93[2] = v84[2];
  v93[3] = v84[3];
  v83 = 1;
  v94 = v85;
  v95 = v86;
  v69 = v51;
  v58 = v82;
  sub_1000328AC(v79, v78.n128_i64[0], v77, v76, v47, 0, 0xE000000000000000, 0, v82, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, (uint64_t)v34, v70, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v87,
    (uint64_t)_swiftEmptyArrayStorage,
    (uint64_t)_swiftEmptyArrayStorage,
    Int64 != 0,
    v68,
    0,
    1,
    1,
    (uint64_t)v93,
    (uint64_t)v96,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    v69,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    0,
    0,
    0,
    0,
    0,
    0,
    0xE000000000000000,
    v53);
  v59 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  v60 = (char *)v58 + v59[31];
  *(_QWORD *)v60 = 1;
  v60[8] = 0;
  *((_BYTE *)v58 + v59[32]) = 1;
  v61 = *(_QWORD *)(v72 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeName);
  v62 = *(_QWORD *)(v72 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeName + 8);
  swift_bridgeObjectRetain(v62);
  sub_10005B38C(v61, v62, (uint64_t *)&v87);
  v80 = v88;
  v81 = v87;
  v78 = v90;
  v79 = v89;
  v64 = v91;
  v63 = v92;
  swift_bridgeObjectRelease(v62);

  v65 = (_QWORD *)((char *)v58 + v59[20]);
  sub_100035DAC(*v65, v65[1], v65[2], v65[3], v65[4], v65[5], v65[6], v65[7], v65[8], v65[9]);

  v66 = v80;
  *(_OWORD *)v65 = v81;
  *((_OWORD *)v65 + 1) = v66;
  result = v78;
  *((_OWORD *)v65 + 2) = v79;
  *((__n128 *)v65 + 3) = result;
  v65[8] = v64;
  v65[9] = v63;
  return result;
}

uint64_t sub_1000310F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  int v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  NSString v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::String v31;
  Swift::String v32;
  void *object;
  Swift::String v34;
  NSString v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSString v41;
  id v42;
  uint64_t v43;
  int v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSString v50;
  NSString v51;
  uint64_t Int64;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  _QWORD *v63;
  char v64;
  _BYTE v65[32];
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  _OWORD v73[4];
  uint64_t v74;
  uint64_t v75;
  _OWORD v76[6];

  v61 = a1;
  v63 = a3;
  v4 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v4);
  v60 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v6);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v9);
  v62 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = String._bridgeToObjectiveC()();
  v12 = sub_100006354(v11);

  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  if (a2)
  {
    *(_QWORD *)&v73[0] = 0x72655F6473;
    *((_QWORD *)&v73[0] + 1) = 0xE500000000000000;
    AnyHashable.init<A>(_:)(v76, v73, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(a2 + 16) && (v16 = sub_10004A78C((uint64_t)v76), (v17 & 1) != 0))
    {
      sub_10000DB98(*(_QWORD *)(a2 + 56) + 32 * v16, (uint64_t)&v67);
    }
    else
    {
      v67 = 0u;
      v68 = 0u;
    }
    sub_10000DAE8((uint64_t)v76);
    if (*((_QWORD *)&v68 + 1))
    {
      sub_10000DAD8(&v67, v73);
      sub_10000DAD8(v73, v76);
      if (swift_dynamicCast(&v67, v76, (char *)&type metadata for Any + 8, &type metadata for Int32, 6))
        v18 = v67;
      else
        v18 = 0;
    }
    else
    {
      sub_10000DC40((uint64_t)&v67, &qword_1000D5820);
      v18 = 0;
    }
    *(_QWORD *)&v73[0] = 0x64655F6473;
    *((_QWORD *)&v73[0] + 1) = 0xE500000000000000;
    AnyHashable.init<A>(_:)(v76, v73, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(a2 + 16) && (v19 = sub_10004A78C((uint64_t)v76), (v20 & 1) != 0))
    {
      sub_10000DB98(*(_QWORD *)(a2 + 56) + 32 * v19, (uint64_t)&v67);
    }
    else
    {
      v67 = 0u;
      v68 = 0u;
    }
    v21 = v13;
    sub_10000DAE8((uint64_t)v76);
    if (*((_QWORD *)&v68 + 1))
    {
      sub_10000DAD8(&v67, v73);
      sub_10000DB98((uint64_t)v73, (uint64_t)v76);
      if (swift_dynamicCast(&v67, v76, (char *)&type metadata for Any + 8, &type metadata for String, 6))v22 = *((_QWORD *)&v67 + 1);
      else
        v22 = 0xE700000000000000;
      sub_10000CDB8(v73);
      swift_bridgeObjectRelease(v22);
    }
    else
    {
      sub_10000DC40((uint64_t)&v67, &qword_1000D5820);
    }
    *(_QWORD *)&v73[0] = 0x65645F6473;
    *((_QWORD *)&v73[0] + 1) = 0xE500000000000000;
    AnyHashable.init<A>(_:)(v76, v73, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(a2 + 16) && (v23 = sub_10004A78C((uint64_t)v76), (v24 & 1) != 0))
    {
      sub_10000DB98(*(_QWORD *)(a2 + 56) + 32 * v23, (uint64_t)&v67);
    }
    else
    {
      v67 = 0u;
      v68 = 0u;
    }
    sub_10000DAE8((uint64_t)v76);
    if (*((_QWORD *)&v68 + 1))
    {
      sub_10000DAD8(&v67, v73);
      sub_10000DB98((uint64_t)v73, (uint64_t)v76);
      if (swift_dynamicCast(&v67, v76, (char *)&type metadata for Any + 8, &type metadata for String, 6))v25 = *((_QWORD *)&v67 + 1);
      else
        v25 = 0xE700000000000000;
      sub_10000CDB8(v73);
      swift_bridgeObjectRelease(v25);
    }
    else
    {
      sub_10000DC40((uint64_t)&v67, &qword_1000D5820);
    }
    v26 = String._bridgeToObjectiveC()();
    v27 = sub_100006354(v26);

    v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v30 = v29;

    *(_QWORD *)&v76[0] = v28;
    *((_QWORD *)&v76[0] + 1) = v30;
    v31._countAndFlagsBits = 10250;
    v31._object = (void *)0xE200000000000000;
    String.append(_:)(v31);
    LODWORD(v73[0]) = v18;
    v32._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int32, &protocol witness table for Int32);
    object = v32._object;
    String.append(_:)(v32);
    swift_bridgeObjectRelease(object);
    v34._countAndFlagsBits = 2601;
    v34._object = (void *)0xE200000000000000;
    String.append(_:)(v34);
    v58 = *((_QWORD *)&v76[0] + 1);
    v59 = *(_QWORD *)&v76[0];
    v35 = String._bridgeToObjectiveC()();
    v36 = sub_100006354(v35);

    v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
    v56 = v38;
    v57 = v37;

    v13 = v21;
  }
  else
  {
    v56 = 0xE000000000000000;
    v57 = 0;
    v58 = 0xE000000000000000;
    v59 = 0;
  }
  v39 = sub_10000D604(&qword_1000D6168);
  v40 = swift_allocObject(v39, 64, 7);
  *(_OWORD *)(v40 + 16) = xmmword_100099220;
  if (isInternalBuild())
  {
    swift_bridgeObjectRelease(v15);
    v41 = String._bridgeToObjectiveC()();
    v42 = sub_100006354(v41);

    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
    v15 = v43;

  }
  v44 = isInternalBuild();
  *(_QWORD *)(v40 + 32) = v13;
  *(_QWORD *)(v40 + 40) = v15;
  if (v44)
    v45 = 17;
  else
    v45 = 29;
  *(_QWORD *)(v40 + 48) = 0;
  *(_BYTE *)(v40 + 56) = v45;
  v46 = type metadata accessor for AdjustedMovie(0);
  v47 = (uint64_t)v62;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v62, 1, 1, v46);
  memset(v76, 0, 80);
  sub_100045F1C(0, 0, (uint64_t)v8);
  v48 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v49 = (uint64_t)v60;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v60, 1, 1, v48);
  v66 = 0;
  memset(v65, 0, sizeof(v65));
  v50 = String._bridgeToObjectiveC()();
  v51 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v50, v51, 0);

  sub_10005B198((uint64_t *)&v67);
  v73[0] = v67;
  v73[1] = v68;
  v73[2] = v69;
  v73[3] = v70;
  v64 = 1;
  v74 = v71;
  v75 = v72;
  return sub_1000328AC(v59, v58, v57, v56, v47, 0, 0xE000000000000000, 0, v63, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, v40, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v65,
           (uint64_t)_swiftEmptyArrayStorage,
           (uint64_t)_swiftEmptyArrayStorage,
           Int64 != 0,
           v54,
           0,
           1,
           1,
           (uint64_t)v73,
           (uint64_t)v76,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           (uint64_t)v8,
           0,
           0,
           1,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           1,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           v49);
}

uint64_t sub_100031818@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  NSString v15;
  unint64_t v16;
  char v17;
  int v18;
  int v19;
  float v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  char v31;
  uint64_t result;
  uint64_t v33;
  NSString v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  Swift::String v39;
  Swift::String v40;
  void *object;
  Swift::String v42;
  NSString v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSString v51;
  NSString v52;
  uint64_t Int64;
  int v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  _QWORD *v63;
  char v64;
  _BYTE v65[32];
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  _OWORD v79[6];

  v6 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v6);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v9);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v12);
  v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = String._bridgeToObjectiveC()();

  v62 = v8;
  v63 = a3;
  v61 = a1;
  if (!a2)
  {
    v60 = 0;
    v20 = 0.0;
    v21 = 0xE000000000000000;
    v56 = 0;
    v57 = 0xE000000000000000;
    v58 = 0;
    v59 = 0xE000000000000000;
LABEL_56:
    v47 = type metadata accessor for AdjustedMovie(0);
    v48 = (uint64_t)v14;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v14, 1, 1, v47);
    memset(v79, 0, 80);
    sub_100045F1C(0, 0, (uint64_t)v11);
    v49 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
    v50 = (uint64_t)v62;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v62, 1, 1, v49);
    v66 = 0;
    memset(v65, 0, sizeof(v65));
    v51 = String._bridgeToObjectiveC()();
    v52 = String._bridgeToObjectiveC()();
    Int64 = CFPrefs_GetInt64(v51, v52, 0);

    sub_10005B198((uint64_t *)&v67);
    v73 = v67;
    v74 = v68;
    v75 = v69;
    v76 = v70;
    v64 = 1;
    v77 = v71;
    v78 = v72;
    return sub_1000328AC(v60, v59, v58, v57, v48, 0, 0xE000000000000000, 0, v63, 0.0, 0.0, v20, 0xE000000000000000, v56, v21, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v65,
             (uint64_t)_swiftEmptyArrayStorage,
             (uint64_t)_swiftEmptyArrayStorage,
             Int64 != 0,
             v54,
             0,
             1,
             1,
             (uint64_t)&v73,
             (uint64_t)v79,
             0,
             0,
             0,
             0,
             0,
             0,
             0,
             0,
             0,
             (uint64_t)v11,
             0,
             0,
             1,
             0,
             0,
             0,
             0,
             0,
             0,
             0xE000000000000000,
             1,
             1,
             0,
             0,
             0,
             0,
             0xE000000000000000,
             v50);
  }
  *(_QWORD *)&v73 = 0x72655F6473;
  *((_QWORD *)&v73 + 1) = 0xE500000000000000;
  AnyHashable.init<A>(_:)(v79, &v73, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a2 + 16) && (v16 = sub_10004A78C((uint64_t)v79), (v17 & 1) != 0))
  {
    sub_10000DB98(*(_QWORD *)(a2 + 56) + 32 * v16, (uint64_t)&v67);
  }
  else
  {
    v67 = 0u;
    v68 = 0u;
  }
  sub_10000DAE8((uint64_t)v79);
  if (*((_QWORD *)&v68 + 1))
  {
    sub_10000DAD8(&v67, &v73);
    sub_10000DAD8(&v73, v79);
    v18 = swift_dynamicCast(&v67, v79, (char *)&type metadata for Any + 8, &type metadata for Int32, 6);
    v19 = v67;
    if (!v18)
      v19 = 0;
    LODWORD(v60) = v19;
  }
  else
  {
    sub_10000DC40((uint64_t)&v67, &qword_1000D5820);
    LODWORD(v60) = 0;
  }
  *(_QWORD *)&v73 = 0x64655F6473;
  *((_QWORD *)&v73 + 1) = 0xE500000000000000;
  AnyHashable.init<A>(_:)(v79, &v73, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a2 + 16) && (v22 = sub_10004A78C((uint64_t)v79), (v23 & 1) != 0))
  {
    sub_10000DB98(*(_QWORD *)(a2 + 56) + 32 * v22, (uint64_t)&v67);
  }
  else
  {
    v67 = 0u;
    v68 = 0u;
  }
  sub_10000DAE8((uint64_t)v79);
  if (*((_QWORD *)&v68 + 1))
  {
    sub_10000DAD8(&v67, &v73);
    sub_10000DB98((uint64_t)&v73, (uint64_t)v79);
    if (swift_dynamicCast(&v67, v79, (char *)&type metadata for Any + 8, &type metadata for String, 6))
      v24 = *((_QWORD *)&v67 + 1);
    else
      v24 = 0xE700000000000000;
    sub_10000CDB8(&v73);
    swift_bridgeObjectRelease(v24);
  }
  else
  {
    sub_10000DC40((uint64_t)&v67, &qword_1000D5820);
  }
  *(_QWORD *)&v73 = 0x65645F6473;
  *((_QWORD *)&v73 + 1) = 0xE500000000000000;
  AnyHashable.init<A>(_:)(v79, &v73, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a2 + 16) && (v25 = sub_10004A78C((uint64_t)v79), (v26 & 1) != 0))
  {
    sub_10000DB98(*(_QWORD *)(a2 + 56) + 32 * v25, (uint64_t)&v67);
  }
  else
  {
    v67 = 0u;
    v68 = 0u;
  }
  sub_10000DAE8((uint64_t)v79);
  if (*((_QWORD *)&v68 + 1))
  {
    sub_10000DAD8(&v67, &v73);
    sub_10000DB98((uint64_t)&v73, (uint64_t)v79);
    if (swift_dynamicCast(&v67, v79, (char *)&type metadata for Any + 8, &type metadata for String, 6))
      v27 = *((_QWORD *)&v67 + 1);
    else
      v27 = 0xE700000000000000;
    sub_10000CDB8(&v73);
    swift_bridgeObjectRelease(v27);
  }
  else
  {
    sub_10000DC40((uint64_t)&v67, &qword_1000D5820);
  }
  *(_QWORD *)&v73 = 0x72705F70725F6473;
  *((_QWORD *)&v73 + 1) = 0xE800000000000000;
  AnyHashable.init<A>(_:)(v79, &v73, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a2 + 16) && (v28 = sub_10004A78C((uint64_t)v79), (v29 & 1) != 0))
  {
    sub_10000DB98(*(_QWORD *)(a2 + 56) + 32 * v28, (uint64_t)&v67);
  }
  else
  {
    v67 = 0u;
    v68 = 0u;
  }
  sub_10000DAE8((uint64_t)v79);
  if (*((_QWORD *)&v68 + 1))
  {
    sub_10000DAD8(&v67, &v73);
    sub_10000DAD8(&v73, v79);
    if (swift_dynamicCast(&v67, v79, (char *)&type metadata for Any + 8, &type metadata for Float, 6))
      v20 = *(float *)&v67;
    else
      v20 = 0.0;
  }
  else
  {
    sub_10000DC40((uint64_t)&v67, &qword_1000D5820);
    v20 = 0.0;
  }
  *(_QWORD *)&v67 = 0x74705F6473;
  *((_QWORD *)&v67 + 1) = 0xE500000000000000;
  AnyHashable.init<A>(_:)(v79, &v67, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a2 + 16) && (v30 = sub_10004A78C((uint64_t)v79), (v31 & 1) != 0))
  {
    sub_10000DB98(*(_QWORD *)(a2 + 56) + 32 * v30, (uint64_t)&v73);
  }
  else
  {
    v73 = 0u;
    v74 = 0u;
  }
  sub_10000DAE8((uint64_t)v79);
  if (!*((_QWORD *)&v74 + 1))
  {
    sub_10000DC40((uint64_t)&v73, &qword_1000D5820);
    goto LABEL_54;
  }
  result = swift_dynamicCast(&v67, &v73, (char *)&type metadata for Any + 8, &type metadata for Int, 6);
  if ((result & 1) == 0)
  {
LABEL_54:
    v33 = 0;
    v55 = 0xE000000000000000;
LABEL_55:
    v56 = v33;
    v34 = String._bridgeToObjectiveC()();
    v35 = sub_100006354(v34);

    v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    v38 = v37;

    *(_QWORD *)&v79[0] = v36;
    *((_QWORD *)&v79[0] + 1) = v38;
    v39._countAndFlagsBits = 10250;
    v39._object = (void *)0xE200000000000000;
    String.append(_:)(v39);
    LODWORD(v73) = v60;
    v40._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int32, &protocol witness table for Int32);
    object = v40._object;
    String.append(_:)(v40);
    swift_bridgeObjectRelease(object);
    v42._countAndFlagsBits = 41;
    v42._object = (void *)0xE100000000000000;
    String.append(_:)(v42);
    v59 = *((_QWORD *)&v79[0] + 1);
    v60 = *(_QWORD *)&v79[0];
    v43 = String._bridgeToObjectiveC()();
    v44 = sub_100006354(v43);

    v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
    v57 = v46;
    v58 = v45;

    v21 = v55;
    goto LABEL_56;
  }
  if ((uint64_t)v67 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if ((uint64_t)v67 <= 0x7FFFFFFF)
  {
    if ((_DWORD)v67 == 30)
    {
      v55 = 0xEF2E2E2E676E6972;
      v33 = 0x726566736E617254;
    }
    else if ((_DWORD)v67 == 10)
    {
      v55 = 0xEC0000002E2E2E64;
      v33 = 0x657463656E6E6F43;
    }
    else
    {
      v55 = 0xED00002E2E2E676ELL;
      if ((_DWORD)v67 == 1)
        v33 = 0x697463656E6E6F43;
      else
        v33 = 0x6974616D69747345;
    }
    goto LABEL_55;
  }
  __break(1u);
  return result;
}

id sub_1000320F4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  NSString *v16;
  uint64_t v17;
  uint64_t v18;
  Class isa;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint8_t *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint8_t *v40;
  uint64_t v41;
  id result;
  void *v43;
  id v44;
  id v45;
  void *v46;
  unint64_t v47;
  NSString v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSString v62;
  NSString v63;
  uint64_t v64;
  uint64_t Int64;
  uint64_t v66;
  uint64_t v67;
  id v68;
  NSString *v69;
  uint64_t v70;
  int v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  char *v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  _QWORD *v80;
  char v81;
  _OWORD v82[4];
  uint64_t v83;
  uint64_t v84;
  _BYTE v85[32];
  uint64_t v86;
  _OWORD v87[4];
  uint64_t v88;
  uint64_t v89;
  id v90[11];

  v4 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v4);
  v6 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v7);
  v79 = (uint64_t)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v9);
  v11 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), "init");
  v13 = sub_10000D604(&qword_1000D6EE0);
  v14 = swift_allocObject(v13, 40, 7);
  *(_OWORD *)(v14 + 16) = xmmword_100099060;
  *(_QWORD *)(v14 + 32) = CNContactGivenNameKey;
  v90[0] = (id)v14;
  specialized Array._endMutation()(v14);
  v15 = v90[0];
  if ((unint64_t)v90[0] >> 62)
  {
    if ((uint64_t)v90[0] < 0)
      v68 = v90[0];
    else
      v68 = (id)((unint64_t)v90[0] & 0xFFFFFFFFFFFFFF8);
    v69 = CNContactGivenNameKey;
    swift_bridgeObjectRetain(v15);
    v70 = sub_10000D604((uint64_t *)&unk_1000D6140);
    v18 = _bridgeCocoaArray<A>(_:)(v68, v70);
    swift_bridgeObjectRelease(v15);
  }
  else
  {
    v16 = CNContactGivenNameKey;
    v17 = swift_bridgeObjectRetain(v15);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v17);
    v18 = (uint64_t)v15;
  }
  swift_bridgeObjectRelease(v15);
  sub_10000D604((uint64_t *)&unk_1000D6140);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v18);
  v90[0] = 0;
  v20 = objc_msgSend(v12, "_crossPlatformUnifiedMeContactWithKeysToFetch:error:", isa, v90);

  v21 = v90[0];
  v80 = a2;
  v78 = v12;
  if (v20)
  {
    v22 = v90[0];
    v23 = objc_msgSend(v20, "givenName");
    v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v26 = v25;

  }
  else
  {
    v27 = v90[0];
    v28 = _convertNSErrorToError(_:)(v21);

    swift_willThrow();
    v77 = v28;
    v30 = (void *)_convertErrorToNSError(_:)(v28);
    if (qword_1000D5520 != -1)
      swift_once(&qword_1000D5520, sub_10001A788);
    v31 = type metadata accessor for Logger(0, v29);
    sub_10001118C(v31, (uint64_t)qword_1000D5DA0);
    v32 = v30;
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = swift_slowAlloc(12, -1);
      v76 = v6;
      v36 = (uint8_t *)v35;
      *(_QWORD *)&v73 = swift_slowAlloc(8, -1);
      *(_DWORD *)v36 = 138412290;
      *(_QWORD *)&v75 = v11;
      v90[0] = v32;
      *(_QWORD *)&v74 = v33;
      v37 = v32;
      v11 = (char *)v75;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v90, &v90[1]);
      v38 = v73;
      *(_QWORD *)v73 = v32;

      v33 = v74;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v74, v34, "HomePodSetupViewModel: Open Settings failed {error: %@}", v36, 0xCu);
      v39 = sub_10000D604(&qword_1000D5CC8);
      swift_arrayDestroy(v38, 1, v39);
      swift_slowDealloc(v38, -1, -1);
      v40 = v36;
      v6 = v76;
      swift_slowDealloc(v40, -1, -1);
      swift_errorRelease(v77);

    }
    else
    {

      swift_errorRelease(v77);
    }

    v24 = 0;
    v26 = 0xE000000000000000;
  }
  v41 = HIBYTE(v26) & 0xF;
  if ((v26 & 0x2000000000000000) == 0)
    v41 = v24 & 0xFFFFFFFFFFFFLL;
  if (v41)
    goto LABEL_20;
  swift_bridgeObjectRelease(v26);
  result = objc_msgSend((id)objc_opt_self(ACAccountStore), "defaultStore");
  if (result)
  {
    v43 = result;
    v44 = objc_msgSend(result, "aa_primaryAppleAccount");

    if (v44)
    {
      v45 = objc_msgSend(v44, "aa_firstName");
      if (v45)
      {
        v46 = v45;
        v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
        v26 = v47;

LABEL_20:
        v48 = String._bridgeToObjectiveC()();
        v49 = sub_100006354(v48);

        v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
        v52 = v51;

        v53 = sub_10000D604((uint64_t *)&unk_1000D7B70);
        v54 = swift_allocObject(v53, 72, 7);
        *(_OWORD *)(v54 + 16) = xmmword_100099220;
        *(_QWORD *)(v54 + 56) = &type metadata for String;
        *(_QWORD *)(v54 + 64) = sub_100035088();
        *(_QWORD *)(v54 + 32) = v24;
        *(_QWORD *)(v54 + 40) = v26;
        v55 = String.init(format:_:)(v50, v52, v54);
        v76 = (char *)v56;
        v77 = v55;
        swift_bridgeObjectRelease(v52);
        v57 = type metadata accessor for AdjustedMovie(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v11, 1, 1, v57);
        v58 = *(unsigned int *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_progressEvent);
        memset(v90, 0, 80);
        v59 = *(_QWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_siriDialogInfo);
        swift_bridgeObjectRetain(v59);
        v60 = v79;
        sub_100045F1C(0, 0, v79);
        v61 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v6, 1, 1, v61);
        v86 = 0;
        memset(v85, 0, sizeof(v85));
        v62 = String._bridgeToObjectiveC()();
        v63 = String._bridgeToObjectiveC()();
        v64 = (uint64_t)v11;
        Int64 = CFPrefs_GetInt64(v62, v63, 0);

        LOBYTE(v62) = Int64 != 0;
        sub_10005B198((uint64_t *)v82);
        v74 = v82[1];
        v75 = v82[0];
        v72 = v82[3];
        v73 = v82[2];
        v66 = v83;
        v67 = v84;

        v87[0] = v75;
        v87[1] = v74;
        v87[2] = v73;
        v87[3] = v72;
        v88 = v66;
        v89 = v67;
        v81 = 0;
        return (id)sub_1000328AC(v77, (uint64_t)v76, 0, 0xE000000000000000, v64, 0, 0xE000000000000000, 0, v80, 0.0, 0.0, 0.0, 0xE000000000000000, 0, 0xE000000000000000, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v85,
                     (uint64_t)_swiftEmptyArrayStorage,
                     (uint64_t)_swiftEmptyArrayStorage,
                     (char)v62,
                     v71,
                     v58,
                     SBYTE4(v58),
                     1,
                     (uint64_t)v87,
                     (uint64_t)v90,
                     v59,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     v60,
                     0,
                     0,
                     1,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0xE000000000000000,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0xE000000000000000,
                     (uint64_t)v6);
      }

    }
    v24 = 0;
    v26 = 0xE000000000000000;
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000328AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, double a10@<D0>, double a11@<D1>, float a12@<S2>, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,int a23,int a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,char a39,uint64_t a40,char a41,char a42,char a43,char a44,int a45,int a46,uint64_t a47,uint64_t a48,char a49,char a50,char a51,char a52,char a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  int *v60;
  _QWORD *v61;
  _QWORD *v62;
  _QWORD *v63;
  char *v64;
  _QWORD *v65;
  _QWORD *v66;
  _QWORD *v67;
  char *v68;
  _QWORD *v69;
  _QWORD *v70;

  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  v60 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  sub_10003521C(a5, (uint64_t)a9 + v60[6], &qword_1000D5E58);
  v61 = (_QWORD *)((char *)a9 + v60[7]);
  *v61 = a6;
  v61[1] = a7;
  v62 = (_QWORD *)((char *)a9 + v60[8]);
  *v62 = a8;
  v62[1] = a13;
  v63 = (_QWORD *)((char *)a9 + v60[9]);
  *v63 = a14;
  v63[1] = a15;
  *(_QWORD *)((char *)a9 + v60[10]) = a16;
  *(_QWORD *)((char *)a9 + v60[11]) = a17;
  *(_QWORD *)((char *)a9 + v60[12]) = a18;
  sub_10003521C(a19, (uint64_t)a9 + v60[13], &qword_1000D6110);
  *(_QWORD *)((char *)a9 + v60[14]) = a20;
  *(_QWORD *)((char *)a9 + v60[15]) = a21;
  *((_BYTE *)a9 + v60[16]) = a22;
  v64 = (char *)a9 + v60[17];
  *(_DWORD *)v64 = a24;
  v64[4] = a25 & 1;
  *(_QWORD *)((char *)a9 + v60[18]) = a26;
  sub_10003521C(a27, (uint64_t)a9 + v60[19], &qword_1000D6160);
  sub_10003521C(a28, (uint64_t)a9 + v60[20], &qword_1000D6160);
  *(_QWORD *)((char *)a9 + v60[21]) = a29;
  *(_QWORD *)((char *)a9 + v60[22]) = a30;
  v65 = (_QWORD *)((char *)a9 + v60[23]);
  *v65 = a31;
  v65[1] = a32;
  v66 = (_QWORD *)((char *)a9 + v60[24]);
  *v66 = a33;
  v66[1] = a34;
  v67 = (_QWORD *)((char *)a9 + v60[25]);
  *v67 = a35;
  v67[1] = a36;
  *((_BYTE *)a9 + v60[26]) = a37;
  sub_10003521C(a38, (uint64_t)a9 + v60[27], &qword_1000D5E60);
  *((_BYTE *)a9 + v60[28]) = a39;
  *(double *)((char *)a9 + v60[29]) = a10;
  *(double *)((char *)a9 + v60[30]) = a11;
  v68 = (char *)a9 + v60[31];
  *(_QWORD *)v68 = a40;
  v68[8] = a41 & 1;
  *((_BYTE *)a9 + v60[32]) = a42;
  *((_BYTE *)a9 + v60[33]) = a43;
  *((_BYTE *)a9 + v60[34]) = a44;
  *(_DWORD *)((char *)a9 + v60[35]) = a45;
  *(_DWORD *)((char *)a9 + v60[36]) = a46;
  v69 = (_QWORD *)((char *)a9 + v60[37]);
  *v69 = a47;
  v69[1] = a48;
  *((_BYTE *)a9 + v60[38]) = a49;
  *((_BYTE *)a9 + v60[39]) = a50;
  *(float *)((char *)a9 + v60[40]) = a12;
  *((_BYTE *)a9 + v60[41]) = a51;
  *((_BYTE *)a9 + v60[42]) = a52;
  *((_BYTE *)a9 + v60[43]) = a53;
  v70 = (_QWORD *)((char *)a9 + v60[44]);
  *v70 = a54;
  v70[1] = a55;
  return sub_10003521C(a56, (uint64_t)a9 + v60[45], &qword_1000D5E68);
}

uint64_t sub_100032C94@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(void);
  uint64_t v34;
  id v35;
  NSString v36;
  char **v37;
  id v38;
  uint64_t v39;
  uint32_t *p_cb;
  char **v41;
  uint64_t v42;
  id v43;
  void *v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, char *, NSObject *);
  char *v48;
  NSObject *v49;
  void (*v50)(char *, uint64_t, uint64_t, NSObject *);
  unsigned int (*v51)(char *, uint64_t, NSObject *);
  _QWORD *v52;
  char *v53;
  NSObject *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  _BOOL4 v64;
  uint64_t v65;
  uint8_t *v66;
  uint8_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  _BOOL4 v74;
  uint32_t *v75;
  uint8_t *v76;
  uint8_t *v77;
  id v78;
  NSString v79;
  id v80;
  uint64_t v81;
  NSObject *v82;
  uint64_t v83;
  uint32_t *v84;
  uint8_t *v85;
  uint8_t *v86;
  const char *v87;
  id v88;
  void *v89;
  char *v90;
  uint64_t v91;
  NSObject *v92;
  int v93;
  uint64_t v94;
  NSObject *v95;
  os_log_type_t v96;
  uint8_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  NSObject *v101;
  os_log_type_t v102;
  uint64_t v103;
  uint64_t v104;
  NSObject *v105;
  os_log_type_t v106;
  uint8_t *v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  unsigned __int8 v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  char v125;
  id v126;
  NSString v127;
  id v128;
  id v129;
  void *v130;
  char *v131;
  void (*v132)(char *, char *, NSObject *);
  uint64_t v133;
  char *v134;
  NSObject *v135;
  void (*v136)(char *, uint64_t, uint64_t, NSObject *);
  char *v137;
  uint64_t v138;
  char *v139;
  id v140;
  NSObject *v141;
  os_log_type_t v142;
  uint8_t *v143;
  NSObject *v144;
  os_log_type_t v145;
  uint8_t *v146;
  uint64_t v147;
  unsigned int (*v148)(uint64_t, uint64_t, uint64_t);
  uint64_t v149;
  NSObject *v150;
  os_log_type_t v151;
  uint8_t *v152;
  uint64_t v153;
  NSString v154;
  id v155;
  NSObject *v156;
  NSObject *v157;
  os_log_type_t v158;
  uint64_t v159;
  id v160;
  uint64_t v161;
  _BOOL4 v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  NSObject *v166;
  os_log_type_t v167;
  uint8_t *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  NSObject *v173;
  os_log_type_t v174;
  uint8_t *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v180;
  char *v181;
  char *v182;
  void (*v183)(char *, uint64_t, uint64_t, NSObject *);
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  void (*v189)(void);
  int v190;
  char *v191;
  const char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  id v197;
  int v198;
  _QWORD *v199;
  _QWORD *v200;
  NSObject *v201;
  uint64_t v202;
  uint64_t isa;
  uint64_t v204;
  char *v205;
  char v206[24];
  char v207[24];
  char v208[8];
  uint64_t v209;
  char v210[8];
  uint64_t v211;

  v198 = a3;
  v190 = a2;
  v196 = a4;
  v5 = type metadata accessor for AdjustedImage(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v185 = (uint64_t)&v180 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v195 = (uint64_t)&v180 - v9;
  v10 = sub_10000D604(&qword_1000D5DB8);
  v11 = __chkstk_darwin(v10);
  v184 = (char *)&v180 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v205 = (char *)&v180 - v14;
  __chkstk_darwin(v13);
  v16 = (char *)&v180 - v15;
  v201 = type metadata accessor for URL(0);
  isa = (uint64_t)v201[-1].isa;
  v17 = __chkstk_darwin(v201);
  v182 = (char *)&v180 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v191 = (char *)&v180 - v20;
  __chkstk_darwin(v19);
  v22 = (char *)&v180 - v21;
  v23 = sub_10000D604(&qword_1000D5E60);
  v24 = __chkstk_darwin(v23);
  v187 = (uint64_t)&v180 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __chkstk_darwin(v24);
  v186 = (uint64_t)&v180 - v27;
  v28 = __chkstk_darwin(v26);
  v194 = (uint64_t)&v180 - v29;
  v30 = __chkstk_darwin(v28);
  v32 = (char *)&v180 - v31;
  __chkstk_darwin(v30);
  v193 = v6;
  v33 = *(void (**)(void))(v6 + 56);
  v200 = (uint64_t *)((char *)&v180 - v34);
  v33();
  v199 = v32;
  v202 = v5;
  v189 = v33;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v33)(v32, 1, 1, v5);
  v204 = a1;
  v35 = *(id *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_assetBundle);
  v192 = "NOT_NOW_BUTTON_TITLE";
  v36 = String._bridgeToObjectiveC()();
  v37 = &selRef_initWithRegistrationItems_;
  v197 = (id)objc_opt_self(UIImage);
  v38 = objc_msgSend(v197, "imageNamed:inBundle:", v36, v35);

  p_cb = (_DWORD *)(&OBJC_PROTOCOL___RecognizerClassifierOutput + 64);
  v41 = &selRef_initWithRegistrationItems_;
  if (v38)
  {
    v42 = SFDeviceAssetNameAdjustments;
    v43 = objc_msgSend(v35, "URLForResource:withExtension:", SFDeviceAssetNameAdjustments, 0);
    if (v43)
    {
      v44 = v43;
      v181 = v22;
      v188 = v42;
      v45 = v191;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      v46 = isa;
      v47 = *(void (**)(char *, char *, NSObject *))(isa + 32);
      v48 = v45;
      v41 = &selRef_initWithRegistrationItems_;
      v49 = v201;
      v47(v16, v48, v201);
      v50 = *(void (**)(char *, _QWORD, uint64_t, NSObject *))(v46 + 56);
      v50(v16, 0, 1, v49);
      v51 = *(unsigned int (**)(char *, uint64_t, NSObject *))(v46 + 48);
      v37 = &selRef_initWithRegistrationItems_;
      if (v51(v16, 1, v49) != 1)
      {
        v52 = v200;
        sub_10000DC40((uint64_t)v200, &qword_1000D5E60);
        v53 = v181;
        v54 = v201;
        v47(v181, v16, v201);
        v55 = v202;
        v56 = (char *)v52 + *(int *)(v202 + 20);
        (*(void (**)(char *, char *, NSObject *))(isa + 16))(v56, v53, v54);
        v183 = v50;
        v50(v56, 0, 1, v54);
        *v52 = v38;
        ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v189)(v52, 0, 1, v55);
        p_cb = &OBJC_PROTOCOL___RecognizerClassifierOutput.cb;
        v57 = qword_1000D5520;
        v59 = v38;
        if (v57 != -1)
          swift_once(&qword_1000D5520, sub_10001A788);
        v60 = type metadata accessor for Logger(0, v58);
        v61 = sub_10001118C(v60, (uint64_t)qword_1000D5DA0);
        v62 = Logger.logObject.getter(v61);
        v63 = static os_log_type_t.default.getter();
        v64 = os_log_type_enabled(v62, v63);
        v65 = v204;
        if (v64)
        {
          v66 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v66 = 0;
          _os_log_impl((void *)&_mh_execute_header, v62, v63, "HomePodSetupViewModel createStereoPairImages: leftHomePod adjusted image created", v66, 2u);
          v67 = v66;
          p_cb = (_DWORD *)(&OBJC_PROTOCOL___RecognizerClassifierOutput + 64);
          swift_slowDealloc(v67, -1, -1);
        }

        v68 = isa;
        (*(void (**)(char *, NSObject *))(isa + 8))(v181, v54);
        goto LABEL_26;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, NSObject *))(isa + 56))(v16, 1, 1, v201);
    }

    sub_10000DC40((uint64_t)v16, &qword_1000D5DB8);
    p_cb = &OBJC_PROTOCOL___RecognizerClassifierOutput.cb;
  }
  if (*((_QWORD *)p_cb + 164) != -1)
    swift_once(&qword_1000D5520, sub_10001A788);
  v70 = type metadata accessor for Logger(0, v39);
  v71 = sub_10001118C(v70, (uint64_t)qword_1000D5DA0);
  v72 = Logger.logObject.getter(v71);
  v73 = static os_log_type_t.default.getter();
  v74 = os_log_type_enabled(v72, v73);
  v68 = isa;
  if (v74)
  {
    v75 = p_cb;
    v76 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v76 = 0;
    _os_log_impl((void *)&_mh_execute_header, v72, v73, "HomePodSetupViewModel createStereoPairImages: leftHomePod failed to create", v76, 2u);
    v77 = v76;
    p_cb = v75;
    swift_slowDealloc(v77, -1, -1);
  }

  v78 = v35;
  v79 = String._bridgeToObjectiveC()();
  v80 = objc_msgSend(v197, "imageNamed:inBundle:", v79, v78);

  if (!v80)
  {
    v82 = Logger.logObject.getter(v81);
    v83 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v82, (os_log_type_t)v83))
    {
      v84 = p_cb;
      v85 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v85 = 0;
      _os_log_impl((void *)&_mh_execute_header, v82, (os_log_type_t)v83, "HomePodSetupViewModel createStereoPairImages: UIImage(named: ProxCard_StereoPairUnit, in: model.assetBundle) == nil", v85, 2u);
      v86 = v85;
      p_cb = v84;
      swift_slowDealloc(v86, -1, -1);
    }

  }
  v87 = v41[313];
  v188 = SFDeviceAssetNameAdjustments;
  v88 = objc_msgSend(v78, v87);
  if (v88)
  {
    v89 = v88;
    v90 = v191;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    v91 = (uint64_t)v205;
    v92 = v201;
    (*(void (**)(char *, char *, NSObject *))(v68 + 32))(v205, v90, v201);
    v183 = *(void (**)(char *, uint64_t, uint64_t, NSObject *))(v68 + 56);
    v183((char *)v91, 0, 1, v92);
    v93 = (*(uint64_t (**)(uint64_t, uint64_t, NSObject *))(v68 + 48))(v91, 1, v92);
    v65 = v204;
    if (v93 != 1)
    {
      sub_10000DC40(v91, &qword_1000D5DB8);
      goto LABEL_26;
    }
  }
  else
  {
    v91 = (uint64_t)v205;
    v183 = *(void (**)(char *, uint64_t, uint64_t, NSObject *))(v68 + 56);
    v183(v205, 1, 1, v201);
    v65 = v204;
  }
  v94 = sub_10000DC40(v91, &qword_1000D5DB8);
  v95 = Logger.logObject.getter(v94);
  v96 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v95, v96))
  {
    v97 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v97 = 0;
    _os_log_impl((void *)&_mh_execute_header, v95, v96, "HomePodSetupViewModel createStereoPairImages: model.assetBundle.url(forResource: SFDeviceAssetNameAdjustments, withExtension: nil) == nil", v97, 2u);
    swift_slowDealloc(v97, -1, -1);
  }

LABEL_26:
  if (*((_QWORD *)p_cb + 164) != -1)
    swift_once(&qword_1000D5520, sub_10001A788);
  v98 = type metadata accessor for Logger(0, v69);
  v99 = sub_10001118C(v98, (uint64_t)qword_1000D5DA0);
  v100 = swift_retain(v65);
  v205 = (char *)v99;
  v101 = Logger.logObject.getter(v100);
  v102 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v101, v102))
  {
    v103 = swift_slowAlloc(14, -1);
    *(_DWORD *)v103 = 67109376;
    LODWORD(v211) = *(_DWORD *)(v65 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoRole);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v211, (char *)&v211 + 4);
    swift_release(v65);
    *(_WORD *)(v103 + 8) = 1024;
    LODWORD(v211) = v198 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v211, (char *)&v211 + 4);
    _os_log_impl((void *)&_mh_execute_header, v101, v102, "HomePodSetupViewModel createStereoPairImages: stereoRole = %d | forceStereo = %{BOOL}d", (uint8_t *)v103, 0xEu);
    swift_slowDealloc(v103, -1, -1);

  }
  else
  {

    swift_release(v65);
  }
  v104 = swift_retain_n(v65, 2);
  v105 = Logger.logObject.getter(v104);
  v106 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v105, v106))
  {
    v107 = (uint8_t *)swift_slowAlloc(12, -1);
    v108 = swift_slowAlloc(32, -1);
    v211 = v108;
    *(_DWORD *)v107 = 136315138;
    v109 = (uint64_t *)(v204 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_assetBundles);
    swift_beginAccess(v204 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_assetBundles, v206, 0, 0);
    v110 = *v109;
    v111 = sub_100035CA4(0, &qword_1000D61A8, NSBundle_ptr);
    v112 = swift_bridgeObjectRetain(v110);
    v113 = Dictionary.description.getter(v112, &type metadata for UInt8, v111, &protocol witness table for UInt8);
    v115 = v114;
    v116 = v110;
    v65 = v204;
    swift_bridgeObjectRelease(v116);
    v209 = sub_10003EF58(v113, v115, &v211);
    v37 = &selRef_initWithRegistrationItems_;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v209, v210);
    swift_release_n(v65, 2);
    swift_bridgeObjectRelease(v115);
    _os_log_impl((void *)&_mh_execute_header, v105, v106, "HomePodSetupViewModel assetBundles %s", v107, 0xCu);
    swift_arrayDestroy(v108, 1, (char *)&type metadata for Any + 8);
    v117 = v108;
    v68 = isa;
    swift_slowDealloc(v117, -1, -1);
    swift_slowDealloc(v107, -1, -1);

  }
  else
  {

    swift_release_n(v65, 2);
  }
  v118 = v199;
  v119 = (uint64_t)v200;
  v120 = OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoRole;
  if (*(_DWORD *)(v65 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoRole) != 1 || (v198 & 1) != 0)
  {
    v121 = *(_BYTE *)(v65 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoCounterpartColor);
    v122 = (uint64_t *)(v65 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_assetBundles);
    v123 = swift_beginAccess(v65 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_assetBundles, &v211, 0, 0);
    v124 = *v122;
    if (*(_QWORD *)(*v122 + 16))
    {
      v123 = sub_10004A8A4(v121);
      if ((v125 & 1) != 0)
      {
        v126 = *(id *)(*(_QWORD *)(v124 + 56) + 8 * v123);
        v127 = String._bridgeToObjectiveC()();
        v128 = objc_msgSend(v197, v37[323], v127, v126);

        if (v128)
        {
          isa = v120;
          v129 = objc_msgSend(v126, "URLForResource:withExtension:", v188, 0);
          if (v129)
          {
            v130 = v129;
            v131 = v191;
            static URL._unconditionallyBridgeFromObjectiveC(_:)();

            v132 = *(void (**)(char *, char *, NSObject *))(v68 + 32);
            v133 = (uint64_t)v184;
            v134 = v131;
            v135 = v201;
            v132(v184, v134, v201);
            v136 = v183;
            v183((char *)v133, 0, 1, v135);
            if ((*(unsigned int (**)(uint64_t, uint64_t, NSObject *))(v68 + 48))(v133, 1, v135) != 1)
            {
              v137 = v182;
              v132(v182, (char *)v133, v135);
              sub_10000DC40((uint64_t)v118, &qword_1000D5E60);
              v138 = v202;
              v139 = (char *)v118 + *(int *)(v202 + 20);
              (*(void (**)(char *, char *, NSObject *))(v68 + 16))(v139, v137, v135);
              v136(v139, 0, 1, v135);
              *v118 = v128;
              ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v189)(v118, 0, 1, v138);
              v140 = v128;
              v141 = Logger.logObject.getter(v140);
              v142 = static os_log_type_t.default.getter();
              if (os_log_type_enabled(v141, v142))
              {
                v143 = (uint8_t *)swift_slowAlloc(2, -1);
                *(_WORD *)v143 = 0;
                _os_log_impl((void *)&_mh_execute_header, v141, v142, "HomePodSetupViewModel createStereoPairImages: rightHomePod adjusted image created", v143, 2u);
                swift_slowDealloc(v143, -1, -1);
              }

              (*(void (**)(char *, NSObject *))(v68 + 8))(v182, v201);
              v120 = isa;
              v65 = v204;
              goto LABEL_50;
            }
          }
          else
          {
            v133 = (uint64_t)v184;
            v183(v184, 1, 1, v201);
          }

          v123 = sub_10000DC40(v133, &qword_1000D5DB8);
          v120 = isa;
          v65 = v204;
        }
        else
        {

        }
      }
    }
    v144 = Logger.logObject.getter(v123);
    v145 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v144, v145))
    {
      v146 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v146 = 0;
      _os_log_impl((void *)&_mh_execute_header, v144, v145, "HomePodSetupViewModel createStereoPairImages: rightHomePod failed to create, setting rightHomepod to left", v146, 2u);
      swift_slowDealloc(v146, -1, -1);
    }

    sub_100035C1C(v119, (uint64_t)v118, &qword_1000D5E60);
  }
LABEL_50:
  v147 = v194;
  sub_10000E0F0(v119, v194, &qword_1000D5E60);
  v148 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v193 + 48);
  if (v148(v147, 1, v202) == 1)
  {
    v149 = sub_10000DC40(v147, &qword_1000D5E60);
    v150 = Logger.logObject.getter(v149);
    v151 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v150, v151))
    {
      v152 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v152 = 0;
      _os_log_impl((void *)&_mh_execute_header, v150, v151, "HomePodSetupViewModel createStereoPairImages: leftHomePod is nil, returning nil", v152, 2u);
      swift_slowDealloc(v152, -1, -1);
    }

    sub_10000DC40(v119, &qword_1000D5E60);
    v153 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v153 - 8) + 56))(v196, 1, 1, v153);
    return sub_10000DC40((uint64_t)v118, &qword_1000D5E60);
  }
  sub_100035C60(v147, v195);
  isa = v120;
  if ((v190 & 1) != 0)
  {
    v154 = String._bridgeToObjectiveC()();
    v155 = objc_msgSend(v197, "imageNamed:", v154);

  }
  else
  {
    v155 = 0;
  }
  v156 = v155;
  v157 = Logger.logObject.getter(v156);
  v158 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v157, v158))
  {
    v159 = swift_slowAlloc(20, -1);
    *(_DWORD *)v159 = 67109632;
    LODWORD(v209) = 1;
    v201 = v156;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v209, (char *)&v209 + 4);
    *(_WORD *)(v159 + 8) = 1024;
    swift_beginAccess(v118, v207, 0, 0);
    v160 = v155;
    v161 = v186;
    sub_10000E0F0((uint64_t)v118, v186, &qword_1000D5E60);
    v162 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v148)(v161, 1, v202) != 1;
    v163 = v161;
    v155 = v160;
    sub_10000DC40(v163, &qword_1000D5E60);
    LODWORD(v209) = v162;
    v65 = v204;
    v118 = v199;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v209, (char *)&v209 + 4);
    *(_WORD *)(v159 + 14) = 1024;
    LODWORD(v209) = v160 != 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v209, (char *)&v209 + 4);

    _os_log_impl((void *)&_mh_execute_header, v157, v158, "HomePodSetupViewModel createStereoPairImages: creating StereoPairImage left = %{BOOL}d | right = %{BOOL}d | appleTV = %{BOOL}d", (uint8_t *)v159, 0x14u);
    v119 = (uint64_t)v200;
    swift_slowDealloc(v159, -1, -1);
  }
  else
  {

    v157 = v156;
  }

  if (*(_DWORD *)(v65 + isa) != 3)
    goto LABEL_63;
  swift_beginAccess(v118, v208, 0, 0);
  v165 = v187;
  sub_10000E0F0((uint64_t)v118, v187, &qword_1000D5E60);
  if (v148(v165, 1, v202) == 1)
  {
    v164 = sub_10000DC40(v165, &qword_1000D5E60);
LABEL_63:
    v166 = Logger.logObject.getter(v164);
    v167 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v166, v167))
    {
      v168 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v168 = 0;
      _os_log_impl((void *)&_mh_execute_header, v166, v167, "HomePodSetupViewModel StereoPairImage, HomePod being setup set on the left", v168, 2u);
      swift_slowDealloc(v168, -1, -1);
    }

    sub_10000DC40(v119, &qword_1000D5E60);
    v169 = v196;
    sub_100035C60(v195, v196);
    swift_beginAccess(v118, &v209, 0, 0);
    v170 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
    sub_10000E0F0((uint64_t)v118, v169 + *(int *)(v170 + 20), &qword_1000D5E60);
    *(_QWORD *)(v169 + *(int *)(v170 + 24)) = v155;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v170 - 8) + 56))(v169, 0, 1, v170);
    return sub_10000DC40((uint64_t)v118, &qword_1000D5E60);
  }
  v171 = v185;
  v172 = sub_100035C60(v165, v185);
  v173 = Logger.logObject.getter(v172);
  v174 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v173, v174))
  {
    v175 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v175 = 0;
    _os_log_impl((void *)&_mh_execute_header, v173, v174, "HomePodSetupViewModel StereoPairImage, HomePod being setup set on the right", v175, 2u);
    swift_slowDealloc(v175, -1, -1);
  }

  sub_10000DC40(v119, &qword_1000D5E60);
  v176 = v196;
  sub_100035C60(v171, v196);
  v177 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v178 = v176 + *(int *)(v177 + 20);
  sub_100035C60(v195, v178);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v189)(v178, 0, 1, v202);
  *(_QWORD *)(v176 + *(int *)(v177 + 24)) = v155;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v177 - 8) + 56))(v176, 0, 1, v177);
  return sub_10000DC40((uint64_t)v118, &qword_1000D5E60);
}

unint64_t sub_1000340B0()
{
  return 0xD000000000000018;
}

char *sub_1000340CC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *result;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSString v29;
  NSString v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;

  v7 = type metadata accessor for __VaListBuilder(0);
  v8 = (_QWORD *)swift_allocObject(v7, 48, 7);
  v8[2] = 8;
  v8[3] = 0;
  v9 = v8 + 3;
  v8[4] = 0;
  v8[5] = 0;
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
  {
LABEL_25:
    v28 = __VaListBuilder.va_list()();
    v29 = String._bridgeToObjectiveC()();
    v30 = String._bridgeToObjectiveC()();
    v31 = sub_1000064FC(v29, v30, v28);

    v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    v34 = v33;

    v35 = a2[1];
    *a2 = v32;
    a2[1] = v34;
    swift_bridgeObjectRelease(a6);
    swift_bridgeObjectRelease(a4);
    swift_release(v8);
    return (char *)swift_bridgeObjectRelease(v35);
  }
  v11 = 0;
  v12 = a1 + 32;
  while (1)
  {
    sub_100035D68(v12 + 40 * v11, (uint64_t)v39);
    v13 = v40;
    v14 = v41;
    sub_10000DC94(v39, v40);
    result = (char *)dispatch thunk of CVarArg._cVarArgEncoding.getter(v13, v14);
    v16 = *v9;
    v17 = *((_QWORD *)result + 2);
    v18 = __OFADD__(*v9, v17);
    v19 = *v9 + v17;
    if (v18)
      break;
    v20 = result;
    v21 = v8[4];
    if (v21 >= v19)
      goto LABEL_18;
    if (v21 + 0x4000000000000000 < 0)
      goto LABEL_28;
    v22 = (char *)v8[5];
    if (2 * v21 > v19)
      v19 = 2 * v21;
    v8[4] = v19;
    if ((unint64_t)(v19 - 0x1000000000000000) >> 61 != 7)
      goto LABEL_29;
    result = (char *)swift_slowAlloc(8 * v19, 7);
    v8[5] = result;
    if (v22)
    {
      if (result != v22 || result >= &v22[8 * v16])
        memmove(result, v22, 8 * v16);
      __VaListBuilder.deallocStorage(wordCount:storage:)(v21, v22);
LABEL_18:
      result = (char *)v8[5];
    }
    if (!result)
      goto LABEL_30;
    v24 = *((_QWORD *)v20 + 2);
    if (v24)
    {
      v25 = (uint64_t *)(v20 + 32);
      v26 = *v9;
      while (1)
      {
        v27 = *v25++;
        *(_QWORD *)&result[8 * v26] = v27;
        v26 = *v9 + 1;
        if (__OFADD__(*v9, 1))
          break;
        *v9 = v26;
        if (!--v24)
          goto LABEL_3;
      }
      __break(1u);
      break;
    }
LABEL_3:
    ++v11;
    swift_bridgeObjectRelease(v20);
    sub_10000CDB8(v39);
    if (v11 == v10)
      goto LABEL_25;
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_100034324()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  Swift::String v6;
  void *object;
  Swift::String v8;
  Swift::String v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  Swift::String v14;
  void *v15;
  Swift::String v16;
  uint64_t v17;
  void *v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  void *v24;
  Swift::String v25;
  void *v26;
  Swift::String v27;
  void *v28;
  uint64_t v29;
  Swift::String v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  Swift::String v35;
  void *v36;
  Swift::String v37;
  uint64_t v38;
  void *v39;
  Swift::String v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  Swift::String v45;
  void *v46;
  Swift::String v47;
  uint64_t v48;
  void *v49;
  Swift::String v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  Swift::String v54;
  void *v55;
  Swift::String v56;
  uint64_t v57;
  void *v58;
  Swift::String v59;
  uint64_t v60;
  uint64_t v61;
  Swift::String v62;
  void *v63;
  Swift::String v64;
  uint64_t v65;
  void *v66;
  Swift::String v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  Swift::String v71;
  void *v72;
  Swift::String v73;
  uint64_t v74;
  void *v75;
  Swift::String v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  Swift::String v80;
  void *v81;
  Swift::String v82;
  uint64_t v83;
  void *v84;
  Swift::String v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  Swift::String v89;
  void *v90;
  Swift::String v91;
  uint64_t v92;
  void *v93;
  Swift::String v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  Swift::String v98;
  void *v99;
  Swift::String v100;
  id v101;
  id v102;
  Swift::String v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  Swift::String v107;
  void *v108;
  Swift::String v109;
  uint64_t v110;
  void *v111;
  Swift::String v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  Swift::String v119;
  uint64_t v120;
  void *v121;
  Swift::String v122;
  uint64_t v123;
  uint64_t v124;
  int *v125;
  int v126;
  uint64_t v127;
  Swift::String v128;
  void *v129;
  Swift::String v130;
  uint64_t v131;
  void *v132;
  Swift::String v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  unint64_t v139;
  unint64_t v140;
  Swift::String v141;
  uint64_t v142;
  void *v143;
  Swift::String v144;
  uint64_t v145;
  uint64_t v146;
  id v147;
  uint64_t v148;
  Swift::String v149;
  void *v150;
  Swift::String v151;
  uint64_t v152;
  void *v153;
  Swift::String v154;
  uint64_t v155;
  uint64_t v156;
  Swift::String v157;
  void *v158;
  Swift::String v159;
  uint64_t v160;
  void *v161;
  Swift::String v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  uint64_t v167;
  Swift::String v168;
  void *v169;
  Swift::String v170;
  uint64_t v171;
  void *v172;
  Swift::String v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void *v177;
  Swift::String v178;
  void *v179;
  Swift::String v180;
  uint64_t v181;
  void *v182;
  Swift::String v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void *v187;
  Swift::String v188;
  void *v189;
  Swift::String v190;
  uint64_t v191;
  void *v192;
  Swift::String v193;
  uint64_t v194;
  Swift::String v195;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  _QWORD v200[5];
  id v201[2];

  v1 = v0;
  v199 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v199);
  v198 = (uint64_t)&v197 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v197 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v197);
  v4 = (char *)&v197 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v200[0] = 0x3D656C746974;
  v200[1] = 0xE600000000000000;
  v5 = *(void **)(v0 + 8);
  v201[0] = *(id *)v0;
  v201[1] = v5;
  swift_bridgeObjectRetain(v5);
  v6._countAndFlagsBits = String.init<A>(reflecting:)(v201, &type metadata for String);
  object = v6._object;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(object);
  v8._countAndFlagsBits = 32;
  v8._object = (void *)0xE100000000000000;
  String.append(_:)(v8);
  v9._countAndFlagsBits = v200[0];
  v10 = (void *)v200[1];
  v200[0] = 0xD000000000000017;
  v200[1] = 0x800000010009D450;
  v9._object = v10;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(v10);
  v12 = v200[0];
  v11 = v200[1];
  strcpy((char *)v200, "subtitle=");
  WORD1(v200[1]) = 0;
  HIDWORD(v200[1]) = -385875968;
  v13 = *(void **)(v0 + 24);
  v201[0] = *(id *)(v0 + 16);
  v201[1] = v13;
  swift_bridgeObjectRetain(v13);
  v14._countAndFlagsBits = String.init<A>(reflecting:)(v201, &type metadata for String);
  v15 = v14._object;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(v15);
  v16._countAndFlagsBits = 32;
  v16._object = (void *)0xE100000000000000;
  String.append(_:)(v16);
  v17 = v200[0];
  v18 = (void *)v200[1];
  v200[0] = v12;
  v200[1] = v11;
  swift_bridgeObjectRetain(v11);
  v19._countAndFlagsBits = v17;
  v19._object = v18;
  String.append(_:)(v19);
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(v18);
  v21 = v200[0];
  v20 = v200[1];
  strcpy((char *)v200, "bodyText=");
  WORD1(v200[1]) = 0;
  HIDWORD(v200[1]) = -385875968;
  v22 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  v23 = v0 + v22[7];
  v24 = *(void **)(v23 + 8);
  v201[0] = *(id *)v23;
  v201[1] = v24;
  swift_bridgeObjectRetain(v24);
  v25._countAndFlagsBits = String.init<A>(reflecting:)(v201, &type metadata for String);
  v26 = v25._object;
  String.append(_:)(v25);
  swift_bridgeObjectRelease(v26);
  v27._countAndFlagsBits = 32;
  v27._object = (void *)0xE100000000000000;
  String.append(_:)(v27);
  v29 = v200[0];
  v28 = (void *)v200[1];
  v200[0] = v21;
  v200[1] = v20;
  swift_bridgeObjectRetain(v20);
  v30._countAndFlagsBits = v29;
  v30._object = v28;
  String.append(_:)(v30);
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v28);
  v32 = v200[0];
  v31 = v200[1];
  v200[0] = 0;
  v200[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease(v200[1]);
  v200[0] = 0x6D69616C63736964;
  v200[1] = 0xEF3D747865547265;
  v33 = v0 + v22[8];
  v34 = *(void **)(v33 + 8);
  v201[0] = *(id *)v33;
  v201[1] = v34;
  swift_bridgeObjectRetain(v34);
  v35._countAndFlagsBits = String.init<A>(reflecting:)(v201, &type metadata for String);
  v36 = v35._object;
  String.append(_:)(v35);
  swift_bridgeObjectRelease(v36);
  v37._countAndFlagsBits = 32;
  v37._object = (void *)0xE100000000000000;
  String.append(_:)(v37);
  v38 = v200[0];
  v39 = (void *)v200[1];
  v200[0] = v32;
  v200[1] = v31;
  swift_bridgeObjectRetain(v31);
  v40._countAndFlagsBits = v38;
  v40._object = v39;
  String.append(_:)(v40);
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v39);
  v42 = v200[0];
  v41 = v200[1];
  v200[0] = 0;
  v200[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease(v200[1]);
  v200[0] = 0xD000000000000017;
  v200[1] = 0x800000010009D470;
  v43 = v0 + v22[9];
  v44 = *(void **)(v43 + 8);
  v201[0] = *(id *)v43;
  v201[1] = v44;
  swift_bridgeObjectRetain(v44);
  v45._countAndFlagsBits = String.init<A>(reflecting:)(v201, &type metadata for String);
  v46 = v45._object;
  String.append(_:)(v45);
  swift_bridgeObjectRelease(v46);
  v47._countAndFlagsBits = 32;
  v47._object = (void *)0xE100000000000000;
  String.append(_:)(v47);
  v48 = v200[0];
  v49 = (void *)v200[1];
  v200[0] = v42;
  v200[1] = v41;
  swift_bridgeObjectRetain(v41);
  v50._countAndFlagsBits = v48;
  v50._object = v49;
  String.append(_:)(v50);
  swift_bridgeObjectRelease(v41);
  swift_bridgeObjectRelease(v49);
  v52 = v200[0];
  v51 = v200[1];
  strcpy((char *)v200, "buttonInfo=");
  HIDWORD(v200[1]) = -352321536;
  v201[0] = *(id *)(v0 + v22[10]);
  swift_bridgeObjectRetain(v201[0]);
  v53 = sub_10000D604(&qword_1000D60F8);
  v54._countAndFlagsBits = String.init<A>(reflecting:)(v201, v53);
  v55 = v54._object;
  String.append(_:)(v54);
  swift_bridgeObjectRelease(v55);
  v56._countAndFlagsBits = 32;
  v56._object = (void *)0xE100000000000000;
  String.append(_:)(v56);
  v57 = v200[0];
  v58 = (void *)v200[1];
  v200[0] = v52;
  v200[1] = v51;
  swift_bridgeObjectRetain(v51);
  v59._countAndFlagsBits = v57;
  v59._object = v58;
  String.append(_:)(v59);
  swift_bridgeObjectRelease(v51);
  swift_bridgeObjectRelease(v58);
  v61 = v200[0];
  v60 = v200[1];
  v200[0] = 0x3D6569766F6DLL;
  v200[1] = 0xE600000000000000;
  sub_10000E0F0(v0 + v22[6], (uint64_t)v4, &qword_1000D5E58);
  v62._countAndFlagsBits = String.init<A>(reflecting:)(v4, v197);
  v63 = v62._object;
  String.append(_:)(v62);
  swift_bridgeObjectRelease(v63);
  v64._countAndFlagsBits = 32;
  v64._object = (void *)0xE100000000000000;
  String.append(_:)(v64);
  v65 = v200[0];
  v66 = (void *)v200[1];
  v200[0] = v61;
  v200[1] = v60;
  swift_bridgeObjectRetain(v60);
  v67._countAndFlagsBits = v65;
  v67._object = v66;
  String.append(_:)(v67);
  swift_bridgeObjectRelease(v60);
  swift_bridgeObjectRelease(v66);
  v69 = v200[0];
  v68 = v200[1];
  v200[0] = 0;
  v200[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease(v200[1]);
  strcpy((char *)v200, "productImage=");
  HIWORD(v200[1]) = -4864;
  v70 = v198;
  sub_10000E0F0(v1 + v22[27], v198, &qword_1000D5E60);
  v71._countAndFlagsBits = String.init<A>(reflecting:)(v70, v199);
  v72 = v71._object;
  String.append(_:)(v71);
  swift_bridgeObjectRelease(v72);
  v73._countAndFlagsBits = 32;
  v73._object = (void *)0xE100000000000000;
  String.append(_:)(v73);
  v74 = v200[0];
  v75 = (void *)v200[1];
  v200[0] = v69;
  v200[1] = v68;
  swift_bridgeObjectRetain(v68);
  v76._countAndFlagsBits = v74;
  v76._object = v75;
  String.append(_:)(v76);
  swift_bridgeObjectRelease(v68);
  swift_bridgeObjectRelease(v75);
  v78 = v200[0];
  v77 = v200[1];
  strcpy((char *)v200, "iconImages=");
  HIDWORD(v200[1]) = -352321536;
  v201[0] = *(id *)(v1 + v22[11]);
  swift_bridgeObjectRetain(v201[0]);
  v79 = sub_10000D604(&qword_1000D6100);
  v80._countAndFlagsBits = String.init<A>(reflecting:)(v201, v79);
  v81 = v80._object;
  String.append(_:)(v80);
  swift_bridgeObjectRelease(v81);
  v82._countAndFlagsBits = 32;
  v82._object = (void *)0xE100000000000000;
  String.append(_:)(v82);
  v83 = v200[0];
  v84 = (void *)v200[1];
  v200[0] = v78;
  v200[1] = v77;
  swift_bridgeObjectRetain(v77);
  v85._countAndFlagsBits = v83;
  v85._object = v84;
  String.append(_:)(v85);
  swift_bridgeObjectRelease(v77);
  swift_bridgeObjectRelease(v84);
  v87 = v200[0];
  v86 = v200[1];
  v200[0] = 0;
  v200[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(21);
  swift_bridgeObjectRelease(v200[1]);
  v200[0] = 0xD000000000000012;
  v200[1] = 0x800000010009D490;
  v201[0] = *(id *)(v1 + v22[12]);
  swift_bridgeObjectRetain(v201[0]);
  v88 = sub_10000D604(&qword_1000D6108);
  v89._countAndFlagsBits = String.init<A>(reflecting:)(v201, v88);
  v90 = v89._object;
  String.append(_:)(v89);
  swift_bridgeObjectRelease(v90);
  v91._countAndFlagsBits = 32;
  v91._object = (void *)0xE100000000000000;
  String.append(_:)(v91);
  v92 = v200[0];
  v93 = (void *)v200[1];
  v200[0] = v87;
  v200[1] = v86;
  swift_bridgeObjectRetain(v86);
  v94._countAndFlagsBits = v92;
  v94._object = v93;
  String.append(_:)(v94);
  swift_bridgeObjectRelease(v86);
  swift_bridgeObjectRelease(v93);
  v96 = v200[0];
  v95 = v200[1];
  v200[0] = 0;
  v200[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease(v200[1]);
  strcpy((char *)v201, "defaultOption=");
  HIBYTE(v201[1]) = -18;
  sub_10000E0F0(v1 + v22[13], (uint64_t)v200, &qword_1000D6110);
  v97 = sub_10000D604(&qword_1000D6110);
  v98._countAndFlagsBits = String.init<A>(reflecting:)(v200, v97);
  v99 = v98._object;
  String.append(_:)(v98);
  swift_bridgeObjectRelease(v99);
  v100._countAndFlagsBits = 32;
  v100._object = (void *)0xE100000000000000;
  String.append(_:)(v100);
  v101 = v201[0];
  v102 = v201[1];
  v200[0] = v96;
  v200[1] = v95;
  swift_bridgeObjectRetain(v95);
  v103._countAndFlagsBits = (uint64_t)v101;
  v103._object = v102;
  String.append(_:)(v103);
  swift_bridgeObjectRelease(v95);
  swift_bridgeObjectRelease(v102);
  v105 = v200[0];
  v104 = v200[1];
  strcpy((char *)v200, "features=");
  WORD1(v200[1]) = 0;
  HIDWORD(v200[1]) = -385875968;
  v201[0] = *(id *)(v1 + v22[15]);
  swift_bridgeObjectRetain(v201[0]);
  v106 = sub_10000D604(&qword_1000D6118);
  v107._countAndFlagsBits = String.init<A>(reflecting:)(v201, v106);
  v108 = v107._object;
  String.append(_:)(v107);
  swift_bridgeObjectRelease(v108);
  v109._countAndFlagsBits = 32;
  v109._object = (void *)0xE100000000000000;
  String.append(_:)(v109);
  v110 = v200[0];
  v111 = (void *)v200[1];
  v200[0] = v105;
  v200[1] = v104;
  swift_bridgeObjectRetain(v104);
  v112._countAndFlagsBits = v110;
  v112._object = v111;
  String.append(_:)(v112);
  swift_bridgeObjectRelease(v104);
  swift_bridgeObjectRelease(v111);
  v114 = v200[0];
  v113 = v200[1];
  v200[0] = 0;
  v200[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease(v200[1]);
  v200[0] = 0x73736572676F7270;
  v200[1] = 0xEF3D6C6961746544;
  v115 = *(_BYTE *)(v1 + v22[16]);
  if (v115)
    v116 = 7562585;
  else
    v116 = 28494;
  if (*(_BYTE *)(v1 + v22[16]))
    v117 = 0xE300000000000000;
  else
    v117 = 0xE200000000000000;
  v118 = v117;
  String.append(_:)(*(Swift::String *)&v116);
  swift_bridgeObjectRelease(v117);
  v119._countAndFlagsBits = 32;
  v119._object = (void *)0xE100000000000000;
  String.append(_:)(v119);
  v120 = v200[0];
  v121 = (void *)v200[1];
  v200[0] = v114;
  v200[1] = v113;
  swift_bridgeObjectRetain(v113);
  v122._countAndFlagsBits = v120;
  v122._object = v121;
  String.append(_:)(v122);
  swift_bridgeObjectRelease(v113);
  swift_bridgeObjectRelease(v121);
  v124 = v200[0];
  v123 = v200[1];
  v200[0] = 0;
  v200[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease(v200[1]);
  strcpy((char *)v200, "progressEvent=");
  HIBYTE(v200[1]) = -18;
  v125 = (int *)(v1 + v22[17]);
  v126 = *v125;
  LOBYTE(v125) = *((_BYTE *)v125 + 4);
  LODWORD(v201[0]) = v126;
  BYTE4(v201[0]) = (_BYTE)v125;
  v127 = sub_10000D604(&qword_1000D6120);
  v128._countAndFlagsBits = String.init<A>(reflecting:)(v201, v127);
  v129 = v128._object;
  String.append(_:)(v128);
  swift_bridgeObjectRelease(v129);
  v130._countAndFlagsBits = 32;
  v130._object = (void *)0xE100000000000000;
  String.append(_:)(v130);
  v131 = v200[0];
  v132 = (void *)v200[1];
  v200[0] = v124;
  v200[1] = v123;
  swift_bridgeObjectRetain(v123);
  v133._countAndFlagsBits = v131;
  v133._object = v132;
  String.append(_:)(v133);
  swift_bridgeObjectRelease(v123);
  swift_bridgeObjectRelease(v132);
  v135 = v200[0];
  v134 = v200[1];
  v200[0] = 0;
  v200[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease(v200[1]);
  v200[0] = 0x6C61694469726973;
  v200[1] = 0xEF3D6F666E49676FLL;
  v136 = *(_QWORD *)(v1 + v22[21]);
  if (v136)
  {
    v137 = Dictionary.debugDescription.getter(v136, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
    v139 = v138;
  }
  else
  {
    v139 = 0xE400000000000000;
    v137 = 1701736270;
  }
  v140 = v139;
  String.append(_:)(*(Swift::String *)&v137);
  swift_bridgeObjectRelease(v139);
  v141._countAndFlagsBits = 32;
  v141._object = (void *)0xE100000000000000;
  String.append(_:)(v141);
  v142 = v200[0];
  v143 = (void *)v200[1];
  v200[0] = v135;
  v200[1] = v134;
  swift_bridgeObjectRetain(v134);
  v144._countAndFlagsBits = v142;
  v144._object = v143;
  String.append(_:)(v144);
  swift_bridgeObjectRelease(v134);
  swift_bridgeObjectRelease(v143);
  v146 = v200[0];
  v145 = v200[1];
  v200[0] = 0;
  v200[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease(v200[1]);
  strcpy((char *)v200, "accountEmails=");
  HIBYTE(v200[1]) = -18;
  v201[0] = *(id *)(v1 + v22[22]);
  v147 = v201[0];
  v148 = sub_10000D604(&qword_1000D6128);
  v149._countAndFlagsBits = String.init<A>(reflecting:)(v201, v148);
  v150 = v149._object;
  String.append(_:)(v149);
  swift_bridgeObjectRelease(v150);
  v151._countAndFlagsBits = 32;
  v151._object = (void *)0xE100000000000000;
  String.append(_:)(v151);
  v152 = v200[0];
  v153 = (void *)v200[1];
  v200[0] = v146;
  v200[1] = v145;
  swift_bridgeObjectRetain(v145);
  v154._countAndFlagsBits = v152;
  v154._object = v153;
  String.append(_:)(v154);
  swift_bridgeObjectRelease(v145);
  swift_bridgeObjectRelease(v153);
  v156 = v200[0];
  v155 = v200[1];
  v200[0] = 0;
  v200[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease(v200[1]);
  v200[0] = 0x73736572676F7270;
  v200[1] = 0xEF3D6C6961746544;
  LOBYTE(v201[0]) = v115;
  v157._countAndFlagsBits = String.init<A>(reflecting:)(v201, &type metadata for Bool);
  v158 = v157._object;
  String.append(_:)(v157);
  swift_bridgeObjectRelease(v158);
  v159._countAndFlagsBits = 32;
  v159._object = (void *)0xE100000000000000;
  String.append(_:)(v159);
  v160 = v200[0];
  v161 = (void *)v200[1];
  v200[0] = v156;
  v200[1] = v155;
  swift_bridgeObjectRetain(v155);
  v162._countAndFlagsBits = v160;
  v162._object = v161;
  String.append(_:)(v162);
  swift_bridgeObjectRelease(v155);
  swift_bridgeObjectRelease(v161);
  v164 = v200[0];
  v163 = v200[1];
  v200[0] = 0;
  v200[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease(v200[1]);
  v200[0] = 0xD000000000000010;
  v200[1] = 0x800000010009D4B0;
  v165 = v1 + v22[23];
  v166 = *(void **)(v165 + 8);
  v201[0] = *(id *)v165;
  v201[1] = v166;
  swift_bridgeObjectRetain(v166);
  v167 = sub_10000D604((uint64_t *)&unk_1000D6130);
  v168._countAndFlagsBits = String.init<A>(reflecting:)(v201, v167);
  v169 = v168._object;
  String.append(_:)(v168);
  swift_bridgeObjectRelease(v169);
  v170._countAndFlagsBits = 32;
  v170._object = (void *)0xE100000000000000;
  String.append(_:)(v170);
  v171 = v200[0];
  v172 = (void *)v200[1];
  v200[0] = v164;
  v200[1] = v163;
  swift_bridgeObjectRetain(v163);
  v173._countAndFlagsBits = v171;
  v173._object = v172;
  String.append(_:)(v173);
  swift_bridgeObjectRelease(v163);
  swift_bridgeObjectRelease(v172);
  v175 = v200[0];
  v174 = v200[1];
  v200[0] = 0;
  v200[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(29);
  swift_bridgeObjectRelease(v200[1]);
  v200[0] = 0xD00000000000001ALL;
  v200[1] = 0x800000010009D4D0;
  v176 = v1 + v22[24];
  v177 = *(void **)(v176 + 8);
  v201[0] = *(id *)v176;
  v201[1] = v177;
  swift_bridgeObjectRetain(v177);
  v178._countAndFlagsBits = String.init<A>(reflecting:)(v201, v167);
  v179 = v178._object;
  String.append(_:)(v178);
  swift_bridgeObjectRelease(v179);
  v180._countAndFlagsBits = 32;
  v180._object = (void *)0xE100000000000000;
  String.append(_:)(v180);
  v181 = v200[0];
  v182 = (void *)v200[1];
  v200[0] = v175;
  v200[1] = v174;
  swift_bridgeObjectRetain(v174);
  v183._countAndFlagsBits = v181;
  v183._object = v182;
  String.append(_:)(v183);
  swift_bridgeObjectRelease(v174);
  swift_bridgeObjectRelease(v182);
  v185 = v200[0];
  v184 = v200[1];
  v200[0] = 0;
  v200[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v200[1]);
  v200[0] = 0xD000000000000011;
  v200[1] = 0x800000010009D4F0;
  v186 = v1 + v22[25];
  v187 = *(void **)(v186 + 8);
  v201[0] = *(id *)v186;
  v201[1] = v187;
  swift_bridgeObjectRetain(v187);
  v188._countAndFlagsBits = String.init<A>(reflecting:)(v201, v167);
  v189 = v188._object;
  String.append(_:)(v188);
  swift_bridgeObjectRelease(v189);
  v190._countAndFlagsBits = 32;
  v190._object = (void *)0xE100000000000000;
  String.append(_:)(v190);
  v191 = v200[0];
  v192 = (void *)v200[1];
  v200[0] = v185;
  v200[1] = v184;
  swift_bridgeObjectRetain(v184);
  v193._countAndFlagsBits = v191;
  v193._object = v192;
  String.append(_:)(v193);
  swift_bridgeObjectRelease(v184);
  swift_bridgeObjectRelease(v192);
  v194 = v200[1];
  swift_bridgeObjectRetain(v200[1]);
  v195._countAndFlagsBits = 62;
  v195._object = (void *)0xE100000000000000;
  String.append(_:)(v195);
  swift_bridgeObjectRelease(v194);
  return v200[0];
}

unint64_t sub_100035088()
{
  unint64_t result;

  result = qword_1000D6150;
  if (!qword_1000D6150)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1000D6150);
  }
  return result;
}

uint64_t sub_1000350CC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_10004A340(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[4 * v8 + 4];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v16 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v16, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10003521C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_10000D604(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

_QWORD *sub_100035260(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  BOOL v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_10007A248(0, v2, 0);
    v5 = *(_QWORD *)(a2 + 16) != 0;
    v6 = (_QWORD *)(a1 + 40);
    do
    {
      v8 = *(v6 - 1);
      v7 = *v6;
      v9 = _swiftEmptyArrayStorage[2];
      v10 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain(*v6);
      if (v9 >= v10 >> 1)
        sub_10007A248(v10 > 1, v9 + 1, 1);
      _swiftEmptyArrayStorage[2] = v9 + 1;
      v11 = &_swiftEmptyArrayStorage[4 * v9];
      *((_BYTE *)v11 + 32) = 1;
      v6 += 2;
      v11[5] = v8;
      v11[6] = v7;
      *((_BYTE *)v11 + 56) = v5;
      --v2;
    }
    while (v2);
  }
  return _swiftEmptyArrayStorage;
}

void *sub_10003535C(char a1)
{
  id v1;
  double v2;
  double v3;
  NSString v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  double v9;
  double v10;
  void *v11;
  NSString v12;
  id v13;
  id v14;
  double v15;
  double v16;
  NSString v17;
  id v18;
  id v19;
  double v20;
  double v21;
  NSString v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  id v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  id v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  id v47;
  void *v48;

  if ((a1 & 1) != 0)
  {
    v1 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v1, "scale");
    v3 = v2;

    v4 = String._bridgeToObjectiveC()();
    v5 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v4);

    if (v5
      && (v6 = objc_msgSend(v5, "_applicationIconImageForFormat:precomposed:scale:", 2, 1, v3),
          v5,
          v6))
    {
      v47 = v6;
    }
    else
    {
      v47 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
    }
  }
  else
  {
    v47 = 0;
  }
  v7 = (void *)objc_opt_self(UIScreen);
  v8 = objc_msgSend(v7, "mainScreen");
  objc_msgSend(v8, "scale");
  v10 = v9;

  v11 = (void *)objc_opt_self(UIImage);
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v11, "_applicationIconImageForBundleIdentifier:format:scale:", v12, 2, v10);

  if (!v13)
    v13 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  v14 = objc_msgSend(v7, "mainScreen", v47);
  objc_msgSend(v14, "scale");
  v16 = v15;

  v17 = String._bridgeToObjectiveC()();
  v18 = objc_msgSend(v11, "_applicationIconImageForBundleIdentifier:format:scale:", v17, 2, v16);

  if (!v18)
    v18 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  v19 = objc_msgSend(v7, "mainScreen");
  objc_msgSend(v19, "scale");
  v21 = v20;

  v22 = String._bridgeToObjectiveC()();
  v23 = objc_msgSend(v11, "imageNamed:", v22);

  if (!v23
    || (v24 = objc_msgSend(v23, "_applicationIconImageForFormat:precomposed:scale:", 2, 1, v21),
        v23,
        !v24))
  {
    v24 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  }
  if (v48)
  {
    v25 = v48;
    v26 = v13;
    v27 = v18;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v24);
    v29 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v28 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v29 >= v28 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1);
    v30 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v25);
    specialized Array._endMutation()(v30);
  }
  else
  {
    v31 = v13;
    v32 = v18;
    v33 = v24;
  }
  v34 = v13;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v34);
  v36 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v35 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v36 >= v35 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v35 > 1, v36 + 1, 1);
  v37 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v36, v34);
  specialized Array._endMutation()(v37);
  v38 = v18;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v38);
  v40 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v39 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v40 >= v39 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v39 > 1, v40 + 1, 1);
  v41 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v40, v38);
  specialized Array._endMutation()(v41);
  v42 = v24;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v42);
  v44 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v43 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v44 >= v43 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v43 > 1, v44 + 1, 1);
  v45 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v44, v42);
  specialized Array._endMutation()(v45);

  return &_swiftEmptyArrayStorage;
}

id sub_10003584C(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;
  double v5;
  double v6;
  id v7;
  NSString v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  double v18;
  double v19;
  void *v20;
  NSString v21;

  v3 = (void *)objc_opt_self(UIScreen);
  v4 = objc_msgSend(v3, "mainScreen");
  objc_msgSend(v4, "scale");
  v6 = v5;

  v7 = objc_allocWithZone((Class)ISIcon);
  swift_bridgeObjectRetain(a2);
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v9 = objc_msgSend(v7, "initWithBundleIdentifier:", v8);

  v10 = objc_msgSend(objc_allocWithZone((Class)ISImageDescriptor), "initWithSize:scale:", 32.0, 32.0, v6);
  objc_msgSend(v10, "setDrawBorder:", 1);
  v11 = objc_msgSend(v9, "imageForDescriptor:", v10);
  if (v11)
  {
    v12 = v11;
    objc_msgSend(v11, "placeholder");
    v13 = objc_msgSend(v9, "prepareImageForDescriptor:", v10);

    if (v13)
    {
      v14 = objc_msgSend(v13, "CGImage");
      if (v14)
      {
        v15 = v14;
        v16 = objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:", v14);

        v13 = v9;
        v9 = v10;
        v10 = v15;
        goto LABEL_8;
      }
    }
  }
  else
  {
    v13 = 0;
  }
  v17 = objc_msgSend(v3, "mainScreen");
  objc_msgSend(v17, "scale");
  v19 = v18;

  v20 = (void *)objc_opt_self(UIImage);
  v21 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(v20, "_applicationIconImageForBundleIdentifier:format:scale:", v21, 2, v19);

  if (!v16)
    v16 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
LABEL_8:

  return v16;
}

double sub_100035AA8(uint64_t a1)
{
  NSString v2;
  char v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  if (*(_DWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_bonjourTestState) == 3
    || (sub_1000431F0() & 1) != 0
    || *(_QWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_amsMarketingItem)
    && *(_BYTE *)(a1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_acceptedMusicTerms) == 1)
  {
    v2 = String._bridgeToObjectiveC()();
    v3 = 3;
  }
  else
  {
    v2 = String._bridgeToObjectiveC()();
    v3 = 1;
  }
  v4 = sub_100006354(v2);

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;

  v8 = sub_10000D604(&qword_1000D6168);
  v9 = swift_allocObject(v8, 64, 7);
  *(_QWORD *)&result = 1;
  *(_OWORD *)(v9 + 16) = xmmword_100099220;
  *(_QWORD *)(v9 + 32) = v5;
  *(_QWORD *)(v9 + 40) = v7;
  *(_QWORD *)(v9 + 48) = 0;
  *(_BYTE *)(v9 + 56) = v3;
  return result;
}

uint64_t sub_100035BB0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 41, 7);
}

unint64_t sub_100035BD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D5980;
  if (!qword_1000D5980)
  {
    type metadata accessor for Key(255);
    result = swift_getWitnessTable(&unk_100098E28, v1);
    atomic_store(result, (unint64_t *)&qword_1000D5980);
  }
  return result;
}

uint64_t sub_100035C1C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_10000D604(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t sub_100035C60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AdjustedImage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100035CA4(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a2;
  if (!*a2)
  {
    v5 = objc_opt_self(*a3);
    result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_100035CDC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100035D20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000D604(&qword_1000D5E68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100035D68(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100035DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a4);
    swift_bridgeObjectRelease(a6);
    swift_bridgeObjectRelease(a8);
    return swift_bridgeObjectRelease(a10);
  }
  return result;
}

unint64_t sub_100035E08()
{
  unint64_t result;

  result = qword_1000D61B8;
  if (!qword_1000D61B8)
  {
    result = swift_getWitnessTable(&unk_10009A2EC, &type metadata for HomeDeviceSetupFeatureFlags);
    atomic_store(result, (unint64_t *)&qword_1000D61B8);
  }
  return result;
}

uint64_t sub_100035E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain(a2);
    return swift_bridgeObjectRetain(a4);
  }
  return result;
}

uint64_t sub_100035E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    return swift_bridgeObjectRelease(a4);
  }
  return result;
}

uint64_t sub_100035EAC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

double sub_100035ED8(char a1, uint64_t a2, char a3)
{
  _BOOL4 v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  double result;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;

  if ((_DWORD)a2 == 2)
  {
    v4 = 0;
LABEL_11:
    if (a3 == 6)
    {
      if (qword_1000D5520 != -1)
        swift_once(&qword_1000D5520, sub_10001A788);
      v11 = type metadata accessor for Logger(0, a2);
      v12 = sub_10001118C(v11, (uint64_t)qword_1000D5DA0);
      v13 = Logger.logObject.getter(v12);
      v14 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v15 = 0;
        _os_log_impl((void *)&_mh_execute_header, v13, v14, "createProgressViewModel b620 image adjusted", v15, 2u);
        swift_slowDealloc(v15, -1, -1);
      }

      v16 = !v4;
      result = 215.586667;
    }
    else
    {
      if (qword_1000D5520 != -1)
        swift_once(&qword_1000D5520, sub_10001A788);
      v17 = type metadata accessor for Logger(0, a2);
      v18 = sub_10001118C(v17, (uint64_t)qword_1000D5DA0);
      v19 = Logger.logObject.getter(v18);
      v20 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v21 = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "createProgressViewModel b238 image adjusted", v21, 2u);
        swift_slowDealloc(v21, -1, -1);
      }

      v16 = !v4;
      result = 189.366667;
    }
    if (!v16)
      result = 227.24;
    if ((a1 & 1) == 0)
      return 227.546667;
    return result;
  }
  if ((_DWORD)a2 == 3 || a3 != 5)
  {
    v4 = a2 != 3;
    goto LABEL_11;
  }
  if (qword_1000D5520 != -1)
    swift_once(&qword_1000D5520, sub_10001A788);
  v5 = type metadata accessor for Logger(0, a2);
  v6 = sub_10001118C(v5, (uint64_t)qword_1000D5DA0);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "createProgressViewModel solo mini image adjusted", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  return dbl_100099280[(a1 & 1) == 0];
}

uint64_t sub_100036190()
{
  NSString v0;
  id v1;
  uint64_t v2;

  v0 = String._bridgeToObjectiveC()();
  v1 = sub_100006354(v0);

  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  return v2;
}

uint64_t sub_100036370()
{
  NSString v0;
  id v1;
  uint64_t v2;

  v0 = String._bridgeToObjectiveC()();
  v1 = sub_100006354(v0);

  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  return v2;
}

uint64_t sub_100036490(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  NSString v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (IsAppleInternalBuild(a1))
  {
    v8 = String._bridgeToObjectiveC()();
    v9 = sub_100006354(v8);

    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v12 = v11;

    v13 = sub_10000D604(&qword_1000D6168);
    v14 = swift_allocObject(v13, 96, 7);
    *(_OWORD *)(v14 + 16) = xmmword_100098100;
    *(_QWORD *)(v14 + 32) = a1;
    *(_QWORD *)(v14 + 40) = a2;
    *(_QWORD *)(v14 + 48) = a3;
    *(_BYTE *)(v14 + 56) = a4;
    *(_QWORD *)(v14 + 64) = v10;
    *(_QWORD *)(v14 + 72) = v12;
    *(_QWORD *)(v14 + 80) = 1;
    *(_BYTE *)(v14 + 88) = 17;
  }
  else
  {
    v15 = sub_10000D604(&qword_1000D6168);
    v14 = swift_allocObject(v15, 64, 7);
    *(_OWORD *)(v14 + 16) = xmmword_100099220;
    *(_QWORD *)(v14 + 32) = a1;
    *(_QWORD *)(v14 + 40) = a2;
    *(_QWORD *)(v14 + 48) = a3;
    *(_BYTE *)(v14 + 56) = a4;
  }
  swift_bridgeObjectRetain(a2);
  return v14;
}

unint64_t sub_1000365AC()
{
  unint64_t result;

  result = qword_1000D61C8;
  if (!qword_1000D61C8)
  {
    result = swift_getWitnessTable(&unk_10009A2BC, &type metadata for AppleAccountFeatureFlags);
    atomic_store(result, (unint64_t *)&qword_1000D61C8);
  }
  return result;
}

id sub_1000365F0()
{
  id v0;
  double v1;
  double v2;
  NSString v3;
  id v4;
  id v5;

  v0 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v0, "scale");
  v2 = v1;

  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v3);

  if (v4
    && (v5 = objc_msgSend(v4, "_applicationIconImageForFormat:precomposed:scale:", 2, 1, v2),
        v4,
        v5))
  {
    return v5;
  }
  else
  {
    return objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  }
}

uint64_t sub_100036700(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000111E8(v2, qword_1000D61D0);
  v3 = sub_10001118C(v2, (uint64_t)qword_1000D61D0);
  if (qword_1000D55C0 != -1)
    swift_once(&qword_1000D55C0, sub_100058090);
  v4 = sub_10001118C(v2, (uint64_t)qword_1000DB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

id sub_100036790()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  NSString v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation____lazy_storage___userDefaults;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation____lazy_storage___userDefaults);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation____lazy_storage___userDefaults);
  }
  else
  {
    v4 = objc_allocWithZone((Class)NSUserDefaults);
    v5 = String._bridgeToObjectiveC()();
    v6 = objc_msgSend(v4, "initWithSuiteName:", v5);

    if (!v6)
      v6 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id sub_100036860()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for HomePodSetupAutomation()), "init");
  qword_1000DB5C8 = (uint64_t)result;
  return result;
}

id HomePodSetupAutomation.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), "init");
}

void sub_1000368EC(uint64_t a1, unsigned __int8 a2)
{
  id v3;
  NSString v4;
  unsigned int v5;
  id v6;
  NSString v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  id v14;
  Class isa;
  NSString v16;
  _OWORD v17[2];
  _QWORD v18[5];
  __int128 v19;
  __int128 v20;

  v3 = sub_100036790();
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v3, "BOOLForKey:", v4);

  if (v5)
  {
    v6 = sub_100036790();
    v7 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend(v6, "objectForKey:", v7);

    if (v8)
    {
      _bridgeAnyObjectToAny(_:)(&v19, v8);
      swift_unknownObjectRelease(v8);
    }
    else
    {
      v19 = 0u;
      v20 = 0u;
    }
    sub_10003521C((uint64_t)&v19, (uint64_t)v18, &qword_1000D5820);
    if (v18[3])
    {
      v9 = sub_10000D604(&qword_1000D6280);
      if (swift_dynamicCast(v17, v18, (char *)&type metadata for Any + 8, v9, 6))
      {
        v10 = *(_QWORD *)&v17[0];
LABEL_10:
        *(_QWORD *)&v19 = sub_100069924(a2);
        *((_QWORD *)&v19 + 1) = v11;
        AnyHashable.init<A>(_:)(v18, &v19, &type metadata for String, &protocol witness table for String);
        v12 = sub_10000BF08();
        *((_QWORD *)&v20 + 1) = sub_10000D604(&qword_1000D6280);
        *(_QWORD *)&v19 = v12;
        sub_10000DAD8(&v19, v17);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v10);
        sub_10004BE88(v17, (uint64_t)v18, isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease(0x8000000000000000);
        sub_10000DAE8((uint64_t)v18);
        v14 = sub_100036790();
        isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v10);
        v16 = String._bridgeToObjectiveC()();
        objc_msgSend(v14, "setValue:forKey:", isa, v16);

        return;
      }
    }
    else
    {
      sub_10000DC40((uint64_t)v18, &qword_1000D5820);
    }
    v10 = sub_10000C35C((uint64_t)_swiftEmptyArrayStorage);
    goto LABEL_10;
  }
}

void sub_100036B60(uint64_t a1, uint64_t a2)
{
  NSObject *v2;
  id v5;
  NSString v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  id v11;
  NSString v12;
  id v13;
  unint64_t v14;
  char *v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint8_t *v54;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  id v59;
  NSString v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t *v64;
  uint64_t *v65;
  uint32_t *p_cb;
  uint64_t v67;
  unint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint64_t v75;
  uint32_t *v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  _QWORD *v81;
  char v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  NSObject *v87;
  NSObject *v88;
  uint64_t v89;
  os_log_type_t v90;
  uint8_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  id v97;
  NSString v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  char v115;
  id v116;
  NSString v117;
  unsigned int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  NSObject *v122;
  NSObject *v123;
  uint64_t v124;
  NSObject *v125;
  uint64_t v126;
  os_log_type_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  unint64_t v139;
  int64_t v140;
  _QWORD *v141;
  uint64_t v142;
  uint64_t v143;
  NSObject *v144;
  NSObject *v145;
  unint64_t v146;
  _QWORD v147[5];
  __int128 v148;
  __int128 v149;
  uint64_t v150[3];
  uint64_t v151;
  _OWORD v152[2];
  uint64_t v153;
  _OWORD v154[2];
  uint64_t v155;

  v146 = sub_10000C960((uint64_t)_swiftEmptyArrayStorage);
  v5 = sub_100036790();
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v5, "objectForKey:", v6);

  if (v7)
  {
    _bridgeAnyObjectToAny(_:)(&v148, v7);
    swift_unknownObjectRelease(v7);
  }
  else
  {
    v148 = 0u;
    v149 = 0u;
  }
  sub_10003521C((uint64_t)&v148, (uint64_t)v150, &qword_1000D5820);
  if (v151)
  {
    if ((swift_dynamicCast(v154, v150, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
    {
      v8 = *((_QWORD *)&v154[0] + 1);
      v9 = (Class *)((char *)&v2->isa + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_forcedPasscode);
      v10 = *(uint64_t *)((char *)&v2[1].isa + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_forcedPasscode);
      *v9 = *(_QWORD *)&v154[0];
      v9[1] = v8;
      swift_bridgeObjectRelease(v10);
    }
  }
  else
  {
    sub_10000DC40((uint64_t)v150, &qword_1000D5820);
  }
  v11 = sub_100036790();
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v11, "objectForKey:", v12);

  if (v13)
  {
    _bridgeAnyObjectToAny(_:)(&v148, v13);
    swift_unknownObjectRelease(v13);
  }
  else
  {
    v148 = 0u;
    v149 = 0u;
  }
  sub_10003521C((uint64_t)&v148, (uint64_t)v150, &qword_1000D5820);
  v143 = a2;
  v145 = v2;
  v142 = a1;
  if (v151)
  {
    v14 = sub_10000D604(&qword_1000D6280);
    v15 = (char *)&type metadata for Any + 8;
    if ((swift_dynamicCast(v154, v150, (char *)&type metadata for Any + 8, v14, 6) & 1) != 0)
    {
      v16 = *(NSObject **)&v154[0];
      v17 = *(_QWORD *)&v154[0] + 64;
      v18 = 1 << *(_BYTE *)(*(_QWORD *)&v154[0] + 32);
      v19 = -1;
      if (v18 < 64)
        v19 = ~(-1 << v18);
      v20 = v19 & *(_QWORD *)(*(_QWORD *)&v154[0] + 64);
      v137 = (Class *)((char *)&v2->isa + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_forcedPasscode);
      v21 = (unint64_t)(v18 + 63) >> 6;
      swift_bridgeObjectRetain(*(_QWORD *)&v154[0]);
      v22 = 0;
      v139 = v14;
      v140 = v21;
      while (1)
      {
        while (1)
        {
          while (1)
          {
            if (v20)
            {
              v23 = __clz(__rbit64(v20));
              v20 &= v20 - 1;
              v24 = v23 | (v22 << 6);
            }
            else
            {
              v25 = v22 + 1;
              if (__OFADD__(v22, 1))
              {
                __break(1u);
                goto LABEL_113;
              }
              if (v25 >= v21)
                goto LABEL_68;
              v26 = *(_QWORD *)(v17 + 8 * v25);
              ++v22;
              if (!v26)
              {
                v22 = v25 + 1;
                if (v25 + 1 >= v21)
                  goto LABEL_68;
                v26 = *(_QWORD *)(v17 + 8 * v22);
                if (!v26)
                {
                  v22 = v25 + 2;
                  if (v25 + 2 >= v21)
                    goto LABEL_68;
                  v26 = *(_QWORD *)(v17 + 8 * v22);
                  if (!v26)
                  {
                    v22 = v25 + 3;
                    if (v25 + 3 >= v21)
                      goto LABEL_68;
                    v26 = *(_QWORD *)(v17 + 8 * v22);
                    if (!v26)
                    {
                      v22 = v25 + 4;
                      if (v25 + 4 >= v21)
                        goto LABEL_68;
                      v26 = *(_QWORD *)(v17 + 8 * v22);
                      if (!v26)
                      {
                        v27 = v25 + 5;
                        if (v27 >= v21)
                        {
LABEL_68:
                          swift_release(v16);
                          swift_bridgeObjectRelease(v16);
                          v2 = v145;
                          v56 = *(uint64_t *)((char *)&v145->isa
                                           + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_automationStepResults);
                          *(Class *)((char *)&v145->isa
                                   + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_automationStepResults) = (Class)v146;
                          swift_bridgeObjectRetain(v146);
                          swift_bridgeObjectRelease(v56);
                          goto LABEL_69;
                        }
                        v26 = *(_QWORD *)(v17 + 8 * v27);
                        if (!v26)
                        {
                          while (1)
                          {
                            v22 = v27 + 1;
                            if (__OFADD__(v27, 1))
                              break;
                            if (v22 >= v21)
                              goto LABEL_68;
                            v26 = *(_QWORD *)(v17 + 8 * v22);
                            ++v27;
                            if (v26)
                              goto LABEL_36;
                          }
                          __break(1u);
                          swift_unexpectedError(v14, "HDSViewService/HomePodSetupAutomation.swift", 43, 1, 99);
                          __break(1u);
                          return;
                        }
                        v22 = v27;
                      }
                    }
                  }
                }
              }
LABEL_36:
              v20 = (v26 - 1) & v26;
              v24 = __clz(__rbit64(v26)) + (v22 << 6);
            }
            sub_100012DD0((uint64_t)v16[6].isa + 40 * v24, (uint64_t)v154);
            v152[0] = v154[0];
            v152[1] = v154[1];
            v153 = v155;
            if (v16[2].isa)
            {
              v2 = v16;
              v28 = sub_10004A78C((uint64_t)v152);
              if ((v29 & 1) != 0)
              {
                sub_10000DB98((uint64_t)v16[7].isa + 32 * v28, (uint64_t)v150);
                if ((swift_dynamicCast(&v148, v150, v15, v14, 6) & 1) != 0)
                  break;
              }
            }
            sub_10000DAE8((uint64_t)v152);
          }
          v30 = v148;
          sub_100012DD0((uint64_t)v152, (uint64_t)v150);
          if ((swift_dynamicCast(&v148, v150, &type metadata for AnyHashable, &type metadata for String, 6) & 1) != 0)
            break;
          swift_bridgeObjectRelease(v30);
          sub_10000DAE8((uint64_t)v152);
        }
        v31 = v148;
        swift_bridgeObjectRetain(v30);
        sub_10000B918(v32, (uint64_t)v150);
        v33 = sub_10000E9EC(v150[0]);
        v35 = v34;
        if (v33 == 0x6E776F6E6B6E75 && v34 == 0xE700000000000000)
          break;
        v36 = _stringCompareWithSmolCheck(_:_:expecting:)(v33, v34, 0x6E776F6E6B6E75, 0xE700000000000000, 0);
        swift_bridgeObjectRelease(v35);
        sub_1000147E8((char *)v150, (uint64_t)&v148);
        if ((v36 & 1) != 0)
        {
LABEL_46:
          sub_10003521C((uint64_t)&v148 + 8, (uint64_t)v147, &qword_1000D6ED0);
          v37 = v147[3];
          sub_10000DC40((uint64_t)v147, &qword_1000D6ED0);
          if (v37)
            goto LABEL_52;
          swift_bridgeObjectRelease(*((_QWORD *)&v31 + 1));
          if (qword_1000D5528 != -1)
            swift_once(&qword_1000D5528, sub_100036700);
          v39 = type metadata accessor for Logger(0, v38);
          sub_10001118C(v39, (uint64_t)qword_1000D61D0);
          swift_bridgeObjectRetain(v30);
          v2 = Logger.logObject.getter(v40);
          v41 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v2, v41))
          {
            v135 = swift_slowAlloc(12, -1);
            v136 = swift_slowAlloc(32, -1);
            *(_QWORD *)&v148 = v136;
            *(_DWORD *)v135 = 136315138;
            swift_bridgeObjectRetain(v30);
            v43 = Dictionary.description.getter(v42, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
            v45 = v44;
            swift_bridgeObjectRelease(v30);
            *(_QWORD *)(v135 + 4) = sub_10003EF58(v43, v45, (uint64_t *)&v148);
            swift_bridgeObjectRelease_n(v30, 2);
            swift_bridgeObjectRelease(v45);
            _os_log_impl((void *)&_mh_execute_header, v2, v41, "HomePodSetupAutomation:Found Automation, but could not convert to choice %s", (uint8_t *)v135, 0xCu);
            swift_arrayDestroy(v136, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v136, -1, -1);
            swift_slowDealloc(v135, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n(v30, 2);
          }

          sub_100011384((uint64_t)v150);
          sub_10000DAE8((uint64_t)v152);
          v15 = (char *)&type metadata for Any + 8;
          v14 = v139;
          v21 = v140;
        }
        else
        {
          sub_100011384((uint64_t)&v148);
LABEL_52:
          swift_bridgeObjectRelease(v30);
          v21 = v140;
          v46 = v137[1];
          v47 = *v137 & 0xFFFFFFFFFFFFLL;
          if ((v46 & 0x2000000000000000) != 0)
            v47 = HIBYTE(v46) & 0xF;
          if (!v47)
            goto LABEL_64;
          if (v31 == __PAIR128__(0xEE0065646F637373, 0x615044454C746567))
          {
            v48 = 0xEE0065646F637373;
            goto LABEL_59;
          }
          if ((_stringCompareWithSmolCheck(_:_:expecting:)(v31, *((_QWORD *)&v31 + 1), 0x615044454C746567, 0xEE0065646F637373, 0) & 1) != 0)
          {
            v48 = *((_QWORD *)&v31 + 1);
LABEL_59:
            swift_bridgeObjectRelease(v48);
            v15 = (char *)&type metadata for Any + 8;
            if (qword_1000D5528 != -1)
              swift_once(&qword_1000D5528, sub_100036700);
            v50 = type metadata accessor for Logger(0, v49);
            v51 = sub_10001118C(v50, (uint64_t)qword_1000D61D0);
            v2 = Logger.logObject.getter(v51);
            v52 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v2, v52))
            {
              v53 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v53 = 0;
              _os_log_impl((void *)&_mh_execute_header, v2, v52, "HomePodSetupAutomation:Found Automation for getLEDPasscode, but rejecting because of forcedPasscode", v53, 2u);
              v54 = v53;
              v21 = v140;
              swift_slowDealloc(v54, -1, -1);
            }

            sub_100011384((uint64_t)v150);
            sub_10000DAE8((uint64_t)v152);
            v14 = v139;
          }
          else
          {
LABEL_64:
            sub_1000147E8((char *)v150, (uint64_t)&v148);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v146);
            v147[0] = v146;
            v2 = v147;
            sub_10004BFC0(&v148, v31, *((uint64_t *)&v31 + 1), isUniquelyReferenced_nonNull_native);
            v146 = v147[0];
            swift_bridgeObjectRelease(*((_QWORD *)&v31 + 1));
            swift_bridgeObjectRelease(0x8000000000000000);
            sub_100011384((uint64_t)v150);
            sub_10000DAE8((uint64_t)v152);
            v15 = (char *)&type metadata for Any + 8;
            v14 = v139;
          }
        }
      }
      swift_bridgeObjectRelease(0xE700000000000000);
      sub_1000147E8((char *)v150, (uint64_t)&v148);
      goto LABEL_46;
    }
  }
  else
  {
    sub_10000DC40((uint64_t)v150, &qword_1000D5820);
  }
LABEL_69:
  v57 = (Class *)((char *)&v2->isa + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_forcedStateSequence);
  swift_beginAccess((char *)v2 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_forcedStateSequence, v154, 1, 0);
  v58 = (_QWORD *)*v57;
  *v57 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v58);
  v59 = sub_100036790();
  v60 = String._bridgeToObjectiveC()();
  v61 = objc_msgSend(v59, "objectForKey:", v60);

  if (v61)
  {
    _bridgeAnyObjectToAny(_:)(&v148, v61);
    swift_unknownObjectRelease(v61);
  }
  else
  {
    v148 = 0u;
    v149 = 0u;
  }
  sub_10003521C((uint64_t)&v148, (uint64_t)v150, &qword_1000D5820);
  if (v151)
  {
    v62 = sub_10000D604(&qword_1000D6270);
    if ((swift_dynamicCast(v152, v150, (char *)&type metadata for Any + 8, v62, 6) & 1) != 0)
    {
      v138 = *(_QWORD *)&v152[0];
      v63 = *(_QWORD *)(*(_QWORD *)&v152[0] + 16);
      if (v63)
      {
        v64 = (unint64_t *)(*(_QWORD *)&v152[0] + 40);
        v65 = qword_1000D61D0;
        p_cb = &OBJC_PROTOCOL___RecognizerClassifierOutput.cb;
        v141 = v57;
        do
        {
          v67 = *(v64 - 1);
          v68 = *v64;
          swift_bridgeObjectRetain_n(*v64, 2);
          v69 = sub_100071EF0(v67, v68);
          if (v69 == 62)
          {
            if (*((_QWORD *)p_cb + 165) != -1)
              swift_once(&qword_1000D5528, sub_100036700);
            v71 = type metadata accessor for Logger(0, v70);
            sub_10001118C(v71, (uint64_t)v65);
            swift_bridgeObjectRetain(v68);
            v73 = Logger.logObject.getter(v72);
            v74 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v73, v74))
            {
              v75 = swift_slowAlloc(12, -1);
              v76 = p_cb;
              v77 = v65;
              v78 = swift_slowAlloc(32, -1);
              v150[0] = v78;
              *(_DWORD *)v75 = 136315138;
              swift_bridgeObjectRetain(v68);
              *(_QWORD *)(v75 + 4) = sub_10003EF58(v67, v68, v150);
              swift_bridgeObjectRelease_n(v68, 3);
              _os_log_impl((void *)&_mh_execute_header, v73, v74, "HomePodSetupAutomation: Found Automation screen name %s, but could not convert to valid HomePodSetupStep", (uint8_t *)v75, 0xCu);
              swift_arrayDestroy(v78, 1, (char *)&type metadata for Any + 8);
              v79 = v78;
              v65 = v77;
              p_cb = v76;
              v57 = v141;
              swift_slowDealloc(v79, -1, -1);
              swift_slowDealloc(v75, -1, -1);

            }
            else
            {

              swift_bridgeObjectRelease_n(v68, 2);
            }
          }
          else
          {
            v80 = v69;
            swift_bridgeObjectRelease(v68);
            swift_beginAccess(v57, v150, 33, 0);
            v81 = (_QWORD *)*v57;
            v82 = swift_isUniquelyReferenced_nonNull_native(*v57);
            *v57 = v81;
            if ((v82 & 1) == 0)
            {
              v81 = sub_10004A47C(0, v81[2] + 1, 1, v81);
              *v57 = v81;
            }
            v84 = v81[2];
            v83 = v81[3];
            if (v84 >= v83 >> 1)
            {
              v81 = sub_10004A47C((_QWORD *)(v83 > 1), v84 + 1, 1, v81);
              *v57 = v81;
            }
            v81[2] = v84 + 1;
            *((_BYTE *)v81 + v84 + 32) = v80;
            swift_endAccess(v150);
          }
          v64 += 2;
          --v63;
        }
        while (v63);
      }
      swift_bridgeObjectRelease(v138);
      if (qword_1000D5528 != -1)
        swift_once(&qword_1000D5528, sub_100036700);
      v86 = type metadata accessor for Logger(0, v85);
      sub_10001118C(v86, (uint64_t)qword_1000D61D0);
      v87 = v145;
      v88 = Logger.logObject.getter(v87);
      v90 = static os_log_type_t.default.getter(v88, v89);
      if (os_log_type_enabled(v88, v90))
      {
        v91 = (uint8_t *)swift_slowAlloc(12, -1);
        v92 = swift_slowAlloc(32, -1);
        v150[0] = v92;
        *(_DWORD *)v91 = 136315138;
        *(_QWORD *)&v148 = *v57;
        swift_bridgeObjectRetain(v148);
        v93 = sub_10000D604(&qword_1000D6278);
        v94 = String.init<A>(reflecting:)(&v148, v93);
        v96 = v95;
        *(_QWORD *)&v148 = sub_10003EF58(v94, v95, v150);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v148, (char *)&v148 + 8);

        swift_bridgeObjectRelease(v96);
        _os_log_impl((void *)&_mh_execute_header, v88, v90, "HomePodSetupAutomation: Following forced screen were loaded from userDefaults: %s", v91, 0xCu);
        swift_arrayDestroy(v92, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v92, -1, -1);
        swift_slowDealloc(v91, -1, -1);

      }
      else
      {

      }
    }
  }
  else
  {
    sub_10000DC40((uint64_t)v150, &qword_1000D5820);
  }
  v97 = objc_allocWithZone((Class)NSRegularExpression);
  v16 = sub_1000488D0(0x283D6E6565726373, 0xEC000000292A775CLL, 1);
  swift_bridgeObjectRelease(v146);
  v98 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v148 = 15;
  v150[0] = v142;
  v150[1] = v143;
  swift_bridgeObjectRetain(v143);
  v99 = sub_10000D604(&qword_1000D6258);
  v100 = sub_100038B4C();
  v101 = sub_100038B98();
  v102 = _NSRange.init<A, B>(_:in:)(&v148, v150, v99, &type metadata for String, v100, v101);
  v104 = -[NSObject firstMatchInString:options:range:](v16, "firstMatchInString:options:range:", v98, 0, v102, v103);

  if (v104)
  {
    v105 = Range<>.init(_:in:)(objc_msgSend(v104, "rangeAtIndex:", 1));
    if ((v107 & 1) == 0)
    {
      v108 = String.subscript.getter(v105, v106, v142, v143);
      v110 = v109;
      v111 = static String._fromSubstring(_:)(v108);
      v113 = v112;
      swift_bridgeObjectRelease(v110);
      v114 = sub_100071EF0(v111, v113);
      if (v114 != 62)
      {
        v115 = v114;
        swift_beginAccess(v57, v150, 33, 0);
        sub_100038BDC(0, 0, v115);
        swift_endAccess(v150);
      }
    }

  }
  v2 = v145;
  v116 = sub_100036790();
  v117 = String._bridgeToObjectiveC()();
  v118 = objc_msgSend(v116, "BOOLForKey:", v117);

  *((_BYTE *)&v145->isa + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_alwaysSelectDefault) = v118;
  if (v118)
    v120 = 0x64656C62616E65;
  else
    v120 = 0x64656C6261736964;
  if (v118)
    v14 = 0xE700000000000000;
  else
    v14 = 0xE800000000000000;
  v21 = OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_automationStepResults;
  if ((*(_QWORD **)((char *)&v145->isa + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_automationStepResults))[2]
    || v118)
  {
    v146 = v120;
    if (qword_1000D5528 != -1)
LABEL_113:
      swift_once(&qword_1000D5528, sub_100036700);
    v121 = type metadata accessor for Logger(0, v119);
    sub_10001118C(v121, (uint64_t)qword_1000D61D0);
    v122 = v2;
    v123 = v2;
    swift_bridgeObjectRetain(v14);
    v125 = Logger.logObject.getter(v124);
    v127 = static os_log_type_t.default.getter(v125, v126);
    if (os_log_type_enabled(v125, v127))
    {
      v128 = swift_slowAlloc(22, -1);
      v144 = v16;
      v129 = swift_slowAlloc(64, -1);
      v150[0] = v129;
      *(_DWORD *)v128 = 136315394;
      v130 = *(uint64_t *)((char *)&v122->isa + v21);
      swift_bridgeObjectRetain(v130);
      v132 = Dictionary.description.getter(v131, &type metadata for String, &type metadata for HomePodSetupStepResult, &protocol witness table for String);
      v134 = v133;
      swift_bridgeObjectRelease(v130);
      *(_QWORD *)&v148 = sub_10003EF58(v132, v134, v150);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v148, (char *)&v148 + 8);

      swift_bridgeObjectRelease(v134);
      *(_WORD *)(v128 + 12) = 2080;
      swift_bridgeObjectRetain(v14);
      *(_QWORD *)&v148 = sub_10003EF58(v146, v14, v150);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v148, (char *)&v148 + 8);
      swift_bridgeObjectRelease_n(v14, 3);
      _os_log_impl((void *)&_mh_execute_header, v125, v127, "HomePodSetupAutomation: Automation enabled with flow selection for these screens %s always select the defauls is %s", (uint8_t *)v128, 0x16u);
      swift_arrayDestroy(v129, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v129, -1, -1);
      swift_slowDealloc(v128, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v14, 2);
    }
  }
  else
  {
    swift_bridgeObjectRelease(v14);

  }
}

uint64_t sub_100037D20@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  _BYTE v32[48];
  _OWORD v33[2];
  uint64_t v34;
  _OWORD v35[2];
  __int128 v36;

  v3 = v2;
  v5 = sub_100069924(a1);
  v7 = v6;
  v8 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_automationStepResults);
  if (*(_QWORD *)(v8 + 16))
  {
    v9 = v5;
    swift_bridgeObjectRetain(v8);
    v10 = sub_10004A7C0(v9, v7);
    if ((v11 & 1) != 0)
    {
      sub_1000147E8((char *)(*(_QWORD *)(v8 + 56) + 48 * v10), a2);
    }
    else
    {
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      *(_OWORD *)(a2 + 32) = xmmword_100099470;
    }
    swift_bridgeObjectRelease(v7);
    v12 = v8;
  }
  else
  {
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = xmmword_100099470;
    v12 = v6;
  }
  swift_bridgeObjectRelease(v12);
  sub_100038B04(a2, (uint64_t)v35);
  v13 = v36;
  sub_10000DC40((uint64_t)v35, &qword_1000D6250);
  if (v13 != 1)
  {
    if (*(_QWORD *)(a2 + 32) == 1)
    {
      v15 = 0;
      v16 = 0xE000000000000000;
    }
    else
    {
      sub_1000147E8((char *)a2, (uint64_t)v35);
      v15 = sub_10000B764();
      v16 = v17;
      sub_100011384((uint64_t)v35);
    }
    if (qword_1000D5528 != -1)
      swift_once(&qword_1000D5528, sub_100036700);
    v18 = type metadata accessor for Logger(0, v14);
    sub_10001118C(v18, (uint64_t)qword_1000D61D0);
    v19 = swift_bridgeObjectRetain(v16);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(12, -1);
      v23 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v35[0] = v23;
      *(_DWORD *)v22 = 136315138;
      swift_bridgeObjectRetain(v16);
      *(_QWORD *)v32 = sub_10003EF58(v15, v16, (uint64_t *)v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v32, &v32[8]);
      swift_bridgeObjectRelease_n(v16, 3);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "HomePodSetupAutomation: Automation selection %s being applied.", v22, 0xCu);
      swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v23, -1, -1);
      swift_slowDealloc(v22, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v16, 2);
    }
  }
  sub_100038B04(a2, (uint64_t)v35);
  v24 = v36;
  result = sub_10000DC40((uint64_t)v35, &qword_1000D6250);
  if (v24 == 1 && *(_BYTE *)(v3 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_alwaysSelectDefault) == 1)
  {
    if (qword_1000D5528 != -1)
      swift_once(&qword_1000D5528, sub_100036700);
    v27 = type metadata accessor for Logger(0, v26);
    v28 = sub_10001118C(v27, (uint64_t)qword_1000D61D0);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "HomePodSetupAutomation: Automation always select default enabled selecting primary button.", v31, 2u);
      swift_slowDealloc(v31, -1, -1);
    }

    v34 = 0;
    memset(v33, 0, sizeof(v33));
    memset(&v32[8], 0, 40);
    v32[0] = 1;
    sub_100011340((uint64_t)v33, (uint64_t)&v32[8], &qword_1000D6ED0);
    v35[0] = *(_OWORD *)v32;
    v35[1] = *(_OWORD *)&v32[16];
    v36 = *(_OWORD *)&v32[32];
    return sub_100011340((uint64_t)v35, a2, &qword_1000D6250);
  }
  return result;
}

uint64_t sub_100038124(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char v26;
  int v27;
  uint64_t v28;

  v5 = OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_testMode;
  if (!*(_BYTE *)(v2 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_testMode)
    && !*(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_testFlags))
  {
    return 0;
  }
  v6 = (_QWORD *)(a2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_iCloudId);
  v7 = *(_QWORD *)(a2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_iCloudId + 8);
  *v6 = 0xD000000000000010;
  v6[1] = 0x800000010009F780;
  swift_bridgeObjectRelease(v7);
  v8 = (_QWORD *)(a2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_iTunesId);
  v9 = *(_QWORD *)(a2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_iTunesId + 8);
  *v8 = 0xD000000000000013;
  v8[1] = 0x800000010009F7A0;
  swift_bridgeObjectRelease(v9);
  v10 = (_QWORD *)(a2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceGUID);
  v11 = *(_QWORD *)(a2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceGUID + 8);
  *v10 = 0xD000000000000019;
  v10[1] = 0x800000010009F7C0;
  swift_bridgeObjectRelease(v11);
  v12 = a2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceSerialNumber;
  v13 = *(_QWORD *)(a2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceSerialNumber + 8);
  strcpy((char *)(a2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceSerialNumber), "FFMC80BDPM4R");
  *(_BYTE *)(v12 + 13) = 0;
  *(_WORD *)(v12 + 14) = -5120;
  swift_bridgeObjectRelease(v13);
  *(_BYTE *)(a2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_selectedHomeIsROAR) = 0;
  *(_BYTE *)(a2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_subscribedToMusicService) = 1;
  v14 = OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_testFlags;
  v15 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_testFlags);
  if ((v15 & 8) != 0)
    v16 = 31;
  else
    v16 = a1;
  if ((v15 & 0x10) != 0)
    v16 = 33;
  if ((v15 & 0x20) != 0)
    v16 = 27;
  if ((v15 & 0x40) != 0)
    v16 = 28;
  if ((v15 & 0x100) != 0)
    v16 = 36;
  if ((v15 & 0x200) != 0)
    v16 = 38;
  if ((v15 & 0x800) != 0)
    v16 = 16;
  if ((v15 & 0x1000) != 0)
    v16 = 17;
  if ((v15 & 0x2000) != 0)
    v16 = 18;
  if ((v15 & 0x8080) != 0)
    v16 = 40;
  if ((v15 & 0x10000) != 0)
    v16 = 30;
  if ((v15 & 0x20000) != 0)
    v16 = 9;
  if ((v15 & 0x40000) != 0)
    v16 = 8;
  if ((v15 & 0x2000000) != 0)
    v16 = 32;
  if ((v15 & 0x4000000) != 0)
    v16 = 29;
  if ((v15 & 0x8000000) != 0)
    v16 = 11;
  if ((v15 & 0x20000000) != 0)
    v16 = 41;
  if ((v15 & 0x200000000) != 0)
    v16 = 25;
  if ((v15 & 0x400000000) != 0)
    v16 = 57;
  if ((v15 & 0x800000000) != 0)
    v16 = 16;
  if ((v15 & 0x4000) != 0)
    v16 = 21;
  if ((v15 & 0x2000000000) != 0)
    v16 = 10;
  if ((v15 & 0x4000000000) != 0)
    v16 = 23;
  if ((v15 & 0x400) != 0)
    v16 = 15;
  if ((v15 & 0x200000) != 0)
  {
    v17 = v8[1];
    *v8 = 0xD000000000000010;
    v8[1] = 0x800000010009F780;
    swift_bridgeObjectRelease(v17);
    v15 = *(_QWORD *)(v2 + v14);
    v16 = 15;
  }
  if ((v15 & 0x10000000) != 0)
    v16 = 20;
  if ((v15 & 0x80000) != 0)
    v16 = 14;
  if ((v15 & 0x100000) != 0)
    v16 = 12;
  if ((v15 & 0x1000000000) != 0)
    *(_BYTE *)(a2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode) = 5;
  if ((v15 & 0x10000000000) != 0)
    *(_BYTE *)(a2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode) = 6;
  if ((v15 & 0x8000000000) != 0)
    v18 = 24;
  else
    v18 = v16;
  v19 = sub_100069924(v18);
  v21 = v20;
  v22 = sub_100069924(a1);
  if (v19 == v22 && v21 == v23)
  {
    swift_bridgeObjectRelease_n(v21, 2);
LABEL_74:
    v27 = *(unsigned __int8 *)(v2 + v5);
    switch(v27)
    {
      case 1:
        v18 = 39;
        break;
      case 14:
        v18 = 34;
        break;
      case 5:
        v18 = 35;
        break;
    }
    goto LABEL_80;
  }
  v25 = v23;
  v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v22, v23, 0);
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v25);
  if ((v26 & 1) != 0)
    goto LABEL_74;
LABEL_80:
  v28 = v18;
  swift_retain(a2);
  return v28;
}

void sub_1000384C4(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  NSString v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  NSObject *v20;
  uint64_t v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33[5];
  __int128 v34;
  __int128 v35;

  v2 = v1;
  v4 = OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_testMode;
  v2[OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_testMode] = 0;
  v5 = OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_testFlags;
  *(_QWORD *)&v2[OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_testFlags] = 0;
  v31 = 0xD000000000000010;
  v32 = 0x800000010009F6D0;
  AnyHashable.init<A>(_:)(v33, &v31, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v6 = sub_10004A78C((uint64_t)v33), (v7 & 1) != 0))
  {
    sub_10000DB98(*(_QWORD *)(a1 + 56) + 32 * v6, (uint64_t)&v34);
  }
  else
  {
    v34 = 0u;
    v35 = 0u;
  }
  sub_10000DAE8((uint64_t)v33);
  if (!*((_QWORD *)&v35 + 1))
  {
    sub_10000DC40((uint64_t)&v34, &qword_1000D5820);
    goto LABEL_13;
  }
  if ((swift_dynamicCast(&v31, &v34, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {
LABEL_13:
    v11 = 0;
    goto LABEL_14;
  }
  v9 = v31;
  v8 = v32;
  if (v31 == 0xD000000000000024)
  {
    v10 = 0x800000010009F6F0;
    if (v32 == 0x800000010009F6F0)
      goto LABEL_11;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000024, 0x800000010009F6F0, v31, v32, 0) & 1) == 0)
  {
    if (v9 == 0xD000000000000024)
    {
      v29 = 0x800000010009F720;
      if (v8 == 0x800000010009F720)
        goto LABEL_35;
    }
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000024, 0x800000010009F720, v9, v8, 0) & 1) != 0)
    {
      v29 = v8;
LABEL_35:
      swift_bridgeObjectRelease(v29);
      v11 = 5;
      goto LABEL_14;
    }
    if (v9 == 0xD000000000000024 && v8 == 0x800000010009F750)
    {
      swift_bridgeObjectRelease(0x800000010009F750);
      v11 = 14;
      goto LABEL_14;
    }
    v30 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000024, 0x800000010009F750, v9, v8, 0);
    swift_bridgeObjectRelease(v8);
    if ((v30 & 1) != 0)
    {
      v11 = 14;
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  v10 = v8;
LABEL_11:
  swift_bridgeObjectRelease(v10);
  v11 = 1;
LABEL_14:
  v2[v4] = v11;
  v31 = 0x6172615074736574;
  v32 = 0xEA0000000000736DLL;
  AnyHashable.init<A>(_:)(v33, &v31, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v12 = sub_10004A78C((uint64_t)v33), (v13 & 1) != 0))
  {
    sub_10000DB98(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)&v34);
  }
  else
  {
    v34 = 0u;
    v35 = 0u;
  }
  sub_10000DAE8((uint64_t)v33);
  if (*((_QWORD *)&v35 + 1))
  {
    if ((swift_dynamicCast(&v31, &v34, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
    {
      v15 = v32;
      v16 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v15);
      v17 = sub_1000066E0(v16);

      *(_QWORD *)&v2[v5] = v17;
    }
    if (!v2[v4])
    {
LABEL_24:
      if (!*(_QWORD *)&v2[v5])
        return;
    }
  }
  else
  {
    sub_10000DC40((uint64_t)&v34, &qword_1000D5820);
    if (!v2[v4])
      goto LABEL_24;
  }
  if (qword_1000D5528 != -1)
    swift_once(&qword_1000D5528, sub_100036700);
  v18 = type metadata accessor for Logger(0, v14);
  sub_10001118C(v18, (uint64_t)qword_1000D61D0);
  v19 = v2;
  v20 = Logger.logObject.getter(v19);
  v22 = static os_log_type_t.default.getter(v20, v21);
  if (os_log_type_enabled(v20, v22))
  {
    v23 = swift_slowAlloc(22, -1);
    v24 = swift_slowAlloc(32, -1);
    v33[0] = v24;
    *(_DWORD *)v23 = 136315394;
    v25 = sub_100042F38(v2[v4]);
    v27 = v26;
    *(_QWORD *)&v34 = sub_10003EF58(v25, v26, v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, (char *)&v34 + 8);

    swift_bridgeObjectRelease(v27);
    *(_WORD *)(v23 + 12) = 2048;
    v28 = *(_QWORD *)&v2[v5];

    *(_QWORD *)&v34 = v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, (char *)&v34 + 8);

    _os_log_impl((void *)&_mh_execute_header, v20, v22, "Testing: testMode is %s  flags are %llu", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v23, -1, -1);

  }
  else
  {

  }
}

id HomePodSetupAutomation.init()()
{
  char *v0;
  uint64_t v1;
  char *v2;
  char *v3;
  objc_super v5;

  v1 = OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_automationStepResults;
  v2 = v0;
  *(_QWORD *)&v0[v1] = sub_10000C960((uint64_t)_swiftEmptyArrayStorage);
  v2[OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_alwaysSelectDefault] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation____lazy_storage___userDefaults] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_forcedStateSequence] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v2[OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_indexToNextState] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_testFlags] = 0;
  v3 = &v2[OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_forcedPasscode];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0xE000000000000000;
  v2[OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_testMode] = 0;

  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for HomePodSetupAutomation();
  return objc_msgSendSuper2(&v5, "init");
}

uint64_t type metadata accessor for HomePodSetupAutomation()
{
  return objc_opt_self(_TtC14HDSViewService22HomePodSetupAutomation);
}

id HomePodSetupAutomation.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupAutomation();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100038B04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000D604(&qword_1000D6250);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100038B4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D6260;
  if (!qword_1000D6260)
  {
    v1 = sub_100012CC0(&qword_1000D6258);
    result = swift_getWitnessTable(&protocol conformance descriptor for PartialRangeFrom<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1000D6260);
  }
  return result;
}

unint64_t sub_100038B98()
{
  unint64_t result;

  result = qword_1000D6268;
  if (!qword_1000D6268)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1000D6268);
  }
  return result;
}

char *sub_100038BDC(uint64_t a1, int64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v5;
  int64_t v6;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  char *result;
  int64_t v13;
  _QWORD *v14;
  _BYTE *v15;
  uint64_t v16;
  size_t v17;
  char *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  char v22;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v5 = (_QWORD *)*v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  result = (char *)swift_isUniquelyReferenced_nonNull_native(*v3);
  if (!(_DWORD)result || v10 > v5[3] >> 1)
  {
    if (v6 <= v10)
      v13 = v6 + v9;
    else
      v13 = v6;
    result = (char *)sub_10004A47C(result, v13, 1, v5);
    v5 = result;
  }
  v14 = v5 + 4;
  v15 = (char *)v5 + a1 + 32;
  if (!v9)
    goto LABEL_20;
  v16 = v5[2];
  v17 = v16 - a2;
  if (__OFSUB__(v16, a2))
    goto LABEL_26;
  if ((v17 & 0x8000000000000000) == 0)
  {
    result = v15 + 1;
    v18 = (char *)v14 + a2;
    if (v15 + 1 != (char *)v14 + a2 || result >= &v18[v17])
      result = (char *)memmove(result, v18, v17);
    v19 = v5[2];
    v20 = __OFADD__(v19, v9);
    v21 = v19 + v9;
    if (!v20)
    {
      v5[2] = v21;
LABEL_20:
      *v15 = a3;
      *v3 = v5;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  v22 = 2;
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v22, 1046, 0);
  __break(1u);
  return result;
}

void sub_100038D38(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void);
  id v5;

  v4 = *(void (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4();
  swift_release(v3);

}

uint64_t sub_100038D88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000111E8(v2, qword_1000D6288);
  v3 = sub_10001118C(v2, (uint64_t)qword_1000D6288);
  if (qword_1000D55C0 != -1)
    swift_once(&qword_1000D55C0, sub_100058090);
  v4 = sub_10001118C(v2, (uint64_t)qword_1000DB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

id sub_100038E18(void *a1)
{
  _BYTE *v1;
  char *v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  objc_super v14;

  v3 = &v1[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_presenter];
  *((_QWORD *)v3 + 1) = 0;
  swift_unknownObjectWeakInit(v3, 0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_movieView] = 0;
  v4 = &v1[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_viewModel];
  v5 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_images] = _swiftEmptyArrayStorage;
  v6 = &v1[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_bodyText];
  *v6 = 0;
  v6[1] = 0xE000000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_style] = 0;
  v1[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_loadedMovie] = 0;
  v7 = objc_allocWithZone((Class)type metadata accessor for HomePodSetupIconContentView());
  v8 = v1;
  v9 = objc_msgSend(v7, "initWithCardStyle:", 0);
  *(_QWORD *)&v8[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_myContentView] = v9;
  v10 = v9;
  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v14.receiver = v8;
  v14.super_class = (Class)type metadata accessor for HomePodSetupIconContentViewController(0);
  v11 = v10;
  v12 = objc_msgSendSuper2(&v14, "initWithContentView:", v11);

  return v12;
}

void sub_100038FA0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char *v11;
  objc_class *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  NSString v31;
  void *v32;
  id v33;
  NSString v34;
  NSString v35;
  NSString v36;
  NSString v37;
  id v38;
  uint8_t *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t aBlock[5];
  uint64_t v43;
  _BYTE v44[24];
  objc_super v45;

  v1 = v0;
  v2 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v2);
  v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  v6 = *((_QWORD *)v5 - 1);
  v7 = __chkstk_darwin(v5);
  v9 = (uint64_t *)((char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  v11 = (char *)&v39 - v10;
  v12 = (objc_class *)type metadata accessor for HomePodSetupIconContentViewController(0);
  v45.receiver = v1;
  v45.super_class = v12;
  objc_msgSendSuper2(&v45, "viewDidLoad");
  v13 = (uint64_t)v1 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_viewModel;
  swift_beginAccess((char *)v1 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_viewModel, v44, 0, 0);
  sub_10000E0F0(v13, (uint64_t)v4, (uint64_t *)&unk_1000D6EC0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10000DC40((uint64_t)v4, (uint64_t *)&unk_1000D6EC0);
    if (qword_1000D5538 != -1)
      swift_once(&qword_1000D5538, sub_100038D88);
    v15 = type metadata accessor for Logger(0, v14);
    v16 = sub_10001118C(v15, (uint64_t)qword_1000D6288);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "HomePodSetupIconContent: viewDidLoad failed because viewModel not set.", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

  }
  else
  {
    sub_100011228((uint64_t)v4, (uint64_t)v11, type metadata accessor for HomePodSetupViewModel);
    if (qword_1000D5538 != -1)
      swift_once(&qword_1000D5538, sub_100038D88);
    v21 = type metadata accessor for Logger(0, v20);
    sub_10001118C(v21, (uint64_t)qword_1000D6288);
    v22 = sub_100035CDC((uint64_t)v11, (uint64_t)v9, type metadata accessor for HomePodSetupViewModel);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(12, -1);
      v26 = swift_slowAlloc(32, -1);
      aBlock[0] = v26;
      v40 = v1;
      *(_DWORD *)v25 = 136315138;
      v39 = v25 + 4;
      v28 = *v9;
      v27 = v9[1];
      swift_bridgeObjectRetain(v27);
      v41 = sub_10003EF58(v28, v27, aBlock);
      v1 = v40;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, aBlock);
      swift_bridgeObjectRelease(v27);
      sub_10001126C((uint64_t)v9, type metadata accessor for HomePodSetupViewModel);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "HomePodSetupIconContent: viewDidLoad with title %s", v25, 0xCu);
      swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1, -1);
      swift_slowDealloc(v25, -1, -1);
    }
    else
    {
      sub_10001126C((uint64_t)v9, type metadata accessor for HomePodSetupViewModel);
    }

    sub_10003BF7C((uint64_t)v11);
    (*(void (**)(char *))((swift_isaMask & *v1) + 0x150))(v11);
    if (v11[v5[39]] == 1)
    {
      v29 = swift_allocObject(&unk_1000C3380, 24, 7);
      *(_QWORD *)(v29 + 16) = v1;
      v30 = v1;
      v31 = String._bridgeToObjectiveC()();
      aBlock[4] = (uint64_t)sub_10003FBA0;
      v43 = v29;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100038D38;
      aBlock[3] = (uint64_t)&unk_1000C3398;
      v32 = _Block_copy(aBlock);
      v33 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v31, 0, v32);

      _Block_release(v32);
      objc_msgSend(v30, "setDismissButtonAction:", v33, swift_release(v43).n128_f64[0]);

    }
    else if (v11[v5[32]] == 1)
    {
      sub_100039534((uint64_t)v11);
    }
    else if ((v11[v5[18]] & 2) == 0 && *(_QWORD *)&v11[v5[19] + 8])
    {
      v34 = String._bridgeToObjectiveC()();
      v35 = String._bridgeToObjectiveC()();
      v36 = String._bridgeToObjectiveC()();
      v37 = String._bridgeToObjectiveC()();
      v38 = objc_msgSend(v1, "dismissalConfirmationActionWithTitle:message:confirmButtonTitle:cancelButtonTitle:", v34, v35, v36, v37);

      objc_msgSend(v1, "setDismissButtonAction:", v38);
    }
    sub_10003B8A0((uint64_t)v11);
    sub_10001126C((uint64_t)v11, type metadata accessor for HomePodSetupViewModel);
  }
}

uint64_t sub_100039534(uint64_t a1)
{
  uint64_t result;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = type metadata accessor for HomePodSetupViewModel(0);
  v3 = (uint64_t *)(a1 + *(int *)(result + 80));
  v4 = v3[1];
  if (v4)
  {
    v5 = *(_QWORD *)(a1 + *(int *)(result + 40));
    if (*(_QWORD *)(v5 + 16))
    {
      v6 = *v3;
      v8 = v3[2];
      v7 = v3[3];
      v10 = v3[4];
      v9 = v3[5];
      v11 = v3[8];
      v13 = v3[6];
      v14 = v3[7];
      v12 = v3[9];
      swift_bridgeObjectRetain_n(v5, 2);
      sub_10003FBB8(v6, v4, v8, v7, v10, v9, v13, v14, v11, v12);
      __asm { BR              X8 }
    }
  }
  return result;
}

void sub_100039B44()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRetain(v0);
  swift_bridgeObjectRelease(v1);
  JUMPOUT(0x1000399F8);
}

double sub_100039C0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for HomePodSetupViewModel(0) + 40));
  v3 = swift_allocObject(&unk_1000C30B0, 24, 7);
  swift_unknownObjectWeakInit(v3 + 16, v1);
  sub_10007E6FC(v2, (uint64_t)sub_10003FB10, v3);
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  return result;
}

void sub_100039C7C(unsigned __int8 *a1, uint64_t a2)
{
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  Class isa;
  id v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t Strong;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  void *v50;
  _BYTE v51[48];
  _OWORD v52[2];
  uint64_t v53;
  __int128 aBlock;
  __int128 v55;
  __int128 v56;
  _BYTE v57[32];

  v3 = *a1;
  if (qword_1000D5538 != -1)
    swift_once(&qword_1000D5538, sub_100038D88);
  v4 = a2 + 16;
  v5 = type metadata accessor for Logger(0, a2);
  v6 = sub_10001118C(v5, (uint64_t)qword_1000D6288);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = v3;
    v11 = swift_slowAlloc(32, -1);
    *(_QWORD *)&aBlock = v11;
    *(_DWORD *)v9 = 136315138;
    v12 = sub_10000E9EC(v10);
    v14 = v13;
    *(_QWORD *)v51 = sub_10003EF58(v12, v13, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v51, &v51[8]);
    swift_bridgeObjectRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "HomePodSetupIconContent: User tapped on button: %s", v9, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    v15 = v11;
    v3 = v10;
    v4 = a2 + 16;
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }

  v16 = sub_10000E9EC(v3);
  v18 = v17;
  if (v16 == 0xD000000000000010 && v17 == 0x800000010009C930)
  {
    swift_bridgeObjectRelease(0x800000010009C930);
LABEL_9:
    v20 = sub_10000D604((uint64_t *)&unk_1000D71A0);
    v21 = swift_allocObject(v20, 64, 7);
    *(_OWORD *)(v21 + 16) = xmmword_100099220;
    *(_QWORD *)(v21 + 56) = &type metadata for String;
    *(_QWORD *)(v21 + 32) = 0xD000000000000010;
    *(_QWORD *)(v21 + 40) = 0x800000010009FC70;
    v22 = objc_allocWithZone((Class)UIActivityViewController);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v21);
    v24 = objc_msgSend(v22, "initWithActivityItems:applicationActivities:", isa, 0);

    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "HomePodSetupIconContent: showing sharesheet", v28, 2u);
      swift_slowDealloc(v28, -1, -1);
    }

    swift_beginAccess(v4, v51, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v4);
    if (Strong)
    {
      v30 = (void *)Strong;
      v31 = swift_allocObject(&unk_1000C30D8, 33, 7);
      *(_QWORD *)(v31 + 16) = v24;
      *(_QWORD *)(v31 + 24) = a2;
      *(_BYTE *)(v31 + 32) = v3;
      *(_QWORD *)&v56 = sub_10003FB44;
      *((_QWORD *)&v56 + 1) = v31;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      *(_QWORD *)&v55 = sub_10007C6B4;
      *((_QWORD *)&v55 + 1) = &unk_1000C30F0;
      v32 = _Block_copy(&aBlock);
      v33 = *((_QWORD *)&v56 + 1);
      v34 = v24;
      swift_retain(a2);
      objc_msgSend(v30, "presentViewController:animated:completion:", v34, 0, v32, swift_release(v33).n128_f64[0]);

      _Block_release(v32);
    }
    else
    {

    }
    return;
  }
  v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, 0xD000000000000010, 0x800000010009C930, 0);
  swift_bridgeObjectRelease(v18);
  if ((v19 & 1) != 0)
    goto LABEL_9;
  v35 = sub_10000E9EC(v3);
  v37 = v36;
  if (v35 == 0xD000000000000010 && v36 == 0x800000010009C8F0)
  {
    swift_bridgeObjectRelease(0x800000010009C8F0);
  }
  else
  {
    v38 = _stringCompareWithSmolCheck(_:_:expecting:)(v35, v36, 0xD000000000000010, 0x800000010009C8F0, 0);
    swift_bridgeObjectRelease(v37);
    if ((v38 & 1) == 0)
    {
      v45 = sub_10000E9EC(v3);
      v47 = v46;
      if (v45 == 0xD000000000000014 && v46 == 0x800000010009C8D0)
      {
        swift_bridgeObjectRelease(0x800000010009C8D0);
      }
      else
      {
        v48 = _stringCompareWithSmolCheck(_:_:expecting:)(v45, v46, 0xD000000000000014, 0x800000010009C8D0, 0);
        swift_bridgeObjectRelease(v47);
        if ((v48 & 1) == 0)
          goto LABEL_20;
      }
      swift_beginAccess(v4, &aBlock, 0, 0);
      v49 = swift_unknownObjectWeakLoadStrong(v4);
      if (v49)
      {
        v50 = (void *)v49;
        sub_10003A8C8();

      }
      return;
    }
  }
  if ((objc_msgSend((id)objc_opt_self(HFUtilities), "isSiriForiCloudEnabled") & 1) != 0)
  {
LABEL_20:
    swift_beginAccess(v4, v57, 0, 0);
    v39 = swift_unknownObjectWeakLoadStrong(v4);
    if (v39)
    {
      v40 = (void *)v39;
      v41 = swift_unknownObjectWeakLoadStrong(v39 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_presenter);

      if (v41)
      {
        v53 = 0;
        memset(v52, 0, sizeof(v52));
        memset(&v51[8], 0, 40);
        v51[0] = v3;
        sub_100011340((uint64_t)v52, (uint64_t)&v51[8], &qword_1000D6ED0);
        aBlock = *(_OWORD *)v51;
        v55 = *(_OWORD *)&v51[16];
        v56 = *(_OWORD *)&v51[32];
        sub_10006B04C((char *)&aBlock);
        swift_unknownObjectRelease(v41);
        sub_100011384((uint64_t)&aBlock);
      }
    }
    return;
  }
  swift_beginAccess(v4, &aBlock, 0, 0);
  v42 = swift_unknownObjectWeakLoadStrong(v4);
  if (v42)
  {
    v44 = (void *)v42;
    sub_10003A480(v42, v43);

  }
}

void sub_10003A238(void *a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD v14[5];
  uint64_t v15;

  if (qword_1000D5538 != -1)
    swift_once(&qword_1000D5538, sub_100038D88);
  v6 = type metadata accessor for Logger(0, a2);
  v7 = sub_10001118C(v6, (uint64_t)qword_1000D6288);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "HomePodSetupIconContent: dismissing sharesheet", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  v11 = swift_allocObject(&unk_1000C3128, 25, 7);
  *(_QWORD *)(v11 + 16) = a2;
  *(_BYTE *)(v11 + 24) = a3;
  v14[4] = sub_10003FB74;
  v15 = v11;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_10007C6B4;
  v14[3] = &unk_1000C3140;
  v12 = _Block_copy(v14);
  v13 = v15;
  swift_retain(a2);
  objc_msgSend(a1, "dismissViewControllerAnimated:completion:", 0, v12, swift_release(v13).n128_f64[0]);
  _Block_release(v12);
}

void sub_10003A3B4(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  _BYTE v7[48];
  _OWORD v8[2];
  uint64_t v9;
  _OWORD v10[3];
  _BYTE v11[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_presenter);

    if (v6)
    {
      v9 = 0;
      memset(v8, 0, sizeof(v8));
      memset(&v7[8], 0, 40);
      v7[0] = a2;
      sub_100011340((uint64_t)v8, (uint64_t)&v7[8], &qword_1000D6ED0);
      v10[0] = *(_OWORD *)v7;
      v10[1] = *(_OWORD *)&v7[16];
      v10[2] = *(_OWORD *)&v7[32];
      sub_10006B04C((char *)v10);
      swift_unknownObjectRelease(v6);
      sub_100011384((uint64_t)v10);
    }
  }
}

void sub_10003A480(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  NSString v18;
  id v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  NSString v26;
  void *v27;
  void *v28;
  id v29;
  NSString v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  NSString v36;
  void *v37;
  id v38;
  void **v39;
  uint64_t v40;
  void (*v41)(uint64_t, void *);
  void *v42;
  uint64_t (*v43)(uint64_t);
  uint64_t v44;

  v3 = v2;
  if (qword_1000D5538 != -1)
    swift_once(&qword_1000D5538, sub_100038D88);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10001118C(v4, (uint64_t)qword_1000D6288);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "HomePodSetupIconContent: presentRMViCloudEnable", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  v9 = String._bridgeToObjectiveC()();
  v10 = sub_100006354(v9);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v12 = v11;

  v13 = String._bridgeToObjectiveC()();
  v14 = sub_100006354(v13);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v16 = v15;

  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v16);
  v19 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v17, v18, 1);

  v20 = String._bridgeToObjectiveC()();
  v21 = sub_100006354(v20);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v23 = v22;

  v24 = swift_allocObject(&unk_1000C3178, 24, 7);
  *(_QWORD *)(v24 + 16) = v3;
  v25 = v3;
  v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v23);
  v43 = sub_10003FB80;
  v44 = v24;
  v39 = _NSConcreteStackBlock;
  v40 = 1107296256;
  v41 = sub_100038D38;
  v42 = &unk_1000C3190;
  v27 = _Block_copy(&v39);
  swift_release(v44);
  v28 = (void *)objc_opt_self(UIAlertAction);
  v29 = objc_msgSend(v28, "actionWithTitle:style:handler:", v26, 0, v27);
  _Block_release(v27);

  objc_msgSend(v19, "addAction:", v29);
  v30 = String._bridgeToObjectiveC()();
  v31 = sub_100006354(v30);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
  v33 = v32;

  v34 = swift_allocObject(&unk_1000C31C8, 24, 7);
  *(_QWORD *)(v34 + 16) = v25;
  v35 = v25;
  v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v33);
  v43 = sub_10003FB88;
  v44 = v34;
  v39 = _NSConcreteStackBlock;
  v40 = 1107296256;
  v41 = sub_100038D38;
  v42 = &unk_1000C31E0;
  v37 = _Block_copy(&v39);
  v38 = objc_msgSend(v28, "actionWithTitle:style:handler:", v36, 1, v37, swift_release(v44).n128_f64[0]);
  _Block_release(v37);

  objc_msgSend(v19, "addAction:", v38);
  objc_msgSend(v19, "setPreferredAction:", v29);
  objc_msgSend(v35, "presentViewController:animated:completion:", v19, 1, 0);

}

void sub_10003A8C8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  NSString v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  NSString v30;
  NSString v31;
  id v32;
  NSString v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  NSString v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  NSString v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  NSString v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  NSString v55;
  NSString v56;
  id v57;
  NSString v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSString v63;
  void *v64;
  void *v65;
  id v66;
  NSString v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  NSString v72;
  void *v73;
  char *v74;
  void **aBlock;
  uint64_t v76;
  void (*v77)(uint64_t, void *);
  void *v78;
  void *v79;
  uint64_t v80;
  char v81[24];

  v1 = v0;
  v2 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v2);
  v4 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for HomePodSetupViewModel(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t)&v1[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_viewModel];
  swift_beginAccess(&v1[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_viewModel], v81, 0, 0);
  sub_10000E0F0(v9, (uint64_t)v4, (uint64_t *)&unk_1000D6EC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10000DC40((uint64_t)v4, (uint64_t *)&unk_1000D6EC0);
    if (qword_1000D5538 != -1)
      swift_once(&qword_1000D5538, sub_100038D88);
    v11 = type metadata accessor for Logger(0, v10);
    v12 = sub_10001118C(v11, (uint64_t)qword_1000D6288);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "HomePodSetupIconContent: presentCancelSUAcknowledgement skipped since viewmodel is nil", v15, 2u);
      swift_slowDealloc(v15, -1, -1);
    }

  }
  else
  {
    sub_100011228((uint64_t)v4, (uint64_t)v8, type metadata accessor for HomePodSetupViewModel);
    if (v8[*(int *)(v5 + 136)] == 1)
    {
      if (qword_1000D5538 != -1)
        swift_once(&qword_1000D5538, sub_100038D88);
      v17 = type metadata accessor for Logger(0, v16);
      v18 = sub_10001118C(v17, (uint64_t)qword_1000D6288);
      v19 = Logger.logObject.getter(v18);
      v20 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v21 = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "HomePodSetupIconContent: addButtonActions cancel tapped when SUBS finished", v21, 2u);
        swift_slowDealloc(v21, -1, -1);
      }

      v22 = String._bridgeToObjectiveC()();
      v23 = sub_100006354(v22);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      v25 = v24;

      v26 = String._bridgeToObjectiveC()();
      v27 = sub_100006354(v26);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      v29 = v28;

      v30 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v25);
      v31 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v29);
      v32 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v30, v31, 1);

      v33 = String._bridgeToObjectiveC()();
      v34 = sub_100006354(v33);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
      v36 = v35;

      v37 = swift_allocObject(&unk_1000C32B8, 24, 7);
      *(_QWORD *)(v37 + 16) = v32;
      v38 = v32;
      v39 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v36);
      v79 = sub_10003FCC0;
      v80 = v37;
      aBlock = _NSConcreteStackBlock;
      v76 = 1107296256;
      v77 = sub_100038D38;
      v78 = &unk_1000C32D0;
      v40 = _Block_copy(&aBlock);
      swift_release(v80);
      v41 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v39, 0, v40);
      _Block_release(v40);

      objc_msgSend(v38, "addAction:", v41);
      objc_msgSend(v38, "setPreferredAction:", v41);
      objc_msgSend(v1, "presentViewController:animated:completion:", v38, 1, 0);
    }
    else
    {
      if (qword_1000D5538 != -1)
        swift_once(&qword_1000D5538, sub_100038D88);
      v42 = type metadata accessor for Logger(0, v16);
      v43 = sub_10001118C(v42, (uint64_t)qword_1000D6288);
      v44 = Logger.logObject.getter(v43);
      v45 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v44, v45))
      {
        v46 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v46 = 0;
        _os_log_impl((void *)&_mh_execute_header, v44, v45, "HomePodSetupIconContent: addButtonActions cancel tapped, presenting confirmation alert", v46, 2u);
        swift_slowDealloc(v46, -1, -1);
      }

      v47 = String._bridgeToObjectiveC()();
      v48 = sub_100006354(v47);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
      v50 = v49;

      v51 = String._bridgeToObjectiveC()();
      v52 = sub_100006354(v51);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
      v54 = v53;

      v55 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v50);
      v56 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v54);
      v57 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v55, v56, 1);

      v58 = String._bridgeToObjectiveC()();
      v59 = sub_100006354(v58);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v59);
      v61 = v60;

      v62 = swift_allocObject(&unk_1000C3218, 24, 7);
      *(_QWORD *)(v62 + 16) = v1;
      v74 = v1;
      v63 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v61);
      v79 = sub_10003FB90;
      v80 = v62;
      aBlock = _NSConcreteStackBlock;
      v76 = 1107296256;
      v77 = sub_100038D38;
      v78 = &unk_1000C3230;
      v64 = _Block_copy(&aBlock);
      swift_release(v80);
      v65 = (void *)objc_opt_self(UIAlertAction);
      v66 = objc_msgSend(v65, "actionWithTitle:style:handler:", v63, 0, v64);
      _Block_release(v64);

      objc_msgSend(v57, "addAction:", v66);
      v67 = String._bridgeToObjectiveC()();
      v68 = sub_100006354(v67);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v68);
      v70 = v69;

      v71 = swift_allocObject(&unk_1000C3268, 24, 7);
      *(_QWORD *)(v71 + 16) = v57;
      v41 = v57;
      v72 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v70);
      v79 = sub_10003FCC0;
      v80 = v71;
      aBlock = _NSConcreteStackBlock;
      v76 = 1107296256;
      v77 = sub_100038D38;
      v78 = &unk_1000C3280;
      v73 = _Block_copy(&aBlock);
      v38 = objc_msgSend(v65, "actionWithTitle:style:handler:", v72, 1, v73, swift_release(v80).n128_f64[0]);
      _Block_release(v73);

      objc_msgSend(v41, "addAction:", v38);
      objc_msgSend(v41, "setPreferredAction:", v66);
      objc_msgSend(v74, "presentViewController:animated:completion:", v41, 1, 0);

    }
    sub_10001126C((uint64_t)v8, type metadata accessor for HomePodSetupViewModel);
  }
}

uint64_t sub_10003B220(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  id v15;
  Class isa;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  objc_class *v31;
  _QWORD aBlock[5];
  uint64_t v34;
  objc_super v35;
  char v36[24];

  v2 = v1;
  v4 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v4);
  v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for HomePodSetupViewModel(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&aBlock[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t)&v2[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_viewModel];
  swift_beginAccess(&v2[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_viewModel], v36, 0, 0);
  sub_10000E0F0(v11, (uint64_t)v6, (uint64_t *)&unk_1000D6EC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    return sub_10000DC40((uint64_t)v6, (uint64_t *)&unk_1000D6EC0);
  sub_100011228((uint64_t)v6, (uint64_t)v10, type metadata accessor for HomePodSetupViewModel);
  if (v10[*(int *)(v7 + 164)] == 1)
  {
    v13 = sub_10000D604((uint64_t *)&unk_1000D71A0);
    v14 = swift_allocObject(v13, 64, 7);
    *(_OWORD *)(v14 + 16) = xmmword_100099220;
    *(_QWORD *)(v14 + 56) = &type metadata for String;
    *(_QWORD *)(v14 + 32) = 0xD000000000000010;
    *(_QWORD *)(v14 + 40) = 0x800000010009FC70;
    v15 = objc_allocWithZone((Class)UIActivityViewController);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v14);
    v17 = objc_msgSend(v15, "initWithActivityItems:applicationActivities:", isa, 0);

    v18 = objc_msgSend(v17, "popoverPresentationController");
    if (v18)
    {
      v20 = v18;
      v21 = objc_msgSend(v2, "view");
      objc_msgSend(v20, "setSourceView:", v21);

    }
    if (qword_1000D5538 != -1)
      swift_once(&qword_1000D5538, sub_100038D88);
    v22 = type metadata accessor for Logger(0, v19);
    v23 = sub_10001118C(v22, (uint64_t)qword_1000D6288);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "HomePodSetupIconContent: showing sharesheet", v26, 2u);
      swift_slowDealloc(v26, -1, -1);
    }

    v27 = swift_allocObject(&unk_1000C3308, 24, 7);
    *(_QWORD *)(v27 + 16) = v17;
    aBlock[4] = sub_10003FB98;
    v34 = v27;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10007C6B4;
    aBlock[3] = &unk_1000C3320;
    v28 = _Block_copy(aBlock);
    v29 = v34;
    v30 = v17;
    objc_msgSend(v2, "presentViewController:animated:completion:", v30, 0, v28, swift_release(v29).n128_f64[0]);
    _Block_release(v28);

  }
  v31 = (objc_class *)type metadata accessor for HomePodSetupIconContentViewController(0);
  v35.receiver = v2;
  v35.super_class = v31;
  objc_msgSendSuper2(&v35, "viewWillDisappear:", a1 & 1);
  return sub_10001126C((uint64_t)v10, type metadata accessor for HomePodSetupViewModel);
}

void sub_10003B5C4(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  void *v8;
  _QWORD v9[6];

  if (qword_1000D5538 != -1)
    swift_once(&qword_1000D5538, sub_100038D88);
  v3 = type metadata accessor for Logger(0, a2);
  v4 = sub_10001118C(v3, (uint64_t)qword_1000D6288);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "HomePodSetupIconContent: dismissing sharesheet", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }

  v9[4] = nullsub_1;
  v9[5] = 0;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_10007C6B4;
  v9[3] = &unk_1000C3348;
  v8 = _Block_copy(v9);
  objc_msgSend(a1, "dismissViewControllerAnimated:completion:", 0, v8);
  _Block_release(v8);
}

void sub_10003B740(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  void *v11;
  objc_super v12;

  v2 = v1;
  v12.receiver = v2;
  v12.super_class = (Class)type metadata accessor for HomePodSetupIconContentViewController(0);
  objc_msgSendSuper2(&v12, "viewDidDisappear:", a1 & 1);
  if (qword_1000D5538 != -1)
    swift_once(&qword_1000D5538, sub_100038D88);
  v5 = type metadata accessor for Logger(0, v4);
  v6 = sub_10001118C(v5, (uint64_t)qword_1000D6288);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "HomePodSetupIconContent: viewDidDisappear", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  v10 = OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_movieView;
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_movieView], "stop");
  v11 = *(void **)&v2[v10];
  *(_QWORD *)&v2[v10] = 0;

}

int *sub_10003B8A0(uint64_t a1)
{
  char *v1;
  char *v2;
  int *result;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  uint64_t (*v13)();
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  UIButton v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  double v24;
  id v25;
  id v26;
  objc_class *v27;
  id v28;
  UIAction_optional v29;

  v2 = v1;
  result = (int *)type metadata accessor for HomePodSetupViewModel(0);
  v5 = (uint64_t *)(a1 + result[23]);
  v6 = v5[1];
  if (v6)
  {
    v7 = *v5;
    v8 = (uint64_t *)(a1 + result[24]);
    v9 = v8[1];
    if (v9)
    {
      v10 = *v8;
      v11 = (_QWORD *)swift_allocObject(&unk_1000C3088, 40, 7);
      v11[2] = v10;
      v11[3] = v9;
      v11[4] = v2;
      v12 = v2;
      v13 = (uint64_t (*)())sub_10003FAE0;
    }
    else
    {
      v14 = (uint64_t *)(a1 + result[25]);
      v15 = v14[1];
      if (v15)
      {
        v16 = *v14;
        v11 = (_QWORD *)swift_allocObject(&unk_1000C3060, 32, 7);
        v11[2] = v16;
        v11[3] = v15;
        swift_bridgeObjectRetain(v15);
        v13 = (uint64_t (*)())sub_10003FAAC;
      }
      else
      {
        v11 = 0;
        v13 = nullsub_1;
      }
    }
    sub_100035CA4(0, &qword_1000D62F0, UIButton_ptr);
    sub_100035CA4(0, &qword_1000D62F8, UIAction_ptr);
    swift_bridgeObjectRetain(v9);
    swift_retain(v11);
    swift_bridgeObjectRetain(v6);
    v29.value.super.super.isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v7, v6, 0, 0, 0, 0, 0, 0, 0, 0, 0, v13, v11);
    v17.super.super.super.super.isa = UIButton.init(type:primaryAction:)(UIButtonTypeSystem, v29).super.super.super.super.isa;
    -[objc_class setTranslatesAutoresizingMaskIntoConstraints:](v17.super.super.super.super.isa, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v18 = -[objc_class titleLabel](v17.super.super.super.super.isa, "titleLabel");
    if (v18)
    {
      v19 = v18;
      v20 = objc_msgSend((id)objc_opt_self(UIFontDescriptor), "preferredFontDescriptorWithTextStyle:", UIFontTextStyleFootnote);
      v21 = objc_msgSend(v20, "fontDescriptorWithSymbolicTraits:", 2);

      v22 = sub_10000D604(&qword_1000D6180);
      Optional.unwrap(_:file:line:)(&v28, sub_1000340B0, 0, "HDSViewService/HomePodSetupIconContentViewController.swift", 58, 2, 151, v22);

      v23 = v28;
      objc_msgSend(v23, "pointSize");
      v25 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v23, v24);

      objc_msgSend(v19, "setFont:", v25);
      objc_msgSend(v19, "setAdjustsFontForContentSizeCategory:", 1);
      objc_msgSend(v19, "setNumberOfLines:", 0);

    }
    v26 = *(id *)&v2[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_myContentView];
    v27 = v17.super.super.super.super.isa;
    sub_1000400DC(v17.super.super.super.super.isa);

    return (int *)swift_release(v11);
  }
  return result;
}

void sub_10003BBBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  NSString v6;
  id v7;

  swift_bridgeObjectRetain(a3);
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a3);
  v7 = objc_msgSend((id)objc_opt_self(OBPrivacyPresenter), "presenterForPrivacySplashWithIdentifier:", v6);

  if (v7)
  {
    objc_msgSend(v7, "setPresentingViewController:", a4);
    objc_msgSend(v7, "present");

  }
}

id sub_10003BC80(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  id result;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  NSURL *v15;
  void *v16;
  void *v17;
  unint64_t v18;
  Class isa;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v5 = sub_10000D604(&qword_1000D5DB8);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v27 - v9;
  URL.init(string:)(a2, a3);
  result = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (result)
  {
    v12 = result;
    sub_10000E0F0((uint64_t)v10, (uint64_t)v8, &qword_1000D5DB8);
    v13 = type metadata accessor for URL(0);
    v14 = *(_QWORD *)(v13 - 8);
    v16 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, v13) != 1)
    {
      URL._bridgeToObjectiveC()(v15);
      v16 = v17;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v13);
    }
    v18 = sub_10000C5D8((uint64_t)_swiftEmptyArrayStorage);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v18);
    LOBYTE(v18) = objc_msgSend(v12, "openURL:withOptions:", v16, isa);

    if ((v18 & 1) == 0)
    {
      if (qword_1000D5538 != -1)
        swift_once(&qword_1000D5538, sub_100038D88);
      v21 = type metadata accessor for Logger(0, v20);
      sub_10001118C(v21, (uint64_t)qword_1000D6288);
      v22 = swift_bridgeObjectRetain_n(a3, 2);
      v23 = Logger.logObject.getter(v22);
      v24 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc(12, -1);
        v26 = swift_slowAlloc(32, -1);
        v28 = v26;
        *(_DWORD *)v25 = 136315138;
        swift_bridgeObjectRetain(a3);
        v27 = sub_10003EF58(a2, a3, &v28);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28);
        swift_bridgeObjectRelease_n(a3, 3);
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "HomePodSetupIconContent: unable to open URL %s", v25, 0xCu);
        swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v26, -1, -1);
        swift_slowDealloc(v25, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n(a3, 2);
      }

    }
    return (id)sub_10000DC40((uint64_t)v10, &qword_1000D5DB8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10003BF7C(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  NSString v16;
  NSString v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  double v36;
  id v37;
  id v38;
  id v39;
  id v40;
  NSString v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  id v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  id v64;

  v2 = v1;
  v4 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v4);
  v6 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AdjustedImage(0);
  v61 = *(_QWORD *)(v7 - 8);
  v62 = v7;
  __chkstk_darwin(v7);
  v60 = (uint64_t *)((char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_10000D604(&qword_1000D5E58);
  __chkstk_darwin(v9);
  v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for AdjustedMovie(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (uint64_t *)((char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setTitle:", v16);

  v17 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setSubtitle:", v17);

  v18 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  sub_10003DF54(*(_QWORD *)(a1 + v18[7]), *(_QWORD *)(a1 + v18[7] + 8));
  sub_10000E0F0(a1 + v18[6], (uint64_t)v11, &qword_1000D5E58);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_10000DC40((uint64_t)v11, &qword_1000D5E58);
    v20 = v18[11];
    v21 = *(_QWORD *)(a1 + v20);
    v22 = v18;
    if ((unint64_t)v21 >> 62)
    {
      if (v21 < 0)
        v42 = *(_QWORD *)(a1 + v20);
      else
        v42 = v21 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(a1 + v20));
      v43 = _CocoaArrayWrapper.endIndex.getter(v42);
      swift_bridgeObjectRelease(v21);
      v23 = v2;
      if (v43)
        goto LABEL_4;
    }
    else
    {
      v23 = v2;
      if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_4:
        if (qword_1000D5538 != -1)
          swift_once(&qword_1000D5538, sub_100038D88);
        v24 = type metadata accessor for Logger(0, v19);
        v25 = sub_10001118C(v24, (uint64_t)qword_1000D6288);
        v26 = Logger.logObject.getter(v25);
        v27 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v26, v27))
        {
          v28 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v28 = 0;
          _os_log_impl((void *)&_mh_execute_header, v26, v27, "HomePodSetupIconContent: iconImages used", v28, 2u);
          swift_slowDealloc(v28, -1, -1);
        }

        sub_10003DC1C(*(_QWORD *)(a1 + v20));
        goto LABEL_12;
      }
    }
    sub_10000E0F0(a1 + v18[27], (uint64_t)v6, &qword_1000D5E60);
    v44 = v62;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v6, 1, v62) == 1)
    {
      sub_10000DC40((uint64_t)v6, &qword_1000D5E60);
    }
    else
    {
      v45 = v60;
      sub_100011228((uint64_t)v6, (uint64_t)v60, type metadata accessor for AdjustedImage);
      if (qword_1000D5538 != -1)
        swift_once(&qword_1000D5538, sub_100038D88);
      v47 = type metadata accessor for Logger(0, v46);
      v48 = sub_10001118C(v47, (uint64_t)qword_1000D6288);
      v49 = Logger.logObject.getter(v48);
      v50 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v49, v50))
      {
        v51 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v51 = 0;
        _os_log_impl((void *)&_mh_execute_header, v49, v50, "HomePodSetupIconContent: iconImages empty, prodImage used", v51, 2u);
        swift_slowDealloc(v51, -1, -1);
      }

      v52 = objc_msgSend(objc_allocWithZone((Class)SFAdjustedImageView), "initWithImage:", *v45);
      sub_100073038((uint64_t)v45 + *(int *)(v44 + 20));
      objc_msgSend(v52, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v53 = *(char **)&v23[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_myContentView];
      v54 = sub_10000D604(&qword_1000D6EE0);
      v55 = swift_allocObject(v54, 40, 7);
      *(_OWORD *)(v55 + 16) = xmmword_100099060;
      *(_QWORD *)(v55 + 32) = v52;
      v64 = (id)v55;
      specialized Array._endMutation()(v55);
      v56 = *(_QWORD *)&v53[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViews];
      *(_QWORD *)&v53[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViews] = v64;
      v57 = v53;
      v58 = v52;
      sub_10003FD88(v56);

      swift_bridgeObjectRelease(v56);
      sub_10001126C((uint64_t)v45, type metadata accessor for AdjustedImage);
    }
  }
  else
  {
    sub_100011228((uint64_t)v11, (uint64_t)v15, type metadata accessor for AdjustedMovie);
    v23 = v2;
    if ((v2[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_loadedMovie] & 1) == 0)
    {
      v2[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_loadedMovie] = 1;
      sub_10003C700((uint64_t)v15);
      sub_10003CC78(v15);
    }
    sub_10001126C((uint64_t)v15, type metadata accessor for AdjustedMovie);
    v22 = v18;
  }
LABEL_12:
  v29 = *(void **)(a1 + v22[22]);
  if (v29)
  {
    v30 = v29;
    if ((uint64_t)objc_msgSend(v30, "length") >= 1)
    {
      v31 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
      v32 = objc_msgSend((id)objc_opt_self(UIFontDescriptor), "preferredFontDescriptorWithTextStyle:", UIFontTextStyleHeadline);
      v33 = objc_msgSend(v32, "fontDescriptorWithSymbolicTraits:", 2);

      v63 = v33;
      v34 = sub_10000D604(&qword_1000D6180);
      Optional.unwrap(_:file:line:)(&v64, sub_1000340B0, 0, "HDSViewService/HomePodSetupIconContentViewController.swift", 58, 2, 190, v34);

      v35 = v64;
      objc_msgSend(v35, "pointSize");
      v37 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v35, v36);

      objc_msgSend(v31, "setFont:", v37);
      v38 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
      objc_msgSend(v31, "setTextColor:", v38);

      objc_msgSend(v31, "setTextAlignment:", 1);
      objc_msgSend(v31, "setNumberOfLines:", 0);
      objc_msgSend(v31, "setAttributedText:", v30);
      objc_msgSend(v31, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v39 = *(id *)&v23[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_myContentView];
      v40 = v31;
      sub_10003FF70(v31);

      v30 = v39;
    }

  }
  objc_msgSend(v23, "setDismissalType:", *(_QWORD *)(a1 + v22[18]));
  if (*(_BYTE *)(a1 + v22[38]) == 1)
  {
    v41 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "showActivityIndicatorWithStatus:", v41);

  }
}

void sub_10003C700(uint64_t a1)
{
  char *v1;
  char *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  int *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  Class isa;
  uint64_t v41;
  void *v42;
  id v43;
  void *v44;
  id v45;
  id v46;
  id v48;

  v2 = v1;
  v3 = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
  v4 = objc_msgSend(v1, "contentView");
  objc_msgSend(v4, "addLayoutGuide:", v3);

  v5 = objc_msgSend(objc_allocWithZone((Class)SFMediaPlayerView), "init");
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v6 = objc_msgSend(v1, "view");
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v6, "addSubview:", v5);

    v8 = objc_msgSend(v1, "contentView");
    v48 = objc_msgSend(v8, "mainContentGuide");

    v46 = (id)objc_opt_self(NSLayoutConstraint);
    v9 = sub_10000D604(&qword_1000D6EE0);
    v10 = swift_allocObject(v9, 112, 7);
    *(_OWORD *)(v10 + 16) = xmmword_1000994A0;
    v11 = objc_msgSend(v3, "topAnchor");
    v12 = objc_msgSend(v48, "topAnchor");
    v13 = objc_msgSend(v11, "constraintGreaterThanOrEqualToAnchor:", v12);

    *(_QWORD *)(v10 + 32) = v13;
    v14 = objc_msgSend(v3, "bottomAnchor");
    v15 = objc_msgSend(v48, "bottomAnchor");
    v16 = objc_msgSend(v14, "constraintLessThanOrEqualToAnchor:", v15);

    *(_QWORD *)(v10 + 40) = v16;
    v17 = objc_msgSend(v3, "centerYAnchor");
    v18 = objc_msgSend(v48, "centerYAnchor");
    v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

    *(_QWORD *)(v10 + 48) = v19;
    v20 = objc_msgSend(v3, "leadingAnchor");
    v21 = objc_msgSend(v48, "leadingAnchor");
    v22 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);

    *(_QWORD *)(v10 + 56) = v22;
    v23 = objc_msgSend(v3, "trailingAnchor");
    v24 = objc_msgSend(v48, "trailingAnchor");
    v25 = objc_msgSend(v23, "constraintEqualToAnchor:", v24);

    *(_QWORD *)(v10 + 64) = v25;
    v26 = objc_msgSend(v3, "heightAnchor");
    v27 = (int *)type metadata accessor for AdjustedMovie(0);
    v28 = objc_msgSend(v26, "constraintEqualToConstant:", *(double *)(a1 + v27[8]));

    *(_QWORD *)(v10 + 72) = v28;
    v29 = objc_msgSend(v5, "centerYAnchor");
    v30 = objc_msgSend(v3, "centerYAnchor");
    v31 = objc_msgSend(v29, "constraintEqualToAnchor:", v30);

    *(_QWORD *)(v10 + 80) = v31;
    v32 = objc_msgSend(v5, "centerXAnchor");
    v33 = objc_msgSend(v3, "centerXAnchor");
    v34 = objc_msgSend(v32, "constraintEqualToAnchor:", v33);

    *(_QWORD *)(v10 + 88) = v34;
    v35 = objc_msgSend(v5, "heightAnchor");
    v36 = objc_msgSend(v35, "constraintEqualToConstant:", *(double *)(a1 + v27[7]));

    *(_QWORD *)(v10 + 96) = v36;
    v37 = objc_msgSend(v5, "widthAnchor");
    v38 = objc_msgSend(v37, "constraintEqualToConstant:", *(double *)(a1 + v27[6]));

    *(_QWORD *)(v10 + 104) = v38;
    specialized Array._endMutation()(v39);
    sub_100035CA4(0, (unint64_t *)&qword_1000D7080, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v10);
    objc_msgSend(v46, "activateConstraints:", isa);

    v41 = OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_movieView;
    v42 = *(void **)&v2[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_movieView];
    *(_QWORD *)&v2[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_movieView] = v5;
    v43 = v5;

    v44 = *(void **)&v2[v41];
    if (v44)
    {
      v45 = v44;
      objc_msgSend(v45, "setUserInteractionEnabled:", 0);

    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10003CC78(_QWORD *a1)
{
  char *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  id v39;
  NSURL *v40;
  void *v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  void *v47;
  void *v48;
  id v49;
  id v50;
  void *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  id v57;
  char *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t aBlock[5];
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v2 = v1;
  v4 = type metadata accessor for AdjustedMovie(0);
  v5 = __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  v9 = (uint64_t *)((char *)&v56 - v8);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_movieView];
  if (v15)
  {
    v61 = v4;
    v16 = *a1;
    v17 = a1[1];
    v18 = v15;
    URL.init(fileURLWithPath:isDirectory:)(v16, v17, 0);
    if (qword_1000D5538 != -1)
      swift_once(&qword_1000D5538, sub_100038D88);
    v20 = type metadata accessor for Logger(0, v19);
    sub_10001118C(v20, (uint64_t)qword_1000D6288);
    v62 = a1;
    v21 = sub_100035CDC((uint64_t)a1, (uint64_t)v9, type metadata accessor for AdjustedMovie);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc(12, -1);
      v59 = v2;
      v25 = (uint8_t *)v24;
      v26 = swift_slowAlloc(32, -1);
      aBlock[0] = v26;
      v57 = v18;
      v58 = v14;
      *(_DWORD *)v25 = 136315138;
      v60 = v11;
      v27 = *v9;
      v28 = v9[1];
      swift_bridgeObjectRetain(v28);
      v65 = sub_10003EF58(v27, v28, aBlock);
      v11 = v60;
      v14 = v58;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66);
      v29 = v28;
      v18 = v57;
      swift_bridgeObjectRelease(v29);
      sub_10001126C((uint64_t)v9, type metadata accessor for AdjustedMovie);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "HomePodSetupIconContent: playMovie:movieName %s", v25, 0xCu);
      swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1, -1);
      v30 = v25;
      v2 = v59;
      swift_slowDealloc(v30, -1, -1);
    }
    else
    {
      sub_10001126C((uint64_t)v9, type metadata accessor for AdjustedMovie);
    }

    objc_msgSend(v18, "setPausesAfterEachItem:", 1);
    v39 = objc_allocWithZone((Class)SFMediaPlayerItem);
    URL._bridgeToObjectiveC()(v40);
    v42 = v41;
    v43 = objc_msgSend(v39, "initWithURL:", v41);

    objc_msgSend(v18, "addMovieItem:", v43);
    objc_msgSend(v18, "play");
    objc_msgSend(v18, "setHidden:", 0);
    v44 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
    v45 = objc_msgSend(v44, "userInterfaceStyle");

    if (v45 == (id)2)
      v46 = 1;
    else
      v46 = 2;
    URL._bridgeToObjectiveC()((NSURL *)*(int *)(v61 + 20));
    v48 = v47;
    objc_msgSend(v18, "updateViewForAssetType:adjustmentsURL:", v46, v47);

    v49 = objc_msgSend(v2, "contentView");
    v50 = objc_msgSend(v49, "titleView");

    if (v50)
    {
      objc_msgSend(v50, "setAlpha:", 0.0);

    }
    sub_100062164(0.0);
    v51 = (void *)objc_opt_self(UIView);
    v52 = swift_allocObject(&unk_1000C3010, 24, 7);
    *(_QWORD *)(v52 + 16) = v2;
    aBlock[4] = (uint64_t)sub_10003FA80;
    v64 = v52;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10007C6B4;
    aBlock[3] = (uint64_t)&unk_1000C3028;
    v53 = _Block_copy(aBlock);
    v54 = v64;
    v55 = v2;
    swift_release(v54);
    objc_msgSend(v51, "animateWithDuration:delay:options:animations:completion:", 65538, v53, 0, 1.5, 0.7);
    _Block_release(v53);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
  else
  {
    if (qword_1000D5538 != -1)
      swift_once(&qword_1000D5538, sub_100038D88);
    v31 = type metadata accessor for Logger(0, v12);
    sub_10001118C(v31, (uint64_t)qword_1000D6288);
    v32 = sub_100035CDC((uint64_t)a1, (uint64_t)v7, type metadata accessor for AdjustedMovie);
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc(12, -1);
      v36 = swift_slowAlloc(32, -1);
      aBlock[0] = v36;
      *(_DWORD *)v35 = 136315138;
      v37 = *v7;
      v38 = v7[1];
      swift_bridgeObjectRetain(v38);
      v65 = sub_10003EF58(v37, v38, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66);
      swift_bridgeObjectRelease(v38);
      sub_10001126C((uint64_t)v7, type metadata accessor for AdjustedMovie);
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "HomePodSetupIconContent: playMovie:movieName %s but movieView is nil", v35, 0xCu);
      swift_arrayDestroy(v36, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v36, -1, -1);
      swift_slowDealloc(v35, -1, -1);
    }
    else
    {
      sub_10001126C((uint64_t)v7, type metadata accessor for AdjustedMovie);
    }

  }
}

void sub_10003D2B8(int a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  const char *v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  NSString v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  NSString v39;
  NSString v40;
  id v41;
  id v42;
  NSString v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  NSString v49;
  void *v50;
  id v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t aBlock[5];
  uint64_t v56;
  char v57[24];

  v2 = v1;
  v4 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v4);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for HomePodSetupViewModel(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t)&v2[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_viewModel];
  swift_beginAccess(&v2[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_viewModel], v57, 0, 0);
  sub_10000E0F0(v11, (uint64_t)v6, (uint64_t *)&unk_1000D6EC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
  {
    sub_100011228((uint64_t)v6, (uint64_t)v10, type metadata accessor for HomePodSetupViewModel);
    v18 = sub_10003FA58(*(_DWORD *)&v10[*(int *)(v7 + 140)]);
    v20 = String.init(cString:)(v18);
    v21 = v19;
    if (qword_1000D5538 != -1)
      swift_once(&qword_1000D5538, sub_100038D88);
    v22 = type metadata accessor for Logger(0, v19);
    sub_10001118C(v22, (uint64_t)qword_1000D6288);
    v23 = swift_bridgeObjectRetain(v21);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(12, -1);
      v27 = swift_slowAlloc(32, -1);
      v53 = v10;
      v28 = v2;
      v29 = v27;
      aBlock[0] = v27;
      *(_DWORD *)v26 = 136315138;
      swift_bridgeObjectRetain(v21);
      v54 = sub_10003EF58(v20, v21, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, aBlock);
      swift_bridgeObjectRelease_n(v21, 3);
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "HomePodSetupIconContent: AirDrop status %s", v26, 0xCu);
      swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
      v30 = v29;
      v2 = v28;
      v10 = v53;
      swift_slowDealloc(v30, -1, -1);
      swift_slowDealloc(v26, -1, -1);

      if (a1 == 2)
        goto LABEL_14;
    }
    else
    {

      swift_bridgeObjectRelease_n(v21, 2);
      if (a1 == 2)
        goto LABEL_14;
    }
    if (a1 != 1)
    {
LABEL_16:
      sub_10001126C((uint64_t)v10, type metadata accessor for HomePodSetupViewModel);
      return;
    }
LABEL_14:
    v31 = String._bridgeToObjectiveC()();
    v32 = sub_100006354(v31);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    v34 = v33;

    v35 = String._bridgeToObjectiveC()();
    v36 = sub_100006354(v35);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
    v38 = v37;

    v39 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v34);
    v40 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v38);
    v41 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v39, v40, 1);

    if (v41)
    {
      v42 = v41;
      v43 = String._bridgeToObjectiveC()();
      v44 = sub_100006354(v43);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
      v46 = v45;

      v47 = swift_allocObject(&unk_1000C2FC0, 24, 7);
      *(_QWORD *)(v47 + 16) = v42;
      v48 = v42;
      v49 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v46);
      aBlock[4] = (uint64_t)sub_100011328;
      v56 = v47;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100038D38;
      aBlock[3] = (uint64_t)&unk_1000C2FD8;
      v50 = _Block_copy(aBlock);
      swift_release(v56);
      v51 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v49, 1, v50);
      _Block_release(v50);

      objc_msgSend(v48, "addAction:", v51);
      objc_msgSend(v2, "presentViewController:animated:completion:", v48, 1, 0);

    }
    goto LABEL_16;
  }
  sub_10000DC40((uint64_t)v6, (uint64_t *)&unk_1000D6EC0);
  if (qword_1000D5538 != -1)
    swift_once(&qword_1000D5538, sub_100038D88);
  v13 = type metadata accessor for Logger(0, v12);
  v14 = sub_10001118C(v13, (uint64_t)qword_1000D6288);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "HomePodSetupIconContent: No viewmodel, not showing alert", v17, 2u);
    swift_slowDealloc(v17, -1, -1);
  }

}

void sub_10003D904(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  NSString v18;
  id v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  NSString v26;
  void *v27;
  id v28;
  _QWORD v29[5];
  uint64_t v30;

  v3 = v2;
  if (qword_1000D5538 != -1)
    swift_once(&qword_1000D5538, sub_100038D88);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10001118C(v4, (uint64_t)qword_1000D6288);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "HomePodSetupIconContent: presentCancelSUSkipped called", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  v9 = String._bridgeToObjectiveC()();
  v10 = sub_100006354(v9);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v12 = v11;

  v13 = String._bridgeToObjectiveC()();
  v14 = sub_100006354(v13);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v16 = v15;

  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v16);
  v19 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v17, v18, 1);

  v20 = String._bridgeToObjectiveC()();
  v21 = sub_100006354(v20);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v23 = v22;

  v24 = swift_allocObject(&unk_1000C2F70, 24, 7);
  *(_QWORD *)(v24 + 16) = v19;
  v25 = v19;
  v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v23);
  v29[4] = sub_10003FCC0;
  v30 = v24;
  v29[0] = _NSConcreteStackBlock;
  v29[1] = 1107296256;
  v29[2] = sub_100038D38;
  v29[3] = &unk_1000C2F88;
  v27 = _Block_copy(v29);
  swift_release(v30);
  v28 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v26, 1, v27);
  _Block_release(v27);

  objc_msgSend(v25, "addAction:", v28);
  objc_msgSend(v3, "presentViewController:animated:completion:", v25, 1, 0);

}

id sub_10003DC1C(unint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  id result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  id v20;
  char *v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  char *v34;
  uint64_t v35;
  char v36[24];
  unint64_t v37;

  v2 = v1;
  v4 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_images;
  v8 = *(_QWORD *)&v2[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_images];
  v9 = swift_bridgeObjectRetain(v8);
  v10 = sub_10007E89C(v9, a1);
  result = (id)swift_bridgeObjectRelease(v8);
  if ((v10 & 1) == 0)
  {
    v12 = *(_QWORD *)&v2[v7];
    *(_QWORD *)&v2[v7] = a1;
    swift_bridgeObjectRetain(a1);
    swift_bridgeObjectRelease(v12);
    result = objc_msgSend(v2, "isViewLoaded");
    if ((_DWORD)result)
    {
      v37 = (unint64_t)_swiftEmptyArrayStorage;
      v13 = *(_QWORD *)&v2[v7];
      if ((unint64_t)v13 >> 62)
      {
        if (v13 < 0)
          v28 = *(_QWORD *)&v2[v7];
        else
          v28 = v13 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n(*(_QWORD *)&v2[v7], 2);
        result = (id)_CocoaArrayWrapper.endIndex.getter(v28);
        v14 = (uint64_t)result;
        if (result)
          goto LABEL_5;
      }
      else
      {
        v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
        result = (id)swift_bridgeObjectRetain_n(v13, 2);
        if (v14)
        {
LABEL_5:
          if (v14 < 1)
          {
            __break(1u);
            return result;
          }
          v33 = v13 & 0xC000000000000001;
          v34 = &v2[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_viewModel];
          v35 = OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_style;
          swift_beginAccess(&v2[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_viewModel], v36, 0, 0);
          v15 = 0;
          do
          {
            if (v33)
              v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15, v13);
            else
              v16 = *(id *)(v13 + 8 * v15 + 32);
            v17 = v16;
            v18 = objc_msgSend(objc_allocWithZone((Class)PRXImageView), "initWithStyle:", *(_QWORD *)&v2[v35]);
            objc_msgSend(v18, "setImage:", v17);
            objc_msgSend(v18, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
            sub_10000E0F0((uint64_t)v34, (uint64_t)v6, (uint64_t *)&unk_1000D6EC0);
            v19 = type metadata accessor for HomePodSetupViewModel(0);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v6, 1, v19))
            {
              v20 = (id)sub_10000DC40((uint64_t)v6, (uint64_t *)&unk_1000D6EC0);
            }
            else
            {
              v21 = &v6[*(int *)(v19 + 124)];
              v22 = *(_QWORD *)v21;
              v23 = v21[8];
              v20 = (id)sub_10000DC40((uint64_t)v6, (uint64_t *)&unk_1000D6EC0);
              if ((v23 & 1) == 0)
                v20 = objc_msgSend(v18, "setContentMode:", v22);
            }
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
            v25 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v24 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v25 >= v24 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, v25 + 1, 1);
            ++v15;
            v26 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v18);
            specialized Array._endMutation()(v26);

          }
          while (v14 != v15);
          swift_bridgeObjectRelease_n(v13, 2);
          v27 = (_QWORD *)v37;
          goto LABEL_23;
        }
      }
      swift_bridgeObjectRelease_n(v13, 2);
      v27 = _swiftEmptyArrayStorage;
LABEL_23:
      v29 = *(char **)&v2[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_myContentView];
      v30 = *(_QWORD *)&v29[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViews];
      *(_QWORD *)&v29[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViews] = v27;
      v31 = v29;
      swift_bridgeObjectRetain(v27);
      sub_10003FD88(v30);
      swift_bridgeObjectRelease(v27);

      return (id)swift_bridgeObjectRelease(v30);
    }
  }
  return result;
}

void sub_10003DF54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  id v10;
  NSString v11;
  id v12;
  id v13;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_bodyText);
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_bodyText);
  v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_bodyText + 8);
  v8 = v6 == a1 && v7 == a2;
  if (!v8 && (_stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, a1, a2, 0) & 1) == 0)
  {
    v9 = v5[1];
    *v5 = a1;
    v5[1] = a2;
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRelease(v9);
    v10 = objc_msgSend(objc_allocWithZone((Class)PRXLabel), "initWithStyle:", 1);
    v11 = String._bridgeToObjectiveC()();
    objc_msgSend(v10, "setText:", v11);

    objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v13 = *(id *)(v2 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_myContentView);
    v12 = v10;
    sub_10004001C(v10);

  }
}

id sub_10003E078()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupIconContentViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10003E130()
{
  return type metadata accessor for HomePodSetupIconContentViewController(0);
}

uint64_t type metadata accessor for HomePodSetupIconContentViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1000D62D8;
  if (!qword_1000D62D8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HomePodSetupIconContentViewController);
  return result;
}

void sub_10003E174(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[8];

  v4[0] = &unk_1000994D8;
  v4[1] = &unk_1000994F0;
  sub_100010910(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[4] = &unk_100099508;
    v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[6] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[7] = &unk_100099520;
    swift_updateClassMetadata2(a1, 256, 8, v4, a1 + 80);
  }
}

uint64_t sub_10003E230(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_presenter + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease(a1);
}

void sub_10003E268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10003F620(a3);
}

void sub_10003E270(uint64_t a1, void *a2)
{
  NSString v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  NSString v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSString v19;
  void *v20;
  void *v21;
  id v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  NSString v29;
  void *v30;
  id v31;
  NSString v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  NSString v38;
  void *v39;
  id v40;
  id v41;
  void **aBlock;
  uint64_t v43;
  void (*v44)(uint64_t, void *);
  void *v45;
  void *v46;
  uint64_t v47;

  v3 = String._bridgeToObjectiveC()();
  v4 = sub_100006354(v3);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v6 = v5;

  v7 = String._bridgeToObjectiveC()();
  v8 = sub_100006354(v7);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v10 = v9;

  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v10);
  v41 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v11, v12, 1);

  v13 = String._bridgeToObjectiveC()();
  v14 = sub_100006354(v13);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v16 = v15;

  v17 = swift_allocObject(&unk_1000C33D0, 24, 7);
  *(_QWORD *)(v17 + 16) = a2;
  v18 = a2;
  v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v16);
  v46 = sub_10003FBA8;
  v47 = v17;
  aBlock = _NSConcreteStackBlock;
  v43 = 1107296256;
  v44 = sub_100038D38;
  v45 = &unk_1000C33E8;
  v20 = _Block_copy(&aBlock);
  swift_release(v47);
  v21 = (void *)objc_opt_self(UIAlertAction);
  v22 = objc_msgSend(v21, "actionWithTitle:style:handler:", v19, 0, v20);
  _Block_release(v20);

  v23 = String._bridgeToObjectiveC()();
  v24 = sub_100006354(v23);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v26 = v25;

  v27 = swift_allocObject(&unk_1000C3420, 24, 7);
  *(_QWORD *)(v27 + 16) = v18;
  v28 = v18;
  v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v26);
  v46 = sub_10003FBB0;
  v47 = v27;
  aBlock = _NSConcreteStackBlock;
  v43 = 1107296256;
  v44 = sub_100038D38;
  v45 = &unk_1000C3438;
  v30 = _Block_copy(&aBlock);
  v31 = objc_msgSend(v21, "actionWithTitle:style:handler:", v29, 0, v30, swift_release(v47).n128_f64[0]);
  _Block_release(v30);

  v32 = String._bridgeToObjectiveC()();
  v33 = sub_100006354(v32);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
  v35 = v34;

  v36 = swift_allocObject(&unk_1000C3470, 24, 7);
  *(_QWORD *)(v36 + 16) = v41;
  v37 = v41;
  v38 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v35);
  v46 = sub_10003FCC0;
  v47 = v36;
  aBlock = _NSConcreteStackBlock;
  v43 = 1107296256;
  v44 = sub_100038D38;
  v45 = &unk_1000C3488;
  v39 = _Block_copy(&aBlock);
  v40 = objc_msgSend(v21, "actionWithTitle:style:handler:", v38, 1, v39, swift_release(v47).n128_f64[0]);
  _Block_release(v39);

  objc_msgSend(v37, "addAction:", v22);
  objc_msgSend(v37, "addAction:", v31);
  objc_msgSend(v37, "addAction:", v40);
  objc_msgSend(v37, "setPreferredAction:", v22);
  objc_msgSend(v28, "presentViewController:animated:completion:", v37, 1, 0);

}

uint64_t sub_10003E70C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v3;
  _BYTE v4[48];
  _OWORD v5[2];
  uint64_t v6;
  _OWORD v7[3];

  result = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_presenter);
  if (result)
  {
    v3 = result;
    v6 = 0;
    memset(v5, 0, sizeof(v5));
    memset(&v4[8], 0, 40);
    v4[0] = 30;
    sub_100011340((uint64_t)v5, (uint64_t)&v4[8], &qword_1000D6ED0);
    v7[0] = *(_OWORD *)v4;
    v7[1] = *(_OWORD *)&v4[16];
    v7[2] = *(_OWORD *)&v4[32];
    sub_10006B04C((char *)v7);
    swift_unknownObjectRelease(v3);
    return sub_100011384((uint64_t)v7);
  }
  return result;
}

uint64_t sub_10003E7A4(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v3;
  _BYTE v4[48];
  _OWORD v5[2];
  uint64_t v6;
  _OWORD v7[3];

  result = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_presenter);
  if (result)
  {
    v3 = result;
    v6 = 0;
    memset(v5, 0, sizeof(v5));
    memset(&v4[8], 0, 40);
    v4[0] = 31;
    sub_100011340((uint64_t)v5, (uint64_t)&v4[8], &qword_1000D6ED0);
    v7[0] = *(_OWORD *)v4;
    v7[1] = *(_OWORD *)&v4[16];
    v7[2] = *(_OWORD *)&v4[32];
    sub_10006B04C((char *)v7);
    swift_unknownObjectRelease(v3);
    return sub_100011384((uint64_t)v7);
  }
  return result;
}

void sub_10003E83C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  NSString v15;
  id v16;
  NSString v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  NSString v23;
  void *v24;
  void *v25;
  id v26;
  NSString v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  NSString v33;
  void *v34;
  id v35;
  void **v36;
  uint64_t v37;
  void (*v38)(uint64_t, void *);
  void *v39;
  void *v40;
  uint64_t v41;

  v12 = *(_QWORD *)(a2 + 56);
  v13 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v13);
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v13);
  v16 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v14, v15, 1);

  v17 = String._bridgeToObjectiveC()();
  v18 = sub_100006354(v17);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v20 = v19;

  v21 = swift_allocObject(&unk_1000C3510, 49, 7);
  *(_QWORD *)(v21 + 16) = a3;
  *(_QWORD *)(v21 + 24) = a4;
  *(_QWORD *)(v21 + 32) = a5;
  *(_QWORD *)(v21 + 40) = a6;
  *(_BYTE *)(v21 + 48) = a7;
  v22 = a3;
  swift_bridgeObjectRetain(a5);
  v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v20);
  v40 = sub_10003FCA8;
  v41 = v21;
  v36 = _NSConcreteStackBlock;
  v37 = 1107296256;
  v38 = sub_100038D38;
  v39 = &unk_1000C3528;
  v24 = _Block_copy(&v36);
  swift_release(v41);
  v25 = (void *)objc_opt_self(UIAlertAction);
  v26 = objc_msgSend(v25, "actionWithTitle:style:handler:", v23, 0, v24);
  _Block_release(v24);

  objc_msgSend(v16, "addAction:", v26);
  v27 = String._bridgeToObjectiveC()();
  v28 = sub_100006354(v27);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v30 = v29;

  v31 = swift_allocObject(&unk_1000C3560, 24, 7);
  *(_QWORD *)(v31 + 16) = v22;
  v32 = v22;
  v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v30);
  v40 = sub_10003FCB8;
  v41 = v31;
  v36 = _NSConcreteStackBlock;
  v37 = 1107296256;
  v38 = sub_100038D38;
  v39 = &unk_1000C3578;
  v34 = _Block_copy(&v36);
  swift_release(v41);
  v35 = objc_msgSend(v25, "actionWithTitle:style:handler:", v33, 1, v34);
  _Block_release(v34);

  objc_msgSend(v16, "addAction:", v35);
  objc_msgSend(v16, "setPreferredAction:", v26);
  objc_msgSend(v32, "presentViewController:animated:completion:", v16, 1, 0);

}

uint64_t sub_10003EB90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t result;
  uint64_t v8;
  _BYTE v9[48];
  _OWORD v10[2];
  uint64_t v11;
  _OWORD v12[3];

  result = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_presenter);
  if (result)
  {
    v8 = result;
    v11 = 0;
    memset(v10, 0, sizeof(v10));
    memset(&v9[8], 0, 40);
    v9[0] = a6;
    sub_100011340((uint64_t)v10, (uint64_t)&v9[8], &qword_1000D6ED0);
    v12[0] = *(_OWORD *)v9;
    v12[1] = *(_OWORD *)&v9[16];
    v12[2] = *(_OWORD *)&v9[32];
    sub_10006B04C((char *)v12);
    swift_unknownObjectRelease(v8);
    return sub_100011384((uint64_t)v12);
  }
  return result;
}

void sub_10003EC28(int a1, id a2)
{
  id v2;
  id v3;

  v2 = objc_msgSend(a2, "presentingViewController");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "dismissViewControllerAnimated:completion:", 1, 0);

  }
}

uint64_t sub_10003EC84(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v3;
  _BYTE v4[48];
  _OWORD v5[2];
  uint64_t v6;
  _OWORD v7[3];

  result = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_presenter);
  if (result)
  {
    v3 = result;
    v6 = 0;
    memset(v5, 0, sizeof(v5));
    memset(&v4[8], 0, 40);
    v4[0] = 21;
    sub_100011340((uint64_t)v5, (uint64_t)&v4[8], &qword_1000D6ED0);
    v7[0] = *(_OWORD *)v4;
    v7[1] = *(_OWORD *)&v4[16];
    v7[2] = *(_OWORD *)&v4[32];
    sub_10006B04C((char *)v7);
    swift_unknownObjectRelease(v3);
    return sub_100011384((uint64_t)v7);
  }
  return result;
}

uint64_t sub_10003ED1C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v3;
  _BYTE v4[48];
  _OWORD v5[2];
  uint64_t v6;
  _OWORD v7[3];

  result = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_presenter);
  if (result)
  {
    v3 = result;
    v6 = 0;
    memset(v5, 0, sizeof(v5));
    memset(&v4[8], 0, 40);
    v4[0] = 23;
    sub_100011340((uint64_t)v5, (uint64_t)&v4[8], &qword_1000D6ED0);
    v7[0] = *(_OWORD *)v4;
    v7[1] = *(_OWORD *)&v4[16];
    v7[2] = *(_OWORD *)&v4[32];
    sub_10006B04C((char *)v7);
    swift_unknownObjectRelease(v3);
    return sub_100011384((uint64_t)v7);
  }
  return result;
}

uint64_t sub_10003EDB4(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v3;
  _BYTE v4[48];
  _OWORD v5[2];
  uint64_t v6;
  _OWORD v7[3];

  result = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_presenter);
  if (result)
  {
    v3 = result;
    v6 = 0;
    memset(v5, 0, sizeof(v5));
    memset(&v4[8], 0, 40);
    v4[0] = 2;
    sub_100011340((uint64_t)v5, (uint64_t)&v4[8], &qword_1000D6ED0);
    v7[0] = *(_OWORD *)v4;
    v7[1] = *(_OWORD *)&v4[16];
    v7[2] = *(_OWORD *)&v4[32];
    sub_10006B04C((char *)v7);
    swift_unknownObjectRelease(v3);
    return sub_100011384((uint64_t)v7);
  }
  return result;
}

void sub_10003EE4C(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, "contentView");
  v2 = objc_msgSend(v1, "titleView");

  if (v2)
  {
    objc_msgSend(v2, "setAlpha:", 1.0);

  }
  sub_100062164(1.0);
}

uint64_t sub_10003EEC8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_10003EEE8(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  v6 = a4();
  v8 = v7;
  v9 = sub_10003EF58(v6, v7, a3);
  v10 = *a1 + 8;
  v12 = v9;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13);
  result = swift_bridgeObjectRelease(v8);
  *a1 = v10;
  return result;
}

uint64_t sub_10003EF58(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13[3];
  void *ObjectType;

  v6 = sub_10003F028(v13, 0, 0, 1, a1, a2);
  v8 = v13[0];
  if (v6)
  {
    v9 = v6;
    ObjectType = (void *)swift_getObjectType(v6, v7);
    v13[0] = v9;
    v10 = *a3;
    if (*a3)
    {
      sub_10000DB98((uint64_t)v13, *a3);
      *a3 = v10 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v13[0] = a1;
    v13[1] = a2;
    v11 = *a3;
    if (*a3)
    {
      sub_10000DB98((uint64_t)v13, *a3);
      *a3 = v11 + 32;
    }
    swift_bridgeObjectRetain(a2);
  }
  sub_10000CDB8(v13);
  return v8;
}

uint64_t sub_10003F028(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v12 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v12)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v12] || (char *)__src + v12 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter(0, HIBYTE(a6) & 0xF, __dst, a3);
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_10003F1E0(a5, a6);
    *a1 = v13;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = _StringObject.sharedUTF8.getter(a5, a6);
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while unwrapping an Optional value", 57, 2, "Swift/StringTesting.swift", 25, 2, 151, 0);
    __break(1u);
LABEL_17:
    LOBYTE(v14) = 2;
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableRawPointer.initializeMemory overlapping range", 58, 2, "Swift/UnsafeRawPointer.swift", 28, v14, 1173, 0);
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL, __dst);
}

uint64_t sub_10003F1E0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = (uint64_t)sub_10003F274(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
    v2 = sub_10003F4C4(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_10003F4C4(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

_QWORD *sub_10003F274(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  _QWORD *result;
  int v10;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    while (1)
    {
      v5 = sub_10003F3E8(v4, 0);
      if (v4 < 0)
        break;
      v6 = v5;
      v7 = _StringGuts.copyUTF8(into:)(v5 + 4, v4, a1, a2);
      if ((v8 & 1) != 0)
        goto LABEL_14;
      if (v7 == v4)
        return v6;
      LOBYTE(v10) = 2;
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "invalid Collection: less than 'count' elements in collection", 60, 2, "Swift/ContiguousArrayBuffer.swift", 33, v10, 1122, 0);
      __break(1u);
LABEL_10:
      v4 = String.UTF8View._foreignCount()();
      if (!v4)
        return _swiftEmptyArrayStorage;
    }
    LOBYTE(v10) = 2;
    _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableBufferPointer with negative count", 46, 2, "Swift/UnsafeBufferPointer.swift", 31, v10, 71, 0);
    __break(1u);
LABEL_14:
    LOBYTE(v10) = 2;
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Insufficient space allocated to copy string contents", 52, 2, "Swift/StringUTF8View.swift", 26, v10, 430, 0);
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

_QWORD *sub_10003F3E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  size_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return _swiftEmptyArrayStorage;
  v4 = sub_10000D604(&qword_1000D62E8);
  v5 = (_QWORD *)swift_allocObject(v4, v2 + 32, 7);
  v6 = j__malloc_size(v5);
  v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

uint64_t sub_10003F44C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;

  v5 = a1;
  v6 = a1 >> 16;
  v7 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v13 = String.UTF16View.index(_:offsetBy:)(15, v6, a2);
    v14 = v13 + (v7 << 16);
    v15 = v13 & 0xFFFFFFFFFFFFFFFCLL | v5 & 3;
    v16 = v14 & 0xFFFFFFFFFFFF0000;
    if (!v7)
      v16 = v15;
    return v16 | 4;
  }
  else
  {
    v8 = String.UTF8View._foreignIndex(_:offsetBy:)(15, v6);
    v9 = v8 + (v7 << 16);
    v10 = v8 & 0xFFFFFFFFFFFFFFFCLL | v5 & 3;
    v11 = v9 & 0xFFFFFFFFFFFF0000;
    if (!v7)
      v11 = v10;
    return v11 | 8;
  }
}

uint64_t sub_10003F4C4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000D604(&qword_1000D62E8);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v8] || v13 >= &v14[v8])
  {
    memcpy(v13, v14, v8);
LABEL_28:
    swift_bridgeObjectRelease(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

_BYTE **sub_10003F610(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

void sub_10003F620(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  char *v23;
  int v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  int v36;
  int v37;

  v2 = v1;
  v4 = type metadata accessor for HomePodSetupViewModel(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D5538 != -1)
    swift_once(&qword_1000D5538, sub_100038D88);
  v12 = type metadata accessor for Logger(0, v9);
  v13 = sub_10001118C(v12, (uint64_t)qword_1000D6288);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "HomePodSetupIconContent: presenter:didUpdate viewModel", v16, 2u);
    swift_slowDealloc(v16, -1, -1);
  }

  sub_100035CDC(a1, (uint64_t)v11, type metadata accessor for HomePodSetupViewModel);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v11, 0, 1, v4);
  v17 = (uint64_t)&v2[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_viewModel];
  swift_beginAccess(&v2[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_viewModel], &v36, 33, 0);
  sub_100011340((uint64_t)v11, v17, (uint64_t *)&unk_1000D6EC0);
  swift_endAccess(&v36);
  v18 = sub_100035CDC(a1, (uint64_t)v7, type metadata accessor for HomePodSetupViewModel);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v21 = 67109120;
    v22 = a1;
    v23 = v2;
    v24 = *(_DWORD *)&v7[*(int *)(v4 + 140)];
    sub_10001126C((uint64_t)v7, type metadata accessor for HomePodSetupViewModel);
    v36 = v24;
    v2 = v23;
    a1 = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "HomePodSetupIconContent: viewModel.airDropStatus %u", v21, 8u);
    swift_slowDealloc(v21, -1, -1);
  }
  else
  {
    sub_10001126C((uint64_t)v7, type metadata accessor for HomePodSetupViewModel);
  }

  sub_10003D2B8(*(_DWORD *)(a1 + *(int *)(v4 + 140)));
  if (*(_BYTE *)(a1 + *(int *)(v4 + 132)) == 1)
  {
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "HomePodSetupIconContent: presentCancelSUSkipped", v28, 2u);
      swift_slowDealloc(v28, -1, -1);
    }

    sub_10003D904(v29, v30);
  }
  else
  {
    v31 = objc_msgSend(v2, "isViewLoaded");
    if ((_DWORD)v31)
    {
      v32 = Logger.logObject.getter(v31);
      v33 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v34 = 0;
        _os_log_impl((void *)&_mh_execute_header, v32, v33, "HomePodSetupIconContent: configureUI", v34, 2u);
        swift_slowDealloc(v34, -1, -1);
      }

      sub_10003BF7C(a1);
    }
  }
}

uint64_t sub_10003FA1C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10003FA40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10003FA50(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

const char *sub_10003FA58(unsigned int a1)
{
  if (a1 > 5)
    return "?";
  else
    return off_1000C35A0[a1];
}

void sub_10003FA80()
{
  uint64_t v0;

  sub_10003EE4C(*(void **)(v0 + 16));
}

uint64_t sub_10003FA88()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

id sub_10003FAAC(uint64_t a1)
{
  uint64_t v1;

  return sub_10003BC80(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10003FAB4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

void sub_10003FAE0(uint64_t a1)
{
  uint64_t *v1;

  sub_10003BBBC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10003FAEC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10003FB10(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_100039C7C(a1, v1);
}

uint64_t sub_10003FB18()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 33, 7);
}

void sub_10003FB44()
{
  uint64_t v0;

  sub_10003A238(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
}

uint64_t sub_10003FB50()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_10003FB74()
{
  uint64_t v0;

  sub_10003A3B4(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_10003FB80(uint64_t a1)
{
  uint64_t v1;

  return sub_10003ED1C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10003FB88(uint64_t a1)
{
  uint64_t v1;

  return sub_10003EDB4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10003FB90(uint64_t a1)
{
  uint64_t v1;

  return sub_10003EC84(a1, *(_QWORD *)(v1 + 16));
}

void sub_10003FB98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10003B5C4(*(void **)(v2 + 16), a2);
}

void sub_10003FBA0(uint64_t a1)
{
  uint64_t v1;

  sub_10003E270(a1, *(void **)(v1 + 16));
}

uint64_t sub_10003FBA8(uint64_t a1)
{
  uint64_t v1;

  return sub_10003E70C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10003FBB0(uint64_t a1)
{
  uint64_t v1;

  return sub_10003E7A4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10003FBB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(a4);
    swift_bridgeObjectRetain(a6);
    swift_bridgeObjectRetain(a8);
    return swift_bridgeObjectRetain(a10);
  }
  return result;
}

uint64_t sub_10003FC14()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 112));
  return swift_deallocObject(v0, 129, 7);
}

void sub_10003FC68(uint64_t a1)
{
  uint64_t v1;

  sub_10003E83C(a1, v1 + 16, *(void **)(v1 + 96), *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120), *(_BYTE *)(v1 + 128));
}

uint64_t sub_10003FC7C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 49, 7);
}

uint64_t sub_10003FCA8(uint64_t a1)
{
  uint64_t v1;

  return sub_10003EB90(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48));
}

void sub_10003FCB8(int a1)
{
  uint64_t v1;

  sub_10003EC28(a1, *(id *)(v1 + 16));
}

id sub_10003FD88(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  id result;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;

  if (a1)
  {
    if ((unint64_t)a1 >> 62)
    {
      if (a1 >= 0)
        v8 = a1 & 0xFFFFFFFFFFFFFF8;
      else
        v8 = a1;
      swift_bridgeObjectRetain_n(a1, 2);
      result = (id)_CocoaArrayWrapper.endIndex.getter(v8);
      v3 = (uint64_t)result;
      if (result)
        goto LABEL_4;
    }
    else
    {
      v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      result = (id)swift_bridgeObjectRetain_n(a1, 2);
      if (v3)
      {
LABEL_4:
        if (v3 < 1)
        {
          __break(1u);
LABEL_31:
          __break(1u);
          return result;
        }
        for (i = 0; i != v3; ++i)
        {
          if ((a1 & 0xC000000000000001) != 0)
            v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
          else
            v6 = *(id *)(a1 + 8 * i + 32);
          v7 = v6;
          objc_msgSend(v6, "removeFromSuperview");

        }
      }
    }
    swift_bridgeObjectRelease_n(a1, 2);
  }
  v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViewConstraints];
  *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViewConstraints] = 0;
  result = (id)swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViews];
  if (v10)
  {
    if ((unint64_t)v10 >> 62)
    {
      if (v10 >= 0)
        v15 = v10 & 0xFFFFFFFFFFFFFF8;
      else
        v15 = *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViews];
      swift_bridgeObjectRetain_n(*(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViews], 2);
      result = (id)_CocoaArrayWrapper.endIndex.getter(v15);
      v11 = (uint64_t)result;
      if (result)
      {
LABEL_18:
        if (v11 >= 1)
        {
          v12 = 0;
          do
          {
            if ((v10 & 0xC000000000000001) != 0)
              v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v10);
            else
              v13 = *(id *)(v10 + 8 * v12 + 32);
            v14 = v13;
            ++v12;
            objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
            objc_msgSend(v1, "addSubview:", v14);

          }
          while (v11 != v12);
          goto LABEL_29;
        }
        goto LABEL_31;
      }
    }
    else
    {
      v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      result = (id)swift_bridgeObjectRetain_n(*(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViews], 2);
      if (v11)
        goto LABEL_18;
    }
LABEL_29:
    swift_bridgeObjectRelease_n(v10, 2);
    return objc_msgSend(v1, "setNeedsUpdateConstraints");
  }
  return result;
}

void sub_10003FF70(void *a1)
{
  char *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;

  v2 = OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_accountLabel;
  v3 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_accountLabel];
  *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_accountLabel] = a1;
  v6 = a1;
  if (v3)
    objc_msgSend(v3, "removeFromSuperview");
  v4 = *(void **)&v1[v2];
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v1, "addSubview:", v5);
    objc_msgSend(v1, "setNeedsUpdateConstraints");

    v3 = v6;
    v6 = v5;
  }

}

void sub_10004001C(void *a1)
{
  char *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;

  v2 = OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_bodyLabel;
  v3 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_bodyLabel];
  *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_bodyLabel] = a1;
  v7 = a1;
  if (v3)
    objc_msgSend(v3, "removeFromSuperview");
  v4 = *(void **)&v1[v2];
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v1, "addSubview:", v5);
    v6 = *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_bodyLabelConstraints];
    *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_bodyLabelConstraints] = 0;
    swift_bridgeObjectRelease(v6);
    objc_msgSend(v1, "setNeedsUpdateConstraints");

    v3 = v7;
    v7 = v5;
  }

}

void sub_1000400DC(void *a1)
{
  char *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;

  v2 = OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_moreInfoButton;
  v3 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_moreInfoButton];
  *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_moreInfoButton] = a1;
  v7 = a1;
  if (v3)
    objc_msgSend(v3, "removeFromSuperview");
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_moreButtonConstraints];
  *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_moreButtonConstraints] = 0;
  swift_bridgeObjectRelease(v4);
  v5 = *(void **)&v1[v2];
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v1, "addSubview:", v6);
    objc_msgSend(v1, "setNeedsUpdateConstraints");

    v3 = v7;
    v7 = v6;
  }

}

char *sub_10004018C(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void *v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  Class isa;
  id v32;
  objc_super v33;

  *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViewConstraints] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_bodyLabelConstraints] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_moreButtonConstraints] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_accountLabelConstraints] = 0;
  v3 = OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViewsGuide;
  v4 = objc_allocWithZone((Class)UILayoutGuide);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  *(_QWORD *)&v5[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViews] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_accountLabel] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_bodyLabel] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_moreInfoButton] = 0;

  v33.receiver = v5;
  v33.super_class = (Class)type metadata accessor for HomePodSetupIconContentView();
  v6 = (char *)objc_msgSendSuper2(&v33, "initWithCardStyle:", a1);
  v7 = OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViewsGuide;
  v8 = *(void **)&v6[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViewsGuide];
  v9 = v6;
  objc_msgSend(v9, "addLayoutGuide:", v8);
  v10 = objc_msgSend(v9, "mainContentGuide");
  v32 = (id)objc_opt_self(NSLayoutConstraint);
  v11 = sub_10000D604(&qword_1000D6EE0);
  v12 = swift_allocObject(v11, 72, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100099550;
  v13 = objc_msgSend(v8, "topAnchor");
  v14 = objc_msgSend(v10, "topAnchor");
  v15 = objc_msgSend(v13, "constraintEqualToAnchor:", v14);

  *(_QWORD *)(v12 + 32) = v15;
  v16 = objc_msgSend(*(id *)&v6[v7], "leadingAnchor");
  v17 = objc_msgSend(v10, "leadingAnchor");
  v18 = objc_msgSend(v16, "constraintGreaterThanOrEqualToAnchor:", v17);

  *(_QWORD *)(v12 + 40) = v18;
  v19 = objc_msgSend(*(id *)&v6[v7], "trailingAnchor");
  v20 = objc_msgSend(v10, "trailingAnchor");
  v21 = objc_msgSend(v19, "constraintLessThanOrEqualToAnchor:", v20);

  *(_QWORD *)(v12 + 48) = v21;
  v22 = objc_msgSend(*(id *)&v6[v7], "centerXAnchor");
  v23 = objc_msgSend(v10, "centerXAnchor");
  v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

  *(_QWORD *)(v12 + 56) = v24;
  v25 = objc_msgSend(*(id *)&v6[v7], "bottomAnchor");
  v26 = objc_msgSend(v10, "bottomAnchor");
  v27 = objc_msgSend(v25, "constraintLessThanOrEqualToAnchor:", v26);

  *(_QWORD *)(v12 + 64) = v27;
  specialized Array._endMutation()(v28);
  v29 = v12;
  sub_100014934();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v29);
  objc_msgSend(v32, "activateConstraints:", isa);

  return v9;
}

void sub_100040570()
{
  char *v0;
  char *v1;
  char *v2;
  _QWORD *v3;
  uint64_t v4;
  _UNKNOWN **v5;
  char **p_type;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  double v12;
  id i;
  void *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  id v58;
  id v59;
  id v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  id v65;
  id v66;
  id v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  id v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  Class isa;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  uint64_t v91;
  void *v92;
  Class v93;
  uint64_t v94;
  id v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  uint64_t v111;
  void *v112;
  Class v113;
  uint64_t v114;
  id v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  id v122;
  id v123;
  id v124;
  id v125;
  id v126;
  id v127;
  id v128;
  id v129;
  id v130;
  uint64_t v131;
  void *v132;
  Class v133;
  uint64_t v134;
  id v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  unint64_t v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;
  double v144;
  id v145;
  id v146;
  id v147;
  id v148;
  uint64_t v149;
  unint64_t v150;
  unint64_t v151;
  uint64_t v152;
  id v153;
  id v154;
  id v155;
  id v156;
  uint64_t v157;
  unint64_t v158;
  unint64_t v159;
  uint64_t v160;
  id v161;
  id v162;
  id v163;
  uint64_t v164;
  uint64_t v165;
  _QWORD *v166;
  void *v167;
  Class v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  objc_super v174;

  v2 = v1;
  v174.receiver = v1;
  v174.super_class = (Class)type metadata accessor for HomePodSetupIconContentView();
  objc_msgSendSuper2(&v174, "updateConstraints");
  v3 = _swiftEmptyArrayStorage;
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViews];
  v5 = &_s10Foundation12CharacterSetV36_unconditionallyBridgeFromObjectiveCyACSo011NSCharacterC0CSgFZ_ptr;
  p_type = (char **)(&stru_1000CEFF0 + 16);
  v173 = v1;
  if (v4)
  {
    if ((unint64_t)v4 >> 62)
    {
      if (v4 >= 0)
        v169 = v4 & 0xFFFFFFFFFFFFFF8;
      else
        v169 = *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViews];
      swift_bridgeObjectRetain(v4);
      v7 = _CocoaArrayWrapper.endIndex.getter(v169);
      if (!v7)
        goto LABEL_5;
    }
    else
    {
      v7 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v4);
      if (!v7)
      {
LABEL_5:
        swift_bridgeObjectRelease(v4);
        goto LABEL_41;
      }
    }
    v0 = (char *)OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViewConstraints;
    if (*(_QWORD *)&v2[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViewConstraints])
      goto LABEL_5;
    v170 = OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViewConstraints;
    v8 = v7 - 1;
    v171 = v7 - 1;
    if (v7 < 1)
    {
      __break(1u);
    }
    else
    {
      v9 = 0;
      v10 = 0;
      v11 = *(void **)&v173[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViewsGuide];
      v12 = PRXIconToIconMargin;
      if ((v4 & 0xC000000000000001) == 0)
        goto LABEL_9;
LABEL_8:
      for (i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v4); ; i = *(id *)(v4 + 8 * v9 + 32))
      {
        v14 = i;
        v15 = objc_msgSend(i, "centerYAnchor", v170);
        if (!v10 || (v16 = objc_msgSend(v10, "centerYAnchor")) == 0)
          v16 = objc_msgSend(v11, "centerYAnchor");
        v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v18);
        v20 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v19 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v20 >= v19 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1);
        v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v17);
        specialized Array._endMutation()(v21);
        v22 = objc_msgSend(v14, "image");
        if (v22)
        {
          v23 = v22;
          objc_msgSend(v22, "size");
          v25 = v24;
          v27 = v26;

        }
        else
        {
          v27 = 1.0;
          v25 = 1.0;
        }
        if (v25 <= 0.0)
          v28 = 1.0;
        else
          v28 = v27 / v25;
        v29 = objc_msgSend(v14, "heightAnchor");
        v30 = objc_msgSend(v14, "widthAnchor");
        v31 = objc_msgSend(v29, "constraintEqualToAnchor:multiplier:", v30, v28);

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v32);
        v34 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v33 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v34 >= v33 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v33 > 1, v34 + 1, 1);
        v35 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v34, v31);
        specialized Array._endMutation()(v35);
        v36 = objc_msgSend(v14, "topAnchor");
        v37 = objc_msgSend(v11, "topAnchor");
        v38 = objc_msgSend(v36, "constraintGreaterThanOrEqualToAnchor:", v37);

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v39);
        v41 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v40 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v41 >= v40 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v40 > 1, v41 + 1, 1);
        v42 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v41, v38);
        specialized Array._endMutation()(v42);
        v43 = objc_msgSend(v14, "bottomAnchor");
        v44 = objc_msgSend(v11, "bottomAnchor");
        v45 = objc_msgSend(v43, "constraintLessThanOrEqualToAnchor:", v44);

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v46);
        v48 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v47 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v48 >= v47 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v47 > 1, v48 + 1, 1);
        v49 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v48, v45);
        specialized Array._endMutation()(v49);
        if (v10)
        {
          v50 = v10;
          v51 = objc_msgSend(v14, "leadingAnchor");
          v52 = objc_msgSend(v50, "trailingAnchor");
          v53 = objc_msgSend(v51, "constraintEqualToAnchor:constant:", v52, v12);

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v54);
          v56 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          v55 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v56 >= v55 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v55 > 1, v56 + 1, 1);
          v57 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v56, v53);
          specialized Array._endMutation()(v57);
          v58 = objc_msgSend(v50, "widthAnchor");
          v59 = objc_msgSend(v14, "widthAnchor");
          v60 = objc_msgSend(v58, "constraintEqualToAnchor:", v59);

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v61);
          v63 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          v62 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v63 >= v62 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v62 > 1, v63 + 1, 1);
          v64 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v63, v60);
          specialized Array._endMutation()(v64);

        }
        else
        {
          v65 = objc_msgSend(v14, "leadingAnchor");
          v66 = objc_msgSend(v11, "leadingAnchor");
          v67 = objc_msgSend(v65, "constraintEqualToAnchor:", v66);

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v68);
          v70 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          v69 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v70 >= v69 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v69 > 1, v70 + 1, 1);
          v71 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v70, v67);
          specialized Array._endMutation()(v71);
        }
        if (v171 == v9)
          break;
        ++v9;
        v10 = v14;
        if ((v4 & 0xC000000000000001) != 0)
          goto LABEL_8;
LABEL_9:
        ;
      }
      swift_bridgeObjectRelease(v4);
      v4 = v14;
      v72 = objc_msgSend((id)v4, "trailingAnchor");
      v73 = objc_msgSend(v11, "trailingAnchor");
      v3 = objc_msgSend(v72, "constraintEqualToAnchor:", v73);

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v74);
      v2 = *(char **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v8 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if ((unint64_t)v2 < v8 >> 1)
        goto LABEL_40;
    }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v8 > 1, v2 + 1, 1);
LABEL_40:
    v75 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v2, v3);
    specialized Array._endMutation()(v75);

    v5 = &_s10Foundation12CharacterSetV36_unconditionallyBridgeFromObjectiveCyACSo011NSCharacterC0CSgFZ_ptr;
    v76 = (void *)objc_opt_self(NSLayoutConstraint);
    sub_100014934();
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    p_type = &stru_1000CEFF0.type;
    objc_msgSend(v76, "activateConstraints:", isa);

    v2 = v173;
    v0 = (char *)v170;
    v78 = *(_QWORD *)&v173[v170];
    *(_QWORD *)&v173[v170] = _swiftEmptyArrayStorage;

    swift_bridgeObjectRelease(v78);
  }
LABEL_41:
  v79 = *(void **)&v2[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_accountLabel];
  if (v79)
  {
    v0 = (char *)OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_accountLabelConstraints;
    if (!*(_QWORD *)&v2[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_accountLabelConstraints])
    {
      v80 = sub_10000D604(&qword_1000D6EE0);
      v81 = swift_allocObject(v80, 48, 7);
      *(_OWORD *)(v81 + 16) = xmmword_100099270;
      v82 = v79;
      v83 = objc_msgSend(v82, "leadingAnchor");
      v84 = objc_msgSend(v2, "mainContentGuide");
      v85 = objc_msgSend(v84, "leadingAnchor");

      v86 = objc_msgSend(v83, "constraintEqualToAnchor:", v85);
      *(_QWORD *)(v81 + 32) = v86;
      v87 = objc_msgSend(v82, "trailingAnchor");
      v88 = objc_msgSend(v173, "mainContentGuide");
      v89 = objc_msgSend(v88, "trailingAnchor");

      v90 = objc_msgSend(v87, "constraintEqualToAnchor:", v89);
      *(_QWORD *)(v81 + 40) = v90;
      specialized Array._endMutation()(v91);
      v92 = (void *)objc_opt_self(v5[368]);
      sub_100014934();
      v93 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v92, p_type[411], v93);

      v2 = v173;
      v94 = *(_QWORD *)&v0[(_QWORD)v173];
      *(_QWORD *)&v0[(_QWORD)v173] = v81;
      swift_bridgeObjectRelease(v94);
      v95 = v82;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v95);
      v97 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v96 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v97 >= v96 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v96 > 1, v97 + 1, 1);
      v98 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v97, v95);
      specialized Array._endMutation()(v98);

    }
  }
  v99 = *(void **)&v2[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_bodyLabel];
  if (v99)
  {
    v0 = (char *)OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_bodyLabelConstraints;
    if (!*(_QWORD *)&v2[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_bodyLabelConstraints])
    {
      v100 = sub_10000D604(&qword_1000D6EE0);
      v101 = swift_allocObject(v100, 48, 7);
      *(_OWORD *)(v101 + 16) = xmmword_100099270;
      v102 = v99;
      v103 = objc_msgSend(v102, "leadingAnchor");
      v104 = objc_msgSend(v2, "mainContentGuide");
      v105 = objc_msgSend(v104, "leadingAnchor");

      v106 = objc_msgSend(v103, "constraintEqualToAnchor:", v105);
      *(_QWORD *)(v101 + 32) = v106;
      v107 = objc_msgSend(v102, "trailingAnchor");
      v108 = objc_msgSend(v173, "mainContentGuide");
      v109 = objc_msgSend(v108, "trailingAnchor");

      v110 = objc_msgSend(v107, "constraintEqualToAnchor:", v109);
      *(_QWORD *)(v101 + 40) = v110;
      specialized Array._endMutation()(v111);
      v112 = (void *)objc_opt_self(v5[368]);
      sub_100014934();
      v113 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v112, p_type[411], v113);

      v2 = v173;
      v114 = *(_QWORD *)&v0[(_QWORD)v173];
      *(_QWORD *)&v0[(_QWORD)v173] = v101;
      swift_bridgeObjectRelease(v114);
      v115 = v102;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v115);
      v117 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v116 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v117 >= v116 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v116 > 1, v117 + 1, 1);
      v118 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v117, v115);
      specialized Array._endMutation()(v118);

    }
  }
  v119 = *(void **)&v2[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_moreInfoButton];
  if (v119)
  {
    v0 = (char *)OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_moreButtonConstraints;
    if (!*(_QWORD *)&v2[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_moreButtonConstraints])
    {
      v120 = sub_10000D604(&qword_1000D6EE0);
      v121 = swift_allocObject(v120, 48, 7);
      *(_OWORD *)(v121 + 16) = xmmword_100099270;
      v122 = v119;
      v123 = objc_msgSend(v122, "leadingAnchor");
      v124 = objc_msgSend(v2, "mainContentGuide");
      v125 = objc_msgSend(v124, "leadingAnchor");

      v126 = objc_msgSend(v123, "constraintEqualToAnchor:", v125);
      *(_QWORD *)(v121 + 32) = v126;
      v127 = objc_msgSend(v122, "trailingAnchor");
      v128 = objc_msgSend(v173, "mainContentGuide");
      v129 = objc_msgSend(v128, "trailingAnchor");

      v130 = objc_msgSend(v127, "constraintEqualToAnchor:", v129);
      *(_QWORD *)(v121 + 40) = v130;
      specialized Array._endMutation()(v131);
      v132 = (void *)objc_opt_self(v5[368]);
      sub_100014934();
      v133 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v132, p_type[411], v133);

      v134 = *(_QWORD *)&v0[(_QWORD)v173];
      *(_QWORD *)&v0[(_QWORD)v173] = v121;
      swift_bridgeObjectRelease(v134);
      v135 = v122;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v135);
      v137 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v136 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v137 >= v136 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v136 > 1, v137 + 1, 1);
      v138 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v137, v135);
      specialized Array._endMutation()(v138);

    }
  }
  v139 = _swiftEmptyArrayStorage;
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    if ((uint64_t)_swiftEmptyArrayStorage < 0)
      v166 = _swiftEmptyArrayStorage;
    else
      v166 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    v141 = _CocoaArrayWrapper.endIndex.getter(v166);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    if (v141)
      goto LABEL_58;
LABEL_77:
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    v139 = 0;
    goto LABEL_78;
  }
  v140 = (unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8;
  v141 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v141)
    goto LABEL_77;
LABEL_58:
  if (v141 >= 1)
  {
    v142 = 0;
    v143 = 0;
    v172 = OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViewsGuide;
    v144 = PRXMainContentMargin;
    while (1)
    {
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0)
      {
        v153 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v143, _swiftEmptyArrayStorage);
        if (v142)
          goto LABEL_60;
      }
      else
      {
        v153 = (id)_swiftEmptyArrayStorage[v143 + 4];
        if (v142)
        {
LABEL_60:
          v145 = v142;
          v146 = objc_msgSend(v153, "topAnchor");
          v147 = objc_msgSend(v145, "bottomAnchor");
          v148 = objc_msgSend(v146, "constraintEqualToAnchor:constant:", v147, v144);

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v149);
          v151 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          v150 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v151 >= v150 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v150 > 1, v151 + 1, 1);
          v152 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v151, v148);
          specialized Array._endMutation()(v152);

          goto LABEL_63;
        }
      }
      v154 = objc_msgSend(v153, "topAnchor", v170);
      v155 = objc_msgSend(*(id *)&v173[v172], "bottomAnchor");
      v156 = objc_msgSend(v154, "constraintEqualToAnchor:constant:", v155, v144);

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v157);
      v159 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v158 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v159 >= v158 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v158 > 1, v159 + 1, 1);
      v160 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v159, v156);
      specialized Array._endMutation()(v160);
LABEL_63:
      ++v143;
      v142 = v153;
      if (v141 == v143)
      {
        swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
        v139 = v153;
        v161 = objc_msgSend(v139, "bottomAnchor");
        v162 = objc_msgSend(v173, "mainContentGuide");
        v163 = objc_msgSend(v162, "bottomAnchor");

        v0 = (char *)objc_msgSend(v161, "constraintLessThanOrEqualToAnchor:", v163);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v164);
        v141 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v140 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v141 < v140 >> 1)
          goto LABEL_72;
        goto LABEL_85;
      }
    }
  }
  __break(1u);
LABEL_85:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v140 > 1, v141 + 1, 1);
LABEL_72:
  v165 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v141, v0);
  specialized Array._endMutation()(v165);

  p_type = (char **)(&stru_1000CEFF0 + 16);
  v5 = &_s10Foundation12CharacterSetV36_unconditionallyBridgeFromObjectiveCyACSo011NSCharacterC0CSgFZ_ptr;
LABEL_78:
  v167 = (void *)objc_opt_self(v5[368]);
  sub_100014934();
  v168 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  objc_msgSend(v167, p_type[411], v168);

}

id sub_100041728()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupIconContentView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for HomePodSetupIconContentView()
{
  return objc_opt_self(_TtC14HDSViewService27HomePodSetupIconContentView);
}

void sub_100041820()
{
  char *v0;
  uint64_t v1;

  *(_QWORD *)&v0[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViewConstraints] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_bodyLabelConstraints] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_moreButtonConstraints] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_accountLabelConstraints] = 0;
  v1 = OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViewsGuide;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViews] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_accountLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_bodyLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_moreInfoButton] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010009D420, "HDSViewService/HomePodSetupIconContentView.swift", 48, 2, 84, 0);
  __break(1u);
}

uint64_t sub_100041904(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;

  v2 = IndexPath.section.getter();
  v3 = *(_QWORD *)(a1 + 16);
  if (v2 >= v3)
    return 0;
  result = IndexPath.section.getter();
  if (result < 0)
    goto LABEL_18;
  if (!v3)
  {
LABEL_13:
    __break(1u);
    return 0;
  }
  v5 = result;
  v6 = 0;
  v7 = 0;
  v8 = a1 + 32;
  while (1)
  {
    v9 = *(_QWORD *)(v8 + 8 * v6);
    result = IndexPath.section.getter();
    if (v6 != result)
      break;
    if (IndexPath.row.getter() >= v9)
      return 0;
    result = IndexPath.row.getter();
    v10 = __OFADD__(v7, result);
    v7 += result;
    if (v10)
      goto LABEL_17;
LABEL_11:
    if (v5 == v6)
      return v7;
    if (v3 == ++v6)
      goto LABEL_13;
  }
  v10 = __OFADD__(v7, v9);
  v7 += v9;
  if (!v10)
    goto LABEL_11;
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1000419D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000111E8(v2, qword_1000D6370);
  v3 = sub_10001118C(v2, (uint64_t)qword_1000D6370);
  if (qword_1000D55C0 != -1)
    swift_once(&qword_1000D55C0, sub_100058090);
  v4 = sub_10001118C(v2, (uint64_t)qword_1000DB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

void sub_100041A60()
{
  NSString v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = String._bridgeToObjectiveC()();
  v1 = sub_100006354(v0);

  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v4 = v3;

  qword_1000DB600 = v2;
  *(_QWORD *)algn_1000DB608 = v4;
}

void sub_100041AD4()
{
  NSString v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = String._bridgeToObjectiveC()();
  v1 = sub_100006354(v0);

  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v4 = v3;

  qword_1000DB610 = v2;
  *(_QWORD *)algn_1000DB618 = v4;
}

id sub_100041B48()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC14HDSViewService35HomePodSetupWiFiErrorViewController____lazy_storage___infoTableView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC14HDSViewService35HomePodSetupWiFiErrorViewController____lazy_storage___infoTableView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC14HDSViewService35HomePodSetupWiFiErrorViewController____lazy_storage___infoTableView);
  }
  else
  {
    v4 = type metadata accessor for HomePodSetupWiFiInfoTableView();
    v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)), "init");
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

void sub_100041BBC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char *v11;
  objc_class *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  void *v34;
  id v35;
  uint64_t v36;
  id v37;
  id v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t aBlock[5];
  uint64_t v43;
  char v44[24];
  objc_super v45;

  v1 = v0;
  v2 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v2);
  v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for HomePodSetupViewModel(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (uint64_t *)((char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  v11 = (char *)&v39 - v10;
  v12 = (objc_class *)type metadata accessor for HomePodSetupWiFiErrorViewController(0);
  v45.receiver = v1;
  v45.super_class = v12;
  objc_msgSendSuper2(&v45, "viewDidLoad");
  v13 = (uint64_t)&v1[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_viewModel];
  swift_beginAccess(&v1[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_viewModel], v44, 0, 0);
  sub_100014824(v13, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10001486C((uint64_t)v4);
    if (qword_1000D5540 != -1)
      swift_once(&qword_1000D5540, sub_1000419D0);
    v15 = type metadata accessor for Logger(0, v14);
    v16 = sub_10001118C(v15, (uint64_t)qword_1000D6370);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "HomePodSetupWiFiErrorViewController: viewDidLoad failed because viewModel not set.", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

  }
  else
  {
    sub_1000148AC((uint64_t)v4, (uint64_t)v11);
    if (qword_1000D5540 != -1)
      swift_once(&qword_1000D5540, sub_1000419D0);
    v21 = type metadata accessor for Logger(0, v20);
    sub_10001118C(v21, (uint64_t)qword_1000D6370);
    v22 = sub_1000111A4((uint64_t)v11, (uint64_t)v9);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(12, -1);
      v26 = swift_slowAlloc(32, -1);
      v40 = v1;
      v27 = v26;
      aBlock[0] = v26;
      v39 = v11;
      *(_DWORD *)v25 = 136315138;
      v28 = *v9;
      v29 = v9[1];
      swift_bridgeObjectRetain(v29);
      v41 = sub_10003EF58(v28, v29, aBlock);
      v11 = v39;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, aBlock);
      swift_bridgeObjectRelease(v29);
      sub_1000148F0((uint64_t)v9);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "HomePodSetupWiFiErrorViewController: viewDidLoad with title %s", v25, 0xCu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      v30 = v27;
      v1 = v40;
      swift_slowDealloc(v30, -1, -1);
      swift_slowDealloc(v25, -1, -1);
    }
    else
    {
      sub_1000148F0((uint64_t)v9);
    }

    if (v11[*(int *)(v5 + 104)] == 1)
    {
      if (qword_1000D5548 != -1)
        swift_once(&qword_1000D5548, sub_100041A60);
      v31 = *(_QWORD *)algn_1000DB608;
      v32 = swift_allocObject(&unk_1000C36D8, 24, 7);
      swift_unknownObjectWeakInit(v32 + 16, v1);
      swift_bridgeObjectRetain(v31);
      swift_retain(v32);
      v33 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v31);
      aBlock[4] = (uint64_t)sub_100042E80;
      v43 = v32;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100038D38;
      aBlock[3] = (uint64_t)&unk_1000C36F0;
      v34 = _Block_copy(aBlock);
      v35 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v33, 1, v34);

      _Block_release(v34);
      v36 = v43;
      swift_release(v32);
      v37 = objc_msgSend(v1, "addAction:", v35, swift_release(v36).n128_f64[0]);

    }
    v38 = sub_100041B48();
    objc_msgSend(v38, "setAlpha:", 0.0);

    sub_1000148F0((uint64_t)v11);
  }
}

void sub_100042098(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v5 = (_BYTE *)Strong;
    v6 = OBJC_IVAR____TtC14HDSViewService35HomePodSetupWiFiErrorViewController_showInfo;
    if (*(_BYTE *)(Strong + OBJC_IVAR____TtC14HDSViewService35HomePodSetupWiFiErrorViewController_showInfo) == 1)
    {
      sub_10004283C();
      if (qword_1000D5550 != -1)
        swift_once(&qword_1000D5550, sub_100041AD4);
      v7 = qword_1000DB610;
      v8 = *(_QWORD *)algn_1000DB618;
      if (qword_1000D5548 != -1)
        swift_once(&qword_1000D5548, sub_100041A60);
    }
    else
    {
      sub_100042488(Strong, v4);
      if (qword_1000D5548 != -1)
        swift_once(&qword_1000D5548, sub_100041A60);
      v7 = qword_1000DB600;
      v8 = *(_QWORD *)algn_1000DB608;
      if (qword_1000D5550 != -1)
        swift_once(&qword_1000D5550, sub_100041AD4);
    }
    sub_1000422BC(v7, v8);
    v5[v6] = (v5[v6] & 1) == 0;

  }
}

void sub_1000422BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;

  v5 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_myContentView), "actionButtons");
  v6 = sub_100035CA4(0, &qword_1000D63C8, PRXButton_ptr);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v20 = v7;
    else
      v20 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v8 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease(v7);
    if (v8)
      goto LABEL_3;
LABEL_22:
    swift_bridgeObjectRelease(v7);
    return;
  }
  v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v8)
    goto LABEL_22;
LABEL_3:
  if (v8 >= 1)
  {
    v9 = 0;
    while (1)
    {
      if ((v7 & 0xC000000000000001) != 0)
        v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v7);
      else
        v12 = *(id *)(v7 + 8 * v9 + 32);
      v11 = v12;
      v13 = objc_msgSend(v12, "titleForState:", 0);
      if (!v13)
        goto LABEL_7;
      v14 = v13;
      v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      v17 = v16;

      if (v15 == a1 && v17 == a2)
      {
        swift_bridgeObjectRelease(a2);
      }
      else
      {
        v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, a1, a2, 0);
        swift_bridgeObjectRelease(v17);
        if ((v19 & 1) == 0)
          goto LABEL_7;
      }
      v10 = String._bridgeToObjectiveC()();
      objc_msgSend(v11, "setTitle:forState:", v10, 0);

      v11 = v10;
LABEL_7:
      ++v9;

      if (v8 == v9)
        goto LABEL_22;
    }
  }
  __break(1u);
}

void sub_100042488(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  char v20;
  NSString v21;
  _QWORD v22[5];
  uint64_t v23;

  v3 = v2;
  if (qword_1000D5540 != -1)
    swift_once(&qword_1000D5540, sub_1000419D0);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10001118C(v4, (uint64_t)qword_1000D6370);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "HomePodSetupWiFiErrorViewController: user tapped on the info button.", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  v9 = sub_100041B48();
  objc_msgSend(v9, "setSeparatorStyle:", 0);

  v10 = sub_100041B48();
  sub_100080AA4();

  sub_10004297C();
  v11 = (void *)objc_opt_self(UIView);
  v12 = swift_allocObject(&unk_1000C3688, 24, 7);
  *(_QWORD *)(v12 + 16) = v3;
  v22[4] = sub_100042E00;
  v23 = v12;
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 1107296256;
  v22[2] = sub_10007C6B4;
  v22[3] = &unk_1000C36A0;
  v13 = _Block_copy(v22);
  v14 = v23;
  v15 = v3;
  swift_release(v14);
  objc_msgSend(v11, "animateWithDuration:animations:", v13, 0.5);
  _Block_release(v13);
  v16 = sub_100041B48();
  objc_msgSend(v16, "setHidden:", 0);

  Strong = swift_unknownObjectWeakLoadStrong(&v15[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_presenter]);
  if (Strong)
  {
    v18 = Strong;
    v19 = swift_allocObject(&unk_1000C36D8, 24, 7);
    swift_unknownObjectWeakInit(v19 + 16, v15);
    swift_retain(v19);
    v20 = sub_1000874A8((uint64_t)sub_100042E78, v19);
    swift_unknownObjectRelease(v18);
    swift_release_n(v19, 2);
    if ((v20 & 1) == 0)
    {
      v21 = String._bridgeToObjectiveC()();
      objc_msgSend(v15, "showActivityIndicatorWithStatus:", v21);

    }
  }
}

void sub_100042704(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  void *Strong;
  void *v10;
  id v11;
  _BYTE v12[24];

  v3 = a2 + 16;
  if (qword_1000D5540 != -1)
    swift_once(&qword_1000D5540, sub_1000419D0);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10001118C(v4, (uint64_t)qword_1000D6370);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "HomePodSetupWiFiErrorViewController: Request for PreAuth completed.", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  swift_beginAccess(v3, v12, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v10 = Strong;
    objc_msgSend(Strong, "hideActivityIndicator");
    sub_100062164(1.0);
    v11 = sub_100041B48();
    sub_100080C4C(a1);

  }
}

void sub_10004283C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  void **v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void (*v14)();
  uint64_t v15;

  v1 = (void *)objc_opt_self(UIView);
  v2 = swift_allocObject(&unk_1000C35E8, 24, 7);
  *(_QWORD *)(v2 + 16) = v0;
  v14 = sub_100042DA0;
  v15 = v2;
  v10 = _NSConcreteStackBlock;
  v11 = 1107296256;
  v12 = sub_10007C6B4;
  v13 = &unk_1000C3600;
  v3 = _Block_copy(&v10);
  v4 = v15;
  v5 = v0;
  swift_release(v4);
  v6 = swift_allocObject(&unk_1000C3638, 24, 7);
  *(_QWORD *)(v6 + 16) = v5;
  v14 = sub_100042DC0;
  v15 = v6;
  v10 = _NSConcreteStackBlock;
  v11 = 1107296256;
  v12 = sub_100084D9C;
  v13 = &unk_1000C3650;
  v7 = _Block_copy(&v10);
  v8 = v15;
  v9 = v5;
  swift_release(v8);
  objc_msgSend(v1, "animateWithDuration:animations:completion:", v3, v7, 0.5);
  _Block_release(v7);
  _Block_release(v3);
}

void sub_10004297C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  Class isa;

  v1 = OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_myContentView;
  v2 = *(id *)(v0 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_myContentView);
  v3 = sub_100041B48();
  objc_msgSend(v2, "addSubview:", v3);

  v4 = objc_msgSend(*(id *)(v0 + v1), "mainContentGuide");
  v5 = (void *)objc_opt_self(NSLayoutConstraint);
  v6 = sub_10000D604(&qword_1000D6EE0);
  v7 = swift_allocObject(v6, 64, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100099580;
  v8 = sub_100041B48();
  v9 = objc_msgSend(v8, "topAnchor");

  v10 = objc_msgSend(v4, "topAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

  *(_QWORD *)(v7 + 32) = v11;
  v12 = sub_100041B48();
  v13 = objc_msgSend(v12, "bottomAnchor");

  v14 = objc_msgSend(v4, "bottomAnchor");
  v15 = objc_msgSend(v13, "constraintEqualToAnchor:", v14);

  *(_QWORD *)(v7 + 40) = v15;
  v16 = sub_100041B48();
  v17 = objc_msgSend(v16, "leadingAnchor");

  v18 = objc_msgSend(v4, "leadingAnchor");
  v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

  *(_QWORD *)(v7 + 48) = v19;
  v20 = sub_100041B48();
  v21 = objc_msgSend(v20, "trailingAnchor");

  v22 = objc_msgSend(v4, "trailingAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

  *(_QWORD *)(v7 + 56) = v23;
  specialized Array._endMutation()(v24);
  sub_100035CA4(0, (unint64_t *)&qword_1000D7080, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v7);
  objc_msgSend(v5, "activateConstraints:", isa);

}

void sub_100042C9C()
{
  uint64_t v0;

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC14HDSViewService35HomePodSetupWiFiErrorViewController____lazy_storage___infoTableView));
}

id sub_100042CAC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupWiFiErrorViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100042CF0()
{
  return type metadata accessor for HomePodSetupWiFiErrorViewController(0);
}

uint64_t type metadata accessor for HomePodSetupWiFiErrorViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1000D63B8;
  if (!qword_1000D63B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HomePodSetupWiFiErrorViewController);
  return result;
}

uint64_t sub_100042D34(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = "\b";
  v2[1] = &unk_1000995D0;
  return swift_updateClassMetadata2(a1, 256, 2, v2, a1 + 384);
}

uint64_t sub_100042D7C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100042DA0()
{
  sub_100042E08(0.0);
}

uint64_t sub_100042DA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100042DB8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100042DC0()
{
  id v0;

  v0 = sub_100041B48();
  objc_msgSend(v0, "setHidden:", 1);

}

void sub_100042E00()
{
  sub_100042E08(1.0);
}

void sub_100042E08(double a1)
{
  id v2;

  v2 = sub_100041B48();
  objc_msgSend(v2, "setAlpha:", a1);

}

uint64_t sub_100042E54()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100042E78(uint64_t *a1)
{
  uint64_t v1;

  sub_100042704(a1, v1);
}

void sub_100042E80(uint64_t a1)
{
  uint64_t v1;

  sub_100042098(a1, v1);
}

uint64_t sub_100042EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000111E8(v2, qword_1000D63D0);
  v3 = sub_10001118C(v2, (uint64_t)qword_1000D63D0);
  if (qword_1000D55C0 != -1)
    swift_once(&qword_1000D55C0, sub_100058090);
  v4 = sub_10001118C(v2, (uint64_t)qword_1000DB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

uint64_t sub_100042F38(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100042F64 + 4 * byte_1000995F0[a1]))(1701736270, 0xE400000000000000);
}

uint64_t sub_100042F64()
{
  return 1818845510;
}

uint64_t sub_100042F70()
{
  return 1701080899;
}

uint64_t sub_100042F7C()
{
  return 0x694669576F6ELL;
}

uint64_t sub_100042F90()
{
  return 0x69466957646142;
}

uint64_t sub_100042FA8()
{
  return 0x64756F6C43696F6ELL;
}

uint64_t sub_100042FC0()
{
  return 0x324153486F6ELL;
}

uint64_t sub_100042FD4()
{
  return 0x73656E7554696F6ELL;
}

uint64_t sub_100042FEC()
{
  return 0x656D6F486F6ELL;
}

uint64_t sub_100043000()
{
  return 0x61686379654B6F6ELL;
}

uint64_t sub_100043020()
{
  return 0x6C70536572616873;
}

uint64_t sub_10004303C()
{
  return 0x6F69647561;
}

uint64_t sub_100043050()
{
  return 1769105779;
}

uint64_t sub_10004305C()
{
  return 0x73754D656C707061;
}

uint64_t sub_100043078()
{
  return 0x65746E4569666977;
}

uint64_t sub_10004309C()
{
  return 0x6974616D6F747541;
}

BOOL sub_1000430BC(char *a1, char *a2)
{
  return dword_1000998BC[*a1] == dword_1000998BC[*a2];
}

Swift::Int sub_1000430E0()
{
  char *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(dword_1000998BC[v1]);
  return Hasher._finalize()();
}

void sub_10004312C()
{
  char *v0;

  Hasher._combine(_:)(dword_1000998BC[*v0]);
}

Swift::Int sub_100043160(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(dword_1000998BC[v2]);
  return Hasher._finalize()();
}

uint64_t sub_1000431A8@<X0>(unsigned int *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_100048E10(*a1);
  *a2 = result;
  return result;
}

void sub_1000431D0(_DWORD *a1@<X8>)
{
  char *v1;

  *a1 = dword_1000998BC[*v1];
}

uint64_t sub_1000431E8()
{
  unsigned __int8 *v0;

  return sub_100042F38(*v0);
}

uint64_t sub_1000431F0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 8);
  if (v2)
  {
    v4 = v1[5];
    v3 = v1[6];
    v6 = v1[3];
    v5 = v1[4];
    v7 = v1[2];
    v8 = *v1;
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 8));
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v4);
    sub_100012D4C(v8, v2, v7, v6, v5, v4);
  }
  else
  {
    LOWORD(v3) = 0;
  }
  v9 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_subscribedToMusicService);
  if ((v3 & 0x1000) != 0)
    v9 = 0;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_selectedHomeIsROAR) == 1)
  {
    if ((v9 & 1) == 0)
      return (v3 & 0x800) == 0;
    return 1;
  }
  return v9 != 0;
}

uint64_t sub_1000432CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  void (*v21)(void);
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  unint64_t v38;
  char v39;
  char v40;
  unint64_t v41;
  char v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  int v48;
  unint64_t v49;
  char v50;
  int v51;
  unint64_t v52;
  char v53;
  char v54;
  unint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  unint64_t v62;
  char v63;
  int v64;
  id v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  id v69;
  void *v70;
  unsigned int v71;
  NSString v72;
  NSString v73;
  uint64_t Int64;
  id v75;
  char *v76;
  unint64_t v77;
  char v78;
  uint32_t *p_cb;
  void *v80;
  id v81;
  NSString v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  __int16 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  NSObject *v105;
  uint64_t v106;
  os_log_type_t v107;
  uint8_t *v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  id v123;
  unint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  NSObject *v129;
  uint64_t v130;
  os_log_type_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  uint64_t result;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  id v146[2];
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  id v150[5];
  __int128 v151;
  __int128 v152;

  v2 = v1;
  v4 = sub_10000D604(&qword_1000D6CB0);
  v5 = __chkstk_darwin(v4);
  v142 = (uint64_t)&v138 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v8 = (char *)&v138 - v7;
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v140 = (char *)&v138 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v14 = (char *)&v138 - v13;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 32) = 0;
  *(_BYTE *)(v1 + 36) = 1;
  *(_QWORD *)(v1 + 72) = 0;
  *(_QWORD *)(v1 + 48) = 0;
  *(_QWORD *)(v1 + 56) = 0;
  *(_QWORD *)(v1 + 40) = 0;
  *(_DWORD *)(v1 + 64) = 0;
  v15 = v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_defaultRoomIndexPath;
  v16 = type metadata accessor for IndexPath(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_dismissType;
  *(_DWORD *)v17 = 0;
  *(_BYTE *)(v17 + 4) = 1;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_error) = 0;
  v18 = (_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_iCloudId);
  *v18 = 0;
  v18[1] = 0;
  v19 = (_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_iTunesId);
  *v19 = 0;
  v19[1] = 0;
  v20 = v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_rssi;
  *(_DWORD *)v20 = 0;
  *(_BYTE *)(v20 + 4) = 1;
  v21 = *(void (**)(void))(v10 + 56);
  v141 = v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_sessionUUID;
  v21();
  *(_DWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_status) = 0;
  *(_DWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoRole) = 1;
  v139 = OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoCounterpartColor;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoCounterpartColor) = SFDeviceColorCodeUnknown;
  v143 = (char *)OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_viewAppearedTicks;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_viewAppearedTicks) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_availableSiriLanguages) = _swiftEmptyArrayStorage;
  v22 = (_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preferredSiriLanguageCode);
  *v22 = 0;
  v22[1] = 0xE000000000000000;
  v23 = (_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_selectedSiriLanguageCode);
  *v23 = 0;
  v23[1] = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_availableAccessories) = _swiftEmptyArrayStorage;
  v24 = (_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceGUID);
  *v24 = 0;
  v24[1] = 0xE000000000000000;
  v25 = (_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceSerialNumber);
  *v25 = 0;
  v25[1] = 0xE000000000000000;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_siriDialogInfo) = 0;
  v144 = OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceActionType;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceActionType) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_allowsRandomVoiceSelection) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_sfSession) = 0;
  v26 = v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation;
  *(_OWORD *)v26 = 0u;
  *(_OWORD *)(v26 + 16) = 0u;
  *(_OWORD *)(v26 + 32) = 0u;
  *(_QWORD *)(v26 + 48) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_assetBundles) = &_swiftEmptyDictionarySingleton;
  v27 = v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_cachedProductImage;
  v28 = type metadata accessor for AdjustedImage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 1, 1, v28);
  *(_DWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_cachedProductImageflags) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_subscribedToMusicService) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_selectedHomeIsROAR) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeHasLocationEnabled) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeHasExistingHomePods) = 0;
  v29 = (_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeName);
  *v29 = 0;
  v29[1] = 0xE000000000000000;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_userEnabledLocationForHomePod) = 0;
  *(_DWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_bonjourTestState) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_siriDataSharingEnabled) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_amsMarketingItem) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_acceptedMusicTerms) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_showHomepodSoftwareUpdate) = 0;
  *(_DWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homePodProductVersion) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_isHomeInHH2) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_jsEnabled) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_forcedADPSoftwareUpdate) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_showCannotCancelSU) = 0;
  *(_DWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_airDropStatus) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_voiceRecognitionEnabled) = 0;
  v147 = 0xD000000000000010;
  v148 = 0x800000010009F6D0;
  AnyHashable.init<A>(_:)(v150, &v147, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v30 = sub_10004A78C((uint64_t)v150), (v31 & 1) != 0))
  {
    sub_10000DB98(*(_QWORD *)(a1 + 56) + 32 * v30, (uint64_t)&v151);
  }
  else
  {
    v151 = 0u;
    v152 = 0u;
  }
  sub_10000DAE8((uint64_t)v150);
  if (!*((_QWORD *)&v152 + 1))
  {
    v32 = sub_10000DC40((uint64_t)&v151, &qword_1000D5820);
    goto LABEL_10;
  }
  v32 = swift_dynamicCast(&v147, &v151, (char *)&type metadata for Any + 8, &type metadata for String, 6);
  if ((v32 & 1) == 0)
  {
LABEL_10:
    UUID.init()(v32);
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceIdentifier, v14, v9);
    goto LABEL_12;
  }
  v33 = v148;
  UUID.init(uuidString:)(v147, v148);
  swift_bridgeObjectRelease(v33);
  v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  if ((_DWORD)v34 == 1)
  {
    v35 = v140;
    UUID.init()(v34);
    sub_10000DC40((uint64_t)v8, &qword_1000D6CB0);
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceIdentifier, v35, v9);
  }
  else
  {
    v36 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v37 = v140;
    v36(v140, v8, v9);
    v36((char *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceIdentifier), v37, v9);
  }
LABEL_12:
  *(_QWORD *)&v151 = 0x6F6973726556736FLL;
  *((_QWORD *)&v151 + 1) = 0xE90000000000006ELL;
  AnyHashable.init<A>(_:)(v150, &v151, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v38 = sub_10004A78C((uint64_t)v150), (v39 & 1) != 0))
  {
    sub_10000DB98(*(_QWORD *)(a1 + 56) + 32 * v38, (uint64_t)&v151);
  }
  else
  {
    v151 = 0u;
    v152 = 0u;
  }
  sub_10000DAE8((uint64_t)v150);
  if (!*((_QWORD *)&v152 + 1))
  {
    sub_10000DC40((uint64_t)&v151, &qword_1000D5820);
    goto LABEL_20;
  }
  if (!swift_dynamicCast(&v147, &v151, (char *)&type metadata for Any + 8, &type metadata for UInt8, 6))
  {
LABEL_20:
    v40 = 0;
    goto LABEL_21;
  }
  v40 = v147;
LABEL_21:
  *(_BYTE *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_osVersion) = v40;
  v147 = 0x556E6F6973736573;
  v148 = 0xEB00000000444955;
  AnyHashable.init<A>(_:)(v150, &v147, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v41 = sub_10004A78C((uint64_t)v150), (v42 & 1) != 0))
  {
    sub_10000DB98(*(_QWORD *)(a1 + 56) + 32 * v41, (uint64_t)&v151);
  }
  else
  {
    v151 = 0u;
    v152 = 0u;
  }
  sub_10000DAE8((uint64_t)v150);
  if (*((_QWORD *)&v152 + 1))
  {
    if ((swift_dynamicCast(&v147, &v151, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
    {
      v43 = v148;
      v44 = v142;
      UUID.init(uuidString:)(v147, v148);
      swift_bridgeObjectRelease(v43);
      v45 = v141;
      swift_beginAccess(v141, v150, 33, 0);
      sub_100011340(v44, v45, &qword_1000D6CB0);
      swift_endAccess(v150);
    }
  }
  else
  {
    sub_10000DC40((uint64_t)&v151, &qword_1000D5820);
  }
  *(_QWORD *)&v151 = 1769173874;
  *((_QWORD *)&v151 + 1) = 0xE400000000000000;
  AnyHashable.init<A>(_:)(v150, &v151, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v46 = sub_10004A78C((uint64_t)v150), (v47 & 1) != 0))
  {
    sub_10000DB98(*(_QWORD *)(a1 + 56) + 32 * v46, (uint64_t)&v151);
  }
  else
  {
    v151 = 0u;
    v152 = 0u;
  }
  sub_10000DAE8((uint64_t)v150);
  if (!*((_QWORD *)&v152 + 1))
  {
    sub_10000DC40((uint64_t)&v151, &qword_1000D5820);
    goto LABEL_37;
  }
  if (!swift_dynamicCast(&v147, &v151, (char *)&type metadata for Any + 8, &type metadata for Int32, 6))
  {
LABEL_37:
    v48 = 0;
    goto LABEL_38;
  }
  v48 = v147;
LABEL_38:
  *(_DWORD *)v20 = v48;
  *(_BYTE *)(v20 + 4) = 0;
  *(_QWORD *)&v151 = 0x5372656767697274;
  *((_QWORD *)&v151 + 1) = 0xEB00000000736365;
  AnyHashable.init<A>(_:)(v150, &v151, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v49 = sub_10004A78C((uint64_t)v150), (v50 & 1) != 0))
  {
    sub_10000DB98(*(_QWORD *)(a1 + 56) + 32 * v49, (uint64_t)&v151);
  }
  else
  {
    v151 = 0u;
    v152 = 0u;
  }
  sub_10000DAE8((uint64_t)v150);
  if (!*((_QWORD *)&v152 + 1))
  {
    sub_10000DC40((uint64_t)&v151, &qword_1000D5820);
    goto LABEL_46;
  }
  if (!swift_dynamicCast(&v147, &v151, (char *)&type metadata for Any + 8, &type metadata for Int32, 6))
  {
LABEL_46:
    v51 = 0;
    goto LABEL_47;
  }
  v51 = v147;
LABEL_47:
  *(_DWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_triggerSeconds) = v51;
  *(_QWORD *)&v151 = 0xD000000000000010;
  *((_QWORD *)&v151 + 1) = 0x80000001000A0370;
  AnyHashable.init<A>(_:)(v150, &v151, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v52 = sub_10004A78C((uint64_t)v150), (v53 & 1) != 0))
  {
    sub_10000DB98(*(_QWORD *)(a1 + 56) + 32 * v52, (uint64_t)&v151);
  }
  else
  {
    v151 = 0u;
    v152 = 0u;
  }
  sub_10000DAE8((uint64_t)v150);
  if (!*((_QWORD *)&v152 + 1))
  {
    sub_10000DC40((uint64_t)&v151, &qword_1000D5820);
    goto LABEL_55;
  }
  if (!swift_dynamicCast(&v147, &v151, (char *)&type metadata for Any + 8, &type metadata for UInt8, 6))
  {
LABEL_55:
    v54 = 0;
    goto LABEL_56;
  }
  v54 = v147;
LABEL_56:
  *(_BYTE *)(v2 + v144) = v54;
  *(_QWORD *)&v151 = 0x6F4D656369766564;
  *((_QWORD *)&v151 + 1) = 0xEF65646F436C6564;
  AnyHashable.init<A>(_:)(v150, &v151, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v55 = sub_10004A78C((uint64_t)v150), (v56 & 1) != 0))
  {
    sub_10000DB98(*(_QWORD *)(a1 + 56) + 32 * v55, (uint64_t)&v151);
  }
  else
  {
    v151 = 0u;
    v152 = 0u;
  }
  sub_10000DAE8((uint64_t)v150);
  if (!*((_QWORD *)&v152 + 1))
  {
    sub_10000DC40((uint64_t)&v151, &qword_1000D5820);
    goto LABEL_64;
  }
  if (!swift_dynamicCast(&v147, &v151, (char *)&type metadata for Any + 8, &type metadata for UInt8, 6))
  {
LABEL_64:
    v57 = 0;
    goto LABEL_65;
  }
  v57 = v147;
LABEL_65:
  v58 = OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode) = v57;
  *(_QWORD *)&v151 = 0x646F43726F6C6F63;
  *((_QWORD *)&v151 + 1) = 0xE900000000000065;
  AnyHashable.init<A>(_:)(v150, &v151, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v59 = sub_10004A78C((uint64_t)v150), (v60 & 1) != 0))
  {
    sub_10000DB98(*(_QWORD *)(a1 + 56) + 32 * v59, (uint64_t)&v151);
  }
  else
  {
    v151 = 0u;
    v152 = 0u;
  }
  sub_10000DAE8((uint64_t)v150);
  if (!*((_QWORD *)&v152 + 1))
  {
    sub_10000DC40((uint64_t)&v151, &qword_1000D5820);
    goto LABEL_73;
  }
  if (!swift_dynamicCast(&v147, &v151, (char *)&type metadata for Any + 8, &type metadata for UInt8, 6))
  {
LABEL_73:
    v61 = 2;
    goto LABEL_74;
  }
  v61 = v147;
LABEL_74:
  v144 = OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceColorCode;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceColorCode) = v61;
  *(_QWORD *)&v151 = 0x6C43656369766564;
  *((_QWORD *)&v151 + 1) = 0xEF65646F43737361;
  AnyHashable.init<A>(_:)(v150, &v151, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v62 = sub_10004A78C((uint64_t)v150), (v63 & 1) != 0))
  {
    sub_10000DB98(*(_QWORD *)(a1 + 56) + 32 * v62, (uint64_t)&v151);
  }
  else
  {
    v151 = 0u;
    v152 = 0u;
  }
  sub_10000DAE8((uint64_t)v150);
  if (*((_QWORD *)&v152 + 1))
  {
    v64 = swift_dynamicCast(&v147, &v151, (char *)&type metadata for Any + 8, &type metadata for UInt8, 6);
    if (v64)
      LOBYTE(v64) = v147;
  }
  else
  {
    sub_10000DC40((uint64_t)&v151, &qword_1000D5820);
    LOBYTE(v64) = 0;
  }
  v65 = sub_10000631C(v64);
  v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(v65);
  v68 = v67;

  v69 = objc_msgSend((id)objc_opt_self(MCProfileConnection), "sharedConnection");
  if (!v69)
    __break(1u);
  v70 = v69;
  v71 = objc_msgSend(v69, "effectiveBoolValueForSetting:", MCFeatureCameraAllowed);

  *(_BYTE *)(v2 + 68) = v71 != 2;
  v72 = String._bridgeToObjectiveC()();
  v73 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v72, v73, 0);

  *(_BYTE *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_progressDetail) = Int64 != 0;
  *(_QWORD *)&v143[v2] = mach_absolute_time();
  *(_BYTE *)(v2 + 69) = sub_1000062BC();
  *(_DWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_progressEvent) = 0;
  v75 = objc_allocWithZone((Class)NSRegularExpression);
  v76 = (char *)sub_1000488D0(0xD000000000000010, 0x80000001000A0800, 1);
  v147 = 0x6172615074736574;
  v148 = 0xEA0000000000736DLL;
  AnyHashable.init<A>(_:)(v150, &v147, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v77 = sub_10004A78C((uint64_t)v150), (v78 & 1) != 0))
  {
    sub_10000DB98(*(_QWORD *)(a1 + 56) + 32 * v77, (uint64_t)&v151);
  }
  else
  {
    v151 = 0u;
    v152 = 0u;
  }
  swift_bridgeObjectRelease(a1);
  sub_10000DAE8((uint64_t)v150);
  p_cb = (_DWORD *)(&OBJC_PROTOCOL___RecognizerClassifierOutput + 64);
  v142 = v66;
  if (!*((_QWORD *)&v152 + 1))
  {
    sub_10000DC40((uint64_t)&v151, &qword_1000D5820);
    goto LABEL_104;
  }
  if ((swift_dynamicCast(&v147, &v151, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {
LABEL_104:
    v109 = v144;
    goto LABEL_105;
  }
  v81 = (id)v147;
  v80 = (void *)v148;
  v82 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v151 = 15;
  v150[0] = v81;
  v150[1] = v80;
  swift_bridgeObjectRetain(v80);
  v83 = sub_10000D604(&qword_1000D6258);
  v84 = sub_100038B4C();
  v85 = sub_100038B98();
  v86 = _NSRange.init<A, B>(_:in:)(&v151, v150, v83, &type metadata for String, v84, v85);
  v143 = v76;
  v88 = objc_msgSend(v76, "firstMatchInString:options:range:", v82, 0, v86, v87);

  if (v88)
  {
    v141 = v58;
    v89 = Range<>.init(_:in:)(objc_msgSend(v88, "rangeAtIndex:", 1));
    if ((v91 & 1) != 0)
    {
      __break(1u);
      result = swift_unexpectedError(0, "HDSViewService/HomePodSetupModel.swift", 38, 1, 205);
      __break(1u);
      return result;
    }
    v92 = String.subscript.getter(v89, v90, v81, v80);
    v94 = v93;
    v96 = v95;
    v98 = v97;
    swift_bridgeObjectRelease(v80);
    if ((v92 ^ v94) >> 14)
    {
      v99 = sub_100048D3C(v92, v94, v96, v98, 10);
      if ((v99 & 0x10000) != 0)
        LOWORD(v99) = sub_1000489A8(v92, v94, v96, v98, 10);
      v100 = v99;
      swift_bridgeObjectRelease(v98);
      if ((v100 & 0x100) == 0)
        goto LABEL_96;
    }
    else
    {
      swift_bridgeObjectRelease(v98);
    }
    LOBYTE(v100) = 0;
LABEL_96:
    v102 = v139;
    *(_BYTE *)(v2 + v139) = v100;
    p_cb = &OBJC_PROTOCOL___RecognizerClassifierOutput.cb;
    if (qword_1000D5558 != -1)
      swift_once(&qword_1000D5558, sub_100042EA8);
    v103 = type metadata accessor for Logger(0, v101);
    sub_10001118C(v103, (uint64_t)qword_1000D63D0);
    v104 = swift_retain(v2);
    v105 = Logger.logObject.getter(v104);
    v107 = static os_log_type_t.default.getter(v105, v106);
    if (os_log_type_enabled(v105, v107))
    {
      v108 = (uint8_t *)swift_slowAlloc(5, -1);
      *(_DWORD *)v108 = 16777472;
      p_cb = (_DWORD *)(&OBJC_PROTOCOL___RecognizerClassifierOutput + 64);
      LOBYTE(v150[0]) = *(_BYTE *)(v2 + v102);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v150, (char *)v150 + 1);
      swift_release(v2);
      _os_log_impl((void *)&_mh_execute_header, v105, v107, "HomePodSetupModel: stereoCounterpartColor =  %hhu", v108, 5u);
      swift_slowDealloc(v108, -1, -1);

    }
    else
    {

      swift_release(v2);
    }
    v58 = v141;
    v76 = v143;
    goto LABEL_104;
  }
  swift_bridgeObjectRelease(v80);
  v76 = v143;
  v109 = v144;
  p_cb = (_DWORD *)(&OBJC_PROTOCOL___RecognizerClassifierOutput + 64);
LABEL_105:
  sub_100048E30();
  v150[0] = (id)NSString.init(stringLiteral:)("", 0, 2);
  *(_QWORD *)&v151 = NSString.init(stringLiteral:)("", 0, 2);
  v147 = NSString.init(stringLiteral:)("", 0, 2);
  v146[0] = objc_msgSend(objc_allocWithZone((Class)NSBundle), "init");
  if (*(unsigned __int8 *)(v2 + v58) <= 1u)
    v110 = 1;
  else
    v110 = *(unsigned __int8 *)(v2 + v58);
  sub_100006BEC(v110, *(unsigned __int8 *)(v2 + v109), 13, (id *)&v151, 0, (id *)&v147, 0, v150, 0, 0, v146);
  v111 = v146[0];
  v112 = v147;
  v113 = v151;
  v114 = static String._unconditionallyBridgeFromObjectiveC(_:)(v150[0]);
  v115 = (uint64_t *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_movieName);
  *v115 = v114;
  v115[1] = v116;
  v117 = static String._unconditionallyBridgeFromObjectiveC(_:)(v113);
  v118 = (uint64_t *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_imageName);
  *v118 = v117;
  v118[1] = v119;
  v120 = static String._unconditionallyBridgeFromObjectiveC(_:)(v112);
  v121 = (uint64_t *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_productName);
  *v121 = v120;
  v121[1] = v122;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_assetBundle) = v111;
  v123 = v111;
  v125 = sub_1000446AC();
  v126 = v124;
  if (*((_QWORD *)p_cb + 171) != -1)
    swift_once(&qword_1000D5558, sub_100042EA8);
  v127 = type metadata accessor for Logger(0, v124);
  sub_10001118C(v127, (uint64_t)qword_1000D63D0);
  swift_retain_n(v2, 2);
  swift_bridgeObjectRetain(v68);
  swift_bridgeObjectRetain(v126);
  v129 = Logger.logObject.getter(v128);
  v131 = static os_log_type_t.default.getter(v129, v130);
  if (os_log_type_enabled(v129, v131))
  {
    v132 = swift_slowAlloc(32, -1);
    v133 = swift_slowAlloc(96, -1);
    v149 = v133;
    *(_DWORD *)v132 = 136315650;
    swift_bridgeObjectRetain(v68);
    v145 = sub_10003EF58(v142, v68, &v149);
    v143 = v76;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v145, v146);
    swift_bridgeObjectRelease_n(v68, 3);
    *(_WORD *)(v132 + 12) = 2080;
    swift_bridgeObjectRetain(v126);
    v145 = sub_10003EF58(v125, v126, &v149);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v145, v146);
    swift_bridgeObjectRelease_n(v126, 3);
    *(_WORD *)(v132 + 22) = 2080;
    swift_retain(v2);
    v134 = sub_1000446AC();
    v136 = v135;
    swift_release(v2);
    v145 = sub_10003EF58(v134, v136, &v149);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v145, v146);
    swift_release_n(v2, 2);
    swift_bridgeObjectRelease(v136);
    _os_log_impl((void *)&_mh_execute_header, v129, v131, "HomePodSetupModel: Created running on %s=%s info: %s", (uint8_t *)v132, 0x20u);
    swift_arrayDestroy(v133, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v133, -1, -1);
    swift_slowDealloc(v132, -1, -1);

  }
  else
  {

    swift_release_n(v2, 2);
    swift_bridgeObjectRelease_n(v126, 2);
    swift_bridgeObjectRelease_n(v68, 2);
  }

  return v2;
}

uint64_t sub_1000446AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  void *v19;
  void *v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Swift::String v29;
  void *object;
  Swift::String v31;
  uint64_t v32;
  void *v33;
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  void *v39;
  Swift::String v40;
  uint64_t v41;
  void *v42;
  Swift::String v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  Swift::String v47;
  void *v48;
  Swift::String v49;
  uint64_t v50;
  void *v51;
  Swift::String v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  Swift::String v56;
  void *v57;
  Swift::String v58;
  uint64_t v59;
  void *v60;
  Swift::String v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  void *v67;
  Swift::String v68;
  Swift::String v69;
  uint64_t v70;
  void *v71;
  Swift::String v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  Swift::String v77;
  void *v78;
  Swift::String v79;
  uint64_t v80;
  void *v81;
  Swift::String v82;
  uint64_t v83;
  uint64_t v84;
  Swift::String v85;
  void *v86;
  Swift::String v87;
  uint64_t v88;
  void *v89;
  Swift::String v90;
  uint64_t v91;
  uint64_t v92;
  Swift::String v93;
  void *v94;
  Swift::String v95;
  uint64_t v96;
  void *v97;
  Swift::String v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  Swift::String v103;
  void *v104;
  Swift::String v105;
  uint64_t v106;
  void *v107;
  Swift::String v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  Swift::String v113;
  void *v114;
  Swift::String v115;
  uint64_t v116;
  void *v117;
  Swift::String v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  uint64_t v122;
  Swift::String v123;
  void *v124;
  Swift::String v125;
  uint64_t v126;
  void *v127;
  Swift::String v128;
  uint64_t v129;
  uint64_t v130;
  Swift::String v131;
  void *v132;
  Swift::String v133;
  uint64_t v134;
  void *v135;
  Swift::String v136;
  uint64_t v137;
  uint64_t v138;
  const char *v139;
  Swift::String v140;
  void *v141;
  Swift::String v142;
  uint64_t v143;
  void *v144;
  Swift::String v145;
  uint64_t v146;
  uint64_t v147;
  Swift::String v148;
  void *v149;
  Swift::String v150;
  uint64_t v151;
  void *v152;
  Swift::String v153;
  uint64_t v154;
  uint64_t v155;
  Swift::String v156;
  void *v157;
  Swift::String v158;
  uint64_t v159;
  void *v160;
  Swift::String v161;
  uint64_t v162;
  uint64_t v163;
  Swift::String v164;
  void *v165;
  Swift::String v166;
  uint64_t v167;
  void *v168;
  Swift::String v169;
  uint64_t v170;
  uint64_t v171;
  const char *v172;
  void *v173;
  Swift::String v174;
  void *v175;
  Swift::String v176;
  uint64_t v177;
  void *v178;
  Swift::String v179;
  uint64_t v180;
  uint64_t v181;
  Swift::String v182;
  void *v183;
  Swift::String v184;
  uint64_t v185;
  void *v186;
  Swift::String v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  Swift::String v191;
  void *v192;
  Swift::String v193;
  uint64_t v194;
  void *v195;
  Swift::String v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  Swift::String v200;
  void *v201;
  Swift::String v202;
  uint64_t v203;
  void *v204;
  Swift::String v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  Swift::String v209;
  void *v210;
  Swift::String v211;
  uint64_t v212;
  void *v213;
  Swift::String v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  void *v221;
  void *v222;
  Swift::String v223;
  Swift::String v224;
  uint64_t v225;
  void *v226;
  Swift::String v227;
  uint64_t v228;
  uint64_t v229;
  Swift::String v230;
  void *v231;
  Swift::String v232;
  uint64_t v233;
  void *v234;
  Swift::String v235;
  uint64_t v236;
  uint64_t v237;
  unint64_t v238;
  Swift::String v239;
  void *v240;
  Swift::String v241;
  uint64_t v242;
  void *v243;
  Swift::String v244;
  uint64_t v245;
  uint64_t v246;
  unint64_t v247;
  Swift::String v248;
  void *v249;
  Swift::String v250;
  uint64_t v251;
  void *v252;
  Swift::String v253;
  uint64_t v254;
  uint64_t v255;
  Swift::String v256;
  void *v257;
  Swift::String v258;
  uint64_t v259;
  void *v260;
  Swift::String v261;
  uint64_t v262;
  uint64_t v263;
  unint64_t v264;
  Swift::String v265;
  void *v266;
  Swift::String v267;
  uint64_t v268;
  void *v269;
  Swift::String v270;
  uint64_t v271;
  uint64_t v272;
  const char *v273;
  Swift::String v274;
  void *v275;
  Swift::String v276;
  uint64_t v277;
  void *v278;
  Swift::String v279;
  uint64_t v280;
  uint64_t v281;
  Swift::String v282;
  void *v283;
  Swift::String v284;
  uint64_t v285;
  void *v286;
  Swift::String v287;
  uint64_t v288;
  uint64_t v289;
  unint64_t v290;
  Swift::String v291;
  void *v292;
  Swift::String v293;
  uint64_t v294;
  void *v295;
  Swift::String v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  unint64_t v300;
  Swift::String v301;
  void *v302;
  Swift::String v303;
  uint64_t v304;
  void *v305;
  Swift::String v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  Swift::String v310;
  void *v311;
  Swift::String v312;
  uint64_t v313;
  void *v314;
  Swift::String v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  Swift::String v325;
  void *v326;
  Swift::String v327;
  uint64_t v328;
  void *v329;
  Swift::String v330;
  uint64_t v331;
  uint64_t v332;
  Swift::String v333;
  void *v334;
  Swift::String v335;
  uint64_t v336;
  void *v337;
  Swift::String v338;
  uint64_t v339;
  Swift::String v340;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348[7];
  uint64_t v349;
  unint64_t v350;
  id v351[3];
  uint64_t v352;
  uint64_t v353;

  v1 = v0;
  v346 = sub_10000D604(&qword_1000D6170);
  v2 = __chkstk_darwin(v346);
  v345 = (uint64_t)&v342 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v344 = (uint64_t)&v342 - v4;
  v342 = sub_10000D604(&qword_1000D6CB0);
  v5 = __chkstk_darwin(v342);
  v7 = (char *)&v342 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v342 - v8;
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v342 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v342 - v15;
  v348[0] = 0;
  v348[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v348[1]);
  v343 = 0xD000000000000011;
  v348[0] = 0xD000000000000011;
  v348[1] = 0x80000001000A0640;
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v17(v16, v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceIdentifier, v10);
  v17(v14, (uint64_t)v16, v10);
  v18 = String.init<A>(reflecting:)(v14, v10);
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  v21._countAndFlagsBits = v18;
  v21._object = v20;
  String.append(_:)(v21);
  swift_bridgeObjectRelease(v20);
  v22._countAndFlagsBits = 32;
  v22._object = (void *)0xE100000000000000;
  String.append(_:)(v22);
  v23._countAndFlagsBits = v348[0];
  v24 = (void *)v348[1];
  v347 = 0xD000000000000013;
  v348[0] = 0xD000000000000013;
  v348[1] = 0x80000001000A0620;
  v23._object = v24;
  String.append(_:)(v23);
  swift_bridgeObjectRelease(v24);
  v26 = v348[0];
  v25 = v348[1];
  strcpy((char *)v348, "appleId=");
  BYTE1(v348[1]) = 0;
  WORD1(v348[1]) = 0;
  HIDWORD(v348[1]) = -402653184;
  v27 = *(_QWORD *)(v1 + 24);
  v352 = *(_QWORD *)(v1 + 16);
  v353 = v27;
  swift_bridgeObjectRetain(v27);
  v28 = sub_10000D604((uint64_t *)&unk_1000D6130);
  v29._countAndFlagsBits = String.init<A>(reflecting:)(&v352, v28);
  object = v29._object;
  String.append(_:)(v29);
  swift_bridgeObjectRelease(object);
  v31._countAndFlagsBits = 32;
  v31._object = (void *)0xE100000000000000;
  String.append(_:)(v31);
  v32 = v348[0];
  v33 = (void *)v348[1];
  v348[0] = v26;
  v348[1] = v25;
  swift_bridgeObjectRetain(v25);
  v34._countAndFlagsBits = v32;
  v34._object = v33;
  String.append(_:)(v34);
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v33);
  v36 = v348[0];
  v35 = v348[1];
  strcpy((char *)v348, "iCloudId=");
  WORD1(v348[1]) = 0;
  HIDWORD(v348[1]) = -385875968;
  v37 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_iCloudId + 8);
  v352 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_iCloudId);
  v353 = v37;
  swift_bridgeObjectRetain(v37);
  v38._countAndFlagsBits = String.init<A>(reflecting:)(&v352, v28);
  v39 = v38._object;
  String.append(_:)(v38);
  swift_bridgeObjectRelease(v39);
  v40._countAndFlagsBits = 32;
  v40._object = (void *)0xE100000000000000;
  String.append(_:)(v40);
  v41 = v348[0];
  v42 = (void *)v348[1];
  v348[0] = v36;
  v348[1] = v35;
  swift_bridgeObjectRetain(v35);
  v43._countAndFlagsBits = v41;
  v43._object = v42;
  String.append(_:)(v43);
  swift_bridgeObjectRelease(v35);
  swift_bridgeObjectRelease(v42);
  v45 = v348[0];
  v44 = v348[1];
  strcpy((char *)v348, "iTunesId=");
  WORD1(v348[1]) = 0;
  HIDWORD(v348[1]) = -385875968;
  v46 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_iTunesId + 8);
  v352 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_iTunesId);
  v353 = v46;
  swift_bridgeObjectRetain(v46);
  v47._countAndFlagsBits = String.init<A>(reflecting:)(&v352, v28);
  v48 = v47._object;
  String.append(_:)(v47);
  swift_bridgeObjectRelease(v48);
  v49._countAndFlagsBits = 32;
  v49._object = (void *)0xE100000000000000;
  String.append(_:)(v49);
  v50 = v348[0];
  v51 = (void *)v348[1];
  v348[0] = v45;
  v348[1] = v44;
  swift_bridgeObjectRetain(v44);
  v52._countAndFlagsBits = v50;
  v52._object = v51;
  String.append(_:)(v52);
  swift_bridgeObjectRelease(v44);
  swift_bridgeObjectRelease(v51);
  v54 = v348[0];
  v53 = v348[1];
  strcpy((char *)v348, "osVersion=");
  BYTE3(v348[1]) = 0;
  HIDWORD(v348[1]) = -369098752;
  LOBYTE(v352) = *(_BYTE *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_osVersion);
  type metadata accessor for SFOSVersion(0);
  v56._countAndFlagsBits = String.init<A>(reflecting:)(&v352, v55);
  v57 = v56._object;
  String.append(_:)(v56);
  swift_bridgeObjectRelease(v57);
  v58._countAndFlagsBits = 32;
  v58._object = (void *)0xE100000000000000;
  String.append(_:)(v58);
  v59 = v348[0];
  v60 = (void *)v348[1];
  v348[0] = v54;
  v348[1] = v53;
  swift_bridgeObjectRetain(v53);
  v61._countAndFlagsBits = v59;
  v61._object = v60;
  String.append(_:)(v61);
  swift_bridgeObjectRelease(v53);
  swift_bridgeObjectRelease(v60);
  v63 = v348[0];
  v62 = v348[1];
  strcpy((char *)v348, "sessionUUID=");
  BYTE5(v348[1]) = 0;
  HIWORD(v348[1]) = -5120;
  v64 = v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_sessionUUID;
  swift_beginAccess(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_sessionUUID, &v352, 0, 0);
  sub_10000E0F0(v64, (uint64_t)v9, &qword_1000D6CB0);
  sub_10000E0F0((uint64_t)v9, (uint64_t)v7, &qword_1000D6CB0);
  v65 = String.init<A>(reflecting:)(v7, v342);
  v67 = v66;
  sub_10000DC40((uint64_t)v9, &qword_1000D6CB0);
  v68._countAndFlagsBits = v65;
  v68._object = v67;
  String.append(_:)(v68);
  swift_bridgeObjectRelease(v67);
  v69._countAndFlagsBits = 32;
  v69._object = (void *)0xE100000000000000;
  String.append(_:)(v69);
  v70 = v348[0];
  v71 = (void *)v348[1];
  v348[0] = v63;
  v348[1] = v62;
  swift_bridgeObjectRetain(v62);
  v72._countAndFlagsBits = v70;
  v72._object = v71;
  String.append(_:)(v72);
  swift_bridgeObjectRelease(v62);
  swift_bridgeObjectRelease(v71);
  v74 = v348[0];
  v73 = v348[1];
  v348[0] = 0x3D69737372;
  v348[1] = 0xE500000000000000;
  v75 = *(_BYTE *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_rssi + 4);
  LODWORD(v351[0]) = *(_DWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_rssi);
  BYTE4(v351[0]) = v75;
  v76 = sub_10000D604(&qword_1000D6CB8);
  v77._countAndFlagsBits = String.init<A>(reflecting:)(v351, v76);
  v78 = v77._object;
  String.append(_:)(v77);
  swift_bridgeObjectRelease(v78);
  v79._countAndFlagsBits = 32;
  v79._object = (void *)0xE100000000000000;
  String.append(_:)(v79);
  v80 = v348[0];
  v81 = (void *)v348[1];
  v348[0] = v74;
  v348[1] = v73;
  swift_bridgeObjectRetain(v73);
  v82._countAndFlagsBits = v80;
  v82._object = v81;
  String.append(_:)(v82);
  swift_bridgeObjectRelease(v73);
  swift_bridgeObjectRelease(v81);
  v84 = v348[0];
  v83 = v348[1];
  strcpy((char *)v348, "badPINCount=");
  BYTE5(v348[1]) = 0;
  HIWORD(v348[1]) = -5120;
  LODWORD(v351[0]) = *(_DWORD *)(v1 + 64);
  v85._countAndFlagsBits = String.init<A>(reflecting:)(v351, &type metadata for UInt32);
  v86 = v85._object;
  String.append(_:)(v85);
  swift_bridgeObjectRelease(v86);
  v87._countAndFlagsBits = 32;
  v87._object = (void *)0xE100000000000000;
  String.append(_:)(v87);
  v88 = v348[0];
  v89 = (void *)v348[1];
  v348[0] = v84;
  v348[1] = v83;
  swift_bridgeObjectRetain(v83);
  v90._countAndFlagsBits = v88;
  v90._object = v89;
  String.append(_:)(v90);
  swift_bridgeObjectRelease(v83);
  swift_bridgeObjectRelease(v89);
  v92 = v348[0];
  v91 = v348[1];
  v348[0] = 0;
  v348[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(21);
  swift_bridgeObjectRelease(v348[1]);
  v348[0] = 0xD000000000000012;
  v348[1] = 0x80000001000A0660;
  v351[0] = *(id *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_viewAppearedTicks);
  v93._countAndFlagsBits = String.init<A>(reflecting:)(v351, &type metadata for UInt64);
  v94 = v93._object;
  String.append(_:)(v93);
  swift_bridgeObjectRelease(v94);
  v95._countAndFlagsBits = 32;
  v95._object = (void *)0xE100000000000000;
  String.append(_:)(v95);
  v96 = v348[0];
  v97 = (void *)v348[1];
  v348[0] = v92;
  v348[1] = v91;
  swift_bridgeObjectRetain(v91);
  v98._countAndFlagsBits = v96;
  v98._object = v97;
  String.append(_:)(v98);
  swift_bridgeObjectRelease(v91);
  swift_bridgeObjectRelease(v97);
  v100 = v348[0];
  v99 = v348[1];
  v348[0] = 0;
  v348[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(23);
  swift_bridgeObjectRelease(v348[1]);
  v348[0] = 0xD000000000000014;
  v348[1] = 0x80000001000A0680;
  v101 = *(_BYTE *)(v1 + 36);
  LODWORD(v351[0]) = *(_DWORD *)(v1 + 32);
  BYTE4(v351[0]) = v101;
  v102 = sub_10000D604(&qword_1000D6CC0);
  v103._countAndFlagsBits = String.init<A>(reflecting:)(v351, v102);
  v104 = v103._object;
  String.append(_:)(v103);
  swift_bridgeObjectRelease(v104);
  v105._countAndFlagsBits = 32;
  v105._object = (void *)0xE100000000000000;
  String.append(_:)(v105);
  v106 = v348[0];
  v107 = (void *)v348[1];
  v348[0] = v100;
  v348[1] = v99;
  swift_bridgeObjectRetain(v99);
  v108._countAndFlagsBits = v106;
  v108._object = v107;
  String.append(_:)(v108);
  swift_bridgeObjectRelease(v99);
  swift_bridgeObjectRelease(v107);
  v110 = v348[0];
  v109 = v348[1];
  strcpy((char *)v348, "dismissType=");
  BYTE5(v348[1]) = 0;
  HIWORD(v348[1]) = -5120;
  v111 = *(_BYTE *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_dismissType + 4);
  LODWORD(v351[0]) = *(_DWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_dismissType);
  BYTE4(v351[0]) = v111;
  v112 = sub_10000D604(&qword_1000D6CC8);
  v113._countAndFlagsBits = String.init<A>(reflecting:)(v351, v112);
  v114 = v113._object;
  String.append(_:)(v113);
  swift_bridgeObjectRelease(v114);
  v115._countAndFlagsBits = 32;
  v115._object = (void *)0xE100000000000000;
  String.append(_:)(v115);
  v116 = v348[0];
  v117 = (void *)v348[1];
  v348[0] = v110;
  v348[1] = v109;
  swift_bridgeObjectRetain(v109);
  v118._countAndFlagsBits = v116;
  v118._object = v117;
  String.append(_:)(v118);
  swift_bridgeObjectRelease(v109);
  swift_bridgeObjectRelease(v117);
  v120 = v348[0];
  v119 = v348[1];
  v348[0] = 0x3D726F727265;
  v348[1] = 0xE600000000000000;
  v351[0] = *(id *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_error);
  v121 = v351[0];
  v122 = sub_10000D604(&qword_1000D6CD0);
  v123._countAndFlagsBits = String.init<A>(reflecting:)(v351, v122);
  v124 = v123._object;
  String.append(_:)(v123);
  swift_bridgeObjectRelease(v124);
  v125._countAndFlagsBits = 32;
  v125._object = (void *)0xE100000000000000;
  String.append(_:)(v125);
  v126 = v348[0];
  v127 = (void *)v348[1];
  v348[0] = v120;
  v348[1] = v119;
  swift_bridgeObjectRetain(v119);
  v128._countAndFlagsBits = v126;
  v128._object = v127;
  String.append(_:)(v128);
  swift_bridgeObjectRelease(v119);
  swift_bridgeObjectRelease(v127);
  v130 = v348[0];
  v129 = v348[1];
  v348[0] = 0;
  v348[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease(v348[1]);
  v348[0] = 0xD000000000000016;
  v348[1] = 0x80000001000A06A0;
  LOBYTE(v351[0]) = *(_BYTE *)(v1 + 69);
  v131._countAndFlagsBits = String.init<A>(reflecting:)(v351, &type metadata for Bool);
  v132 = v131._object;
  String.append(_:)(v131);
  swift_bridgeObjectRelease(v132);
  v133._countAndFlagsBits = 32;
  v133._object = (void *)0xE100000000000000;
  String.append(_:)(v133);
  v134 = v348[0];
  v135 = (void *)v348[1];
  v348[0] = v130;
  v348[1] = v129;
  swift_bridgeObjectRetain(v129);
  v136._countAndFlagsBits = v134;
  v136._object = v135;
  String.append(_:)(v136);
  swift_bridgeObjectRelease(v129);
  swift_bridgeObjectRelease(v135);
  v138 = v348[0];
  v137 = v348[1];
  v348[0] = 0;
  v348[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease(v348[1]);
  v348[0] = 0xD000000000000015;
  v348[1] = 0x80000001000A06C0;
  v139 = sub_100048090(*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode));
  v140._countAndFlagsBits = String.init(cString:)(v139);
  v141 = v140._object;
  String.append(_:)(v140);
  swift_bridgeObjectRelease(v141);
  v142._countAndFlagsBits = 32;
  v142._object = (void *)0xE100000000000000;
  String.append(_:)(v142);
  v143 = v348[0];
  v144 = (void *)v348[1];
  v348[0] = v138;
  v348[1] = v137;
  swift_bridgeObjectRetain(v137);
  v145._countAndFlagsBits = v143;
  v145._object = v144;
  String.append(_:)(v145);
  swift_bridgeObjectRelease(v137);
  swift_bridgeObjectRelease(v144);
  v147 = v348[0];
  v146 = v348[1];
  v348[0] = 0;
  v348[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease(v348[1]);
  v348[0] = 0xD000000000000015;
  v348[1] = 0x80000001000A06E0;
  LOBYTE(v351[0]) = *(_BYTE *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceColorCode);
  v148._countAndFlagsBits = String.init<A>(reflecting:)(v351, &type metadata for UInt8);
  v149 = v148._object;
  String.append(_:)(v148);
  swift_bridgeObjectRelease(v149);
  v150._countAndFlagsBits = 32;
  v150._object = (void *)0xE100000000000000;
  String.append(_:)(v150);
  v151 = v348[0];
  v152 = (void *)v348[1];
  v348[0] = v147;
  v348[1] = v146;
  swift_bridgeObjectRetain(v146);
  v153._countAndFlagsBits = v151;
  v153._object = v152;
  String.append(_:)(v153);
  swift_bridgeObjectRelease(v146);
  swift_bridgeObjectRelease(v152);
  v155 = v348[0];
  v154 = v348[1];
  v348[0] = 0;
  v348[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease(v348[1]);
  v348[0] = 0x5372656767697274;
  v348[1] = 0xEF3D73646E6F6365;
  LODWORD(v351[0]) = *(_DWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_triggerSeconds);
  v156._countAndFlagsBits = String.init<A>(reflecting:)(v351, &type metadata for Int32);
  v157 = v156._object;
  String.append(_:)(v156);
  swift_bridgeObjectRelease(v157);
  v158._countAndFlagsBits = 32;
  v158._object = (void *)0xE100000000000000;
  String.append(_:)(v158);
  v159 = v348[0];
  v160 = (void *)v348[1];
  v348[0] = v155;
  v348[1] = v154;
  swift_bridgeObjectRetain(v154);
  v161._countAndFlagsBits = v159;
  v161._object = v160;
  String.append(_:)(v161);
  swift_bridgeObjectRelease(v154);
  swift_bridgeObjectRelease(v160);
  v163 = v348[0];
  v162 = v348[1];
  v348[0] = 0;
  v348[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease(v348[1]);
  v348[0] = 0x73736572676F7270;
  v348[1] = 0xEF3D6C6961746544;
  LOBYTE(v351[0]) = *(_BYTE *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_progressDetail);
  v164._countAndFlagsBits = String.init<A>(reflecting:)(v351, &type metadata for Bool);
  v165 = v164._object;
  String.append(_:)(v164);
  swift_bridgeObjectRelease(v165);
  v166._countAndFlagsBits = 32;
  v166._object = (void *)0xE100000000000000;
  String.append(_:)(v166);
  v167 = v348[0];
  v168 = (void *)v348[1];
  v348[0] = v163;
  v348[1] = v162;
  swift_bridgeObjectRetain(v162);
  v169._countAndFlagsBits = v167;
  v169._object = v168;
  String.append(_:)(v169);
  swift_bridgeObjectRelease(v162);
  swift_bridgeObjectRelease(v168);
  v171 = v348[0];
  v170 = v348[1];
  v348[0] = 0;
  v348[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease(v348[1]);
  strcpy((char *)v348, "progressEvent=");
  HIBYTE(v348[1]) = -18;
  v172 = sub_100048130(*(_DWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_progressEvent));
  v351[0] = (id)String.init(cString:)(v172);
  v351[1] = v173;
  v174._countAndFlagsBits = String.init<A>(reflecting:)(v351, &type metadata for String);
  v175 = v174._object;
  String.append(_:)(v174);
  swift_bridgeObjectRelease(v175);
  v176._countAndFlagsBits = 32;
  v176._object = (void *)0xE100000000000000;
  String.append(_:)(v176);
  v177 = v348[0];
  v178 = (void *)v348[1];
  v348[0] = v171;
  v348[1] = v170;
  swift_bridgeObjectRetain(v170);
  v179._countAndFlagsBits = v177;
  v179._object = v178;
  String.append(_:)(v179);
  swift_bridgeObjectRelease(v170);
  swift_bridgeObjectRelease(v178);
  v181 = v348[0];
  v180 = v348[1];
  v348[0] = 0;
  v348[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease(v348[1]);
  strcpy((char *)v348, "cameraAllowed=");
  HIBYTE(v348[1]) = -18;
  LOBYTE(v351[0]) = *(_BYTE *)(v1 + 68);
  v182._countAndFlagsBits = String.init<A>(reflecting:)(v351, &type metadata for Bool);
  v183 = v182._object;
  String.append(_:)(v182);
  swift_bridgeObjectRelease(v183);
  v184._countAndFlagsBits = 32;
  v184._object = (void *)0xE100000000000000;
  String.append(_:)(v184);
  v185 = v348[0];
  v186 = (void *)v348[1];
  v348[0] = v181;
  v348[1] = v180;
  swift_bridgeObjectRetain(v180);
  v187._countAndFlagsBits = v185;
  v187._object = v186;
  String.append(_:)(v187);
  swift_bridgeObjectRelease(v180);
  swift_bridgeObjectRelease(v186);
  v189 = v348[0];
  v188 = v348[1];
  v348[0] = 0;
  v348[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease(v348[1]);
  v348[0] = 0x6C62616C69617661;
  v348[1] = 0xEF3D73656D6F4865;
  v351[0] = *(id *)(v1 + 40);
  swift_bridgeObjectRetain(v351[0]);
  v190 = sub_10000D604(&qword_1000D6CD8);
  v191._countAndFlagsBits = String.init<A>(reflecting:)(v351, v190);
  v192 = v191._object;
  String.append(_:)(v191);
  swift_bridgeObjectRelease(v192);
  v193._countAndFlagsBits = 32;
  v193._object = (void *)0xE100000000000000;
  String.append(_:)(v193);
  v194 = v348[0];
  v195 = (void *)v348[1];
  v348[0] = v189;
  v348[1] = v188;
  swift_bridgeObjectRetain(v188);
  v196._countAndFlagsBits = v194;
  v196._object = v195;
  String.append(_:)(v196);
  swift_bridgeObjectRelease(v188);
  swift_bridgeObjectRelease(v195);
  v198 = v348[0];
  v197 = v348[1];
  v348[0] = 0;
  v348[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v348[1]);
  v199 = v343;
  v348[0] = v343;
  v348[1] = 0x80000001000A0700;
  v351[0] = *(id *)(v1 + 72);
  v200._countAndFlagsBits = String.init<A>(reflecting:)(v351, &type metadata for Int);
  v201 = v200._object;
  String.append(_:)(v200);
  swift_bridgeObjectRelease(v201);
  v202._countAndFlagsBits = 32;
  v202._object = (void *)0xE100000000000000;
  String.append(_:)(v202);
  v203 = v348[0];
  v204 = (void *)v348[1];
  v348[0] = v198;
  v348[1] = v197;
  swift_bridgeObjectRetain(v197);
  v205._countAndFlagsBits = v203;
  v205._object = v204;
  String.append(_:)(v205);
  swift_bridgeObjectRelease(v197);
  swift_bridgeObjectRelease(v204);
  v207 = v348[0];
  v206 = v348[1];
  v348[0] = 0;
  v348[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease(v348[1]);
  strcpy((char *)v348, "existingRooms=");
  HIBYTE(v348[1]) = -18;
  v351[0] = *(id *)(v1 + 48);
  swift_bridgeObjectRetain(v351[0]);
  v208 = sub_10000D604(&qword_1000D6CE0);
  v209._countAndFlagsBits = String.init<A>(reflecting:)(v351, v208);
  v210 = v209._object;
  String.append(_:)(v209);
  swift_bridgeObjectRelease(v210);
  v211._countAndFlagsBits = 32;
  v211._object = (void *)0xE100000000000000;
  String.append(_:)(v211);
  v212 = v348[0];
  v213 = (void *)v348[1];
  v348[0] = v207;
  v348[1] = v206;
  swift_bridgeObjectRetain(v206);
  v214._countAndFlagsBits = v212;
  v214._object = v213;
  String.append(_:)(v214);
  swift_bridgeObjectRelease(v206);
  swift_bridgeObjectRelease(v213);
  v216 = v348[0];
  v215 = v348[1];
  v348[0] = 0;
  v348[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease(v348[1]);
  v348[0] = 0xD000000000000015;
  v348[1] = 0x80000001000A0720;
  v217 = v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_defaultRoomIndexPath;
  swift_beginAccess(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_defaultRoomIndexPath, v351, 0, 0);
  v218 = v344;
  sub_10000E0F0(v217, v344, &qword_1000D6170);
  v219 = v345;
  sub_10000E0F0(v218, v345, &qword_1000D6170);
  v220 = String.init<A>(reflecting:)(v219, v346);
  v222 = v221;
  sub_10000DC40(v218, &qword_1000D6170);
  v223._countAndFlagsBits = v220;
  v223._object = v222;
  String.append(_:)(v223);
  swift_bridgeObjectRelease(v222);
  v224._countAndFlagsBits = 32;
  v224._object = (void *)0xE100000000000000;
  String.append(_:)(v224);
  v225 = v348[0];
  v226 = (void *)v348[1];
  v348[0] = v216;
  v348[1] = v215;
  swift_bridgeObjectRetain(v215);
  v227._countAndFlagsBits = v225;
  v227._object = v226;
  String.append(_:)(v227);
  swift_bridgeObjectRelease(v215);
  swift_bridgeObjectRelease(v226);
  v229 = v348[0];
  v228 = v348[1];
  v348[0] = 0;
  v348[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease(v348[1]);
  v348[0] = 0x6574736567677573;
  v348[1] = 0xEF3D736D6F6F5264;
  v349 = *(_QWORD *)(v1 + 56);
  swift_bridgeObjectRetain(v349);
  v230._countAndFlagsBits = String.init<A>(reflecting:)(&v349, v208);
  v231 = v230._object;
  String.append(_:)(v230);
  swift_bridgeObjectRelease(v231);
  v232._countAndFlagsBits = 32;
  v232._object = (void *)0xE100000000000000;
  String.append(_:)(v232);
  v233 = v348[0];
  v234 = (void *)v348[1];
  v348[0] = v229;
  v348[1] = v228;
  swift_bridgeObjectRetain(v228);
  v235._countAndFlagsBits = v233;
  v235._object = v234;
  String.append(_:)(v235);
  swift_bridgeObjectRelease(v228);
  swift_bridgeObjectRelease(v234);
  v237 = v348[0];
  v236 = v348[1];
  strcpy((char *)v348, "movieName=");
  BYTE3(v348[1]) = 0;
  HIDWORD(v348[1]) = -369098752;
  v238 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_movieName + 8);
  v349 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_movieName);
  v350 = v238;
  swift_bridgeObjectRetain(v238);
  v239._countAndFlagsBits = String.init<A>(reflecting:)(&v349, &type metadata for String);
  v240 = v239._object;
  String.append(_:)(v239);
  swift_bridgeObjectRelease(v240);
  v241._countAndFlagsBits = 32;
  v241._object = (void *)0xE100000000000000;
  String.append(_:)(v241);
  v242 = v348[0];
  v243 = (void *)v348[1];
  v348[0] = v237;
  v348[1] = v236;
  swift_bridgeObjectRetain(v236);
  v244._countAndFlagsBits = v242;
  v244._object = v243;
  String.append(_:)(v244);
  swift_bridgeObjectRelease(v236);
  swift_bridgeObjectRelease(v243);
  v246 = v348[0];
  v245 = v348[1];
  strcpy((char *)v348, "imageName=");
  BYTE3(v348[1]) = 0;
  HIDWORD(v348[1]) = -369098752;
  v247 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_imageName + 8);
  v349 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_imageName);
  v350 = v247;
  swift_bridgeObjectRetain(v247);
  v248._countAndFlagsBits = String.init<A>(reflecting:)(&v349, &type metadata for String);
  v249 = v248._object;
  String.append(_:)(v248);
  swift_bridgeObjectRelease(v249);
  v250._countAndFlagsBits = 32;
  v250._object = (void *)0xE100000000000000;
  String.append(_:)(v250);
  v251 = v348[0];
  v252 = (void *)v348[1];
  v348[0] = v246;
  v348[1] = v245;
  swift_bridgeObjectRetain(v245);
  v253._countAndFlagsBits = v251;
  v253._object = v252;
  String.append(_:)(v253);
  swift_bridgeObjectRelease(v245);
  swift_bridgeObjectRelease(v252);
  v255 = v348[0];
  v254 = v348[1];
  v348[0] = 0;
  v348[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v348[1]);
  v348[0] = v199;
  v348[1] = 0x80000001000A0740;
  LOBYTE(v349) = sub_1000431F0() & 1;
  v256._countAndFlagsBits = String.init<A>(reflecting:)(&v349, &type metadata for Bool);
  v257 = v256._object;
  String.append(_:)(v256);
  swift_bridgeObjectRelease(v257);
  v258._countAndFlagsBits = 32;
  v258._object = (void *)0xE100000000000000;
  String.append(_:)(v258);
  v259 = v348[0];
  v260 = (void *)v348[1];
  v348[0] = v255;
  v348[1] = v254;
  swift_bridgeObjectRetain(v254);
  v261._countAndFlagsBits = v259;
  v261._object = v260;
  String.append(_:)(v261);
  swift_bridgeObjectRelease(v254);
  swift_bridgeObjectRelease(v260);
  v263 = v348[0];
  v262 = v348[1];
  strcpy((char *)v348, "productName=");
  BYTE5(v348[1]) = 0;
  HIWORD(v348[1]) = -5120;
  v264 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_productName + 8);
  v349 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_productName);
  v350 = v264;
  swift_bridgeObjectRetain(v264);
  v265._countAndFlagsBits = String.init<A>(reflecting:)(&v349, &type metadata for String);
  v266 = v265._object;
  String.append(_:)(v265);
  swift_bridgeObjectRelease(v266);
  v267._countAndFlagsBits = 32;
  v267._object = (void *)0xE100000000000000;
  String.append(_:)(v267);
  v268 = v348[0];
  v269 = (void *)v348[1];
  v348[0] = v263;
  v348[1] = v262;
  swift_bridgeObjectRetain(v262);
  v270._countAndFlagsBits = v268;
  v270._object = v269;
  String.append(_:)(v270);
  swift_bridgeObjectRelease(v262);
  swift_bridgeObjectRelease(v269);
  v272 = v348[0];
  v271 = v348[1];
  strcpy((char *)v348, "stereoRole=");
  HIDWORD(v348[1]) = -352321536;
  v273 = sub_1000488AC(*(_DWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoRole));
  v274._countAndFlagsBits = String.init(cString:)(v273);
  v275 = v274._object;
  String.append(_:)(v274);
  swift_bridgeObjectRelease(v275);
  v276._countAndFlagsBits = 32;
  v276._object = (void *)0xE100000000000000;
  String.append(_:)(v276);
  v277 = v348[0];
  v278 = (void *)v348[1];
  v348[0] = v272;
  v348[1] = v271;
  swift_bridgeObjectRetain(v271);
  v279._countAndFlagsBits = v277;
  v279._object = v278;
  String.append(_:)(v279);
  swift_bridgeObjectRelease(v271);
  swift_bridgeObjectRelease(v278);
  v281 = v348[0];
  v280 = v348[1];
  v348[0] = 0;
  v348[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease(v348[1]);
  v348[0] = 0xD000000000000017;
  v348[1] = 0x80000001000A0760;
  LOBYTE(v349) = *(_BYTE *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoCounterpartColor);
  v282._countAndFlagsBits = String.init<A>(reflecting:)(&v349, &type metadata for UInt8);
  v283 = v282._object;
  String.append(_:)(v282);
  swift_bridgeObjectRelease(v283);
  v284._countAndFlagsBits = 32;
  v284._object = (void *)0xE100000000000000;
  String.append(_:)(v284);
  v285 = v348[0];
  v286 = (void *)v348[1];
  v348[0] = v281;
  v348[1] = v280;
  swift_bridgeObjectRetain(v280);
  v287._countAndFlagsBits = v285;
  v287._object = v286;
  String.append(_:)(v287);
  swift_bridgeObjectRelease(v280);
  swift_bridgeObjectRelease(v286);
  v289 = v348[0];
  v288 = v348[1];
  strcpy((char *)v348, "deviceGUID=");
  HIDWORD(v348[1]) = -352321536;
  v290 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceGUID + 8);
  v349 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceGUID);
  v350 = v290;
  swift_bridgeObjectRetain(v290);
  v291._countAndFlagsBits = String.init<A>(reflecting:)(&v349, &type metadata for String);
  v292 = v291._object;
  String.append(_:)(v291);
  swift_bridgeObjectRelease(v292);
  v293._countAndFlagsBits = 32;
  v293._object = (void *)0xE100000000000000;
  String.append(_:)(v293);
  v294 = v348[0];
  v295 = (void *)v348[1];
  v348[0] = v289;
  v348[1] = v288;
  swift_bridgeObjectRetain(v288);
  v296._countAndFlagsBits = v294;
  v296._object = v295;
  String.append(_:)(v296);
  swift_bridgeObjectRelease(v288);
  swift_bridgeObjectRelease(v295);
  v298 = v348[0];
  v297 = v348[1];
  v348[0] = 0;
  v348[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease(v348[1]);
  v299 = v347;
  v348[0] = v347;
  v348[1] = 0x80000001000A0780;
  v300 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceSerialNumber + 8);
  v349 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceSerialNumber);
  v350 = v300;
  swift_bridgeObjectRetain(v300);
  v301._countAndFlagsBits = String.init<A>(reflecting:)(&v349, &type metadata for String);
  v302 = v301._object;
  String.append(_:)(v301);
  swift_bridgeObjectRelease(v302);
  v303._countAndFlagsBits = 32;
  v303._object = (void *)0xE100000000000000;
  String.append(_:)(v303);
  v304 = v348[0];
  v305 = (void *)v348[1];
  v348[0] = v298;
  v348[1] = v297;
  swift_bridgeObjectRetain(v297);
  v306._countAndFlagsBits = v304;
  v306._object = v305;
  String.append(_:)(v306);
  swift_bridgeObjectRelease(v297);
  swift_bridgeObjectRelease(v305);
  v308 = v348[0];
  v307 = v348[1];
  v348[0] = 0;
  v348[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease(v348[1]);
  v348[0] = 0xD000000000000015;
  v348[1] = 0x80000001000A07A0;
  v349 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_availableAccessories);
  swift_bridgeObjectRetain(v349);
  v309 = sub_10000D604(&qword_1000D6CE8);
  v310._countAndFlagsBits = String.init<A>(reflecting:)(&v349, v309);
  v311 = v310._object;
  String.append(_:)(v310);
  swift_bridgeObjectRelease(v311);
  v312._countAndFlagsBits = 32;
  v312._object = (void *)0xE100000000000000;
  String.append(_:)(v312);
  v313 = v348[0];
  v314 = (void *)v348[1];
  v348[0] = v308;
  v348[1] = v307;
  swift_bridgeObjectRetain(v307);
  v315._countAndFlagsBits = v313;
  v315._object = v314;
  String.append(_:)(v315);
  swift_bridgeObjectRelease(v307);
  swift_bridgeObjectRelease(v314);
  v317 = v348[0];
  v316 = v348[1];
  v348[0] = 0;
  v348[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease(v348[1]);
  v349 = v299;
  v350 = 0x80000001000A07C0;
  v318 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 8);
  v319 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 16);
  v320 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 24);
  v321 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 32);
  v322 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 40);
  v323 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 48);
  v348[0] = *(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation);
  v348[1] = v318;
  v348[2] = v319;
  v348[3] = v320;
  v348[4] = v321;
  v348[5] = v322;
  v348[6] = v323;
  sub_100012E14(v348[0], v318, v319, v320, v321, v322);
  v324 = sub_10000D604(&qword_1000D6CF0);
  v325._countAndFlagsBits = String.init<A>(reflecting:)(v348, v324);
  v326 = v325._object;
  String.append(_:)(v325);
  swift_bridgeObjectRelease(v326);
  v327._countAndFlagsBits = 32;
  v327._object = (void *)0xE100000000000000;
  String.append(_:)(v327);
  v328 = v349;
  v329 = (void *)v350;
  v348[0] = v317;
  v348[1] = v316;
  swift_bridgeObjectRetain(v316);
  v330._countAndFlagsBits = v328;
  v330._object = v329;
  String.append(_:)(v330);
  swift_bridgeObjectRelease(v316);
  swift_bridgeObjectRelease(v329);
  v332 = v348[0];
  v331 = v348[1];
  v348[0] = 0;
  v348[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(28);
  swift_bridgeObjectRelease(v348[1]);
  v348[0] = 0xD000000000000019;
  v348[1] = 0x80000001000A07E0;
  LOBYTE(v349) = *(_BYTE *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_subscribedToMusicService);
  v333._countAndFlagsBits = String.init<A>(reflecting:)(&v349, &type metadata for Bool);
  v334 = v333._object;
  String.append(_:)(v333);
  swift_bridgeObjectRelease(v334);
  v335._countAndFlagsBits = 32;
  v335._object = (void *)0xE100000000000000;
  String.append(_:)(v335);
  v336 = v348[0];
  v337 = (void *)v348[1];
  v348[0] = v332;
  v348[1] = v331;
  swift_bridgeObjectRetain(v331);
  v338._countAndFlagsBits = v336;
  v338._object = v337;
  String.append(_:)(v338);
  swift_bridgeObjectRelease(v331);
  swift_bridgeObjectRelease(v337);
  v339 = v348[1];
  swift_bridgeObjectRetain(v348[1]);
  v340._countAndFlagsBits = 62;
  v340._object = (void *)0xE100000000000000;
  String.append(_:)(v340);
  swift_bridgeObjectRelease(v339);
  return v348[0];
}

uint64_t sub_100045DE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;

  v3 = (uint64_t *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_selectedSiriLanguageCode);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_selectedSiriLanguageCode + 8);
  if (v4)
  {
    v5 = *v3;
  }
  else if (a2)
  {
    v5 = a1;
    *v3 = a1;
    v3[1] = a2;
    swift_bridgeObjectRetain_n(a2, 2);
    swift_bridgeObjectRelease(0);
  }
  else
  {
    if (qword_1000D5558 != -1)
      swift_once(&qword_1000D5558, sub_100042EA8);
    v5 = 0x53552D6E65;
    v6 = type metadata accessor for Logger(0, a2);
    v7 = sub_10001118C(v6, (uint64_t)qword_1000D63D0);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "HomePodSetupModel: #### userSelectedSiriLanguage called but selectedSiriLanguage and defaultValue are both nil, falling back to English", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }

  }
  swift_bridgeObjectRetain(v4);
  return v5;
}

void sub_100045F1C(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  NSString v43;
  void *v44;
  NSObject *v45;
  uint64_t v46;
  NSObject *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  _BOOL4 v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  NSString v60;
  id v61;
  NSString v62;
  void *v63;
  uint64_t v64;
  NSObject *v65;
  id v66;
  uint64_t v67;
  void *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  void (*v72)(char *, char *, uint64_t);
  char *v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  NSObject *v78;
  NSObject *v79;
  uint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  int v83;
  uint64_t v84;
  NSObject **v85;
  NSObject *v86;
  char v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  int v92;
  os_log_t v93;
  uint64_t v94;
  NSObject **v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  NSObject *v105;
  os_log_type_t v106;
  uint64_t v107;
  _QWORD *v108;
  id v109;
  id v110;
  uint64_t v111;
  NSObject *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  NSObject **v122;
  NSObject *v123;
  uint8_t *v124;
  id v125;
  void (*v126)(uint64_t, char *, uint64_t);
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  int v131;
  uint64_t v132;
  uint64_t v133;
  NSObject **v134;
  uint64_t v135;
  char *v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  int v141;
  os_log_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  id v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149[3];

  v4 = v3;
  v141 = a1;
  v7 = sub_10000D604(&qword_1000D5DB8);
  v8 = __chkstk_darwin(v7);
  v136 = (char *)&v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)&v121 - v10;
  v12 = type metadata accessor for URL(0);
  v139 = *(_QWORD *)(v12 - 8);
  v140 = v12;
  v13 = __chkstk_darwin(v12);
  v137 = (char *)&v121 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v138 = (char *)&v121 - v15;
  v16 = sub_10000D604(&qword_1000D5E60);
  v17 = __chkstk_darwin(v16);
  v135 = (uint64_t)&v121 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v133 = (uint64_t)&v121 - v20;
  __chkstk_darwin(v19);
  v22 = (char *)&v121 - v21;
  v23 = type metadata accessor for AdjustedImage(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = __chkstk_darwin(v23);
  v134 = (NSObject **)((char *)&v121 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v25);
  v28 = (char *)&v121 - v27;
  v132 = OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoRole;
  v29 = *(_DWORD *)(v4 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoRole);
  v30 = ((v29 & 0xFFFFFFFE) == 2) | a2;
  LODWORD(v142) = *(unsigned __int8 *)(v4 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceColorCode);
  v31 = OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode;
  v32 = 13;
  if (*(_BYTE *)(v4 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode) != 5)
  {
    v32 = (v141 & 1) != 0 ? 1037 : 13;
    if (((v29 & 0xFFFFFFFE) == 2) | a2 & 1)
    {
      if (v29 == 2)
        v33 = 96;
      else
        v33 = 4192;
      v34 = v33 | v32;
      if (v29 == 3)
        v35 = v32 | 0x860;
      else
        v35 = v34;
      if ((_DWORD)v142 == *(unsigned __int8 *)(v4
                                              + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoCounterpartColor))
        v32 = v32 | 0x20;
      else
        v32 = v35;
    }
  }
  v131 = v30;
  sub_100046DCC(v32, (uint64_t)v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) != 1)
  {
    sub_100035C60((uint64_t)v22, (uint64_t)v28);
    sub_100035C60((uint64_t)v28, a3);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v24 + 56))(a3, 0, 1, v23);
    return;
  }
  v129 = v24;
  sub_10000DC40((uint64_t)v22, &qword_1000D5E60);
  sub_100048E30();
  v146 = (id)NSString.init(stringLiteral:)("", 0, 2);
  if (*(unsigned __int8 *)(v4 + v31) <= 1u)
    v36 = 1;
  else
    v36 = *(unsigned __int8 *)(v4 + v31);
  LODWORD(v128) = v36;
  sub_100006BB8(v36, v142, v32, &v146, 0, 0, 0, 0, 0);
  v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v146);
  v39 = v38;
  v144 = v37;
  v145 = v38;
  v40 = HIBYTE(v38) & 0xF;
  if ((v38 & 0x2000000000000000) == 0)
    v40 = v37 & 0xFFFFFFFFFFFFLL;
  v130 = v23;
  if (!v40)
  {
    swift_bridgeObjectRelease(v38);
    v39 = *(_QWORD *)(v4 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_imageName + 8);
    v144 = *(_QWORD *)(v4 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_imageName);
    v145 = v39;
    swift_bridgeObjectRetain(v39);
  }
  v41 = (void *)objc_opt_self(_UIImageSymbolConfiguration);
  swift_bridgeObjectRetain(v39);
  v42 = objc_msgSend(v41, "configurationWithPointSize:", 72.0);
  v43 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v39);
  v44 = (void *)objc_opt_self(UIImage);
  v45 = objc_msgSend(v44, "systemImageNamed:withConfiguration:", v43, v42);

  v47 = v45;
  if (!v45)
  {
    LODWORD(v126) = v32;
    if (qword_1000D5558 != -1)
      swift_once(&qword_1000D5558, sub_100042EA8);
    v48 = type metadata accessor for Logger(0, v46);
    sub_10001118C(v48, (uint64_t)qword_1000D63D0);
    v49 = v144;
    v50 = v145;
    v51 = swift_bridgeObjectRetain_n(v145, 2);
    v52 = Logger.logObject.getter(v51);
    v53 = static os_log_type_t.error.getter();
    v54 = os_log_type_enabled(v52, v53);
    v125 = v44;
    if (v54)
    {
      v55 = (uint8_t *)swift_slowAlloc(12, -1);
      v56 = swift_slowAlloc(32, -1);
      v127 = a3;
      v57 = v56;
      v149[0] = v56;
      *(_DWORD *)v55 = 136315138;
      v124 = v55 + 4;
      swift_bridgeObjectRetain(v50);
      v147 = sub_10003EF58(v49, v50, v149);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v147, &v148);
      swift_bridgeObjectRelease_n(v50, 3);
      _os_log_impl((void *)&_mh_execute_header, v52, v53, "HomePodSetupViewModel: could not find a device image as systemName so looking for %s", v55, 0xCu);
      swift_arrayDestroy(v57, 1, (char *)&type metadata for Any + 8);
      v58 = v57;
      a3 = v127;
      swift_slowDealloc(v58, -1, -1);
      swift_slowDealloc(v55, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v50, 2);
    }
    swift_beginAccess(&v144, &v147, 0, 0);
    v39 = v145;
    v59 = objc_allocWithZone((Class)UIImage);
    swift_bridgeObjectRetain(v39);
    v60 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v39);
    v61 = objc_msgSend(v59, "initWithContentsOfFile:", v60);

    LODWORD(v32) = (_DWORD)v126;
    if (!v61)
    {
      swift_bridgeObjectRetain(v39);
      v62 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v39);
      v61 = objc_msgSend(v125, "imageNamed:", v62);

      if (!v61)
      {
        swift_bridgeObjectRelease(v39);
        v47 = 0;
        goto LABEL_55;
      }
    }
    v47 = v61;
  }
  v63 = *(void **)(v4 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_assetBundle);
  v64 = SFDeviceAssetNameAdjustments;
  v65 = v45;
  v66 = objc_msgSend(v63, "URLForResource:withExtension:", v64, 0);
  v67 = v140;
  if (!v66)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v139 + 56))(v11, 1, 1, v140);
    goto LABEL_54;
  }
  v68 = v66;
  v69 = v137;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  v70 = v139;
  v71 = v69;
  v72 = *(void (**)(char *, char *, uint64_t))(v139 + 32);
  v72(v11, v71, v67);
  v73 = *(char **)(v70 + 56);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v73)(v11, 0, 1, v67);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v11, 1, v67) == 1)
  {
LABEL_54:
    swift_bridgeObjectRelease(v39);

    sub_10000DC40((uint64_t)v11, &qword_1000D5DB8);
LABEL_55:
    if (qword_1000D5558 != -1)
      swift_once(&qword_1000D5558, sub_100042EA8);
    v103 = type metadata accessor for Logger(0, v102);
    v104 = sub_10001118C(v103, (uint64_t)qword_1000D63D0);
    v105 = Logger.logObject.getter(v104);
    v106 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v105, v106))
    {
      v107 = swift_slowAlloc(27, -1);
      v108 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v107 = 67109890;
      LODWORD(v149[0]) = (_DWORD)v128;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v149, (char *)v149 + 4);
      *(_WORD *)(v107 + 8) = 256;
      LOBYTE(v149[0]) = (_BYTE)v142;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v149, (char *)v149 + 1);
      *(_WORD *)(v107 + 11) = 1024;
      LODWORD(v149[0]) = v32;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v149, (char *)v149 + 4);
      *(_WORD *)(v107 + 17) = 2112;
      swift_beginAccess(&v146, v149, 0, 0);
      v109 = v146;
      v143 = (uint64_t)v146;
      v110 = v146;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v143, &v144);
      *v108 = v109;
      _os_log_impl((void *)&_mh_execute_header, v105, v106, "HomePodSetupViewModel: could not find a device image for asset: %u for deviceColorCode: %hhu and flags: %u named: %@ returning a blank image.", (uint8_t *)v107, 0x1Bu);
      v111 = sub_10000D604(&qword_1000D5CC8);
      swift_arrayDestroy(v108, 1, v111);
      swift_slowDealloc(v108, -1, -1);
      swift_slowDealloc(v107, -1, -1);
      v112 = v47;
    }
    else
    {
      v112 = v105;
      v105 = v47;
    }
    v113 = v130;
    v114 = v129;

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v114 + 56))(a3, 1, 1, v113);
    goto LABEL_64;
  }
  v127 = a3;
  v126 = (void (*)(uint64_t, char *, uint64_t))v72;
  v72(v138, v11, v67);
  if (qword_1000D5558 != -1)
    swift_once(&qword_1000D5558, sub_100042EA8);
  v137 = v73;
  v75 = type metadata accessor for Logger(0, v74);
  sub_10001118C(v75, (uint64_t)qword_1000D63D0);
  v77 = v144;
  v76 = v145;
  v78 = v47;
  swift_retain_n(v4, 2);
  v79 = v78;
  v80 = swift_bridgeObjectRetain(v76);
  v81 = Logger.logObject.getter(v80);
  v82 = static os_log_type_t.default.getter();
  v83 = v82;
  if (os_log_type_enabled(v81, v82))
  {
    v84 = swift_slowAlloc(57, -1);
    v85 = (NSObject **)swift_slowAlloc(8, -1);
    v122 = v85;
    v125 = (id)swift_slowAlloc(96, -1);
    v149[0] = (uint64_t)v125;
    *(_DWORD *)v84 = 136316674;
    LODWORD(v124) = v83;
    swift_bridgeObjectRetain(v76);
    v143 = sub_10003EF58(v77, v76, v149);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v143, &v144);
    swift_bridgeObjectRelease_n(v76, 3);
    *(_WORD *)(v84 + 12) = 2112;
    v143 = (uint64_t)v79;
    v86 = v79;
    v123 = v86;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v143, &v144);
    *v85 = v79;

    *(_WORD *)(v84 + 22) = 1024;
    LODWORD(v143) = (_DWORD)v128;
    v128 = (char *)&v143 + 4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v143, (char *)&v143 + 4);
    *(_WORD *)(v84 + 28) = 256;
    LOBYTE(v143) = (_BYTE)v142;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v143, (char *)&v143 + 1);
    *(_WORD *)(v84 + 31) = 2080;
    v87 = v141;
    if ((v141 & 1) != 0)
      v88 = 28271;
    else
      v88 = 6710895;
    v142 = v81;
    if ((v141 & 1) != 0)
      v89 = 0xE200000000000000;
    else
      v89 = 0xE300000000000000;
    v143 = sub_10003EF58(v88, v89, v149);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v143, &v144);
    swift_bridgeObjectRelease(v89);
    *(_WORD *)(v84 + 41) = 2080;
    if ((v131 & 1) != 0)
      v90 = 28271;
    else
      v90 = 6710895;
    if ((v131 & 1) != 0)
      v91 = 0xE200000000000000;
    else
      v91 = 0xE300000000000000;
    v143 = sub_10003EF58(v90, v91, v149);
    v67 = v140;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v143, &v144);
    swift_bridgeObjectRelease(v91);
    *(_WORD *)(v84 + 51) = 1024;
    v92 = *(_DWORD *)(v4 + v132);
    swift_release(v4);
    LODWORD(v143) = v92;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v143, v128);
    swift_release(v4);
    v93 = v142;
    _os_log_impl((void *)&_mh_execute_header, v142, (os_log_type_t)v124, "HomePodSetupViewModel: adjustedProductImage returning image named: %s with details: %@  product: %u %hhu withTV: %s withStereo: %s, StereoRole: %d", (uint8_t *)v84, 0x39u);
    v94 = sub_10000D604(&qword_1000D5CC8);
    v95 = v122;
    swift_arrayDestroy(v122, 1, v94);
    swift_slowDealloc(v95, -1, -1);
    v96 = v125;
    swift_arrayDestroy(v125, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v96, -1, -1);
    swift_slowDealloc(v84, -1, -1);

    v97 = v127;
    v98 = v130;
    v99 = v129;
    v100 = (uint64_t)v136;
    if ((v87 & 1) == 0)
      goto LABEL_52;
LABEL_62:
    (*(void (**)(char *, uint64_t))(v139 + 8))(v138, v67);
    v101 = 1;
    goto LABEL_63;
  }

  swift_bridgeObjectRelease_n(v76, 2);
  swift_release_n(v4, 2);
  v97 = v127;
  v98 = v130;
  v99 = v129;
  v100 = (uint64_t)v136;
  if ((v141 & 1) != 0)
    goto LABEL_62;
LABEL_52:
  v126(v100, v138, v67);
  v101 = 0;
LABEL_63:
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v137)(v100, v101, 1, v67);
  v115 = (uint64_t)v134;
  *v134 = v79;
  sub_10003521C(v100, v115 + *(int *)(v98 + 20), &qword_1000D5DB8);
  *(_DWORD *)(v4 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_cachedProductImageflags) = v32;
  v116 = v133;
  sub_100049304(v115, v133);
  v117 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v99 + 56);
  v117(v116, 0, 1, v98);
  v118 = v116;
  v119 = v135;
  sub_10003521C(v118, v135, &qword_1000D5E60);
  v120 = v4 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_cachedProductImage;
  swift_beginAccess(v4 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_cachedProductImage, v149, 33, 0);
  sub_100011340(v119, v120, &qword_1000D5E60);
  swift_endAccess(v149);
  sub_100035C60(v115, v97);
  v117(v97, 0, 1, v98);
LABEL_64:

}

uint64_t sub_100046DCC@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  _BYTE v22[24];

  v5 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v5);
  v7 = &v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for AdjustedImage(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (*(_DWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_cachedProductImageflags) != a1)
    goto LABEL_4;
  v12 = v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_cachedProductImage;
  swift_beginAccess(v12, v22, 0, 0);
  sub_10000E0F0(v12, (uint64_t)v7, &qword_1000D5E60);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_10000DC40((uint64_t)v7, &qword_1000D5E60);
LABEL_4:
    v13 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, v13, 1, v8);
  }
  sub_100035C60((uint64_t)v7, (uint64_t)v11);
  if (qword_1000D5558 != -1)
    swift_once(&qword_1000D5558, sub_100042EA8);
  v15 = type metadata accessor for Logger(0, v14);
  v16 = sub_10001118C(v15, (uint64_t)qword_1000D63D0);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "HomePodSetupModel: adjustedProductImage returning cached image.", v19, 2u);
    swift_slowDealloc(v19, -1, -1);
  }

  sub_100035C60((uint64_t)v11, a2);
  v13 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, v13, 1, v8);
}

_QWORD *sub_100046FD4()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[6]);
  swift_bridgeObjectRelease(v0[7]);
  sub_10000DC40((uint64_t)v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_defaultRoomIndexPath, &qword_1000D6170);
  v1 = (char *)v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceIdentifier;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_iCloudId + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_imageName + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_iTunesId + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_movieName + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_productName + 8));
  sub_10000DC40((uint64_t)v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_sessionUUID, &qword_1000D6CB0);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0
                                      + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_availableSiriLanguages));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0
                                      + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preferredSiriLanguageCode
                                      + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0
                                      + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_selectedSiriLanguageCode
                                      + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0
                                      + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_availableAccessories));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceGUID + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0
                                      + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceSerialNumber
                                      + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_siriDialogInfo));

  sub_100012D4C(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation), *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 8), *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 16), *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 24), *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 32), *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 40));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_assetBundles));
  sub_10000DC40((uint64_t)v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_cachedProductImage, &qword_1000D5E60);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeName + 8));

  return v0;
}

uint64_t sub_1000471E8()
{
  uint64_t v0;

  sub_100046FD4();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10004720C()
{
  return type metadata accessor for HomePodSetupModel(0);
}

uint64_t type metadata accessor for HomePodSetupModel(uint64_t a1)
{
  uint64_t result;

  result = qword_1000D6410;
  if (!qword_1000D6410)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HomePodSetupModel);
  return result;
}

void sub_100047250(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[64];

  v10[2] = &unk_100099748;
  v10[3] = &unk_100099748;
  v10[4] = &unk_100099748;
  v10[5] = (char *)&value witness table for Builtin.Int32 + 64;
  v10[6] = &unk_100099760;
  v10[7] = &unk_100099760;
  v10[8] = (char *)&value witness table for Builtin.Int64 + 64;
  sub_1000192F4(319, &qword_1000D6420, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath);
  if (v3 <= 0x3F)
  {
    v10[9] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for UUID(319);
    if (v5 <= 0x3F)
    {
      v10[10] = *(_QWORD *)(v4 - 8) + 64;
      v10[11] = &unk_100099730;
      v10[12] = &unk_100099748;
      v10[13] = &unk_100099718;
      v10[14] = &unk_100099778;
      v10[15] = &unk_100099718;
      v10[16] = &unk_100099778;
      v10[17] = (char *)&value witness table for Builtin.Int8 + 64;
      v10[18] = (char *)&value witness table for Builtin.Int8 + 64;
      v10[19] = (char *)&value witness table for Builtin.Int8 + 64;
      v10[20] = &unk_100099778;
      v10[21] = &unk_100099760;
      v10[22] = (char *)&value witness table for Builtin.Int32 + 64;
      v10[23] = &unk_100099730;
      sub_1000192F4(319, (unint64_t *)&unk_1000D6428, (uint64_t (*)(uint64_t))&type metadata accessor for UUID);
      if (v7 <= 0x3F)
      {
        v10[24] = *(_QWORD *)(v6 - 8) + 64;
        v10[25] = (char *)&value witness table for Builtin.Int32 + 64;
        v10[26] = (char *)&value witness table for Builtin.Int32 + 64;
        v10[27] = (char *)&value witness table for Builtin.Int8 + 64;
        v10[28] = (char *)&value witness table for Builtin.Int32 + 64;
        v10[29] = (char *)&value witness table for Builtin.Int64 + 64;
        v10[30] = (char *)&value witness table for Builtin.BridgeObject + 64;
        v10[31] = &unk_100099778;
        v10[32] = &unk_100099718;
        v10[33] = (char *)&value witness table for Builtin.BridgeObject + 64;
        v10[34] = &unk_100099778;
        v10[35] = &unk_100099778;
        v10[36] = &unk_100099748;
        v10[37] = (char *)&value witness table for Builtin.Int8 + 64;
        v10[38] = &unk_100099760;
        v10[39] = &unk_100099748;
        v10[40] = &unk_100099790;
        v10[41] = (char *)&value witness table for Builtin.UnknownObject + 64;
        v10[42] = (char *)&value witness table for Builtin.BridgeObject + 64;
        sub_1000192F4(319, &qword_1000D5EE0, type metadata accessor for AdjustedImage);
        if (v9 <= 0x3F)
        {
          v10[43] = *(_QWORD *)(v8 - 8) + 64;
          v10[44] = (char *)&value witness table for Builtin.Int32 + 64;
          v10[45] = &unk_100099760;
          v10[46] = &unk_100099760;
          v10[47] = &unk_100099760;
          v10[48] = &unk_100099760;
          v10[49] = &unk_100099778;
          v10[50] = &unk_100099760;
          v10[51] = (char *)&value witness table for Builtin.Int32 + 64;
          v10[52] = &unk_100099760;
          v10[53] = &unk_100099748;
          v10[54] = &unk_100099760;
          v10[55] = &unk_100099760;
          v10[56] = (char *)&value witness table for Builtin.Int32 + 64;
          v10[57] = &unk_100099760;
          v10[58] = &unk_100099760;
          v10[59] = &unk_100099760;
          v10[60] = &unk_100099760;
          v10[61] = (char *)&value witness table for Builtin.Int32 + 64;
          v10[62] = &unk_100099760;
          swift_updateClassMetadata2(a1, 256, 63, v10, a1 + 80);
        }
      }
    }
  }
}

uint64_t getEnumTagSinglePayload for HomePodSetupTestMode(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF1)
    goto LABEL_17;
  if (a2 + 15 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 15) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 15;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 15;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 15;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x10;
  v8 = v6 - 16;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for HomePodSetupTestMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_100047520 + 4 * byte_100099605[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_100047554 + 4 * byte_100099600[v4]))();
}

uint64_t sub_100047554(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10004755C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100047564);
  return result;
}

uint64_t sub_100047570(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100047578);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_10004757C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100047584(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HomePodSetupTestMode()
{
  return &type metadata for HomePodSetupTestMode;
}

unint64_t sub_1000475A4()
{
  unint64_t result;

  result = qword_1000D6CA8;
  if (!qword_1000D6CA8)
  {
    result = swift_getWitnessTable(&unk_100099868, &type metadata for HomePodSetupTestMode);
    atomic_store(result, (unint64_t *)&qword_1000D6CA8);
  }
  return result;
}

uint64_t sub_1000475E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  void *v17;
  void *v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;
  void *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  Swift::String v29;
  Swift::String v30;
  uint64_t v31;
  void *v32;
  Swift::String v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  Swift::String v38;
  void *object;
  Swift::String v40;
  uint64_t v41;
  void *v42;
  Swift::String v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  Swift::String v48;
  void *v49;
  Swift::String v50;
  uint64_t v51;
  void *v52;
  Swift::String v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  Swift::String v60;
  uint64_t v61;
  void *v62;
  Swift::String v63;
  uint64_t v64;
  uint64_t v65;
  const char *v66;
  Swift::String v67;
  void *v68;
  Swift::String v69;
  uint64_t v70;
  void *v71;
  Swift::String v72;
  uint64_t v73;
  uint64_t v74;
  Swift::String v75;
  void *v76;
  Swift::String v77;
  uint64_t v78;
  void *v79;
  Swift::String v80;
  uint64_t v81;
  uint64_t v82;
  const char *v83;
  uint64_t v84;
  Swift::String v85;
  void *v86;
  Swift::String v87;
  uint64_t v88;
  void *v89;
  Swift::String v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  Swift::String v94;
  void *v95;
  Swift::String v96;
  uint64_t v97;
  void *v98;
  Swift::String v99;
  uint64_t v100;
  uint64_t v101;
  const char *v102;
  uint64_t v103;
  Swift::String v104;
  void *v105;
  Swift::String v106;
  uint64_t v107;
  void *v108;
  Swift::String v109;
  uint64_t v110;
  uint64_t v111;
  Swift::String v112;
  void *v113;
  Swift::String v114;
  uint64_t v115;
  void *v116;
  Swift::String v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  Swift::String v121;
  void *v122;
  Swift::String v123;
  uint64_t v124;
  void *v125;
  Swift::String v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  Swift::String v130;
  void *v131;
  Swift::String v132;
  uint64_t v133;
  void *v134;
  Swift::String v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  Swift::String v139;
  void *v140;
  Swift::String v141;
  uint64_t v142;
  void *v143;
  Swift::String v144;
  uint64_t v145;
  uint64_t v146;
  Swift::String v147;
  void *v148;
  Swift::String v149;
  uint64_t v150;
  void *v151;
  Swift::String v152;
  uint64_t v153;
  Swift::String v154;
  unint64_t v156;
  id v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  _QWORD v161[2];

  v1 = v0;
  v2 = sub_10000D604(&qword_1000D6CB0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v156 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v156 - v6;
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v156 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v156 - v13;
  v159 = 0;
  v160 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v160);
  v159 = 0xD000000000000011;
  v160 = 0x80000001000A0640;
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v15(v14, v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceIdentifier, v8);
  v15(v12, (uint64_t)v14, v8);
  v16 = String.init<A>(reflecting:)(v12, v8);
  v18 = v17;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  v19._countAndFlagsBits = v16;
  v19._object = v18;
  String.append(_:)(v19);
  swift_bridgeObjectRelease(v18);
  v20._countAndFlagsBits = 32;
  v20._object = (void *)0xE100000000000000;
  String.append(_:)(v20);
  v21._countAndFlagsBits = v159;
  v22 = (void *)v160;
  v156 = 0xD000000000000013;
  v159 = 0xD000000000000013;
  v160 = 0x80000001000A0620;
  v21._object = v22;
  String.append(_:)(v21);
  swift_bridgeObjectRelease(v22);
  v24 = v159;
  v23 = v160;
  strcpy((char *)v161, "sessionUUID=");
  BYTE5(v161[1]) = 0;
  HIWORD(v161[1]) = -5120;
  v25 = v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_sessionUUID;
  swift_beginAccess(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_sessionUUID, &v159, 0, 0);
  sub_10000E0F0(v25, (uint64_t)v7, &qword_1000D6CB0);
  sub_10000E0F0((uint64_t)v7, (uint64_t)v5, &qword_1000D6CB0);
  v26 = String.init<A>(reflecting:)(v5, v2);
  v28 = v27;
  sub_10000DC40((uint64_t)v7, &qword_1000D6CB0);
  v29._countAndFlagsBits = v26;
  v29._object = v28;
  String.append(_:)(v29);
  swift_bridgeObjectRelease(v28);
  v30._countAndFlagsBits = 32;
  v30._object = (void *)0xE100000000000000;
  String.append(_:)(v30);
  v31 = v161[0];
  v32 = (void *)v161[1];
  v161[0] = v24;
  v161[1] = v23;
  swift_bridgeObjectRetain(v23);
  v33._countAndFlagsBits = v31;
  v33._object = v32;
  String.append(_:)(v33);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v32);
  v35 = v161[0];
  v34 = v161[1];
  v161[0] = 0x3D69737372;
  v161[1] = 0xE500000000000000;
  v36 = *(_BYTE *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_rssi + 4);
  LODWORD(v157) = *(_DWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_rssi);
  BYTE4(v157) = v36;
  v37 = sub_10000D604(&qword_1000D6CB8);
  v38._countAndFlagsBits = String.init<A>(reflecting:)(&v157, v37);
  object = v38._object;
  String.append(_:)(v38);
  swift_bridgeObjectRelease(object);
  v40._countAndFlagsBits = 32;
  v40._object = (void *)0xE100000000000000;
  String.append(_:)(v40);
  v41 = v161[0];
  v42 = (void *)v161[1];
  v161[0] = v35;
  v161[1] = v34;
  swift_bridgeObjectRetain(v34);
  v43._countAndFlagsBits = v41;
  v43._object = v42;
  String.append(_:)(v43);
  swift_bridgeObjectRelease(v34);
  swift_bridgeObjectRelease(v42);
  v45 = v161[0];
  v44 = v161[1];
  strcpy((char *)v161, "dismissType=");
  BYTE5(v161[1]) = 0;
  HIWORD(v161[1]) = -5120;
  v46 = *(_BYTE *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_dismissType + 4);
  LODWORD(v157) = *(_DWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_dismissType);
  BYTE4(v157) = v46;
  v47 = sub_10000D604(&qword_1000D6CC8);
  v48._countAndFlagsBits = String.init<A>(reflecting:)(&v157, v47);
  v49 = v48._object;
  String.append(_:)(v48);
  swift_bridgeObjectRelease(v49);
  v50._countAndFlagsBits = 32;
  v50._object = (void *)0xE100000000000000;
  String.append(_:)(v50);
  v51 = v161[0];
  v52 = (void *)v161[1];
  v161[0] = v45;
  v161[1] = v44;
  swift_bridgeObjectRetain(v44);
  v53._countAndFlagsBits = v51;
  v53._object = v52;
  String.append(_:)(v53);
  swift_bridgeObjectRelease(v44);
  swift_bridgeObjectRelease(v52);
  v55 = v161[0];
  v54 = v161[1];
  v161[0] = 0x3D726F727265;
  v161[1] = 0xE600000000000000;
  v157 = *(id *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_error);
  v56 = v157;
  v57 = sub_10000D604(&qword_1000D6CD0);
  v58._countAndFlagsBits = String.init<A>(reflecting:)(&v157, v57);
  v59 = v58._object;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60._countAndFlagsBits = 32;
  v60._object = (void *)0xE100000000000000;
  String.append(_:)(v60);
  v61 = v161[0];
  v62 = (void *)v161[1];
  v161[0] = v55;
  v161[1] = v54;
  swift_bridgeObjectRetain(v54);
  v63._countAndFlagsBits = v61;
  v63._object = v62;
  String.append(_:)(v63);
  swift_bridgeObjectRelease(v54);
  swift_bridgeObjectRelease(v62);
  v65 = v161[0];
  v64 = v161[1];
  v161[0] = 0;
  v161[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease(v161[1]);
  v161[0] = 0xD000000000000015;
  v161[1] = 0x80000001000A06C0;
  v66 = sub_100048090(*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode));
  v67._countAndFlagsBits = String.init(cString:)(v66);
  v68 = v67._object;
  String.append(_:)(v67);
  swift_bridgeObjectRelease(v68);
  v69._countAndFlagsBits = 32;
  v69._object = (void *)0xE100000000000000;
  String.append(_:)(v69);
  v70 = v161[0];
  v71 = (void *)v161[1];
  v161[0] = v65;
  v161[1] = v64;
  swift_bridgeObjectRetain(v64);
  v72._countAndFlagsBits = v70;
  v72._object = v71;
  String.append(_:)(v72);
  swift_bridgeObjectRelease(v64);
  swift_bridgeObjectRelease(v71);
  v74 = v161[0];
  v73 = v161[1];
  v161[0] = 0;
  v161[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease(v161[1]);
  v161[0] = 0xD000000000000015;
  v161[1] = 0x80000001000A06E0;
  LOBYTE(v157) = *(_BYTE *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceColorCode);
  v75._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt8, &protocol witness table for UInt8);
  v76 = v75._object;
  String.append(_:)(v75);
  swift_bridgeObjectRelease(v76);
  v77._countAndFlagsBits = 32;
  v77._object = (void *)0xE100000000000000;
  String.append(_:)(v77);
  v78 = v161[0];
  v79 = (void *)v161[1];
  v161[0] = v74;
  v161[1] = v73;
  swift_bridgeObjectRetain(v73);
  v80._countAndFlagsBits = v78;
  v80._object = v79;
  String.append(_:)(v80);
  swift_bridgeObjectRelease(v73);
  swift_bridgeObjectRelease(v79);
  v82 = v161[0];
  v81 = v161[1];
  v161[0] = 0;
  v161[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease(v161[1]);
  strcpy((char *)v161, "progressEvent=");
  HIBYTE(v161[1]) = -18;
  v83 = sub_100048130(*(_DWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_progressEvent));
  v157 = (id)String.init(cString:)(v83);
  v158 = v84;
  v85._countAndFlagsBits = String.init<A>(reflecting:)(&v157, &type metadata for String);
  v86 = v85._object;
  String.append(_:)(v85);
  swift_bridgeObjectRelease(v86);
  v87._countAndFlagsBits = 32;
  v87._object = (void *)0xE100000000000000;
  String.append(_:)(v87);
  v88 = v161[0];
  v89 = (void *)v161[1];
  v161[0] = v82;
  v161[1] = v81;
  swift_bridgeObjectRetain(v81);
  v90._countAndFlagsBits = v88;
  v90._object = v89;
  String.append(_:)(v90);
  swift_bridgeObjectRelease(v81);
  swift_bridgeObjectRelease(v89);
  v92 = v161[0];
  v91 = v161[1];
  strcpy((char *)v161, "productName=");
  BYTE5(v161[1]) = 0;
  HIWORD(v161[1]) = -5120;
  v93 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_productName + 8);
  v157 = *(id *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_productName);
  v158 = v93;
  swift_bridgeObjectRetain(v93);
  v94._countAndFlagsBits = String.init<A>(reflecting:)(&v157, &type metadata for String);
  v95 = v94._object;
  String.append(_:)(v94);
  swift_bridgeObjectRelease(v95);
  v96._countAndFlagsBits = 32;
  v96._object = (void *)0xE100000000000000;
  String.append(_:)(v96);
  v97 = v161[0];
  v98 = (void *)v161[1];
  v161[0] = v92;
  v161[1] = v91;
  swift_bridgeObjectRetain(v91);
  v99._countAndFlagsBits = v97;
  v99._object = v98;
  String.append(_:)(v99);
  swift_bridgeObjectRelease(v91);
  swift_bridgeObjectRelease(v98);
  v101 = v161[0];
  v100 = v161[1];
  strcpy((char *)v161, "stereoRole=");
  HIDWORD(v161[1]) = -352321536;
  v102 = sub_1000488AC(*(_DWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoRole));
  v157 = (id)String.init(cString:)(v102);
  v158 = v103;
  v104._countAndFlagsBits = String.init<A>(reflecting:)(&v157, &type metadata for String);
  v105 = v104._object;
  String.append(_:)(v104);
  swift_bridgeObjectRelease(v105);
  v106._countAndFlagsBits = 32;
  v106._object = (void *)0xE100000000000000;
  String.append(_:)(v106);
  v107 = v161[0];
  v108 = (void *)v161[1];
  v161[0] = v101;
  v161[1] = v100;
  swift_bridgeObjectRetain(v100);
  v109._countAndFlagsBits = v107;
  v109._object = v108;
  String.append(_:)(v109);
  swift_bridgeObjectRelease(v100);
  swift_bridgeObjectRelease(v108);
  v111 = v161[0];
  v110 = v161[1];
  v161[0] = 0;
  v161[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease(v161[1]);
  v161[0] = 0xD000000000000017;
  v161[1] = 0x80000001000A0760;
  LOBYTE(v157) = *(_BYTE *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoCounterpartColor);
  v112._countAndFlagsBits = String.init<A>(reflecting:)(&v157, &type metadata for UInt8);
  v113 = v112._object;
  String.append(_:)(v112);
  swift_bridgeObjectRelease(v113);
  v114._countAndFlagsBits = 32;
  v114._object = (void *)0xE100000000000000;
  String.append(_:)(v114);
  v115 = v161[0];
  v116 = (void *)v161[1];
  v161[0] = v111;
  v161[1] = v110;
  swift_bridgeObjectRetain(v110);
  v117._countAndFlagsBits = v115;
  v117._object = v116;
  String.append(_:)(v117);
  swift_bridgeObjectRelease(v110);
  swift_bridgeObjectRelease(v116);
  v119 = v161[0];
  v118 = v161[1];
  strcpy((char *)v161, "deviceGUID=");
  HIDWORD(v161[1]) = -352321536;
  v120 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceGUID + 8);
  v157 = *(id *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceGUID);
  v158 = v120;
  swift_bridgeObjectRetain(v120);
  v121._countAndFlagsBits = String.init<A>(reflecting:)(&v157, &type metadata for String);
  v122 = v121._object;
  String.append(_:)(v121);
  swift_bridgeObjectRelease(v122);
  v123._countAndFlagsBits = 32;
  v123._object = (void *)0xE100000000000000;
  String.append(_:)(v123);
  v124 = v161[0];
  v125 = (void *)v161[1];
  v161[0] = v119;
  v161[1] = v118;
  swift_bridgeObjectRetain(v118);
  v126._countAndFlagsBits = v124;
  v126._object = v125;
  String.append(_:)(v126);
  swift_bridgeObjectRelease(v118);
  swift_bridgeObjectRelease(v125);
  v128 = v161[0];
  v127 = v161[1];
  v161[0] = 0;
  v161[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease(v161[1]);
  v161[0] = v156;
  v161[1] = 0x80000001000A0780;
  v129 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceSerialNumber + 8);
  v157 = *(id *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceSerialNumber);
  v158 = v129;
  swift_bridgeObjectRetain(v129);
  v130._countAndFlagsBits = String.init<A>(reflecting:)(&v157, &type metadata for String);
  v131 = v130._object;
  String.append(_:)(v130);
  swift_bridgeObjectRelease(v131);
  v132._countAndFlagsBits = 32;
  v132._object = (void *)0xE100000000000000;
  String.append(_:)(v132);
  v133 = v161[0];
  v134 = (void *)v161[1];
  v161[0] = v128;
  v161[1] = v127;
  swift_bridgeObjectRetain(v127);
  v135._countAndFlagsBits = v133;
  v135._object = v134;
  String.append(_:)(v135);
  swift_bridgeObjectRelease(v127);
  swift_bridgeObjectRelease(v134);
  v137 = v161[0];
  v136 = v161[1];
  strcpy((char *)v161, "imageName=");
  BYTE3(v161[1]) = 0;
  HIDWORD(v161[1]) = -369098752;
  v138 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_imageName + 8);
  v157 = *(id *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_imageName);
  v158 = v138;
  swift_bridgeObjectRetain(v138);
  v139._countAndFlagsBits = String.init<A>(reflecting:)(&v157, &type metadata for String);
  v140 = v139._object;
  String.append(_:)(v139);
  swift_bridgeObjectRelease(v140);
  v141._countAndFlagsBits = 32;
  v141._object = (void *)0xE100000000000000;
  String.append(_:)(v141);
  v142 = v161[0];
  v143 = (void *)v161[1];
  v161[0] = v137;
  v161[1] = v136;
  swift_bridgeObjectRetain(v136);
  v144._countAndFlagsBits = v142;
  v144._object = v143;
  String.append(_:)(v144);
  swift_bridgeObjectRelease(v136);
  swift_bridgeObjectRelease(v143);
  v146 = v161[0];
  v145 = v161[1];
  v161[0] = 0;
  v161[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v161[1]);
  v161[0] = 0xD000000000000011;
  v161[1] = 0x80000001000A0740;
  LOBYTE(v157) = sub_1000431F0() & 1;
  v147._countAndFlagsBits = String.init<A>(reflecting:)(&v157, &type metadata for Bool);
  v148 = v147._object;
  String.append(_:)(v147);
  swift_bridgeObjectRelease(v148);
  v149._countAndFlagsBits = 32;
  v149._object = (void *)0xE100000000000000;
  String.append(_:)(v149);
  v150 = v161[0];
  v151 = (void *)v161[1];
  v161[0] = v146;
  v161[1] = v145;
  swift_bridgeObjectRetain(v145);
  v152._countAndFlagsBits = v150;
  v152._object = v151;
  String.append(_:)(v152);
  swift_bridgeObjectRelease(v145);
  swift_bridgeObjectRelease(v151);
  v153 = v161[1];
  swift_bridgeObjectRetain(v161[1]);
  v154._countAndFlagsBits = 62;
  v154._object = (void *)0xE100000000000000;
  String.append(_:)(v154);
  swift_bridgeObjectRelease(v153);
  return v161[0];
}

uint64_t sub_100048070()
{
  return sub_1000446AC();
}

const char *sub_100048090(int a1)
{
  const char *result;

  result = "Unknown";
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = "D22ish";
      break;
    case 2:
      result = "SEish";
      break;
    case 3:
      result = "J3XXish";
      break;
    case 4:
      result = "N112ish";
      break;
    case 5:
      result = "B520ish";
      break;
    case 6:
      result = "B620ish";
      break;
    case 7:
      result = "J255ish";
      break;
    default:
      result = "?";
      break;
  }
  return result;
}

const char *sub_100048130(int a1)
{
  const char *result;

  if (a1 > 299)
  {
    if (a1 <= 799)
    {
      if (a1 <= 519)
      {
        if (a1 <= 410)
        {
          if (a1 <= 399)
          {
            if (a1 == 300)
              return "BackupProgress";
            if (a1 == 310)
              return "SyncProgress";
          }
          else
          {
            switch(a1)
            {
              case 400:
                return "StopSetup";
              case 401:
                return "PINPair";
              case 410:
                return "MigrateStart";
            }
          }
        }
        else if (a1 > 430)
        {
          switch(a1)
          {
            case 431:
              return "eSimExternal2FAStop";
            case 500:
              return "SiriWelcome";
            case 510:
              return "SiriDialogA";
          }
        }
        else
        {
          switch(a1)
          {
            case 411:
              return "MigrateStop";
            case 420:
              return "FileTransferReady";
            case 430:
              return "eSimExternal2FAStart";
          }
        }
      }
      else if (a1 > 559)
      {
        if (a1 > 599)
        {
          switch(a1)
          {
            case 600:
              return "SiriSkipDemo";
            case 700:
              return "StopSetupLEDs";
            case 710:
              return "AudioPasscodeEnded";
          }
        }
        else
        {
          switch(a1)
          {
            case 560:
              return "SiriDialogCMusic";
            case 570:
              return "SiriDialogCNews";
            case 580:
              return "SiriDialogCWeather";
          }
        }
      }
      else if (a1 > 549)
      {
        switch(a1)
        {
          case 550:
            return "SiriDialogBWeather";
          case 555:
            return "SiriDialogBClock";
          case 558:
            return "SiriDialogBMusic";
        }
      }
      else
      {
        switch(a1)
        {
          case 520:
            return "SiriDialogBStart";
          case 530:
            return "SiriDialogBHome";
          case 540:
            return "SiriDialogBNews";
        }
      }
      return "?";
    }
    if (a1 > 999)
    {
      if (a1 <= 1099)
      {
        if (a1 == 1000)
          return "SecureIntentStart";
        if (a1 == 1001)
          return "SecureIntentFinish";
      }
      else
      {
        switch(a1)
        {
          case 1100:
            return "OneTimeCodeDetected";
          case 2000:
            return "DependentStart";
          case 2001:
            return "DependentEnd";
        }
      }
      return "?";
    }
    switch(a1)
    {
      case 900:
        result = "SU-No-SetupScanAttempt";
        break;
      case 901:
        result = "SU-No-SetupStatusUpdate";
        break;
      case 902:
        result = "SU-No-SetupWipeWifi";
        break;
      case 903:
        result = "SU-No-SetupCancelled";
        break;
      case 904:
        result = "SU-No-SetupObliterate";
        break;
      case 905:
        result = "SU-No-SetupCannotCancel";
        break;
      case 906:
        result = "SysDrop AirDrop Event";
        break;
      case 907:
        result = "SysDrop Sysdiagnose Event";
        break;
      case 908:
        result = "SysDrop Cancel Event";
        break;
      case 909:
        result = "File Transfer Progress Event";
        break;
      case 910:
        result = "File Transfer Completed Event";
        break;
      case 911:
        result = "iOSWiFiSetup";
        break;
      case 912:
        result = "HKPrimaryResidentSSIDFetchStart";
        break;
      default:
        switch(a1)
        {
          case 800:
            result = "AuthAccountsStart";
            break;
          case 803:
            result = "AuthAccountsiCloudProgress";
            break;
          case 804:
            result = "AuthAccountsStoreProgress";
            break;
          case 805:
            result = "AuthAccountsGameCenterProgress";
            break;
          default:
            return "?";
        }
        break;
    }
  }
  else if (a1 > 129)
  {
    if (a1 > 249)
    {
      switch(a1)
      {
        case 260:
          result = "TVLSStart";
          break;
        case 261:
        case 262:
        case 263:
        case 265:
        case 266:
        case 267:
        case 268:
        case 269:
        case 271:
        case 273:
        case 275:
          return "?";
        case 264:
          result = "TVLSFinish";
          break;
        case 270:
          result = "TVLSEstimateStart";
          break;
        case 272:
          result = "TVLSEstimateFinal";
          break;
        case 274:
          result = "TVLSEstimateFailed";
          break;
        case 276:
          result = "TVLSTryAgain";
          break;
        case 277:
          result = "TVLSToneBegan";
          break;
        case 278:
          result = "TVLCalStart";
          break;
        case 279:
          result = "TVLCalStep";
          break;
        case 280:
          result = "TVLCalFailed";
          break;
        case 281:
          result = "TVLCalTryAgain";
          break;
        case 282:
          result = "TVLCalFinal";
          break;
        default:
          if (a1 != 250)
            return "?";
          result = "ReportSuccess";
          break;
      }
    }
    else
    {
      if (a1 <= 219)
      {
        if (a1 <= 149)
        {
          if (a1 == 130)
            return "WiFiPoweredOff";
          if (a1 == 140)
            return "RecognizeVoice";
        }
        else
        {
          switch(a1)
          {
            case 150:
              return "SiriForEveryone";
            case 200:
              return "WiFiStart";
            case 210:
              return "ActivationStart";
          }
        }
        return "?";
      }
      switch(a1)
      {
        case 230:
          return "HomeKitStart";
        case 231:
        case 232:
        case 233:
        case 235:
        case 237:
        case 238:
        case 239:
          return "?";
        case 234:
          return "HomeKitSetupStart";
        case 236:
          return "CDPSetupStart";
        case 240:
          return "BuddyStarting";
        case 241:
          return "BuddyProgress";
        case 242:
          return "BuddyFinished";
        default:
          if (a1 == 220)
          {
            result = "iCloudStart";
          }
          else
          {
            if (a1 != 224)
              return "?";
            result = "AppleIDSetupStart";
          }
          break;
      }
    }
  }
  else
  {
    if (a1 <= 79)
    {
      if (a1 > 49)
      {
        if (a1 > 64)
        {
          if (a1 == 65)
            return "SecurityAPCLoopStart";
          if (a1 == 70)
            return "SecurityFinish";
        }
        else
        {
          if (a1 == 50)
            return "PreAuthFinish";
          if (a1 == 60)
            return "SecurityStart";
        }
      }
      else
      {
        if (a1 > 29)
        {
          switch(a1)
          {
            case 30:
              result = "Error";
              break;
            case 31:
              result = "SessionStarted";
              break;
            case 32:
              result = "SessionEnded";
              break;
            case 33:
              result = "SessionSecured";
              break;
            case 35:
              result = "ConnectStart";
              break;
            case 40:
              result = "PreAuthStart";
              break;
            default:
              return "?";
          }
          return result;
        }
        switch(a1)
        {
          case 0:
            return "Invalid";
          case 10:
            return "Start";
          case 20:
            return "Final";
        }
      }
      return "?";
    }
    if (a1 > 119)
    {
      switch(a1)
      {
        case 'x':
          return "CheckingiCloud";
        case 'z':
          return "CheckingAppleMusic";
        case '|':
          return "CheckingAccount";
      }
      return "?";
    }
    switch(a1)
    {
      case 'P':
        result = "BasicConfigStart";
        break;
      case 'Z':
        result = "BasicConfigFinish";
        break;
      case '\\':
        result = "StepStart";
        break;
      case '^':
        result = "StepFinish";
        break;
      case '_':
        result = "PreFinish";
        break;
        result = "SetupFinished";
        break;
      case 'a':
        result = "SetupResumed";
        break;
      case 'b':
        result = "SetupSuspend";
        break;
      case 'c':
        result = "SetupPeerSWUpdate";
        break;
      case 'd':
        result = "Finished";
        break;
      default:
        return "?";
    }
  }
  return result;
}

const char *sub_1000488AC(unsigned int a1)
{
  if (a1 > 3)
    return "?";
  else
    return off_1000C37A8[a1];
}

id sub_1000488D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  NSString v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v12;

  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v12 = 0;
  v7 = objc_msgSend(v3, "initWithPattern:options:error:", v6, a3, &v12);

  v8 = v12;
  if (v7)
  {
    v9 = v12;
  }
  else
  {
    v10 = v12;
    _convertNSErrorToError(_:)(v8);

    swift_willThrow();
  }
  return v7;
}

uint64_t sub_1000489A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unsigned __int16 v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v18 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v7 = sub_100048E6C();
  swift_bridgeObjectRetain(a4);
  v8 = String.init<A>(_:)(&v18, &type metadata for Substring, &protocol witness table for Substring, v7);
  v10 = v8;
  v11 = v9;
  if ((v9 & 0x1000000000000000) == 0)
  {
    if ((v9 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v13 = HIBYTE(v11) & 0xF;
    v18 = v10;
    v19 = v11 & 0xFFFFFFFFFFFFFFLL;
    v12 = (unsigned __int8 *)&v18;
    goto LABEL_7;
  }
  v10 = sub_10008F384(v8, v9);
  v15 = v14;
  swift_bridgeObjectRelease(v11);
  v11 = v15;
  if ((v15 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v10 & 0x1000000000000000) != 0)
  {
    v12 = (unsigned __int8 *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v13 = v10 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v12 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v10, v11);
  }
LABEL_7:
  v16 = (unsigned __int16)sub_100048A94(v12, v13, a5);
  swift_bridgeObjectRelease(v11);
  return v16 & 0x1FF;
}

unsigned __int8 *sub_100048A94(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned int v8;
  unsigned __int8 *v9;
  unsigned int v10;
  char v11;
  unsigned __int8 v12;
  int v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  unsigned __int8 v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned int v24;
  unsigned int v25;
  char v26;

  v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      v14 = a2 - 1;
      if (a2 != 1)
      {
        v15 = a3 + 87;
        if (a3 > 10)
        {
          v16 = a3 + 55;
        }
        else
        {
          v15 = 97;
          v16 = 65;
        }
        if (a3 <= 10)
          v17 = a3 + 48;
        else
          v17 = 58;
        if (result)
        {
          LOBYTE(v8) = 0;
          v18 = result + 1;
          do
          {
            v19 = *v18;
            if (v19 < 0x30 || v19 >= v17)
            {
              if (v19 < 0x41 || v19 >= v16)
              {
                v12 = 0;
                v13 = 1;
                if (v19 < 0x61 || v19 >= v15)
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                v20 = -87;
              }
              else
              {
                v20 = -55;
              }
            }
            else
            {
              v20 = -48;
            }
            if (((v8 * (unsigned __int16)a3) & 0xFF00) != 0)
              goto LABEL_72;
            v8 = (v8 * a3) + (v19 + v20);
            if (((v8 >> 8) & 1) != 0)
              goto LABEL_72;
            ++v18;
            --v14;
          }
          while (v14);
LABEL_48:
          v13 = 0;
          v12 = v8;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
LABEL_72:
      v12 = 0;
      v13 = 1;
      return (unsigned __int8 *)(v12 | (v13 << 8));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        v21 = a3 + 87;
        if (a3 > 10)
        {
          v22 = a3 + 55;
        }
        else
        {
          v21 = 97;
          v22 = 65;
        }
        if (a3 <= 10)
          v23 = a3 + 48;
        else
          v23 = 58;
        if (result)
        {
          LOBYTE(v24) = 0;
          do
          {
            v25 = *result;
            if (v25 < 0x30 || v25 >= v23)
            {
              if (v25 < 0x41 || v25 >= v22)
              {
                v12 = 0;
                v13 = 1;
                if (v25 < 0x61 || v25 >= v21)
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                v26 = -87;
              }
              else
              {
                v26 = -55;
              }
            }
            else
            {
              v26 = -48;
            }
            if (((v24 * (unsigned __int16)a3) & 0xFF00) != 0)
              goto LABEL_72;
            v24 = (v24 * a3) + (v25 + v26);
            if (((v24 >> 8) & 1) != 0)
              goto LABEL_72;
            ++result;
            --a2;
          }
          while (a2);
          v13 = 0;
          v12 = v24;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      v4 = a2 - 1;
      if (a2 != 1)
      {
        v5 = a3 + 87;
        if (a3 > 10)
        {
          v6 = a3 + 55;
        }
        else
        {
          v5 = 97;
          v6 = 65;
        }
        if (a3 <= 10)
          v7 = a3 + 48;
        else
          v7 = 58;
        if (result)
        {
          LOBYTE(v8) = 0;
          v9 = result + 1;
          while (1)
          {
            v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                v12 = 0;
                v13 = 1;
                if (v10 < 0x61 || v10 >= v5)
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                v11 = -87;
              }
              else
              {
                v11 = -55;
              }
            }
            else
            {
              v11 = -48;
            }
            if (((v8 * (unsigned __int16)a3) & 0xFF00) != 0)
              goto LABEL_72;
            v8 = (v8 * a3) - (v10 + v11);
            if ((v8 & 0xFFFFFF00) != 0)
              goto LABEL_72;
            ++v9;
            if (!--v4)
              goto LABEL_48;
          }
        }
LABEL_71:
        v12 = 0;
        v13 = 0;
        return (unsigned __int8 *)(v12 | (v13 << 8));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100048D3C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t result;
  int v13;
  _QWORD v14[2];
  char v15;

  if ((a4 & 0x1000000000000000) != 0)
  {
    v13 = 0;
    goto LABEL_8;
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    v11 = v14;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    v11 = (_QWORD *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    v11 = (_QWORD *)_StringObject.sharedUTF8.getter(a3, a4);
  }
  result = sub_100048EB0((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    v15 = BYTE1(result) & 1;
    v13 = result | ((BYTE1(result) & 1) << 8);
LABEL_8:
    LOBYTE(v14[0]) = (a4 & 0x1000000000000000) != 0;
    return v13 | (LOBYTE(v14[0]) << 16);
  }
  return result;
}

uint64_t sub_100048E10(unsigned int a1)
{
  if (a1 > 0x10)
    return 16;
  else
    return byte_1000998FC[a1];
}

unint64_t sub_100048E30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D6CF8;
  if (!qword_1000D6CF8)
  {
    v1 = objc_opt_self(NSString);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1000D6CF8);
  }
  return result;
}

unint64_t sub_100048E6C()
{
  unint64_t result;

  result = qword_1000D6D00;
  if (!qword_1000D6D00)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Substring, &type metadata for Substring);
    atomic_store(result, (unint64_t *)&qword_1000D6D00);
  }
  return result;
}

uint64_t sub_100048EB0(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unsigned __int8 *v19;
  int v20;
  unsigned __int8 v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned int v24;
  unsigned __int8 *v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  unsigned __int8 v29;
  int v30;
  unsigned __int8 v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  unsigned __int8 *v34;
  uint64_t v35;
  unsigned int v36;
  char v37;
  unsigned __int8 v38;
  unsigned __int8 v39;
  unsigned __int8 v40;
  unsigned int v41;
  unsigned int v42;
  char v43;

  v10 = a2;
  v11 = result;
  v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0)
    LOBYTE(v12) = 1;
  v13 = 4 << v12;
  v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    result = sub_10003F44C(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      v15 = a2 >> 16;
      if (v14 != v13)
        goto LABEL_6;
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0)
    v16 = HIBYTE(a5) & 0xF;
  if (v16 < a2 >> 16)
    goto LABEL_104;
  result = String.UTF8View._foreignDistance(from:to:)(15, a2, a4, a5);
  v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    result = sub_10003F44C(v10, a4, a5);
    v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    result = sub_10003F44C(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0)
      goto LABEL_8;
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0)
    v17 = a4 & 0xFFFFFFFFFFFFLL;
  if (v17 < v10 >> 16)
    goto LABEL_100;
  if (v17 < a3 >> 16)
  {
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  result = String.UTF8View._foreignDistance(from:to:)(v10, a3, a4, a5);
LABEL_21:
  v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_99;
  }
  if (v18 < v15)
  {
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11)
    v19 = 0;
  v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        v31 = a6 + 87;
        if (a6 > 10)
        {
          v32 = a6 + 55;
        }
        else
        {
          v31 = 97;
          v32 = 65;
        }
        if (a6 <= 10)
          v33 = a6 + 48;
        else
          v33 = 58;
        if (v19)
        {
          LOBYTE(v24) = 0;
          v34 = v19 + 1;
          v35 = result - 1;
          do
          {
            v36 = *v34;
            if (v36 < 0x30 || v36 >= v33)
            {
              if (v36 < 0x41 || v36 >= v32)
              {
                v29 = 0;
                v30 = 1;
                if (v36 < 0x61 || v36 >= v31)
                  return v29 | (v30 << 8);
                v37 = -87;
              }
              else
              {
                v37 = -55;
              }
            }
            else
            {
              v37 = -48;
            }
            if (((v24 * (unsigned __int16)a6) & 0xFF00) != 0)
              goto LABEL_96;
            v24 = (v24 * a6) + (v36 + v37);
            if (((v24 >> 8) & 1) != 0)
              goto LABEL_96;
            ++v34;
            --v35;
          }
          while (v35);
LABEL_72:
          v30 = 0;
          v29 = v24;
          return v29 | (v30 << 8);
        }
        goto LABEL_95;
      }
LABEL_96:
      v29 = 0;
      v30 = 1;
      return v29 | (v30 << 8);
    }
    goto LABEL_103;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      v38 = a6 + 87;
      if (a6 > 10)
      {
        v39 = a6 + 55;
      }
      else
      {
        v38 = 97;
        v39 = 65;
      }
      if (a6 <= 10)
        v40 = a6 + 48;
      else
        v40 = 58;
      if (v19)
      {
        LOBYTE(v41) = 0;
        do
        {
          v42 = *v19;
          if (v42 < 0x30 || v42 >= v40)
          {
            if (v42 < 0x41 || v42 >= v39)
            {
              v29 = 0;
              v30 = 1;
              if (v42 < 0x61 || v42 >= v38)
                return v29 | (v30 << 8);
              v43 = -87;
            }
            else
            {
              v43 = -55;
            }
          }
          else
          {
            v43 = -48;
          }
          if (((v41 * (unsigned __int16)a6) & 0xFF00) != 0)
            goto LABEL_96;
          v41 = (v41 * a6) + (v42 + v43);
          if (((v41 >> 8) & 1) != 0)
            goto LABEL_96;
          ++v19;
          --result;
        }
        while (result);
        v30 = 0;
        v29 = v41;
        return v29 | (v30 << 8);
      }
      goto LABEL_95;
    }
    goto LABEL_96;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      v21 = a6 + 87;
      if (a6 > 10)
      {
        v22 = a6 + 55;
      }
      else
      {
        v21 = 97;
        v22 = 65;
      }
      if (a6 <= 10)
        v23 = a6 + 48;
      else
        v23 = 58;
      if (v19)
      {
        LOBYTE(v24) = 0;
        v25 = v19 + 1;
        v26 = result - 1;
        while (1)
        {
          v27 = *v25;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              v29 = 0;
              v30 = 1;
              if (v27 < 0x61 || v27 >= v21)
                return v29 | (v30 << 8);
              v28 = -87;
            }
            else
            {
              v28 = -55;
            }
          }
          else
          {
            v28 = -48;
          }
          if (((v24 * (unsigned __int16)a6) & 0xFF00) != 0)
            goto LABEL_96;
          v24 = (v24 * a6) - (v27 + v28);
          if ((v24 & 0xFFFFFF00) != 0)
            goto LABEL_96;
          ++v25;
          if (!--v26)
            goto LABEL_72;
        }
      }
LABEL_95:
      v29 = 0;
      v30 = 0;
      return v29 | (v30 << 8);
    }
    goto LABEL_96;
  }
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
  return result;
}

uint64_t sub_100049304(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AdjustedImage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for SFPairingFlags()
{
  return &type metadata for SFPairingFlags;
}

void *sub_100049358()
{
  void *result;

  result = sub_100049374();
  qword_1000DB7D8 = (uint64_t)result;
  return result;
}

void *sub_100049374()
{
  char isUniquelyReferenced_nonNull_native;
  char v1;
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10004C12C(6899277, 0xE300000000000000, 1u, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease(0x8000000000000000);
  v1 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10004C12C(0x656D75736552, 0xE600000000000000, 2u, v1);
  swift_bridgeObjectRelease(0x8000000000000000);
  v2 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10004C12C(0x6D6574737953, 0xE600000000000000, 4u, v2);
  swift_bridgeObjectRelease(0x8000000000000000);
  v3 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10004C12C(0x6369766544726550, 0xE900000000000065, 8u, v3);
  swift_bridgeObjectRelease(0x8000000000000000);
  v4 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10004C12C(0x6E6569736E617254, 0xE900000000000074, 0x10u, v4);
  swift_bridgeObjectRelease(0x8000000000000000);
  v5 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10004C12C(1868983881, 0xE400000000000000, 0x20u, v5);
  swift_bridgeObjectRelease(0x8000000000000000);
  v6 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10004C12C(0x7373655372657355, 0xEB000000006E6F69, 0x40u, v6);
  swift_bridgeObjectRelease(0x8000000000000000);
  v7 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10004C12C(0x556E49746C697542, 0xE900000000000049, 0x80u, v7);
  swift_bridgeObjectRelease(0x8000000000000000);
  v8 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10004C12C(0x6C6175736956, 0xE600000000000000, 0x100u, v8);
  swift_bridgeObjectRelease(0x8000000000000000);
  v9 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10004C12C(4408910, 0xE300000000000000, 0x200u, v9);
  swift_bridgeObjectRelease(0x8000000000000000);
  v10 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10004C12C(1769105747, 0xE400000000000000, 0x400u, v10);
  swift_bridgeObjectRelease(0x8000000000000000);
  v11 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10004C12C(0x6F69647541, 0xE500000000000000, 0x800u, v11);
  swift_bridgeObjectRelease(0x8000000000000000);
  v12 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10004C12C(0x4449656C707041, 0xE700000000000000, 0x1000u, v12);
  swift_bridgeObjectRelease(0x8000000000000000);
  v13 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10004C12C(0x496874754169464DLL, 0xE900000000000043, 0x2000u, v13);
  swift_bridgeObjectRelease(0x8000000000000000);
  v14 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10004C12C(0x7774666F5369464DLL, 0xEF74726543657261, 0x4000u, v14);
  swift_bridgeObjectRelease(0x8000000000000000);
  v15 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10004C12C(0x6E656B6F5469464DLL, 0xE800000000000000, 0x8000u, v15);
  swift_bridgeObjectRelease(0x8000000000000000);
  v16 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10004C12C(0x636572726F636E49, 0xE900000000000074, 0x10000u, v16);
  swift_bridgeObjectRelease(0x8000000000000000);
  v17 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10004C12C(0x656C74746F726854, 0xE800000000000000, 0x20000u, v17);
  swift_bridgeObjectRelease(0x8000000000000000);
  v18 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10004C12C(0x686374614DLL, 0xE500000000000000, 0x40000u, v18);
  swift_bridgeObjectRelease(0x8000000000000000);
  v19 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10004C12C(0x7465736552, 0xE500000000000000, 0x80000u, v19);
  swift_bridgeObjectRelease(0x8000000000000000);
  v20 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10004C12C(0xD000000000000012, 0x80000001000A0CF0, 0x100000u, v20);
  swift_bridgeObjectRelease(0x8000000000000000);
  v21 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10004C12C(0xD000000000000013, 0x80000001000A0D10, 0x200000u, v21);
  swift_bridgeObjectRelease(0x8000000000000000);
  v22 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10004C12C(0x74694B656D6F48, 0xE700000000000000, 0x400000u, v22);
  swift_bridgeObjectRelease(0x8000000000000000);
  v23 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10004C12C(0x6552657571696E55, 0xEC000000656D7573, 0x800000u, v23);
  swift_bridgeObjectRelease(0x8000000000000000);
  v24 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10004C12C(0x74655374696C7053, 0xEA00000000007075, 0x1000000u, v24);
  swift_bridgeObjectRelease(0x8000000000000000);
  v25 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10004C12C(0xD000000000000010, 0x80000001000A0D30, 0x2000000u, v25);
  swift_bridgeObjectRelease(0x8000000000000000);
  v26 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10004C12C(0x5574694B656D6F48, 0xEB00000000726573, 0x4000000u, v26);
  swift_bridgeObjectRelease(0x8000000000000000);
  v27 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10004C12C(0x615063696C627550, 0xEE0064726F777373, 0x8000000u, v27);
  swift_bridgeObjectRelease(0x8000000000000000);
  v28 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10004C12C(0x566874754169464DLL, 0xE900000000000033, 0x10000000u, v28);
  swift_bridgeObjectRelease(0x8000000000000000);
  v29 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10004C12C(0xD000000000000012, 0x80000001000A0D50, 0x20000000u, v29);
  swift_bridgeObjectRelease(0x8000000000000000);
  v30 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_10004C12C(0x69687372656E774FLL, 0xEE00666F6F725070, 0x40000000u, v30);
  swift_bridgeObjectRelease(0x8000000000000000);
  return &_swiftEmptyDictionarySingleton;
}

uint64_t sub_100049B14(int a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  Swift::UInt32 v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  _QWORD *v26;
  Swift::String v27;
  void *object;
  Swift::String v29;
  Swift::String v30;
  void *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _BYTE v35[24];

  if (qword_1000D5560 != -1)
LABEL_36:
    swift_once(&qword_1000D5560, sub_100049358);
  swift_beginAccess(&qword_1000DB7D8, v35, 0, 0);
  v2 = qword_1000DB7D8;
  v3 = qword_1000DB7D8 + 64;
  v4 = 1 << *(_BYTE *)(qword_1000DB7D8 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(qword_1000DB7D8 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain(qword_1000DB7D8);
  v9 = 0;
  v10 = _swiftEmptyArrayStorage;
  while (v6)
  {
    v11 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v12 = v11 | (v9 << 6);
LABEL_26:
    v16 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v12);
    if ((v16 & ~a1) == 0)
    {
      swift_beginAccess(&qword_1000DB7D8, &v33, 32, 0);
      v17 = qword_1000DB7D8;
      if (*(_QWORD *)(qword_1000DB7D8 + 16) && (v18 = sub_10004A8D8(v16), (v19 & 1) != 0))
      {
        v20 = (uint64_t *)(*(_QWORD *)(v17 + 56) + 16 * v18);
        v21 = v20[1];
        v32 = *v20;
        swift_endAccess(&v33);
        swift_bridgeObjectRetain(v21);
        result = swift_isUniquelyReferenced_nonNull_native(v10);
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_10004A574(0, v10[2] + 1, 1, v10);
          v10 = (_QWORD *)result;
        }
        v22 = v10;
        v23 = v10[2];
        v24 = v22;
        v25 = v22[3];
        if (v23 >= v25 >> 1)
        {
          result = (uint64_t)sub_10004A574((_QWORD *)(v25 > 1), v23 + 1, 1, v24);
          v24 = (_QWORD *)result;
        }
        v24[2] = v23 + 1;
        v26 = &v24[2 * v23];
        v10 = v24;
        v26[4] = v32;
        v26[5] = v21;
      }
      else
      {
        result = swift_endAccess(&v33);
      }
    }
  }
  v13 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v13 >= v7)
    goto LABEL_34;
  v14 = *(_QWORD *)(v3 + 8 * v13);
  ++v9;
  if (v14)
    goto LABEL_25;
  v9 = v13 + 1;
  if (v13 + 1 >= v7)
    goto LABEL_34;
  v14 = *(_QWORD *)(v3 + 8 * v9);
  if (v14)
    goto LABEL_25;
  v9 = v13 + 2;
  if (v13 + 2 >= v7)
    goto LABEL_34;
  v14 = *(_QWORD *)(v3 + 8 * v9);
  if (v14)
    goto LABEL_25;
  v9 = v13 + 3;
  if (v13 + 3 >= v7)
    goto LABEL_34;
  v14 = *(_QWORD *)(v3 + 8 * v9);
  if (v14)
    goto LABEL_25;
  v9 = v13 + 4;
  if (v13 + 4 >= v7)
    goto LABEL_34;
  v14 = *(_QWORD *)(v3 + 8 * v9);
  if (v14)
  {
LABEL_25:
    v6 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v9 << 6);
    goto LABEL_26;
  }
  v15 = v13 + 5;
  if (v15 >= v7)
  {
LABEL_34:
    swift_release(v2);
    v33 = 0;
    v34 = 0xE000000000000000;
    _StringGuts.grow(_:)(31);
    swift_bridgeObjectRelease(v34);
    v33 = 0xD000000000000019;
    v34 = 0x80000001000A0C90;
    v27._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt32, &protocol witness table for UInt32);
    object = v27._object;
    String.append(_:)(v27);
    swift_bridgeObjectRelease(object);
    v29._countAndFlagsBits = 8233;
    v29._object = (void *)0xE200000000000000;
    String.append(_:)(v29);
    v30._countAndFlagsBits = Array.description.getter(v10, &type metadata for String);
    v31 = v30._object;
    String.append(_:)(v30);
    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v31);
    return v33;
  }
  v14 = *(_QWORD *)(v3 + 8 * v15);
  if (v14)
  {
    v9 = v15;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v9 >= v7)
      goto LABEL_34;
    v14 = *(_QWORD *)(v3 + 8 * v9);
    ++v15;
    if (v14)
      goto LABEL_25;
  }
  __break(1u);
  return result;
}

_DWORD *sub_100049E54@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_100049E60()
{
  int *v0;

  return sub_100049B14(*v0);
}

void sub_100049E68(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

_DWORD *sub_100049E70@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_DWORD *sub_100049E84@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_DWORD *sub_100049E98@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_100049EAC(_DWORD *a1, int *a2)
{
  _DWORD *v2;
  int v3;
  int v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_100049EDC@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  _DWORD *v2;
  int v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_DWORD *)a2 = v3;
  *(_BYTE *)(a2 + 4) = v3 == 0;
  return result;
}

int *sub_100049F08@<X0>(int *result@<X0>, uint64_t a2@<X8>)
{
  int *v2;
  int v3;
  int v4;
  int v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v5 == 0;
  return result;
}

_DWORD *sub_100049F2C(_DWORD *result)
{
  _DWORD *v1;

  *v1 |= *result;
  return result;
}

_DWORD *sub_100049F40(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= *result;
  return result;
}

_DWORD *sub_100049F54(_DWORD *result)
{
  _DWORD *v1;

  *v1 ^= *result;
  return result;
}

_DWORD *sub_100049F68@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_100049F7C(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_100049F90(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_100049FA4(_DWORD *a1)
{
  _DWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_100049FB8()
{
  _DWORD *v0;

  return *v0 == 0;
}

_DWORD *sub_100049FC8(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t sub_100049FDC@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  int v4;
  uint64_t result;

  v4 = sub_10004CE2C(a1);
  result = swift_bridgeObjectRelease(a1);
  *a2 = v4;
  return result;
}

unint64_t sub_10004A01C()
{
  unint64_t result;

  result = qword_1000D6D08;
  if (!qword_1000D6D08)
  {
    result = swift_getWitnessTable(&unk_10009996C, &type metadata for SFPairingFlags);
    atomic_store(result, (unint64_t *)&qword_1000D6D08);
  }
  return result;
}

unint64_t sub_10004A064()
{
  unint64_t result;

  result = qword_1000D6D10;
  if (!qword_1000D6D10)
  {
    result = swift_getWitnessTable(&unk_10009993C, &type metadata for SFPairingFlags);
    atomic_store(result, (unint64_t *)&qword_1000D6D10);
  }
  return result;
}

unint64_t sub_10004A0AC()
{
  unint64_t result;

  result = qword_1000D6D18;
  if (!qword_1000D6D18)
  {
    result = swift_getWitnessTable(&unk_100099994, &type metadata for SFPairingFlags);
    atomic_store(result, (unint64_t *)&qword_1000D6D18);
  }
  return result;
}

unint64_t sub_10004A0F4()
{
  unint64_t result;

  result = qword_1000D6D20;
  if (!qword_1000D6D20)
  {
    result = swift_getWitnessTable(&unk_1000999CC, &type metadata for SFPairingFlags);
    atomic_store(result, (unint64_t *)&qword_1000D6D20);
  }
  return result;
}

uint64_t sub_10004A138(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  size_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_29:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division by zero", 16, 2, "Swift/IntegerTypes.swift", 24, 2, 14377, 0);
LABEL_31:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = sub_10000D604(&qword_1000D6D38);
  v11 = *(_QWORD *)(type metadata accessor for URLQueryItem(0) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (_QWORD *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  v16 = j__malloc_size(v15);
  if (!v12)
    goto LABEL_29;
  if (v16 - v14 == 0x8000000000000000 && v12 == -1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division results in an overflow", 31, 2, "Swift/IntegerTypes.swift", 24, 2, 14384, 0);
    goto LABEL_31;
  }
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(v16 - v14) / v12);
LABEL_19:
  v18 = type metadata accessor for URLQueryItem(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v15 + v20;
  if ((a1 & 1) != 0)
  {
    v22 = a4 + v20;
    if ((unint64_t)v15 < a4 || v21 >= v22 + *(_QWORD *)(v19 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v15 + v20, v22, v8, v18);
    }
    else if (v15 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v15 + v20);
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_10004CD14(0, v8, v21, a4);
  }
  swift_bridgeObjectRelease(a4);
  return (uint64_t)v15;
}

_QWORD *sub_10004A340(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10004A368(a1, a2, a3, a4, &qword_1000D7CD0, (void (*)(_QWORD, int64_t, _QWORD *, _QWORD *))sub_10004CE9C);
}

_QWORD *sub_10004A354(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10004A368(a1, a2, a3, a4, &qword_1000D6168, (void (*)(_QWORD, int64_t, _QWORD *, _QWORD *))sub_10004CF8C);
}

_QWORD *sub_10004A368(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, void (*a6)(_QWORD, int64_t, _QWORD *, _QWORD *))
{
  char v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      v13 = sub_10000D604(a5);
      v14 = (_QWORD *)swift_allocObject(v13, 32 * v12 + 32, 7);
      v15 = j__malloc_size(v14);
      v16 = v15 - 32;
      if (v15 < 32)
        v16 = v15 - 1;
      v14[2] = v11;
      v14[3] = 2 * (v16 >> 5);
      v17 = v14 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v14 = _swiftEmptyArrayStorage;
      v17 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v14 != a4 || v17 >= &a4[4 * v11 + 4])
          memmove(v17, a4 + 4, 32 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    a6(0, v11, v17, a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v14;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10004A47C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10000D604(&qword_1000D6D50);
      v11 = (_QWORD *)swift_allocObject(v10, v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * v12 - 64;
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= (_QWORD *)((char *)a4 + v8 + 32))
          memmove(v13, a4 + 4, v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_10004D094(0, v8, (char *)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10004A574(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10000D604(&qword_1000D6D28);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10004D178(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10004A680(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10000D604((uint64_t *)&unk_1000D7CE0);
      v11 = (_QWORD *)swift_allocObject(v10, 32 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 1;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 5);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v8 + 4])
          memmove(v14, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10004D268(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

unint64_t sub_10004A78C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_10004A9BC(a1, v4);
}

unint64_t sub_10004A7C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  String.hash(into:)(v7, a1, a2);
  v5 = Hasher._finalize()();
  return sub_10004AA80(a1, a2, v5);
}

unint64_t sub_10004A824(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  _QWORD v9[9];

  v3 = *(_QWORD *)(v1 + 40);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v6 = v5;
  Hasher.init(_seed:)(v9, v3);
  String.hash(into:)(v9, v4, v6);
  v7 = Hasher._finalize()();
  swift_bridgeObjectRelease(v6);
  return sub_10004AB60(a1, v7);
}

unint64_t sub_10004A8A4(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = static Hasher._hash(seed:bytes:count:)(*(_QWORD *)(v1 + 40), a1, 1);
  return sub_10004ACD4(a1, v3);
}

unint64_t sub_10004A8D8(Swift::UInt32 a1)
{
  uint64_t v1;
  Swift::Int v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(v1 + 40));
  Hasher._combine(_:)(a1);
  v3 = Hasher._finalize()();
  return sub_10004AD74(a1, v3);
}

unint64_t sub_10004A930(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  _QWORD v9[9];

  v3 = *(_QWORD *)(v1 + 40);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v6 = v5;
  Hasher.init(_seed:)(v9, v3);
  String.hash(into:)(v9, v4, v6);
  v7 = Hasher._finalize()();
  swift_bridgeObjectRelease(v6);
  return sub_10004AB60(a1, v7);
}

unint64_t sub_10004A9BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_100012DD0(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = static AnyHashable.== infix(_:_:)(v9, a1);
      sub_10000DAE8((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_10004AA80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = v10[1];
    v12 = *v10 == a1 && v11 == a2;
    if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
    {
      v13 = ~v5;
      do
      {
        v6 = (v6 + 1) & v13;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v14 = (_QWORD *)(v9 + 16 * v6);
        v15 = v14[1];
        v16 = *v14 == a1 && v15 == a2;
      }
      while (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_10004AB60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v7 == v10 && v9 == v11)
    {
LABEL_16:
      swift_bridgeObjectRelease_n(v9, 2);
      return v5;
    }
    v13 = v11;
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v13);
    if ((v14 & 1) == 0)
    {
      v15 = ~v4;
      v5 = (v5 + 1) & v15;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
          v9 = v17;
          v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
          if (v16 == v18 && v9 == v19)
            break;
          v21 = v19;
          v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v9, v18, v19, 0);
          swift_bridgeObjectRelease(v9);
          swift_bridgeObjectRelease(v21);
          if ((v22 & 1) == 0)
          {
            v5 = (v5 + 1) & v15;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_10004ACD4(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_10004AD74(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1)
          break;
      }
    }
  }
  return result;
}

Swift::Int sub_10004AE10(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  Swift::Int result;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  int64_t v42;
  uint64_t v43;
  char v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10000D604(&qword_1000D59A0);
  v44 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_44;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v43 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v41 = v3;
  v42 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain(v5);
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_25;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return result;
    }
    if (v22 >= v42)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v43 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v42)
        goto LABEL_37;
      v24 = *(_QWORD *)(v43 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v42)
        {
LABEL_37:
          swift_release(v5);
          v3 = v41;
          if ((v44 & 1) == 0)
            goto LABEL_44;
          goto LABEL_40;
        }
        v24 = *(_QWORD *)(v43 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_46;
            if (v14 >= v42)
              goto LABEL_37;
            v24 = *(_QWORD *)(v43 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_24;
          }
        }
        v14 = v25;
      }
    }
LABEL_24:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_25:
    v26 = *(_QWORD *)(v5 + 48) + 40 * v21;
    if ((v44 & 1) != 0)
    {
      v27 = *(_OWORD *)v26;
      v28 = *(_OWORD *)(v26 + 16);
      v47 = *(_QWORD *)(v26 + 32);
      v45 = v27;
      v46 = v28;
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v21);
      v30 = *v29;
      v31 = v29[1];
    }
    else
    {
      sub_100012DD0(v26, (uint64_t)&v45);
      v32 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v21);
      v30 = *v32;
      v31 = v32[1];
      swift_bridgeObjectRetain(v31);
    }
    result = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v8 + 40));
    v33 = -1 << *(_BYTE *)(v8 + 32);
    v34 = result & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v12 + 8 * (v34 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v12 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v12 + 8 * v35);
      }
      while (v39 == -1);
      v15 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = *(_QWORD *)(v8 + 48) + 40 * v15;
    v17 = v45;
    v18 = v46;
    *(_QWORD *)(v16 + 32) = v47;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 56) + 16 * v15);
    *v19 = v30;
    v19[1] = v31;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v41;
  v23 = (_QWORD *)(v5 + 64);
  if ((v44 & 1) == 0)
    goto LABEL_44;
LABEL_40:
  v40 = 1 << *(_BYTE *)(v5 + 32);
  if (v40 >= 64)
    bzero(v23, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v40;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_44:
  result = swift_release(v5);
  *v3 = v8;
  return result;
}

uint64_t sub_10004B13C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD v38[2];
  __int128 v39;
  __int128 v40;
  uint64_t v41;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10000D604(&qword_1000D57E0);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_44;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  result = swift_retain(v5);
  v15 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v15 << 6);
      goto LABEL_25;
    }
    v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return result;
    }
    if (v22 >= v12)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v37 + 8 * v22);
    ++v15;
    if (!v24)
    {
      v15 = v22 + 1;
      if (v22 + 1 >= v12)
        goto LABEL_37;
      v24 = *(_QWORD *)(v37 + 8 * v15);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v12)
        {
LABEL_37:
          swift_release(v5);
          if ((a2 & 1) == 0)
            goto LABEL_44;
          goto LABEL_40;
        }
        v24 = *(_QWORD *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v15 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_46;
            if (v15 >= v12)
              goto LABEL_37;
            v24 = *(_QWORD *)(v37 + 8 * v15);
            ++v25;
            if (v24)
              goto LABEL_24;
          }
        }
        v15 = v25;
      }
    }
LABEL_24:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v15 << 6);
LABEL_25:
    v26 = *(_QWORD *)(v5 + 48) + 40 * v21;
    if ((a2 & 1) != 0)
    {
      v27 = *(_OWORD *)v26;
      v28 = *(_OWORD *)(v26 + 16);
      v41 = *(_QWORD *)(v26 + 32);
      v39 = v27;
      v40 = v28;
      sub_10000DAD8((_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v21), v38);
    }
    else
    {
      sub_100012DD0(v26, (uint64_t)&v39);
      sub_10000DB98(*(_QWORD *)(v5 + 56) + 32 * v21, (uint64_t)v38);
    }
    result = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v8 + 40));
    v29 = -1 << *(_BYTE *)(v8 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v13 + 8 * (v30 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v13 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v13 + 8 * v31);
      }
      while (v35 == -1);
      v16 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    v17 = *(_QWORD *)(v8 + 48) + 40 * v16;
    v18 = v39;
    v19 = v40;
    *(_QWORD *)(v17 + 32) = v41;
    *(_OWORD *)v17 = v18;
    *(_OWORD *)(v17 + 16) = v19;
    result = (uint64_t)sub_10000DAD8(v38, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v16));
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v23 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_44;
LABEL_40:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_44:
  result = swift_release(v5);
  *v3 = v8;
  return result;
}

void sub_10004B450(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  _OWORD *v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  Swift::Int v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  uint64_t v42;
  char v43;
  _QWORD v44[9];
  __int128 v45;
  __int128 v46;
  __int128 v47;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10000D604(&qword_1000D5860);
  v43 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_44;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v42 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v40 = v3;
  v41 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v19 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_25;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return;
    }
    if (v21 >= v41)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v42 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v41)
        goto LABEL_37;
      v23 = *(_QWORD *)(v42 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v41)
        {
LABEL_37:
          swift_release(v5);
          v3 = v40;
          if ((v43 & 1) == 0)
            goto LABEL_44;
          goto LABEL_40;
        }
        v23 = *(_QWORD *)(v42 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_46;
            if (v13 >= v41)
              goto LABEL_37;
            v23 = *(_QWORD *)(v42 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_24;
          }
        }
        v13 = v24;
      }
    }
LABEL_24:
    v11 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_25:
    v25 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v27 = *v25;
    v26 = v25[1];
    v28 = *(_QWORD *)(v5 + 56) + 48 * v20;
    if ((v43 & 1) != 0)
    {
      v29 = *(_OWORD *)v28;
      v30 = *(_OWORD *)(v28 + 32);
      v46 = *(_OWORD *)(v28 + 16);
      v47 = v30;
      v45 = v29;
    }
    else
    {
      sub_1000147E8((char *)v28, (uint64_t)&v45);
      swift_bridgeObjectRetain(v26);
    }
    Hasher.init(_seed:)(v44, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v44, v27, v26);
    v31 = Hasher._finalize()();
    v32 = -1 << *(_BYTE *)(v8 + 32);
    v33 = v31 & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v12 + 8 * (v33 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v12 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v12 + 8 * v34);
      }
      while (v38 == -1);
      v14 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v14);
    *v15 = v27;
    v15[1] = v26;
    v16 = (_OWORD *)(*(_QWORD *)(v8 + 56) + 48 * v14);
    v17 = v45;
    v18 = v47;
    v16[1] = v46;
    v16[2] = v18;
    *v16 = v17;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v40;
  v22 = (_QWORD *)(v5 + 64);
  if ((v43 & 1) == 0)
    goto LABEL_44;
LABEL_40:
  v39 = 1 << *(_BYTE *)(v5 + 32);
  if (v39 >= 64)
    bzero(v22, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v39;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_44:
  swift_release(v5);
  *v3 = v8;
}

void sub_10004B784(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  Swift::UInt32 v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  char v37;
  uint64_t v38[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10000D604(&qword_1000D6D30);
  v37 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v34 = v3;
    v9 = 0;
    v36 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v10 + 63) >> 6;
    v13 = v7 + 64;
    while (1)
    {
      if (v12)
      {
        v20 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v21 = v20 | (v9 << 6);
      }
      else
      {
        v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return;
        }
        if (v22 >= v35)
          goto LABEL_36;
        v23 = v36[v22];
        ++v9;
        if (!v23)
        {
          v9 = v22 + 1;
          if (v22 + 1 >= v35)
            goto LABEL_36;
          v23 = v36[v9];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v35)
            {
LABEL_36:
              if ((v37 & 1) == 0)
              {
                swift_release(v5);
                v3 = v34;
                goto LABEL_43;
              }
              v33 = 1 << *(_BYTE *)(v5 + 32);
              if (v33 >= 64)
                bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v36 = -1 << v33;
              v3 = v34;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v23 = v36[v24];
            if (!v23)
            {
              while (1)
              {
                v9 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_45;
                if (v9 >= v35)
                  goto LABEL_36;
                v23 = v36[v9];
                ++v24;
                if (v23)
                  goto LABEL_33;
              }
            }
            v9 = v24;
          }
        }
LABEL_33:
        v12 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      v29 = *(_DWORD *)(*(_QWORD *)(v5 + 48) + 4 * v21);
      v30 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v21);
      v31 = *v30;
      v32 = v30[1];
      if ((v37 & 1) == 0)
        swift_bridgeObjectRetain(v32);
      Hasher.init(_seed:)(v38, *(_QWORD *)(v8 + 40));
      Hasher._combine(_:)(v29);
      v14 = Hasher._finalize()();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v13 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v13 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          v27 = v17 == v26;
          if (v17 == v26)
            v17 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v17);
        }
        while (v28 == -1);
        v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(_QWORD *)(v13 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_DWORD *)(*(_QWORD *)(v8 + 48) + 4 * v18) = v29;
      v19 = (_QWORD *)(*(_QWORD *)(v8 + 56) + 16 * v18);
      *v19 = v31;
      v19[1] = v32;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
LABEL_43:
  *v3 = v8;
}

uint64_t sub_10004BA68(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t *v32;
  _QWORD *v33;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10000D604(&qword_1000D6D48);
  result = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v32 = v3;
    v9 = 0;
    v33 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v9 << 6);
      }
      else
      {
        v21 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v21 >= v13)
          goto LABEL_36;
        v22 = v33[v21];
        ++v9;
        if (!v22)
        {
          v9 = v21 + 1;
          if (v21 + 1 >= v13)
            goto LABEL_36;
          v22 = v33[v9];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v13)
            {
LABEL_36:
              if ((a2 & 1) == 0)
              {
                result = swift_release(v5);
                v3 = v32;
                goto LABEL_43;
              }
              v31 = 1 << *(_BYTE *)(v5 + 32);
              if (v31 >= 64)
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v33 = -1 << v31;
              v3 = v32;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v22 = v33[v23];
            if (!v22)
            {
              while (1)
              {
                v9 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_45;
                if (v9 >= v13)
                  goto LABEL_36;
                v22 = v33[v9];
                ++v23;
                if (v22)
                  goto LABEL_33;
              }
            }
            v9 = v23;
          }
        }
LABEL_33:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v9 << 6);
      }
      v28 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v20);
      v29 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
      if ((a2 & 1) == 0)
        v30 = v29;
      result = static Hasher._hash(seed:bytes:count:)(*(_QWORD *)(v8 + 40), v28, 1);
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          v26 = v17 == v25;
          if (v17 == v25)
            v17 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v14 + 8 * v17);
        }
        while (v27 == -1);
        v18 = __clz(__rbit64(~v27)) + (v17 << 6);
      }
      *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_BYTE *)(*(_QWORD *)(v8 + 48) + v18) = v28;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v29;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release(v5);
LABEL_43:
  *v3 = v8;
  return result;
}

uint64_t sub_10004BD20(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  _OWORD v30[2];
  uint64_t v31;

  v5 = v4;
  v10 = *v4;
  v12 = sub_10004A78C(a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_10004C414();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = (_QWORD *)(v18[7] + 16 * v12);
      result = swift_bridgeObjectRelease(v19[1]);
      *v19 = a1;
      v19[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_10004AE10(v15, a4 & 1);
  v21 = sub_10004A78C(a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_16:
    result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for AnyHashable);
    __break(1u);
    return result;
  }
  v12 = v21;
  v18 = (_QWORD *)*v5;
  if ((v16 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  result = sub_100012DD0(a3, (uint64_t)v30);
  v18[(v12 >> 6) + 8] |= 1 << v12;
  v23 = v18[6] + 40 * v12;
  v24 = v31;
  v25 = v30[1];
  *(_OWORD *)v23 = v30[0];
  *(_OWORD *)(v23 + 16) = v25;
  *(_QWORD *)(v23 + 32) = v24;
  v26 = (_QWORD *)(v18[7] + 16 * v12);
  *v26 = a1;
  v26[1] = a2;
  v27 = v18[2];
  v28 = __OFADD__(v27, 1);
  v29 = v27 + 1;
  if (v28)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v18[2] = v29;
  return result;
}

_OWORD *sub_10004BE88(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;
  _BYTE v21[40];

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_10004A78C(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_QWORD *)(v16[7] + 32 * v10);
        sub_10000CDB8(v17);
        return sub_10000DAD8(a1, v17);
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_10004C5F4();
      goto LABEL_7;
    }
    sub_10004B13C(v13, a3 & 1);
    v19 = sub_10004A78C(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_100012DD0(a2, (uint64_t)v21);
      return sub_10004C39C(v10, (uint64_t)v21, a1, v16);
    }
  }
  result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for AnyHashable);
  __break(1u);
  return result;
}

uint64_t sub_10004BFC0(__int128 *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t result;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v5 = v4;
  v10 = *v4;
  v12 = sub_10004A7C0(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_10004C7D8();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_10004D358((uint64_t)a1, v18[7] + 48 * v12);
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    v23 = (_OWORD *)(v18[7] + 48 * v12);
    v24 = *a1;
    v25 = a1[2];
    v23[1] = a1[1];
    v23[2] = v25;
    *v23 = v24;
    v26 = v18[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (!v27)
    {
      v18[2] = v28;
      return swift_bridgeObjectRetain(a3);
    }
    goto LABEL_14;
  }
  sub_10004B450(v15, a4 & 1);
  v20 = sub_10004A7C0(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_10004D358((uint64_t)a1, v18[7] + 48 * v12);
    goto LABEL_11;
  }
LABEL_15:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

void sub_10004C12C(uint64_t a1, uint64_t a2, Swift::UInt32 a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_10004A8D8(a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_10004C9C8();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = (_QWORD *)(v18[7] + 16 * v12);
      swift_bridgeObjectRelease(v19[1]);
      *v19 = a1;
      v19[1] = a2;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_DWORD *)(v18[6] + 4 * v12) = a3;
    v22 = (_QWORD *)(v18[7] + 16 * v12);
    *v22 = a1;
    v22[1] = a2;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      return;
    }
    goto LABEL_14;
  }
  sub_10004B784(v15, a4 & 1);
  v20 = sub_10004A8D8(a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for SFPairingFlags);
  __break(1u);
}

void sub_10004C268(uint64_t a1, unsigned __int8 a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v8 = *v3;
  v10 = sub_10004A8A4(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_10004CB74();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];

      *(_QWORD *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = a2;
    *(_QWORD *)(v16[7] + 8 * v10) = a1;
    v20 = v16[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return;
    }
    goto LABEL_14;
  }
  sub_10004BA68(v13, a3 & 1);
  v18 = sub_10004A8A4(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    v10 = v18;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for UInt8);
  __break(1u);
}

_OWORD *sub_10004C39C(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v5;
  __int128 v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v5 = a4[6] + 40 * a1;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(a2 + 32);
  result = sub_10000DAD8(a3, (_OWORD *)(a4[7] + 32 * a1));
  v8 = a4[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a4[2] = v10;
  return result;
}

void *sub_10004C414()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  _OWORD v26[2];
  uint64_t v27;

  v1 = v0;
  sub_10000D604(&qword_1000D59A0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    sub_100012DD0(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v26);
    v16 = (uint64_t *)(*(_QWORD *)(v2 + 56) + 16 * v15);
    v18 = *v16;
    v17 = v16[1];
    v19 = *(_QWORD *)(v4 + 48) + 40 * v15;
    v20 = v27;
    v21 = v26[1];
    *(_OWORD *)v19 = v26[0];
    *(_OWORD *)(v19 + 16) = v21;
    *(_QWORD *)(v19 + 32) = v20;
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 56) + 16 * v15);
    *v22 = v18;
    v22[1] = v17;
    result = (void *)swift_bridgeObjectRetain(v17);
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10004C5F4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _OWORD v24[2];
  _OWORD v25[2];
  uint64_t v26;

  v1 = v0;
  sub_10000D604(&qword_1000D57E0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    sub_100012DD0(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    v17 = 32 * v15;
    sub_10000DB98(*(_QWORD *)(v2 + 56) + v17, (uint64_t)v24);
    v18 = *(_QWORD *)(v4 + 48) + v16;
    v19 = v25[0];
    v20 = v25[1];
    *(_QWORD *)(v18 + 32) = v26;
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    result = sub_10000DAD8(v24, (_OWORD *)(*(_QWORD *)(v4 + 56) + v17));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_10004C7D8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _OWORD *v22;
  __int128 v23;
  __int128 v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  _OWORD v29[3];

  v1 = v0;
  sub_10000D604(&qword_1000D5860);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    swift_release(v2);
LABEL_28:
    *v1 = v4;
    return;
  }
  v28 = v1;
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 48 * v15;
    sub_1000147E8((char *)(*(_QWORD *)(v2 + 56) + 48 * v15), (uint64_t)v29);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    v22 = (_OWORD *)(*(_QWORD *)(v4 + 56) + v20);
    v24 = v29[1];
    v23 = v29[2];
    *v22 = v29[0];
    v22[1] = v24;
    v22[2] = v23;
    swift_bridgeObjectRetain(v18);
  }
  v27 = v25 + 2;
  if (v27 >= v13)
  {
LABEL_26:
    swift_release(v2);
    v1 = v28;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_10004C9C8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  sub_10000D604(&qword_1000D6D30);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 4 * v15;
    v17 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v15);
    v18 = 16 * v15;
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v18);
    v21 = *v19;
    v20 = v19[1];
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v18);
    *v22 = v21;
    v22[1] = v20;
    swift_bridgeObjectRetain(v20);
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

id sub_10004CB74()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  sub_10000D604(&qword_1000D6D48);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(void **)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_10004CD14(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v8 = *(_QWORD *)(type metadata accessor for URLQueryItem(0) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 72);
  v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
  v12 = v10 * v4;
  v13 = a3 + v12;
  v14 = v11 + v12;
  if (v11 >= v13 || v14 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v13;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10004CE2C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  int v4;
  int v5;

  v1 = *(_QWORD *)(result + 16);
  if (!v1)
    return 0;
  v2 = result;
  LODWORD(result) = 0;
  v3 = (int *)(v2 + 32);
  do
  {
    v5 = *v3++;
    v4 = v5;
    if ((v5 & ~(_DWORD)result) == 0)
      v4 = 0;
    result = v4 | result;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_10004CE64(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_10004CE9C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10004CF8C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v6 = a4 + 32 * a1 + 32;
    v7 = a3 + 32 * v4;
    if (v6 >= v7 || v6 + 32 * v4 <= a3)
    {
      sub_10000D604(&qword_1000D6D40);
      swift_arrayInitWithCopy(a3);
      return v7;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

char *sub_10004D094(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if ((v4 & 0x8000000000000000) != 0)
    {
      result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10004D178(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10004D268(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10004D358(uint64_t a1, uint64_t a2)
{
  assignWithTake for HomePodSetupStepResult(a2, a1);
  return a2;
}

void sub_10004D398()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  char *v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  double v31;
  double v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  void *v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  void *v55;
  id v56;
  id v57;
  id v58;
  void *v59;
  id v60;
  id v61;
  void *v62;
  id v63;
  id v64;
  id v65;
  void *v66;
  id v67;
  id v68;
  void *v69;
  id v70;
  id v71;
  id v72;
  void *v73;
  id v74;
  id v75;
  void *v76;
  id v77;
  id v78;
  id v79;
  void *v80;
  id v81;
  id v82;
  void *v83;
  id v84;
  id v85;
  id v86;
  void *v87;
  double v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  uint64_t v106;
  Class isa;
  id v108;
  void *v109;
  id v110;
  void *v111;
  id v112;
  void *v113;
  id v114;
  void *v115;
  id v116;
  objc_super v117;

  v1 = v0;
  v117.receiver = v0;
  v117.super_class = (Class)type metadata accessor for ScannerViewController(0);
  objc_msgSendSuper2(&v117, "viewDidLoad");
  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v3 = v2;
  objc_msgSend(v2, "setClipsToBounds:", 1);

  v4 = objc_msgSend(v1, "contentView");
  v5 = (void *)objc_opt_self(UIColor);
  v6 = objc_msgSend(v5, "clearColor");
  objc_msgSend(v4, "setBackgroundColor:", v6);

  v7 = objc_msgSend(v1, "contentView");
  objc_msgSend(v7, "setOpaque:", 0);

  v8 = objc_msgSend(v1, "contentView");
  v9 = objc_msgSend(v8, "titleView");

  if (v9)
  {
    v10 = objc_msgSend(v5, "clearColor");
    objc_msgSend(v9, "setBackgroundColor:", v10);

  }
  v11 = objc_msgSend(v1, "contentView");
  v12 = objc_msgSend(v11, "titleView");

  if (v12)
  {
    objc_msgSend(v12, "setOpaque:", 0);

  }
  v13 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService21ScannerViewController_scannerEngineViewController];
  objc_msgSend(v1, "addChildViewController:", v13);
  v14 = objc_msgSend(v13, "view");
  if (!v14)
    goto LABEL_33;
  v15 = v14;
  objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v16 = objc_msgSend(v1, "view");
  if (!v16)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v17 = v16;
  v18 = objc_msgSend(v13, "view");
  if (!v18)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v19 = v18;
  objc_msgSend(v17, "addSubview:", v18);

  v20 = *(char **)&v1[OBJC_IVAR____TtC14HDSViewService21ScannerViewController_viewfinderViewController];
  objc_msgSend(v1, "addChildViewController:", v20);
  v21 = objc_msgSend(v20, "view");
  if (!v21)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v22 = v21;
  objc_msgSend(v21, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v23 = objc_msgSend(v1, "view");
  if (!v23)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v24 = v23;
  v25 = objc_msgSend(v20, "view");
  if (!v25)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v26 = v25;
  objc_msgSend(v24, "addSubview:", v25);

  v27 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v27, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v28 = objc_msgSend(v5, "clearColor");
  objc_msgSend(v27, "setBackgroundColor:", v28);

  objc_msgSend(v27, "setOpaque:", 0);
  v29 = objc_msgSend(v1, "contentView");
  objc_msgSend(v29, "addSubview:", v27);

  v30 = OBJC_IVAR____TtC14HDSViewService37SVSLPCActivityIndicatorViewController_v;
  v31 = PRXCardDefaultSize();
  v32 = *(double *)(*(_QWORD *)&v20[v30]
                  + OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_strokeWidth);
  v33 = objc_msgSend(v1, "contentView");
  v34 = objc_msgSend(v33, "mainContentGuide");

  v35 = sub_10000D604(&qword_1000D6EE0);
  v36 = swift_allocObject(v35, 136, 7);
  *(_OWORD *)(v36 + 16) = xmmword_100099B40;
  v37 = objc_msgSend(v13, "view");
  if (!v37)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v38 = v37;
  v39 = objc_msgSend(v37, "leftAnchor");

  v40 = objc_msgSend(v1, "view");
  if (!v40)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v41 = v40;
  v42 = objc_msgSend(v40, "leftAnchor");

  v43 = objc_msgSend(v39, "constraintEqualToAnchor:", v42);
  *(_QWORD *)(v36 + 32) = v43;
  v44 = objc_msgSend(v13, "view");
  if (!v44)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v45 = v44;
  v46 = objc_msgSend(v44, "rightAnchor");

  v47 = objc_msgSend(v1, "view");
  if (!v47)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v48 = v47;
  v49 = objc_msgSend(v47, "rightAnchor");

  v50 = objc_msgSend(v46, "constraintEqualToAnchor:", v49);
  *(_QWORD *)(v36 + 40) = v50;
  v51 = objc_msgSend(v13, "view");
  if (!v51)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v52 = v51;
  v53 = objc_msgSend(v51, "heightAnchor");

  v54 = objc_msgSend(v1, "view");
  if (!v54)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  v55 = v54;
  v56 = objc_msgSend(v54, "heightAnchor");

  v57 = objc_msgSend(v53, "constraintEqualToAnchor:multiplier:", v56, 2.0);
  *(_QWORD *)(v36 + 48) = v57;
  v58 = objc_msgSend(v13, "view");
  if (!v58)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v59 = v58;
  v60 = objc_msgSend(v58, "centerYAnchor");

  v61 = objc_msgSend(v1, "view");
  if (!v61)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v62 = v61;
  v63 = objc_msgSend(v61, "centerYAnchor");

  v64 = objc_msgSend(v60, "constraintEqualToAnchor:", v63);
  *(_QWORD *)(v36 + 56) = v64;
  v65 = objc_msgSend(v20, "view");
  if (!v65)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  v66 = v65;
  v67 = objc_msgSend(v65, "leftAnchor");

  v68 = objc_msgSend(v1, "view");
  if (!v68)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  v69 = v68;
  v70 = objc_msgSend(v68, "leftAnchor");

  v71 = objc_msgSend(v67, "constraintEqualToAnchor:", v70);
  *(_QWORD *)(v36 + 64) = v71;
  v72 = objc_msgSend(v20, "view");
  if (!v72)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v73 = v72;
  v74 = objc_msgSend(v72, "rightAnchor");

  v75 = objc_msgSend(v1, "view");
  if (!v75)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  v76 = v75;
  v77 = objc_msgSend(v75, "rightAnchor");

  v78 = objc_msgSend(v74, "constraintEqualToAnchor:", v77);
  *(_QWORD *)(v36 + 72) = v78;
  v79 = objc_msgSend(v20, "view");
  if (!v79)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  v80 = v79;
  v81 = objc_msgSend(v79, "heightAnchor");

  v82 = objc_msgSend(v1, "view");
  if (!v82)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  v83 = v82;
  v84 = objc_msgSend(v82, "heightAnchor");

  v85 = objc_msgSend(v81, "constraintEqualToAnchor:multiplier:", v84, 3.0);
  *(_QWORD *)(v36 + 80) = v85;
  v86 = objc_msgSend(v20, "view");
  if (!v86)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  v87 = v86;
  v88 = v31 * 0.6 + v32 + v32;
  v116 = (id)objc_opt_self(NSLayoutConstraint);
  v89 = objc_msgSend(v87, "centerYAnchor");

  v90 = objc_msgSend(v34, "bottomAnchor");
  v91 = objc_msgSend(v89, "constraintEqualToAnchor:constant:", v90, v88 * -0.5);

  *(_QWORD *)(v36 + 88) = v91;
  v92 = objc_msgSend(v27, "heightAnchor");
  v93 = objc_msgSend(v92, "constraintEqualToConstant:", v88);

  *(_QWORD *)(v36 + 96) = v93;
  v94 = objc_msgSend(v27, "topAnchor");
  v95 = objc_msgSend(v34, "topAnchor");
  v96 = objc_msgSend(v94, "constraintEqualToAnchor:", v95);

  *(_QWORD *)(v36 + 104) = v96;
  v97 = objc_msgSend(v27, "bottomAnchor");
  v98 = objc_msgSend(v34, "bottomAnchor");
  v99 = objc_msgSend(v97, "constraintEqualToAnchor:", v98);

  *(_QWORD *)(v36 + 112) = v99;
  v100 = objc_msgSend(v27, "leadingAnchor");
  v101 = objc_msgSend(v34, "leadingAnchor");
  v102 = objc_msgSend(v100, "constraintEqualToAnchor:", v101);

  *(_QWORD *)(v36 + 120) = v102;
  v103 = objc_msgSend(v27, "trailingAnchor");
  v104 = objc_msgSend(v34, "trailingAnchor");
  v105 = objc_msgSend(v103, "constraintEqualToAnchor:", v104);

  *(_QWORD *)(v36 + 128) = v105;
  specialized Array._endMutation()(v106);
  sub_100014934();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v36);
  objc_msgSend(v116, "activateConstraints:", isa);

  v108 = objc_msgSend(v1, "view");
  if (!v108)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  v109 = v108;
  v110 = objc_msgSend(v20, "view");
  if (!v110)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  v111 = v110;
  objc_msgSend(v109, "sendSubviewToBack:", v110);

  v112 = objc_msgSend(v1, "view");
  if (!v112)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  v113 = v112;
  v114 = objc_msgSend(v13, "view");
  if (v114)
  {
    v115 = v114;
    objc_msgSend(v113, "sendSubviewToBack:", v114);

    return;
  }
LABEL_57:
  __break(1u);
}

id sub_10004E1D8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScannerViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10004E26C()
{
  return type metadata accessor for ScannerViewController(0);
}

uint64_t type metadata accessor for ScannerViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1000D6D90;
  if (!qword_1000D6D90)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ScannerViewController);
  return result;
}

uint64_t sub_10004E2B0(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v4;
  _QWORD v5[3];

  result = type metadata accessor for Logger(319, a2);
  if (v4 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[2] = &unk_100099B88;
    result = swift_updateClassMetadata2(a1, 256, 3, v5, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t destroy for HomePodSetupWiFiInfoTableView.InfoElement(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
}

_QWORD *initializeWithCopy for HomePodSetupWiFiInfoTableView.InfoElement(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

_QWORD *assignWithCopy for HomePodSetupWiFiInfoTableView.InfoElement(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

__n128 initializeWithTake for HomePodSetupWiFiInfoTableView.InfoElement(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_QWORD *assignWithTake for HomePodSetupWiFiInfoTableView.InfoElement(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for HomePodSetupWiFiInfoTableView.InfoElement(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HomePodSetupWiFiInfoTableView.InfoElement(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriLanguage()
{
  return &type metadata for SiriLanguage;
}

uint64_t sub_10004E4EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000111E8(v2, qword_1000D6DA0);
  v3 = sub_10001118C(v2, (uint64_t)qword_1000D6DA0);
  if (qword_1000D55C0 != -1)
    swift_once(&qword_1000D55C0, sub_100058090);
  v4 = sub_10001118C(v2, (uint64_t)qword_1000DB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

uint64_t sub_10004E57C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  if (v4 == v6 && v5 == v7)
    return 0;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v6, v7, 1);
}

uint64_t sub_10004E5AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  if (v4 == v2 && v5 == v3)
    v7 = 1;
  else
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2, v3, 1) ^ 1;
  return v7 & 1;
}

uint64_t sub_10004E5E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  if (v4 == v6 && v5 == v7)
    v9 = 1;
  else
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v6, v7, 1) ^ 1;
  return v9 & 1;
}

uint64_t sub_10004E630(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  if (v4 == v2 && v5 == v3)
    return 0;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2, v3, 1);
}

uint64_t sub_10004E654(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  char v12;
  uint64_t result;

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = a1[3];
  v8 = a2[1];
  v9 = a2[2];
  v10 = a2[3];
  v11 = v4 == *a2 && v5 == v8;
  if (v11 || (v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2, v8, 0), result = 0, (v12 & 1) != 0))
  {
    if (v6 == v9 && v7 == v10)
      return 1;
    else
      return _stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, v9, v10, 0);
  }
  return result;
}

unint64_t sub_10004E6E4(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;

  _StringGuts.grow(_:)(39);
  swift_bridgeObjectRelease(0xE000000000000000);
  swift_bridgeObjectRetain(a2);
  v8._countAndFlagsBits = a1;
  v8._object = a2;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(a2);
  v9._countAndFlagsBits = 0x7A696C61636F6C20;
  v9._object = (void *)0xEF3D656D614E6465;
  String.append(_:)(v9);
  swift_bridgeObjectRetain(a4);
  v10._countAndFlagsBits = a3;
  v10._object = a4;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(a4);
  v11._countAndFlagsBits = 62;
  v11._object = (void *)0xE100000000000000;
  String.append(_:)(v11);
  return 0xD000000000000013;
}

unint64_t sub_10004E7D8()
{
  uint64_t v0;

  return sub_10004E6E4(*(_QWORD *)v0, *(void **)(v0 + 8), *(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

unint64_t sub_10004E7E8()
{
  unint64_t result;

  result = qword_1000D6DB8;
  if (!qword_1000D6DB8)
  {
    result = swift_getWitnessTable(&unk_100099BD8, &type metadata for SiriLanguage);
    atomic_store(result, (unint64_t *)&qword_1000D6DB8);
  }
  return result;
}

Swift::Int sub_10004E82C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  Swift::Int result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = sub_10004F4B0(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_10004E894(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_10004E894(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  Swift::Int v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v21;
  Swift::Int v22;
  uint64_t *v23;
  Swift::Int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  Swift::Int v33;
  Swift::Int v34;
  _OWORD *v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  Swift::Int v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  Swift::Int v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t *v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  char *v58;
  char *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  BOOL v81;
  uint64_t v82;
  char v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  BOOL v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  unint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  unint64_t v113;
  uint64_t *v114;
  uint64_t v115;
  _QWORD *v116;
  Swift::Int v117;
  Swift::Int v118;
  uint64_t v119;
  char *__dst;

  v3 = a1[1];
  result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        return sub_10004EF7C(0, v3, 1, a1);
      return result;
    }
    goto LABEL_154;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
  {
LABEL_162:
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return result;
  }
  v117 = result;
  v114 = a1;
  if (v3 < 2)
  {
    v8 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      v12 = _swiftEmptyArrayStorage[2];
      v11 = (char *)_swiftEmptyArrayStorage;
LABEL_120:
      v107 = v11;
      v116 = v8;
      if (v12 < 2)
        goto LABEL_117;
      v108 = *v114;
      while (1)
      {
        v109 = v12 - 2;
        if (v12 < 2)
          goto LABEL_149;
        if (!v108)
          goto LABEL_161;
        v106 = v107;
        v110 = *(_QWORD *)&v107[16 * v109 + 32];
        v111 = *(_QWORD *)&v107[16 * v12 + 24];
        sub_10004F054((char *)(v108 + 32 * v110), (char *)(v108 + 32 * *(_QWORD *)&v107[16 * v12 + 16]), v108 + 32 * v111, __dst);
        if (v1)
          goto LABEL_116;
        if (v111 < v110)
          goto LABEL_150;
        if ((swift_isUniquelyReferenced_nonNull_native(v106) & 1) == 0)
          v106 = sub_10004F49C((uint64_t)v106);
        if (v109 >= *((_QWORD *)v106 + 2))
          goto LABEL_151;
        v112 = &v106[16 * v109 + 32];
        *(_QWORD *)v112 = v110;
        *((_QWORD *)v112 + 1) = v111;
        v113 = *((_QWORD *)v106 + 2);
        if (v12 > v113)
          goto LABEL_152;
        memmove(&v106[16 * v12 + 16], &v106[16 * v12 + 32], 16 * (v113 - v12));
        v107 = v106;
        *((_QWORD *)v106 + 2) = v113 - 1;
        v12 = v113 - 1;
        if (v113 <= 2)
          goto LABEL_117;
      }
    }
    v116 = _swiftEmptyArrayStorage;
  }
  else
  {
    v6 = v5 >> 1;
    v7 = static Array._allocateBufferUninitialized(minimumCapacity:)(v5 >> 1, &type metadata for SiriLanguage);
    *(_QWORD *)(v7 + 16) = v6;
    v116 = (_QWORD *)v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v115 = *a1 + 24;
  v11 = (char *)_swiftEmptyArrayStorage;
  v118 = v3;
  v119 = v10;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = v10 + 32 * v9;
    v15 = *(_QWORD *)(v14 + 16);
    v16 = *(_QWORD *)(v14 + 24);
    v17 = v10 + 32 * v13;
    v18 = *(_QWORD *)(v17 + 16);
    v19 = *(_QWORD *)(v17 + 24);
    if (v15 == v18 && v16 == v19)
    {
      v22 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v21 = 0;
    }
    else
    {
      v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, v18, v19, 1);
      v22 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v23 = (uint64_t *)(v115 + 32 * v22);
    do
    {
      v25 = *(v23 - 1);
      v26 = *v23;
      v27 = v10 + 32 * v9;
      v28 = *(_QWORD *)(v27 + 16);
      v29 = *(_QWORD *)(v27 + 24);
      if (v25 == v28 && v26 == v29)
      {
        if ((v21 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v21 ^ _stringCompareWithSmolCheck(_:_:expecting:)(v25, v26, v28, v29, 1)) & 1) != 0)
      {
        goto LABEL_36;
      }
      v24 = v22 + 1;
      v23 += 4;
      v9 = v22;
      v22 = v24;
    }
    while (v24 < v3);
    v22 = v24;
LABEL_36:
    v9 = v22;
    if ((v21 & 1) != 0)
    {
LABEL_37:
      if (v22 < v13)
        goto LABEL_157;
      if (v13 < v22)
      {
        v31 = 32 * v22;
        v32 = 32 * v13;
        v33 = v22;
        v34 = v13;
        do
        {
          if (v34 != --v33)
          {
            if (!v10)
              goto LABEL_160;
            v35 = (_OWORD *)(v10 + v32);
            v36 = v10 + v31;
            v37 = *(_OWORD *)(v10 + v32);
            v38 = *(_QWORD *)(v10 + v32 + 16);
            v39 = *(_QWORD *)(v10 + v32 + 24);
            v40 = *(_OWORD *)(v10 + v31 - 16);
            *v35 = *(_OWORD *)(v10 + v31 - 32);
            v35[1] = v40;
            *(_OWORD *)(v36 - 32) = v37;
            *(_QWORD *)(v36 - 16) = v38;
            *(_QWORD *)(v36 - 8) = v39;
          }
          ++v34;
          v31 -= 32;
          v32 += 32;
        }
        while (v34 < v33);
      }
LABEL_45:
      v9 = v22;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_153;
      if (v9 - v13 < v117)
      {
        if (__OFADD__(v13, v117))
          goto LABEL_155;
        if (v13 + v117 >= v3)
          v41 = v3;
        else
          v41 = v13 + v117;
        if (v41 < v13)
          goto LABEL_156;
        if (v9 != v41)
        {
          v42 = (uint64_t *)(v115 + 32 * v9);
          do
          {
            v43 = v10 + 32 * v9;
            v44 = *(_QWORD *)(v43 + 16);
            v45 = *(_QWORD *)(v43 + 24);
            v46 = v13;
            v47 = v42;
            do
            {
              v48 = *(v47 - 5);
              v49 = *(v47 - 4);
              v50 = v44 == v48 && v45 == v49;
              if (v50 || (_stringCompareWithSmolCheck(_:_:expecting:)(v44, v45, v48, v49, 1) & 1) == 0)
                break;
              if (!v10)
                goto LABEL_158;
              v51 = v47 - 3;
              v45 = *v47;
              v53 = *(_OWORD *)(v47 - 7);
              v52 = *(_OWORD *)(v47 - 5);
              *(v47 - 4) = *v47;
              v47 -= 4;
              v54 = v47[1];
              v55 = v47[2];
              v44 = v47[3];
              *(_OWORD *)v51 = v53;
              *((_OWORD *)v51 + 1) = v52;
              *(v47 - 3) = v54;
              *(v47 - 2) = v55;
              *(v47 - 1) = v44;
              ++v46;
            }
            while (v9 != v46);
            ++v9;
            v42 += 4;
          }
          while (v9 != v41);
          v9 = v41;
        }
      }
    }
    if (v9 < v13)
    {
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
LABEL_160:
      __break(1u);
LABEL_161:
      __break(1u);
      goto LABEL_162;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
      v11 = sub_10004F2FC(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v57 = *((_QWORD *)v11 + 2);
    v56 = *((_QWORD *)v11 + 3);
    v12 = v57 + 1;
    if (v57 >= v56 >> 1)
      v11 = sub_10004F2FC((char *)(v56 > 1), v57 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v58 = v11 + 32;
    v59 = &v11[16 * v57 + 32];
    *(_QWORD *)v59 = v13;
    *((_QWORD *)v59 + 1) = v9;
    if (v57)
      break;
    v12 = 1;
    v10 = v119;
LABEL_15:
    v3 = v118;
    if (v9 >= v118)
    {
      v8 = v116;
      goto LABEL_120;
    }
  }
  v10 = v119;
  while (1)
  {
    v60 = v12 - 1;
    if (v12 >= 4)
    {
      v65 = &v58[16 * v12];
      v66 = *((_QWORD *)v65 - 8);
      v67 = *((_QWORD *)v65 - 7);
      v71 = __OFSUB__(v67, v66);
      v68 = v67 - v66;
      if (v71)
        goto LABEL_137;
      v70 = *((_QWORD *)v65 - 6);
      v69 = *((_QWORD *)v65 - 5);
      v71 = __OFSUB__(v69, v70);
      v63 = v69 - v70;
      v64 = v71;
      if (v71)
        goto LABEL_138;
      v72 = v12 - 2;
      v73 = &v58[16 * v12 - 32];
      v75 = *(_QWORD *)v73;
      v74 = *((_QWORD *)v73 + 1);
      v71 = __OFSUB__(v74, v75);
      v76 = v74 - v75;
      if (v71)
        goto LABEL_140;
      v71 = __OFADD__(v63, v76);
      v77 = v63 + v76;
      if (v71)
        goto LABEL_143;
      if (v77 >= v68)
      {
        v95 = &v58[16 * v60];
        v97 = *(_QWORD *)v95;
        v96 = *((_QWORD *)v95 + 1);
        v71 = __OFSUB__(v96, v97);
        v98 = v96 - v97;
        if (v71)
          goto LABEL_147;
        v88 = v63 < v98;
        goto LABEL_105;
      }
    }
    else
    {
      if (v12 != 3)
      {
        v89 = *((_QWORD *)v11 + 4);
        v90 = *((_QWORD *)v11 + 5);
        v71 = __OFSUB__(v90, v89);
        v82 = v90 - v89;
        v83 = v71;
        goto LABEL_99;
      }
      v62 = *((_QWORD *)v11 + 4);
      v61 = *((_QWORD *)v11 + 5);
      v71 = __OFSUB__(v61, v62);
      v63 = v61 - v62;
      v64 = v71;
    }
    if ((v64 & 1) != 0)
      goto LABEL_139;
    v72 = v12 - 2;
    v78 = &v58[16 * v12 - 32];
    v80 = *(_QWORD *)v78;
    v79 = *((_QWORD *)v78 + 1);
    v81 = __OFSUB__(v79, v80);
    v82 = v79 - v80;
    v83 = v81;
    if (v81)
      goto LABEL_142;
    v84 = &v58[16 * v60];
    v86 = *(_QWORD *)v84;
    v85 = *((_QWORD *)v84 + 1);
    v71 = __OFSUB__(v85, v86);
    v87 = v85 - v86;
    if (v71)
      goto LABEL_145;
    if (__OFADD__(v82, v87))
      goto LABEL_146;
    if (v82 + v87 >= v63)
    {
      v88 = v63 < v87;
LABEL_105:
      if (v88)
        v60 = v72;
      goto LABEL_107;
    }
LABEL_99:
    if ((v83 & 1) != 0)
      goto LABEL_141;
    v91 = &v58[16 * v60];
    v93 = *(_QWORD *)v91;
    v92 = *((_QWORD *)v91 + 1);
    v71 = __OFSUB__(v92, v93);
    v94 = v92 - v93;
    if (v71)
      goto LABEL_144;
    if (v94 < v82)
      goto LABEL_15;
LABEL_107:
    v99 = v60 - 1;
    if (v60 - 1 >= v12)
    {
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
      goto LABEL_148;
    }
    if (!v10)
      goto LABEL_159;
    v100 = v10;
    v101 = &v58[16 * v99];
    v102 = *(_QWORD *)v101;
    v103 = &v58[16 * v60];
    v104 = *((_QWORD *)v103 + 1);
    sub_10004F054((char *)(v100 + 32 * *(_QWORD *)v101), (char *)(v100 + 32 * *(_QWORD *)v103), v100 + 32 * v104, __dst);
    if (v1)
      break;
    if (v104 < v102)
      goto LABEL_134;
    if (v60 > *((_QWORD *)v11 + 2))
      goto LABEL_135;
    *(_QWORD *)v101 = v102;
    *(_QWORD *)&v58[16 * v99 + 8] = v104;
    v105 = *((_QWORD *)v11 + 2);
    if (v60 >= v105)
      goto LABEL_136;
    v12 = v105 - 1;
    memmove(&v58[16 * v60], v103 + 16, 16 * (v105 - 1 - v60));
    *((_QWORD *)v11 + 2) = v105 - 1;
    v88 = v105 > 2;
    v10 = v119;
    if (!v88)
      goto LABEL_15;
  }
  v106 = v11;
LABEL_116:
  v107 = v106;
LABEL_117:
  swift_bridgeObjectRelease(v107);
  v116[2] = 0;
  return swift_bridgeObjectRelease(v116);
}

uint64_t sub_10004EF7C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 32 * a3 + 24;
LABEL_5:
    v9 = v7 + 32 * v4;
    result = *(_QWORD *)(v9 + 16);
    v10 = *(_QWORD *)(v9 + 24);
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = *(v12 - 5);
      v14 = *(v12 - 4);
      v15 = result == v13 && v10 == v14;
      if (v15 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(result, v10, v13, v14, 1), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 32;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      v16 = v12 - 3;
      v10 = *v12;
      v18 = *(_OWORD *)(v12 - 7);
      v17 = *(_OWORD *)(v12 - 5);
      *(v12 - 4) = *v12;
      v12 -= 4;
      v19 = v12[1];
      v20 = v12[2];
      result = v12[3];
      *(_OWORD *)v16 = v18;
      *((_OWORD *)v16 + 1) = v17;
      *(v12 - 3) = v19;
      *(v12 - 2) = v20;
      *(v12 - 1) = result;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10004F054(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char *v21;
  char *v22;
  __int128 v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  char *v32;
  __int128 v33;
  __int128 v34;
  uint64_t result;
  char *v36;
  const void *v37;
  char *v38;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 31;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 5;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 31;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 5;
  v38 = __src;
  v37 = __dst;
  if (v10 >= v12 >> 5)
  {
    if (v11 >= -31)
    {
      if (__dst != a2 || &a2[32 * v13] <= __dst)
        memmove(__dst, a2, 32 * v13);
      v24 = &v4[32 * v13];
      v36 = v24;
      v38 = v6;
      if (v7 < v6 && v11 >= 32)
      {
        v25 = (char *)(a3 - 32);
        do
        {
          v26 = v25 + 32;
          v27 = *((_QWORD *)v24 - 2);
          v28 = *((_QWORD *)v24 - 1);
          v29 = *((_QWORD *)v6 - 2);
          v30 = *((_QWORD *)v6 - 1);
          v31 = v27 == v29 && v28 == v30;
          if (v31 || (_stringCompareWithSmolCheck(_:_:expecting:)(v27, v28, v29, v30, 1) & 1) == 0)
          {
            v36 = v24 - 32;
            if (v26 < v24 || v25 >= v24 || v26 != v24)
            {
              v34 = *((_OWORD *)v24 - 1);
              *(_OWORD *)v25 = *((_OWORD *)v24 - 2);
              *((_OWORD *)v25 + 1) = v34;
            }
            v32 = v6;
            v24 -= 32;
            if (v6 <= v7)
              break;
          }
          else
          {
            v32 = v6 - 32;
            if (v26 != v6 || v25 >= v6)
            {
              v33 = *((_OWORD *)v6 - 1);
              *(_OWORD *)v25 = *(_OWORD *)v32;
              *((_OWORD *)v25 + 1) = v33;
            }
            v38 = v6 - 32;
            if (v32 <= v7)
              break;
          }
          v25 -= 32;
          v6 = v32;
        }
        while (v24 > v4);
      }
LABEL_52:
      sub_10004F3F4((void **)&v38, &v37, &v36);
      return 1;
    }
  }
  else if (v8 >= -31)
  {
    if (__dst != __src || &__src[32 * v10] <= __dst)
      memmove(__dst, __src, 32 * v10);
    v14 = &v4[32 * v10];
    v36 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 32)
    {
      v15 = v4;
      while (1)
      {
        v16 = *((_QWORD *)v6 + 2);
        v17 = *((_QWORD *)v6 + 3);
        v18 = *((_QWORD *)v15 + 2);
        v19 = *((_QWORD *)v15 + 3);
        v20 = v16 == v18 && v17 == v19;
        if (v20 || (_stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, v18, v19, 1) & 1) == 0)
        {
          v4 = v15 + 32;
          v22 = v15;
          v21 = v6;
          if (v7 == v15)
          {
            v15 += 32;
            if (v7 < v4)
              goto LABEL_26;
          }
          else
          {
            v15 += 32;
          }
        }
        else
        {
          v21 = v6 + 32;
          v22 = v6;
          if (v7 == v6 && v7 < v21)
            goto LABEL_26;
        }
        v23 = *((_OWORD *)v22 + 1);
        *(_OWORD *)v7 = *(_OWORD *)v22;
        *((_OWORD *)v7 + 1) = v23;
LABEL_26:
        v7 += 32;
        if (v15 < v14)
        {
          v6 = v21;
          if ((unint64_t)v21 < a3)
            continue;
        }
        v37 = v4;
        v38 = v7;
        goto LABEL_52;
      }
    }
    goto LABEL_52;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

char *sub_10004F2FC(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000D604((uint64_t *)&unk_1000D6DC0);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 16 * v8);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

char *sub_10004F3F4(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;
  char v9;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 31;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -32)
  {
    v9 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v9, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 5;
    if (result != v3 || result >= &v3[32 * v7])
      return (char *)memmove(result, v3, 32 * v7);
  }
  return result;
}

char *sub_10004F49C(uint64_t a1)
{
  return sub_10004F2FC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_10004F4B0(uint64_t a1)
{
  return sub_10007A874(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_10004F4C4(uint64_t a1, unint64_t a2)
{
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  NSString v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v4 = objc_msgSend((id)objc_opt_self(AFLocalization), "sharedInstance");
  v6 = v4;
  if (v4
    && (v7 = v4,
        v8 = String._bridgeToObjectiveC()(),
        v9 = String._bridgeToObjectiveC()(),
        v10 = objc_msgSend(v7, "localizedNameForSiriLanguage:inDisplayLanguage:", v8, v9),
        v7,
        v8,
        v9,
        v10))
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v10);

  }
  else
  {
    if (qword_1000D5568 != -1)
      swift_once(&qword_1000D5568, sub_10004E4EC);
    v11 = type metadata accessor for Logger(0, v5);
    sub_10001118C(v11, (uint64_t)qword_1000D6DA0);
    swift_bridgeObjectRetain(a2);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(12, -1);
      v16 = swift_slowAlloc(32, -1);
      v19 = v16;
      *(_DWORD *)v15 = 136315138;
      swift_bridgeObjectRetain(a2);
      v18 = sub_10003EF58(a1, a2, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19);
      swift_bridgeObjectRelease_n(a2, 3);
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "SiriLanguage: No localization found for language code: %s", v15, 0xCu);
      swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v15, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a2, 2);
    }
    return 0;
  }
  return a1;
}

uint64_t sub_10004F72C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v20;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    swift_bridgeObjectRetain(a1);
    v4 = (unint64_t *)(v3 + 40);
    v5 = _swiftEmptyArrayStorage;
    do
    {
      v7 = *(v4 - 1);
      v8 = *v4;
      swift_bridgeObjectRetain(*v4);
      v9 = sub_10004F4C4(v7, v8);
      if (v10)
      {
        v13 = v9;
        v14 = v10;
        v15 = v11;
        v16 = v12;
        if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
          v5 = sub_10004A680(0, v5[2] + 1, 1, v5);
        v18 = v5[2];
        v17 = v5[3];
        if (v18 >= v17 >> 1)
          v5 = sub_10004A680((_QWORD *)(v17 > 1), v18 + 1, 1, v5);
        v5[2] = v18 + 1;
        v6 = &v5[4 * v18];
        v6[4] = v13;
        v6[5] = v14;
        v6[6] = v15;
        v6[7] = v16;
      }
      v4 += 2;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v5 = _swiftEmptyArrayStorage;
  }
  v20 = v5;
  swift_bridgeObjectRetain(v5);
  sub_10004E82C((uint64_t *)&v20);
  swift_bridgeObjectRelease(v5);
  return (uint64_t)v20;
}

uint64_t sub_10004F878(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10004F8A8 + 4 * word_100099C48[a1]))(0x4C45434E4143, 0xE600000000000000);
}

unint64_t sub_10004F8A8()
{
  return 0xD000000000000010;
}

uint64_t sub_100050884(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000111E8(v2, qword_1000D6DD0);
  v3 = sub_10001118C(v2, (uint64_t)qword_1000D6DD0);
  if (qword_1000D55C0 != -1)
    swift_once(&qword_1000D55C0, sub_100058090);
  v4 = sub_10001118C(v2, (uint64_t)qword_1000DB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

char *sub_100050914(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  _BYTE *v4;
  char *v8;
  char *v9;
  uint64_t v10;
  id v11;
  id v12;
  char *v13;
  NSString v14;
  id v15;
  void *v16;
  objc_super v18;

  v8 = &v4[OBJC_IVAR____TtC14HDSViewService44HomePodSetupSiriVoiceSelectionViewController_presenter];
  *((_QWORD *)v8 + 1) = 0;
  swift_unknownObjectWeakInit(v8, 0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC14HDSViewService44HomePodSetupSiriVoiceSelectionViewController_voiceSelectionPresenter] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC14HDSViewService44HomePodSetupSiriVoiceSelectionViewController_voiceOptionsView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC14HDSViewService44HomePodSetupSiriVoiceSelectionViewController_voicePreviewer] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC14HDSViewService44HomePodSetupSiriVoiceSelectionViewController_voiceOptionsViewHeightConstraint] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC14HDSViewService44HomePodSetupSiriVoiceSelectionViewController_currentVoiceSelection] = 0;
  v4[OBJC_IVAR____TtC14HDSViewService44HomePodSetupSiriVoiceSelectionViewController_allowsRandomSelection] = 2;
  v9 = &v4[OBJC_IVAR____TtC14HDSViewService44HomePodSetupSiriVoiceSelectionViewController_viewModel];
  v10 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(_QWORD *)&v4[OBJC_IVAR____TtC14HDSViewService44HomePodSetupSiriVoiceSelectionViewController_voiceSelectionViewController] = 0;
  v18.receiver = v4;
  v18.super_class = (Class)type metadata accessor for HomePodSetupSiriVoiceSelectionViewController(0);
  v11 = objc_msgSendSuper2(&v18, "initWithContentView:", 0);
  v12 = objc_allocWithZone((Class)VTUIVoiceSelectionViewController);
  v13 = (char *)v11;
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v12, "initCompactWithRecognitionLanguage:allowsRandomSelection:customVoicePreviewer:delegate:", v14, a3 & 1, a4, v13, swift_bridgeObjectRelease(a2).n128_f64[0]);

  v16 = *(void **)&v13[OBJC_IVAR____TtC14HDSViewService44HomePodSetupSiriVoiceSelectionViewController_voiceSelectionViewController];
  *(_QWORD *)&v13[OBJC_IVAR____TtC14HDSViewService44HomePodSetupSiriVoiceSelectionViewController_voiceSelectionViewController] = v15;

  return v13;
}

void sub_100050A94()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  NSObject *v4;
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  NSObject **v8;
  NSObject *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  NSObject *v44;
  Class isa;
  NSObject *v46;
  objc_super v47;

  v47.receiver = v0;
  v47.super_class = (Class)type metadata accessor for HomePodSetupSiriVoiceSelectionViewController(0);
  objc_msgSendSuper2(&v47, "viewDidLoad");
  if (qword_1000D5570 != -1)
    swift_once(&qword_1000D5570, sub_100050884);
  v2 = type metadata accessor for Logger(0, v1);
  sub_10001118C(v2, (uint64_t)qword_1000D6DD0);
  v3 = v0;
  v4 = Logger.logObject.getter(v3);
  v6 = static os_log_type_t.default.getter(v4, v5);
  if (os_log_type_enabled(v4, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = (NSObject **)swift_slowAlloc(8, -1);
    *(_DWORD *)v7 = 138412290;
    v46 = v3;
    v9 = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47);
    *v8 = v3;

    _os_log_impl((void *)&_mh_execute_header, v4, v6, "HomePod Setup %@ viewDidLoad", v7, 0xCu);
    v10 = sub_10000D604(&qword_1000D5CC8);
    swift_arrayDestroy(v8, 1, v10);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);
  }
  else
  {

    v4 = v3;
  }

  v11 = *(Class *)((char *)&v3->isa
                 + OBJC_IVAR____TtC14HDSViewService44HomePodSetupSiriVoiceSelectionViewController_voiceSelectionViewController);
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend(v12, "view");
    if (v13)
    {
      v14 = v13;
      objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

      v15 = -[NSObject contentView](v3, "contentView");
      v16 = objc_msgSend(v12, "view");
      if (v16)
      {
        v17 = v16;
        objc_msgSend(v15, "addSubview:", v16);

        v18 = -[NSObject contentView](v3, "contentView");
        v19 = objc_msgSend(v18, "mainContentGuide");

        v20 = sub_10000D604(&qword_1000D6EE0);
        v21 = swift_allocObject(v20, 64, 7);
        *(_OWORD *)(v21 + 16) = xmmword_100099580;
        v22 = objc_msgSend(v12, "view");
        if (v22)
        {
          v23 = v22;
          v24 = objc_msgSend(v22, "topAnchor");

          v25 = objc_msgSend(v19, "topAnchor");
          v26 = objc_msgSend(v24, "constraintEqualToAnchor:constant:", v25, -PRXCardDefaultLayoutMargins[0]);

          *(_QWORD *)(v21 + 32) = v26;
          v27 = objc_msgSend(v12, "view");
          if (v27)
          {
            v28 = v27;
            v29 = objc_msgSend(v27, "bottomAnchor");

            v30 = objc_msgSend(v19, "bottomAnchor");
            v31 = objc_msgSend(v29, "constraintEqualToAnchor:", v30);

            *(_QWORD *)(v21 + 40) = v31;
            v32 = objc_msgSend(v12, "view");
            if (v32)
            {
              v33 = v32;
              v34 = objc_msgSend(v32, "leadingAnchor");

              v35 = objc_msgSend(v19, "leadingAnchor");
              v36 = objc_msgSend(v34, "constraintEqualToAnchor:constant:", v35, -PRXCardDefaultLayoutMargins[1]);

              *(_QWORD *)(v21 + 48) = v36;
              v37 = objc_msgSend(v12, "view");
              if (v37)
              {
                v38 = v37;
                v39 = (void *)objc_opt_self(NSLayoutConstraint);
                v40 = objc_msgSend(v38, "trailingAnchor");

                v41 = objc_msgSend(v19, "trailingAnchor");
                v42 = objc_msgSend(v40, "constraintEqualToAnchor:constant:", v41, PRXCardDefaultLayoutMargins[3]);

                *(_QWORD *)(v21 + 56) = v42;
                v46 = v21;
                specialized Array._endMutation()(v43);
                v44 = v46;
                sub_100035CA4(0, (unint64_t *)&qword_1000D7080, NSLayoutConstraint_ptr);
                isa = Array._bridgeToObjectiveC()().super.isa;
                swift_bridgeObjectRelease(v44);
                objc_msgSend(v39, "activateConstraints:", isa);

                -[NSObject addChildViewController:](v3, "addChildViewController:", v12);
                objc_msgSend(v12, "didMoveToParentViewController:", v3);
                sub_100051328();

                return;
              }
LABEL_20:
              __break(1u);
              return;
            }
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
LABEL_18:
          __break(1u);
          goto LABEL_19;
        }
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_17;
  }
}

void sub_100051124(char a1, SEL *a2, const char *a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  NSObject *v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  NSObject **v14;
  NSObject *v15;
  uint64_t v16;
  NSObject *v17;
  objc_super v18;

  v18.receiver = v3;
  v18.super_class = (Class)type metadata accessor for HomePodSetupSiriVoiceSelectionViewController(0);
  objc_msgSendSuper2(&v18, *a2, a1 & 1);
  if (qword_1000D5570 != -1)
    swift_once(&qword_1000D5570, sub_100050884);
  v8 = type metadata accessor for Logger(0, v7);
  sub_10001118C(v8, (uint64_t)qword_1000D6DD0);
  v9 = v3;
  v10 = Logger.logObject.getter(v9);
  v12 = static os_log_type_t.default.getter(v10, v11);
  if (os_log_type_enabled(v10, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v14 = (NSObject **)swift_slowAlloc(8, -1);
    *(_DWORD *)v13 = 138412290;
    v17 = v9;
    v15 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18);
    *v14 = v9;

    _os_log_impl((void *)&_mh_execute_header, v10, v12, a3, v13, 0xCu);
    v16 = sub_10000D604(&qword_1000D5CC8);
    swift_arrayDestroy(v14, 1, v16);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {

    v10 = v9;
  }

}

void sub_100051328()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;

  v1 = *(void **)(v0
                + OBJC_IVAR____TtC14HDSViewService44HomePodSetupSiriVoiceSelectionViewController_voiceSelectionViewController);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v2, "continueButton");
    objc_msgSend(v3, "setBackgroundImage:forState:", 0, 0);
    v4 = (void *)objc_opt_self(UIColor);
    v5 = v3;
    v6 = objc_msgSend(v4, "secondarySystemBackgroundColor");
    objc_msgSend(v5, "setBackgroundColor:", v6);

    objc_msgSend(v5, "_setContinuousCornerRadius:", PRXProminentButtonCornerRadius);
    v7 = objc_msgSend(v5, "titleLabel");
    if (v7)
    {
      v8 = v7;
      v9 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
      v10 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", 17.0, UIFontWeightMedium);
      v11 = objc_msgSend(v9, "scaledFontForFont:", v10);

      objc_msgSend(v8, "setFont:", v11);
    }
    v12 = objc_msgSend(v4, "labelColor");
    objc_msgSend(v5, "setTitleColor:forState:", v12, 0);

    v13 = objc_msgSend(v4, "secondaryLabelColor");
    objc_msgSend(v5, "setTitleColor:forState:", v13, 2);

  }
}

id sub_10005158C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupSiriVoiceSelectionViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100051658()
{
  return type metadata accessor for HomePodSetupSiriVoiceSelectionViewController(0);
}

uint64_t type metadata accessor for HomePodSetupSiriVoiceSelectionViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1000D6E48;
  if (!qword_1000D6E48)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HomePodSetupSiriVoiceSelectionViewController);
  return result;
}

void sub_10005169C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[9];

  v4[0] = &unk_100099DF0;
  v4[1] = &unk_100099E08;
  v4[2] = &unk_100099E08;
  v4[3] = &unk_100099E08;
  v4[4] = &unk_100099E08;
  v4[5] = &unk_100099E08;
  v4[6] = &unk_100099E20;
  sub_100010910(319);
  if (v3 <= 0x3F)
  {
    v4[7] = *(_QWORD *)(v2 - 8) + 64;
    v4[8] = &unk_100099E08;
    swift_updateClassMetadata2(a1, 256, 9, v4, a1 + 80);
  }
}

uint64_t sub_100051730(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService44HomePodSetupSiriVoiceSelectionViewController_presenter + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease(a1);
}

uint64_t sub_100051768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100051820(a3);
}

uint64_t sub_100051820(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char *v20;
  uint64_t v21;

  v3 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D5570 != -1)
    swift_once(&qword_1000D5570, sub_100050884);
  v7 = type metadata accessor for Logger(0, v4);
  sub_10001118C(v7, (uint64_t)qword_1000D6DD0);
  v8 = v1;
  v9 = Logger.logObject.getter(v8);
  v11 = static os_log_type_t.default.getter(v9, v10);
  if (os_log_type_enabled(v9, v11))
  {
    v19 = a1;
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v12 = 138412290;
    v20 = v8;
    v14 = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21);
    *v13 = v8;

    a1 = v19;
    _os_log_impl((void *)&_mh_execute_header, v9, v11, "HomePod Setup %@ presenter:didUpdate", v12, 0xCu);
    v15 = sub_10000D604(&qword_1000D5CC8);
    swift_arrayDestroy(v13, 1, v15);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {

  }
  sub_1000111A4(a1, (uint64_t)v6);
  v16 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v6, 0, 1, v16);
  v17 = (uint64_t)&v8[OBJC_IVAR____TtC14HDSViewService44HomePodSetupSiriVoiceSelectionViewController_viewModel];
  swift_beginAccess(&v8[OBJC_IVAR____TtC14HDSViewService44HomePodSetupSiriVoiceSelectionViewController_viewModel], &v20, 33, 0);
  sub_100011340((uint64_t)v6, v17, (uint64_t *)&unk_1000D6EC0);
  return swift_endAccess(&v20);
}

uint64_t sub_100051A60(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  id v6;
  NSObject *v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;
  id v19;
  _BYTE v20[48];
  _QWORD v21[5];
  _OWORD v22[3];

  v3 = v2;
  if (qword_1000D5570 != -1)
    swift_once(&qword_1000D5570, sub_100050884);
  v5 = type metadata accessor for Logger(0, a2);
  sub_10001118C(v5, (uint64_t)qword_1000D6DD0);
  v6 = a1;
  v7 = Logger.logObject.getter(v6);
  v9 = static os_log_type_t.default.getter(v7, v8);
  if (os_log_type_enabled(v7, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v22[0] = v11;
    *(_DWORD *)v10 = 136315138;
    *(_QWORD *)v20 = v6;
    v12 = sub_100035CA4(0, (unint64_t *)&qword_1000D6ED8, AFVoiceInfo_ptr);
    v13 = v6;
    v14 = String.init<A>(reflecting:)(v20, v12);
    v16 = v15;
    *(_QWORD *)v20 = sub_10003EF58(v14, v15, (uint64_t *)v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v20, &v20[8]);

    swift_bridgeObjectRelease(v16);
    _os_log_impl((void *)&_mh_execute_header, v7, v9, "Siri voice was chosen: %s", v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

  }
  result = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC14HDSViewService44HomePodSetupSiriVoiceSelectionViewController_presenter);
  if (result)
  {
    v18 = result;
    v21[3] = &type metadata for VoiceOption;
    v21[4] = &off_1000C3EA8;
    v21[0] = v6;
    memset(&v20[8], 0, 40);
    v20[0] = 1;
    v19 = v6;
    sub_100011340((uint64_t)v21, (uint64_t)&v20[8], &qword_1000D6ED0);
    v22[0] = *(_OWORD *)v20;
    v22[1] = *(_OWORD *)&v20[16];
    v22[2] = *(_OWORD *)&v20[32];
    sub_10006B04C((char *)v22);

    swift_unknownObjectRelease(v18);
    return sub_100011384((uint64_t)v22);
  }
  return result;
}

uint64_t sub_100051CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;

  v3 = v2;
  if (qword_1000D5570 != -1)
    swift_once(&qword_1000D5570, sub_100050884);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10001118C(v4, (uint64_t)qword_1000D6DD0);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "Siri voice requests dismissal", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  result = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC14HDSViewService44HomePodSetupSiriVoiceSelectionViewController_presenter);
  if (result)
  {
    v12 = result;
    sub_10006AE04(5, v11);
    return swift_unknownObjectRelease(v12);
  }
  return result;
}

uint64_t sub_100051DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000111E8(v2, qword_1000D6EE8);
  v3 = sub_10001118C(v2, (uint64_t)qword_1000D6EE8);
  if (qword_1000D55C0 != -1)
    swift_once(&qword_1000D55C0, sub_100058090);
  v4 = sub_10001118C(v2, (uint64_t)qword_1000DB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

void sub_100051E5C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char *v11;
  objc_class *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSString v30;
  NSString v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  NSString v41;
  NSString v42;
  NSString v43;
  NSString v44;
  id v45;
  _QWORD v46[2];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50[24];
  objc_super v51;

  v1 = v0;
  v2 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v2);
  v4 = (char *)v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  v6 = *((_QWORD *)v5 - 1);
  v7 = __chkstk_darwin(v5);
  v9 = (_QWORD *)((char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  v11 = (char *)v46 - v10;
  v12 = (objc_class *)type metadata accessor for HomePodSetupPINEntryViewController(0);
  v51.receiver = v1;
  v51.super_class = v12;
  objc_msgSendSuper2(&v51, "viewDidLoad");
  v13 = (uint64_t)&v1[OBJC_IVAR____TtC14HDSViewService34HomePodSetupPINEntryViewController_viewModel];
  swift_beginAccess(&v1[OBJC_IVAR____TtC14HDSViewService34HomePodSetupPINEntryViewController_viewModel], v50, 0, 0);
  sub_100014824(v13, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10001486C((uint64_t)v4);
    if (qword_1000D5578 != -1)
      swift_once(&qword_1000D5578, sub_100051DCC);
    v15 = type metadata accessor for Logger(0, v14);
    v16 = sub_10001118C(v15, (uint64_t)qword_1000D6EE8);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "HomePodSetupPINEntry: viewDidLoad failed because viewModel not set.", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

  }
  else
  {
    sub_1000148AC((uint64_t)v4, (uint64_t)v11);
    if (qword_1000D5578 != -1)
      swift_once(&qword_1000D5578, sub_100051DCC);
    v21 = type metadata accessor for Logger(0, v20);
    sub_10001118C(v21, (uint64_t)qword_1000D6EE8);
    v22 = sub_1000111A4((uint64_t)v11, (uint64_t)v9);
    v23 = Logger.logObject.getter(v22);
    v25 = static os_log_type_t.default.getter(v23, v24);
    if (os_log_type_enabled(v23, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(12, -1);
      v47 = swift_slowAlloc(32, -1);
      v49 = v47;
      *(_DWORD *)v26 = 136315138;
      v46[1] = v26 + 4;
      v28 = *v9;
      v27 = v9[1];
      swift_bridgeObjectRetain(v27);
      v48 = sub_10003EF58(v28, v27, &v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49);
      swift_bridgeObjectRelease(v27);
      sub_1000148F0((uint64_t)v9);
      _os_log_impl((void *)&_mh_execute_header, v23, v25, "HomePodSetupPINEntry: viewDidLoad with title %s", v26, 0xCu);
      v29 = v47;
      swift_arrayDestroy(v47, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v29, -1, -1);
      swift_slowDealloc(v26, -1, -1);
    }
    else
    {
      sub_1000148F0((uint64_t)v9);
    }

    v30 = String._bridgeToObjectiveC()();
    objc_msgSend(v1, "setTitle:", v30);

    v31 = String._bridgeToObjectiveC()();
    objc_msgSend(v1, "setSubtitle:", v31);

    v32 = *(_QWORD *)&v11[v5[10]];
    v33 = swift_allocObject(&unk_1000C3BD0, 24, 7);
    swift_unknownObjectWeakInit(v33 + 16, v1);
    v34 = swift_bridgeObjectRetain(v32);
    sub_10007E6FC(v34, (uint64_t)sub_1000539B4, v33);
    swift_bridgeObjectRelease(v32);
    swift_release(v33);
    v35 = &v11[v5[9]];
    v37 = *(_QWORD *)v35;
    v36 = *((_QWORD *)v35 + 1);
    v38 = &v1[OBJC_IVAR____TtC14HDSViewService34HomePodSetupPINEntryViewController_activityIndicatorTitle];
    v39 = *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService34HomePodSetupPINEntryViewController_activityIndicatorTitle + 8];
    *(_QWORD *)v38 = v37;
    *((_QWORD *)v38 + 1) = v36;
    swift_bridgeObjectRetain(v36);
    swift_bridgeObjectRelease(v39);
    v40 = *(_QWORD *)&v11[v5[18]];
    objc_msgSend(v1, "setDismissalType:", v40);
    if ((v40 & 2) == 0 && *(_QWORD *)&v11[v5[19] + 8])
    {
      v41 = String._bridgeToObjectiveC()();
      v42 = String._bridgeToObjectiveC()();
      v43 = String._bridgeToObjectiveC()();
      v44 = String._bridgeToObjectiveC()();
      v45 = objc_msgSend(v1, "dismissalConfirmationActionWithTitle:message:confirmButtonTitle:cancelButtonTitle:", v41, v42, v43, v44);

      objc_msgSend(v1, "setDismissButtonAction:", v45);
    }
    sub_1000148F0((uint64_t)v11);
  }
}

void sub_100052358(unsigned __int8 *a1, uint64_t a2)
{
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t Strong;
  char *v20;
  uint64_t v21;
  NSString v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28[3];

  v3 = *a1;
  if (qword_1000D5578 != -1)
    swift_once(&qword_1000D5578, sub_100051DCC);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10001118C(v4, (uint64_t)qword_1000D6EE8);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v28[0] = v10;
    *(_DWORD *)v9 = 136315138;
    v11 = sub_10000E9EC(v3);
    v13 = v12;
    v27 = sub_10003EF58(v11, v12, v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, v28);
    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "HomePodSetupPINEntry: User tapped on button: %s", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }

  v14 = sub_10000E9EC(v3);
  v16 = v15;
  if (v14 == 0x7361506B61657073 && v15 == 0xED000065646F6373)
  {
    swift_bridgeObjectRelease(0xED000065646F6373);
  }
  else
  {
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, 0x7361506B61657073, 0xED000065646F6373, 0);
    swift_bridgeObjectRelease(v16);
    if ((v17 & 1) == 0)
      return;
  }
  v18 = a2 + 16;
  swift_beginAccess(v18, v28, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v18);
  if (Strong)
  {
    v20 = (char *)Strong;
    v21 = *(_QWORD *)(Strong
                    + OBJC_IVAR____TtC14HDSViewService34HomePodSetupPINEntryViewController_activityIndicatorTitle
                    + 8);
    swift_bridgeObjectRetain(v21);
    v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v21);
    objc_msgSend(v20, "showActivityIndicatorWithStatus:", v22);

    v23 = swift_unknownObjectWeakLoadStrong(&v20[OBJC_IVAR____TtC14HDSViewService34HomePodSetupPINEntryViewController_presenter]);
    if (v23)
    {
      v24 = v23;
      v25 = swift_allocObject(&unk_1000C3BF8, 24, 7);
      *(_QWORD *)(v25 + 16) = v20;
      v26 = v20;
      sub_100088C04((uint64_t)sub_1000539E0, v25);

      swift_release(v25);
      swift_unknownObjectRelease(v24);
    }
    else
    {

    }
  }
}

uint64_t sub_10005267C(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  objc_super v15;

  v2 = v1;
  v15.receiver = v2;
  v15.super_class = (Class)type metadata accessor for HomePodSetupPINEntryViewController(0);
  objc_msgSendSuper2(&v15, "viewDidAppear:", a1 & 1);
  if (qword_1000D5578 != -1)
    swift_once(&qword_1000D5578, sub_100051DCC);
  v5 = type metadata accessor for Logger(0, v4);
  v6 = sub_10001118C(v5, (uint64_t)qword_1000D6EE8);
  v7 = Logger.logObject.getter(v6);
  v9 = static os_log_type_t.default.getter(v7, v8);
  if (os_log_type_enabled(v7, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v9, "HomePodSetupPINEntry: viewDidAppear", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  result = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC14HDSViewService34HomePodSetupPINEntryViewController_presenter]);
  if (result)
  {
    v12 = result;
    v13 = swift_allocObject(&unk_1000C3B08, 24, 7);
    *(_QWORD *)(v13 + 16) = v2;
    v14 = v2;
    sub_1000887EC((uint64_t)sub_100053960, v13);
    swift_release(v13);
    return swift_unknownObjectRelease(v12);
  }
  return result;
}

uint64_t sub_1000527DC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  uint64_t v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  uint64_t v25;
  NSObject *v26;
  uint64_t v27;
  os_log_type_t v28;
  uint8_t *v29;
  void *v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  id v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD aBlock[5];
  uint64_t v54;

  v45 = a1;
  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v51 = *(_QWORD *)(v1 - 8);
  v52 = v1;
  __chkstk_darwin(v1);
  v50 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DispatchQoS(0);
  v48 = *(_QWORD *)(v3 - 8);
  v49 = v3;
  __chkstk_darwin(v3);
  v47 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchTimeInterval(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (void **)((char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v46 = type metadata accessor for DispatchTime(0);
  v9 = *(_QWORD *)(v46 - 8);
  v10 = __chkstk_darwin(v46);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v15 = (char *)&v45 - v14;
  if (qword_1000D5578 != -1)
    swift_once(&qword_1000D5578, sub_100051DCC);
  v16 = type metadata accessor for Logger(0, v13);
  v17 = sub_10001118C(v16, (uint64_t)qword_1000D6EE8);
  v18 = Logger.logObject.getter(v17);
  v20 = static os_log_type_t.default.getter(v18, v19);
  if (os_log_type_enabled(v18, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v20, "HomePodSetupPINEntry: viewDidAppear:Speaking of the Pincode with instructions Completed", v21, 2u);
    swift_slowDealloc(v21, -1, -1);
  }

  result = IsAppleInternalBuild(v22);
  if ((_DWORD)result)
  {
    if (qword_1000D5530 != -1)
      result = swift_once(&qword_1000D5530, sub_100036860);
    v24 = *(_QWORD *)(qword_1000DB5C8 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_forcedPasscode + 8);
    if ((v24 & 0x2000000000000000) != 0)
      v25 = HIBYTE(v24) & 0xF;
    else
      v25 = *(_QWORD *)(qword_1000DB5C8 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_forcedPasscode) & 0xFFFFFFFFFFFFLL;
    if (v25)
    {
      v26 = Logger.logObject.getter(result);
      v28 = static os_log_type_t.default.getter(v26, v27);
      if (os_log_type_enabled(v26, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v29 = 0;
        _os_log_impl((void *)&_mh_execute_header, v26, v28, "HomePodSetupPINEntry: viewDidAppear:Automatically enter the passcode.", v29, 2u);
        swift_slowDealloc(v29, -1, -1);
      }

      sub_100012BE8();
      v30 = (void *)static OS_dispatch_queue.main.getter();
      static DispatchTime.now()();
      *v8 = 2;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for DispatchTimeInterval.seconds(_:), v5);
      + infix(_:_:)(v12, v8);
      (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
      v31 = *(void (**)(char *, uint64_t))(v9 + 8);
      v32 = v46;
      v31(v12, v46);
      v33 = swift_allocObject(&unk_1000C3B30, 24, 7);
      v34 = v45;
      *(_QWORD *)(v33 + 16) = v45;
      aBlock[4] = sub_100053968;
      v54 = v33;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10007C6B4;
      aBlock[3] = &unk_1000C3B48;
      v35 = _Block_copy(aBlock);
      v36 = v54;
      v37 = v34;
      swift_release(v36);
      v38 = v47;
      static DispatchQoS.unspecified.getter(v39);
      aBlock[0] = _swiftEmptyArrayStorage;
      v40 = sub_100012C2C();
      v41 = sub_10000D604((uint64_t *)&unk_1000D7B60);
      v42 = sub_100012C74();
      v43 = v50;
      v44 = v52;
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v41, v42, v52, v40);
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v15, v38, v43, v35);
      _Block_release(v35);

      (*(void (**)(char *, uint64_t))(v51 + 8))(v43, v44);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v38, v49);
      return ((uint64_t (*)(char *, uint64_t))v31)(v15, v32);
    }
  }
  return result;
}

uint64_t sub_100052C30(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  NSString v19;
  void *v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD aBlock[5];
  uint64_t v44;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v41 = *(_QWORD *)(v2 - 8);
  v42 = v2;
  __chkstk_darwin(v2);
  v40 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchTimeInterval(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (uint64_t *)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v37 = type metadata accessor for DispatchTime(0);
  v11 = *(_QWORD *)(v37 - 8);
  v12 = __chkstk_darwin(v37);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v35 - v15;
  v36 = a1;
  v17 = objc_msgSend(a1, "passcodeEntryView");
  if (qword_1000D5530 != -1)
    swift_once(&qword_1000D5530, sub_100036860);
  v18 = *(_QWORD *)(qword_1000DB5C8 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_forcedPasscode + 8);
  swift_bridgeObjectRetain(v18);
  v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v18);
  objc_msgSend(v17, "setText:", v19);

  sub_100012BE8();
  v20 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  *v10 = 2;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for DispatchTimeInterval.seconds(_:), v7);
  + infix(_:_:)(v14, v10);
  (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
  v21 = *(void (**)(char *, uint64_t))(v11 + 8);
  v22 = v37;
  v21(v14, v37);
  v23 = swift_allocObject(&unk_1000C3B80, 24, 7);
  v24 = v36;
  *(_QWORD *)(v23 + 16) = v36;
  aBlock[4] = sub_100053988;
  v44 = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10007C6B4;
  aBlock[3] = &unk_1000C3B98;
  v25 = _Block_copy(aBlock);
  v26 = v44;
  v27 = v24;
  swift_release(v26);
  static DispatchQoS.unspecified.getter(v28);
  aBlock[0] = _swiftEmptyArrayStorage;
  v29 = sub_100012C2C();
  v30 = sub_10000D604((uint64_t *)&unk_1000D7B60);
  v31 = sub_100012C74();
  v32 = v40;
  v33 = v42;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v30, v31, v42, v29);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v16, v6, v32, v25);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v41 + 8))(v32, v33);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v39);
  return ((uint64_t (*)(char *, uint64_t))v21)(v16, v22);
}

void sub_100052FA4(void *a1)
{
  id v2;

  v2 = objc_msgSend(a1, "passcodeEntryView");
  objc_msgSend(a1, "didCompleteTextEntry:", v2);

}

uint64_t sub_100053038(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  os_log_type_t v15;
  uint8_t *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD aBlock[5];
  uint64_t v28;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D5578 != -1)
    swift_once(&qword_1000D5578, sub_100051DCC);
  v11 = type metadata accessor for Logger(0, v8);
  v12 = sub_10001118C(v11, (uint64_t)qword_1000D6EE8);
  v13 = Logger.logObject.getter(v12);
  v15 = static os_log_type_t.default.getter(v13, v14);
  if (os_log_type_enabled(v13, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v15, "HomePodSetupPINEntry: Speaking of the Pincode Completed", v16, 2u);
    swift_slowDealloc(v16, -1, -1);
  }

  sub_100012BE8();
  v17 = (void *)static OS_dispatch_queue.main.getter();
  v18 = swift_allocObject(&unk_1000C3C20, 24, 7);
  *(_QWORD *)(v18 + 16) = a1;
  aBlock[4] = sub_1000539E8;
  v28 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10007C6B4;
  aBlock[3] = &unk_1000C3C38;
  v19 = _Block_copy(aBlock);
  v20 = v28;
  v21 = a1;
  swift_release(v20);
  static DispatchQoS.unspecified.getter(v22);
  aBlock[0] = _swiftEmptyArrayStorage;
  v23 = sub_100012C2C();
  v24 = sub_10000D604((uint64_t *)&unk_1000D7B60);
  v25 = sub_100012C74();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v24, v25, v2, v23);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v5, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1000532AC(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  NSString v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t Strong;
  uint64_t v17;
  _QWORD *v18;
  _BYTE v20[48];
  _QWORD v21[5];
  _OWORD v22[3];

  v3 = v2;
  if (qword_1000D5578 != -1)
    swift_once(&qword_1000D5578, sub_100051DCC);
  v5 = type metadata accessor for Logger(0, a2);
  v6 = sub_10001118C(v5, (uint64_t)qword_1000D6EE8);
  v7 = Logger.logObject.getter(v6);
  v9 = static os_log_type_t.default.getter(v7, v8);
  if (os_log_type_enabled(v7, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v9, "HomePodSetupPINEntry: didCompleteTextEntry called", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "showActivityIndicatorWithStatus:", v11);

  v12 = objc_msgSend(a1, "text");
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  Strong = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC14HDSViewService34HomePodSetupPINEntryViewController_presenter]);
  if (!Strong)
    return swift_bridgeObjectRelease(v15);
  v17 = Strong;
  v21[3] = &type metadata for SimpleOption;
  v21[4] = &off_1000C2A58;
  v18 = (_QWORD *)swift_allocObject(&unk_1000C3AE0, 64, 7);
  *(_QWORD *)&v20[40] = 0;
  v21[0] = v18;
  v18[2] = 0x7972746E456E6970;
  v18[3] = 0xE800000000000000;
  v18[4] = v13;
  v18[5] = v15;
  v18[6] = v13;
  v18[7] = v15;
  memset(&v20[8], 0, 32);
  v20[0] = 3;
  swift_bridgeObjectRetain(v15);
  sub_100011340((uint64_t)v21, (uint64_t)&v20[8], &qword_1000D6ED0);
  v22[0] = *(_OWORD *)v20;
  v22[1] = *(_OWORD *)&v20[16];
  v22[2] = *(_OWORD *)&v20[32];
  sub_10006B04C((char *)v22);
  swift_unknownObjectRelease(v17);
  return sub_100011384((uint64_t)v22);
}

id sub_1000535C4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupPINEntryViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100053644()
{
  return type metadata accessor for HomePodSetupPINEntryViewController(0);
}

uint64_t type metadata accessor for HomePodSetupPINEntryViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1000D6F38;
  if (!qword_1000D6F38)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HomePodSetupPINEntryViewController);
  return result;
}

void sub_100053688(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_100099E78;
  v4[1] = &unk_100099E90;
  sub_100010910(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
  }
}

uint64_t sub_100053708(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService34HomePodSetupPINEntryViewController_presenter + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease(a1);
}

void sub_100053740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100053748(a3);
}

void sub_100053748(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  NSString v17;
  _BYTE v19[24];

  v2 = v1;
  v4 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v4);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_1000D5578 != -1)
    swift_once(&qword_1000D5578, sub_100051DCC);
  v8 = type metadata accessor for Logger(0, v5);
  v9 = sub_10001118C(v8, (uint64_t)qword_1000D6EE8);
  v10 = Logger.logObject.getter(v9);
  v12 = static os_log_type_t.default.getter(v10, v11);
  if (os_log_type_enabled(v10, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v12, "HomePodSetupPINEntry: presenter:didUpdate viewModel", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }

  sub_1000111A4(a1, (uint64_t)v7);
  v14 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v7, 0, 1, v14);
  v15 = (uint64_t)&v2[OBJC_IVAR____TtC14HDSViewService34HomePodSetupPINEntryViewController_viewModel];
  swift_beginAccess(&v2[OBJC_IVAR____TtC14HDSViewService34HomePodSetupPINEntryViewController_viewModel], v19, 33, 0);
  sub_100011340((uint64_t)v7, v15, (uint64_t *)&unk_1000D6EC0);
  swift_endAccess(v19);
  if (objc_msgSend(v2, "isViewLoaded"))
  {
    v16 = String._bridgeToObjectiveC()();
    objc_msgSend(v2, "setTitle:", v16);

    v17 = String._bridgeToObjectiveC()();
    objc_msgSend(v2, "setSubtitle:", v17);

  }
}

uint64_t sub_10005392C()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100053960()
{
  uint64_t v0;

  return sub_1000527DC(*(void **)(v0 + 16));
}

uint64_t sub_100053968()
{
  uint64_t v0;

  return sub_100052C30(*(void **)(v0 + 16));
}

uint64_t sub_100053970(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100053980(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100053988()
{
  uint64_t v0;

  sub_100052FA4(*(void **)(v0 + 16));
}

uint64_t sub_100053990()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1000539B4(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_100052358(a1, v1);
}

uint64_t sub_1000539BC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000539E0()
{
  uint64_t v0;

  return sub_100053038(*(void **)(v0 + 16));
}

id sub_1000539E8()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "hideActivityIndicator");
}

uint64_t sub_100053A18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000111E8(v2, qword_1000D6F48);
  v3 = sub_10001118C(v2, (uint64_t)qword_1000D6F48);
  if (qword_1000D55C0 != -1)
    swift_once(&qword_1000D55C0, sub_100058090);
  v4 = sub_10001118C(v2, (uint64_t)qword_1000DB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

void sub_100053AA8()
{
  qword_1000DB800 = 0x4028000000000000;
}

void sub_100053AB8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char *v11;
  objc_class *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  os_log_type_t v25;
  _BOOL4 v26;
  uint8_t *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  Class isa;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char v57[24];
  objc_super v58;

  v1 = v0;
  v2 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v2);
  v4 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for HomePodSetupViewModel(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (uint64_t *)((char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  v11 = (char *)&v54 - v10;
  v12 = (objc_class *)type metadata accessor for HomePodSetupFeatureListViewController(0);
  v58.receiver = v1;
  v58.super_class = v12;
  objc_msgSendSuper2(&v58, "viewDidLoad");
  v13 = (uint64_t)&v1[OBJC_IVAR____TtC14HDSViewService37HomePodSetupFeatureListViewController_viewModel];
  swift_beginAccess(&v1[OBJC_IVAR____TtC14HDSViewService37HomePodSetupFeatureListViewController_viewModel], v57, 0, 0);
  sub_100014824(v13, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10001486C((uint64_t)v4);
    if (qword_1000D5580 != -1)
      swift_once(&qword_1000D5580, sub_100053A18);
    v15 = type metadata accessor for Logger(0, v14);
    v16 = sub_10001118C(v15, (uint64_t)qword_1000D6F48);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "HomePodSetupFeatureListViewController: viewDidLoad failed because viewModel not set.", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

  }
  else
  {
    sub_1000148AC((uint64_t)v4, (uint64_t)v11);
    if (qword_1000D5580 != -1)
      swift_once(&qword_1000D5580, sub_100053A18);
    v21 = type metadata accessor for Logger(0, v20);
    sub_10001118C(v21, (uint64_t)qword_1000D6F48);
    v22 = sub_1000111A4((uint64_t)v11, (uint64_t)v9);
    v23 = Logger.logObject.getter(v22);
    v25 = static os_log_type_t.default.getter(v23, v24);
    v26 = os_log_type_enabled(v23, v25);
    v54 = v11;
    if (v26)
    {
      v27 = (uint8_t *)swift_slowAlloc(12, -1);
      v28 = swift_slowAlloc(32, -1);
      v56 = v28;
      *(_DWORD *)v27 = 136315138;
      v30 = *v9;
      v29 = v9[1];
      swift_bridgeObjectRetain(v29);
      v55 = sub_10003EF58(v30, v29, &v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56);
      swift_bridgeObjectRelease(v29);
      sub_1000148F0((uint64_t)v9);
      _os_log_impl((void *)&_mh_execute_header, v23, v25, "HomePodSetupFeatureListViewController: viewDidLoad with title %s", v27, 0xCu);
      swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v27, -1, -1);
    }
    else
    {
      sub_1000148F0((uint64_t)v9);
    }

    v31 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService37HomePodSetupFeatureListViewController_stackView];
    objc_msgSend(v31, "setAxis:", 1);
    objc_msgSend(v31, "setAlignment:", 3);
    objc_msgSend(v31, "setDistribution:", 3);
    if (qword_1000D5588 != -1)
      swift_once(&qword_1000D5588, sub_100053AA8);
    objc_msgSend(v31, "setSpacing:", *(double *)&qword_1000DB800, v54);
    objc_msgSend(v31, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v32 = objc_msgSend(v1, "contentView");
    objc_msgSend(v32, "addSubview:", v31);

    v33 = objc_msgSend(v1, "contentView");
    v34 = objc_msgSend(v33, "mainContentGuide");

    v35 = (void *)objc_opt_self(NSLayoutConstraint);
    v36 = sub_10000D604(&qword_1000D6EE0);
    v37 = swift_allocObject(v36, 64, 7);
    *(_OWORD *)(v37 + 16) = xmmword_100099580;
    v38 = objc_msgSend(v31, "topAnchor");
    v39 = objc_msgSend(v34, "topAnchor");
    v40 = objc_msgSend(v38, "constraintEqualToAnchor:", v39);

    *(_QWORD *)(v37 + 32) = v40;
    v41 = objc_msgSend(v31, "bottomAnchor");
    v42 = objc_msgSend(v34, "bottomAnchor");
    v43 = objc_msgSend(v41, "constraintEqualToAnchor:constant:", v42, -*(double *)&qword_1000DB800);

    *(_QWORD *)(v37 + 40) = v43;
    v44 = objc_msgSend(v31, "leadingAnchor");
    v45 = objc_msgSend(v34, "leadingAnchor");
    v46 = objc_msgSend(v44, "constraintEqualToAnchor:", v45);

    *(_QWORD *)(v37 + 48) = v46;
    v47 = objc_msgSend(v31, "trailingAnchor");
    v48 = objc_msgSend(v34, "trailingAnchor");
    v49 = objc_msgSend(v47, "constraintEqualToAnchor:", v48);

    *(_QWORD *)(v37 + 56) = v49;
    v56 = v37;
    specialized Array._endMutation()(v50);
    v51 = v56;
    sub_100014934();
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v51);
    objc_msgSend(v35, "activateConstraints:", isa);

    v53 = (uint64_t)v54;
    sub_1000541EC((uint64_t)v54);

    sub_1000148F0(v53);
  }
}

void sub_1000541EC(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  NSString v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30;
  id v31;
  id v32;
  char *v33;
  _BYTE *v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  Class isa;
  void *v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  char *v52;
  void *v53;
  char *v54;
  uint64_t *v55;
  id v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  _BYTE *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  id v84;
  _QWORD aBlock[5];
  uint64_t v86;
  char v87[32];

  v3 = type metadata accessor for HomePodSetupViewModel(0);
  __chkstk_darwin(v3);
  v5 = (uint64_t)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setTitle:", v6);

  v7 = String._bridgeToObjectiveC()();
  v75 = v1;
  objc_msgSend(v1, "setSubtitle:", v7);

  v8 = *(int *)(v3 + 60);
  v69 = a1;
  v9 = *(_QWORD *)(a1 + v8);
  if ((unint64_t)v9 >> 62)
    goto LABEL_37;
  v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v9);
  for (; v10; v10 = _CocoaArrayWrapper.endIndex.getter(v61))
  {
    v11 = (uint64_t *)&v75[OBJC_IVAR____TtC14HDSViewService37HomePodSetupFeatureListViewController_features];
    v74 = OBJC_IVAR____TtC14HDSViewService37HomePodSetupFeatureListViewController_stackView;
    v73 = OBJC_IVAR____TtC14HDSViewService37HomePodSetupFeatureListViewController_lastFeatureView;
    v81 = v9 & 0xC000000000000001;
    swift_beginAccess(&v75[OBJC_IVAR____TtC14HDSViewService37HomePodSetupFeatureListViewController_features], v87, 0, 0);
    v12 = 0;
    v71 = v9 & 0xFFFFFFFFFFFFFF8;
    v70 = v9 + 32;
    v72 = xmmword_100099270;
    v79 = v5;
    v80 = v3;
    v77 = v10;
    v78 = v9;
    v76 = v11;
    while (1)
    {
      if (v81)
      {
        v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v9);
      }
      else
      {
        if (v12 >= *(_QWORD *)(v71 + 16))
          goto LABEL_36;
        v14 = *(id *)(v70 + 8 * v12);
      }
      v84 = v14;
      v15 = __OFADD__(v12, 1);
      v16 = v12 + 1;
      if (v15)
        break;
      v82 = v16;
      v17 = *v11;
      if ((unint64_t)*v11 >> 62)
      {
        if (v17 < 0)
          v60 = *v11;
        else
          v60 = v17 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n(*v11, 2);
        v3 = _CocoaArrayWrapper.endIndex.getter(v60);
        if (v3)
        {
LABEL_14:
          v83 = v17 & 0xC000000000000001;
          v5 = 4;
          while (1)
          {
            v9 = v5 - 4;
            v18 = v83
                ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, v17)
                : *(id *)(v17 + 8 * v5);
            v19 = v18;
            v20 = v5 - 3;
            if (__OFADD__(v9, 1))
              break;
            v21 = objc_msgSend(v18, "title");
            v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
            v24 = v23;

            v25 = objc_msgSend(v84, "title");
            v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
            v28 = v27;

            if (v22 == v26 && v24 == v28)
            {
              swift_bridgeObjectRelease_n(v17, 2);

LABEL_5:
              v13 = v77;
              swift_bridgeObjectRelease_n(v24, 2);
              v5 = v79;
              v3 = v80;
              v9 = v78;
              v11 = v76;
              goto LABEL_6;
            }
            v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v26, v28, 0);

            swift_bridgeObjectRelease(v24);
            swift_bridgeObjectRelease(v28);
            if ((v30 & 1) != 0)
            {
              v24 = v17;
              goto LABEL_5;
            }
            ++v5;
            if (v20 == v3)
              goto LABEL_25;
          }
          __break(1u);
          break;
        }
      }
      else
      {
        v3 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n(*v11, 2);
        if (v3)
          goto LABEL_14;
      }
LABEL_25:
      swift_bridgeObjectRelease_n(v17, 2);
      v31 = objc_allocWithZone((Class)type metadata accessor for HomePodSetupFeatureView());
      v32 = v84;
      v33 = sub_1000149A8(v32);
      objc_msgSend(v33, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v34 = v75;
      v35 = *(void **)&v75[v74];
      objc_msgSend(v35, "addArrangedSubview:", v33);
      v36 = (void *)objc_opt_self(NSLayoutConstraint);
      v37 = sub_10000D604(&qword_1000D6EE0);
      v38 = swift_allocObject(v37, 48, 7);
      *(_OWORD *)(v38 + 16) = v72;
      v39 = objc_msgSend(v33, "leadingAnchor");
      v40 = objc_msgSend(v35, "leadingAnchor");
      v41 = objc_msgSend(v39, "constraintEqualToAnchor:", v40);

      *(_QWORD *)(v38 + 32) = v41;
      v42 = objc_msgSend(v33, "trailingAnchor");
      v43 = objc_msgSend(v35, "trailingAnchor");
      v44 = objc_msgSend(v42, "constraintEqualToAnchor:", v43);

      *(_QWORD *)(v38 + 40) = v44;
      aBlock[0] = v38;
      specialized Array._endMutation()(v45);
      v46 = aBlock[0];
      sub_100014934();
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v46);
      objc_msgSend(v36, "activateConstraints:", isa);

      objc_msgSend(v33, "setAlpha:", 0.0);
      v48 = (void *)objc_opt_self(UIView);
      v49 = swift_allocObject(&unk_1000C3CA0, 24, 7);
      *(_QWORD *)(v49 + 16) = v33;
      aBlock[4] = sub_100054EE4;
      v86 = v49;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10007C6B4;
      aBlock[3] = &unk_1000C3CB8;
      v50 = _Block_copy(aBlock);
      v51 = v86;
      v52 = v33;
      swift_release(v51);
      objc_msgSend(v48, "animateWithDuration:animations:", v50, 0.5);
      _Block_release(v50);
      v53 = *(void **)&v34[v73];
      *(_QWORD *)&v34[v73] = v52;
      v54 = v52;

      v55 = v76;
      swift_beginAccess(v76, aBlock, 33, 0);
      v56 = v32;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v56);
      v58 = *(_QWORD *)((*v55 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v57 = *(_QWORD *)((*v55 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v58 >= v57 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v57 > 1, v58 + 1, 1);
      v59 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v58, v56);
      specialized Array._endMutation()(v59);
      swift_endAccess(aBlock);

      v5 = v79;
      v3 = v80;
      v13 = v77;
      v9 = v78;
      v11 = v55;
LABEL_6:
      v12 = v82;

      if (v12 == v13)
        goto LABEL_41;
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    if (v9 < 0)
      v61 = v9;
    else
      v61 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
  }
LABEL_41:
  swift_bridgeObjectRelease(v9);
  v62 = OBJC_IVAR____TtC14HDSViewService37HomePodSetupFeatureListViewController_buttonsAdded;
  v63 = v75[OBJC_IVAR____TtC14HDSViewService37HomePodSetupFeatureListViewController_buttonsAdded];
  sub_1000111A4(v69, v5);
  if ((v63 & 1) != 0)
  {
    sub_1000148F0(v5);
  }
  else
  {
    v64 = *(_QWORD *)(*(_QWORD *)(v5 + *(int *)(v3 + 40)) + 16);
    sub_1000148F0(v5);
    if (v64)
    {
      v65 = v75;
      v75[v62] = 1;
      v66 = *(_QWORD *)(v69 + *(int *)(v3 + 40));
      v67 = swift_allocObject(&unk_1000C3CF0, 24, 7);
      swift_unknownObjectWeakInit(v67 + 16, v65);
      sub_10007E6FC(v66, (uint64_t)sub_100054F34, v67);
      swift_release(v67);
    }
  }
}

void sub_1000548F8(unsigned __int8 *a1, uint64_t a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t Strong;
  void *v15;
  uint64_t v16;
  _BYTE v17[48];
  _OWORD v18[2];
  uint64_t v19;
  _OWORD v20[3];
  _BYTE v21[24];

  v2 = *a1;
  v3 = a2 + 16;
  if (qword_1000D5580 != -1)
    swift_once(&qword_1000D5580, sub_100053A18);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10001118C(v4, (uint64_t)qword_1000D6F48);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v20[0] = v10;
    *(_DWORD *)v9 = 136315138;
    v11 = sub_10000E9EC(v2);
    v13 = v12;
    *(_QWORD *)v17 = sub_10003EF58(v11, v12, (uint64_t *)v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v17, &v17[8]);
    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "HomePodSetupFeatureListViewController: User tapped on button: %s", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }

  swift_beginAccess(v3, v21, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v15 = (void *)Strong;
    v16 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC14HDSViewService37HomePodSetupFeatureListViewController_presenter);

    if (v16)
    {
      v19 = 0;
      memset(v18, 0, sizeof(v18));
      memset(&v17[8], 0, 40);
      v17[0] = v2;
      sub_100011340((uint64_t)v18, (uint64_t)&v17[8], &qword_1000D6ED0);
      v20[0] = *(_OWORD *)v17;
      v20[1] = *(_OWORD *)&v17[16];
      v20[2] = *(_OWORD *)&v17[32];
      sub_10006B04C((char *)v20);
      swift_unknownObjectRelease(v16);
      sub_100011384((uint64_t)v20);
    }
  }
}

id sub_100054B54()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupFeatureListViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100054BF0()
{
  return type metadata accessor for HomePodSetupFeatureListViewController(0);
}

uint64_t type metadata accessor for HomePodSetupFeatureListViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1000D6FA8;
  if (!qword_1000D6FA8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HomePodSetupFeatureListViewController);
  return result;
}

void sub_100054C34(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = &unk_100099EE8;
  v4[1] = &unk_100099F00;
  v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[3] = &unk_100099F18;
  sub_100010910(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
  }
}

uint64_t sub_100054CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupFeatureListViewController_presenter + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease(a1);
}

void sub_100054D10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100054D18(a3);
}

void sub_100054D18(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[24];

  v2 = v1;
  v4 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v4);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_1000D5580 != -1)
    swift_once(&qword_1000D5580, sub_100053A18);
  v8 = type metadata accessor for Logger(0, v5);
  v9 = sub_10001118C(v8, (uint64_t)qword_1000D6F48);
  v10 = Logger.logObject.getter(v9);
  v12 = static os_log_type_t.default.getter(v10, v11);
  if (os_log_type_enabled(v10, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v12, "HomePodSetupFeatureListViewController: presenter:didUpdate viewModel", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }

  sub_1000111A4(a1, (uint64_t)v7);
  v14 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v7, 0, 1, v14);
  v15 = (uint64_t)&v2[OBJC_IVAR____TtC14HDSViewService37HomePodSetupFeatureListViewController_viewModel];
  swift_beginAccess(&v2[OBJC_IVAR____TtC14HDSViewService37HomePodSetupFeatureListViewController_viewModel], v17, 33, 0);
  sub_100011340((uint64_t)v7, v15, (uint64_t *)&unk_1000D6EC0);
  swift_endAccess(v17);
  if (objc_msgSend(v2, "isViewLoaded"))
    sub_1000541EC(a1);
}

uint64_t sub_100054EC0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100054EE4()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setAlpha:", 1.0);
}

uint64_t sub_100054EF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100054F08(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100054F10()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100054F34(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_1000548F8(a1, v1);
}

id sub_100054F3C(uint64_t a1)
{
  _BYTE *v1;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  _BYTE *v8;
  objc_super v10;

  v3 = &v1[OBJC_IVAR____TtC14HDSViewService37HomePodSetupFeatureListViewController_presenter];
  *((_QWORD *)v3 + 1) = 0;
  swift_unknownObjectWeakInit(v3, 0);
  v1[OBJC_IVAR____TtC14HDSViewService37HomePodSetupFeatureListViewController_buttonsAdded] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService37HomePodSetupFeatureListViewController_features] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService37HomePodSetupFeatureListViewController_lastFeatureView] = 0;
  v4 = &v1[OBJC_IVAR____TtC14HDSViewService37HomePodSetupFeatureListViewController_viewModel];
  v5 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = OBJC_IVAR____TtC14HDSViewService37HomePodSetupFeatureListViewController_stackView;
  v7 = objc_allocWithZone((Class)UIStackView);
  v8 = v1;
  *(_QWORD *)&v1[v6] = objc_msgSend(v7, "init");

  v10.receiver = v8;
  v10.super_class = (Class)type metadata accessor for HomePodSetupFeatureListViewController(0);
  return objc_msgSendSuper2(&v10, "initWithContentView:", a1);
}

uint64_t sub_10005503C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000111E8(v2, qword_1000D6FC0);
  v3 = sub_10001118C(v2, (uint64_t)qword_1000D6FC0);
  if (qword_1000D55C0 != -1)
    swift_once(&qword_1000D55C0, sub_100058090);
  v4 = sub_10001118C(v2, (uint64_t)qword_1000DB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

id sub_1000550CC(void *a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  objc_super v11;

  *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService35HomePodSetupAMSUpsellViewController_presenter + 8] = 0;
  swift_unknownObjectWeakInit();
  v3 = &v1[OBJC_IVAR____TtC14HDSViewService35HomePodSetupAMSUpsellViewController_viewModel];
  v4 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService35HomePodSetupAMSUpsellViewController_vcAppleMusic] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService35HomePodSetupAMSUpsellViewController_marketingItem] = a1;
  v5 = objc_allocWithZone((Class)PRXCardContentView);
  v6 = a1;
  v7 = objc_msgSend(v5, "init");
  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for HomePodSetupAMSUpsellViewController(0);
  v8 = objc_msgSendSuper2(&v11, "initWithContentView:", v7);

  v9 = v8;
  sub_100055608();

  return v9;
}

void sub_1000551C4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char *v11;
  objc_class *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36[24];
  objc_super v37;

  v1 = v0;
  v2 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v2);
  v4 = (char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for HomePodSetupViewModel(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (_QWORD *)((char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  v11 = (char *)v32 - v10;
  v12 = (objc_class *)type metadata accessor for HomePodSetupAMSUpsellViewController(0);
  v37.receiver = v1;
  v37.super_class = v12;
  objc_msgSendSuper2(&v37, "viewDidLoad");
  v13 = (uint64_t)&v1[OBJC_IVAR____TtC14HDSViewService35HomePodSetupAMSUpsellViewController_viewModel];
  swift_beginAccess(&v1[OBJC_IVAR____TtC14HDSViewService35HomePodSetupAMSUpsellViewController_viewModel], v36, 0, 0);
  sub_100014824(v13, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10001486C((uint64_t)v4);
    if (qword_1000D5590 != -1)
      swift_once(&qword_1000D5590, sub_10005503C);
    v15 = type metadata accessor for Logger(0, v14);
    v16 = sub_10001118C(v15, (uint64_t)qword_1000D6FC0);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "HomePodSetupAMSUpsellViewController: viewDidLoad failed because viewModel not set.", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

  }
  else
  {
    sub_1000148AC((uint64_t)v4, (uint64_t)v11);
    if (qword_1000D5590 != -1)
      swift_once(&qword_1000D5590, sub_10005503C);
    v21 = type metadata accessor for Logger(0, v20);
    sub_10001118C(v21, (uint64_t)qword_1000D6FC0);
    v22 = sub_1000111A4((uint64_t)v11, (uint64_t)v9);
    v23 = Logger.logObject.getter(v22);
    v25 = static os_log_type_t.default.getter(v23, v24);
    if (os_log_type_enabled(v23, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(12, -1);
      v33 = swift_slowAlloc(32, -1);
      v35 = v33;
      *(_DWORD *)v26 = 136315138;
      v32[1] = v26 + 4;
      v28 = *v9;
      v27 = v9[1];
      swift_bridgeObjectRetain(v27);
      v34 = sub_10003EF58(v28, v27, &v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35);
      swift_bridgeObjectRelease(v27);
      sub_1000148F0((uint64_t)v9);
      _os_log_impl((void *)&_mh_execute_header, v23, v25, "HomePodSetupAMSUpsellViewController: viewDidLoad with title %s", v26, 0xCu);
      v29 = v33;
      swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v29, -1, -1);
      swift_slowDealloc(v26, -1, -1);
    }
    else
    {
      sub_1000148F0((uint64_t)v9);
    }

    v30 = objc_msgSend(v1, "setDismissalType:", *(_QWORD *)&v11[*(int *)(v5 + 72)]);
    sub_100055B98((uint64_t)v30, v31);
    sub_1000148F0((uint64_t)v11);
  }
}

void sub_100055608()
{
  char *v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  char *v14;
  _QWORD v15[5];
  uint64_t v16;

  v1 = sub_100035CA4(0, &qword_1000D7088, AMSUIMarketingItemViewController_ptr);
  v2 = objc_msgSend((id)swift_getObjCClassFromMetadata(v1), "createBagForSubProfile");
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(objc_allocWithZone((Class)AMSUIMarketingItemViewController), "initWithMarketingItem:bag:", *(_QWORD *)&v0[OBJC_IVAR____TtC14HDSViewService35HomePodSetupAMSUpsellViewController_marketingItem], v2);
    objc_msgSend(v4, "setDelegate:", v0);
    objc_msgSend(v4, "setAnonymousMetrics:", 1);
    v5 = (void *)objc_opt_self(ACAccountStore);
    v6 = v4;
    v7 = objc_msgSend(v5, "ams_sharedAccountStore");
    v8 = objc_msgSend(v7, "ams_activeiTunesAccount");

    objc_msgSend(v6, "setAccount:", v8);
    v9 = objc_msgSend(v6, "preload");
    v10 = swift_allocObject(&unk_1000C3D48, 32, 7);
    *(_QWORD *)(v10 + 16) = v0;
    *(_QWORD *)(v10 + 24) = v6;
    v15[4] = sub_100056894;
    v16 = v10;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 1107296256;
    v15[2] = sub_10005B85C;
    v15[3] = &unk_1000C3D60;
    v11 = _Block_copy(v15);
    v12 = v16;
    v13 = v6;
    v14 = v0;
    swift_release(v12);
    objc_msgSend(v9, "addFinishBlock:", v11);
    _Block_release(v11);

  }
  else
  {
    __break(1u);
  }
}

void sub_1000557EC(uint64_t a1, uint64_t a2, char *a3, void *a4)
{
  uint32_t *p_cb;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  id v26;
  uint64_t v27;
  NSObject *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;

  p_cb = &OBJC_PROTOCOL___RecognizerClassifierOutput.cb;
  if (a2)
  {
    swift_errorRetain(a2);
    if (qword_1000D5590 != -1)
      swift_once(&qword_1000D5590, sub_10005503C);
    v8 = type metadata accessor for Logger(0, v7);
    sub_10001118C(v8, (uint64_t)qword_1000D6FC0);
    swift_errorRetain(a2);
    v9 = swift_errorRetain(a2);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v13 = swift_slowAlloc(32, -1);
      v32 = a2;
      v33 = v13;
      *(_DWORD *)v12 = 136315138;
      swift_errorRetain(a2);
      v14 = sub_10000D604((uint64_t *)&unk_1000D7090);
      v15 = String.init<A>(describing:)(&v32, v14);
      v17 = v16;
      v32 = sub_10003EF58(v15, v16, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33);
      swift_bridgeObjectRelease(v17);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "HomePodSetupAMSUpsellViewController: preload error: %s", v12, 0xCu);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      v18 = v13;
      p_cb = (_DWORD *)(&OBJC_PROTOCOL___RecognizerClassifierOutput + 64);
      swift_slowDealloc(v18, -1, -1);
      swift_slowDealloc(v12, -1, -1);

      swift_errorRelease(a2);
      goto LABEL_13;
    }
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    swift_errorRelease(a2);
  }
  else
  {
    if (qword_1000D5590 != -1)
      swift_once(&qword_1000D5590, sub_10005503C);
    v21 = type metadata accessor for Logger(0, a2);
    v22 = sub_10001118C(v21, (uint64_t)qword_1000D6FC0);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "HomePodSetupAMSUpsellViewController: preload success", v25, 2u);
      swift_slowDealloc(v25, -1, -1);
    }

    v10 = *(NSObject **)&a3[OBJC_IVAR____TtC14HDSViewService35HomePodSetupAMSUpsellViewController_vcAppleMusic];
    *(_QWORD *)&a3[OBJC_IVAR____TtC14HDSViewService35HomePodSetupAMSUpsellViewController_vcAppleMusic] = a4;
    v26 = a4;
  }

LABEL_13:
  if (*((_QWORD *)p_cb + 178) != -1)
    swift_once(&qword_1000D5590, sub_10005503C);
  v27 = type metadata accessor for Logger(0, v19);
  sub_10001118C(v27, (uint64_t)qword_1000D6FC0);
  v28 = a3;
  v29 = Logger.logObject.getter(v28);
  v30 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v31 = 67109120;
    LODWORD(v33) = *(Class *)((char *)&v28->isa
                            + OBJC_IVAR____TtC14HDSViewService35HomePodSetupAMSUpsellViewController_vcAppleMusic) != 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, (char *)&v33 + 4);

    _os_log_impl((void *)&_mh_execute_header, v29, v30, "HomePodSetupAMSUpsellViewController: view controller preload complete: %{BOOL}d", v31, 8u);
    swift_slowDealloc(v31, -1, -1);
  }
  else
  {

    v29 = v28;
  }

}

void sub_100055B98(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  double v19;
  double v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  Class isa;
  os_log_type_t v44;
  uint8_t *v45;
  NSObject *v46;

  v3 = v2;
  if (qword_1000D5590 != -1)
    swift_once(&qword_1000D5590, sub_10005503C);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10001118C(v4, (uint64_t)qword_1000D6FC0);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "HomePodSetupAMSUpsellViewController: AppleMusic show StoreKit view\n", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  v11 = *(void **)&v2[OBJC_IVAR____TtC14HDSViewService35HomePodSetupAMSUpsellViewController_vcAppleMusic];
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend(v12, "view");
    objc_msgSend(v2, "addChildViewController:", v12);
    objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v14 = objc_msgSend(v2, "contentView");
    objc_msgSend(v14, "addSubview:", v13);

    v15 = objc_msgSend(v3, "contentView");
    v16 = objc_msgSend(v15, "cardStyle");

    v17 = objc_msgSend(v3, "traitCollection");
    v18 = objc_msgSend(v17, "prx_cardSizeClass");

    PRXCardPreferredSize(v16, v18);
    v20 = v19;
    v21 = objc_msgSend(v3, "contentView");
    v46 = objc_msgSend(v21, "mainContentGuide");

    v22 = (void *)objc_opt_self(NSLayoutConstraint);
    v23 = sub_10000D604(&qword_1000D6EE0);
    v24 = swift_allocObject(v23, 80, 7);
    *(_OWORD *)(v24 + 16) = xmmword_100099F40;
    v25 = objc_msgSend(v3, "contentView");
    v26 = objc_msgSend(v25, "heightAnchor");

    v27 = objc_msgSend(v26, "constraintEqualToConstant:", v20);
    *(_QWORD *)(v24 + 32) = v27;
    v28 = objc_msgSend(v13, "heightAnchor");
    v29 = objc_msgSend(v28, "constraintEqualToConstant:", v20);

    *(_QWORD *)(v24 + 40) = v29;
    v30 = objc_msgSend(v13, "topAnchor");
    v31 = -[NSObject topAnchor](v46, "topAnchor");
    v32 = objc_msgSend(v30, "constraintEqualToAnchor:", v31);

    *(_QWORD *)(v24 + 48) = v32;
    v33 = objc_msgSend(v13, "leadingAnchor");
    v34 = -[NSObject leadingAnchor](v46, "leadingAnchor");
    v35 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

    *(_QWORD *)(v24 + 56) = v35;
    v36 = objc_msgSend(v13, "trailingAnchor");
    v37 = -[NSObject trailingAnchor](v46, "trailingAnchor");
    v38 = objc_msgSend(v36, "constraintEqualToAnchor:", v37);

    *(_QWORD *)(v24 + 64) = v38;
    v39 = objc_msgSend(v13, "bottomAnchor");
    v40 = -[NSObject bottomAnchor](v46, "bottomAnchor");
    v41 = objc_msgSend(v39, "constraintEqualToAnchor:", v40);

    *(_QWORD *)(v24 + 72) = v41;
    specialized Array._endMutation()(v42);
    sub_100035CA4(0, (unint64_t *)&qword_1000D7080, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v24);
    objc_msgSend(v22, "activateConstraints:", isa);

    objc_msgSend(v12, "didMoveToParentViewController:", v3);
  }
  else
  {
    v46 = Logger.logObject.getter(v10);
    v44 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v46, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v45 = 0;
      _os_log_impl((void *)&_mh_execute_header, v46, v44, "HomePodSetupAMSUpsellViewController: AppleMusic controller was not initilized properly", v45, 2u);
      swift_slowDealloc(v45, -1, -1);
    }
  }

}

id sub_10005610C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupAMSUpsellViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100056198()
{
  return type metadata accessor for HomePodSetupAMSUpsellViewController(0);
}

uint64_t type metadata accessor for HomePodSetupAMSUpsellViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1000D7008;
  if (!qword_1000D7008)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HomePodSetupAMSUpsellViewController);
  return result;
}

void sub_1000561DC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_100099F88;
  sub_100010910(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_100099FA0;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
  }
}

uint64_t sub_10005626C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService35HomePodSetupAMSUpsellViewController_presenter + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease(a1);
}

id sub_1000562A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000566B0(a3);
}

uint64_t sub_1000562AC(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  os_log_type_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t result;
  uint64_t v26;
  void *v27;
  _BYTE v28[48];
  _OWORD v29[2];
  uint64_t v30;
  _OWORD v31[4];

  v4 = v3;
  *(_QWORD *)&v31[0] = a3;
  swift_errorRetain(a3);
  v7 = sub_10000D604((uint64_t *)&unk_1000D7420);
  v9 = String.init<A>(describing:)(v31, v7);
  v10 = v8;
  if (a2)
  {
    v11 = Dictionary.description.getter(a2, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
    v12 = v8;
  }
  else
  {
    v12 = 0xE400000000000000;
    v11 = 1701736270;
  }
  if (qword_1000D5590 != -1)
    swift_once(&qword_1000D5590, sub_10005503C);
  v13 = type metadata accessor for Logger(0, v8);
  sub_10001118C(v13, (uint64_t)qword_1000D6FC0);
  swift_bridgeObjectRetain(v12);
  v14 = swift_bridgeObjectRetain(v10);
  v15 = Logger.logObject.getter(v14);
  v17 = static os_log_type_t.default.getter(v15, v16);
  if (os_log_type_enabled(v15, v17))
  {
    v27 = a1;
    v18 = v4;
    v19 = v9;
    v20 = swift_slowAlloc(22, -1);
    v21 = swift_slowAlloc(64, -1);
    *(_QWORD *)&v31[0] = v21;
    *(_DWORD *)v20 = 136315394;
    swift_bridgeObjectRetain(v12);
    *(_QWORD *)v28 = sub_10003EF58(v11, v12, (uint64_t *)v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v28, &v28[8]);
    swift_bridgeObjectRelease_n(v12, 3);
    *(_WORD *)(v20 + 12) = 2080;
    swift_bridgeObjectRetain(v10);
    v22 = v19;
    v4 = v18;
    a1 = v27;
    *(_QWORD *)v28 = sub_10003EF58(v22, v10, (uint64_t *)v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v28, &v28[8]);
    swift_bridgeObjectRelease_n(v10, 3);
    _os_log_impl((void *)&_mh_execute_header, v15, v17, "HomePodSetupAMSUpsellViewController: delegate didResolveWith called results: %s with error:%s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy(v21, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v20, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v10, 2);
    swift_bridgeObjectRelease_n(v12, 2);
  }
  objc_msgSend(a1, "willMoveToParentViewController:", 0);
  v23 = objc_msgSend(a1, "view");
  objc_msgSend(v23, "removeFromSuperview");

  v24 = objc_msgSend(v4, "presentingViewController");
  objc_msgSend(v24, "removeFromParentViewController");

  result = swift_unknownObjectWeakLoadStrong(&v4[OBJC_IVAR____TtC14HDSViewService35HomePodSetupAMSUpsellViewController_presenter]);
  if (result)
  {
    v26 = result;
    v30 = 0;
    memset(v29, 0, sizeof(v29));
    memset(&v28[8], 0, 40);
    v28[0] = 1;
    sub_100011340((uint64_t)v29, (uint64_t)&v28[8], &qword_1000D6ED0);
    v31[0] = *(_OWORD *)v28;
    v31[1] = *(_OWORD *)&v28[16];
    v31[2] = *(_OWORD *)&v28[32];
    sub_10006B04C((char *)v31);
    swift_unknownObjectRelease(v26);
    return sub_100011384((uint64_t)v31);
  }
  return result;
}

id sub_1000566B0(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  id result;
  _BYTE v18[24];

  v2 = v1;
  v4 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v4);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_1000D5590 != -1)
    swift_once(&qword_1000D5590, sub_10005503C);
  v8 = type metadata accessor for Logger(0, v5);
  v9 = sub_10001118C(v8, (uint64_t)qword_1000D6FC0);
  v10 = Logger.logObject.getter(v9);
  v12 = static os_log_type_t.default.getter(v10, v11);
  if (os_log_type_enabled(v10, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v12, "HomePodSetupAMSUpsellViewController: presenter:didUpdate viewModel", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }

  sub_1000111A4(a1, (uint64_t)v7);
  v14 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v7, 0, 1, v14);
  v15 = (uint64_t)&v2[OBJC_IVAR____TtC14HDSViewService35HomePodSetupAMSUpsellViewController_viewModel];
  swift_beginAccess(&v2[OBJC_IVAR____TtC14HDSViewService35HomePodSetupAMSUpsellViewController_viewModel], v18, 33, 0);
  sub_100011340((uint64_t)v7, v15, (uint64_t *)&unk_1000D6EC0);
  swift_endAccess(v18);
  result = objc_msgSend(v2, "isViewLoaded");
  if ((_DWORD)result)
    return objc_msgSend(v2, "setDismissalType:", *(_QWORD *)(a1 + *(int *)(v14 + 72)));
  return result;
}

uint64_t sub_100056868()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100056894(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1000557EC(a1, a2, *(char **)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_10005689C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000568AC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000568B4()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v5;
  _OWORD v6[2];
  _BYTE v7[24];
  uint64_t v8;

  v1 = objc_msgSend(v0, "_remoteViewControllerProxy");
  if (v1)
  {
    v2 = v1;
    _bridgeAnyObjectToAny(_:)(v6, v1);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_100057FFC((uint64_t)v6, (uint64_t)v7);
  if (v8)
  {
    v3 = sub_10000D604(&qword_1000D7188);
    if (swift_dynamicCast(&v5, v7, (char *)&type metadata for Any + 8, v3, 6))
      return v5;
    else
      return 0;
  }
  else
  {
    sub_10000DC40((uint64_t)v7, &qword_1000D5820);
    return 0;
  }
}

void sub_1000569E4(char a1, uint64_t a2)
{
  void *v2;
  void *v4;
  void *v5;
  uint64_t updated;
  id v7;
  id v8;
  objc_super v9;

  v9.receiver = v2;
  v9.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v9, "viewDidAppear:", a1 & 1);
  v4 = (void *)sub_1000568B4();
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, "setStatusBarHidden:withDuration:", 1, 0.3);
    swift_unknownObjectRelease(v5);
  }
  updated = type metadata accessor for SoftwareUpdateRequiredViewController();
  v7 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(updated)), "init");
  v8 = objc_msgSend(v2, "presentProxCardFlowWithDelegate:initialViewController:", v2, v7);

}

uint64_t type metadata accessor for SoftwareUpdateRequiredFlow()
{
  return objc_opt_self(_TtC14HDSViewService26SoftwareUpdateRequiredFlow);
}

double sub_100056BF8()
{
  double result;

  result = 30.0 - PRXMainContentMargin;
  *(double *)&qword_1000D70A0 = 30.0 - PRXMainContentMargin;
  return result;
}

void sub_100056C18()
{
  qword_1000D70A8 = 0x405A000000000000;
}

void sub_100056C28()
{
  qword_1000D70B0 = 0x4043000000000000;
}

void sub_100056C38()
{
  qword_1000D70B8 = 0x4026000000000000;
}

void sub_100056C48()
{
  qword_1000D70C0 = 0x4039000000000000;
}

void sub_100056C58()
{
  void *v0;
  void *v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  uint64_t v7;
  unint64_t v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  void *v20;
  id v21;
  uint64_t v22;
  _QWORD v23[5];
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;

  v1 = v0;
  v2 = String._bridgeToObjectiveC()();
  v3 = sub_100006354(v2);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v5 = v4;

  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  objc_msgSend(v1, "setTitle:", v6);

  v25 = 0xD000000000000018;
  v26 = 0x80000001000A16F0;
  if (PRXIsPad())
  {
    v7 = 0x534F444150495FLL;
    v8 = 0xE700000000000000;
  }
  else
  {
    v7 = 1397705055;
    v8 = 0xE400000000000000;
  }
  String.append(_:)(*(Swift::String *)&v7);
  v9 = String._bridgeToObjectiveC()();
  v10 = sub_100006354(v9);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v12 = v11;
  swift_bridgeObjectRelease(v26);

  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  objc_msgSend(v1, "setSubtitle:", v13);

  objc_msgSend(v1, "setDismissalType:", 1);
  v14 = String._bridgeToObjectiveC()();
  v15 = sub_100006354(v14);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v17 = v16;

  v18 = swift_allocObject(&unk_1000C3DA0, 24, 7);
  swift_unknownObjectUnownedInit(v18 + 16, v1);
  swift_retain(v18);
  v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v17);
  v23[4] = sub_100058068;
  v24 = v18;
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 1107296256;
  v23[2] = sub_100038D38;
  v23[3] = &unk_1000C3DB8;
  v20 = _Block_copy(v23);
  v21 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v19, 0, v20);

  _Block_release(v20);
  v22 = v24;
  swift_release(v18);

  sub_1000572E4();
}

void sub_100056F30(uint64_t a1, uint64_t a2)
{
  void *Strong;
  void *v3;
  _QWORD v4[6];

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(a2 + 16);
  v4[4] = sub_100056FC4;
  v4[5] = 0;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 1107296256;
  v4[2] = sub_10007C6B4;
  v4[3] = &unk_1000C3DE0;
  v3 = _Block_copy(v4);
  objc_msgSend(Strong, "dismissViewControllerAnimated:completion:", 1, v3);
  _Block_release(v3);

}

uint64_t sub_100056FC4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v8;
  NSURL *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  Class isa;
  unsigned __int8 v16;
  id v17;
  uint64_t (*v18)(char *, uint64_t);
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;
  uint64_t v25;
  id v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  unint64_t v31;

  v0 = sub_10000D604(&qword_1000D5DB8);
  __chkstk_darwin(v0);
  v2 = (char *)&v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)(0xD00000000000002CLL, 0x80000001000A1730);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
    return sub_10000DC40((uint64_t)v2, &qword_1000D5DB8);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  v8 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (v8)
  {
    v10 = v8;
    URL._bridgeToObjectiveC()(v9);
    v12 = v11;
    v13 = sub_100006658();
    v14 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v13, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v14);
    v30 = 0;
    v16 = objc_msgSend(v10, "openSensitiveURL:withOptions:error:", v12, isa, &v30);

    v17 = v30;
    if ((v16 & 1) != 0)
    {
      v18 = *(uint64_t (**)(char *, uint64_t))(v4 + 8);
      v19 = v30;
      return v18(v6, v3);
    }
    v20 = v30;
    v21 = _convertNSErrorToError(_:)(v17);

    swift_willThrow();
    v22 = sub_10000D604((uint64_t *)&unk_1000D71A0);
    v23 = swift_allocObject(v22, 64, 7);
    *(_OWORD *)(v23 + 16) = xmmword_100099220;
    v30 = 0;
    v31 = 0xE000000000000000;
    _StringGuts.grow(_:)(27);
    v24._object = (void *)0x80000001000A1760;
    v24._countAndFlagsBits = 0xD000000000000019;
    String.append(_:)(v24);
    v29 = v21;
    v25 = sub_10000D604((uint64_t *)&unk_1000D7090);
    _print_unlocked<A, B>(_:_:)(&v29, &v30, v25, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v26 = v30;
    v27 = v31;
    *(_QWORD *)(v23 + 56) = &type metadata for String;
    *(_QWORD *)(v23 + 32) = v26;
    *(_QWORD *)(v23 + 40) = v27;
    print(_:separator:terminator:)(v23, 32, 0xE100000000000000, 10, 0xE100000000000000);
    swift_bridgeObjectRelease(v23);
    swift_errorRelease(v21);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_1000572E4()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  NSString v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  Class isa;
  NSString v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  double v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  uint64_t v80;
  id v81;
  void *v82;
  Class v83;

  v1 = v0;
  v2 = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
  v3 = objc_msgSend(v0, "contentView");
  objc_msgSend(v3, "addLayoutGuide:", v2);

  v4 = (void *)objc_opt_self(UIImage);
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v4, "imageNamed:", v5);

  v82 = v6;
  v7 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v6);
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v8 = objc_msgSend(v1, "contentView");
  objc_msgSend(v8, "addSubview:", v7);

  v9 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v10 = (void *)objc_opt_self(UIColor);
  v11 = objc_msgSend(v10, "systemRedColor");
  objc_msgSend(v9, "setBackgroundColor:", v11);

  v12 = objc_msgSend(v9, "layer");
  if (qword_1000D55A8 != -1)
    swift_once(&qword_1000D55A8, sub_100056C28);
  objc_msgSend(v12, "setCornerRadius:", *(double *)&qword_1000D70B0 * 0.5);

  v13 = objc_msgSend(v1, "contentView");
  objc_msgSend(v13, "addSubview:", v9);

  v14 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v15 = (void *)objc_opt_self(NSNumberFormatter);
  sub_100035CA4(0, (unint64_t *)&unk_1000D7190, NSNumber_ptr);
  isa = NSNumber.init(integerLiteral:)(1).super.super.isa;
  v17 = objc_msgSend(v15, "localizedStringFromNumber:numberStyle:", isa, 0);

  if (!v17)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v19 = v18;
    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v19);
  }
  objc_msgSend(v14, "setText:", v17);

  v20 = objc_msgSend(v10, "whiteColor");
  objc_msgSend(v14, "setTextColor:", v20);

  objc_msgSend(v14, "setTextAlignment:", 1);
  v21 = objc_msgSend((id)objc_opt_self(UIFontDescriptor), "preferredFontDescriptorWithTextStyle:", UIFontTextStyleCaption1);
  v22 = objc_msgSend(v21, "fontDescriptorWithSymbolicTraits:", 2);

  if (v22)
  {
    v23 = qword_1000D55B8;
    v24 = v22;
    if (v23 != -1)
      swift_once(&qword_1000D55B8, sub_100056C48);
    v25 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v24, *(double *)&qword_1000D70C0);

    objc_msgSend(v14, "setFont:", v25);
  }
  objc_msgSend(v9, "addSubview:", v14);
  v26 = 0.0;
  if (*((_BYTE *)v1 + OBJC_IVAR____TtC14HDSViewService36SoftwareUpdateRequiredViewController_offsetIcon) == 1)
  {
    if (qword_1000D5598 != -1)
      swift_once(&qword_1000D5598, sub_100056BF8);
    v26 = *(double *)&qword_1000D70A0;
  }
  v27 = objc_msgSend(v1, "contentView");
  v28 = objc_msgSend(v27, "mainContentGuide");

  v81 = (id)objc_opt_self(NSLayoutConstraint);
  v29 = sub_10000D604(&qword_1000D6EE0);
  v30 = swift_allocObject(v29, 168, 7);
  *(_OWORD *)(v30 + 16) = xmmword_100099FD0;
  v31 = objc_msgSend(v2, "centerXAnchor");
  v32 = objc_msgSend(v28, "centerXAnchor");
  v33 = objc_msgSend(v31, "constraintEqualToAnchor:", v32);

  *(_QWORD *)(v30 + 32) = v33;
  v34 = objc_msgSend(v2, "topAnchor");
  v35 = objc_msgSend(v28, "topAnchor");
  v36 = objc_msgSend(v34, "constraintEqualToAnchor:constant:", v35, v26);

  *(_QWORD *)(v30 + 40) = v36;
  v37 = objc_msgSend(v2, "bottomAnchor");
  v38 = objc_msgSend(v28, "bottomAnchor");
  v39 = objc_msgSend(v37, "constraintLessThanOrEqualToAnchor:", v38);

  *(_QWORD *)(v30 + 48) = v39;
  v40 = objc_msgSend(v7, "leadingAnchor");
  v41 = objc_msgSend(v2, "leadingAnchor");
  v42 = objc_msgSend(v40, "constraintEqualToAnchor:", v41);

  *(_QWORD *)(v30 + 56) = v42;
  v43 = objc_msgSend(v7, "trailingAnchor");
  v44 = objc_msgSend(v2, "trailingAnchor");
  if (qword_1000D55B0 != -1)
    swift_once(&qword_1000D55B0, sub_100056C38);
  v45 = objc_msgSend(v43, "constraintEqualToAnchor:constant:", v44, -*(double *)&qword_1000D70B8);

  *(_QWORD *)(v30 + 64) = v45;
  v46 = objc_msgSend(v7, "topAnchor");
  v47 = objc_msgSend(v2, "topAnchor");
  v48 = objc_msgSend(v46, "constraintEqualToAnchor:constant:", v47, *(double *)&qword_1000D70B8);

  *(_QWORD *)(v30 + 72) = v48;
  v49 = objc_msgSend(v7, "bottomAnchor");
  v50 = objc_msgSend(v2, "bottomAnchor");
  v51 = objc_msgSend(v49, "constraintEqualToAnchor:", v50);

  *(_QWORD *)(v30 + 80) = v51;
  v52 = objc_msgSend(v7, "widthAnchor");
  if (qword_1000D55A0 != -1)
    swift_once(&qword_1000D55A0, sub_100056C18);
  v53 = objc_msgSend(v52, "constraintEqualToConstant:", *(double *)&qword_1000D70A8);

  *(_QWORD *)(v30 + 88) = v53;
  v54 = objc_msgSend(v7, "heightAnchor");
  v55 = objc_msgSend(v7, "widthAnchor");
  v56 = objc_msgSend(v54, "constraintEqualToAnchor:", v55);

  *(_QWORD *)(v30 + 96) = v56;
  v57 = objc_msgSend(v9, "topAnchor");
  v58 = objc_msgSend(v2, "topAnchor");
  v59 = objc_msgSend(v57, "constraintEqualToAnchor:", v58);

  *(_QWORD *)(v30 + 104) = v59;
  v60 = objc_msgSend(v9, "trailingAnchor");
  v61 = objc_msgSend(v2, "trailingAnchor");
  v62 = objc_msgSend(v60, "constraintEqualToAnchor:", v61);

  *(_QWORD *)(v30 + 112) = v62;
  v63 = objc_msgSend(v9, "widthAnchor");
  v64 = objc_msgSend(v63, "constraintEqualToConstant:", *(double *)&qword_1000D70B0);

  *(_QWORD *)(v30 + 120) = v64;
  v65 = objc_msgSend(v9, "heightAnchor");
  v66 = objc_msgSend(v9, "widthAnchor");
  v67 = objc_msgSend(v65, "constraintEqualToAnchor:", v66);

  *(_QWORD *)(v30 + 128) = v67;
  v68 = objc_msgSend(v14, "leadingAnchor");
  v69 = objc_msgSend(v9, "leadingAnchor");
  v70 = objc_msgSend(v68, "constraintEqualToAnchor:", v69);

  *(_QWORD *)(v30 + 136) = v70;
  v71 = objc_msgSend(v14, "topAnchor");
  v72 = objc_msgSend(v9, "topAnchor");
  v73 = objc_msgSend(v71, "constraintEqualToAnchor:", v72);

  *(_QWORD *)(v30 + 144) = v73;
  v74 = objc_msgSend(v14, "bottomAnchor");
  v75 = objc_msgSend(v9, "bottomAnchor");
  v76 = objc_msgSend(v74, "constraintEqualToAnchor:", v75);

  *(_QWORD *)(v30 + 152) = v76;
  v77 = objc_msgSend(v14, "trailingAnchor");
  v78 = objc_msgSend(v9, "trailingAnchor");
  v79 = objc_msgSend(v77, "constraintEqualToAnchor:", v78);

  *(_QWORD *)(v30 + 160) = v79;
  specialized Array._endMutation()(v80);
  sub_100035CA4(0, (unint64_t *)&qword_1000D7080, NSLayoutConstraint_ptr);
  v83 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v30);
  objc_msgSend(v81, "activateConstraints:", v83);

}

id sub_100057F44(uint64_t a1, uint64_t a2)
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)swift_getObjectType(v2, a2);
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t type metadata accessor for SoftwareUpdateRequiredViewController()
{
  return objc_opt_self(_TtC14HDSViewService36SoftwareUpdateRequiredViewController);
}

uint64_t sub_100057FFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000D604(&qword_1000D5820);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100058044()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100058068(uint64_t a1)
{
  uint64_t v1;

  sub_100056F30(a1, v1);
}

uint64_t sub_100058070(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100058080(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100058090(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000111E8(v2, qword_1000DB830);
  sub_10001118C(v2, (uint64_t)qword_1000DB830);
  return Logger.init(subsystem:category:)(0xD000000000000019, 0x80000001000A1780, 0x69766544656D6F48, 0xEF70757465536563);
}

uint64_t sub_100058110(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000111E8(v2, qword_1000D71B0);
  v3 = sub_10001118C(v2, (uint64_t)qword_1000D71B0);
  if (qword_1000D55C0 != -1)
    swift_once(&qword_1000D55C0, sub_100058090);
  v4 = sub_10001118C(v2, (uint64_t)qword_1000DB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

void sub_1000581A0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void (*v14)(void *, uint64_t);
  uint64_t v15;
  id v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *Strong;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  __objc2_prot *v26;

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100012BE8();
  *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v8 = _dispatchPreconditionTest(_:)(v7);
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    ObjectType = swift_getObjectType(a1, v9);
    v11 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for HomePodSetupPresenterDelegate);
    if (v11)
      v12 = v11;
    else
      v12 = 0;
    if (v11)
      v13 = a1;
    else
      v13 = 0;
    if (v13)
    {
      v14 = *(void (**)(void *, uint64_t))(v2
                                                   + OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_prepareForPresentation);
      if (v14)
      {
        v15 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_prepareForPresentation + 8);
        v16 = a1;
        sub_1000588D4((uint64_t)v14, v15);
        v14(v13, v12);
        sub_1000588E4((uint64_t)v14, v15);

      }
    }
    v17 = OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_navigationController;
    v18 = *(void **)(v2 + OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_navigationController);
    if (v18)
    {
      objc_msgSend(v18, "pushViewController:animated:", a1, 1);
    }
    else
    {
      v26 = &OBJC_PROTOCOL___PRXCardContentProviding;
      v19 = swift_dynamicCastObjCProtocolConditional(a1, 1, &v26);
      if (v19)
      {
        v20 = v19;
        Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_hostViewController);
        v22 = a1;
        if (Strong)
        {
          v23 = objc_msgSend(Strong, "presentProxCardFlowWithDelegate:initialViewController:", v2, v20);

        }
        else
        {
          v23 = 0;
        }
        v24 = *(void **)(v2 + v17);
        *(_QWORD *)(v2 + v17) = v23;

      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100058388(int a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  void *v14;
  NSObject *v15;
  char v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;

  v5 = type metadata accessor for DispatchPredicate(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v9 = (uint64_t *)((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_dismissed) & 1) == 0)
  {
    *(_BYTE *)(v2 + OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_dismissed) = 1;
    if (qword_1000D55C8 != -1)
      swift_once(&qword_1000D55C8, sub_100058110);
    v10 = type metadata accessor for Logger(0, v7);
    sub_10001118C(v10, (uint64_t)qword_1000D71B0);
    v11 = Logger.logObject.getter();
    v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc(14, -1);
      *(_DWORD *)v13 = 67109376;
      v21 = a1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22);
      *(_WORD *)(v13 + 8) = 1024;
      v20 = a2 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "<loom:ViewService:matchHomePodSetupWarnings> HomePodSetupRouter: dismiss with type %d, animated: %{BOOL}d", (uint8_t *)v13, 0xEu);
      swift_slowDealloc(v13, -1, -1);
    }

    v14 = *(void **)(v2 + OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_navigationController);
    if (v14)
    {
      sub_100012BE8();
      v15 = v14;
      *v9 = static OS_dispatch_queue.main.getter();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v5);
      v16 = _dispatchPreconditionTest(_:)(v9);
      (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v9, v5);
      if ((v16 & 1) == 0)
      {
        __break(1u);
        return;
      }
      -[NSObject dismissViewControllerAnimated:completion:](v15, "dismissViewControllerAnimated:completion:", a2 & 1, 0);
    }
    else
    {
      v15 = Logger.logObject.getter();
      v17 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v15, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v18 = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, v17, "HomePodSetupRouter: dismiss attempted while navigationController is nil", v18, 2u);
        swift_slowDealloc(v18, -1, -1);
      }
    }

  }
}

id sub_100058610()
{
  _BYTE *v0;
  _QWORD *v1;
  _QWORD *v2;
  objc_super v4;

  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_hostViewController], 0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_navigationController] = 0;
  v0[OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_dismissed] = 0;
  v1 = &v0[OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_didDismiss];
  *v1 = 0;
  v1[1] = 0;
  v2 = &v0[OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_prepareForPresentation];
  *v2 = 0;
  v2[1] = 0;
  v0[OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_blockHardwareButtons] = 0;
  v0[OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_homePressed] = 0;
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for HomePodSetupRouter();
  return objc_msgSendSuper2(&v4, "init");
}

id sub_1000586C4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupRouter();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for HomePodSetupRouter()
{
  return objc_opt_self(_TtC14HDSViewService18HomePodSetupRouter);
}

void sub_100058774(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;

  v3 = v2;
  if (qword_1000D55C8 != -1)
    swift_once(&qword_1000D55C8, sub_100058110);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10001118C(v4, (uint64_t)qword_1000D71B0);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "<loom:ViewService:matchHomePodSetupWarnings> HomePodSetupRouter: proxCardFlowDidDismiss called dismissing the flow", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_dismissed) & 1) == 0)
    sub_100058388(0, 1);
  v10 = v3 + OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_didDismiss;
  v11 = *(void (**)(uint64_t))(v3 + OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_didDismiss);
  if (v11)
  {
    v12 = *(_QWORD *)(v10 + 8);
    v13 = swift_retain(v12);
    v11(v13);
    sub_1000588E4((uint64_t)v11, v12);
  }
}

uint64_t sub_1000588D4(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_retain(a2);
  return result;
}

uint64_t sub_1000588E4(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_release(a2);
  return result;
}

char *sub_100058990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v7;
  id v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  char *v15;
  id v16;
  NSString v17;
  id v18;
  NSString v19;
  objc_super v21;

  v7 = OBJC_IVAR____TtC14HDSViewService16StereoPairButton_stackView;
  v8 = objc_allocWithZone((Class)UIStackView);
  v9 = v4;
  *(_QWORD *)&v4[v7] = objc_msgSend(v8, "init");
  v10 = OBJC_IVAR____TtC14HDSViewService16StereoPairButton_circle;
  *(_QWORD *)&v9[v10] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v11 = OBJC_IVAR____TtC14HDSViewService16StereoPairButton_innerLabel;
  *(_QWORD *)&v9[v11] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v12 = OBJC_IVAR____TtC14HDSViewService16StereoPairButton_bottomLabel;
  *(_QWORD *)&v9[v12] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");

  v21.receiver = v9;
  v21.super_class = (Class)type metadata accessor for StereoPairButton();
  v13 = (char *)objc_msgSendSuper2(&v21, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v14 = *(void **)&v13[OBJC_IVAR____TtC14HDSViewService16StereoPairButton_bottomLabel];
  v15 = v13;
  v16 = v14;
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  objc_msgSend(v16, "setText:", v17);

  v18 = *(id *)&v15[OBJC_IVAR____TtC14HDSViewService16StereoPairButton_innerLabel];
  v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  objc_msgSend(v18, "setText:", v19);

  sub_100058C60();
  return v15;
}

id sub_100058B38(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  objc_super v13;

  v3 = OBJC_IVAR____TtC14HDSViewService16StereoPairButton_stackView;
  v4 = objc_allocWithZone((Class)UIStackView);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  v6 = OBJC_IVAR____TtC14HDSViewService16StereoPairButton_circle;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v7 = OBJC_IVAR____TtC14HDSViewService16StereoPairButton_innerLabel;
  *(_QWORD *)&v5[v7] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v8 = OBJC_IVAR____TtC14HDSViewService16StereoPairButton_bottomLabel;
  *(_QWORD *)&v5[v8] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");

  v13.receiver = v5;
  v13.super_class = (Class)type metadata accessor for StereoPairButton();
  v9 = objc_msgSendSuper2(&v13, "initWithCoder:", a1);
  v10 = v9;
  if (v9)
  {
    v11 = v9;
    sub_100058C60();

  }
  return v10;
}

id sub_100058C60()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC14HDSViewService16StereoPairButton_stackView];
  objc_msgSend(v2, "setAxis:", 1);
  objc_msgSend(v2, "setSpacing:", 6.0);
  objc_msgSend(v2, "setUserInteractionEnabled:", 0);
  objc_msgSend(v0, "addSubviewToBounds:with:", v2, UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  v3 = *(void **)&v0[OBJC_IVAR____TtC14HDSViewService16StereoPairButton_circle];
  objc_msgSend(v2, "addArrangedSubview:", v3);
  v4 = objc_msgSend(v3, "layer");
  objc_msgSend(v4, "setBorderWidth:", 2.0);

  sub_1000729AC(1.0, 1.0, 750.0);
  v5 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService16StereoPairButton_innerLabel];
  v6 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", 36.0, UIFontWeightSemibold);
  objc_msgSend(v5, "setFont:", v6);

  objc_msgSend(v5, "setTextAlignment:", 1);
  sub_100072AF8(v5, 0.0, 0.0);
  v7 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService16StereoPairButton_bottomLabel];
  objc_msgSend(v7, "setTextAlignment:", 1);
  return objc_msgSend(v2, "addArrangedSubview:", v7);
}

void sub_100058E08()
{
  char *v0;
  unsigned int v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;

  v1 = objc_msgSend(v0, "isHighlighted");
  v2 = *(void **)&v0[OBJC_IVAR____TtC14HDSViewService16StereoPairButton_innerLabel];
  v3 = (void *)objc_opt_self(UIColor);
  v4 = v3;
  if (v1)
  {
    v5 = objc_msgSend(v3, "systemBackgroundColor");
    objc_msgSend(v2, "setTextColor:", v5);

    v6 = *(void **)&v0[OBJC_IVAR____TtC14HDSViewService16StereoPairButton_bottomLabel];
    v7 = objc_msgSend(v4, "systemBlueColor");
    objc_msgSend(v6, "setTextColor:", v7);

    v8 = *(void **)&v0[OBJC_IVAR____TtC14HDSViewService16StereoPairButton_circle];
    v9 = objc_msgSend(v4, "systemBlueColor");
    objc_msgSend(v8, "setBackgroundColor:", v9);

    v10 = objc_msgSend(v8, "layer");
    v11 = objc_msgSend(v4, "systemBlueColor");
  }
  else
  {
    v12 = objc_msgSend(v3, "systemGrayColor");
    objc_msgSend(v2, "setTextColor:", v12);

    v13 = *(void **)&v0[OBJC_IVAR____TtC14HDSViewService16StereoPairButton_bottomLabel];
    v14 = objc_msgSend(v4, "systemGrayColor");
    objc_msgSend(v13, "setTextColor:", v14);

    v15 = *(void **)&v0[OBJC_IVAR____TtC14HDSViewService16StereoPairButton_circle];
    v16 = objc_msgSend(v4, "clearColor");
    objc_msgSend(v15, "setBackgroundColor:", v16);

    v10 = objc_msgSend(v15, "layer");
    v11 = objc_msgSend(v4, "systemGrayColor");
  }
  v17 = objc_msgSend(v11, "CGColor");

  objc_msgSend(v10, "setBorderColor:", v17);
}

id sub_100059150()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StereoPairButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for StereoPairButton()
{
  return objc_opt_self(_TtC14HDSViewService16StereoPairButton);
}

id sub_1000591F8()
{
  id *v0;
  id result;
  void *v2;
  uint64_t v3;

  result = objc_msgSend(*v0, "name");
  if (result)
  {
    v2 = result;
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);

    return (id)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100059254()
{
  id *v0;
  uint64_t result;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  Swift::String v6;

  result = (uint64_t)objc_msgSend(*v0, "name");
  if (result)
  {
    v2 = (void *)result;
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v5 = v4;

    v6._countAndFlagsBits = v3;
    v6._object = v5;
    String.append(_:)(v6);
    swift_bridgeObjectRelease(v5);
    return 0x666E696563696F76;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1000592E8(void *a1)
{
  id result;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  Swift::String v7;
  Swift::String v8;
  void *object;
  Swift::String v10;
  Swift::String v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  Swift::String v19;
  void *v20;
  Swift::String v21;
  uint64_t v22;
  void *v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  Swift::String v29;
  void *v30;
  Swift::String v31;
  uint64_t v32;
  void *v33;
  Swift::String v34;
  uint64_t v35;
  Swift::String v36;
  uint64_t v37;
  unint64_t v38;
  _QWORD v39[2];

  v39[0] = 1031365995;
  v39[1] = 0xE400000000000000;
  result = objc_msgSend(a1, "name");
  if (result)
  {
    v3 = result;
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v6 = v5;

    v37 = 0x666E696563696F76;
    v38 = 0xEA00000000005F6FLL;
    v7._countAndFlagsBits = v4;
    v7._object = v6;
    String.append(_:)(v7);
    swift_bridgeObjectRelease(v6);
    v8._countAndFlagsBits = String.init<A>(reflecting:)(&v37, &type metadata for String);
    object = v8._object;
    String.append(_:)(v8);
    swift_bridgeObjectRelease(object);
    v10._countAndFlagsBits = 32;
    v10._object = (void *)0xE100000000000000;
    String.append(_:)(v10);
    v11._countAndFlagsBits = v39[0];
    v12 = (void *)v39[1];
    strcpy((char *)v39, "<VoiceOption ");
    HIWORD(v39[1]) = -4864;
    v11._object = v12;
    String.append(_:)(v11);
    swift_bridgeObjectRelease(v12);
    v14 = v39[0];
    v13 = v39[1];
    v39[0] = 0;
    v39[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(16);
    swift_bridgeObjectRelease(v39[1]);
    strcpy((char *)v39, "displayValue=");
    HIWORD(v39[1]) = -4864;
    result = objc_msgSend(a1, "name", v37, v38);
    if (result)
    {
      v15 = result;
      v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
      v18 = v17;

      v37 = v16;
      v38 = v18;
      v19._countAndFlagsBits = String.init<A>(reflecting:)(&v37, &type metadata for String);
      v20 = v19._object;
      String.append(_:)(v19);
      swift_bridgeObjectRelease(v20);
      v21._countAndFlagsBits = 32;
      v21._object = (void *)0xE100000000000000;
      String.append(_:)(v21);
      v22 = v39[0];
      v23 = (void *)v39[1];
      v39[0] = v14;
      v39[1] = v13;
      swift_bridgeObjectRetain(v13);
      v24._countAndFlagsBits = v22;
      v24._object = v23;
      String.append(_:)(v24);
      swift_bridgeObjectRelease(v13);
      swift_bridgeObjectRelease(v23);
      v26 = v39[0];
      v25 = v39[1];
      strcpy((char *)v39, "voiceInfo=");
      BYTE3(v39[1]) = 0;
      HIDWORD(v39[1]) = -369098752;
      v37 = (uint64_t)a1;
      v27 = sub_1000595AC();
      v28 = a1;
      v29._countAndFlagsBits = String.init<A>(reflecting:)(&v37, v27);
      v30 = v29._object;
      String.append(_:)(v29);
      swift_bridgeObjectRelease(v30);
      v31._countAndFlagsBits = 32;
      v31._object = (void *)0xE100000000000000;
      String.append(_:)(v31);
      v32 = v39[0];
      v33 = (void *)v39[1];
      v39[0] = v26;
      v39[1] = v25;
      swift_bridgeObjectRetain(v25);
      v34._countAndFlagsBits = v32;
      v34._object = v33;
      String.append(_:)(v34);
      swift_bridgeObjectRelease(v25);
      swift_bridgeObjectRelease(v33);
      v35 = v39[1];
      swift_bridgeObjectRetain(v39[1]);
      v36._countAndFlagsBits = 62;
      v36._object = (void *)0xE100000000000000;
      String.append(_:)(v36);
      swift_bridgeObjectRelease(v35);
      return (id)v39[0];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1000595A4()
{
  void **v0;

  return sub_1000592E8(*v0);
}

unint64_t sub_1000595AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D6ED8;
  if (!qword_1000D6ED8)
  {
    v1 = objc_opt_self(AFVoiceInfo);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1000D6ED8);
  }
  return result;
}

ValueMetadata *type metadata accessor for VoiceOption()
{
  return &type metadata for VoiceOption;
}

uint64_t getEnumTagSinglePayload for AppleAccountFeatureFlags(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for AppleAccountFeatureFlags(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_10005968C + 4 * byte_10009A110[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1000596AC + 4 * byte_10009A115[v4]))();
}

_BYTE *sub_10005968C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1000596AC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1000596B4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1000596BC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1000596C4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1000596CC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AppleAccountFeatureFlags()
{
  return &type metadata for AppleAccountFeatureFlags;
}

uint64_t getEnumTagSinglePayload for HomeDeviceSetupFeatureFlags(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for HomeDeviceSetupFeatureFlags(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1000597C4 + 4 * byte_10009A11F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1000597F8 + 4 * byte_10009A11A[v4]))();
}

uint64_t sub_1000597F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100059800(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100059808);
  return result;
}

uint64_t sub_100059814(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10005981CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100059820(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100059828(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HomeDeviceSetupFeatureFlags()
{
  return &type metadata for HomeDeviceSetupFeatureFlags;
}

uint64_t getEnumTagSinglePayload for SharingFeatureFlags(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SharingFeatureFlags(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100059920 + 4 * byte_10009A129[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100059954 + 4 * byte_10009A124[v4]))();
}

uint64_t sub_100059954(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10005995C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100059964);
  return result;
}

uint64_t sub_100059970(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100059978);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10005997C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100059984(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_100059990(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for SharingFeatureFlags()
{
  return &type metadata for SharingFeatureFlags;
}

unint64_t sub_1000599B0()
{
  unint64_t result;

  result = qword_1000D72D8;
  if (!qword_1000D72D8)
  {
    result = swift_getWitnessTable(&unk_10009A1C4, &type metadata for SharingFeatureFlags);
    atomic_store(result, (unint64_t *)&qword_1000D72D8);
  }
  return result;
}

Swift::Int sub_1000599F4()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_100059A38()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_100059A60(uint64_t a1)
{
  unsigned __int8 *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

const char *sub_100059AA0()
{
  return "HomeDeviceSetup";
}

const char *sub_100059AB4()
{
  _BYTE *v0;
  const char *v1;

  v1 = "sysdrop";
  if (*v0 != 1)
    v1 = "sysdrop_rp";
  if (*v0)
    return v1;
  else
    return "psg_support";
}

BOOL sub_100059AFC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

unint64_t sub_100059B18()
{
  unint64_t result;

  result = qword_1000D72E0;
  if (!qword_1000D72E0)
  {
    result = swift_getWitnessTable(&unk_10009A22C, &type metadata for HomeDeviceSetupFeatureFlags);
    atomic_store(result, (unint64_t *)&qword_1000D72E0);
  }
  return result;
}

unint64_t sub_100059B60()
{
  unint64_t result;

  result = qword_1000D72E8;
  if (!qword_1000D72E8)
  {
    result = swift_getWitnessTable(&unk_10009A294, &type metadata for AppleAccountFeatureFlags);
    atomic_store(result, (unint64_t *)&qword_1000D72E8);
  }
  return result;
}

const char *sub_100059BA4()
{
  return "Sharing";
}

const char *sub_100059BB8()
{
  _BYTE *v0;

  if (*v0)
    return "HomePodUseAMSEarly";
  else
    return "HomePodUseAMS";
}

uint64_t sub_100059BE8()
{
  return 1;
}

Swift::Int sub_100059BF0()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

void sub_100059C30()
{
  Hasher._combine(_:)(0);
}

Swift::Int sub_100059C54(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

const char *sub_100059C90()
{
  return "AppleAccount";
}

const char *sub_100059CA4()
{
  return "AABranding";
}

uint64_t sub_100059CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000111E8(v2, qword_1000D72F0);
  v3 = sub_10001118C(v2, (uint64_t)qword_1000D72F0);
  if (qword_1000D55C0 != -1)
    swift_once(&qword_1000D55C0, sub_100058090);
  v4 = sub_10001118C(v2, (uint64_t)qword_1000DB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

void sub_100059D48()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char *v11;
  objc_class *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  NSString v35;
  NSString v36;
  NSString v37;
  NSString v38;
  id v39;
  _QWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44[24];
  objc_super v45;

  v1 = v0;
  v2 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v2);
  v4 = (char *)v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  v6 = *((_QWORD *)v5 - 1);
  v7 = __chkstk_darwin(v5);
  v9 = (_QWORD *)((char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  v11 = (char *)v40 - v10;
  v12 = (objc_class *)type metadata accessor for HomePodSetupPickerViewController(0);
  v45.receiver = v1;
  v45.super_class = v12;
  objc_msgSendSuper2(&v45, "viewDidLoad");
  v13 = (uint64_t)&v1[OBJC_IVAR____TtC14HDSViewService32HomePodSetupPickerViewController_viewModel];
  swift_beginAccess(&v1[OBJC_IVAR____TtC14HDSViewService32HomePodSetupPickerViewController_viewModel], v44, 0, 0);
  sub_10000E0F0(v13, (uint64_t)v4, (uint64_t *)&unk_1000D6EC0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10000DC40((uint64_t)v4, (uint64_t *)&unk_1000D6EC0);
    if (qword_1000D55D0 != -1)
      swift_once(&qword_1000D55D0, sub_100059CB8);
    v15 = type metadata accessor for Logger(0, v14);
    v16 = sub_10001118C(v15, (uint64_t)qword_1000D72F0);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "HomePodSetupPicker: viewDidLoad failed because viewModel not set.", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

  }
  else
  {
    sub_1000148AC((uint64_t)v4, (uint64_t)v11);
    if (qword_1000D55D0 != -1)
      swift_once(&qword_1000D55D0, sub_100059CB8);
    v21 = type metadata accessor for Logger(0, v20);
    sub_10001118C(v21, (uint64_t)qword_1000D72F0);
    v22 = sub_1000111A4((uint64_t)v11, (uint64_t)v9);
    v23 = Logger.logObject.getter(v22);
    v25 = static os_log_type_t.default.getter(v23, v24);
    if (os_log_type_enabled(v23, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(12, -1);
      v41 = swift_slowAlloc(32, -1);
      v43 = v41;
      *(_DWORD *)v26 = 136315138;
      v40[1] = v26 + 4;
      v28 = *v9;
      v27 = v9[1];
      swift_bridgeObjectRetain(v27);
      v42 = sub_10003EF58(v28, v27, &v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43);
      swift_bridgeObjectRelease(v27);
      sub_1000148F0((uint64_t)v9);
      _os_log_impl((void *)&_mh_execute_header, v23, v25, "HomePodSetupPicker: viewDidLoad with title %s", v26, 0xCu);
      v29 = v41;
      swift_arrayDestroy(v41, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v29, -1, -1);
      swift_slowDealloc(v26, -1, -1);
    }
    else
    {
      sub_1000148F0((uint64_t)v9);
    }

    sub_10005A614((uint64_t)v11);
    v30 = *(_QWORD *)&v11[v5[10]];
    v31 = swift_allocObject(&unk_1000C4110, 24, 7);
    swift_unknownObjectWeakInit(v31 + 16, v1);
    v32 = swift_bridgeObjectRetain(v30);
    sub_10007E6FC(v32, (uint64_t)sub_10005AD6C, v31);
    swift_bridgeObjectRelease(v30);
    *(_QWORD *)&v33 = swift_release(v31).n128_u64[0];
    v34 = *(_QWORD *)&v11[v5[18]];
    if ((v34 & 2) == 0 && *(_QWORD *)&v11[v5[19] + 8])
    {
      v35 = String._bridgeToObjectiveC()();
      v36 = String._bridgeToObjectiveC()();
      v37 = String._bridgeToObjectiveC()();
      v38 = String._bridgeToObjectiveC()();
      v39 = objc_msgSend(v1, "dismissalConfirmationActionWithTitle:message:confirmButtonTitle:cancelButtonTitle:", v35, v36, v37, v38);

      objc_msgSend(v1, "setDismissButtonAction:", v39);
    }
    objc_msgSend(v1, "setDismissalType:", v34, v33);
    sub_1000148F0((uint64_t)v11);
  }
}

char *sub_10005A1E8(unsigned __int8 *a1, uint64_t a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  char *result;
  char *v5;
  id v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t Strong;
  uint64_t v31;
  unsigned __int8 v32;
  _BYTE v33[48];
  uint64_t v34;
  _QWORD v35[4];
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;
  char v42[32];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v42, 0, 0);
  result = (char *)swift_unknownObjectWeakLoadStrong(v3);
  if (!result)
    return result;
  v5 = result;
  v6 = objc_msgSend(result, "contentView");
  v7 = objc_msgSend(v6, "pickerView");

  v8 = (unint64_t)objc_msgSend(v7, "selectedRowInComponent:", 0);
  if ((v8 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  v9 = *(_QWORD *)&v5[OBJC_IVAR____TtC14HDSViewService32HomePodSetupPickerViewController_options];
  if (v8 >= *(_QWORD *)(v9 + 16))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_100035D68(v9 + 40 * v8 + 32, (uint64_t)v39);
  if (qword_1000D55D0 != -1)
LABEL_15:
    swift_once(&qword_1000D55D0, sub_100059CB8);
  v11 = type metadata accessor for Logger(0, v10);
  sub_10001118C(v11, (uint64_t)qword_1000D72F0);
  v12 = sub_100035D68((uint64_t)v39, (uint64_t)&v36);
  v13 = Logger.logObject.getter(v12);
  v15 = static os_log_type_t.default.getter(v13, v14);
  if (os_log_type_enabled(v13, v15))
  {
    v16 = swift_slowAlloc(22, -1);
    v17 = swift_slowAlloc(64, -1);
    *(_QWORD *)v33 = v17;
    *(_DWORD *)v16 = 136315394;
    v18 = sub_10000E9EC(v2);
    v32 = v2;
    v20 = v19;
    v34 = sub_10003EF58(v18, v19, (uint64_t *)v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, v35);
    swift_bridgeObjectRelease(v20);
    *(_WORD *)(v16 + 12) = 2080;
    v22 = *((_QWORD *)&v37 + 1);
    v21 = v38;
    sub_10000DC94(&v36, *((uint64_t *)&v37 + 1));
    v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(v22, v21);
    v25 = v24;
    v34 = sub_10003EF58(v23, v24, (uint64_t *)v33);
    v2 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, v35);
    swift_bridgeObjectRelease(v25);
    sub_10000CDB8(&v36);
    _os_log_impl((void *)&_mh_execute_header, v13, v15, "HomePodSetupPicker: User tapped on button: %s with selected option '%s'", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);
  }
  else
  {
    sub_10000CDB8(&v36);
  }

  v26 = v40;
  v27 = v41;
  v28 = sub_10000DC94(v39, v40);
  v35[2] = v26;
  v35[3] = *(_QWORD *)(v27 + 8);
  v29 = sub_10005AD74(&v34);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v29, v28, v26);
  memset(&v33[8], 0, 40);
  v33[0] = v2;
  sub_100011340((uint64_t)&v34, (uint64_t)&v33[8], &qword_1000D6ED0);
  v36 = *(_OWORD *)v33;
  v37 = *(_OWORD *)&v33[16];
  v38 = *(_OWORD *)&v33[32];
  Strong = swift_unknownObjectWeakLoadStrong(&v5[OBJC_IVAR____TtC14HDSViewService32HomePodSetupPickerViewController_presenter]);
  if (Strong)
  {
    v31 = Strong;
    sub_10006B04C((char *)&v36);

    swift_unknownObjectRelease(v31);
    sub_100011384((uint64_t)&v36);
  }
  else
  {
    sub_100011384((uint64_t)&v36);

  }
  return (char *)sub_10000CDB8(v39);
}

void sub_10005A614(uint64_t a1)
{
  char *v1;
  char *v2;
  NSString v4;
  NSString v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char v25;
  id v26;
  id v27;
  __int128 v28;
  uint64_t v29;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;

  v2 = v1;
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setTitle:", v4);

  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setSubtitle:", v5);

  v6 = type metadata accessor for HomePodSetupViewModel(0);
  v7 = *(_QWORD *)(a1 + *(int *)(v6 + 48));
  v8 = OBJC_IVAR____TtC14HDSViewService32HomePodSetupPickerViewController_options;
  v9 = *(_QWORD *)&v2[OBJC_IVAR____TtC14HDSViewService32HomePodSetupPickerViewController_options];
  *(_QWORD *)&v2[OBJC_IVAR____TtC14HDSViewService32HomePodSetupPickerViewController_options] = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v9);
  sub_10000E0F0(a1 + *(int *)(v6 + 52), (uint64_t)&v28, &qword_1000D6110);
  if (!v29)
  {
    sub_10000DC40((uint64_t)&v28, &qword_1000D6110);
    goto LABEL_13;
  }
  sub_10000DC7C(&v28, (uint64_t)v30);
  v10 = *(_QWORD *)&v2[v8];
  v11 = *(_QWORD *)(v10 + 16);
  if (!v11)
  {
LABEL_11:
    sub_10000CDB8(v30);
LABEL_13:
    v13 = 0;
    goto LABEL_17;
  }
  v12 = (_QWORD *)(v10 + 32);
  swift_bridgeObjectRetain(v10);
  v13 = 0;
  while (1)
  {
    v15 = v12[3];
    v14 = v12[4];
    sub_10000DC94(v12, v15);
    v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v14 + 8) + 8))(v15);
    v18 = v17;
    v20 = v31;
    v19 = v32;
    sub_10000DC94(v30, v31);
    v21 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v19 + 8) + 8))(v20);
    if (v16 == v21 && v18 == v22)
    {
      swift_bridgeObjectRelease(v10);
      swift_bridgeObjectRelease_n(v18, 2);
      goto LABEL_16;
    }
    v24 = v22;
    v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v18, v21, v22, 0);
    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease(v24);
    if ((v25 & 1) != 0)
      break;
    ++v13;
    v12 += 5;
    if (v11 == v13)
    {
      swift_bridgeObjectRelease(v10);
      goto LABEL_11;
    }
  }
  swift_bridgeObjectRelease(v10);
LABEL_16:
  sub_10000CDB8(v30);
LABEL_17:
  v26 = objc_msgSend(v2, "contentView");
  v27 = objc_msgSend(v26, "pickerView");

  objc_msgSend(v27, "selectRow:inComponent:animated:", v13, 0, 0);
}

id sub_10005AA10()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupPickerViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10005AA98()
{
  return type metadata accessor for HomePodSetupPickerViewController(0);
}

uint64_t type metadata accessor for HomePodSetupPickerViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1000D7340;
  if (!qword_1000D7340)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HomePodSetupPickerViewController);
  return result;
}

void sub_10005AADC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_10009A378;
  v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_100010910(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
  }
}

uint64_t sub_10005AB60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService32HomePodSetupPickerViewController_presenter + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease(a1);
}

void sub_10005AB98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10005ABA0(a3);
}

void sub_10005ABA0(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[24];

  v2 = v1;
  v4 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v4);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_1000D55D0 != -1)
    swift_once(&qword_1000D55D0, sub_100059CB8);
  v8 = type metadata accessor for Logger(0, v5);
  v9 = sub_10001118C(v8, (uint64_t)qword_1000D72F0);
  v10 = Logger.logObject.getter(v9);
  v12 = static os_log_type_t.default.getter(v10, v11);
  if (os_log_type_enabled(v10, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v12, "HomePodSetupPicker: presenter:didUpdate viewModel", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }

  sub_1000111A4(a1, (uint64_t)v7);
  v14 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v7, 0, 1, v14);
  v15 = (uint64_t)&v2[OBJC_IVAR____TtC14HDSViewService32HomePodSetupPickerViewController_viewModel];
  swift_beginAccess(&v2[OBJC_IVAR____TtC14HDSViewService32HomePodSetupPickerViewController_viewModel], v17, 33, 0);
  sub_100011340((uint64_t)v7, v15, (uint64_t *)&unk_1000D6EC0);
  swift_endAccess(v17);
  if (objc_msgSend(v2, "isViewLoaded"))
    sub_10005A614(a1);
}

uint64_t sub_10005AD48()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

char *sub_10005AD6C(unsigned __int8 *a1)
{
  uint64_t v1;

  return sub_10005A1E8(a1, v1);
}

_QWORD *sub_10005AD74(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (_QWORD *)v2;
  }
  return v1;
}

uint64_t destroy for DismissalConfirmationInformation(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(a1[7]);
  return swift_bridgeObjectRelease(a1[9]);
}

_QWORD *initializeWithCopy for DismissalConfirmationInformation(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  return a1;
}

_QWORD *assignWithCopy for DismissalConfirmationInformation(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  v8 = a2[5];
  v9 = a1[5];
  a1[5] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  a1[6] = a2[6];
  v10 = a2[7];
  v11 = a1[7];
  a1[7] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  a1[8] = a2[8];
  v12 = a2[9];
  v13 = a1[9];
  a1[9] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  return a1;
}

__n128 initializeWithTake for DismissalConfirmationInformation(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

_QWORD *assignWithTake for DismissalConfirmationInformation(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = a2[7];
  v11 = a1[7];
  a1[6] = a2[6];
  a1[7] = v10;
  swift_bridgeObjectRelease(v11);
  v12 = a2[9];
  v13 = a1[9];
  a1[8] = a2[8];
  a1[9] = v12;
  swift_bridgeObjectRelease(v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for DismissalConfirmationInformation(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DismissalConfirmationInformation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DismissalConfirmationInformation()
{
  return &type metadata for DismissalConfirmationInformation;
}

uint64_t sub_10005B074(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[5];
  _OWORD v9[5];

  v2 = a1[3];
  v8[2] = a1[2];
  v8[3] = v2;
  v3 = a1[4];
  v4 = a1[1];
  v8[0] = *a1;
  v8[1] = v4;
  v5 = a2[3];
  v9[2] = a2[2];
  v9[3] = v5;
  v9[4] = a2[4];
  v6 = *a2;
  v9[1] = a2[1];
  v8[4] = v3;
  v9[0] = v6;
  return sub_10005B0CC((uint64_t *)v8, v9) & 1;
}

uint64_t sub_10005B0CC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = *a1;
  v5 = a1[1];
  v6 = a2[1];
  v7 = v4 == *a2 && v5 == v6;
  if (v7 || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2, v6, 0), result = 0, (v8 & 1) != 0))
  {
    v10 = a1[2];
    v11 = a1[3];
    v12 = a2[2];
    v13 = a2[3];
    v14 = v10 == v12 && v11 == v13;
    if (v14
      || (v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v12, v13, 0), result = 0, (v15 & 1) != 0))
    {
      if ((v16 = a1[4], v17 = a1[5], v18 = a2[4], v19 = a2[5], v16 == v18) && v17 == v19
        || (v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, v18, v19, 0), result = 0, (v20 & 1) != 0))
      {
        v21 = a1[6];
        v22 = a1[7];
        v23 = a2[6];
        v24 = a2[7];
        if (v21 == v23 && v22 == v24)
          return 1;
        else
          return _stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, v23, v24, 0);
      }
    }
  }
  return result;
}

void sub_10005B198(uint64_t *a1@<X8>)
{
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6;
  uint64_t v7;
  NSString v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = String._bridgeToObjectiveC()();
  v3 = (id)CUAddSuffixForCurrentDeviceClass();

  if (v3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v5 = v4;

    swift_bridgeObjectRetain(v5);
    v6._countAndFlagsBits = 0x444F50454D4F485FLL;
    v6._object = (void *)0xE800000000000000;
    String.append(_:)(v6);
    swift_bridgeObjectRelease(v5);
    v7 = v5;
    v8 = String._bridgeToObjectiveC()();
    v9 = sub_100006354(v8);

    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v12 = v11;

    v13 = String._bridgeToObjectiveC()();
    v14 = sub_100006354(v13);

    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v17 = v16;
    swift_bridgeObjectRelease(v7);

    v18 = String._bridgeToObjectiveC()();
    v19 = sub_100006354(v18);

    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v22 = v21;

    v23 = String._bridgeToObjectiveC()();
    v24 = sub_100006354(v23);

    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    v27 = v26;

    *a1 = v10;
    a1[1] = v12;
    a1[2] = v15;
    a1[3] = v17;
    a1[4] = v20;
    a1[5] = v22;
    a1[6] = v25;
    a1[7] = v27;
    a1[8] = 0;
    a1[9] = 0xE000000000000000;
  }
  else
  {
    __break(1u);
  }
}

void sub_10005B38C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = String._bridgeToObjectiveC()();
  v7 = sub_100006354(v6);

  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;

  v11 = sub_10000D604((uint64_t *)&unk_1000D7B70);
  v12 = swift_allocObject(v11, 72, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100099220;
  *(_QWORD *)(v12 + 56) = &type metadata for String;
  *(_QWORD *)(v12 + 64) = sub_100035088();
  *(_QWORD *)(v12 + 32) = a1;
  *(_QWORD *)(v12 + 40) = a2;
  swift_bridgeObjectRetain(a2);
  v13 = String.init(format:_:)(v8, v10, v12);
  v15 = v14;
  swift_bridgeObjectRelease(v10);
  v16 = String._bridgeToObjectiveC()();
  v17 = sub_100006354(v16);

  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v20 = v19;

  v21 = String._bridgeToObjectiveC()();
  v22 = sub_100006354(v21);

  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v25 = v24;

  v26 = String._bridgeToObjectiveC()();
  v27 = sub_100006354(v26);

  v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v30 = v29;

  *a3 = v18;
  a3[1] = v20;
  a3[2] = v13;
  a3[3] = v15;
  a3[4] = v23;
  a3[5] = v25;
  a3[6] = v28;
  a3[7] = v30;
  a3[8] = 0;
  a3[9] = 0xE000000000000000;
}

uint64_t sub_10005B564()
{
  Swift::String *v0;

  String.append(_:)(*v0);
  return 0x65676175676E616CLL;
}

uint64_t sub_10005B5B0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  Swift::String v8;
  void *object;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  void *v13;
  Swift::String v14;
  Swift::String v15;
  void *v16;
  Swift::String v17;
  uint64_t v18;
  void *v19;
  Swift::String v20;
  void *v21;
  Swift::String v22;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];

  strcpy((char *)v27, "language_");
  WORD1(v27[1]) = 0;
  HIDWORD(v27[1]) = -385875968;
  String.append(_:)(*(Swift::String *)&a1);
  v8._countAndFlagsBits = String.init<A>(reflecting:)(v27, &type metadata for String);
  object = v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(object);
  v10._countAndFlagsBits = 32;
  v10._object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  v11._countAndFlagsBits = 1031365995;
  v11._object = (void *)0xE400000000000000;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(0xE400000000000000);
  HIWORD(v24._object) = -4864;
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease(0xE000000000000000);
  strcpy((char *)&v24, "displayValue=");
  v27[0] = a3;
  v27[1] = a4;
  swift_bridgeObjectRetain(a4);
  v12._countAndFlagsBits = String.init<A>(reflecting:)(v27, &type metadata for String);
  v13 = v12._object;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(v13);
  v14._countAndFlagsBits = 32;
  v14._object = (void *)0xE100000000000000;
  String.append(_:)(v14);
  swift_bridgeObjectRetain(0x80000001000A1A20);
  String.append(_:)(v24);
  swift_bridgeObjectRelease(0x80000001000A1A20);
  swift_bridgeObjectRelease(v24._object);
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease(0xE000000000000000);
  strcpy((char *)v27, "siriLanguage=");
  HIWORD(v27[1]) = -4864;
  v24._countAndFlagsBits = a1;
  v24._object = a2;
  v25 = a3;
  v26 = a4;
  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRetain(a2);
  v15._countAndFlagsBits = String.init<A>(reflecting:)(&v24, &type metadata for SiriLanguage);
  v16 = v15._object;
  String.append(_:)(v15);
  swift_bridgeObjectRelease(v16);
  v17._countAndFlagsBits = 32;
  v17._object = (void *)0xE100000000000000;
  String.append(_:)(v17);
  v18 = v27[0];
  v19 = (void *)v27[1];
  v24._countAndFlagsBits = 0xD000000000000010;
  v24._object = (void *)0x80000001000A1A20;
  swift_bridgeObjectRetain(0x80000001000A1A20);
  v20._countAndFlagsBits = v18;
  v20._object = v19;
  String.append(_:)(v20);
  swift_bridgeObjectRelease(0x80000001000A1A20);
  swift_bridgeObjectRelease(v19);
  v21 = v24._object;
  swift_bridgeObjectRetain(v24._object);
  v22._countAndFlagsBits = 62;
  v22._object = (void *)0xE100000000000000;
  String.append(_:)(v22);
  swift_bridgeObjectRelease(v21);
  return v24._countAndFlagsBits;
}

uint64_t sub_10005B840()
{
  uint64_t v0;

  return sub_10005B5B0(*(_QWORD *)v0, *(void **)(v0 + 8), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

ValueMetadata *type metadata accessor for LanguageOption()
{
  return &type metadata for LanguageOption;
}

void sub_10005B85C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  id v7;

  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v7 = a3;
  v6(a2, a3);
  swift_release(v5);

}

uint64_t sub_10005B8BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000111E8(v2, qword_1000D7350);
  v3 = sub_10001118C(v2, (uint64_t)qword_1000D7350);
  if (qword_1000D55C0 != -1)
    swift_once(&qword_1000D55C0, sub_100058090);
  v4 = sub_10001118C(v2, (uint64_t)qword_1000DB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

void sub_10005B94C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char *v11;
  objc_class *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34[24];
  objc_super v35;

  v1 = v0;
  v2 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v2);
  v4 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for HomePodSetupViewModel(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (_QWORD *)((char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  v11 = (char *)v30 - v10;
  v12 = (objc_class *)type metadata accessor for HomePodSetupAppleMusicViewController(0);
  v35.receiver = v1;
  v35.super_class = v12;
  objc_msgSendSuper2(&v35, "viewDidLoad");
  v13 = (uint64_t)&v1[OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_viewModel];
  swift_beginAccess(&v1[OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_viewModel], v34, 0, 0);
  sub_100014824(v13, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10001486C((uint64_t)v4);
    if (qword_1000D55D8 != -1)
      swift_once(&qword_1000D55D8, sub_10005B8BC);
    v15 = type metadata accessor for Logger(0, v14);
    v16 = sub_10001118C(v15, (uint64_t)qword_1000D7350);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "HomePodSetupAppleMusicViewController: viewDidLoad failed because viewModel not set.", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

  }
  else
  {
    sub_1000148AC((uint64_t)v4, (uint64_t)v11);
    if (qword_1000D55D8 != -1)
      swift_once(&qword_1000D55D8, sub_10005B8BC);
    v21 = type metadata accessor for Logger(0, v20);
    sub_10001118C(v21, (uint64_t)qword_1000D7350);
    v22 = sub_1000111A4((uint64_t)v11, (uint64_t)v9);
    v23 = Logger.logObject.getter(v22);
    v25 = static os_log_type_t.default.getter(v23, v24);
    if (os_log_type_enabled(v23, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(12, -1);
      v31 = swift_slowAlloc(32, -1);
      v33 = v31;
      *(_DWORD *)v26 = 136315138;
      v30[1] = v26 + 4;
      v28 = *v9;
      v27 = v9[1];
      swift_bridgeObjectRetain(v27);
      v32 = sub_10003EF58(v28, v27, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33);
      swift_bridgeObjectRelease(v27);
      sub_1000148F0((uint64_t)v9);
      _os_log_impl((void *)&_mh_execute_header, v23, v25, "HomePodSetupAppleMusicViewController: viewDidLoad with title %s", v26, 0xCu);
      v29 = v31;
      swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v29, -1, -1);
      swift_slowDealloc(v26, -1, -1);
    }
    else
    {
      sub_1000148F0((uint64_t)v9);
    }

    objc_msgSend(v1, "setDismissalType:", *(_QWORD *)&v11[*(int *)(v5 + 72)]);
    sub_1000148F0((uint64_t)v11);
  }
}

void sub_10005BCFC(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  NSString *v12;
  NSString *v13;
  NSString *v14;
  NSString *v15;
  id v16;
  id v17;
  unint64_t v18;
  Class isa;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  _QWORD aBlock[5];
  uint64_t v25;
  char v26[192];
  objc_super v27;

  v27.receiver = v1;
  v27.super_class = (Class)type metadata accessor for HomePodSetupAppleMusicViewController(0);
  objc_msgSendSuper2(&v27, "viewWillAppear:", a1 & 1);
  v23 = objc_msgSend(objc_allocWithZone((Class)SKCloudServiceSetupViewController), "init");
  objc_msgSend(v23, "setDelegate:", v1);
  v3 = sub_10000D604((uint64_t *)&unk_1000D7410);
  inited = swift_initStackObject(v3, v26);
  *(_OWORD *)(inited + 16) = xmmword_10009A450;
  *(_QWORD *)(inited + 32) = SKCloudServiceSetupOptionsActionKey;
  type metadata accessor for SKCloudServiceSetupAction(0);
  *(_QWORD *)(inited + 40) = SKCloudServiceSetupActionSubscribe;
  *(_QWORD *)(inited + 64) = v5;
  *(_QWORD *)(inited + 72) = SKCloudServiceSetupOptionsMessageIdentifierKey;
  type metadata accessor for SKCloudServiceSetupMessageIdentifier(0);
  *(_QWORD *)(inited + 80) = SKCloudServiceSetupMessageIdentifierJoin;
  v6 = (void *)_SKCloudServiceSetupOptionsAudioAccessorySerialNumberKey;
  *(_QWORD *)(inited + 104) = v7;
  *(_QWORD *)(inited + 112) = v6;
  v8 = *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_deviceSerialNumber + 8];
  *(_QWORD *)(inited + 120) = *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_deviceSerialNumber];
  *(_QWORD *)(inited + 128) = v8;
  v9 = (void *)_SKCloudServiceSetupOptionsAudioAccessoryUniqueDeviceIdentifierKey;
  *(_QWORD *)(inited + 144) = &type metadata for String;
  *(_QWORD *)(inited + 152) = v9;
  v10 = *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_deviceGUID];
  v11 = *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_deviceGUID + 8];
  *(_QWORD *)(inited + 184) = &type metadata for String;
  *(_QWORD *)(inited + 160) = v10;
  *(_QWORD *)(inited + 168) = v11;
  v12 = SKCloudServiceSetupOptionsActionKey;
  v13 = SKCloudServiceSetupActionSubscribe;
  v14 = SKCloudServiceSetupOptionsMessageIdentifierKey;
  v15 = SKCloudServiceSetupMessageIdentifierJoin;
  v16 = v6;
  swift_bridgeObjectRetain(v8);
  v17 = v9;
  swift_bridgeObjectRetain(v11);
  v18 = sub_10000CAA8(inited);
  type metadata accessor for SKCloudServiceSetupOptionsKey(0);
  sub_10005D064();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v18);
  v20 = swift_allocObject(&unk_1000C42D0, 24, 7);
  swift_unknownObjectWeakInit(v20 + 16, v1);
  aBlock[4] = sub_10005D0D0;
  v25 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10005B85C;
  aBlock[3] = &unk_1000C42E8;
  v21 = _Block_copy(aBlock);
  objc_msgSend(v23, "loadWithOptions:completionHandler:", isa, v21, swift_release(v25).n128_f64[0]);
  _Block_release(v21);

  v22 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_vcAppleMusic];
  *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_vcAppleMusic] = v23;

}

void sub_10005BF6C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t Strong;
  void *v18;
  uint64_t v19;
  uint64_t v20[3];

  v5 = a3 + 16;
  if (qword_1000D55D8 != -1)
    swift_once(&qword_1000D55D8, sub_10005B8BC);
  v6 = type metadata accessor for Logger(0, a2);
  sub_10001118C(v6, (uint64_t)qword_1000D7350);
  swift_errorRetain(a2);
  v7 = swift_errorRetain(a2);
  v8 = Logger.logObject.getter(v7);
  v10 = static os_log_type_t.default.getter(v8, v9);
  if (os_log_type_enabled(v8, v10))
  {
    v11 = swift_slowAlloc(18, -1);
    v12 = swift_slowAlloc(32, -1);
    v20[0] = v12;
    *(_DWORD *)v11 = 67109378;
    LODWORD(v19) = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, (char *)&v19 + 4);
    *(_WORD *)(v11 + 8) = 2080;
    v19 = a2;
    v13 = sub_10000D604((uint64_t *)&unk_1000D7420);
    v14 = Optional.debugDescription.getter(v13);
    v16 = v15;
    v19 = sub_10003EF58(v14, v15, v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, v20);
    swift_bridgeObjectRelease(v16);
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    _os_log_impl((void *)&_mh_execute_header, v8, v10, "HomePodSetupAppleMusicViewController: AppleMusic load view Controller completion called with results:%{BOOL}d error:%s", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
  }
  else
  {
    swift_errorRelease(a2);
    swift_errorRelease(a2);
  }

  swift_beginAccess(v5, v20, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v18 = (void *)Strong;
    sub_10005C248();

  }
}

void sub_10005C248()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  Class isa;
  uint64_t v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  NSString v59;
  NSString v60;
  NSString v61;
  NSString v62;
  id v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  id v67;
  NSObject *v68;
  uint64_t v69[3];

  v1 = v0;
  v2 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v2);
  v4 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for HomePodSetupViewModel(0);
  v6 = *(NSObject **)(v5 - 8);
  __chkstk_darwin(v5);
  v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D55D8 != -1)
    swift_once(&qword_1000D55D8, sub_10005B8BC);
  v10 = type metadata accessor for Logger(0, v7);
  v11 = sub_10001118C(v10, (uint64_t)qword_1000D7350);
  v12 = Logger.logObject.getter(v11);
  v14 = static os_log_type_t.default.getter(v12, v13);
  if (os_log_type_enabled(v12, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v14, "HomePodSetupAppleMusicViewController: AppleMusic show StoreKit view\n", v15, 2u);
    swift_slowDealloc(v15, -1, -1);
  }

  v17 = *(void **)&v0[OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_vcAppleMusic];
  if (v17)
  {
    v18 = v17;
    v19 = objc_msgSend(v18, "view");
    if (v19)
    {
      v20 = v19;
      v65 = v9;
      objc_msgSend(v0, "addChildViewController:", v18);
      v21 = objc_msgSend(v0, "contentView");
      objc_msgSend(v21, "addSubview:", v20);

      objc_msgSend(v20, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v22 = objc_msgSend(v1, "contentView");
      v23 = objc_msgSend(v22, "cardStyle");

      v24 = objc_msgSend(v1, "traitCollection");
      v25 = objc_msgSend(v24, "prx_cardSizeClass");
      v68 = v6;
      v26 = v25;

      PRXCardPreferredSize(v23, v26);
      v28 = v27;
      v67 = (id)objc_opt_self(NSLayoutConstraint);
      v29 = sub_10000D604(&qword_1000D6EE0);
      v30 = swift_allocObject(v29, 72, 7);
      *(_OWORD *)(v30 + 16) = xmmword_100099550;
      v31 = objc_msgSend(v1, "contentView");
      v32 = objc_msgSend(v31, "heightAnchor");

      v33 = objc_msgSend(v32, "constraintEqualToConstant:", v28);
      *(_QWORD *)(v30 + 32) = v33;
      v34 = objc_msgSend(v20, "topAnchor");
      v66 = v5;
      v35 = objc_msgSend(v1, "contentView");
      v36 = objc_msgSend(v35, "topAnchor");

      v37 = objc_msgSend(v34, "constraintEqualToAnchor:", v36);
      *(_QWORD *)(v30 + 40) = v37;
      v38 = objc_msgSend(v20, "bottomAnchor");
      v39 = objc_msgSend(v1, "contentView");
      v40 = objc_msgSend(v39, "bottomAnchor");

      v41 = objc_msgSend(v38, "constraintEqualToAnchor:", v40);
      *(_QWORD *)(v30 + 48) = v41;
      v42 = objc_msgSend(v20, "leadingAnchor");
      v43 = objc_msgSend(v1, "contentView");
      v44 = objc_msgSend(v43, "leadingAnchor");

      v45 = objc_msgSend(v42, "constraintEqualToAnchor:", v44);
      *(_QWORD *)(v30 + 56) = v45;
      v46 = objc_msgSend(v20, "trailingAnchor");
      v47 = v66;
      v48 = objc_msgSend(v1, "contentView");
      v49 = objc_msgSend(v48, "trailingAnchor");

      v50 = objc_msgSend(v46, "constraintEqualToAnchor:", v49);
      *(_QWORD *)(v30 + 64) = v50;
      v69[0] = v30;
      specialized Array._endMutation()(v51);
      v52 = v69[0];
      sub_100014934();
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v52);
      objc_msgSend(v67, "activateConstraints:", isa);

      objc_msgSend(v18, "didMoveToParentViewController:", v1);
      v54 = (uint64_t)&v1[OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_viewModel];
      swift_beginAccess(&v1[OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_viewModel], v69, 0, 0);
      sub_100014824(v54, (uint64_t)v4);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v68[6].isa)(v4, 1, v47) == 1)
      {

        sub_10001486C((uint64_t)v4);
      }
      else
      {
        v57 = (uint64_t)v65;
        sub_1000148AC((uint64_t)v4, (uint64_t)v65);
        if ((*(_BYTE *)(v57 + *(int *)(v47 + 72)) & 2) != 0 || (v58 = v57 + *(int *)(v47 + 76), !*(_QWORD *)(v58 + 8)))
        {

        }
        else
        {
          v68 = *(NSObject **)(v58 + 40);
          v59 = String._bridgeToObjectiveC()();
          v60 = String._bridgeToObjectiveC()();
          v61 = String._bridgeToObjectiveC()();
          v62 = String._bridgeToObjectiveC()();
          v63 = objc_msgSend(v1, "dismissalConfirmationActionWithTitle:message:confirmButtonTitle:cancelButtonTitle:", v59, v60, v61, v62);

          objc_msgSend(v1, "setDismissButtonAction:", v63);
        }
        sub_1000148F0(v57);
      }
      return;
    }

  }
  v68 = Logger.logObject.getter(v16);
  v55 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v68, v55))
  {
    v56 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v56 = 0;
    _os_log_impl((void *)&_mh_execute_header, v68, v55, "HomePodSetupAppleMusicViewController: AppleMusic controller was not initilized properly", v56, 2u);
    swift_slowDealloc(v56, -1, -1);
  }

}

id sub_10005C994()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupAppleMusicViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10005CA38()
{
  return type metadata accessor for HomePodSetupAppleMusicViewController(0);
}

uint64_t type metadata accessor for HomePodSetupAppleMusicViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1000D7398;
  if (!qword_1000D7398)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HomePodSetupAppleMusicViewController);
  return result;
}

void sub_10005CA7C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_10009A498;
  sub_100010910(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_10009A4B0;
    v4[3] = &unk_10009A4C8;
    v4[4] = &unk_10009A4C8;
    swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
  }
}

uint64_t sub_10005CB08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_presenter + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease(a1);
}

id sub_10005CB40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10005CEAC(a3);
}

void sub_10005CB48(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t Strong;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  NSObject *v19;
  _BYTE v20[48];
  _OWORD v21[2];
  uint64_t v22;
  _OWORD v23[3];

  v3 = v2;
  if (qword_1000D55D8 != -1)
    swift_once(&qword_1000D55D8, sub_10005B8BC);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10001118C(v4, (uint64_t)qword_1000D7350);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "HomePodSetupAppleMusicViewController: AppleMusic hide StoreKit view\n", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  v11 = *(void **)&v2[OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_vcAppleMusic];
  if (!v11)
  {
    v19 = Logger.logObject.getter(v10);
    v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v17, "HomePodSetupAppleMusicViewController: AppleMusic controller was not initilized properly", v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }
LABEL_11:

    return;
  }
  v19 = v11;
  -[NSObject willMoveToParentViewController:](v19, "willMoveToParentViewController:", 0);
  v12 = -[NSObject view](v19, "view");
  if (v12)
  {
    v13 = v12;
    objc_msgSend(v12, "removeFromSuperview");

    v14 = objc_msgSend(v3, "presentingViewController");
    objc_msgSend(v14, "removeFromParentViewController");

    Strong = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_presenter]);
    if (Strong)
    {
      v16 = Strong;
      v22 = 0;
      memset(v21, 0, sizeof(v21));
      memset(&v20[8], 0, 40);
      v20[0] = 1;
      sub_100011340((uint64_t)v21, (uint64_t)&v20[8], &qword_1000D6ED0);
      v23[0] = *(_OWORD *)v20;
      v23[1] = *(_OWORD *)&v20[16];
      v23[2] = *(_OWORD *)&v20[32];
      sub_10006B04C((char *)v23);

      swift_unknownObjectRelease(v16);
      sub_100011384((uint64_t)v23);
      return;
    }
    goto LABEL_11;
  }
  __break(1u);
}

id sub_10005CEAC(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  id result;
  _BYTE v18[24];

  v2 = v1;
  v4 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v4);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_1000D55D8 != -1)
    swift_once(&qword_1000D55D8, sub_10005B8BC);
  v8 = type metadata accessor for Logger(0, v5);
  v9 = sub_10001118C(v8, (uint64_t)qword_1000D7350);
  v10 = Logger.logObject.getter(v9);
  v12 = static os_log_type_t.default.getter(v10, v11);
  if (os_log_type_enabled(v10, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v12, "HomePodSetupAppleMusicViewController: presenter:didUpdate viewModel", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }

  sub_1000111A4(a1, (uint64_t)v7);
  v14 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v7, 0, 1, v14);
  v15 = (uint64_t)&v2[OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_viewModel];
  swift_beginAccess(&v2[OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_viewModel], v18, 33, 0);
  sub_100011340((uint64_t)v7, v15, (uint64_t *)&unk_1000D6EC0);
  swift_endAccess(v18);
  result = objc_msgSend(v2, "isViewLoaded");
  if ((_DWORD)result)
    return objc_msgSend(v2, "setDismissalType:", *(_QWORD *)(a1 + *(int *)(v14 + 72)));
  return result;
}

unint64_t sub_10005D064()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D5970;
  if (!qword_1000D5970)
  {
    type metadata accessor for SKCloudServiceSetupOptionsKey(255);
    result = swift_getWitnessTable(&unk_100098DE4, v1);
    atomic_store(result, (unint64_t *)&qword_1000D5970);
  }
  return result;
}

uint64_t sub_10005D0AC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10005D0D0(char a1, uint64_t a2)
{
  uint64_t v2;

  sub_10005BF6C(a1, a2, v2);
}

uint64_t sub_10005D0D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005D0E8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005D0F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000111E8(v2, qword_1000D7430);
  v3 = sub_10001118C(v2, (uint64_t)qword_1000D7430);
  if (qword_1000D55C0 != -1)
    swift_once(&qword_1000D55C0, sub_100058090);
  v4 = sub_10001118C(v2, (uint64_t)qword_1000DB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

void sub_10005D180()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  objc_class *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  os_log_type_t v25;
  _BOOL4 v26;
  uint8_t *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  NSString v31;
  NSString v32;
  void *v33;
  id v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  Class isa;
  void *v44;
  uint64_t v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  Class v50;
  id v51;
  id v52;
  uint64_t v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  Class v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  NSString v70;
  NSString v71;
  NSString v72;
  NSString v73;
  id v74;
  __int128 v75;
  id v76;
  unint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82[24];
  objc_super v83;

  v1 = v0;
  v2 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v2);
  v4 = (char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for HomePodSetupViewModel(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (uint64_t *)((char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  v11 = (uint64_t)&v75 - v10;
  v12 = (objc_class *)type metadata accessor for HomePodSetupLeftRightViewController(0);
  v83.receiver = v1;
  v83.super_class = v12;
  objc_msgSendSuper2(&v83, "viewDidLoad");
  v13 = (uint64_t)&v1[OBJC_IVAR____TtC14HDSViewService35HomePodSetupLeftRightViewController_viewModel];
  swift_beginAccess(&v1[OBJC_IVAR____TtC14HDSViewService35HomePodSetupLeftRightViewController_viewModel], v82, 0, 0);
  sub_100014824(v13, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10001486C((uint64_t)v4);
    if (qword_1000D55E0 != -1)
      swift_once(&qword_1000D55E0, sub_10005D0F0);
    v15 = type metadata accessor for Logger(0, v14);
    v16 = sub_10001118C(v15, (uint64_t)qword_1000D7430);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "HomePodSetupLeftRight: viewDidLoad failed because viewModel not set.", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

  }
  else
  {
    sub_1000148AC((uint64_t)v4, v11);
    if (qword_1000D55E0 != -1)
      swift_once(&qword_1000D55E0, sub_10005D0F0);
    v21 = type metadata accessor for Logger(0, v20);
    sub_10001118C(v21, (uint64_t)qword_1000D7430);
    v22 = sub_1000111A4(v11, (uint64_t)v9);
    v23 = Logger.logObject.getter(v22);
    v25 = static os_log_type_t.default.getter(v23, v24);
    v26 = os_log_type_enabled(v23, v25);
    v79 = v5;
    if (v26)
    {
      v27 = (uint8_t *)swift_slowAlloc(12, -1);
      v28 = swift_slowAlloc(32, -1);
      v81 = v28;
      *(_DWORD *)v27 = 136315138;
      v78 = v1;
      v30 = *v9;
      v29 = v9[1];
      swift_bridgeObjectRetain(v29);
      v80 = sub_10003EF58(v30, v29, &v81);
      v1 = v78;
      v5 = v79;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v80, &v81);
      swift_bridgeObjectRelease(v29);
      sub_1000148F0((uint64_t)v9);
      _os_log_impl((void *)&_mh_execute_header, v23, v25, "HomePodSetupLeftRight: viewDidLoad with title %s", v27, 0xCu);
      swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v27, -1, -1);
    }
    else
    {
      sub_1000148F0((uint64_t)v9);
    }

    v31 = String._bridgeToObjectiveC()();
    objc_msgSend(v1, "setTitle:", v31);

    v32 = String._bridgeToObjectiveC()();
    objc_msgSend(v1, "setSubtitle:", v32);

    v78 = (char *)*(int *)(v5 + 72);
    objc_msgSend(v1, "setDismissalType:", *(_QWORD *)&v78[v11]);
    v33 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService35HomePodSetupLeftRightViewController_buttonStackView];
    objc_msgSend(v33, "setAxis:", 0);
    objc_msgSend(v33, "setSpacing:", 20.0);
    v34 = objc_msgSend(v1, "contentView");
    objc_msgSend(v34, "addSubview:", v33);

    v35 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService35HomePodSetupLeftRightViewController_leftButton];
    v36 = (void *)objc_opt_self(NSLayoutConstraint);
    v37 = sub_10000D604(&qword_1000D6EE0);
    v38 = swift_allocObject(v37, 40, 7);
    v75 = xmmword_100099060;
    *(_OWORD *)(v38 + 16) = xmmword_100099060;
    v39 = objc_msgSend(v35, "widthAnchor");
    v40 = objc_msgSend(v39, "constraintEqualToConstant:", 96.0);

    *(_QWORD *)(v38 + 32) = v40;
    v81 = v38;
    specialized Array._endMutation()(v41);
    v42 = v81;
    v77 = sub_100014934();
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v42);
    v76 = v36;
    objc_msgSend(v36, "activateConstraints:", isa);

    objc_msgSend(v35, "addTarget:action:forControlEvents:", v1, "leftButtonPressed:", 64);
    objc_msgSend(v33, "addArrangedSubview:", v35);
    v44 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService35HomePodSetupLeftRightViewController_rightButton];
    v45 = swift_allocObject(v37, 40, 7);
    *(_OWORD *)(v45 + 16) = v75;
    v46 = objc_msgSend(v44, "widthAnchor");
    v47 = objc_msgSend(v46, "constraintEqualToConstant:", 96.0);

    *(_QWORD *)(v45 + 32) = v47;
    v81 = v45;
    specialized Array._endMutation()(v48);
    v49 = v81;
    v50 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v49);
    objc_msgSend(v36, "activateConstraints:", v50);

    objc_msgSend(v44, "addTarget:action:forControlEvents:", v1, "rightButtonPressed:", 64);
    objc_msgSend(v33, "addArrangedSubview:", v44);
    v51 = objc_msgSend(v1, "contentView");
    v52 = objc_msgSend(v51, "mainContentGuide");

    objc_msgSend(v33, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v53 = swift_allocObject(v37, 56, 7);
    *(_OWORD *)(v53 + 16) = xmmword_10009A4F0;
    v54 = objc_msgSend(v33, "topAnchor");
    v55 = objc_msgSend(v52, "topAnchor");
    v56 = objc_msgSend(v54, "constraintGreaterThanOrEqualToAnchor:", v55);

    *(_QWORD *)(v53 + 32) = v56;
    v57 = objc_msgSend(v33, "centerYAnchor");
    v58 = objc_msgSend(v52, "centerYAnchor");
    v59 = objc_msgSend(v57, "constraintEqualToAnchor:", v58);

    *(_QWORD *)(v53 + 40) = v59;
    v60 = v79;
    v61 = objc_msgSend(v33, "centerXAnchor");
    v62 = objc_msgSend(v52, "centerXAnchor");
    v63 = objc_msgSend(v61, "constraintEqualToAnchor:", v62);

    *(_QWORD *)(v53 + 48) = v63;
    v81 = v53;
    specialized Array._endMutation()(v64);
    v65 = v81;
    v66 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v65);
    objc_msgSend(v76, "activateConstraints:", v66);

    v67 = *(_QWORD *)(v11 + *(int *)(v60 + 40));
    v68 = swift_allocObject(&unk_1000C4350, 24, 7);
    swift_unknownObjectWeakInit(v68 + 16, v1);
    v69 = swift_bridgeObjectRetain(v67);
    sub_10007E6FC(v69, (uint64_t)sub_10005E728, v68);
    swift_bridgeObjectRelease(v67);
    swift_release(v68);
    if ((v78[v11] & 2) != 0 || !*(_QWORD *)(v11 + *(int *)(v60 + 76) + 8))
    {

    }
    else
    {
      v70 = String._bridgeToObjectiveC()();
      v71 = String._bridgeToObjectiveC()();
      v72 = String._bridgeToObjectiveC()();
      v73 = String._bridgeToObjectiveC()();
      v74 = objc_msgSend(v1, "dismissalConfirmationActionWithTitle:message:confirmButtonTitle:cancelButtonTitle:", v70, v71, v72, v73);

      objc_msgSend(v1, "setDismissButtonAction:", v74);
    }
    sub_1000148F0(v11);
  }
}

void sub_10005DAA0(unsigned __int8 *a1, uint64_t a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t Strong;
  void *v15;
  uint64_t v16;
  _BYTE v17[48];
  _OWORD v18[2];
  uint64_t v19;
  _OWORD v20[3];
  _BYTE v21[24];

  v2 = *a1;
  v3 = a2 + 16;
  if (qword_1000D55E0 != -1)
    swift_once(&qword_1000D55E0, sub_10005D0F0);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10001118C(v4, (uint64_t)qword_1000D7430);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v20[0] = v10;
    *(_DWORD *)v9 = 136315138;
    v11 = sub_10000E9EC(v2);
    v13 = v12;
    *(_QWORD *)v17 = sub_10003EF58(v11, v12, (uint64_t *)v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v17, &v17[8]);
    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "HomePodSetupLeftRight: User tapped on button: %s", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }

  swift_beginAccess(v3, v21, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v15 = (void *)Strong;
    v16 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC14HDSViewService35HomePodSetupLeftRightViewController_presenter);

    if (v16)
    {
      v19 = 0;
      memset(v18, 0, sizeof(v18));
      memset(&v17[8], 0, 40);
      v17[0] = v2;
      sub_100011340((uint64_t)v18, (uint64_t)&v17[8], &qword_1000D6ED0);
      v20[0] = *(_OWORD *)v17;
      v20[1] = *(_OWORD *)&v17[16];
      v20[2] = *(_OWORD *)&v17[32];
      sub_10006B04C((char *)v20);
      swift_unknownObjectRelease(v16);
      sub_100011384((uint64_t)v20);
    }
  }
}

id sub_10005DE54()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupLeftRightViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10005DEF0()
{
  return type metadata accessor for HomePodSetupLeftRightViewController(0);
}

uint64_t type metadata accessor for HomePodSetupLeftRightViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1000D7490;
  if (!qword_1000D7490)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HomePodSetupLeftRightViewController);
  return result;
}

void sub_10005DF34(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_10009A528;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_100010910(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
  }
}

uint64_t sub_10005DFBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService35HomePodSetupLeftRightViewController_presenter + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease(a1);
}

id sub_10005DFF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10005DFFC(a3);
}

id sub_10005DFFC(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  id result;
  NSString v17;
  NSString v18;
  _BYTE v20[24];

  v2 = v1;
  v4 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v4);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_1000D55E0 != -1)
    swift_once(&qword_1000D55E0, sub_10005D0F0);
  v8 = type metadata accessor for Logger(0, v5);
  v9 = sub_10001118C(v8, (uint64_t)qword_1000D7430);
  v10 = Logger.logObject.getter(v9);
  v12 = static os_log_type_t.default.getter(v10, v11);
  if (os_log_type_enabled(v10, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v12, "HomePodSetupLeftRight: presenter:didUpdate viewModel", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }

  sub_1000111A4(a1, (uint64_t)v7);
  v14 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v7, 0, 1, v14);
  v15 = (uint64_t)&v2[OBJC_IVAR____TtC14HDSViewService35HomePodSetupLeftRightViewController_viewModel];
  swift_beginAccess(&v2[OBJC_IVAR____TtC14HDSViewService35HomePodSetupLeftRightViewController_viewModel], v20, 33, 0);
  sub_100011340((uint64_t)v7, v15, (uint64_t *)&unk_1000D6EC0);
  swift_endAccess(v20);
  result = objc_msgSend(v2, "isViewLoaded");
  if ((_DWORD)result)
  {
    v17 = String._bridgeToObjectiveC()();
    objc_msgSend(v2, "setTitle:", v17);

    v18 = String._bridgeToObjectiveC()();
    objc_msgSend(v2, "setSubtitle:", v18);

    return objc_msgSend(v2, "setDismissalType:", *(_QWORD *)(a1 + *(int *)(v14 + 72)));
  }
  return result;
}

uint64_t sub_10005E1FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t result;
  uint64_t v11;
  _BYTE v12[48];
  _OWORD v13[2];
  uint64_t v14;
  _OWORD v15[3];

  v3 = v2;
  if (qword_1000D55E0 != -1)
    swift_once(&qword_1000D55E0, sub_10005D0F0);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10001118C(v4, (uint64_t)qword_1000D7430);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "HomePodSetupLeftRight: User tapped on left speaker button", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  result = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC14HDSViewService35HomePodSetupLeftRightViewController_presenter);
  if (result)
  {
    v11 = result;
    v14 = 0;
    memset(v13, 0, sizeof(v13));
    memset(&v12[8], 0, 40);
    v12[0] = 6;
    sub_100011340((uint64_t)v13, (uint64_t)&v12[8], &qword_1000D6ED0);
    v15[0] = *(_OWORD *)v12;
    v15[1] = *(_OWORD *)&v12[16];
    v15[2] = *(_OWORD *)&v12[32];
    sub_10006B04C((char *)v15);
    swift_unknownObjectRelease(v11);
    return sub_100011384((uint64_t)v15);
  }
  return result;
}

uint64_t sub_10005E34C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t result;
  uint64_t v11;
  _BYTE v12[48];
  _OWORD v13[2];
  uint64_t v14;
  _OWORD v15[3];

  v3 = v2;
  if (qword_1000D55E0 != -1)
    swift_once(&qword_1000D55E0, sub_10005D0F0);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10001118C(v4, (uint64_t)qword_1000D7430);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "HomePodSetupLeftRight: User tapped on right speaker button", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  result = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC14HDSViewService35HomePodSetupLeftRightViewController_presenter);
  if (result)
  {
    v11 = result;
    v14 = 0;
    memset(v13, 0, sizeof(v13));
    memset(&v12[8], 0, 40);
    v12[0] = 7;
    sub_100011340((uint64_t)v13, (uint64_t)&v12[8], &qword_1000D6ED0);
    v15[0] = *(_OWORD *)v12;
    v15[1] = *(_OWORD *)&v12[16];
    v15[2] = *(_OWORD *)&v12[32];
    sub_10006B04C((char *)v15);
    swift_unknownObjectRelease(v11);
    return sub_100011384((uint64_t)v15);
  }
  return result;
}

id sub_10005E49C(uint64_t a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  id v5;
  char *v6;
  uint64_t v7;
  NSString v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  objc_class *v18;
  id v19;
  uint64_t v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  char *v32;
  uint64_t v33;
  objc_super v35;

  v3 = &v1[OBJC_IVAR____TtC14HDSViewService35HomePodSetupLeftRightViewController_presenter];
  *((_QWORD *)v3 + 1) = 0;
  swift_unknownObjectWeakInit(v3, 0);
  v4 = OBJC_IVAR____TtC14HDSViewService35HomePodSetupLeftRightViewController_buttonStackView;
  v5 = objc_allocWithZone((Class)UIStackView);
  v6 = v1;
  *(_QWORD *)&v1[v4] = objc_msgSend(v5, "init");
  v7 = OBJC_IVAR____TtC14HDSViewService35HomePodSetupLeftRightViewController_leftButton;
  v8 = String._bridgeToObjectiveC()();
  v9 = sub_100006354(v8);

  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v13 = String._bridgeToObjectiveC()();
  v14 = sub_100006354(v13);

  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  v18 = (objc_class *)type metadata accessor for StereoPairButton();
  v19 = objc_allocWithZone(v18);
  *(_QWORD *)&v6[v7] = sub_100058990(v10, v12, v15, v17);
  v20 = OBJC_IVAR____TtC14HDSViewService35HomePodSetupLeftRightViewController_rightButton;
  v21 = String._bridgeToObjectiveC()();
  v22 = sub_100006354(v21);

  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v25 = v24;

  v26 = String._bridgeToObjectiveC()();
  v27 = sub_100006354(v26);

  v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v30 = v29;

  v31 = objc_allocWithZone(v18);
  *(_QWORD *)&v6[v20] = sub_100058990(v23, v25, v28, v30);
  v32 = &v6[OBJC_IVAR____TtC14HDSViewService35HomePodSetupLeftRightViewController_viewModel];
  v33 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v32, 1, 1, v33);

  v35.receiver = v6;
  v35.super_class = (Class)type metadata accessor for HomePodSetupLeftRightViewController(0);
  return objc_msgSendSuper2(&v35, "initWithContentView:", a1);
}

uint64_t sub_10005E704()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10005E728(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_10005DAA0(a1, v1);
}

uint64_t sub_10005E730(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000111E8(v2, qword_1000D74A0);
  v3 = sub_10001118C(v2, (uint64_t)qword_1000D74A0);
  if (qword_1000D55C0 != -1)
    swift_once(&qword_1000D55C0, sub_100058090);
  v4 = sub_10001118C(v2, (uint64_t)qword_1000DB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

void sub_10005E7C0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  objc_class *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  uint64_t v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSString v39;
  NSString v40;
  NSString v41;
  NSString v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  uint64_t v48;
  void *v49;
  id v50;
  id v51;
  id v52;
  _QWORD *v53;
  id v54;
  id v55;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  Class isa;
  uint64_t v78;
  id v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  void *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE v89[24];
  objc_super v90;

  v1 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v1);
  v85 = (uint64_t)&v80 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = type metadata accessor for AdjustedImage(0);
  v3 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin(v86);
  v5 = (char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v6);
  v8 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  v10 = *((_QWORD *)v9 - 1);
  v11 = __chkstk_darwin(v9);
  v13 = (uint64_t *)((char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v15 = (char *)&v80 - v14;
  v16 = (objc_class *)type metadata accessor for HomePodSetupSiriWelcomeViewController(0);
  v90.receiver = v0;
  v90.super_class = v16;
  objc_msgSendSuper2(&v90, "viewDidLoad");
  v17 = (uint64_t)&v0[OBJC_IVAR____TtC14HDSViewService37HomePodSetupSiriWelcomeViewController_viewModel];
  swift_beginAccess(&v0[OBJC_IVAR____TtC14HDSViewService37HomePodSetupSiriWelcomeViewController_viewModel], v89, 0, 0);
  sub_10000E0F0(v17, (uint64_t)v8, (uint64_t *)&unk_1000D6EC0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(v8, 1, v9) != 1)
  {
    v81 = v5;
    v82 = v3;
    v83 = v0;
    sub_100011228((uint64_t)v8, (uint64_t)v15, type metadata accessor for HomePodSetupViewModel);
    if (qword_1000D55E8 != -1)
      swift_once(&qword_1000D55E8, sub_10005E730);
    v25 = type metadata accessor for Logger(0, v24);
    sub_10001118C(v25, (uint64_t)qword_1000D74A0);
    v84 = v15;
    v26 = sub_1000111A4((uint64_t)v15, (uint64_t)v13);
    v27 = Logger.logObject.getter(v26);
    v29 = static os_log_type_t.default.getter(v27, v28);
    if (os_log_type_enabled(v27, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc(12, -1);
      v31 = swift_slowAlloc(32, -1);
      v88 = v31;
      *(_DWORD *)v30 = 136315138;
      v33 = *v13;
      v32 = v13[1];
      swift_bridgeObjectRetain(v32);
      v87 = sub_10003EF58(v33, v32, &v88);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, &v88);
      swift_bridgeObjectRelease(v32);
      sub_10001126C((uint64_t)v13, type metadata accessor for HomePodSetupViewModel);
      _os_log_impl((void *)&_mh_execute_header, v27, v29, "HomePodSetupSiriWelcome: viewDidLoad with title %s", v30, 0xCu);
      swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v31, -1, -1);
      swift_slowDealloc(v30, -1, -1);
    }
    else
    {
      sub_10001126C((uint64_t)v13, type metadata accessor for HomePodSetupViewModel);
    }

    v35 = v83;
    v34 = (uint64_t)v84;
    sub_10005F544((uint64_t)v84);
    v36 = *(_QWORD *)(v34 + v9[10]);
    v37 = swift_allocObject(&unk_1000C43A8, 24, 7);
    swift_unknownObjectWeakInit(v37 + 16, v35);
    v38 = swift_bridgeObjectRetain(v36);
    sub_10007E6FC(v38, (uint64_t)sub_100060354, v37);
    swift_bridgeObjectRelease(v36);
    swift_release(v37);
    if ((*(_BYTE *)(v34 + v9[18]) & 2) == 0 && *(_QWORD *)(v34 + v9[19] + 8))
    {
      v39 = String._bridgeToObjectiveC()();
      v40 = String._bridgeToObjectiveC()();
      v41 = String._bridgeToObjectiveC()();
      v42 = String._bridgeToObjectiveC()();
      v43 = objc_msgSend(v35, "dismissalConfirmationActionWithTitle:message:confirmButtonTitle:cancelButtonTitle:", v39, v40, v41, v42);

      objc_msgSend(v35, "setDismissButtonAction:", v43);
    }
    v44 = v85;
    sub_10000E0F0(v34 + v9[27], v85, &qword_1000D5E60);
    v45 = v86;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v44, 1, v86) != 1)
    {
      v53 = v81;
      sub_100011228(v44, (uint64_t)v81, type metadata accessor for AdjustedImage);
      v47 = objc_msgSend(objc_allocWithZone((Class)SFAdjustedImageView), "initWithImage:", *v53);
      sub_100073038((uint64_t)v53 + *(int *)(v45 + 20));
      objc_msgSend(v47, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v54 = objc_msgSend(v35, "contentView");
      objc_msgSend(v54, "addSubview:", v47);

      sub_10001126C((uint64_t)v53, type metadata accessor for AdjustedImage);
      goto LABEL_24;
    }
    sub_10000DC40(v44, &qword_1000D5E60);
    v46 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
    v47 = v46;
    v48 = *(_QWORD *)(v34 + v9[11]);
    if ((unint64_t)v48 >> 62)
    {
      if (v48 < 0)
        v78 = *(_QWORD *)(v34 + v9[11]);
      else
        v78 = v48 & 0xFFFFFFFFFFFFFF8;
      v79 = v46;
      swift_bridgeObjectRetain(v48);
      v49 = (void *)_CocoaArrayWrapper.endIndex.getter(v78);
      if (v49)
        goto LABEL_18;
    }
    else
    {
      v49 = *(void **)((v48 & 0xFFFFFFFFFFFFF8) + 0x10);
      v50 = v46;
      swift_bridgeObjectRetain(v48);
      if (v49)
      {
LABEL_18:
        if ((v48 & 0xC000000000000001) != 0)
        {
          v51 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v48);
        }
        else
        {
          if (!*(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          v51 = *(id *)(v48 + 32);
        }
        v49 = v51;
      }
    }
    swift_bridgeObjectRelease(v48);
    objc_msgSend(v47, "setImage:", v49);

    v52 = objc_msgSend(v35, "contentView");
    objc_msgSend(v52, "addSubview:", v47);

LABEL_24:
    v55 = objc_msgSend(v35, "contentView");
    v56 = objc_msgSend(v55, "mainContentGuide");

    v57 = (void *)objc_opt_self(NSLayoutConstraint);
    v58 = sub_10000D604(&qword_1000D6EE0);
    v59 = swift_allocObject(v58, 72, 7);
    *(_OWORD *)(v59 + 16) = xmmword_100099550;
    v60 = objc_msgSend(v47, "topAnchor");
    v61 = objc_msgSend(v56, "topAnchor");
    v62 = objc_msgSend(v60, "constraintEqualToAnchor:", v61);

    *(_QWORD *)(v59 + 32) = v62;
    v63 = objc_msgSend(v47, "leadingAnchor");
    v64 = objc_msgSend(v56, "leadingAnchor");
    v65 = objc_msgSend(v63, "constraintGreaterThanOrEqualToAnchor:", v64);

    *(_QWORD *)(v59 + 40) = v65;
    v66 = objc_msgSend(v47, "trailingAnchor");
    v67 = objc_msgSend(v56, "trailingAnchor");
    v68 = objc_msgSend(v66, "constraintLessThanOrEqualToAnchor:", v67);

    *(_QWORD *)(v59 + 48) = v68;
    v69 = objc_msgSend(v47, "centerXAnchor");
    v70 = objc_msgSend(v56, "centerXAnchor");
    v71 = objc_msgSend(v69, "constraintEqualToAnchor:", v70);

    *(_QWORD *)(v59 + 56) = v71;
    v72 = objc_msgSend(v47, "bottomAnchor");
    v73 = objc_msgSend(v56, "bottomAnchor");
    v74 = objc_msgSend(v72, "constraintEqualToAnchor:", v73);

    *(_QWORD *)(v59 + 64) = v74;
    v88 = v59;
    specialized Array._endMutation()(v75);
    v76 = v88;
    sub_100014934();
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v76);
    objc_msgSend(v57, "activateConstraints:", isa);

    sub_10001126C(v34, type metadata accessor for HomePodSetupViewModel);
    return;
  }
  sub_10000DC40((uint64_t)v8, (uint64_t *)&unk_1000D6EC0);
  if (qword_1000D55E8 != -1)
    swift_once(&qword_1000D55E8, sub_10005E730);
  v19 = type metadata accessor for Logger(0, v18);
  v20 = sub_10001118C(v19, (uint64_t)qword_1000D74A0);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "HomePodSetupSiriWelcome: viewDidLoad failed because viewModel not set.", v23, 2u);
    swift_slowDealloc(v23, -1, -1);
  }

}

void sub_10005F160(unsigned __int8 *a1, uint64_t a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t Strong;
  void *v15;
  uint64_t v16;
  _BYTE v17[48];
  _OWORD v18[2];
  uint64_t v19;
  _OWORD v20[3];
  _BYTE v21[24];

  v2 = *a1;
  v3 = a2 + 16;
  if (qword_1000D55E8 != -1)
    swift_once(&qword_1000D55E8, sub_10005E730);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10001118C(v4, (uint64_t)qword_1000D74A0);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v20[0] = v10;
    *(_DWORD *)v9 = 136315138;
    v11 = sub_10000E9EC(v2);
    v13 = v12;
    *(_QWORD *)v17 = sub_10003EF58(v11, v12, (uint64_t *)v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v17, &v17[8]);
    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "HomePodSetupSiriWelcome: User tapped on button: %s", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }

  swift_beginAccess(v3, v21, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v15 = (void *)Strong;
    v16 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC14HDSViewService37HomePodSetupSiriWelcomeViewController_presenter);

    if (v16)
    {
      v19 = 0;
      memset(v18, 0, sizeof(v18));
      memset(&v17[8], 0, 40);
      v17[0] = v2;
      sub_100011340((uint64_t)v18, (uint64_t)&v17[8], &qword_1000D6ED0);
      v20[0] = *(_OWORD *)v17;
      v20[1] = *(_OWORD *)&v17[16];
      v20[2] = *(_OWORD *)&v17[32];
      sub_10006B04C((char *)v20);
      swift_unknownObjectRelease(v16);
      sub_100011384((uint64_t)v20);
    }
  }
}

id sub_10005F544(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  int v9;
  const char *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  NSString v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;

  v2 = v1;
  v4 = type metadata accessor for HomePodSetupViewModel(0);
  v5 = __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = a1 + *(int *)(v5 + 68);
  if (*(_BYTE *)(v8 + 4))
    v9 = 0;
  else
    v9 = *(_DWORD *)v8;
  v10 = sub_10005FBB4(v9);
  v12 = String.init(cString:)(v10);
  v13 = v11;
  if (qword_1000D55E8 != -1)
    swift_once(&qword_1000D55E8, sub_10005E730);
  v14 = type metadata accessor for Logger(0, v11);
  sub_10001118C(v14, (uint64_t)qword_1000D74A0);
  sub_1000111A4(a1, (uint64_t)v7);
  v15 = swift_bridgeObjectRetain(v13);
  v16 = Logger.logObject.getter(v15);
  v18 = static os_log_type_t.default.getter(v16, v17);
  if (os_log_type_enabled(v16, v18))
  {
    v19 = swift_slowAlloc(22, -1);
    v27 = swift_slowAlloc(64, -1);
    v30 = v27;
    *(_DWORD *)v19 = 136315394;
    v26 = v12;
    v28 = v2;
    v20 = *v7;
    v21 = v7[1];
    swift_bridgeObjectRetain(v21);
    v29 = sub_10003EF58(v20, v21, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30);
    swift_bridgeObjectRelease(v21);
    sub_10001126C((uint64_t)v7, type metadata accessor for HomePodSetupViewModel);
    *(_WORD *)(v19 + 12) = 2080;
    swift_bridgeObjectRetain(v13);
    v29 = sub_10003EF58(v26, v13, &v30);
    v2 = v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30);
    swift_bridgeObjectRelease_n(v13, 3);
    _os_log_impl((void *)&_mh_execute_header, v16, v18, "HomePodSetupSiriWelcome: configureUI called with title %s progressEvent=%s", (uint8_t *)v19, 0x16u);
    v22 = v27;
    swift_arrayDestroy(v27, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v19, -1, -1);

  }
  else
  {
    sub_10001126C((uint64_t)v7, type metadata accessor for HomePodSetupViewModel);

    swift_bridgeObjectRelease_n(v13, 2);
  }
  v23 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setTitle:", v23);

  return objc_msgSend(v2, "setDismissalType:", *(_QWORD *)(a1 + *(int *)(v4 + 72)));
}

id sub_10005F898()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupSiriWelcomeViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10005F910()
{
  return type metadata accessor for HomePodSetupSiriWelcomeViewController(0);
}

uint64_t type metadata accessor for HomePodSetupSiriWelcomeViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1000D74E8;
  if (!qword_1000D74E8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HomePodSetupSiriWelcomeViewController);
  return result;
}

void sub_10005F954(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_10009A628;
  sub_100010910(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
  }
}

uint64_t sub_10005F9CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupSiriWelcomeViewController_presenter + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease(a1);
}

id sub_10005FA04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10005FA0C(a3);
}

id sub_10005FA0C(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  id result;
  _BYTE v18[24];

  v2 = v1;
  v4 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v4);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_1000D55E8 != -1)
    swift_once(&qword_1000D55E8, sub_10005E730);
  v8 = type metadata accessor for Logger(0, v5);
  v9 = sub_10001118C(v8, (uint64_t)qword_1000D74A0);
  v10 = Logger.logObject.getter(v9);
  v12 = static os_log_type_t.default.getter(v10, v11);
  if (os_log_type_enabled(v10, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v12, "HomePodSetupSiriWelcome: presenter:didUpdate viewModel", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }

  sub_1000111A4(a1, (uint64_t)v7);
  v14 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v7, 0, 1, v14);
  v15 = (uint64_t)&v2[OBJC_IVAR____TtC14HDSViewService37HomePodSetupSiriWelcomeViewController_viewModel];
  swift_beginAccess(&v2[OBJC_IVAR____TtC14HDSViewService37HomePodSetupSiriWelcomeViewController_viewModel], v18, 33, 0);
  sub_100011340((uint64_t)v7, v15, (uint64_t *)&unk_1000D6EC0);
  swift_endAccess(v18);
  result = objc_msgSend(v2, "isViewLoaded");
  if ((_DWORD)result)
    return sub_10005F544(a1);
  return result;
}

const char *sub_10005FBB4(int a1)
{
  const char *result;

  if (a1 > 299)
  {
    if (a1 <= 799)
    {
      if (a1 <= 519)
      {
        if (a1 <= 410)
        {
          if (a1 <= 399)
          {
            if (a1 == 300)
              return "BackupProgress";
            if (a1 == 310)
              return "SyncProgress";
          }
          else
          {
            switch(a1)
            {
              case 400:
                return "StopSetup";
              case 401:
                return "PINPair";
              case 410:
                return "MigrateStart";
            }
          }
        }
        else if (a1 > 430)
        {
          switch(a1)
          {
            case 431:
              return "eSimExternal2FAStop";
            case 500:
              return "SiriWelcome";
            case 510:
              return "SiriDialogA";
          }
        }
        else
        {
          switch(a1)
          {
            case 411:
              return "MigrateStop";
            case 420:
              return "FileTransferReady";
            case 430:
              return "eSimExternal2FAStart";
          }
        }
      }
      else if (a1 > 559)
      {
        if (a1 > 599)
        {
          switch(a1)
          {
            case 600:
              return "SiriSkipDemo";
            case 700:
              return "StopSetupLEDs";
            case 710:
              return "AudioPasscodeEnded";
          }
        }
        else
        {
          switch(a1)
          {
            case 560:
              return "SiriDialogCMusic";
            case 570:
              return "SiriDialogCNews";
            case 580:
              return "SiriDialogCWeather";
          }
        }
      }
      else if (a1 > 549)
      {
        switch(a1)
        {
          case 550:
            return "SiriDialogBWeather";
          case 555:
            return "SiriDialogBClock";
          case 558:
            return "SiriDialogBMusic";
        }
      }
      else
      {
        switch(a1)
        {
          case 520:
            return "SiriDialogBStart";
          case 530:
            return "SiriDialogBHome";
          case 540:
            return "SiriDialogBNews";
        }
      }
      return "?";
    }
    if (a1 > 999)
    {
      if (a1 <= 1099)
      {
        if (a1 == 1000)
          return "SecureIntentStart";
        if (a1 == 1001)
          return "SecureIntentFinish";
      }
      else
      {
        switch(a1)
        {
          case 1100:
            return "OneTimeCodeDetected";
          case 2000:
            return "DependentStart";
          case 2001:
            return "DependentEnd";
        }
      }
      return "?";
    }
    switch(a1)
    {
      case 900:
        result = "SU-No-SetupScanAttempt";
        break;
      case 901:
        result = "SU-No-SetupStatusUpdate";
        break;
      case 902:
        result = "SU-No-SetupWipeWifi";
        break;
      case 903:
        result = "SU-No-SetupCancelled";
        break;
      case 904:
        result = "SU-No-SetupObliterate";
        break;
      case 905:
        result = "SU-No-SetupCannotCancel";
        break;
      case 906:
        result = "SysDrop AirDrop Event";
        break;
      case 907:
        result = "SysDrop Sysdiagnose Event";
        break;
      case 908:
        result = "SysDrop Cancel Event";
        break;
      case 909:
        result = "File Transfer Progress Event";
        break;
      case 910:
        result = "File Transfer Completed Event";
        break;
      case 911:
        result = "iOSWiFiSetup";
        break;
      case 912:
        result = "HKPrimaryResidentSSIDFetchStart";
        break;
      default:
        switch(a1)
        {
          case 800:
            result = "AuthAccountsStart";
            break;
          case 803:
            result = "AuthAccountsiCloudProgress";
            break;
          case 804:
            result = "AuthAccountsStoreProgress";
            break;
          case 805:
            result = "AuthAccountsGameCenterProgress";
            break;
          default:
            return "?";
        }
        break;
    }
  }
  else if (a1 > 129)
  {
    if (a1 > 249)
    {
      switch(a1)
      {
        case 260:
          result = "TVLSStart";
          break;
        case 261:
        case 262:
        case 263:
        case 265:
        case 266:
        case 267:
        case 268:
        case 269:
        case 271:
        case 273:
        case 275:
          return "?";
        case 264:
          result = "TVLSFinish";
          break;
        case 270:
          result = "TVLSEstimateStart";
          break;
        case 272:
          result = "TVLSEstimateFinal";
          break;
        case 274:
          result = "TVLSEstimateFailed";
          break;
        case 276:
          result = "TVLSTryAgain";
          break;
        case 277:
          result = "TVLSToneBegan";
          break;
        case 278:
          result = "TVLCalStart";
          break;
        case 279:
          result = "TVLCalStep";
          break;
        case 280:
          result = "TVLCalFailed";
          break;
        case 281:
          result = "TVLCalTryAgain";
          break;
        case 282:
          result = "TVLCalFinal";
          break;
        default:
          if (a1 != 250)
            return "?";
          result = "ReportSuccess";
          break;
      }
    }
    else
    {
      if (a1 <= 219)
      {
        if (a1 <= 149)
        {
          if (a1 == 130)
            return "WiFiPoweredOff";
          if (a1 == 140)
            return "RecognizeVoice";
        }
        else
        {
          switch(a1)
          {
            case 150:
              return "SiriForEveryone";
            case 200:
              return "WiFiStart";
            case 210:
              return "ActivationStart";
          }
        }
        return "?";
      }
      switch(a1)
      {
        case 230:
          return "HomeKitStart";
        case 231:
        case 232:
        case 233:
        case 235:
        case 237:
        case 238:
        case 239:
          return "?";
        case 234:
          return "HomeKitSetupStart";
        case 236:
          return "CDPSetupStart";
        case 240:
          return "BuddyStarting";
        case 241:
          return "BuddyProgress";
        case 242:
          return "BuddyFinished";
        default:
          if (a1 == 220)
          {
            result = "iCloudStart";
          }
          else
          {
            if (a1 != 224)
              return "?";
            result = "AppleIDSetupStart";
          }
          break;
      }
    }
  }
  else
  {
    if (a1 <= 79)
    {
      if (a1 > 49)
      {
        if (a1 > 64)
        {
          if (a1 == 65)
            return "SecurityAPCLoopStart";
          if (a1 == 70)
            return "SecurityFinish";
        }
        else
        {
          if (a1 == 50)
            return "PreAuthFinish";
          if (a1 == 60)
            return "SecurityStart";
        }
      }
      else
      {
        if (a1 > 29)
        {
          switch(a1)
          {
            case 30:
              result = "Error";
              break;
            case 31:
              result = "SessionStarted";
              break;
            case 32:
              result = "SessionEnded";
              break;
            case 33:
              result = "SessionSecured";
              break;
            case 35:
              result = "ConnectStart";
              break;
            case 40:
              result = "PreAuthStart";
              break;
            default:
              return "?";
          }
          return result;
        }
        switch(a1)
        {
          case 0:
            return "Invalid";
          case 10:
            return "Start";
          case 20:
            return "Final";
        }
      }
      return "?";
    }
    if (a1 > 119)
    {
      switch(a1)
      {
        case 'x':
          return "CheckingiCloud";
        case 'z':
          return "CheckingAppleMusic";
        case '|':
          return "CheckingAccount";
      }
      return "?";
    }
    switch(a1)
    {
      case 'P':
        result = "BasicConfigStart";
        break;
      case 'Z':
        result = "BasicConfigFinish";
        break;
      case '\\':
        result = "StepStart";
        break;
      case '^':
        result = "StepFinish";
        break;
      case '_':
        result = "PreFinish";
        break;
        result = "SetupFinished";
        break;
      case 'a':
        result = "SetupResumed";
        break;
      case 'b':
        result = "SetupSuspend";
        break;
      case 'c':
        result = "SetupPeerSWUpdate";
        break;
      case 'd':
        result = "Finished";
        break;
      default:
        return "?";
    }
  }
  return result;
}

uint64_t sub_100060330()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100060354(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_10005F160(a1, v1);
}

uint64_t sub_10006035C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000111E8(v2, qword_1000D74F8);
  v3 = sub_10001118C(v2, (uint64_t)qword_1000D74F8);
  if (qword_1000D55C0 != -1)
    swift_once(&qword_1000D55C0, sub_100058090);
  v4 = sub_10001118C(v2, (uint64_t)qword_1000DB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

uint64_t sub_1000603EC()
{
  uint64_t v0;

  v0 = type metadata accessor for DispatchTimeInterval(0);
  sub_1000111E8(v0, qword_1000D7510);
  *(_QWORD *)sub_10001118C(v0, (uint64_t)qword_1000D7510) = 1;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 - 8) + 104))();
}

id sub_10006044C(unsigned __int8 a1, uint64_t a2)
{
  char *v2;
  char *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  id v12;
  char *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  void (**v17)();
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v3 = v2;
  v4 = a1;
  v5 = type metadata accessor for Logger(0, a2);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = &v2[OBJC_IVAR____TtC14HDSViewService36HomePodSetupVisualAuthViewController_presenter];
  *((_QWORD *)v9 + 1) = 0;
  swift_unknownObjectWeakInit(v9, 0);
  v10 = &v2[OBJC_IVAR____TtC14HDSViewService36HomePodSetupVisualAuthViewController_viewModel];
  v11 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = objc_allocWithZone((Class)type metadata accessor for SVSHomePodIDViewController());
  v13 = (char *)sub_10007CB34(v4 == 5);
  if (qword_1000D55F0 != -1)
    swift_once(&qword_1000D55F0, sub_10006035C);
  v14 = sub_10001118C(v5, (uint64_t)qword_1000D74F8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v14, v5);
  v15 = sub_100061DD4(v13, (uint64_t)v8, v3);
  v16 = swift_allocObject(&unk_1000C4418, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16, v15);
  v17 = (void (**)())&v13[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_handler];
  v18 = *(_QWORD *)&v13[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_handler];
  v19 = *(_QWORD *)&v13[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_handler + 8];
  *v17 = sub_1000620E8;
  v17[1] = (void (*)())v16;
  sub_1000588E4(v18, v19);

  return v15;
}

void sub_1000605D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  _BYTE v11[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_1000615D0();

  }
  if (qword_1000D55F0 != -1)
    swift_once(&qword_1000D55F0, sub_10006035C);
  v5 = type metadata accessor for Logger(0, v3);
  v6 = sub_10001118C(v5, (uint64_t)qword_1000D74F8);
  v7 = Logger.logObject.getter(v6);
  v9 = static os_log_type_t.default.getter(v7, v8);
  if (os_log_type_enabled(v7, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v9, "HomePodSetupBaseScannerViewController handler called", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

}

void sub_1000606DC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char *v11;
  objc_class *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  NSString v35;
  NSString v36;
  NSString v37;
  NSString v38;
  id v39;
  _QWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44[24];
  objc_super v45;

  v1 = v0;
  v2 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v2);
  v4 = (char *)v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  v6 = *((_QWORD *)v5 - 1);
  v7 = __chkstk_darwin(v5);
  v9 = (_QWORD *)((char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  v11 = (char *)v40 - v10;
  v12 = (objc_class *)type metadata accessor for HomePodSetupVisualAuthViewController(0);
  v45.receiver = v1;
  v45.super_class = v12;
  objc_msgSendSuper2(&v45, "viewDidLoad");
  v13 = (uint64_t)&v1[OBJC_IVAR____TtC14HDSViewService36HomePodSetupVisualAuthViewController_viewModel];
  swift_beginAccess(&v1[OBJC_IVAR____TtC14HDSViewService36HomePodSetupVisualAuthViewController_viewModel], v44, 0, 0);
  sub_100014824(v13, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10001486C((uint64_t)v4);
    if (qword_1000D55F0 != -1)
      swift_once(&qword_1000D55F0, sub_10006035C);
    v15 = type metadata accessor for Logger(0, v14);
    v16 = sub_10001118C(v15, (uint64_t)qword_1000D74F8);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "HomePodSetupVisualAuthViewController: failed in viewDidLoad because viewModel not set.", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

  }
  else
  {
    sub_1000148AC((uint64_t)v4, (uint64_t)v11);
    if (qword_1000D55F0 != -1)
      swift_once(&qword_1000D55F0, sub_10006035C);
    v21 = type metadata accessor for Logger(0, v20);
    sub_10001118C(v21, (uint64_t)qword_1000D74F8);
    v22 = sub_1000111A4((uint64_t)v11, (uint64_t)v9);
    v23 = Logger.logObject.getter(v22);
    v25 = static os_log_type_t.default.getter(v23, v24);
    if (os_log_type_enabled(v23, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(12, -1);
      v41 = swift_slowAlloc(32, -1);
      v43 = v41;
      *(_DWORD *)v26 = 136315138;
      v40[1] = v26 + 4;
      v28 = *v9;
      v27 = v9[1];
      swift_bridgeObjectRetain(v27);
      v42 = sub_10003EF58(v28, v27, &v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43);
      swift_bridgeObjectRelease(v27);
      sub_1000148F0((uint64_t)v9);
      _os_log_impl((void *)&_mh_execute_header, v23, v25, "HomePodSetupVisualAuthViewController: viewDidLoad called with title %s", v26, 0xCu);
      v29 = v41;
      swift_arrayDestroy(v41, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v29, -1, -1);
      swift_slowDealloc(v26, -1, -1);
    }
    else
    {
      sub_1000148F0((uint64_t)v9);
    }

    v30 = *(_QWORD *)&v11[v5[10]];
    v31 = swift_allocObject(&unk_1000C4418, 24, 7);
    swift_unknownObjectWeakInit(v31 + 16, v1);
    v32 = swift_bridgeObjectRetain(v30);
    sub_10007E6FC(v32, (uint64_t)sub_100062154, v31);
    swift_bridgeObjectRelease(v30);
    *(_QWORD *)&v33 = swift_release(v31).n128_u64[0];
    v34 = *(_QWORD *)&v11[v5[18]];
    objc_msgSend(v1, "setDismissalType:", v34, v33);
    if ((v34 & 2) == 0 && *(_QWORD *)&v11[v5[19] + 8])
    {
      v35 = String._bridgeToObjectiveC()();
      v36 = String._bridgeToObjectiveC()();
      v37 = String._bridgeToObjectiveC()();
      v38 = String._bridgeToObjectiveC()();
      v39 = objc_msgSend(v1, "dismissalConfirmationActionWithTitle:message:confirmButtonTitle:cancelButtonTitle:", v35, v36, v37, v38);

      objc_msgSend(v1, "setDismissButtonAction:", v39);
    }
    sub_1000148F0((uint64_t)v11);
  }
}

void sub_100060B64(unsigned __int8 *a1, uint64_t a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t Strong;
  void *v15;
  uint64_t v16;
  _BYTE v17[48];
  _OWORD v18[2];
  uint64_t v19;
  _OWORD v20[3];
  _BYTE v21[24];

  v2 = *a1;
  v3 = a2 + 16;
  if (qword_1000D55F0 != -1)
    swift_once(&qword_1000D55F0, sub_10006035C);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10001118C(v4, (uint64_t)qword_1000D74F8);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v20[0] = v10;
    *(_DWORD *)v9 = 136315138;
    v11 = sub_10000E9EC(v2);
    v13 = v12;
    *(_QWORD *)v17 = sub_10003EF58(v11, v12, (uint64_t *)v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v17, &v17[8]);
    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "HomePodSetupVisualAuthViewController: User tapped on button: %s", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }

  swift_beginAccess(v3, v21, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v15 = (void *)Strong;
    v16 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC14HDSViewService36HomePodSetupVisualAuthViewController_presenter);

    if (v16)
    {
      v19 = 0;
      memset(v18, 0, sizeof(v18));
      memset(&v17[8], 0, 40);
      v17[0] = v2;
      sub_100011340((uint64_t)v18, (uint64_t)&v17[8], &qword_1000D6ED0);
      v20[0] = *(_OWORD *)v17;
      v20[1] = *(_OWORD *)&v17[16];
      v20[2] = *(_OWORD *)&v17[32];
      sub_10006B04C((char *)v20);
      swift_unknownObjectRelease(v16);
      sub_100011384((uint64_t)v20);
    }
  }
}

uint64_t sub_100060DB0(char a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  objc_class *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  NSObject *v19;
  uint64_t v20;
  os_log_type_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  char *v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t result;
  unint64_t v32;
  uint64_t v33;
  NSObject *v34;
  uint64_t v35;
  os_log_type_t v36;
  uint8_t *v37;
  void *v38;
  char *v39;
  _QWORD *v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  NSObject *v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  _QWORD v53[2];
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  void **aBlock;
  _QWORD v66[4];
  uint64_t v67;
  objc_super v68;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v64 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for DispatchQoS(0);
  v63 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v62 = (char *)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchTimeInterval(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v58 = (_QWORD *)((char *)v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v60 = type metadata accessor for DispatchTime(0);
  v57 = *(_QWORD *)(v60 - 8);
  v11 = __chkstk_darwin(v60);
  v56 = (char *)v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v59 = (char *)v53 - v13;
  v14 = (objc_class *)type metadata accessor for HomePodSetupVisualAuthViewController(0);
  v68.receiver = v2;
  v68.super_class = v14;
  objc_msgSendSuper2(&v68, "viewWillAppear:", a1 & 1);
  if (qword_1000D55F0 != -1)
    swift_once(&qword_1000D55F0, sub_10006035C);
  v16 = type metadata accessor for Logger(0, v15);
  v17 = sub_10001118C(v16, (uint64_t)qword_1000D74F8);
  v18 = v2;
  v19 = Logger.logObject.getter(v18);
  v21 = static os_log_type_t.default.getter(v19, v20);
  if (os_log_type_enabled(v19, v21))
  {
    v22 = swift_slowAlloc(12, -1);
    v55 = v4;
    v23 = (uint8_t *)v22;
    v24 = swift_slowAlloc(8, -1);
    v54 = v8;
    v53[0] = v24;
    v53[1] = v17;
    *(_DWORD *)v23 = 138412290;
    aBlock = (void **)&v18->isa;
    v25 = v6;
    v26 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v66);
    v27 = v53[0];
    *(_QWORD *)v53[0] = v18;

    v6 = v25;
    _os_log_impl((void *)&_mh_execute_header, v19, v21, "HomePod Setup %@ viewWillAppear", v23, 0xCu);
    v28 = sub_10000D604(&qword_1000D5CC8);
    swift_arrayDestroy(v27, 1, v28);
    v8 = v54;
    swift_slowDealloc(v27, -1, -1);
    v29 = v23;
    v4 = v55;
    swift_slowDealloc(v29, -1, -1);
  }
  else
  {

    v19 = v18;
  }

  result = IsAppleInternalBuild(v30);
  if ((_DWORD)result)
  {
    if (qword_1000D5530 != -1)
      result = swift_once(&qword_1000D5530, sub_100036860);
    v32 = *(_QWORD *)(qword_1000DB5C8 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_forcedPasscode + 8);
    if ((v32 & 0x2000000000000000) != 0)
      v33 = HIBYTE(v32) & 0xF;
    else
      v33 = *(_QWORD *)(qword_1000DB5C8 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_forcedPasscode) & 0xFFFFFFFFFFFFLL;
    if (v33)
    {
      v34 = Logger.logObject.getter(result);
      v36 = static os_log_type_t.default.getter(v34, v35);
      if (os_log_type_enabled(v34, v36))
      {
        v37 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v37 = 0;
        _os_log_impl((void *)&_mh_execute_header, v34, v36, "HomePodSetupVisualAuthViewController: hasForcedPasscode so selecting manual pairing button.", v37, 2u);
        swift_slowDealloc(v37, -1, -1);
      }

      sub_100012BE8();
      v38 = (void *)static OS_dispatch_queue.main.getter();
      v39 = v56;
      static DispatchTime.now()();
      v40 = v58;
      *v58 = 2;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v40, enum case for DispatchTimeInterval.seconds(_:), v8);
      v41 = v59;
      + infix(_:_:)(v39, v40);
      (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v40, v8);
      v42 = *(void (**)(char *, uint64_t))(v57 + 8);
      v43 = v60;
      v42(v39, v60);
      v44 = swift_allocObject(&unk_1000C4468, 24, 7);
      *(_QWORD *)(v44 + 16) = v18;
      v66[3] = sub_100062134;
      v67 = v44;
      aBlock = _NSConcreteStackBlock;
      v66[0] = 1107296256;
      v66[1] = sub_10007C6B4;
      v66[2] = &unk_1000C4480;
      v45 = _Block_copy(&aBlock);
      v46 = v67;
      v47 = v18;
      swift_release(v46);
      v48 = v62;
      static DispatchQoS.unspecified.getter(v49);
      aBlock = (void **)_swiftEmptyArrayStorage;
      v50 = sub_100012C2C();
      v51 = sub_10000D604((uint64_t *)&unk_1000D7B60);
      v52 = sub_100012C74();
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v51, v52, v4, v50);
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v41, v48, v6, v45);
      _Block_release(v45);

      (*(void (**)(char *, uint64_t))(v64 + 8))(v6, v4);
      (*(void (**)(char *, uint64_t))(v63 + 8))(v48, v61);
      return ((uint64_t (*)(char *, uint64_t))v42)(v41, v43);
    }
  }
  return result;
}

void sub_1000613DC(char a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  NSObject **v10;
  NSObject *v11;
  uint64_t v12;
  NSObject *v13;
  objc_super v14;

  v14.receiver = v1;
  v14.super_class = (Class)type metadata accessor for HomePodSetupVisualAuthViewController(0);
  objc_msgSendSuper2(&v14, "viewDidDisappear:", a1 & 1);
  if (qword_1000D55F0 != -1)
    swift_once(&qword_1000D55F0, sub_10006035C);
  v4 = type metadata accessor for Logger(0, v3);
  sub_10001118C(v4, (uint64_t)qword_1000D74F8);
  v5 = v1;
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = (NSObject **)swift_slowAlloc(8, -1);
    *(_DWORD *)v9 = 138412290;
    v13 = v5;
    v11 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14);
    *v10 = v5;

    _os_log_impl((void *)&_mh_execute_header, v6, v8, "HomePod Setup %@ viewDidDisappear", v9, 0xCu);
    v12 = sub_10000D604(&qword_1000D5CC8);
    swift_arrayDestroy(v10, 1, v12);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {

    v6 = v5;
  }

}

uint64_t sub_1000615D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[5];
  uint64_t v31;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v29 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v27 = *(_QWORD *)(v5 - 8);
  v28 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchTime(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v26 - v13;
  sub_100078388();
  sub_100012BE8();
  v15 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  if (qword_1000D55F8 != -1)
    swift_once(&qword_1000D55F8, sub_1000603EC);
  v16 = type metadata accessor for DispatchTimeInterval(0);
  v17 = sub_10001118C(v16, (uint64_t)qword_1000D7510);
  + infix(_:_:)(v12, v17);
  v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v12, v8);
  v19 = swift_allocObject(&unk_1000C4418, 24, 7);
  swift_unknownObjectWeakInit(v19 + 16, v1);
  aBlock[4] = sub_1000620F0;
  v31 = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10007C6B4;
  aBlock[3] = &unk_1000C4430;
  v20 = _Block_copy(aBlock);
  swift_release(v31);
  static DispatchQoS.unspecified.getter(v21);
  aBlock[0] = _swiftEmptyArrayStorage;
  v22 = sub_100012C2C();
  v23 = sub_10000D604((uint64_t *)&unk_1000D7B60);
  v24 = sub_100012C74();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v23, v24, v2, v22);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v14, v7, v4, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v28);
  return ((uint64_t (*)(char *, uint64_t))v18)(v14, v8);
}

void sub_100061888(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t Strong;
  void *v10;
  uint64_t v11;
  _BYTE v12[48];
  _OWORD v13[2];
  uint64_t v14;
  _OWORD v15[3];
  _BYTE v16[24];

  v2 = a1 + 16;
  if (qword_1000D55F0 != -1)
    swift_once(&qword_1000D55F0, sub_10006035C);
  v3 = type metadata accessor for Logger(0, a2);
  v4 = sub_10001118C(v3, (uint64_t)qword_1000D74F8);
  v5 = Logger.logObject.getter(v4);
  v7 = static os_log_type_t.default.getter(v5, v6);
  if (os_log_type_enabled(v5, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v7, "HomePodSetupVisualAuthViewController: detectedHomePod so selecting primary button.", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  swift_beginAccess(v2, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v10 = (void *)Strong;
    v11 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC14HDSViewService36HomePodSetupVisualAuthViewController_presenter);

    if (v11)
    {
      v14 = 0;
      memset(v13, 0, sizeof(v13));
      memset(&v12[8], 0, 40);
      v12[0] = 1;
      sub_100011340((uint64_t)v13, (uint64_t)&v12[8], &qword_1000D6ED0);
      v15[0] = *(_OWORD *)v12;
      v15[1] = *(_OWORD *)&v12[16];
      v15[2] = *(_OWORD *)&v12[32];
      sub_10006B04C((char *)v15);
      swift_unknownObjectRelease(v11);
      sub_100011384((uint64_t)v15);
    }
  }
}

uint64_t sub_100061A00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t result;
  uint64_t v11;
  _BYTE v12[48];
  _OWORD v13[2];
  uint64_t v14;
  _OWORD v15[3];

  v3 = v2;
  if (qword_1000D55F0 != -1)
    swift_once(&qword_1000D55F0, sub_10006035C);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10001118C(v4, (uint64_t)qword_1000D74F8);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "HomePodSetupVisualAuthViewController: User tapped on manual pairing button.", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  result = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC14HDSViewService36HomePodSetupVisualAuthViewController_presenter);
  if (result)
  {
    v11 = result;
    v14 = 0;
    memset(v13, 0, sizeof(v13));
    memset(&v12[8], 0, 40);
    v12[0] = 2;
    sub_100011340((uint64_t)v13, (uint64_t)&v12[8], &qword_1000D6ED0);
    v15[0] = *(_OWORD *)v12;
    v15[1] = *(_OWORD *)&v12[16];
    v15[2] = *(_OWORD *)&v12[32];
    sub_10006B04C((char *)v15);
    swift_unknownObjectRelease(v11);
    return sub_100011384((uint64_t)v15);
  }
  return result;
}

uint64_t sub_100061B50()
{
  uint64_t v0;

  sub_1000113B8(v0 + OBJC_IVAR____TtC14HDSViewService36HomePodSetupVisualAuthViewController_presenter);
  return sub_10001486C(v0 + OBJC_IVAR____TtC14HDSViewService36HomePodSetupVisualAuthViewController_viewModel);
}

id sub_100061B7C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupVisualAuthViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100061BE8()
{
  return type metadata accessor for HomePodSetupVisualAuthViewController(0);
}

uint64_t type metadata accessor for HomePodSetupVisualAuthViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1000D7550;
  if (!qword_1000D7550)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HomePodSetupVisualAuthViewController);
  return result;
}

void sub_100061C2C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_10009A688;
  sub_100010910(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 136);
  }
}

uint64_t sub_100061CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService36HomePodSetupVisualAuthViewController_presenter + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease(a1);
}

void sub_100061CDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100061EF8(a3);
}

id sub_100061CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;

  v3 = v2;
  if (qword_1000D55F0 != -1)
    swift_once(&qword_1000D55F0, sub_10006035C);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10001118C(v4, (uint64_t)qword_1000D74F8);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "SVSHomePodIDViewController: start was called", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  SVSHomePodIDViewController.configureEngine()();
  return objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_engine), "preheat");
}

id sub_100061DD4(void *a1, uint64_t a2, char *a3)
{
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  objc_super v18;

  v6 = &a3[OBJC_IVAR____TtC14HDSViewService21ScannerViewController_log];
  v7 = type metadata accessor for Logger(0, a2);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a2, v7);
  v9 = type metadata accessor for SVSLPCActivityIndicatorViewController();
  v10 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v9));
  v11 = a3;
  v12 = objc_msgSend(v10, "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC14HDSViewService21ScannerViewController_viewfinderViewController] = v12;
  v13 = &v11[OBJC_IVAR____TtC14HDSViewService21ScannerViewController_scannerEngineViewController];
  *(_QWORD *)v13 = a1;
  *((_QWORD *)v13 + 1) = &off_1000C43C8;
  v14 = a1;

  v15 = objc_msgSend(objc_allocWithZone((Class)PRXCardContentView), "initWithCardStyle:", 0);
  v18.receiver = v11;
  v18.super_class = (Class)type metadata accessor for ScannerViewController(0);
  v16 = objc_msgSendSuper2(&v18, "initWithContentView:", v15);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a2, v7);
  return v16;
}

void sub_100061EF8(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  uint64_t v9;
  id v10;
  NSString v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  _BYTE v18[24];

  v3 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v3);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1000111A4(a1, (uint64_t)v5);
  v6 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 0, 1, v6);
  v7 = (uint64_t)&v1[OBJC_IVAR____TtC14HDSViewService36HomePodSetupVisualAuthViewController_viewModel];
  swift_beginAccess(&v1[OBJC_IVAR____TtC14HDSViewService36HomePodSetupVisualAuthViewController_viewModel], v18, 33, 0);
  sub_100011340((uint64_t)v5, v7, (uint64_t *)&unk_1000D6EC0);
  swift_endAccess(v18);
  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setTitle:", v8);

  v9 = *(_QWORD *)(a1 + 24);
  v10 = objc_allocWithZone((Class)NSAttributedString);
  swift_bridgeObjectRetain(v9);
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  v12 = objc_msgSend(v10, "initWithString:", v11);

  if (v12)
  {
    v13 = objc_allocWithZone((Class)PRXLabel);
    v14 = v12;
    v15 = objc_msgSend(v13, "initWithStyle:", 1);
    objc_msgSend(v15, "setAttributedText:", v14);
    v16 = objc_msgSend(v1, "contentView");
    objc_msgSend(v16, "setSubtitleLabel:", v15);

  }
}

uint64_t sub_1000620C4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1000620E8()
{
  uint64_t v0;

  sub_1000605D8(v0);
}

void sub_1000620F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100061888(v2, a2);
}

uint64_t sub_1000620F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100062108(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100062110()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100062134(uint64_t a1, uint64_t a2)
{
  return sub_100061A00(a1, a2);
}

void sub_100062154(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_100060B64(a1, v1);
}

void sub_100062164(double a1)
{
  void *v1;
  id v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  id v9;
  void *v10;
  uint64_t v11;

  v3 = objc_msgSend(v1, "contentView");
  v4 = objc_msgSend(v3, "auxiliaryViews");

  if (!v4)
    goto LABEL_16;
  v5 = sub_10006229C();
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v11 = v6;
    else
      v11 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v7 = _CocoaArrayWrapper.endIndex.getter(v11);
    if (v7)
      goto LABEL_4;
LABEL_14:
    swift_bridgeObjectRelease_n(v6, 2);
    return;
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v6);
  if (!v7)
    goto LABEL_14;
LABEL_4:
  if (v7 >= 1)
  {
    for (i = 0; i != v7; ++i)
    {
      if ((v6 & 0xC000000000000001) != 0)
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v6);
      else
        v9 = *(id *)(v6 + 8 * i + 32);
      v10 = v9;
      objc_msgSend(v9, "setAlpha:", a1);

    }
    goto LABEL_14;
  }
  __break(1u);
LABEL_16:
  __break(1u);
}

unint64_t sub_10006229C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D7560[0];
  if (!qword_1000D7560[0])
  {
    v1 = objc_opt_self(UIView);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, qword_1000D7560);
  }
  return result;
}

uint64_t sub_1000622D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_1000622E0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_10009A6D8;
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 3, v4, a1 + 24);
    return 0;
  }
  return result;
}

uint64_t *sub_100062364(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 24) & (unint64_t)~v6) + *(_QWORD *)(v5 + 64) > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain(v9);
  }
  else
  {
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    v11 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    v12 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v11 = *v12;
    v13 = ((unint64_t)v11 + v6 + 8) & ~v6;
    v14 = ((unint64_t)v12 + v6 + 8) & ~v6;
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain(v10);
    v15(v13, v14, v4);
  }
  return a1;
}

uint64_t sub_100062440(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_10006248C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)v5 + v9 + 8) & ~v9;
  v11 = ((unint64_t)v6 + v9 + 8) & ~v9;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  swift_bridgeObjectRetain(v4);
  v12(v10, v11, v7);
  return a1;
}

_QWORD *sub_100062514(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v8 = *v9;
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v10 + 24))(((unint64_t)v8 + *(unsigned __int8 *)(v10 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80), ((unint64_t)v9 + *(unsigned __int8 *)(v10 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  return a1;
}

_OWORD *sub_1000625A4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  *a1 = *a2;
  v4 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 32))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_QWORD *sub_10006260C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v8 = *v9;
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v10 + 40))(((unint64_t)v8 + *(unsigned __int8 *)(v10 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80), ((unint64_t)v9 + *(unsigned __int8 *)(v10 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  return a1;
}

uint64_t sub_10006268C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  unint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 24) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v7 + 8) & ~v7);
      v15 = *(_QWORD *)(a1 + 8);
      if (v15 >= 0xFFFFFFFF)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_100062760 + 4 * byte_10009A6B0[(v9 - 1)]))();
}

void sub_1000627D8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = &dword_100000004;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = &_mh_execute_header.magic + 1;
    }
  }
  else
  {
    v8 = 0;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t type metadata accessor for PRXActionInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000629E4(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PRXActionInfo);
}

uint64_t sub_1000629E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return swift_getGenericMetadata(a1, v6, a5);
}

uint64_t sub_100062A10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000111E8(v2, qword_1000D75E8);
  v3 = sub_10001118C(v2, (uint64_t)qword_1000D75E8);
  if (qword_1000D55C0 != -1)
    swift_once(&qword_1000D55C0, sub_100058090);
  v4 = sub_10001118C(v2, (uint64_t)qword_1000DB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

void sub_100062AA0()
{
  qword_1000D7600 = 0x4024000000000000;
}

void sub_100062AB0()
{
  qword_1000D7608 = 0xC02E000000000000;
}

void sub_100062AC0()
{
  qword_1000D7610 = 0x4046800000000000;
}

void sub_100062AD4()
{
  qword_1000D7618 = 0x404C800000000000;
}

void sub_100062AE8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char *v11;
  objc_class *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  NSString v34;
  NSString v35;
  NSString v36;
  id v37;
  _QWORD v38[2];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[24];
  objc_super v43;

  v1 = v0;
  v2 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v2);
  v4 = (char *)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  v6 = *((_QWORD *)v5 - 1);
  v7 = __chkstk_darwin(v5);
  v9 = (_QWORD *)((char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  v11 = (char *)v38 - v10;
  v12 = (objc_class *)type metadata accessor for HomePodSetupStereoViewController(0);
  v43.receiver = v1;
  v43.super_class = v12;
  objc_msgSendSuper2(&v43, "viewDidLoad");
  v13 = (uint64_t)v1 + OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_viewModel;
  swift_beginAccess((char *)v1 + OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_viewModel, v42, 0, 0);
  sub_10000E0F0(v13, (uint64_t)v4, (uint64_t *)&unk_1000D6EC0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10000DC40((uint64_t)v4, (uint64_t *)&unk_1000D6EC0);
    if (qword_1000D5600 != -1)
      swift_once(&qword_1000D5600, sub_100062A10);
    v15 = type metadata accessor for Logger(0, v14);
    v16 = sub_10001118C(v15, (uint64_t)qword_1000D75E8);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "HomePodSetupStereoViewController: viewDidLoad failed because viewModel not set.", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

  }
  else
  {
    sub_100011228((uint64_t)v4, (uint64_t)v11, type metadata accessor for HomePodSetupViewModel);
    if (qword_1000D5600 != -1)
      swift_once(&qword_1000D5600, sub_100062A10);
    v21 = type metadata accessor for Logger(0, v20);
    sub_10001118C(v21, (uint64_t)qword_1000D75E8);
    v22 = sub_100035CDC((uint64_t)v11, (uint64_t)v9, type metadata accessor for HomePodSetupViewModel);
    v23 = Logger.logObject.getter(v22);
    v25 = static os_log_type_t.default.getter(v23, v24);
    if (os_log_type_enabled(v23, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(12, -1);
      v39 = swift_slowAlloc(32, -1);
      v41 = v39;
      *(_DWORD *)v26 = 136315138;
      v38[1] = v26 + 4;
      v28 = *v9;
      v27 = v9[1];
      swift_bridgeObjectRetain(v27);
      v40 = sub_10003EF58(v28, v27, &v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41);
      swift_bridgeObjectRelease(v27);
      sub_10001126C((uint64_t)v9, type metadata accessor for HomePodSetupViewModel);
      _os_log_impl((void *)&_mh_execute_header, v23, v25, "HomePodSetupStereoViewController: viewDidLoad with title %s", v26, 0xCu);
      v29 = v39;
      swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v29, -1, -1);
      swift_slowDealloc(v26, -1, -1);
    }
    else
    {
      sub_10001126C((uint64_t)v9, type metadata accessor for HomePodSetupViewModel);
    }

    (*(void (**)(char *))((swift_isaMask & *v1) + 0xD8))(v11);
    v30 = *(_QWORD *)&v11[v5[10]];
    v31 = swift_allocObject(&unk_1000C4558, 24, 7);
    swift_unknownObjectWeakInit(v31 + 16, v1);
    v32 = swift_bridgeObjectRetain(v30);
    sub_10007E6FC(v32, (uint64_t)sub_100066988, v31);
    swift_bridgeObjectRelease(v30);
    swift_release(v31);
    if ((v11[v5[18]] & 2) == 0 && *(_QWORD *)&v11[v5[19] + 8])
    {
      v33 = String._bridgeToObjectiveC()();
      v34 = String._bridgeToObjectiveC()();
      v35 = String._bridgeToObjectiveC()();
      v36 = String._bridgeToObjectiveC()();
      v37 = objc_msgSend(v1, "dismissalConfirmationActionWithTitle:message:confirmButtonTitle:cancelButtonTitle:", v33, v34, v35, v36);

      objc_msgSend(v1, "setDismissButtonAction:", v37);
    }
    sub_10001126C((uint64_t)v11, type metadata accessor for HomePodSetupViewModel);
  }
}

void sub_100062FB4(unsigned __int8 *a1, uint64_t a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t Strong;
  void *v15;
  uint64_t v16;
  _BYTE v17[48];
  _OWORD v18[2];
  uint64_t v19;
  _OWORD v20[3];
  _BYTE v21[24];

  v2 = *a1;
  v3 = a2 + 16;
  if (qword_1000D5600 != -1)
    swift_once(&qword_1000D5600, sub_100062A10);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10001118C(v4, (uint64_t)qword_1000D75E8);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v20[0] = v10;
    *(_DWORD *)v9 = 136315138;
    v11 = sub_10000E9EC(v2);
    v13 = v12;
    *(_QWORD *)v17 = sub_10003EF58(v11, v12, (uint64_t *)v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v17, &v17[8]);
    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "HomePodSetupStereoViewController: User tapped on button: %s", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }

  swift_beginAccess(v3, v21, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v15 = (void *)Strong;
    v16 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_presenter);

    if (v16)
    {
      v19 = 0;
      memset(v18, 0, sizeof(v18));
      memset(&v17[8], 0, 40);
      v17[0] = v2;
      sub_100011340((uint64_t)v18, (uint64_t)&v17[8], &qword_1000D6ED0);
      v20[0] = *(_OWORD *)v17;
      v20[1] = *(_OWORD *)&v17[16];
      v20[2] = *(_OWORD *)&v17[32];
      sub_10006B04C((char *)v20);
      swift_unknownObjectRelease(v16);
      sub_100011384((uint64_t)v20);
    }
  }
}

void sub_10006328C(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  NSString v20;
  NSString v21;
  int *v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  NSString v28;
  id v29;
  void *v30;
  void *v31;
  uint64_t v32;
  unsigned int (*v33)(char *, uint64_t, int *);
  char *v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  uint64_t v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  void *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  uint64_t v63;
  os_log_type_t v64;
  uint8_t *v65;
  const char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(uint64_t, uint64_t, uint64_t);
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char v75[24];

  v2 = v1;
  v4 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v4);
  v6 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v70 - v15;
  v17 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v17);
  v19 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v2[OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_isConfigured] & 1) != 0)
    return;
  v71 = v6;
  v72 = v10;
  v74 = v7;
  v2[OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_isConfigured] = 1;
  v20 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setTitle:", v20);

  v21 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setSubtitle:", v21);

  v22 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  objc_msgSend(v2, "setDismissalType:", *(_QWORD *)(a1 + v22[18]));
  v23 = (uint64_t *)(a1 + v22[7]);
  v25 = *v23;
  v24 = v23[1];
  v26 = HIBYTE(v24) & 0xF;
  if ((v24 & 0x2000000000000000) == 0)
    v26 = v25 & 0xFFFFFFFFFFFFLL;
  if (v26)
  {
    v27 = objc_msgSend(objc_allocWithZone((Class)PRXLabel), "initWithStyle:", 1);
    v28 = String._bridgeToObjectiveC()();
    objc_msgSend(v27, "setText:", v28);

    objc_msgSend(v27, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v29 = objc_msgSend(v2, "view");
    if (!v29)
    {
      __break(1u);
      return;
    }
    v30 = v29;
    objc_msgSend(v29, "addSubview:", v27);

    v31 = *(void **)&v2[OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_bodyLabel];
    *(_QWORD *)&v2[OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_bodyLabel] = v27;

  }
  v73 = v8;
  v32 = (uint64_t)&v2[OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_viewModel];
  swift_beginAccess(&v2[OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_viewModel], v75, 0, 0);
  sub_10000E0F0(v32, (uint64_t)v16, (uint64_t *)&unk_1000D6EC0);
  v33 = *(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v22 - 1) + 48);
  if (v33(v16, 1, v22)
    || (v34 = &v16[v22[45]],
        v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48),
        v35(v34, 1, v74)))
  {
    sub_10000DC40((uint64_t)v16, (uint64_t *)&unk_1000D6EC0);
    v36 = type metadata accessor for AdjustedImage(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v19, 1, 1, v36);
    goto LABEL_10;
  }
  v70 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v35;
  v45 = (uint64_t)v34;
  v46 = (uint64_t)v72;
  sub_100035CDC(v45, (uint64_t)v72, type metadata accessor for HomePodSetupViewModel.StereoPairImage);
  sub_10000DC40((uint64_t)v16, (uint64_t *)&unk_1000D6EC0);
  sub_10000E0F0(v46 + *(int *)(v74 + 20), (uint64_t)v19, &qword_1000D5E60);
  sub_10001126C(v46, type metadata accessor for HomePodSetupViewModel.StereoPairImage);
  v47 = type metadata accessor for AdjustedImage(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 48))(v19, 1, v47) == 1)
  {
LABEL_10:
    sub_10000DC40((uint64_t)v19, &qword_1000D5E60);
    sub_10000E0F0(v32, (uint64_t)v14, (uint64_t *)&unk_1000D6EC0);
    if (v33(v14, 1, v22)
      || (v37 = (uint64_t)&v14[v22[45]],
          (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v37, 1, v74)))
    {
      sub_10000DC40((uint64_t)v14, (uint64_t *)&unk_1000D6EC0);
LABEL_13:
      if (qword_1000D5600 != -1)
        swift_once(&qword_1000D5600, sub_100062A10);
      v39 = type metadata accessor for Logger(0, v38);
      v40 = sub_10001118C(v39, (uint64_t)qword_1000D75E8);
      v41 = Logger.logObject.getter(v40);
      v43 = static os_log_type_t.default.getter(v41, v42);
      if (os_log_type_enabled(v41, v43))
      {
        v44 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v44 = 0;
        _os_log_impl((void *)&_mh_execute_header, v41, v43, "HomePodSetupStereoViewController configureUI: stereoPairImages does not have a right, using single stereo constraints", v44, 2u);
        swift_slowDealloc(v44, -1, -1);
      }

      sub_100063A00();
      return;
    }
    v56 = (uint64_t)v72;
    sub_100035CDC(v37, (uint64_t)v72, type metadata accessor for HomePodSetupViewModel.StereoPairImage);
    sub_10000DC40((uint64_t)v14, (uint64_t *)&unk_1000D6EC0);
    v57 = *(void **)(v56 + *(int *)(v74 + 24));
    v58 = v57;
    sub_10001126C(v56, type metadata accessor for HomePodSetupViewModel.StereoPairImage);
    if (!v57)
      goto LABEL_13;

    if (qword_1000D5600 != -1)
      swift_once(&qword_1000D5600, sub_100062A10);
    v60 = type metadata accessor for Logger(0, v59);
    v61 = sub_10001118C(v60, (uint64_t)qword_1000D75E8);
    v62 = Logger.logObject.getter(v61);
    v64 = static os_log_type_t.default.getter(v62, v63);
    if (!os_log_type_enabled(v62, v64))
    {
LABEL_36:

      sub_100064A38();
      return;
    }
    v65 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v65 = 0;
    v66 = "HomePodSetupStereoViewController configureUI: stereoPairImages has no right image but has an appleTV";
LABEL_35:
    _os_log_impl((void *)&_mh_execute_header, v62, v64, v66, v65, 2u);
    swift_slowDealloc(v65, -1, -1);
    goto LABEL_36;
  }
  sub_10000DC40((uint64_t)v19, &qword_1000D5E60);
  v48 = (uint64_t)v71;
  sub_10000E0F0(a1 + v22[45], (uint64_t)v71, &qword_1000D5E68);
  v49 = v70(v48, 1, v74);
  sub_10000DC40(v48, &qword_1000D5E68);
  if (v49 != 1)
  {
    if (qword_1000D5600 != -1)
      swift_once(&qword_1000D5600, sub_100062A10);
    v67 = type metadata accessor for Logger(0, v50);
    v68 = sub_10001118C(v67, (uint64_t)qword_1000D75E8);
    v62 = Logger.logObject.getter(v68);
    v64 = static os_log_type_t.default.getter(v62, v69);
    if (!os_log_type_enabled(v62, v64))
      goto LABEL_36;
    v65 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v65 = 0;
    v66 = "HomePodSetupStereoViewController configureUI: stereoPairImages has a right, using pair stereo constraints";
    goto LABEL_35;
  }
  if (qword_1000D5600 != -1)
    swift_once(&qword_1000D5600, sub_100062A10);
  v51 = type metadata accessor for Logger(0, v50);
  v52 = sub_10001118C(v51, (uint64_t)qword_1000D75E8);
  v53 = Logger.logObject.getter(v52);
  v54 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v53, v54))
  {
    v55 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v55 = 0;
    _os_log_impl((void *)&_mh_execute_header, v53, v54, "No stereo images found", v55, 2u);
    swift_slowDealloc(v55, -1, -1);
  }

}

uint64_t sub_100063A00()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  int *v18;
  uint64_t *v19;
  uint64_t v20;
  int *v21;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  uint64_t v28;
  os_log_type_t v29;
  _BOOL4 v30;
  _QWORD *v31;
  uint8_t *v32;
  id v33;
  char **v34;
  id v35;
  int v36;
  uint64_t v37;
  NSObject *v38;
  uint64_t v39;
  os_log_type_t v40;
  _BOOL4 v41;
  char **v42;
  uint8_t *v43;
  id v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  int *v66;
  uint64_t v67;
  double v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  double v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint8_t *v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  uint64_t v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  void *v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  char **p_type;
  id v121;
  id v122;
  id v123;
  id v124;
  char **v125;
  id v126;
  id v127;
  id v128;
  id v129;
  id v130;
  id v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  unint64_t v139;
  unint64_t v140;
  uint64_t v141;
  id v142;
  unint64_t v143;
  unint64_t v144;
  uint64_t v145;
  id v146;
  unint64_t v147;
  unint64_t v148;
  uint64_t v149;
  void *v150;
  uint64_t v151;
  Class isa;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  unint64_t v156;
  unint64_t v157;
  unint64_t v158;
  uint64_t v159;
  id v160;
  id v161;
  char *v162;
  _QWORD *v163;
  _QWORD *v164;
  int *v165;
  uint64_t v166;
  uint64_t v167;
  char v168[24];

  v1 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v1);
  v3 = (char *)&v159 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = (int *)type metadata accessor for AdjustedImage(0);
  v4 = *((_QWORD *)v165 - 1);
  __chkstk_darwin(v165);
  v164 = (uint64_t *)((char *)&v159 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v159 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v159 - v10;
  v12 = type metadata accessor for HomePodSetupViewModel(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v159 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = v0;
  v16 = (uint64_t)&v0[OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_viewModel];
  swift_beginAccess(&v0[OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_viewModel], v168, 0, 0);
  sub_10000E0F0(v16, (uint64_t)v11, (uint64_t *)&unk_1000D6EC0);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v18 = (int *)v12;
  if (v17(v11, 1, v12) == 1)
  {
    v19 = (uint64_t *)&unk_1000D6EC0;
    v20 = (uint64_t)v11;
    return sub_10000DC40(v20, v19);
  }
  sub_100011228((uint64_t)v11, (uint64_t)v15, type metadata accessor for HomePodSetupViewModel);
  sub_10000E0F0(v16, (uint64_t)v9, (uint64_t *)&unk_1000D6EC0);
  if (v17(v9, 1, v12))
  {
    sub_10000DC40((uint64_t)v9, (uint64_t *)&unk_1000D6EC0);
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v4 + 56))(v3, 1, 1, v165);
LABEL_6:
    sub_10001126C((uint64_t)v15, type metadata accessor for HomePodSetupViewModel);
    v19 = &qword_1000D5E60;
    v20 = (uint64_t)v3;
    return sub_10000DC40(v20, v19);
  }
  sub_10000E0F0((uint64_t)&v9[*(int *)(v12 + 108)], (uint64_t)v3, &qword_1000D5E60);
  sub_10000DC40((uint64_t)v9, (uint64_t *)&unk_1000D6EC0);
  v21 = v165;
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v4 + 48))(v3, 1, v165) == 1)
    goto LABEL_6;
  v162 = v15;
  v23 = v164;
  sub_100011228((uint64_t)v3, (uint64_t)v164, type metadata accessor for AdjustedImage);
  if (qword_1000D5600 != -1)
    swift_once(&qword_1000D5600, sub_100062A10);
  v25 = type metadata accessor for Logger(0, v24);
  v26 = sub_10001118C(v25, (uint64_t)qword_1000D75E8);
  v27 = Logger.logObject.getter(v26);
  v29 = static os_log_type_t.default.getter(v27, v28);
  v30 = os_log_type_enabled(v27, v29);
  v31 = v163;
  if (v30)
  {
    v32 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v32 = 0;
    _os_log_impl((void *)&_mh_execute_header, v27, v29, "HomePodSetupStereoViewController setUpFixedLayout, Setting up a single stereo image view", v32, 2u);
    swift_slowDealloc(v32, -1, -1);
  }

  v33 = objc_msgSend(objc_allocWithZone((Class)SFAdjustedImageView), "initWithImage:", *v23);
  sub_100073038((uint64_t)v23 + v21[5]);
  objc_msgSend(v33, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v34 = &selRef_initWithRegistrationItems_;
  v35 = objc_msgSend(v31, "contentView");
  objc_msgSend(v35, "addSubview:", v33);

  v167 = (uint64_t)_swiftEmptyArrayStorage;
  v165 = v18;
  v36 = v162[v18[28]];
  v38 = Logger.logObject.getter(v37);
  v40 = static os_log_type_t.default.getter(v38, v39);
  v41 = os_log_type_enabled(v38, v40);
  v42 = &selRef_initWithRegistrationItems_;
  if (v36 == 1)
  {
    v161 = v33;
    if (v41)
    {
      v43 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v43 = 0;
      _os_log_impl((void *)&_mh_execute_header, v38, v40, "HomePodSetupStereoViewController setUpFixedLayout using useSoloHomePodConstraints constraints", v43, 2u);
      swift_slowDealloc(v43, -1, -1);
    }

    v44 = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
    v45 = objc_msgSend(v31, "contentView");
    objc_msgSend(v45, "addLayoutGuide:", v44);

    v46 = objc_msgSend(v31, "contentView");
    v47 = objc_msgSend(v46, "mainContentGuide");

    v48 = sub_10000D604(&qword_1000D6EE0);
    v49 = swift_allocObject(v48, 112, 7);
    *(_OWORD *)(v49 + 16) = xmmword_1000994A0;
    v50 = objc_msgSend(v44, "topAnchor");
    v51 = objc_msgSend(v47, "topAnchor");
    v52 = objc_msgSend(v50, "constraintGreaterThanOrEqualToAnchor:", v51);

    *(_QWORD *)(v49 + 32) = v52;
    v53 = objc_msgSend(v44, "bottomAnchor");
    v54 = objc_msgSend(v47, "bottomAnchor");
    v55 = objc_msgSend(v53, "constraintLessThanOrEqualToAnchor:", v54);

    *(_QWORD *)(v49 + 40) = v55;
    v56 = objc_msgSend(v44, "centerYAnchor");
    v57 = objc_msgSend(v47, "centerYAnchor");
    v58 = objc_msgSend(v56, "constraintEqualToAnchor:", v57);

    *(_QWORD *)(v49 + 48) = v58;
    v59 = objc_msgSend(v44, "leadingAnchor");
    v160 = v47;
    v60 = objc_msgSend(v47, "leadingAnchor");
    v61 = objc_msgSend(v59, "constraintEqualToAnchor:", v60);

    *(_QWORD *)(v49 + 56) = v61;
    v62 = objc_msgSend(v44, "trailingAnchor");
    v63 = objc_msgSend(v47, "trailingAnchor");
    v64 = objc_msgSend(v62, "constraintEqualToAnchor:", v63);

    *(_QWORD *)(v49 + 64) = v64;
    v65 = objc_msgSend(v44, "heightAnchor");
    v66 = v165;
    v67 = (uint64_t)v162;
    v68 = *(double *)&v162[v165[29]];
    v69 = objc_msgSend(v65, "constraintEqualToConstant:", v68);

    *(_QWORD *)(v49 + 72) = v69;
    v70 = v161;
    v71 = objc_msgSend(v161, "centerYAnchor");
    v72 = objc_msgSend(v44, "centerYAnchor");
    v73 = objc_msgSend(v71, "constraintEqualToAnchor:", v72);

    *(_QWORD *)(v49 + 80) = v73;
    v74 = objc_msgSend(v70, "centerXAnchor");
    v42 = &selRef_initWithRegistrationItems_;
    v75 = objc_msgSend(v44, "centerXAnchor");
    v76 = objc_msgSend(v74, "constraintEqualToAnchor:", v75);

    *(_QWORD *)(v49 + 88) = v76;
    v33 = v70;
    v77 = objc_msgSend(v70, "heightAnchor");
    v78 = objc_msgSend(v77, "constraintEqualToConstant:", v68);

    *(_QWORD *)(v49 + 96) = v78;
    v34 = &selRef_initWithRegistrationItems_;
    v79 = objc_msgSend(v70, "widthAnchor");
    v80 = *(double *)(v67 + v66[30]);
    v31 = v163;
    v81 = objc_msgSend(v79, "constraintEqualToConstant:", v80);

    *(_QWORD *)(v49 + 104) = v81;
    v166 = v49;
    specialized Array._endMutation()(v82);
    v83 = v166;

  }
  else
  {
    if (v41)
    {
      v84 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v84 = 0;
      _os_log_impl((void *)&_mh_execute_header, v38, v40, "HomePodSetupStereoViewController setUpFixedLayout NOT using useSoloHomePodConstraints constraints", v84, 2u);
      swift_slowDealloc(v84, -1, -1);
    }

    v85 = sub_10000D604(&qword_1000D6EE0);
    v86 = swift_allocObject(v85, 56, 7);
    *(_OWORD *)(v86 + 16) = xmmword_10009A4F0;
    v87 = objc_msgSend(v33, "centerXAnchor");
    v88 = objc_msgSend(v31, "contentView");
    v89 = objc_msgSend(v88, "mainContentGuide");

    v90 = objc_msgSend(v89, "centerXAnchor");
    v91 = objc_msgSend(v87, "constraintEqualToAnchor:", v90);

    *(_QWORD *)(v86 + 32) = v91;
    v92 = objc_msgSend(v33, "topAnchor");
    v93 = objc_msgSend(v31, "contentView");
    v94 = objc_msgSend(v93, "mainContentGuide");

    v95 = objc_msgSend(v94, "topAnchor");
    v96 = objc_msgSend(v92, "constraintGreaterThanOrEqualToAnchor:", v95);

    *(_QWORD *)(v86 + 40) = v96;
    v97 = objc_msgSend(v33, "bottomAnchor");
    v98 = objc_msgSend(v31, "contentView");
    v99 = objc_msgSend(v98, "mainContentGuide");

    v100 = objc_msgSend(v99, "bottomAnchor");
    v101 = objc_msgSend(v97, "constraintLessThanOrEqualToAnchor:", v100);

    *(_QWORD *)(v86 + 48) = v101;
    v166 = v86;
    specialized Array._endMutation()(v102);
    v83 = v166;
  }
  v167 = v83;
  if (((*(uint64_t (**)(void))((swift_isaMask & *v31) + 0xA0))() & 1) != 0)
  {
    v103 = objc_msgSend(v33, "centerYAnchor");
    v104 = objc_msgSend(v31, v34[298]);
    v105 = objc_msgSend(v104, v42[299]);

    v106 = objc_msgSend(v105, "centerYAnchor");
    v107 = objc_msgSend(v103, "constraintEqualToAnchor:", v106);

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v108);
    v110 = *(_QWORD *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v109 = *(_QWORD *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v110 >= v109 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v109 > 1, v110 + 1, 1);
    v111 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v110, v107);
    specialized Array._endMutation()(v111);
  }
  v112 = *(void **)((char *)v31 + OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_bodyLabel);
  if (v112)
  {
    v113 = v112;
    v114 = objc_msgSend(v113, "leadingAnchor");
    v115 = objc_msgSend(v31, v34[298]);
    v116 = objc_msgSend(v115, v42[299]);

    v117 = objc_msgSend(v116, "leadingAnchor");
    v165 = (int *)objc_msgSend(v114, "constraintEqualToAnchor:", v117);

    v118 = objc_msgSend(v113, "trailingAnchor");
    v119 = objc_msgSend(v31, v34[298]);
    p_type = &stru_1000CEFF0.type;
    v121 = objc_msgSend(v119, v42[299]);

    v122 = objc_msgSend(v121, "trailingAnchor");
    v163 = objc_msgSend(v118, "constraintEqualToAnchor:", v122);

    v123 = objc_msgSend(v113, "topAnchor");
    v124 = objc_msgSend(v33, "bottomAnchor");
    v125 = v34;
    v126 = objc_msgSend(v123, "constraintEqualToAnchor:constant:", v124, 10.0);

    v127 = objc_msgSend(v113, "bottomAnchor");
    v128 = objc_msgSend(v31, v125[298]);
    v129 = objc_msgSend(v128, v42[299]);

    v130 = objc_msgSend(v129, "bottomAnchor");
    v131 = objc_msgSend(v127, "constraintEqualToAnchor:", v130);

    v132 = v167;
    if ((unint64_t)v167 >> 62)
    {
      if (v167 < 0)
        v153 = v167;
      else
        v153 = v167 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v167);
      v154 = _CocoaArrayWrapper.endIndex.getter(v153);
      swift_bridgeObjectRelease(v132);
      v135 = v154 + 4;
      if (!__OFADD__(v154, 4))
      {
LABEL_26:
        v136 = sub_100066680(v135, 1);
        specialized Array._endMutation()(v136);
        p_type = v165;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(p_type);
        v135 = *(_QWORD *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v133 = *(_QWORD *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v135 < v133 >> 1)
        {
LABEL_27:
          v137 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v135, p_type);
          specialized Array._endMutation()(v137);
          v138 = v163;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v138);
          v139 = *(_QWORD *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v140 = *(_QWORD *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v139 >= v140 >> 1)
          {
            v156 = *(_QWORD *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x10);
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v140 > 1, v139 + 1, 1);
            v139 = v156;
          }
          v141 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v139, v138);
          specialized Array._endMutation()(v141);
          v142 = v126;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v142);
          v143 = *(_QWORD *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v144 = *(_QWORD *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v143 >= v144 >> 1)
          {
            v157 = *(_QWORD *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x10);
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v144 > 1, v143 + 1, 1);
            v143 = v157;
          }
          v145 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v143, v142);
          specialized Array._endMutation()(v145);
          v146 = v131;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v146);
          v147 = *(_QWORD *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v148 = *(_QWORD *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v147 >= v148 >> 1)
          {
            v158 = *(_QWORD *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x10);
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v148 > 1, v147 + 1, 1);
            v147 = v158;
          }
          v149 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v147, v146);
          specialized Array._endMutation()(v149);

          goto LABEL_34;
        }
LABEL_41:
        v155 = v135;
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v133 > 1, v135 + 1, 1);
        v135 = v155;
        goto LABEL_27;
      }
    }
    else
    {
      v133 = v167 & 0xFFFFFFFFFFFFF8;
      v134 = *(_QWORD *)((v167 & 0xFFFFFFFFFFFFF8) + 0x10);
      v135 = v134 + 4;
      if (!__OFADD__(v134, 4))
        goto LABEL_26;
    }
    __break(1u);
    goto LABEL_41;
  }
LABEL_34:
  v150 = (void *)objc_opt_self(NSLayoutConstraint);
  v151 = v167;
  sub_100014934();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v150, "activateConstraints:", isa, swift_bridgeObjectRelease(v151).n128_f64[0]);

  sub_10001126C((uint64_t)v164, type metadata accessor for AdjustedImage);
  return sub_10001126C((uint64_t)v162, type metadata accessor for HomePodSetupViewModel);
}

uint64_t sub_100064A38()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  uint64_t v30;
  os_log_type_t v31;
  uint8_t *v32;
  int *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int *v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  NSObject *v92;
  uint64_t v93;
  os_log_type_t v94;
  uint8_t *v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  char **v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  id v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  id v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  void *v121;
  id v122;
  NSObject *v123;
  uint64_t v124;
  os_log_type_t v125;
  uint8_t *v126;
  id v127;
  id v128;
  id v129;
  char *v130;
  id v131;
  id v132;
  id v133;
  char *v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  id v140;
  unint64_t v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  int v145;
  id v146;
  id v147;
  char *v148;
  id v149;
  id v150;
  id v151;
  char *v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  id v158;
  unint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  id v163;
  id v164;
  id v165;
  unint64_t v166;
  unint64_t v167;
  uint64_t v168;
  id v169;
  id v170;
  id v171;
  unint64_t v172;
  unint64_t v173;
  uint64_t v174;
  int v175;
  uint64_t v176;
  uint64_t v177;
  id v178;
  id v179;
  id v180;
  uint64_t v181;
  unint64_t v182;
  unint64_t v183;
  uint64_t v184;
  void *v185;
  void *v186;
  id v187;
  id v188;
  id v189;
  void *v190;
  id v191;
  id v192;
  id v193;
  id v194;
  id v195;
  id v196;
  id v197;
  char **p_type;
  id v199;
  id v200;
  id v201;
  id v202;
  id v203;
  id v204;
  int *v205;
  id v206;
  id v207;
  unint64_t v208;
  unint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  id v214;
  unint64_t v215;
  unint64_t v216;
  uint64_t v217;
  id v218;
  unint64_t v219;
  unint64_t v220;
  uint64_t v221;
  id v222;
  unint64_t v223;
  unint64_t v224;
  uint64_t v225;
  void *v226;
  uint64_t v227;
  Class isa;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  _QWORD *v237;
  uint64_t v238;
  char *v239;
  _QWORD *v240;
  uint64_t v241;
  id v242;
  _QWORD *v243;
  uint64_t v244;
  char *v245;
  _QWORD *v246;
  char *v247;
  int *v248;
  uint64_t v249;
  char v250[24];

  v1 = sub_10000D604(&qword_1000D5E60);
  v2 = __chkstk_darwin(v1);
  v245 = (char *)&v237 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __chkstk_darwin(v2);
  v244 = (uint64_t)&v237 - v5;
  __chkstk_darwin(v4);
  v247 = (char *)&v237 - v6;
  v248 = (int *)type metadata accessor for AdjustedImage(0);
  v246 = (_QWORD *)*((_QWORD *)v248 - 1);
  __chkstk_darwin(v248);
  v8 = (char *)&v237 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v9);
  v11 = (char *)&v237 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000D604(&qword_1000D5E68);
  __chkstk_darwin(v12);
  v14 = (char *)&v237 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for HomePodSetupViewModel.StereoPairImage(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v237 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v21 = (char *)&v237 - v20;
  v22 = (uint64_t)v0 + OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_viewModel;
  swift_beginAccess((char *)v0 + OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_viewModel, v250, 0, 0);
  sub_10000E0F0(v22, (uint64_t)v11, (uint64_t *)&unk_1000D6EC0);
  v23 = type metadata accessor for HomePodSetupViewModel(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v11, 1, v23))
  {
    sub_10000DC40((uint64_t)v11, (uint64_t *)&unk_1000D6EC0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
    return sub_10000DC40((uint64_t)v14, &qword_1000D5E68);
  }
  v239 = v19;
  v240 = v8;
  v24 = v0;
  v243 = v21;
  sub_10000E0F0((uint64_t)&v11[*(int *)(v23 + 180)], (uint64_t)v14, &qword_1000D5E68);
  sub_10000DC40((uint64_t)v11, (uint64_t *)&unk_1000D6EC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    return sub_10000DC40((uint64_t)v14, &qword_1000D5E68);
  v241 = v15;
  v26 = v243;
  sub_100011228((uint64_t)v14, (uint64_t)v243, type metadata accessor for HomePodSetupViewModel.StereoPairImage);
  if (qword_1000D5600 != -1)
    swift_once(&qword_1000D5600, sub_100062A10);
  v28 = type metadata accessor for Logger(0, v27);
  v238 = sub_10001118C(v28, (uint64_t)qword_1000D75E8);
  v29 = Logger.logObject.getter(v238);
  v31 = static os_log_type_t.default.getter(v29, v30);
  if (os_log_type_enabled(v29, v31))
  {
    v32 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v32 = 0;
    _os_log_impl((void *)&_mh_execute_header, v29, v31, "HomePodSetupStereoViewController setUpCompositeLayout started", v32, 2u);
    swift_slowDealloc(v32, -1, -1);
  }

  v33 = (int *)objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v33, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v34 = objc_msgSend(v24, "contentView");
  objc_msgSend(v34, "addSubview:", v33);

  v35 = objc_msgSend(objc_allocWithZone((Class)SFAdjustedImageView), "initWithImage:", *v26);
  sub_100073038((uint64_t)v26 + v248[5]);
  objc_msgSend(v35, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v33, "addSubview:", v35);
  v36 = sub_10000D604(&qword_1000D6EE0);
  v37 = swift_allocObject(v36, 80, 7);
  *(_OWORD *)(v37 + 16) = xmmword_100099F40;
  v38 = objc_msgSend(v35, "leftAnchor");
  v39 = objc_msgSend(v33, "leftAnchor");
  v40 = objc_msgSend(v38, "constraintEqualToAnchor:", v39);

  *(_QWORD *)(v37 + 32) = v40;
  v242 = v35;
  v41 = objc_msgSend(v35, "topAnchor");
  v42 = objc_msgSend(v33, "topAnchor");
  v43 = objc_msgSend(v41, "constraintEqualToAnchor:", v42);

  *(_QWORD *)(v37 + 40) = v43;
  v44 = objc_msgSend(v33, "leftAnchor");
  v45 = objc_msgSend(v24, "contentView");
  v46 = objc_msgSend(v45, "mainContentGuide");

  v47 = objc_msgSend(v46, "leftAnchor");
  v48 = objc_msgSend(v44, "constraintGreaterThanOrEqualToAnchor:", v47);

  *(_QWORD *)(v37 + 48) = v48;
  v49 = objc_msgSend(v33, "rightAnchor");
  v50 = objc_msgSend(v24, "contentView");
  v51 = objc_msgSend(v50, "mainContentGuide");

  v52 = objc_msgSend(v51, "rightAnchor");
  v53 = objc_msgSend(v49, "constraintLessThanOrEqualToAnchor:", v52);

  *(_QWORD *)(v37 + 56) = v53;
  v54 = objc_msgSend(v33, "bottomAnchor");
  v55 = objc_msgSend(v24, "contentView");
  v56 = objc_msgSend(v55, "mainContentGuide");

  v57 = objc_msgSend(v56, "bottomAnchor");
  v58 = objc_msgSend(v54, "constraintLessThanOrEqualToAnchor:", v57);

  *(_QWORD *)(v37 + 64) = v58;
  v59 = objc_msgSend(v33, "centerXAnchor");
  v60 = objc_msgSend(v24, "contentView");
  v61 = objc_msgSend(v60, "mainContentGuide");

  v62 = objc_msgSend(v61, "centerXAnchor");
  v63 = objc_msgSend(v59, "constraintEqualToAnchor:", v62);

  *(_QWORD *)(v37 + 72) = v63;
  v249 = v37;
  v65 = specialized Array._endMutation()(v64);
  LOBYTE(v62) = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v24) + 0xA0))(v65);
  v66 = objc_msgSend(v33, "topAnchor");
  v67 = objc_msgSend(v24, "contentView");
  v68 = objc_msgSend(v67, "mainContentGuide");

  v69 = objc_msgSend(v68, "topAnchor");
  v237 = v24;
  if ((v62 & 1) != 0)
  {
    v70 = objc_msgSend(v66, "constraintGreaterThanOrEqualToAnchor:", v69);

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v71);
    v73 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v72 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFFF8) + 0x18);
    v74 = v241;
    v75 = (uint64_t)v247;
    if (v73 >= v72 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v72 > 1, v73 + 1, 1);
    v76 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v73, v70);
    specialized Array._endMutation()(v76);
    v77 = objc_msgSend(v33, "centerYAnchor");
    v78 = objc_msgSend(v24, "contentView");
    v79 = objc_msgSend(v78, "mainContentGuide");

    v80 = objc_msgSend(v79, "centerYAnchor");
    v81 = objc_msgSend(v77, "constraintEqualToAnchor:", v80);

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v82);
    v84 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v83 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFFF8) + 0x18);
    v85 = (uint64_t)v243;
    if (v84 >= v83 >> 1)
LABEL_13:
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v83 > 1, v84 + 1, 1);
  }
  else
  {
    v74 = v241;
    v75 = (uint64_t)v247;
    if (qword_1000D5610 != -1)
      swift_once(&qword_1000D5610, sub_100062AB0);
    v81 = objc_msgSend(v66, "constraintEqualToAnchor:constant:", v69, *(double *)&qword_1000D7608, v237);

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v86);
    v84 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v83 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFFF8) + 0x18);
    v85 = (uint64_t)v243;
    if (v84 >= v83 >> 1)
      goto LABEL_13;
  }
  v87 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v84, v81);
  v88 = v248;
  v89 = v246;
  specialized Array._endMutation()(v87);
  v247 = (char *)(v85 + *(int *)(v74 + 20));
  sub_10000E0F0((uint64_t)v247, v75, &qword_1000D5E60);
  v248 = (int *)v89[6];
  if (((unsigned int (*)(uint64_t, uint64_t, int *))v248)(v75, 1, v88) == 1)
  {
    sub_10000DC40(v75, &qword_1000D5E60);
    goto LABEL_31;
  }
  v90 = v240;
  v91 = sub_100011228(v75, (uint64_t)v240, type metadata accessor for AdjustedImage);
  v92 = Logger.logObject.getter(v91);
  v94 = static os_log_type_t.default.getter(v92, v93);
  if (os_log_type_enabled(v92, v94))
  {
    v95 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v95 = 0;
    _os_log_impl((void *)&_mh_execute_header, v92, v94, "HomePodSetupStereoViewController: stereoImags has right image", v95, 2u);
    swift_slowDealloc(v95, -1, -1);
  }

  v96 = objc_msgSend(objc_allocWithZone((Class)SFAdjustedImageView), "initWithImage:", *v90);
  sub_100073038((uint64_t)v90 + v88[5]);
  objc_msgSend(v96, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v33, "addSubview:", v96);
  v97 = objc_msgSend(v96, "topAnchor");
  v98 = v242;
  v99 = objc_msgSend(v242, "topAnchor");
  v246 = objc_msgSend(v97, "constraintEqualToAnchor:", v99);

  v100 = objc_msgSend(v96, "leftAnchor");
  v101 = &selRef_initWithRegistrationItems_;
  v102 = objc_msgSend(v98, "rightAnchor");
  if (qword_1000D5608 != -1)
    swift_once(&qword_1000D5608, sub_100062AA0);
  v103 = objc_msgSend(v100, "constraintEqualToAnchor:constant:", v102, *(double *)&qword_1000D7600, v237);

  v104 = objc_msgSend(v96, "rightAnchor");
  v105 = objc_msgSend(v33, "rightAnchor");
  v106 = objc_msgSend(v104, "constraintEqualToAnchor:", v105);

  v107 = v249;
  if (!((unint64_t)v249 >> 62))
  {
    v108 = v249 & 0xFFFFFFFFFFFFF8;
    v109 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFF8) + 0x10);
    v110 = v109 + 3;
    if (!__OFADD__(v109, 3))
      goto LABEL_25;
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  if (v249 < 0)
    v233 = v249;
  else
    v233 = v249 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v249);
  v234 = _CocoaArrayWrapper.endIndex.getter(v233);
  swift_bridgeObjectRelease(v107);
  v110 = v234 + 3;
  if (__OFADD__(v234, 3))
    goto LABEL_94;
LABEL_25:
  v111 = sub_100066680(v110, 1);
  specialized Array._endMutation()(v111);
  v101 = v246;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v101);
  v107 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v108 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v107 >= v108 >> 1)
LABEL_95:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v108 > 1, v107 + 1, 1);
  v112 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v107, v101);
  specialized Array._endMutation()(v112);
  v113 = v103;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v113);
  v115 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v114 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v115 >= v114 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v114 > 1, v115 + 1, 1);
  v116 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v115, v113);
  specialized Array._endMutation()(v116);
  v117 = v106;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v117);
  v119 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v118 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v119 >= v118 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v118 > 1, v119 + 1, 1);
  v120 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v119, v117);
  specialized Array._endMutation()(v120);

  sub_10001126C((uint64_t)v240, type metadata accessor for AdjustedImage);
  v74 = v241;
LABEL_31:
  v121 = *(void **)(v85 + *(int *)(v74 + 24));
  if (!v121)
  {
    v163 = objc_msgSend(v242, "bottomAnchor");
    v164 = objc_msgSend(v33, "bottomAnchor");
    v165 = objc_msgSend(v163, "constraintEqualToAnchor:", v164);

    v122 = v165;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v122);
    v167 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v166 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v167 >= v166 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v166 > 1, v167 + 1, 1);
    v168 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v167, v122);
    specialized Array._endMutation()(v168);
    goto LABEL_56;
  }
  v122 = v121;
  v123 = Logger.logObject.getter(v122);
  v125 = static os_log_type_t.default.getter(v123, v124);
  if (os_log_type_enabled(v123, v125))
  {
    v126 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v126 = 0;
    _os_log_impl((void *)&_mh_execute_header, v123, v125, "HomePodSetupStereoViewController createStereoPairImages: stereoImags has apple tv image", v126, 2u);
    swift_slowDealloc(v126, -1, -1);
  }

  v127 = objc_msgSend(objc_allocWithZone((Class)SFAdjustedImageView), "initWithImage:", v122);
  objc_msgSend(v127, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v33, "addSubview:", v127);
  v128 = objc_msgSend(v127, "centerYAnchor");
  v129 = objc_msgSend(v242, "centerYAnchor");
  if (qword_1000D5618 != -1)
    swift_once(&qword_1000D5618, sub_100062AC0);
  v130 = (char *)objc_msgSend(v128, "constraintEqualToAnchor:constant:", v129, *(double *)&qword_1000D7610, v237);

  v131 = objc_msgSend(v127, "bottomAnchor");
  v132 = objc_msgSend(v33, "bottomAnchor");
  v133 = objc_msgSend(v131, "constraintEqualToAnchor:", v132);

  v134 = (char *)v249;
  if ((unint64_t)v249 >> 62)
  {
    if (v249 < 0)
      v229 = v249;
    else
      v229 = v249 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v249);
    v230 = _CocoaArrayWrapper.endIndex.getter(v229);
    swift_bridgeObjectRelease(v134);
    v137 = v230 + 2;
    if (!__OFADD__(v230, 2))
    {
LABEL_38:
      v138 = sub_100066680(v137, 1);
      specialized Array._endMutation()(v138);
      v134 = v130;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v134);
      v130 = *(char **)((v249 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v135 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if ((unint64_t)v130 < v135 >> 1)
        goto LABEL_39;
      goto LABEL_81;
    }
  }
  else
  {
    v135 = v249 & 0xFFFFFFFFFFFFF8;
    v136 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFF8) + 0x10);
    v137 = v136 + 2;
    if (!__OFADD__(v136, 2))
      goto LABEL_38;
  }
  __break(1u);
LABEL_81:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v135 > 1, v130 + 1, 1);
LABEL_39:
  v139 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v130, v134);
  specialized Array._endMutation()(v139);
  v140 = v133;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v140);
  v142 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v141 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v142 >= v141 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v141 > 1, v142 + 1, 1);
  v143 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v142, v140);
  specialized Array._endMutation()(v143);

  v144 = v244;
  sub_10000E0F0((uint64_t)v247, v244, &qword_1000D5E60);
  v145 = ((uint64_t (*)(uint64_t, uint64_t, int *))v248)(v144, 1, v88);
  sub_10000DC40(v144, &qword_1000D5E60);
  v146 = objc_msgSend(v127, "centerXAnchor");
  if (v145 != 1)
  {
    v169 = objc_msgSend(v33, "centerXAnchor");
    v170 = objc_msgSend(v146, "constraintEqualToAnchor:", v169);

    v171 = v170;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v171);
    v173 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v172 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFFF8) + 0x18);
    v74 = v241;
    if (v173 >= v172 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v172 > 1, v173 + 1, 1);
    v174 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v173, v171);
    specialized Array._endMutation()(v174);

LABEL_56:
    v162 = (uint64_t)v245;
    goto LABEL_57;
  }
  v147 = objc_msgSend(v242, "centerXAnchor");
  if (qword_1000D5620 != -1)
    swift_once(&qword_1000D5620, sub_100062AD4);
  v148 = (char *)objc_msgSend(v146, "constraintEqualToAnchor:constant:", v147, *(double *)&qword_1000D7618);

  v149 = objc_msgSend(v127, "rightAnchor");
  v150 = objc_msgSend(v33, "rightAnchor");
  v151 = objc_msgSend(v149, "constraintEqualToAnchor:", v150);

  v152 = (char *)v249;
  if (!((unint64_t)v249 >> 62))
  {
    v153 = v249 & 0xFFFFFFFFFFFFF8;
    v154 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFF8) + 0x10);
    v155 = v154 + 2;
    if (!__OFADD__(v154, 2))
      goto LABEL_46;
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  if (v249 < 0)
    v235 = v249;
  else
    v235 = v249 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v249);
  v236 = _CocoaArrayWrapper.endIndex.getter(v235);
  swift_bridgeObjectRelease(v152);
  v155 = v236 + 2;
  if (__OFADD__(v236, 2))
    goto LABEL_101;
LABEL_46:
  v156 = sub_100066680(v155, 1);
  specialized Array._endMutation()(v156);
  v152 = v148;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v152);
  v148 = *(char **)((v249 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v153 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if ((unint64_t)v148 >= v153 >> 1)
LABEL_102:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v153 > 1, v148 + 1, 1);
  v157 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v148, v152);
  specialized Array._endMutation()(v157);
  v158 = v151;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v158);
  v160 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v159 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v160 >= v159 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v159 > 1, v160 + 1, 1);
  v161 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v160, v158);
  specialized Array._endMutation()(v161);

  v162 = (uint64_t)v245;
  v74 = v241;
LABEL_57:

  sub_10000E0F0((uint64_t)v247, v162, &qword_1000D5E60);
  v175 = ((uint64_t (*)(uint64_t, uint64_t, int *))v248)(v162, 1, v88);
  sub_10000DC40(v162, &qword_1000D5E60);
  v176 = (uint64_t)v239;
  sub_100035CDC(v85, (uint64_t)v239, type metadata accessor for HomePodSetupViewModel.StereoPairImage);
  if (v175 == 1)
  {
    v177 = *(_QWORD *)(v176 + *(int *)(v74 + 24));
    sub_10001126C(v176, type metadata accessor for HomePodSetupViewModel.StereoPairImage);
    if (!v177)
    {
      v178 = objc_msgSend(v242, "rightAnchor");
      v179 = objc_msgSend(v33, "rightAnchor");
      v180 = objc_msgSend(v178, "constraintEqualToAnchor:", v179);

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v181);
      v183 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v182 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v183 >= v182 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v182 > 1, v183 + 1, 1);
      v184 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v183, v180);
      specialized Array._endMutation()(v184);
    }
  }
  else
  {
    sub_10001126C(v176, type metadata accessor for HomePodSetupViewModel.StereoPairImage);
  }
  v185 = v237;
  v186 = *(void **)((char *)v237 + OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_bodyLabel);
  if (!v186)
    goto LABEL_74;
  v187 = v186;
  v188 = objc_msgSend(v187, "leadingAnchor");
  v248 = v33;
  v189 = objc_msgSend(v185, "contentView");
  v190 = v185;
  v191 = objc_msgSend(v189, "mainContentGuide");

  v192 = objc_msgSend(v191, "leadingAnchor");
  v247 = (char *)objc_msgSend(v188, "constraintEqualToAnchor:", v192);

  v193 = objc_msgSend(v187, "trailingAnchor");
  v194 = objc_msgSend(v190, "contentView");
  v195 = objc_msgSend(v194, "mainContentGuide");

  v196 = objc_msgSend(v195, "trailingAnchor");
  v197 = objc_msgSend(v193, "constraintEqualToAnchor:", v196);

  p_type = &stru_1000CEFF0.type;
  v199 = objc_msgSend(v187, "bottomAnchor");
  v200 = objc_msgSend(v190, "contentView");
  v201 = objc_msgSend(v200, "mainContentGuide");

  v202 = objc_msgSend(v201, "bottomAnchor");
  v203 = objc_msgSend(v199, "constraintEqualToAnchor:", v202);

  v204 = objc_msgSend(v187, "topAnchor");
  v205 = v248;
  v206 = objc_msgSend(v248, "bottomAnchor");
  v207 = objc_msgSend(v204, "constraintEqualToAnchor:constant:", v206, 10.0);

  v208 = v249;
  if (!((unint64_t)v249 >> 62))
  {
    v209 = v249 & 0xFFFFFFFFFFFFF8;
    v210 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFF8) + 0x10);
    v211 = v210 + 4;
    if (!__OFADD__(v210, 4))
      goto LABEL_66;
LABEL_87:
    __break(1u);
    goto LABEL_88;
  }
  if (v249 < 0)
    v231 = v249;
  else
    v231 = v249 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v249);
  v232 = _CocoaArrayWrapper.endIndex.getter(v231);
  swift_bridgeObjectRelease(v208);
  v211 = v232 + 4;
  if (__OFADD__(v232, 4))
    goto LABEL_87;
LABEL_66:
  v212 = sub_100066680(v211, 1);
  specialized Array._endMutation()(v212);
  p_type = v247;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(p_type);
  v208 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v209 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v208 >= v209 >> 1)
LABEL_88:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v209 > 1, v208 + 1, 1);
  v213 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v208, p_type);
  specialized Array._endMutation()(v213);
  v214 = v197;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v214);
  v216 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v215 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v216 >= v215 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v215 > 1, v216 + 1, 1);
  v217 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v216, v214);
  specialized Array._endMutation()(v217);
  v218 = v203;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v218);
  v220 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v219 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v220 >= v219 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v219 > 1, v220 + 1, 1);
  v221 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v220, v218);
  specialized Array._endMutation()(v221);
  v222 = v207;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v222);
  v224 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v223 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v224 >= v223 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v223 > 1, v224 + 1, 1);
  v225 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v224, v222);
  specialized Array._endMutation()(v225);

  v33 = v205;
  v85 = (uint64_t)v243;
LABEL_74:
  v226 = (void *)objc_opt_self(NSLayoutConstraint);
  v227 = v249;
  sub_100014934();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v226, "activateConstraints:", isa, swift_bridgeObjectRelease(v227).n128_f64[0]);

  return sub_10001126C(v85, type metadata accessor for HomePodSetupViewModel.StereoPairImage);
}

id sub_100066448()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupStereoViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000664CC()
{
  return type metadata accessor for HomePodSetupStereoViewController(0);
}

uint64_t type metadata accessor for HomePodSetupStereoViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1000D7658;
  if (!qword_1000D7658)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HomePodSetupStereoViewController);
  return result;
}

void sub_100066510(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_10009A728;
  sub_100010910(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_10009A740;
    v4[3] = &unk_10009A758;
    swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
  }
}

uint64_t sub_10006659C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_presenter + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease(a1);
}

id sub_1000665D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10006673C(a3);
}

uint64_t sub_1000665DC(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr))
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  a4(&v7);
  v5 = *a1 + 4;
  result = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v7, (char *)&v7 + 4);
  *a1 = v5;
  return result;
}

uint64_t sub_100066634@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_10006665C(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_100066680(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject(*v2);
  *v2 = v5;
  v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
      return result;
    v7 = 1;
  }
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v10 = v5;
    else
      v10 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v8 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1)
    v9 = a1;
  else
    v9 = v8;
  result = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v7, v9, a2 & 1, v5);
  *v2 = result;
  return result;
}

id sub_10006673C(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  NSObject *v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  id result;
  uint64_t v16;
  unsigned int v17;
  int v18;

  v3 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D5600 != -1)
    swift_once(&qword_1000D5600, sub_100062A10);
  v7 = type metadata accessor for Logger(0, v4);
  sub_10001118C(v7, (uint64_t)qword_1000D75E8);
  v8 = v1;
  v9 = Logger.logObject.getter(v8);
  v11 = static os_log_type_t.default.getter(v9, v10);
  if (os_log_type_enabled(v9, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v12 = 67109120;
    v17 = objc_msgSend(v8, "isViewLoaded");
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18);

    _os_log_impl((void *)&_mh_execute_header, v9, v11, "HomePodSetupStereoViewController: presenter:didUpdate viewModel, isViewloaded = %{BOOL}d", v12, 8u);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {

  }
  sub_100035CDC(a1, (uint64_t)v6, type metadata accessor for HomePodSetupViewModel);
  v13 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 0, 1, v13);
  v14 = (uint64_t)v8 + OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_viewModel;
  swift_beginAccess((char *)v8 + OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_viewModel, &v17, 33, 0);
  sub_100011340((uint64_t)v6, v14, (uint64_t *)&unk_1000D6EC0);
  swift_endAccess(&v17);
  result = objc_msgSend(v8, "isViewLoaded");
  if ((_DWORD)result)
    return (id)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v8) + 0xD8))(a1);
  return result;
}

uint64_t sub_100066964()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100066988(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_100062FB4(a1, v1);
}

uint64_t sub_100066990(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000111E8(v2, qword_1000D7668);
  v3 = sub_10001118C(v2, (uint64_t)qword_1000D7668);
  if (qword_1000D55C0 != -1)
    swift_once(&qword_1000D55C0, sub_100058090);
  v4 = sub_10001118C(v2, (uint64_t)qword_1000DB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

id sub_100066A20()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC14HDSViewService31HomePodSetupIntroViewController____lazy_storage___infoTableView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC14HDSViewService31HomePodSetupIntroViewController____lazy_storage___infoTableView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC14HDSViewService31HomePodSetupIntroViewController____lazy_storage___infoTableView);
  }
  else
  {
    v4 = type metadata accessor for HomePodSetupWiFiInfoTableView();
    v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)), "init");
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

void sub_100066A94()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  objc_class *v12;
  NSString v13;
  NSString v14;
  uint64_t Int64;
  id v16;
  id v17;
  NSString v18;
  NSString v19;
  id v20;
  char *v21;
  id v22;
  NSString v23;
  id v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  void **v33;
  NSURL *v34;
  void *v35;
  void *v36;
  uint64_t v37;
  NSString v38;
  void *v39;
  id v40;
  uint64_t v41;
  id v42;
  void *v43;
  id v44;
  void *v45;
  uint64_t v46;
  void *v47;
  id v48;
  uint64_t v49;
  void **aBlock;
  uint64_t v51;
  void *v52;
  void *v53;
  void *v54;
  uint64_t v55;
  objc_super v56;

  v1 = v0;
  v2 = sub_10000D604(&qword_1000D5DB8);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v48 - v6;
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (objc_class *)type metadata accessor for HomePodSetupIntroViewController(0);
  v56.receiver = v1;
  v56.super_class = v12;
  objc_msgSendSuper2(&v56, "viewDidLoad");
  v13 = String._bridgeToObjectiveC()();
  v14 = String._bridgeToObjectiveC()();
  Int64 = CFPrefs_GetInt64(v13, v14, 0);

  if (Int64)
  {
    v16 = objc_msgSend(objc_allocWithZone((Class)UINotificationFeedbackGenerator), "init");
    objc_msgSend(v16, "notificationOccurred:", 0);
    goto LABEL_16;
  }
  v17 = objc_msgSend(objc_allocWithZone((Class)CUAudioPlayer), "init");
  v18 = String._bridgeToObjectiveC()();
  objc_msgSend(v17, "setLabel:", v18);

  objc_msgSend(v17, "setEnableSmartRouting:", 2);
  objc_msgSend(v17, "activate");
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleWithIdentifier:", v19);

  if (!v20)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
LABEL_9:
    sub_100068274((uint64_t)v7);
    if (qword_1000D5628 != -1)
      swift_once(&qword_1000D5628, sub_100066990);
    v28 = type metadata accessor for Logger(0, v27);
    v29 = sub_10001118C(v28, (uint64_t)qword_1000D7668);
    v30 = Logger.logObject.getter(v29);
    v31 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc(12, -1);
      v33 = (void **)swift_slowAlloc(32, -1);
      aBlock = v33;
      *(_DWORD *)v32 = 136315138;
      v49 = sub_10003EF58(0xD00000000000001CLL, 0x80000001000A1F30, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &aBlock);
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "HomePodSetupIntro: viewDidLoad could not locate the audio file %s ", v32, 0xCu);
      swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v33, -1, -1);
      swift_slowDealloc(v32, -1, -1);
    }

    goto LABEL_15;
  }
  v21 = v11;
  v48 = v20;
  v22 = v20;
  v23 = String._bridgeToObjectiveC()();
  v24 = objc_msgSend(v22, "URLForResource:withExtension:", v23, 0);

  if (v24)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v24);

    v25 = 0;
  }
  else
  {
    v25 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5, v25, 1, v8);
  sub_1000682B4((uint64_t)v5, (uint64_t)v7);
  v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  v20 = v48;
  if (v26 == 1)
    goto LABEL_9;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v21, v7, v8);
  URL._bridgeToObjectiveC()(v34);
  v36 = v35;
  objc_msgSend(v17, "playURL:completion:", v35, 0);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v21, v8);
LABEL_15:
  v16 = *(id *)&v1[OBJC_IVAR____TtC14HDSViewService31HomePodSetupIntroViewController_audioPlayer];
  *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService31HomePodSetupIntroViewController_audioPlayer] = v17;

LABEL_16:
  v37 = swift_allocObject(&unk_1000C4588, 24, 7);
  swift_unknownObjectWeakInit(v37 + 16, v1);
  swift_retain(v37);
  v38 = String._bridgeToObjectiveC()();
  v54 = sub_100068264;
  v55 = v37;
  aBlock = _NSConcreteStackBlock;
  v51 = 1107296256;
  v52 = sub_100038D38;
  v53 = &unk_1000C46E0;
  v39 = _Block_copy(&aBlock);
  v40 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v38, 0, v39);

  _Block_release(v39);
  v41 = v55;
  swift_release(v37);
  objc_msgSend(v1, "setInfoButtonAction:", v40, swift_release(v41).n128_f64[0]);

  v42 = objc_msgSend(v1, "infoButton");
  if (v42)
  {
    v43 = v42;
    objc_msgSend(v42, "setAlpha:", 0.0);

  }
  v44 = sub_100066A20();
  objc_msgSend(v44, "setAlpha:", 0.0);

  v45 = (void *)objc_opt_self(UIView);
  v46 = swift_allocObject(&unk_1000C4588, 24, 7);
  swift_unknownObjectWeakInit(v46 + 16, v1);
  v54 = sub_10006826C;
  v55 = v46;
  aBlock = _NSConcreteStackBlock;
  v51 = 1107296256;
  v52 = sub_10007C6B4;
  v53 = &unk_1000C4708;
  v47 = _Block_copy(&aBlock);
  swift_release(v55);
  objc_msgSend(v45, "animateWithDuration:delay:options:animations:completion:", 65538, v47, 0, 0.7, 8.0);
  _Block_release(v47);
}

void sub_10006714C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    objc_msgSend(Strong, "handleTapOnInfoButton");

  }
}

void sub_1000671A4(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = objc_msgSend(Strong, "infoButton");

    if (v4)
    {
      objc_msgSend(v4, "setAlpha:", 1.0);

    }
  }
}

double sub_100067368(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for HomePodSetupViewModel(0) + 40));
  v3 = swift_allocObject(&unk_1000C4588, 24, 7);
  swift_unknownObjectWeakInit(v3 + 16, v1);
  sub_10007E6FC(v2, (uint64_t)sub_10006819C, v3);
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  return result;
}

void sub_1000673D8(unsigned __int8 *a1, uint64_t a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t Strong;
  char *v15;
  NSString v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[48];
  _OWORD v20[2];
  uint64_t v21;
  _OWORD v22[3];
  _BYTE v23[24];

  v2 = *a1;
  v3 = a2 + 16;
  if (qword_1000D5628 != -1)
    swift_once(&qword_1000D5628, sub_100066990);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10001118C(v4, (uint64_t)qword_1000D7668);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v22[0] = v10;
    *(_DWORD *)v9 = 136315138;
    v11 = sub_10000E9EC(v2);
    v13 = v12;
    *(_QWORD *)v19 = sub_10003EF58(v11, v12, (uint64_t *)v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v19, &v19[8]);
    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "HomePodSetupIntro: User tapped on button: %s", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }

  swift_beginAccess(v3, v23, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v15 = (char *)Strong;
    v16 = String._bridgeToObjectiveC()();
    objc_msgSend(v15, "showActivityIndicatorWithStatus:", v16);

    v17 = swift_unknownObjectWeakLoadStrong(&v15[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_presenter]);
    if (v17)
    {
      v18 = v17;
      v21 = 0;
      memset(v20, 0, sizeof(v20));
      memset(&v19[8], 0, 40);
      v19[0] = v2;
      sub_10000DB50((uint64_t)v20, (uint64_t)&v19[8]);
      v22[0] = *(_OWORD *)v19;
      v22[1] = *(_OWORD *)&v19[16];
      v22[2] = *(_OWORD *)&v19[32];
      sub_10006B04C((char *)v22);

      swift_unknownObjectRelease(v18);
      sub_100011384((uint64_t)v22);
    }
    else
    {

    }
  }
}

void sub_100067690(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  _BYTE *v19;
  id v20;
  id v21;
  uint64_t Strong;
  uint64_t v23;
  uint64_t v24;
  char v25;
  void **v26;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;

  v3 = v2;
  if (qword_1000D5628 != -1)
    swift_once(&qword_1000D5628, sub_100066990);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10001118C(v4, (uint64_t)qword_1000D7668);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "HomePodSetupIntro: user tapped on the info button.", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  v9 = sub_100066A20();
  objc_msgSend(v9, "setSeparatorStyle:", 0);

  v10 = sub_100066A20();
  sub_100080AA4();

  sub_100067D3C();
  v11 = (void *)objc_opt_self(UIView);
  v12 = swift_allocObject(&unk_1000C4650, 24, 7);
  *(_QWORD *)(v12 + 16) = v3;
  v30 = sub_100068228;
  v31 = v12;
  v26 = _NSConcreteStackBlock;
  v27 = 1107296256;
  v28 = sub_10007C6B4;
  v29 = &unk_1000C4668;
  v13 = _Block_copy(&v26);
  v14 = v31;
  v15 = v3;
  swift_release(v14);
  v16 = swift_allocObject(&unk_1000C46A0, 24, 7);
  *(_QWORD *)(v16 + 16) = v15;
  v30 = sub_100068230;
  v31 = v16;
  v26 = _NSConcreteStackBlock;
  v27 = 1107296256;
  v28 = sub_100084D9C;
  v29 = &unk_1000C46B8;
  v17 = _Block_copy(&v26);
  v18 = v31;
  v19 = v15;
  swift_release(v18);
  objc_msgSend(v11, "animateWithDuration:animations:completion:", v13, v17, 0.5);
  _Block_release(v17);
  _Block_release(v13);
  v20 = sub_100066A20();
  objc_msgSend(v20, "setHidden:", 0);

  if ((v19[OBJC_IVAR____TtC14HDSViewService31HomePodSetupIntroViewController_loadedInfo] & 1) != 0)
  {
    v21 = sub_100066A20();
    sub_100080DBC();
LABEL_10:

    return;
  }
  Strong = swift_unknownObjectWeakLoadStrong(&v19[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_presenter]);
  if (Strong)
  {
    v23 = Strong;
    v24 = swift_allocObject(&unk_1000C4588, 24, 7);
    swift_unknownObjectWeakInit(v24 + 16, v19);
    swift_retain(v24);
    v25 = sub_1000874A8((uint64_t)sub_10006825C, v24);
    swift_unknownObjectRelease(v23);
    swift_release_n(v24, 2);
    if ((v25 & 1) == 0)
    {
      v21 = String._bridgeToObjectiveC()();
      objc_msgSend(v19, "showActivityIndicatorWithStatus:", v21);
      goto LABEL_10;
    }
  }
}

void sub_1000679AC(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_movieView);
  if (v2)
    objc_msgSend(v2, "setAlpha:", 0.0);
  v3 = sub_100066A20();
  objc_msgSend(v3, "setAlpha:", 1.0);

  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC14HDSViewService31HomePodSetupIntroViewController_loadedInfo) & 1) == 0)
    sub_100062164(0.0);
}

void sub_100067A24(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  void *Strong;
  void *v11;
  id v12;
  _BYTE v13[24];

  v3 = a2 + 16;
  if (qword_1000D5628 != -1)
    swift_once(&qword_1000D5628, sub_100066990);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10001118C(v4, (uint64_t)qword_1000D7668);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "HomePodSetupIntro: Request for PreAuth completed.", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  swift_beginAccess(v3, v13, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v11 = Strong;
    *((_BYTE *)Strong + OBJC_IVAR____TtC14HDSViewService31HomePodSetupIntroViewController_loadedInfo) = 1;
    objc_msgSend(Strong, "hideActivityIndicator");
    sub_100062164(1.0);
    v12 = sub_100066A20();
    sub_100080C4C(a1);

  }
}

void sub_100067B6C()
{
  char *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  void **v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;

  v1 = *(void **)&v0[OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_movieView];
  if (v1)
    objc_msgSend(v1, "setHidden:", 0);
  v2 = (void *)objc_opt_self(UIView);
  v3 = swift_allocObject(&unk_1000C45B0, 24, 7);
  *(_QWORD *)(v3 + 16) = v0;
  v15 = sub_1000681A4;
  v16 = v3;
  v11 = _NSConcreteStackBlock;
  v12 = 1107296256;
  v13 = sub_10007C6B4;
  v14 = &unk_1000C45C8;
  v4 = _Block_copy(&v11);
  v5 = v16;
  v6 = v0;
  swift_release(v5);
  v7 = swift_allocObject(&unk_1000C4600, 24, 7);
  *(_QWORD *)(v7 + 16) = v6;
  v15 = sub_1000681C4;
  v16 = v7;
  v11 = _NSConcreteStackBlock;
  v12 = 1107296256;
  v13 = sub_100084D9C;
  v14 = &unk_1000C4618;
  v8 = _Block_copy(&v11);
  v9 = v16;
  v10 = v6;
  swift_release(v9);
  objc_msgSend(v2, "animateWithDuration:animations:completion:", v4, v8, 0.5);
  _Block_release(v8);
  _Block_release(v4);
}

id sub_100067CD0(uint64_t a1)
{
  id v2;
  id result;

  v2 = sub_100066A20();
  objc_msgSend(v2, "setAlpha:", 0.0);

  result = *(id *)(a1 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_movieView);
  if (result)
    return objc_msgSend(result, "setAlpha:", 1.0);
  return result;
}

void sub_100067D3C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  Class isa;

  v1 = OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_myContentView;
  v2 = *(id *)(v0 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_myContentView);
  v3 = sub_100066A20();
  objc_msgSend(v2, "addSubview:", v3);

  v4 = objc_msgSend(*(id *)(v0 + v1), "mainContentGuide");
  v5 = (void *)objc_opt_self(NSLayoutConstraint);
  v6 = sub_10000D604(&qword_1000D6EE0);
  v7 = swift_allocObject(v6, 64, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100099580;
  v8 = sub_100066A20();
  v9 = objc_msgSend(v8, "topAnchor");

  v10 = objc_msgSend(v4, "topAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

  *(_QWORD *)(v7 + 32) = v11;
  v12 = sub_100066A20();
  v13 = objc_msgSend(v12, "bottomAnchor");

  v14 = objc_msgSend(v4, "bottomAnchor");
  v15 = objc_msgSend(v13, "constraintEqualToAnchor:", v14);

  *(_QWORD *)(v7 + 40) = v15;
  v16 = sub_100066A20();
  v17 = objc_msgSend(v16, "leadingAnchor");

  v18 = objc_msgSend(v4, "leadingAnchor");
  v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

  *(_QWORD *)(v7 + 48) = v19;
  v20 = sub_100066A20();
  v21 = objc_msgSend(v20, "trailingAnchor");

  v22 = objc_msgSend(v4, "trailingAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

  *(_QWORD *)(v7 + 56) = v23;
  specialized Array._endMutation()(v24);
  sub_100014934();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v7);
  objc_msgSend(v5, "activateConstraints:", isa);

}

void sub_100068050()
{
  uint64_t v0;

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC14HDSViewService31HomePodSetupIntroViewController____lazy_storage___infoTableView));
}

id sub_10006807C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupIntroViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000680E8()
{
  return type metadata accessor for HomePodSetupIntroViewController(0);
}

uint64_t type metadata accessor for HomePodSetupIntroViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1000D76B0;
  if (!qword_1000D76B0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HomePodSetupIntroViewController);
  return result;
}

uint64_t sub_10006812C(uint64_t a1)
{
  _QWORD v2[3];

  v2[0] = "\b";
  v2[1] = "\b";
  v2[2] = &unk_10009A7B8;
  return swift_updateClassMetadata2(a1, 256, 3, v2, a1 + 384);
}

uint64_t sub_100068178()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10006819C(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_1000673D8(a1, v1);
}

id sub_1000681A4()
{
  uint64_t v0;

  return sub_100067CD0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1000681AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000681BC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_1000681C4()
{
  id v0;

  v0 = sub_100066A20();
  objc_msgSend(v0, "setHidden:", 1);

}

uint64_t sub_100068204()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100068228()
{
  uint64_t v0;

  sub_1000679AC(*(_QWORD *)(v0 + 16));
}

id sub_100068230()
{
  uint64_t v0;
  id result;

  result = *(id *)(*(_QWORD *)(v0 + 16)
                 + OBJC_IVAR____TtC14HDSViewService37HomePodSetupIconContentViewController_movieView);
  if (result)
    return objc_msgSend(result, "setHidden:", 1);
  return result;
}

void sub_10006825C(uint64_t *a1)
{
  uint64_t v1;

  sub_100067A24(a1, v1);
}

void sub_100068264(uint64_t a1)
{
  uint64_t v1;

  sub_10006714C(a1, v1);
}

void sub_10006826C()
{
  uint64_t v0;

  sub_1000671A4(v0);
}

uint64_t sub_100068274(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000D604(&qword_1000D5DB8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000682B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000D604(&qword_1000D5DB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100068330(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id i;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[5];
  void *v30;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    v3 = swift_bridgeObjectRetain(a1);
    v4 = __CocoaSet.makeIterator()(v2, v3);
    v5 = sub_1000693C4();
    v6 = sub_100069400();
    v7 = Set.Iterator.init(_cocoa:)(v29, v4, v5, v6);
    v1 = v29[0];
    v27 = v29[1];
    v8 = v29[2];
    v9 = v29[3];
    v10 = v29[4];
  }
  else
  {
    v11 = -1 << *(_BYTE *)(a1 + 32);
    v27 = a1 + 56;
    v8 = ~v11;
    v12 = -v11;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v10 = v13 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain(a1);
    v9 = 0;
  }
  v26 = v8;
  v14 = (unint64_t)(v8 + 64) >> 6;
  if (v1 < 0)
    goto LABEL_13;
LABEL_11:
  if (v10)
  {
    v15 = (v10 - 1) & v10;
    v16 = __clz(__rbit64(v10)) | (v9 << 6);
    v17 = v9;
    goto LABEL_32;
  }
  v23 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v23 < v14)
    {
      v24 = *(_QWORD *)(v27 + 8 * v23);
      v17 = v9 + 1;
      if (v24)
        goto LABEL_31;
      v17 = v9 + 2;
      if (v9 + 2 >= v14)
        goto LABEL_36;
      v24 = *(_QWORD *)(v27 + 8 * v17);
      if (v24)
        goto LABEL_31;
      v17 = v9 + 3;
      if (v9 + 3 >= v14)
        goto LABEL_36;
      v24 = *(_QWORD *)(v27 + 8 * v17);
      if (v24)
        goto LABEL_31;
      v17 = v9 + 4;
      if (v9 + 4 >= v14)
        goto LABEL_36;
      v24 = *(_QWORD *)(v27 + 8 * v17);
      if (v24)
      {
LABEL_31:
        v15 = (v24 - 1) & v24;
        v16 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_32:
        for (i = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v16); i; v15 = v10)
        {
          if (objc_msgSend(i, "events", v26) == (id)16)
            break;

          v9 = v17;
          v10 = v15;
          if ((v1 & 0x8000000000000000) == 0)
            goto LABEL_11;
LABEL_13:
          v18 = __CocoaSet.Iterator.next()(v7);
          if (!v18)
            break;
          v19 = v18;
          v28 = v18;
          v20 = sub_1000693C4();
          swift_unknownObjectRetain(v19, v21);
          swift_dynamicCast(&v30, &v28, (char *)&type metadata for Swift.AnyObject + 8, v20, 7);
          i = v30;
          swift_unknownObjectRelease(v19);
          v17 = v9;
        }
        goto LABEL_36;
      }
      v17 = v9 + 5;
      if (v9 + 5 < v14)
      {
        v24 = *(_QWORD *)(v27 + 8 * v17);
        if (!v24)
        {
          v25 = v9 + 6;
          while (v14 != v25)
          {
            v24 = *(_QWORD *)(v27 + 8 * v25++);
            if (v24)
            {
              v17 = v25 - 1;
              goto LABEL_31;
            }
          }
          goto LABEL_36;
        }
        goto LABEL_31;
      }
    }
LABEL_36:
    sub_100012E0C(v1);
    return;
  }
  __break(1u);
}

uint64_t sub_1000685D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000111E8(v2, qword_1000D76C0);
  v3 = sub_10001118C(v2, (uint64_t)qword_1000D76C0);
  if (qword_1000D55C0 != -1)
    swift_once(&qword_1000D55C0, sub_100058090);
  v4 = sub_10001118C(v2, (uint64_t)qword_1000DB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

void sub_1000687A0(void *a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = v2;
  v5 = objc_msgSend(a1, "userInfo");
  if (v5)
  {
    v6 = v5;
    v7 = (void *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v5, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  }
  else
  {
    v7 = (void *)sub_10000C35C((uint64_t)_swiftEmptyArrayStorage);
  }
  if (qword_1000D5630 != -1)
    swift_once(&qword_1000D5630, sub_1000685D0);
  v9 = type metadata accessor for Logger(0, v8);
  sub_10001118C(v9, (uint64_t)qword_1000D76C0);
  v10 = swift_bridgeObjectRetain_n(v7, 2);
  v11 = Logger.logObject.getter(v10);
  v13 = static os_log_type_t.default.getter(v11, v12);
  if (os_log_type_enabled(v11, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v26 = v15;
    *(_DWORD *)v14 = 136315138;
    v16 = sub_100068A34(v7);
    v18 = v17;
    v25 = sub_10003EF58((uint64_t)v16, v17, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26);
    swift_bridgeObjectRelease_n(v7, 2);
    swift_bridgeObjectRelease(v18);
    _os_log_impl((void *)&_mh_execute_header, v11, v13, "<loom:ViewService:matchHomePodSetupFlowViewController> HomePod Setup Flow being configured with user info: %s", v14, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v7, 2);
  }
  v19 = sub_10008417C();
  v20 = type metadata accessor for HomePodSetupPresenter(0);
  swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  v21 = sub_10006A6D0((uint64_t)v7, v19);
  v22 = (uint64_t *)(v3 + OBJC_IVAR____TtC14HDSViewService30HomePodSetupFlowViewController_presenter);
  v23 = *(_QWORD *)(v3 + OBJC_IVAR____TtC14HDSViewService30HomePodSetupFlowViewController_presenter);
  *v22 = v21;
  v22[1] = (uint64_t)&off_1000C4868;
  swift_retain(v21);
  v24 = swift_unknownObjectRelease(v23);
  if (a2)
  {
    a2(v24);
    swift_release(v21);
  }
  else
  {
    __break(1u);
  }
}

id sub_100068A34(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v23;
  uint64_t v24;
  id v25;
  unint64_t v26;

  v2 = type metadata accessor for String.Encoding(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (void *)objc_opt_self(NSJSONSerialization);
  v25 = a1;
  swift_bridgeObjectRetain(a1);
  v6 = sub_10000D604(&qword_1000D6280);
  v7 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v25, v6);
  v25 = 0;
  v8 = objc_msgSend(v5, "dataWithJSONObject:options:error:", v7, 1, &v25);
  swift_unknownObjectRelease(v7);
  v9 = v25;
  if (!v8)
  {
    v16 = v9;
    v17 = _convertNSErrorToError(_:)(v9);

    swift_willThrow();
    v25 = 0;
    v26 = 0xE000000000000000;
    _StringGuts.grow(_:)(48);
    v18._countAndFlagsBits = 0xD00000000000001ALL;
    v18._object = (void *)0x80000001000A1FC0;
    String.append(_:)(v18);
    v24 = v17;
    v19 = sub_10000D604((uint64_t *)&unk_1000D7090);
    _print_unlocked<A, B>(_:_:)(&v24, &v25, v19, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v20._object = (void *)0x80000001000A1FE0;
    v20._countAndFlagsBits = 0xD000000000000012;
    String.append(_:)(v20);
    v24 = (uint64_t)a1;
    _print_unlocked<A, B>(_:_:)(&v24, &v25, v6, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    swift_errorRelease(v17);
    return v25;
  }
  v10 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v12 = v11;

  static String.Encoding.utf8.getter();
  v13 = String.init(data:encoding:)(v10, v12, v4);
  if (!v14)
  {
    v25 = 0;
    v26 = 0xE000000000000000;
    _StringGuts.grow(_:)(48);
    v21._countAndFlagsBits = 0xD00000000000002ELL;
    v21._object = (void *)0x80000001000A2000;
    String.append(_:)(v21);
    v24 = (uint64_t)a1;
    _print_unlocked<A, B>(_:_:)(&v24, &v25, v6, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    sub_100069474(v10, v12);
    return v25;
  }
  v15 = v13;
  sub_100069474(v10, v12);
  return (id)v15;
}

void sub_100068D84(char a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  objc_super v20;

  v3 = v2;
  v20.receiver = v3;
  v20.super_class = (Class)swift_getObjectType(v3, a2);
  objc_msgSendSuper2(&v20, "viewDidAppear:", a1 & 1);
  v6 = *(_QWORD *)&v3[OBJC_IVAR____TtC14HDSViewService30HomePodSetupFlowViewController_presenter];
  if (v6)
  {
    v7 = qword_1000D5630;
    swift_unknownObjectRetain(*(_QWORD *)&v3[OBJC_IVAR____TtC14HDSViewService30HomePodSetupFlowViewController_presenter], v5);
    if (v7 != -1)
      swift_once(&qword_1000D5630, sub_1000685D0);
    v9 = type metadata accessor for Logger(0, v8);
    v10 = sub_10001118C(v9, (uint64_t)qword_1000D76C0);
    v11 = Logger.logObject.getter(v10);
    v13 = static os_log_type_t.default.getter(v11, v12);
    if (os_log_type_enabled(v11, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v13, "<loom:ViewService:matchHomePodSetupFlowViewController> HomePodSetupFlowViewController: HomePod Setup Flow viewDidAppear", v14, 2u);
      swift_slowDealloc(v14, -1, -1);
    }

    sub_10006ABB8((uint64_t)v3);
    swift_unknownObjectRelease(v6);
  }
  else
  {
    if (qword_1000D5630 != -1)
      swift_once(&qword_1000D5630, sub_1000685D0);
    v15 = type metadata accessor for Logger(0, v5);
    v16 = sub_10001118C(v15, (uint64_t)qword_1000D76C0);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "HomePodSetupFlowViewController: viewDidAppear called with no presenter - configure not called", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

  }
}

void sub_100068FA4(char a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  objc_class *ObjectType;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  objc_super v17;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  if (qword_1000D5630 != -1)
    swift_once(&qword_1000D5630, sub_1000685D0);
  v7 = type metadata accessor for Logger(0, v5);
  v8 = sub_10001118C(v7, (uint64_t)qword_1000D76C0);
  v9 = Logger.logObject.getter(v8);
  v11 = static os_log_type_t.default.getter(v9, v10);
  if (os_log_type_enabled(v9, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v11, "<loom:ViewService:matchHomePodSetupFlowViewController> HomePodSetupFlowViewController: HomePod Setup Flow viewDidDisappear", v12, 2u);
    swift_slowDealloc(v12, -1, -1);
  }

  v14 = *(_QWORD *)&v3[OBJC_IVAR____TtC14HDSViewService30HomePodSetupFlowViewController_presenter];
  if (v14)
  {
    swift_unknownObjectRetain(*(_QWORD *)&v3[OBJC_IVAR____TtC14HDSViewService30HomePodSetupFlowViewController_presenter], v13);
    sub_10006AE04(21, v15);
    swift_unknownObjectRelease(v14);
  }
  v17.receiver = v3;
  v17.super_class = ObjectType;
  objc_msgSendSuper2(&v17, "viewDidDisappear:", a1 & 1);
  v16 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  objc_msgSend(v16, "terminateWithSuccess");

}

void sub_1000691D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (a1)
  {
    v2 = v1;
    swift_bridgeObjectRetain(a1);
    sub_100068330(v4);
    v6 = v5;
    swift_bridgeObjectRelease(a1);

    if (v6)
    {
      if (qword_1000D5630 != -1)
        swift_once(&qword_1000D5630, sub_1000685D0);
      v8 = type metadata accessor for Logger(0, v7);
      v9 = sub_10001118C(v8, (uint64_t)qword_1000D76C0);
      v10 = Logger.logObject.getter(v9);
      v12 = static os_log_type_t.default.getter(v10, v11);
      if (os_log_type_enabled(v10, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v13 = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, v12, "<loom:ViewService:matchHomePodSetupFlowViewController> HomePodSetupFlowViewController: Home button was pressed - dismissing setup", v13, 2u);
        swift_slowDealloc(v13, -1, -1);
      }

      v15 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService30HomePodSetupFlowViewController_presenter);
      if (v15)
      {
        swift_unknownObjectRetain(*(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService30HomePodSetupFlowViewController_presenter), v14);
        sub_10006AE04(4, v16);
        swift_unknownObjectRelease(v15);
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100069384()
{
  uint64_t v0;

  return swift_unknownObjectRelease(*(_QWORD *)(v0
                                              + OBJC_IVAR____TtC14HDSViewService30HomePodSetupFlowViewController_presenter));
}

uint64_t type metadata accessor for HomePodSetupFlowViewController()
{
  return objc_opt_self(_TtC14HDSViewService30HomePodSetupFlowViewController);
}

unint64_t sub_1000693C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D7708;
  if (!qword_1000D7708)
  {
    v1 = objc_opt_self(SBUIRemoteAlertButtonAction);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1000D7708);
  }
  return result;
}

unint64_t sub_100069400()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1000D7710;
  if (!qword_1000D7710)
  {
    v1 = sub_1000693C4();
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1000D7710);
  }
  return result;
}

uint64_t sub_100069448()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10006946C()
{
  uint64_t v0;

  return sub_10007C6E0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100069474(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release(result);
  }
  return swift_release(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

uint64_t sub_1000694B8()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, "name");
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v2;
}

uint64_t sub_10006950C()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  Swift::String v9;
  _QWORD v11[2];

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin();
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(*v0, "uniqueIdentifier");
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  v6 = UUID.uuidString.getter();
  v8 = v7;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v11[0] = 0x5F646F70656D6F68;
  v11[1] = 0xE800000000000000;
  v9._countAndFlagsBits = v6;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(v8);
  return v11[0];
}

uint64_t sub_1000695F0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  Swift::String v10;
  Swift::String v11;
  void *object;
  Swift::String v13;
  Swift::String v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  Swift::String v22;
  void *v23;
  Swift::String v24;
  uint64_t v25;
  void *v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  Swift::String v32;
  void *v33;
  Swift::String v34;
  uint64_t v35;
  void *v36;
  Swift::String v37;
  uint64_t v38;
  Swift::String v39;
  uint64_t v41;
  unint64_t v42;
  _QWORD v43[2];

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43[0] = 1031365995;
  v43[1] = 0xE400000000000000;
  v6 = objc_msgSend(a1, "uniqueIdentifier");
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  v7 = UUID.uuidString.getter();
  v9 = v8;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v41 = 0x5F646F70656D6F68;
  v42 = 0xE800000000000000;
  v10._countAndFlagsBits = v7;
  v10._object = v9;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(v9);
  v11._countAndFlagsBits = String.init<A>(reflecting:)(&v41, &type metadata for String);
  object = v11._object;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(object);
  v13._countAndFlagsBits = 32;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  v14._countAndFlagsBits = v43[0];
  v15 = (void *)v43[1];
  v43[0] = 0x646F50656D6F483CLL;
  v43[1] = 0xEF206E6F6974704FLL;
  v14._object = v15;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(v15);
  v17 = v43[0];
  v16 = v43[1];
  v43[0] = 0;
  v43[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease(v43[1]);
  strcpy((char *)v43, "displayValue=");
  HIWORD(v43[1]) = -4864;
  v18 = objc_msgSend(a1, "name");
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v21 = v20;

  v41 = v19;
  v42 = v21;
  v22._countAndFlagsBits = String.init<A>(reflecting:)(&v41, &type metadata for String);
  v23 = v22._object;
  String.append(_:)(v22);
  swift_bridgeObjectRelease(v23);
  v24._countAndFlagsBits = 32;
  v24._object = (void *)0xE100000000000000;
  String.append(_:)(v24);
  v25 = v43[0];
  v26 = (void *)v43[1];
  v43[0] = v17;
  v43[1] = v16;
  swift_bridgeObjectRetain(v16);
  v27._countAndFlagsBits = v25;
  v27._object = v26;
  String.append(_:)(v27);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v26);
  v29 = v43[0];
  v28 = v43[1];
  strcpy((char *)v43, "homePod=");
  BYTE1(v43[1]) = 0;
  WORD1(v43[1]) = 0;
  HIDWORD(v43[1]) = -402653184;
  v41 = (uint64_t)a1;
  v30 = sub_1000698D8();
  v31 = a1;
  v32._countAndFlagsBits = String.init<A>(reflecting:)(&v41, v30);
  v33 = v32._object;
  String.append(_:)(v32);
  swift_bridgeObjectRelease(v33);
  v34._countAndFlagsBits = 32;
  v34._object = (void *)0xE100000000000000;
  String.append(_:)(v34);
  v35 = v43[0];
  v36 = (void *)v43[1];
  v43[0] = v29;
  v43[1] = v28;
  swift_bridgeObjectRetain(v28);
  v37._countAndFlagsBits = v35;
  v37._object = v36;
  String.append(_:)(v37);
  swift_bridgeObjectRelease(v28);
  swift_bridgeObjectRelease(v36);
  v38 = v43[1];
  swift_bridgeObjectRetain(v43[1]);
  v39._countAndFlagsBits = 62;
  v39._object = (void *)0xE100000000000000;
  String.append(_:)(v39);
  swift_bridgeObjectRelease(v38);
  return v43[0];
}

uint64_t sub_1000698D0()
{
  void **v0;

  return sub_1000695F0(*v0);
}

unint64_t sub_1000698D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D7718;
  if (!qword_1000D7718)
  {
    v1 = objc_opt_self(HMAccessory);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1000D7718);
  }
  return result;
}

ValueMetadata *type metadata accessor for HomePodOption()
{
  return &type metadata for HomePodOption;
}

uint64_t sub_100069924(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100069958 + 4 * word_10009A850[a1]))(0x49557472617473, 0xE700000000000000);
}

uint64_t sub_100069958()
{
  return 0x656D6F486B636970;
}

uint64_t sub_100069970()
{
  return 0x6D6F6F526B636970;
}

uint64_t sub_100069988()
{
  return 0x73736572676F7270;
}

unint64_t sub_1000699A4()
{
  return 0xD000000000000016;
}

uint64_t sub_100069F3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000111E8(v2, qword_1000D7720);
  v3 = sub_10001118C(v2, (uint64_t)qword_1000D7720);
  if (qword_1000D55C0 != -1)
    swift_once(&qword_1000D55C0, sub_100058090);
  v4 = sub_10001118C(v2, (uint64_t)qword_1000DB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

uint64_t sub_100069FCC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = sub_100069924(*a1);
  v5 = v4;
  v6 = sub_100069924(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

Swift::Int sub_10006A054()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  v1 = *v0;
  Hasher.init(_seed:)(v6, 0);
  v2 = sub_100069924(v1);
  v4 = v3;
  String.hash(into:)(v6, v2, v3);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_10006A0B4(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_100069924(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_10006A0F4(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[9];

  v2 = *v1;
  Hasher.init(_seed:)(v7, a1);
  v3 = sub_100069924(v2);
  v5 = v4;
  String.hash(into:)(v7, v3, v4);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_10006A150@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_100071EF0(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_10006A17C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_100069924(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10006A1A4()
{
  unsigned __int8 *v0;

  return sub_100069924(*v0);
}

uint64_t sub_10006A1AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  os_log_type_t v10;
  _QWORD *v11;
  __objc2_class_ro **p_info;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33[3];

  v1 = v0;
  v2 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D5638 != -1)
    swift_once(&qword_1000D5638, sub_100069F3C);
  v6 = type metadata accessor for Logger(0, v3);
  sub_10001118C(v6, (uint64_t)qword_1000D7720);
  v7 = swift_retain_n(v0, 4);
  v8 = Logger.logObject.getter(v7);
  v10 = static os_log_type_t.default.getter(v8, v9);
  v11 = &unk_1000DB000;
  p_info = &OBJC_METACLASS____TtC14HDSViewService35HomePodSetupAMSUpsellViewController.info;
  if (os_log_type_enabled(v8, v10))
  {
    v13 = swift_slowAlloc(22, -1);
    v31 = swift_slowAlloc(64, -1);
    v33[0] = v31;
    *(_DWORD *)v13 = 136315394;
    v14 = sub_100069924(*(_BYTE *)(v0 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state));
    v16 = v15;
    v32 = sub_10003EF58(v14, v15, v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, v33);
    swift_release_n(v0, 2);
    swift_bridgeObjectRelease(v16);
    *(_WORD *)(v13 + 12) = 2080;
    v17 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor) + 48);
    swift_retain(*(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor) + 48));
    v18 = sub_1000475E8();
    v20 = v19;
    swift_release(v17);
    v21 = v18;
    p_info = (__objc2_class_ro **)(&OBJC_METACLASS____TtC14HDSViewService35HomePodSetupAMSUpsellViewController + 32);
    v32 = sub_10003EF58(v21, v20, v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, v33);
    swift_release_n(v1, 2);
    v22 = v20;
    v11 = (_QWORD *)&unk_1000DB000;
    swift_bridgeObjectRelease(v22);
    _os_log_impl((void *)&_mh_execute_header, v8, v10, "<loom:ViewService:matchHomePodSetupPresenter> HomePodSetupPresenter: Delegate set with State: %s Model: %s and we build a new viewModel.", (uint8_t *)v13, 0x16u);
    v23 = v31;
    swift_arrayDestroy(v31, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v13, -1, -1);

  }
  else
  {

    swift_release_n(v0, 4);
  }
  v24 = *(_QWORD *)(*(_QWORD *)((char *)&p_info[236]->flags + v1) + 48);
  v25 = *(_BYTE *)(v1 + v11[278]);
  v26 = swift_retain(v24);
  LOBYTE(v33[0]) = 1;
  sub_10001AD98(v26, v25);
  swift_release(v24);
  v27 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v5, 0, 1, v27);
  v28 = v1 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_viewModel;
  swift_beginAccess(v1 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_viewModel, v33, 33, 0);
  sub_1000727A8((uint64_t)v5, v28);
  swift_endAccess(v33);
  sub_10006A4C0();
  return sub_10000DC40((uint64_t)v5, (uint64_t *)&unk_1000D6EC0);
}

uint64_t sub_10006A4C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  _BYTE v23[24];

  v1 = v0;
  v2 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v2);
  v4 = &v23[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for HomePodSetupViewModel(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = v1 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_viewModel;
  swift_beginAccess(v1 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_viewModel, v23, 0, 0);
  sub_10000E0F0(v9, (uint64_t)v4, (uint64_t *)&unk_1000D6EC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    return sub_10000DC40((uint64_t)v4, (uint64_t *)&unk_1000D6EC0);
  sub_1000148AC((uint64_t)v4, (uint64_t)v8);
  if (qword_1000D5638 != -1)
    swift_once(&qword_1000D5638, sub_100069F3C);
  v12 = type metadata accessor for Logger(0, v11);
  v13 = sub_10001118C(v12, (uint64_t)qword_1000D7720);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "<loom:ViewService:matchHomePodSetupPresenter> HomePodSetupPresenter: a viewmodel was set", v16, 2u);
    swift_slowDealloc(v16, -1, -1);
  }

  Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (Strong)
  {
    v19 = Strong;
    v20 = *(_QWORD *)(v1 + 24);
    ObjectType = swift_getObjectType(Strong, v18);
    (*(void (**)(uint64_t, _UNKNOWN **, char *, uint64_t, uint64_t))(v20 + 32))(v1, &off_1000C4868, v8, ObjectType, v20);
    swift_unknownObjectRelease(v19);
  }
  return sub_1000148F0((uint64_t)v8);
}

uint64_t sub_10006A6D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  uint64_t *v14;
  uint64_t **v15;
  uint64_t v16;
  void (**v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (**v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;

  v3 = v2;
  *(_QWORD *)(v3 + 24) = 0;
  swift_unknownObjectWeakInit(v3 + 16, 0);
  v6 = v3 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_viewModel;
  v7 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_askSiriStatesPresented) = &_swiftEmptySetSingleton;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_finalScreenOfSetupFlowDisplayed) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_setupSession) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_currentViewController) = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_softwareUpdateForHomepodPresented) = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_noP2PRouterPresented) = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_appleMusicPromotionPresented) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_remoteViewController) = a2;
  v8 = objc_allocWithZone((Class)type metadata accessor for HomePodSetupRouter());
  swift_unknownObjectRetain(a2, v9);
  v10 = objc_msgSend(v8, "init");
  v11 = (_QWORD *)(v3 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_router);
  *v11 = v10;
  v11[1] = &off_1000C3E08;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state) = 0;
  v12 = type metadata accessor for HomePodSetupInteractor();
  swift_allocObject(v12, 178, 7);
  v13 = (char *)v10;
  v14 = sub_100084F90(a1);
  v15 = (uint64_t **)(v3 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor);
  *v15 = v14;
  v15[1] = (uint64_t *)&off_1000C57E0;
  v14[5] = (uint64_t)&off_1000C48C8;
  swift_unknownObjectWeakAssign(v14 + 4, v3);
  v16 = swift_allocObject(&unk_1000C4A00, 24, 7);
  swift_weakInit(v16 + 16, v3);
  v17 = (void (**)(uint64_t, uint64_t))&v13[OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_didDismiss];
  v18 = *(_QWORD *)&v13[OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_didDismiss];
  v19 = *(_QWORD *)&v13[OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_didDismiss + 8];
  *v17 = sub_100072964;
  v17[1] = (void (*)(uint64_t, uint64_t))v16;
  swift_retain(v14);
  sub_1000588E4(v18, v19);
  v20 = swift_allocObject(&unk_1000C4A00, 24, 7);
  swift_weakInit(v20 + 16, v3);
  v21 = (uint64_t (**)(uint64_t, uint64_t))&v13[OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_prepareForPresentation];
  v22 = *(_QWORD *)&v13[OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_prepareForPresentation];
  v23 = *(_QWORD *)&v13[OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_prepareForPresentation + 8];
  *v21 = sub_10007296C;
  v21[1] = (uint64_t (*)(uint64_t, uint64_t))v20;
  swift_retain(v20);
  sub_1000588E4(v22, v23);

  swift_release(v14);
  swift_release(v20);
  swift_unknownObjectRelease(a2);
  return v3;
}

void sub_10006A934(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t Strong;
  uint64_t v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  _BYTE v16[24];

  v2 = a1 + 16;
  if (qword_1000D5638 != -1)
    swift_once(&qword_1000D5638, sub_100069F3C);
  v3 = type metadata accessor for Logger(0, a2);
  v4 = sub_10001118C(v3, (uint64_t)qword_1000D7720);
  v5 = Logger.logObject.getter(v4);
  v7 = static os_log_type_t.default.getter(v5, v6);
  if (os_log_type_enabled(v5, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v7, "<loom:ViewService:matchHomePodSetupWarnings> HomePodSetupPresenter: didDismiss called", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  swift_beginAccess(v2, v16, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v10 = Strong;
    v11 = *(void **)(Strong + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_remoteViewController);
    if (v11)
    {
      objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_remoteViewController), "dismiss");
      objc_msgSend(v11, "invalidate");
    }
    swift_release(v10);
  }
  else
  {
    v12 = Logger.logObject.getter(0);
    v14 = static os_log_type_t.default.getter(v12, v13);
    if (os_log_type_enabled(v12, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v14, "<loom:ViewService:matchHomePodSetupWarnings> HomePodSetupPresenter: didDismiss failed, self is nil", v15, 2u);
      swift_slowDealloc(v15, -1, -1);
    }

  }
}

uint64_t sub_10006AAE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _UNKNOWN **v11;
  uint64_t ObjectType;
  uint64_t v14;
  _BYTE v15[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v15, 0, 0);
  Strong = swift_weakLoadStrong(v5);
  if (Strong)
  {
    v7 = Strong;
    *(_QWORD *)(Strong + 24) = a2;
    swift_unknownObjectWeakAssign(Strong + 16, a1);
    swift_unknownObjectRetain(a1, v8);
    sub_10006A1AC();
    swift_release(v7);
    swift_unknownObjectRelease(a1);
  }
  swift_beginAccess(v5, &v14, 0, 0);
  v10 = swift_weakLoadStrong(v5);
  if (v10)
    v11 = &off_1000C4868;
  else
    v11 = 0;
  ObjectType = swift_getObjectType(a1, v9);
  return (*(uint64_t (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(a2 + 16))(v10, v11, ObjectType, a2);
}

void sub_10006ABB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v8 = (uint64_t *)((char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1000D5638 != -1)
    swift_once(&qword_1000D5638, sub_100069F3C);
  v9 = type metadata accessor for Logger(0, v6);
  v10 = sub_10001118C(v9, (uint64_t)qword_1000D7720);
  v11 = Logger.logObject.getter(v10);
  v13 = static os_log_type_t.default.getter(v11, v12);
  if (os_log_type_enabled(v11, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v13, "<loom:ViewService:matchHomePodSetupPresenterProgress> HomePodSetupPresenter: beginFlow called.", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  sub_100012BE8();
  *v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v4);
  v15 = _dispatchPreconditionTest(_:)(v8);
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v8, v4);
  if ((v15 & 1) == 0)
  {
    __break(1u);
LABEL_14:
    swift_once(&qword_1000D5530, sub_100036860);
    goto LABEL_8;
  }
  v16 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor);
  swift_unknownObjectWeakAssign(v16 + 120, a1);
  objc_msgSend(*(id *)(v16 + 80), "setPresentingViewController:", a1);
  v17 = swift_unknownObjectWeakAssign(*(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_router)+ OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_hostViewController, a1);
  if (!IsAppleInternalBuild(v17))
    goto LABEL_10;
  if (qword_1000D5530 != -1)
    goto LABEL_14;
LABEL_8:
  *(_QWORD *)(qword_1000DB5C8 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_indexToNextState) = 0;
  v18 = sub_10008950C();
  if (v18 != 62)
    *(_BYTE *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state) = v18;
LABEL_10:
  if ((sub_100089200() & 1) != 0)
  {
    sub_100089990(-71146);
    *(_BYTE *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state) = 57;
  }
  sub_10006EA2C();
}

id sub_10006AE04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  os_log_type_t v19;
  uint8_t *v20;

  v3 = v2;
  v5 = *(void **)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_remoteViewController);
  if (v5)
  {
    v6 = String._bridgeToObjectiveC()();
    objc_msgSend(v5, "setIdleTimerDisabled:forReason:", 0, v6);

  }
  if ((*(_BYTE *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_router)
                 + OBJC_IVAR____TtC14HDSViewService18HomePodSetupRouter_dismissed) & 1) == 0)
  {
    if (qword_1000D5638 != -1)
      swift_once(&qword_1000D5638, sub_100069F3C);
    v7 = type metadata accessor for Logger(0, a2);
    v8 = sub_10001118C(v7, (uint64_t)qword_1000D7720);
    v9 = Logger.logObject.getter(v8);
    v11 = static os_log_type_t.default.getter(v9, v10);
    if (os_log_type_enabled(v9, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v11, "<loom:ViewService:matchHomePodSetupWarnings> HomePodSetupFlowViewController: disappeared without dismiss (device locked?)...dismissing UI", v12, 2u);
      swift_slowDealloc(v12, -1, -1);
    }

    sub_100058388(a1, (_DWORD)a1 != 19);
  }
  v13 = *(_QWORD *)(v3 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor);
  sub_100089898(a1);
  objc_msgSend(*(id *)(v13 + 80), "invalidate");
  if (qword_1000D5670 != -1)
    swift_once(&qword_1000D5670, sub_100084DD8);
  v15 = type metadata accessor for Logger(0, v14);
  v16 = sub_10001118C(v15, (uint64_t)qword_1000D80F0);
  v17 = Logger.logObject.getter(v16);
  v19 = static os_log_type_t.default.getter(v17, v18);
  if (os_log_type_enabled(v17, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v19, "HomePodSetup: 'Hello Siri' trigger re-enabled because cancelDeviceSetup was called.", v20, 2u);
    swift_slowDealloc(v20, -1, -1);
  }

  return objc_msgSend((id)objc_opt_self(VTStateManager), "requestPhraseSpotterBypassing:timeout:", 0, 0.0);
}

void sub_10006B04C(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  _QWORD v48[7];
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t aBlock;

  v2 = v1;
  v4 = sub_10000D604(&qword_1000D5DB8);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v48[6] = (char *)v48 - v8;
  v10 = type metadata accessor for Logger(0, v9);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v48[2] = (char *)v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v15 = (char *)v48 - v14;
  v16 = type metadata accessor for DispatchPredicate(0);
  v50 = *(_QWORD *)(v16 - 8);
  v51 = v16;
  __chkstk_darwin(v16);
  v49 = (_QWORD *)((char *)v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1000D5638 != -1)
    swift_once(&qword_1000D5638, sub_100069F3C);
  v48[4] = v10;
  v18 = sub_10001118C(v10, (uint64_t)qword_1000D7720);
  v19 = swift_retain_n(v2, 2);
  v53 = v18;
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.default.getter();
  v22 = os_log_type_enabled(v20, v21);
  v52 = a1;
  v48[3] = v11;
  v48[1] = v15;
  v48[5] = v7;
  if (v22)
  {
    v23 = (uint8_t *)swift_slowAlloc(12, -1);
    v24 = swift_slowAlloc(32, -1);
    *(_DWORD *)v23 = 136315138;
    aBlock = v24;
    v25 = sub_100069924(*(_BYTE *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state));
    v27 = v26;
    v56 = sub_10003EF58(v25, v26, &aBlock);
    a1 = v52;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57);
    swift_release_n(v2, 2);
    swift_bridgeObjectRelease(v27);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "<loom:ViewService:matchHomePodSetupPresenterProgress> HomePodSetupPresenter: step completed called with state: %s", v23, 0xCu);
    swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v23, -1, -1);

  }
  else
  {

    swift_release_n(v2, 2);
  }
  v28 = sub_1000147E8(a1, (uint64_t)&aBlock);
  v29 = Logger.logObject.getter(v28);
  v30 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc(12, -1);
    v32 = v2;
    v33 = swift_slowAlloc(32, -1);
    v56 = v33;
    *(_DWORD *)v31 = 136315138;
    v34 = sub_10000B764();
    v36 = v35;
    v54 = sub_10003EF58(v34, v35, &v56);
    a1 = v52;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55);
    swift_bridgeObjectRelease(v36);
    sub_100011384((uint64_t)&aBlock);
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "<loom:ViewService:matchHomePodSetupPresenterProgress> HomePodSetupPresenter: stepResult: %s", v31, 0xCu);
    swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
    v37 = v33;
    v2 = v32;
    swift_slowDealloc(v37, -1, -1);
    swift_slowDealloc(v31, -1, -1);
  }
  else
  {
    sub_100011384((uint64_t)&aBlock);
  }

  sub_100012BE8();
  v38 = static OS_dispatch_queue.main.getter();
  v40 = v49;
  v39 = v50;
  *v49 = v38;
  v41 = v51;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v39 + 104))(v40, enum case for DispatchPredicate.onQueue(_:), v51);
  v42 = _dispatchPreconditionTest(_:)(v40);
  v43 = (*(uint64_t (**)(uint64_t *, uint64_t))(v39 + 8))(v40, v41);
  if ((v42 & 1) != 0)
  {
    if (!IsAppleInternalBuild(v43))
      goto LABEL_17;
    if (qword_1000D5530 == -1)
    {
LABEL_12:
      sub_1000368EC((uint64_t)a1, *(_BYTE *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state));
      v44 = sub_10000E9EC(*a1);
      v46 = v45;
      if (v44 == 0x754274726F706572 && v45 == 0xE900000000000067)
      {
        swift_bridgeObjectRelease(0xE900000000000067);
      }
      else
      {
        v47 = _stringCompareWithSmolCheck(_:_:expecting:)(v44, v45, 0x754274726F706572, 0xE900000000000067, 0);
        swift_bridgeObjectRelease(v46);
        if ((v47 & 1) == 0)
          goto LABEL_17;
      }
      sub_1000707AC();
LABEL_17:
      __asm { BR              X9 }
    }
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1000D5530, sub_100036860);
  goto LABEL_12;
}

void sub_10006DAA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  void *v9;
  NSString v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  if (qword_1000D5638 != -1)
    swift_once(&qword_1000D5638, sub_100069F3C);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10001118C(v4, (uint64_t)qword_1000D7720);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "HomePodSetupPresenter: request start device setup process", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  v9 = *(void **)(v3 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_remoteViewController);
  if (v9)
  {
    v10 = String._bridgeToObjectiveC()();
    objc_msgSend(v9, "setIdleTimerDisabled:forReason:", 1, v10);

  }
  v11 = *(_QWORD *)(v3 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor);
  if (qword_1000D5670 != -1)
    swift_once(&qword_1000D5670, sub_100084DD8);
  sub_10001118C(v4, (uint64_t)qword_1000D80F0);
  v12 = swift_retain(v11);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v15 = 134217984;
    v16 = 0x4072C00000000000;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17);
    swift_unknownObjectRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "HomePodSetup: 'Hello Siri' trigger disabled for %f seconds", v15, 0xCu);
    swift_slowDealloc(v15, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease(v11);
  }
  objc_msgSend((id)objc_opt_self(VTStateManager), "requestPhraseSpotterBypassing:timeout:", 1, 300.0);
  sub_100087190();
}

uint64_t sub_10006DD08(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(a1, "name");
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v2;
}

uint64_t sub_10006DD58(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v1 = sub_10000E9EC(*a1);
  v3 = v2;
  if (v1 == 0xD000000000000010 && v2 == 0x800000010009C8F0)
  {
    swift_bridgeObjectRelease(0x800000010009C8F0);
    return 1;
  }
  else
  {
    v5 = _stringCompareWithSmolCheck(_:_:expecting:)(v1, v2, 0xD000000000000010, 0x800000010009C8F0, 0);
    swift_bridgeObjectRelease(v3);
    return v5 & 1;
  }
}

void sub_10006DDE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  NSObject *oslog;
  uint64_t v17;
  uint64_t v18;

  if (a1)
  {
    if (qword_1000D5638 != -1)
      swift_once(&qword_1000D5638, sub_100069F3C);
    v3 = type metadata accessor for Logger(0, a2);
    sub_10001118C(v3, (uint64_t)qword_1000D7720);
    swift_errorRetain(a1);
    v4 = swift_errorRetain(a1);
    oslog = Logger.logObject.getter(v4);
    v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(12, -1);
      v7 = swift_slowAlloc(32, -1);
      v18 = v7;
      *(_DWORD *)v6 = 136315138;
      v8 = sub_10000D604((uint64_t *)&unk_1000D7420);
      v9 = Optional.debugDescription.getter(v8);
      v11 = v10;
      v17 = sub_10003EF58(v9, v10, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18);
      swift_bridgeObjectRelease(v11);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, oslog, v5, "HomePodSetupPresenter: ### Re-enable B238Setup after WiFi failed: %s", v6, 0xCu);
      swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v7, -1, -1);
      swift_slowDealloc(v6, -1, -1);

      return;
    }
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }
  else
  {
    if (qword_1000D5638 != -1)
      swift_once(&qword_1000D5638, sub_100069F3C);
    v12 = type metadata accessor for Logger(0, a2);
    v13 = sub_10001118C(v12, (uint64_t)qword_1000D7720);
    oslog = Logger.logObject.getter(v13);
    v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v14, "HomePodSetupPresenter: Re-enabling B238Setup after WiFi connects", v15, 2u);
      swift_slowDealloc(v15, -1, -1);
    }
  }

}

uint64_t sub_10006E058(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;

  v2 = sub_10000E9EC(*a1);
  if (v2 == 0x7972616D697270 && v3 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease(0xE700000000000000);
    return 47;
  }
  v5 = v3;
  v6 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, v3, 0x7972616D697270, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(v5);
  if ((v6 & 1) != 0)
    return 47;
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor);
  v9 = *(_QWORD *)(v8 + 48);
  if (*(_DWORD *)(v9 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_bonjourTestState) != 3
    || (*(_BYTE *)(v1 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_noP2PRouterPresented) & 1) != 0)
  {
    if (*(_QWORD *)(v9 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_amsMarketingItem))
    {
      if (*(_BYTE *)(v9 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_acceptedMusicTerms) == 1
        && (*(_BYTE *)(v1 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_appleMusicPromotionPresented) & 1) == 0)
      {
        v10 = *(char **)(v8 + 136);
        if (v10)
        {
          if (*(_QWORD *)&v10[OBJC_IVAR____TtC14HDSViewService35HomePodSetupAMSUpsellViewController_vcAppleMusic])
          {
            v11 = qword_1000D5638;
            v13 = v10;
            if (v11 != -1)
              swift_once(&qword_1000D5638, sub_100069F3C);
            v14 = type metadata accessor for Logger(0, v12);
            v15 = sub_10001118C(v14, (uint64_t)qword_1000D7720);
            v16 = Logger.logObject.getter(v15);
            v17 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v16, v17))
            {
              v18 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v18 = 0;
              _os_log_impl((void *)&_mh_execute_header, v16, v17, "<loom:ViewService:matchHomePodSetupPresenterProgress> HomePodSetupPresenter: stateForLastScreens .appleMusicPromotion", v18, 2u);
              swift_slowDealloc(v18, -1, -1);
            }

            return 24;
          }
        }
      }
    }
    return 47;
  }
  if (qword_1000D5638 != -1)
    swift_once(&qword_1000D5638, sub_100069F3C);
  v20 = type metadata accessor for Logger(0, v7);
  v21 = sub_10001118C(v20, (uint64_t)qword_1000D7720);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v24 = 0;
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "<loom:ViewService:matchHomePodSetupPresenterProgress> HomePodSetupPresenter: stateForLastScreens .noP2PRouter", v24, 2u);
    swift_slowDealloc(v24, -1, -1);
  }

  return 44;
}

void sub_10006E2E0(int a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  NSURL *v24;
  void *v25;
  void *v26;
  unint64_t v27;
  Class isa;
  id v29;
  void *v30;
  uint64_t v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  _QWORD *v36;
  id v37;
  uint64_t v38;
  _QWORD v39[2];
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;

  sub_10000D604(&qword_1000D5DB8);
  v6 = ((uint64_t (*)(void))__chkstk_darwin)();
  v8 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)v39 - v9;
  sub_100058388(a1, a1 != 19);
  if (a3)
  {
    if (qword_1000D5638 != -1)
      swift_once(&qword_1000D5638, sub_100069F3C);
    v12 = type metadata accessor for Logger(0, v11);
    v13 = sub_10001118C(v12, (uint64_t)qword_1000D7720);
    v14 = swift_bridgeObjectRetain_n(a3, 2);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc(12, -1);
      v39[1] = v13;
      v18 = (uint8_t *)v17;
      v19 = (void *)swift_slowAlloc(32, -1);
      v42 = v19;
      *(_DWORD *)v18 = 136315138;
      swift_bridgeObjectRetain(a3);
      v40 = sub_10003EF58(a2, a3, (uint64_t *)&v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41);
      swift_bridgeObjectRelease_n(a3, 3);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "<loom:ViewService:matchHomePodSetupPresenterProgress> HomePodSetupPresenter: Attempting to open settings: %s", v18, 0xCu);
      swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v18, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a3, 2);
    }
    URL.init(string:)(a2, a3);
    v20 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
    if (!v20)
      goto LABEL_11;
    v21 = v20;
    sub_10000E0F0((uint64_t)v10, (uint64_t)v8, &qword_1000D5DB8);
    v22 = type metadata accessor for URL(0);
    v23 = *(_QWORD *)(v22 - 8);
    v25 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v8, 1, v22) != 1)
    {
      URL._bridgeToObjectiveC()(v24);
      v25 = v26;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v22);
    }
    v27 = sub_10000C5D8((uint64_t)_swiftEmptyArrayStorage);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v27);
    v42 = 0;
    LODWORD(v27) = objc_msgSend(v21, "openSensitiveURL:withOptions:error:", v25, isa, &v42);

    v29 = v42;
    if (!(_DWORD)v27)
    {
      v30 = v29;
      v31 = _convertNSErrorToError(_:)(v29);

      swift_willThrow();
      sub_10000DC40((uint64_t)v10, &qword_1000D5DB8);
      v32 = (id)_convertErrorToNSError(_:)(v31);
      v33 = Logger.logObject.getter(v32);
      v34 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v33, v34))
      {
        v35 = (uint8_t *)swift_slowAlloc(12, -1);
        v36 = (_QWORD *)swift_slowAlloc(8, -1);
        *(_DWORD *)v35 = 138412290;
        v42 = v32;
        v37 = v32;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43);
        *v36 = v32;

        _os_log_impl((void *)&_mh_execute_header, v33, v34, "<loom:ViewService:matchHomePodSetupWarnings> HomePodSetupPresenter: Open Settings failed {error: %@}", v35, 0xCu);
        v38 = sub_10000D604(&qword_1000D5CC8);
        swift_arrayDestroy(v36, 1, v38);
        swift_slowDealloc(v36, -1, -1);
        swift_slowDealloc(v35, -1, -1);
        swift_errorRelease(v31);

      }
      else
      {

        swift_errorRelease(v31);
      }

    }
    else
    {
LABEL_11:
      sub_10000DC40((uint64_t)v10, &qword_1000D5DB8);
    }
  }
}

uint64_t sub_10006E7B0(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state) = a1;
  v3 = sub_100069924(a1);
  v5 = v3;
  v6 = v4;
  if (v3 == 1701736292 && v4 == 0xE400000000000000)
  {
    v7 = swift_bridgeObjectRelease(0xE400000000000000);
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 1701736292, 0xE400000000000000, 0);
    v7 = swift_bridgeObjectRelease(v6);
    if ((v8 & 1) == 0)
    {
      if (v5 == 0x6F727245656E6F64 && v6 == 0xE900000000000072)
      {
        v7 = swift_bridgeObjectRelease(0xE900000000000072);
      }
      else
      {
        v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, 0x6F727245656E6F64, 0xE900000000000072, 0);
        v7 = swift_bridgeObjectRelease(v6);
        if ((v9 & 1) == 0)
        {
          v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor);
          v11 = *(_QWORD *)(v10 + 96);
          *(_QWORD *)(v10 + 88) = v5;
          *(_QWORD *)(v10 + 96) = v6;
          swift_bridgeObjectRelease(v11);
          *(_QWORD *)(v10 + 104) = mach_absolute_time();
          *(_BYTE *)(v10 + 112) = 0;
          if (qword_1000D5638 != -1)
            swift_once(&qword_1000D5638, sub_100069F3C);
          v13 = type metadata accessor for Logger(0, v12);
          v14 = sub_10001118C(v13, (uint64_t)qword_1000D7720);
          v15 = Logger.logObject.getter(v14);
          v16 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v15, v16))
          {
            v17 = (uint8_t *)swift_slowAlloc(12, -1);
            v18 = swift_slowAlloc(32, -1);
            v21 = v18;
            *(_DWORD *)v17 = 136315138;
            v20 = sub_10003EF58(v5, v6, &v21);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21);
            swift_bridgeObjectRelease(v6);
            _os_log_impl((void *)&_mh_execute_header, v15, v16, "<loom:ViewService:matchHomePodSetupPresenterProgress> HomePodSetupPresenter presentCurrentTask viewController: %s", v17, 0xCu);
            swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v18, -1, -1);
            swift_slowDealloc(v17, -1, -1);
          }

        }
      }
    }
  }
  return sub_10006EA2C(v7);
}

void sub_10006EA2C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  int v6;
  id v7;

  v1 = v0;
  if (IsAppleInternalBuild())
    sub_10006F0B4();
  sub_1000702C4(*(_BYTE *)(v0 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state));
  if (v2)
  {
    v3 = v2;
    sub_1000581A0(v2);
    v4 = *(void **)(v0 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_currentViewController);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_currentViewController) = v3;
    v7 = v3;

    objc_msgSend(*(id *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor) + 80), "setPresentingChildViewController:", v7);
  }
  else
  {
    v5 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor) + 48)
       + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_dismissType;
    if (*(_BYTE *)(v5 + 4))
      v6 = 0;
    else
      v6 = *(_DWORD *)v5;
    sub_100058388(v6, v6 != 19);
  }
}

uint64_t sub_10006EB30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  void *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t aBlock[5];
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  _OWORD v60[4];

  v0 = type metadata accessor for DispatchWorkItemFlags(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchTime(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v45 - v14;
  result = IsAppleInternalBuild(v13);
  if ((_DWORD)result)
  {
    v52 = v8;
    if (qword_1000D5530 != -1)
      swift_once(&qword_1000D5530, sub_100036860);
    sub_100037D20(*(_BYTE *)(v53 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state), (uint64_t)&v57);
    if ((_QWORD)v59 == 1)
    {
      return sub_10000DC40((uint64_t)&v57, &qword_1000D6250);
    }
    else
    {
      v47 = v7;
      v48 = v5;
      v60[0] = v57;
      v60[1] = v58;
      v60[2] = v59;
      if (qword_1000D5638 != -1)
        swift_once(&qword_1000D5638, sub_100069F3C);
      v18 = type metadata accessor for Logger(0, v17);
      sub_10001118C(v18, (uint64_t)qword_1000D7720);
      v19 = sub_1000147E8((char *)v60, (uint64_t)&v57);
      v20 = Logger.logObject.getter(v19);
      v21 = static os_log_type_t.default.getter();
      v22 = os_log_type_enabled(v20, v21);
      v51 = v1;
      v50 = v3;
      v49 = v4;
      if (v22)
      {
        v23 = (uint8_t *)swift_slowAlloc(12, -1);
        v24 = swift_slowAlloc(32, -1);
        v46 = v0;
        v25 = v24;
        aBlock[0] = v24;
        *(_DWORD *)v23 = 136315138;
        v26 = sub_10000B764();
        v28 = v27;
        v54 = sub_10003EF58(v26, v27, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, aBlock);
        swift_bridgeObjectRelease(v28);
        sub_100011384((uint64_t)&v57);
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "HomePodSetupPresenter: Found Automation stepResult: %s", v23, 0xCu);
        swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
        v29 = v25;
        v0 = v46;
        swift_slowDealloc(v29, -1, -1);
        swift_slowDealloc(v23, -1, -1);
      }
      else
      {
        sub_100011384((uint64_t)&v57);
      }

      sub_100012BE8();
      v30 = (void *)static OS_dispatch_queue.main.getter();
      static DispatchTime.now()();
      if (qword_1000D5640 != -1)
        swift_once(&qword_1000D5640, sub_100071778);
      v31 = type metadata accessor for DispatchTimeInterval(0);
      v32 = sub_10001118C(v31, (uint64_t)qword_1000D7738);
      + infix(_:_:)(v12, v32);
      v33 = *(void (**)(char *, uint64_t))(v9 + 8);
      v34 = v52;
      v33(v12, v52);
      v35 = swift_allocObject(&unk_1000C4A00, 24, 7);
      swift_weakInit(v35 + 16, v53);
      sub_1000147E8((char *)v60, (uint64_t)&v57);
      v36 = swift_allocObject(&unk_1000C4AF0, 72, 7);
      v37 = v58;
      *(_OWORD *)(v36 + 24) = v57;
      *(_QWORD *)(v36 + 16) = v35;
      *(_OWORD *)(v36 + 40) = v37;
      *(_OWORD *)(v36 + 56) = v59;
      aBlock[4] = (uint64_t)sub_100072824;
      v56 = v36;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_10007C6B4;
      aBlock[3] = (uint64_t)&unk_1000C4B08;
      v38 = _Block_copy(aBlock);
      v39 = swift_release(v56);
      v40 = v47;
      static DispatchQoS.unspecified.getter(v39);
      *(_QWORD *)&v57 = _swiftEmptyArrayStorage;
      v41 = sub_10000DD98((unint64_t *)&qword_1000D7CA0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v42 = sub_10000D604((uint64_t *)&unk_1000D7B60);
      v43 = sub_100012C74();
      v44 = v50;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v57, v42, v43, v0, v41);
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v15, v40, v44, v38);
      _Block_release(v38);

      (*(void (**)(char *, uint64_t))(v51 + 8))(v44, v0);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v40, v49);
      v33(v15, v34);
      return sub_100011384((uint64_t)v60);
    }
  }
  return result;
}

uint64_t sub_10006F058(uint64_t a1, char *a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  _BYTE v6[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    sub_10006B04C(a2);
    return swift_release(v5);
  }
  return result;
}

uint64_t sub_10006F0B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t inited;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void *v35;
  char *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  const void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t *v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  char *v82;
  void *v83;
  const void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char v92;
  char *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  void (*v98)(char *, uint64_t);
  uint64_t (*v99)(char *, uint64_t);
  uint64_t v100;
  void *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  void *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  unsigned int v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  void (*v125)(char *, uint64_t);
  uint64_t v126;
  char *v127;
  char v128[104];
  void **aBlock;
  uint64_t v130;
  uint64_t (*v131)(uint64_t);
  void *v132;
  uint64_t (*v133)();
  uint64_t v134;
  char v135[8];

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v108 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = type metadata accessor for DispatchQoS(0);
  v5 = *(_QWORD *)(v122 - 8);
  __chkstk_darwin(v122);
  v127 = (char *)&v108 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = type metadata accessor for DispatchTimeInterval(0);
  v120 = *(_QWORD *)(v121 - 8);
  __chkstk_darwin(v121);
  v124 = (uint64_t *)((char *)&v108 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v123 = type metadata accessor for DispatchTime(0);
  v119 = *(_QWORD *)(v123 - 8);
  v8 = __chkstk_darwin(v123);
  v118 = (char *)&v108 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)&v108 - v10;
  if (qword_1000D5530 != -1)
    swift_once(&qword_1000D5530, sub_100036860);
  v12 = qword_1000DB5C8;
  v13 = OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_indexToNextState;
  v14 = *(_QWORD *)(qword_1000DB5C8 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_indexToNextState);
  v15 = qword_1000DB5C8 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_forcedStateSequence;
  result = swift_beginAccess(qword_1000DB5C8 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_forcedStateSequence, v135, 0, 0);
  v17 = *(_QWORD *)(*(_QWORD *)v15 + 16);
  if (v17 >= v14 && v17 != 0)
  {
    if (v14 < v17)
    {
      if (v14 < 0)
      {
        __break(1u);
      }
      else
      {
        v19 = *(_QWORD *)(v12 + v13);
        v20 = __OFADD__(v19, 1);
        v21 = v19 + 1;
        if (!v20)
        {
          v22 = *(_BYTE *)(*(_QWORD *)v15 + v14 + 32);
          *(_QWORD *)(v12 + v13) = v21;
LABEL_12:
          *(_BYTE *)(v0 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state) = v22;
          v17 = *(_QWORD *)(*(_QWORD *)v15 + 16);
          goto LABEL_13;
        }
      }
      __break(1u);
      return result;
    }
    v22 = 0;
    goto LABEL_12;
  }
LABEL_13:
  v23 = v0;
  v110 = v11;
  v117 = v5;
  v24 = v17 < *(_QWORD *)(v12 + v13) || v17 == 0;
  if (v24
    && !*(_BYTE *)(v12 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_testMode)
    && !*(_QWORD *)(v12 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_testFlags))
  {
    return result;
  }
  v111 = OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state;
  v25 = sub_100069924(*(_BYTE *)(v0 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state));
  v27 = v26;
  v115 = v2;
  v112 = v1;
  if (v25 == 0x636C655769726973 && v26 == 0xEB00000000656D6FLL)
  {
    swift_bridgeObjectRelease(0xEB00000000656D6FLL);
    v28 = v0;
LABEL_24:
    v30 = sub_10000D604(&qword_1000D7A58);
    inited = swift_initStackObject(v30, v128);
    *(_OWORD *)(inited + 16) = xmmword_100098100;
    *(_QWORD *)(inited + 32) = 0x7478655469726973;
    *(_QWORD *)(inited + 40) = 0xE800000000000000;
    *(_QWORD *)(inited + 48) = 0xD00000000000001CLL;
    *(_QWORD *)(inited + 56) = 0x80000001000A2270;
    *(_QWORD *)(inited + 72) = &type metadata for String;
    *(_QWORD *)(inited + 80) = 0x495469726973;
    *(_QWORD *)(inited + 88) = 0xE600000000000000;
    v32 = sub_10000D604(&qword_1000D7A60);
    v33 = swift_allocObject(v32, 80, 7);
    *(_OWORD *)(v33 + 16) = xmmword_10009ABE0;
    *(_QWORD *)(v33 + 32) = sub_10000C70C((uint64_t)&off_1000C1AB0);
    *(_QWORD *)(v33 + 40) = sub_10000C70C((uint64_t)&off_1000C1B18);
    *(_QWORD *)(v33 + 48) = sub_10000C70C((uint64_t)&off_1000C1B80);
    *(_QWORD *)(v33 + 56) = sub_10000C70C((uint64_t)&off_1000C1BE8);
    *(_QWORD *)(v33 + 64) = sub_10000C70C((uint64_t)&off_1000C1C50);
    *(_QWORD *)(v33 + 72) = sub_10000C70C((uint64_t)&off_1000C1CB8);
    *(_QWORD *)(inited + 120) = sub_10000D604(&qword_1000D7A68);
    *(_QWORD *)(inited + 96) = v33;
    v34 = sub_10000C5D8(inited);
    sub_100012BE8();
    v35 = (void *)static OS_dispatch_queue.main.getter();
    v36 = v118;
    static DispatchTime.now()();
    v37 = v124;
    *v124 = 1;
    v38 = v120;
    v39 = v121;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v120 + 104))(v37, enum case for DispatchTimeInterval.seconds(_:), v121);
    v40 = v127;
    v41 = v110;
    + infix(_:_:)(v36, v37);
    (*(void (**)(_QWORD *, uint64_t))(v38 + 8))(v37, v39);
    v42 = *(void (**)(char *, uint64_t))(v119 + 8);
    v43 = v36;
    v44 = v123;
    v42(v43, v123);
    v45 = swift_allocObject(&unk_1000C4AA0, 32, 7);
    *(_QWORD *)(v45 + 16) = v28;
    *(_QWORD *)(v45 + 24) = v34;
    v133 = sub_100072024;
    v134 = v45;
    aBlock = _NSConcreteStackBlock;
    v130 = 1107296256;
    v131 = sub_10007C6B4;
    v132 = &unk_1000C4AB8;
    v46 = _Block_copy(&aBlock);
    v47 = v134;
    swift_retain(v28);
    v48 = swift_release(v47);
    static DispatchQoS.unspecified.getter(v48);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v49 = sub_10000DD98((unint64_t *)&qword_1000D7CA0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v50 = sub_10000D604((uint64_t *)&unk_1000D7B60);
    v51 = sub_100012C74();
    v52 = v49;
    v2 = v115;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v50, v51, v112, v52);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v41, v40, v4, v46);
    v53 = v46;
    v54 = v122;
    _Block_release(v53);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v112);
    (*(void (**)(char *, uint64_t))(v117 + 8))(v40, v54);
    v42(v41, v44);
    goto LABEL_25;
  }
  v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v25, v26, 0x636C655769726973, 0xEB00000000656D6FLL, 0);
  swift_bridgeObjectRelease(v27);
  v28 = v23;
  if ((v29 & 1) != 0)
    goto LABEL_24;
LABEL_25:
  v109 = v4;
  v55 = sub_100069924(*(_BYTE *)(v28 + v111));
  v57 = v56;
  v116 = v28;
  if (v55 == 0x73736572676F7270 && v56 == 0xEA00000000004955)
  {
    swift_bridgeObjectRelease(0xEA00000000004955);
    v58 = v112;
    v59 = v109;
    v60 = v110;
    v61 = v124;
    goto LABEL_29;
  }
  v62 = _stringCompareWithSmolCheck(_:_:expecting:)(v55, v56, 0x73736572676F7270, 0xEA00000000004955, 0);
  swift_bridgeObjectRelease(v57);
  v58 = v112;
  v59 = v109;
  v60 = v110;
  v61 = v124;
  if ((v62 & 1) != 0)
  {
LABEL_29:
    v114 = sub_100012BE8();
    v63 = 0;
    v113 = enum case for DispatchTimeInterval.milliseconds(_:);
    v64 = 750;
    do
    {
      v65 = *(_DWORD *)((char *)&off_1000C1D20 + v63 + 32);
      v126 = static OS_dispatch_queue.main.getter();
      v66 = v118;
      static DispatchTime.now()();
      *v61 = v64;
      v67 = v120;
      v68 = v121;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v120 + 104))(v61, v113, v121);
      + infix(_:_:)(v66, v61);
      (*(void (**)(uint64_t *, uint64_t))(v67 + 8))(v61, v68);
      v125 = *(void (**)(char *, uint64_t))(v119 + 8);
      v69 = v123;
      v125(v66, v123);
      v70 = swift_allocObject(&unk_1000C4A50, 28, 7);
      v71 = v59;
      v72 = v58;
      v73 = v116;
      *(_QWORD *)(v70 + 16) = v116;
      *(_DWORD *)(v70 + 24) = v65;
      v133 = sub_100071FEC;
      v134 = v70;
      aBlock = _NSConcreteStackBlock;
      v130 = 1107296256;
      v131 = sub_10007C6B4;
      v132 = &unk_1000C4A68;
      v74 = _Block_copy(&aBlock);
      v75 = v134;
      v76 = v73;
      v58 = v72;
      v59 = v71;
      swift_retain(v76);
      v77 = swift_release(v75);
      static DispatchQoS.unspecified.getter(v77);
      aBlock = (void **)_swiftEmptyArrayStorage;
      v78 = sub_10000DD98((unint64_t *)&qword_1000D7CA0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v79 = sub_10000D604((uint64_t *)&unk_1000D7B60);
      v80 = sub_100012C74();
      v81 = v78;
      v82 = v127;
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v79, v80, v58, v81);
      v83 = (void *)v126;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v60, v82, v59, v74);
      v84 = v74;
      v85 = v122;
      _Block_release(v84);

      v2 = v115;
      (*(void (**)(char *, uint64_t))(v115 + 8))(v59, v58);
      (*(void (**)(char *, uint64_t))(v117 + 8))(v82, v85);
      v125(v60, v69);
      v61 = v124;
      v64 += 750;
      v63 += 4;
    }
    while (v63 != 24);
  }
  v86 = v116;
  v87 = sub_100069924(*(_BYTE *)(v116 + v111));
  v89 = v88;
  if (v87 == 0xD000000000000013 && v88 == 0x800000010009CB60)
  {
    result = swift_bridgeObjectRelease(0x800000010009CB60);
    v90 = v112;
    v91 = v109;
  }
  else
  {
    v92 = _stringCompareWithSmolCheck(_:_:expecting:)(v87, v88, 0xD000000000000013, 0x800000010009CB60, 0);
    result = swift_bridgeObjectRelease(v89);
    v90 = v112;
    v91 = v109;
    if ((v92 & 1) == 0)
      return result;
  }
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v86 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor)
                              + 48)
                  + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_amsMarketingItem))
  {
    sub_100089724();
    sub_100012BE8();
    v126 = static OS_dispatch_queue.main.getter();
    v93 = v118;
    static DispatchTime.now()();
    v94 = v124;
    *v124 = 2;
    v95 = v120;
    v96 = v121;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v120 + 104))(v94, enum case for DispatchTimeInterval.seconds(_:), v121);
    v97 = v110;
    + infix(_:_:)(v93, v94);
    (*(void (**)(_QWORD *, uint64_t))(v95 + 8))(v94, v96);
    v98 = *(void (**)(char *, uint64_t))(v119 + 8);
    v98(v93, v123);
    v99 = (uint64_t (*)(char *, uint64_t))v98;
    v100 = swift_allocObject(&unk_1000C4A00, 24, 7);
    swift_weakInit(v100 + 16, v86);
    v133 = sub_100071FA8;
    v134 = v100;
    aBlock = _NSConcreteStackBlock;
    v130 = 1107296256;
    v131 = sub_10007C6B4;
    v132 = &unk_1000C4A18;
    v101 = _Block_copy(&aBlock);
    v102 = swift_release(v134);
    v103 = v127;
    static DispatchQoS.unspecified.getter(v102);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v104 = sub_10000DD98((unint64_t *)&qword_1000D7CA0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v105 = sub_10000D604((uint64_t *)&unk_1000D7B60);
    v106 = sub_100012C74();
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v105, v106, v90, v104);
    v107 = (void *)v126;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v97, v103, v91, v101);
    _Block_release(v101);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v91, v90);
    (*(void (**)(char *, uint64_t))(v117 + 8))(v103, v122);
    result = v99(v97, v123);
    *(_BYTE *)(v86 + v111) = 0;
  }
  return result;
}

uint64_t sub_10006FCE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor);
  v4 = sub_10006FD38(a2);
  sub_100071AEC(v3, 510, v4, a1);
  return swift_bridgeObjectRelease(v4);
}

uint64_t sub_10006FD38(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  _OWORD v33[2];
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  _OWORD v37[2];
  _OWORD v38[3];
  _OWORD v39[2];
  __int128 v40;
  _OWORD v41[2];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_10000D604(&qword_1000D57E0);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v29 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v28 = (unint64_t)(63 - v4) >> 6;
  v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain(a1);
  result = swift_retain(v3);
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v12 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v13 = v12 | (v9 << 6);
      goto LABEL_28;
    }
    v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v14 >= v28)
      goto LABEL_37;
    v15 = *(_QWORD *)(v29 + 8 * v14);
    v16 = v9 + 1;
    if (!v15)
    {
      v16 = v9 + 2;
      if (v9 + 2 >= v28)
        goto LABEL_37;
      v15 = *(_QWORD *)(v29 + 8 * v16);
      if (!v15)
      {
        v16 = v9 + 3;
        if (v9 + 3 >= v28)
          goto LABEL_37;
        v15 = *(_QWORD *)(v29 + 8 * v16);
        if (!v15)
        {
          v16 = v9 + 4;
          if (v9 + 4 >= v28)
            goto LABEL_37;
          v15 = *(_QWORD *)(v29 + 8 * v16);
          if (!v15)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v16 << 6);
    v9 = v16;
LABEL_28:
    v18 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v13);
    v20 = *v18;
    v19 = v18[1];
    sub_10000DB98(*(_QWORD *)(a1 + 56) + 32 * v13, (uint64_t)v41);
    *(_QWORD *)&v40 = v20;
    *((_QWORD *)&v40 + 1) = v19;
    v38[2] = v40;
    v39[0] = v41[0];
    v39[1] = v41[1];
    *(_QWORD *)&v38[0] = v20;
    *((_QWORD *)&v38[0] + 1) = v19;
    swift_bridgeObjectRetain(v19);
    swift_dynamicCast(&v30, v38, &type metadata for String, &type metadata for AnyHashable, 7);
    sub_10000DAD8(v39, v33);
    v34 = v30;
    v35 = v31;
    v36 = v32;
    sub_10000DAD8(v33, v37);
    v30 = v34;
    v31 = v35;
    v32 = v36;
    sub_10000DAD8(v37, v38);
    sub_10000DAD8(v38, &v34);
    result = AnyHashable._rawHashValue(seed:)(v3[5]);
    v21 = -1 << *((_BYTE *)v3 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)&v7[8 * (v22 >> 6)]) != 0)
    {
      v10 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)&v7[8 * (v22 >> 6)])) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)&v7[8 * v23];
      }
      while (v27 == -1);
      v10 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)&v7[(v10 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v10;
    v11 = v3[6] + 40 * v10;
    *(_OWORD *)v11 = v30;
    *(_OWORD *)(v11 + 16) = v31;
    *(_QWORD *)(v11 + 32) = v32;
    result = (uint64_t)sub_10000DAD8(&v34, (_OWORD *)(v3[7] + 32 * v10));
    ++v3[2];
  }
  v17 = v9 + 5;
  if (v9 + 5 >= v28)
  {
LABEL_37:
    swift_release(v3);
    sub_100012E0C(a1);
    return (uint64_t)v3;
  }
  v15 = *(_QWORD *)(v29 + 8 * v17);
  if (v15)
  {
    v16 = v9 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v28)
      goto LABEL_37;
    v15 = *(_QWORD *)(v29 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1000700FC(uint64_t a1, int a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v13[24];

  v4 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor) + 48);
  *(_DWORD *)(v7 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_progressEvent) = a2;
  LOBYTE(a2) = *(_BYTE *)(a1 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state);
  v8 = swift_retain(v7);
  v13[0] = 1;
  sub_10001AD98(v8, a2);
  swift_release(v7);
  v9 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 0, 1, v9);
  v10 = a1 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_viewModel;
  swift_beginAccess(a1 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_viewModel, v13, 33, 0);
  sub_1000727A8((uint64_t)v6, v10);
  swift_endAccess(v13);
  sub_10006A4C0();
  return sub_10000DC40((uint64_t)v6, (uint64_t *)&unk_1000D6EC0);
}

uint64_t sub_100070234(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  if (qword_1000D5530 != -1)
    swift_once(&qword_1000D5530, sub_100036860);
  *(_QWORD *)(qword_1000DB5C8 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_indexToNextState) = 0;
  swift_beginAccess(v1, v4, 0, 0);
  result = swift_weakLoadStrong(v1);
  if (result)
  {
    v3 = result;
    sub_10006EA2C();
    return swift_release(v3);
  }
  return result;
}

void sub_1000702C4(char a1)
{
  __asm { BR              X10 }
}

id sub_100070300()
{
  uint64_t v0;

  v0 = type metadata accessor for HomePodSetupIconContentViewController(0);
  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v0)), "init");
}

void sub_100070340()
{
  type metadata accessor for HomePodSetupWiFiErrorViewController(0);
  JUMPOUT(0x100070308);
}

void sub_10007034C()
{
  type metadata accessor for HomePodSetupPickerViewController(0);
  JUMPOUT(0x100070308);
}

void sub_100070358()
{
  type metadata accessor for HomePodSetupSiriWelcomeViewController(0);
  JUMPOUT(0x100070308);
}

void sub_100070364()
{
  type metadata accessor for HomePodSetupFeatureListViewController(0);
  JUMPOUT(0x100070308);
}

void sub_100070370()
{
  type metadata accessor for HomePodSetupStereoViewController(0);
  JUMPOUT(0x100070308);
}

void sub_10007037C()
{
  type metadata accessor for HomePodSetupDoneViewController(0);
  JUMPOUT(0x100070308);
}

void sub_100070388()
{
  type metadata accessor for HomePodSetupIntroViewController(0);
  JUMPOUT(0x100070308);
}

void sub_100070394()
{
  type metadata accessor for HomePodSetupProgressViewController(0);
  JUMPOUT(0x100070308);
}

void sub_1000703A0()
{
  type metadata accessor for HomePodSetupSoundRecognitionViewController(0);
  JUMPOUT(0x100070308);
}

void sub_1000703AC()
{
  type metadata accessor for HomePodSetupDisclaimerViewController(0);
  JUMPOUT(0x100070308);
}

void sub_1000703B8()
{
  type metadata accessor for HomePodSetupPersonalRequestsViewController(0);
  JUMPOUT(0x100070308);
}

void sub_1000703C4()
{
  uint64_t v0;
  unsigned __int8 v1;
  id v2;
  uint64_t v3;

  v1 = *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor) + 48)
                + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode);
  v2 = objc_allocWithZone((Class)type metadata accessor for HomePodSetupVisualAuthViewController(0));
  sub_10006044C(v1, v3);
  JUMPOUT(0x10007031CLL);
}

void sub_100070400()
{
  uint64_t v0;

  objc_msgSend(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor) + 80), "skipAudioPasscode");
  type metadata accessor for HomePodSetupPINEntryViewController(0);
  JUMPOUT(0x100070308);
}

void sub_100070428()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v1 = objc_msgSend(objc_allocWithZone((Class)HomePodSetupSiriVoicePreviewer), "init");
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor);
  objc_msgSend(v1, "setSession:", *(_QWORD *)(*(_QWORD *)(v2 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_sfSession));
  v3 = *(_QWORD *)(v2 + 48);
  v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preferredSiriLanguageCode);
  v5 = *(_QWORD *)(v3 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preferredSiriLanguageCode + 8);
  v6 = *(_BYTE *)(v3 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_allowsRandomVoiceSelection);
  objc_allocWithZone((Class)type metadata accessor for HomePodSetupSiriVoiceSelectionViewController(0));
  swift_bridgeObjectRetain(v5);
  sub_100050914(v4, v5, v6, v1);
  JUMPOUT(0x10007031CLL);
}

void sub_1000704CC()
{
  type metadata accessor for HomePodSetupLeftRightViewController(0);
  JUMPOUT(0x100070308);
}

void sub_1000704D8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, objc_super a10, uint64_t a11, uint64_t a12, uint64_t a13, ValueMetadata *a14, unint64_t a15)
{
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  objc_class *v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  uint64_t v39;
  os_log_type_t v40;
  uint8_t *v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  a14 = &type metadata for SharingFeatureFlags;
  a15 = sub_100071F40();
  LOBYTE(a11) = 0;
  v16 = isFeatureEnabled(_:)(&a11);
  sub_10000CDB8(&a11);
  v17 = *(_QWORD *)(v15 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor);
  if ((v16 & 1) == 0)
  {
    v21 = *(_QWORD *)(v17 + 48);
    v23 = *(_QWORD *)(v21 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceGUID);
    v22 = *(_QWORD *)(v21 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceGUID + 8);
    v24 = (uint64_t *)(v21 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceSerialNumber);
    v26 = *v24;
    v25 = v24[1];
    v27 = (objc_class *)type metadata accessor for HomePodSetupAppleMusicViewController(0);
    v28 = (char *)objc_allocWithZone(v27);
    v29 = &v28[OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_presenter];
    *((_QWORD *)v29 + 1) = 0;
    swift_unknownObjectWeakInit(v29, 0);
    v30 = &v28[OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_viewModel];
    v31 = type metadata accessor for HomePodSetupViewModel(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 1, 1, v31);
    *(_QWORD *)&v28[OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_vcAppleMusic] = 0;
    v32 = &v28[OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_deviceGUID];
    *(_QWORD *)v32 = v23;
    *((_QWORD *)v32 + 1) = v22;
    v33 = &v28[OBJC_IVAR____TtC14HDSViewService36HomePodSetupAppleMusicViewController_deviceSerialNumber];
    *(_QWORD *)v33 = v26;
    *((_QWORD *)v33 + 1) = v25;
    v34 = objc_allocWithZone((Class)PRXCardContentView);
    swift_bridgeObjectRetain(v22);
    v35 = objc_msgSend(v34, "init", swift_bridgeObjectRetain(v25).n128_f64[0]);
    a10.receiver = v28;
    a10.super_class = v27;
    objc_msgSendSuper2(&a10, "initWithContentView:", v35);

    goto LABEL_16;
  }
  if (objc_msgSend(*(id *)(v17 + 80), "acceptedMusicTerms"))
  {
    v19 = *(void **)(v17 + 136);
    if (v19)
    {
      v20 = v19;
      goto LABEL_16;
    }
    if (qword_1000D5638 != -1)
      swift_once(&qword_1000D5638, sub_100069F3C);
    v43 = type metadata accessor for Logger(0, v18);
    v44 = sub_10001118C(v43, (uint64_t)qword_1000D7720);
    v38 = Logger.logObject.getter(v44);
    v40 = static os_log_type_t.default.getter(v38, v45);
    if (!os_log_type_enabled(v38, v40))
      goto LABEL_15;
    v41 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v41 = 0;
    v42 = "HomePodSetupPresenter: No marketing item so not showing Music Offer.";
  }
  else
  {
    if (qword_1000D5638 != -1)
      swift_once(&qword_1000D5638, sub_100069F3C);
    v36 = type metadata accessor for Logger(0, v18);
    v37 = sub_10001118C(v36, (uint64_t)qword_1000D7720);
    v38 = Logger.logObject.getter(v37);
    v40 = static os_log_type_t.default.getter(v38, v39);
    if (!os_log_type_enabled(v38, v40))
      goto LABEL_15;
    v41 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v41 = 0;
    v42 = "HomePodSetupPresenter: User did not agree to Apple Music Privacy not showing Music Offer.";
  }
  _os_log_impl((void *)&_mh_execute_header, v38, v40, v42, v41, 2u);
  swift_slowDealloc(v41, -1, -1);
LABEL_15:

LABEL_16:
  JUMPOUT(0x100070320);
}

void sub_1000707AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  Swift::String v17;
  uint64_t v18;
  Swift::String v19;
  Swift::String v20;
  void *object;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t inited;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  _BOOL4 v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  unint64_t v50;
  unint64_t v51;
  int64_t v52;
  unint64_t v53;
  int64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  uint64_t *v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  id v75;
  NSURL *v76;
  void *v77;
  void *v78;
  unint64_t v79;
  Class isa;
  unint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  uint8_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  void (*v93)(char *, uint64_t);
  char *v94;
  NSObject *v95;
  os_log_type_t v96;
  uint8_t *v97;
  char *v98;
  char *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  int64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  _BYTE v113[288];
  uint64_t v114;
  unint64_t v115;

  v1 = sub_10000D604(&qword_1000D5DB8);
  __chkstk_darwin(v1);
  v100 = (char *)&v98 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for URL(0);
  v103 = *(_QWORD *)(v3 - 8);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v98 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v99 = (char *)&v98 - v7;
  v8 = sub_10000D604(&qword_1000D7A38);
  __chkstk_darwin(v8);
  v104 = (char *)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URLComponents(0);
  v106 = *(_QWORD *)(v10 - 8);
  v107 = v10;
  __chkstk_darwin(v10);
  v102 = (char *)&v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = type metadata accessor for URLQueryItem(0);
  v12 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin(v110);
  v111 = (char *)&v98 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v0 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor);
  v15 = objc_msgSend(*(id *)(v14 + 80), "mainError");
  v98 = v6;
  if (v15)
  {
    v16 = v15;
    v114 = 0;
    v115 = 0xE000000000000000;
    _StringGuts.grow(_:)(44);
    v17._countAndFlagsBits = 0xD000000000000028;
    v17._object = (void *)0x80000001000A2240;
    String.append(_:)(v17);
    v112 = (uint64_t)v16;
    v18 = sub_10000D604((uint64_t *)&unk_1000D7090);
    _print_unlocked<A, B>(_:_:)(&v112, &v114, v18, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v19._countAndFlagsBits = 10528;
    v19._object = (void *)0xE200000000000000;
    String.append(_:)(v19);

  }
  else
  {
    v114 = 0;
    v115 = 0xE000000000000000;
    _StringGuts.grow(_:)(40);
    swift_bridgeObjectRelease(v115);
    v114 = 0xD000000000000026;
    v115 = 0x80000001000A21D0;
    LODWORD(v112) = *(_DWORD *)(*(_QWORD *)(v14 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_status);
    v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int32, &protocol witness table for Int32);
    object = v20._object;
    String.append(_:)(v20);
    swift_bridgeObjectRelease(object);
  }
  v22 = v114;
  v23 = v115;
  v24 = sub_10000D604(&qword_1000D7A40);
  inited = swift_initStackObject(v24, v113);
  *(_OWORD *)(inited + 16) = xmmword_10009ABF0;
  strcpy((char *)(inited + 32), "Classification");
  *(_BYTE *)(inited + 47) = -18;
  *(_QWORD *)(inited + 48) = 0x2073756F69726553;
  *(_QWORD *)(inited + 56) = 0xEB00000000677542;
  *(_QWORD *)(inited + 64) = 0x6E656E6F706D6F43;
  *(_QWORD *)(inited + 72) = 0xEB00000000444974;
  *(_QWORD *)(inited + 80) = 0x30323833313231;
  *(_QWORD *)(inited + 88) = 0xE700000000000000;
  strcpy((char *)(inited + 96), "ComponentName");
  *(_WORD *)(inited + 110) = -4864;
  *(_QWORD *)(inited + 112) = 0x69766544656D6F48;
  *(_QWORD *)(inited + 120) = 0xEF70757465536563;
  *(_QWORD *)(inited + 128) = 0xD000000000000010;
  *(_QWORD *)(inited + 136) = 0x80000001000A2200;
  *(_QWORD *)(inited + 144) = 7105601;
  *(_QWORD *)(inited + 152) = 0xE300000000000000;
  *(_QWORD *)(inited + 160) = 0x7364726F7779654BLL;
  *(_QWORD *)(inited + 168) = 0xE800000000000000;
  *(_QWORD *)(inited + 176) = 0x393739343937;
  *(_QWORD *)(inited + 184) = 0xE600000000000000;
  *(_QWORD *)(inited + 192) = 0x6375646F72706552;
  *(_QWORD *)(inited + 200) = 0xEF7974696C696269;
  strcpy((char *)(inited + 208), "I Didn't Try");
  *(_BYTE *)(inited + 221) = 0;
  *(_WORD *)(inited + 222) = -5120;
  *(_QWORD *)(inited + 224) = 0x656C746954;
  *(_QWORD *)(inited + 232) = 0xE500000000000000;
  *(_QWORD *)(inited + 240) = v22;
  *(_QWORD *)(inited + 248) = v23;
  *(_QWORD *)(inited + 256) = 0x656D686361747441;
  *(_QWORD *)(inited + 264) = 0xEB0000000073746ELL;
  v26 = objc_msgSend(*(id *)(v14 + 80), "sysDropSession");
  v27 = objc_msgSend(v26, "fileTransferredSysDiagnosePath");

  v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v30 = v29;

  *(_QWORD *)(inited + 272) = v28;
  *(_QWORD *)(inited + 280) = v30;
  v32 = sub_10000C49C(inited);
  if (qword_1000D5638 == -1)
    goto LABEL_5;
LABEL_55:
  swift_once(&qword_1000D5638, sub_100069F3C);
LABEL_5:
  v33 = type metadata accessor for Logger(0, v31);
  v34 = sub_10001118C(v33, (uint64_t)qword_1000D7720);
  v35 = swift_bridgeObjectRetain_n(v32, 2);
  v105 = v34;
  v36 = Logger.logObject.getter(v35);
  v37 = static os_log_type_t.default.getter();
  v38 = os_log_type_enabled(v36, v37);
  v101 = v3;
  if (v38)
  {
    v39 = (uint8_t *)swift_slowAlloc(12, -1);
    v40 = swift_slowAlloc(32, -1);
    v114 = v40;
    *(_DWORD *)v39 = 136315138;
    v109 = (int64_t)(v39 + 4);
    v41 = swift_bridgeObjectRetain(v32);
    v42 = Dictionary.description.getter(v41, &type metadata for String, &type metadata for String, &protocol witness table for String);
    v44 = v43;
    swift_bridgeObjectRelease(v32);
    v112 = sub_10003EF58(v42, v44, &v114);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v112, v113);
    swift_bridgeObjectRelease_n(v32, 2);
    swift_bridgeObjectRelease(v44);
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "TTR query dict %s", v39, 0xCu);
    swift_arrayDestroy(v40, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v40, -1, -1);
    swift_slowDealloc(v39, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v32, 2);
  }
  v45 = *(_QWORD *)(v32 + 64);
  v108 = v32 + 64;
  v46 = 1 << *(_BYTE *)(v32 + 32);
  v47 = -1;
  if (v46 < 64)
    v47 = ~(-1 << v46);
  v48 = v47 & v45;
  v109 = (unint64_t)(v46 + 63) >> 6;
  swift_bridgeObjectRetain(v32);
  v3 = 0;
  v49 = _swiftEmptyArrayStorage;
  if (v48)
  {
LABEL_11:
    v50 = __clz(__rbit64(v48));
    v48 &= v48 - 1;
    v51 = v50 | (v3 << 6);
    goto LABEL_30;
  }
  while (1)
  {
    v52 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_55;
    }
    if (v52 >= v109)
      goto LABEL_42;
    v53 = *(_QWORD *)(v108 + 8 * v52);
    ++v3;
    if (!v53)
    {
      v3 = v52 + 1;
      if (v52 + 1 >= v109)
        goto LABEL_42;
      v53 = *(_QWORD *)(v108 + 8 * v3);
      if (!v53)
      {
        v3 = v52 + 2;
        if (v52 + 2 >= v109)
          goto LABEL_42;
        v53 = *(_QWORD *)(v108 + 8 * v3);
        if (!v53)
        {
          v3 = v52 + 3;
          if (v52 + 3 >= v109)
            goto LABEL_42;
          v53 = *(_QWORD *)(v108 + 8 * v3);
          if (!v53)
          {
            v3 = v52 + 4;
            if (v52 + 4 >= v109)
              goto LABEL_42;
            v53 = *(_QWORD *)(v108 + 8 * v3);
            if (!v53)
              break;
          }
        }
      }
    }
LABEL_29:
    v48 = (v53 - 1) & v53;
    v51 = __clz(__rbit64(v53)) + (v3 << 6);
LABEL_30:
    v55 = (uint64_t *)(*(_QWORD *)(v32 + 48) + 16 * v51);
    v57 = *v55;
    v56 = v55[1];
    v58 = *(_QWORD *)(v32 + 16);
    swift_bridgeObjectRetain(v56);
    if (v58)
    {
      swift_bridgeObjectRetain(v56);
      v59 = sub_10004A7C0(v57, v56);
      if ((v60 & 1) != 0)
      {
        v61 = (uint64_t *)(*(_QWORD *)(v32 + 56) + 16 * v59);
        v62 = *v61;
        v58 = v61[1];
        swift_bridgeObjectRetain(v58);
      }
      else
      {
        v62 = 0;
        v58 = 0;
      }
      swift_bridgeObjectRelease(v56);
    }
    else
    {
      v62 = 0;
    }
    URLQueryItem.init(name:value:)(v57, v56, v62, v58);
    swift_bridgeObjectRelease(v56);
    swift_bridgeObjectRelease(v58);
    if ((swift_isUniquelyReferenced_nonNull_native(v49) & 1) == 0)
      v49 = (_QWORD *)sub_10004A138(0, v49[2] + 1, 1, (unint64_t)v49);
    v64 = v49[2];
    v63 = v49[3];
    if (v64 >= v63 >> 1)
      v49 = (_QWORD *)sub_10004A138(v63 > 1, v64 + 1, 1, (unint64_t)v49);
    v49[2] = v64 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))((unint64_t)v49+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v64, v111, v110);
    if (v48)
      goto LABEL_11;
  }
  v54 = v52 + 5;
  if (v54 >= v109)
  {
LABEL_42:
    swift_release(v32);
    swift_bridgeObjectRelease(v32);
    v65 = (uint64_t)v104;
    URLComponents.init(string:)(0xD000000000000012, 0x80000001000A2220);
    v67 = v106;
    v66 = v107;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v106 + 48))(v65, 1, v107) == 1)
    {
      swift_bridgeObjectRelease(v49);
      v68 = &qword_1000D7A38;
    }
    else
    {
      v69 = v102;
      (*(void (**)(char *, uint64_t, uint64_t))(v67 + 32))(v102, v65, v66);
      v70 = URLComponents.queryItems.setter(v49);
      v65 = (uint64_t)v100;
      URLComponents.url.getter(v70);
      v71 = v103;
      v72 = v101;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v103 + 48))(v65, 1, v101) != 1)
      {
        v74 = v99;
        (*(void (**)(char *, uint64_t, uint64_t))(v71 + 32))(v99, v65, v72);
        v75 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
        URL._bridgeToObjectiveC()(v76);
        v78 = v77;
        v79 = sub_10000C5BC((uint64_t)_swiftEmptyArrayStorage);
        type metadata accessor for OpenExternalURLOptionsKey(0);
        sub_10000DD98(&qword_1000D5990, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100098E6C);
        isa = Dictionary._bridgeToObjectiveC()().super.isa;
        v81 = v79;
        v82 = v103;
        swift_bridgeObjectRelease(v81);
        objc_msgSend(v75, "openURL:options:completionHandler:", v78, isa, 0);

        v83 = v98;
        v84 = (*(uint64_t (**)(char *, char *, uint64_t))(v82 + 16))(v98, v74, v72);
        v85 = Logger.logObject.getter(v84);
        v86 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v85, v86))
        {
          v87 = (uint8_t *)swift_slowAlloc(12, -1);
          v88 = swift_slowAlloc(32, -1);
          v114 = v88;
          v111 = (char *)&type metadata for Any + 8;
          *(_DWORD *)v87 = 136315138;
          v89 = sub_10000DD98(&qword_1000D7A48, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
          v90 = dispatch thunk of CustomStringConvertible.description.getter(v72, v89);
          v92 = v91;
          v112 = sub_10003EF58(v90, v91, &v114);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v112, v113);
          swift_bridgeObjectRelease(v92);
          v93 = *(void (**)(char *, uint64_t))(v103 + 8);
          v93(v83, v72);
          _os_log_impl((void *)&_mh_execute_header, v85, v86, "HomePodSetupPresenter: Open Radar URL: %s", v87, 0xCu);
          swift_arrayDestroy(v88, 1, v111);
          swift_slowDealloc(v88, -1, -1);
          swift_slowDealloc(v87, -1, -1);

          v94 = v99;
        }
        else
        {

          v93 = *(void (**)(char *, uint64_t))(v82 + 8);
          v93(v83, v72);
          v94 = v74;
        }
        v93(v94, v72);
        v73 = (*(uint64_t (**)(char *, uint64_t))(v106 + 8))(v102, v107);
        goto LABEL_51;
      }
      (*(void (**)(char *, uint64_t))(v67 + 8))(v69, v66);
      v68 = &qword_1000D5DB8;
    }
    v73 = sub_10000DC40(v65, v68);
LABEL_51:
    v95 = Logger.logObject.getter(v73);
    v96 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v95, v96))
    {
      v97 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v97 = 0;
      _os_log_impl((void *)&_mh_execute_header, v95, v96, "<loom:ViewService:matchSubmitRadar> HomePodSetupPresenter: Report Bug", v97, 2u);
      swift_slowDealloc(v97, -1, -1);
    }

    return;
  }
  v53 = *(_QWORD *)(v108 + 8 * v54);
  if (v53)
  {
    v3 = v54;
    goto LABEL_29;
  }
  while (1)
  {
    v3 = v54 + 1;
    if (__OFADD__(v54, 1))
      break;
    if (v3 >= v109)
      goto LABEL_42;
    v53 = *(_QWORD *)(v108 + 8 * v3);
    ++v54;
    if (v53)
      goto LABEL_29;
  }
  __break(1u);
}

uint64_t sub_100071420()
{
  uint64_t v0;

  sub_1000113B8(v0 + 16);
  sub_10000DC40(v0 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_viewModel, (uint64_t *)&unk_1000D6EC0);
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_askSiriStatesPresented));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_router));

  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_remoteViewController));

  return v0;
}

uint64_t sub_1000714B4()
{
  uint64_t v0;

  sub_100071420();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1000714D8()
{
  return type metadata accessor for HomePodSetupPresenter(0);
}

uint64_t type metadata accessor for HomePodSetupPresenter(uint64_t a1)
{
  uint64_t result;

  result = qword_1000D77D0;
  if (!qword_1000D77D0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HomePodSetupPresenter);
  return result;
}

void sub_10007151C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[13];

  v4[0] = &unk_10009AA58;
  sub_100010910(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_10009AA70;
    v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[4] = &unk_10009AA88;
    v4[5] = &unk_10009AAA0;
    v4[6] = &unk_10009AA88;
    v4[7] = &unk_10009AAB8;
    v4[8] = &unk_10009AAB8;
    v4[9] = &unk_10009AAB8;
    v4[10] = &unk_10009AAA0;
    v4[11] = &unk_10009AAA0;
    v4[12] = &unk_10009AAA0;
    swift_updateClassMetadata2(a1, 256, 13, v4, a1 + 80);
  }
}

uint64_t getEnumTagSinglePayload for HomePodSetupState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xC3)
    goto LABEL_17;
  if (a2 + 61 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 61) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 61;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 61;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 61;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x3E;
  v8 = v6 - 62;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for HomePodSetupState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 61 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 61) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xC3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xC2)
    return ((uint64_t (*)(void))((char *)&loc_1000716B0 + 4 * byte_10009A90F[v4]))();
  *a1 = a2 + 61;
  return ((uint64_t (*)(void))((char *)sub_1000716E4 + 4 * byte_10009A90A[v4]))();
}

uint64_t sub_1000716E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000716EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000716F4);
  return result;
}

uint64_t sub_100071700(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100071708);
  *(_BYTE *)result = a2 + 61;
  return result;
}

uint64_t sub_10007170C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100071714(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HomePodSetupState()
{
  return &type metadata for HomePodSetupState;
}

unint64_t sub_100071734()
{
  unint64_t result;

  result = qword_1000D7A30;
  if (!qword_1000D7A30)
  {
    result = swift_getWitnessTable(&unk_10009AB94, &type metadata for HomePodSetupState);
    atomic_store(result, (unint64_t *)&qword_1000D7A30);
  }
  return result;
}

uint64_t sub_100071778()
{
  uint64_t v0;

  v0 = type metadata accessor for DispatchTimeInterval(0);
  sub_1000111E8(v0, qword_1000D7738);
  *(_QWORD *)sub_10001118C(v0, (uint64_t)qword_1000D7738) = 1;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 - 8) + 104))();
}

uint64_t sub_1000717D8(int a1)
{
  uint64_t v1;
  int v2;
  uint64_t result;
  uint64_t v4;
  char v5;

  if (a1 <= 0)
  {
    if (a1 == -71163)
    {
      return 42;
    }
    else if (a1 == -71138)
    {
      return 43;
    }
    else if (a1)
    {
      return 46;
    }
    else
    {
      v4 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor) + 48);
      swift_retain(v4);
      v5 = sub_1000431F0();
      swift_release(v4);
      if ((v5 & 1) != 0)
        return 48;
      else
        return 45;
    }
  }
  else
  {
    v2 = a1 - 301000;
    result = 31;
    switch(v2)
    {
      case 0:
        return result;
      case 4:
        result = 33;
        break;
      case 5:
        result = 35;
        break;
      case 6:
        result = 38;
        break;
      case 10:
        result = 39;
        break;
      case 11:
        result = 36;
        break;
      case 17:
        result = 27;
        break;
      case 18:
        result = 40;
        break;
      case 20:
      case 34:
        result = 34;
        break;
      case 21:
      case 28:
        result = 32;
        break;
      case 24:
        result = 41;
        break;
      case 27:
        result = 37;
        break;
      default:
        return 46;
    }
  }
  return result;
}

uint64_t sub_100071900(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  unsigned __int8 v10;
  int v12;
  uint64_t v13;

  v3 = v2;
  if (qword_1000D5638 != -1)
    swift_once(&qword_1000D5638, sub_100069F3C);
  v5 = type metadata accessor for Logger(0, a2);
  v6 = sub_10001118C(v5, (uint64_t)qword_1000D7720);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v9 = 67109120;
    v12 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "HomePodSetupPresenter: displayError called for state: %d", v9, 8u);
    swift_slowDealloc(v9, -1, -1);
  }

  *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_interactor) + 48)
            + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_status) = a1;
  v10 = 39;
  switch(a1)
  {
    case 301007:
      v10 = 28;
      break;
    case 301010:
      return sub_10006E7B0(v10);
    case 301017:
      v10 = 27;
      break;
    case 301019:
      v10 = 30;
      break;
    case 301022:
      v10 = 29;
      break;
    default:
      v10 = 46;
      break;
  }
  return sub_10006E7B0(v10);
}

uint64_t sub_100071A88(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_10003EF58(0xD00000000000005ELL, 0x80000001000A2350, a3);
  v5 = *a1 + 8;
  v7 = v4;
  result = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v7, &v8);
  *a1 = v5;
  return result;
}

void sub_100071AEC(uint64_t a1, int a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  _QWORD v41[2];
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45[3];

  v8 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v8);
  v10 = (_QWORD *)((char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = type metadata accessor for DispatchPredicate(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (_QWORD *)((char *)v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100012BE8();
  *v14 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  v15 = _dispatchPreconditionTest(_:)(v14);
  (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) != 0)
  {
    v16 = *(_QWORD *)(a1 + 48);
    *(_DWORD *)(v16 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_progressEvent) = a2;
    v17 = *(_QWORD *)(v16 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_siriDialogInfo);
    *(_QWORD *)(v16 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_siriDialogInfo) = a3;
    swift_bridgeObjectRetain(a3);
    swift_bridgeObjectRelease(v17);
    v18 = sub_10007202C(a2);
    v12 = String.init(cString:)(v18);
    a3 = v19;
    if (qword_1000D5638 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1000D5638, sub_100069F3C);
LABEL_3:
  v20 = type metadata accessor for Logger(0, v19);
  v21 = sub_10001118C(v20, (uint64_t)qword_1000D7720);
  v22 = swift_bridgeObjectRetain(a3);
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    v42 = a4;
    v25 = swift_slowAlloc(12, -1);
    v43 = v10;
    v26 = (uint8_t *)v25;
    v27 = swift_slowAlloc(32, -1);
    v41[1] = v21;
    v28 = a2;
    v29 = v12;
    v30 = v27;
    v45[0] = v27;
    *(_DWORD *)v26 = 136315138;
    swift_bridgeObjectRetain(a3);
    v31 = v29;
    a2 = v28;
    v44 = sub_10003EF58(v31, a3, v45);
    a4 = v42;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, v45);
    swift_bridgeObjectRelease_n(a3, 3);
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "HomePodSetupPresenter: Show Siri Welcome screen for event %s", v26, 0xCu);
    swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1, -1);
    v32 = v26;
    v10 = v43;
    swift_slowDealloc(v32, -1, -1);

    if (v28 != 510)
      goto LABEL_5;
LABEL_8:
    v34 = *(_QWORD *)(a1 + 48);
    v35 = swift_retain(v34);
    sub_1000320F4(v35, v10);
    swift_release(v34);
    v36 = type metadata accessor for HomePodSetupViewModel(0);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v10, 0, 1, v36);
    v37 = a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_viewModel;
    swift_beginAccess(a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_viewModel, v45, 33, 0);
    sub_1000727A8((uint64_t)v10, v37);
    swift_endAccess(v45);
    sub_10006A4C0();
    sub_10000DC40((uint64_t)v10, (uint64_t *)&unk_1000D6EC0);
    return;
  }

  v33 = swift_bridgeObjectRelease_n(a3, 2);
  if (a2 == 510)
    goto LABEL_8;
LABEL_5:
  if (a2 == 500)
  {
    sub_10006E7B0(0xCu);
  }
  else
  {
    v38 = Logger.logObject.getter(v33);
    v39 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v40 = 0;
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "HomePodSetupPresenter: Show Siri Welcome screen with an invalid Event Type", v40, 2u);
      swift_slowDealloc(v40, -1, -1);
    }

  }
}

uint64_t sub_100071EF0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = _findStringSwitchCaseWithCache(cases:string:cache:)(&off_1000C1D58, a1, a2, &unk_1000D5688);
  swift_bridgeObjectRelease(a2);
  if (v3 >= 0x3E)
    return 62;
  else
    return v3;
}

unint64_t sub_100071F40()
{
  unint64_t result;

  result = qword_1000D7A50;
  if (!qword_1000D7A50)
  {
    result = swift_getWitnessTable(&unk_10009A31C, &type metadata for SharingFeatureFlags);
    atomic_store(result, (unint64_t *)&qword_1000D7A50);
  }
  return result;
}

uint64_t sub_100071F84()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100071FA8()
{
  uint64_t v0;

  return sub_100070234(v0);
}

uint64_t sub_100071FB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100071FC0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100071FC8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 28, 7);
}

uint64_t sub_100071FEC()
{
  uint64_t v0;

  return sub_1000700FC(*(_QWORD *)(v0 + 16), *(_DWORD *)(v0 + 24));
}

uint64_t sub_100071FF8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100072024()
{
  uint64_t v0;

  return sub_10006FCE4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

const char *sub_10007202C(int a1)
{
  const char *result;

  if (a1 > 299)
  {
    if (a1 <= 799)
    {
      if (a1 <= 519)
      {
        if (a1 <= 410)
        {
          if (a1 <= 399)
          {
            if (a1 == 300)
              return "BackupProgress";
            if (a1 == 310)
              return "SyncProgress";
          }
          else
          {
            switch(a1)
            {
              case 400:
                return "StopSetup";
              case 401:
                return "PINPair";
              case 410:
                return "MigrateStart";
            }
          }
        }
        else if (a1 > 430)
        {
          switch(a1)
          {
            case 431:
              return "eSimExternal2FAStop";
            case 500:
              return "SiriWelcome";
            case 510:
              return "SiriDialogA";
          }
        }
        else
        {
          switch(a1)
          {
            case 411:
              return "MigrateStop";
            case 420:
              return "FileTransferReady";
            case 430:
              return "eSimExternal2FAStart";
          }
        }
      }
      else if (a1 > 559)
      {
        if (a1 > 599)
        {
          switch(a1)
          {
            case 600:
              return "SiriSkipDemo";
            case 700:
              return "StopSetupLEDs";
            case 710:
              return "AudioPasscodeEnded";
          }
        }
        else
        {
          switch(a1)
          {
            case 560:
              return "SiriDialogCMusic";
            case 570:
              return "SiriDialogCNews";
            case 580:
              return "SiriDialogCWeather";
          }
        }
      }
      else if (a1 > 549)
      {
        switch(a1)
        {
          case 550:
            return "SiriDialogBWeather";
          case 555:
            return "SiriDialogBClock";
          case 558:
            return "SiriDialogBMusic";
        }
      }
      else
      {
        switch(a1)
        {
          case 520:
            return "SiriDialogBStart";
          case 530:
            return "SiriDialogBHome";
          case 540:
            return "SiriDialogBNews";
        }
      }
      return "?";
    }
    if (a1 > 999)
    {
      if (a1 <= 1099)
      {
        if (a1 == 1000)
          return "SecureIntentStart";
        if (a1 == 1001)
          return "SecureIntentFinish";
      }
      else
      {
        switch(a1)
        {
          case 1100:
            return "OneTimeCodeDetected";
          case 2000:
            return "DependentStart";
          case 2001:
            return "DependentEnd";
        }
      }
      return "?";
    }
    switch(a1)
    {
      case 900:
        result = "SU-No-SetupScanAttempt";
        break;
      case 901:
        result = "SU-No-SetupStatusUpdate";
        break;
      case 902:
        result = "SU-No-SetupWipeWifi";
        break;
      case 903:
        result = "SU-No-SetupCancelled";
        break;
      case 904:
        result = "SU-No-SetupObliterate";
        break;
      case 905:
        result = "SU-No-SetupCannotCancel";
        break;
      case 906:
        result = "SysDrop AirDrop Event";
        break;
      case 907:
        result = "SysDrop Sysdiagnose Event";
        break;
      case 908:
        result = "SysDrop Cancel Event";
        break;
      case 909:
        result = "File Transfer Progress Event";
        break;
      case 910:
        result = "File Transfer Completed Event";
        break;
      case 911:
        result = "iOSWiFiSetup";
        break;
      case 912:
        result = "HKPrimaryResidentSSIDFetchStart";
        break;
      default:
        switch(a1)
        {
          case 800:
            result = "AuthAccountsStart";
            break;
          case 803:
            result = "AuthAccountsiCloudProgress";
            break;
          case 804:
            result = "AuthAccountsStoreProgress";
            break;
          case 805:
            result = "AuthAccountsGameCenterProgress";
            break;
          default:
            return "?";
        }
        break;
    }
  }
  else if (a1 > 129)
  {
    if (a1 > 249)
    {
      switch(a1)
      {
        case 260:
          result = "TVLSStart";
          break;
        case 261:
        case 262:
        case 263:
        case 265:
        case 266:
        case 267:
        case 268:
        case 269:
        case 271:
        case 273:
        case 275:
          return "?";
        case 264:
          result = "TVLSFinish";
          break;
        case 270:
          result = "TVLSEstimateStart";
          break;
        case 272:
          result = "TVLSEstimateFinal";
          break;
        case 274:
          result = "TVLSEstimateFailed";
          break;
        case 276:
          result = "TVLSTryAgain";
          break;
        case 277:
          result = "TVLSToneBegan";
          break;
        case 278:
          result = "TVLCalStart";
          break;
        case 279:
          result = "TVLCalStep";
          break;
        case 280:
          result = "TVLCalFailed";
          break;
        case 281:
          result = "TVLCalTryAgain";
          break;
        case 282:
          result = "TVLCalFinal";
          break;
        default:
          if (a1 != 250)
            return "?";
          result = "ReportSuccess";
          break;
      }
    }
    else
    {
      if (a1 <= 219)
      {
        if (a1 <= 149)
        {
          if (a1 == 130)
            return "WiFiPoweredOff";
          if (a1 == 140)
            return "RecognizeVoice";
        }
        else
        {
          switch(a1)
          {
            case 150:
              return "SiriForEveryone";
            case 200:
              return "WiFiStart";
            case 210:
              return "ActivationStart";
          }
        }
        return "?";
      }
      switch(a1)
      {
        case 230:
          return "HomeKitStart";
        case 231:
        case 232:
        case 233:
        case 235:
        case 237:
        case 238:
        case 239:
          return "?";
        case 234:
          return "HomeKitSetupStart";
        case 236:
          return "CDPSetupStart";
        case 240:
          return "BuddyStarting";
        case 241:
          return "BuddyProgress";
        case 242:
          return "BuddyFinished";
        default:
          if (a1 == 220)
          {
            result = "iCloudStart";
          }
          else
          {
            if (a1 != 224)
              return "?";
            result = "AppleIDSetupStart";
          }
          break;
      }
    }
  }
  else
  {
    if (a1 <= 79)
    {
      if (a1 > 49)
      {
        if (a1 > 64)
        {
          if (a1 == 65)
            return "SecurityAPCLoopStart";
          if (a1 == 70)
            return "SecurityFinish";
        }
        else
        {
          if (a1 == 50)
            return "PreAuthFinish";
          if (a1 == 60)
            return "SecurityStart";
        }
      }
      else
      {
        if (a1 > 29)
        {
          switch(a1)
          {
            case 30:
              result = "Error";
              break;
            case 31:
              result = "SessionStarted";
              break;
            case 32:
              result = "SessionEnded";
              break;
            case 33:
              result = "SessionSecured";
              break;
            case 35:
              result = "ConnectStart";
              break;
            case 40:
              result = "PreAuthStart";
              break;
            default:
              return "?";
          }
          return result;
        }
        switch(a1)
        {
          case 0:
            return "Invalid";
          case 10:
            return "Start";
          case 20:
            return "Final";
        }
      }
      return "?";
    }
    if (a1 > 119)
    {
      switch(a1)
      {
        case 'x':
          return "CheckingiCloud";
        case 'z':
          return "CheckingAppleMusic";
        case '|':
          return "CheckingAccount";
      }
      return "?";
    }
    switch(a1)
    {
      case 'P':
        result = "BasicConfigStart";
        break;
      case 'Z':
        result = "BasicConfigFinish";
        break;
      case '\\':
        result = "StepStart";
        break;
      case '^':
        result = "StepFinish";
        break;
      case '_':
        result = "PreFinish";
        break;
        result = "SetupFinished";
        break;
      case 'a':
        result = "SetupResumed";
        break;
      case 'b':
        result = "SetupSuspend";
        break;
      case 'c':
        result = "SetupPeerSWUpdate";
        break;
      case 'd':
        result = "Finished";
        break;
      default:
        return "?";
    }
  }
  return result;
}

uint64_t sub_1000727A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000727F0()
{
  _QWORD *v0;

  swift_release(v0[2]);
  if (v0[7])
    sub_10000CDB8(v0 + 4);
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100072824()
{
  uint64_t v0;

  return sub_10006F058(*(_QWORD *)(v0 + 16), (char *)(v0 + 24));
}

uint64_t sub_100072830()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

_BYTE **sub_100072840(_BYTE **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_10003F610(a1, a2, a3, *(_BYTE *)(v3 + 16));
}

uint64_t sub_100072848()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100072858()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100072868()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100072878()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 48))
    sub_10000CDB8((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1000728A4()
{
  uint64_t v0;

  return sub_10006DD58((unsigned __int8 *)(v0 + 16));
}

uint64_t sub_1000728AC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000728BC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000728CC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000728F0()
{
  uint64_t v0;

  return sub_10006665C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1000728F8()
{
  uint64_t v0;

  return sub_10003EEC8(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_100072900@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_100066634(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_100072908(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1000665DC(a1, a2, a3, *(void (**)(uint64_t *__return_ptr))(v3 + 16));
}

uint64_t sub_100072910()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100072934()
{
  uint64_t v0;

  return sub_10006DD08(*(void **)(v0 + 16));
}

uint64_t sub_10007293C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10007294C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10007295C(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_10003EEE8(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

void sub_100072964(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10006A934(v2, a2);
}

uint64_t sub_10007296C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10006AAE0(a1, a2, v2);
}

void sub_1000729AC(double a1, double a2, float a3)
{
  void *v3;
  id v7;
  id v8;
  id v9;
  double v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  Class isa;
  uint64_t v16;

  v7 = objc_msgSend(v3, "widthAnchor");
  v8 = objc_msgSend(v3, "heightAnchor");
  v9 = objc_msgSend(v7, "constraintEqualToAnchor:multiplier:", v8, a1 / a2);

  *(float *)&v10 = a3;
  objc_msgSend(v9, "setPriority:", v10);
  v11 = (void *)objc_opt_self(NSLayoutConstraint);
  v12 = sub_10000D604(&qword_1000D6EE0);
  v13 = swift_allocObject(v12, 40, 7);
  *(_OWORD *)(v13 + 16) = xmmword_100099060;
  *(_QWORD *)(v13 + 32) = v9;
  v16 = v13;
  specialized Array._endMutation()(v13);
  sub_100014934();
  v14 = v9;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v16);
  objc_msgSend(v11, "activateConstraints:", isa);

}

void sub_100072AF8(void *a1, double a2, double a3)
{
  void *v3;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  Class isa;

  objc_msgSend(a1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v3, "addSubview:", a1);
  v7 = (void *)objc_opt_self(NSLayoutConstraint);
  v8 = sub_10000D604(&qword_1000D6EE0);
  v9 = swift_allocObject(v8, 48, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100099270;
  v10 = objc_msgSend(a1, "centerXAnchor");
  v11 = objc_msgSend(v3, "centerXAnchor");
  v12 = objc_msgSend(v10, "constraintEqualToAnchor:constant:", v11, a2);

  *(_QWORD *)(v9 + 32) = v12;
  v13 = objc_msgSend(a1, "centerYAnchor");
  v14 = objc_msgSend(v3, "centerYAnchor");
  v15 = objc_msgSend(v13, "constraintEqualToAnchor:constant:", v14, a3);

  *(_QWORD *)(v9 + 40) = v15;
  specialized Array._endMutation()(v16);
  sub_100014934();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v9);
  objc_msgSend(v7, "activateConstraints:", isa);

}

id sub_100072CAC(void *a1, void *a2, double a3, double a4, double a5, double a6)
{
  void *v6;
  void *v7;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  Class isa;
  uint64_t v39;

  v7 = v6;
  objc_msgSend(a1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v7, "addSubview:", a1);
  v14 = objc_msgSend(a1, "topAnchor");
  v15 = objc_msgSend(a2, "topAnchor");
  v16 = objc_msgSend(v14, "constraintEqualToAnchor:constant:", v15, a3);

  v17 = objc_msgSend(a2, "rightAnchor");
  v18 = objc_msgSend(a1, "rightAnchor");
  v19 = objc_msgSend(v17, "constraintEqualToAnchor:constant:", v18, a6);

  v20 = objc_msgSend(a2, "bottomAnchor");
  v21 = objc_msgSend(a1, "bottomAnchor");
  v22 = objc_msgSend(v20, "constraintEqualToAnchor:constant:", v21, a5);

  v23 = objc_msgSend(a1, "leftAnchor");
  v24 = objc_msgSend(a2, "leftAnchor");
  v25 = objc_msgSend(v23, "constraintEqualToAnchor:constant:", v24, a4);

  v26 = (void *)objc_opt_self(NSLayoutConstraint);
  v27 = sub_10000D604(&qword_1000D6EE0);
  v28 = swift_allocObject(v27, 64, 7);
  *(_OWORD *)(v28 + 16) = xmmword_100099580;
  *(_QWORD *)(v28 + 32) = v16;
  *(_QWORD *)(v28 + 40) = v19;
  *(_QWORD *)(v28 + 48) = v22;
  *(_QWORD *)(v28 + 56) = v25;
  v39 = v28;
  specialized Array._endMutation()(v28);
  sub_100014934();
  v29 = v16;
  v30 = v19;
  v31 = v22;
  v32 = v25;
  v33 = v29;
  v34 = v30;
  v35 = v31;
  v36 = v32;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v26, "activateConstraints:", isa, swift_bridgeObjectRelease(v39).n128_f64[0]);

  return v33;
}

uint64_t sub_100073038(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v11;
  id v12;
  NSURL *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;

  v2 = v1;
  sub_10000D604(&qword_1000D5DB8);
  __chkstk_darwin();
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000731A4(a1, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    return sub_100068274((uint64_t)v5);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  v11 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v12 = objc_msgSend(v11, "userInterfaceStyle");

  if (v12 == (id)2)
    v14 = 1;
  else
    v14 = 2;
  URL._bridgeToObjectiveC()(v13);
  v16 = v15;
  objc_msgSend(v2, "updateViewForAssetType:adjustmentsURL:", v14, v15);

  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1000731A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000D604(&qword_1000D5DB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1000731EC(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void *);
  id v5;

  v4 = *(void (**)(void *))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4(a2);
  swift_release(v3);

}

uint64_t sub_100073240(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000111E8(v2, qword_1000D7A80);
  v3 = sub_10001118C(v2, (uint64_t)qword_1000D7A80);
  if (qword_1000D55C0 != -1)
    swift_once(&qword_1000D55C0, sub_100058090);
  v4 = sub_10001118C(v2, (uint64_t)qword_1000DB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

void sub_1000732D0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char *v11;
  objc_class *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  NSString v31;
  NSString v32;
  NSString v33;
  NSString v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSString v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  NSString v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  Class isa;
  _QWORD v58[2];
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char v62[24];
  objc_super v63;

  v1 = v0;
  v2 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v2);
  v4 = (char *)v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  v6 = *((_QWORD *)v5 - 1);
  v7 = __chkstk_darwin(v5);
  v9 = (_QWORD *)((char *)v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  v11 = (char *)v58 - v10;
  v12 = (objc_class *)type metadata accessor for HomePodSetupPersonalRequestsViewController(0);
  v63.receiver = v1;
  v63.super_class = v12;
  objc_msgSendSuper2(&v63, "viewDidLoad");
  v13 = (uint64_t)&v1[OBJC_IVAR____TtC14HDSViewService42HomePodSetupPersonalRequestsViewController_viewModel];
  swift_beginAccess(&v1[OBJC_IVAR____TtC14HDSViewService42HomePodSetupPersonalRequestsViewController_viewModel], v62, 0, 0);
  sub_100014824(v13, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10001486C((uint64_t)v4);
    if (qword_1000D5648 != -1)
      swift_once(&qword_1000D5648, sub_100073240);
    v15 = type metadata accessor for Logger(0, v14);
    v16 = sub_10001118C(v15, (uint64_t)qword_1000D7A80);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "HomePodSetupPersonalRequestsViewController: viewDidLoad failed because viewModel not set.", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

  }
  else
  {
    sub_1000148AC((uint64_t)v4, (uint64_t)v11);
    if (qword_1000D5648 != -1)
      swift_once(&qword_1000D5648, sub_100073240);
    v21 = type metadata accessor for Logger(0, v20);
    sub_10001118C(v21, (uint64_t)qword_1000D7A80);
    v22 = sub_1000111A4((uint64_t)v11, (uint64_t)v9);
    v23 = Logger.logObject.getter(v22);
    v25 = static os_log_type_t.default.getter(v23, v24);
    if (os_log_type_enabled(v23, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(12, -1);
      v27 = swift_slowAlloc(32, -1);
      v61 = v27;
      *(_DWORD *)v26 = 136315138;
      v58[1] = v26 + 4;
      v59 = v11;
      v28 = *v9;
      v29 = v9[1];
      swift_bridgeObjectRetain(v29);
      v60 = sub_10003EF58(v28, v29, &v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);
      v30 = v29;
      v11 = v59;
      swift_bridgeObjectRelease(v30);
      sub_1000148F0((uint64_t)v9);
      _os_log_impl((void *)&_mh_execute_header, v23, v25, "HomePodSetupPersonalRequestsViewController: viewDidLoad with title %s", v26, 0xCu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v26, -1, -1);
    }
    else
    {
      sub_1000148F0((uint64_t)v9);
    }

    sub_100073930();
    sub_100074B44((uint64_t)v11);
    if ((v11[v5[18]] & 2) == 0 && *(_QWORD *)&v11[v5[19] + 8])
    {
      v31 = String._bridgeToObjectiveC()();
      v32 = String._bridgeToObjectiveC()();
      v33 = String._bridgeToObjectiveC()();
      v34 = String._bridgeToObjectiveC()();
      v35 = objc_msgSend(v1, "dismissalConfirmationActionWithTitle:message:confirmButtonTitle:cancelButtonTitle:", v31, v32, v33, v34);

      objc_msgSend(v1, "setDismissButtonAction:", v35);
    }
    v36 = *(_QWORD *)&v11[v5[10]];
    v37 = swift_allocObject(&unk_1000C4ED0, 24, 7);
    swift_unknownObjectWeakInit(v37 + 16, v1);
    swift_bridgeObjectRetain(v36);
    sub_10007E6FC(v38, (uint64_t)sub_10007780C, v37);
    swift_bridgeObjectRelease(v36);
    swift_release(v37);
    if (SFDeviceClassCodeGet(v39, v40) == 1)
    {
      v41 = String._bridgeToObjectiveC()();
      v42 = sub_100006354(v41);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
      v44 = v43;

      v45 = String._bridgeToObjectiveC()();
      objc_msgSend(v1, "setBottomTrayTitle:", v45, swift_bridgeObjectRelease(v44).n128_f64[0]);

    }
    v46 = objc_msgSend(v1, "contentView");
    v47 = objc_msgSend(v46, "mainContentGuide");

    v48 = objc_msgSend(v1, "tableView");
    v49 = objc_msgSend(v48, "bottomAnchor");

    v50 = objc_msgSend(v47, "bottomAnchor");
    v51 = objc_msgSend(v49, "constraintEqualToAnchor:constant:", v50, -10.0);

    v52 = (void *)objc_opt_self(NSLayoutConstraint);
    v53 = sub_10000D604(&qword_1000D6EE0);
    v54 = swift_allocObject(v53, 40, 7);
    *(_OWORD *)(v54 + 16) = xmmword_100099060;
    *(_QWORD *)(v54 + 32) = v51;
    v61 = v54;
    specialized Array._endMutation()(v54);
    v55 = v61;
    sub_100035CA4(0, (unint64_t *)&qword_1000D7080, NSLayoutConstraint_ptr);
    v56 = v51;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v52, "activateConstraints:", isa, swift_bridgeObjectRelease(v55).n128_f64[0]);

    sub_1000148F0((uint64_t)v11);
  }
}

void sub_100073930()
{
  void *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  NSString v18;
  id v19;
  void *v20;
  id v21;
  uint64_t inited;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  NSString v27;
  NSString v28;
  id v29;
  NSString v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  id v36;
  NSString v37;
  NSString v38;
  id v39;
  NSString v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  id v46;
  NSString v47;
  NSString v48;
  id v49;
  id v50;
  NSString v51;
  id v52;
  id v53;
  uint64_t v54;
  unint64_t v55;
  id v56;
  NSString v57;
  NSString v58;
  id v59;
  id v60;
  id v61;
  unint64_t v62;
  id v63;
  uint64_t v64;
  void *v65;
  unint64_t v66;
  uint64_t v67;
  id v68;
  void *v69;
  unint64_t v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  char v74[72];
  char v75[72];
  char v76[72];
  uint64_t v77;
  unint64_t v78;
  char v79[80];

  v1 = sub_10007506C(0xD000000000000022, 0x80000001000A2680);
  if (v2)
    v3 = v1;
  else
    v3 = 0;
  if (v2)
    v4 = v2;
  else
    v4 = 0xE000000000000000;
  v5 = sub_10007506C(0xD000000000000022, 0x80000001000A26B0);
  if (v6)
    v7 = v5;
  else
    v7 = 0;
  if (v6)
    v8 = v6;
  else
    v8 = 0xE000000000000000;
  v62 = v8;
  v64 = v7;
  v61 = v0;
  v9 = sub_10007506C(0xD000000000000023, 0x80000001000A26E0);
  if (v10)
    v11 = v9;
  else
    v11 = 0;
  if (v10)
    v12 = v10;
  else
    v12 = 0xE000000000000000;
  v66 = v12;
  v67 = v11;
  v13 = sub_10007506C(0xD00000000000001FLL, 0x80000001000A2710);
  if (v14)
    v15 = v13;
  else
    v15 = 0;
  if (v14)
    v16 = v14;
  else
    v16 = 0xE000000000000000;
  v70 = v16;
  v71 = v15;
  v17 = objc_allocWithZone((Class)PRXFeatureIcon);
  v18 = String._bridgeToObjectiveC()();
  v19 = objc_msgSend(v17, "initWithSystemImageNamed:", v18);

  v20 = (void *)objc_opt_self(UIColor);
  v21 = objc_msgSend(v20, "systemRedColor");
  objc_msgSend(v19, "setPlatterColor:", v21);

  v73 = sub_10000D604((uint64_t *)&unk_1000D7B70);
  inited = swift_initStackObject(v73, v79);
  *(_OWORD *)(inited + 16) = xmmword_100099220;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v23 = sub_100035088();
  *(_QWORD *)(inited + 64) = v23;
  *(_QWORD *)(inited + 32) = v3;
  *(_QWORD *)(inited + 40) = v4;
  v77 = 0;
  v78 = 0xE000000000000000;
  sub_1000340CC(inited, &v77, 0x535F4445544F5551, 0xED0000474E495254, 16421, 0xE200000000000000);
  swift_setDeallocating(inited);
  v24 = sub_10000D604(&qword_1000D61B0);
  swift_arrayDestroy(inited + 32, 1, v24);
  v25 = v78;
  v26 = v19;
  v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v25);
  v28 = String._bridgeToObjectiveC()();
  v72 = (id)objc_opt_self(PRXFeature);
  v69 = v26;
  v68 = objc_msgSend(v72, "featureWithTitle:detailText:icon:", v27, v28, v26);

  v29 = objc_allocWithZone((Class)PRXFeatureIcon);
  v30 = String._bridgeToObjectiveC()();
  v31 = objc_msgSend(v29, "initWithSystemImageNamed:", v30);

  v32 = objc_msgSend(v20, "systemBlueColor");
  objc_msgSend(v31, "setPlatterColor:", v32);

  v33 = swift_initStackObject(v73, v76);
  *(_OWORD *)(v33 + 16) = xmmword_100099220;
  *(_QWORD *)(v33 + 56) = &type metadata for String;
  *(_QWORD *)(v33 + 64) = v23;
  *(_QWORD *)(v33 + 32) = v64;
  *(_QWORD *)(v33 + 40) = v62;
  v77 = 0;
  v78 = 0xE000000000000000;
  sub_1000340CC(v33, &v77, 0x535F4445544F5551, 0xED0000474E495254, 16421, 0xE200000000000000);
  swift_setDeallocating(v33);
  v34 = v24;
  swift_arrayDestroy(v33 + 32, 1, v24);
  v35 = v78;
  v36 = v31;
  v37 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v35);
  v38 = String._bridgeToObjectiveC()();
  v65 = v36;
  v63 = objc_msgSend(v72, "featureWithTitle:detailText:icon:", v37, v38, v36);

  v39 = objc_allocWithZone((Class)PRXFeatureIcon);
  v40 = String._bridgeToObjectiveC()();
  v41 = objc_msgSend(v39, "initWithSystemImageNamed:", v40);

  v42 = objc_msgSend(v20, "systemYellowColor");
  objc_msgSend(v41, "setPlatterColor:", v42);

  v43 = swift_initStackObject(v73, v75);
  *(_OWORD *)(v43 + 16) = xmmword_100099220;
  *(_QWORD *)(v43 + 56) = &type metadata for String;
  *(_QWORD *)(v43 + 64) = v23;
  *(_QWORD *)(v43 + 32) = v67;
  *(_QWORD *)(v43 + 40) = v66;
  v77 = 0;
  v78 = 0xE000000000000000;
  sub_1000340CC(v43, &v77, 0x535F4445544F5551, 0xED0000474E495254, 16421, 0xE200000000000000);
  swift_setDeallocating(v43);
  v44 = v34;
  swift_arrayDestroy(v43 + 32, 1, v34);
  v45 = v78;
  v46 = v41;
  v47 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v45);
  v48 = String._bridgeToObjectiveC()();
  v49 = objc_msgSend(v72, "featureWithTitle:detailText:icon:", v47, v48, v46);

  v50 = objc_allocWithZone((Class)PRXFeatureIcon);
  v51 = String._bridgeToObjectiveC()();
  v52 = objc_msgSend(v50, "initWithSystemImageNamed:", v51);

  v53 = objc_msgSend(v20, "systemGreenColor");
  objc_msgSend(v52, "setPlatterColor:", v53);

  v54 = swift_initStackObject(v73, v74);
  *(_OWORD *)(v54 + 16) = xmmword_100099220;
  *(_QWORD *)(v54 + 56) = &type metadata for String;
  *(_QWORD *)(v54 + 64) = v23;
  *(_QWORD *)(v54 + 32) = v71;
  *(_QWORD *)(v54 + 40) = v70;
  v77 = 0;
  v78 = 0xE000000000000000;
  sub_1000340CC(v54, &v77, 0x535F4445544F5551, 0xED0000474E495254, 16421, 0xE200000000000000);
  swift_setDeallocating(v54);
  swift_arrayDestroy(v54 + 32, 1, v44);
  v55 = v78;
  v56 = v52;
  v57 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v55);
  v58 = String._bridgeToObjectiveC()();
  v59 = objc_msgSend(v72, "featureWithTitle:detailText:icon:", v57, v58, v56);

  v60 = objc_msgSend(v61, "tableView");
  objc_msgSend(v60, "setSeparatorStyle:", 0);

}

void sub_100074140(char *a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t Strong;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18[3];

  v2 = *a1;
  v3 = a2 + 16;
  if (qword_1000D5648 != -1)
    swift_once(&qword_1000D5648, sub_100073240);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10001118C(v4, (uint64_t)qword_1000D7A80);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v18[0] = v10;
    *(_DWORD *)v9 = 136315138;
    v11 = sub_10000E9EC(v2);
    v13 = v12;
    v17 = sub_10003EF58(v11, v12, v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, v18);
    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "HomePodSetupPersonalRequestsViewController: User tapped on button: %s", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }

  swift_beginAccess(v3, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v16 = (void *)Strong;
    sub_1000742EC(v2, v15);

  }
}

void sub_1000742EC(char a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  os_log_type_t v15;
  uint8_t *v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  uint64_t v29;
  uint64_t v30;
  uint8_t *v31;
  const char *v32;
  uint64_t Strong;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[48];
  _OWORD v37[2];
  uint64_t v38;
  __int128 aBlock;
  __int128 v40;
  __int128 v41;

  v3 = v2;
  if (a1 == 2)
  {
    if (qword_1000D5648 != -1)
      swift_once(&qword_1000D5648, sub_100073240);
    v26 = type metadata accessor for Logger(0, a2);
    v27 = sub_10001118C(v26, (uint64_t)qword_1000D7A80);
    v28 = Logger.logObject.getter(v27);
    LOBYTE(v30) = static os_log_type_t.default.getter(v28, v29);
    if (!os_log_type_enabled(v28, (os_log_type_t)v30))
      goto LABEL_17;
    v31 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v31 = 0;
    v32 = "PersonalRequests Disabled";
LABEL_16:
    _os_log_impl((void *)&_mh_execute_header, v28, (os_log_type_t)v30, v32, v31, 2u);
    swift_slowDealloc(v31, -1, -1);
LABEL_17:

    goto LABEL_18;
  }
  if (a1 != 1)
    return;
  if (qword_1000D5648 != -1)
    swift_once(&qword_1000D5648, sub_100073240);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10001118C(v4, (uint64_t)qword_1000D7A80);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "PersonalRequests Agree button", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  v12 = SFDeviceClassCodeGet(v10, v11);
  if ((_DWORD)v12 == 1)
  {
    v13 = Logger.logObject.getter(v12);
    v15 = static os_log_type_t.default.getter(v13, v14);
    if (os_log_type_enabled(v13, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v15, "PersonalRequests get me device", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }

    v17 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue");
    v18 = objc_allocWithZone((Class)FMFSession);
    v3 = v2;
    v19 = objc_msgSend(v18, "initWithDelegate:delegateQueue:", v3, v17);

    if (v19)
    {
      v21 = swift_allocObject(&unk_1000C4EF8, 32, 7);
      *(_QWORD *)(v21 + 16) = v3;
      *(_QWORD *)(v21 + 24) = v19;
      *(_QWORD *)&v41 = sub_100077814;
      *((_QWORD *)&v41 + 1) = v21;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      *(_QWORD *)&v40 = sub_10007681C;
      *((_QWORD *)&v40 + 1) = &unk_1000C4F10;
      v22 = _Block_copy(&aBlock);
      v23 = *((_QWORD *)&v41 + 1);
      v24 = v3;
      v25 = v19;
      objc_msgSend(v25, "getActiveLocationSharingDevice:", v22, swift_release(v23).n128_f64[0]);
      _Block_release(v22);

      return;
    }
    v28 = Logger.logObject.getter(v20);
    v30 = static os_log_type_t.default.getter(v28, v35);
    if (!os_log_type_enabled(v28, (os_log_type_t)v30))
      goto LABEL_17;
    v31 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v31 = 0;
    v32 = "PersonalRequests FMFSession nil";
    goto LABEL_16;
  }
LABEL_18:
  Strong = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC14HDSViewService42HomePodSetupPersonalRequestsViewController_presenter]);
  if (Strong)
  {
    v34 = Strong;
    v38 = 0;
    memset(v37, 0, sizeof(v37));
    memset(&v36[8], 0, 40);
    v36[0] = 2;
    sub_100011340((uint64_t)v37, (uint64_t)&v36[8], &qword_1000D6ED0);
    aBlock = *(_OWORD *)v36;
    v40 = *(_OWORD *)&v36[16];
    v41 = *(_OWORD *)&v36[32];
    sub_10006B04C((char *)&aBlock);
    swift_unknownObjectRelease(v34);
    sub_100011384((uint64_t)&aBlock);
  }
}

uint64_t sub_1000746F4(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  objc_class *v20;
  uint64_t result;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD aBlock[5];
  uint64_t v42;
  objc_super v43;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v39 = *(_QWORD *)(v4 - 8);
  v40 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v37 = *(_QWORD *)(v7 - 8);
  v38 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchTimeInterval(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v36 = type metadata accessor for DispatchTime(0);
  v14 = *(_QWORD *)(v36 - 8);
  v15 = __chkstk_darwin(v36);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v35 - v18;
  v20 = (objc_class *)type metadata accessor for HomePodSetupPersonalRequestsViewController(0);
  v43.receiver = v2;
  v43.super_class = v20;
  objc_msgSendSuper2(&v43, "viewDidAppear:", a1 & 1);
  result = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC14HDSViewService42HomePodSetupPersonalRequestsViewController_presenter]);
  if (result)
  {
    v22 = result;
    sub_10006EB30();
    result = swift_unknownObjectRelease(v22);
  }
  if (qword_1000D5530 != -1)
    result = swift_once(&qword_1000D5530, sub_100036860);
  if (*(_QWORD *)(*(_QWORD *)(qword_1000DB5C8
                             + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_automationStepResults)
                 + 16)
    || *(_BYTE *)(qword_1000DB5C8 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_alwaysSelectDefault) == 1)
  {
    static DispatchTime.now()();
    *v13 = 1;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for DispatchTimeInterval.seconds(_:), v10);
    + infix(_:_:)(v17, v13);
    (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
    v23 = *(void (**)(char *, uint64_t))(v14 + 8);
    v24 = v36;
    v23(v17, v36);
    sub_100035CA4(0, (unint64_t *)&qword_1000D7B50, OS_dispatch_queue_ptr);
    v25 = (void *)static OS_dispatch_queue.main.getter();
    v26 = swift_allocObject(&unk_1000C4E80, 24, 7);
    *(_QWORD *)(v26 + 16) = v2;
    aBlock[4] = sub_1000777C8;
    v42 = v26;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10007C6B4;
    aBlock[3] = &unk_1000C4E98;
    v27 = _Block_copy(aBlock);
    v28 = v42;
    v29 = v2;
    swift_release(v28);
    static DispatchQoS.unspecified.getter(v30);
    aBlock[0] = _swiftEmptyArrayStorage;
    v31 = sub_100012C2C();
    v32 = sub_10000D604((uint64_t *)&unk_1000D7B60);
    v33 = sub_100012C74();
    v34 = v40;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v32, v33, v40, v31);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v19, v9, v6, v27);
    _Block_release(v27);

    (*(void (**)(char *, uint64_t))(v39 + 8))(v6, v34);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v9, v38);
    return ((uint64_t (*)(char *, uint64_t))v23)(v19, v24);
  }
  return result;
}

uint64_t sub_100074A6C(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  _BYTE v3[48];
  _OWORD v4[2];
  uint64_t v5;
  _OWORD v6[3];

  result = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC14HDSViewService42HomePodSetupPersonalRequestsViewController_presenter);
  if (result)
  {
    v2 = result;
    v5 = 0;
    memset(v4, 0, sizeof(v4));
    memset(&v3[8], 0, 40);
    v3[0] = 1;
    sub_100011340((uint64_t)v4, (uint64_t)&v3[8], &qword_1000D6ED0);
    v6[0] = *(_OWORD *)v3;
    v6[1] = *(_OWORD *)&v3[16];
    v6[2] = *(_OWORD *)&v3[32];
    sub_10006B04C((char *)v6);
    swift_unknownObjectRelease(v2);
    return sub_100011384((uint64_t)v6);
  }
  return result;
}

void sub_100074B44(uint64_t a1)
{
  _BYTE *v1;
  NSString v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  NSString v13;
  id v14;
  void *v15;
  void *v16;

  if ((v1[OBJC_IVAR____TtC14HDSViewService42HomePodSetupPersonalRequestsViewController_isConfigured] & 1) == 0)
  {
    v1[OBJC_IVAR____TtC14HDSViewService42HomePodSetupPersonalRequestsViewController_isConfigured] = 1;
    v3 = String._bridgeToObjectiveC()();
    objc_msgSend(v1, "setTitle:", v3);

    sub_100074CD0();
    v5 = v4;
    v6 = String._bridgeToObjectiveC()();
    objc_msgSend(v1, "setSubtitle:", v6, swift_bridgeObjectRelease(v5).n128_f64[0]);

    v7 = type metadata accessor for HomePodSetupViewModel(0);
    objc_msgSend(v1, "setDismissalType:", *(_QWORD *)(a1 + *(int *)(v7 + 72)));
    v8 = (uint64_t *)(a1 + *(int *)(v7 + 28));
    v9 = *v8;
    v10 = v8[1];
    v11 = HIBYTE(v10) & 0xF;
    if ((v10 & 0x2000000000000000) == 0)
      v11 = v9 & 0xFFFFFFFFFFFFLL;
    if (v11)
    {
      v12 = objc_msgSend(objc_allocWithZone((Class)PRXLabel), "initWithStyle:", 1);
      v13 = String._bridgeToObjectiveC()();
      objc_msgSend(v12, "setText:", v13);

      objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v14 = objc_msgSend(v1, "view");
      if (v14)
      {
        v15 = v14;
        objc_msgSend(v14, "addSubview:", v12);

        v16 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService42HomePodSetupPersonalRequestsViewController_bodyLabel];
        *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService42HomePodSetupPersonalRequestsViewController_bodyLabel] = v12;

      }
      else
      {
        __break(1u);
      }
    }
  }
}

uint64_t sub_100074CD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  char v9;
  unint64_t v10;
  NSString v11;
  id v12;
  uint64_t v13;
  _BYTE v16[24];

  v1 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  v2 = __chkstk_darwin(v1);
  v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (SFDeviceClassCodeGet(v2, v5) == 1)
  {
    v6 = v0 + OBJC_IVAR____TtC14HDSViewService42HomePodSetupPersonalRequestsViewController_viewModel;
    swift_beginAccess(v6, v16, 0, 0);
    sub_100014824(v6, (uint64_t)v4);
    v7 = type metadata accessor for HomePodSetupViewModel(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v4, 1, v7))
    {
      sub_10001486C((uint64_t)v4);
LABEL_7:
      v8 = "PERSONAL_REQUESTS_INFO_NA_HOMEPOD";
      goto LABEL_8;
    }
    v9 = v4[*(int *)(v7 + 168)];
    sub_10001486C((uint64_t)v4);
    if ((v9 & 1) == 0)
      goto LABEL_7;
    v8 = "PERSONAL_REQUESTS_INFO_NA_VOICE_HOMEPOD";
  }
  else
  {
    v8 = "PERSONAL_REQUESTS_INFO_NA_IPAD_HOMEPOD";
  }
LABEL_8:
  v10 = (unint64_t)(v8 - 32) | 0x8000000000000000;
  v11 = String._bridgeToObjectiveC()();
  v12 = sub_100006354(v11);

  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  swift_bridgeObjectRelease(v10);

  return v13;
}

id sub_100074EE0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupPersonalRequestsViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100074F5C()
{
  return type metadata accessor for HomePodSetupPersonalRequestsViewController(0);
}

uint64_t type metadata accessor for HomePodSetupPersonalRequestsViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1000D7B30;
  if (!qword_1000D7B30)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HomePodSetupPersonalRequestsViewController);
  return result;
}

void sub_100074FA0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_10009AC30;
  sub_100010910(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_10009AC48;
    v4[3] = &unk_10009AC60;
    swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
  }
}

uint64_t sub_10007502C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService42HomePodSetupPersonalRequestsViewController_presenter + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease(a1);
}

void sub_100075064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10007759C(a3);
}

uint64_t sub_10007506C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  id v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  NSString v22;
  unint64_t v23;
  NSString v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  id v30;
  NSString v31;
  double v32;
  NSString v33;
  id v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[2];
  _BYTE v40[24];

  v5 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v36 - v9;
  v11 = v2 + OBJC_IVAR____TtC14HDSViewService42HomePodSetupPersonalRequestsViewController_viewModel;
  swift_beginAccess(v2 + OBJC_IVAR____TtC14HDSViewService42HomePodSetupPersonalRequestsViewController_viewModel, v40, 0, 0);
  sub_100014824(v11, (uint64_t)v10);
  v12 = type metadata accessor for HomePodSetupViewModel(0);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48);
  v14 = 0;
  if (!v13(v10, 1, v12))
  {
    v14 = *(_QWORD *)&v10[*(int *)(v12 + 176) + 8];
    swift_bridgeObjectRetain(v14);
  }
  sub_10001486C((uint64_t)v10);
  v15 = objc_msgSend((id)objc_opt_self(AFLocalization), "sharedInstance");
  sub_100014824(v11, (uint64_t)v8);
  if (v13(v8, 1, v12))
  {
    sub_10001486C((uint64_t)v8);
  }
  else
  {
    v16 = v8[*(int *)(v12 + 172)];
    sub_10001486C((uint64_t)v8);
    if (v16 == 1)
    {
      v17 = 0x49535F5453554A5FLL;
      v18 = 0xEA00000000004952;
      goto LABEL_8;
    }
  }
  v17 = 0x5249535F5945485FLL;
  v18 = 0xE900000000000049;
LABEL_8:
  v39[0] = v17;
  v39[1] = v18;
  v37 = a1;
  v38 = a2;
  swift_bridgeObjectRetain(a2);
  v37 = String.init<A>(_:)(&v37, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
  v38 = v19;
  String.append<A>(contentsOf:)(v39, &type metadata for String, &protocol witness table for String);
  v20 = v38;
  if (!v15)
  {
    swift_bridgeObjectRelease(v38);
    swift_bridgeObjectRelease(v14);
    return 0;
  }
  v21 = v15;
  v22 = String._bridgeToObjectiveC()();
  v23 = swift_bridgeObjectRelease(v20).n128_u64[0];
  if (v14)
  {
    swift_bridgeObjectRetain(v14);
    v24 = String._bridgeToObjectiveC()();
    v23 = swift_bridgeObjectRelease(v14).n128_u64[0];
  }
  else
  {
    v24 = 0;
  }
  v25 = objc_msgSend(v21, "localizedUIUtteranceForKey:languageCode:", v22, v24, *(double *)&v23);

  if (!v25)
  {
    v28 = 0;
LABEL_19:
    v30 = v21;
    v31 = String._bridgeToObjectiveC()();
    if (v14)
    {
      v33 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v32 = swift_bridgeObjectRelease(v14).n128_u64[0];
    }
    else
    {
      v33 = 0;
    }
    v34 = objc_msgSend(v30, "localizedUIUtteranceForKey:languageCode:", v31, v33, v32);

    if (v34)
    {
      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
      swift_bridgeObjectRelease(v28);

      return v26;
    }
    swift_bridgeObjectRelease(v28);

    return 0;
  }
  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  v28 = v27;

  v29 = HIBYTE(v28) & 0xF;
  if ((v28 & 0x2000000000000000) == 0)
    v29 = v26 & 0xFFFFFFFFFFFFLL;
  if (!v29)
    goto LABEL_19;

  swift_bridgeObjectRelease(v14);
  return v26;
}

uint64_t sub_1000753F4(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  _QWORD *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[5];
  _QWORD *v31;

  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v29 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v27 = *(_QWORD *)(v11 - 8);
  v28 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100035CA4(0, (unint64_t *)&qword_1000D7B50, OS_dispatch_queue_ptr);
  v14 = (void *)static OS_dispatch_queue.main.getter();
  v15 = (_QWORD *)swift_allocObject(&unk_1000C4F48, 48, 7);
  v15[2] = a2;
  v15[3] = a3;
  v15[4] = a1;
  v15[5] = a4;
  aBlock[4] = sub_100077858;
  v31 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10007C6B4;
  aBlock[3] = &unk_1000C4F60;
  v16 = _Block_copy(aBlock);
  v17 = v31;
  swift_errorRetain(a2);
  v18 = a1;
  v19 = a4;
  v20 = a3;
  swift_release(v17);
  static DispatchQoS.unspecified.getter(v21);
  aBlock[0] = _swiftEmptyArrayStorage;
  v22 = sub_100012C2C();
  v23 = sub_10000D604((uint64_t *)&unk_1000D7B60);
  v24 = sub_100012C74();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v23, v24, v8, v22);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v10, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v13, v28);
}

void sub_1000755F4(uint64_t a1, uint64_t a2, id a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t Strong;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  uint64_t v31;
  os_log_type_t v32;
  uint8_t *v33;
  _BYTE v34[48];
  _OWORD v35[2];
  uint64_t v36;
  _OWORD v37[3];

  if (a1)
  {
    swift_errorRetain(a1);
    if (qword_1000D5648 != -1)
      swift_once(&qword_1000D5648, sub_100073240);
    v7 = type metadata accessor for Logger(0, v6);
    sub_10001118C(v7, (uint64_t)qword_1000D7A80);
    swift_errorRetain(a1);
    v8 = swift_errorRetain(a1);
    v9 = Logger.logObject.getter(v8);
    v11 = static os_log_type_t.default.getter(v9, v10);
    if (os_log_type_enabled(v9, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v13 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v12 = 138412290;
      swift_errorRetain(a1);
      v14 = _swift_stdlib_bridgeErrorToNSError(a1);
      *(_QWORD *)&v37[0] = v14;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v37, (char *)v37 + 8);
      *v13 = v14;
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, v9, v11, "### PersonalRequests get me device failed: %@\n", v12, 0xCu);
      v15 = sub_10000D604(&qword_1000D5CC8);
      swift_arrayDestroy(v13, 1, v15);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);
    }
    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);
    }

    Strong = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC14HDSViewService42HomePodSetupPersonalRequestsViewController_presenter);
    if (Strong)
    {
      v26 = Strong;
      v36 = 0;
      memset(v35, 0, sizeof(v35));
      memset(&v34[8], 0, 40);
      v34[0] = 2;
      sub_100011340((uint64_t)v35, (uint64_t)&v34[8], &qword_1000D6ED0);
      v37[0] = *(_OWORD *)v34;
      v37[1] = *(_OWORD *)&v34[16];
      v37[2] = *(_OWORD *)&v34[32];
      sub_10006B04C((char *)v37);
      swift_unknownObjectRelease(v26);
      swift_errorRelease(a1);
      sub_100011384((uint64_t)v37);
    }
    else
    {
      swift_errorRelease(a1);
    }
  }
  else if (a3)
  {
    objc_msgSend(a3, "isThisDevice");
    if (qword_1000D5648 != -1)
      swift_once(&qword_1000D5648, sub_100073240);
    v17 = type metadata accessor for Logger(0, v16);
    v18 = sub_10001118C(v17, (uint64_t)qword_1000D7A80);
    v19 = Logger.logObject.getter(v18);
    v21 = static os_log_type_t.default.getter(v19, v20);
    if (os_log_type_enabled(v19, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v21, "PersonalRequests me device is this device\n", v22, 2u);
      swift_slowDealloc(v22, -1, -1);
    }

    sub_1000759C4(v23, v24);
  }
  else
  {
    if (qword_1000D5648 != -1)
      swift_once(&qword_1000D5648, sub_100073240);
    v28 = type metadata accessor for Logger(0, a2);
    v29 = sub_10001118C(v28, (uint64_t)qword_1000D7A80);
    v30 = Logger.logObject.getter(v29);
    v32 = static os_log_type_t.default.getter(v30, v31);
    if (os_log_type_enabled(v30, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v33 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v32, "PersonalRequests ask user to switch me device", v33, 2u);
      swift_slowDealloc(v33, -1, -1);
    }

    sub_1000760C0(0, a4);
  }
}

void sub_1000759C4(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  id v10;
  id v11;
  void *v12;
  unsigned int v13;
  NSObject *v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t Strong;
  uint64_t v19;
  NSString v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  NSString v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  NSString v32;
  NSString v33;
  id v34;
  NSString v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  NSString v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  id v45;
  NSString v46;
  void *v47;
  void *v48;
  id v49;
  NSString v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  NSString v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  id v60;
  id v61;
  NSString v62;
  void *v63;
  id v64;
  id v65;
  _BYTE v66[48];
  _OWORD v67[2];
  uint64_t v68;
  __int128 aBlock;
  __int128 v70;
  __int128 v71;

  v3 = v2;
  if (qword_1000D5648 != -1)
    swift_once(&qword_1000D5648, sub_100073240);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10001118C(v4, (uint64_t)qword_1000D7A80);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "PersonalRequests siriCheck\n", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  v65 = objc_msgSend((id)objc_opt_self(AFPreferences), "sharedPreferences");
  v10 = objc_msgSend(v65, "assistantIsEnabled");
  if ((v10 & 1) != 0)
    goto LABEL_8;
  v11 = objc_msgSend((id)objc_opt_self(VTPreferences), "sharedPreferences");
  if (!v11)
  {
    __break(1u);
    goto LABEL_18;
  }
  v12 = v11;
  v13 = objc_msgSend(v11, "voiceTriggerEnabled");

  if (v13)
  {
LABEL_8:
    v14 = Logger.logObject.getter(v10);
    v16 = static os_log_type_t.default.getter(v14, v15);
    if (os_log_type_enabled(v14, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v16, "PersonalRequests Siri enabled, enabling PR\n", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

    Strong = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC14HDSViewService42HomePodSetupPersonalRequestsViewController_presenter]);
    if (Strong)
    {
      v19 = Strong;
      v68 = 0;
      memset(v67, 0, sizeof(v67));
      memset(&v66[8], 0, 40);
      v66[0] = 1;
      sub_100011340((uint64_t)v67, (uint64_t)&v66[8], &qword_1000D6ED0);
      aBlock = *(_OWORD *)v66;
      v70 = *(_OWORD *)&v66[16];
      v71 = *(_OWORD *)&v66[32];
      sub_10006B04C((char *)&aBlock);

      swift_unknownObjectRelease(v19);
      sub_100011384((uint64_t)&aBlock);
    }
    else
    {

    }
    return;
  }
  v20 = String._bridgeToObjectiveC()();
  v21 = (id)CUAddSuffixForCurrentDeviceClass(v20);

  if (!v21)
  {
LABEL_18:
    __break(1u);
    return;
  }
  v22 = sub_100006354(v21);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v24 = v23;

  v25 = String._bridgeToObjectiveC()();
  v26 = sub_100006618();

  if (!v26)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v28 = v27;
    v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v28);
  }
  v29 = sub_100006354(v26);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
  v31 = v30;

  v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v24);
  v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v31);
  v34 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v32, v33, 1);

  v35 = String._bridgeToObjectiveC()();
  v36 = sub_100006354(v35);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
  v38 = v37;

  v39 = String._bridgeToObjectiveC()();
  v40 = sub_100006354(v39);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
  v42 = v41;
  swift_bridgeObjectRelease(v38);

  v43 = swift_allocObject(&unk_1000C4F98, 32, 7);
  *(_QWORD *)(v43 + 16) = v3;
  *(_QWORD *)(v43 + 24) = v34;
  v44 = v3;
  v45 = v34;
  v46 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v42);
  *(_QWORD *)&v71 = sub_100077890;
  *((_QWORD *)&v71 + 1) = v43;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v70 = sub_100038D38;
  *((_QWORD *)&v70 + 1) = &unk_1000C4FB0;
  v47 = _Block_copy(&aBlock);
  swift_release(*((_QWORD *)&v71 + 1));
  v48 = (void *)objc_opt_self(UIAlertAction);
  v49 = objc_msgSend(v48, "actionWithTitle:style:handler:", v46, 1, v47);
  _Block_release(v47);

  objc_msgSend(v45, "addAction:", v49);
  v50 = String._bridgeToObjectiveC()();
  v51 = sub_100006354(v50);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
  v53 = v52;

  v54 = String._bridgeToObjectiveC()();
  v55 = sub_100006354(v54);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
  v57 = v56;
  swift_bridgeObjectRelease(v53);

  v58 = (_QWORD *)swift_allocObject(&unk_1000C4FE8, 40, 7);
  v58[2] = v65;
  v58[3] = v44;
  v58[4] = v45;
  v59 = v44;
  v60 = v45;
  v61 = v65;
  v62 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v57);
  *(_QWORD *)&v71 = sub_1000778E4;
  *((_QWORD *)&v71 + 1) = v58;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v70 = sub_100038D38;
  *((_QWORD *)&v70 + 1) = &unk_1000C5000;
  v63 = _Block_copy(&aBlock);
  v64 = objc_msgSend(v48, "actionWithTitle:style:handler:", v62, 0, v63, swift_release(*((_QWORD *)&v71 + 1)).n128_f64[0]);
  _Block_release(v63);

  objc_msgSend(v60, "addAction:", v64);
  objc_msgSend(v60, "setPreferredAction:", v64);
  objc_msgSend(v59, "presentViewController:animated:completion:", v60, 1, 0);

}

void sub_1000760C0(void *a1, void *a2)
{
  void *v2;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  NSString v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t *v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  NSString v33;
  NSString v34;
  id v35;
  NSString v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  NSString v43;
  void *v44;
  void *v45;
  id v46;
  NSString v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  id v53;
  id v54;
  id v55;
  id v56;
  NSString v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  uint64_t v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  void *v68;
  _QWORD *v69;
  id v70;
  void *v71;
  uint64_t v72;
  void *v73;
  void **aBlock;
  unint64_t v75;
  void (*v76)(uint64_t, void *);
  void *v77;
  void *v78;
  _QWORD *v79;
  char v80[120];

  v5 = String._bridgeToObjectiveC()();
  v6 = sub_100006354(v5);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v8 = v7;

  v9 = 0x80000001000A2610;
  v71 = a2;
  v72 = v8;
  if (a1)
  {
    v10 = objc_msgSend(a1, "deviceName");
    if (v10)
    {

      v9 = 0x80000001000A2660;
    }
  }
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  v12 = sub_100006618();

  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  v16 = sub_10000D604((uint64_t *)&unk_1000D7B70);
  inited = swift_initStackObject(v16, v80);
  *(_OWORD *)(inited + 16) = xmmword_100098100;
  v18 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v19 = objc_msgSend(v18, "name");

  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v22 = v21;

  *(_QWORD *)(inited + 56) = &type metadata for String;
  v23 = sub_100035088();
  *(_QWORD *)(inited + 32) = v20;
  *(_QWORD *)(inited + 64) = v23;
  *(_QWORD *)(inited + 40) = v22;
  if (a1 && (v24 = objc_msgSend(a1, "deviceName")) != 0)
  {
    v25 = v24;
    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    v28 = v27;

    v29 = (uint64_t *)(inited + 72);
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v23;
    if (v28)
    {
      *v29 = v26;
      v30 = v2;
      goto LABEL_10;
    }
  }
  else
  {
    v29 = (uint64_t *)(inited + 72);
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v23;
  }
  v30 = v2;
  *v29 = 0;
  v28 = 0xE000000000000000;
LABEL_10:
  *(_QWORD *)(inited + 80) = v28;
  aBlock = 0;
  v75 = 0xE000000000000000;
  swift_bridgeObjectRetain(v15);
  sub_1000340CC(inited, (uint64_t *)&aBlock, v13, v15, 1076183077, 0xE400000000000000);
  swift_setDeallocating(inited);
  v31 = sub_10000D604(&qword_1000D61B0);
  swift_arrayDestroy(inited + 32, 2, v31);
  v32 = v75;
  swift_bridgeObjectRelease(v15);
  v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v72);
  v34 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v32);
  v35 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v33, v34, 1);

  v36 = String._bridgeToObjectiveC()();
  v37 = sub_100006354(v36);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
  v39 = v38;

  v40 = swift_allocObject(&unk_1000C5038, 32, 7);
  *(_QWORD *)(v40 + 16) = v30;
  *(_QWORD *)(v40 + 24) = v35;
  v41 = v30;
  v42 = v35;
  v43 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v39);
  v78 = sub_1000778F0;
  v79 = (_QWORD *)v40;
  aBlock = _NSConcreteStackBlock;
  v75 = 1107296256;
  v76 = sub_100038D38;
  v77 = &unk_1000C5050;
  v44 = _Block_copy(&aBlock);
  swift_release(v79);
  v45 = (void *)objc_opt_self(UIAlertAction);
  v46 = objc_msgSend(v45, "actionWithTitle:style:handler:", v43, 1, v44);
  _Block_release(v44);

  v73 = v46;
  objc_msgSend(v42, "addAction:", v46);
  v47 = String._bridgeToObjectiveC()();
  v48 = (id)CUAddSuffixForCurrentDeviceClass(v47);

  if (v48)
  {
    v49 = sub_100006354(v48);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
    v51 = v50;

    v52 = (_QWORD *)swift_allocObject(&unk_1000C5088, 48, 7);
    v52[2] = v71;
    v52[3] = a1;
    v52[4] = v42;
    v52[5] = v41;
    v53 = a1;
    v54 = v41;
    v55 = v42;
    v56 = v71;
    v57 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v51);
    v78 = sub_10007794C;
    v79 = v52;
    aBlock = _NSConcreteStackBlock;
    v75 = 1107296256;
    v76 = sub_100038D38;
    v77 = &unk_1000C50A0;
    v58 = _Block_copy(&aBlock);
    v59 = objc_msgSend(v45, "actionWithTitle:style:handler:", v57, 0, v58, swift_release(v79).n128_f64[0]);
    _Block_release(v58);

    objc_msgSend(v55, "addAction:", v59);
    objc_msgSend(v55, "setPreferredAction:", v59);
    if (qword_1000D5530 != -1)
      swift_once(&qword_1000D5530, sub_100036860);
    if (*(_QWORD *)(*(_QWORD *)(qword_1000DB5C8
                               + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_automationStepResults)
                   + 16)
      || *(_BYTE *)(qword_1000DB5C8 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_alwaysSelectDefault) == 1)
    {
      if (qword_1000D5648 != -1)
        swift_once(&qword_1000D5648, sub_100073240);
      v61 = type metadata accessor for Logger(0, v60);
      v62 = sub_10001118C(v61, (uint64_t)qword_1000D7A80);
      v63 = Logger.logObject.getter(v62);
      v65 = static os_log_type_t.default.getter(v63, v64);
      if (os_log_type_enabled(v63, v65))
      {
        v66 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v66 = 0;
        _os_log_impl((void *)&_mh_execute_header, v63, v65, "Me Switch alert: Use button\n", v66, 2u);
        swift_slowDealloc(v66, -1, -1);
      }

      v67 = swift_allocObject(&unk_1000C50D8, 24, 7);
      *(_QWORD *)(v67 + 16) = v54;
      v78 = sub_100077958;
      v79 = (_QWORD *)v67;
      aBlock = _NSConcreteStackBlock;
      v75 = 1107296256;
      v76 = sub_1000731EC;
      v77 = &unk_1000C50F0;
      v68 = _Block_copy(&aBlock);
      v69 = v79;
      v70 = v54;
      objc_msgSend(v56, "setActiveDevice:completion:", v53, v68, swift_release(v69).n128_f64[0]);

      _Block_release(v68);
    }
    else
    {
      objc_msgSend(v54, "presentViewController:animated:completion:", v55, 1, 0);

    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10007681C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  void (*v6)(void *, void *);
  id v7;
  id v8;

  v6 = *(void (**)(void *, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v8 = a2;
  v7 = a3;
  v6(a2, a3);
  swift_release(v5);

}

id sub_100076890(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t Strong;
  uint64_t v14;
  _BYTE v16[48];
  _OWORD v17[2];
  uint64_t v18;
  _OWORD v19[3];

  if (qword_1000D5648 != -1)
    swift_once(&qword_1000D5648, sub_100073240);
  v7 = type metadata accessor for Logger(0, a2);
  v8 = sub_10001118C(v7, (uint64_t)qword_1000D7A80);
  v9 = Logger.logObject.getter(v8);
  v11 = static os_log_type_t.default.getter(v9, v10);
  if (os_log_type_enabled(v9, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v11, "Siri Enabled, enabling PR\n", v12, 2u);
    swift_slowDealloc(v12, -1, -1);
  }

  objc_msgSend(a2, "setAssistantIsEnabled:", 1);
  Strong = swift_unknownObjectWeakLoadStrong(a3 + OBJC_IVAR____TtC14HDSViewService42HomePodSetupPersonalRequestsViewController_presenter);
  if (Strong)
  {
    v14 = Strong;
    v18 = 0;
    memset(v17, 0, sizeof(v17));
    memset(&v16[8], 0, 40);
    v16[0] = 1;
    sub_100011340((uint64_t)v17, (uint64_t)&v16[8], &qword_1000D6ED0);
    v19[0] = *(_OWORD *)v16;
    v19[1] = *(_OWORD *)&v16[16];
    v19[2] = *(_OWORD *)&v16[32];
    sub_10006B04C((char *)v19);
    swift_unknownObjectRelease(v14);
    sub_100011384((uint64_t)v19);
  }
  return objc_msgSend(a4, "dismissViewControllerAnimated:completion:", 1, 0, *(_QWORD *)v16);
}

id sub_100076A1C(uint64_t a1, uint64_t a2, void *a3, const char *a4)
{
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t Strong;
  uint64_t v14;
  _BYTE v16[48];
  _OWORD v17[2];
  uint64_t v18;
  _OWORD v19[3];

  if (qword_1000D5648 != -1)
    swift_once(&qword_1000D5648, sub_100073240);
  v7 = type metadata accessor for Logger(0, a2);
  v8 = sub_10001118C(v7, (uint64_t)qword_1000D7A80);
  v9 = Logger.logObject.getter(v8);
  v11 = static os_log_type_t.default.getter(v9, v10);
  if (os_log_type_enabled(v9, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v11, a4, v12, 2u);
    swift_slowDealloc(v12, -1, -1);
  }

  Strong = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC14HDSViewService42HomePodSetupPersonalRequestsViewController_presenter);
  if (Strong)
  {
    v14 = Strong;
    v18 = 0;
    memset(v17, 0, sizeof(v17));
    memset(&v16[8], 0, 40);
    v16[0] = 2;
    sub_100011340((uint64_t)v17, (uint64_t)&v16[8], &qword_1000D6ED0);
    v19[0] = *(_OWORD *)v16;
    v19[1] = *(_OWORD *)&v16[16];
    v19[2] = *(_OWORD *)&v16[32];
    sub_10006B04C((char *)v19);
    swift_unknownObjectRelease(v14);
    sub_100011384((uint64_t)v19);
  }
  return objc_msgSend(a3, "dismissViewControllerAnimated:completion:", 1, 0, *(_QWORD *)v16);
}

void sub_100076B90(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  _QWORD v20[5];
  uint64_t v21;

  if (qword_1000D5648 != -1)
    swift_once(&qword_1000D5648, sub_100073240);
  v9 = type metadata accessor for Logger(0, a2);
  v10 = sub_10001118C(v9, (uint64_t)qword_1000D7A80);
  v11 = Logger.logObject.getter(v10);
  v13 = static os_log_type_t.default.getter(v11, v12);
  if (os_log_type_enabled(v11, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v13, "Me Switch alert: Use button\n", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  v15 = swift_allocObject(&unk_1000C5178, 32, 7);
  *(_QWORD *)(v15 + 16) = a4;
  *(_QWORD *)(v15 + 24) = a5;
  v20[4] = sub_100077980;
  v21 = v15;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 1107296256;
  v20[2] = sub_1000731EC;
  v20[3] = &unk_1000C5190;
  v16 = _Block_copy(v20);
  v17 = v21;
  v18 = a4;
  v19 = a5;
  objc_msgSend(a2, "setActiveDevice:completion:", a3, v16, swift_release(v17).n128_f64[0]);
  _Block_release(v16);
}

uint64_t sub_100076D14(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint8_t *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  void *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v42;
  uint64_t *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void *v49;
  void **aBlock;
  _QWORD v51[4];
  uint64_t v52;

  v49 = a2;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v48 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v47 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    swift_errorRetain(a1);
    if (qword_1000D5648 != -1)
      swift_once(&qword_1000D5648, sub_100073240);
    v14 = type metadata accessor for Logger(0, v13);
    sub_10001118C(v14, (uint64_t)qword_1000D7A80);
    swift_errorRetain(a1);
    v15 = swift_errorRetain(a1);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc(12, -1);
      v46 = v5;
      v19 = (uint8_t *)v18;
      v43 = (uint64_t *)swift_slowAlloc(8, -1);
      v44 = a3;
      v45 = v9;
      *(_DWORD *)v19 = 138412290;
      swift_errorRetain(a1);
      v20 = _swift_stdlib_bridgeErrorToNSError(a1);
      aBlock = (void **)v20;
      a3 = v44;
      v9 = v45;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v51);
      v21 = v43;
      *v43 = v20;
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "### Me Switch failed: %@", v19, 0xCu);
      v22 = sub_10000D604(&qword_1000D5CC8);
      swift_arrayDestroy(v21, 1, v22);
      swift_slowDealloc(v21, -1, -1);
      v23 = v19;
      v5 = v46;
      swift_slowDealloc(v23, -1, -1);

      swift_errorRelease(a1);
    }
    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      swift_errorRelease(a1);

    }
    v12 = v47;
  }
  else
  {
    v24 = a3;
    if (qword_1000D5648 != -1)
      swift_once(&qword_1000D5648, sub_100073240);
    v25 = type metadata accessor for Logger(0, v10);
    v26 = sub_10001118C(v25, (uint64_t)qword_1000D7A80);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Me Switch succeeded", v29, 2u);
      swift_slowDealloc(v29, -1, -1);
    }

    a3 = v24;
  }
  sub_100035CA4(0, (unint64_t *)&qword_1000D7B50, OS_dispatch_queue_ptr);
  v30 = (void *)static OS_dispatch_queue.main.getter();
  v31 = swift_allocObject(&unk_1000C51C8, 32, 7);
  v32 = v49;
  *(_QWORD *)(v31 + 16) = v49;
  *(_QWORD *)(v31 + 24) = a3;
  v51[3] = sub_100077988;
  v52 = v31;
  aBlock = _NSConcreteStackBlock;
  v51[0] = 1107296256;
  v51[1] = sub_10007C6B4;
  v51[2] = &unk_1000C51E0;
  v33 = _Block_copy(&aBlock);
  v34 = v52;
  v35 = v32;
  v36 = a3;
  swift_release(v34);
  static DispatchQoS.unspecified.getter(v37);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v38 = sub_100012C2C();
  v39 = sub_10000D604((uint64_t *)&unk_1000D7B60);
  v40 = sub_100012C74();
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v39, v40, v5, v38);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v7, v33);
  _Block_release(v33);

  (*(void (**)(char *, uint64_t))(v48 + 8))(v7, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t sub_100077160(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void **aBlock;
  _QWORD v45[4];
  uint64_t v46;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v43 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v42 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    swift_errorRetain(a1);
    if (qword_1000D5648 != -1)
      swift_once(&qword_1000D5648, sub_100073240);
    v13 = type metadata accessor for Logger(0, v12);
    sub_10001118C(v13, (uint64_t)qword_1000D7A80);
    swift_errorRetain(a1);
    v14 = swift_errorRetain(a1);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc(12, -1);
      v39 = a2;
      v18 = (uint8_t *)v17;
      v38 = (uint64_t *)swift_slowAlloc(8, -1);
      v40 = v8;
      v41 = v7;
      *(_DWORD *)v18 = 138412290;
      swift_errorRetain(a1);
      v19 = _swift_stdlib_bridgeErrorToNSError(a1);
      aBlock = (void **)v19;
      v8 = v40;
      v7 = v41;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v45);
      v20 = v38;
      *v38 = v19;
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "### Me Switch failed: %@", v18, 0xCu);
      v21 = sub_10000D604(&qword_1000D5CC8);
      swift_arrayDestroy(v20, 1, v21);
      swift_slowDealloc(v20, -1, -1);
      v22 = v18;
      a2 = v39;
      swift_slowDealloc(v22, -1, -1);

      swift_errorRelease(a1);
    }
    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      swift_errorRelease(a1);

    }
    v11 = v42;
  }
  else
  {
    if (qword_1000D5648 != -1)
      swift_once(&qword_1000D5648, sub_100073240);
    v23 = type metadata accessor for Logger(0, v9);
    v24 = sub_10001118C(v23, (uint64_t)qword_1000D7A80);
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Me Switch succeeded", v27, 2u);
      swift_slowDealloc(v27, -1, -1);
    }

  }
  sub_100035CA4(0, (unint64_t *)&qword_1000D7B50, OS_dispatch_queue_ptr);
  v28 = (void *)static OS_dispatch_queue.main.getter();
  v29 = swift_allocObject(&unk_1000C5128, 24, 7);
  *(_QWORD *)(v29 + 16) = a2;
  v45[3] = sub_100077960;
  v46 = v29;
  aBlock = _NSConcreteStackBlock;
  v45[0] = 1107296256;
  v45[1] = sub_10007C6B4;
  v45[2] = &unk_1000C5140;
  v30 = _Block_copy(&aBlock);
  v31 = v46;
  v32 = a2;
  swift_release(v31);
  static DispatchQoS.unspecified.getter(v33);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v34 = sub_100012C2C();
  v35 = sub_10000D604((uint64_t *)&unk_1000D7B60);
  v36 = sub_100012C74();
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v35, v36, v4, v34);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v6, v30);
  _Block_release(v30);

  (*(void (**)(char *, uint64_t))(v43 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

void sub_10007759C(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  int v17;

  v3 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D5648 != -1)
    swift_once(&qword_1000D5648, sub_100073240);
  v7 = type metadata accessor for Logger(0, v4);
  sub_10001118C(v7, (uint64_t)qword_1000D7A80);
  v8 = v1;
  v9 = Logger.logObject.getter(v8);
  v11 = static os_log_type_t.default.getter(v9, v10);
  if (os_log_type_enabled(v9, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v12 = 67109120;
    v16 = objc_msgSend(v8, "isViewLoaded");
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17);

    _os_log_impl((void *)&_mh_execute_header, v9, v11, "HomePodSetupPersonalRequestsViewController: presenter:didUpdate viewModel, isViewloaded = %{BOOL}d", v12, 8u);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {

  }
  sub_1000111A4(a1, (uint64_t)v6);
  v13 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 0, 1, v13);
  v14 = (uint64_t)&v8[OBJC_IVAR____TtC14HDSViewService42HomePodSetupPersonalRequestsViewController_viewModel];
  swift_beginAccess(&v8[OBJC_IVAR____TtC14HDSViewService42HomePodSetupPersonalRequestsViewController_viewModel], &v16, 33, 0);
  sub_100011340((uint64_t)v6, v14, (uint64_t *)&unk_1000D6EC0);
  swift_endAccess(&v16);
  if (objc_msgSend(v8, "isViewLoaded"))
    sub_100074B44(a1);
}

uint64_t sub_1000777A4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000777C8()
{
  uint64_t v0;

  return sub_100074A6C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1000777D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000777E0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000777E8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10007780C(char *a1)
{
  uint64_t v1;

  sub_100074140(a1, v1);
}

uint64_t sub_100077814(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1000753F4(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_10007781C()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

void sub_100077858()
{
  uint64_t v0;

  sub_1000755F4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(id *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_100077864()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100077890(uint64_t a1)
{
  uint64_t v1;

  return sub_100076A1C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), "Siri Disabled, disabling PR\n");
}

uint64_t sub_1000778B0()
{
  id *v0;

  return swift_deallocObject(v0, 40, 7);
}

id sub_1000778E4(uint64_t a1)
{
  uint64_t v1;

  return sub_100076890(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

id sub_1000778F0(uint64_t a1)
{
  uint64_t v1;

  return sub_100076A1C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), "Me Switch alert: Not Now button");
}

uint64_t sub_100077910()
{
  id *v0;

  return swift_deallocObject(v0, 48, 7);
}

void sub_10007794C(uint64_t a1)
{
  uint64_t v1;

  sub_100076B90(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_100077958(uint64_t a1)
{
  uint64_t v1;

  return sub_100077160(a1, *(void **)(v1 + 16));
}

void sub_100077960(uint64_t a1, uint64_t a2)
{
  sub_1000759C4(a1, a2);
}

uint64_t sub_100077980(uint64_t a1)
{
  uint64_t v1;

  return sub_100076D14(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

void sub_100077988()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*(id *)(v0 + 16), "dismissViewControllerAnimated:completion:", 1, 0);
  sub_1000759C4((uint64_t)v1, v2);
}

_QWORD *sub_100077A24(uint64_t a1)
{
  return sub_100077B70(a1, (uint64_t)&type metadata for HomeOption, (uint64_t)&off_1000C57A8);
}

_QWORD *sub_100077A38(uint64_t a1)
{
  int64_t v1;
  _QWORD *v2;
  _BYTE *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __int128 v13;
  ValueMetadata *v14;
  _UNKNOWN **v15;
  _QWORD *v16;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    v16 = _swiftEmptyArrayStorage;
    sub_10007A22C(0, v1, 0);
    v2 = _swiftEmptyArrayStorage;
    v4 = (_BYTE *)(a1 + 56);
    do
    {
      v5 = *(v4 - 24);
      v7 = *((_QWORD *)v4 - 2);
      v6 = *((_QWORD *)v4 - 1);
      v8 = *v4;
      v16 = v2;
      v9 = v2[2];
      v10 = v2[3];
      swift_bridgeObjectRetain(v6);
      if (v9 >= v10 >> 1)
      {
        sub_10007A22C(v10 > 1, v9 + 1, 1);
        v2 = v16;
      }
      v14 = &type metadata for RoomOption;
      v15 = &off_1000C5708;
      v11 = swift_allocObject(&unk_1000C5270, 41, 7);
      *(_QWORD *)&v13 = v11;
      *(_BYTE *)(v11 + 16) = v5;
      *(_QWORD *)(v11 + 24) = v7;
      *(_QWORD *)(v11 + 32) = v6;
      *(_BYTE *)(v11 + 40) = v8;
      v2[2] = v9 + 1;
      sub_10000DC7C(&v13, (uint64_t)&v2[5 * v9 + 4]);
      v4 += 32;
      --v1;
    }
    while (v1);
  }
  return v2;
}

_QWORD *sub_100077B5C(uint64_t a1)
{
  return sub_100077B70(a1, (uint64_t)&type metadata for HomePodOption, (uint64_t)&off_1000C47A0);
}

_QWORD *sub_100077B70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3;
  _QWORD *v4;
  void **v8;
  void *v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = _swiftEmptyArrayStorage;
  if (v3)
  {
    v17 = _swiftEmptyArrayStorage;
    sub_10007A22C(0, v3, 0);
    v4 = _swiftEmptyArrayStorage;
    v8 = (void **)(a1 + 32);
    do
    {
      v9 = *v8;
      v17 = v4;
      v10 = v4[2];
      v11 = v4[3];
      v12 = v9;
      if (v10 >= v11 >> 1)
      {
        sub_10007A22C(v11 > 1, v10 + 1, 1);
        v4 = v17;
      }
      v15 = a2;
      v16 = a3;
      *(_QWORD *)&v14 = v12;
      v4[2] = v10 + 1;
      sub_10000DC7C(&v14, (uint64_t)&v4[5 * v10 + 4]);
      ++v8;
      --v3;
    }
    while (v3);
  }
  return v4;
}

_QWORD *sub_100077C60(uint64_t a1)
{
  int64_t v1;
  _QWORD *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  __int128 v13;
  ValueMetadata *v14;
  _UNKNOWN **v15;
  _QWORD *v16;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    v16 = _swiftEmptyArrayStorage;
    sub_10007A22C(0, v1, 0);
    v2 = _swiftEmptyArrayStorage;
    v4 = (uint64_t *)(a1 + 56);
    do
    {
      v6 = *(v4 - 3);
      v5 = *(v4 - 2);
      v8 = *(v4 - 1);
      v7 = *v4;
      v16 = v2;
      v9 = v2[2];
      v10 = v2[3];
      swift_bridgeObjectRetain(v5);
      swift_bridgeObjectRetain(v7);
      if (v9 >= v10 >> 1)
      {
        sub_10007A22C(v10 > 1, v9 + 1, 1);
        v2 = v16;
      }
      v14 = &type metadata for LanguageOption;
      v15 = &off_1000C4260;
      v11 = (_QWORD *)swift_allocObject(&unk_1000C5298, 48, 7);
      *(_QWORD *)&v13 = v11;
      v11[2] = v6;
      v11[3] = v5;
      v11[4] = v8;
      v11[5] = v7;
      v2[2] = v9 + 1;
      sub_10000DC7C(&v13, (uint64_t)&v2[5 * v9 + 4]);
      v4 += 4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_100077D84(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  uint64_t i;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  _OWORD v17[2];
  _QWORD *v18;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v15 = a1;
    else
      v15 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = _swiftEmptyArrayStorage;
  if (!v2)
    return (uint64_t)v3;
  v18 = _swiftEmptyArrayStorage;
  result = sub_10007A280(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
        type metadata accessor for CGColor(0);
        swift_dynamicCast(v17, &v16, v6, (char *)&type metadata for Any + 8, 7);
        v3 = v18;
        if ((swift_isUniquelyReferenced_nonNull_native(v18) & 1) == 0)
        {
          sub_10007A280(0, v3[2] + 1, 1);
          v3 = v18;
        }
        v8 = v3[2];
        v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_10007A280(v7 > 1, v8 + 1, 1);
          v3 = v18;
        }
        v3[2] = v8 + 1;
        sub_10000DAD8(v17, &v3[4 * v8 + 4]);
      }
    }
    else
    {
      v9 = (id *)(a1 + 32);
      type metadata accessor for CGColor(0);
      v11 = v10;
      do
      {
        v16 = *v9;
        v12 = v16;
        swift_dynamicCast(v17, &v16, v11, (char *)&type metadata for Any + 8, 7);
        v3 = v18;
        if ((swift_isUniquelyReferenced_nonNull_native(v18) & 1) == 0)
        {
          sub_10007A280(0, v3[2] + 1, 1);
          v3 = v18;
        }
        v14 = v3[2];
        v13 = v3[3];
        if (v14 >= v13 >> 1)
        {
          sub_10007A280(v13 > 1, v14 + 1, 1);
          v3 = v18;
        }
        v3[2] = v14 + 1;
        sub_10000DAD8(v17, &v3[4 * v14 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_100077FB4()
{
  uint64_t v0;

  v0 = type metadata accessor for DispatchTimeInterval(0);
  sub_1000111E8(v0, HomePodViewfinderCircleAnimationDelay);
  *(_QWORD *)sub_10001118C(v0, (uint64_t)HomePodViewfinderCircleAnimationDelay) = 200;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 - 8) + 104))();
}

uint64_t HomePodViewfinderCircleAnimationDelay.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1000D5650 != -1)
    swift_once(&qword_1000D5650, sub_100077FB4);
  v0 = type metadata accessor for DispatchTimeInterval(0);
  return sub_10001118C(v0, (uint64_t)HomePodViewfinderCircleAnimationDelay);
}

void sub_10007805C()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  id v4;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_viewFinderBorderLayer), "removeAllAnimations");
  v4 = sub_100078EF4(0.6, 0.0);
  v1 = sub_100078EF4(0.6, *(double *)(v0 + OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_strokeWidth));
  objc_msgSend(v4, "appendPath:", v1);

  v2 = *(void **)(v0 + OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_borderLayerMask);
  v3 = objc_msgSend(v4, "CGPath");
  objc_msgSend(v2, "setPath:", v3);

  sub_10007856C(*(_QWORD *)(v0 + OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_initialColors), 0, 1);
  sub_10007900C(0, v4, 0.0);

}

void sub_10007815C()
{
  uint64_t v0;
  uint64_t v1;
  NSString v2;
  id v3;
  Class isa;
  Class v5;
  double v6;
  void *v7;
  NSString v8;
  uint64_t v9;
  uint64_t inited;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  _BYTE v17[48];

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_rotKey + 8);
  swift_bridgeObjectRetain(v1);
  v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v1);
  v3 = objc_msgSend((id)objc_opt_self(CABasicAnimation), "animationWithKeyPath:", v2);

  isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v3, "setFromValue:", isa);

  v5 = CGFloat._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v3, "setByValue:", v5);

  LODWORD(v6) = 2139095040;
  objc_msgSend(v3, "setRepeatCount:", v6);
  objc_msgSend(v3, "setDuration:", 2.0);
  v7 = *(void **)(v0 + OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_viewFinderBorderLayer);
  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "addAnimation:forKey:", v3, v8);

  v9 = sub_10000D604(&qword_1000D6EE0);
  inited = swift_initStackObject(v9, v17);
  *(_OWORD *)(inited + 16) = xmmword_100099270;
  v11 = (void *)objc_opt_self(UIColor);
  v12 = objc_msgSend(v11, "systemBlueColor");
  v13 = objc_msgSend(v12, "colorWithAlphaComponent:", 1.0);

  *(_QWORD *)(inited + 32) = v13;
  v14 = objc_msgSend(v11, "systemBlueColor");
  v15 = objc_msgSend(v14, "colorWithAlphaComponent:", 0.0);

  *(_QWORD *)(inited + 40) = v15;
  specialized Array._endMutation()(v16);
  sub_10007856C(inited, 0x3FC999999999999ALL, 0);
  swift_bridgeObjectRelease(inited);

}

void sub_100078388()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  _BYTE v15[48];

  v1 = v0;
  v2 = sub_10000D604(&qword_1000D6EE0);
  inited = swift_initStackObject(v2, v15);
  *(_OWORD *)(inited + 16) = xmmword_100099270;
  v4 = (void *)objc_opt_self(UIColor);
  v5 = objc_msgSend(v4, "systemGreenColor");
  v6 = objc_msgSend(v5, "colorWithAlphaComponent:", 1.0);

  *(_QWORD *)(inited + 32) = v6;
  v7 = objc_msgSend(v4, "systemGreenColor");
  v8 = objc_msgSend(v7, "colorWithAlphaComponent:", 1.0);

  *(_QWORD *)(inited + 40) = v8;
  specialized Array._endMutation()(v9);
  sub_10007856C(inited, 0x3FC999999999999ALL, 0);
  swift_bridgeObjectRelease(inited);
  v10 = sub_100078EF4(0.6, 0.0);
  v11 = sub_100078EF4(0.6, *(double *)(v1 + OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_strokeWidth));
  objc_msgSend(v10, "appendPath:", v11);

  v12 = sub_100078EF4(0.6, 0.0);
  v13 = sub_100078EF4(0.6, *(double *)(v1 + OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_successStrokeWidth));
  objc_msgSend(v12, "appendPath:", v13);

  v14 = v10;
  sub_10007900C(v10, v12, 0.5);

  *(_BYTE *)(v1 + OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_needsReset) = 1;
}

void sub_10007856C(uint64_t a1, uint64_t a2, char a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  NSString v18;
  id v19;
  void *v20;
  id v21;
  Class v22;
  uint64_t v23;
  Class v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  Class isa;

  v4 = v3;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v27 = a1;
    else
      v27 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v8 = _CocoaArrayWrapper.endIndex.getter(v27);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v8);
    if (v8 < 0)
    {
      __break(1u);
      return;
    }
    v28 = v4;
    v9 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, a1);
      else
        v10 = *(id *)(a1 + 8 * v9 + 32);
      v11 = v10;
      ++v9;
      v12 = objc_msgSend(v10, "CGColor", v28);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v13);
      v14 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v14);
      v15 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v12);
      specialized ContiguousArray._endMutation()(v15);
    }
    while (v8 != v9);
    v4 = v28;
  }
  if ((a3 & 1) != 0)
  {
    v25 = *(void **)&v4[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_viewFinderBorderLayer];
    v26 = sub_100077D84((uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v26);
    objc_msgSend(v25, "setColors:", isa);
  }
  else
  {
    v16 = *(double *)&a2;
    v17 = *(_QWORD *)&v4[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_colorsKey + 8];
    swift_bridgeObjectRetain(v17);
    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17);
    v19 = objc_msgSend((id)objc_opt_self(CABasicAnimation), "animationWithKeyPath:", v18);

    v20 = *(void **)&v4[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_viewFinderBorderLayer];
    v21 = objc_msgSend(v20, "colors");
    objc_msgSend(v19, "setFromValue:", v21);

    type metadata accessor for CGColor(0);
    v22 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v19, "setToValue:", v22);

    objc_msgSend(v19, "setDuration:", v16);
    objc_msgSend(v19, "setRemovedOnCompletion:", 0);
    objc_msgSend(v19, "setDelegate:", v4);
    v23 = sub_100077D84((uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    v24 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v23);
    objc_msgSend(v20, "setColors:", v24);

    isa = (Class)objc_msgSend(v19, "keyPath");
    objc_msgSend(v20, "addAnimation:forKey:", v19);

  }
}

char *sub_100078904()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  CGFloat v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  char *v18;
  void *v19;
  double v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  double v24;
  id v25;
  id v26;
  id v27;
  CGAffineTransform v29;
  objc_super v30;

  v1 = OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_viewFinderTintLayer;
  v2 = objc_allocWithZone((Class)CAShapeLayer);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, "init");
  v4 = OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_viewFinderBorderLayer;
  *(_QWORD *)&v3[v4] = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
  v5 = OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_borderLayerMask;
  *(_QWORD *)&v3[v5] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v6 = OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_initialWhiteTintLayer;
  *(_QWORD *)&v3[v6] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v7 = &v3[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_rotKey];
  *(_QWORD *)v7 = 0xD000000000000012;
  *((_QWORD *)v7 + 1) = 0x80000001000A2920;
  v8 = &v3[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_colorsKey];
  *(_QWORD *)v8 = 0x73726F6C6F63;
  *((_QWORD *)v8 + 1) = 0xE600000000000000;
  v3[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_needsReset] = 0;
  v9 = OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_initialColors;
  v10 = sub_10000D604(&qword_1000D6EE0);
  v11 = COERCE_DOUBLE(swift_allocObject(v10, 48, 7));
  *(_OWORD *)(*(_QWORD *)&v11 + 16) = xmmword_100099270;
  v12 = (void *)objc_opt_self(UIColor);
  v13 = objc_msgSend(v12, "systemBlueColor");
  v14 = objc_msgSend(v13, "colorWithAlphaComponent:", 1.0);

  *(_QWORD *)(*(_QWORD *)&v11 + 32) = v14;
  v15 = objc_msgSend(v12, "systemBlueColor");
  v16 = objc_msgSend(v15, "colorWithAlphaComponent:", 1.0);

  *(_QWORD *)(*(_QWORD *)&v11 + 40) = v16;
  v29.a = v11;
  specialized Array._endMutation()(v17);
  *(CGFloat *)&v3[v9] = v11;
  *(_QWORD *)&v3[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_innerInitialHoleWidthRatio] = 0x3FDCCCCCCCCCCCCDLL;
  *(_QWORD *)&v3[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_innerTargetHoleWidthRatio] = 0x3FE3333333333333;
  *(_QWORD *)&v3[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_strokeWidth] = 0x402A000000000000;
  *(_QWORD *)&v3[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_successStrokeWidth] = 0x4033000000000000;

  v30.receiver = v3;
  v30.super_class = (Class)type metadata accessor for SVSLEDPasscodeActivityIndicatorView();
  v18 = (char *)objc_msgSendSuper2(&v30, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_100078E04();
  v19 = *(void **)&v18[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_viewFinderBorderLayer];
  objc_msgSend(v19, "setType:", kCAGradientLayerConic);
  objc_msgSend(v19, "setStartPoint:", 0.5, 0.5);
  CGAffineTransformMakeRotation(&v29, 3.14159265);
  objc_msgSend(v19, "setAffineTransform:", &v29);
  LODWORD(v20) = 1060320051;
  objc_msgSend(*(id *)&v18[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_borderLayerMask], "setOpacity:", v20);
  v21 = OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_viewFinderTintLayer;
  LODWORD(v22) = 1062501089;
  objc_msgSend(*(id *)&v18[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_viewFinderTintLayer], "setOpacity:", v22);
  v23 = OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_initialWhiteTintLayer;
  LODWORD(v24) = 1.0;
  objc_msgSend(*(id *)&v18[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_initialWhiteTintLayer], "setOpacity:", v24);
  v25 = objc_msgSend(v18, "layer");
  objc_msgSend(v25, "insertSublayer:atIndex:", v19, 0);

  v26 = objc_msgSend(v18, "layer");
  objc_msgSend(v26, "insertSublayer:atIndex:", *(_QWORD *)&v18[v23], 0);

  v27 = objc_msgSend(v18, "layer");
  objc_msgSend(v27, "insertSublayer:atIndex:", *(_QWORD *)&v18[v21], 0);

  sub_10007805C();
  return v18;
}

void sub_100078D14()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v1 = *(void **)&v0[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_viewFinderTintLayer];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v1, "setFrame:");
  v2 = *(void **)&v0[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_viewFinderBorderLayer];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v2, "setFrame:");
  v3 = *(void **)&v0[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_initialWhiteTintLayer];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v3, "setFrame:");
  v4 = *(void **)&v0[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_borderLayerMask];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v4, "setFrame:");
  sub_100079208();
  sub_100078E04();
}

void sub_100078E04()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_viewFinderTintLayer);
  v2 = (void *)objc_opt_self(UIColor);
  v3 = objc_msgSend(v2, "systemBackgroundColor");
  v4 = objc_msgSend(v3, "CGColor");

  objc_msgSend(v1, "setFillColor:", v4);
  v5 = *(void **)(v0 + OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_initialWhiteTintLayer);
  v6 = objc_msgSend(v2, "systemBackgroundColor");
  v7 = objc_msgSend(v6, "CGColor");

  objc_msgSend(v5, "setFillColor:", v7);
}

id sub_100078EF4(double a1, double a2)
{
  void *v2;
  CGFloat v5;
  double v6;
  double v7;
  double v8;
  double v9;
  CGFloat v10;
  CGFloat v11;
  double Width;
  double Height;
  CGFloat v14;
  CGRect v16;
  CGRect v17;
  CGRect v18;
  CGRect v19;
  CGRect v20;
  CGRect v21;

  objc_msgSend(v2, "bounds");
  v5 = CGRectGetWidth(v16) * a1 + a2;
  objc_msgSend(v2, "center");
  v7 = v6;
  v9 = v8;
  v17.origin.x = 0.0;
  v17.origin.y = 0.0;
  v17.size.width = v5;
  v17.size.height = v5;
  v10 = v7 - CGRectGetWidth(v17) * 0.5;
  v18.origin.x = 0.0;
  v18.origin.y = 0.0;
  v18.size.width = v5;
  v18.size.height = v5;
  v11 = v9 - CGRectGetHeight(v18) * 0.5;
  v19.origin.x = 0.0;
  v19.origin.y = 0.0;
  v19.size.width = v5;
  v19.size.height = v5;
  Width = CGRectGetWidth(v19);
  v20.origin.x = 0.0;
  v20.origin.y = 0.0;
  v20.size.width = v5;
  v20.size.height = v5;
  Height = CGRectGetHeight(v20);
  v21.origin.x = v10;
  v21.origin.y = v11;
  v21.size.width = Width;
  v21.size.height = Height;
  v14 = CGRectGetWidth(v21) * 0.5;
  return objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:cornerRadius:", v10, v11, Width, Height, v14);
}

void sub_10007900C(void *a1, void *a2, double a3)
{
  uint64_t v3;
  NSString v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;

  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend((id)objc_opt_self(CABasicAnimation), "animationWithKeyPath:", v7);

  if (a1)
  {
    v16 = objc_msgSend(a1, "CGPath");
    type metadata accessor for CGPath(0);
    a1 = (void *)_bridgeAnythingToObjectiveC<A>(_:)(&v16, v9);

  }
  objc_msgSend(v8, "setFromValue:", a1);
  swift_unknownObjectRelease(a1);
  v10 = objc_msgSend(a2, "CGPath");
  objc_msgSend(v8, "setToValue:", v10);

  objc_msgSend(v8, "setDuration:", a3);
  v11 = (void *)objc_opt_self(CAMediaTimingFunction);
  v12 = v8;
  v13 = objc_msgSend(v11, "functionWithName:", kCAMediaTimingFunctionEaseInEaseOut);
  objc_msgSend(v12, "setTimingFunction:", v13);

  objc_msgSend(v12, "setFillMode:", kCAFillModeBoth);
  objc_msgSend(v12, "setRemovedOnCompletion:", 0);
  v14 = *(void **)(v3 + OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_borderLayerMask);
  v15 = objc_msgSend(v12, "keyPath");
  objc_msgSend(v14, "addAnimation:forKey:", v12, v15);

}

void sub_100079208()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  double v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  NSString v34;
  id v35;
  Class isa;
  Class v37;
  void *v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  void *v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  uint64_t v62;
  char *v63;
  void *v64;
  id v65;
  uint64_t v66;
  id v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD aBlock[5];
  uint64_t v75;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v72 = *(_QWORD *)(v2 - 8);
  v73 = v2;
  __chkstk_darwin(v2);
  v69 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v70 = *(_QWORD *)(v4 - 8);
  v71 = v4;
  __chkstk_darwin(v4);
  v68 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for DispatchTime(0);
  v6 = *(_QWORD *)(v66 - 8);
  v7 = __chkstk_darwin(v66);
  v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v63 = (char *)&v61 - v10;
  objc_msgSend(v0, "bounds");
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v19 = (void *)objc_opt_self(UIBezierPath);
  v20 = objc_msgSend(v19, "bezierPathWithRoundedRect:cornerRadius:", v12, v14, v16, v18, 0.0);
  v21 = sub_100078EF4(0.6, 0.0);
  objc_msgSend(v20, "appendPath:", v21);

  v22 = sub_100078EF4(0.45, 0.0);
  v23 = *(double *)&v1[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_strokeWidth];
  v24 = sub_100078EF4(0.45, v23);
  objc_msgSend(v22, "appendPath:", v24);

  v25 = sub_100078EF4(0.6, 0.0);
  v26 = sub_100078EF4(0.6, v23);
  v64 = v25;
  objc_msgSend(v25, "appendPath:", v26);

  v27 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_viewFinderTintLayer];
  v67 = v20;
  v28 = objc_msgSend(v20, "CGPath");
  objc_msgSend(v27, "setPath:", v28);

  v29 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_borderLayerMask];
  v65 = v22;
  v30 = objc_msgSend(v22, "CGPath");
  objc_msgSend(v29, "setPath:", v30);

  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_viewFinderBorderLayer], "setMask:", v29);
  v31 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_initialWhiteTintLayer];
  objc_msgSend(v1, "bounds");
  v32 = objc_msgSend(v19, "bezierPathWithRoundedRect:cornerRadius:");
  v33 = objc_msgSend(v32, "CGPath");

  objc_msgSend(v31, "setPath:", v33);
  objc_msgSend(v27, "setFillRule:", kCAFillRuleEvenOdd);
  objc_msgSend(v29, "setFillRule:", kCAFillRuleEvenOdd);
  v34 = String._bridgeToObjectiveC()();
  v35 = objc_msgSend((id)objc_opt_self(CABasicAnimation), "animationWithKeyPath:", v34);

  isa = Int._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v35, "setFromValue:", isa);

  v37 = Int._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v35, "setToValue:", v37);

  objc_msgSend(v35, "setDuration:", 0.6);
  v38 = (void *)objc_opt_self(CAMediaTimingFunction);
  v39 = v35;
  v40 = objc_msgSend(v38, "functionWithName:", kCAMediaTimingFunctionEaseInEaseOut);
  objc_msgSend(v39, "setTimingFunction:", v40);

  objc_msgSend(v39, "setFillMode:", kCAFillModeBoth);
  objc_msgSend(v39, "setRemovedOnCompletion:", 0);
  sub_100012BE8();
  v62 = static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  if (qword_1000D5650 != -1)
    swift_once(&qword_1000D5650, sub_100077FB4);
  v41 = type metadata accessor for DispatchTimeInterval(0);
  v42 = sub_10001118C(v41, (uint64_t)HomePodViewfinderCircleAnimationDelay);
  v43 = v63;
  + infix(_:_:)(v9, v42);
  v44 = *(void (**)(char *, uint64_t))(v6 + 8);
  v45 = v9;
  v46 = v66;
  v44(v45, v66);
  v47 = swift_allocObject(&unk_1000C5220, 32, 7);
  *(_QWORD *)(v47 + 16) = v1;
  *(_QWORD *)(v47 + 24) = v39;
  aBlock[4] = sub_10007A20C;
  v75 = v47;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10007C6B4;
  aBlock[3] = &unk_1000C5238;
  v48 = _Block_copy(aBlock);
  v49 = v75;
  v61 = v39;
  v1;
  swift_release(v49);
  v50 = v68;
  static DispatchQoS.unspecified.getter(v51);
  aBlock[0] = _swiftEmptyArrayStorage;
  v52 = sub_100012C2C();
  v53 = sub_10000D604((uint64_t *)&unk_1000D7B60);
  v54 = sub_100012C74();
  v55 = v69;
  v56 = v73;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v53, v54, v73, v52);
  v57 = (void *)v62;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v43, v50, v55, v48);
  _Block_release(v48);

  (*(void (**)(char *, uint64_t))(v72 + 8))(v55, v56);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v50, v71);
  v44(v43, v46);
  v58 = v65;
  v59 = v65;
  v60 = v64;
  sub_10007900C(v58, v64, 0.5);

}

void sub_1000798A4(uint64_t a1, id a2)
{
  void *v3;
  id v4;

  v3 = *(void **)(a1 + OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_initialWhiteTintLayer);
  v4 = objc_msgSend(a2, "keyPath");
  objc_msgSend(v3, "addAnimation:forKey:", a2, v4);

}

id sub_100079938()
{
  return sub_10007A1A0(type metadata accessor for SVSLEDPasscodeActivityIndicatorView);
}

Swift::Void __swiftcall SVSLPCActivityIndicatorViewController.viewDidLoad()()
{
  char *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;

  v1 = objc_msgSend(v0, "view");
  if (!v1)
  {
    __break(1u);
    goto LABEL_9;
  }
  v2 = v1;
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 1);

  v3 = *(void **)&v0[OBJC_IVAR____TtC14HDSViewService37SVSLPCActivityIndicatorViewController_v];
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = objc_msgSend(v0, "view");
  if (!v4)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v5 = v4;
  objc_msgSend(v4, "addSubview:", v3);

  v6 = objc_msgSend(v3, "leftAnchor");
  v7 = objc_msgSend(v0, "view");
  if (!v7)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v8 = v7;
  v9 = objc_msgSend(v7, "leftAnchor");

  v10 = objc_msgSend(v6, "constraintEqualToAnchor:", v9);
  objc_msgSend(v10, "setActive:", 1);

  v11 = objc_msgSend(v3, "rightAnchor");
  v12 = objc_msgSend(v0, "view");
  if (!v12)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v13 = v12;
  v14 = objc_msgSend(v12, "rightAnchor");

  v15 = objc_msgSend(v11, "constraintEqualToAnchor:", v14);
  objc_msgSend(v15, "setActive:", 1);

  v16 = objc_msgSend(v3, "topAnchor");
  v17 = objc_msgSend(v0, "view");
  if (!v17)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v18 = v17;
  v19 = objc_msgSend(v17, "topAnchor");

  v20 = objc_msgSend(v16, "constraintEqualToAnchor:", v19);
  objc_msgSend(v20, "setActive:", 1);

  v21 = objc_msgSend(v3, "bottomAnchor");
  v22 = objc_msgSend(v0, "view");
  if (v22)
  {
    v23 = v22;
    v24 = objc_msgSend(v22, "bottomAnchor");

    v25 = objc_msgSend(v21, "constraintEqualToAnchor:", v24);
    objc_msgSend(v25, "setActive:", 1);

    objc_msgSend(v3, "setNeedsLayout");
    return;
  }
LABEL_13:
  __break(1u);
}

id SVSLPCActivityIndicatorViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  NSString v7;
  id v8;

  v4 = v3;
  if (a2)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v7 = 0;
  }
  v8 = objc_msgSend(objc_allocWithZone(v4), "initWithNibName:bundle:", v7, a3);

  return v8;
}

id SVSLPCActivityIndicatorViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  uint64_t v6;
  id v7;
  char *v8;
  NSString v9;
  id v10;
  objc_super v12;

  v6 = OBJC_IVAR____TtC14HDSViewService37SVSLPCActivityIndicatorViewController_v;
  v7 = objc_allocWithZone((Class)type metadata accessor for SVSLEDPasscodeActivityIndicatorView());
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, "init");

  if (a2)
  {
    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v9 = 0;
  }
  v12.receiver = v8;
  v12.super_class = (Class)type metadata accessor for SVSLPCActivityIndicatorViewController();
  v10 = objc_msgSendSuper2(&v12, "initWithNibName:bundle:", v9, a3);

  return v10;
}

uint64_t type metadata accessor for SVSLEDPasscodeActivityIndicatorView()
{
  return objc_opt_self(_TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView);
}

uint64_t type metadata accessor for SVSLPCActivityIndicatorViewController()
{
  return objc_opt_self(_TtC14HDSViewService37SVSLPCActivityIndicatorViewController);
}

id SVSLPCActivityIndicatorViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithCoder:", a1);

  return v3;
}

id SVSLPCActivityIndicatorViewController.init(coder:)(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  id v6;
  objc_super v8;

  v3 = OBJC_IVAR____TtC14HDSViewService37SVSLPCActivityIndicatorViewController_v;
  v4 = objc_allocWithZone((Class)type metadata accessor for SVSLEDPasscodeActivityIndicatorView());
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for SVSLPCActivityIndicatorViewController();
  v6 = objc_msgSendSuper2(&v8, "initWithCoder:", a1);

  return v6;
}

id SVSLPCActivityIndicatorViewController.__deallocating_deinit()
{
  return sub_10007A1A0(type metadata accessor for SVSLPCActivityIndicatorViewController);
}

id sub_10007A1A0(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t sub_10007A1E0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10007A20C()
{
  uint64_t v0;

  sub_1000798A4(*(_QWORD *)(v0 + 16), *(id *)(v0 + 24));
}

uint64_t sub_10007A214(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007A224(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007A22C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10007A29C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_10007A248(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_10007A43C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_10007A264(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_10007A5A0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_10007A280(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_10007A708(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_10007A29C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000D604(&qword_1000D7CC0);
    v11 = (_QWORD *)swift_allocObject(v10, 40 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v13 = (unint64_t)(v11 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= v14 + 40 * v8)
      memmove(v11 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v14 >= v13 + 40 * v8 || v13 >= v14 + 40 * v8)
  {
    sub_10000D604(&qword_1000D7CC8);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10007A43C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  size_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000D604(&qword_1000D7CD0);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  v16 = 32 * v8;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[v16])
      memmove(v14, v15, v16);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10007A5A0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000D604(&qword_1000D7CD8);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[32 * v8] || v14 >= &v15[32 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10007A708(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000D604((uint64_t *)&unk_1000D71A0);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[32 * v8] || v14 >= &v15[32 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10007A874(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000D604((uint64_t *)&unk_1000D7CE0);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[32 * v8] || v14 >= &v15[32 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

void sub_10007A9DC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  double v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Class isa;
  uint64_t v23;
  id v24;
  uint64_t v25;
  _OWORD v26[2];
  _OWORD v27[2];

  v3 = objc_opt_self(CABasicAnimation);
  v4 = swift_dynamicCastObjCClass(a1, v3);
  if (v4)
  {
    v5 = (void *)v4;
    v24 = a1;
    v6 = objc_msgSend(v5, "keyPath");
    if (!v6)
    {
LABEL_8:

      return;
    }
    v7 = v6;
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    v10 = v9;

    v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_colorsKey);
    v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_colorsKey + 8);
    if (v8 == v11 && v10 == v12)
    {
      *(_QWORD *)&v15 = swift_bridgeObjectRelease(v10).n128_u64[0];
    }
    else
    {
      v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, v11, v12, 0);
      *(_QWORD *)&v15 = swift_bridgeObjectRelease(v10).n128_u64[0];
      if ((v14 & 1) == 0)
        goto LABEL_8;
    }
    v16 = *(void **)(v1 + OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_viewFinderBorderLayer);
    v17 = objc_msgSend(v5, "toValue", v15);
    if (v17)
    {
      v18 = v17;
      _bridgeAnyObjectToAny(_:)(v26, v17);
      swift_unknownObjectRelease(v18);
      sub_10000DAD8(v26, v27);
      v19 = sub_10000D604(&qword_1000D7CB8);
      swift_dynamicCast(&v25, v27, (char *)&type metadata for Any + 8, v19, 7);
      v20 = v25;
      v21 = sub_100077D84(v25);
      swift_bridgeObjectRelease(v20);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v16, "setColors:", isa, swift_bridgeObjectRelease(v21).n128_f64[0]);

      v23 = OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_needsReset;
      if (*(_BYTE *)(v1 + OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_needsReset) == 1)
        objc_msgSend(v16, "removeAllAnimations");

      *(_BYTE *)(v1 + v23) = 0;
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10007ABD4()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;

  v1 = v0;
  v2 = OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_viewFinderTintLayer;
  *(_QWORD *)&v1[v2] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v3 = OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_viewFinderBorderLayer;
  *(_QWORD *)&v1[v3] = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
  v4 = OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_borderLayerMask;
  *(_QWORD *)&v1[v4] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v5 = OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_initialWhiteTintLayer;
  *(_QWORD *)&v1[v5] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v6 = &v1[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_rotKey];
  *v6 = 0xD000000000000012;
  v6[1] = 0x80000001000A2920;
  v7 = &v1[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_colorsKey];
  *v7 = 0x73726F6C6F63;
  v7[1] = 0xE600000000000000;
  v1[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_needsReset] = 0;
  v8 = OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_initialColors;
  v9 = sub_10000D604(&qword_1000D6EE0);
  v10 = swift_allocObject(v9, 48, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100099270;
  v11 = (void *)objc_opt_self(UIColor);
  v12 = objc_msgSend(v11, "systemBlueColor");
  v13 = objc_msgSend(v12, "colorWithAlphaComponent:", 1.0);

  *(_QWORD *)(v10 + 32) = v13;
  v14 = objc_msgSend(v11, "systemBlueColor");
  v15 = objc_msgSend(v14, "colorWithAlphaComponent:", 1.0);

  *(_QWORD *)(v10 + 40) = v15;
  specialized Array._endMutation()(v16);
  *(_QWORD *)&v1[v8] = v10;
  *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_innerInitialHoleWidthRatio] = 0x3FDCCCCCCCCCCCCDLL;
  *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_innerTargetHoleWidthRatio] = 0x3FE3333333333333;
  *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_strokeWidth] = 0x402A000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService35SVSLEDPasscodeActivityIndicatorView_successStrokeWidth] = 0x4033000000000000;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010009D420, "HDSViewService/SVSLEDPasscodeActivityIndicator.swift", 52, 2, 105, 0);
  __break(1u);
}

uint64_t sub_10007AE28()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 41, 7);
}

uint64_t sub_10007AE4C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

id sub_10007AE78(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  id result;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;

  if (a1)
  {
    if ((unint64_t)a1 >> 62)
    {
      if (a1 >= 0)
        v8 = a1 & 0xFFFFFFFFFFFFFF8;
      else
        v8 = a1;
      swift_bridgeObjectRetain_n(a1, 2);
      result = (id)_CocoaArrayWrapper.endIndex.getter(v8);
      v3 = (uint64_t)result;
      if (result)
        goto LABEL_4;
    }
    else
    {
      v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      result = (id)swift_bridgeObjectRetain_n(a1, 2);
      if (v3)
      {
LABEL_4:
        if (v3 < 1)
        {
          __break(1u);
LABEL_31:
          __break(1u);
          return result;
        }
        for (i = 0; i != v3; ++i)
        {
          if ((a1 & 0xC000000000000001) != 0)
            v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
          else
            v6 = *(id *)(a1 + 8 * i + 32);
          v7 = v6;
          objc_msgSend(v6, "removeFromSuperview");

        }
      }
    }
    swift_bridgeObjectRelease_n(a1, 2);
  }
  v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViewConstraints];
  *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViewConstraints] = 0;
  result = (id)swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViews];
  if (v10)
  {
    if ((unint64_t)v10 >> 62)
    {
      if (v10 >= 0)
        v15 = v10 & 0xFFFFFFFFFFFFFF8;
      else
        v15 = *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViews];
      swift_bridgeObjectRetain_n(*(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViews], 2);
      result = (id)_CocoaArrayWrapper.endIndex.getter(v15);
      v11 = (uint64_t)result;
      if (result)
      {
LABEL_18:
        if (v11 >= 1)
        {
          v12 = 0;
          do
          {
            if ((v10 & 0xC000000000000001) != 0)
              v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v10);
            else
              v13 = *(id *)(v10 + 8 * v12 + 32);
            v14 = v13;
            ++v12;
            objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
            objc_msgSend(v1, "addSubview:", v14);

          }
          while (v11 != v12);
          goto LABEL_29;
        }
        goto LABEL_31;
      }
    }
    else
    {
      v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      result = (id)swift_bridgeObjectRetain_n(*(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViews], 2);
      if (v11)
        goto LABEL_18;
    }
LABEL_29:
    swift_bridgeObjectRelease_n(v10, 2);
    return objc_msgSend(v1, "setNeedsUpdateConstraints");
  }
  return result;
}

void sub_10007B060(void *a1)
{
  sub_10007B088(a1, &OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_progressView, &OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_progressViewConstraints);
}

void sub_10007B074(void *a1)
{
  sub_10007B088(a1, &OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_bodyLabel, &OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_bodyLabelConstraints);
}

void sub_10007B088(void *a1, uint64_t *a2, _QWORD *a3)
{
  char *v3;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;

  v5 = *a2;
  v6 = *(void **)&v3[*a2];
  *(_QWORD *)&v3[*a2] = a1;
  v10 = a1;
  if (v6)
    objc_msgSend(v6, "removeFromSuperview");
  v7 = *(void **)&v3[v5];
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v3, "addSubview:", v8);
    v9 = *(_QWORD *)&v3[*a3];
    *(_QWORD *)&v3[*a3] = 0;
    swift_bridgeObjectRelease(v9);
    objc_msgSend(v3, "setNeedsUpdateConstraints");

    v6 = v10;
    v10 = v8;
  }

}

char *sub_10007B144(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void *v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  Class isa;
  id v32;
  objc_super v33;

  *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViewConstraints] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_progressViewConstraints] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_bodyLabelConstraints] = 0;
  v3 = OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViewsGuide;
  v4 = objc_allocWithZone((Class)UILayoutGuide);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  *(_QWORD *)&v5[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViews] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_progressView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_bodyLabel] = 0;

  v33.receiver = v5;
  v33.super_class = (Class)type metadata accessor for HomePodSetupProgressBarView();
  v6 = (char *)objc_msgSendSuper2(&v33, "initWithCardStyle:", a1);
  v7 = OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViewsGuide;
  v8 = *(void **)&v6[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViewsGuide];
  v9 = v6;
  objc_msgSend(v9, "addLayoutGuide:", v8);
  v10 = objc_msgSend(v9, "mainContentGuide");
  v32 = (id)objc_opt_self(NSLayoutConstraint);
  v11 = sub_10000D604(&qword_1000D6EE0);
  v12 = swift_allocObject(v11, 72, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100099550;
  v13 = objc_msgSend(v8, "topAnchor");
  v14 = objc_msgSend(v10, "topAnchor");
  v15 = objc_msgSend(v13, "constraintEqualToAnchor:", v14);

  *(_QWORD *)(v12 + 32) = v15;
  v16 = objc_msgSend(*(id *)&v6[v7], "leadingAnchor");
  v17 = objc_msgSend(v10, "leadingAnchor");
  v18 = objc_msgSend(v16, "constraintGreaterThanOrEqualToAnchor:", v17);

  *(_QWORD *)(v12 + 40) = v18;
  v19 = objc_msgSend(*(id *)&v6[v7], "trailingAnchor");
  v20 = objc_msgSend(v10, "trailingAnchor");
  v21 = objc_msgSend(v19, "constraintLessThanOrEqualToAnchor:", v20);

  *(_QWORD *)(v12 + 48) = v21;
  v22 = objc_msgSend(*(id *)&v6[v7], "centerXAnchor");
  v23 = objc_msgSend(v10, "centerXAnchor");
  v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

  *(_QWORD *)(v12 + 56) = v24;
  v25 = objc_msgSend(*(id *)&v6[v7], "bottomAnchor");
  v26 = objc_msgSend(v10, "bottomAnchor");
  v27 = objc_msgSend(v25, "constraintLessThanOrEqualToAnchor:", v26);

  *(_QWORD *)(v12 + 64) = v27;
  specialized Array._endMutation()(v28);
  v29 = v12;
  sub_100014934();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v32, "activateConstraints:", isa, swift_bridgeObjectRelease(v29).n128_f64[0]);

  return v9;
}

void sub_10007B510()
{
  char *v0;
  char *v1;
  _QWORD *v2;
  uint64_t v3;
  _UNKNOWN **v4;
  char **p_type;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  double v11;
  id i;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  id v64;
  id v65;
  id v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  id v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  Class isa;
  uint64_t v77;
  char **v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char **v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  uint64_t v93;
  void *v94;
  Class v95;
  uint64_t v96;
  char **v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  uint64_t v113;
  void *v114;
  Class v115;
  uint64_t v116;
  id v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  unint64_t v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  double v126;
  id v127;
  id v128;
  id v129;
  id v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  id v135;
  id v136;
  id v137;
  id v138;
  uint64_t v139;
  unint64_t v140;
  unint64_t v141;
  uint64_t v142;
  id v143;
  id v144;
  id v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  void *v149;
  Class v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  objc_super v156;

  v1 = v0;
  v156.receiver = v0;
  v156.super_class = (Class)type metadata accessor for HomePodSetupProgressBarView();
  objc_msgSendSuper2(&v156, "updateConstraints");
  v2 = _swiftEmptyArrayStorage;
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViews];
  v4 = &_s10Foundation12CharacterSetV36_unconditionallyBridgeFromObjectiveCyACSo011NSCharacterC0CSgFZ_ptr;
  p_type = (char **)(&stru_1000CEFF0 + 16);
  v155 = v0;
  if (v3)
  {
    if ((unint64_t)v3 >> 62)
    {
      if (v3 >= 0)
        v151 = v3 & 0xFFFFFFFFFFFFFF8;
      else
        v151 = *(_QWORD *)&v0[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViews];
      swift_bridgeObjectRetain(v3);
      v6 = _CocoaArrayWrapper.endIndex.getter(v151);
      if (!v6)
        goto LABEL_5;
    }
    else
    {
      v6 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v3);
      if (!v6)
      {
LABEL_5:
        swift_bridgeObjectRelease(v3);
        goto LABEL_41;
      }
    }
    if (*(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViewConstraints])
      goto LABEL_5;
    v152 = OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViewConstraints;
    v7 = v6 - 1;
    v153 = v6 - 1;
    if (v6 < 1)
    {
      __break(1u);
    }
    else
    {
      v8 = 0;
      v9 = 0;
      v10 = *(void **)&v155[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViewsGuide];
      v11 = PRXIconToIconMargin;
      if ((v3 & 0xC000000000000001) == 0)
        goto LABEL_9;
LABEL_8:
      for (i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v3); ; i = *(id *)(v3 + 8 * v8 + 32))
      {
        v13 = i;
        v14 = objc_msgSend(i, "centerYAnchor", v152);
        if (!v9 || (v15 = objc_msgSend(v9, "centerYAnchor")) == 0)
          v15 = objc_msgSend(v10, "centerYAnchor");
        v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
        v19 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v18 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v19 >= v18 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
        v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v16);
        specialized Array._endMutation()(v20);
        v21 = objc_msgSend(v13, "image");
        if (v21)
        {
          v22 = v21;
          objc_msgSend(v21, "size");
          v24 = v23;
          v26 = v25;

        }
        else
        {
          v26 = 1.0;
          v24 = 1.0;
        }
        if (v24 <= 0.0)
          v27 = 1.0;
        else
          v27 = v26 / v24;
        v28 = objc_msgSend(v13, "heightAnchor");
        v29 = objc_msgSend(v13, "widthAnchor");
        v30 = objc_msgSend(v28, "constraintEqualToAnchor:multiplier:", v29, v27);

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
        v33 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v32 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v33 >= v32 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1);
        v34 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v30);
        specialized Array._endMutation()(v34);
        v35 = objc_msgSend(v13, "topAnchor");
        v36 = objc_msgSend(v10, "topAnchor");
        v37 = objc_msgSend(v35, "constraintGreaterThanOrEqualToAnchor:", v36);

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v38);
        v40 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v39 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v40 >= v39 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v39 > 1, v40 + 1, 1);
        v41 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v40, v37);
        specialized Array._endMutation()(v41);
        v42 = objc_msgSend(v13, "bottomAnchor");
        v43 = objc_msgSend(v10, "bottomAnchor");
        v44 = objc_msgSend(v42, "constraintLessThanOrEqualToAnchor:", v43);

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v45);
        v47 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v46 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v47 >= v46 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v46 > 1, v47 + 1, 1);
        v48 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v47, v44);
        specialized Array._endMutation()(v48);
        if (v9)
        {
          v49 = v9;
          v50 = objc_msgSend(v13, "leadingAnchor");
          v51 = objc_msgSend(v49, "trailingAnchor");
          v52 = objc_msgSend(v50, "constraintEqualToAnchor:constant:", v51, v11);

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v53);
          v55 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          v54 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v55 >= v54 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v54 > 1, v55 + 1, 1);
          v56 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v55, v52);
          specialized Array._endMutation()(v56);
          v57 = objc_msgSend(v49, "widthAnchor");
          v58 = objc_msgSend(v13, "widthAnchor");
          v59 = objc_msgSend(v57, "constraintEqualToAnchor:", v58);

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v60);
          v62 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          v61 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v62 >= v61 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v61 > 1, v62 + 1, 1);
          v63 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v62, v59);
          specialized Array._endMutation()(v63);

        }
        else
        {
          v64 = objc_msgSend(v13, "leadingAnchor");
          v65 = objc_msgSend(v10, "leadingAnchor");
          v66 = objc_msgSend(v64, "constraintEqualToAnchor:", v65);

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v67);
          v69 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          v68 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v69 >= v68 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v68 > 1, v69 + 1, 1);
          v70 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v69, v66);
          specialized Array._endMutation()(v70);
        }
        if (v153 == v8)
          break;
        ++v8;
        v9 = v13;
        if ((v3 & 0xC000000000000001) != 0)
          goto LABEL_8;
LABEL_9:
        ;
      }
      swift_bridgeObjectRelease(v3);
      v3 = v13;
      v71 = objc_msgSend((id)v3, "trailingAnchor");
      v72 = objc_msgSend(v10, "trailingAnchor");
      v2 = objc_msgSend(v71, "constraintEqualToAnchor:", v72);

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v73);
      v1 = *(char **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v7 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if ((unint64_t)v1 < v7 >> 1)
        goto LABEL_40;
    }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v7 > 1, v1 + 1, 1);
LABEL_40:
    v74 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v1, v2);
    specialized Array._endMutation()(v74);

    v4 = &_s10Foundation12CharacterSetV36_unconditionallyBridgeFromObjectiveCyACSo011NSCharacterC0CSgFZ_ptr;
    v75 = (void *)objc_opt_self(NSLayoutConstraint);
    sub_100014934();
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    isa = Array._bridgeToObjectiveC()().super.isa;
    p_type = &stru_1000CEFF0.type;
    objc_msgSend(v75, "activateConstraints:", isa, swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_f64[0]);

    v1 = v155;
    v77 = *(_QWORD *)&v155[v152];
    *(_QWORD *)&v155[v152] = _swiftEmptyArrayStorage;

    swift_bridgeObjectRelease(v77);
  }
LABEL_41:
  v78 = *(char ***)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_progressView];
  if (v78)
  {
    v79 = OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_progressViewConstraints;
    if (!*(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_progressViewConstraints])
    {
      v80 = sub_10000D604(&qword_1000D6EE0);
      v81 = swift_allocObject(v80, 56, 7);
      *(_OWORD *)(v81 + 16) = xmmword_10009A4F0;
      v82 = v78;
      v83 = objc_msgSend(v82, "leadingAnchor");
      v78 = &selRef_initWithRegistrationItems_;
      v84 = objc_msgSend(v1, "mainContentGuide");
      v85 = objc_msgSend(v84, "leadingAnchor");

      v86 = objc_msgSend(v83, "constraintEqualToAnchor:", v85);
      *(_QWORD *)(v81 + 32) = v86;
      v87 = objc_msgSend(v82, "trailingAnchor");
      v88 = objc_msgSend(v155, "mainContentGuide");
      v89 = objc_msgSend(v88, "trailingAnchor");

      v90 = objc_msgSend(v87, "constraintEqualToAnchor:", v89);
      *(_QWORD *)(v81 + 40) = v90;
      v91 = objc_msgSend(v82, "heightAnchor");
      v92 = objc_msgSend(v91, "constraintEqualToConstant:", 5.0);

      *(_QWORD *)(v81 + 48) = v92;
      specialized Array._endMutation()(v93);
      v94 = (void *)objc_opt_self(v4[368]);
      sub_100014934();
      v95 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v94, p_type[411], v95);

      v1 = v155;
      v96 = *(_QWORD *)&v155[v79];
      *(_QWORD *)&v155[v79] = v81;
      swift_bridgeObjectRelease(v96);
      v97 = v82;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v97);
      v99 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v98 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v99 >= v98 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v98 > 1, v99 + 1, 1);
      v100 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v99, v97);
      specialized Array._endMutation()(v100);

    }
  }
  v101 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_bodyLabel];
  if (v101)
  {
    v78 = (char **)OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_bodyLabelConstraints;
    if (!*(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_bodyLabelConstraints])
    {
      v102 = sub_10000D604(&qword_1000D6EE0);
      v103 = swift_allocObject(v102, 48, 7);
      *(_OWORD *)(v103 + 16) = xmmword_100099270;
      v104 = v101;
      v105 = objc_msgSend(v104, "leadingAnchor");
      v106 = objc_msgSend(v1, "mainContentGuide");
      v107 = objc_msgSend(v106, "leadingAnchor");

      v108 = objc_msgSend(v105, "constraintEqualToAnchor:", v107);
      *(_QWORD *)(v103 + 32) = v108;
      v109 = objc_msgSend(v104, "trailingAnchor");
      v110 = objc_msgSend(v155, "mainContentGuide");
      v111 = objc_msgSend(v110, "trailingAnchor");

      v112 = objc_msgSend(v109, "constraintEqualToAnchor:", v111);
      *(_QWORD *)(v103 + 40) = v112;
      specialized Array._endMutation()(v113);
      v114 = (void *)objc_opt_self(v4[368]);
      sub_100014934();
      v115 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v114, p_type[411], v115);

      v116 = *(uint64_t *)((char *)v78 + (_QWORD)v155);
      *(char **)((char *)v78 + (_QWORD)v155) = (char *)v103;
      swift_bridgeObjectRelease(v116);
      v117 = v104;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v117);
      v119 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v118 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v119 >= v118 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v118 > 1, v119 + 1, 1);
      v120 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v119, v117);
      specialized Array._endMutation()(v120);

    }
  }
  v121 = _swiftEmptyArrayStorage;
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    if ((uint64_t)_swiftEmptyArrayStorage < 0)
      v148 = _swiftEmptyArrayStorage;
    else
      v148 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    v123 = _CocoaArrayWrapper.endIndex.getter(v148);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    if (v123)
      goto LABEL_53;
LABEL_72:
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    v121 = 0;
    goto LABEL_73;
  }
  v122 = (unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8;
  v123 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v123)
    goto LABEL_72;
LABEL_53:
  if (v123 >= 1)
  {
    v124 = 0;
    v125 = 0;
    v154 = OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViewsGuide;
    v126 = PRXMainContentMargin;
    while (1)
    {
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0)
      {
        v135 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v125, _swiftEmptyArrayStorage);
        if (v124)
          goto LABEL_55;
      }
      else
      {
        v135 = (id)_swiftEmptyArrayStorage[v125 + 4];
        if (v124)
        {
LABEL_55:
          v127 = v124;
          v128 = objc_msgSend(v135, "topAnchor");
          v129 = objc_msgSend(v127, "bottomAnchor");
          v130 = objc_msgSend(v128, "constraintEqualToAnchor:constant:", v129, v126);

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v131);
          v133 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          v132 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v133 >= v132 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v132 > 1, v133 + 1, 1);
          v134 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v133, v130);
          specialized Array._endMutation()(v134);

          goto LABEL_58;
        }
      }
      v136 = objc_msgSend(v135, "topAnchor", v152);
      v137 = objc_msgSend(*(id *)&v155[v154], "bottomAnchor");
      v138 = objc_msgSend(v136, "constraintEqualToAnchor:constant:", v137, v126);

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v139);
      v141 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v140 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v141 >= v140 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v140 > 1, v141 + 1, 1);
      v142 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v141, v138);
      specialized Array._endMutation()(v142);
LABEL_58:
      ++v125;
      v124 = v135;
      if (v123 == v125)
      {
        swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
        v121 = v135;
        v143 = objc_msgSend(v121, "bottomAnchor");
        v144 = objc_msgSend(v155, "mainContentGuide");
        v145 = objc_msgSend(v144, "bottomAnchor");

        v78 = (char **)objc_msgSend(v143, "constraintLessThanOrEqualToAnchor:", v145);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v146);
        v123 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v122 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v123 < v122 >> 1)
          goto LABEL_67;
        goto LABEL_80;
      }
    }
  }
  __break(1u);
LABEL_80:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v122 > 1, v123 + 1, 1);
LABEL_67:
  v147 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v123, v78);
  specialized Array._endMutation()(v147);

  p_type = (char **)(&stru_1000CEFF0 + 16);
  v4 = &_s10Foundation12CharacterSetV36_unconditionallyBridgeFromObjectiveCyACSo011NSCharacterC0CSgFZ_ptr;
LABEL_73:
  v149 = (void *)objc_opt_self(v4[368]);
  sub_100014934();
  v150 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v149, p_type[411], v150, swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_f64[0]);

}

id sub_10007C510()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupProgressBarView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for HomePodSetupProgressBarView()
{
  return objc_opt_self(_TtC14HDSViewService27HomePodSetupProgressBarView);
}

void sub_10007C5E8()
{
  char *v0;
  uint64_t v1;

  *(_QWORD *)&v0[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViewConstraints] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_progressViewConstraints] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_bodyLabelConstraints] = 0;
  v1 = OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViewsGuide;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_imageViews] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_progressView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC14HDSViewService27HomePodSetupProgressBarView_bodyLabel] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010009D420, "HDSViewService/HomePodSetupProgressBarView.swift", 48, 2, 75, 0);
  __break(1u);
}

uint64_t sub_10007C6B4(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v1(v3);
  return swift_release(v2);
}

uint64_t sub_10007C6E0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

Swift::Int sub_10007C6E8()
{
  Swift::UInt8 *v0;
  Swift::UInt8 v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_10007C72C()
{
  Swift::UInt8 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_10007C754(uint64_t a1)
{
  Swift::UInt8 *v1;
  Swift::UInt8 v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

char *sub_10007C794@<X0>(char *result@<X0>, char *a2@<X8>)
{
  int v2;
  char v3;
  BOOL v4;
  BOOL v5;
  char v6;
  BOOL v7;

  v2 = *result;
  if (*result)
    v3 = 0;
  else
    v3 = *result;
  v4 = v2 != 0;
  v5 = v2 == 1;
  if (v2 == 1)
    v6 = 1;
  else
    v6 = v3;
  v7 = !v5 && v4;
  *a2 = v6;
  a2[1] = v7;
  return result;
}

id sub_10007C8A4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PreviewView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_10007C9E0()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  *(_QWORD *)&v0[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_engine] = 0;
  v1 = OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_preView;
  v2 = type metadata accessor for PreviewView();
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)), "init");
  v0[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_setupSucceeded] = 0;
  v3 = OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_session;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)AVCaptureSession), "init");
  v4 = OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_feedbackGenerator;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)UINotificationFeedbackGenerator), "init");
  v5 = OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_output;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)AVCaptureVideoDataOutput), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_videoDeviceInput] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController__videoDevice] = 0;
  v0[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_startIngesting] = 0;
  v6 = &v0[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_handler];
  *v6 = 0;
  v6[1] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x6961766120746F4ELL, 0xED0000656C62616CLL, "HDSViewService/SVSHomePodIDViewController.swift", 47, 2, 51, 0);
  __break(1u);
}

id sub_10007CB34(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  objc_super v12;

  *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_engine] = 0;
  v3 = OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_preView;
  v4 = type metadata accessor for PreviewView();
  v5 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4));
  v6 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v5, "init");
  v6[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_setupSucceeded] = 0;
  v7 = OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_session;
  *(_QWORD *)&v6[v7] = objc_msgSend(objc_allocWithZone((Class)AVCaptureSession), "init");
  v8 = OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_feedbackGenerator;
  *(_QWORD *)&v6[v8] = objc_msgSend(objc_allocWithZone((Class)UINotificationFeedbackGenerator), "init");
  v9 = OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_output;
  *(_QWORD *)&v6[v9] = objc_msgSend(objc_allocWithZone((Class)AVCaptureVideoDataOutput), "init");
  *(_QWORD *)&v6[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_videoDeviceInput] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController__videoDevice] = 0;
  v6[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_startIngesting] = 0;
  v10 = &v6[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_handler];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v6[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_deviceModel] = a1;

  v12.receiver = v6;
  v12.super_class = (Class)type metadata accessor for SVSHomePodIDViewController();
  return objc_msgSendSuper2(&v12, "initWithNibName:bundle:", 0, 0);
}

Swift::Void __swiftcall SVSHomePodIDViewController.viewDidLoad()()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  objc_super v20;

  v20.receiver = v0;
  v20.super_class = (Class)type metadata accessor for SVSHomePodIDViewController();
  objc_msgSendSuper2(&v20, "viewDidLoad");
  v1 = *(void **)&v0[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_preView];
  v2 = *(id *)&v0[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_session];
  v3 = objc_msgSend(v1, "layer");
  v4 = objc_opt_self(AVCaptureVideoPreviewLayer);
  objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v3, v4, 0, 0, 0), "setSession:", v2);

  sub_10007DD4C();
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_feedbackGenerator], "prepare");
  v5 = objc_msgSend(v1, "layer");
  v6 = objc_opt_self(AVCaptureVideoPreviewLayer);
  objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v5, v6, 0, 0, 0), "setVideoGravity:", AVLayerVideoGravityResizeAspectFill);

  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v7 = objc_msgSend(v0, "view");
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, "addSubview:", v1);

    v9 = objc_msgSend(v1, "layer");
    v10 = objc_msgSend(v0, "view");
    if (v10)
    {
      v11 = v10;
      objc_msgSend(v10, "bounds");
      v13 = v12;
      v15 = v14;
      v17 = v16;
      v19 = v18;

      objc_msgSend(v9, "setFrame:", v13, v15, v17, v19);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t type metadata accessor for SVSHomePodIDViewController()
{
  return objc_opt_self(_TtC14HDSViewService26SVSHomePodIDViewController);
}

Swift::Void __swiftcall SVSHomePodIDViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  objc_class *v17;
  void *v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char *v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void **aBlock;
  uint64_t v55;
  uint64_t (*v56)(uint64_t);
  void *v57;
  void (*v58)();
  uint64_t v59;
  objc_super v60;

  v2 = v1;
  v44 = type metadata accessor for DispatchWorkItemFlags(0);
  v52 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for DispatchQoS(0);
  v51 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchTime(0);
  v9 = *(_QWORD *)(v8 - 8);
  v43 = v8;
  v10 = __chkstk_darwin(v8);
  v50 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v43 - v13;
  __chkstk_darwin(v12);
  v16 = (char *)&v43 - v15;
  v17 = (objc_class *)type metadata accessor for SVSHomePodIDViewController();
  v60.receiver = v2;
  v60.super_class = v17;
  objc_msgSendSuper2(&v60, "viewWillAppear:", a1);
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_session], "startRunning");
  v45 = sub_100035CA4(0, (unint64_t *)&qword_1000D7B50, OS_dispatch_queue_ptr);
  v18 = (void *)((uint64_t (*)(void))static OS_dispatch_queue.main.getter)();
  static DispatchTime.now()();
  + infix(_:_:)(v14, 2.0);
  v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v20 = v8;
  v21 = v44;
  v19(v14, v20);
  v22 = swift_allocObject(&unk_1000C52C0, 24, 7);
  *(_QWORD *)(v22 + 16) = v2;
  v58 = sub_10007E230;
  v59 = v22;
  aBlock = _NSConcreteStackBlock;
  v55 = 1107296256;
  v56 = sub_10007C6B4;
  v57 = &unk_1000C52D8;
  v23 = _Block_copy(&aBlock);
  v24 = v59;
  v48 = v2;
  swift_release(v24);
  static DispatchQoS.unspecified.getter(v25);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v26 = sub_100012C2C();
  v27 = sub_10000D604((uint64_t *)&unk_1000D7B60);
  v46 = sub_100012C74();
  v47 = v27;
  v49 = v26;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v27, v46, v21, v26);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v16, v7, v5, v23);
  v28 = v23;
  v29 = v43;
  _Block_release(v28);

  v52 = *(_QWORD *)(v52 + 8);
  ((void (*)(char *, uint64_t))v52)(v5, v21);
  v51 = *(_QWORD *)(v51 + 8);
  ((void (*)(char *, uint64_t))v51)(v7, v53);
  v30 = ((uint64_t (*)(char *, uint64_t))v19)(v16, v29);
  v31 = static OS_dispatch_queue.main.getter(v30);
  v32 = v50;
  v33 = (void *)v31;
  static DispatchTime.now()();
  if (qword_1000D5650 != -1)
    swift_once(&qword_1000D5650, sub_100077FB4);
  v34 = type metadata accessor for DispatchTimeInterval(0);
  v35 = sub_10001118C(v34, (uint64_t)HomePodViewfinderCircleAnimationDelay);
  + infix(_:_:)(v32, v35);
  v19(v32, v29);
  + infix(_:_:)(v14, 0.5);
  v19(v14, v29);
  v36 = swift_allocObject(&unk_1000C5310, 24, 7);
  v37 = v48;
  *(_QWORD *)(v36 + 16) = v48;
  v58 = sub_10007E268;
  v59 = v36;
  aBlock = _NSConcreteStackBlock;
  v55 = 1107296256;
  v56 = sub_10007C6B4;
  v57 = &unk_1000C5328;
  v38 = v29;
  v39 = _Block_copy(&aBlock);
  v40 = v59;
  v41 = v37;
  swift_release(v40);
  static DispatchQoS.unspecified.getter(v42);
  aBlock = (void **)_swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v47, v46, v21, v49);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v16, v7, v5, v39);
  _Block_release(v39);

  ((void (*)(char *, uint64_t))v52)(v5, v21);
  ((void (*)(char *, uint64_t))v51)(v7, v53);
  v19(v16, v38);
}

Swift::Void __swiftcall SVSHomePodIDViewController.viewDidDisappear(_:)(Swift::Bool a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  objc_class *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD aBlock[5];
  uint64_t v22;
  objc_super v23;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (objc_class *)type metadata accessor for SVSHomePodIDViewController();
  v23.receiver = v2;
  v23.super_class = v12;
  objc_msgSendSuper2(&v23, "viewDidDisappear:", a1);
  v13 = sub_100035CA4(0, (unint64_t *)&qword_1000D7B50, OS_dispatch_queue_ptr);
  v14 = (void *)static OS_dispatch_queue.main.getter(v13);
  v15 = swift_allocObject(&unk_1000C5360, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16, v2);
  aBlock[4] = sub_10007E280;
  v22 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10007C6B4;
  aBlock[3] = &unk_1000C5378;
  v16 = _Block_copy(aBlock);
  swift_release(v22);
  static DispatchQoS.unspecified.getter(v17);
  aBlock[0] = _swiftEmptyArrayStorage;
  v18 = sub_100012C2C();
  v19 = sub_10000D604((uint64_t *)&unk_1000D7B60);
  v20 = sub_100012C74();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v4, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void sub_10007D5C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  char *v8;
  void *v9;
  _BYTE v10[24];
  _BYTE v11[24];
  _BYTE v12[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(id *)(Strong + OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_session);

    objc_msgSend(v4, "stopRunning");
  }
  swift_beginAccess(v1, v11, 0, 0);
  v5 = swift_unknownObjectWeakLoadStrong(v1);
  if (v5)
  {
    v6 = (void *)v5;
    v7 = *(id *)(v5 + OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_engine);

    objc_msgSend(v7, "reset");
  }
  swift_beginAccess(v1, v10, 0, 0);
  v8 = (char *)swift_unknownObjectWeakLoadStrong(v1);
  if (v8)
  {
    v9 = *(void **)&v8[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_engine];
    *(_QWORD *)&v8[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_engine] = 0;

  }
}

Swift::Void __swiftcall SVSHomePodIDViewController.viewDidLayoutSubviews()()
{
  char *v0;
  id v1;
  id v2;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  objc_super v12;

  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for SVSHomePodIDViewController();
  objc_msgSendSuper2(&v12, "viewDidLayoutSubviews");
  v1 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_preView], "layer");
  v2 = objc_msgSend(v0, "view");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "bounds");
    v5 = v4;
    v7 = v6;
    v9 = v8;
    v11 = v10;

    objc_msgSend(v1, "setFrame:", v5, v7, v9, v11);
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall SVSHomePodIDViewController.configureEngine()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  _QWORD v14[5];
  uint64_t v15;

  v1 = OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_engine;
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_engine))
  {
    v2 = v0;
    v3 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_deviceModel);
    if (v3 == 1)
    {
      v4 = objc_msgSend(objc_allocWithZone((Class)AnalysisEngine), "initForType:", 1);
      if (v4)
      {
LABEL_7:
        sub_100035CA4(0, (unint64_t *)&qword_1000D7B50, OS_dispatch_queue_ptr);
        v5 = (void *)static OS_dispatch_queue.main.getter();
        objc_msgSend(v4, "setDispatchQueue:", v5);

        v6 = *(void **)(v2 + v1);
        *(_QWORD *)(v2 + v1) = v4;
        v7 = v4;

        objc_msgSend(v7, "setUseRecognizer:", 1);
        LODWORD(v8) = 1045220557;
        objc_msgSend(v7, "setMotionRotationThreshold:", v8);
        objc_msgSend(v7, "setUsingM7Motion:", 0);
        LODWORD(v9) = 1024416809;
        objc_msgSend(v7, "setMotionAccelerationThreshold:", v9);
        v10 = swift_allocObject(&unk_1000C5360, 24, 7);
        swift_unknownObjectWeakInit(v10 + 16, v2);
        v11 = swift_allocObject(&unk_1000C53B0, 24, 7);
        swift_unknownObjectWeakInit(v11 + 16, v7);
        v12 = swift_allocObject(&unk_1000C53D8, 32, 7);
        *(_QWORD *)(v12 + 16) = v11;
        *(_QWORD *)(v12 + 24) = v10;
        v14[4] = sub_10007E2D8;
        v15 = v12;
        v14[0] = _NSConcreteStackBlock;
        v14[1] = 1107296256;
        v14[2] = sub_10007C6B4;
        v14[3] = &unk_1000C53F0;
        v13 = _Block_copy(v14);
        objc_msgSend(v7, "setRecognizingCompletionHandlerBlock:", v13, swift_release(v15).n128_f64[0]);
        _Block_release(v13);

        return;
      }
      __break(1u);
    }
    if (!v3)
    {
      v4 = objc_msgSend(objc_allocWithZone((Class)AnalysisEngine), "initForType:", 0);
      if (v4)
        goto LABEL_7;
      __break(1u);
    }
    LOBYTE(v14[0]) = v3;
    _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for SVSHomePodIDViewControllerDeviceModel, v14, &type metadata for SVSHomePodIDViewControllerDeviceModel, &type metadata for UInt8);
    __break(1u);
  }
}

void sub_10007DB18(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *Strong;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  char *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  void *v18;
  void (*v19)(void);
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[24];
  _BYTE v23[24];
  _BYTE v24[24];
  _BYTE v25[24];
  _BYTE v26[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v26, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = objc_msgSend(Strong, "recognizingCompletionHandlerBlock");

    if (v6)
    {
      v7 = a2 + 16;
      _Block_release(v6);
      swift_beginAccess(v3, v25, 0, 0);
      v8 = (void *)swift_unknownObjectWeakLoadStrong(v3);
      if (v8)
      {
        v9 = v8;
        objc_msgSend(v8, "setRecognizingCompletionHandlerBlock:", 0);

      }
      swift_beginAccess(v3, v24, 0, 0);
      v10 = (void *)swift_unknownObjectWeakLoadStrong(v3);
      if (v10)
      {
        v11 = v10;
        objc_msgSend(v10, "reset");

      }
      swift_beginAccess(v7, v23, 0, 0);
      v12 = (char *)swift_unknownObjectWeakLoadStrong(v7);
      if (v12)
      {
        v13 = *(void **)&v12[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_engine];
        *(_QWORD *)&v12[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_engine] = 0;

      }
      swift_beginAccess(v7, v22, 0, 0);
      v14 = swift_unknownObjectWeakLoadStrong(v7);
      if (v14)
      {
        v15 = (void *)v14;
        v16 = *(id *)(v14 + OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_feedbackGenerator);

        objc_msgSend(v16, "notificationOccurred:", 0);
      }
      swift_beginAccess(v7, &v21, 0, 0);
      v17 = swift_unknownObjectWeakLoadStrong(v7);
      if (v17)
      {
        v18 = (void *)v17;
        v19 = *(void (**)(void))(v17 + OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_handler);
        v20 = *(_QWORD *)(v17 + OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_handler + 8);
        sub_1000588D4((uint64_t)v19, v20);

        if (v19)
        {
          v19();
          sub_1000588E4((uint64_t)v19, v20);
        }
      }
    }
  }
}

Swift::Void __swiftcall SVSHomePodIDViewController.preheatEngine()()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_engine), "preheat");
}

void sub_10007DD4C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  CMTimeValue value;
  void *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  unsigned __int8 v21;
  id v22;
  CMTimeValue v23;
  CMTimeScale timescale;
  CMTimeEpoch epoch;
  uint64_t v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  char *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  CMTime v39;
  CMTime v40;

  v1 = v0;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_session);
  objc_msgSend(v2, "beginConfiguration");
  v3 = *(void **)(v0 + OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_output);
  objc_msgSend(v3, "setAlwaysDiscardsLateVideoFrames:", 1);
  sub_100035CA4(0, (unint64_t *)&qword_1000D7B50, OS_dispatch_queue_ptr);
  v4 = (void *)static OS_dispatch_queue.main.getter();
  objc_msgSend(v3, "setSampleBufferDelegate:queue:", v1, v4);

  objc_msgSend(v2, "addOutput:", v3);
  v5 = AVCaptureSessionPresetHigh;
  objc_msgSend(v2, "setSessionPreset:", AVCaptureSessionPresetHigh);
  v6 = (void *)objc_opt_self(AVCaptureDevice);
  v7 = objc_msgSend(v6, "defaultDeviceWithDeviceType:mediaType:position:", AVCaptureDeviceTypeBuiltInDualCamera, AVMediaTypeVideo, 1);
  v8 = v7;
  if (!v7)
  {
    v9 = objc_msgSend(v6, "defaultDeviceWithDeviceType:mediaType:position:", AVCaptureDeviceTypeBuiltInWideAngleCamera, AVMediaTypeVideo, 1);
    if (!v9)
    {
      v20 = 0;
      goto LABEL_8;
    }
    v8 = v9;
  }
  v10 = objc_allocWithZone((Class)AVCaptureDeviceInput);
  v39.value = 0;
  v11 = v8;
  v12 = v7;
  v13 = objc_msgSend(v10, "initWithDevice:error:", v11, &v39);
  value = v39.value;
  if (!v13)
  {
    v35 = (id)v39.value;
    v36 = _convertNSErrorToError(_:)(value);

    swift_willThrow();
    swift_unexpectedError(v36, "HDSViewService/SVSHomePodIDViewController.swift", 47, 1, 157);
    __break(1u);
LABEL_23:
    v37 = v5;
    v38 = _convertNSErrorToError(_:)(v5);

    swift_willThrow();
    swift_unexpectedError(v38, "HDSViewService/SVSHomePodIDViewController.swift", 47, 1, 167);
    __break(1u);
    return;
  }
  v15 = v13;
  v16 = (id)v39.value;

  if (!objc_msgSend(v2, "canAddInput:", v15))
    __break(1u);
  objc_msgSend(v2, "addInput:", v15);
  v17 = *(void **)(v1 + OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_videoDeviceInput);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_videoDeviceInput) = v15;
  v18 = v15;

  v19 = *(void **)(v1 + OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController__videoDevice);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController__videoDevice) = v11;
  v20 = v11;

  objc_msgSend(v2, "setSessionPreset:", AVCaptureSessionPresetHigh);
  v39.value = 0;
  v21 = objc_msgSend(v20, "lockForConfiguration:", &v39);
  v5 = (void *)v39.value;
  if ((v21 & 1) == 0)
    goto LABEL_23;
  v22 = (id)v39.value;
  v40 = CMTime.init(value:timescale:)(10, 300);
  v23 = v40.value;
  timescale = v40.timescale;
  epoch = v40.epoch;
  v39 = v40;
  v26 = HIDWORD(*(_QWORD *)&v40.timescale);
  objc_msgSend(v20, "setActiveVideoMinFrameDuration:", &v39);
  v39.value = v23;
  *(_QWORD *)&v39.timescale = __PAIR64__(v26, timescale);
  v39.epoch = epoch;
  objc_msgSend(v20, "setActiveVideoMaxFrameDuration:", &v39);
  objc_msgSend(v20, "unlockForConfiguration");

LABEL_8:
  v27 = objc_msgSend(v3, "connectionWithMediaType:", AVMediaTypeVideo);
  if (v27)
  {
    v28 = v27;
    if (objc_msgSend(v27, "isVideoStabilizationSupported"))
      objc_msgSend(v28, "setPreferredVideoStabilizationMode:", -1);

  }
  v29 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                              + OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_preView), "layer"));
  v30 = objc_opt_self(AVCaptureVideoPreviewLayer);
  v31 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v29, v30, 0, 0, 0), "connection");

  if (v31)
  {
    if (objc_msgSend(v31, "isVideoOrientationSupported"))
    {
      v32 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
      v33 = (char *)objc_msgSend(v32, "activeInterfaceOrientation");

      if ((unint64_t)(v33 - 2) >= 3)
        v34 = 1;
      else
        v34 = (uint64_t)v33;
      objc_msgSend(v31, "setVideoOrientation:", v34);
    }

  }
  objc_msgSend(v2, "commitConfiguration");

}

uint64_t sub_10007E20C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10007E230()
{
  SVSHomePodIDViewController.configureEngine()();
}

uint64_t sub_10007E250(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007E260(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_10007E268()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_startIngesting) = 1;
}

void sub_10007E280()
{
  uint64_t v0;

  sub_10007D5C8(v0);
}

uint64_t sub_10007E288()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10007E2AC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10007E2D8()
{
  uint64_t v0;

  sub_10007DB18(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

id SVSHomePodIDViewController.__deallocating_deinit()
{
  char *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  objc_super v5;

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_session], "stopRunning");
  v1 = OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_engine;
  v2 = *(void **)&v0[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_engine];
  if (v2)
  {
    objc_msgSend(v2, "reset");
    v3 = *(void **)&v0[v1];
  }
  else
  {
    v3 = 0;
  }
  *(_QWORD *)&v0[v1] = 0;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for SVSHomePodIDViewController();
  return objc_msgSendSuper2(&v5, "dealloc");
}

void SVSHomePodIDViewController.init(nibName:bundle:)(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  _swift_stdlib_reportUnimplementedInitializer("HDSViewService.SVSHomePodIDViewController", 41, "init(nibName:bundle:)", 21, 0, a1, a2, a3, a4);
  __break(1u);
}

Swift::Void __swiftcall SVSHomePodIDViewController.captureOutput(_:didOutput:from:)(AVCaptureOutput _, CMSampleBufferRef didOutput, AVCaptureConnection from)
{
  uint64_t v3;

  if (*(_BYTE *)(v3 + OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_startIngesting) == 1)
  {
    _.super.isa = *(Class *)(v3 + OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_engine);
    if (_.super.isa)
      -[objc_class ingestVideoFrame:](_.super.isa, "ingestVideoFrame:", _._outputInternal, from.super.isa, from._internal);
  }
}

uint64_t type metadata accessor for PreviewView()
{
  return objc_opt_self(_TtC14HDSViewServiceP33_F66C8FD91EA205C147B349AE8926BCFD11PreviewView);
}

ValueMetadata *type metadata accessor for SVSHomePodIDViewControllerDeviceModel()
{
  return &type metadata for SVSHomePodIDViewControllerDeviceModel;
}

unint64_t sub_10007E520()
{
  unint64_t result;

  result = qword_1000D7E58;
  if (!qword_1000D7E58)
  {
    result = swift_getWitnessTable(&unk_10009AE10, &type metadata for SVSHomePodIDViewControllerDeviceModel);
    atomic_store(result, (unint64_t *)&qword_1000D7E58);
  }
  return result;
}

void sub_10007E564()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  *(_QWORD *)&v0[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_engine] = 0;
  v1 = OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_preView;
  v2 = type metadata accessor for PreviewView();
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)), "init");
  v0[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_setupSucceeded] = 0;
  v3 = OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_session;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)AVCaptureSession), "init");
  v4 = OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_feedbackGenerator;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)UINotificationFeedbackGenerator), "init");
  v5 = OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_output;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)AVCaptureVideoDataOutput), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_videoDeviceInput] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController__videoDevice] = 0;
  v0[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_startIngesting] = 0;
  v6 = &v0[OBJC_IVAR____TtC14HDSViewService26SVSHomePodIDViewController_handler];
  *v6 = 0;
  v6[1] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x6C706D6920746F4ELL, 0xEF6465746E656D65, "HDSViewService/SVSHomePodIDViewController.swift", 47, 2, 61, 0);
  __break(1u);
}

uint64_t sub_10007E6A4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10007E6C8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_10007E6FC(uint64_t result, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v4;
  uint64_t v6;
  void *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  NSString v14;
  void *v15;
  id v16;
  id v17;
  _QWORD aBlock[5];
  uint64_t v20;

  v4 = *(_QWORD *)(result + 16);
  if (v4)
  {
    v6 = result;
    v7 = (void *)objc_opt_self(PRXAction);
    swift_bridgeObjectRetain(v6);
    v8 = (_BYTE *)(v6 + 56);
    do
    {
      v9 = *((_QWORD *)v8 - 3);
      v10 = *((_QWORD *)v8 - 2);
      v11 = *((_QWORD *)v8 - 1);
      v12 = *v8;
      v8 += 32;
      v13 = swift_allocObject(&unk_1000C5540, 64, 7);
      *(_QWORD *)(v13 + 16) = v9;
      *(_QWORD *)(v13 + 24) = v10;
      *(_QWORD *)(v13 + 32) = v11;
      *(_BYTE *)(v13 + 40) = v12;
      *(_QWORD *)(v13 + 48) = a2;
      *(_QWORD *)(v13 + 56) = a3;
      swift_bridgeObjectRetain_n(v10, 2);
      swift_retain(a3);
      v14 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v10);
      aBlock[4] = sub_1000802F4;
      v20 = v13;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100038D38;
      aBlock[3] = &unk_1000C5558;
      v15 = _Block_copy(aBlock);
      v16 = objc_msgSend(v7, "actionWithTitle:style:handler:", v14, v11, v15);

      _Block_release(v15);
      swift_release(v20);
      v17 = objc_msgSend(v3, "addAction:", v16);

      --v4;
    }
    while (v4);
    return swift_bridgeObjectRelease(v6);
  }
  return result;
}

id sub_10007E89C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id result;
  void *v12;
  id v13;
  void *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  unint64_t v24;
  unint64_t v25;
  void **v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;

  v2 = a2;
  v3 = a1;
  v4 = (unint64_t)a1 >> 62;
  if (!((unint64_t)a1 >> 62))
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_50:
    if (v2 < 0)
      v31 = v2;
    else
      v31 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v32 = _CocoaArrayWrapper.endIndex.getter(v31);
    swift_bridgeObjectRelease(v2);
    if (v5 == v32)
      goto LABEL_4;
LABEL_54:
    LOBYTE(v5) = 0;
    return (id)(v5 & 1);
  }
  if (a1 < 0)
    v30 = a1;
  else
    v30 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v5 = _CocoaArrayWrapper.endIndex.getter(v30);
  swift_bridgeObjectRelease(v3);
  v6 = (unint64_t)v2 >> 62;
  if ((unint64_t)v2 >> 62)
    goto LABEL_50;
LABEL_3:
  if (v5 != *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_54;
LABEL_4:
  if (!v5)
    goto LABEL_37;
  v7 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0)
    v7 = v3;
  if (!v4)
    v7 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  v8 = v2 & 0xFFFFFFFFFFFFFF8;
  v9 = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (v2 < 0)
    v10 = v2;
  else
    v10 = v2 & 0xFFFFFFFFFFFFFF8;
  if (v6)
    v9 = v10;
  if (v7 == v9)
  {
LABEL_37:
    LOBYTE(v5) = 1;
    return (id)(v5 & 1);
  }
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_60;
  v33 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0)
    goto LABEL_61;
  for (result = *(id *)(v3 + 32); ; result = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3))
  {
    v12 = result;
    if ((v2 & 0xC000000000000001) == 0)
      break;
    v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v2);
LABEL_21:
    v14 = v13;
    sub_100035CA4(0, &qword_1000D60F0, UIImage_ptr);
    v15 = static NSObject.== infix(_:_:)(v12, v14);

    if ((v15 & 1) == 0)
      goto LABEL_54;
    v16 = v5 - 1;
    if (v5 == 1)
      return (id)(v5 & 1);
    if (((v2 | v3) & 0xC000000000000001) != 0)
    {
      v17 = 0;
      v18 = v5 - 2;
      while (v16 != v17)
      {
        v5 = v17 + 1;
        if (v33)
          v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17 + 1, v3);
        else
          v19 = *(id *)(v3 + 40 + 8 * v17);
        v20 = v19;
        if ((v2 & 0xC000000000000001) != 0)
        {
          v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17 + 1, v2);
        }
        else
        {
          if (v5 >= *(_QWORD *)(v8 + 16))
            goto LABEL_59;
          v21 = *(id *)(v2 + 40 + 8 * v17);
        }
        v22 = v21;
        v5 = static NSObject.== infix(_:_:)(v20, v21);

        if ((v5 & 1) != 0 && v18 != v17++)
          continue;
        return (id)(v5 & 1);
      }
      __break(1u);
    }
    else
    {
      v24 = *(_QWORD *)(v8 + 16);
      if (v24 <= 1)
        v24 = 1;
      v25 = v24 - 1;
      v26 = (void **)(v3 + 40);
      v8 = v2 + 40;
      while (v16)
      {
        if (!v25)
          goto LABEL_58;
        v28 = *v26++;
        v27 = v28;
        v29 = *(void **)v8;
        v8 += 8;
        v2 = v27;
        v3 = v29;
        v5 = static NSObject.== infix(_:_:)(v2, v3);

        if ((v5 & 1) != 0)
        {
          --v25;
          if (--v16)
            continue;
        }
        return (id)(v5 & 1);
      }
    }
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    ;
  }
  if (*(_QWORD *)(v8 + 16))
  {
    v13 = *(id *)(v2 + 32);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_10007EB90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000111E8(v2, qword_1000D7E70);
  v3 = sub_10001118C(v2, (uint64_t)qword_1000D7E70);
  if (qword_1000D55C0 != -1)
    swift_once(&qword_1000D55C0, sub_100058090);
  v4 = sub_10001118C(v2, (uint64_t)qword_1000DB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

id sub_10007EC20()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController____lazy_storage___disclaimerLabel;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController____lazy_storage___disclaimerLabel);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController____lazy_storage___disclaimerLabel);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)PRXLabel), "initWithStyle:", 3);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_10007EC94()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char *v11;
  objc_class *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  os_log_type_t v25;
  _BOOL4 v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  NSString v35;
  NSString v36;
  NSString v37;
  NSString v38;
  id v39;
  uint64_t v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  Class isa;
  double v77;
  uint64_t v78;
  id v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char v83[24];
  objc_super v84;

  v1 = v0;
  v2 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v2);
  v4 = (char *)&v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  v6 = *((_QWORD *)v5 - 1);
  v7 = __chkstk_darwin(v5);
  v9 = (uint64_t *)((char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  v11 = (char *)&v78 - v10;
  v12 = (objc_class *)type metadata accessor for HomePodSetupSoundRecognitionViewController(0);
  v84.receiver = v1;
  v84.super_class = v12;
  objc_msgSendSuper2(&v84, "viewDidLoad");
  v13 = (uint64_t)&v1[OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController_viewModel];
  swift_beginAccess(&v1[OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController_viewModel], v83, 0, 0);
  sub_10000E0F0(v13, (uint64_t)v4, (uint64_t *)&unk_1000D6EC0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10000DC40((uint64_t)v4, (uint64_t *)&unk_1000D6EC0);
    if (qword_1000D5658 != -1)
      swift_once(&qword_1000D5658, sub_10007EB90);
    v15 = type metadata accessor for Logger(0, v14);
    v16 = sub_10001118C(v15, (uint64_t)qword_1000D7E70);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "HomePodSetupSoundRecognitionViewController: viewDidLoad failed because viewModel not set.", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

  }
  else
  {
    sub_100011228((uint64_t)v4, (uint64_t)v11, type metadata accessor for HomePodSetupViewModel);
    if (qword_1000D5658 != -1)
      swift_once(&qword_1000D5658, sub_10007EB90);
    v21 = type metadata accessor for Logger(0, v20);
    sub_10001118C(v21, (uint64_t)qword_1000D7E70);
    v22 = sub_1000111A4((uint64_t)v11, (uint64_t)v9);
    v23 = Logger.logObject.getter(v22);
    v25 = static os_log_type_t.default.getter(v23, v24);
    v26 = os_log_type_enabled(v23, v25);
    v80 = v11;
    if (v26)
    {
      v27 = (uint8_t *)swift_slowAlloc(12, -1);
      v28 = swift_slowAlloc(32, -1);
      v82 = v28;
      *(_DWORD *)v27 = 136315138;
      v79 = v27 + 4;
      v29 = *v9;
      v30 = v9[1];
      swift_bridgeObjectRetain(v30);
      v81 = sub_10003EF58(v29, v30, &v82);
      v11 = v80;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82);
      swift_bridgeObjectRelease(v30);
      sub_10001126C((uint64_t)v9, type metadata accessor for HomePodSetupViewModel);
      _os_log_impl((void *)&_mh_execute_header, v23, v25, "HomePodSetupSoundRecognitionViewController: viewDidLoad with title %s", v27, 0xCu);
      swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v27, -1, -1);
    }
    else
    {
      sub_10001126C((uint64_t)v9, type metadata accessor for HomePodSetupViewModel);
    }

    sub_10007F844((uint64_t)v11);
    v31 = *(_QWORD *)&v11[v5[10]];
    v32 = swift_allocObject(&unk_1000C5518, 24, 7);
    swift_unknownObjectWeakInit(v32 + 16, v1);
    swift_bridgeObjectRetain(v31);
    sub_10007E6FC(v33, (uint64_t)sub_1000802C0, v32);
    swift_bridgeObjectRelease(v31);
    *(_QWORD *)&v34 = swift_release(v32).n128_u64[0];
    if ((v11[v5[18]] & 2) == 0 && *(_QWORD *)&v11[v5[19] + 8])
    {
      v35 = String._bridgeToObjectiveC()();
      v36 = String._bridgeToObjectiveC()();
      v37 = String._bridgeToObjectiveC()();
      v38 = String._bridgeToObjectiveC()();
      v39 = objc_msgSend(v1, "dismissalConfirmationActionWithTitle:message:confirmButtonTitle:cancelButtonTitle:", v35, v36, v37, v38);

      objc_msgSend(v1, "setDismissButtonAction:", v39);
    }
    v40 = OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController_myContentView;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController_myContentView], "setTranslatesAutoresizingMaskIntoConstraints:", 0, v34);
    v41 = objc_msgSend(v1, "contentView");
    objc_msgSend(v41, "addSubview:", *(_QWORD *)&v1[v40]);

    v42 = sub_10007EC20();
    objc_msgSend(v42, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

    v43 = objc_msgSend(v1, "contentView");
    v44 = sub_10007EC20();
    objc_msgSend(v43, "addSubview:", v44);

    v45 = objc_msgSend(v1, "contentView");
    v46 = objc_msgSend(v45, "mainContentGuide");

    v79 = (id)objc_opt_self(NSLayoutConstraint);
    v47 = sub_10000D604(&qword_1000D6EE0);
    v48 = swift_allocObject(v47, 88, 7);
    *(_OWORD *)(v48 + 16) = xmmword_10009AE40;
    v49 = objc_msgSend(*(id *)&v1[v40], "topAnchor");
    v50 = objc_msgSend(v46, "topAnchor");
    v51 = objc_msgSend(v49, "constraintEqualToAnchor:", v50);

    *(_QWORD *)(v48 + 32) = v51;
    v52 = objc_msgSend(*(id *)&v1[v40], "leadingAnchor");
    v53 = objc_msgSend(v46, "leadingAnchor");
    v54 = objc_msgSend(v52, "constraintEqualToAnchor:", v53);

    *(_QWORD *)(v48 + 40) = v54;
    v55 = objc_msgSend(*(id *)&v1[v40], "trailingAnchor");
    v56 = objc_msgSend(v46, "trailingAnchor");
    v57 = objc_msgSend(v55, "constraintEqualToAnchor:", v56);

    *(_QWORD *)(v48 + 48) = v57;
    v58 = objc_msgSend(*(id *)&v1[v40], "bottomAnchor");
    v59 = sub_10007EC20();
    v60 = objc_msgSend(v59, "topAnchor");

    v61 = objc_msgSend(v58, "constraintEqualToAnchor:constant:", v60, -20.0);
    *(_QWORD *)(v48 + 56) = v61;
    v62 = sub_10007EC20();
    v63 = objc_msgSend(v62, "leadingAnchor");

    v64 = objc_msgSend(v46, "leadingAnchor");
    v65 = objc_msgSend(v63, "constraintEqualToAnchor:", v64);

    *(_QWORD *)(v48 + 64) = v65;
    v66 = sub_10007EC20();
    v67 = objc_msgSend(v66, "trailingAnchor");

    v68 = objc_msgSend(v46, "trailingAnchor");
    v69 = objc_msgSend(v67, "constraintEqualToAnchor:", v68);

    *(_QWORD *)(v48 + 72) = v69;
    v70 = sub_10007EC20();
    v71 = objc_msgSend(v70, "bottomAnchor");

    v72 = objc_msgSend(v46, "bottomAnchor");
    v73 = objc_msgSend(v71, "constraintEqualToAnchor:", v72);

    *(_QWORD *)(v48 + 80) = v73;
    v82 = v48;
    specialized Array._endMutation()(v74);
    v75 = v82;
    sub_100035CA4(0, (unint64_t *)&qword_1000D7080, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v77 = swift_bridgeObjectRelease(v75).n128_u64[0];
    objc_msgSend(v79, "activateConstraints:", isa, v77);

    sub_10001126C((uint64_t)v80, type metadata accessor for HomePodSetupViewModel);
  }
}

uint64_t sub_10007F56C(unsigned __int8 *a1, uint64_t a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t Strong;
  void *v15;
  uint64_t v16;
  _BYTE v18[48];
  _OWORD v19[2];
  uint64_t v20;
  _OWORD v21[3];

  v2 = *a1;
  v3 = a2 + 16;
  if (qword_1000D5658 != -1)
    swift_once(&qword_1000D5658, sub_10007EB90);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10001118C(v4, (uint64_t)qword_1000D7E70);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v21[0] = v10;
    *(_DWORD *)v9 = 136315138;
    v11 = sub_10000E9EC(v2);
    v13 = v12;
    *(_QWORD *)v18 = sub_10003EF58(v11, v12, (uint64_t *)v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v18, &v18[8]);
    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "HomePodSetupSoundRecognitionViewController: User tapped on button: %s", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }

  v20 = 0;
  memset(v19, 0, sizeof(v19));
  memset(&v18[8], 0, 40);
  v18[0] = v2;
  sub_100011340((uint64_t)v19, (uint64_t)&v18[8], &qword_1000D6ED0);
  v21[0] = *(_OWORD *)v18;
  v21[1] = *(_OWORD *)&v18[16];
  v21[2] = *(_OWORD *)&v18[32];
  swift_beginAccess(v3, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v15 = (void *)Strong;
    v16 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController_presenter);

    if (v16)
    {
      sub_10006B04C((char *)v21);
      swift_unknownObjectRelease(v16);
    }
  }
  return sub_100011384((uint64_t)v21);
}

void sub_10007F844(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  NSString v11;
  NSString v12;
  id v13;
  int *v14;
  NSString v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;

  v2 = v1;
  v4 = sub_10000D604(&qword_1000D5E60);
  __chkstk_darwin(v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AdjustedImage(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (uint64_t *)((char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setTitle:", v11);

  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setSubtitle:", v12);

  v13 = sub_10007EC20();
  v14 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(v13, "setText:", v15);

  objc_msgSend(v2, "setDismissalType:", *(_QWORD *)(a1 + v14[18]));
  v16 = *(_QWORD *)(a1 + v14[11]);
  if ((unint64_t)v16 >> 62)
  {
    if (v16 < 0)
      v17 = *(_QWORD *)(a1 + v14[11]);
    else
      v17 = v16 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(a1 + v14[11]));
    v18 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease(v16);
    if (v18)
      goto LABEL_3;
  }
  else if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    sub_10007FB44(v16);
    return;
  }
  sub_10000E0F0(a1 + v14[27], (uint64_t)v6, &qword_1000D5E60);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10000DC40((uint64_t)v6, &qword_1000D5E60);
  }
  else
  {
    sub_100011228((uint64_t)v6, (uint64_t)v10, type metadata accessor for AdjustedImage);
    v19 = objc_msgSend(objc_allocWithZone((Class)SFAdjustedImageView), "initWithImage:", *v10);
    sub_100073038((uint64_t)v10 + *(int *)(v7 + 20));
    objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v20 = *(char **)&v2[OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController_myContentView];
    v21 = sub_10000D604(&qword_1000D6EE0);
    v22 = swift_allocObject(v21, 40, 7);
    *(_OWORD *)(v22 + 16) = xmmword_100099060;
    *(_QWORD *)(v22 + 32) = v19;
    v27 = v22;
    specialized Array._endMutation()(v22);
    v23 = *(_QWORD *)&v20[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViews];
    *(_QWORD *)&v20[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViews] = v27;
    v24 = v20;
    v25 = v19;
    sub_10003FD88(v23);

    swift_bridgeObjectRelease(v23);
    sub_10001126C((uint64_t)v10, type metadata accessor for AdjustedImage);
  }
}

void sub_10007FB44(unint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;

  v2 = v1;
  v4 = OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController_images;
  v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController_images];
  swift_bridgeObjectRetain(v5);
  v7 = sub_10007E89C(v6, a1);
  swift_bridgeObjectRelease(v5);
  if ((v7 & 1) == 0)
  {
    v8 = *(_QWORD *)&v2[v4];
    *(_QWORD *)&v2[v4] = a1;
    swift_bridgeObjectRetain(a1);
    if (objc_msgSend(v2, "isViewLoaded", swift_bridgeObjectRelease(v8).n128_f64[0]))
    {
      v9 = *(_QWORD *)&v2[v4];
      if ((unint64_t)v9 >> 62)
      {
        if (v9 < 0)
          v19 = *(_QWORD *)&v2[v4];
        else
          v19 = v9 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n(*(_QWORD *)&v2[v4], 2);
        v10 = _CocoaArrayWrapper.endIndex.getter(v19);
        if (v10)
          goto LABEL_5;
      }
      else
      {
        v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n(*(_QWORD *)&v2[v4], 2);
        if (v10)
        {
LABEL_5:
          if (v10 < 1)
          {
            __break(1u);
            return;
          }
          v11 = 0;
          v12 = OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController_style;
          do
          {
            if ((v9 & 0xC000000000000001) != 0)
              v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v9);
            else
              v13 = *(id *)(v9 + 8 * v11 + 32);
            v14 = v13;
            v15 = objc_msgSend(objc_allocWithZone((Class)PRXImageView), "initWithStyle:", *(_QWORD *)&v2[v12]);
            objc_msgSend(v15, "setImage:", v14);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0));
            v17 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
            v16 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v17 >= v16 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
            ++v11;
            v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
            specialized Array._endMutation()(v18);

          }
          while (v10 != v11);
        }
      }
      swift_bridgeObjectRelease_n(v9, 2);
      v20 = *(char **)&v2[OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController_myContentView];
      v21 = *(_QWORD *)&v20[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViews];
      *(_QWORD *)&v20[OBJC_IVAR____TtC14HDSViewService27HomePodSetupIconContentView_imageViews] = _swiftEmptyArrayStorage;
      v22 = v20;
      swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
      sub_10003FD88(v21);
      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);

      swift_bridgeObjectRelease(v21);
    }
  }
}

id sub_10007FDE0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupSoundRecognitionViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10007FEA4()
{
  return type metadata accessor for HomePodSetupSoundRecognitionViewController(0);
}

uint64_t type metadata accessor for HomePodSetupSoundRecognitionViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1000D7EC8;
  if (!qword_1000D7EC8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HomePodSetupSoundRecognitionViewController);
  return result;
}

void sub_10007FEE8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[8];

  v4[0] = &unk_10009AE80;
  sub_100010910(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_10009AE98;
    v4[3] = &unk_10009AE98;
    v4[4] = &unk_10009AE98;
    v4[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[7] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_updateClassMetadata2(a1, 256, 8, v4, a1 + 80);
  }
}

uint64_t sub_10007FF98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController_presenter + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease(a1);
}

void sub_10007FFD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10007FFD8(a3);
}

void sub_10007FFD8(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[24];

  v2 = v1;
  v4 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v4);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_1000D5658 != -1)
    swift_once(&qword_1000D5658, sub_10007EB90);
  v8 = type metadata accessor for Logger(0, v5);
  v9 = sub_10001118C(v8, (uint64_t)qword_1000D7E70);
  v10 = Logger.logObject.getter(v9);
  v12 = static os_log_type_t.default.getter(v10, v11);
  if (os_log_type_enabled(v10, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v12, "HomePodSetupSoundRecognitionViewController: presenter:didUpdate viewModel", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }

  sub_1000111A4(a1, (uint64_t)v7);
  v14 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v7, 0, 1, v14);
  v15 = (uint64_t)&v2[OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController_viewModel];
  swift_beginAccess(&v2[OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController_viewModel], v17, 33, 0);
  sub_100011340((uint64_t)v7, v15, (uint64_t *)&unk_1000D6EC0);
  swift_endAccess(v17);
  if (objc_msgSend(v2, "isViewLoaded"))
    sub_10007F844(a1);
}

id sub_100080180(uint64_t a1)
{
  char *v1;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char *v8;
  objc_super v10;

  v3 = &v1[OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController_presenter];
  *((_QWORD *)v3 + 1) = 0;
  swift_unknownObjectWeakInit(v3, 0);
  v4 = &v1[OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController_viewModel];
  v5 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController_termsManager] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController____lazy_storage___moreInfoButton] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController____lazy_storage___disclaimerLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController_images] = _swiftEmptyArrayStorage;
  v6 = OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController_myContentView;
  v7 = objc_allocWithZone((Class)type metadata accessor for HomePodSetupIconContentView());
  v8 = v1;
  *(_QWORD *)&v1[v6] = objc_msgSend(v7, "initWithCardStyle:", 0);
  *(_QWORD *)&v8[OBJC_IVAR____TtC14HDSViewService42HomePodSetupSoundRecognitionViewController_style] = 0;

  v10.receiver = v8;
  v10.super_class = (Class)type metadata accessor for HomePodSetupSoundRecognitionViewController(0);
  return objc_msgSendSuper2(&v10, "initWithContentView:", a1);
}

uint64_t sub_10008029C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000802C0(unsigned __int8 *a1)
{
  uint64_t v1;

  return sub_10007F56C(a1, v1);
}

uint64_t sub_1000802C8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1000802F4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(char *);
  char v4;

  v2 = *(void (**)(char *))(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v4 = *(_BYTE *)(v0 + 40);
  swift_retain(v1);
  v2(&v4);
  return swift_release(v1);
}

uint64_t sub_100080340(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100080350(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_100080358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  NSString v10;
  id v11;
  id v12;
  objc_super v14;

  v6 = OBJC_IVAR____TtC14HDSViewService20HomePodInfoTableCell_titleLabel;
  v7 = objc_allocWithZone((Class)UILabel);
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, "init");
  v9 = OBJC_IVAR____TtC14HDSViewService20HomePodInfoTableCell_valueLabel;
  *(_QWORD *)&v8[v9] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");

  if (a3)
  {
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v10 = 0;
  }
  v14.receiver = v8;
  v14.super_class = (Class)type metadata accessor for HomePodInfoTableCell();
  v11 = objc_msgSendSuper2(&v14, "initWithStyle:reuseIdentifier:", a1, v10);

  v12 = v11;
  sub_100080590();

  return v12;
}

id sub_1000804A0(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  objc_super v11;

  v3 = OBJC_IVAR____TtC14HDSViewService20HomePodInfoTableCell_titleLabel;
  v4 = objc_allocWithZone((Class)UILabel);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  v6 = OBJC_IVAR____TtC14HDSViewService20HomePodInfoTableCell_valueLabel;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");

  v11.receiver = v5;
  v11.super_class = (Class)type metadata accessor for HomePodInfoTableCell();
  v7 = objc_msgSendSuper2(&v11, "initWithCoder:", a1);
  v8 = v7;
  if (v7)
  {
    v9 = v7;
    sub_100080590();

  }
  return v8;
}

void sub_100080590()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  Class isa;
  void *v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;

  v1 = v0;
  v2 = OBJC_IVAR____TtC14HDSViewService20HomePodInfoTableCell_titleLabel;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC14HDSViewService20HomePodInfoTableCell_titleLabel], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(*(id *)&v0[v2], "setNumberOfLines:", 0);
  v3 = *(void **)&v0[v2];
  v4 = (void *)objc_opt_self(UIColor);
  v5 = v3;
  v6 = objc_msgSend(v4, "labelColor");
  objc_msgSend(v5, "setTextColor:", v6);

  v7 = objc_msgSend(v1, "contentView");
  objc_msgSend(v7, "addSubview:", *(_QWORD *)&v1[v2]);

  v8 = OBJC_IVAR____TtC14HDSViewService20HomePodInfoTableCell_valueLabel;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC14HDSViewService20HomePodInfoTableCell_valueLabel], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(*(id *)&v1[v8], "setTextAlignment:", 2);
  objc_msgSend(*(id *)&v1[v8], "setNumberOfLines:", 0);
  v9 = *(id *)&v1[v8];
  v10 = objc_msgSend(v4, "secondaryLabelColor");
  objc_msgSend(v9, "setTextColor:", v10);

  v11 = objc_msgSend(v1, "contentView");
  objc_msgSend(v11, "addSubview:", *(_QWORD *)&v1[v8]);

  v36 = (id)objc_opt_self(NSLayoutConstraint);
  v12 = sub_10000D604(&qword_1000D6EE0);
  v13 = swift_allocObject(v12, 72, 7);
  *(_OWORD *)(v13 + 16) = xmmword_100099550;
  v14 = objc_msgSend(*(id *)&v1[v2], "centerYAnchor");
  v15 = objc_msgSend(v1, "centerYAnchor");
  v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

  *(_QWORD *)(v13 + 32) = v16;
  v17 = objc_msgSend(*(id *)&v1[v2], "leadingAnchor");
  v18 = objc_msgSend(v1, "leadingAnchor");
  v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

  *(_QWORD *)(v13 + 40) = v19;
  v20 = objc_msgSend(*(id *)&v1[v2], "trailingAnchor");
  v21 = objc_msgSend(*(id *)&v1[v8], "leadingAnchor");
  v22 = objc_msgSend(v20, "constraintLessThanOrEqualToAnchor:", v21);

  *(_QWORD *)(v13 + 48) = v22;
  v23 = objc_msgSend(*(id *)&v1[v8], "centerYAnchor");
  v24 = objc_msgSend(v1, "centerYAnchor");
  v25 = objc_msgSend(v23, "constraintEqualToAnchor:", v24);

  *(_QWORD *)(v13 + 56) = v25;
  v26 = objc_msgSend(*(id *)&v1[v8], "trailingAnchor");
  v27 = objc_msgSend(v1, "trailingAnchor");
  v28 = objc_msgSend(v26, "constraintEqualToAnchor:", v27);

  *(_QWORD *)(v13 + 64) = v28;
  specialized Array._endMutation()(v29);
  sub_100035CA4(0, (unint64_t *)&qword_1000D7080, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v36, "activateConstraints:", isa, swift_bridgeObjectRelease(v13).n128_f64[0]);

  v31 = *(void **)&v1[v2];
  v32 = (void *)objc_opt_self(UIFont);
  v33 = v31;
  v34 = objc_msgSend(v32, "_preferredFontForTextStyle:variant:", UIFontTextStyleFootnote, 1024);
  objc_msgSend(v33, "setFont:", v34);

  v35 = *(id *)&v1[v8];
  v37 = objc_msgSend(v32, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  objc_msgSend(v35, "setFont:", v37);

}

id sub_100080A40()
{
  return sub_10007A1A0(type metadata accessor for HomePodInfoTableCell);
}

uint64_t type metadata accessor for HomePodInfoTableCell()
{
  return objc_opt_self(_TtC14HDSViewService20HomePodInfoTableCell);
}

id sub_100080AA4()
{
  void *v0;
  uint64_t v1;
  uint64_t ObjCClassFromMetadata;
  NSString v3;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v8;
  id v9;
  CGRect v11;
  CGRect v12;

  objc_msgSend(v0, "setDelegate:", v0);
  objc_msgSend(v0, "setDataSource:", v0);
  objc_msgSend(v0, "setRowHeight:", UITableViewAutomaticDimension);
  objc_msgSend(v0, "setEstimatedRowHeight:", 44.0);
  objc_msgSend(v0, "setAlwaysBounceVertical:", 0);
  v1 = type metadata accessor for HomePodInfoTableCell();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v1);
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v3);

  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v0, "frame");
  x = v11.origin.x;
  y = v11.origin.y;
  width = v11.size.width;
  height = v11.size.height;
  v8 = CGRectGetWidth(v11);
  v12.origin.x = x;
  v12.origin.y = y;
  v12.size.width = width;
  v12.size.height = height;
  CGRectGetHeight(v12);
  v9 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, v8, 1.0);
  objc_msgSend(v0, "setTableFooterView:", v9);

  return objc_msgSend(v0, "setSeparatorInset:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
}

uint64_t sub_100080C4C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;
  uint64_t v25;

  v3 = sub_10000D604(&qword_1000D7FA8);
  v4 = swift_allocObject(v3, 128, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100099240;
  v5 = String._bridgeToObjectiveC()();
  v6 = sub_100006354(v5);

  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  v11 = *a1;
  v10 = a1[1];
  *(_QWORD *)(v4 + 32) = v7;
  *(_QWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 48) = v11;
  *(_QWORD *)(v4 + 56) = v10;
  swift_bridgeObjectRetain(v10);
  v12 = String._bridgeToObjectiveC()();
  v13 = sub_100006354(v12);

  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  v18 = a1[2];
  v17 = a1[3];
  *(_QWORD *)(v4 + 64) = v14;
  *(_QWORD *)(v4 + 72) = v16;
  *(_QWORD *)(v4 + 80) = v18;
  *(_QWORD *)(v4 + 88) = v17;
  swift_bridgeObjectRetain(v17);
  v19 = String._bridgeToObjectiveC()();
  v20 = sub_100006354(v19);

  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v23 = v22;

  v24 = String.uppercased()();
  *(_QWORD *)(v4 + 96) = v21;
  *(_QWORD *)(v4 + 104) = v23;
  *(Swift::String *)(v4 + 112) = v24;
  v25 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService29HomePodSetupWiFiInfoTableView_elements);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService29HomePodSetupWiFiInfoTableView_elements) = v4;
  swift_bridgeObjectRelease(v25);
  return sub_100080DBC();
}

uint64_t sub_100080DBC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD aBlock[5];
  uint64_t v21;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100035CA4(0, (unint64_t *)&qword_1000D7B50, OS_dispatch_queue_ptr);
  v10 = (void *)static OS_dispatch_queue.main.getter();
  v11 = swift_allocObject(&unk_1000C5618, 24, 7);
  *(_QWORD *)(v11 + 16) = v0;
  aBlock[4] = sub_100081360;
  v21 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10007C6B4;
  aBlock[3] = &unk_1000C5630;
  v12 = _Block_copy(aBlock);
  v13 = v21;
  v14 = v1;
  swift_release(v13);
  static DispatchQoS.unspecified.getter(v15);
  aBlock[0] = _swiftEmptyArrayStorage;
  v16 = sub_100012C2C();
  v17 = sub_10000D604((uint64_t *)&unk_1000D7B60);
  v18 = sub_100012C74();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v17, v18, v2, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_100080FA8(void *a1)
{
  uint64_t v1;
  NSString v3;
  Class isa;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  unint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;

  v3 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v5 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v3, isa);

  v6 = type metadata accessor for HomePodInfoTableCell();
  v7 = swift_dynamicCastClassUnconditional(v5, v6, 0, 0, 0);
  v8 = *(id *)(v7 + OBJC_IVAR____TtC14HDSViewService20HomePodInfoTableCell_titleLabel);
  result = IndexPath.row.getter();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  v10 = OBJC_IVAR____TtC14HDSViewService29HomePodSetupWiFiInfoTableView_elements;
  v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService29HomePodSetupWiFiInfoTableView_elements);
  if (result >= *(_QWORD *)(v11 + 16))
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v12 = *(_QWORD *)(v11 + 32 * result + 40);
  swift_bridgeObjectRetain(v12);
  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setText:", v13, swift_bridgeObjectRelease(v12).n128_f64[0]);

  v14 = *(id *)(v7 + OBJC_IVAR____TtC14HDSViewService20HomePodInfoTableCell_valueLabel);
  result = IndexPath.row.getter();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v15 = *(_QWORD *)(v1 + v10);
  if (result < *(_QWORD *)(v15 + 16))
  {
    v16 = *(_QWORD *)(v15 + 32 * result + 56);
    swift_bridgeObjectRetain(v16);
    v17 = String._bridgeToObjectiveC()();
    objc_msgSend(v14, "setText:", v17, swift_bridgeObjectRelease(v16).n128_f64[0]);

    return v7;
  }
LABEL_9:
  __break(1u);
  return result;
}

id sub_1000812F0()
{
  return sub_10007A1A0(type metadata accessor for HomePodSetupWiFiInfoTableView);
}

uint64_t type metadata accessor for HomePodSetupWiFiInfoTableView()
{
  return objc_opt_self(_TtC14HDSViewService29HomePodSetupWiFiInfoTableView);
}

ValueMetadata *type metadata accessor for HomePodSetupWiFiInfoTableView.InfoElement()
{
  return &type metadata for HomePodSetupWiFiInfoTableView.InfoElement;
}

uint64_t sub_10008133C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100081360()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, "setSeparatorStyle:", 1);
  return objc_msgSend(v1, "reloadData");
}

uint64_t sub_10008139C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000813AC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000813B4(char a1, uint64_t a2, uint64_t a3, char a4)
{
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((a1 & 1) != 0 && (a4 & 1) != 0)
  {
    v6 = String._bridgeToObjectiveC()();
    v7 = sub_100006354(v6);

    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v10 = v9;

    v11 = sub_10000D604((uint64_t *)&unk_1000D7B70);
    v12 = swift_allocObject(v11, 72, 7);
    *(_OWORD *)(v12 + 16) = xmmword_100099220;
    *(_QWORD *)(v12 + 56) = &type metadata for String;
    *(_QWORD *)(v12 + 64) = sub_100035088();
    *(_QWORD *)(v12 + 32) = a2;
    *(_QWORD *)(v12 + 40) = a3;
    swift_bridgeObjectRetain(a3);
    a2 = String.init(format:_:)(v8, v10, v12);
    swift_bridgeObjectRelease(v10);
  }
  else
  {
    swift_bridgeObjectRetain(a3);
  }
  return a2;
}

uint64_t sub_1000814B0(char a1, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  char v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v24;
  unint64_t v25;
  _QWORD v26[5];

  v8 = sub_10000C22C((uint64_t)_swiftEmptyArrayStorage);
  v24 = 1701869940;
  v25 = 0xE400000000000000;
  AnyHashable.init<A>(_:)(v26, &v24, &type metadata for String, &protocol witness table for String);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v8);
  v24 = v8;
  sub_10004BD20(0x6974704F6D6F6F52, 0xEA00000000006E6FLL, (uint64_t)v26, isUniquelyReferenced_nonNull_native);
  v10 = v24;
  swift_bridgeObjectRelease(0x8000000000000000);
  sub_10000DAE8((uint64_t)v26);
  v24 = 0x656D614E6D6F6F72;
  v25 = 0xE800000000000000;
  AnyHashable.init<A>(_:)(v26, &v24, &type metadata for String, &protocol witness table for String);
  swift_bridgeObjectRetain(a3);
  v11 = swift_isUniquelyReferenced_nonNull_native(v10);
  v24 = v10;
  sub_10004BD20(a2, a3, (uint64_t)v26, v11);
  v12 = v24;
  swift_bridgeObjectRelease(0x8000000000000000);
  sub_10000DAE8((uint64_t)v26);
  v24 = 0x7365676775537369;
  v25 = 0xEB00000000646574;
  AnyHashable.init<A>(_:)(v26, &v24, &type metadata for String, &protocol witness table for String);
  v13 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v14 = 1702195828;
  else
    v14 = 0x65736C6166;
  if (v13)
    v15 = 0xE500000000000000;
  else
    v15 = 0xE400000000000000;
  v16 = swift_isUniquelyReferenced_nonNull_native(v12);
  v24 = v12;
  sub_10004BD20(v14, v15, (uint64_t)v26, v16);
  v17 = v24;
  swift_bridgeObjectRelease(0x8000000000000000);
  sub_10000DAE8((uint64_t)v26);
  v24 = 0x614D646C756F6873;
  v25 = 0xEA00000000006B72;
  AnyHashable.init<A>(_:)(v26, &v24, &type metadata for String, &protocol witness table for String);
  v18 = (a4 & 1) == 0;
  if ((a4 & 1) != 0)
    v19 = 1702195828;
  else
    v19 = 0x65736C6166;
  if (v18)
    v20 = 0xE500000000000000;
  else
    v20 = 0xE400000000000000;
  v21 = swift_isUniquelyReferenced_nonNull_native(v17);
  v24 = v17;
  sub_10004BD20(v19, v20, (uint64_t)v26, v21);
  v22 = v24;
  swift_bridgeObjectRelease(0x8000000000000000);
  sub_10000DAE8((uint64_t)v26);
  return v22;
}

uint64_t sub_100081708()
{
  uint64_t v0;

  return sub_1000813B4(*(_BYTE *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_100081718()
{
  uint64_t v0;

  return sub_1000814B0(*(_BYTE *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_100081728()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  Swift::String v5;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(void **)(v0 + 16);
  v3 = 0x676E697473697865;
  if (*(_BYTE *)v0)
  {
    v3 = 0x6574736567677573;
    v4 = 0xEE005F6D6F6F5264;
  }
  else
  {
    v4 = 0xED00005F6D6F6F52;
  }
  v7 = v3;
  swift_bridgeObjectRetain(v4);
  v5._countAndFlagsBits = v1;
  v5._object = v2;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(v4);
  return v7;
}

uint64_t sub_1000817CC(char a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v8;
  unint64_t v9;
  Swift::String v10;
  Swift::String v11;
  void *object;
  Swift::String v13;
  Swift::String v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  Swift::String v28;
  void *v29;
  Swift::String v30;
  uint64_t v31;
  void *v32;
  Swift::String v33;
  uint64_t v34;
  uint64_t v35;
  Swift::String v36;
  void *v37;
  Swift::String v38;
  uint64_t v39;
  void *v40;
  Swift::String v41;
  uint64_t v42;
  uint64_t v43;
  Swift::String v44;
  void *v45;
  Swift::String v46;
  uint64_t v47;
  void *v48;
  Swift::String v49;
  uint64_t v50;
  uint64_t v51;
  Swift::String v52;
  void *v53;
  Swift::String v54;
  uint64_t v55;
  void *v56;
  Swift::String v57;
  uint64_t v58;
  Swift::String v59;
  uint64_t v61;
  unint64_t v62;
  _QWORD v63[2];

  v63[0] = 1031365995;
  v63[1] = 0xE400000000000000;
  v8 = 0x676E697473697865;
  if ((a1 & 1) != 0)
  {
    v8 = 0x6574736567677573;
    v9 = 0xEE005F6D6F6F5264;
  }
  else
  {
    v9 = 0xED00005F6D6F6F52;
  }
  v61 = v8;
  v62 = v9;
  swift_bridgeObjectRetain(v9);
  v10._countAndFlagsBits = a2;
  v10._object = a3;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(v9);
  v11._countAndFlagsBits = String.init<A>(reflecting:)(&v61, &type metadata for String);
  object = v11._object;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(object);
  v13._countAndFlagsBits = 32;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  v14._countAndFlagsBits = v63[0];
  v15 = (void *)v63[1];
  strcpy((char *)v63, "<RoomOption ");
  BYTE5(v63[1]) = 0;
  HIWORD(v63[1]) = -5120;
  v14._object = v15;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(v15);
  v17 = v63[0];
  v16 = v63[1];
  v63[0] = 0;
  v63[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease(v63[1]);
  strcpy((char *)v63, "displayValue=");
  HIWORD(v63[1]) = -4864;
  if ((a1 & 1) != 0 && (a4 & 1) != 0)
  {
    v18 = String._bridgeToObjectiveC()();
    v19 = sub_100006354(v18);

    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v22 = v21;

    v23 = sub_10000D604((uint64_t *)&unk_1000D7B70);
    v24 = swift_allocObject(v23, 72, 7);
    *(_OWORD *)(v24 + 16) = xmmword_100099220;
    *(_QWORD *)(v24 + 56) = &type metadata for String;
    *(_QWORD *)(v24 + 64) = sub_100035088();
    *(_QWORD *)(v24 + 32) = a2;
    *(_QWORD *)(v24 + 40) = a3;
    swift_bridgeObjectRetain(a3);
    v25 = String.init(format:_:)(v20, v22, v24);
    v27 = v26;
    swift_bridgeObjectRelease(v22);
  }
  else
  {
    swift_bridgeObjectRetain(a3);
    v25 = a2;
    v27 = (unint64_t)a3;
  }
  v61 = v25;
  v62 = v27;
  v28._countAndFlagsBits = String.init<A>(reflecting:)(&v61, &type metadata for String);
  v29 = v28._object;
  String.append(_:)(v28);
  swift_bridgeObjectRelease(v29);
  v30._countAndFlagsBits = 32;
  v30._object = (void *)0xE100000000000000;
  String.append(_:)(v30);
  v31 = v63[0];
  v32 = (void *)v63[1];
  v63[0] = v17;
  v63[1] = v16;
  swift_bridgeObjectRetain(v16);
  v33._countAndFlagsBits = v31;
  v33._object = v32;
  String.append(_:)(v33);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v32);
  v35 = v63[0];
  v34 = v63[1];
  strcpy((char *)v63, "roomName=");
  WORD1(v63[1]) = 0;
  HIDWORD(v63[1]) = -385875968;
  v61 = a2;
  v62 = (unint64_t)a3;
  swift_bridgeObjectRetain(a3);
  v36._countAndFlagsBits = String.init<A>(reflecting:)(&v61, &type metadata for String);
  v37 = v36._object;
  String.append(_:)(v36);
  swift_bridgeObjectRelease(v37);
  v38._countAndFlagsBits = 32;
  v38._object = (void *)0xE100000000000000;
  String.append(_:)(v38);
  v39 = v63[0];
  v40 = (void *)v63[1];
  v63[0] = v35;
  v63[1] = v34;
  swift_bridgeObjectRetain(v34);
  v41._countAndFlagsBits = v39;
  v41._object = v40;
  String.append(_:)(v41);
  swift_bridgeObjectRelease(v34);
  swift_bridgeObjectRelease(v40);
  v43 = v63[0];
  v42 = v63[1];
  strcpy((char *)v63, "isSuggested=");
  BYTE5(v63[1]) = 0;
  HIWORD(v63[1]) = -5120;
  LOBYTE(v61) = a1 & 1;
  v44._countAndFlagsBits = String.init<A>(reflecting:)(&v61, &type metadata for Bool);
  v45 = v44._object;
  String.append(_:)(v44);
  swift_bridgeObjectRelease(v45);
  v46._countAndFlagsBits = 32;
  v46._object = (void *)0xE100000000000000;
  String.append(_:)(v46);
  v47 = v63[0];
  v48 = (void *)v63[1];
  v63[0] = v43;
  v63[1] = v42;
  swift_bridgeObjectRetain(v42);
  v49._countAndFlagsBits = v47;
  v49._object = v48;
  String.append(_:)(v49);
  swift_bridgeObjectRelease(v42);
  swift_bridgeObjectRelease(v48);
  v51 = v63[0];
  v50 = v63[1];
  strcpy((char *)v63, "shouldMark=");
  HIDWORD(v63[1]) = -352321536;
  LOBYTE(v61) = a4 & 1;
  v52._countAndFlagsBits = String.init<A>(reflecting:)(&v61, &type metadata for Bool);
  v53 = v52._object;
  String.append(_:)(v52);
  swift_bridgeObjectRelease(v53);
  v54._countAndFlagsBits = 32;
  v54._object = (void *)0xE100000000000000;
  String.append(_:)(v54);
  v55 = v63[0];
  v56 = (void *)v63[1];
  v63[0] = v51;
  v63[1] = v50;
  swift_bridgeObjectRetain(v50);
  v57._countAndFlagsBits = v55;
  v57._object = v56;
  String.append(_:)(v57);
  swift_bridgeObjectRelease(v50);
  swift_bridgeObjectRelease(v56);
  v58 = v63[1];
  swift_bridgeObjectRetain(v63[1]);
  v59._countAndFlagsBits = 62;
  v59._object = (void *)0xE100000000000000;
  String.append(_:)(v59);
  swift_bridgeObjectRelease(v58);
  return v63[0];
}

uint64_t sub_100081C60()
{
  uint64_t v0;

  return sub_1000817CC(*(_BYTE *)v0, *(_QWORD *)(v0 + 8), *(void **)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_100081C70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  unint64_t v13;
  _QWORD v14[5];

  v12 = 0x656D614E6D6F6F72;
  v13 = 0xE800000000000000;
  AnyHashable.init<A>(_:)(v14, &v12, &type metadata for String, &protocol witness table for String);
  sub_100084B28((uint64_t)v14, 0x72206E776F6B6E75, 0xEF656D614E6D6F6FLL, a1);
  swift_bridgeObjectRetain(v2);
  sub_10000DAE8((uint64_t)v14);
  v12 = 0x7365676775537369;
  v13 = 0xEB00000000646574;
  AnyHashable.init<A>(_:)(v14, &v12, &type metadata for String, &protocol witness table for String);
  v3 = sub_100084B28((uint64_t)v14, 0x65736C6166, 0xE500000000000000, a1);
  v5 = v4;
  swift_bridgeObjectRetain(v4);
  sub_10000DAE8((uint64_t)v14);
  if (v3 == 1702195828 && v5 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease(0xE400000000000000);
    v6 = 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, 1702195828, 0xE400000000000000, 0);
    swift_bridgeObjectRelease(v5);
    v6 = v7 & 1;
  }
  v12 = 0x614D646C756F6873;
  v13 = 0xEA00000000006B72;
  AnyHashable.init<A>(_:)(v14, &v12, &type metadata for String, &protocol witness table for String);
  v8 = sub_100084B28((uint64_t)v14, 1702195828, 0xE400000000000000, a1);
  v10 = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(a1);
  sub_10000DAE8((uint64_t)v14);
  if (v8 == 1702195828 && v10 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease(0xE400000000000000);
  }
  else
  {
    _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, 1702195828, 0xE400000000000000, 0);
    swift_bridgeObjectRelease(v10);
  }
  return v6;
}

uint64_t destroy for RoomOption(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
}

uint64_t initializeWithCopy for RoomOption(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for RoomOption(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

__n128 initializeWithTake for RoomOption(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for RoomOption(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for RoomOption(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RoomOption(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RoomOption()
{
  return &type metadata for RoomOption;
}

uint64_t sub_10008204C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000111E8(v2, qword_1000D8010);
  v3 = sub_10001118C(v2, (uint64_t)qword_1000D8010);
  if (qword_1000D55C0 != -1)
    swift_once(&qword_1000D55C0, sub_100058090);
  v4 = sub_10001118C(v2, (uint64_t)qword_1000DB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

void sub_1000820DC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char *v11;
  objc_class *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  char *v20;
  int v21;
  const char *v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  uint64_t v29;
  os_log_type_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSString v35;
  NSString v36;
  NSString v37;
  NSString v38;
  id v39;
  NSString v40;
  NSString v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char v52[24];
  objc_super v53;

  v1 = v0;
  v2 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v2);
  v4 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)type metadata accessor for HomePodSetupViewModel(0);
  v6 = *((_QWORD *)v5 - 1);
  v7 = __chkstk_darwin(v5);
  v9 = (uint64_t *)((char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  v11 = (char *)&v47 - v10;
  v12 = (objc_class *)type metadata accessor for HomePodSetupProgressViewController(0);
  v53.receiver = v1;
  v53.super_class = v12;
  objc_msgSendSuper2(&v53, "viewDidLoad");
  v13 = (uint64_t)&v1[OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_viewModel];
  swift_beginAccess(&v1[OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_viewModel], v52, 0, 0);
  sub_10000E0F0(v13, (uint64_t)v4, (uint64_t *)&unk_1000D6EC0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10000DC40((uint64_t)v4, (uint64_t *)&unk_1000D6EC0);
    if (qword_1000D5660 != -1)
      swift_once(&qword_1000D5660, sub_10008204C);
    v15 = type metadata accessor for Logger(0, v14);
    v16 = sub_10001118C(v15, (uint64_t)qword_1000D8010);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "HomePodSetupProgress: failed in viewDidLoad because viewModel not set.", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

  }
  else
  {
    sub_1000148AC((uint64_t)v4, (uint64_t)v11);
    v20 = &v11[v5[17]];
    if (v20[4])
      v21 = 0;
    else
      v21 = *(_DWORD *)v20;
    v22 = sub_100083638(v21);
    v24 = String.init(cString:)(v22);
    v25 = v23;
    if (qword_1000D5660 != -1)
      swift_once(&qword_1000D5660, sub_10008204C);
    v26 = type metadata accessor for Logger(0, v23);
    sub_10001118C(v26, (uint64_t)qword_1000D8010);
    sub_1000111A4((uint64_t)v11, (uint64_t)v9);
    swift_bridgeObjectRetain(v25);
    v28 = Logger.logObject.getter(v27);
    v30 = static os_log_type_t.default.getter(v28, v29);
    if (os_log_type_enabled(v28, v30))
    {
      v31 = swift_slowAlloc(22, -1);
      v48 = swift_slowAlloc(64, -1);
      v51 = v48;
      *(_DWORD *)v31 = 136315394;
      v49 = v1;
      v47 = v24;
      v33 = *v9;
      v32 = v9[1];
      swift_bridgeObjectRetain(v32);
      v50 = sub_10003EF58(v33, v32, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51);
      swift_bridgeObjectRelease(v32);
      sub_1000148F0((uint64_t)v9);
      *(_WORD *)(v31 + 12) = 2080;
      swift_bridgeObjectRetain(v25);
      v50 = sub_10003EF58(v47, v25, &v51);
      v1 = v49;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51);
      swift_bridgeObjectRelease_n(v25, 3);
      _os_log_impl((void *)&_mh_execute_header, v28, v30, "HomePodSetupProgress: viewDidLoad called with title %s progressEvent=%s", (uint8_t *)v31, 0x16u);
      v34 = v48;
      swift_arrayDestroy(v48, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v34, -1, -1);
      swift_slowDealloc(v31, -1, -1);

    }
    else
    {
      sub_1000148F0((uint64_t)v9);

      swift_bridgeObjectRelease_n(v25, 2);
    }
    sub_10006328C((uint64_t)v11);
    sub_10008287C();
    if ((v11[v5[18]] & 2) == 0 && *(_QWORD *)&v11[v5[19] + 8])
    {
      v35 = String._bridgeToObjectiveC()();
      v36 = String._bridgeToObjectiveC()();
      v37 = String._bridgeToObjectiveC()();
      v38 = String._bridgeToObjectiveC()();
      v39 = objc_msgSend(v1, "dismissalConfirmationActionWithTitle:message:confirmButtonTitle:cancelButtonTitle:", v35, v36, v37, v38);

      objc_msgSend(v1, "setDismissButtonAction:", v39);
    }
    v40 = String._bridgeToObjectiveC()();
    v41 = sub_100006354(v40);

    if (!v41)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v44 = v43;
      v41 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v42 = swift_bridgeObjectRelease(v44).n128_u64[0];
    }
    objc_msgSend(v1, "showActivityIndicatorWithStatus:", v41, v42);

    if (v11[v5[16]] == 1 && isInternalBuild())
    {
      v45 = objc_msgSend((id)objc_opt_self(NSTimer), "scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:", v1, "handleTimer:", 0, 1, 0.1);
      v46 = *(void **)&v1[OBJC_IVAR____TtC14HDSViewService34HomePodSetupProgressViewController_timer];
      *(_QWORD *)&v1[OBJC_IVAR____TtC14HDSViewService34HomePodSetupProgressViewController_timer] = v45;

    }
    sub_1000148F0((uint64_t)v11);
  }
}

uint64_t sub_1000826A0(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  objc_class *v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v14[24];
  objc_super v15;

  v2 = v1;
  v4 = sub_10000D604(&qword_1000D8068);
  __chkstk_darwin(v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = (objc_class *)type metadata accessor for HomePodSetupProgressViewController(0);
  v15.receiver = v2;
  v15.super_class = v7;
  objc_msgSendSuper2(&v15, "viewDidAppear:", a1 & 1);
  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_presenter]);
  if (Strong)
  {
    v9 = Strong;
    sub_10006EB30();
    Strong = swift_unknownObjectRelease(v9);
  }
  Date.init()(Strong);
  v10 = type metadata accessor for Date(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 0, 1, v10);
  v11 = (uint64_t)&v2[OBJC_IVAR____TtC14HDSViewService34HomePodSetupProgressViewController_startDate];
  swift_beginAccess(v11, v14, 33, 0);
  sub_100084134((uint64_t)v6, v11);
  return swift_endAccess(v14);
}

void sub_100082868(uint64_t a1)
{
  sub_10006328C(a1);
  sub_10008287C();
}

void sub_10008287C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  uint64_t v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint8_t *v24;
  const char *v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  unint64_t v39;
  NSString v40;
  id v41;
  NSString v42;
  id v43;
  unint64_t v44;
  NSString v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  NSString v50;
  id v51;
  id v52;
  NSString v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char v62[24];

  v1 = v0;
  v2 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v2);
  v4 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for HomePodSetupViewModel(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t)&v1[OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_viewModel];
  swift_beginAccess(&v1[OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_viewModel], v62, 0, 0);
  sub_10000E0F0(v9, (uint64_t)v4, (uint64_t *)&unk_1000D6EC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
  {
    sub_1000148AC((uint64_t)v4, (uint64_t)v8);
    v17 = &v8[*(int *)(v5 + 68)];
    if ((v17[4] & 1) != 0)
    {
      if (qword_1000D5660 != -1)
        swift_once(&qword_1000D5660, sub_10008204C);
      v18 = type metadata accessor for Logger(0, v16);
      v19 = sub_10001118C(v18, (uint64_t)qword_1000D8010);
      v20 = Logger.logObject.getter(v19);
      v22 = static os_log_type_t.default.getter(v20, v21);
      if (!os_log_type_enabled(v20, v22))
      {
LABEL_17:

        if ((v17[4] & 1) != 0)
          goto LABEL_53;
LABEL_20:
        v38 = *(_DWORD *)v17;
        if (*(int *)v17 > 123)
        {
          switch(v38)
          {
            case 200:
            case 210:
            case 220:
            case 234:
              goto LABEL_48;
            case 201:
            case 202:
            case 203:
            case 204:
            case 205:
            case 206:
            case 207:
            case 208:
            case 209:
            case 211:
            case 212:
            case 213:
            case 214:
            case 215:
            case 216:
            case 217:
            case 218:
            case 219:
            case 221:
            case 222:
            case 223:
            case 224:
            case 225:
            case 226:
            case 227:
            case 228:
            case 229:
            case 231:
            case 232:
            case 233:
            case 235:
            case 236:
            case 237:
            case 238:
            case 239:
            case 240:
            case 241:
            case 242:
            case 243:
            case 244:
            case 245:
            case 246:
            case 247:
            case 248:
            case 249:
              goto LABEL_53;
            case 230:
              if (v8[*(int *)(v5 + 64)])
                v39 = 0x80000001000A2EB0;
              else
                v39 = 0xE800000000000000;
              goto LABEL_47;
            case 250:
              objc_msgSend(v1, "hideActivityIndicator");
              v49 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:", 40.0);
              v50 = String._bridgeToObjectiveC()();
              v51 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v50, v49);

              v45 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v51);
              v52 = objc_msgSend((id)objc_opt_self(UIColor), "systemGreenColor");
              objc_msgSend(v45, "setTintColor:", v52);

              objc_msgSend(v1, "setBottomTrayImageView:", v45);
              goto LABEL_52;
            default:
              if (v38 != 124 && v38 != 906)
                goto LABEL_53;
              v53 = String._bridgeToObjectiveC()();
              v45 = sub_100006354(v53);

              if (!v45)
              {
                static String._unconditionallyBridgeFromObjectiveC(_:)(0);
                v56 = v55;
                v45 = String._bridgeToObjectiveC()();
                *(_QWORD *)&v54 = swift_bridgeObjectRelease(v56).n128_u64[0];
              }
              objc_msgSend(v1, "showActivityIndicatorWithStatus:", v45, v54);
              break;
          }
          goto LABEL_52;
        }
        if (v38 <= 79)
        {
          if (v38 == 40)
          {
            if (v8[*(int *)(v5 + 64)])
              v39 = 0xEA0000000000474ELL;
            else
              v39 = 0xEA00000000005055;
            goto LABEL_47;
          }
          if (v38 == 60)
          {
LABEL_48:
            v42 = String._bridgeToObjectiveC()();
            v43 = sub_100006354(v42);

            static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
            v39 = v44;

            v40 = String._bridgeToObjectiveC()();
            v41 = sub_100006354(v40);
            goto LABEL_49;
          }
        }
        else
        {
          switch(v38)
          {
            case 'P':
              if (v8[*(int *)(v5 + 64)])
                v39 = 0xEA0000000000474ELL;
              else
                v39 = 0xEA00000000005055;
              goto LABEL_47;
            case 'x':
              if (v8[*(int *)(v5 + 64)])
                v39 = 0xEF44554F4C43495FLL;
              else
                v39 = 0xE800000000000000;
              goto LABEL_47;
            case 'z':
              if (v8[*(int *)(v5 + 64)])
                v39 = 0x80000001000A2ED0;
              else
                v39 = 0xE800000000000000;
LABEL_47:
              v40 = String._bridgeToObjectiveC()();
              v41 = sub_100006354(v40);
LABEL_49:
              v45 = v41;

              if (!v45)
              {
                static String._unconditionallyBridgeFromObjectiveC(_:)(0);
                v48 = v47;
                v45 = String._bridgeToObjectiveC()();
                *(_QWORD *)&v46 = swift_bridgeObjectRelease(v48).n128_u64[0];
              }
              objc_msgSend(v1, "showActivityIndicatorWithStatus:", v45, v46);
              swift_bridgeObjectRelease(v39);
LABEL_52:

              break;
          }
        }
LABEL_53:
        sub_1000148F0((uint64_t)v8);
        return;
      }
      v23 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v22, "HomePodSetupProgressViewController updatetTitleForProgressUI: progressEvent is nil", v23, 2u);
      v24 = v23;
    }
    else
    {
      v25 = sub_100083638(*(_DWORD *)v17);
      v27 = String.init(cString:)(v25);
      v28 = v26;
      if (qword_1000D5660 != -1)
        swift_once(&qword_1000D5660, sub_10008204C);
      v29 = type metadata accessor for Logger(0, v26);
      sub_10001118C(v29, (uint64_t)qword_1000D8010);
      swift_bridgeObjectRetain(v28);
      v20 = Logger.logObject.getter(v30);
      v32 = static os_log_type_t.default.getter(v20, v31);
      if (!os_log_type_enabled(v20, v32))
      {

        swift_bridgeObjectRelease_n(v28, 2);
        if ((v17[4] & 1) != 0)
          goto LABEL_53;
        goto LABEL_20;
      }
      v33 = swift_slowAlloc(12, -1);
      v59 = v8;
      v34 = (uint8_t *)v33;
      v35 = swift_slowAlloc(32, -1);
      v58 = v1;
      v36 = v35;
      v61 = v35;
      *(_DWORD *)v34 = 136315138;
      swift_bridgeObjectRetain(v28);
      v60 = sub_10003EF58(v27, v28, &v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);
      swift_bridgeObjectRelease_n(v28, 3);
      _os_log_impl((void *)&_mh_execute_header, v20, v32, "HomePodSetupProgressViewController updatetTitleForProgressUI: %s", v34, 0xCu);
      swift_arrayDestroy(v36, 1, (char *)&type metadata for Any + 8);
      v37 = v36;
      v1 = v58;
      swift_slowDealloc(v37, -1, -1);
      v24 = v34;
      v8 = v59;
    }
    swift_slowDealloc(v24, -1, -1);
    goto LABEL_17;
  }
  sub_10000DC40((uint64_t)v4, (uint64_t *)&unk_1000D6EC0);
  objc_msgSend(v1, "hideActivityIndicator");
  if (qword_1000D5660 != -1)
    swift_once(&qword_1000D5660, sub_10008204C);
  v11 = type metadata accessor for Logger(0, v10);
  v12 = sub_10001118C(v11, (uint64_t)qword_1000D8010);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "HomePodSetupProgress: failed to updatet progress UI because viewModel not set.", v15, 2u);
    swift_slowDealloc(v15, -1, -1);
  }

}

uint64_t sub_100083478()
{
  uint64_t v0;

  return sub_10000DC40(v0 + OBJC_IVAR____TtC14HDSViewService34HomePodSetupProgressViewController_startDate, &qword_1000D8068);
}

id sub_1000834B0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupProgressViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100083528()
{
  return type metadata accessor for HomePodSetupProgressViewController(0);
}

uint64_t type metadata accessor for HomePodSetupProgressViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1000D8050;
  if (!qword_1000D8050)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HomePodSetupProgressViewController);
  return result;
}

void sub_10008356C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = "\b";
  sub_1000835E4(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 248);
  }
}

void sub_1000835E4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1000D8060)
  {
    v2 = type metadata accessor for Date(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1000D8060);
  }
}

const char *sub_100083638(int a1)
{
  const char *result;

  if (a1 > 299)
  {
    if (a1 <= 799)
    {
      if (a1 <= 519)
      {
        if (a1 <= 410)
        {
          if (a1 <= 399)
          {
            if (a1 == 300)
              return "BackupProgress";
            if (a1 == 310)
              return "SyncProgress";
          }
          else
          {
            switch(a1)
            {
              case 400:
                return "StopSetup";
              case 401:
                return "PINPair";
              case 410:
                return "MigrateStart";
            }
          }
        }
        else if (a1 > 430)
        {
          switch(a1)
          {
            case 431:
              return "eSimExternal2FAStop";
            case 500:
              return "SiriWelcome";
            case 510:
              return "SiriDialogA";
          }
        }
        else
        {
          switch(a1)
          {
            case 411:
              return "MigrateStop";
            case 420:
              return "FileTransferReady";
            case 430:
              return "eSimExternal2FAStart";
          }
        }
      }
      else if (a1 > 559)
      {
        if (a1 > 599)
        {
          switch(a1)
          {
            case 600:
              return "SiriSkipDemo";
            case 700:
              return "StopSetupLEDs";
            case 710:
              return "AudioPasscodeEnded";
          }
        }
        else
        {
          switch(a1)
          {
            case 560:
              return "SiriDialogCMusic";
            case 570:
              return "SiriDialogCNews";
            case 580:
              return "SiriDialogCWeather";
          }
        }
      }
      else if (a1 > 549)
      {
        switch(a1)
        {
          case 550:
            return "SiriDialogBWeather";
          case 555:
            return "SiriDialogBClock";
          case 558:
            return "SiriDialogBMusic";
        }
      }
      else
      {
        switch(a1)
        {
          case 520:
            return "SiriDialogBStart";
          case 530:
            return "SiriDialogBHome";
          case 540:
            return "SiriDialogBNews";
        }
      }
      return "?";
    }
    if (a1 > 999)
    {
      if (a1 <= 1099)
      {
        if (a1 == 1000)
          return "SecureIntentStart";
        if (a1 == 1001)
          return "SecureIntentFinish";
      }
      else
      {
        switch(a1)
        {
          case 1100:
            return "OneTimeCodeDetected";
          case 2000:
            return "DependentStart";
          case 2001:
            return "DependentEnd";
        }
      }
      return "?";
    }
    switch(a1)
    {
      case 900:
        result = "SU-No-SetupScanAttempt";
        break;
      case 901:
        result = "SU-No-SetupStatusUpdate";
        break;
      case 902:
        result = "SU-No-SetupWipeWifi";
        break;
      case 903:
        result = "SU-No-SetupCancelled";
        break;
      case 904:
        result = "SU-No-SetupObliterate";
        break;
      case 905:
        result = "SU-No-SetupCannotCancel";
        break;
      case 906:
        result = "SysDrop AirDrop Event";
        break;
      case 907:
        result = "SysDrop Sysdiagnose Event";
        break;
      case 908:
        result = "SysDrop Cancel Event";
        break;
      case 909:
        result = "File Transfer Progress Event";
        break;
      case 910:
        result = "File Transfer Completed Event";
        break;
      case 911:
        result = "iOSWiFiSetup";
        break;
      case 912:
        result = "HKPrimaryResidentSSIDFetchStart";
        break;
      default:
        switch(a1)
        {
          case 800:
            result = "AuthAccountsStart";
            break;
          case 803:
            result = "AuthAccountsiCloudProgress";
            break;
          case 804:
            result = "AuthAccountsStoreProgress";
            break;
          case 805:
            result = "AuthAccountsGameCenterProgress";
            break;
          default:
            return "?";
        }
        break;
    }
  }
  else if (a1 > 129)
  {
    if (a1 > 249)
    {
      switch(a1)
      {
        case 260:
          result = "TVLSStart";
          break;
        case 261:
        case 262:
        case 263:
        case 265:
        case 266:
        case 267:
        case 268:
        case 269:
        case 271:
        case 273:
        case 275:
          return "?";
        case 264:
          result = "TVLSFinish";
          break;
        case 270:
          result = "TVLSEstimateStart";
          break;
        case 272:
          result = "TVLSEstimateFinal";
          break;
        case 274:
          result = "TVLSEstimateFailed";
          break;
        case 276:
          result = "TVLSTryAgain";
          break;
        case 277:
          result = "TVLSToneBegan";
          break;
        case 278:
          result = "TVLCalStart";
          break;
        case 279:
          result = "TVLCalStep";
          break;
        case 280:
          result = "TVLCalFailed";
          break;
        case 281:
          result = "TVLCalTryAgain";
          break;
        case 282:
          result = "TVLCalFinal";
          break;
        default:
          if (a1 != 250)
            return "?";
          result = "ReportSuccess";
          break;
      }
    }
    else
    {
      if (a1 <= 219)
      {
        if (a1 <= 149)
        {
          if (a1 == 130)
            return "WiFiPoweredOff";
          if (a1 == 140)
            return "RecognizeVoice";
        }
        else
        {
          switch(a1)
          {
            case 150:
              return "SiriForEveryone";
            case 200:
              return "WiFiStart";
            case 210:
              return "ActivationStart";
          }
        }
        return "?";
      }
      switch(a1)
      {
        case 230:
          return "HomeKitStart";
        case 231:
        case 232:
        case 233:
        case 235:
        case 237:
        case 238:
        case 239:
          return "?";
        case 234:
          return "HomeKitSetupStart";
        case 236:
          return "CDPSetupStart";
        case 240:
          return "BuddyStarting";
        case 241:
          return "BuddyProgress";
        case 242:
          return "BuddyFinished";
        default:
          if (a1 == 220)
          {
            result = "iCloudStart";
          }
          else
          {
            if (a1 != 224)
              return "?";
            result = "AppleIDSetupStart";
          }
          break;
      }
    }
  }
  else
  {
    if (a1 <= 79)
    {
      if (a1 > 49)
      {
        if (a1 > 64)
        {
          if (a1 == 65)
            return "SecurityAPCLoopStart";
          if (a1 == 70)
            return "SecurityFinish";
        }
        else
        {
          if (a1 == 50)
            return "PreAuthFinish";
          if (a1 == 60)
            return "SecurityStart";
        }
      }
      else
      {
        if (a1 > 29)
        {
          switch(a1)
          {
            case 30:
              result = "Error";
              break;
            case 31:
              result = "SessionStarted";
              break;
            case 32:
              result = "SessionEnded";
              break;
            case 33:
              result = "SessionSecured";
              break;
            case 35:
              result = "ConnectStart";
              break;
            case 40:
              result = "PreAuthStart";
              break;
            default:
              return "?";
          }
          return result;
        }
        switch(a1)
        {
          case 0:
            return "Invalid";
          case 10:
            return "Start";
          case 20:
            return "Final";
        }
      }
      return "?";
    }
    if (a1 > 119)
    {
      switch(a1)
      {
        case 'x':
          return "CheckingiCloud";
        case 'z':
          return "CheckingAppleMusic";
        case '|':
          return "CheckingAccount";
      }
      return "?";
    }
    switch(a1)
    {
      case 'P':
        result = "BasicConfigStart";
        break;
      case 'Z':
        result = "BasicConfigFinish";
        break;
      case '\\':
        result = "StepStart";
        break;
      case '^':
        result = "StepFinish";
        break;
      case '_':
        result = "PreFinish";
        break;
        result = "SetupFinished";
        break;
      case 'a':
        result = "SetupResumed";
        break;
      case 'b':
        result = "SetupSuspend";
        break;
      case 'c':
        result = "SetupPeerSWUpdate";
        break;
      case 'd':
        result = "Finished";
        break;
      default:
        return "?";
    }
  }
  return result;
}

uint64_t sub_100083DB4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  double v24;
  uint64_t (*v25)(char *, uint64_t);
  Swift::String v26;
  void *object;
  unint64_t v28;
  NSString v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36[24];
  char v37[24];

  v1 = v0;
  v2 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for HomePodSetupViewModel(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000D604(&qword_1000D8068);
  __chkstk_darwin(v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v31 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v16 = (char *)&v30 - v15;
  v17 = (uint64_t)&v1[OBJC_IVAR____TtC14HDSViewService34HomePodSetupProgressViewController_startDate];
  swift_beginAccess(&v1[OBJC_IVAR____TtC14HDSViewService34HomePodSetupProgressViewController_startDate], v37, 0, 0);
  sub_10000E0F0(v17, (uint64_t)v10, &qword_1000D8068);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    return sub_10000DC40((uint64_t)v10, &qword_1000D8068);
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v10, v11);
  v19 = (uint64_t)&v1[OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_viewModel];
  swift_beginAccess(&v1[OBJC_IVAR____TtC14HDSViewService32HomePodSetupStereoViewController_viewModel], v36, 0, 0);
  sub_10000E0F0(v19, (uint64_t)v4, (uint64_t *)&unk_1000D6EC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
    return sub_10000DC40((uint64_t)v4, (uint64_t *)&unk_1000D6EC0);
  }
  v20 = v32;
  v21 = sub_1000148AC((uint64_t)v4, v32);
  if (*(_BYTE *)(v20 + *(int *)(v5 + 64)) != 1 || (v22 = isInternalBuild(v21), !(_DWORD)v22))
  {
    sub_1000148F0(v20);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v16, v11);
  }
  v34 = 0x3A64657370616C45;
  v35 = 0xE900000000000020;
  v23 = v31;
  Date.init()(v22);
  v24 = Date.timeIntervalSince(_:)(v16);
  v25 = *(uint64_t (**)(char *, uint64_t))(v12 + 8);
  result = v25(v23, v11);
  if ((~*(_QWORD *)&v24 & 0x7FF0000000000000) != 0)
  {
    if (v24 > -9.22337204e18)
    {
      if (v24 < 9.22337204e18)
      {
        v33 = (uint64_t)v24;
        v26._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
        object = v26._object;
        String.append(_:)(v26);
        swift_bridgeObjectRelease(object);
        v28 = v35;
        v29 = String._bridgeToObjectiveC()();
        objc_msgSend(v1, "setSubtitle:", v29, swift_bridgeObjectRelease(v28).n128_f64[0]);

        sub_1000148F0(v20);
        return v25(v16, v11);
      }
      goto LABEL_14;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_100084134(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000D604(&qword_1000D8068);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008417C()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v5;
  _OWORD v6[2];
  _BYTE v7[24];
  uint64_t v8;

  v1 = objc_msgSend(v0, "_remoteViewControllerProxy");
  if (v1)
  {
    v2 = v1;
    _bridgeAnyObjectToAny(_:)(v6, v1);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_100057FFC((uint64_t)v6, (uint64_t)v7);
  if (v8)
  {
    v3 = sub_10000D604(&qword_1000D7188);
    if (swift_dynamicCast(&v5, v7, (char *)&type metadata for Any + 8, v3, 6))
      return v5;
    else
      return 0;
  }
  else
  {
    sub_10008455C((uint64_t)v7);
    return 0;
  }
}

void *sub_100084234(char a1)
{
  void *v1;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *result;
  void *v8;
  objc_super v9;

  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for BaseProxFlowViewController();
  objc_msgSendSuper2(&v9, "viewDidAppear:", a1 & 1);
  v3 = (void *)sub_10008417C();
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, "setStatusBarHidden:withDuration:", 1, 0.3);
    swift_unknownObjectRelease(v4);
  }
  v5 = (void *)sub_10008417C();
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, "setAllowsBanners:", 1);
    swift_unknownObjectRelease(v6);
  }
  result = (void *)sub_10008417C();
  if (result)
  {
    v8 = result;
    objc_msgSend(result, "setDesiredHardwareButtonEvents:", 16 * (SFDeviceHomeButtonType() != 3));
    return (void *)swift_unknownObjectRelease(v8);
  }
  return result;
}

id sub_10008450C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BaseProxFlowViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for BaseProxFlowViewController()
{
  return objc_opt_self(_TtC14HDSViewService26BaseProxFlowViewController);
}

uint64_t sub_10008455C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000D604(&qword_1000D5820);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1000845E4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomePodSetupDoneViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100084618()
{
  return type metadata accessor for HomePodSetupDoneViewController(0);
}

uint64_t type metadata accessor for HomePodSetupDoneViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1000D80C0;
  if (!qword_1000D80C0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HomePodSetupDoneViewController);
  return result;
}

uint64_t sub_10008465C(uint64_t a1)
{
  _BYTE v2[8];

  return swift_updateClassMetadata2(a1, 256, 0, v2, a1 + 248);
}

uint64_t sub_100084690()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  Swift::String v9;
  _QWORD v11[2];

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin();
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(*v0, "uniqueIdentifier");
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  v6 = UUID.uuidString.getter();
  v8 = v7;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v11[0] = 0x5F656D6F68;
  v11[1] = 0xE500000000000000;
  v9._countAndFlagsBits = v6;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(v8);
  return v11[0];
}

uint64_t sub_100084770(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  Swift::String v10;
  Swift::String v11;
  void *object;
  Swift::String v13;
  Swift::String v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  Swift::String v23;
  void *v24;
  Swift::String v25;
  uint64_t v26;
  void *v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  Swift::String v33;
  void *v34;
  Swift::String v35;
  uint64_t v36;
  void *v37;
  Swift::String v38;
  uint64_t v39;
  Swift::String v40;
  uint64_t v42;
  unint64_t v43;
  _QWORD v44[2];

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44[0] = 1031365995;
  v44[1] = 0xE400000000000000;
  v6 = objc_msgSend(a1, "uniqueIdentifier");
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  v7 = UUID.uuidString.getter();
  v9 = v8;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v42 = 0x5F656D6F68;
  v43 = 0xE500000000000000;
  v10._countAndFlagsBits = v7;
  v10._object = v9;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(v9);
  v11._countAndFlagsBits = String.init<A>(reflecting:)(&v42, &type metadata for String);
  object = v11._object;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(object);
  v13._countAndFlagsBits = 32;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  v14._countAndFlagsBits = v44[0];
  v15 = (void *)v44[1];
  strcpy((char *)v44, "<HomeOption ");
  BYTE5(v44[1]) = 0;
  HIWORD(v44[1]) = -5120;
  v14._object = v15;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(v15);
  v17 = v44[0];
  v16 = v44[1];
  v44[0] = 0;
  v44[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(16);
  *(_QWORD *)&v18 = swift_bridgeObjectRelease(v44[1]).n128_u64[0];
  strcpy((char *)v44, "displayValue=");
  HIWORD(v44[1]) = -4864;
  v19 = objc_msgSend(a1, "name", v18);
  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v22 = v21;

  v42 = v20;
  v43 = v22;
  v23._countAndFlagsBits = String.init<A>(reflecting:)(&v42, &type metadata for String);
  v24 = v23._object;
  String.append(_:)(v23);
  swift_bridgeObjectRelease(v24);
  v25._countAndFlagsBits = 32;
  v25._object = (void *)0xE100000000000000;
  String.append(_:)(v25);
  v26 = v44[0];
  v27 = (void *)v44[1];
  v44[0] = v17;
  v44[1] = v16;
  swift_bridgeObjectRetain(v16);
  v28._countAndFlagsBits = v26;
  v28._object = v27;
  String.append(_:)(v28);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v27);
  v30 = v44[0];
  v29 = v44[1];
  v44[0] = 0x3D656D6F68;
  v44[1] = 0xE500000000000000;
  v42 = (uint64_t)a1;
  v31 = sub_100084A4C();
  v32 = a1;
  v33._countAndFlagsBits = String.init<A>(reflecting:)(&v42, v31);
  v34 = v33._object;
  String.append(_:)(v33);
  swift_bridgeObjectRelease(v34);
  v35._countAndFlagsBits = 32;
  v35._object = (void *)0xE100000000000000;
  String.append(_:)(v35);
  v36 = v44[0];
  v37 = (void *)v44[1];
  v44[0] = v30;
  v44[1] = v29;
  swift_bridgeObjectRetain(v29);
  v38._countAndFlagsBits = v36;
  v38._object = v37;
  String.append(_:)(v38);
  swift_bridgeObjectRelease(v29);
  swift_bridgeObjectRelease(v37);
  v39 = v44[1];
  swift_bridgeObjectRetain(v44[1]);
  v40._countAndFlagsBits = 62;
  v40._object = (void *)0xE100000000000000;
  String.append(_:)(v40);
  swift_bridgeObjectRelease(v39);
  return v44[0];
}

uint64_t sub_100084A44()
{
  void **v0;

  return sub_100084770(*v0);
}

unint64_t sub_100084A4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000D80D0;
  if (!qword_1000D80D0)
  {
    v1 = objc_opt_self(HMHome);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1000D80D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeOption()
{
  return &type metadata for HomeOption;
}

uint64_t sub_100084A98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000111E8(v2, qword_1000D80D8);
  v3 = sub_10001118C(v2, (uint64_t)qword_1000D80D8);
  if (qword_1000D55C0 != -1)
    swift_once(&qword_1000D55C0, sub_100058090);
  v4 = sub_10001118C(v2, (uint64_t)qword_1000DB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

uint64_t sub_100084B28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[40];

  v5 = a2;
  if (*(_QWORD *)(a4 + 16))
  {
    v7 = sub_10004A78C(a1);
    if ((a2 & 1) != 0)
      return *(_QWORD *)(*(_QWORD *)(a4 + 56) + 16 * v7);
  }
  if (qword_1000D5668 != -1)
    swift_once(&qword_1000D5668, sub_100084A98);
  v8 = type metadata accessor for Logger(0, a2);
  sub_10001118C(v8, (uint64_t)qword_1000D80D8);
  sub_100012DD0(a1, (uint64_t)v26);
  v9 = swift_bridgeObjectRetain_n(a4, 2);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc(22, -1);
    v23 = swift_slowAlloc(64, -1);
    v25 = v23;
    *(_DWORD *)v12 = 136315394;
    v13 = AnyHashable.description.getter();
    v15 = v14;
    v24 = sub_10003EF58(v13, v14, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25);
    swift_bridgeObjectRelease(v15);
    sub_10000DAE8((uint64_t)v26);
    *(_WORD *)(v12 + 12) = 2080;
    v16 = swift_bridgeObjectRetain(a4);
    v17 = Dictionary.description.getter(v16, &type metadata for AnyHashable, &type metadata for String, &protocol witness table for AnyHashable);
    v18 = v5;
    v20 = v19;
    swift_bridgeObjectRelease(a4);
    v24 = sub_10003EF58(v17, v20, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25);
    swift_bridgeObjectRelease_n(a4, 2);
    v21 = v20;
    v5 = v18;
    swift_bridgeObjectRelease(v21);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Couldn't get value for key \"%s\" from %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy(v23, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {
    sub_10000DAE8((uint64_t)v26);

    swift_bridgeObjectRelease_n(a4, 2);
  }
  return v5;
}

uint64_t sub_100084D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v4(a2);
  return swift_release(v3);
}

uint64_t sub_100084DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000111E8(v2, qword_1000D80F0);
  v3 = sub_10001118C(v2, (uint64_t)qword_1000D80F0);
  if (qword_1000D55C0 != -1)
    swift_once(&qword_1000D55C0, sub_100058090);
  v4 = sub_10001118C(v2, (uint64_t)qword_1000DB830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

id sub_100084E68()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 64);
  if (v1)
  {
    v2 = *(id *)(v0 + 64);
  }
  else
  {
    v3 = objc_msgSend(objc_allocWithZone((Class)CUSystemMonitor), "init");
    v4 = *(void **)(v0 + 64);
    *(_QWORD *)(v0 + 64) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

id sub_100084ED0()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSString v4;
  id v5;
  void *v6;
  id v7;

  v1 = *(void **)(v0 + 72);
  if (v1)
  {
    v2 = *(id *)(v0 + 72);
  }
  else
  {
    v3 = objc_allocWithZone((Class)NSUserDefaults);
    v4 = String._bridgeToObjectiveC()();
    v5 = objc_msgSend(v3, "initWithSuiteName:", v4);

    if (!v5)
      v5 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v6 = *(void **)(v0 + 72);
    *(_QWORD *)(v0 + 72) = v5;
    v2 = v5;

    v1 = 0;
  }
  v7 = v1;
  return v2;
}

uint64_t *sub_100084F90(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *result;
  uint64_t *v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  Class isa;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  id v40;
  NSString v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD aBlock[5];
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  __int128 v55;
  __int128 v56;

  v2 = v1;
  v50 = *v1;
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[2] = 0;
  v1[3] = 0x4072C00000000000;
  v1[5] = 0;
  swift_unknownObjectWeakInit(v1 + 4, 0);
  *((_BYTE *)v1 + 56) = 0;
  v1[8] = 0;
  v1[9] = 0;
  v1[12] = 0;
  v1[13] = 0;
  v1[11] = 0;
  *((_BYTE *)v1 + 112) = 1;
  swift_unknownObjectWeakInit(v1 + 15, 0);
  v1[17] = 0;
  v1[19] = (uint64_t)&_swiftEmptySetSingleton;
  *((_BYTE *)v1 + 160) = 0;
  *((_DWORD *)v1 + 41) = 0;
  v1[21] = (uint64_t)objc_msgSend(objc_allocWithZone((Class)AppleMusicServiceUtilities), "init");
  *((_WORD *)v1 + 88) = 0;
  v8 = type metadata accessor for HomePodSetupModel(0);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  swift_bridgeObjectRetain(a1);
  v1[6] = sub_1000432CC(v9);
  v1[18] = (uint64_t)objc_msgSend(objc_allocWithZone((Class)SFDeviceAssetManager), "init");
  result = (uint64_t *)objc_msgSend((id)objc_opt_self(ACAccountStore), "defaultStore");
  if (!result)
  {
    __break(1u);
    return result;
  }
  v11 = result;
  v12 = objc_msgSend(result, "aa_primaryAppleAccount");

  if (v12)
  {
    v13 = objc_msgSend(v12, "username");
    if (v13)
    {
      v14 = v13;
      v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      v17 = v16;

      v18 = HIBYTE(v17) & 0xF;
      if ((v17 & 0x2000000000000000) == 0)
        v18 = v15 & 0xFFFFFFFFFFFFLL;
      if (v18)
      {
        v19 = v2[6];
        v20 = *(_QWORD *)(v19 + 24);
        *(_QWORD *)(v19 + 16) = v15;
        *(_QWORD *)(v19 + 24) = v17;
        v17 = v20;
      }
      swift_bridgeObjectRelease(v17);
    }
  }
  v21 = v2[6];
  swift_retain(v21);
  *(_QWORD *)(v21 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_viewAppearedTicks) = mach_absolute_time();
  swift_release(v21);
  v22 = v2[6];
  swift_retain(v22);
  *(_BYTE *)(v22 + 69) = sub_1000062BC();
  swift_release(v22);
  if (IsAppleInternalBuild(v23))
  {
    v53 = 0x6172615074736574;
    v54 = 0xEA0000000000736DLL;
    AnyHashable.init<A>(_:)(aBlock, &v53, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(a1 + 16) && (v24 = sub_10004A78C((uint64_t)aBlock), (v25 & 1) != 0))
    {
      sub_10000DB98(*(_QWORD *)(a1 + 56) + 32 * v24, (uint64_t)&v55);
    }
    else
    {
      v55 = 0u;
      v56 = 0u;
    }
    sub_10000DAE8((uint64_t)aBlock);
    if (*((_QWORD *)&v56 + 1))
    {
      if (swift_dynamicCast(&v53, &v55, (char *)&type metadata for Any + 8, &type metadata for String, 6))
      {
        v27 = v53;
        v26 = v54;
LABEL_19:
        if (qword_1000D5530 != -1)
          swift_once(&qword_1000D5530, sub_100036860);
        sub_100036B60(v27, v26);
        swift_bridgeObjectRelease(v26);
        sub_1000384C4(a1);
        goto LABEL_22;
      }
    }
    else
    {
      sub_10000DC40((uint64_t)&v55, &qword_1000D5820);
    }
    v27 = 0;
    v26 = 0xE000000000000000;
    goto LABEL_19;
  }
LABEL_22:
  swift_bridgeObjectRelease(a1);
  v28 = objc_msgSend(objc_allocWithZone((Class)HDSSetupSession), "init");
  v2[10] = (uint64_t)v28;
  v29 = type metadata accessor for HomePodSetupPreAuthFetcher();
  swift_allocObject(v29, 104, 7);
  v30 = v28;
  v31 = sub_100012ABC(v30);

  v2[16] = v31;
  v32 = swift_allocObject(&unk_1000C5A60, 24, 7);
  swift_weakInit(v32 + 16, v2);
  swift_retain(v31);
  swift_retain(v32);
  sub_100011E6C((uint64_t)sub_10009278C, v32);
  swift_release(v31);
  swift_release_n(v32, 2);
  v33 = objc_msgSend(objc_allocWithZone((Class)SFDevice), "init");
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2[6] + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceIdentifier, v4);
  isa = UUID._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  objc_msgSend(v33, "setIdentifier:", isa);

  objc_msgSend(v33, "setOsVersion:", *(unsigned __int8 *)(v2[6] + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_osVersion));
  objc_msgSend(v33, "setDeviceModelCode:", *(unsigned __int8 *)(v2[6] + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode));
  sub_100085798((uint64_t)v33);
  if (IsAppleInternalBuild(objc_msgSend((id)v2[10], "preflight")))
  {
    if (*(_BYTE *)(v2[6] + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoCounterpartColor))
    {
      LOBYTE(aBlock[0]) = *(_BYTE *)(v2[6] + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoCounterpartColor);
      v35 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt8, &protocol witness table for UInt8);
      v37 = v36;
      sub_10008692C(v35, v36);
      swift_bridgeObjectRelease(v37);
    }
    if (qword_1000D5530 != -1)
      swift_once(&qword_1000D5530, sub_100036860);
    v38 = *(_QWORD *)(qword_1000DB5C8 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_forcedPasscode + 8);
    v39 = HIBYTE(v38) & 0xF;
    if ((v38 & 0x2000000000000000) == 0)
      v39 = *(_QWORD *)(qword_1000DB5C8 + OBJC_IVAR____TtC14HDSViewService22HomePodSetupAutomation_forcedPasscode) & 0xFFFFFFFFFFFFLL;
    if (v39)
    {
      v40 = (id)v2[10];
      swift_bridgeObjectRetain(v38);
      v41 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v38);
      objc_msgSend(v40, "forcePassCode:", v41);

    }
  }
  v42 = (void *)v2[21];
  v43 = swift_allocObject(&unk_1000C5A60, 24, 7);
  swift_weakInit(v43 + 16, v2);
  v44 = swift_allocObject(&unk_1000C5BF0, 32, 7);
  v45 = v50;
  *(_QWORD *)(v44 + 16) = v43;
  *(_QWORD *)(v44 + 24) = v45;
  aBlock[4] = sub_1000927B8;
  v52 = v44;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100084D9C;
  aBlock[3] = &unk_1000C5C08;
  v46 = _Block_copy(aBlock);
  v47 = v52;
  v48 = v42;
  objc_msgSend(v48, "serviceEnabled:", v46, swift_release(v47).n128_f64[0]);
  _Block_release(v46);

  return v2;
}

uint64_t sub_100085620(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[24];
  _BYTE v35[24];

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = a1[4];
  v8 = a1[5];
  v9 = a2 + 16;
  v10 = a1[6];
  swift_beginAccess(a2 + 16, v35, 0, 0);
  Strong = swift_weakLoadStrong(v9);
  if (Strong)
  {
    v12 = Strong;
    v33 = v3;
    v13 = *(_QWORD *)(Strong + 48);
    swift_retain(v13);
    swift_release(v12);
    v14 = (_QWORD *)(v13 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation);
    v15 = v4;
    v16 = *(_QWORD *)(v13 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation);
    v17 = *(_QWORD *)(v13 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 8);
    v18 = v5;
    v19 = v6;
    v20 = *(_QWORD *)(v13 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 16);
    v21 = *(_QWORD *)(v13 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 24);
    v22 = v7;
    v23 = v8;
    v24 = *(_QWORD *)(v13 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 32);
    v25 = *(_QWORD *)(v13 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 40);
    *v14 = v33;
    v14[1] = v15;
    v14[2] = v18;
    v14[3] = v19;
    v14[4] = v22;
    v14[5] = v23;
    v14[6] = v10;
    sub_100012D04(a1);
    sub_100012D4C(v16, v17, v20, v21, v24, v25);
    swift_release(v13);
  }
  swift_beginAccess(v9, v34, 0, 0);
  result = swift_weakLoadStrong(v9);
  if (result)
  {
    v27 = result;
    v28 = *(_QWORD *)(result + 48);
    swift_retain(v28);
    swift_release(v27);
    v30 = *a1;
    v29 = a1[1];
    v31 = (_QWORD *)(v28 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceSerialNumber);
    v32 = *(_QWORD *)(v28 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceSerialNumber + 8);
    *v31 = v30;
    v31[1] = v29;
    swift_bridgeObjectRetain(v29);
    swift_release(v28);
    return swift_bridgeObjectRelease(v32);
  }
  return result;
}

void sub_100085798(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  Class isa;
  void *v10;
  void *Strong;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  id v39;
  void *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  id v44;
  void *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  id v49;
  void *v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  id v54;
  void *v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  id v59;
  void *v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  id v64;
  void *v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  id v69;
  void *v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  id v74;
  void *v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  id v79;
  void *v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  id v84;
  void *v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  id v89;
  void *v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  id v94;
  void *v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  id v99;
  void *v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  id v104;
  void *v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  id v109;
  void *v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  id v114;
  void *v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  id v119;
  void *v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  id v124;
  void *v125;
  uint64_t v126;
  void *v127;
  uint64_t v128;
  id v129;
  void *v130;
  uint64_t v131;
  void *v132;
  uint64_t v133;
  id v134;
  void *v135;
  uint64_t v136;
  void *v137;
  uint64_t v138;
  id v139;
  void *v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;
  id v144;
  void *v145;
  uint64_t v146;
  void *v147;
  uint64_t v148;
  id v149;
  void *v150;
  uint64_t v151;
  void *v152;
  uint64_t v153;
  id v154;
  void *v155;
  uint64_t v156;
  void *v157;
  uint64_t v158;
  id v159;
  uint64_t v160;
  unint64_t v161;
  void *v162;
  void *v163;
  void *v164;
  uint64_t v165;

  v3 = *(void **)(v1 + 80);
  v4 = sub_10000D604(&qword_1000D5850);
  v5 = swift_allocObject(v4, 104, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100099220;
  v160 = 0x734D67697274;
  v161 = 0xE600000000000000;
  v6 = v3;
  AnyHashable.init<A>(_:)((_QWORD *)(v5 + 32), &v160, &type metadata for String, &protocol witness table for String);
  v7 = 1000 * *(int *)(*(_QWORD *)(v1 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_triggerSeconds);
  if (v7 == (int)v7)
  {
    *(_QWORD *)(v5 + 96) = &type metadata for Int32;
    *(_DWORD *)(v5 + 72) = v7;
    v8 = sub_10000C35C(v5);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v8);
    objc_msgSend(v6, "setAdditionalMetrics:", isa, v160, v161);

    objc_msgSend(*(id *)(v1 + 80), "setPeerDevice:", a1);
    objc_msgSend(*(id *)(v1 + 80), "setTestFlags:", 0);
    objc_msgSend(*(id *)(v1 + 80), "setTouchRemoteEnabled:", 1);
    v10 = *(void **)(v1 + 80);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + 120);
    objc_msgSend(v10, "setPresentingViewController:", Strong);

    v12 = *(void **)(v1 + 80);
    v13 = swift_allocObject(&unk_1000C5A60, 24, 7);
    swift_weakInit(v13 + 16, v1);
    v164 = sub_1000927C0;
    v165 = v13;
    v160 = (uint64_t)_NSConcreteStackBlock;
    v161 = 1107296256;
    v162 = sub_10008AF5C;
    v163 = &unk_1000C5C30;
    v14 = _Block_copy(&v160);
    v15 = v165;
    v16 = v12;
    objc_msgSend(v16, "setProgressHandler:", v14, swift_release(v15).n128_f64[0]);
    _Block_release(v14);

    v17 = objc_msgSend(*(id *)(v1 + 80), "sysDropSession");
    v18 = swift_allocObject(&unk_1000C5A60, 24, 7);
    swift_weakInit(v18 + 16, v1);
    v164 = sub_1000927E0;
    v165 = v18;
    v160 = (uint64_t)_NSConcreteStackBlock;
    v161 = 1107296256;
    v162 = sub_10008AF5C;
    v163 = &unk_1000C5C58;
    v19 = _Block_copy(&v160);
    objc_msgSend(v17, "setProgressHandler:", v19, swift_release(v165).n128_f64[0]);
    _Block_release(v19);

    v20 = *(void **)(v1 + 80);
    v21 = swift_allocObject(&unk_1000C5A60, 24, 7);
    swift_weakInit(v21 + 16, v1);
    v164 = sub_100092800;
    v165 = v21;
    v160 = (uint64_t)_NSConcreteStackBlock;
    v161 = 1107296256;
    v162 = sub_10008B39C;
    v163 = &unk_1000C5C80;
    v22 = _Block_copy(&v160);
    v23 = v165;
    v24 = v20;
    objc_msgSend(v24, "setPromptForAppleMusicHandler:", v22, swift_release(v23).n128_f64[0]);
    _Block_release(v22);

    v25 = *(void **)(v1 + 80);
    v26 = swift_allocObject(&unk_1000C5A60, 24, 7);
    swift_weakInit(v26 + 16, v1);
    v164 = sub_100092808;
    v165 = v26;
    v160 = (uint64_t)_NSConcreteStackBlock;
    v161 = 1107296256;
    v162 = sub_10008B69C;
    v163 = &unk_1000C5CA8;
    v27 = _Block_copy(&v160);
    v28 = v165;
    v29 = v25;
    objc_msgSend(v29, "setPromptForHomeHandler:", v27, swift_release(v28).n128_f64[0]);
    _Block_release(v27);

    v30 = *(void **)(v1 + 80);
    v31 = swift_allocObject(&unk_1000C5A60, 24, 7);
    swift_weakInit(v31 + 16, v1);
    v164 = sub_100092810;
    v165 = v31;
    v160 = (uint64_t)_NSConcreteStackBlock;
    v161 = 1107296256;
    v162 = sub_10007C6B4;
    v163 = &unk_1000C5CD0;
    v32 = _Block_copy(&v160);
    v33 = v165;
    v34 = v30;
    objc_msgSend(v34, "setPromptForHomeiCloudHandler:", v32, swift_release(v33).n128_f64[0]);
    _Block_release(v32);

    v35 = *(void **)(v1 + 80);
    v36 = swift_allocObject(&unk_1000C5A60, 24, 7);
    swift_weakInit(v36 + 16, v1);
    v164 = sub_100092838;
    v165 = v36;
    v160 = (uint64_t)_NSConcreteStackBlock;
    v161 = 1107296256;
    v162 = sub_10007C6B4;
    v163 = &unk_1000C5CF8;
    v37 = _Block_copy(&v160);
    v38 = v165;
    v39 = v35;
    objc_msgSend(v39, "setPromptForiTunesSignInHandler:", v37, swift_release(v38).n128_f64[0]);
    _Block_release(v37);

    v40 = *(void **)(v1 + 80);
    v41 = swift_allocObject(&unk_1000C5A60, 24, 7);
    swift_weakInit(v41 + 16, v1);
    v164 = sub_100092860;
    v165 = v41;
    v160 = (uint64_t)_NSConcreteStackBlock;
    v161 = 1107296256;
    v162 = sub_100084D9C;
    v163 = &unk_1000C5D20;
    v42 = _Block_copy(&v160);
    v43 = v165;
    v44 = v40;
    objc_msgSend(v44, "setPromptForLocationAlreadyEnabledHandler:", v42, swift_release(v43).n128_f64[0]);
    _Block_release(v42);

    v45 = *(void **)(v1 + 80);
    v46 = swift_allocObject(&unk_1000C5A60, 24, 7);
    swift_weakInit(v46 + 16, v1);
    v164 = sub_100092868;
    v165 = v46;
    v160 = (uint64_t)_NSConcreteStackBlock;
    v161 = 1107296256;
    v162 = sub_10007C6B4;
    v163 = &unk_1000C5D48;
    v47 = _Block_copy(&v160);
    v48 = v165;
    v49 = v45;
    objc_msgSend(v49, "setPromptForLocationEnableHandler:", v47, swift_release(v48).n128_f64[0]);
    _Block_release(v47);

    v50 = *(void **)(v1 + 80);
    v51 = swift_allocObject(&unk_1000C5A60, 24, 7);
    swift_weakInit(v51 + 16, v1);
    v164 = sub_100092890;
    v165 = v51;
    v160 = (uint64_t)_NSConcreteStackBlock;
    v161 = 1107296256;
    v162 = sub_10007C6B4;
    v163 = &unk_1000C5D70;
    v52 = _Block_copy(&v160);
    v53 = v165;
    v54 = v50;
    objc_msgSend(v54, "setPromptForPersonalRequestsHandler:", v52, swift_release(v53).n128_f64[0]);
    _Block_release(v52);

    v55 = *(void **)(v1 + 80);
    v56 = swift_allocObject(&unk_1000C5A60, 24, 7);
    swift_weakInit(v56 + 16, v1);
    v164 = sub_100092898;
    v165 = v56;
    v160 = (uint64_t)_NSConcreteStackBlock;
    v161 = 1107296256;
    v162 = sub_10008BB5C;
    v163 = &unk_1000C5D98;
    v57 = _Block_copy(&v160);
    v58 = v165;
    v59 = v55;
    objc_msgSend(v59, "setPromptForPINHandler:", v57, swift_release(v58).n128_f64[0]);
    _Block_release(v57);

    v60 = *(void **)(v1 + 80);
    v61 = swift_allocObject(&unk_1000C5A60, 24, 7);
    swift_weakInit(v61 + 16, v1);
    v164 = sub_1000928A0;
    v165 = v61;
    v160 = (uint64_t)_NSConcreteStackBlock;
    v161 = 1107296256;
    v162 = sub_10008C114;
    v163 = &unk_1000C5DC0;
    v62 = _Block_copy(&v160);
    v63 = v165;
    v64 = v60;
    objc_msgSend(v64, "setPromptForRoomHandlerDetailed:", v62, swift_release(v63).n128_f64[0]);
    _Block_release(v62);

    v65 = *(void **)(v1 + 80);
    v66 = swift_allocObject(&unk_1000C5A60, 24, 7);
    swift_weakInit(v66 + 16, v1);
    v164 = sub_1000928A8;
    v165 = v66;
    v160 = (uint64_t)_NSConcreteStackBlock;
    v161 = 1107296256;
    v162 = sub_10007C6B4;
    v163 = &unk_1000C5DE8;
    v67 = _Block_copy(&v160);
    v68 = v165;
    v69 = v65;
    objc_msgSend(v69, "setPromptForSiriEnableHandler:", v67, swift_release(v68).n128_f64[0]);
    _Block_release(v67);

    v70 = *(void **)(v1 + 80);
    v71 = swift_allocObject(&unk_1000C5A60, 24, 7);
    swift_weakInit(v71 + 16, v1);
    v164 = sub_1000928B0;
    v165 = v71;
    v160 = (uint64_t)_NSConcreteStackBlock;
    v161 = 1107296256;
    v162 = sub_10008C644;
    v163 = &unk_1000C5E10;
    v72 = _Block_copy(&v160);
    v73 = v165;
    v74 = v70;
    objc_msgSend(v74, "setPromptForSiriLanguageHandler:", v72, swift_release(v73).n128_f64[0]);
    _Block_release(v72);

    v75 = *(void **)(v1 + 80);
    v76 = swift_allocObject(&unk_1000C5A60, 24, 7);
    swift_weakInit(v76 + 16, v1);
    v164 = sub_1000928B8;
    v165 = v76;
    v160 = (uint64_t)_NSConcreteStackBlock;
    v161 = 1107296256;
    v162 = sub_10007C6B4;
    v163 = &unk_1000C5E38;
    v77 = _Block_copy(&v160);
    v78 = v165;
    v79 = v75;
    objc_msgSend(v79, "setPromptForTermsHandler:", v77, swift_release(v78).n128_f64[0]);
    _Block_release(v77);

    v80 = *(void **)(v1 + 80);
    v81 = swift_allocObject(&unk_1000C5A60, 24, 7);
    swift_weakInit(v81 + 16, v1);
    v164 = sub_1000928DC;
    v165 = v81;
    v160 = (uint64_t)_NSConcreteStackBlock;
    v161 = 1107296256;
    v162 = sub_10007C6B4;
    v163 = &unk_1000C5E60;
    v82 = _Block_copy(&v160);
    v83 = v165;
    v84 = v80;
    objc_msgSend(v84, "setPromptForTermsAndConditionsV2Disagree:", v82, swift_release(v83).n128_f64[0]);
    _Block_release(v82);

    v85 = *(void **)(v1 + 80);
    v86 = swift_allocObject(&unk_1000C5A60, 24, 7);
    swift_weakInit(v86 + 16, v1);
    v164 = sub_1000928E4;
    v165 = v86;
    v160 = (uint64_t)_NSConcreteStackBlock;
    v161 = 1107296256;
    v162 = sub_10007C6B4;
    v163 = &unk_1000C5E88;
    v87 = _Block_copy(&v160);
    v88 = v165;
    v89 = v85;
    objc_msgSend(v89, "setPromptForHomePodSoftwareUpdateNonSetupAck:", v87, swift_release(v88).n128_f64[0]);
    _Block_release(v87);

    v90 = *(void **)(v1 + 80);
    v91 = swift_allocObject(&unk_1000C5A60, 24, 7);
    swift_weakInit(v91 + 16, v1);
    v164 = sub_100092908;
    v165 = v91;
    v160 = (uint64_t)_NSConcreteStackBlock;
    v161 = 1107296256;
    v162 = sub_10007C6B4;
    v163 = &unk_1000C5EB0;
    v92 = _Block_copy(&v160);
    v93 = v165;
    v94 = v90;
    objc_msgSend(v94, "setPromptForHomePodSoftwareUpdateNonSetupCompleted:", v92, swift_release(v93).n128_f64[0]);
    _Block_release(v92);

    v95 = *(void **)(v1 + 80);
    v96 = swift_allocObject(&unk_1000C5A60, 24, 7);
    swift_weakInit(v96 + 16, v1);
    v164 = sub_10009292C;
    v165 = v96;
    v160 = (uint64_t)_NSConcreteStackBlock;
    v161 = 1107296256;
    v162 = sub_10007C6B4;
    v163 = &unk_1000C5ED8;
    v97 = _Block_copy(&v160);
    v98 = v165;
    v99 = v95;
    objc_msgSend(v99, "setPromptForHomePodSoftwareUpdateNonSetupCancelled:", v97, swift_release(v98).n128_f64[0]);
    _Block_release(v97);

    v100 = *(void **)(v1 + 80);
    v101 = swift_allocObject(&unk_1000C5A60, 24, 7);
    swift_weakInit(v101 + 16, v1);
    v164 = sub_100092950;
    v165 = v101;
    v160 = (uint64_t)_NSConcreteStackBlock;
    v161 = 1107296256;
    v162 = sub_10007C6B4;
    v163 = &unk_1000C5F00;
    v102 = _Block_copy(&v160);
    v103 = v165;
    v104 = v100;
    objc_msgSend(v104, "setPromptForSoundRecognitionHandler:", v102, swift_release(v103).n128_f64[0]);
    _Block_release(v102);

    v105 = *(void **)(v1 + 80);
    v106 = swift_allocObject(&unk_1000C5A60, 24, 7);
    swift_weakInit(v106 + 16, v1);
    v164 = sub_100092974;
    v165 = v106;
    v160 = (uint64_t)_NSConcreteStackBlock;
    v161 = 1107296256;
    v162 = sub_10007C6B4;
    v163 = &unk_1000C5F28;
    v107 = _Block_copy(&v160);
    v108 = v165;
    v109 = v105;
    objc_msgSend(v109, "setPromptForAutomaticSoftwareUpdateHandler:", v107, swift_release(v108).n128_f64[0]);
    _Block_release(v107);

    v110 = *(void **)(v1 + 80);
    v111 = swift_allocObject(&unk_1000C5A60, 24, 7);
    swift_weakInit(v111 + 16, v1);
    v164 = sub_100092998;
    v165 = v111;
    v160 = (uint64_t)_NSConcreteStackBlock;
    v161 = 1107296256;
    v162 = sub_10007C6B4;
    v163 = &unk_1000C5F50;
    v112 = _Block_copy(&v160);
    v113 = v165;
    v114 = v110;
    objc_msgSend(v114, "setPromptForSoftwareUpdateHandler:", v112, swift_release(v113).n128_f64[0]);
    _Block_release(v112);

    v115 = *(void **)(v1 + 80);
    v116 = swift_allocObject(&unk_1000C5A60, 24, 7);
    swift_weakInit(v116 + 16, v1);
    v164 = sub_1000929BC;
    v165 = v116;
    v160 = (uint64_t)_NSConcreteStackBlock;
    v161 = 1107296256;
    v162 = sub_10007C6B4;
    v163 = &unk_1000C5F78;
    v117 = _Block_copy(&v160);
    v118 = v165;
    v119 = v115;
    objc_msgSend(v119, "setPromptForCaptiveNetworkHandler:", v117, swift_release(v118).n128_f64[0]);
    _Block_release(v117);

    v120 = *(void **)(v1 + 80);
    v121 = swift_allocObject(&unk_1000C5A60, 24, 7);
    swift_weakInit(v121 + 16, v1);
    v164 = sub_1000929E0;
    v165 = v121;
    v160 = (uint64_t)_NSConcreteStackBlock;
    v161 = 1107296256;
    v162 = sub_10007C6B4;
    v163 = &unk_1000C5FA0;
    v122 = _Block_copy(&v160);
    v123 = v165;
    v124 = v120;
    objc_msgSend(v124, "setPromptForTVAudioHandler:", v122, swift_release(v123).n128_f64[0]);
    _Block_release(v122);

    v125 = *(void **)(v1 + 80);
    v126 = swift_allocObject(&unk_1000C5A60, 24, 7);
    swift_weakInit(v126 + 16, v1);
    v164 = sub_100092A04;
    v165 = v126;
    v160 = (uint64_t)_NSConcreteStackBlock;
    v161 = 1107296256;
    v162 = sub_10007C6B4;
    v163 = &unk_1000C5FC8;
    v127 = _Block_copy(&v160);
    v128 = v165;
    v129 = v125;
    objc_msgSend(v129, "setPromptToInstallHomeAppHandler:", v127, swift_release(v128).n128_f64[0]);
    _Block_release(v127);

    v130 = *(void **)(v1 + 80);
    v131 = swift_allocObject(&unk_1000C5A60, 24, 7);
    swift_weakInit(v131 + 16, v1);
    v164 = sub_100092A2C;
    v165 = v131;
    v160 = (uint64_t)_NSConcreteStackBlock;
    v161 = 1107296256;
    v162 = sub_10008CC80;
    v163 = &unk_1000C5FF0;
    v132 = _Block_copy(&v160);
    v133 = v165;
    v134 = v130;
    objc_msgSend(v134, "setPromptToShareSettingsHandler:", v132, swift_release(v133).n128_f64[0]);
    _Block_release(v132);

    v135 = *(void **)(v1 + 80);
    v136 = swift_allocObject(&unk_1000C5A60, 24, 7);
    swift_weakInit(v136 + 16, v1);
    v164 = sub_100092A34;
    v165 = v136;
    v160 = (uint64_t)_NSConcreteStackBlock;
    v161 = 1107296256;
    v162 = sub_10007C6B4;
    v163 = &unk_1000C6018;
    v137 = _Block_copy(&v160);
    v138 = v165;
    v139 = v135;
    objc_msgSend(v139, "setPromptForStereoRoleHandler:", v137, swift_release(v138).n128_f64[0]);
    _Block_release(v137);

    v140 = *(void **)(v1 + 80);
    v141 = swift_allocObject(&unk_1000C5A60, 24, 7);
    swift_weakInit(v141 + 16, v1);
    v164 = sub_100092A3C;
    v165 = v141;
    v160 = (uint64_t)_NSConcreteStackBlock;
    v161 = 1107296256;
    v162 = sub_10008D0FC;
    v163 = &unk_1000C6040;
    v142 = _Block_copy(&v160);
    v143 = v165;
    v144 = v140;
    objc_msgSend(v144, "setPromptForStereoMultipleHandler:", v142, swift_release(v143).n128_f64[0]);
    _Block_release(v142);

    v145 = *(void **)(v1 + 80);
    v146 = swift_allocObject(&unk_1000C5A60, 24, 7);
    swift_weakInit(v146 + 16, v1);
    v164 = sub_100092A44;
    v165 = v146;
    v160 = (uint64_t)_NSConcreteStackBlock;
    v161 = 1107296256;
    v162 = sub_100084D9C;
    v163 = &unk_1000C6068;
    v147 = _Block_copy(&v160);
    v148 = v165;
    v149 = v145;
    objc_msgSend(v149, "setPromptForVoiceRecognitionHandler:", v147, swift_release(v148).n128_f64[0]);
    _Block_release(v147);

    v150 = *(void **)(v1 + 80);
    v151 = swift_allocObject(&unk_1000C5A60, 24, 7);
    swift_weakInit(v151 + 16, v1);
    v164 = sub_100092A4C;
    v165 = v151;
    v160 = (uint64_t)_NSConcreteStackBlock;
    v161 = 1107296256;
    v162 = sub_10008D4D0;
    v163 = &unk_1000C6090;
    v152 = _Block_copy(&v160);
    v153 = v165;
    v154 = v150;
    objc_msgSend(v154, "setPromptForSiriVoiceSelectionHandler:", v152, swift_release(v153).n128_f64[0]);
    _Block_release(v152);

    v155 = *(void **)(v1 + 80);
    v156 = swift_allocObject(&unk_1000C5A60, 24, 7);
    swift_weakInit(v156 + 16, v1);
    v164 = sub_100092A54;
    v165 = v156;
    v160 = (uint64_t)_NSConcreteStackBlock;
    v161 = 1107296256;
    v162 = sub_10008D738;
    v163 = &unk_1000C60B8;
    v157 = _Block_copy(&v160);
    v158 = v165;
    v159 = v155;
    objc_msgSend(v159, "setDeviceColorFoundHandler:", v157, swift_release(v158).n128_f64[0]);
    _Block_release(v157);

  }
  else
  {
    __break(1u);
  }
}

void sub_10008692C(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  unsigned __int8 *v35;
  unsigned int v36;
  uint64_t v37;
  unsigned __int8 *v38;
  unsigned int v39;
  void **aBlock;
  uint64_t v41;
  void *v42;
  void *v43;
  void *v44;
  uint64_t v45;
  char v46;
  char v47[24];

  v3 = v2;
  if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode) != 5)
    return;
  v6 = HIBYTE(a2) & 0xF;
  v7 = a1 & 0xFFFFFFFFFFFFLL;
  if (!((a2 & 0x2000000000000000) != 0 ? v6 : a1 & 0xFFFFFFFFFFFFLL))
    return;
  if ((a2 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain(a2);
    v10 = sub_10008F840(a1, a2, 10);
    swift_bridgeObjectRelease(a2);
    if ((v10 & 0x100) != 0)
      return;
    goto LABEL_36;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((a1 & 0x1000000000000000) != 0)
      v9 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v9 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(a1, a2);
    v10 = (uint64_t)sub_100048A94(v9, v7, 10);
    if (((v10 >> 8) & 1) != 0)
      return;
    goto LABEL_36;
  }
  aBlock = (void **)a1;
  v41 = a2 & 0xFFFFFFFFFFFFFFLL;
  if (a1 == 43)
  {
    if (v6)
    {
      if (v6 == 1)
        return;
      v10 = (a1 >> 8) - 48;
      if ((BYTE1(a1) - 48) > 9u)
        return;
      if (v6 == 2)
        goto LABEL_36;
      if ((BYTE2(a1) - 48) > 9u)
        return;
      v10 = (a1 >> 16) - 48 + 10 * (_DWORD)v10;
      v11 = v6 - 3;
      if (v6 == 3)
        goto LABEL_36;
      v12 = (unsigned __int8 *)&aBlock + 3;
      while (1)
      {
        v13 = *v12 - 48;
        if (v13 > 9)
          break;
        if (((10 * v10) & 0xF00) != 0)
          break;
        v10 = (10 * v10) + v13;
        if (((v10 >> 8) & 1) != 0)
          break;
        ++v12;
        if (!--v11)
          goto LABEL_36;
      }
      return;
    }
LABEL_70:
    __break(1u);
    return;
  }
  if (a1 != 45)
  {
    if (!v6)
      return;
    v10 = (a1 - 48);
    if ((a1 - 48) > 9u)
      return;
    if (v6 == 1)
      goto LABEL_36;
    if ((BYTE1(a1) - 48) > 9u)
      return;
    v10 = (a1 >> 8) - 48 + 10 * (_DWORD)v10;
    v34 = v6 - 2;
    if (v6 == 2)
      goto LABEL_36;
    v35 = (unsigned __int8 *)&aBlock + 2;
    while (1)
    {
      v36 = *v35 - 48;
      if (v36 > 9)
        break;
      if (((10 * v10) & 0xF00) != 0)
        break;
      v10 = (10 * v10) + v36;
      if (((v10 >> 8) & 1) != 0)
        break;
      ++v35;
      if (!--v34)
        goto LABEL_36;
    }
    return;
  }
  if (!v6)
  {
    __break(1u);
    goto LABEL_70;
  }
  if (v6 == 1 || (BYTE1(a1) - 48) > 9u || (-(BYTE1(a1) - 48) & 0xFFFFFF00) != 0)
    return;
  if (v6 == 2)
  {
    v10 = -(BYTE1(a1) - 48);
LABEL_36:
    swift_beginAccess(v3 + 152, v47, 0, 0);
    if (!sub_10008E7F4(v10, *(_QWORD *)(v3 + 152)))
    {
      if ((*(_BYTE *)(v3 + 160) & 1) == 0)
      {
        *(_BYTE *)(v3 + 160) = 1;
        objc_msgSend(*(id *)(v3 + 144), "activate");
      }
      if (qword_1000D5670 != -1)
        swift_once(&qword_1000D5670, sub_100084DD8);
      v15 = type metadata accessor for Logger(0, v14);
      v16 = sub_10001118C(v15, (uint64_t)qword_1000D80F0);
      v17 = Logger.logObject.getter(v16);
      v18 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc(5, -1);
        *(_DWORD *)v19 = 16777472;
        LOBYTE(aBlock) = v10;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 1);
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "Found device with color: %hhu", v19, 5u);
        swift_slowDealloc(v19, -1, -1);
      }

      swift_beginAccess(v3 + 152, &aBlock, 33, 0);
      sub_10008F920(&v46, v10);
      swift_endAccess(&aBlock);
      v20 = objc_msgSend(objc_allocWithZone((Class)SFDeviceAssetQuery), "initWithSingleHomePodColor:version:", v10, 5);
      v21 = swift_allocObject(&unk_1000C5A60, 24, 7);
      swift_weakInit(v21 + 16, v3);
      v22 = swift_allocObject(&unk_1000C5B50, 32, 7);
      *(_BYTE *)(v22 + 16) = v10;
      *(_QWORD *)(v22 + 24) = v21;
      v23 = objc_allocWithZone((Class)SFDeviceAssetRequestConfiguration);
      v44 = sub_100092760;
      v45 = v22;
      aBlock = _NSConcreteStackBlock;
      v41 = 1107296256;
      v42 = sub_10008F2C8;
      v43 = &unk_1000C5B68;
      v24 = _Block_copy(&aBlock);
      swift_retain(v21);
      v25 = objc_msgSend(v23, "initWithQueryResultHandler:", v24);
      _Block_release(v24);
      v26 = v45;
      swift_release(v21);
      swift_release(v26);
      v27 = swift_allocObject(&unk_1000C5A60, 24, 7);
      swift_weakInit(v27 + 16, v3);
      v28 = swift_allocObject(&unk_1000C5BA0, 32, 7);
      *(_BYTE *)(v28 + 16) = v10;
      *(_QWORD *)(v28 + 24) = v27;
      v44 = sub_10009276C;
      v45 = v28;
      aBlock = _NSConcreteStackBlock;
      v41 = 1107296256;
      v42 = sub_10007681C;
      v43 = &unk_1000C5BB8;
      v29 = _Block_copy(&aBlock);
      swift_release(v45);
      objc_msgSend(v25, "setDownloadCompletionHandler:", v29);
      _Block_release(v29);
      v31 = Logger.logObject.getter(v30);
      v32 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc(5, -1);
        *(_DWORD *)v33 = 16777472;
        LOBYTE(aBlock) = v10;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 1);
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "Starting single stereo image lookup for %hhu", v33, 5u);
        swift_slowDealloc(v33, -1, -1);
      }

      objc_msgSend(*(id *)(v3 + 144), "getAssetBundleForDeviceQuery:withRequestConfiguration:", v20, v25);
    }
    return;
  }
  if ((BYTE2(a1) - 48) > 9u)
    return;
  if (((10 * (48 - BYTE1(a1))) & 0xF00) != 0)
    return;
  v10 = (10 * (48 - BYTE1(a1))) - (BYTE2(a1) - 48);
  if ((v10 & 0xFFFFFF00) != 0)
    return;
  v37 = v6 - 3;
  if (v6 == 3)
    goto LABEL_36;
  v38 = (unsigned __int8 *)&aBlock + 3;
  while (1)
  {
    v39 = *v38 - 48;
    if (v39 > 9)
      break;
    if (((10 * v10) & 0xF00) != 0)
      break;
    v10 = (10 * v10) - v39;
    if ((v10 & 0xFFFFFF00) != 0)
      break;
    ++v38;
    if (!--v37)
      goto LABEL_36;
  }
}

double sub_100087004(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  id v7;
  NSString v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  _BYTE v18[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v18, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    v7 = sub_100084ED0();
    v8 = String._bridgeToObjectiveC()();
    v9 = objc_msgSend(v7, "BOOLForKey:", v8);

    if (v9)
    {
      if (qword_1000D5670 != -1)
        swift_once(&qword_1000D5670, sub_100084DD8);
      v11 = type metadata accessor for Logger(0, v10);
      v12 = sub_10001118C(v11, (uint64_t)qword_1000D80F0);
      v13 = Logger.logObject.getter(v12);
      v15 = static os_log_type_t.default.getter(v13, v14);
      if (os_log_type_enabled(v13, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v16 = 0;
        _os_log_impl((void *)&_mh_execute_header, v13, v15, "HomePodSetupInteractor: forceMusicSubscription is true", v16, 2u);
        swift_slowDealloc(v16, -1, -1);
      }

      a1 = 1;
    }
    v17 = *(_QWORD *)(v6 + 48);
    swift_retain(v17);
    swift_release(v6);
    *(_BYTE *)(v17 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_subscribedToMusicService) = a1 & 1;
    *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  }
  return result;
}

void sub_100087190()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *Strong;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t aBlock[6];

  v1 = v0;
  *(_BYTE *)(v0 + 160) = 1;
  objc_msgSend(*(id *)(v0 + 144), "activate");
  objc_msgSend(*(id *)(v0 + 80), "setPauseAfterPreAuth:", 0);
  v2 = *(void **)(v0 + 80);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + 120);
  objc_msgSend(v2, "setPresentingViewController:", Strong);

  objc_msgSend(*(id *)(v1 + 80), "activate");
  v4 = sub_100084E68();
  aBlock[4] = (uint64_t)nullsub_1;
  aBlock[5] = 0;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10007C6B4;
  aBlock[3] = (uint64_t)&unk_1000C5B18;
  v5 = _Block_copy(aBlock);
  objc_msgSend(v4, "setMeDeviceChangedHandler:", v5);
  _Block_release(v5);

  v6 = sub_100084E68();
  objc_msgSend(v6, "activateWithCompletion:", 0);

  if ((*(_BYTE *)(*(_QWORD *)(v1 + 48) + 68) & 1) == 0)
    objc_msgSend(*(id *)(v1 + 80), "skipAudioPasscode");
  if (qword_1000D5670 != -1)
    swift_once(&qword_1000D5670, sub_100084DD8);
  v8 = type metadata accessor for Logger(0, v7);
  sub_10001118C(v8, (uint64_t)qword_1000D80F0);
  v9 = swift_retain_n(v1, 2);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    aBlock[0] = v13;
    *(_DWORD *)v12 = 136315138;
    v14 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt8, &protocol witness table for UInt8);
    v16 = v15;
    v20 = sub_10003EF58(v14, v15, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, aBlock);
    swift_release_n(v1, 2);
    swift_bridgeObjectRelease(v16);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "HomePodSetupInteractor sessionStart device color %s", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {

    swift_release_n(v1, 2);
  }
  LOBYTE(aBlock[0]) = *(_BYTE *)(*(_QWORD *)(v1 + 48)
                               + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceColorCode);
  v17 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt8, &protocol witness table for UInt8);
  v19 = v18;
  sub_10008692C(v17, v18);
  swift_bridgeObjectRelease(v19);
  sub_100089724();
}

uint64_t sub_1000874A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char v18;
  uint64_t v20;
  void *v21;
  uint64_t v22;

  v3 = v2;
  v4 = a2;
  if (qword_1000D5670 != -1)
    swift_once(&qword_1000D5670, sub_100084DD8);
  v6 = type metadata accessor for Logger(0, a2);
  sub_10001118C(v6, (uint64_t)qword_1000D80F0);
  v7 = swift_retain_n(v2, 2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v10 = 138412290;
    v20 = v4;
    v12 = a1;
    v13 = *(void **)(v3 + 80);
    v21 = v13;
    v14 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22);
    *v11 = v13;
    a1 = v12;
    v4 = v20;
    swift_release_n(v3, 2);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "HomePodSetupInteractor: preAuth requested for session: %@", v10, 0xCu);
    v15 = sub_10000D604(&qword_1000D5CC8);
    swift_arrayDestroy(v11, 1, v15);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

    swift_release_n(v3, 2);
  }
  v16 = swift_allocObject(&unk_1000C5A60, 24, 7);
  swift_weakInit(v16 + 16, v3);
  v17 = (_QWORD *)swift_allocObject(&unk_1000C5A88, 40, 7);
  v17[2] = v16;
  v17[3] = a1;
  v17[4] = v4;
  swift_retain(v16);
  swift_retain(v4);
  v18 = sub_100011E6C((uint64_t)sub_100092720, (uint64_t)v17);
  swift_release(v16);
  swift_release(v17);
  return v18 & 1;
}

uint64_t sub_1000876D8(uint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t *, __n128))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t Strong;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[24];

  v5 = *a1;
  v6 = a1[1];
  v7 = a1[2];
  v8 = a1[3];
  v9 = a1[4];
  v10 = a1[5];
  v11 = a2 + 16;
  v30 = a1[6];
  swift_beginAccess(a2 + 16, v31, 0, 0);
  Strong = swift_weakLoadStrong(v11);
  if (Strong)
  {
    v14 = Strong;
    v29 = v5;
    v15 = *(_QWORD *)(Strong + 48);
    swift_retain(v15);
    swift_release(v14);
    v16 = (_QWORD *)(v15 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation);
    v17 = v6;
    v18 = *(_QWORD *)(v15 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation);
    v19 = *(_QWORD *)(v15 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 8);
    v20 = v7;
    v21 = v8;
    v22 = *(_QWORD *)(v15 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 16);
    v23 = *(_QWORD *)(v15 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 24);
    v24 = v9;
    v25 = v10;
    v26 = *(_QWORD *)(v15 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 32);
    v27 = *(_QWORD *)(v15 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preAuthInformation + 40);
    *v16 = v29;
    v16[1] = v17;
    v16[2] = v20;
    v16[3] = v21;
    v16[4] = v24;
    v16[5] = v25;
    v16[6] = v30;
    sub_100012D04(a1);
    sub_100012D4C(v18, v19, v22, v23, v26, v27);
    v13 = swift_release(v15);
  }
  return a3(a1, v13);
}

void sub_10008780C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;

  v3 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 40);
  if (!v3)
    return;
  swift_bridgeObjectRetain(a2);
  v6 = swift_bridgeObjectRetain(v3);
  v7 = (uint64_t)sub_1000922C0(v6, a1, a2);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(a2);
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v9 = v7;
    else
      v9 = v7 & 0xFFFFFFFFFFFFFF8;
    if (_CocoaArrayWrapper.endIndex.getter(v9))
      goto LABEL_4;
LABEL_13:
    swift_bridgeObjectRelease(v7);
    return;
  }
  if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_13;
LABEL_4:
  if ((v7 & 0xC000000000000001) != 0)
  {
    v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v7);
    goto LABEL_7;
  }
  if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v8 = *(id *)(v7 + 32);
LABEL_7:
    v10 = v8;
    swift_bridgeObjectRelease(v7);
    objc_msgSend(*(id *)(v2 + 80), "homeKitSelectHome:", v10);

    return;
  }
  __break(1u);
}

void sub_100087934()
{
  uint64_t v0;
  id v1;
  NSString v2;
  uint64_t v3;
  void *v4;
  unsigned __int8 v5;
  id v6;
  void *v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = *(id *)(v0 + 80);
  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "homeKitSelectRoom:", v2);

  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(void **)(v0 + 80);
  swift_retain(v3);
  v5 = objc_msgSend(v4, "acceptedMusicTerms");
  *(_BYTE *)(v3 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_acceptedMusicTerms) = v5;
  swift_release(v3);
  v6 = objc_msgSend(*(id *)(v0 + 80), "selectedHome");
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)(v0 + 48);
    swift_retain(v8);
    v9 = objc_msgSend(v7, "isUpdatedToROAR");
    *(_BYTE *)(v8 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_selectedHomeIsROAR) = v9;
    swift_release(v8);
    v10 = *(_QWORD *)(v0 + 48);
    swift_retain(v10);
    v11 = objc_msgSend(v7, "isLocationServicesEnabled");
    *(_BYTE *)(v10 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeHasLocationEnabled) = v11;
    swift_release(v10);
    v12 = *(_QWORD *)(v0 + 48);
    swift_retain(v12);
    sub_100092478(v7);
    *(_BYTE *)(v12 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeHasExistingHomePods) = v13 & 1;
    swift_release(v12);
    v14 = *(_QWORD *)(v0 + 48);
    swift_retain(v14);
    v15 = objc_msgSend(v7, "name");
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v18 = v17;

    v19 = (uint64_t *)(v14 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeName);
    v20 = *(_QWORD *)(v14 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeName + 8);
    *v19 = v16;
    v19[1] = v18;
    swift_release(v14);
    swift_bridgeObjectRelease(v20);
    v22 = *(_QWORD *)(v0 + 48);
    if (*(_BYTE *)(v22 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_selectedHomeIsROAR))
      v23 = 7562585;
    else
      v23 = 28494;
    if (*(_BYTE *)(v22 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_selectedHomeIsROAR))
      v24 = 0xE300000000000000;
    else
      v24 = 0xE200000000000000;
    if (*(_BYTE *)(v22 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeHasLocationEnabled))
      v25 = 7562585;
    else
      v25 = 28494;
    if (*(_BYTE *)(v22 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeHasLocationEnabled))
      v26 = 0xE300000000000000;
    else
      v26 = 0xE200000000000000;
    v27 = *(unsigned __int8 *)(v22 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeHasExistingHomePods);
    if (v27)
      v28 = 7562585;
    else
      v28 = 28494;
    if (v27)
      v29 = 0xE300000000000000;
    else
      v29 = 0xE200000000000000;
    if (qword_1000D5670 != -1)
      swift_once(&qword_1000D5670, sub_100084DD8);
    v30 = type metadata accessor for Logger(0, v21);
    sub_10001118C(v30, (uint64_t)qword_1000D80F0);
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRetain(v26);
    v31 = swift_bridgeObjectRetain(v29);
    v32 = Logger.logObject.getter(v31);
    v33 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v32, v33))
    {
      v36 = v25;
      v34 = swift_slowAlloc(32, -1);
      v35 = swift_slowAlloc(96, -1);
      v38 = v35;
      *(_DWORD *)v34 = 136315650;
      swift_bridgeObjectRetain(v24);
      v37 = sub_10003EF58(v23, v24, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
      swift_bridgeObjectRelease_n(v24, 3);
      *(_WORD *)(v34 + 12) = 2080;
      swift_bridgeObjectRetain(v26);
      v37 = sub_10003EF58(v36, v26, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
      swift_bridgeObjectRelease_n(v26, 3);
      *(_WORD *)(v34 + 22) = 2080;
      swift_bridgeObjectRetain(v29);
      v37 = sub_10003EF58(v28, v29, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
      swift_bridgeObjectRelease_n(v29, 3);
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "HomePodSetupInteractor: houseWasSelected isROAR:%s loc:%s hasHomePods:%s", (uint8_t *)v34, 0x20u);
      swift_arrayDestroy(v35, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v35, -1, -1);
      swift_slowDealloc(v34, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v29, 2);
      swift_bridgeObjectRelease_n(v26, 2);
      swift_bridgeObjectRelease_n(v24, 2);
    }
  }
}

id sub_100087D70()
{
  return sub_100087DAC("HomePodSetup: SiriForEveryone Continue button", (SEL *)&selRef_siriForEveryoneAnswered);
}

id sub_100087D84()
{
  return sub_100087DAC("HomePodSetup: appleMusicPromoSeen called", (SEL *)&selRef_appleMusicNext);
}

id sub_100087D98()
{
  return sub_100087DAC("HomePodSetup: Siri Enabled approved", (SEL *)&selRef_siriEnable);
}

id sub_100087DAC(const char *a1, SEL *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;

  v5 = v2;
  if (qword_1000D5670 != -1)
    swift_once(&qword_1000D5670, sub_100084DD8);
  v6 = type metadata accessor for Logger(0, a2);
  v7 = sub_10001118C(v6, (uint64_t)qword_1000D80F0);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, a1, v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  return objc_msgSend(*(id *)(v5 + 80), *a2);
}

id sub_100087E90(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  if (qword_1000D5670 != -1)
    swift_once(&qword_1000D5670, sub_100084DD8);
  v5 = type metadata accessor for Logger(0, a2);
  v6 = sub_10001118C(v5, (uint64_t)qword_1000D80F0);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    *(_DWORD *)v9 = 136315138;
    v15 = v10;
    if ((a1 & 1) != 0)
      v11 = 0x656C62616E65;
    else
      v11 = 0x656C6261736964;
    if ((a1 & 1) != 0)
      v12 = 0xE600000000000000;
    else
      v12 = 0xE700000000000000;
    v14 = sub_10003EF58(v11, v12, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15);
    swift_bridgeObjectRelease(v12);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "User chose to %s TV Audio", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }

  return objc_msgSend(*(id *)(v3 + 80), "tvAudioEnabled:", a1 & 1);
}

id sub_100088048(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  if (qword_1000D5670 != -1)
    swift_once(&qword_1000D5670, sub_100084DD8);
  v5 = type metadata accessor for Logger(0, a2);
  v6 = sub_10001118C(v5, (uint64_t)qword_1000D80F0);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    *(_DWORD *)v9 = 136315138;
    v15 = v10;
    if ((a1 & 1) != 0)
      v11 = 0x6E4F6576694CLL;
    else
      v11 = 0x6D706F6C65766544;
    if ((a1 & 1) != 0)
      v12 = 0xE600000000000000;
    else
      v12 = 0xEB00000000746E65;
    v14 = sub_10003EF58(v11, v12, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15);
    swift_bridgeObjectRelease(v12);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "User chose to LiveOn %s", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }

  return objc_msgSend(*(id *)(v3 + 80), "setLiveOn:", a1 & 1);
}

id sub_100088208(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;

  v3 = v2;
  if (qword_1000D5670 != -1)
    swift_once(&qword_1000D5670, sub_100084DD8);
  v5 = type metadata accessor for Logger(0, a2);
  v6 = sub_10001118C(v5, (uint64_t)qword_1000D80F0);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "User chose Siri Voice", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  return objc_msgSend(*(id *)(v3 + 80), "siriVoicePicked:", a1);
}

void sub_1000882F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  void *v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  int v14;
  uint64_t v15;

  v2 = v1;
  v3 = a1;
  *(_DWORD *)(*(_QWORD *)(v1 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoRole) = a1;
  objc_msgSend(*(id *)(v1 + 80), "stereoRolePicked:", a1);
  v4 = *(_QWORD *)(v1 + 48);
  v5 = *(void **)(v2 + 80);
  swift_retain(v4);
  v6 = objc_msgSend(v5, "stereoCounterpartColor");
  *(_BYTE *)(v4 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoCounterpartColor) = v6;
  swift_release(v4);
  if (qword_1000D5670 != -1)
    swift_once(&qword_1000D5670, sub_100084DD8);
  v8 = type metadata accessor for Logger(0, v7);
  sub_10001118C(v8, (uint64_t)qword_1000D80F0);
  v9 = swift_retain(v2);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc(11, -1);
    *(_DWORD *)v12 = 67109376;
    v14 = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15);
    *(_WORD *)(v12 + 8) = 256;
    v13 = objc_msgSend(*(id *)(v2 + 80), "stereoCounterpartColor");
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14);
    swift_release(v2);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "HomePodSetupInteractor stereoRoleSelected: role = %d | stereoCounterpartColor = %hhu", (uint8_t *)v12, 0xBu);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {

    swift_release(v2);
  }
}

void sub_1000884C0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  id v18;
  NSString v19;
  uint64_t v20;
  uint64_t v21;

  v5 = v4;
  v9 = (_QWORD *)(*(_QWORD *)(v4 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_selectedSiriLanguageCode);
  v10 = v9[1];
  *v9 = a1;
  v9[1] = a2;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRelease(v10);
  if (qword_1000D5670 != -1)
    swift_once(&qword_1000D5670, sub_100084DD8);
  v12 = type metadata accessor for Logger(0, v11);
  sub_10001118C(v12, (uint64_t)qword_1000D80F0);
  swift_bridgeObjectRetain_n(a2, 2);
  v13 = swift_bridgeObjectRetain_n(a4, 2);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(12, -1);
    v17 = swift_slowAlloc(32, -1);
    v21 = v17;
    *(_DWORD *)v16 = 136315138;
    swift_bridgeObjectRetain(a4);
    v20 = sub_10003EF58(a3, a4, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21);
    swift_bridgeObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease_n(a4, 3);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "HomePodSetupInteractor: siri language: %s", v16, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a4, 2);
    swift_bridgeObjectRelease_n(a2, 2);
  }
  v18 = *(id *)(v5 + 80);
  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v18, "siriLanguagePicked:", v19);

}

id sub_10008870C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;

  v3 = v2;
  if (qword_1000D5670 != -1)
    swift_once(&qword_1000D5670, sub_100084DD8);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10001118C(v4, (uint64_t)qword_1000D80F0);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "HomePodSetupInteractor: siriLanguagePicked user selected 'Don't Use Siri'", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  return objc_msgSend(*(id *)(v3 + 80), "siriLanguagePicked:", 0);
}

void sub_1000887EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  NSString v18;
  NSString v19;
  id v20;
  uint64_t v21;
  NSString v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  uint64_t v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  NSString v35;
  NSString v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v42;
  uint64_t aBlock[5];
  uint64_t v44;

  v3 = v2;
  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(void **)(v3 + 80);
  swift_retain(v4);
  v6 = objc_msgSend(v5, "selectedSiriLanguageCode");
  if (v6)
  {
    v7 = v6;
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    v10 = v9;

  }
  else
  {
    v8 = 0;
    v10 = 0;
  }
  v11 = sub_100045DE0(v8, v10);
  v13 = v12;
  swift_release(v4);
  swift_bridgeObjectRelease(v10);
  v14 = objc_msgSend((id)objc_opt_self(AFLocalization), "sharedInstance");
  v16 = v14;
  if (v14)
  {
    v17 = v14;
    v18 = String._bridgeToObjectiveC()();
    v19 = String._bridgeToObjectiveC()();
    v20 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v21 = v11;
    v22 = String._bridgeToObjectiveC()();
    v23 = objc_msgSend(v17, "localizedStringForKey:table:bundle:languageCode:", v18, v19, v20, v22);

    if (v23)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      v25 = v24;

    }
    else
    {
      v25 = 0xE000000000000000;
    }
    v11 = v21;
  }
  else
  {
    v25 = 0xE000000000000000;
  }
  if (qword_1000D5670 != -1)
    swift_once(&qword_1000D5670, sub_100084DD8);
  v26 = type metadata accessor for Logger(0, v15);
  sub_10001118C(v26, (uint64_t)qword_1000D80F0);
  v27 = swift_bridgeObjectRetain_n(v13, 2);
  v28 = Logger.logObject.getter(v27);
  v30 = static os_log_type_t.default.getter(v28, v29);
  if (os_log_type_enabled(v28, v30))
  {
    v39 = v3;
    v31 = (uint8_t *)swift_slowAlloc(12, -1);
    v32 = v11;
    v33 = swift_slowAlloc(32, -1);
    aBlock[0] = v33;
    *(_DWORD *)v31 = 136315138;
    swift_bridgeObjectRetain(v13);
    v42 = sub_10003EF58(v32, v13, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, aBlock);
    swift_bridgeObjectRelease_n(v13, 3);
    _os_log_impl((void *)&_mh_execute_header, v28, v30, "HomePodSetup: Speak Pincode with instructions in language %s", v31, 0xCu);
    swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1, -1);
    v3 = v39;
    swift_slowDealloc(v31, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v13, 2);
  }
  v34 = *(id *)(v3 + 80);
  v35 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v25);
  v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v13);
  aBlock[4] = a1;
  v44 = a2;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10007C6B4;
  aBlock[3] = (uint64_t)&unk_1000C5A28;
  v37 = _Block_copy(aBlock);
  v38 = v44;
  swift_retain(a2);
  objc_msgSend(v34, "speakPasscodeWithInstructions:languageCode:completion:", v35, v36, v37, swift_release(v38).n128_f64[0]);
  _Block_release(v37);

}

void sub_100088C04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  NSString v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t aBlock[5];
  uint64_t v33;

  v3 = v2;
  v6 = *(_QWORD *)(v2 + 48);
  v7 = *(void **)(v3 + 80);
  swift_retain(v6);
  v8 = objc_msgSend(v7, "selectedSiriLanguageCode");
  if (v8)
  {
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v12 = v11;

  }
  else
  {
    v10 = 0;
    v12 = 0;
  }
  v13 = sub_100045DE0(v10, v12);
  v15 = v14;
  swift_release(v6);
  swift_bridgeObjectRelease(v12);
  if (qword_1000D5670 != -1)
    swift_once(&qword_1000D5670, sub_100084DD8);
  v17 = type metadata accessor for Logger(0, v16);
  sub_10001118C(v17, (uint64_t)qword_1000D80F0);
  v18 = swift_bridgeObjectRetain_n(v15, 2);
  v19 = Logger.logObject.getter(v18);
  v21 = static os_log_type_t.default.getter(v19, v20);
  if (os_log_type_enabled(v19, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc(12, -1);
    v30 = a2;
    v23 = a1;
    v24 = swift_slowAlloc(32, -1);
    aBlock[0] = v24;
    *(_DWORD *)v22 = 136315138;
    swift_bridgeObjectRetain(v15);
    v31 = sub_10003EF58(v13, v15, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, aBlock);
    swift_bridgeObjectRelease_n(v15, 3);
    _os_log_impl((void *)&_mh_execute_header, v19, v21, "HomePodSetup: Speak Pincode in language (%s", v22, 0xCu);
    swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
    v25 = v24;
    a1 = v23;
    a2 = v30;
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v22, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v15, 2);
  }
  v26 = *(id *)(v3 + 80);
  v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  aBlock[4] = a1;
  v33 = a2;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10007C6B4;
  aBlock[3] = (uint64_t)&unk_1000C5A00;
  v28 = _Block_copy(aBlock);
  v29 = v33;
  swift_retain(a2);
  objc_msgSend(v26, "speakPasscodeWithLanguageCode:completion:", v27, v28, swift_release(v29).n128_f64[0]);
  _Block_release(v28);

}

void sub_100088EC8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  NSString v19;
  uint64_t v20;
  uint64_t v21;

  v3 = v2;
  if (isInternalBuild())
  {
    if (qword_1000D5670 != -1)
      swift_once(&qword_1000D5670, sub_100084DD8);
    v7 = type metadata accessor for Logger(0, v6);
    sub_10001118C(v7, (uint64_t)qword_1000D80F0);
    v8 = swift_bridgeObjectRetain_n(a2, 2);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v9, v10))
    {

      swift_bridgeObjectRelease_n(a2, 2);
      goto LABEL_13;
    }
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v21 = v12;
    *(_DWORD *)v11 = 136315138;
    swift_bridgeObjectRetain(a2);
    v20 = sub_10003EF58(a1, a2, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "HomePodSetup: Pincode %s was entered.", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    v13 = v11;
  }
  else
  {
    if (qword_1000D5670 != -1)
      swift_once(&qword_1000D5670, sub_100084DD8);
    v14 = type metadata accessor for Logger(0, v6);
    v15 = sub_10001118C(v14, (uint64_t)qword_1000D80F0);
    v9 = Logger.logObject.getter(v15);
    v16 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v9, v16))
      goto LABEL_11;
    v17 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v16, "HomePodSetup: A pincode was entered.", v17, 2u);
    v13 = v17;
  }
  swift_slowDealloc(v13, -1, -1);
LABEL_11:

LABEL_13:
  v18 = *(id *)(v3 + 80);
  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v18, "pairSetupTryPIN:", v19);

}

uint64_t sub_100089144()
{
  uint64_t v0;

  sub_1000113B8(v0 + 32);
  swift_release(*(_QWORD *)(v0 + 48));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
  swift_unknownObjectWeakDestroy(v0 + 120);
  swift_release(*(_QWORD *)(v0 + 128));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 152));
  return v0;
}

uint64_t sub_1000891C0()
{
  uint64_t v0;

  sub_100089144();
  return swift_deallocClassInstance(v0, 178, 7);
}

uint64_t type metadata accessor for HomePodSetupInteractor()
{
  return objc_opt_self(_TtC14HDSViewService22HomePodSetupInteractor);
}

uint64_t sub_100089200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  const char *v18;
  BOOL v19;
  int v20;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceActionType);
  if (sub_100092778(v3))
  {
    v5 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode);
    if (v3 == 11)
    {
      if (*(_BYTE *)(v2 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode))
      {
        if (qword_1000D5670 != -1)
          swift_once(&qword_1000D5670, sub_100084DD8);
        v6 = type metadata accessor for Logger(0, v4);
        v7 = sub_10001118C(v6, (uint64_t)qword_1000D80F0);
        v8 = Logger.logObject.getter(v7);
        v10 = static os_log_type_t.default.getter(v8, v9);
        if (os_log_type_enabled(v8, v10))
        {
          v11 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v11 = 0;
          _os_log_impl((void *)&_mh_execute_header, v8, v10, "HomePodSetupInteractor: Requires an upgrade becasue Legacy Setup and HomePod mini.", v11, 2u);
          swift_slowDealloc(v11, -1, -1);
        }

        return 1;
      }
      return 0;
    }
    v19 = v5 > 6;
    v20 = (1 << v5) & 0x61;
    if (!v19 && v20 != 0)
      return 0;
    if (qword_1000D5670 != -1)
      swift_once(&qword_1000D5670, sub_100084DD8);
    v23 = type metadata accessor for Logger(0, v4);
    sub_10001118C(v23, (uint64_t)qword_1000D80F0);
    v24 = swift_retain(v1);
    v14 = Logger.logObject.getter(v24);
    v16 = static os_log_type_t.default.getter(v14, v25);
    if (os_log_type_enabled(v14, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(5, -1);
      *(_DWORD *)v17 = 16777472;
      v26 = *(_BYTE *)(*(_QWORD *)(v1 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);
      swift_release(v1);
      v18 = "HomePodSetupInteractor: Requires an upgrade because device %hhu is not known.";
      goto LABEL_13;
    }
LABEL_23:

    swift_release(v1);
    return 1;
  }
  if (qword_1000D5670 != -1)
    swift_once(&qword_1000D5670, sub_100084DD8);
  v12 = type metadata accessor for Logger(0, v4);
  sub_10001118C(v12, (uint64_t)qword_1000D80F0);
  v13 = swift_retain(v1);
  v14 = Logger.logObject.getter(v13);
  v16 = static os_log_type_t.default.getter(v14, v15);
  if (!os_log_type_enabled(v14, v16))
    goto LABEL_23;
  v17 = (uint8_t *)swift_slowAlloc(5, -1);
  *(_DWORD *)v17 = 16777472;
  v27 = *(_BYTE *)(*(_QWORD *)(v1 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceActionType);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28);
  swift_release(v1);
  v18 = "HomePodSetupInteractor: Requires an upgrade becasue setup action %hhu not HomePodSetup.";
LABEL_13:
  _os_log_impl((void *)&_mh_execute_header, v14, v16, v18, v17, 5u);
  swift_slowDealloc(v17, -1, -1);

  return 1;
}

uint64_t sub_10008950C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v1 = v0;
  if (qword_1000D5530 != -1)
    swift_once(&qword_1000D5530, sub_100036860);
  v2 = *(_QWORD *)(v0 + 48);
  swift_retain(v2);
  v3 = sub_100038124(0, v2);
  v5 = v4;
  swift_release(v2);
  if (!v5)
    return 62;
  if (qword_1000D5670 != -1)
    swift_once(&qword_1000D5670, sub_100084DD8);
  v7 = type metadata accessor for Logger(0, v6);
  sub_10001118C(v7, (uint64_t)qword_1000D80F0);
  v8 = swift_retain_n(v5, 2);
  v9 = Logger.logObject.getter(v8);
  v11 = static os_log_type_t.default.getter(v9, v10);
  if (os_log_type_enabled(v9, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v20 = v13;
    *(_DWORD *)v12 = 136315138;
    v14 = sub_100069924(v3);
    v16 = v15;
    v19 = sub_10003EF58(v14, v15, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20);
    swift_release_n(v5, 2);
    swift_bridgeObjectRelease(v16);
    _os_log_impl((void *)&_mh_execute_header, v9, v11, "HomePodSetupInteractor: initialStateBasedOnTesting because testMode / testFlags next screen is: %s ", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {

    swift_release_n(v5, 2);
  }
  v17 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 48) = v5;
  swift_release(v17);
  return v3;
}

void sub_100089724()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  NSString v4;
  int v5;
  const char *v6;
  unint64_t v7;
  NSString v8;
  uint64_t v9;
  void *v10;
  _QWORD v11[5];
  uint64_t v12;

  v1 = v0;
  v2 = *(void **)(v0 + 168);
  v3 = *(_QWORD *)(*(_QWORD *)(v0 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceSerialNumber + 8);
  swift_bridgeObjectRetain(v3);
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v1 + 48)
                          + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_otherDeviceModelCode);
  if (v5 == 5)
  {
    v6 = "AudioAccessory5,1";
  }
  else if (v5 == 6)
  {
    v6 = "AudioAccessory6,1";
  }
  else
  {
    v6 = "AudioAccessory1,1";
  }
  v7 = (unint64_t)(v6 - 32) | 0x8000000000000000;
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v7);
  v9 = swift_allocObject(&unk_1000C5A60, 24, 7);
  swift_weakInit(v9 + 16, v1);
  v11[4] = sub_10009272C;
  v12 = v9;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_100084D9C;
  v11[3] = &unk_1000C5AA0;
  v10 = _Block_copy(v11);
  swift_release(v12);
  objc_msgSend(v2, "registerDevice:model:callback:", v4, v8, v10);
  _Block_release(v10);

}

void sub_100089898(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;

  if ((*(_BYTE *)(v1 + 177) & 1) != 0)
    return;
  *(_BYTE *)(v1 + 177) = 1;
  v3 = *(void **)(v1 + 80);
  v4 = *(void **)(v1 + 16);
  if (!v4)
  {
    v8 = v3;
    v7 = *(_QWORD *)(v1 + 96);
    if (v7)
      goto LABEL_4;
LABEL_6:
    v10 = 0;
    goto LABEL_7;
  }
  v5 = v3;
  v6 = v4;
  v4 = (void *)_convertErrorToNSError(_:)();

  v7 = *(_QWORD *)(v1 + 96);
  if (!v7)
    goto LABEL_6;
LABEL_4:
  swift_bridgeObjectRetain(v7);
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v7);
LABEL_7:
  if (*(_BYTE *)(v1 + 112))
    v9 = 0;
  else
    v9 = *(_QWORD *)(v1 + 104);
  objc_msgSend(v3, "logMetricsForDismissal:dismissType:cardName:cardDuration:", v4, a1, v10, v9);

}

void sub_100089990(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t inited;
  id v9;
  NSString v10;
  id v11;
  id v12;
  NSString *v13;
  unint64_t v14;
  NSString v15;
  uint64_t v16;
  Class isa;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  uint64_t v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[208];

  if ((*(_BYTE *)(v1 + 176) & 1) == 0)
  {
    *(_BYTE *)(v1 + 176) = 1;
    LODWORD(v31) = a1;
    dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int32, &protocol witness table for Int32);
    v3 = v2;
    v4 = objc_allocWithZone((Class)NSString);
    v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v3);
    v6 = objc_msgSend(v4, "initWithString:", v5);

    sub_100089200();
    v7 = sub_10000D604(&qword_1000D8508);
    inited = swift_initStackObject(v7, v32);
    *(_OWORD *)(inited + 16) = xmmword_10009B160;
    *(_QWORD *)(inited + 32) = 0x6574656C706D6F63;
    *(_QWORD *)(inited + 40) = 0xE900000000000064;
    sub_100035CA4(0, (unint64_t *)&unk_1000D7190, NSNumber_ptr);
    *(NSNumber *)(inited + 48) = NSNumber.init(BOOLeanLiteral:)(0);
    *(_QWORD *)(inited + 56) = 0x73736563637573;
    *(_QWORD *)(inited + 64) = 0xE700000000000000;
    *(NSNumber *)(inited + 72) = NSNumber.init(BOOLeanLiteral:)(0);
    *(_QWORD *)(inited + 80) = 0x62614C726F727265;
    *(_QWORD *)(inited + 88) = 0xEA00000000006C65;
    v9 = objc_allocWithZone((Class)NSString);
    v10 = String._bridgeToObjectiveC()();
    v11 = objc_msgSend(v9, "initWithString:", v10);

    *(_QWORD *)(inited + 96) = v11;
    *(_QWORD *)(inited + 104) = 0xD000000000000014;
    *(_QWORD *)(inited + 112) = 0x80000001000A3410;
    *(_QWORD *)(inited + 120) = v6;
    *(_QWORD *)(inited + 128) = 0x6D6F44726F727265;
    *(_QWORD *)(inited + 136) = 0xEB000000006E6961;
    *(_QWORD *)(inited + 144) = NSOSStatusErrorDomain;
    *(_QWORD *)(inited + 152) = 0xD000000000000011;
    *(_QWORD *)(inited + 160) = 0x80000001000A3430;
    v12 = v6;
    v13 = NSOSStatusErrorDomain;
    *(NSNumber *)(inited + 168) = Bool._bridgeToObjectiveC()();
    strcpy((char *)(inited + 176), "setupErrorCode");
    *(_BYTE *)(inited + 191) = -18;
    *(NSNumber *)(inited + 192) = Int32._bridgeToObjectiveC()();
    v14 = sub_10000CAC4(inited);
    v15 = String._bridgeToObjectiveC()();
    v16 = sub_100035CA4(0, &qword_1000D8510, NSObject_ptr);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    sub_10000852C(v15, isa);

    if (qword_1000D5670 != -1)
      swift_once(&qword_1000D5670, sub_100084DD8);
    v19 = type metadata accessor for Logger(0, v18);
    sub_10001118C(v19, (uint64_t)qword_1000D80F0);
    swift_bridgeObjectRetain(v14);
    v21 = Logger.logObject.getter(v20);
    v23 = static os_log_type_t.default.getter(v21, v22);
    if (os_log_type_enabled(v21, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc(12, -1);
      v25 = swift_slowAlloc(32, -1);
      v31 = v25;
      *(_DWORD *)v24 = 136315138;
      swift_bridgeObjectRetain(v14);
      v27 = Dictionary.description.getter(v26, &type metadata for String, v16, &protocol witness table for String);
      v29 = v28;
      swift_bridgeObjectRelease(v14);
      v30 = sub_10003EF58(v27, v29, &v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31);
      swift_bridgeObjectRelease_n(v14, 2);
      swift_bridgeObjectRelease(v29);
      _os_log_impl((void *)&_mh_execute_header, v21, v23, "HomePodSetupInteractor: logRequiresUpdate %s", v24, 0xCu);
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v14, 2);
    }
  }
}

void sub_100089DFC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  const char *v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  id v21;
  NSObject *v22;
  uint64_t v23;
  os_log_type_t v24;
  uint8_t *v25;
  const char *v26;
  uint64_t v27;
  unsigned int v28;
  unsigned __int8 v29;
  uint64_t v30;
  int v31;
  const char *v32;
  void (*v33)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  uint64_t v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char **v45;
  unsigned int v46;
  const char *v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50;
  NSObject *v51;
  uint64_t v52;
  os_log_type_t v53;
  uint8_t *v54;
  unsigned int v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  NSString v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  NSObject *v70;
  uint64_t v71;
  os_log_type_t v72;
  uint8_t *v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  unsigned __int8 v77;
  unsigned int v78;
  const char *v79;
  uint64_t v80;
  void *v81;
  unsigned int v82;
  uint64_t v83;
  NSObject *v84;
  uint64_t v85;
  os_log_type_t v86;
  uint8_t *v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unsigned int v91;
  uint64_t v92;
  NSObject *v93;
  uint64_t v94;
  os_log_type_t v95;
  uint8_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  unsigned __int8 v101;
  uint64_t v102;
  NSObject *v103;
  uint64_t v104;
  os_log_type_t v105;
  uint8_t *v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  void *v110;
  id v111;
  NSObject *v112;
  NSObject *v113;
  os_log_type_t v114;
  uint8_t *v115;
  _QWORD *v116;
  uint64_t v117;
  NSObject *v118;
  uint64_t v119;
  NSObject *v120;
  void *v121;
  uint64_t v122;
  uint64_t Strong;
  uint64_t v124;
  NSObject *v125;
  unint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unsigned int v130;
  _QWORD v131[2];
  id v132;
  uint64_t v133;
  __int128 v134;
  __int128 v135;

  if ((a1 & 0x100000000) != 0)
    return;
  v3 = v2;
  v6 = sub_100092BEC(a1);
  v8 = String.init(cString:)(v6);
  v9 = v7;
  if (a2)
  {
    v129 = Dictionary.description.getter(a2, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
    v10 = v7;
  }
  else
  {
    v10 = 0xE300000000000000;
    v129 = 7104878;
  }
  if (qword_1000D5670 != -1)
    swift_once(&qword_1000D5670, sub_100084DD8);
  v11 = type metadata accessor for Logger(0, v7);
  sub_10001118C(v11, (uint64_t)qword_1000D80F0);
  swift_bridgeObjectRetain_n(v9, 2);
  swift_bridgeObjectRetain(v10);
  v13 = Logger.logObject.getter(v12);
  v15 = static os_log_type_t.default.getter(v13, v14);
  if (os_log_type_enabled(v13, v15))
  {
    v128 = v3;
    v16 = swift_slowAlloc(22, -1);
    v127 = a2;
    v17 = swift_slowAlloc(64, -1);
    v132 = (id)v17;
    *(_DWORD *)v16 = 136315394;
    swift_bridgeObjectRetain(v9);
    *(_QWORD *)&v134 = sub_10003EF58(v8, v9, (uint64_t *)&v132);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v134, (char *)&v134 + 8);
    swift_bridgeObjectRelease_n(v9, 3);
    *(_WORD *)(v16 + 12) = 2080;
    swift_bridgeObjectRetain(v10);
    *(_QWORD *)&v134 = sub_10003EF58(v129, v10, (uint64_t *)&v132);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v134, (char *)&v134 + 8);
    swift_bridgeObjectRelease_n(v10, 3);
    _os_log_impl((void *)&_mh_execute_header, v13, v15, "<loom:ViewService:matchSessionHandleProgress> HomePodSetupInteractor: progressHandler inEvent:%s and info:%s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
    v18 = v17;
    a2 = v127;
    swift_slowDealloc(v18, -1, -1);
    v19 = v16;
    v3 = v128;
    swift_slowDealloc(v19, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v10, 2);
    swift_bridgeObjectRelease_n(v9, 2);
  }
  *(_DWORD *)(*(_QWORD *)(v3 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_progressEvent) = a1;
  if ((int)a1 <= 199)
  {
    switch((int)a1)
    {
      case 20:
        swift_bridgeObjectRelease(v9);
        v20 = objc_msgSend(*(id *)(v3 + 80), "bonjourTestState");
        *(_DWORD *)(*(_QWORD *)(v3 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_bonjourTestState) = v20;
        v21 = objc_msgSend(*(id *)(v3 + 80), "siriDataSharingEnabled");
        *(_BYTE *)(*(_QWORD *)(v3 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_siriDataSharingEnabled) = (_BYTE)v21;
        v22 = Logger.logObject.getter(v21);
        v24 = static os_log_type_t.default.getter(v22, v23);
        if (!os_log_type_enabled(v22, v24))
          goto LABEL_52;
        v25 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v25 = 0;
        v26 = "Setup finalized";
        goto LABEL_51;
      case 30:
        swift_bridgeObjectRelease(v9);
        if (a2)
        {
          v131[0] = 28517;
          v131[1] = 0xE200000000000000;
          AnyHashable.init<A>(_:)(&v132, v131, &type metadata for String, &protocol witness table for String);
          if (*(_QWORD *)(a2 + 16) && (v43 = sub_10004A78C((uint64_t)&v132), (v44 & 1) != 0))
          {
            sub_10000DB98(*(_QWORD *)(a2 + 56) + 32 * v43, (uint64_t)&v134);
          }
          else
          {
            v134 = 0u;
            v135 = 0u;
          }
          sub_10000DAE8((uint64_t)&v132);
          if (*((_QWORD *)&v135 + 1))
          {
            v108 = sub_100035CA4(0, &qword_1000D8518, NSError_ptr);
            if ((swift_dynamicCast(&v132, &v134, (char *)&type metadata for Any + 8, v108, 6) & 1) != 0)
            {
              v109 = v132;
              v110 = *(void **)(v3 + 16);
              *(_QWORD *)(v3 + 16) = v132;
              v111 = v109;

              v112 = v111;
              v113 = Logger.logObject.getter(v112);
              v114 = static os_log_type_t.error.getter();
              if (os_log_type_enabled(v113, v114))
              {
                v115 = (uint8_t *)swift_slowAlloc(12, -1);
                v116 = (_QWORD *)swift_slowAlloc(8, -1);
                *(_DWORD *)v115 = 138412290;
                v132 = v112;
                v117 = v3;
                v118 = v112;
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v132, &v133);
                *v116 = v109;

                v3 = v117;
                _os_log_impl((void *)&_mh_execute_header, v113, v114, "### Setup failed: %@", v115, 0xCu);
                v119 = sub_10000D604(&qword_1000D5CC8);
                swift_arrayDestroy(v116, 1, v119);
                swift_slowDealloc(v116, -1, -1);
                swift_slowDealloc(v115, -1, -1);
              }
              else
              {

                v113 = v112;
              }

              v120 = v112;
              v121 = (void *)_convertErrorToNSError(_:)(v120);

              v122 = NSErrorToOSStatus(v121);
              Strong = swift_unknownObjectWeakLoadStrong(v3 + 32);
              if (Strong)
              {
                v124 = Strong;
                v125 = v120;
                sub_100091AFC((os_log_t)v3, v122, v109, 1, v124);

                swift_unknownObjectRelease(v124);
              }
              else
              {

              }
              *(_DWORD *)(v3 + 164) = v122;
            }
            return;
          }
        }
        else
        {
          v134 = 0u;
          v135 = 0u;
        }
        sub_10000DC40((uint64_t)&v134, &qword_1000D5820);
        return;
      case 40:
        goto LABEL_28;
      case 50:
        swift_bridgeObjectRelease(v9);
        v45 = &selRef_tableView;
        v46 = objc_msgSend(*(id *)(v3 + 80), "homePodProductVersion") - 1;
        if (v46 > 3)
          v47 = "SUUnknown";
        else
          v47 = (&off_1000C60E0)[v46];
        v66 = String.init(cString:)(v47);
        v68 = v67;
        swift_bridgeObjectRetain(v67);
        v70 = Logger.logObject.getter(v69);
        v72 = static os_log_type_t.default.getter(v70, v71);
        if (os_log_type_enabled(v70, v72))
        {
          v73 = (uint8_t *)swift_slowAlloc(12, -1);
          v74 = swift_slowAlloc(32, -1);
          v132 = (id)v74;
          *(_DWORD *)v73 = 136315138;
          swift_bridgeObjectRetain(v68);
          *(_QWORD *)&v134 = sub_10003EF58(v66, v68, (uint64_t *)&v132);
          v45 = &selRef_tableView;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v134, (char *)&v134 + 8);
          swift_bridgeObjectRelease_n(v68, 3);
          _os_log_impl((void *)&_mh_execute_header, v70, v72, "HomePodSetupInteractor sessionHandleProgress: setting homePodProductVersion = %s", v73, 0xCu);
          swift_arrayDestroy(v74, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v74, -1, -1);
          swift_slowDealloc(v73, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n(v68, 2);
        }
        v80 = *(_QWORD *)(v3 + 48);
        v81 = *(void **)(v3 + 80);
        swift_retain(v80);
        v82 = objc_msgSend(v81, v45[179]);
        *(_DWORD *)(v80 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homePodProductVersion) = v82;
        swift_release(v80);
        v83 = swift_retain(v3);
        v84 = Logger.logObject.getter(v83);
        v86 = static os_log_type_t.default.getter(v84, v85);
        if (os_log_type_enabled(v84, v86))
        {
          v87 = (uint8_t *)swift_slowAlloc(8, -1);
          *(_DWORD *)v87 = 67109120;
          LODWORD(v132) = objc_msgSend(*(id *)(v3 + 80), "forceSoftwareUpdateForADP");
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v132, (char *)&v132 + 4);
          swift_release(v3);
          _os_log_impl((void *)&_mh_execute_header, v84, v86, "HomePodSetupInteractor sessionHandleProgress: setting forcedADPSoftwareUpdate = %{BOOL}d", v87, 8u);
          swift_slowDealloc(v87, -1, -1);

        }
        else
        {

          swift_release(v3);
        }
        v99 = *(_QWORD *)(v3 + 48);
        v100 = *(void **)(v3 + 80);
        swift_retain(v99);
        v101 = objc_msgSend(v100, "forceSoftwareUpdateForADP");
        *(_BYTE *)(v99 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_forcedADPSoftwareUpdate) = v101;
        swift_release(v99);
        return;
      case 55:
        swift_bridgeObjectRelease(v9);
        v48 = swift_unknownObjectWeakLoadStrong(v3 + 32);
        if (!v48)
          return;
        v42 = v48;
        v49 = 16;
        goto LABEL_61;
      case 60:
      case 124:
        goto LABEL_22;
      case 70:
        swift_bridgeObjectRelease(v9);
        *(_BYTE *)(v3 + 56) = 1;
        return;
      case 80:
        v50 = swift_retain(v3);
        v51 = Logger.logObject.getter(v50);
        v53 = static os_log_type_t.default.getter(v51, v52);
        v126 = v9;
        if (os_log_type_enabled(v51, v53))
        {
          v54 = (uint8_t *)swift_slowAlloc(8, -1);
          *(_DWORD *)v54 = 67109120;
          LODWORD(v132) = objc_msgSend(*(id *)(v3 + 80), "userOptedToHH2");
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v132, (char *)&v132 + 4);
          swift_release(v3);
          _os_log_impl((void *)&_mh_execute_header, v51, v53, "HomePodSetupInteractor sessionHandleProgress: setting homePodProductVersion = %{BOOL}d", v54, 8u);
          swift_slowDealloc(v54, -1, -1);

        }
        else
        {

          swift_release(v3);
        }
        v75 = *(_QWORD *)(v3 + 48);
        v76 = *(void **)(v3 + 80);
        swift_retain(v75);
        v77 = objc_msgSend(v76, "userOptedToHH2");
        *(_BYTE *)(v75 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_isHomeInHH2) = v77;
        v78 = objc_msgSend(*(id *)(v3 + 80), "homePodSUState", swift_release(v75).n128_f64[0]);
        if (v78 > 3)
          v79 = "SUUnknown";
        else
          v79 = (&off_1000C6100)[v78];
        v88 = String.init(cString:)(v79);
        v90 = v89;
        v91 = objc_msgSend(*(id *)(v3 + 80), "homePodProductVersion");
        swift_bridgeObjectRetain(v90);
        v93 = Logger.logObject.getter(v92);
        v95 = static os_log_type_t.default.getter(v93, v94);
        if (os_log_type_enabled(v93, v95))
        {
          v96 = (uint8_t *)swift_slowAlloc(12, -1);
          v130 = v91;
          v97 = swift_slowAlloc(32, -1);
          v132 = (id)v97;
          *(_DWORD *)v96 = 136315138;
          swift_bridgeObjectRetain(v90);
          *(_QWORD *)&v134 = sub_10003EF58(v88, v90, (uint64_t *)&v132);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v134, (char *)&v134 + 8);
          swift_bridgeObjectRelease_n(v90, 3);
          _os_log_impl((void *)&_mh_execute_header, v93, v95, "HomePodSetupInteractor sessionHandleProgress: setting showHomepodSoftwareUpdate = %s", v96, 0xCu);
          swift_arrayDestroy(v97, 1, (char *)&type metadata for Any + 8);
          v98 = v97;
          v91 = v130;
          swift_slowDealloc(v98, -1, -1);
          swift_slowDealloc(v96, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n(v90, 2);
        }
        *(_BYTE *)(*(_QWORD *)(v3 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_showHomepodSoftwareUpdate) = v91 == 1;
        swift_bridgeObjectRetain(v126);
        v103 = Logger.logObject.getter(v102);
        v105 = static os_log_type_t.default.getter(v103, v104);
        if (os_log_type_enabled(v103, v105))
        {
          v106 = (uint8_t *)swift_slowAlloc(12, -1);
          v107 = swift_slowAlloc(32, -1);
          v132 = (id)v107;
          *(_DWORD *)v106 = 136315138;
          swift_bridgeObjectRetain(v126);
          *(_QWORD *)&v134 = sub_10003EF58(v8, v126, (uint64_t *)&v132);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v134, (char *)&v134 + 8);
          swift_bridgeObjectRelease_n(v126, 3);
          _os_log_impl((void *)&_mh_execute_header, v103, v105, "HomePodSetupInteractor sessionHandleProgress: setting up event = %s", v106, 0xCu);
          swift_arrayDestroy(v107, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v107, -1, -1);
          swift_slowDealloc(v106, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n(v126, 2);
        }
        v31 = 80;
        goto LABEL_27;
      case 96:
        swift_bridgeObjectRelease(v9);
        v55 = objc_msgSend(*(id *)(v3 + 80), "bonjourTestState");
        *(_DWORD *)(*(_QWORD *)(v3 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_bonjourTestState) = v55;
        v56 = objc_msgSend(*(id *)(v3 + 80), "siriDataSharingEnabled");
        *(_BYTE *)(*(_QWORD *)(v3 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_siriDataSharingEnabled) = (_BYTE)v56;
        v22 = Logger.logObject.getter(v56);
        v24 = static os_log_type_t.default.getter(v22, v57);
        if (!os_log_type_enabled(v22, v24))
          goto LABEL_52;
        v25 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v25 = 0;
        v26 = "Setup completed";
LABEL_51:
        _os_log_impl((void *)&_mh_execute_header, v22, v24, v26, v25, 2u);
        swift_slowDealloc(v25, -1, -1);
LABEL_52:

        v58 = swift_unknownObjectWeakLoadStrong(v3 + 32);
        if (v58)
        {
          v59 = v58;
          sub_100091AFC((os_log_t)v3, 0, 0, 1, v58);
          swift_unknownObjectRelease(v59);
        }
        sub_100089898(24);
        objc_msgSend(*(id *)(v3 + 80), "invalidate");
        objc_msgSend(*(id *)(v3 + 144), "invalidate");
        v60 = swift_unknownObjectWeakLoadStrong(v3 + 32);
        if (v60)
        {
          v61 = v60;
          v62 = *(void **)(v60 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_remoteViewController);
          if (v62)
          {
            v63 = String._bridgeToObjectiveC()();
            objc_msgSend(v62, "setIdleTimerDisabled:forReason:", 0, v63);
            swift_unknownObjectRelease(v61);

          }
          else
          {
            swift_unknownObjectRelease(v60);
          }
        }
        return;
      case 120:
      case 122:
        goto LABEL_25;
      case 140:
        swift_bridgeObjectRelease(v9);
        v64 = swift_unknownObjectWeakLoadStrong(v3 + 32);
        if (!v64)
          return;
        v42 = v64;
        v49 = 23;
        goto LABEL_61;
      case 150:
        swift_bridgeObjectRelease(v9);
        v65 = swift_unknownObjectWeakLoadStrong(v3 + 32);
        if (!v65)
          return;
        v42 = v65;
        v49 = 10;
LABEL_61:
        sub_10006E7B0(v49);
        goto LABEL_62;
      default:
        goto LABEL_33;
    }
  }
  if ((int)a1 > 509)
  {
    switch((int)a1)
    {
      case 900:
        goto LABEL_22;
      case 901:
      case 905:
        swift_bridgeObjectRelease(v9);
        v32 = "HomePodSetupInteractor: updateProgressForHomePodSU event:%u";
        v33 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100090574;
        v34 = a1;
        goto LABEL_91;
      case 902:
      case 903:
      case 904:
        goto LABEL_33;
      case 906:
        swift_bridgeObjectRelease(v9);
        v32 = "HomePodSetupInteractor: updateProgressForSysDropAirDrop event:%u";
        v33 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100090A14;
        v34 = 906;
        goto LABEL_91;
      case 907:
        swift_bridgeObjectRelease(v9);
        v32 = "HomePodSetupInteractor: updateProgressForSysDropSysdiagnose event:%u";
        v33 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10009104C;
        v34 = 907;
        goto LABEL_91;
      case 908:
LABEL_28:
        swift_bridgeObjectRelease(v9);
        break;
      default:
        if ((_DWORD)a1 != 510)
          goto LABEL_33;
        goto LABEL_30;
    }
    return;
  }
  v27 = (a1 - 200);
  if (v27 <= 0x32)
  {
    if (((1 << (a1 + 56)) & 0x400100401) != 0)
    {
LABEL_22:
      swift_bridgeObjectRetain(v9);
      v36 = Logger.logObject.getter(v35);
      v38 = static os_log_type_t.default.getter(v36, v37);
      if (os_log_type_enabled(v36, v38))
      {
        v39 = (uint8_t *)swift_slowAlloc(12, -1);
        v40 = swift_slowAlloc(32, -1);
        v132 = (id)v40;
        *(_DWORD *)v39 = 136315138;
        swift_bridgeObjectRetain(v9);
        *(_QWORD *)&v134 = sub_10003EF58(v8, v9, (uint64_t *)&v132);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v134, (char *)&v134 + 8);
        swift_bridgeObjectRelease_n(v9, 3);
        _os_log_impl((void *)&_mh_execute_header, v36, v38, "HomePodSetupInteractor sessionHandleProgress: setting up event = %s", v39, 0xCu);
        swift_arrayDestroy(v40, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v40, -1, -1);
        swift_slowDealloc(v39, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v9, 2);
      }
    }
    else
    {
      if (v27 != 30)
      {
        if (v27 == 50)
        {
          swift_bridgeObjectRelease(v9);
          v28 = objc_msgSend(*(id *)(v3 + 80), "bonjourTestState");
          *(_DWORD *)(*(_QWORD *)(v3 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_bonjourTestState) = v28;
          v29 = objc_msgSend(*(id *)(v3 + 80), "siriDataSharingEnabled");
          *(_BYTE *)(*(_QWORD *)(v3 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_siriDataSharingEnabled) = v29;
          v31 = 250;
LABEL_27:
          sub_10008DD64(v31, v30);
          return;
        }
        goto LABEL_29;
      }
LABEL_25:
      swift_bridgeObjectRelease(v9);
      if (*(_BYTE *)(*(_QWORD *)(v3 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_progressDetail) != 1)
        return;
    }
    v31 = a1;
    goto LABEL_27;
  }
LABEL_29:
  if ((_DWORD)a1 == 500)
  {
LABEL_30:
    swift_bridgeObjectRelease(v9);
    v41 = swift_unknownObjectWeakLoadStrong(v3 + 32);
    if (v41)
    {
      v42 = v41;
      sub_100071AEC(v3, a1, a2, v41);
LABEL_62:
      swift_unknownObjectRelease(v42);
    }
  }
  else
  {
LABEL_33:
    swift_bridgeObjectRelease(v9);
    if ((_DWORD)a1 == 910)
    {
      v32 = "HomePodSetupInteractor: updateProgressForSysDropRPFileTransferProgress event:%u";
      v33 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000914D8;
      v34 = 910;
    }
    else
    {
      if ((_DWORD)a1 != 909)
        return;
      v32 = "HomePodSetupInteractor: updateProgressForSysDropRPFileTransferProgress event:%u";
      v33 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000914D8;
      v34 = 909;
    }
LABEL_91:
    sub_10008DE98(v34, a2, v32, v33);
  }
}

uint64_t sub_10008AF5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  if (a3)
    v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a3, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
  else
    v6 = 0;
  swift_retain(v4);
  v5(a2, v6);
  swift_release(v4);
  return swift_bridgeObjectRelease(v6);
}

double sub_10008AFDC(unsigned int a1, unint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v7;
  const char *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t Strong;
  double result;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25[3];

  v7 = a3 + 16;
  v8 = sub_100092BEC(a1);
  v10 = String.init(cString:)(v8);
  v11 = v9;
  if (qword_1000D5670 != -1)
    swift_once(&qword_1000D5670, sub_100084DD8);
  v12 = type metadata accessor for Logger(0, v9);
  sub_10001118C(v12, (uint64_t)qword_1000D80F0);
  swift_bridgeObjectRetain(v11);
  v14 = Logger.logObject.getter(v13);
  v16 = static os_log_type_t.default.getter(v14, v15);
  if (os_log_type_enabled(v14, v16))
  {
    v23 = a2;
    v17 = (uint8_t *)swift_slowAlloc(12, -1);
    v18 = swift_slowAlloc(32, -1);
    v25[0] = v18;
    *(_DWORD *)v17 = 136315138;
    swift_bridgeObjectRetain(v11);
    v24 = sub_10003EF58(v10, v11, v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, v25);
    swift_bridgeObjectRelease_n(v11, 3);
    _os_log_impl((void *)&_mh_execute_header, v14, v16, a4, v17, 0xCu);
    swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    v19 = v17;
    a2 = v23;
    swift_slowDealloc(v19, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v11, 2);
  }
  swift_beginAccess(v7, v25, 0, 0);
  Strong = swift_weakLoadStrong(v7);
  if (Strong)
  {
    v22 = Strong;
    LOBYTE(v24) = 0;
    sub_100089DFC(a1, a2);
    *(_QWORD *)&result = swift_release(v22).n128_u64[0];
  }
  return result;
}

double sub_10008B1E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t Strong;
  uint64_t v11;
  double result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[24];

  v9 = a5 + 16;
  swift_beginAccess(a5 + 16, v27, 0, 0);
  Strong = swift_weakLoadStrong(v9);
  if (Strong)
  {
    v13 = Strong;
    if (qword_1000D5670 != -1)
      swift_once(&qword_1000D5670, sub_100084DD8);
    v14 = type metadata accessor for Logger(0, v11);
    v15 = sub_10001118C(v14, (uint64_t)qword_1000D80F0);
    v16 = Logger.logObject.getter(v15);
    v18 = static os_log_type_t.default.getter(v16, v17);
    if (os_log_type_enabled(v16, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v18, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for AppleMusic", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

    v20 = (_QWORD *)(*(_QWORD *)(v13 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceGUID);
    v21 = v20[1];
    *v20 = a1;
    v20[1] = a2;
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRelease(v21);
    v22 = (_QWORD *)(*(_QWORD *)(v13 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_deviceSerialNumber);
    v23 = v22[1];
    *v22 = a3;
    v22[1] = a4;
    swift_bridgeObjectRetain(a4);
    swift_bridgeObjectRelease(v23);
    v24 = swift_unknownObjectWeakLoadStrong(v13 + 32);
    if (v24)
    {
      v25 = v24;
      v26 = swift_retain(v13);
      sub_100091E30(v26, v25);
      swift_release_n(v13, 2);
      swift_unknownObjectRelease(v25);
    }
    else
    {
      *(_QWORD *)&result = swift_release(v13).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_10008B39C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v8 = v7;
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v11 = v10;
  swift_retain(v4);
  v5(v6, v8, v9, v11);
  swift_release(v4);
  swift_bridgeObjectRelease(v8);
  return swift_bridgeObjectRelease(v11);
}

double sub_10008B41C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t Strong;
  double result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = a3 + 16;
  if (qword_1000D5670 != -1)
    swift_once(&qword_1000D5670, sub_100084DD8);
  v6 = type metadata accessor for Logger(0, a2);
  sub_10001118C(v6, (uint64_t)qword_1000D80F0);
  v7 = swift_bridgeObjectRetain_n(a1, 2);
  v8 = Logger.logObject.getter(v7);
  v10 = static os_log_type_t.default.getter(v8, v9);
  if (os_log_type_enabled(v8, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v11 = 134217984;
    if ((unint64_t)a1 >> 62)
    {
      if (a1 < 0)
        v16 = a1;
      else
        v16 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v12 = _CocoaArrayWrapper.endIndex.getter(v16);
      swift_bridgeObjectRelease(a1);
    }
    else
    {
      v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(a1);
    v17 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18);
    swift_bridgeObjectRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v8, v10, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for home (%ld) homes)", v11, 0xCu);
    swift_slowDealloc(v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a1, 2);
  }
  swift_beginAccess(v5, &v17, 0, 0);
  Strong = swift_weakLoadStrong(v5);
  if (Strong)
  {
    v15 = Strong;
    sub_10008B5D4(a1, a2);
    *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  }
  return result;
}

uint64_t sub_10008B5D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  Class isa;
  uint64_t result;
  uint64_t v10;

  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v4 + 40);
  *(_QWORD *)(v4 + 40) = a1;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(*(_QWORD *)(v2 + 48) + 72) = a2;
  v6 = *(void **)(v2 + 80);
  sub_100035CA4(0, (unint64_t *)&qword_1000D80D0, HMHome_ptr);
  v7 = v6;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v7, "setAvailableHomes:", isa);

  result = swift_unknownObjectWeakLoadStrong(v2 + 32);
  if (result)
  {
    v10 = result;
    sub_10006E7B0(1u);
    return swift_unknownObjectRelease(v10);
  }
  return result;
}

uint64_t sub_10008B69C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v6 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v7 = sub_100035CA4(0, (unint64_t *)&qword_1000D80D0, HMHome_ptr);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v7);
  swift_retain(v5);
  v6(v8, a3);
  swift_release(v5);
  return swift_bridgeObjectRelease(v8);
}

double sub_10008B71C(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t Strong;
  double result;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[24];

  v3 = a2 + 16;
  if (qword_1000D5670 != -1)
    swift_once(&qword_1000D5670, sub_100084DD8);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10001118C(v4, (uint64_t)qword_1000D80F0);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for Location Already Enabled", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  swift_beginAccess(v3, v14, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v12 = Strong;
    v13 = *(_QWORD *)(Strong + 48);
    swift_retain(v13);
    swift_release(v12);
    *(_BYTE *)(v13 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_userEnabledLocationForHomePod) = a1 & 1;
    *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  }
  return result;
}

double sub_10008B854(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  double result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  _BYTE v17[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v17, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v5 = Strong;
    if (qword_1000D5670 != -1)
      swift_once(&qword_1000D5670, sub_100084DD8);
    v6 = type metadata accessor for Logger(0, v3);
    v7 = sub_10001118C(v6, (uint64_t)qword_1000D80F0);
    v8 = Logger.logObject.getter(v7);
    v10 = static os_log_type_t.default.getter(v8, v9);
    if (os_log_type_enabled(v8, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v10, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for PersonalRequests", v11, 2u);
      swift_slowDealloc(v11, -1, -1);
    }

    v12 = swift_unknownObjectWeakLoadStrong(v5 + 32);
    if (v12)
    {
      v13 = v12;
      v14 = *(void **)(v5 + 80);
      v15 = *(void **)(v12 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_setupSession);
      *(_QWORD *)(v12 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_setupSession) = v14;
      v16 = v14;
      swift_retain(v5);

      sub_10006E7B0(9u);
      swift_release_n(v5, 2);
      swift_unknownObjectRelease(v13);
    }
    else
    {
      *(_QWORD *)&result = swift_release(v5).n128_u64[0];
    }
  }
  return result;
}

double sub_10008B9B8(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  double result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  _BYTE v19[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v19, 0, 0);
  Strong = swift_weakLoadStrong(v5);
  if (Strong)
  {
    v9 = Strong;
    if (qword_1000D5670 != -1)
      swift_once(&qword_1000D5670, sub_100084DD8);
    v10 = type metadata accessor for Logger(0, v7);
    v11 = sub_10001118C(v10, (uint64_t)qword_1000D80F0);
    v12 = Logger.logObject.getter(v11);
    v14 = static os_log_type_t.default.getter(v12, v13);
    if (os_log_type_enabled(v12, v14))
    {
      v15 = swift_slowAlloc(14, -1);
      *(_DWORD *)v15 = 67109376;
      v18 = a1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, v19);
      *(_WORD *)(v15 + 8) = 1024;
      v18 = a2;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, v19);
      _os_log_impl((void *)&_mh_execute_header, v12, v14, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for PINHandler with flags: %u throttle: %d", (uint8_t *)v15, 0xEu);
      swift_slowDealloc(v15, -1, -1);
    }

    v16 = swift_unknownObjectWeakLoadStrong(v9 + 32);
    if (v16)
    {
      v17 = v16;
      swift_retain(v9);
      sub_100092AA4(a1, a2);
      swift_release_n(v9, 2);
      swift_unknownObjectRelease(v17);
    }
    else
    {
      *(_QWORD *)&result = swift_release(v9).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_10008BB5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v6 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v6(a2, a3);
  return swift_release(v5);
}

double sub_10008BBA4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  os_log_type_t v24;
  _BOOL4 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t Strong;
  double result;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55[3];

  v12 = sub_10000D604(&qword_1000D6170);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v18 = (char *)&v46 - v17;
  v19 = a6 + 16;
  if (qword_1000D5670 != -1)
    swift_once(&qword_1000D5670, sub_100084DD8);
  v20 = type metadata accessor for Logger(0, v16);
  sub_10001118C(v20, (uint64_t)qword_1000D80F0);
  sub_10000E0F0(a5, (uint64_t)v18, &qword_1000D6170);
  swift_bridgeObjectRetain_n(a2, 2);
  swift_bridgeObjectRetain_n(a3, 2);
  v21 = swift_bridgeObjectRetain_n(a4, 2);
  v22 = Logger.logObject.getter(v21);
  v24 = static os_log_type_t.default.getter(v22, v23);
  v52 = v24;
  v25 = os_log_type_enabled(v22, v24);
  v53 = a1;
  if (v25)
  {
    v26 = swift_slowAlloc(42, -1);
    v51 = a5;
    v27 = v26;
    v48 = swift_slowAlloc(128, -1);
    v55[0] = v48;
    *(_DWORD *)v27 = 136315906;
    v47 = v12;
    swift_bridgeObjectRetain(a2);
    v54 = sub_10003EF58(a1, a2, v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, v55);
    swift_bridgeObjectRelease_n(a2, 3);
    *(_WORD *)(v27 + 12) = 2080;
    swift_bridgeObjectRetain(a3);
    v29 = Array.description.getter(v28, &type metadata for String);
    v49 = a2;
    v50 = v19;
    v30 = v29;
    v32 = v31;
    swift_bridgeObjectRelease(a3);
    v54 = sub_10003EF58(v30, v32, v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, v55);
    swift_bridgeObjectRelease_n(a3, 2);
    swift_bridgeObjectRelease(v32);
    *(_WORD *)(v27 + 22) = 2080;
    swift_bridgeObjectRetain(a4);
    v34 = Array.description.getter(v33, &type metadata for String);
    v36 = v35;
    swift_bridgeObjectRelease(a4);
    v54 = sub_10003EF58(v34, v36, v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, v55);
    swift_bridgeObjectRelease_n(a4, 2);
    swift_bridgeObjectRelease(v36);
    *(_WORD *)(v27 + 32) = 2080;
    sub_10000E0F0((uint64_t)v18, (uint64_t)v15, &qword_1000D6170);
    v37 = String.init<A>(describing:)(v15, v47);
    v39 = v38;
    v54 = sub_10003EF58(v37, v38, v55);
    v19 = v50;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, v55);
    v40 = v39;
    a2 = v49;
    swift_bridgeObjectRelease(v40);
    sub_10000DC40((uint64_t)v18, &qword_1000D6170);
    _os_log_impl((void *)&_mh_execute_header, v22, (os_log_type_t)v52, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for room in home \"%s\", existingRooms: %s, suggestedRooms: %s, defaultIndexPath: %s", (uint8_t *)v27, 0x2Au);
    v41 = v48;
    swift_arrayDestroy(v48, 4, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v41, -1, -1);
    v42 = v27;
    a5 = v51;
    swift_slowDealloc(v42, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(a4, 2);
    swift_bridgeObjectRelease_n(a3, 2);
    swift_bridgeObjectRelease_n(a2, 2);
    sub_10000DC40((uint64_t)v18, &qword_1000D6170);
  }

  swift_beginAccess(v19, v55, 0, 0);
  Strong = swift_weakLoadStrong(v19);
  if (Strong)
  {
    v45 = Strong;
    sub_10008BFA4(v53, a2, a3, a4, a5);
    *(_QWORD *)&result = swift_release(v45).n128_u64[0];
  }
  return result;
}

uint64_t sub_10008BFA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  _BYTE v25[24];

  v11 = sub_10000D604(&qword_1000D6170);
  __chkstk_darwin(v11);
  v13 = &v25[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = (_QWORD *)(*(_QWORD *)(v5 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_homeName);
  v15 = v14[1];
  *v14 = a1;
  v14[1] = a2;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRelease(v15);
  v16 = *(_QWORD *)(v5 + 48);
  v17 = *(_QWORD *)(v16 + 48);
  *(_QWORD *)(v16 + 48) = a3;
  swift_bridgeObjectRetain(a3);
  swift_bridgeObjectRelease(v17);
  v18 = *(_QWORD *)(v5 + 48);
  v19 = *(_QWORD *)(v18 + 56);
  *(_QWORD *)(v18 + 56) = a4;
  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRelease(v19);
  v20 = *(_QWORD *)(v5 + 48);
  sub_10000E0F0(a5, (uint64_t)v13, &qword_1000D6170);
  v21 = v20 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_defaultRoomIndexPath;
  swift_beginAccess(v20 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_defaultRoomIndexPath, v25, 33, 0);
  swift_retain(v20);
  sub_100092A5C((uint64_t)v13, v21);
  swift_endAccess(v25);
  swift_release(v20);
  result = swift_unknownObjectWeakLoadStrong(v5 + 32);
  if (result)
  {
    v23 = result;
    sub_10006E7B0(2u);
    return swift_unknownObjectRelease(v23);
  }
  return result;
}

uint64_t sub_10008C114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, char *);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v10 = sub_10000D604(&qword_1000D6170);
  __chkstk_darwin(v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, char *))(a1 + 32);
  v13 = *(_QWORD *)(a1 + 40);
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v17 = v16;
  v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a3, &type metadata for String);
  v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a4, &type metadata for String);
  if (a5)
  {
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a5);
    v20 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v12, 0, 1, v20);
  }
  else
  {
    v21 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v12, 1, 1, v21);
  }
  swift_retain(v13);
  v14(v15, v17, v18, v19, v12);
  swift_release(v13);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v19);
  return sub_10000DC40((uint64_t)v12, &qword_1000D6170);
}

uint64_t sub_10008C27C(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v16, 0, 0);
  result = swift_weakLoadStrong(v1);
  if (result)
  {
    v4 = result;
    if (qword_1000D5670 != -1)
      swift_once(&qword_1000D5670, sub_100084DD8);
    v5 = type metadata accessor for Logger(0, v3);
    v6 = sub_10001118C(v5, (uint64_t)qword_1000D80F0);
    v7 = Logger.logObject.getter(v6);
    v9 = static os_log_type_t.default.getter(v7, v8);
    if (os_log_type_enabled(v7, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v9, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for Siri Enable", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }

    v11 = objc_msgSend(*(id *)(v4 + 80), "selectedSiriLanguageCode");
    if (v11)
    {
      v12 = v11;
      v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v15 = v14;

    }
    else
    {
      v13 = 0;
      v15 = 0;
    }
    sub_10008C3D4(v13, v15);
    swift_release(v4);
    return swift_bridgeObjectRelease(v15);
  }
  return result;
}

uint64_t sub_10008C3D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unsigned __int8 v7;
  uint64_t result;
  uint64_t v9;

  v3 = (_QWORD *)(*(_QWORD *)(v2 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_selectedSiriLanguageCode);
  v4 = v3[1];
  *v3 = a1;
  v3[1] = a2;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRelease(v4);
  v5 = *(_QWORD *)(v2 + 48);
  v6 = *(void **)(v2 + 80);
  swift_retain(v5);
  v7 = objc_msgSend(v6, "isJSEnabled");
  *(_BYTE *)(v5 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_jsEnabled) = v7;
  swift_release(v5);
  result = swift_unknownObjectWeakLoadStrong(v2 + 32);
  if (result)
  {
    v9 = result;
    sub_100092204(v2);
    return swift_unknownObjectRelease(v9);
  }
  return result;
}

double sub_10008C488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  double result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _BYTE v25[24];

  v7 = a4 + 16;
  swift_beginAccess(a4 + 16, v25, 0, 0);
  Strong = swift_weakLoadStrong(v7);
  if (Strong)
  {
    v11 = Strong;
    if (qword_1000D5670 != -1)
      swift_once(&qword_1000D5670, sub_100084DD8);
    v12 = type metadata accessor for Logger(0, v9);
    v13 = sub_10001118C(v12, (uint64_t)qword_1000D80F0);
    v14 = Logger.logObject.getter(v13);
    v16 = static os_log_type_t.default.getter(v14, v15);
    if (os_log_type_enabled(v14, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v16, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for SiriLanguage", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

    v18 = swift_unknownObjectWeakLoadStrong(v11 + 32);
    if (v18)
    {
      v19 = v18;
      v20 = *(_QWORD *)(v11 + 48);
      swift_retain(v11);
      swift_retain(v20);
      v21 = sub_10004F72C(a1);
      v22 = *(_QWORD *)(v20 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_availableSiriLanguages);
      *(_QWORD *)(v20 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_availableSiriLanguages) = v21;
      swift_release(v20);
      swift_bridgeObjectRelease(v22);
      v23 = (_QWORD *)(*(_QWORD *)(v11 + 48)
                     + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preferredSiriLanguageCode);
      v24 = v23[1];
      *v23 = a2;
      v23[1] = a3;
      swift_bridgeObjectRetain(a3);
      swift_bridgeObjectRelease(v24);
      sub_10006E7B0(0x16u);
      swift_release_n(v11, 2);
      swift_unknownObjectRelease(v19);
    }
    else
    {
      *(_QWORD *)&result = swift_release(v11).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_10008C644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, &type metadata for String);
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v9 = v8;
  swift_retain(v4);
  v5(v6, v7, v9);
  swift_release(v4);
  swift_bridgeObjectRelease(v6);
  return swift_bridgeObjectRelease(v9);
}

double sub_10008C6C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  double result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v14, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v5 = Strong;
    if (qword_1000D5670 != -1)
      swift_once(&qword_1000D5670, sub_100084DD8);
    v6 = type metadata accessor for Logger(0, v3);
    v7 = sub_10001118C(v6, (uint64_t)qword_1000D80F0);
    v8 = Logger.logObject.getter(v7);
    v10 = static os_log_type_t.default.getter(v8, v9);
    if (os_log_type_enabled(v8, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v10, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: promptForTermsAndConditionsV2Disagree", v11, 2u);
      swift_slowDealloc(v11, -1, -1);
    }

    v12 = swift_unknownObjectWeakLoadStrong(v5 + 32);
    if (v12)
    {
      v13 = v12;
      swift_retain(v5);
      sub_100058388(0, 1);
      swift_release_n(v5, 2);
      swift_unknownObjectRelease(v13);
    }
    else
    {
      *(_QWORD *)&result = swift_release(v5).n128_u64[0];
    }
  }
  return result;
}

double sub_10008C814(uint64_t a1, const char *a2, unsigned __int8 a3)
{
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  double result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v18, 0, 0);
  Strong = swift_weakLoadStrong(v5);
  if (Strong)
  {
    v9 = Strong;
    if (qword_1000D5670 != -1)
      swift_once(&qword_1000D5670, sub_100084DD8);
    v10 = type metadata accessor for Logger(0, v7);
    v11 = sub_10001118C(v10, (uint64_t)qword_1000D80F0);
    v12 = Logger.logObject.getter(v11);
    v14 = static os_log_type_t.default.getter(v12, v13);
    if (os_log_type_enabled(v12, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v14, a2, v15, 2u);
      swift_slowDealloc(v15, -1, -1);
    }

    v16 = swift_unknownObjectWeakLoadStrong(v9 + 32);
    if (v16)
    {
      v17 = v16;
      swift_retain(v9);
      sub_10006E7B0(a3);
      swift_release_n(v9, 2);
      swift_unknownObjectRelease(v17);
    }
    else
    {
      *(_QWORD *)&result = swift_release(v9).n128_u64[0];
    }
  }
  return result;
}

void sub_10008C95C(uint64_t a1, const char *a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[24];

  v5 = a1 + 16;
  if (qword_1000D5670 != -1)
    swift_once(&qword_1000D5670, sub_100084DD8);
  v6 = type metadata accessor for Logger(0, a2);
  v7 = sub_10001118C(v6, (uint64_t)qword_1000D80F0);
  v8 = Logger.logObject.getter(v7);
  v10 = static os_log_type_t.default.getter(v8, v9);
  if (os_log_type_enabled(v8, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v10, a2, v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }

  swift_beginAccess(v5, v16, 0, 0);
  Strong = swift_weakLoadStrong(v5);
  if (Strong)
  {
    v13 = Strong;
    v14 = swift_unknownObjectWeakLoadStrong(Strong + 32);
    swift_release(v13);
    if (v14)
    {
      sub_100071900(a3, v15);
      swift_unknownObjectRelease(v14);
    }
  }
}

double sub_10008CA8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t Strong;
  double result;
  uint64_t v18;
  _BYTE v19[24];

  v9 = a5 + 16;
  if (qword_1000D5670 != -1)
    swift_once(&qword_1000D5670, sub_100084DD8);
  v10 = type metadata accessor for Logger(0, a2);
  v11 = sub_10001118C(v10, (uint64_t)qword_1000D80F0);
  v12 = Logger.logObject.getter(v11);
  v14 = static os_log_type_t.default.getter(v12, v13);
  if (os_log_type_enabled(v12, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v14, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for SharedSettings", v15, 2u);
    swift_slowDealloc(v15, -1, -1);
  }

  swift_beginAccess(v9, v19, 0, 0);
  Strong = swift_weakLoadStrong(v9);
  if (Strong)
  {
    v18 = Strong;
    sub_10008CBC4(a1, a2, a3, a4);
    *(_QWORD *)&result = swift_release(v18).n128_u64[0];
  }
  return result;
}

uint64_t sub_10008CBC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unsigned __int8 v13;

  v7 = (_QWORD *)(*(_QWORD *)(v4 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_iCloudId);
  v8 = v7[1];
  *v7 = a1;
  v7[1] = a2;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRelease(v8);
  v9 = (_QWORD *)(*(_QWORD *)(v4 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_iTunesId);
  v10 = v9[1];
  *v9 = a3;
  v9[1] = a4;
  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRelease(v10);
  result = swift_unknownObjectWeakLoadStrong(v4 + 32);
  if (result)
  {
    v12 = result;
    if (IsAppleInternalBuild(result))
      v13 = 56;
    else
      v13 = 15;
    sub_10006E7B0(v13);
    return swift_unknownObjectRelease(v12);
  }
  return result;
}

uint64_t sub_10008CC80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = a3;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  if (!a2)
  {
    v6 = 0;
    v8 = 0;
    if (a3)
      goto LABEL_3;
LABEL_5:
    v9 = 0;
    goto LABEL_6;
  }
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v8 = v7;
  if (!v3)
    goto LABEL_5;
LABEL_3:
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v3 = v10;
LABEL_6:
  swift_retain(v4);
  v5(v6, v8, v9, v3);
  swift_release(v4);
  swift_bridgeObjectRelease(v3);
  return swift_bridgeObjectRelease(v8);
}

double sub_10008CD1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  double result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  void *v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v17, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v5 = Strong;
    if (qword_1000D5670 != -1)
      swift_once(&qword_1000D5670, sub_100084DD8);
    v6 = type metadata accessor for Logger(0, v3);
    v7 = sub_10001118C(v6, (uint64_t)qword_1000D80F0);
    v8 = Logger.logObject.getter(v7);
    v10 = static os_log_type_t.default.getter(v8, v9);
    if (os_log_type_enabled(v8, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v10, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for stereo role", v11, 2u);
      swift_slowDealloc(v11, -1, -1);
    }

    v12 = *(_QWORD *)(v5 + 48);
    v13 = *(void **)(v5 + 80);
    swift_retain(v12);
    v14 = objc_msgSend(v13, "stereoCounterpartColor");
    *(_BYTE *)(v12 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_stereoCounterpartColor) = v14;
    swift_release(v12);
    v15 = swift_unknownObjectWeakLoadStrong(v5 + 32);
    if (v15)
    {
      v16 = v15;
      swift_retain(v5);
      sub_10006E7B0(0x12u);
      swift_release_n(v5, 2);
      swift_unknownObjectRelease(v16);
    }
    else
    {
      *(_QWORD *)&result = swift_release(v5).n128_u64[0];
    }
  }
  return result;
}

double sub_10008CE90(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  double result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v26, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v7 = Strong;
    if (qword_1000D5670 != -1)
      swift_once(&qword_1000D5670, sub_100084DD8);
    v8 = type metadata accessor for Logger(0, v5);
    sub_10001118C(v8, (uint64_t)qword_1000D80F0);
    v9 = swift_bridgeObjectRetain_n(a1, 2);
    v10 = Logger.logObject.getter(v9);
    v12 = static os_log_type_t.default.getter(v10, v11);
    if (os_log_type_enabled(v10, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(12, -1);
      v14 = swift_slowAlloc(32, -1);
      v25 = v14;
      *(_DWORD *)v13 = 136315138;
      v15 = sub_100035CA4(0, (unint64_t *)&qword_1000D7718, HMAccessory_ptr);
      swift_bridgeObjectRetain(a1);
      v17 = Array.description.getter(v16, v15);
      v19 = v18;
      swift_bridgeObjectRelease(a1);
      v24 = sub_10003EF58(v17, v19, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25);
      swift_bridgeObjectRelease_n(a1, 2);
      swift_bridgeObjectRelease(v19);
      _os_log_impl((void *)&_mh_execute_header, v10, v12, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for stereo multiple: %s", v13, 0xCu);
      swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v14, -1, -1);
      swift_slowDealloc(v13, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a1, 2);
    }
    v20 = swift_unknownObjectWeakLoadStrong(v7 + 32);
    if (v20)
    {
      v21 = v20;
      v22 = *(_QWORD *)(v7 + 48);
      v23 = *(_QWORD *)(v22 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_availableAccessories);
      *(_QWORD *)(v22 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_availableAccessories) = a1;
      swift_bridgeObjectRetain(a1);
      swift_retain(v7);
      swift_bridgeObjectRelease(v23);
      sub_10006E7B0(0x14u);
      swift_release_n(v7, 2);
      swift_unknownObjectRelease(v21);
    }
    else
    {
      *(_QWORD *)&result = swift_release(v7).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_10008D0FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = sub_100035CA4(0, (unint64_t *)&qword_1000D7718, HMAccessory_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v5);
  swift_retain(v3);
  v4(v6);
  swift_release(v3);
  return swift_bridgeObjectRelease(v6);
}

double sub_10008D168(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  double result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _BYTE v17[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v17, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v7 = Strong;
    if (qword_1000D5670 != -1)
      swift_once(&qword_1000D5670, sub_100084DD8);
    v8 = type metadata accessor for Logger(0, v5);
    v9 = sub_10001118C(v8, (uint64_t)qword_1000D80F0);
    v10 = Logger.logObject.getter(v9);
    v12 = static os_log_type_t.default.getter(v10, v11);
    if (os_log_type_enabled(v10, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v13 = 67109120;
      v16 = a1 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, v17);
      _os_log_impl((void *)&_mh_execute_header, v10, v12, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt voice recognition after voice selection: %{BOOL}d", v13, 8u);
      swift_slowDealloc(v13, -1, -1);
    }

    v14 = swift_unknownObjectWeakLoadStrong(v7 + 32);
    if (v14)
    {
      v15 = v14;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_voiceRecognitionEnabled) = a1 & 1;
      swift_release(v7);
      swift_unknownObjectRelease(v15);
    }
    else
    {
      *(_QWORD *)&result = swift_release(v7).n128_u64[0];
    }
  }
  return result;
}

double sub_10008D2E0(char a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t Strong;
  uint64_t v11;
  double result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  int v28;
  _BYTE v29[24];

  v9 = a5 + 16;
  swift_beginAccess(a5 + 16, v29, 0, 0);
  Strong = swift_weakLoadStrong(v9);
  if (Strong)
  {
    v13 = Strong;
    if (qword_1000D5670 != -1)
      swift_once(&qword_1000D5670, sub_100084DD8);
    v14 = type metadata accessor for Logger(0, v11);
    v15 = sub_10001118C(v14, (uint64_t)qword_1000D80F0);
    v16 = Logger.logObject.getter(v15);
    v18 = static os_log_type_t.default.getter(v16, v17);
    if (os_log_type_enabled(v16, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v19 = 67109120;
      v28 = a1 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, v29);
      _os_log_impl((void *)&_mh_execute_header, v16, v18, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for Siri Voice Selectio: %{BOOL}d", v19, 8u);
      swift_slowDealloc(v19, -1, -1);
    }

    v20 = swift_unknownObjectWeakLoadStrong(v13 + 32);
    if (v20)
    {
      v21 = v20;
      v22 = *(_QWORD *)(v13 + 48);
      *(_BYTE *)(v22 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_allowsRandomVoiceSelection) = a1 & 1;
      v23 = (_QWORD *)(v22 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_preferredSiriLanguageCode);
      v24 = v23[1];
      *v23 = a2;
      v23[1] = a3;
      swift_retain(v13);
      swift_bridgeObjectRetain(a3);
      swift_bridgeObjectRelease(v24);
      v25 = *(_QWORD *)(v13 + 48);
      v26 = *(void **)(v25 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_sfSession);
      *(_QWORD *)(v25 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_sfSession) = a4;
      v27 = a4;

      sub_10006E7B0(0x13u);
      swift_release_n(v13, 2);
      swift_unknownObjectRelease(v21);
    }
    else
    {
      *(_QWORD *)&result = swift_release(v13).n128_u64[0];
    }
  }
  return result;
}

void sub_10008D4D0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, id);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, id))(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v10 = v9;
  swift_retain(v6);
  v11 = a4;
  v7(a2, v8, v10, v11);
  swift_release(v6);
  swift_bridgeObjectRelease(v10);

}

double sub_10008D558(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t Strong;
  double result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16[3];

  v5 = a3 + 16;
  if (qword_1000D5670 != -1)
    swift_once(&qword_1000D5670, sub_100084DD8);
  v6 = type metadata accessor for Logger(0, a2);
  sub_10001118C(v6, (uint64_t)qword_1000D80F0);
  v7 = swift_bridgeObjectRetain_n(a2, 2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v16[0] = v11;
    *(_DWORD *)v10 = 136315138;
    swift_bridgeObjectRetain(a2);
    v15 = sub_10003EF58(a1, a2, v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, v16);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for deviceColorFoundHandler: %s", v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  swift_beginAccess(v5, v16, 0, 0);
  Strong = swift_weakLoadStrong(v5);
  if (Strong)
  {
    v14 = Strong;
    sub_10008692C(a1, a2);
    *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  }
  return result;
}

uint64_t sub_10008D738(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v6 = v5;
  swift_retain(v2);
  v3(v4, v6);
  swift_release(v2);
  return swift_bridgeObjectRelease(v6);
}

void sub_10008D78C(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16[3];

  if (qword_1000D5670 != -1)
    swift_once(&qword_1000D5670, sub_100084DD8);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10001118C(v4, (uint64_t)qword_1000D80F0);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    *(_DWORD *)v8 = 136315138;
    v16[0] = v9;
    if ((a1 & 1) != 0)
      v10 = 0x73736563637553;
    else
      v10 = 1818845510;
    if ((a1 & 1) != 0)
      v11 = 0xE700000000000000;
    else
      v11 = 0xE400000000000000;
    v15 = sub_10003EF58(v10, v11, v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, v16);
    swift_bridgeObjectRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "HomePodSetupInteractor: registered homepod serial number with results %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }

  if ((a1 & 1) != 0)
  {
    v12 = a2 + 16;
    swift_beginAccess(v12, v16, 0, 0);
    Strong = swift_weakLoadStrong(v12);
    if (Strong)
    {
      v14 = Strong;
      sub_10008D964();
      swift_release(v14);
    }
  }
}

void sub_10008D964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  NSString v7;
  NSString v8;
  NSString v9;
  NSString v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void **v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  void ***v20;
  void **v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void **aBlock;
  uint64_t v28;
  void (*v29)(uint64_t, void *);
  void *v30;
  void *v31;
  uint64_t v32;

  v1 = v0;
  v2 = sub_100035CA4(0, &qword_1000D7088, AMSUIMarketingItemViewController_ptr);
  v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(v2), "createBagForSubProfile");
  if (v3)
  {
    v4 = v3;
    v5 = objc_allocWithZone((Class)AMSMarketingItemTask);
    v6 = v4;
    v7 = String._bridgeToObjectiveC()();
    v8 = String._bridgeToObjectiveC()();
    v9 = String._bridgeToObjectiveC()();
    v10 = String._bridgeToObjectiveC()();
    v11 = objc_msgSend(v5, "initWithBag:clientIdentifier:clientVersion:placement:serviceType:", v6, v7, v8, v9, v10);

    v12 = objc_msgSend((id)objc_opt_self(ACAccountStore), "ams_sharedAccountStore");
    v13 = objc_msgSend(v12, "ams_activeiTunesAccount");

    objc_msgSend(v11, "setAccount:", v13);
    if (qword_1000D5670 != -1)
      swift_once(&qword_1000D5670, sub_100084DD8);
    v15 = type metadata accessor for Logger(0, v14);
    sub_10001118C(v15, (uint64_t)qword_1000D80F0);
    v16 = (void **)v11;
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(12, -1);
      v20 = (void ***)swift_slowAlloc(8, -1);
      aBlock = v16;
      *(_DWORD *)v19 = 138412290;
      v21 = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v28);
      *v20 = v16;

      _os_log_impl((void *)&_mh_execute_header, v17, v18, "HomePodSetupInteractor: performing AMSMarketingItemTask: %@", v19, 0xCu);
      v22 = sub_10000D604(&qword_1000D5CC8);
      swift_arrayDestroy(v20, 1, v22);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v19, -1, -1);

    }
    else
    {

    }
    v23 = objc_msgSend(v16, "perform");
    v24 = swift_allocObject(&unk_1000C5A60, 24, 7);
    swift_weakInit(v24 + 16, v1);
    v31 = sub_100092734;
    v32 = v24;
    aBlock = _NSConcreteStackBlock;
    v28 = 1107296256;
    v29 = sub_10008E618;
    v30 = &unk_1000C5AC8;
    v25 = _Block_copy(&aBlock);
    swift_release(v32);
    objc_msgSend(v23, "addSuccessBlock:", v25);
    _Block_release(v25);
    v31 = sub_10008E61C;
    v32 = 0;
    aBlock = _NSConcreteStackBlock;
    v28 = 1107296256;
    v29 = sub_10008E618;
    v30 = &unk_1000C5AF0;
    v26 = _Block_copy(&aBlock);
    objc_msgSend(v23, "addErrorBlock:", v26);
    _Block_release(v26);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10008DD64(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t result;
  uint64_t v12;
  int v13;
  uint64_t v14;

  v3 = v2;
  if (qword_1000D5670 != -1)
    swift_once(&qword_1000D5670, sub_100084DD8);
  v5 = type metadata accessor for Logger(0, a2);
  v6 = sub_10001118C(v5, (uint64_t)qword_1000D80F0);
  v7 = Logger.logObject.getter(v6);
  v9 = static os_log_type_t.default.getter(v7, v8);
  if (os_log_type_enabled(v7, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v10 = 67109120;
    v13 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14);
    _os_log_impl((void *)&_mh_execute_header, v7, v9, "HomePodSetupInteractor: updateProgress event:%u", v10, 8u);
    swift_slowDealloc(v10, -1, -1);
  }

  result = swift_unknownObjectWeakLoadStrong(v3 + 32);
  if (result)
  {
    v12 = result;
    sub_1000901CC(v3, a1, result);
    return swift_unknownObjectRelease(v12);
  }
  return result;
}

uint64_t sub_10008DE98(uint64_t a1, uint64_t a2, const char *a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;

  v7 = v4;
  if (qword_1000D5670 != -1)
    swift_once(&qword_1000D5670, sub_100084DD8);
  v10 = type metadata accessor for Logger(0, a2);
  v11 = sub_10001118C(v10, (uint64_t)qword_1000D80F0);
  v12 = Logger.logObject.getter(v11);
  v14 = static os_log_type_t.default.getter(v12, v13);
  if (os_log_type_enabled(v12, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v15 = 67109120;
    v18 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19);
    _os_log_impl((void *)&_mh_execute_header, v12, v14, a3, v15, 8u);
    swift_slowDealloc(v15, -1, -1);
  }

  result = swift_unknownObjectWeakLoadStrong(v7 + 32);
  if (result)
  {
    v17 = result;
    a4(v7, a1, a2, result);
    return swift_unknownObjectRelease(v17);
  }
  return result;
}

void sub_10008DFE8(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  id v13;
  uint64_t v14;
  id v15;
  _QWORD *v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  Swift::String v23;
  unint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  NSString v35;
  NSString v36;
  unsigned __int8 v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint8_t *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t Strong;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  id v58;
  _QWORD *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;

  v4 = type metadata accessor for CharacterSet(0);
  v62 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v61 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D5670 != -1)
    swift_once(&qword_1000D5670, sub_100084DD8);
  v7 = type metadata accessor for Logger(0, v5);
  v8 = sub_10001118C(v7, (uint64_t)qword_1000D80F0);
  v9 = a1;
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v59 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v12 = 138412290;
    v65 = (uint64_t)v9;
    v13 = v9;
    v60 = v8;
    v14 = a2;
    v15 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66);
    v16 = v59;
    *v59 = v9;

    a2 = v14;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "HomePodSetupInteractor: AMSMarketingItemTask returned success with AMSMarketingItem: %@", v12, 0xCu);
    v17 = sub_10000D604(&qword_1000D5CC8);
    swift_arrayDestroy(v16, 1, v17);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {

  }
  v18 = objc_msgSend(v9, "templateID");
  if (!v18)
  {
    v39 = Logger.logObject.getter(0);
    v44 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v39, v44))
    {
LABEL_22:

      return;
    }
    v45 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v45 = 0;
    _os_log_impl((void *)&_mh_execute_header, v39, v44, "HomePodSetupInteractor: AMSMarketingItemTask no templateID", v45, 2u);
    v43 = v45;
LABEL_14:
    swift_slowDealloc(v43, -1, -1);
    goto LABEL_22;
  }
  v19 = v18;
  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v22 = v21;

  v23._countAndFlagsBits = 0x3A636973756DLL;
  v23._object = (void *)0xE600000000000000;
  if (String.hasPrefix(_:)(v23))
  {
    v65 = v20;
    v66 = v22;
    v63 = 58;
    v64 = 0xE100000000000000;
    v24 = sub_100038B98();
    v25 = (_QWORD *)StringProtocol.components<A>(separatedBy:)(&v63, &type metadata for String, &type metadata for String, v24, v24);
    v26 = v25;
    if (v25[2] == 2)
    {
      v27 = v25[6];
      v28 = v25[7];
      swift_bridgeObjectRetain(v28);
      swift_bridgeObjectRelease(v26);
      v65 = v27;
      v66 = v28;
      v29 = objc_msgSend((id)objc_opt_self(NSCharacterSet), "whitespaceCharacterSet");
      v60 = v20;
      v30 = v61;
      static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

      StringProtocol.trimmingCharacters(in:)(v30, &type metadata for String, v24);
      v32 = v31;
      v33 = v30;
      v34 = v60;
      (*(void (**)(char *, uint64_t))(v62 + 8))(v33, v4);
      swift_bridgeObjectRelease(v28);
      v35 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v32);
      v36 = String._bridgeToObjectiveC()();
      v37 = objc_msgSend(v35, "isEqual:", v36);

      if ((v37 & 1) != 0)
      {
        v38 = swift_bridgeObjectRetain(v22);
        v39 = Logger.logObject.getter(v38);
        v40 = static os_log_type_t.error.getter();
        if (!os_log_type_enabled(v39, v40))
        {

          swift_bridgeObjectRelease_n(v22, 2);
          return;
        }
        v41 = (uint8_t *)swift_slowAlloc(12, -1);
        v42 = swift_slowAlloc(32, -1);
        v65 = v42;
        *(_DWORD *)v41 = 136315138;
        swift_bridgeObjectRetain(v22);
        v63 = sub_10003EF58(v34, v22, &v65);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64);
        swift_bridgeObjectRelease_n(v22, 3);
        _os_log_impl((void *)&_mh_execute_header, v39, v40, "HomePodSetupInteractor: Detected standard upsell, because template is '%s'", v41, 0xCu);
        swift_arrayDestroy(v42, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v42, -1, -1);
        v43 = v41;
        goto LABEL_14;
      }
    }
    else
    {
      swift_bridgeObjectRelease(v25);
    }
  }
  v46 = swift_bridgeObjectRelease(v22);
  v47 = Logger.logObject.getter(v46);
  v48 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v47, v48))
  {
    v49 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v49 = 0;
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "HomePodSetupInteractor: Able to get a marketing item.", v49, 2u);
    swift_slowDealloc(v49, -1, -1);
  }

  swift_beginAccess(a2 + 16, &v65, 0, 0);
  Strong = swift_weakLoadStrong(a2 + 16);
  if (Strong)
  {
    v51 = Strong;
    v52 = *(_QWORD *)(Strong + 48);
    swift_retain(v52);
    swift_release(v51);
    v53 = *(void **)(v52 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_amsMarketingItem);
    *(_QWORD *)(v52 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_amsMarketingItem) = v9;
    v54 = v9;
    swift_release(v52);

  }
  swift_beginAccess(a2 + 16, &v63, 0, 0);
  v55 = swift_weakLoadStrong(a2 + 16);
  if (v55)
  {
    v56 = v55;
    v57 = objc_allocWithZone((Class)type metadata accessor for HomePodSetupAMSUpsellViewController(0));
    v58 = sub_1000550CC(v9);
    v39 = *(NSObject **)(v56 + 136);
    *(_QWORD *)(v56 + 136) = v58;
    swift_release(v56);
    goto LABEL_22;
  }
}

void sub_10008E61C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  NSObject *oslog;
  uint64_t v12;
  _QWORD v13[3];
  _BYTE v14[8];
  uint64_t v15;

  if (qword_1000D5670 != -1)
    swift_once(&qword_1000D5670, sub_100084DD8);
  v3 = type metadata accessor for Logger(0, a2);
  sub_10001118C(v3, (uint64_t)qword_1000D80F0);
  swift_errorRetain(a1);
  v4 = swift_errorRetain(a1);
  oslog = Logger.logObject.getter(v4);
  v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v15 = v7;
    *(_DWORD *)v6 = 136315138;
    swift_getErrorValue(a1, v14, v13);
    v8 = Error.localizedDescription.getter(v13[1], v13[2]);
    v10 = v9;
    v12 = sub_10003EF58(v8, v9, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, v13);
    swift_bridgeObjectRelease(v10);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, oslog, v5, "HomePodSetupInteractor: AMSMarketingItemTask request failed with error: %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);

  }
}

BOOL sub_10008E7F4(unsigned __int8 a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  int v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v3 = a1;
  v4 = static Hasher._hash(seed:bytes:count:)(*(_QWORD *)(a2 + 40), a1, 1);
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(unsigned __int8 *)(v8 + v6) == v3)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(unsigned __int8 *)(v8 + v11);
    result = v12 == v3;
    if (v12 == v3)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

void sub_10008E8C0(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, uint64_t a7)
{
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t Strong;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  _QWORD *v36;
  NSObject *v37;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v39;
  NSObject *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t ObjectType;
  NSObject *v51;
  uint64_t v52[3];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55[3];

  sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin();
  v12 = (char *)&v52[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for HomePodSetupViewModel(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin();
  v17 = (char *)&v52[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a5)
  {
    if (qword_1000D5670 != -1)
      swift_once(&qword_1000D5670, sub_100084DD8);
    v18 = type metadata accessor for Logger(0, v15);
    sub_10001118C(v18, (uint64_t)qword_1000D80F0);
    swift_errorRetain(a5);
    v19 = swift_errorRetain(a5);
    v51 = Logger.logObject.getter(v19);
    v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v51, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(12, -1);
      v22 = swift_slowAlloc(32, -1);
      v55[0] = v22;
      *(_DWORD *)v21 = 136315138;
      v53 = a5;
      v23 = sub_10000D604((uint64_t *)&unk_1000D7420);
      v24 = Optional.debugDescription.getter(v23);
      v26 = v25;
      v53 = sub_10003EF58(v24, v25, v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54);
      swift_bridgeObjectRelease(v26);
      swift_errorRelease(a5);
      swift_errorRelease(a5);
      _os_log_impl((void *)&_mh_execute_header, v51, v20, "Could not find asset: %s", v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);
    }
    else
    {
      swift_errorRelease(a5);
      swift_errorRelease(a5);
    }
    goto LABEL_6;
  }
  if (qword_1000D5670 != -1)
    swift_once(&qword_1000D5670, sub_100084DD8);
  v27 = type metadata accessor for Logger(0, v15);
  sub_10001118C(v27, (uint64_t)qword_1000D80F0);
  v28 = ((uint64_t (*)(void))Logger.logObject.getter)();
  v29 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc(5, -1);
    *(_DWORD *)v30 = 16777472;
    LOBYTE(v55[0]) = a6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v55, (char *)v55 + 1);
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "Finished single stereo image lookup for %hhu", v30, 5u);
    swift_slowDealloc(v30, -1, -1);
  }

  if (a1)
  {
    v31 = a7 + 16;
    swift_beginAccess(a7 + 16, v55, 0, 0);
    Strong = swift_weakLoadStrong(a7 + 16);
    v51 = a1;
    if (Strong)
    {
      v33 = Strong;
      v34 = *(_QWORD *)(Strong + 48);
      v35 = a1;
      swift_retain(v34);
      swift_release(v33);
      v36 = (_QWORD *)(v34 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_assetBundles);
      swift_beginAccess(v34 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_assetBundles, &v53, 33, 0);
      v37 = v35;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v36);
      v52[0] = *v36;
      *v36 = 0x8000000000000000;
      sub_10004C268((uint64_t)v37, a6, isUniquelyReferenced_nonNull_native);
      v39 = *v36;
      *v36 = v52[0];
      swift_bridgeObjectRelease(v39);
      swift_endAccess(&v53);
      swift_release(v34);
    }
    else
    {
      v40 = a1;
    }
    swift_beginAccess(v31, &v53, 0, 0);
    v41 = swift_weakLoadStrong(v31);
    if (!v41)
    {
LABEL_6:

      return;
    }
    v42 = v41;
    v43 = swift_unknownObjectWeakLoadStrong(v41 + 32);
    swift_release(v42);
    v44 = v51;
    if (v43)
    {
      v45 = v43 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_viewModel;
      swift_beginAccess(v43 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_viewModel, v52, 0, 0);
      sub_10000E0F0(v45, (uint64_t)v12, (uint64_t *)&unk_1000D6EC0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
      {
        sub_10000DC40((uint64_t)v12, (uint64_t *)&unk_1000D6EC0);
      }
      else
      {
        sub_1000148AC((uint64_t)v12, (uint64_t)v17);
        v46 = swift_unknownObjectWeakLoadStrong(v43 + 16);
        if (v46)
        {
          v48 = v46;
          v49 = *(_QWORD *)(v43 + 24);
          ObjectType = swift_getObjectType(v46, v47);
          (*(void (**)(uint64_t, _UNKNOWN **, char *, uint64_t, uint64_t))(v49 + 32))(v43, &off_1000C4868, v17, ObjectType, v49);
          swift_unknownObjectRelease(v48);
        }
        sub_1000148F0((uint64_t)v17);
      }
      swift_unknownObjectRelease(v43);
    }

  }
}

void sub_10008EDC4(NSObject *a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t Strong;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  _QWORD *v34;
  NSObject *v35;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v37;
  NSObject *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t ObjectType;
  NSObject *v49;
  uint64_t v50[3];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53[3];

  sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin();
  v9 = (char *)&v50[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for HomePodSetupViewModel(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin();
  v14 = (char *)&v50[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if (qword_1000D5670 != -1)
      swift_once(&qword_1000D5670, sub_100084DD8);
    v15 = type metadata accessor for Logger(0, v12);
    sub_10001118C(v15, (uint64_t)qword_1000D80F0);
    swift_errorRetain(a2);
    v16 = swift_errorRetain(a2);
    v49 = Logger.logObject.getter(v16);
    v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v49, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(12, -1);
      v19 = swift_slowAlloc(32, -1);
      v53[0] = v19;
      *(_DWORD *)v18 = 136315138;
      v51 = a2;
      v20 = sub_10000D604((uint64_t *)&unk_1000D7420);
      v21 = Optional.debugDescription.getter(v20);
      v23 = v22;
      v51 = sub_10003EF58(v21, v22, v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52);
      swift_bridgeObjectRelease(v23);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v49, v17, "Could not download asset: %s", v18, 0xCu);
      swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v18, -1, -1);
    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);
    }
    goto LABEL_6;
  }
  if (qword_1000D5670 != -1)
    swift_once(&qword_1000D5670, sub_100084DD8);
  v24 = type metadata accessor for Logger(0, v12);
  v25 = sub_10001118C(v24, (uint64_t)qword_1000D80F0);
  v26 = Logger.logObject.getter(v25);
  v27 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc(5, -1);
    *(_DWORD *)v28 = 16777472;
    LOBYTE(v53[0]) = a3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v53, (char *)v53 + 1);
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Finished download of single stereo image lookup for %hhu", v28, 5u);
    swift_slowDealloc(v28, -1, -1);
  }

  if (a1)
  {
    v29 = a4 + 16;
    swift_beginAccess(a4 + 16, v53, 0, 0);
    Strong = swift_weakLoadStrong(a4 + 16);
    v49 = a1;
    if (Strong)
    {
      v31 = Strong;
      v32 = *(_QWORD *)(Strong + 48);
      v33 = a1;
      swift_retain(v32);
      swift_release(v31);
      v34 = (_QWORD *)(v32 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_assetBundles);
      swift_beginAccess(v32 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_assetBundles, &v51, 33, 0);
      v35 = v33;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v34);
      v50[0] = *v34;
      *v34 = 0x8000000000000000;
      sub_10004C268((uint64_t)v35, a3, isUniquelyReferenced_nonNull_native);
      v37 = *v34;
      *v34 = v50[0];
      swift_bridgeObjectRelease(v37);
      swift_endAccess(&v51);
      swift_release(v32);
    }
    else
    {
      v38 = a1;
    }
    swift_beginAccess(v29, &v51, 0, 0);
    v39 = swift_weakLoadStrong(v29);
    if (!v39)
    {
LABEL_6:

      return;
    }
    v40 = v39;
    v41 = swift_unknownObjectWeakLoadStrong(v39 + 32);
    swift_release(v40);
    v42 = v49;
    if (v41)
    {
      v43 = v41 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_viewModel;
      swift_beginAccess(v41 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_viewModel, v50, 0, 0);
      sub_10000E0F0(v43, (uint64_t)v9, (uint64_t *)&unk_1000D6EC0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
      {
        sub_10000DC40((uint64_t)v9, (uint64_t *)&unk_1000D6EC0);
      }
      else
      {
        sub_1000148AC((uint64_t)v9, (uint64_t)v14);
        v44 = swift_unknownObjectWeakLoadStrong(v41 + 16);
        if (v44)
        {
          v46 = v44;
          v47 = *(_QWORD *)(v41 + 24);
          ObjectType = swift_getObjectType(v44, v45);
          (*(void (**)(uint64_t, _UNKNOWN **, char *, uint64_t, uint64_t))(v47 + 32))(v41, &off_1000C4868, v14, ObjectType, v47);
          swift_unknownObjectRelease(v46);
        }
        sub_1000148F0((uint64_t)v14);
      }
      swift_unknownObjectRelease(v41);
    }

  }
}

void sub_10008F2C8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  void (*v9)(void *, uint64_t, uint64_t, uint64_t, void *);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;

  v9 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, void *))(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v12 = v11;
  swift_retain(v8);
  v14 = a2;
  v13 = a5;
  v9(a2, v10, v12, a4, a5);
  swift_release(v8);
  swift_bridgeObjectRelease(v12);

}

uint64_t sub_10008F36C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10008F37C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10008F384(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1;
  v3 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0)
    v3 = 11;
  v4 = String.subscript.getter(15, v3 | (v2 << 16), a1, a2);
  v6 = v5;
  v9 = sub_10008F400(v4, v7, v8, v5);
  swift_bridgeObjectRelease(v6);
  return v9;
}

uint64_t sub_10008F400(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v5;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[5];

  v5 = a3;
  if ((a4 & 0x1000000000000000) != 0)
  {
    v12 = sub_10008F544(a1, a2, a3, a4);
    if (v12)
    {
      v9 = v12;
      v8 = (unint64_t)sub_10003F3E8(v12, 0);
      v5 = sub_10008F630((unint64_t)v15, v8 + 32, v9, a1, a2, v5, a4);
      v13 = v15[3];
      swift_bridgeObjectRetain(a4);
      swift_bridgeObjectRelease(v13);
      if (v5 != v9)
      {
        __break(1u);
        goto LABEL_11;
      }
    }
    else
    {
      v8 = (unint64_t)_swiftEmptyArrayStorage;
    }
    v14 = static String._uncheckedFromUTF8(_:)(v8 + 32, *(_QWORD *)(v8 + 16));
    swift_release(v8);
    return v14;
  }
  else
  {
    v8 = a1 >> 16;
    v9 = a2 >> 16;
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
      {
        v10 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
LABEL_5:
        v10 += v8;
        return static String._uncheckedFromUTF8(_:)(v10, v9 - v8);
      }
LABEL_11:
      v10 = _StringObject.sharedUTF8.getter(v5, a4);
      if (!v10)
        return static String._uncheckedFromUTF8(_:)(v10, v9 - v8);
      goto LABEL_5;
    }
    v15[0] = a3;
    v15[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return static String._uncheckedFromUTF8(_:)((char *)v15 + v8, v9 - v8);
  }
}

unint64_t sub_10008F544(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_10003F44C(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_10003F44C(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return String.UTF8View._foreignDistance(from:to:)(v7, a2, a3, a4);
  }
  __break(1u);
  return result;
}

unint64_t sub_10008F630(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_10003F44C(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = String.UTF8View._foreignSubscript(position:)();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = _StringObject.sharedUTF8.getter(a6, a7);
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_10003F44C(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = String.UTF8View._foreignIndex(after:)(v12, a6, a7);
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_10008F840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unsigned __int16 v12;
  uint64_t v14;
  uint64_t v15;

  v14 = a1;
  v15 = a2;
  swift_bridgeObjectRetain(a2);
  v4 = String.init<A>(_:)(&v14, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
  v6 = v4;
  v7 = v5;
  if ((v5 & 0x1000000000000000) == 0)
  {
    if ((v5 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v9 = HIBYTE(v7) & 0xF;
    v14 = v6;
    v15 = v7 & 0xFFFFFFFFFFFFFFLL;
    v8 = (unsigned __int8 *)&v14;
    goto LABEL_7;
  }
  v6 = sub_10008F384(v4, v5);
  v11 = v10;
  swift_bridgeObjectRelease(v7);
  v7 = v11;
  if ((v11 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v6 & 0x1000000000000000) != 0)
  {
    v8 = (unsigned __int8 *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v9 = v6 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v8 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v6, v7);
  }
LABEL_7:
  v12 = (unsigned __int16)sub_100048A94(v8, v9, a3);
  swift_bridgeObjectRelease(v7);
  return v12 & 0x1FF;
}

uint64_t sub_10008F920(_BYTE *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  v6 = *v2;
  v7 = static Hasher._hash(seed:bytes:count:)(*(_QWORD *)(v6 + 40), a2, 1);
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v15 = *v3;
    *v3 = 0x8000000000000000;
    sub_10008FCB4(a2, v9, isUniquelyReferenced_nonNull_native);
    v14 = *v3;
    *v3 = v15;
    swift_bridgeObjectRelease(v14);
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(unsigned __int8 *)(v10 + v9) != a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(unsigned __int8 *)(v10 + v9) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_10008FA20(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_10000D604(&qword_1000D8500);
  result = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = result;
  if (*(_QWORD *)(v3 + 16))
  {
    v29 = v2;
    v7 = 0;
    v8 = (_QWORD *)(v3 + 56);
    v9 = 1 << *(_BYTE *)(v3 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v3 + 56);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 56;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v7 << 6);
      }
      else
      {
        v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v17 >= v12)
          goto LABEL_36;
        v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          v7 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_36;
          v18 = v8[v7];
          if (!v18)
          {
            v7 = v17 + 2;
            if (v17 + 2 >= v12)
              goto LABEL_36;
            v18 = v8[v7];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_36:
                v28 = 1 << *(_BYTE *)(v3 + 32);
                if (v28 > 63)
                  bzero((void *)(v3 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v28;
                v2 = v29;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v7 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v7 >= v12)
                    goto LABEL_36;
                  v18 = v8[v7];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v7 = v19;
            }
          }
        }
LABEL_26:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      v20 = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v16);
      result = static Hasher._hash(seed:bytes:count:)(*(_QWORD *)(v6 + 40), v20, 1);
      v21 = -1 << *(_BYTE *)(v6 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v26 = v23 == v25;
          if (v23 == v25)
            v23 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v23);
        }
        while (v27 == -1);
        v14 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_BYTE *)(*(_QWORD *)(v6 + 48) + v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release(v3);
  *v2 = v6;
  return result;
}

uint64_t sub_10008FCB4(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_10008FA20(v8);
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_10008FDD8();
      goto LABEL_14;
    }
    sub_10008FF68(v8);
  }
  v9 = *v3;
  result = static Hasher._hash(seed:bytes:count:)(*(_QWORD *)(*v3 + 40), v5, 1);
  v10 = -1 << *(_BYTE *)(v9 + 32);
  a2 = result & ~v10;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v11 = *(_QWORD *)(v9 + 48);
    if (*(unsigned __int8 *)(v11 + a2) == (_DWORD)v5)
    {
LABEL_13:
      result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for UInt8);
      __break(1u);
    }
    else
    {
      v12 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v12;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(unsigned __int8 *)(v11 + a2) == (_DWORD)v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v13 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v13 + 48) + a2) = v5;
  v14 = *(_QWORD *)(v13 + 16);
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    *(_QWORD *)(v13 + 16) = v16;
  return result;
}

void *sub_10008FDD8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_10000D604(&qword_1000D8500);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_10008FF68(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t *v28;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_10000D604(&qword_1000D8500);
  result = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = result;
  if (!*(_QWORD *)(v3 + 16))
  {
    result = swift_release(v3);
LABEL_38:
    *v2 = v6;
    return result;
  }
  v28 = v2;
  v7 = 0;
  v8 = v3 + 56;
  v9 = 1 << *(_BYTE *)(v3 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v7 << 6);
      goto LABEL_27;
    }
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      v7 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v7);
      if (!v18)
      {
        v7 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v7);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_27:
    v20 = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v16);
    result = static Hasher._hash(seed:bytes:count:)(*(_QWORD *)(v6 + 40), v20, 1);
    v21 = -1 << *(_BYTE *)(v6 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v13 + 8 * v23);
      }
      while (v27 == -1);
      v14 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_BYTE *)(*(_QWORD *)(v6 + 48) + v14) = v20;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_36:
    result = swift_release(v3);
    v2 = v28;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v7 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1000901CC(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  const char *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[3];

  v6 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100092BEC(a2);
  v11 = String.init(cString:)(v9);
  v12 = v10;
  if (qword_1000D5638 != -1)
    swift_once(&qword_1000D5638, sub_100069F3C);
  v13 = type metadata accessor for Logger(0, v10);
  sub_10001118C(v13, (uint64_t)qword_1000D7720);
  swift_retain_n(a3, 2);
  swift_bridgeObjectRetain(v12);
  v15 = Logger.logObject.getter(v14);
  v17 = static os_log_type_t.default.getter(v15, v16);
  if (os_log_type_enabled(v15, v17))
  {
    v18 = swift_slowAlloc(22, -1);
    v19 = swift_slowAlloc(64, -1);
    v38 = a1;
    v20 = v19;
    v40[0] = v19;
    *(_DWORD *)v18 = 136315394;
    swift_bridgeObjectRetain(v12);
    v39 = sub_10003EF58(v11, v12, v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, v40);
    swift_bridgeObjectRelease_n(v12, 3);
    *(_WORD *)(v18 + 12) = 2080;
    v21 = sub_100069924(*(_BYTE *)(a3 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state));
    v23 = v22;
    v39 = sub_10003EF58(v21, v22, v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, v40);
    swift_release_n(a3, 2);
    swift_bridgeObjectRelease(v23);
    _os_log_impl((void *)&_mh_execute_header, v15, v17, "<loom:ViewService:matchHomePodSetupPresenter> HomePodSetupPresenter interactor: setting up event = %s | state = %s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy(v20, 2, (char *)&type metadata for Any + 8);
    v24 = v20;
    a1 = v38;
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v18, -1, -1);

  }
  else
  {

    swift_release_n(a3, 2);
    swift_bridgeObjectRelease_n(v12, 2);
  }
  *(_DWORD *)(*(_QWORD *)(a1 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_progressEvent) = a2;
  v25 = OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state;
  v26 = sub_100069924(*(_BYTE *)(a3 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state));
  if (v26 == 0x73736572676F7270 && v27 == 0xEA00000000004955)
  {
    swift_bridgeObjectRelease(0xEA00000000004955);
  }
  else
  {
    v29 = v27;
    v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v27, 0x73736572676F7270, 0xEA00000000004955, 0);
    swift_bridgeObjectRelease(v29);
    if ((v30 & 1) == 0)
      sub_10006E7B0(3u);
  }
  v31 = *(_QWORD *)(a1 + 48);
  v32 = *(_BYTE *)(a3 + v25);
  v33 = swift_retain(v31);
  LOBYTE(v40[0]) = 0;
  sub_10001AD98(v33, v32);
  swift_release(v31);
  v34 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v8, 0, 1, v34);
  v35 = a3 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_viewModel;
  swift_beginAccess(a3 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_viewModel, v40, 33, 0);
  sub_1000727A8((uint64_t)v8, v35);
  swift_endAccess(v40);
  sub_10006A4C0();
  return sub_10000DC40((uint64_t)v8, (uint64_t *)&unk_1000D6EC0);
}

uint64_t sub_100090574(uint64_t a1, int a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  const char *v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  int v44;
  char *v45;
  uint64_t v46;
  uint64_t v47[3];

  v8 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100092BEC(a2);
  v13 = String.init(cString:)(v11);
  v14 = v12;
  if (qword_1000D5638 != -1)
    swift_once(&qword_1000D5638, sub_100069F3C);
  v15 = type metadata accessor for Logger(0, v12);
  sub_10001118C(v15, (uint64_t)qword_1000D7720);
  swift_bridgeObjectRetain_n(a3, 2);
  swift_retain_n(a4, 2);
  swift_bridgeObjectRetain(v14);
  v17 = Logger.logObject.getter(v16);
  v19 = static os_log_type_t.default.getter(v17, v18);
  if (os_log_type_enabled(v17, (os_log_type_t)v19))
  {
    v42 = v19;
    v43 = a1;
    v44 = a2;
    v45 = v10;
    v20 = swift_slowAlloc(32, -1);
    v41 = swift_slowAlloc(96, -1);
    v47[0] = v41;
    *(_DWORD *)v20 = 136315650;
    swift_bridgeObjectRetain(v14);
    v46 = sub_10003EF58(v13, v14, v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, v47);
    swift_bridgeObjectRelease_n(v14, 3);
    *(_WORD *)(v20 + 12) = 2080;
    v21 = sub_100069924(*(_BYTE *)(a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state));
    v23 = v22;
    v46 = sub_10003EF58(v21, v22, v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, v47);
    swift_release_n(a4, 2);
    swift_bridgeObjectRelease(v23);
    *(_WORD *)(v20 + 22) = 2080;
    v24 = a3;
    if (!a3)
      v24 = sub_10000C35C((uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRetain(a3);
    v25 = Dictionary.description.getter(v24, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
    v27 = v26;
    swift_bridgeObjectRelease(v24);
    v46 = sub_10003EF58(v25, v27, v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, v47);
    swift_bridgeObjectRelease_n(a3, 2);
    swift_bridgeObjectRelease(v27);
    _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v42, "<loom:ViewService:matchHomePodSetupPresenter> HomePodSetupPresenter interactor: setting up event = %s | state = %s | dict = %s", (uint8_t *)v20, 0x20u);
    v28 = v41;
    swift_arrayDestroy(v41, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v20, -1, -1);

    v10 = v45;
    a2 = v44;
    a1 = v43;
  }
  else
  {

    swift_bridgeObjectRelease_n(a3, 2);
    swift_release_n(a4, 2);
    swift_bridgeObjectRelease_n(v14, 2);
  }
  *(_DWORD *)(*(_QWORD *)(a1 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_progressEvent) = a2;
  v29 = OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state;
  v30 = sub_100069924(*(_BYTE *)(a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state));
  v32 = v31;
  if (v30 == 0xD000000000000016 && v31 == 0x800000010009C9C0)
  {
    swift_bridgeObjectRelease(0x800000010009C9C0);
  }
  else
  {
    v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v30, v31, 0xD000000000000016, 0x800000010009C9C0, 0);
    swift_bridgeObjectRelease(v32);
    if ((v33 & 1) == 0)
      sub_10006E7B0(4u);
  }
  v34 = *(_QWORD *)(a1 + 48);
  v35 = *(_BYTE *)(a4 + v29);
  swift_retain(v34);
  v36 = a3;
  if (!a3)
    v36 = sub_10000C35C((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRetain(a3);
  LOBYTE(v47[0]) = 0;
  sub_10001AD98(v34, v35);
  swift_bridgeObjectRelease(v36);
  swift_release(v34);
  v37 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v10, 0, 1, v37);
  v38 = a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_viewModel;
  swift_beginAccess(a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_viewModel, v47, 33, 0);
  sub_1000727A8((uint64_t)v10, v38);
  swift_endAccess(v47);
  sub_10006A4C0();
  return sub_10000DC40((uint64_t)v10, (uint64_t *)&unk_1000D6EC0);
}

uint64_t sub_100090A14(uint64_t a1, int a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  const char *v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  char v41;
  unsigned __int8 v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  char *v47;
  uint64_t v48;
  _QWORD v49[2];
  uint64_t v50[5];
  __int128 v51;
  __int128 v52;

  v8 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v8);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100092BEC(a2);
  v13 = String.init(cString:)(v11);
  v14 = v12;
  if (qword_1000D5638 != -1)
    swift_once(&qword_1000D5638, sub_100069F3C);
  v15 = type metadata accessor for Logger(0, v12);
  sub_10001118C(v15, (uint64_t)qword_1000D7720);
  swift_bridgeObjectRetain_n(a3, 2);
  swift_retain_n(a4, 2);
  swift_bridgeObjectRetain(v14);
  v17 = Logger.logObject.getter(v16);
  v19 = static os_log_type_t.default.getter(v17, v18);
  if (os_log_type_enabled(v17, v19))
  {
    v45 = a1;
    v46 = a2;
    v47 = v10;
    v20 = swift_slowAlloc(32, -1);
    v44 = swift_slowAlloc(96, -1);
    v50[0] = v44;
    *(_DWORD *)v20 = 136315650;
    swift_bridgeObjectRetain(v14);
    *(_QWORD *)&v51 = sub_10003EF58(v13, v14, v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, (char *)&v51 + 8);
    swift_bridgeObjectRelease_n(v14, 3);
    *(_WORD *)(v20 + 12) = 2080;
    v21 = sub_100069924(*(_BYTE *)(a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state));
    v23 = v22;
    *(_QWORD *)&v51 = sub_10003EF58(v21, v22, v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, (char *)&v51 + 8);
    v48 = a4;
    swift_release_n(a4, 2);
    swift_bridgeObjectRelease(v23);
    *(_WORD *)(v20 + 22) = 2080;
    v24 = a3;
    if (!a3)
      v24 = sub_10000C35C((uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRetain(a3);
    v25 = Dictionary.description.getter(v24, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
    v27 = v26;
    swift_bridgeObjectRelease(v24);
    *(_QWORD *)&v51 = sub_10003EF58(v25, v27, v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, (char *)&v51 + 8);
    swift_bridgeObjectRelease_n(a3, 2);
    swift_bridgeObjectRelease(v27);
    _os_log_impl((void *)&_mh_execute_header, v17, v19, "<loom:ViewService:matchHomePodSetupPresenter> HomePodSetupPresenter interactor: setting up event = %s | state = %s | dict = %s", (uint8_t *)v20, 0x20u);
    v28 = v44;
    swift_arrayDestroy(v44, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v20, -1, -1);

    v10 = v47;
    a4 = v48;
    a1 = v45;
  }
  else
  {

    swift_bridgeObjectRelease_n(a3, 2);
    swift_release_n(a4, 2);
    swift_bridgeObjectRelease_n(v14, 2);
  }
  if (!a3)
  {
    v35 = *(_QWORD *)(a1 + 48);
    v36 = *(_BYTE *)(a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state);
    swift_retain(v35);
    v37 = sub_10000C35C((uint64_t)_swiftEmptyArrayStorage);
LABEL_23:
    swift_bridgeObjectRetain(a3);
    LOBYTE(v50[0]) = 0;
    sub_10001AD98(v35, v36);
    swift_bridgeObjectRelease(v37);
    swift_release(v35);
    v38 = type metadata accessor for HomePodSetupViewModel(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v10, 0, 1, v38);
    v39 = a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_viewModel;
    swift_beginAccess(a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_viewModel, v50, 33, 0);
    sub_1000727A8((uint64_t)v10, v39);
    swift_endAccess(v50);
    sub_10006A4C0();
    return sub_10000DC40((uint64_t)v10, (uint64_t *)&unk_1000D6EC0);
  }
  v49[0] = 0x655F64615F6473;
  v49[1] = 0xE700000000000000;
  AnyHashable.init<A>(_:)(v50, v49, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a3 + 16) && (v29 = sub_10004A78C((uint64_t)v50), (v30 & 1) != 0))
  {
    sub_10000DB98(*(_QWORD *)(a3 + 56) + 32 * v29, (uint64_t)&v51);
  }
  else
  {
    v51 = 0u;
    v52 = 0u;
  }
  sub_10000DAE8((uint64_t)v50);
  if (!*((_QWORD *)&v52 + 1))
  {
    sub_10000DC40((uint64_t)&v51, &qword_1000D5820);
    goto LABEL_22;
  }
  if ((swift_dynamicCast(v49, &v51, (char *)&type metadata for Any + 8, &type metadata for UInt, 6) & 1) == 0)
  {
LABEL_22:
    v35 = *(_QWORD *)(a1 + 48);
    v36 = *(_BYTE *)(a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state);
    swift_retain(v35);
    v37 = a3;
    goto LABEL_23;
  }
  v31 = v49[0];
  if (!HIDWORD(v49[0]))
  {
    v32 = sub_100069924(*(_BYTE *)(a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state));
    v34 = v33;
    if (v31 == 5)
    {
      if (v32 == 0x73736572676F7270 && v33 == 0xEA00000000004955)
      {
        swift_bridgeObjectRelease(0xEA00000000004955);
        goto LABEL_22;
      }
      v41 = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v33, 0x73736572676F7270, 0xEA00000000004955, 0);
      swift_bridgeObjectRelease(v34);
      if ((v41 & 1) != 0)
        goto LABEL_22;
      v42 = 3;
    }
    else
    {
      if (v32 == 0xD000000000000019 && v33 == 0x800000010009CEA0)
      {
        swift_bridgeObjectRelease(0x800000010009CEA0);
        goto LABEL_22;
      }
      v43 = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v33, 0xD000000000000019, 0x800000010009CEA0, 0);
      swift_bridgeObjectRelease(v34);
      if ((v43 & 1) != 0)
        goto LABEL_22;
      v42 = 52;
    }
    sub_10006E7B0(v42);
    goto LABEL_22;
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Not enough bits to represent the passed value", 45, 2, "Swift/Integers.swift", 20, 2, 3455, 0);
  __break(1u);
  return result;
}

uint64_t sub_10009104C(uint64_t a1, int a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  const char *v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  int v44;
  char *v45;
  uint64_t v46;
  uint64_t v47[3];

  v8 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100092BEC(a2);
  v13 = String.init(cString:)(v11);
  v14 = v12;
  if (qword_1000D5638 != -1)
    swift_once(&qword_1000D5638, sub_100069F3C);
  v15 = type metadata accessor for Logger(0, v12);
  sub_10001118C(v15, (uint64_t)qword_1000D7720);
  swift_bridgeObjectRetain_n(a3, 2);
  swift_retain_n(a4, 2);
  swift_bridgeObjectRetain(v14);
  v17 = Logger.logObject.getter(v16);
  v19 = static os_log_type_t.default.getter(v17, v18);
  if (os_log_type_enabled(v17, (os_log_type_t)v19))
  {
    v42 = v19;
    v43 = a1;
    v44 = a2;
    v45 = v10;
    v20 = swift_slowAlloc(32, -1);
    v41 = swift_slowAlloc(96, -1);
    v47[0] = v41;
    *(_DWORD *)v20 = 136315650;
    swift_bridgeObjectRetain(v14);
    v46 = sub_10003EF58(v13, v14, v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, v47);
    swift_bridgeObjectRelease_n(v14, 3);
    *(_WORD *)(v20 + 12) = 2080;
    v21 = sub_100069924(*(_BYTE *)(a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state));
    v23 = v22;
    v46 = sub_10003EF58(v21, v22, v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, v47);
    swift_release_n(a4, 2);
    swift_bridgeObjectRelease(v23);
    *(_WORD *)(v20 + 22) = 2080;
    v24 = a3;
    if (!a3)
      v24 = sub_10000C35C((uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRetain(a3);
    v25 = Dictionary.description.getter(v24, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
    v27 = v26;
    swift_bridgeObjectRelease(v24);
    v46 = sub_10003EF58(v25, v27, v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, v47);
    swift_bridgeObjectRelease_n(a3, 2);
    swift_bridgeObjectRelease(v27);
    _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v42, "<loom:ViewService:matchHomePodSetupPresenter> HomePodSetupPresenter interactor: setting up event = %s | state = %s | dict = %s", (uint8_t *)v20, 0x20u);
    v28 = v41;
    swift_arrayDestroy(v41, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v20, -1, -1);

    v10 = v45;
    a1 = v43;
  }
  else
  {

    swift_bridgeObjectRelease_n(a3, 2);
    swift_release_n(a4, 2);
    swift_bridgeObjectRelease_n(v14, 2);
  }
  v29 = OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state;
  v30 = sub_100069924(*(_BYTE *)(a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state));
  v32 = v31;
  if (v30 == 0xD000000000000015 && v31 == 0x800000010009CE80)
  {
    swift_bridgeObjectRelease(0x800000010009CE80);
  }
  else
  {
    v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v30, v31, 0xD000000000000015, 0x800000010009CE80, 0);
    swift_bridgeObjectRelease(v32);
    if ((v33 & 1) == 0)
      sub_10006E7B0(0x33u);
  }
  v34 = *(_QWORD *)(a1 + 48);
  v35 = *(_BYTE *)(a4 + v29);
  swift_retain(v34);
  v36 = a3;
  if (!a3)
    v36 = sub_10000C35C((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRetain(a3);
  LOBYTE(v47[0]) = 0;
  sub_10001AD98(v34, v35);
  swift_bridgeObjectRelease(v36);
  swift_release(v34);
  v37 = type metadata accessor for HomePodSetupViewModel(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v10, 0, 1, v37);
  v38 = a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_viewModel;
  swift_beginAccess(a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_viewModel, v47, 33, 0);
  sub_1000727A8((uint64_t)v10, v38);
  swift_endAccess(v47);
  sub_10006A4C0();
  return sub_10000DC40((uint64_t)v10, (uint64_t *)&unk_1000D6EC0);
}

uint64_t sub_1000914D8(uint64_t a1, int a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  const char *v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  unsigned __int8 v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t result;
  uint64_t v47;
  uint64_t v48;
  int v49;
  char *v50;
  uint64_t v51;
  _QWORD v52[2];
  uint64_t v53[5];
  __int128 v54;
  __int128 v55;

  v8 = sub_10000D604((uint64_t *)&unk_1000D6EC0);
  __chkstk_darwin(v8);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100092BEC(a2);
  v13 = String.init(cString:)(v11);
  v14 = v12;
  if (qword_1000D5638 != -1)
    swift_once(&qword_1000D5638, sub_100069F3C);
  v15 = type metadata accessor for Logger(0, v12);
  sub_10001118C(v15, (uint64_t)qword_1000D7720);
  swift_bridgeObjectRetain_n(a3, 2);
  swift_retain_n(a4, 2);
  swift_bridgeObjectRetain(v14);
  v17 = Logger.logObject.getter(v16);
  v19 = static os_log_type_t.default.getter(v17, v18);
  if (os_log_type_enabled(v17, v19))
  {
    v48 = a1;
    v49 = a2;
    v50 = v10;
    v20 = swift_slowAlloc(32, -1);
    v47 = swift_slowAlloc(96, -1);
    v53[0] = v47;
    *(_DWORD *)v20 = 136315650;
    swift_bridgeObjectRetain(v14);
    *(_QWORD *)&v54 = sub_10003EF58(v13, v14, v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, (char *)&v54 + 8);
    swift_bridgeObjectRelease_n(v14, 3);
    *(_WORD *)(v20 + 12) = 2080;
    v21 = sub_100069924(*(_BYTE *)(a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state));
    v23 = v22;
    *(_QWORD *)&v54 = sub_10003EF58(v21, v22, v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, (char *)&v54 + 8);
    v51 = a4;
    swift_release_n(a4, 2);
    swift_bridgeObjectRelease(v23);
    *(_WORD *)(v20 + 22) = 2080;
    v24 = a3;
    if (!a3)
      v24 = sub_10000C35C((uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRetain(a3);
    v25 = Dictionary.description.getter(v24, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
    v27 = v26;
    swift_bridgeObjectRelease(v24);
    *(_QWORD *)&v54 = sub_10003EF58(v25, v27, v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, (char *)&v54 + 8);
    swift_bridgeObjectRelease_n(a3, 2);
    swift_bridgeObjectRelease(v27);
    _os_log_impl((void *)&_mh_execute_header, v17, v19, "<loom:ViewService:matchHomePodSetupPresenter> interactorSysDropRPFileTransfer: setting up event = %s | state = %s | dict = %s", (uint8_t *)v20, 0x20u);
    v28 = v47;
    swift_arrayDestroy(v47, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v20, -1, -1);

    v10 = v50;
    a4 = v51;
    a1 = v48;
  }
  else
  {

    swift_bridgeObjectRelease_n(a3, 2);
    swift_release_n(a4, 2);
    swift_bridgeObjectRelease_n(v14, 2);
  }
  if (!a3)
  {
    v37 = *(_QWORD *)(a1 + 48);
    v38 = *(_BYTE *)(a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state);
    swift_retain(v37);
    v39 = sub_10000C35C((uint64_t)_swiftEmptyArrayStorage);
LABEL_31:
    swift_bridgeObjectRetain(a3);
    LOBYTE(v53[0]) = 0;
    sub_10001AD98(v37, v38);
    swift_bridgeObjectRelease(v39);
    swift_release(v37);
    v44 = type metadata accessor for HomePodSetupViewModel(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v10, 0, 1, v44);
    v45 = a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_viewModel;
    swift_beginAccess(a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_viewModel, v53, 33, 0);
    sub_1000727A8((uint64_t)v10, v45);
    swift_endAccess(v53);
    sub_10006A4C0();
    return sub_10000DC40((uint64_t)v10, (uint64_t *)&unk_1000D6EC0);
  }
  v52[0] = 0x655F70725F6473;
  v52[1] = 0xE700000000000000;
  AnyHashable.init<A>(_:)(v53, v52, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a3 + 16) && (v29 = sub_10004A78C((uint64_t)v53), (v30 & 1) != 0))
  {
    sub_10000DB98(*(_QWORD *)(a3 + 56) + 32 * v29, (uint64_t)&v54);
  }
  else
  {
    v54 = 0u;
    v55 = 0u;
  }
  sub_10000DAE8((uint64_t)v53);
  if (!*((_QWORD *)&v55 + 1))
  {
    sub_10000DC40((uint64_t)&v54, &qword_1000D5820);
    goto LABEL_30;
  }
  if ((swift_dynamicCast(v52, &v54, (char *)&type metadata for Any + 8, &type metadata for UInt, 6) & 1) == 0)
    goto LABEL_30;
  if (!HIDWORD(v52[0]))
  {
    if (LODWORD(v52[0]) < 2)
    {
      v31 = sub_100069924(*(_BYTE *)(a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state));
      v33 = v32;
      if (v31 != 0xD000000000000018 || (v34 = 0x800000010009CEC0, v32 != 0x800000010009CEC0))
      {
        v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v31, v32, 0xD000000000000018, 0x800000010009CEC0, 0);
        swift_bridgeObjectRelease(v33);
        if ((v35 & 1) == 0)
        {
          v36 = 53;
LABEL_29:
          sub_10006E7B0(v36);
          goto LABEL_30;
        }
        goto LABEL_30;
      }
LABEL_26:
      swift_bridgeObjectRelease(v34);
      goto LABEL_30;
    }
    if (LODWORD(v52[0]) != 2)
      goto LABEL_30;
    v40 = sub_100069924(*(_BYTE *)(a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state));
    v42 = v41;
    if (v40 == 0xD000000000000014)
    {
      v34 = 0x800000010009CEE0;
      if (v41 == 0x800000010009CEE0)
        goto LABEL_26;
    }
    v43 = _stringCompareWithSmolCheck(_:_:expecting:)(v40, v41, 0xD000000000000014, 0x800000010009CEE0, 0);
    swift_bridgeObjectRelease(v42);
    if ((v43 & 1) == 0)
    {
      v36 = 54;
      goto LABEL_29;
    }
LABEL_30:
    v37 = *(_QWORD *)(a1 + 48);
    v38 = *(_BYTE *)(a4 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_state);
    swift_retain(v37);
    v39 = a3;
    goto LABEL_31;
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Not enough bits to represent the passed value", 45, 2, "Swift/Integers.swift", 20, 2, 3455, 0);
  __break(1u);
  return result;
}

void sub_100091AFC(os_log_t a1, uint64_t a2, void *a3, char a4, uint64_t a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  Class isa;
  void *v25;
  id v26;
  unsigned __int8 v27;
  uint64_t v28;
  NSObject *oslog;
  os_log_t osloga;
  uint64_t v31;
  uint64_t v32;

  v5 = a2;
  v6 = OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_finalScreenOfSetupFlowDisplayed;
  if (*(_BYTE *)(a5 + OBJC_IVAR____TtC14HDSViewService21HomePodSetupPresenter_finalScreenOfSetupFlowDisplayed) == 1)
  {
    if (qword_1000D5638 != -1)
      swift_once(&qword_1000D5638, sub_100069F3C);
    v7 = type metadata accessor for Logger(0, a2);
    v8 = sub_10001118C(v7, (uint64_t)qword_1000D7720);
    oslog = Logger.logObject.getter(v8);
    v9 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(oslog, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v10 = 67109120;
      LODWORD(v32) = v5;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, (char *)&v32 + 4);
      _os_log_impl((void *)&_mh_execute_header, oslog, v9, "HomePodSetupPresenter: didUpdateStatus called with a new status %d after final screen.", v10, 8u);
      swift_slowDealloc(v10, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    if (qword_1000D5638 != -1)
      swift_once(&qword_1000D5638, sub_100069F3C);
    v15 = type metadata accessor for Logger(0, a2);
    v16 = sub_10001118C(v15, (uint64_t)qword_1000D7720);
    v17 = Logger.logObject.getter(v16);
    v19 = static os_log_type_t.default.getter(v17, v18);
    if (os_log_type_enabled(v17, v19))
    {
      osloga = a1;
      v20 = swift_slowAlloc(18, -1);
      v28 = swift_slowAlloc(32, -1);
      v32 = v28;
      *(_DWORD *)v20 = 67109378;
      LODWORD(v31) = v5;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, (char *)&v31 + 4);
      *(_WORD *)(v20 + 8) = 2080;
      if ((a4 & 1) != 0)
        v21 = 1702195828;
      else
        v21 = 0x65736C6166;
      if ((a4 & 1) != 0)
        v22 = 0xE400000000000000;
      else
        v22 = 0xE500000000000000;
      v31 = sub_10003EF58(v21, v22, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32);
      swift_bridgeObjectRelease(v22);
      _os_log_impl((void *)&_mh_execute_header, v17, v19, "<loom:ViewService:matchHomePodSetupPresenterProgress> HomePodSetupPresenter: Interactor called with a new status %d and final: %s", (uint8_t *)v20, 0x12u);
      swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1, -1);
      v23 = v20;
      a1 = osloga;
      swift_slowDealloc(v23, -1, -1);
    }

    isa = a1[6].isa;
    *(_DWORD *)((char *)isa + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_status) = v5;
    v25 = *(void **)((char *)isa + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_error);
    *(_QWORD *)((char *)isa + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_error) = a3;
    v26 = a3;

    *(_BYTE *)(a5 + v6) = a4 & 1;
    v27 = sub_1000717D8(v5);
    sub_10006E7B0(v27);
  }
}

id sub_100091E30(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  unint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  NSObject *v24;
  uint64_t v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  NSObject *v29;
  uint64_t v30;
  os_log_type_t v31;
  uint8_t *v32;
  _QWORD v33[3];
  ValueMetadata *v34;
  unint64_t v35;

  if (qword_1000D5638 != -1)
    swift_once(&qword_1000D5638, sub_100069F3C);
  v3 = type metadata accessor for Logger(0, a2);
  v4 = sub_10001118C(v3, (uint64_t)qword_1000D7720);
  v5 = Logger.logObject.getter(v4);
  v7 = static os_log_type_t.default.getter(v5, v6);
  if (os_log_type_enabled(v5, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v7, "HomePodSetupPresenter: interactorNeedsAppleMusicApproval called", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  if (*(_BYTE *)(*(_QWORD *)(a1 + 48) + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_subscribedToMusicService) == 1)
  {
    v10 = Logger.logObject.getter(v9);
    v12 = static os_log_type_t.default.getter(v10, v11);
    if (os_log_type_enabled(v10, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v12, "HomePodSetupPresenter: interactorNeedsAppleMusicApproval user has subscription so not showing music promotion", v13, 2u);
      swift_slowDealloc(v13, -1, -1);
    }

    if (qword_1000D5670 != -1)
      swift_once(&qword_1000D5670, sub_100084DD8);
    v14 = sub_10001118C(v3, (uint64_t)qword_1000D80F0);
    v15 = Logger.logObject.getter(v14);
    v17 = static os_log_type_t.default.getter(v15, v16);
    if (os_log_type_enabled(v15, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v17, "HomePodSetup: appleMusicPromoSeen called", v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }

    return objc_msgSend(*(id *)(a1 + 80), "appleMusicNext");
  }
  else
  {
    v34 = &type metadata for SharingFeatureFlags;
    v20 = sub_100071F40();
    v35 = v20;
    LOBYTE(v33[0]) = 0;
    v21 = isFeatureEnabled(_:)(v33);
    sub_10000CDB8(v33);
    if ((v21 & 1) != 0
      && (v34 = &type metadata for SharingFeatureFlags,
          v35 = v20,
          LOBYTE(v33[0]) = 1,
          v22 = isFeatureEnabled(_:)(v33),
          v23 = sub_10000CDB8(v33),
          (v22 & 1) == 0))
    {
      v24 = Logger.logObject.getter(v23);
      v26 = static os_log_type_t.default.getter(v24, v25);
      if (os_log_type_enabled(v24, v26))
      {
        v27 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v27 = 0;
        _os_log_impl((void *)&_mh_execute_header, v24, v26, "HomePodSetupPresenter: interactorNeedsAppleMusicApproval need to show music promotion at end of setup steps", v27, 2u);
        swift_slowDealloc(v27, -1, -1);
      }

      if (qword_1000D5670 != -1)
        swift_once(&qword_1000D5670, sub_100084DD8);
      v28 = sub_10001118C(v3, (uint64_t)qword_1000D80F0);
      v29 = Logger.logObject.getter(v28);
      v31 = static os_log_type_t.default.getter(v29, v30);
      if (os_log_type_enabled(v29, v31))
      {
        v32 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v32 = 0;
        _os_log_impl((void *)&_mh_execute_header, v29, v31, "HomePodSetup: appleMusicPromoSeen called", v32, 2u);
        swift_slowDealloc(v32, -1, -1);
      }

      return objc_msgSend(*(id *)(a1 + 80), "appleMusicNext");
    }
    else
    {
      return (id)sub_10006E7B0(0x18u);
    }
  }
}

uint64_t sub_100092204(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;

  v1 = *(_QWORD *)(a1 + 48);
  v2 = *(void **)(a1 + 80);
  swift_retain(v1);
  v3 = objc_msgSend(v2, "selectedSiriLanguageCode");
  if (v3)
  {
    v4 = v3;
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  v8 = (uint64_t *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_selectedSiriLanguageCode);
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC14HDSViewService17HomePodSetupModel_selectedSiriLanguageCode + 8))
  {
    swift_release(v1);
  }
  else
  {
    *v8 = v5;
    v8[1] = v7;
    swift_release(v1);
    v7 = 0;
  }
  swift_bridgeObjectRelease(v7);
  return sub_10006E7B0(0xBu);
}

_QWORD *sub_1000922C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  if ((unint64_t)a1 >> 62)
    goto LABEL_22;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      v6 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a1);
LABEL_9:
        v8 = v7;
        v9 = v6 + 1;
        if (__OFADD__(v6, 1))
          goto LABEL_21;
        v10 = v5;
        v11 = objc_msgSend(v7, "name");
        v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
        v14 = v13;

        if (v12 == a2 && v14 == a3)
        {
          v17 = swift_bridgeObjectRelease(a3);
LABEL_17:
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v17);
          v18 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v18);
          v19 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v8);
          specialized ContiguousArray._endMutation()(v19);
          goto LABEL_5;
        }
        v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, a2, a3, 0);
        v17 = swift_bridgeObjectRelease(v14);
        if ((v16 & 1) != 0)
          goto LABEL_17;

LABEL_5:
        ++v6;
        v5 = v10;
        if (v9 == v10)
          return _swiftEmptyArrayStorage;
      }
      if (v6 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      if (a1 < 0)
        v21 = a1;
      else
        v21 = a1 & 0xFFFFFFFFFFFFFF8;
      v5 = _CocoaArrayWrapper.endIndex.getter(v21);
      if (!v5)
        return _swiftEmptyArrayStorage;
    }
    v7 = *(id *)(a1 + 8 * v6 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

void sub_100092478(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;

  v1 = objc_msgSend(a1, "accessories");
  v2 = sub_100035CA4(0, (unint64_t *)&qword_1000D7718, HMAccessory_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v22 = v3;
    else
      v22 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v22);
    swift_bridgeObjectRelease(v3);
    if (v4)
      goto LABEL_3;
LABEL_23:
    swift_bridgeObjectRelease(v3);
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
      goto LABEL_26;
    goto LABEL_24;
  }
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    goto LABEL_23;
LABEL_3:
  if (v4 < 1)
  {
    __break(1u);
    return;
  }
  v5 = 0;
  v6 = HMAccessoryCategoryTypeHomePod;
  do
  {
    if ((v3 & 0xC000000000000001) != 0)
      v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
    else
      v10 = *(id *)(v3 + 8 * v5 + 32);
    v11 = v10;
    v12 = objc_msgSend(v10, "category");
    v13 = objc_msgSend(v12, "categoryType");

    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v16 = v15;

    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    if (v14 == v17 && v16 == v18)
    {
      v7 = swift_bridgeObjectRelease_n(v16, 2);
LABEL_6:
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v7);
      v8 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v8);
      v9 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v11);
      specialized ContiguousArray._endMutation()(v9);
      goto LABEL_7;
    }
    v20 = v18;
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, v17, v18, 0);
    swift_bridgeObjectRelease(v16);
    v7 = swift_bridgeObjectRelease(v20);
    if ((v21 & 1) != 0)
      goto LABEL_6;

LABEL_7:
    ++v5;
  }
  while (v4 != v5);
  swift_bridgeObjectRelease(v3);
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
  {
LABEL_26:
    v23 = swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    _CocoaArrayWrapper.endIndex.getter(v23);
    swift_release(_swiftEmptyArrayStorage);
    goto LABEL_25;
  }
LABEL_24:
  if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) != 0)
    goto LABEL_26;
LABEL_25:
  swift_release(_swiftEmptyArrayStorage);
}

uint64_t sub_1000926D0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000926F4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100092720(uint64_t *a1)
{
  uint64_t v1;

  return sub_1000876D8(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(uint64_t *, __n128))(v1 + 24));
}

void sub_10009272C(char a1)
{
  uint64_t v1;

  sub_10008D78C(a1, v1);
}

void sub_100092734(void *a1)
{
  uint64_t v1;

  sub_10008DFE8(a1, v1);
}

uint64_t sub_10009273C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100092760(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  sub_10008E8C0(a1, a2, a3, a4, a5, *(_BYTE *)(v5 + 16), *(_QWORD *)(v5 + 24));
}

void sub_10009276C(NSObject *a1, uint64_t a2)
{
  uint64_t v2;

  sub_10008EDC4(a1, a2, *(_BYTE *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

BOOL sub_100092778(int a1)
{
  return a1 == 11 || a1 == 33;
}

uint64_t sub_10009278C(uint64_t *a1)
{
  uint64_t v1;

  return sub_100085620(a1, v1);
}

uint64_t sub_100092794()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

double sub_1000927B8(char a1)
{
  uint64_t v1;

  return sub_100087004(a1, *(_QWORD *)(v1 + 16));
}

double sub_1000927C0(unsigned int a1, unint64_t a2)
{
  uint64_t v2;

  return sub_10008AFDC(a1, a2, v2, "HomePodSetupInteractor progressHandler: inEvent = %s");
}

double sub_1000927E0(unsigned int a1, unint64_t a2)
{
  uint64_t v2;

  return sub_10008AFDC(a1, a2, v2, "HomePodSetupInteractor SysDrop progressHandler: inEvent = %s");
}

double sub_100092800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_10008B1E8(a1, a2, a3, a4, v4);
}

double sub_100092808(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10008B41C(a1, a2, v2);
}

void sub_100092810()
{
  uint64_t v0;

  sub_10008C95C(v0, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for Home iCloud", 301010);
}

void sub_100092838()
{
  uint64_t v0;

  sub_10008C95C(v0, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for iTunes sign in", 301007);
}

double sub_100092860(char a1)
{
  uint64_t v1;

  return sub_10008B71C(a1, v1);
}

void sub_100092868()
{
  uint64_t v0;

  sub_10008C95C(v0, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for Location Enable", 301022);
}

double sub_100092890()
{
  uint64_t v0;

  return sub_10008B854(v0);
}

double sub_100092898(int a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10008B9B8(a1, a2, v2);
}

double sub_1000928A0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return sub_10008BBA4(a1, a2, a3, a4, a5, v5);
}

uint64_t sub_1000928A8()
{
  uint64_t v0;

  return sub_10008C27C(v0);
}

double sub_1000928B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_10008C488(a1, a2, a3, v3);
}

double sub_1000928B8()
{
  uint64_t v0;

  return sub_10008C814(v0, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for terms", 8u);
}

double sub_1000928DC()
{
  uint64_t v0;

  return sub_10008C6C8(v0);
}

double sub_1000928E4()
{
  uint64_t v0;

  return sub_10008C814(v0, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for promptForHomePodSoftwareUpdateNonSetupAck", 0x3Au);
}

double sub_100092908()
{
  uint64_t v0;

  return sub_10008C814(v0, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for promptForHomePodSoftwareUpdateNonSetupCompleted", 4u);
}

double sub_10009292C()
{
  uint64_t v0;

  return sub_10008C814(v0, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for promptForHomePodSoftwareUpdateNonSetupCancelled", 5u);
}

double sub_100092950()
{
  uint64_t v0;

  return sub_10008C814(v0, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for sound recognition", 6u);
}

double sub_100092974()
{
  uint64_t v0;

  return sub_10008C814(v0, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for promptForAutomaticSoftwareUpdateHandler", 7u);
}

double sub_100092998()
{
  uint64_t v0;

  return sub_10008C814(v0, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for promptForSoftwareUpdateHandler", 0x31u);
}

double sub_1000929BC()
{
  uint64_t v0;

  return sub_10008C814(v0, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for captive network confirmation", 0x32u);
}

double sub_1000929E0()
{
  uint64_t v0;

  return sub_10008C814(v0, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for TV Audio", 0x19u);
}

void sub_100092A04()
{
  uint64_t v0;

  sub_10008C95C(v0, "<loom:ViewService:matchInteractorPrompts> HomePodSetupInteractor: Prompt for install Home app", 301019);
}

double sub_100092A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_10008CA8C(a1, a2, a3, a4, v4);
}

double sub_100092A34()
{
  uint64_t v0;

  return sub_10008CD1C(v0);
}

double sub_100092A3C(uint64_t a1)
{
  uint64_t v1;

  return sub_10008CE90(a1, v1);
}

double sub_100092A44(char a1)
{
  uint64_t v1;

  return sub_10008D168(a1, v1);
}

double sub_100092A4C(char a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;

  return sub_10008D2E0(a1, a2, a3, a4, v4);
}

double sub_100092A54(unint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_10008D558(a1, a2, v2);
}

uint64_t sub_100092A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000D604(&qword_1000D6170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100092AA4(int a1, uint64_t a2)
{
  int v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  int v12;
  int v13;
  uint64_t v14;

  v2 = a2;
  if (qword_1000D5638 != -1)
    swift_once(&qword_1000D5638, sub_100069F3C);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10001118C(v4, (uint64_t)qword_1000D7720);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = swift_slowAlloc(14, -1);
    *(_DWORD *)v9 = 67109376;
    v13 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14);
    *(_WORD *)(v9 + 8) = 1024;
    v12 = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13);
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "HomePodSetupPresenter: interactorNeedsPINCodeEntered called with a flags:%u and inThrottleSeconds:%d", (uint8_t *)v9, 0xEu);
    swift_slowDealloc(v9, -1, -1);
  }

  if ((a1 & 0x800) != 0)
    v10 = 55;
  else
    v10 = 17;
  return sub_10006E7B0(v10);
}

const char *sub_100092BEC(int a1)
{
  const char *result;

  if (a1 > 299)
  {
    if (a1 <= 799)
    {
      if (a1 <= 519)
      {
        if (a1 <= 410)
        {
          if (a1 <= 399)
          {
            if (a1 == 300)
              return "BackupProgress";
            if (a1 == 310)
              return "SyncProgress";
          }
          else
          {
            switch(a1)
            {
              case 400:
                return "StopSetup";
              case 401:
                return "PINPair";
              case 410:
                return "MigrateStart";
            }
          }
        }
        else if (a1 > 430)
        {
          switch(a1)
          {
            case 431:
              return "eSimExternal2FAStop";
            case 500:
              return "SiriWelcome";
            case 510:
              return "SiriDialogA";
          }
        }
        else
        {
          switch(a1)
          {
            case 411:
              return "MigrateStop";
            case 420:
              return "FileTransferReady";
            case 430:
              return "eSimExternal2FAStart";
          }
        }
      }
      else if (a1 > 559)
      {
        if (a1 > 599)
        {
          switch(a1)
          {
            case 600:
              return "SiriSkipDemo";
            case 700:
              return "StopSetupLEDs";
            case 710:
              return "AudioPasscodeEnded";
          }
        }
        else
        {
          switch(a1)
          {
            case 560:
              return "SiriDialogCMusic";
            case 570:
              return "SiriDialogCNews";
            case 580:
              return "SiriDialogCWeather";
          }
        }
      }
      else if (a1 > 549)
      {
        switch(a1)
        {
          case 550:
            return "SiriDialogBWeather";
          case 555:
            return "SiriDialogBClock";
          case 558:
            return "SiriDialogBMusic";
        }
      }
      else
      {
        switch(a1)
        {
          case 520:
            return "SiriDialogBStart";
          case 530:
            return "SiriDialogBHome";
          case 540:
            return "SiriDialogBNews";
        }
      }
      return "?";
    }
    if (a1 > 999)
    {
      if (a1 <= 1099)
      {
        if (a1 == 1000)
          return "SecureIntentStart";
        if (a1 == 1001)
          return "SecureIntentFinish";
      }
      else
      {
        switch(a1)
        {
          case 1100:
            return "OneTimeCodeDetected";
          case 2000:
            return "DependentStart";
          case 2001:
            return "DependentEnd";
        }
      }
      return "?";
    }
    switch(a1)
    {
      case 900:
        result = "SU-No-SetupScanAttempt";
        break;
      case 901:
        result = "SU-No-SetupStatusUpdate";
        break;
      case 902:
        result = "SU-No-SetupWipeWifi";
        break;
      case 903:
        result = "SU-No-SetupCancelled";
        break;
      case 904:
        result = "SU-No-SetupObliterate";
        break;
      case 905:
        result = "SU-No-SetupCannotCancel";
        break;
      case 906:
        result = "SysDrop AirDrop Event";
        break;
      case 907:
        result = "SysDrop Sysdiagnose Event";
        break;
      case 908:
        result = "SysDrop Cancel Event";
        break;
      case 909:
        result = "File Transfer Progress Event";
        break;
      case 910:
        result = "File Transfer Completed Event";
        break;
      case 911:
        result = "iOSWiFiSetup";
        break;
      case 912:
        result = "HKPrimaryResidentSSIDFetchStart";
        break;
      default:
        switch(a1)
        {
          case 800:
            result = "AuthAccountsStart";
            break;
          case 803:
            result = "AuthAccountsiCloudProgress";
            break;
          case 804:
            result = "AuthAccountsStoreProgress";
            break;
          case 805:
            result = "AuthAccountsGameCenterProgress";
            break;
          default:
            return "?";
        }
        break;
    }
  }
  else if (a1 > 129)
  {
    if (a1 > 249)
    {
      switch(a1)
      {
        case 260:
          result = "TVLSStart";
          break;
        case 261:
        case 262:
        case 263:
        case 265:
        case 266:
        case 267:
        case 268:
        case 269:
        case 271:
        case 273:
        case 275:
          return "?";
        case 264:
          result = "TVLSFinish";
          break;
        case 270:
          result = "TVLSEstimateStart";
          break;
        case 272:
          result = "TVLSEstimateFinal";
          break;
        case 274:
          result = "TVLSEstimateFailed";
          break;
        case 276:
          result = "TVLSTryAgain";
          break;
        case 277:
          result = "TVLSToneBegan";
          break;
        case 278:
          result = "TVLCalStart";
          break;
        case 279:
          result = "TVLCalStep";
          break;
        case 280:
          result = "TVLCalFailed";
          break;
        case 281:
          result = "TVLCalTryAgain";
          break;
        case 282:
          result = "TVLCalFinal";
          break;
        default:
          if (a1 != 250)
            return "?";
          result = "ReportSuccess";
          break;
      }
    }
    else
    {
      if (a1 <= 219)
      {
        if (a1 <= 149)
        {
          if (a1 == 130)
            return "WiFiPoweredOff";
          if (a1 == 140)
            return "RecognizeVoice";
        }
        else
        {
          switch(a1)
          {
            case 150:
              return "SiriForEveryone";
            case 200:
              return "WiFiStart";
            case 210:
              return "ActivationStart";
          }
        }
        return "?";
      }
      switch(a1)
      {
        case 230:
          return "HomeKitStart";
        case 231:
        case 232:
        case 233:
        case 235:
        case 237:
        case 238:
        case 239:
          return "?";
        case 234:
          return "HomeKitSetupStart";
        case 236:
          return "CDPSetupStart";
        case 240:
          return "BuddyStarting";
        case 241:
          return "BuddyProgress";
        case 242:
          return "BuddyFinished";
        default:
          if (a1 == 220)
          {
            result = "iCloudStart";
          }
          else
          {
            if (a1 != 224)
              return "?";
            result = "AppleIDSetupStart";
          }
          break;
      }
    }
  }
  else
  {
    if (a1 <= 79)
    {
      if (a1 > 49)
      {
        if (a1 > 64)
        {
          if (a1 == 65)
            return "SecurityAPCLoopStart";
          if (a1 == 70)
            return "SecurityFinish";
        }
        else
        {
          if (a1 == 50)
            return "PreAuthFinish";
          if (a1 == 60)
            return "SecurityStart";
        }
      }
      else
      {
        if (a1 > 29)
        {
          switch(a1)
          {
            case 30:
              result = "Error";
              break;
            case 31:
              result = "SessionStarted";
              break;
            case 32:
              result = "SessionEnded";
              break;
            case 33:
              result = "SessionSecured";
              break;
            case 35:
              result = "ConnectStart";
              break;
            case 40:
              result = "PreAuthStart";
              break;
            default:
              return "?";
          }
          return result;
        }
        switch(a1)
        {
          case 0:
            return "Invalid";
          case 10:
            return "Start";
          case 20:
            return "Final";
        }
      }
      return "?";
    }
    if (a1 > 119)
    {
      switch(a1)
      {
        case 'x':
          return "CheckingiCloud";
        case 'z':
          return "CheckingAppleMusic";
        case '|':
          return "CheckingAccount";
      }
      return "?";
    }
    switch(a1)
    {
      case 'P':
        result = "BasicConfigStart";
        break;
      case 'Z':
        result = "BasicConfigFinish";
        break;
      case '\\':
        result = "StepStart";
        break;
      case '^':
        result = "StepFinish";
        break;
      case '_':
        result = "PreFinish";
        break;
        result = "SetupFinished";
        break;
      case 'a':
        result = "SetupResumed";
        break;
      case 'b':
        result = "SetupSuspend";
        break;
      case 'c':
        result = "SetupPeerSWUpdate";
        break;
      case 'd':
        result = "Finished";
        break;
      default:
        return "?";
    }
  }
  return result;
}

uint64_t sub_10009349C()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self(_TtC14HDSViewServiceP33_9FBFF20CA4DBC9B945B6FBB9A375E4D119ResourceBundleClass);
}

void sub_1000934CC()
{
  uint8_t v0[16];

  *(_WORD *)v0 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "Could not load HPdetector_SceneClassifier_B238.mlmodelc in the bundle resource", v0, 2u);
}

void sub_100093510()
{
  uint8_t v0[16];

  *(_WORD *)v0 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "Could not load HPdetector_SmartCam_B238.mlmodelc in the bundle resource", v0, 2u);
}

void sub_100093554()
{
  uint8_t v0[16];

  *(_WORD *)v0 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "Could not load HPdetector_SceneClassifier_B520.mlmodelc in the bundle resource", v0, 2u);
}

id objc_msgSend_HomePodDetected(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "HomePodDetected");
}

id objc_msgSend_URLOfModelInThisBundle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLOfModelInThisBundle");
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UTF8String");
}

id objc_msgSend__diffableTableDataSource(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_diffableTableDataSource");
}

id objc_msgSend__handleAgreeFromObjectModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleAgreeFromObjectModel:");
}

id objc_msgSend__setupConstraintsToSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupConstraintsToSize");
}

id objc_msgSend__setupContentWithTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupContentWithTitle:");
}

id objc_msgSend__setupVoicesTableView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupVoicesTableView");
}

id objc_msgSend__tableCellForVoiceViewModel_indexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_tableCellForVoiceViewModel:indexPath:");
}

id objc_msgSend__termsDisagree(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_termsDisagree");
}

id objc_msgSend_aa_needsToVerifyTerms(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aa_needsToVerifyTerms");
}

id objc_msgSend_aa_primaryAppleAccount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aa_primaryAppleAccount");
}

id objc_msgSend_accelerationThreshold(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accelerationThreshold");
}

id objc_msgSend_activate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activate");
}

id objc_msgSend_activateConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateConstraints:");
}

id objc_msgSend_addFinishBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addFinishBlock:");
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObject:");
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObjectsFromArray:");
}

id objc_msgSend_addSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSubview:");
}

id objc_msgSend_allFrameworks(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allFrameworks");
}

id objc_msgSend_amsDeviceRegistrationPromise(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "amsDeviceRegistrationPromise");
}

id objc_msgSend_ams_activeiTunesAccount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ams_activeiTunesAccount");
}

id objc_msgSend_ams_sharedAccountStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ams_sharedAccountStore");
}

id objc_msgSend_appendItemsWithIdentifiers_intoSectionWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendItemsWithIdentifiers:intoSectionWithIdentifier:");
}

id objc_msgSend_appendSectionsWithIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendSectionsWithIdentifiers:");
}

id objc_msgSend_appleIDHeadersForRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appleIDHeadersForRequest:");
}

id objc_msgSend_applySnapshot_animatingDifferences_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applySnapshot:animatingDifferences:");
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "array");
}

id objc_msgSend_arrayWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithArray:");
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithCapacity:");
}

id objc_msgSend_arrayWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObject:");
}

id objc_msgSend_arrayWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:");
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_associatedCGColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "associatedCGColor");
}

id objc_msgSend_bottomAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bottomAnchor");
}

id objc_msgSend_bundleForClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleForClass:");
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleIdentifier");
}

id objc_msgSend_bytes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bytes");
}

id objc_msgSend_cellConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellConfiguration");
}

id objc_msgSend_centerXAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "centerXAnchor");
}

id objc_msgSend_circularCorrelation_withLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "circularCorrelation:withLength:");
}

id objc_msgSend_clearColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearColor");
}

id objc_msgSend_clientInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientInfo");
}

id objc_msgSend_clientInfoHeader(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientInfoHeader");
}

id objc_msgSend_colorWithCGColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorWithCGColor:");
}

id objc_msgSend_completionHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "completionHandler");
}

id objc_msgSend_computeNormalizedSignal_withLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "computeNormalizedSignal:withLength:");
}

id objc_msgSend_confidence(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "confidence");
}

id objc_msgSend_constraintEqualToAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToAnchor:");
}

id objc_msgSend_constraintEqualToAnchor_constant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToAnchor:constant:");
}

id objc_msgSend_constraintEqualToConstant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToConstant:");
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "count");
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_createBagForSubProfile(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createBagForSubProfile");
}

id objc_msgSend_currentDevice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentDevice");
}

id objc_msgSend_currentHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentHandler");
}

id objc_msgSend_currentLocale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentLocale");
}

id objc_msgSend_dataPointer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataPointer");
}

id objc_msgSend_dataWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithContentsOfFile:");
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultManager");
}

id objc_msgSend_defaultStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultStore");
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "delegate");
}

id objc_msgSend_dequeueReusableCellWithIdentifier_forIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:");
}

id objc_msgSend_descriptorData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descriptorData");
}

id objc_msgSend_detectionOutputIsDouble(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "detectionOutputIsDouble");
}

id objc_msgSend_deviceMotion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceMotion");
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionary");
}

id objc_msgSend_dictionaryWithObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObject:forKey:");
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:count:");
}

id objc_msgSend_dismissObjectModelsAnimated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissObjectModelsAnimated:completion:");
}

id objc_msgSend_elementCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "elementCount");
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:userInfo:");
}

id objc_msgSend_featureValueForName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "featureValueForName:");
}

id objc_msgSend_featureValueWithMultiArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "featureValueWithMultiArray:");
}

id objc_msgSend_featuresAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "featuresAtIndex:");
}

id objc_msgSend_fileExistsAtPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileExistsAtPath:");
}

id objc_msgSend_fileURLWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPath:");
}

id objc_msgSend_firstBaselineAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstBaselineAnchor");
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstObject");
}

id objc_msgSend_gender(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gender");
}

id objc_msgSend_getAssetBundleForDeviceQuery_withRequestConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getAssetBundleForDeviceQuery:withRequestConfiguration:");
}

id objc_msgSend_getSceneprintForImage_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSceneprintForImage:error:");
}

id objc_msgSend_getSubscriptionStatusWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSubscriptionStatusWithCompletionHandler:");
}

id objc_msgSend_grayColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "grayColor");
}

id objc_msgSend_handleFailureInFunction_file_lineNumber_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:");
}

id objc_msgSend_handleFailureInMethod_object_file_lineNumber_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFailureInMethod:object:file:lineNumber:description:");
}

id objc_msgSend_handleVNRequest_withHandler_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleVNRequest:withHandler:error:");
}

id objc_msgSend_hasRecognizedDeviceInRecentPast_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasRecognizedDeviceInRecentPast:");
}

id objc_msgSend_heightAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "heightAnchor");
}

id objc_msgSend_imageByCroppingToRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageByCroppingToRect:");
}

id objc_msgSend_imageDescriptors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageDescriptors");
}

id objc_msgSend_imageProperties(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageProperties");
}

id objc_msgSend_imageWithCVPixelBuffer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithCVPixelBuffer:");
}

id objc_msgSend_initWithAccount_bag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAccount:bag:");
}

id objc_msgSend_initWithAccount_parameters_preferPassword_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAccount:parameters:preferPassword:");
}

id objc_msgSend_initWithBarButtonSystemItem_target_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBarButtonSystemItem:target:action:");
}

id objc_msgSend_initWithBluetoothProductIdentifier_color_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBluetoothProductIdentifier:color:");
}

id objc_msgSend_initWithCIImage_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCIImage:options:");
}

id objc_msgSend_initWithCVPixelBuffer_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCVPixelBuffer:options:");
}

id objc_msgSend_initWithClassifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithClassifier:");
}

id objc_msgSend_initWithContentsOfURL_configuration_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentsOfURL:configuration:error:");
}

id objc_msgSend_initWithContentsOfURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentsOfURL:error:");
}

id objc_msgSend_initWithDataPointer_shape_dataType_strides_deallocator_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDataPointer:shape:dataType:strides:deallocator:error:");
}

id objc_msgSend_initWithFeatureProviderArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFeatureProviderArray:");
}

id objc_msgSend_initWithFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:");
}

id objc_msgSend_initWithHomePodColor_version_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHomePodColor:version:");
}

id objc_msgSend_initWithHomePodDetected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHomePodDetected:");
}

id objc_msgSend_initWithImageDescriptors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithImageDescriptors:");
}

id objc_msgSend_initWithMLModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMLModel:");
}

id objc_msgSend_initWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObjects:");
}

id objc_msgSend_initWithQueryResultHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueryResultHandler:");
}

id objc_msgSend_initWithRecognizer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecognizer:");
}

id objc_msgSend_initWithRegistrationItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRegistrationItems:");
}

id objc_msgSend_initWithSerialNumber_model_validationData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSerialNumber:model:validationData:");
}

id objc_msgSend_initWithTableView_cellProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTableView:cellProvider:");
}

id objc_msgSend_initWithTitle_style_target_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:style:target:action:");
}

id objc_msgSend_initWithURLString_account_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURLString:account:");
}

id objc_msgSend_initWithValidatedFormat_validFormatSpecifiers_arguments_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithValidatedFormat:validFormatSpecifiers:arguments:error:");
}

id objc_msgSend_insertObject_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertObject:atIndex:");
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intValue");
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidate");
}

id objc_msgSend_isCurrentSiriVoice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCurrentSiriVoice");
}

id objc_msgSend_isDeviceMotionActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDeviceMotionActive");
}

id objc_msgSend_isDeviceMotionAvailable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDeviceMotionAvailable");
}

id objc_msgSend_isEmpty(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEmpty");
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqual:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isInFreeTrial(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isInFreeTrial");
}

id objc_msgSend_isValid(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isValid");
}

id objc_msgSend_languageCode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageCode");
}

id objc_msgSend_lastProcessedImageTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastProcessedImageTime");
}

id objc_msgSend_layer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layer");
}

id objc_msgSend_leadingAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leadingAnchor");
}

id objc_msgSend_leftAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leftAnchor");
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "length");
}

id objc_msgSend_loadContentsOfURL_configuration_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadContentsOfURL:configuration:completionHandler:");
}

id objc_msgSend_loadData_baseURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadData:baseURL:");
}

id objc_msgSend_loadOfflineTerms(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadOfflineTerms");
}

id objc_msgSend_loadRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadRequest:completion:");
}

id objc_msgSend_loadTemplate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadTemplate:");
}

id objc_msgSend_loadedHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadedHandler");
}

id objc_msgSend_loader(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loader");
}

id objc_msgSend_localizations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizations");
}

id objc_msgSend_localizedDisplayName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedDisplayName");
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringForKey:value:table:");
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainBundle");
}

id objc_msgSend_model(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "model");
}

id objc_msgSend_modelWithContentsOfURL_configuration_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "modelWithContentsOfURL:configuration:error:");
}

id objc_msgSend_modelWithContentsOfURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "modelWithContentsOfURL:error:");
}

id objc_msgSend_motion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "motion");
}

id objc_msgSend_multiArrayValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "multiArrayValue");
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "name");
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInt:");
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInteger:");
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInteger:");
}

id objc_msgSend_objectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndex:");
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndexedSubscript:");
}

id objc_msgSend_objectForInfoDictionaryKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForInfoDictionaryKey:");
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:");
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKeyedSubscript:");
}

id objc_msgSend_orbLength(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "orbLength");
}

id objc_msgSend_orbOffsetFromTopEnrollment(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "orbOffsetFromTopEnrollment");
}

id objc_msgSend_pathForResource_ofType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pathForResource:ofType:");
}

id objc_msgSend_pathForResource_ofType_inDirectory_forLocalization_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pathForResource:ofType:inDirectory:forLocalization:");
}

id objc_msgSend_perform(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "perform");
}

id objc_msgSend_performRequestWithHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performRequestWithHandler:");
}

id objc_msgSend_performRequests_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performRequests:error:");
}

id objc_msgSend_predictionFromFeatures_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predictionFromFeatures:completionHandler:");
}

id objc_msgSend_predictionFromFeatures_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predictionFromFeatures:error:");
}

id objc_msgSend_predictionFromFeatures_options_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predictionFromFeatures:options:completionHandler:");
}

id objc_msgSend_predictionFromFeatures_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predictionFromFeatures:options:error:");
}

id objc_msgSend_predictionFromImageDescriptors_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predictionFromImageDescriptors:error:");
}

id objc_msgSend_predictionsFromBatch_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predictionsFromBatch:options:error:");
}

id objc_msgSend_preferredLanguages(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredLanguages");
}

id objc_msgSend_preferredLocalizationsFromArray_forPreferences_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredLocalizationsFromArray:forPreferences:");
}

id objc_msgSend_processImage_withTimestamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processImage:withTimestamp:");
}

id objc_msgSend_processVideoFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processVideoFrame:");
}

id objc_msgSend_proxHeaderColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "proxHeaderColor");
}

id objc_msgSend_proxHeaderFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "proxHeaderFont");
}

id objc_msgSend_raise_format_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "raise:format:");
}

id objc_msgSend_recognitionTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recognitionTime");
}

id objc_msgSend_recognize_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recognize:error:");
}

id objc_msgSend_recognizer_B238(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recognizer_B238");
}

id objc_msgSend_recognizer_B520(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recognizer_B520");
}

id objc_msgSend_recognizingCompletionHandlerBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recognizingCompletionHandlerBlock");
}

id objc_msgSend_registerClass_forCellReuseIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerClass:forCellReuseIdentifier:");
}

id objc_msgSend_reloadItemsWithIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadItemsWithIdentifiers:");
}

id objc_msgSend_reset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reset");
}

id objc_msgSend_resourceURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resourceURL");
}

id objc_msgSend_results(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "results");
}

id objc_msgSend_rightAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rightAnchor");
}

id objc_msgSend_rotationRate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rotationRate");
}

id objc_msgSend_rotationThreshold(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rotationThreshold");
}

id objc_msgSend_row(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "row");
}

id objc_msgSend_sceneprints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sceneprints");
}

id objc_msgSend_scheduledTimerWithTimeInterval_target_selector_userInfo_repeats_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:");
}

id objc_msgSend_secondarySystemBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "secondarySystemBackgroundColor");
}

id objc_msgSend_semanticContentAttribute(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "semanticContentAttribute");
}

id objc_msgSend_sendRequestID_options_request_responseHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendRequestID:options:request:responseHandler:");
}

id objc_msgSend_setAccelerationThreshold_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccelerationThreshold:");
}

id objc_msgSend_setAccessoryType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessoryType:");
}

id objc_msgSend_setAllowNonSecureHTTP_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowNonSecureHTTP:");
}

id objc_msgSend_setAmsDeviceRegistrationPromise_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAmsDeviceRegistrationPromise:");
}

id objc_msgSend_setBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundColor:");
}

id objc_msgSend_setContentConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentConfiguration:");
}

id objc_msgSend_setCornerRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCornerRadius:");
}

id objc_msgSend_setCropRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCropRect:");
}

id objc_msgSend_setDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataSource:");
}

id objc_msgSend_setDefaultRowAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDefaultRowAnimation:");
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegate:");
}

id objc_msgSend_setDetectionOutputIsDouble_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDetectionOutputIsDouble:");
}

id objc_msgSend_setDeviceMotionUpdateInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceMotionUpdateInterval:");
}

id objc_msgSend_setDispatchQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDispatchQueue:");
}

id objc_msgSend_setFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFont:");
}

id objc_msgSend_setHandlerForElementName_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHandlerForElementName:handler:");
}

id objc_msgSend_setHostViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHostViewController:");
}

id objc_msgSend_setModalPresentationStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModalPresentationStyle:");
}

id objc_msgSend_setMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMode:");
}

id objc_msgSend_setMotion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMotion:");
}

id objc_msgSend_setNumberOfLines_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfLines:");
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKeyedSubscript:");
}

id objc_msgSend_setRegistrationGroups_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRegistrationGroups:");
}

id objc_msgSend_setRevision_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRevision:");
}

id objc_msgSend_setRotationThreshold_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRotationThreshold:");
}

id objc_msgSend_setSemanticContentAttribute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSemanticContentAttribute:");
}

id objc_msgSend_setShowsHorizontalScrollIndicator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsHorizontalScrollIndicator:");
}

id objc_msgSend_setShowsVerticalScrollIndicator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsVerticalScrollIndicator:");
}

id objc_msgSend_setStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStyle:");
}

id objc_msgSend_setText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setText:");
}

id objc_msgSend_setTextAlignment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextAlignment:");
}

id objc_msgSend_setTextColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextColor:");
}

id objc_msgSend_setThreshold_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setThreshold:");
}

id objc_msgSend_setTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeout:");
}

id objc_msgSend_setTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTintColor:");
}

id objc_msgSend_setToolbarHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToolbarHidden:");
}

id objc_msgSend_setToolbarItems_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToolbarItems:animated:");
}

id objc_msgSend_setTranslatesAutoresizingMaskIntoConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTranslatesAutoresizingMaskIntoConstraints:");
}

id objc_msgSend_setValidationOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValidationOptions:");
}

id objc_msgSend_setValue_forHTTPHeaderField_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:forHTTPHeaderField:");
}

id objc_msgSend_setVoiceOptionsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceOptionsView:");
}

id objc_msgSend_setupAssistantStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupAssistantStyle");
}

id objc_msgSend_sharedStatusController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedStatusController");
}

id objc_msgSend_sharedStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedStyle");
}

id objc_msgSend_startDeviceMotionUpdates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startDeviceMotionUpdates");
}

id objc_msgSend_statusType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusType");
}

id objc_msgSend_stop(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stop");
}

id objc_msgSend_stopDeviceMotionUpdates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopDeviceMotionUpdates");
}

id objc_msgSend_stringByAppendingString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingString:");
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithFormat:");
}

id objc_msgSend_stringWithUTF8String_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithUTF8String:");
}

id objc_msgSend_systemBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemBackgroundColor");
}

id objc_msgSend_threshold(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "threshold");
}

id objc_msgSend_titleOffsetFromOrb(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleOffsetFromOrb");
}

id objc_msgSend_topAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "topAnchor");
}

id objc_msgSend_topViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "topViewController");
}

id objc_msgSend_trailingAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trailingAnchor");
}

id objc_msgSend_uppercaseString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uppercaseString");
}

id objc_msgSend_urlRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "urlRequest");
}

id objc_msgSend_userAcceleration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userAcceleration");
}

id objc_msgSend_userAgentHeader(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userAgentHeader");
}

id objc_msgSend_userInterfaceIdiom(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInterfaceIdiom");
}

id objc_msgSend_voicePreviewerAudioOutputDidChangePowerLevel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voicePreviewerAudioOutputDidChangePowerLevel:");
}

id objc_msgSend_voiceSelectionEventHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voiceSelectionEventHandler");
}

id objc_msgSend_voiceSelectionView_receivedRequestToSelectVoice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voiceSelectionView:receivedRequestToSelectVoice:");
}

id objc_msgSend_voiceSelectionViewModel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voiceSelectionViewModel");
}

id objc_msgSend_voiceSelectionViewModelProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voiceSelectionViewModelProvider");
}

id objc_msgSend_voices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voices");
}

id objc_msgSend_widthAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "widthAnchor");
}
