uint64_t sub_1001FD000()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001FD024(uint64_t a1)
{
  uint64_t v1;

  return sub_1001FCC38(a1, v1, "ApplicationActiveStateSource::willEnterForegroundNotification", 1);
}

double sub_1001FD048(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_1001FD058(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1001FD060(uint64_t a1)
{
  uint64_t v1;

  return sub_1001FCC38(a1, v1, "ApplicationActiveStateSource::didEnterBackgroundNotification", 0);
}

ValueMetadata *type metadata accessor for SessionBannerActionTextView()
{
  return &type metadata for SessionBannerActionTextView;
}

uint64_t sub_1001FD09C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1002A00F8, 1);
}

uint64_t sub_1001FD0AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  void *v46;
  unint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t KeyPath;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  char v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t OpaqueTypeConformance2;
  uint64_t v97;
  void *object;
  __int128 v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112;
  _OWORD *v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __n128 v118;
  __int128 v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t result;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  Swift::String v129;
  uint64_t v130;
  void *v131;
  char *v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  char *v145;
  __int128 v146;
  __n128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __n128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  uint64_t v172;
  uint64_t v173;
  __int128 v174;
  __int128 v175;
  __n128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  uint64_t v187;
  _QWORD v188[7];
  char v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char v193;
  uint64_t v194;
  char v195;
  uint64_t v196;
  uint64_t v197;

  v133 = a2;
  v9 = sub_100003DB8(&qword_100326290);
  __chkstk_darwin(v9, v10);
  v12 = (char *)&v127 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  v144 = (char *)&v127 - v15;
  v140 = type metadata accessor for OpacityTransition(0);
  v137 = *(_QWORD *)(v140 - 8);
  __chkstk_darwin(v140, v16);
  v136 = (char *)&v127 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100003DB8(&qword_1003195D0);
  v141 = *(_QWORD *)(v18 - 8);
  v142 = v18;
  __chkstk_darwin(v18, v19);
  v138 = (char *)&v127 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v22);
  v139 = (char *)&v127 - v23;
  v135 = type metadata accessor for Font.Leading(0);
  v24 = *(_QWORD *)(v135 - 8);
  __chkstk_darwin(v135, v25);
  v27 = (char *)&v127 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_100003DB8(&qword_100329638);
  __chkstk_darwin(v28, v29);
  v143 = (char *)&v127 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31, v32);
  v145 = (char *)&v127 - v33;
  if (a3)
  {
    v34 = a3[9];
    v35 = a3[10];
    v134 = a3 + 6;
    sub_100007BBC(a3 + 6, v34);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v35 + 16))(v188, v34, v35);
    if (a1)
    {
      v36 = *(_QWORD *)(a1 + 48);
      if (v36)
      {
        v37 = *(_QWORD *)(v36 + 24);
        if ((v37 & 0x2000000000000000) == 0)
        {
          v38 = *(_QWORD *)(v36 + 16);
          if ((v38 & 0xFFFFFFFFFFFFLL) == 0)
            goto LABEL_17;
LABEL_9:
          v129._countAndFlagsBits = v38;
          v133 = a5;
          v39 = (void *)v37;
          swift_bridgeObjectRetain(v37);
          swift_retain(a1);
          v40 = a1;
          v130 = a1;
          sub_1001BF7E0();
          v42 = v41;
          v44 = v43;
          swift_release(v40);
          if (v44)
            v45 = v42;
          else
            v45 = 0;
          v127 = v45;
          v46 = (void *)0xE000000000000000;
          if (v44)
            v46 = v44;
          v131 = v46;
          *(_QWORD *)&v160 = v38;
          *((_QWORD *)&v160 + 1) = v39;
          v129._object = v39;
          v47 = sub_10002B3F4();
          v48 = swift_bridgeObjectRetain(v39);
          v49 = Text.init<A>(_:)(&v160, &type metadata for String, v47, v48);
          v128 = v50;
          v52 = v51;
          v54 = v53 & 1;
          v55 = static Font.body.getter(v49);
          v132 = v12;
          v56 = v55;
          static Font.Weight.medium.getter(v55);
          v57 = Font.weight(_:)(v56);
          swift_release(v56);
          v58 = v135;
          (*(void (**)(char *, _QWORD, uint64_t))(v24 + 104))(v27, enum case for Font.Leading.tight(_:), v135);
          v59 = Font.leading(_:)(v27, v57);
          swift_release(v57);
          (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v58);
          v60 = v128;
          v61 = Text.font(_:)(v59, v49, v128, v54, v52);
          v63 = v62;
          v65 = v64;
          v135 = v66;
          swift_release(v59);
          v67 = v65 & 1;
          sub_10002B438(v49, v60, v54);
          swift_bridgeObjectRelease(v52);
          v69 = a3[9];
          v68 = a3[10];
          sub_100007BBC(v134, v69);
          v70 = (*(uint64_t (**)(uint64_t, uint64_t))(v68 + 64))(v69, v68);
          v71 = v135;
          v72 = Text.foregroundColor(_:)(v70, v61, v63, v67, v135);
          v74 = v73;
          v76 = v75;
          LOBYTE(v52) = v77 & 1;
          sub_10002B438(v61, v63, v67);
          swift_release(v70);
          swift_bridgeObjectRelease(v71);
          KeyPath = swift_getKeyPath(&unk_10025EBF0);
          v79 = swift_getKeyPath(&unk_10025EC20);
          v80 = swift_getKeyPath(&unk_10025EC50);
          v188[5] = v72;
          v188[6] = v74;
          v189 = v52;
          v190 = v76;
          v191 = KeyPath;
          v192 = 3;
          v193 = 0;
          v194 = v79;
          v195 = 0;
          v196 = v80;
          v197 = 0x3FE0000000000000;
          v82 = static Alignment.leading.getter(v80, v81);
          sub_1001332C8(0, 1, 0.0, 1, INFINITY, 0, 0, 1, (uint64_t)&v160, v84, 0.0, 1, 0.0, 1, v82, v83);
          v85 = v52;
          v86 = (uint64_t)v132;
          sub_10002B438(v72, v74, v85);
          swift_release(v80);
          swift_release(v79);
          swift_release(KeyPath);
          swift_bridgeObjectRelease(v76);
          v185 = v170;
          v186 = v171;
          v187 = v172;
          v181 = v166;
          v182 = v167;
          v183 = v168;
          v184 = v169;
          v177 = v162;
          v178 = v163;
          v179 = v164;
          v180 = v165;
          v175 = v160;
          v176 = v161;
          v87 = v136;
          v88 = OpacityTransition.init()(v161);
          v89 = static Animation.easeInOut.getter(v88);
          v90 = sub_1000052EC(&qword_100318760, (uint64_t (*)(uint64_t))&type metadata accessor for OpacityTransition, (uint64_t)&protocol conformance descriptor for OpacityTransition);
          v92 = v139;
          v91 = v140;
          Transition.animation(_:)(v89, v140, v90);
          swift_release(v89);
          (*(void (**)(char *, uint64_t))(v137 + 8))(v87, v91);
          v94 = v141;
          v93 = v142;
          v95 = v138;
          (*(void (**)(char *, char *, uint64_t))(v141 + 16))(v138, v92, v142);
          *(_QWORD *)&v146 = v91;
          *((_QWORD *)&v146 + 1) = v90;
          OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v146, &opaque type descriptor for <<opaque return type of Transition.animation(_:)>>, 1);
          v97 = AnyTransition.init<A>(_:)(v95, v93, OpaqueTypeConformance2);
          (*(void (**)(char *, uint64_t))(v94 + 8))(v92, v93);
          strcpy((char *)&v160, "GuidanceText-");
          HIWORD(v160) = -4864;
          object = v129._object;
          String.append(_:)(v129);
          swift_bridgeObjectRelease(object);
          v99 = v160;
          v100 = *(_QWORD *)(v130 + 48);
          v101 = v144;
          if (v100)
          {
            v102 = *(_QWORD *)(v100 + 72);
            if (v102)
            {
              v103 = *(_QWORD *)(v100 + 72);
LABEL_20:
              swift_bridgeObjectRetain(v102);
              *v101 = static Alignment.top.getter(v106);
              v101[1] = v107;
              v108 = sub_100003DB8(&qword_1003262B8);
              v109 = v131;
              sub_1001FD9C0(v103, (uint64_t)v188, v127, v131, (uint64_t)v101 + *(int *)(v108 + 44));
              swift_bridgeObjectRelease(v109);
              swift_bridgeObjectRelease(v103);
              v110 = sub_100003DB8(&qword_1003262A0);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 56))(v101, 0, 1, v110);
LABEL_22:
              a5 = v133;
              v105 = (uint64_t)v145;
              sub_10000B234((uint64_t)v101, v86, &qword_100326290);
              v156 = v185;
              v157 = v186;
              v152 = v181;
              v153 = v182;
              v154 = v183;
              v155 = v184;
              v148 = v177;
              v149 = v178;
              v150 = v179;
              v151 = v180;
              v146 = v175;
              v147 = v176;
              *(_QWORD *)&v158 = v187;
              *((_QWORD *)&v158 + 1) = v97;
              v159 = v99;
              v112 = v186;
              v113 = v143;
              *((_OWORD *)v143 + 10) = v185;
              v113[11] = v112;
              v114 = v153;
              v113[6] = v152;
              v113[7] = v114;
              v115 = v155;
              v113[8] = v154;
              v113[9] = v115;
              v116 = v149;
              v113[2] = v148;
              v113[3] = v116;
              v117 = v151;
              v113[4] = v150;
              v113[5] = v117;
              v118 = v147;
              *v113 = v146;
              v113[1] = v118;
              v119 = v159;
              v113[12] = v158;
              v113[13] = v119;
              v120 = sub_100003DB8(&qword_100329640);
              sub_10000B234(v86, (uint64_t)v113 + *(int *)(v120 + 48), &qword_100326290);
              sub_1001FE548((uint64_t)&v146);
              sub_100007FF0((uint64_t)v101, &qword_100326290);
              sub_100007FF0(v86, &qword_100326290);
              v170 = v185;
              v171 = v186;
              v166 = v181;
              v167 = v182;
              v168 = v183;
              v169 = v184;
              v162 = v177;
              v163 = v178;
              v164 = v179;
              v165 = v180;
              v160 = v175;
              v161 = v176;
              v172 = v187;
              v173 = v97;
              v174 = v99;
              sub_1001FE5D4((uint64_t)&v160);
              v121 = sub_100003DB8(&qword_100329648);
              (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 56))(v113, 0, 1, v121);
              sub_1001FE660((uint64_t)v113, v105);
              goto LABEL_23;
            }
            swift_retain(*(_QWORD *)(v130 + 48));
            v103 = sub_1001DD7D8();
            swift_bridgeObjectRetain(v103);
            swift_release(v100);
            if (v103)
            {
              v102 = 0;
              goto LABEL_20;
            }
          }
          swift_bridgeObjectRelease(v131);
          v111 = sub_100003DB8(&qword_1003262A0);
          (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 56))(v101, 1, 1, v111);
          goto LABEL_22;
        }
        if ((v37 & 0xF00000000000000) != 0)
        {
          v38 = *(_QWORD *)(v36 + 16);
          goto LABEL_9;
        }
      }
LABEL_17:
      v104 = sub_100003DB8(&qword_100329648);
      v105 = (uint64_t)v145;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 56))(v145, 1, 1, v104);
LABEL_23:
      sub_1001FE660(v105, a5);
      return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v188);
    }
  }
  else
  {
    v123 = type metadata accessor for UIMetrics();
    v124 = sub_1000052EC((unint64_t *)&qword_100316A00, (uint64_t (*)(uint64_t))type metadata accessor for UIMetrics, (uint64_t)&unk_10024D2FC);
    EnvironmentObject.error()(0, a4, v123, v124);
    __break(1u);
  }
  v125 = type metadata accessor for GuidanceMessagesModel();
  v126 = sub_1000052EC(&qword_1003195D8, (uint64_t (*)(uint64_t))type metadata accessor for GuidanceMessagesModel, (uint64_t)&unk_10024D2FC);
  result = EnvironmentObject.error()(0, v133, v125, v126);
  __break(1u);
  return result;
}

uint64_t sub_1001FD9C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *object;
  unint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  double v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __n128 v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t OpaqueTypeConformance2;
  uint64_t v85;
  Swift::String v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  Swift::String v107;
  char v108;
  _BYTE v109[7];
  _BYTE v110[7];
  _BYTE v111[7];
  char v112;
  _BYTE v113[7];
  char v114;
  __int128 v115;
  __int128 v116;
  __n128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  uint64_t v130;
  _OWORD v131[17];
  Swift::String v132;
  __int128 v133;
  __n128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  uint64_t v147;
  uint64_t v148;
  Swift::String v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  _BYTE v153[7];
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char v157;
  _BYTE v158[7];
  uint64_t v159;
  char v160;
  _BYTE v161[7];
  uint64_t v162;
  uint64_t v163;
  char v164;
  _BYTE v165[7];
  double v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char v170;

  v107._countAndFlagsBits = a3;
  v107._object = a4;
  v105 = a5;
  v102 = type metadata accessor for OpacityTransition(0);
  v100 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102, v7);
  v97 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_100003DB8(&qword_1003195D0);
  v101 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103, v9);
  v99 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  v98 = (char *)&v92 - v13;
  v14 = type metadata accessor for Font.Leading(0);
  v95 = *(_QWORD *)(v14 - 8);
  v96 = v14;
  __chkstk_darwin(v14, v15);
  v17 = (char *)&v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100003DB8(&qword_1003262C0);
  __chkstk_darwin(v18, v19);
  v104 = (uint64_t)&v92 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v22);
  v106 = (uint64_t)&v92 - v23;
  if (*(_QWORD *)(a1 + 16) < 2uLL)
  {
    v32 = sub_100003DB8(&qword_1003262C8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v106, 1, 1, v32);
  }
  else
  {
    *(_QWORD *)&v131[0] = a1;
    KeyPath = swift_getKeyPath(&unk_10025EC88);
    sub_100007CBC(a2, (uint64_t)&v132);
    v25 = swift_allocObject(&unk_1002F9AE8, 56, 7);
    sub_100007D04((__int128 *)&v132._countAndFlagsBits, v25 + 16);
    swift_bridgeObjectRetain(a1);
    v26 = sub_100003DB8(&qword_100317980);
    v27 = sub_100003DB8(&qword_1003262D8);
    v28 = sub_1000084FC(&qword_100319618, &qword_100317980, (uint64_t)&protocol conformance descriptor for [A]);
    v29 = sub_1001B2750();
    v30 = v106;
    ForEach<>.init(_:id:content:)(v131, KeyPath, sub_1001FE6CC, v25, v26, v27, v28, &protocol witness table for String, v29);
    v31 = sub_100003DB8(&qword_1003262C8);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 0, 1, v31);
  }
  object = v107._object;
  v132 = v107;
  v34 = sub_10002B3F4();
  v35 = swift_bridgeObjectRetain(object);
  v36 = Text.init<A>(_:)(&v132, &type metadata for String, v34, v35);
  v38 = v37;
  v94 = v39;
  v41 = v40 & 1;
  v42 = static Font.subheadline.getter();
  static Font.Weight.medium.getter(v42);
  v43 = Font.weight(_:)(v42);
  swift_release(v42);
  v44 = v95;
  v45 = v96;
  (*(void (**)(char *, _QWORD, uint64_t))(v95 + 104))(v17, enum case for Font.Leading.tight(_:), v96);
  v46 = Font.leading(_:)(v17, v43);
  swift_release(v43);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v17, v45);
  v47 = v94;
  v48 = Text.font(_:)(v46, v36, v38, v41, v94);
  v50 = v49;
  LOBYTE(v44) = v51;
  v93 = v52;
  swift_release(v46);
  v53 = v44 & 1;
  sub_10002B438(v36, v38, v41);
  swift_bridgeObjectRelease(v47);
  v54 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v55 = Color.init(_:)(v54);
  v56 = v93;
  v57 = Text.foregroundColor(_:)(v55, v48, v50, v53, v93);
  v95 = v58;
  v96 = v57;
  v60 = v59;
  LOBYTE(v38) = v61;
  swift_release(v55);
  LOBYTE(v55) = v38 & 1;
  sub_10002B438(v48, v50, v53);
  swift_bridgeObjectRelease(v56);
  v62 = swift_getKeyPath(&unk_10025EBF0);
  v63 = swift_getKeyPath(&unk_10025EC20);
  v64 = swift_getKeyPath(&unk_10025EC50);
  LOBYTE(v50) = static Edge.Set.top.getter(v64);
  v65 = EdgeInsets.init(_all:)(4.0);
  v114 = v55;
  v112 = 0;
  v108 = 0;
  v150 = v57;
  v151 = v60;
  v152 = v55;
  *(_DWORD *)v153 = *(_DWORD *)v113;
  *(_DWORD *)&v153[3] = *(_DWORD *)&v113[3];
  v66 = v95;
  v154 = v95;
  v155 = v62;
  v156 = 3;
  v157 = 0;
  *(_DWORD *)&v158[3] = *(_DWORD *)&v111[3];
  *(_DWORD *)v158 = *(_DWORD *)v111;
  v159 = v63;
  v160 = 0;
  *(_DWORD *)&v161[3] = *(_DWORD *)&v110[3];
  *(_DWORD *)v161 = *(_DWORD *)v110;
  v162 = v64;
  v163 = 0x3FE0000000000000;
  v164 = v50;
  *(_DWORD *)&v165[3] = *(_DWORD *)&v109[3];
  *(_DWORD *)v165 = *(_DWORD *)v109;
  v166 = v65;
  v167 = v67;
  v168 = v68;
  v169 = v69;
  v170 = 0;
  v72 = static Alignment.leading.getter(v70, v71);
  sub_10013348C(0, 1, 0.0, 1, INFINITY, 0, 0, 1, (uint64_t)&v132, v74, 0.0, 1, 0.0, 1, v72, v73);
  sub_10002B438(v96, v60, v55);
  swift_release(v64);
  swift_release(v63);
  swift_release(v62);
  swift_bridgeObjectRelease(v66);
  v128 = v145;
  v129 = v146;
  v124 = v141;
  v125 = v142;
  v126 = v143;
  v127 = v144;
  v120 = v137;
  v121 = v138;
  v130 = v147;
  v122 = v139;
  v123 = v140;
  v115 = (__int128)v132;
  v116 = v133;
  v117 = v134;
  v118 = v135;
  v119 = v136;
  v75 = v97;
  v76 = OpacityTransition.init()(v134);
  v77 = static Animation.easeInOut.getter(v76);
  v78 = sub_1000052EC(&qword_100318760, (uint64_t (*)(uint64_t))&type metadata accessor for OpacityTransition, (uint64_t)&protocol conformance descriptor for OpacityTransition);
  v79 = v98;
  v80 = v102;
  Transition.animation(_:)(v77, v102, v78);
  swift_release(v77);
  (*(void (**)(char *, uint64_t))(v100 + 8))(v75, v80);
  v81 = v101;
  v82 = v99;
  v83 = v103;
  (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v99, v79, v103);
  *(_QWORD *)&v131[0] = v80;
  *((_QWORD *)&v131[0] + 1) = v78;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v131, &opaque type descriptor for <<opaque return type of Transition.animation(_:)>>, 1);
  v85 = AnyTransition.init<A>(_:)(v82, v83, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v79, v83);
  v132._countAndFlagsBits = 0xD000000000000010;
  v132._object = (void *)0x8000000100264230;
  String.append(_:)(v107);
  v86 = v132;
  v87 = v106;
  v88 = v104;
  sub_10000B234(v106, v104, &qword_1003262C0);
  v89 = v105;
  sub_10000B234(v88, v105, &qword_1003262C0);
  v90 = *(int *)(sub_100003DB8(&qword_1003262D0) + 48);
  v131[12] = v127;
  v131[13] = v128;
  v131[14] = v129;
  v131[8] = v123;
  v131[9] = v124;
  v131[10] = v125;
  v131[11] = v126;
  v131[4] = v119;
  v131[5] = v120;
  v131[6] = v121;
  v131[7] = v122;
  v131[0] = v115;
  v131[1] = v116;
  v131[2] = v117;
  v131[3] = v118;
  *(_QWORD *)&v131[15] = v130;
  *((_QWORD *)&v131[15] + 1) = v85;
  v131[16] = v86;
  memcpy((void *)(v89 + v90), v131, 0x110uLL);
  sub_1001B25C4((uint64_t)v131);
  sub_100007FF0(v87, &qword_1003262C0);
  v144 = v127;
  v145 = v128;
  v146 = v129;
  v140 = v123;
  v141 = v124;
  v142 = v125;
  v143 = v126;
  v136 = v119;
  v137 = v120;
  v138 = v121;
  v139 = v122;
  v132 = (Swift::String)v115;
  v133 = v116;
  v134 = v117;
  v135 = v118;
  v147 = v130;
  v148 = v85;
  v149 = v86;
  sub_1001B2650((uint64_t)&v132);
  return sub_100007FF0(v88, &qword_1003262C0);
}

uint64_t sub_1001FE19C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  unint64_t v41;
  _QWORD v43[2];
  _OWORD v44[15];
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  _BYTE v51[7];
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  _BYTE v56[7];
  uint64_t v57;
  char v58;
  _BYTE v59[7];
  uint64_t v60;
  uint64_t v61;
  char v62;
  _BYTE v63[7];
  double v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char v69;
  _BYTE v70[7];
  _BYTE v71[7];
  _BYTE v72[7];
  char v73;
  _BYTE v74[7];
  char v75;
  _OWORD v76[15];
  uint64_t v77;

  v43[1] = a2;
  v3 = type metadata accessor for Font.Leading(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  v7 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  v9 = a1[1];
  *(_QWORD *)&v44[0] = v8;
  *((_QWORD *)&v44[0] + 1) = v9;
  v10 = sub_10002B3F4();
  v11 = swift_bridgeObjectRetain(v9);
  v12 = Text.init<A>(_:)(v44, &type metadata for String, v10, v11);
  v14 = v13;
  v43[0] = v15;
  v17 = v16 & 1;
  v18 = static Font.subheadline.getter();
  static Font.Weight.medium.getter(v18);
  v19 = Font.weight(_:)(v18);
  swift_release(v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v7, enum case for Font.Leading.tight(_:), v3);
  v20 = Font.leading(_:)(v7, v19);
  swift_release(v19);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  v21 = v43[0];
  v22 = Text.font(_:)(v20, v12, v14, v17, v43[0]);
  v24 = v23;
  LOBYTE(v3) = v25;
  v27 = v26;
  swift_release(v20);
  LOBYTE(v20) = v3 & 1;
  sub_10002B438(v12, v14, v17);
  swift_bridgeObjectRelease(v21);
  KeyPath = swift_getKeyPath(&unk_10025EBF0);
  v29 = swift_getKeyPath(&unk_10025EC20);
  v30 = swift_getKeyPath(&unk_10025EC50);
  LOBYTE(v3) = static Edge.Set.top.getter(v30);
  v31 = EdgeInsets.init(_all:)(4.0);
  v75 = v20;
  v73 = 0;
  v69 = 0;
  v48 = v22;
  v49 = v24;
  v50 = v20;
  *(_DWORD *)v51 = *(_DWORD *)v74;
  *(_DWORD *)&v51[3] = *(_DWORD *)&v74[3];
  v52 = v27;
  v53 = KeyPath;
  v54 = 3;
  v55 = 0;
  *(_DWORD *)&v56[3] = *(_DWORD *)&v72[3];
  *(_DWORD *)v56 = *(_DWORD *)v72;
  v57 = v29;
  v58 = 0;
  *(_DWORD *)&v59[3] = *(_DWORD *)&v71[3];
  *(_DWORD *)v59 = *(_DWORD *)v71;
  v60 = v30;
  v61 = 0x3FE0000000000000;
  v62 = v3;
  *(_DWORD *)&v63[3] = *(_DWORD *)&v70[3];
  *(_DWORD *)v63 = *(_DWORD *)v70;
  v64 = v31;
  v65 = v32;
  v66 = v33;
  v67 = v34;
  v68 = 0;
  v37 = static Alignment.leading.getter(v35, v36);
  sub_10013348C(0, 1, 0.0, 1, INFINITY, 0, 0, 1, (uint64_t)v44, v39, 0.0, 1, 0.0, 1, v37, v38);
  sub_10002B438(v22, v24, v20);
  swift_release(v30);
  swift_release(v29);
  swift_release(KeyPath);
  swift_bridgeObjectRelease(v27);
  v76[12] = v44[12];
  v76[13] = v44[13];
  v76[14] = v44[14];
  v77 = v45;
  v76[8] = v44[8];
  v76[9] = v44[9];
  v76[10] = v44[10];
  v76[11] = v44[11];
  v76[4] = v44[4];
  v76[5] = v44[5];
  v76[6] = v44[6];
  v76[7] = v44[7];
  v76[0] = v44[0];
  v76[1] = v44[1];
  v76[2] = v44[2];
  v76[3] = v44[3];
  v46 = 0;
  v47 = 0;
  v40 = sub_100003DB8(&qword_1003262F0);
  v41 = sub_1001B27D4();
  View.accessibilityHidden(_:)(1, v40, v41);
  return sub_100152A78((uint64_t)v76);
}

uint64_t sub_1001FE524@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1001FD0AC(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1001FE548(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(_QWORD *)(a1 + 200);
  v7 = *(_QWORD *)(a1 + 216);
  sub_10002B750(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_bridgeObjectRetain(v7);
  return a1;
}

uint64_t sub_1001FE5D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(_QWORD *)(a1 + 200);
  v7 = *(_QWORD *)(a1 + 216);
  sub_10002B438(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRelease(v7);
  swift_release(v6);
  swift_release(v5);
  swift_release(v4);
  swift_release(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t sub_1001FE660(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100003DB8(&qword_100329638);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001FE6A8()
{
  uint64_t v0;

  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001FE6CC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001FE19C(a1, a2);
}

unint64_t sub_1001FE6D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100329650;
  if (!qword_100329650)
  {
    v1 = sub_100007FAC(&qword_100329638);
    sub_1000084FC(&qword_100329658, &qword_100329648, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_100329650);
  }
  return result;
}

void sub_1001FE754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a1 & 0x8000000000000000) == 0)
    __asm { BR              X9 }
  __break(1u);
  JUMPOUT(0x1001FEAF4);
}

ValueMetadata *type metadata accessor for BuiltInSelectRoadsidePhoneNumberFooterView()
{
  return &type metadata for BuiltInSelectRoadsidePhoneNumberFooterView;
}

uint64_t sub_1001FEB3C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1002A013C, 1);
}

uint64_t sub_1001FEB4C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t KeyPath;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  unint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t OpaqueTypeConformance2;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t result;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD v89[4];
  __int128 v90;

  v88 = a2;
  v3 = type metadata accessor for KeyboardShortcut(0);
  v84 = *(_QWORD *)(v3 - 8);
  v85 = v3;
  __chkstk_darwin(v3, v4);
  v83 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for BorderlessButtonStyle(0);
  v81 = *(_QWORD *)(v6 - 8);
  v82 = v6;
  __chkstk_darwin(v6, v7);
  v80 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = type metadata accessor for ControlSize(0);
  v9 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71, v10);
  v12 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_100003DB8(&qword_100319520);
  v69 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70, v13);
  v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100003DB8(&qword_100319528);
  __chkstk_darwin(v16, v17);
  v19 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_100003DB8(&qword_100319530);
  v75 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77, v20);
  v74 = (char *)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100003DB8(&qword_100319538);
  v78 = *(_QWORD *)(v22 - 8);
  v79 = v22;
  __chkstk_darwin(v22, v23);
  v76 = (char *)&v69 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_100003DB8(&qword_100319540);
  __chkstk_darwin(v72, v25);
  v27 = (char *)&v69 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_100003DB8(&qword_100319548);
  v86 = *(_QWORD *)(v28 - 8);
  v87 = v28;
  __chkstk_darwin(v28, v29);
  v73 = (uint64_t)&v69 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = *a1;
  if (*a1)
  {
    swift_retain(*a1);
    v32 = sub_100062C88();
    swift_release(v31);
    swift_bridgeObjectRelease(v32);
    v33 = a1[4];
    if (!sub_10008476C() || v32)
    {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v86 + 56))(v88, 1, 1, v87);
    }
    else
    {
      v34 = swift_allocObject(&unk_1002F9BE8, 72, 7);
      v35 = *((_OWORD *)a1 + 1);
      *(_OWORD *)(v34 + 16) = *(_OWORD *)a1;
      *(_OWORD *)(v34 + 32) = v35;
      *(_OWORD *)(v34 + 48) = *((_OWORD *)a1 + 2);
      v36 = a1[6];
      *(_QWORD *)(v34 + 64) = v36;
      v90 = v35;
      swift_retain(v31);
      sub_100031A88(&v90);
      swift_retain(v33);
      swift_retain(v36);
      v37 = sub_100003DB8(&qword_100319570);
      v38 = sub_10004A808();
      Button.init(action:label:)(sub_1001FF744, v34, sub_1001FF578, 0, v37, v38);
      v39 = v71;
      (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v12, enum case for ControlSize.large(_:), v71);
      KeyPath = swift_getKeyPath(&unk_10025ED20);
      v41 = (uint64_t *)&v19[*(int *)(v16 + 36)];
      v42 = sub_100003DB8(&qword_100316C38);
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))((char *)v41 + *(int *)(v42 + 28), v12, v39);
      *v41 = KeyPath;
      v43 = v69;
      v44 = v70;
      (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v19, v15, v70);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v39);
      v45 = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v15, v44);
      v46 = v80;
      BorderlessButtonStyle.init()(v45);
      v47 = sub_1001FF76C();
      v48 = sub_1000052EC(&qword_100319590, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
      v49 = v74;
      v50 = v82;
      View.buttonStyle<A>(_:)(v46, v16, v82, v47, v48);
      (*(void (**)(char *, uint64_t))(v81 + 8))(v46, v50);
      v51 = sub_100007FF0((uint64_t)v19, &qword_100319528);
      v52 = v83;
      static KeyboardShortcut.defaultAction.getter(v51);
      v89[0] = v16;
      v89[1] = v50;
      v89[2] = v47;
      v89[3] = v48;
      OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v89, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
      v55 = v76;
      v54 = v77;
      View.keyboardShortcut(_:)(v52, v77, OpaqueTypeConformance2);
      (*(void (**)(char *, uint64_t))(v84 + 8))(v52, v85);
      v56 = (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v49, v54);
      LOBYTE(v54) = static Edge.Set.top.getter(v56);
      v58 = v78;
      v57 = v79;
      (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v27, v55, v79);
      v59 = &v27[*(int *)(v72 + 36)];
      *v59 = v54;
      *(_OWORD *)(v59 + 8) = 0u;
      *(_OWORD *)(v59 + 24) = 0u;
      v59[40] = 1;
      v60 = (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v55, v57);
      LOBYTE(v54) = static Edge.Set.bottom.getter(v60);
      v61 = v73;
      sub_1001FF808((uint64_t)v27, v73);
      v62 = v87;
      v63 = v61 + *(int *)(v87 + 36);
      *(_BYTE *)v63 = v54;
      *(_OWORD *)(v63 + 8) = 0u;
      *(_OWORD *)(v63 + 24) = 0u;
      *(_BYTE *)(v63 + 40) = 1;
      sub_100007FF0((uint64_t)v27, &qword_100319540);
      v64 = v88;
      sub_1001FF850(v61, v88);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v86 + 56))(v64, 0, 1, v62);
    }
  }
  else
  {
    v66 = a1[1];
    v67 = type metadata accessor for RoadsideAssistanceModel();
    v68 = sub_1000052EC(&qword_100318688, (uint64_t (*)(uint64_t))type metadata accessor for RoadsideAssistanceModel, (uint64_t)&unk_10024D2FC);
    result = EnvironmentObject.error()(0, v66, v67, v68);
    __break(1u);
  }
  return result;
}

void sub_1001FF180()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;

  v1 = v0;
  v2 = v0[2];
  if (v2)
  {
    v3 = (_QWORD *)v0[4];
    swift_retain(v0[2]);
    v4 = sub_1000AE9AC(v3, 0, 3);
    v5 = swift_release(v2);
    if ((v4 & 1) != 0)
    {
      ((void (*)(uint64_t))v1[5])(v5);
    }
    else
    {
      if (qword_1003158B0 != -1)
        swift_once(&qword_1003158B0, sub_1000D9854);
      v6 = type metadata accessor for Logger(0);
      sub_10000D744(v6, (uint64_t)qword_10033FEC8);
      v23 = *(_OWORD *)v1;
      v7 = v1[6];
      swift_retain(v2);
      sub_100031A88(&v23);
      swift_retain(v3);
      swift_retain(v7);
      swift_retain(v2);
      sub_100031A88(&v23);
      swift_retain(v3);
      swift_retain(v7);
      swift_retain(v2);
      sub_100031A88(&v23);
      swift_retain(v3);
      swift_retain(v7);
      swift_retain(v2);
      sub_100031A88(&v23);
      swift_retain(v3);
      swift_retain(v7);
      v9 = Logger.logObject.getter(v8);
      v10 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = swift_slowAlloc(22, -1);
        v20 = swift_slowAlloc(64, -1);
        v22 = v20;
        *(_DWORD *)v11 = 136446467;
        swift_retain(v2);
        v12 = sub_1000AD18C();
        v14 = v13;
        swift_release(v2);
        v21 = sub_100172BEC(v12, v14, &v22);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v11 + 4, v11 + 12);
        swift_bridgeObjectRelease(v14);
        sub_100042AD0(&v23);
        swift_release(v7);
        swift_release(v3);
        swift_release(v2);
        sub_100042AD0(&v23);
        swift_release(v7);
        swift_release(v3);
        swift_release(v2);
        *(_WORD *)(v11 + 12) = 2081;
        v16 = v3[2];
        v15 = v3[3];
        swift_bridgeObjectRetain(v15);
        v21 = sub_100172BEC(v16, v15, &v22);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v11 + 14, v11 + 22);
        swift_bridgeObjectRelease(v15);
        sub_100042AD0(&v23);
        swift_release(v7);
        swift_release(v3);
        swift_release(v2);
        sub_100042AD0(&v23);
        swift_release(v7);
        swift_release(v3);
        swift_release(v2);
        _os_log_impl((void *)&_mh_execute_header, v9, v10, "[%{public}s] QuestionnaireBodyView: failed to record skip for %{private}s", (uint8_t *)v11, 0x16u);
        swift_arrayDestroy(v20, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v20, -1, -1);
        swift_slowDealloc(v11, -1, -1);

      }
      else
      {
        sub_100042AD0(&v23);
        swift_release(v7);
        swift_release(v3);
        swift_release(v2);
        sub_100042AD0(&v23);
        swift_release(v7);
        swift_release(v3);
        swift_release(v2);
        sub_100042AD0(&v23);
        swift_release(v7);
        swift_release(v3);
        swift_release(v2);
        sub_100042AD0(&v23);

        swift_release(v7);
        swift_release(v3);
        swift_release(v2);
      }
    }
  }
  else
  {
    v17 = v0[3];
    v18 = type metadata accessor for QuestionnaireState();
    v19 = sub_1000052EC(&qword_100316A18, (uint64_t (*)(uint64_t))type metadata accessor for QuestionnaireState, (uint64_t)&unk_10024D2FC);
    EnvironmentObject.error()(0, v17, v18, v19);
    __break(1u);
  }
}

__n128 sub_1001FF578@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t KeyPath;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __n128 result;
  _OWORD v19[9];

  v2 = LocalizedStringKey.init(stringLiteral:)(1885956947, 0xE400000000000000);
  v3 = Text.init(_:tableName:bundle:comment:)(v2);
  v5 = v4;
  v7 = v6;
  v9 = v8 & 1;
  v10 = static Alignment.center.getter(v3);
  sub_1001315E8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v19, 0.0, 1, 0.0, 1, v10, v11, v3, v5, v9, v7);
  sub_10002B438(v3, v5, v9);
  v12 = swift_bridgeObjectRelease(v7);
  v13 = static Color.green.getter(v12);
  KeyPath = swift_getKeyPath(&unk_10025ED50);
  v15 = v19[7];
  *(_OWORD *)(a1 + 96) = v19[6];
  *(_OWORD *)(a1 + 112) = v15;
  *(_OWORD *)(a1 + 128) = v19[8];
  v16 = v19[3];
  *(_OWORD *)(a1 + 32) = v19[2];
  *(_OWORD *)(a1 + 48) = v16;
  v17 = v19[5];
  *(_OWORD *)(a1 + 64) = v19[4];
  *(_OWORD *)(a1 + 80) = v17;
  result = (__n128)v19[1];
  *(_OWORD *)a1 = v19[0];
  *(__n128 *)(a1 + 16) = result;
  *(_QWORD *)(a1 + 144) = KeyPath;
  *(_QWORD *)(a1 + 152) = v13;
  return result;
}

uint64_t sub_1001FF6A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v4;
  uint64_t v5;
  _OWORD v7[3];
  uint64_t v8;

  v4 = *(_OWORD *)(v2 + 16);
  v7[0] = *(_OWORD *)v2;
  v7[1] = v4;
  v7[2] = *(_OWORD *)(v2 + 32);
  v8 = *(_QWORD *)(v2 + 48);
  *(_QWORD *)a2 = static HorizontalAlignment.center.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  v5 = sub_100003DB8(&qword_100329660);
  return sub_1001FEB4C((uint64_t *)v7, a2 + *(int *)(v5 + 44));
}

uint64_t sub_1001FF708()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[6]);
  swift_release(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

void sub_1001FF744()
{
  sub_1001FF180();
}

unint64_t sub_1001FF76C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100319580;
  if (!qword_100319580)
  {
    v1 = sub_100007FAC(&qword_100319528);
    sub_1000084FC(&qword_100319588, &qword_100319520, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_1000084FC(&qword_100316C30, &qword_100316C38, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100319580);
  }
  return result;
}

uint64_t sub_1001FF808(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100003DB8(&qword_100319540);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001FF850(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100003DB8(&qword_100319548);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001FF8A0()
{
  return sub_1000084FC(&qword_100329668, qword_100329670, (uint64_t)&protocol conformance descriptor for VStack<A>);
}

uint64_t sub_1001FF8CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  unint64_t v8;
  unint64_t v9;
  _QWORD v10[7];
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;

  v10[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v10[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v10[2] = &unk_10025EE18;
  v10[3] = &unk_10025EE18;
  v10[4] = (char *)&value witness table for () + 64;
  v5 = *(_QWORD *)(a1 + 80);
  v6 = type metadata accessor for ValueWithHysteresis.Hysteresis(255, v5, *(_QWORD *)(a1 + 88), a4);
  result = type metadata accessor for Optional(319, v6);
  if (v8 <= 0x3F)
  {
    v10[5] = *(_QWORD *)(result - 8) + 64;
    v10[6] = &unk_10025EE30;
    result = type metadata accessor for Optional(319, v5);
    if (v9 <= 0x3F)
    {
      v11 = *(_QWORD *)(result - 8) + 64;
      v12 = (char *)&value witness table for Builtin.Int64 + 64;
      v13 = v11;
      v14 = (char *)&value witness table for Builtin.Int64 + 64;
      return swift_initClassMetadata2(a1, 0, 11, v10, a1 + 96);
    }
  }
  return result;
}

char *sub_1001FF9AC()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t);

  v1 = *(_QWORD *)v0;
  swift_release(*((_QWORD *)v0 + 2));
  swift_release(*((_QWORD *)v0 + 3));
  swift_unknownObjectRelease(*((_QWORD *)v0 + 4));
  swift_bridgeObjectRelease(*((_QWORD *)v0 + 7));
  swift_release(*((_QWORD *)v0 + 9));
  v2 = &v0[*(_QWORD *)(*(_QWORD *)v0 + 136)];
  v3 = *(_QWORD *)(v1 + 80);
  v5 = type metadata accessor for ValueWithHysteresis.Hysteresis(255, v3, *(_QWORD *)(v1 + 88), v4);
  v6 = type metadata accessor for Optional(0, v5);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v2, v6);
  v7 = &v0[*(_QWORD *)(*(_QWORD *)v0 + 152)];
  v8 = type metadata accessor for Optional(0, v3);
  v9 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(&v0[*(_QWORD *)(*(_QWORD *)v0 + 168)], v8);
  return v0;
}

uint64_t sub_1001FFA7C()
{
  uint64_t v0;

  sub_1001FF9AC();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t type metadata accessor for ValueWithHysteresis(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100005D84(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ValueWithHysteresis);
}

uint64_t type metadata accessor for ValueWithHysteresis.Hysteresis(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100005D84(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ValueWithHysteresis.Hysteresis);
}

uint64_t sub_1001FFAB8(uint64_t a1, uint64_t a2, void (*a3)(__n128))
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  __n128 v7;
  _BYTE v8[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  result = swift_weakLoadStrong(v4);
  if (result)
  {
    v6 = result;
    v7 = swift_retain(result);
    a3(v7);
    return swift_release_n(v6, 2);
  }
  return result;
}

uint64_t sub_1001FFB2C()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(*(id *)(v0 + 16), "invalidate");
  v1 = *(void **)(v0 + 16);
  *(_QWORD *)(v0 + 16) = 0;

  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for TimerBasedHysteresisSchedulerEvent()
{
  return objc_opt_self(_TtC8SOSBuddy34TimerBasedHysteresisSchedulerEvent);
}

uint64_t type metadata accessor for TimerBasedHysteresisScheduler()
{
  return objc_opt_self(_TtC8SOSBuddy29TimerBasedHysteresisScheduler);
}

uint64_t sub_1001FFBAC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[1] = &unk_10025EEE0;
  result = type metadata accessor for Optional(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 3, v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t *sub_1001FFC30(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  size_t v8;
  int v9;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  __int128 v16;
  void *v17;
  const void *v18;
  unsigned int (*v19)(const void *, uint64_t, uint64_t);

  v3 = a1;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6;
  if (*(_DWORD *)(v5 + 84))
    v8 = *(_QWORD *)(v5 + 64);
  else
    v8 = *(_QWORD *)(v5 + 64) + 1;
  v9 = v6 & 0x100000;
  if (v7 > 7 || v9 != 0 || ((v7 + 24) & ~v7) + v8 > 0x18)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
    swift_retain(v12);
  }
  else
  {
    v14 = *a2;
    v13 = (unint64_t)a2 + 15;
    *a1 = v14;
    v15 = (_OWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    v16 = *(_OWORD *)(v13 & 0xFFFFFFFFFFFFFFF8);
    *v15 = v16;
    v17 = (void *)(((unint64_t)v15 + v7 + 16) & ~v7);
    v18 = (const void *)(((v13 & 0xFFFFFFFFFFFFFFF8) + v7 + 16) & ~v7);
    v19 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48);
    swift_unknownObjectRetain(v16);
    if (v19(v18, 1, v4))
    {
      memcpy(v17, v18, v8);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v17, v18, v4);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v17, 0, 1, v4);
    }
  }
  return v3;
}

uint64_t sub_1001FFD60(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;

  v3 = (_QWORD *)((a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v4 = swift_unknownObjectRelease(*v3);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = ((unint64_t)v3 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v6 + 48))(v7, 1, v5, v4);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v6 + 8))(v7, v5);
  return result;
}

_QWORD *sub_1001FFDE0(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  size_t v14;

  v5 = *a2;
  v4 = (unint64_t)a2 + 15;
  *a1 = v5;
  v6 = (_OWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v7 = *(_OWORD *)(v4 & 0xFFFFFFFFFFFFFFF8);
  *v6 = v7;
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (void *)(((unint64_t)v6 + v10 + 16) & ~v10);
  v12 = (const void *)((v10 + 16 + (v4 & 0xFFFFFFFFFFFFFFF8)) & ~v10);
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
  swift_unknownObjectRetain(v7);
  if (v13(v12, 1, v8))
  {
    if (*(_DWORD *)(v9 + 84))
      v14 = *(_QWORD *)(v9 + 64);
    else
      v14 = *(_QWORD *)(v9 + 64) + 1;
    memcpy(v11, v12, v14);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v11, v12, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v11, 0, 1, v8);
  }
  return a1;
}

_QWORD *sub_1001FFEB8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t, __n128);
  int v17;
  size_t v18;

  *a1 = *a2;
  v5 = (uint64_t *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (uint64_t *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  v7 = *v6;
  v8 = v6[1];
  v9 = *v5;
  *v5 = *v6;
  swift_unknownObjectRetain(v7);
  v10 = swift_unknownObjectRelease(v9);
  v5[1] = v8;
  v11 = *(_QWORD *)(a3 + 16);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (void *)(((unint64_t)v5 + v13 + 16) & ~v13);
  v15 = (const void *)(((unint64_t)v6 + v13 + 16) & ~v13);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t, __n128))(v12 + 48);
  LODWORD(v6) = v16(v14, 1, v11, v10);
  v17 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v16)(v15, 1, v11);
  if ((_DWORD)v6)
  {
    if (!v17)
    {
      (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v14, v15, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v14, 0, 1, v11);
      return a1;
    }
  }
  else
  {
    if (!v17)
    {
      (*(void (**)(void *, const void *, uint64_t))(v12 + 24))(v14, v15, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  }
  if (*(_DWORD *)(v12 + 84))
    v18 = *(_QWORD *)(v12 + 64);
  else
    v18 = *(_QWORD *)(v12 + 64) + 1;
  memcpy(v14, v15, v18);
  return a1;
}

_QWORD *sub_1001FFFEC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t, __n128);
  int v16;
  size_t v17;

  *a1 = *a2;
  v5 = (uint64_t *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (uint64_t *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  v7 = v6[1];
  v8 = *v5;
  *v5 = *v6;
  v9 = swift_unknownObjectRelease(v8);
  v5[1] = v7;
  v10 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (void *)(((unint64_t)v5 + v12 + 16) & ~v12);
  v14 = (const void *)(((unint64_t)v6 + v12 + 16) & ~v12);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t, __n128))(v11 + 48);
  LODWORD(v6) = v15(v13, 1, v10, v9);
  v16 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v15)(v14, 1, v10);
  if ((_DWORD)v6)
  {
    if (!v16)
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v13, v14, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v10);
      return a1;
    }
  }
  else
  {
    if (!v16)
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 40))(v13, v14, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  }
  if (*(_DWORD *)(v11 + 84))
    v17 = *(_QWORD *)(v11 + 64);
  else
    v17 = *(_QWORD *)(v11 + 64) + 1;
  memcpy(v13, v14, v17);
  return a1;
}

uint64_t sub_100200118(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  char v12;
  int v13;
  unsigned int v15;
  int v16;
  unint64_t *v17;
  unint64_t v18;
  unsigned int v19;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5)
    v6 = v5 - 1;
  else
    v6 = 0;
  if (v6 <= 0x7FFFFFFE)
    v7 = 2147483646;
  else
    v7 = v6;
  if (v5)
    v8 = *(_QWORD *)(v4 + 64);
  else
    v8 = *(_QWORD *)(v4 + 64) + 1;
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v4 + 80);
  v10 = a2 - v7;
  if (a2 <= v7)
    goto LABEL_28;
  v11 = v8 + ((v9 + 24) & ~v9);
  v12 = 8 * v11;
  if (v11 <= 3)
  {
    v15 = ((v10 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v15))
    {
      v13 = *(_DWORD *)(a1 + v11);
      if (!v13)
        goto LABEL_28;
      goto LABEL_21;
    }
    if (v15 > 0xFF)
    {
      v13 = *(unsigned __int16 *)(a1 + v11);
      if (!*(_WORD *)(a1 + v11))
        goto LABEL_28;
      goto LABEL_21;
    }
    if (v15 < 2)
    {
LABEL_28:
      v17 = (unint64_t *)((a1 + 15) & 0xFFFFFFFFFFFFFFF8);
      if (v6 > 0x7FFFFFFE)
      {
        v19 = (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)v17 + v9 + 16) & ~v9);
        if (v19 >= 2)
          return v19 - 1;
        else
          return 0;
      }
      else
      {
        v18 = *v17;
        if (v18 >= 0xFFFFFFFF)
          LODWORD(v18) = -1;
        if ((v18 + 1) >= 2)
          return v18;
        else
          return 0;
      }
    }
  }
  v13 = *(unsigned __int8 *)(a1 + v11);
  if (!*(_BYTE *)(a1 + v11))
    goto LABEL_28;
LABEL_21:
  v16 = (v13 - 1) << v12;
  if (v11 > 3)
    v16 = 0;
  if ((_DWORD)v11)
  {
    if (v11 > 3)
      LODWORD(v11) = 4;
    __asm { BR              X12 }
  }
  return v7 + v16 + 1;
}

void sub_1002002AC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  size_t v12;
  BOOL v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= 0x7FFFFFFE)
    v10 = 2147483646;
  else
    v10 = v9;
  v11 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v11;
  v12 = ((*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)) + v11;
  v13 = a3 >= v10;
  v14 = a3 - v10;
  if (v14 != 0 && v13)
  {
    if (v12 > 3)
    {
      v6 = &_mh_execute_header.magic + 1;
      if (v10 < a2)
        goto LABEL_19;
      goto LABEL_26;
    }
    v15 = ((v14 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
    if (HIWORD(v15))
    {
      v6 = &dword_100000004;
      if (v10 < a2)
      {
LABEL_19:
        v16 = ~v10 + a2;
        if (v12 < 4)
        {
          if ((_DWORD)v12)
          {
            v17 = v16 & ~(-1 << (8 * v12));
            bzero(a1, v12);
            if ((_DWORD)v12 == 3)
            {
              *a1 = v17;
              *((_BYTE *)a1 + 2) = BYTE2(v17);
            }
            else if ((_DWORD)v12 == 2)
            {
              *a1 = v17;
            }
            else
            {
              *(_BYTE *)a1 = v17;
            }
          }
        }
        else
        {
          bzero(a1, v12);
          *(_DWORD *)a1 = v16;
        }
        __asm { BR              X10 }
      }
LABEL_26:
      __asm { BR              X15 }
    }
    if (v15 >= 0x100)
      v6 = 2;
    else
      v6 = v15 > 1;
  }
  if (v10 < a2)
    goto LABEL_19;
  goto LABEL_26;
}

void sub_10020051C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_100200524()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_100200544()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_100200554()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_10020055C()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t sub_100200568(unint64_t a1, char a2, uint64_t a3, void *a4, uint64_t a5, void *a6, _QWORD *a7, unint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t inited;
  uint64_t v17;
  BOOL v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[3];
  _BYTE v50[40];
  uint64_t v51;
  uint64_t v52;

  v14 = a2 & 1;
  v15 = type metadata accessor for BitCollector();
  inited = swift_initStackObject(v15, v50);
  *(_OWORD *)(inited + 16) = xmmword_100253500;
  *(_BYTE *)(inited + 32) = 0;
  sub_1001006FC(0, 3u);
  sub_1001006FC(v14, 1u);
  do
  {
    if (a1 >= 8)
      v17 = a1 & 7 | 8;
    else
      v17 = a1 & 7;
    sub_1001006FC(v17, 4u);
    v18 = a1 > 7;
    a1 >>= 3;
  }
  while (v18);
  v19 = sub_10020097C(a3, a4, a5, a6);
  do
  {
    if (v19 >= 8)
      v20 = v19 & 7 | 8;
    else
      v20 = v19 & 7;
    sub_1001006FC(v20, 4u);
    v18 = v19 > 7;
    v19 >>= 3;
  }
  while (v18);
  v21 = sub_100201140(a8, a7);
  v22 = inited + 16;
  if (v45)
  {
    swift_setDeallocating(inited);
    return sub_10000CCCC(*(_QWORD *)(inited + 16), *(_QWORD *)(inited + 24));
  }
  else
  {
    v24 = v21;
    sub_1001009FC(v21);
    swift_release(v24);
    if (qword_1003158B0 != -1)
      swift_once(&qword_1003158B0, sub_1000D9854);
    v25 = type metadata accessor for Logger(0);
    sub_10000D744(v25, (uint64_t)qword_10033FEC8);
    swift_retain_n(v43, v26);
    swift_retain(inited);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc(32, -1);
      v46 = swift_slowAlloc(64, -1);
      v49[0] = v46;
      *(_DWORD *)v30 = 136446723;
      v31 = sub_1000AD18C();
      v33 = v32;
      v47 = sub_100172BEC(v31, v32, v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48, v30 + 4, v30 + 12);
      swift_release_n(v43);
      swift_bridgeObjectRelease(v33);
      *(_WORD *)(v30 + 12) = 2081;
      swift_beginAccess(inited + 16, &v47, 0, 0);
      v34 = *(_QWORD *)(inited + 16);
      v35 = *(_QWORD *)(inited + 24);
      sub_1001005C4();
      v37 = v36;
      sub_10000CC50(v34, v35);
      sub_1001FE754(v37, v34, v35);
      v39 = v38;
      v41 = v40;
      sub_10000CCCC(v34, v35);
      v51 = sub_100172BEC(v39, v41, v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v30 + 14, v30 + 22);
      swift_bridgeObjectRelease(v41);
      *(_WORD *)(v30 + 22) = 2049;
      sub_1001005C4();
      v51 = v42;
      v22 = inited + 16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v30 + 24, v30 + 32);
      swift_release(inited);
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "[%{public}s] Bit stream: '%{private}s', bits used: %{private}lu", (uint8_t *)v30, 0x20u);
      swift_arrayDestroy(v46, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v46, -1, -1);
      swift_slowDealloc(v30, -1, -1);

    }
    else
    {

      swift_release(inited);
      swift_release_n(v43);
    }
    swift_beginAccess(v22, v49, 0, 0);
    return *(_QWORD *)(inited + 16);
  }
}

uint64_t sub_10020092C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain(v0[1]);
  return v1;
}

unint64_t sub_100200958()
{
  unint64_t result;

  result = sub_100225410((uint64_t)&off_1002E0CC8);
  qword_100340048 = result;
  return result;
}

uint64_t sub_10020097C(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  __n128 v8;
  __n128 v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  __n128 v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  Swift::String v25;
  Swift::String v26;
  uint64_t v27;
  Swift::String v28;
  void *object;
  void *v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  void *v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  const char *v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v46;
  Swift::String v47;

  if (qword_1003158B0 != -1)
    swift_once(&qword_1003158B0, sub_1000D9854);
  v7 = type metadata accessor for Logger(0);
  sub_10000D744(v7, (uint64_t)qword_10033FEC8);
  swift_bridgeObjectRetain_n(a4, 2, v8);
  v10 = swift_bridgeObjectRetain_n(a2, 2, v9);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(22, -1);
    v14 = swift_slowAlloc(64, -1);
    v46 = v14;
    v47._countAndFlagsBits = a1;
    *(_DWORD *)v13 = 136446466;
    v47._object = a2;
    swift_bridgeObjectRetain(a2);
    v15 = sub_100003DB8(&qword_100318260);
    v17 = String.init<A>(describing:)(&v47, v15, v16);
    v19 = v18;
    v47._countAndFlagsBits = sub_100172BEC(v17, v18, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v47._object, v13 + 4, v13 + 12);
    swift_bridgeObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease(v19);
    *(_WORD *)(v13 + 12) = 2082;
    v47._countAndFlagsBits = a3;
    v47._object = a4;
    swift_bridgeObjectRetain(a4);
    v21 = String.init<A>(describing:)(&v47, v15, v20);
    v23 = v22;
    v47._countAndFlagsBits = sub_100172BEC(v21, v22, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v47._object, v13 + 14, v13 + 22);
    swift_bridgeObjectRelease_n(a4, 2);
    swift_bridgeObjectRelease(v23);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "languageRegionToInternalCode language: %{public}s, region: %{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy(v14, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);

    if (a2)
      goto LABEL_5;
LABEL_12:
    v35 = Logger.logObject.getter(v24);
    v36 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v37 = 134349056;
      v33 = 8;
      v47._countAndFlagsBits = 8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v47._object, v37 + 4, v37 + 12);
      v38 = "language == nil, code: %{public}lu";
LABEL_24:
      _os_log_impl((void *)&_mh_execute_header, v35, v36, v38, v37, 0xCu);
      swift_slowDealloc(v37, -1, -1);
      goto LABEL_26;
    }
LABEL_25:
    v33 = 8;
    goto LABEL_26;
  }

  swift_bridgeObjectRelease_n(a4, 2);
  v24 = swift_bridgeObjectRelease_n(a2, 2);
  if (!a2)
    goto LABEL_12;
LABEL_5:
  v25 = String.lowercased()();
  if (a4)
  {
    v26 = String.lowercased()();
    if (qword_1003159A8 != -1)
      swift_once(&qword_1003159A8, sub_100200958);
    v27 = qword_100340048;
    v47 = v25;
    swift_bridgeObjectRetain(v25._object);
    v28._countAndFlagsBits = 45;
    v28._object = (void *)0xE100000000000000;
    String.append(_:)(v28);
    object = v47._object;
    swift_bridgeObjectRetain(v47._object);
    String.append(_:)(v26);
    swift_bridgeObjectRelease(object);
    swift_bridgeObjectRelease(v26._object);
    v30 = v47._object;
    if (*(_QWORD *)(v27 + 16))
    {
      v31 = sub_10017D3B0(v47._countAndFlagsBits, (uint64_t)v47._object);
      if ((v32 & 1) != 0)
      {
        v33 = *(_QWORD *)(*(_QWORD *)(v27 + 56) + 8 * v31);
        swift_bridgeObjectRelease(v25._object);
        v34 = v30;
        goto LABEL_20;
      }
    }
    swift_bridgeObjectRelease(v30);
  }
  if (qword_1003159A8 != -1)
    swift_once(&qword_1003159A8, sub_100200958);
  v39 = qword_100340048;
  if (!*(_QWORD *)(qword_100340048 + 16)
    || (v40 = sub_10017D3B0(v25._countAndFlagsBits, (uint64_t)v25._object), (v41 & 1) == 0))
  {
    v43 = swift_bridgeObjectRelease(v25._object);
    v35 = Logger.logObject.getter(v43);
    v36 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v37 = 134349056;
      v33 = 8;
      v47._countAndFlagsBits = 8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v47._object, v37 + 4, v37 + 12);
      v38 = "Unsupported language, code: %{public}lu";
      goto LABEL_24;
    }
    goto LABEL_25;
  }
  v33 = *(_QWORD *)(*(_QWORD *)(v39 + 56) + 8 * v40);
  v34 = v25._object;
LABEL_20:
  v42 = swift_bridgeObjectRelease(v34);
  v35 = Logger.logObject.getter(v42);
  v36 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v37 = 134349056;
    v47._countAndFlagsBits = v33;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v47._object, v37 + 4, v37 + 12);
    v38 = "language-region internal code: %{public}lu";
    goto LABEL_24;
  }
LABEL_26:

  return v33;
}

void sub_100200EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  BOOL v7;
  _BYTE v8[16];
  unint64_t v9;
  char v10;

  v3 = type metadata accessor for Data.Iterator(0);
  __chkstk_darwin(v3, v4);
  if ((*(_BYTE *)(a2 + 16) & 1) != 0)
  {
    sub_100202460(a2 + 24, (uint64_t)v8);
    sub_100202460((uint64_t)v8, (uint64_t)&v9);
    if ((v10 & 1) == 0)
    {
      v6 = v9;
      sub_1001006FC(2, 2u);
      do
      {
        sub_1001006FC(v6 & 0x7F | ((v6 > 0x7F) << 7), 8u);
        v7 = v6 >= 0x80;
        v6 >>= 7;
      }
      while (v7);
LABEL_8:
      __asm { BR              X10 }
    }
    v5 = 1;
  }
  else
  {
    v5 = 0;
  }
  sub_1001006FC(v5, 2u);
  goto LABEL_8;
}

uint64_t sub_100200FB4()
{
  uint64_t v0;
  unsigned int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = BYTE6(v0);
  if (BYTE6(v0) >= 0x40uLL)
    v3 = BYTE6(v0) & 0x3F | 0x40u;
  else
    v3 = BYTE6(v0) & 0x3F;
  v4 = sub_1001006FC(v3, 7u);
  if (BYTE6(v0) >= 0x40uLL)
  {
    do
    {
      if (v2 >= 0x1000)
        v5 = (v2 >> 6) & 0x3F | 0x40;
      else
        v5 = (v2 >> 6) & 0x3F;
      v4 = sub_1001006FC(v5, 7u);
      v6 = v2 > 0xFFF;
      v2 >>= 6;
    }
    while (v6);
  }
  return ((uint64_t (*)(uint64_t))((char *)&loc_100201040 + *((int *)qword_100201130 + v1)))(v4);
}

uint64_t sub_100201050()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_10000CC50(v2, v3);
  ((void (*)(uint64_t, unint64_t, _QWORD))Data.Iterator.init(_:at:))(v2, v3, (int)v2);
  while (1)
  {
    LOWORD(v5) = Data.Iterator.next()();
    if ((v5 & 0x100) != 0)
      break;
    sub_1001006FC(v5, 8u);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v1, v0);
}

uint64_t sub_100201140(unint64_t a1, _QWORD *a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  __n128 v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  Swift::Int v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  _QWORD *v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t *v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unsigned __int8 v77;
  int v78;
  unsigned __int8 v79;
  int v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  Swift::String v104;
  Swift::String v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  unint64_t *v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  Swift::String v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  unint64_t *v119;
  Swift::String v120;
  Swift::String v121;
  void *object;
  Swift::String v123;
  uint64_t v124;
  void *v125;
  Swift::String v126;
  Swift::String v127;
  uint64_t v128;
  void *v129;
  Swift::String v130;
  Swift::String v131;
  Swift::String v132;
  void *v133;
  Swift::String v134;
  unint64_t v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  unint64_t *v139;
  Swift::String v140;
  void *v141;
  uint64_t v142;
  Swift::String v143;
  Swift::String v144;
  void *v145;
  uint64_t v146;
  Swift::String v147;
  unint64_t v148;
  unint64_t v149;
  unint64_t v150;
  uint64_t v151;
  unint64_t *v152;
  Swift::String v153;
  void *v154;
  uint64_t v155;
  Swift::String v156;
  unint64_t v157;
  const char *v158;
  Swift::String v159;
  void *v160;
  uint64_t v161;
  Swift::String v162;
  void *v163;
  uint64_t v164;
  Swift::String v165;
  Swift::String v166;
  unint64_t v167;
  unint64_t v168;
  unint64_t v169;
  uint64_t v170;
  unint64_t *v171;
  uint64_t v172;
  uint64_t result;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  unint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  unint64_t v188;
  uint64_t v189;
  unint64_t v190;
  unint64_t v191;
  uint64_t v192;
  unint64_t v194;
  unint64_t v195;
  unint64_t v196;
  _BYTE v197[48];
  char v198;

  v3 = v2;
  v5 = type metadata accessor for BitCollector();
  v6 = swift_allocObject(v5, 33, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100253500;
  *(_BYTE *)(v6 + 32) = 0;
  v7 = *(_QWORD *)(a1 + 72);
  if ((unint64_t)v7 >> 62)
    goto LABEL_208;
  v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 72));
  if (!v8)
  {
LABEL_212:
    swift_bridgeObjectRelease(v7);
    return v6;
  }
LABEL_3:
  v190 = v7 & 0xC000000000000001;
  if ((v7 & 0xC000000000000001) != 0)
    goto LABEL_216;
  if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_218:
    __break(1u);
LABEL_219:
    __break(1u);
LABEL_220:
    __break(1u);
LABEL_221:
    __break(1u);
LABEL_222:
    __break(1u);
LABEL_223:
    __break(1u);
LABEL_224:
    __break(1u);
LABEL_225:
    __break(1u);
LABEL_226:
    __break(1u);
LABEL_227:
    __break(1u);
LABEL_228:
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Not enough bits to represent the passed value", 45, 2, "Swift/Integers.swift", 20, 2, 3455, 0);
    goto LABEL_230;
  }
  v9 = *(_QWORD *)(v7 + 32);
  swift_retain(v9);
LABEL_6:
  v10 = *(_QWORD *)a1;
  if (!*(_QWORD *)(*(_QWORD *)a1 + 16))
  {
LABEL_188:
    swift_bridgeObjectRelease(v7);
LABEL_190:
    v195 = 0;
    v196 = 0xE000000000000000;
    _StringGuts.grow(_:)(43);
    swift_bridgeObjectRelease(v196);
    v195 = 0x6E6F697473657551;
    v196 = 0xE900000000000020;
    v103 = *(_QWORD *)(v9 + 16);
    v102 = *(void **)(v9 + 24);
    swift_bridgeObjectRetain(v102);
    v104._countAndFlagsBits = v103;
    v104._object = v102;
    String.append(_:)(v104);
    swift_bridgeObjectRelease(v102);
    v105._object = (void *)0x8000000100270880;
    v105._countAndFlagsBits = 0xD000000000000020;
    String.append(_:)(v105);
LABEL_191:
    v106 = v195;
    v107 = v196;
    v108 = sub_1002023F0();
    v109 = swift_allocError(&type metadata for QuestionnaireSerializationError, v108, 0, 0);
    *v110 = v106;
    v110[1] = v107;
    swift_willThrow(v109);
    v111 = v9;
LABEL_192:
    swift_release(v111);
    goto LABEL_193;
  }
  swift_retain(v9);
  v12 = sub_10017D414(v11);
  if ((v13 & 1) == 0)
  {
LABEL_189:
    swift_bridgeObjectRelease(v7);
    swift_release(v9);
    goto LABEL_190;
  }
  v181 = v7 + 32;
  v182 = v7 & 0xFFFFFFFFFFFFFF8;
  v14 = 1;
  v192 = v6;
  v179 = v3;
  v180 = v7;
  v178 = a1;
  v187 = v10;
  v188 = v8;
  while (1)
  {
    v191 = v14;
    v15 = (unsigned __int8 *)(*(_QWORD *)(v10 + 56) + 16 * v12);
    v16 = *v15;
    v17 = *((_QWORD *)v15 + 1);
    swift_retain(v17);
    swift_release(v9);
    v19 = *(unsigned __int8 *)(v9 + 32);
    if (v19 == 3)
      goto LABEL_10;
    if (!*(_QWORD *)(*(_QWORD *)(v9 + 56) + 16))
    {
      if (v16 >= 3)
      {
        if (v16 == 3)
          sub_1001006FC(0, 1u);
        goto LABEL_10;
      }
      sub_1001006FC(1, 1u);
      v184 = v17;
      if (!v19)
        goto LABEL_75;
LABEL_19:
      if (v19 == 1)
      {
        if (v17)
        {
          swift_bridgeObjectRelease(v7);
          v195 = 0;
          v196 = 0xE000000000000000;
          _StringGuts.grow(_:)(67);
          v153._countAndFlagsBits = 0xD000000000000041;
          v153._object = (void *)0x8000000100270920;
          String.append(_:)(v153);
          v155 = *(_QWORD *)(v9 + 16);
          v154 = *(void **)(v9 + 24);
          swift_bridgeObjectRetain(v154);
          v156._countAndFlagsBits = v155;
          v156._object = v154;
          String.append(_:)(v156);
          swift_bridgeObjectRelease(v154);
          goto LABEL_205;
        }
        v20 = *(_QWORD *)(a1 + 8);
        if (*(_QWORD *)(v20 + 16))
        {
          swift_retain(v9);
          v22 = sub_10017D414(v21);
          if ((v23 & 1) != 0)
          {
            v24 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v22);
            swift_bridgeObjectRetain(v24);
            swift_release(v9);
            v25 = *(_QWORD *)(v9 + 40);
            if ((unint64_t)v25 >> 62)
            {
              if (v25 < 0)
                v99 = *(_QWORD *)(v9 + 40);
              else
                v99 = v25 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(*(_QWORD *)(v9 + 40));
              v100 = _CocoaArrayWrapper.endIndex.getter(v99);
              swift_bridgeObjectRelease(v25);
              if (v100 > 63)
              {
LABEL_202:
                swift_bridgeObjectRelease(v24);
                swift_bridgeObjectRelease(v7);
                v195 = 0;
                v196 = 0xE000000000000000;
                _StringGuts.grow(_:)(40);
                swift_bridgeObjectRelease(v196);
                v157 = 0xD000000000000026;
                v158 = "Too many options defined for question ";
                goto LABEL_203;
              }
            }
            else if (*(uint64_t *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10) > 63)
            {
              goto LABEL_202;
            }
            v26 = *(_QWORD *)(v9 + 40);
            v186 = v26;
            if (!((unint64_t)v26 >> 62))
            {
              v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain(v26);
              if (v27)
                goto LABEL_27;
              goto LABEL_185;
            }
            if (v26 < 0)
              v101 = *(_QWORD *)(v9 + 40);
            else
              v101 = v26 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v26);
            v27 = _CocoaArrayWrapper.endIndex.getter(v101);
            if (!v27)
            {
LABEL_185:
              swift_release(v9);
              swift_bridgeObjectRelease(v24);
              v29 = v186;
LABEL_186:
              swift_bridgeObjectRelease(v29);
              v3 = v179;
              goto LABEL_11;
            }
LABEL_27:
            v175 = v9;
            v8 = 0;
            v194 = v24 & 0xC000000000000001;
            a1 = v186 & 0xC000000000000001;
            v28 = v24 & 0xFFFFFFFFFFFFFF8;
            if (v24 < 0)
              v28 = v24;
            v189 = v28;
            v185 = v24;
            v183 = v24 + 56;
            v29 = v186;
            while (1)
            {
              if (a1)
              {
                v31 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v29);
                v32 = __OFADD__(v8++, 1);
                if (v32)
                  goto LABEL_206;
              }
              else
              {
                if (v8 >= *(_QWORD *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_215;
                v31 = *(_QWORD *)(v186 + 32 + 8 * v8);
                swift_retain(v31);
                v32 = __OFADD__(v8++, 1);
                if (v32)
                {
LABEL_206:
                  __break(1u);
                  goto LABEL_207;
                }
              }
              if (v194)
              {
                v30 = __CocoaSet.contains(_:)(v31, v189) & 1;
              }
              else if (*(_QWORD *)(v185 + 16))
              {
                Hasher.init(_seed:)(&v195, *(_QWORD *)(v185 + 40));
                v3 = *(_QWORD *)(v31 + 16);
                v7 = *(_QWORD *)(v31 + 24);
                swift_bridgeObjectRetain(v7);
                String.hash(into:)(&v195, v3, v7);
                swift_bridgeObjectRelease(v7);
                v33 = Hasher._finalize()();
                v34 = -1 << *(_BYTE *)(v185 + 32);
                v35 = v33 & ~v34;
                if (((*(_QWORD *)(v183 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) == 0)
                {
                  v30 = 0;
LABEL_50:
                  v6 = v192;
                  v29 = v186;
                  goto LABEL_31;
                }
                v36 = *(_QWORD *)(*(_QWORD *)(v185 + 48) + 8 * v35);
                v37 = *(_QWORD *)(v36 + 16);
                v38 = *(_QWORD *)(v36 + 24);
                if (v37 == v3 && v38 == v7)
                {
                  v30 = 1;
                  goto LABEL_50;
                }
                v177 = *(_QWORD *)(v185 + 48);
                v29 = v186;
                if ((_stringCompareWithSmolCheck(_:_:expecting:)(v37, v38, v3, v7, 0) & 1) != 0)
                {
                  v30 = 1;
                  v6 = v192;
                }
                else
                {
                  v174 = ~v34;
                  v40 = (v35 + 1) & ~v34;
                  if (((*(_QWORD *)(v183 + ((v40 >> 3) & 0xFFFFFFFFFFFFF8)) >> v40) & 1) != 0)
                  {
                    v41 = *(_QWORD *)(v177 + 8 * v40);
                    v42 = *(_QWORD *)(v41 + 16);
                    v43 = *(_QWORD *)(v41 + 24);
                    v44 = v42 == v3 && v43 == v7;
                    v6 = v192;
                    if (!v44 && (_stringCompareWithSmolCheck(_:_:expecting:)(v42, v43, v3, v7, 0) & 1) == 0)
                    {
                      v45 = (v40 + 1) & v174;
                      if (((*(_QWORD *)(v183 + ((v45 >> 3) & 0xFFFFFFFFFFFFF8)) >> v45) & 1) == 0)
                      {
                        v30 = 0;
                        goto LABEL_31;
                      }
                      while (1)
                      {
                        v46 = *(_QWORD *)(v177 + 8 * v45);
                        v47 = *(_QWORD *)(v46 + 16);
                        v48 = *(_QWORD *)(v46 + 24);
                        v49 = v47 == v3 && v48 == v7;
                        if (v49 || (_stringCompareWithSmolCheck(_:_:expecting:)(v47, v48, v3, v7, 0) & 1) != 0)
                          break;
                        v30 = 0;
                        v45 = (v45 + 1) & v174;
                        if (((*(_QWORD *)(v183 + ((v45 >> 3) & 0xFFFFFFFFFFFFF8)) >> v45) & 1) == 0)
                          goto LABEL_31;
                      }
                    }
                    v30 = 1;
                  }
                  else
                  {
                    v30 = 0;
                    v6 = v192;
                  }
                }
              }
              else
              {
                v30 = 0;
                v29 = v186;
              }
LABEL_31:
              sub_1001006FC(v30, 1u);
              swift_release(v31);
              if (v8 == v27)
              {
                swift_release(v175);
                swift_bridgeObjectRelease(v185);
                swift_release(v184);
                v7 = v180;
                a1 = v178;
                goto LABEL_186;
              }
            }
          }
          swift_bridgeObjectRelease(v7);
          swift_release(v9);
        }
        else
        {
          swift_bridgeObjectRelease(v7);
        }
        v195 = 0;
        v196 = 0xE000000000000000;
        _StringGuts.grow(_:)(53);
        v159._countAndFlagsBits = 0xD000000000000033;
        v159._object = (void *)0x8000000100270970;
        String.append(_:)(v159);
LABEL_204:
        v161 = *(_QWORD *)(v9 + 16);
        v160 = *(void **)(v9 + 24);
        swift_bridgeObjectRetain(v160);
        v162._countAndFlagsBits = v161;
        v162._object = v160;
        String.append(_:)(v162);
        swift_bridgeObjectRelease(v160);
        goto LABEL_191;
      }
      v64 = *(_QWORD *)(v9 + 40);
      if ((unint64_t)v64 >> 62)
      {
        if (v64 < 0)
          v96 = *(_QWORD *)(v9 + 40);
        else
          v96 = v64 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n(*(_QWORD *)(v9 + 40), 2, v18);
        v65 = _CocoaArrayWrapper.endIndex.getter(v96);
        swift_bridgeObjectRelease(v64);
        if (v65)
        {
LABEL_89:
          if ((v64 & 0xC000000000000001) != 0)
          {
            v66 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v64);
          }
          else
          {
            if (!*(_QWORD *)((v64 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_221;
            v66 = *(_QWORD *)(v64 + 32);
            swift_retain(v66);
          }
          v176 = v9;
          if (*(_BYTE *)(v66 + 40) != 1)
          {
LABEL_194:
            swift_bridgeObjectRelease(v180);
            swift_bridgeObjectRelease(v64);
            v195 = 0;
            v196 = 0xE000000000000000;
            _StringGuts.grow(_:)(35);
            swift_bridgeObjectRelease(v196);
            v195 = 0xD000000000000021;
            v196 = 0x80000001002708F0;
            v113 = *(_QWORD *)(v66 + 16);
            v112 = *(void **)(v66 + 24);
            swift_bridgeObjectRetain(v112);
            v114._countAndFlagsBits = v113;
            v114._object = v112;
            String.append(_:)(v114);
            swift_bridgeObjectRelease(v112);
            v115 = v195;
            v116 = v196;
            v117 = sub_1002023F0();
            v118 = swift_allocError(&type metadata for QuestionnaireSerializationError, v117, 0, 0);
            *v119 = v115;
            v119[1] = v116;
            swift_willThrow(v118);
            swift_release(v66);
            swift_release(v184);
            v6 = v192;
            swift_release(v192);
            swift_release(v176);
            return v6;
          }
          v67 = a1;
          a1 = 0;
          v68 = *(_QWORD *)(v67 + 24);
          v6 = v65 - 1;
          while (1)
          {
            if (*(_QWORD *)(v68 + 16))
            {
              swift_retain(v66);
              v70 = sub_10017D414(v69);
              if ((v71 & 1) != 0)
              {
                v72 = (uint64_t *)(*(_QWORD *)(v68 + 56) + 16 * v70);
                v7 = *v72;
                v3 = v72[1];
                swift_bridgeObjectRetain(v3);
              }
              else
              {
                v7 = 0;
                v3 = 0xE000000000000000;
              }
              swift_release(v66);
            }
            else
            {
              v7 = 0;
              v3 = 0xE000000000000000;
            }
            sub_100007BBC(a2, a2[3]);
            sub_1000B78F8(v7, v3, (uint64_t)v197);
            swift_bridgeObjectRelease(v3);
            sub_100200EA8(v192, (uint64_t)v197);
            sub_100202434((uint64_t)v197);
            swift_release(v66);
            if (v6 == a1)
              break;
            v73 = a1 + 1;
            if ((v64 & 0xC000000000000001) != 0)
            {
              v66 = specialized _ArrayBuffer._getElementSlowPath(_:)(a1 + 1, v64);
              if (__OFADD__(v73, 1))
                goto LABEL_207;
            }
            else
            {
              if (v73 >= *(_QWORD *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_218;
              v66 = *(_QWORD *)(v64 + 8 * a1 + 40);
              swift_retain(v66);
              if (__OFADD__(v73, 1))
              {
LABEL_207:
                __break(1u);
LABEL_208:
                if (v7 < 0)
                  v172 = v7;
                else
                  v172 = v7 & 0xFFFFFFFFFFFFFF8;
                swift_bridgeObjectRetain(v7);
                v8 = _CocoaArrayWrapper.endIndex.getter(v172);
                if (!v8)
                  goto LABEL_212;
                goto LABEL_3;
              }
            }
            ++a1;
            if ((*(_BYTE *)(v66 + 40) & 1) == 0)
              goto LABEL_194;
          }
          swift_release(v176);
          v6 = v192;
          v17 = v184;
          v3 = v179;
          v7 = v180;
          a1 = v178;
          goto LABEL_164;
        }
      }
      else
      {
        v65 = *(_QWORD *)((v64 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(*(_QWORD *)(v9 + 40));
        if (v65)
          goto LABEL_89;
      }
      swift_release(v9);
LABEL_164:
      swift_release(v17);
      swift_bridgeObjectRelease(v64);
      goto LABEL_11;
    }
    if (v16 >= 3)
    {
      if (v16 != 4)
      {
        swift_bridgeObjectRelease(v7);
        v195 = 0;
        v196 = 0xE000000000000000;
        _StringGuts.grow(_:)(45);
        swift_bridgeObjectRelease(v196);
        v195 = 0xD000000000000013;
        v196 = 0x80000001002708B0;
        v164 = *(_QWORD *)(v9 + 16);
        v163 = *(void **)(v9 + 24);
        swift_bridgeObjectRetain(v163);
        v165._countAndFlagsBits = v164;
        v165._object = v163;
        String.append(_:)(v165);
        swift_bridgeObjectRelease(v163);
        v166._countAndFlagsBits = 0xD000000000000018;
        v166._object = (void *)0x80000001002708D0;
        String.append(_:)(v166);
LABEL_205:
        v167 = v195;
        v168 = v196;
        v169 = sub_1002023F0();
        v170 = swift_allocError(&type metadata for QuestionnaireSerializationError, v169, 0, 0);
        *v171 = v167;
        v171[1] = v168;
        swift_willThrow(v170);
        swift_release(v9);
        v111 = v17;
        goto LABEL_192;
      }
LABEL_10:
      swift_release(v9);
      swift_release(v17);
      goto LABEL_11;
    }
    v184 = v17;
    if (*(_BYTE *)(v9 + 32))
      goto LABEL_19;
LABEL_75:
    if (!v17)
    {
      swift_bridgeObjectRelease(v7);
      v195 = 0;
      v196 = 0xE000000000000000;
      _StringGuts.grow(_:)(43);
      swift_bridgeObjectRelease(v196);
      v157 = 0xD000000000000029;
      v158 = "No option recorded for answered question ";
LABEL_203:
      v195 = v157;
      v196 = (unint64_t)(v158 - 32) | 0x8000000000000000;
      goto LABEL_204;
    }
    v52 = *(_QWORD *)(v9 + 40);
    v53 = (_QWORD *)v9;
    if ((unint64_t)v52 >> 62)
      break;
    v54 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain(v17);
    swift_bridgeObjectRetain(v52);
    if (!v54)
      goto LABEL_196;
LABEL_78:
    v55 = v52 & 0xC000000000000001;
    if ((v52 & 0xC000000000000001) != 0)
    {
      v56 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v52);
    }
    else
    {
      if (!*(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_220;
      v56 = *(_QWORD *)(v52 + 32);
      swift_retain(v56);
    }
    v57 = *(_QWORD *)(v56 + 16);
    v58 = *(_QWORD *)(v56 + 24);
    v59 = *(_QWORD *)(v184 + 16);
    v60 = *(_QWORD *)(v184 + 24);
    v61 = v57 == v59 && v58 == v60;
    v62 = (_QWORD *)v9;
    if (v61)
    {
      swift_bridgeObjectRelease(v52);
      swift_release(v56);
      goto LABEL_114;
    }
    v63 = _stringCompareWithSmolCheck(_:_:expecting:)(v57, v58, v59, v60, 0);
    swift_release(v56);
    if ((v63 & 1) != 0)
    {
      swift_bridgeObjectRelease(v52);
LABEL_114:
      v74 = 0;
      goto LABEL_115;
    }
    if (v54 == 1)
      goto LABEL_196;
    if (v55)
    {
      v82 = specialized _ArrayBuffer._getElementSlowPath(_:)(1, v52);
    }
    else
    {
      if (*(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
        goto LABEL_227;
      v82 = *(_QWORD *)(v52 + 40);
      swift_retain(v82);
    }
    v83 = *(_QWORD *)(v82 + 16);
    v84 = *(_QWORD *)(v82 + 24);
    v85 = *(_QWORD *)(v184 + 16);
    v86 = *(_QWORD *)(v184 + 24);
    if (v83 == v85 && v84 == v86)
    {
      swift_bridgeObjectRelease(v52);
      swift_release(v82);
      v74 = 1;
    }
    else
    {
      v87 = _stringCompareWithSmolCheck(_:_:expecting:)(v83, v84, v85, v86, 0);
      swift_release(v82);
      if ((v87 & 1) != 0)
      {
        swift_bridgeObjectRelease(v52);
        v74 = 1;
      }
      else
      {
        v88 = 1;
        while (1)
        {
          v74 = v88 + 1;
          if (__OFADD__(v88, 1))
            goto LABEL_222;
          if (v74 == v54)
            goto LABEL_196;
          if (v55)
          {
            v89 = specialized _ArrayBuffer._getElementSlowPath(_:)(v88 + 1, v52);
          }
          else
          {
            if ((v74 & 0x8000000000000000) != 0)
              goto LABEL_225;
            if (v74 >= *(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_226;
            v89 = *(_QWORD *)(v52 + 32 + 8 * v74);
            swift_retain(v89);
          }
          v90 = *(_QWORD *)(v89 + 16);
          v91 = *(_QWORD *)(v89 + 24);
          v92 = *(_QWORD *)(v184 + 16);
          v93 = *(_QWORD *)(v184 + 24);
          if (v90 == v92 && v91 == v93)
            break;
          v95 = _stringCompareWithSmolCheck(_:_:expecting:)(v90, v91, v92, v93, 0);
          swift_release(v89);
          ++v88;
          if ((v95 & 1) != 0)
          {
            swift_bridgeObjectRelease(v52);
            v62 = v53;
            goto LABEL_115;
          }
        }
        swift_bridgeObjectRelease(v52);
        swift_release(v89);
        v62 = v53;
      }
    }
LABEL_115:
    v75 = v62[5];
    if ((unint64_t)v75 >> 62)
    {
      if (v75 < 0)
        v98 = v62[5];
      else
        v98 = v75 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v62[5]);
      v76 = _CocoaArrayWrapper.endIndex.getter(v98);
      swift_bridgeObjectRelease(v75);
      v6 = v192;
      if ((v76 & 0x8000000000000000) == 0)
        goto LABEL_117;
LABEL_229:
      result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, 2, 3451, 0);
LABEL_230:
      __break(1u);
      return result;
    }
    v76 = *(_QWORD *)((v75 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = v192;
LABEL_117:
    if (v76 >= 0x100)
      goto LABEL_228;
    if (v76 >= 2u)
    {
      v77 = 1;
      do
        v77 *= 2;
      while ((v77 & 0xFEu) < v76);
      v78 = 0;
      v79 = v77 - v76;
      do
      {
        LOBYTE(v80) = v78++;
        v81 = v77;
        v77 >>= 1;
      }
      while (v81 > 1);
      if ((v74 & 0x8000000000000000) != 0)
        goto LABEL_229;
      if (v74 >= 0x100)
        goto LABEL_228;
      if (v79 <= v74)
      {
        v74 = v74 + v79;
        if ((v74 & 0x100) != 0)
          goto LABEL_224;
      }
      else
      {
        v80 = v80 - 1;
        if ((v80 & 0xFFFFFF00) != 0)
          goto LABEL_223;
      }
      if (v80 >= 8u || v74 >> v80)
      {
        swift_bridgeObjectRelease(v180);
        v195 = 0;
        v196 = 0xE000000000000000;
        _StringGuts.grow(_:)(86);
        v120._countAndFlagsBits = 0x206465646F636E45;
        v120._object = (void *)0xEF20726577736E61;
        String.append(_:)(v120);
        v198 = v74;
        v121._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt8, &protocol witness table for UInt8);
        object = v121._object;
        String.append(_:)(v121);
        swift_bridgeObjectRelease(object);
        v123._countAndFlagsBits = 0x74706F20726F6620;
        v123._object = (void *)0xEC000000206E6F69;
        String.append(_:)(v123);
        v124 = *(_QWORD *)(v184 + 16);
        v125 = *(void **)(v184 + 24);
        swift_bridgeObjectRetain(v125);
        v126._countAndFlagsBits = v124;
        v126._object = v125;
        String.append(_:)(v126);
        swift_bridgeObjectRelease(v125);
        v127._countAndFlagsBits = 0x65757120726F6620;
        v127._object = (void *)0xEE00206E6F697473;
        String.append(_:)(v127);
        v128 = v62[2];
        v129 = (void *)v62[3];
        swift_bridgeObjectRetain(v129);
        v130._countAndFlagsBits = v128;
        v130._object = v129;
        String.append(_:)(v130);
        swift_bridgeObjectRelease(v129);
        v131._object = (void *)0x8000000100270A10;
        v131._countAndFlagsBits = 0xD000000000000020;
        String.append(_:)(v131);
        v198 = v80;
        v132._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt8, &protocol witness table for UInt8);
        v133 = v132._object;
        String.append(_:)(v132);
        swift_bridgeObjectRelease(v133);
        v134._countAndFlagsBits = 0x7374696220;
        v134._object = (void *)0xE500000000000000;
        String.append(_:)(v134);
        v135 = v195;
        v136 = v196;
        v137 = sub_1002023F0();
        v138 = swift_allocError(&type metadata for QuestionnaireSerializationError, v137, 0, 0);
        *v139 = v135;
        v139[1] = v136;
        swift_willThrow(v138);
        swift_release(v62);
        swift_release_n(v184, 2);
        goto LABEL_193;
      }
      sub_1001006FC(v74, v80);
    }
    swift_release(v62);
    swift_release_n(v184, 2);
    v3 = v179;
    v7 = v180;
    a1 = v178;
LABEL_11:
    v10 = v187;
    v8 = v188;
    if (v191 == v188)
      goto LABEL_212;
    if (!v190)
    {
      if (v191 >= *(_QWORD *)(v182 + 16))
        goto LABEL_219;
      v9 = *(_QWORD *)(v181 + 8 * v191);
      swift_retain(v9);
      v14 = v191 + 1;
      if (!__OFADD__(v191, 1))
        goto LABEL_70;
LABEL_214:
      __break(1u);
LABEL_215:
      __break(1u);
LABEL_216:
      v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v7);
      goto LABEL_6;
    }
    v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(v191, v7);
    v14 = v191 + 1;
    if (__OFADD__(v191, 1))
      goto LABEL_214;
LABEL_70:
    if (!*(_QWORD *)(v187 + 16))
      goto LABEL_188;
    swift_retain(v9);
    v12 = sub_10017D414(v50);
    if ((v51 & 1) == 0)
      goto LABEL_189;
  }
  if (v52 < 0)
    v97 = *(_QWORD *)(v9 + 40);
  else
    v97 = v52 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(*(_QWORD *)(v9 + 40), 2, v18);
  swift_retain(v17);
  v54 = _CocoaArrayWrapper.endIndex.getter(v97);
  swift_bridgeObjectRelease(v52);
  if (v54)
    goto LABEL_78;
LABEL_196:
  swift_bridgeObjectRelease(v180);
  swift_bridgeObjectRelease(v52);
  v195 = 0;
  v196 = 0xE000000000000000;
  _StringGuts.grow(_:)(61);
  v140._countAndFlagsBits = 0x206E6F6974704FLL;
  v140._object = (void *)0xE700000000000000;
  String.append(_:)(v140);
  v142 = *(_QWORD *)(v184 + 16);
  v141 = *(void **)(v184 + 24);
  swift_bridgeObjectRetain(v141);
  v143._countAndFlagsBits = v142;
  v143._object = v141;
  String.append(_:)(v143);
  swift_bridgeObjectRelease(v141);
  v144._countAndFlagsBits = 0xD000000000000032;
  v144._object = (void *)0x8000000100270A40;
  String.append(_:)(v144);
  v146 = v53[2];
  v145 = (void *)v53[3];
  swift_bridgeObjectRetain(v145);
  v147._countAndFlagsBits = v146;
  v147._object = v145;
  String.append(_:)(v147);
  swift_bridgeObjectRelease(v145);
  v148 = v195;
  v149 = v196;
  v150 = sub_1002023F0();
  v151 = swift_allocError(&type metadata for QuestionnaireSerializationError, v150, 0, 0);
  *v152 = v148;
  v152[1] = v149;
  swift_willThrow(v151);
  swift_release(v53);
  swift_release_n(v184, 2);
  v6 = v192;
LABEL_193:
  swift_release(v6);
  return v6;
}

unint64_t sub_1002023F0()
{
  unint64_t result;

  result = qword_1003298E0;
  if (!qword_1003298E0)
  {
    result = swift_getWitnessTable(&unk_10025EFC8, &type metadata for QuestionnaireSerializationError);
    atomic_store(result, (unint64_t *)&qword_1003298E0);
  }
  return result;
}

uint64_t sub_100202434(uint64_t a1)
{
  sub_10000CCCC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_100202460(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100003DB8(&qword_1003298E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for QuestionnaireSerializationError()
{
  return &type metadata for QuestionnaireSerializationError;
}

id sub_1002024B8(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  double v15;
  id v16;
  id v17;
  unint64_t v18;
  void *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  Swift::String v23;
  unint64_t v24;
  void *v25;
  char *v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  char *v34;
  uint64_t v35;
  id v36;
  id v37;
  void *v38;
  unint64_t v39;
  Swift::String v40;
  void *v41;
  unint64_t v42;
  char *v43;
  __n128 v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  objc_class *v49;
  id v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  id v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  void *v58;
  id v59;
  id v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v65;
  uint64_t v66;
  id v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  objc_super v77;
  void *v78;
  unint64_t v79;

  v75 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v68 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75, v5);
  v74 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v7, v8);
  v73 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v10, v11);
  v71 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v2[OBJC_IVAR____TtC8SOSBuddy21IdentityServicesAgent__manager] = 0;
  v13 = &v2[OBJC_IVAR____TtC8SOSBuddy21IdentityServicesAgent__callback];
  *(_QWORD *)v13 = a1;
  *((_QWORD *)v13 + 1) = a2;
  v14 = (void *)objc_opt_self(NSBundle);
  v72 = v2;
  v70 = a2;
  *(_QWORD *)&v15 = swift_retain(a2).n128_u64[0];
  v67 = v14;
  v16 = objc_msgSend(v14, "mainBundle", v15);
  v17 = objc_msgSend(v16, "bundleIdentifier");

  v18 = 0x8000000100260990;
  if (v17)
  {
    v19 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v21 = v20;

  }
  else
  {
    v19 = (void *)0xD000000000000012;
    v21 = 0x8000000100260990;
  }
  v22 = sub_10000D75C();
  v78 = v19;
  v79 = v21;
  swift_bridgeObjectRetain(v21);
  v23._countAndFlagsBits = 0xD00000000000001FLL;
  v23._object = (void *)0x8000000100270BA0;
  String.append(_:)(v23);
  swift_bridgeObjectRelease(v21);
  v25 = v78;
  v24 = v79;
  v26 = v71;
  static DispatchQoS.unspecified.getter(v27);
  v78 = &_swiftEmptyArrayStorage;
  v28 = sub_1000052EC((unint64_t *)&unk_1003178B0, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v29 = sub_100003DB8((uint64_t *)&unk_100324AE0);
  v30 = sub_10000F138((unint64_t *)&unk_1003178C0, (uint64_t *)&unk_100324AE0);
  v31 = v73;
  v65 = v29;
  v66 = v28;
  v69 = v7;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v78, v29, v30, v7, v28);
  v32 = enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:);
  v33 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 104);
  v34 = v74;
  v33(v74, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v75);
  v68 = v22;
  v35 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(v25, v24, v26, v31, v34, 0);
  *(_QWORD *)&v72[OBJC_IVAR____TtC8SOSBuddy21IdentityServicesAgent__callbackQueue] = v35;
  v36 = objc_msgSend(v67, "mainBundle");
  v37 = objc_msgSend(v36, "bundleIdentifier");

  if (v37)
  {
    v38 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
    v18 = v39;

  }
  else
  {
    v38 = (void *)0xD000000000000012;
  }
  v78 = v38;
  v79 = v18;
  swift_bridgeObjectRetain(v18);
  v40._countAndFlagsBits = 0xD000000000000017;
  v40._object = (void *)0x8000000100270BC0;
  String.append(_:)(v40);
  swift_bridgeObjectRelease(v18);
  v41 = v78;
  v42 = v79;
  v43 = v71;
  static DispatchQoS.unspecified.getter(v44);
  v78 = &_swiftEmptyArrayStorage;
  v45 = v73;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v78, v65, v30, v69, v66);
  v46 = v74;
  v33(v74, v32, v75);
  v47 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(v41, v42, v43, v45, v46, 0);
  v48 = v72;
  *(_QWORD *)&v72[OBJC_IVAR____TtC8SOSBuddy21IdentityServicesAgent__managerQueue] = v47;

  v49 = (objc_class *)type metadata accessor for IdentityServicesAgent();
  v77.receiver = v48;
  v77.super_class = v49;
  v50 = objc_msgSendSuper2(&v77, "init");
  v51 = qword_100315820;
  v52 = v50;
  if (v51 != -1)
    swift_once(&qword_100315820, sub_1000D95E4);
  v53 = type metadata accessor for Logger(0);
  sub_10000D744(v53, (uint64_t)qword_10033FD18);
  v54 = v52;
  v55 = Logger.logObject.getter(v54);
  v56 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v55, v56))
  {
    v57 = (uint8_t *)swift_slowAlloc(12, -1);
    v58 = (void *)swift_slowAlloc(32, -1);
    v78 = v58;
    *(_DWORD *)v57 = 136446210;
    v75 = (uint64_t)(v57 + 4);
    v59 = v54;
    v60 = objc_msgSend(v59, "description");
    v61 = static String._unconditionallyBridgeFromObjectiveC(_:)(v60);
    v63 = v62;

    v76 = sub_100172BEC(v61, v63, (uint64_t *)&v78);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, &v77, v75, v57 + 12);

    swift_bridgeObjectRelease(v63);
    _os_log_impl((void *)&_mh_execute_header, v55, v56, "[%{public}s] init", v57, 0xCu);
    swift_arrayDestroy(v58, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v58, -1, -1);
    swift_slowDealloc(v57, -1, -1);

    swift_release(v70);
  }
  else
  {

    swift_release(v70);
  }
  return v54;
}

id sub_100202A70()
{
  void *v0;
  uint64_t v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  objc_class *v12;
  uint64_t v14;
  uint64_t v15;
  objc_super v16;

  if (qword_100315820 != -1)
    swift_once(&qword_100315820, sub_1000D95E4);
  v1 = type metadata accessor for Logger(0);
  sub_10000D744(v1, (uint64_t)qword_10033FD18);
  v2 = v0;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v15 = v6;
    *(_DWORD *)v5 = 136446210;
    v7 = v2;
    v8 = objc_msgSend(v7, "description");
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v10;

    v14 = sub_100172BEC(v9, v11, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v5 + 4, v5 + 12);

    swift_bridgeObjectRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}s] deinit", v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
  v12 = (objc_class *)type metadata accessor for IdentityServicesAgent();
  v16.receiver = v2;
  v16.super_class = v12;
  return objc_msgSendSuper2(&v16, "dealloc");
}

uint64_t sub_100202CD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  __n128 v16;
  char v17;
  uint64_t result;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  void *v22;
  id v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  _QWORD aBlock[5];
  _QWORD *v34;

  v1 = v0;
  ObjectType = swift_getObjectType(v0);
  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v31 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3, v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30, v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchPredicate(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  v15 = (uint64_t *)((char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000D75C();
  *v15 = static OS_dispatch_queue.main.getter(v16);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v11);
  v17 = _dispatchPreconditionTest(_:)(v15);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v12 + 8))(v15, v11);
  if ((v17 & 1) != 0)
  {
    v19 = swift_allocObject(&unk_1002F9F00, 24, 7);
    swift_unknownObjectWeakInit(v19 + 16, v1);
    v20 = *(void **)(v1 + OBJC_IVAR____TtC8SOSBuddy21IdentityServicesAgent__callbackQueue);
    v21 = (_QWORD *)swift_allocObject(&unk_1002FA108, 40, 7);
    v21[2] = v20;
    v21[3] = v19;
    v21[4] = ObjectType;
    aBlock[4] = sub_100205638;
    v34 = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001BAACC;
    aBlock[3] = &unk_1002FA120;
    v22 = _Block_copy(aBlock);
    v23 = v20;
    v24 = swift_retain(v19);
    static DispatchQoS.unspecified.getter(v24);
    v32 = &_swiftEmptyArrayStorage;
    v25 = sub_1000052EC((unint64_t *)&qword_10031B310, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v26 = sub_100003DB8((uint64_t *)&unk_1003178D0);
    v27 = sub_10000F138((unint64_t *)&qword_10031B320, (uint64_t *)&unk_1003178D0);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v32, v26, v27, v3, v25);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v22);
    _Block_release(v22);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v30);
    v28 = v34;
    swift_release(v19);
    swift_release(v28);
    return 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100202FA4(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t Strong;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  __int16 v28;
  __n128 v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  void *v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id aBlock[5];
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_allocWithZone((Class)IDSOffGridStateManager);
  aBlock[0] = 0;
  v15 = a1;
  v16 = objc_msgSend(v14, "initWithQueue:error:", v15, aBlock);
  v17 = aBlock[0];
  if (v16)
  {
    v18 = a2 + 16;

    swift_beginAccess(v18, &v57, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v18);
    if (Strong)
    {
      v20 = (void *)Strong;
      v21 = *(void **)(Strong + OBJC_IVAR____TtC8SOSBuddy21IdentityServicesAgent__manager);
      *(_QWORD *)(Strong + OBJC_IVAR____TtC8SOSBuddy21IdentityServicesAgent__manager) = v16;
      v22 = v16;

      objc_msgSend(v22, "setDelegate:", v20);
      if (qword_100315878 != -1)
        swift_once(&qword_100315878, sub_1000D9778);
      v52 = v10;
      v53 = v9;
      v54 = v5;
      v23 = type metadata accessor for Logger(0);
      v24 = sub_10000D744(v23, (uint64_t)qword_10033FE20);
      v25 = Logger.logObject.getter(v24);
      v26 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v25, v26))
      {
        v27 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v27 = 0;
        _os_log_impl((void *)&_mh_execute_header, v25, v26, "Fetching initial mode", v27, 2u);
        swift_slowDealloc(v27, -1, -1);
      }

      v28 = sub_100204D04(0x6C616974696E49, 0xE700000000000000, (uint64_t)objc_msgSend(v22, "offGridMode"), (unint64_t)objc_msgSend(v22, "publishStatus"));
      sub_10000D75C();
      v30 = (void *)static OS_dispatch_queue.main.getter(v29);
      v31 = swift_allocObject(&unk_1002F9F00, 24, 7);
      swift_unknownObjectWeakInit(v31 + 16, v20);
      v32 = swift_allocObject(&unk_1002FA158, 26, 7);
      *(_QWORD *)(v32 + 16) = v31;
      *(_WORD *)(v32 + 24) = v28;
      aBlock[4] = sub_100205668;
      v56 = v32;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = (id)1107296256;
      aBlock[2] = sub_1001BAACC;
      aBlock[3] = &unk_1002FA170;
      v33 = _Block_copy(aBlock);
      swift_release(v56);
      static DispatchQoS.unspecified.getter(v34);
      aBlock[0] = &_swiftEmptyArrayStorage;
      v35 = sub_1000052EC((unint64_t *)&qword_10031B310, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v36 = sub_100003DB8((uint64_t *)&unk_1003178D0);
      v37 = sub_10000F138((unint64_t *)&qword_10031B320, (uint64_t *)&unk_1003178D0);
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v36, v37, v4, v35);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v8, v33);

      _Block_release(v33);
      (*(void (**)(char *, uint64_t))(v54 + 8))(v8, v4);
      (*(void (**)(char *, uint64_t))(v52 + 8))(v13, v53);
    }
    else
    {

    }
  }
  else
  {
    v38 = v17;
    v39 = _convertNSErrorToError(_:)(v17);

    swift_willThrow(v40);
    if (qword_100315878 != -1)
      swift_once(&qword_100315878, sub_1000D9778);
    v41 = type metadata accessor for Logger(0);
    sub_10000D744(v41, (uint64_t)qword_10033FE20);
    swift_errorRetain(v39);
    v42 = swift_errorRetain(v39);
    v43 = Logger.logObject.getter(v42);
    v44 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc(12, -1);
      v46 = (void *)swift_slowAlloc(32, -1);
      aBlock[0] = v46;
      *(_DWORD *)v45 = 136446210;
      v57 = v39;
      swift_errorRetain(v39);
      v47 = sub_100003DB8((uint64_t *)&unk_100324AA0);
      v49 = String.init<A>(describing:)(&v57, v47, v48);
      v51 = v50;
      v57 = sub_100172BEC(v49, v50, (uint64_t *)aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v45 + 4, v45 + 12);
      swift_bridgeObjectRelease(v51);
      swift_errorRelease(v39);
      swift_errorRelease(v39);
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "Error initializing IDSOffGridStateManager: %{public}s", v45, 0xCu);
      swift_arrayDestroy(v46, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v46, -1, -1);
      swift_slowDealloc(v45, -1, -1);

      swift_errorRelease(v39);
    }
    else
    {
      swift_errorRelease(v39);
      swift_errorRelease(v39);
      swift_errorRelease(v39);

    }
  }
}

uint64_t sub_100203554(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  void *v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  _BYTE v8[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {
    v5 = (void *)result;
    v7 = *(void (**)(uint64_t))(result + OBJC_IVAR____TtC8SOSBuddy21IdentityServicesAgent__callback);
    v6 = *(_QWORD *)(result + OBJC_IVAR____TtC8SOSBuddy21IdentityServicesAgent__callback + 8);
    swift_retain(v6);

    v7(a2);
    return swift_release(v6);
  }
  return result;
}

uint64_t sub_1002035D8()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  __n128 v16;
  char v17;
  uint64_t result;
  uint64_t v19;
  void *v20;
  id v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD aBlock[5];
  uint64_t v29;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v26 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2, v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchPredicate(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  v15 = (uint64_t *)((char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000D75C();
  *v15 = static OS_dispatch_queue.main.getter(v16);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v11);
  v17 = _dispatchPreconditionTest(_:)(v15);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v12 + 8))(v15, v11);
  if ((v17 & 1) != 0)
  {
    v19 = swift_allocObject(&unk_1002FA0B8, 24, 7);
    *(_QWORD *)(v19 + 16) = v1;
    aBlock[4] = sub_1002055F4;
    v29 = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001BAACC;
    aBlock[3] = &unk_1002FA0D0;
    v20 = _Block_copy(aBlock);
    v21 = v1;
    static DispatchQoS.unspecified.getter(v22);
    v27 = _swiftEmptyArrayStorage;
    v23 = sub_1000052EC((unint64_t *)&qword_10031B310, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v24 = sub_100003DB8((uint64_t *)&unk_1003178D0);
    v25 = sub_10000F138((unint64_t *)&qword_10031B320, (uint64_t *)&unk_1003178D0);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v27, v24, v25, v2, v23);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v5, v20);
    _Block_release(v20);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    return swift_release(v29);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10020384C(int a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  __n128 v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v43[12];
  int v44;
  uint64_t v45;
  int v46;
  uint64_t ObjectType;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t aBlock[5];
  uint64_t v54;

  v5 = v4;
  v48 = a3;
  LODWORD(v7) = a2;
  LODWORD(v8) = a1;
  ObjectType = swift_getObjectType(v4);
  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v51 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9, v10);
  v12 = &v43[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for DispatchQoS(0);
  v49 = *(_QWORD *)(v13 - 8);
  v50 = v13;
  __chkstk_darwin(v13, v14);
  v16 = &v43[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_100315878 != -1)
    swift_once(&qword_100315878, sub_1000D9778);
  v17 = type metadata accessor for Logger(0);
  v18 = sub_10000D744(v17, (uint64_t)qword_10033FE20);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc(22, -1);
    v22 = swift_slowAlloc(64, -1);
    v46 = v7;
    v7 = v22;
    aBlock[0] = v22;
    *(_DWORD *)v21 = 136315394;
    if ((v8 & 1) != 0)
      v23 = 1702195828;
    else
      v23 = 0x65736C6166;
    v44 = v8;
    if ((v8 & 1) != 0)
      v24 = 0xE400000000000000;
    else
      v24 = 0xE500000000000000;
    v45 = a4;
    v52 = (_QWORD *)sub_100172BEC(v23, v24, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, aBlock, v21 + 4, v21 + 12);
    swift_bridgeObjectRelease(v24);
    *(_WORD *)(v21 + 12) = 2080;
    LOBYTE(v52) = v46;
    v26 = String.init<A>(describing:)(&v52, &type metadata for OffTheGridModeRequester, v25);
    v8 = v27;
    v52 = (_QWORD *)sub_100172BEC(v26, v27, aBlock);
    a4 = v45;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, aBlock, v21 + 14, v21 + 22);
    v28 = v8;
    LOBYTE(v8) = v44;
    swift_bridgeObjectRelease(v28);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "setOffTheGridMode: on - %s, requester: %s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy(v7, 2, (char *)&type metadata for Any + 8);
    v29 = v7;
    LOBYTE(v7) = v46;
    swift_slowDealloc(v29, -1, -1);
    swift_slowDealloc(v21, -1, -1);
  }

  v30 = swift_allocObject(&unk_1002F9F00, 24, 7);
  swift_unknownObjectWeakInit(v30 + 16, v5);
  v31 = *(void **)(v5 + OBJC_IVAR____TtC8SOSBuddy21IdentityServicesAgent__callbackQueue);
  v32 = swift_allocObject(&unk_1002F9F78, 64, 7);
  v33 = v48;
  *(_QWORD *)(v32 + 16) = v30;
  *(_QWORD *)(v32 + 24) = v33;
  *(_QWORD *)(v32 + 32) = a4;
  *(_BYTE *)(v32 + 40) = v8 & 1;
  *(_BYTE *)(v32 + 41) = v7;
  v34 = ObjectType;
  *(_QWORD *)(v32 + 48) = v31;
  *(_QWORD *)(v32 + 56) = v34;
  aBlock[4] = (uint64_t)sub_1002054C0;
  v54 = v32;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1001BAACC;
  aBlock[3] = (uint64_t)&unk_1002F9F90;
  v35 = _Block_copy(aBlock);
  swift_retain(v30);
  swift_retain(a4);
  v36 = v31;
  static DispatchQoS.unspecified.getter(v37);
  v52 = _swiftEmptyArrayStorage;
  v38 = sub_1000052EC((unint64_t *)&qword_10031B310, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v39 = sub_100003DB8((uint64_t *)&unk_1003178D0);
  v40 = sub_10000F138((unint64_t *)&qword_10031B320, (uint64_t *)&unk_1003178D0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v52, v39, v40, v9, v38);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v16, v12, v35);
  _Block_release(v35);
  (*(void (**)(_BYTE *, uint64_t))(v51 + 8))(v12, v9);
  (*(void (**)(_BYTE *, uint64_t))(v49 + 8))(v16, v50);
  v41 = v54;
  swift_release(v30);
  return swift_release(v41);
}

void sub_100203C70(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, void *a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t Strong;
  void *v21;
  void *v22;
  uint64_t v23;
  id v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  __n128 v31;
  void *v32;
  uint64_t v33;
  void *v34;
  _QWORD *v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSString v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  _QWORD *v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void **aBlock;
  uint64_t v54;
  void *v55;
  void *v56;
  void *v57;
  _QWORD *v58;
  char v59[24];

  v49 = a7;
  v52 = a2;
  v12 = type metadata accessor for DispatchWorkItemFlags(0);
  v51 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12, v13);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for DispatchQoS(0);
  v16 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50, v17);
  v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v59, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong
    && (v21 = (void *)Strong,
        v22 = *(void **)(Strong + OBJC_IVAR____TtC8SOSBuddy21IdentityServicesAgent__manager),
        v48 = v22,
        v21,
        v22))
  {
    if ((a4 & 1) != 0)
      v23 = 2;
    else
      v23 = 1;
    v24 = objc_msgSend(objc_allocWithZone((Class)IDSOffGridModeOptions), "init");
    if (a5)
    {
      if (a5 == 1)
        v25 = 0x8000000100270B60;
      else
        v25 = 0x8000000100270B20;
    }
    else
    {
      v25 = 0xE800000000000000;
    }
    v40 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v25);
    objc_msgSend(v24, "setEntryPointSource:", v40);

    v41 = (_QWORD *)swift_allocObject(&unk_1002FA018, 48, 7);
    v42 = v52;
    v41[2] = a6;
    v41[3] = v42;
    v43 = v49;
    v41[4] = a3;
    v41[5] = v43;
    v57 = sub_10020554C;
    v58 = v41;
    aBlock = _NSConcreteStackBlock;
    v54 = 1107296256;
    v55 = sub_100204704;
    v56 = &unk_1002FA030;
    v44 = _Block_copy(&aBlock);
    v45 = v58;
    v46 = a6;
    swift_retain(a3);
    swift_release(v45);
    v47 = v48;
    objc_msgSend(v48, "setOffGridMode:options:completion:", v23, v24, v44);
    _Block_release(v44);

  }
  else
  {
    if (qword_100315878 != -1)
      swift_once(&qword_100315878, sub_1000D9778);
    v26 = type metadata accessor for Logger(0);
    v27 = sub_10000D744(v26, (uint64_t)qword_10033FE20);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "_manager is down, ignoring setOffTheGridMode request", v30, 2u);
      swift_slowDealloc(v30, -1, -1);
    }

    sub_10000D75C();
    v32 = (void *)static OS_dispatch_queue.main.getter(v31);
    v33 = swift_allocObject(&unk_1002F9FC8, 32, 7);
    *(_QWORD *)(v33 + 16) = v52;
    *(_QWORD *)(v33 + 24) = a3;
    v57 = sub_1002054FC;
    v58 = (_QWORD *)v33;
    aBlock = _NSConcreteStackBlock;
    v54 = 1107296256;
    v55 = sub_1001BAACC;
    v56 = &unk_1002F9FE0;
    v34 = _Block_copy(&aBlock);
    v35 = v58;
    swift_retain(a3);
    swift_release(v35);
    static DispatchQoS.unspecified.getter(v36);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v37 = sub_1000052EC((unint64_t *)&qword_10031B310, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v38 = sub_100003DB8((uint64_t *)&unk_1003178D0);
    v39 = sub_10000F138((unint64_t *)&qword_10031B320, (uint64_t *)&unk_1003178D0);
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v38, v39, v12, v37);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v19, v15, v34);
    _Block_release(v34);

    (*(void (**)(char *, uint64_t))(v51 + 8))(v15, v12);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v50);
  }
}

uint64_t sub_1002040E0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  _UNKNOWN **v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  __n128 v61;
  void *v62;
  _QWORD *v63;
  void *v64;
  _QWORD *v65;
  char *v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t aBlock[5];
  _QWORD *v87;

  v79 = a2;
  v80 = a7;
  v84 = a1;
  v83 = type metadata accessor for DispatchWorkItemFlags(0);
  v78 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83, v11);
  v13 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for DispatchQoS(0);
  v14 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82, v15);
  v81 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for DispatchPredicate(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  v21 = (uint64_t *)((char *)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v21 = a4;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v18 + 104))(v21, enum case for DispatchPredicate.onQueue(_:), v17);
  v22 = a4;
  LOBYTE(a4) = _dispatchPreconditionTest(_:)(v21);
  (*(void (**)(_QWORD *, uint64_t))(v18 + 8))(v21, v17);
  if ((a4 & 1) == 0)
  {
    __break(1u);
LABEL_14:
    swift_once(&qword_100315878, sub_1000D9778);
    goto LABEL_9;
  }
  v23 = &off_100315000;
  v17 = v84;
  if (a3)
  {
    swift_errorRetain(a3);
    if (qword_100315878 != -1)
      swift_once(&qword_100315878, sub_1000D9778);
    v24 = type metadata accessor for Logger(0);
    sub_10000D744(v24, (uint64_t)qword_10033FE20);
    swift_errorRetain(a3);
    v25 = swift_errorRetain(a3);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc(12, -1);
      v77 = a6;
      v29 = (uint8_t *)v28;
      v30 = swift_slowAlloc(32, -1);
      v75 = v14;
      v31 = v30;
      v85 = a3;
      aBlock[0] = v30;
      *(_DWORD *)v29 = 136446210;
      v76 = a5;
      swift_errorRetain(a3);
      v32 = sub_100003DB8((uint64_t *)&unk_100324AA0);
      v34 = String.init<A>(describing:)(&v85, v32, v33);
      v36 = v35;
      v85 = sub_100172BEC(v34, v35, aBlock);
      a5 = v76;
      v17 = v84;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, aBlock, v29 + 4, v29 + 12);
      v37 = v36;
      v23 = &off_100315000;
      swift_bridgeObjectRelease(v37);
      swift_errorRelease(a3);
      swift_errorRelease(a3);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "setOffGridMode failed: %{public}s", v29, 0xCu);
      swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
      v38 = v31;
      v14 = v75;
      swift_slowDealloc(v38, -1, -1);
      v39 = v29;
      a6 = v77;
      swift_slowDealloc(v39, -1, -1);

      swift_errorRelease(a3);
    }
    else
    {
      swift_errorRelease(a3);
      swift_errorRelease(a3);
      swift_errorRelease(a3);

    }
  }
  if (v23[271] != (_UNKNOWN *)-1)
    goto LABEL_14;
LABEL_9:
  v40 = type metadata accessor for Logger(0);
  v41 = sub_10000D744(v40, (uint64_t)qword_10033FE20);
  v42 = Logger.logObject.getter(v41);
  v43 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v42, v43))
  {
    v44 = swift_slowAlloc(22, -1);
    v45 = swift_slowAlloc(64, -1);
    v76 = a5;
    v46 = v45;
    v85 = v17;
    aBlock[0] = v45;
    *(_DWORD *)v44 = 136446466;
    type metadata accessor for IDSOffGridMode(0);
    v49 = String.init<A>(describing:)(&v85, v47, v48);
    v77 = a6;
    v51 = v50;
    v85 = sub_100172BEC(v49, v50, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, aBlock, v44 + 4, v44 + 12);
    swift_bridgeObjectRelease(v51);
    *(_WORD *)(v44 + 12) = 2082;
    v52 = v17;
    v53 = v79;
    v85 = v79;
    type metadata accessor for IDSOffGridModePublishStatus(0);
    v56 = String.init<A>(describing:)(&v85, v54, v55);
    v58 = v57;
    v85 = sub_100172BEC(v56, v57, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, aBlock, v44 + 14, v44 + 22);
    v59 = v58;
    a6 = v77;
    swift_bridgeObjectRelease(v59);
    _os_log_impl((void *)&_mh_execute_header, v42, v43, "setOffGridMode returned: %{public}s, publishStatus: %{public}s", (uint8_t *)v44, 0x16u);
    swift_arrayDestroy(v46, 2, (char *)&type metadata for Any + 8);
    v60 = v46;
    a5 = v76;
    swift_slowDealloc(v60, -1, -1);
    swift_slowDealloc(v44, -1, -1);

  }
  else
  {

    v52 = v17;
    v53 = v79;
  }
  sub_10000D75C();
  v62 = (void *)static OS_dispatch_queue.main.getter(v61);
  v63 = (_QWORD *)swift_allocObject(&unk_1002FA068, 56, 7);
  v63[2] = a5;
  v63[3] = a6;
  v63[4] = v52;
  v63[5] = v53;
  v63[6] = v80;
  aBlock[4] = (uint64_t)sub_10020557C;
  v87 = v63;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1001BAACC;
  aBlock[3] = (uint64_t)&unk_1002FA080;
  v64 = _Block_copy(aBlock);
  v65 = v87;
  swift_retain(a6);
  swift_release(v65);
  v66 = v81;
  static DispatchQoS.unspecified.getter(v67);
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  v68 = sub_1000052EC((unint64_t *)&qword_10031B310, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v69 = sub_100003DB8((uint64_t *)&unk_1003178D0);
  v70 = sub_10000F138((unint64_t *)&qword_10031B320, (uint64_t *)&unk_1003178D0);
  v71 = v69;
  v72 = v83;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v71, v70, v83, v68);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v66, v13, v64);
  _Block_release(v64);

  (*(void (**)(char *, uint64_t))(v78 + 8))(v13, v72);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v66, v82);
}

void sub_100204704(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, void *);
  id v9;

  v8 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  swift_retain(v7);
  v9 = a4;
  v8(a2, a3, a4);
  swift_release(v7);

}

BOOL sub_100204774(unint64_t a1)
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a1 < 4)
    return (a1 & 0xF) == 0;
  if (qword_100315878 != -1)
    swift_once(&qword_100315878, sub_1000D9778);
  v3 = type metadata accessor for Logger(0);
  v4 = sub_10000D744(v3, (uint64_t)qword_10033FE20);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v14 = a1;
    v15 = v8;
    *(_DWORD *)v7 = 136446210;
    type metadata accessor for IDSOffGridModePublishStatus(0);
    v11 = String.init<A>(describing:)(&v14, v9, v10);
    v13 = v12;
    v14 = sub_100172BEC(v11, v12, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v7 + 4, v7 + 12);
    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Unknown publishStatus value: %{public}s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);
  }

  return 0;
}

uint64_t type metadata accessor for IdentityServicesAgent()
{
  return objc_opt_self(_TtC8SOSBuddy21IdentityServicesAgent);
}

uint64_t sub_100204954(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t result;
  void *v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  _BYTE v11[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v5);
  if (result)
  {
    v7 = (void *)result;
    v9 = *(void (**)(uint64_t))(result + OBJC_IVAR____TtC8SOSBuddy21IdentityServicesAgent__callback);
    v8 = *(_QWORD *)(result + OBJC_IVAR____TtC8SOSBuddy21IdentityServicesAgent__callback + 8);
    swift_retain(v8);

    v10 = sub_100204D04(0xD000000000000012, 0x8000000100270B00, a2, a3);
    v9(v10);
    return swift_release(v8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for OffTheGridMode(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100204AC8 + 4 * byte_10025F015[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_100204AFC + 4 * byte_10025F010[v4]))();
}

uint64_t sub_100204AFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_100204B04(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x100204B0CLL);
  return result;
}

uint64_t sub_100204B18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x100204B20);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100204B24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_100204B2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OffTheGridMode()
{
  return &type metadata for OffTheGridMode;
}

uint64_t sub_100204B48(uint64_t a1, unint64_t a2)
{
  BOOL v3;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = sub_100204774(a2);
  if (!a1)
    return 2;
  if (a1 != 1)
  {
    if (a1 == 2)
    {
      if (v3)
        return 257;
      else
        return 1;
    }
    if (qword_100315878 != -1)
      swift_once(&qword_100315878, sub_1000D9778);
    v5 = type metadata accessor for Logger(0);
    v6 = sub_10000D744(v5, (uint64_t)qword_10033FE20);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(12, -1);
      v10 = swift_slowAlloc(32, -1);
      v16 = a1;
      v17 = v10;
      *(_DWORD *)v9 = 136446210;
      type metadata accessor for IDSOffGridMode(0);
      v13 = String.init<A>(describing:)(&v16, v11, v12);
      v15 = v14;
      v16 = sub_100172BEC(v13, v14, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v9 + 4, v9 + 12);
      swift_bridgeObjectRelease(v15);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Unknown offGridMode value: %{public}s", v9, 0xCu);
      swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v10, -1, -1);
      swift_slowDealloc(v9, -1, -1);
    }

    return 2;
  }
  if (v3)
    return 256;
  else
    return 0;
}

uint64_t sub_100204D04(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v32;
  uint64_t v33;

  v8 = sub_100204B48(a3, a4);
  if (qword_100315878 != -1)
    swift_once(&qword_100315878, sub_1000D9778);
  v9 = type metadata accessor for Logger(0);
  sub_10000D744(v9, (uint64_t)qword_10033FE20);
  v11 = swift_bridgeObjectRetain_n(a2, 2, v10);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc(42, -1);
    v15 = swift_slowAlloc(128, -1);
    v33 = v15;
    *(_DWORD *)v14 = 136446978;
    swift_bridgeObjectRetain(a2);
    v32 = sub_100172BEC(a1, a2, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v14 + 4, v14 + 12);
    swift_bridgeObjectRelease_n(a2, 3);
    *(_WORD *)(v14 + 12) = 2082;
    v32 = a3;
    type metadata accessor for IDSOffGridMode(0);
    v18 = String.init<A>(describing:)(&v32, v16, v17);
    v20 = v19;
    v32 = sub_100172BEC(v18, v19, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v14 + 14, v14 + 22);
    swift_bridgeObjectRelease(v20);
    *(_WORD *)(v14 + 22) = 2082;
    v32 = a4;
    type metadata accessor for IDSOffGridModePublishStatus(0);
    v23 = String.init<A>(describing:)(&v32, v21, v22);
    v25 = v24;
    v32 = sub_100172BEC(v23, v24, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v14 + 24, v14 + 32);
    swift_bridgeObjectRelease(v25);
    *(_WORD *)(v14 + 32) = 2082;
    LOWORD(v32) = v8;
    v26 = sub_100003DB8(&qword_100317BD8);
    v28 = String.init<A>(describing:)(&v32, v26, v27);
    v30 = v29;
    v32 = sub_100172BEC(v28, v29, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v14 + 34, v14 + 42);
    swift_bridgeObjectRelease(v30);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: (mode: %{public}s, publishStatus: %{public}s) -> %{public}s", (uint8_t *)v14, 0x2Au);
    swift_arrayDestroy(v15, 4, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  return v8;
}

uint64_t sub_100204FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t result;
  __n128 v39;
  void *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  void *v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t aBlock[5];
  _QWORD *v61;

  v57 = a1;
  v58 = a2;
  ObjectType = swift_getObjectType(v2);
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v55 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4, v5);
  v54 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v52 = *(_QWORD *)(v7 - 8);
  v53 = v7;
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchPredicate(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  v15 = (uint64_t *)((char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_100315878 != -1)
    swift_once(&qword_100315878, sub_1000D9778);
  v16 = type metadata accessor for Logger(0);
  v17 = sub_10000D744(v16, (uint64_t)qword_10033FE20);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc(22, -1);
    v21 = swift_slowAlloc(64, -1);
    v50 = ObjectType;
    v22 = v21;
    *(_DWORD *)v20 = 136315394;
    v59 = v57;
    aBlock[0] = v21;
    type metadata accessor for IDSOffGridMode(0);
    v25 = String.init<A>(describing:)(&v59, v23, v24);
    v51 = v4;
    v27 = v26;
    v59 = sub_100172BEC(v25, v26, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, aBlock, v20 + 4, v20 + 12);
    swift_bridgeObjectRelease(v27);
    *(_WORD *)(v20 + 12) = 2082;
    v59 = v58;
    type metadata accessor for IDSOffGridModePublishStatus(0);
    v30 = String.init<A>(describing:)(&v59, v28, v29);
    v32 = v31;
    v59 = sub_100172BEC(v30, v31, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, aBlock, v20 + 14, v20 + 22);
    v33 = v32;
    v4 = v51;
    swift_bridgeObjectRelease(v33);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "offGridMode update received: %s, publishStatus: %{public}s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy(v22, 2, (char *)&type metadata for Any + 8);
    v34 = v22;
    ObjectType = v50;
    swift_slowDealloc(v34, -1, -1);
    swift_slowDealloc(v20, -1, -1);
  }

  v35 = v56;
  v36 = *(void **)(v56 + OBJC_IVAR____TtC8SOSBuddy21IdentityServicesAgent__callbackQueue);
  *v15 = v36;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v11);
  v37 = v36;
  LOBYTE(v36) = _dispatchPreconditionTest(_:)(v15);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v12 + 8))(v15, v11);
  if ((v36 & 1) != 0)
  {
    sub_10000D75C();
    v40 = (void *)static OS_dispatch_queue.main.getter(v39);
    v41 = swift_allocObject(&unk_1002F9F00, 24, 7);
    swift_unknownObjectWeakInit(v41 + 16, v35);
    v42 = (_QWORD *)swift_allocObject(&unk_1002F9F28, 48, 7);
    v43 = v57;
    v42[2] = v41;
    v42[3] = v43;
    v42[4] = v58;
    v42[5] = ObjectType;
    aBlock[4] = (uint64_t)sub_100205468;
    v61 = v42;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1001BAACC;
    aBlock[3] = (uint64_t)&unk_1002F9F40;
    v44 = _Block_copy(aBlock);
    swift_release(v61);
    static DispatchQoS.unspecified.getter(v45);
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    v46 = sub_1000052EC((unint64_t *)&qword_10031B310, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v47 = sub_100003DB8((uint64_t *)&unk_1003178D0);
    v48 = sub_10000F138((unint64_t *)&qword_10031B320, (uint64_t *)&unk_1003178D0);
    v49 = v54;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v47, v48, v4, v46);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v49, v44);
    _Block_release(v44);

    (*(void (**)(char *, uint64_t))(v55 + 8))(v49, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v10, v53);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100205420()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100205444()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100205468()
{
  uint64_t v0;

  return sub_100204954(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

double sub_100205474(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_100205484(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10020548C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 64, 7);
}

void sub_1002054C0()
{
  uint64_t v0;

  sub_100203C70(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40), *(_BYTE *)(v0 + 41), *(void **)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_1002054D8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002054FC()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(v0 + 16))(2);
}

uint64_t sub_100205520()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10020554C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002040E0(a1, a2, a3, *(void **)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40));
}

uint64_t sub_100205558()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10020557C()
{
  _QWORD *v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  v1 = (uint64_t (*)(uint64_t))v0[2];
  v2 = sub_100204D04(0x724766664F746573, 0xEE0065646F4D6469, v0[4], v0[5]);
  return v1(v2);
}

uint64_t sub_1002055D0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1002055F4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void **)(v1 + OBJC_IVAR____TtC8SOSBuddy21IdentityServicesAgent__manager);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8SOSBuddy21IdentityServicesAgent__manager) = 0;

}

uint64_t sub_10020560C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

void sub_100205638()
{
  uint64_t v0;

  sub_100202FA4(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100205644()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 26, 7);
}

uint64_t sub_100205668()
{
  uint64_t v0;

  return sub_100203554(*(_QWORD *)(v0 + 16), *(unsigned __int16 *)(v0 + 24));
}

uint64_t storeEnumTagSinglePayload for OffTheGridModeRequester(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1002056C0 + 4 * byte_10025F01F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1002056F4 + 4 * byte_10025F01A[v4]))();
}

uint64_t sub_1002056F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002056FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100205704);
  return result;
}

uint64_t sub_100205710(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100205718);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10020571C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100205724(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OffTheGridModeRequester()
{
  return &type metadata for OffTheGridModeRequester;
}

unint64_t sub_100205744()
{
  unint64_t result;

  result = qword_1003299A0;
  if (!qword_1003299A0)
  {
    result = swift_getWitnessTable(&unk_10025F0D8, &type metadata for OffTheGridModeRequester);
    atomic_store(result, (unint64_t *)&qword_1003299A0);
  }
  return result;
}

double sub_1002057C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  double result;

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = swift_unknownObjectRetain(a2);
  v4(v5);
  swift_release(v3);
  *(_QWORD *)&result = swift_unknownObjectRelease(a2).n128_u64[0];
  return result;
}

double sub_10020583C(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double result;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _BYTE v9[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__contentProducer);

    if (v5)
    {
      swift_beginAccess(v1, &v8, 0, 0);
      v6 = swift_unknownObjectWeakLoadStrong(v1);
      if (v6)
      {
        v7 = (void *)v6;
        sub_100206590(*(double *)(*(_QWORD *)(v5 + 40) + 64), *(double *)(*(_QWORD *)(v5 + 40) + 72));

      }
      *(_QWORD *)&result = swift_unknownObjectRelease(v5).n128_u64[0];
    }
  }
  return result;
}

void sub_100205908()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  id v21;
  char **v22;
  void *v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  char *v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;

  if (qword_100315838 != -1)
    swift_once(&qword_100315838, sub_1000D9630);
  v1 = type metadata accessor for Logger(0);
  sub_10000D744(v1, (uint64_t)qword_10033FD60);
  v2 = v0;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v42 = v6;
    *(_DWORD *)v5 = 136446210;
    v7 = v2;
    v8 = objc_msgSend(v7, "description");
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v10;

    v41 = sub_100172BEC(v9, v11, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v5 + 4, v5 + 12);

    swift_bridgeObjectRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}s] loadView", v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__contentProducer]);
  if (Strong)
  {
    v13 = Strong;
    v14 = sub_10016E950(v2);
    v16 = v15;
    v18 = v17;
    v20 = v19;
    v21 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    objc_msgSend(v21, "addSubview:", v14);
    objc_msgSend(v21, "addSubview:", v16);
    objc_msgSend(v21, "addSubview:", v18);
    objc_msgSend(v21, "addSubview:", v20);
    objc_msgSend(v2, "setView:", v21);
    v22 = (char **)&v2[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__content];
    v23 = *(void **)&v2[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__content];
    v24 = v22[1];
    v25 = v22[2];
    v26 = v22[3];
    *v22 = v14;
    v22[1] = v16;
    v22[2] = v18;
    v22[3] = v20;
    v27 = v14;
    v28 = v16;
    v29 = v18;
    v30 = v20;
    sub_100209D88(v23, v24, v25, v26);
    swift_unknownObjectRelease(v13);

  }
  else
  {
    v31 = v2;
    v32 = Logger.logObject.getter(v31);
    v33 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc(12, -1);
      v35 = swift_slowAlloc(32, -1);
      v42 = v35;
      *(_DWORD *)v34 = 136446210;
      v36 = v31;
      v37 = objc_msgSend(v36, "description");
      v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
      v40 = v39;

      v41 = sub_100172BEC(v38, v40, &v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v34 + 4, v34 + 12);

      swift_bridgeObjectRelease(v40);
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "[%{public}s] contentProducer expired", v34, 0xCu);
      swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v35, -1, -1);
      swift_slowDealloc(v34, -1, -1);

    }
    else
    {

    }
  }
}

void sub_100205D70()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  objc_class *v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  objc_super v18;

  if (qword_100315838 != -1)
    swift_once(&qword_100315838, sub_1000D9630);
  v1 = type metadata accessor for Logger(0);
  sub_10000D744(v1, (uint64_t)qword_10033FD60);
  v2 = v0;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v17 = v6;
    *(_DWORD *)v5 = 136446210;
    v7 = v2;
    v8 = objc_msgSend(v7, "description");
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v10;

    v16 = sub_100172BEC(v9, v11, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v5 + 4, v5 + 12);

    swift_bridgeObjectRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}s] viewDidLoad", v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
  v12 = (objc_class *)type metadata accessor for SessionBannerViewController();
  v18.receiver = v2;
  v18.super_class = v12;
  objc_msgSendSuper2(&v18, "viewDidLoad");
  objc_msgSend(v2, "setOverrideUserInterfaceStyle:", 2);
  v13 = *(void **)&v2[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController_tapGesture];
  objc_msgSend(v13, "addTarget:action:", v2, "didTap");
  v14 = objc_msgSend(v2, "view");
  if (v14)
  {
    v15 = v14;
    objc_msgSend(v14, "addGestureRecognizer:", v13);

  }
  else
  {
    __break(1u);
  }
}

id sub_1002060A0(char a1, char *a2, SEL *a3)
{
  void *v3;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  id v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  objc_class *v17;
  char *format;
  uint64_t v20;
  SEL *v21;
  uint64_t v22;
  uint64_t v23;
  objc_super v24;

  if (qword_100315838 != -1)
    swift_once(&qword_100315838, sub_1000D9630);
  v7 = type metadata accessor for Logger(0);
  sub_10000D744(v7, (uint64_t)qword_10033FD60);
  v8 = v3;
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v21 = a3;
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v20 = swift_slowAlloc(32, -1);
    v23 = v20;
    *(_DWORD *)v11 = 136446210;
    format = a2;
    v12 = v8;
    v13 = objc_msgSend(v12, "description");
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v16 = v15;

    a3 = v21;
    v22 = sub_100172BEC(v14, v16, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v11 + 4, v11 + 12);

    swift_bridgeObjectRelease(v16);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, format, v11, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v11, -1, -1);

  }
  else
  {

  }
  v17 = (objc_class *)type metadata accessor for SessionBannerViewController();
  v24.receiver = v8;
  v24.super_class = v17;
  return objc_msgSendSuper2(&v24, *a3, a1 & 1);
}

double sub_100206344()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t Strong;
  double result;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;

  if (qword_100315838 != -1)
    swift_once(&qword_100315838, sub_1000D9630);
  v1 = type metadata accessor for Logger(0);
  sub_10000D744(v1, (uint64_t)qword_10033FD60);
  v2 = v0;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v19 = v6;
    *(_DWORD *)v5 = 136446210;
    v7 = v2;
    v8 = objc_msgSend(v7, "description");
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v10;

    v18 = sub_100172BEC(v9, v11, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v5 + 4, v5 + 12);

    swift_bridgeObjectRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}s] didTap", v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
  v12 = &v2[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__delegate];
  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__delegate]);
  if (Strong)
  {
    v15 = Strong;
    v16 = *((_QWORD *)v12 + 1);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v16 + 80))(v2, &off_1002FA2E8, ObjectType, v16);
    *(_QWORD *)&result = swift_unknownObjectRelease(v15).n128_u64[0];
  }
  return result;
}

void sub_100206590(double a1, double a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  double v15;
  double v16;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  if (qword_100315838 != -1)
    swift_once(&qword_100315838, sub_1000D9630);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_10000D744(v6, (uint64_t)qword_10033FD60);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v19 = v11;
    *(_DWORD *)v10 = 136315138;
    v12 = sub_1000DB284(2, a1, a2);
    v14 = v13;
    v18 = sub_100172BEC(v12, v13, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "updatePreferredBannerContentSize - %s", v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }

  objc_msgSend(v3, "preferredContentSize");
  if (v16 != a1 || v15 != a2)
  {
    objc_msgSend(v3, "setPreferredContentSize:", a1, a2);
    sub_100206754();
  }
}

double sub_100206754()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  id v7;
  double result;

  v1 = v0;
  if (qword_100315838 != -1)
    swift_once(&qword_100315838, sub_1000D9630);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_10000D744(v2, (uint64_t)qword_10033FD60);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Jindo: updateJindoElement", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = objc_msgSend(v1, "systemApertureElementContext");
  objc_msgSend(v7, "setElementNeedsUpdate");
  *(_QWORD *)&result = swift_unknownObjectRelease(v7).n128_u64[0];
  return result;
}

void sub_100206850(void *a1, double a2, double a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  void **v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  objc_class *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void **aBlock;
  uint64_t v26;
  double (*v27)(uint64_t, uint64_t);
  void *v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  objc_super v31;

  v4 = v3;
  if (qword_100315838 != -1)
    swift_once(&qword_100315838, sub_1000D9630);
  v8 = type metadata accessor for Logger(0);
  v9 = sub_10000D744(v8, (uint64_t)qword_10033FD60);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = (void **)swift_slowAlloc(32, -1);
    aBlock = v13;
    *(_DWORD *)v12 = 136315138;
    v14 = sub_1000DB284(2, a2, a3);
    v16 = v15;
    v24 = sub_100172BEC(v14, v15, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &aBlock, v12 + 4, v12 + 12);
    swift_bridgeObjectRelease(v16);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "viewWillTransition to %s", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }

  v17 = (objc_class *)type metadata accessor for SessionBannerViewController();
  v31.receiver = v4;
  v31.super_class = v17;
  objc_msgSendSuper2(&v31, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a2, a3);
  v18 = swift_allocObject(&unk_1002FA320, 24, 7);
  swift_unknownObjectWeakInit(v18 + 16, v4);
  v19 = swift_allocObject(&unk_1002FA370, 40, 7);
  *(_QWORD *)(v19 + 16) = v18;
  *(double *)(v19 + 24) = a2;
  *(double *)(v19 + 32) = a3;
  v29 = sub_100209DCC;
  v30 = v19;
  aBlock = _NSConcreteStackBlock;
  v26 = 1107296256;
  v27 = sub_1002057C0;
  v28 = &unk_1002FA388;
  v20 = _Block_copy(&aBlock);
  swift_release(v30);
  v21 = swift_allocObject(&unk_1002FA320, 24, 7);
  swift_unknownObjectWeakInit(v21 + 16, v4);
  v22 = swift_allocObject(&unk_1002FA3C0, 40, 7);
  *(_QWORD *)(v22 + 16) = v21;
  *(double *)(v22 + 24) = a2;
  *(double *)(v22 + 32) = a3;
  v29 = sub_100209E14;
  v30 = v22;
  aBlock = _NSConcreteStackBlock;
  v26 = 1107296256;
  v27 = sub_1002057C0;
  v28 = &unk_1002FA3D8;
  v23 = _Block_copy(&aBlock);
  swift_release(v30);
  objc_msgSend(a1, "animateAlongsideTransition:completion:", v20, v23);
  _Block_release(v23);
  _Block_release(v20);
}

void sub_100206B38(double a1, double a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _BYTE v12[24];

  v6 = a4 + 16;
  swift_beginAccess(a4 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    sub_100206CA0();

  }
  swift_beginAccess(v6, &v11, 0, 0);
  v9 = swift_unknownObjectWeakLoadStrong(v6);
  if (v9)
  {
    v10 = (void *)v9;
    sub_10020736C(a1, a2);

  }
}

void sub_100206BCC(double a1, double a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  _BYTE v9[24];

  v6 = a4 + 16;
  swift_beginAccess(a4 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    sub_10020736C(a1, a2);

  }
}

void sub_100206CA0()
{
  char *v0;
  void *v1;
  char *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  char **p_name;
  id v37;
  void *v38;
  id v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  char **v48;
  id v49;
  char **v50;
  uint64_t v51;
  id v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  double v57;
  double v58;
  double v59;
  double v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  double v65;
  unsigned int v66;
  uint64_t v67;
  void *v68;
  id v69;
  id v70;
  void *v71;
  id v72;
  double v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  id v81;
  id v82;
  id v83;
  void *v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  double v92;
  id v93;
  NSObject *v94;
  os_log_type_t v95;
  uint8_t *v96;
  uint64_t v97;
  double v98;
  double v99;
  double v100;
  double v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  id v105;
  id v106;
  id v107;
  id v108;
  uint64_t v109;
  uint64_t v110;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__content];
  v3 = *(void **)&v0[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__content];
  if (v3)
  {
    v5 = (void *)*((_QWORD *)v2 + 2);
    v4 = (void *)*((_QWORD *)v2 + 3);
    v6 = (void *)*((_QWORD *)v2 + 1);
    v7 = v3;
    v8 = v6;
    v9 = v5;
    v10 = v4;
    v107 = v7;
    sub_100209D88(v3, v6, v5, v4);
    v11 = *(void **)v2;
    if (*(_QWORD *)v2)
    {
      v13 = (void *)*((_QWORD *)v2 + 2);
      v12 = (void *)*((_QWORD *)v2 + 3);
      v14 = (void *)*((_QWORD *)v2 + 1);
      v15 = v11;
      v16 = v14;
      v17 = v13;
      v18 = v12;
      v106 = v16;
      sub_100209D88(v11, v14, v13, v12);
      v19 = *(void **)v2;
      if (*(_QWORD *)v2)
      {
        v21 = (void *)*((_QWORD *)v2 + 2);
        v20 = (void *)*((_QWORD *)v2 + 3);
        v22 = (void *)*((_QWORD *)v2 + 1);
        v23 = v19;
        v24 = v22;
        v25 = v21;
        v26 = v20;
        v105 = v25;
        sub_100209D88(v19, v22, v21, v20);
        v27 = *(void **)v2;
        if (*(_QWORD *)v2)
        {
          v29 = (void *)*((_QWORD *)v2 + 2);
          v28 = (void *)*((_QWORD *)v2 + 3);
          v30 = (void *)*((_QWORD *)v2 + 1);
          v31 = v27;
          v32 = v30;
          v33 = v29;
          v34 = v28;
          sub_100209D88(v27, v30, v29, v28);
          v35 = v107;
          p_name = &ResourceBundleClass.name;
          v37 = objc_msgSend(v1, "view");
          if (v37)
          {
            v38 = v37;
            v39 = objc_msgSend(v37, "SBUISA_systemApertureLeadingViewLayoutGuide");

            objc_msgSend(v39, "layoutFrame");
            v41 = v40;
            v43 = v42;
            v45 = v44;
            v47 = v46;

            v48 = &ResourceBundleClass.name;
            objc_msgSend(v35, "setFrame:", v41, v43, v45, v47);

            v49 = v35;
            v50 = &selRef_setDeviceMotionUpdateInterval_;
            objc_msgSend(v49, "setHidden:", objc_msgSend(v1, "activeLayoutMode") != (id)3);

            if (qword_100315838 != -1)
              swift_once(&qword_100315838, sub_1000D9630);
            v51 = type metadata accessor for Logger(0);
            sub_10000D744(v51, (uint64_t)qword_10033FD60);
            v52 = v49;
            v53 = Logger.logObject.getter(v52);
            v54 = static os_log_type_t.default.getter(v53);
            if (os_log_type_enabled(v53, v54))
            {
              v55 = swift_slowAlloc(18, -1);
              v56 = swift_slowAlloc(32, -1);
              v110 = v56;
              *(_DWORD *)v55 = 136315394;
              objc_msgSend(v52, "frame");
              v61 = sub_1000E128C(2, v57, v58, v59, v60);
              v63 = v62;
              v109 = sub_100172BEC(v61, v62, &v110);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v109, &v110, v55 + 4, v55 + 12);

              v64 = v63;
              v50 = &selRef_setDeviceMotionUpdateInterval_;
              *(_QWORD *)&v65 = swift_bridgeObjectRelease(v64).n128_u64[0];
              *(_WORD *)(v55 + 12) = 1024;
              v66 = objc_msgSend(v52, "isHidden", v65);

              LODWORD(v109) = v66;
              v48 = (char **)(&ResourceBundleClass + 24);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v109, (char *)&v109 + 4, v55 + 14, v55 + 18);

              _os_log_impl((void *)&_mh_execute_header, v53, v54, "Leading view frame = %s, isHidden = %{BOOL}d", (uint8_t *)v55, 0x12u);
              swift_arrayDestroy(v56, 1, (char *)&type metadata for Any + 8);
              v67 = v56;
              p_name = (char **)(&ResourceBundleClass + 24);
              swift_slowDealloc(v67, -1, -1);
              swift_slowDealloc(v55, -1, -1);

            }
            else
            {

            }
            v69 = v106;
            v70 = objc_msgSend(v1, p_name[68]);
            if (v70)
            {
              v71 = v70;
              v72 = objc_msgSend(v70, "SBUISA_systemApertureTrailingViewLayoutGuide");

              objc_msgSend(v72, "layoutFrame");
              v74 = v73;
              v76 = v75;
              v78 = v77;
              v80 = v79;

              objc_msgSend(v69, v48[70], v74, v76, v78, v80);
              v81 = v69;
              objc_msgSend(v81, "setHidden:", objc_msgSend(v1, v50[40]) != (id)3);

              v82 = v105;
              objc_msgSend(v82, "setHidden:", objc_msgSend(v1, v50[40]) != (id)2);

              v83 = objc_msgSend(v1, p_name[68]);
              if (v83)
              {
                v84 = v83;
                objc_msgSend(v83, "bounds");
                v86 = v85;
                v88 = v87;
                v90 = v89;
                v92 = v91;

                objc_msgSend(v34, v48[70], v86, v88, v90, v92);
                v93 = v34;
                v94 = Logger.logObject.getter(v93);
                v95 = static os_log_type_t.default.getter(v94);
                if (os_log_type_enabled(v94, v95))
                {
                  v108 = v52;
                  v96 = (uint8_t *)swift_slowAlloc(12, -1);
                  v97 = swift_slowAlloc(32, -1);
                  v110 = v97;
                  *(_DWORD *)v96 = 136315138;
                  objc_msgSend(v93, "frame");
                  v102 = sub_1000E128C(2, v98, v99, v100, v101);
                  v104 = v103;
                  v109 = sub_100172BEC(v102, v103, &v110);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v109, &v110, v96 + 4, v96 + 12);

                  swift_bridgeObjectRelease(v104);
                  _os_log_impl((void *)&_mh_execute_header, v94, v95, "Custom view frame = %s", v96, 0xCu);
                  swift_arrayDestroy(v97, 1, (char *)&type metadata for Any + 8);
                  swift_slowDealloc(v97, -1, -1);
                  swift_slowDealloc(v96, -1, -1);

                }
                else
                {

                }
                return;
              }
LABEL_23:
              __break(1u);
              return;
            }
          }
          else
          {
            __break(1u);
          }
          __break(1u);
          goto LABEL_23;
        }

        v68 = v105;
      }
      else
      {

        v68 = v106;
      }
    }
    else
    {
      v68 = v107;
    }

  }
}

void sub_10020736C(double a1, double a2)
{
  char *v2;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  char *v18;
  void *v19;
  char *v20;
  uint64_t Strong;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  BOOL v25;
  _QWORD v26[6];
  BOOL v27;
  void *v28;

  v5 = objc_msgSend(v2, "view");
  if (!v5)
  {
    __break(1u);
    goto LABEL_10;
  }
  v6 = v5;
  v7 = objc_msgSend(v5, "SBUISA_systemApertureObstructedAreaLayoutGuide");

  objc_msgSend(v7, "layoutFrame");
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;

  v16 = objc_msgSend(v2, "view");
  if (!v16)
  {
LABEL_10:
    __break(1u);
    return;
  }
  v17 = v16;
  v18 = (char *)objc_msgSend(v16, "SBUISA_layoutMode");

  if ((unint64_t)(v18 - 2) > 2)
    v19 = &_swiftEmptySetSingleton;
  else
    v19 = (void *)sub_10020982C((uint64_t)off_1002FA400[(_QWORD)(v18 - 2)], &qword_100329B18);
  v20 = &v2[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__delegate];
  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__delegate]);
  if (Strong)
  {
    v22 = Strong;
    v23 = *((_QWORD *)v20 + 1);
    ObjectType = swift_getObjectType(Strong);
    v25 = *(_QWORD *)&v2[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__activeLayoutMode] == 4;
    *(double *)v26 = a1;
    *(double *)&v26[1] = a2;
    v26[2] = v9;
    v26[3] = v11;
    v26[4] = v13;
    v26[5] = v15;
    v27 = v25;
    v28 = v19;
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v23 + 96))(v26, ObjectType, v23);
    swift_bridgeObjectRelease(v19);
    swift_unknownObjectRelease(v22);
  }
  else
  {
    swift_bridgeObjectRelease(v19);
  }
}

id sub_100207544()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SessionBannerViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SessionBannerViewController()
{
  return objc_opt_self(_TtC8SOSBuddy27SessionBannerViewController);
}

double sub_1002076A0(uint64_t a1, double result)
{
  char *v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __n128 v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t Strong;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  double v34;
  char *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  const char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  id v55;
  id v56;
  uint64_t v57;
  double v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  uint8_t *v73;
  uint64_t v74;
  uint64_t v75;
  __n128 v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int v84;
  unsigned int v85;
  uint64_t v86;
  uint64_t v87;

  v3 = OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__activeLayoutMode;
  if (*(_QWORD *)&v2[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__activeLayoutMode] != a1)
  {
    v4 = v2;
    if (qword_100315838 != -1)
      swift_once(&qword_100315838, sub_1000D9630);
    v6 = type metadata accessor for Logger(0);
    sub_10000D744(v6, (uint64_t)qword_10033FD60);
    v7 = v2;
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = swift_slowAlloc(22, -1);
      v83 = swift_slowAlloc(64, -1);
      *(_DWORD *)v10 = 136446466;
      v11 = v7;
      v86 = *(_QWORD *)&v4[v3];
      v87 = v83;
      type metadata accessor for SBUISystemApertureLayoutMode(0);
      v13 = v12;
      v15 = String.init<A>(describing:)(&v86, v12, v14);
      v17 = v16;
      v86 = sub_100172BEC(v15, v16, &v87);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87, v10 + 4, v10 + 12);

      v18 = swift_bridgeObjectRelease(v17);
      *(_WORD *)(v10 + 12) = 2082;
      v86 = a1;
      v19 = String.init<A>(describing:)(&v86, v13, v18);
      v21 = v20;
      v86 = sub_100172BEC(v19, v20, &v87);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87, v10 + 14, v10 + 22);
      v22 = v21;
      v7 = v11;
      swift_bridgeObjectRelease(v22);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "activeLayoutMode changing from %{public}s to %{public}s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy(v83, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v83, -1, -1);
      swift_slowDealloc(v10, -1, -1);

    }
    else
    {

    }
    v23 = *(_QWORD *)&v4[v3];
    *(_QWORD *)&v4[v3] = a1;
    v24 = &v7[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__delegate];
    Strong = swift_unknownObjectWeakLoadStrong(&v7[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__delegate]);
    if (Strong)
    {
      v26 = Strong;
      v27 = *((_QWORD *)v24 + 1);
      ObjectType = swift_getObjectType(Strong);
      (*(void (**)(BOOL, BOOL, uint64_t, uint64_t))(v27 + 40))((unint64_t)(a1 - 2) < 3, a1 == 4, ObjectType, v27);
      *(_QWORD *)&result = swift_unknownObjectRelease(v26).n128_u64[0];
    }
    v29 = *(_QWORD *)&v4[v3];
    switch(v29)
    {
      case -1:
        v46 = swift_unknownObjectWeakLoadStrong(v24);
        if (v46)
        {
          v47 = v46;
          v48 = *((_QWORD *)v24 + 1);
          v49 = swift_getObjectType(v46);
          (*(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v48 + 64))(v7, &off_1002FA2E8, v49, v48);
          break;
        }
        return result;
      case 0:
        v35 = v7;
        v36 = Logger.logObject.getter(v35);
        v37 = static os_log_type_t.error.getter();
        if (!os_log_type_enabled(v36, v37))
          goto LABEL_29;
        v38 = (uint8_t *)swift_slowAlloc(12, -1);
        v39 = swift_slowAlloc(32, -1);
        *(_DWORD *)v38 = 136315138;
        v86 = *(_QWORD *)&v4[v3];
        v87 = v39;
        type metadata accessor for SBUISystemApertureLayoutMode(0);
        v52 = String.init<A>(describing:)(&v86, v50, v51);
        v54 = v53;
        v86 = sub_100172BEC(v52, v53, &v87);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87, v38 + 4, v38 + 12);

        swift_bridgeObjectRelease(v54);
        v45 = "Transition to %s mode is not expected, ignoring";
        goto LABEL_24;
      case 1:
      case 2:
      case 3:
        v30 = *(_QWORD *)&v7[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__preferredLayoutMode];
        if (v30 == v29)
          return result;
        if (v29 == 1)
          v29 = 3;
        *(_QWORD *)&v7[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__preferredLayoutMode] = v29;
        if (v30 != 4 || !v23)
          return result;
        v31 = objc_msgSend(v7, "systemApertureElementContext", result);
        v32 = objc_msgSend(v31, "transitionContext");
        *(_QWORD *)&v34 = swift_unknownObjectRelease(v31).n128_u64[0];
        if (v32)
        {
          v84 = objc_msgSend(v32, "isUserInitiated", v34);

        }
        else
        {
          v84 = 2;
        }
        v59 = Logger.logObject.getter(v33);
        v60 = static os_log_type_t.default.getter(v59);
        if (os_log_type_enabled(v59, v60))
        {
          v61 = (uint8_t *)swift_slowAlloc(12, -1);
          v62 = swift_slowAlloc(32, -1);
          v87 = v62;
          *(_DWORD *)v61 = 136446210;
          LOBYTE(v86) = v84;
          v63 = sub_100003DB8((uint64_t *)&unk_1003263F0);
          v65 = String.init<A>(describing:)(&v86, v63, v64);
          v67 = v66;
          v86 = sub_100172BEC(v65, v66, &v87);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87, v61 + 4, v61 + 12);
          swift_bridgeObjectRelease(v67);
          _os_log_impl((void *)&_mh_execute_header, v59, v60, "Element collapsed, requested by user: %{public}s", v61, 0xCu);
          swift_arrayDestroy(v62, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v62, -1, -1);
          swift_slowDealloc(v61, -1, -1);
        }

        v68 = swift_unknownObjectWeakLoadStrong(v24);
        if (!v68)
          return result;
        v47 = v68;
        v69 = *((_QWORD *)v24 + 1);
        v70 = swift_getObjectType(v68);
        (*(void (**)(char *, _UNKNOWN **, _QWORD, uint64_t, uint64_t))(v69 + 48))(v7, &off_1002FA2E8, v84, v70, v69);
        break;
      case 4:
        if (*(_QWORD *)&v7[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__preferredLayoutMode] == 4)
          return result;
        *(_QWORD *)&v7[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__preferredLayoutMode] = 4;
        if (!v23)
          return result;
        v55 = objc_msgSend(v7, "systemApertureElementContext", result);
        v56 = objc_msgSend(v55, "transitionContext");
        *(_QWORD *)&v58 = swift_unknownObjectRelease(v55).n128_u64[0];
        if (v56)
        {
          v85 = objc_msgSend(v56, "isUserInitiated", v58);

        }
        else
        {
          v85 = 2;
        }
        v71 = Logger.logObject.getter(v57);
        v72 = static os_log_type_t.default.getter(v71);
        if (os_log_type_enabled(v71, v72))
        {
          v73 = (uint8_t *)swift_slowAlloc(12, -1);
          v74 = swift_slowAlloc(32, -1);
          v87 = v74;
          *(_DWORD *)v73 = 136446210;
          LOBYTE(v86) = v85;
          v75 = sub_100003DB8((uint64_t *)&unk_1003263F0);
          v77 = String.init<A>(describing:)(&v86, v75, v76);
          v79 = v78;
          v86 = sub_100172BEC(v77, v78, &v87);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87, v73 + 4, v73 + 12);
          swift_bridgeObjectRelease(v79);
          _os_log_impl((void *)&_mh_execute_header, v71, v72, "Element expanded, requested by user: %{public}s", v73, 0xCu);
          swift_arrayDestroy(v74, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v74, -1, -1);
          swift_slowDealloc(v73, -1, -1);
        }

        v80 = swift_unknownObjectWeakLoadStrong(v24);
        if (!v80)
          return result;
        v47 = v80;
        v81 = *((_QWORD *)v24 + 1);
        v82 = swift_getObjectType(v80);
        (*(void (**)(char *, _UNKNOWN **, _QWORD, uint64_t, uint64_t))(v81 + 56))(v7, &off_1002FA2E8, v85, v82, v81);
        break;
      default:
        v35 = v7;
        v36 = Logger.logObject.getter(v35);
        v37 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v36, v37))
        {
          v38 = (uint8_t *)swift_slowAlloc(12, -1);
          v39 = swift_slowAlloc(32, -1);
          *(_DWORD *)v38 = 136315138;
          v86 = *(_QWORD *)&v4[v3];
          v87 = v39;
          type metadata accessor for SBUISystemApertureLayoutMode(0);
          v42 = String.init<A>(describing:)(&v86, v40, v41);
          v44 = v43;
          v86 = sub_100172BEC(v42, v43, &v87);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87, v38 + 4, v38 + 12);

          swift_bridgeObjectRelease(v44);
          v45 = "Ignoring activeLayoutMode transition to %s";
LABEL_24:
          _os_log_impl((void *)&_mh_execute_header, v36, v37, v45, v38, 0xCu);
          swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v39, -1, -1);
          swift_slowDealloc(v38, -1, -1);

        }
        else
        {
LABEL_29:

        }
        return result;
    }
    *(_QWORD *)&result = swift_unknownObjectRelease(v47).n128_u64[0];
  }
  return result;
}

void sub_100207F9C(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __n128 v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__preferredLayoutMode;
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__preferredLayoutMode] != a1)
  {
    v3 = v1;
    if (qword_100315838 != -1)
      swift_once(&qword_100315838, sub_1000D9630);
    v5 = type metadata accessor for Logger(0);
    sub_10000D744(v5, (uint64_t)qword_10033FD60);
    v6 = v1;
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.default.getter(v7);
    if (os_log_type_enabled(v7, v8))
    {
      v9 = swift_slowAlloc(22, -1);
      v20 = swift_slowAlloc(64, -1);
      *(_DWORD *)v9 = 136446466;
      v21 = *(_QWORD *)&v3[v2];
      v22 = v20;
      type metadata accessor for SBUISystemApertureLayoutMode(0);
      v11 = v10;
      v13 = String.init<A>(describing:)(&v21, v10, v12);
      v15 = v14;
      v21 = sub_100172BEC(v13, v14, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v9 + 4, v9 + 12);

      v16 = swift_bridgeObjectRelease(v15);
      *(_WORD *)(v9 + 12) = 2082;
      v21 = a1;
      v17 = String.init<A>(describing:)(&v21, v11, v16);
      v19 = v18;
      v21 = sub_100172BEC(v17, v18, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v9 + 14, v9 + 22);
      swift_bridgeObjectRelease(v19);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "preferredLayoutMode changing from %{public}s to %{public}s", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy(v20, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v9, -1, -1);

    }
    else
    {

    }
    *(_QWORD *)&v3[v2] = a1;
  }
}

void sub_1002081F8()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  double v13;
  CGRect v14;
  CGRect v15;

  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, "SBUISA_systemApertureObstructedAreaLayoutGuide");

    objc_msgSend(v3, "layoutFrame");
    v5 = v4;
    v7 = v6;
    v9 = v8;
    v11 = v10;

    objc_msgSend(v0, "preferredContentSize");
    v13 = v12;
    v14.origin.x = v5;
    v14.origin.y = v7;
    v14.size.width = v9;
    v14.size.height = v11;
    if (CGRectGetHeight(v14) < v13)
    {
      objc_msgSend(v0, "preferredContentSize", 0.0);
      v15.origin.x = v5;
      v15.origin.y = v7;
      v15.size.width = v9;
      v15.size.height = v11;
      CGRectGetHeight(v15);
    }
  }
  else
  {
    __break(1u);
  }
}

void *sub_10020833C()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__content);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__content);
  if (v2)
  {
    v4 = (void *)v1[2];
    v3 = (void *)v1[3];
    v5 = (void *)v1[1];
    sub_100209D44(v2, v5, v4, v3);
    v6 = v2;
    sub_100209D88(v2, v5, v4, v3);
  }
  return v2;
}

void *sub_1002083D8()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__content);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__content);
  if (!v2)
    return 0;
  v4 = (void *)v1[2];
  v3 = (void *)v1[3];
  v5 = (void *)v1[1];
  sub_100209D44(v2, v5, v4, v3);
  v6 = v5;
  sub_100209D88(v2, v5, v4, v3);
  return v5;
}

void *sub_10020847C()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__content);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__content);
  if (!v2)
    return 0;
  v3 = (void *)v1[2];
  v4 = (void *)v1[3];
  v5 = (void *)v1[1];
  sub_100209D44(v2, v5, v3, v4);
  v6 = v3;
  sub_100209D88(v2, v5, v3, v4);
  return v3;
}

double sub_100208500(char a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  double result;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  if ((a1 & 1) != 0)
    v3 = 4;
  else
    v3 = 3;
  if ((id)v3 != objc_msgSend(v1, "preferredLayoutMode"))
  {
    if (qword_100315838 != -1)
      swift_once(&qword_100315838, sub_1000D9630);
    v5 = type metadata accessor for Logger(0);
    v6 = sub_10000D744(v5, (uint64_t)qword_10033FD60);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.default.getter(v7);
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(12, -1);
      v10 = swift_slowAlloc(32, -1);
      v18 = v3;
      v19 = v10;
      *(_DWORD *)v9 = 136446210;
      type metadata accessor for SBUISystemApertureLayoutMode(0);
      v13 = String.init<A>(describing:)(&v18, v11, v12);
      v15 = v14;
      v18 = sub_100172BEC(v13, v14, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v9 + 4, v9 + 12);
      swift_bridgeObjectRelease(v15);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "SessionBannerViewController.updateState requestedLayoutMode = %{public}s", v9, 0xCu);
      swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v10, -1, -1);
      swift_slowDealloc(v9, -1, -1);
    }

    objc_msgSend(v2, "setPreferredLayoutMode:", v3);
    v16 = objc_msgSend(v2, "activeLayoutMode");
    if (v16 != objc_msgSend(v2, "preferredLayoutMode") && (uint64_t)objc_msgSend(v2, "activeLayoutMode") >= 2)
    {
      v17 = objc_msgSend(v2, "systemApertureElementContext");
      objc_msgSend(v17, "requestTransitionToPreferredLayoutMode");
      *(_QWORD *)&result = swift_unknownObjectRelease(v17).n128_u64[0];
    }
  }
  return result;
}

void sub_10020875C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  id v7;

  swift_unknownObjectRetain(a3);
  v7 = a1;
  a4();
  swift_unknownObjectRelease(a3);

}

void sub_1002087CC(void *a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(void *))
{
  id v9;
  id v10;

  swift_unknownObjectRetain(a3);
  v9 = a4;
  v10 = a1;
  a5(a4);
  swift_unknownObjectRelease(a3);

}

void destroy for SessionContent(id *a1)
{

}

_QWORD *initializeWithCopy for SessionContent(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  v7 = v3;
  v8 = v4;
  v9 = v5;
  v10 = v6;
  return a1;
}

uint64_t assignWithCopy for SessionContent(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 24);
  v14 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v13;
  v15 = v13;

  return a1;
}

uint64_t assignWithTake for SessionContent(uint64_t a1, _OWORD *a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  return a1;
}

ValueMetadata *type metadata accessor for SessionContent()
{
  return &type metadata for SessionContent;
}

char *sub_1002089A4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType(a7);
  return sub_100208A28(a1, a2, a3, a4, a5, a6, a7, v8, ObjectType, a8);
}

char *sub_100208A28(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t ObjectType;
  char *result;
  uint64_t v18;
  char *v19;

  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a4);
  ObjectType = swift_getObjectType(a5);
  result = (char *)swift_conformsToProtocol2(ObjectType, &protocol descriptor for SessionBannerViewContentProducer);
  if (result)
  {
    v18 = (uint64_t)result;
    v19 = (char *)objc_allocWithZone((Class)type metadata accessor for SessionBannerViewController());
    swift_unknownObjectRetain(a7);
    swift_unknownObjectRetain(a5);
    return sub_100208B08(a1, a2, a3, a4, a5, v18, a6 & 1, a7, v19, a9, a10);
  }
  else
  {
    __break(1u);
  }
  return result;
}

char *sub_100208B08(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, char *a9, uint64_t a10, uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  id v25;
  char *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  objc_class *v33;
  id v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  id v38;
  char *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  char *v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  char *v65;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77[3];
  id v78;
  objc_super v79;

  v73 = a5;
  v74 = a8;
  v75 = a1;
  v76 = a3;
  v68 = a11;
  v15 = sub_100003DB8(&qword_100329AF0);
  __chkstk_darwin(v15, v16);
  v69 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100003DB8((uint64_t *)&unk_100326490);
  v71 = *(_QWORD *)(v18 - 8);
  v72 = v18;
  __chkstk_darwin(v18, v19);
  v70 = (char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = &a9[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__contentProducer];
  *((_QWORD *)v21 + 1) = 0;
  swift_unknownObjectWeakInit(v21, 0);
  v22 = &a9[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__delegate];
  *((_QWORD *)v22 + 1) = 0;
  swift_unknownObjectWeakInit(v22, 0);
  v23 = &a9[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__content];
  *(_OWORD *)v23 = 0u;
  *((_OWORD *)v23 + 1) = 0u;
  *(_QWORD *)&a9[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__activeLayoutMode] = 0;
  v24 = OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController_tapGesture;
  v25 = objc_allocWithZone((Class)UITapGestureRecognizer);
  v26 = a9;
  *(_QWORD *)&a9[v24] = objc_msgSend(v25, "init");
  swift_unknownObjectWeakInit(&v26[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController_presentableContext], 0);
  *(_QWORD *)&v26[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController_dismissalPreventionAssertion] = 0;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_100209204((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    v27 = &_swiftEmptySetSingleton;
  }
  v29 = v73;
  v28 = v74;
  *(_QWORD *)&v26[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__subscriptions] = v27;
  v30 = &v26[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__requesterId];
  *(_QWORD *)v30 = v75;
  *((_QWORD *)v30 + 1) = a2;
  v31 = &v26[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__requestId];
  *(_QWORD *)v31 = v76;
  *((_QWORD *)v31 + 1) = a4;
  *((_QWORD *)v21 + 1) = a6;
  swift_unknownObjectWeakAssign(v21, v29);
  v32 = 3;
  if ((a7 & 1) != 0)
    v32 = 4;
  *(_QWORD *)&v26[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__preferredLayoutMode] = v32;
  *((_QWORD *)v22 + 1) = v68;
  swift_unknownObjectWeakAssign(v22, v28);
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a4);

  v33 = (objc_class *)type metadata accessor for SessionBannerViewController();
  v79.receiver = v26;
  v79.super_class = v33;
  v34 = objc_msgSendSuper2(&v79, "initWithNibName:bundle:", 0, 0);
  v35 = qword_100315838;
  v36 = v34;
  if (v35 != -1)
    swift_once(&qword_100315838, sub_1000D9630);
  v37 = type metadata accessor for Logger(0);
  sub_10000D744(v37, (uint64_t)qword_10033FD60);
  v38 = v36;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a4);
  v39 = (char *)v38;
  v40 = Logger.logObject.getter(v39);
  v41 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v40, v41))
  {
    v42 = swift_slowAlloc(32, -1);
    v68 = swift_slowAlloc(96, -1);
    v77[0] = v68;
    *(_DWORD *)v42 = 136446722;
    v67 = v42 + 4;
    v43 = v39;
    v44 = objc_msgSend(v43, "description");
    v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
    v47 = v46;

    v78 = (id)sub_100172BEC(v45, v47, v77);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, &v79, v67, v42 + 12);

    v48 = v47;
    v29 = v73;
    v28 = v74;
    swift_bridgeObjectRelease(v48);
    *(_WORD *)(v42 + 12) = 2080;
    swift_bridgeObjectRetain(a2);
    v78 = (id)sub_100172BEC(v75, a2, v77);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, &v79, v42 + 14, v42 + 22);
    swift_bridgeObjectRelease_n(a2, 3);
    *(_WORD *)(v42 + 22) = 2080;
    swift_bridgeObjectRetain(a4);
    v78 = (id)sub_100172BEC(v76, a4, v77);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, &v79, v42 + 24, v42 + 32);
    swift_bridgeObjectRelease_n(a4, 3);
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "[%{public}s] init for '%s' and %s", (uint8_t *)v42, 0x20u);
    v49 = v68;
    swift_arrayDestroy(v68, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v49, -1, -1);
    swift_slowDealloc(v42, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a4, 2);
    swift_bridgeObjectRelease_n(a2, 2);

  }
  objc_msgSend(v39, "setPreferredContentSize:", *(double *)(*(_QWORD *)(v29 + 40) + 64), *(double *)(*(_QWORD *)(v29 + 40) + 72));
  v77[0] = *(_QWORD *)(v29 + 328);
  v50 = v77[0];
  v51 = sub_10000D75C();
  v52 = swift_retain(v50);
  v78 = (id)static OS_dispatch_queue.main.getter(v52);
  v53 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v54 = (uint64_t)v69;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v69, 1, 1, v53);
  v55 = sub_100003DB8(&qword_10032B0E0);
  v56 = sub_1000084FC((unint64_t *)&qword_1003264A0, &qword_10032B0E0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v57 = sub_1000052EC((unint64_t *)&qword_10032B100, (uint64_t (*)(uint64_t))sub_10000D75C, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  v58 = v70;
  Publisher.receive<A>(on:options:)(&v78, v54, v55, v51, v56, v57);
  sub_1000215D4(v54);

  swift_release(v77[0]);
  v59 = swift_allocObject(&unk_1002FA320, 24, 7);
  swift_unknownObjectWeakInit(v59 + 16, v39);
  v60 = swift_allocObject(&unk_1002FA348, 32, 7);
  *(_QWORD *)(v60 + 16) = sub_1002091D8;
  *(_QWORD *)(v60 + 24) = v59;
  v61 = sub_1000084FC((unint64_t *)&unk_1003264B0, (uint64_t *)&unk_100326490, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v62 = v72;
  v64 = Publisher<>.sink(receiveValue:)(sub_10002BF7C, v60, v72, v61, v63);
  swift_release(v60);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v58, v62);
  v65 = &v39[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__subscriptions];
  swift_beginAccess(&v39[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__subscriptions], v77, 33, 0);
  AnyCancellable.store(in:)(v65);
  swift_endAccess(v77);
  swift_release(v64);

  swift_unknownObjectRelease(v29);
  swift_unknownObjectRelease(v28);
  return v39;
}

uint64_t sub_1002091B4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1002091D8()
{
  uint64_t v0;

  return sub_10020583C(v0);
}

uint64_t sub_1002091E0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100209204(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(a1);
    if (v3)
    {
LABEL_3:
      sub_100003DB8(&qword_100329AF8);
      v4 = (_QWORD *)static _SetStorage.allocate(capacity:)(v3);
      v26 = a1;
      if (!v2)
        goto LABEL_4;
LABEL_11:
      if (a1 < 0)
        v7 = a1;
      else
        v7 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v5 = _CocoaArrayWrapper.endIndex.getter(v7);
      swift_bridgeObjectRelease(a1);
      if (!v5)
        return;
      goto LABEL_15;
    }
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
  }
  v4 = &_swiftEmptySetSingleton;
  v26 = a1;
  if (v2)
    goto LABEL_11;
LABEL_4:
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
    return;
LABEL_15:
  v8 = 0;
  v9 = (char *)(v4 + 7);
  v25 = v5;
  while ((v26 & 0xC000000000000001) != 0)
  {
    v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v26);
    v11 = __OFADD__(v8++, 1);
    if (v11)
      goto LABEL_32;
LABEL_24:
    v27 = v10;
    v29 = v10;
    v12 = v4[5];
    v13 = type metadata accessor for AnyCancellable(0);
    v14 = sub_1000052EC(&qword_100329B00, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
    v15 = dispatch thunk of Hashable._rawHashValue(seed:)(v12, v13, v14);
    v16 = -1 << *((_BYTE *)v4 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    v19 = *(_QWORD *)&v9[8 * (v17 >> 6)];
    v20 = 1 << v17;
    if (((1 << v17) & v19) != 0)
    {
      v21 = ~v16;
      v22 = sub_1000052EC(&qword_100329B08, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
      do
      {
        v28 = *(_QWORD *)(v4[6] + 8 * v17);
        if ((dispatch thunk of static Equatable.== infix(_:_:)(&v28, &v29, v13, v22) & 1) != 0)
        {
          swift_release(v27);
          v5 = v25;
          goto LABEL_17;
        }
        v17 = (v17 + 1) & v21;
        v18 = v17 >> 6;
        v19 = *(_QWORD *)&v9[8 * (v17 >> 6)];
        v20 = 1 << v17;
      }
      while ((v19 & (1 << v17)) != 0);
      v5 = v25;
    }
    *(_QWORD *)&v9[8 * v18] = v20 | v19;
    *(_QWORD *)(v4[6] + 8 * v17) = v27;
    v23 = v4[2];
    v11 = __OFADD__(v23, 1);
    v24 = v23 + 1;
    if (v11)
      goto LABEL_33;
    v4[2] = v24;
LABEL_17:
    if (v8 == v5)
      return;
  }
  if (v8 >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_34;
  swift_retain(*(_QWORD *)(v26 + 32 + 8 * v8));
  v11 = __OFADD__(v8++, 1);
  if (!v11)
    goto LABEL_24;
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
}

void sub_100209498(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  Swift::Int v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  char v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_100003DB8(&qword_100329B20);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v37 = v1;
    v38 = a1 + 32;
    do
    {
      v6 = *(void **)(v38 + 8 * v4);
      v7 = *(_QWORD *)(v3 + 40);
      v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
      v10 = v9;
      Hasher.init(_seed:)(v39, v7);
      v11 = v6;
      String.hash(into:)(v39, v8, v10);
      v12 = Hasher._finalize()();
      swift_bridgeObjectRelease(v10);
      v13 = -1 << *(_BYTE *)(v3 + 32);
      v14 = v12 & ~v13;
      v15 = v14 >> 6;
      v16 = *(_QWORD *)(v5 + 8 * (v14 >> 6));
      v17 = 1 << v14;
      if (((1 << v14) & v16) != 0)
      {
        v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v14));
        v20 = v19;
        v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
        if (v18 == v21 && v20 == v22)
        {
LABEL_3:
          swift_bridgeObjectRelease_n(v20, 2);
LABEL_4:

          goto LABEL_5;
        }
        v24 = v22;
        v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, v21, v22, 0);
        swift_bridgeObjectRelease(v20);
        swift_bridgeObjectRelease(v24);
        if ((v25 & 1) != 0)
          goto LABEL_4;
        v26 = ~v13;
        while (1)
        {
          v14 = (v14 + 1) & v26;
          v15 = v14 >> 6;
          v16 = *(_QWORD *)(v5 + 8 * (v14 >> 6));
          v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0)
            break;
          v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v14));
          v20 = v28;
          v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
          if (v27 == v29 && v20 == v30)
            goto LABEL_3;
          v32 = v30;
          v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v20, v29, v30, 0);
          swift_bridgeObjectRelease(v20);
          swift_bridgeObjectRelease(v32);
          if ((v33 & 1) != 0)
            goto LABEL_4;
        }
      }
      *(_QWORD *)(v5 + 8 * v15) = v17 | v16;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v14) = v11;
      v34 = *(_QWORD *)(v3 + 16);
      v35 = __OFADD__(v34, 1);
      v36 = v34 + 1;
      if (v35)
      {
        __break(1u);
        return;
      }
      *(_QWORD *)(v3 + 16) = v36;
LABEL_5:
      ++v4;
    }
    while (v4 != v37);
  }
}

Swift::Int sub_1002096C4(uint64_t a1)
{
  return sub_10020982C(a1, &qword_100329B10);
}

Swift::Int sub_1002096D0(uint64_t a1)
{
  return sub_10020982C(a1, &qword_10031FE78);
}

Swift::Int sub_1002096DC(uint64_t a1)
{
  return sub_10020982C(a1, &qword_100329B28);
}

Swift::Int sub_1002096E8(uint64_t a1)
{
  return sub_10020982C(a1, &qword_10031FE80);
}

void sub_1002096F4()
{
  char *v0;
  char *v1;
  char *v2;
  char *v3;
  uint64_t v4;
  void *v5;

  v1 = &v0[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__contentProducer];
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit(v1, 0);
  v2 = &v0[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__delegate];
  *((_QWORD *)v2 + 1) = 0;
  swift_unknownObjectWeakInit(v2, 0);
  v3 = &v0[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__content];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__activeLayoutMode] = 0;
  v4 = OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController_tapGesture;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController_presentableContext], 0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController_dismissalPreventionAssertion] = 0;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_100209204((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    v5 = &_swiftEmptySetSingleton;
  }
  *(_QWORD *)&v0[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__subscriptions] = v5;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100260900, "SOSBuddy/SessionBannerViewController.swift", 42, 2, 81, 0);
  __break(1u);
}

Swift::Int sub_10020982C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::UInt v8;
  Swift::Int result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  _QWORD v20[9];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_100003DB8(a2);
    v4 = static _SetStorage.allocate(capacity:)(v2);
    v5 = 0;
    v6 = v4 + 56;
    v7 = a1 + 32;
    while (1)
    {
      v8 = *(unsigned __int8 *)(v7 + v5);
      Hasher.init(_seed:)(v20, *(_QWORD *)(v4 + 40));
      Hasher._combine(_:)(v8);
      result = Hasher._finalize()();
      v10 = -1 << *(_BYTE *)(v4 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v6 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      v15 = *(_QWORD *)(v4 + 48);
      if (((1 << v11) & v13) != 0)
      {
        if (*(unsigned __int8 *)(v15 + v11) == (_DWORD)v8)
          goto LABEL_3;
        v16 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v16;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v6 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          if (*(unsigned __int8 *)(v15 + v11) == (_DWORD)v8)
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v6 + 8 * v12) = v14 | v13;
      *(_BYTE *)(v15 + v11) = v8;
      v17 = *(_QWORD *)(v4 + 16);
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v4 + 16) = v19;
LABEL_3:
      if (++v5 == v2)
        return v4;
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

double sub_100209968()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t Strong;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  id v8;
  void *v9;
  NSString v10;
  id v11;
  uint64_t v12;
  double result;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__delegate];
  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__delegate]);
  if (Strong)
  {
    v5 = Strong;
    v6 = *((_QWORD *)v2 + 1);
    ObjectType = swift_getObjectType();
    (*(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v6 + 8))(v1, &off_1002FA2E8, ObjectType, v6);
    *(_QWORD *)&v4 = swift_unknownObjectRelease(v5).n128_u64[0];
  }
  v8 = objc_msgSend(v1, "presentableDismissalPreventionContext", v4);
  if (v8)
  {
    v9 = v8;
    v10 = String._bridgeToObjectiveC()();
    v11 = objc_msgSend(v9, "acquireTransitionDismissalPreventionAssertionForReason:", v10);
    swift_unknownObjectRelease(v9);

  }
  else
  {
    v11 = 0;
  }
  v12 = *(_QWORD *)&v1[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController_dismissalPreventionAssertion];
  *(_QWORD *)&v1[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController_dismissalPreventionAssertion] = v11;
  *(_QWORD *)&result = swift_unknownObjectRelease(v12).n128_u64[0];
  return result;
}

void sub_100209A58()
{
  char *v0;
  void *v1;
  char *v2;
  uint64_t Strong;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__delegate];
  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__delegate]);
  if (Strong)
  {
    v5 = Strong;
    v6 = *((_QWORD *)v2 + 1);
    ObjectType = swift_getObjectType();
    (*(void (**)(void *, _UNKNOWN **, uint64_t, uint64_t))(v6 + 16))(v1, &off_1002FA2E8, ObjectType, v6);
    *(_QWORD *)&v4 = swift_unknownObjectRelease(v5).n128_u64[0];
  }
  v8 = objc_msgSend(v1, "view", v4);
  if (!v8)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    return;
  }
  v9 = v8;
  v10 = objc_msgSend(v8, "window");

  if (v10)
  {
    objc_msgSend(v10, "setAccessibilityViewIsModal:", 1);

  }
  v11 = objc_msgSend(v1, "view");
  if (!v11)
    goto LABEL_11;
  v12 = v11;
  v13 = objc_msgSend(v11, "window");

  if (v13)
  {
    objc_msgSend(v13, "setAccessibilityElementsHidden:", 0);

  }
}

id sub_100209BA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id result;
  double v6;
  id v7;
  uint64_t v8;
  uint64_t ObjectType;

  v2 = v1;
  v4 = v2 + OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__delegate;
  result = (id)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__delegate);
  if (result)
  {
    if (!a1)
    {
      __break(1u);
      return result;
    }
    v7 = result;
    v8 = *(_QWORD *)(v4 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v8 + 24))(v2, &off_1002FA2E8, a1, ObjectType, v8);
    *(_QWORD *)&v6 = swift_unknownObjectRelease(v7).n128_u64[0];
  }
  result = *(id *)(v2 + OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController_dismissalPreventionAssertion);
  if (result)
    return objc_msgSend(result, "invalidate", v6);
  return result;
}

void sub_100209C48(uint64_t a1)
{
  char *v1;
  char *v2;
  char *v4;
  uint64_t Strong;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  id v10;
  void *v11;
  id v12;

  v2 = v1;
  v4 = &v2[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__delegate];
  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__delegate]);
  if (Strong)
  {
    if (!a1)
    {
LABEL_9:
      __break(1u);
      return;
    }
    v7 = Strong;
    v8 = *((_QWORD *)v4 + 1);
    ObjectType = swift_getObjectType();
    (*(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v8 + 32))(v2, &off_1002FA2E8, a1, ObjectType, v8);
    *(_QWORD *)&v6 = swift_unknownObjectRelease(v7).n128_u64[0];
  }
  v10 = objc_msgSend(v2, "view", v6);
  if (!v10)
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v10;
  v12 = objc_msgSend(v10, "window");

  if (v12)
  {
    objc_msgSend(v12, "setAccessibilityElementsHidden:", 1);

  }
}

id sub_100209D44(id result, void *a2, void *a3, void *a4)
{
  id v6;
  id v7;
  id v8;

  if (result)
  {
    v6 = result;
    v7 = a2;
    v8 = a3;
    return a4;
  }
  return result;
}

void sub_100209D88(void *a1, void *a2, void *a3, void *a4)
{
  if (a1)
  {

  }
}

void sub_100209DCC(uint64_t a1)
{
  uint64_t v1;

  sub_100206B38(*(double *)(v1 + 24), *(double *)(v1 + 32), a1, *(_QWORD *)(v1 + 16));
}

double sub_100209DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_100209DE8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100209DF0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 40, 7);
}

void sub_100209E14(uint64_t a1)
{
  uint64_t v1;

  sub_100206BCC(*(double *)(v1 + 24), *(double *)(v1 + 32), a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100209E30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 + 24) = 0;
  *(_BYTE *)(v1 + 32) = 2;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_QWORD *)(v1 + 72) = 0;
  *(_BYTE *)(v1 + 80) = 1;
  *(_QWORD *)(v1 + 96) = 0;
  *(_QWORD *)(v1 + 104) = 0;
  *(_QWORD *)(v1 + 88) = 0;
  *(_BYTE *)(v1 + 112) = 1;
  *(_WORD *)(v1 + 113) = 3;
  *(_OWORD *)(v1 + 120) = 0u;
  *(_OWORD *)(v1 + 136) = 0u;
  *(_OWORD *)(v1 + 152) = 0u;
  *(_OWORD *)(v1 + 168) = 0u;
  *(_QWORD *)(v1 + 184) = 0;
  v3 = v1 + OBJC_IVAR____TtC8SOSBuddy35AnalyticsSatelliteConnectionAttempt_currentServiceOutages;
  *(_BYTE *)(v1 + 192) = 1;
  v4 = type metadata accessor for ServiceOutages(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC8SOSBuddy35AnalyticsSatelliteConnectionAttempt_currentIsTryOut) = 2;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8SOSBuddy35AnalyticsSatelliteConnectionAttempt_kExpiryTimerDurationSeconds) = 0x408C200000000000;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8SOSBuddy35AnalyticsSatelliteConnectionAttempt_expiryTimer) = 0;
  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_100209F08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  int v14;
  int v15;
  char v16;
  uint64_t v17;
  uint64_t v18;

  v2 = v1;
  v4 = sub_100003DB8((uint64_t *)&unk_10031B230);
  __chkstk_darwin(v4, v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LinkState(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B234(a1, (uint64_t)v7, (uint64_t *)&unk_10031B230);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_100007FF0((uint64_t)v7, (uint64_t *)&unk_10031B230);
  sub_1000E8D6C((uint64_t)v7, (uint64_t)v12, type metadata accessor for LinkState);
  v14 = *(unsigned __int8 *)(v2 + 32);
  v15 = v12[1];
  if (v14 != 2 && ((((v14 & 1) == 0) ^ v15) & 1) != 0)
    return sub_10000AFFC((uint64_t)v12, type metadata accessor for LinkState);
  v16 = v15 & 1;
  if ((v15 & 1) == 0 && !*(_QWORD *)(v2 + 24))
    sub_10020A30C(v14 == 2);
  v17 = *(_QWORD *)(v2 + 24);
  if (v17)
  {
    swift_retain(*(_QWORD *)(v2 + 24));
    sub_10020B840((uint64_t)v12);
    swift_release(v17);
  }
  result = sub_10000AFFC((uint64_t)v12, type metadata accessor for LinkState);
  *(_BYTE *)(v2 + 32) = v16;
  return result;
}

void sub_10020A094(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  int v8;
  __int128 v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];
  _BYTE v16[24];

  v2 = v1;
  v4 = sub_100003DB8(&qword_10031F880);
  __chkstk_darwin(v4, v5);
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((*(_BYTE *)(a1 + 80) & 1) != 0)
  {
    v10 = 0;
    *(_BYTE *)(v2 + 113) = 3;
  }
  else
  {
    if ((*(_BYTE *)(a1 + 66) & 1) != 0 || (v8 = *(unsigned __int8 *)(a1 + 64), v8 == 4))
      LOBYTE(v8) = 3;
    *(_BYTE *)(v2 + 113) = v8;
    if ((*(_BYTE *)(a1 + 66) & 1) == 0)
    {
      v9 = *(_OWORD *)(a1 + 168);
      v10 = *(_QWORD *)(a1 + 184);
      v11 = *(_BYTE *)(a1 + 192);
      goto LABEL_10;
    }
    v10 = 0;
  }
  v9 = 0uLL;
  v11 = 1;
LABEL_10:
  *(_OWORD *)(v2 + 88) = v9;
  *(_QWORD *)(v2 + 104) = v10;
  *(_BYTE *)(v2 + 112) = v11;
  *(_BYTE *)(v2 + 114) = sub_100067058(0, *(_QWORD *)(a1 + 200));
  v12 = *(_QWORD *)(a1 + 72) + OBJC_IVAR____TtC8SOSBuddy18ServiceOutageModel__serviceOutages;
  swift_beginAccess(v12, v16, 0, 0);
  sub_10000B234(v12, (uint64_t)v7, &qword_10031F880);
  v13 = v2 + OBJC_IVAR____TtC8SOSBuddy35AnalyticsSatelliteConnectionAttempt_currentServiceOutages;
  swift_beginAccess(v2 + OBJC_IVAR____TtC8SOSBuddy35AnalyticsSatelliteConnectionAttempt_currentServiceOutages, v15, 33, 0);
  sub_100123FDC((uint64_t)v7, v13, &qword_10031F880);
  swift_endAccess(v15);
  if ((*(_BYTE *)(v2 + 114) & 1) != 0)
  {
    v14 = *(_QWORD *)(v2 + 24);
    if (v14)
    {
      swift_retain(*(_QWORD *)(v2 + 24));
      sub_10020BB60();
      swift_release(v14);
    }
    sub_10020ADAC();
  }
}

uint64_t sub_10020A214(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  uint64_t result;
  _BYTE v6[32];
  uint64_t v7;
  _BYTE v8[8];
  uint64_t v9;
  uint64_t v10;
  _OWORD v11[4];
  __int16 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int16 v17;
  char v18;
  _BYTE v19[17];

  sub_10000B458(a1, (uint64_t)v6, &qword_100319FD8);
  v3 = v7;
  sub_10000B458(a1, (uint64_t)v11, &qword_100319FD8);
  if (*((_QWORD *)&v11[0] + 1))
  {
    v15 = v11[2];
    v16 = v11[3];
    v17 = v12;
    v13 = v11[0];
    v14 = v11[1];
    sub_10001AE10(&v13, &v18);
    sub_10001AE10(&v18, v19);
    if (v19[0] == 5 && BYTE1(v14) == 1)
      goto LABEL_6;
  }
  v4 = 2;
  *(_BYTE *)(v1 + 32) = 2;
  sub_10020AE90();
  result = sub_10000B458(a1, (uint64_t)v8, &qword_100319FD8);
  if (v9)
  {
    v3 = v10;
LABEL_6:
    result = sub_100067058(3u, v3);
    v4 = result & 1;
  }
  *(_BYTE *)(v1 + OBJC_IVAR____TtC8SOSBuddy35AnalyticsSatelliteConnectionAttempt_currentIsTryOut) = v4;
  return result;
}

void sub_10020A30C(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  unint64_t v72;
  char v73;
  uint64_t v74;
  char *v75;
  void (*v76)(char *, uint64_t);
  unint64_t v77;
  char v78;
  void (*v79)(char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unsigned int (*v89)(uint64_t, uint64_t, uint64_t);
  void (*v90)(void);
  char *v91;
  unsigned int v92;
  char *v93;
  void (*v94)(char *, uint64_t, uint64_t);
  char v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  __n128 v99;
  char *v100;
  double v101;
  char *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  void (*v106)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  char *v120;
  char *v121;
  char v122[32];

  v2 = v1;
  LODWORD(v115) = a1;
  v3 = type metadata accessor for ServiceOutages.Outage(0);
  v111 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3, v4);
  v6 = (char *)&v106 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100003DB8(&qword_100317D58);
  __chkstk_darwin(v7, v8);
  v109 = (uint64_t)&v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  v119 = (char *)&v106 - v12;
  __chkstk_darwin(v13, v14);
  v120 = (char *)&v106 - v15;
  __chkstk_darwin(v16, v17);
  v110 = (uint64_t)&v106 - v18;
  v19 = type metadata accessor for Date(0);
  v117 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19, v20);
  v108 = (char *)&v106 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v23);
  v118 = (char *)&v106 - v24;
  __chkstk_darwin(v25, v26);
  v114 = (char *)&v106 - v27;
  __chkstk_darwin(v28, v29);
  v113 = (char *)&v106 - v30;
  __chkstk_darwin(v31, v32);
  v121 = (char *)&v106 - v33;
  v34 = sub_100003DB8(&qword_10031F880);
  __chkstk_darwin(v34, v35);
  v37 = (char *)&v106 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for ServiceOutages(0);
  v39 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38, v40);
  v42 = (char *)&v106 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43, v44);
  v116 = (uint64_t)&v106 - v45;
  v46 = type metadata accessor for DispatchTime(0);
  __chkstk_darwin(v46, v47);
  v49 = (char *)&v106 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  static DispatchTime.now()(v50);
  v51 = *(_BYTE *)(v2 + 80);
  v52 = _s8SOSBuddy4DataCMa_1(0);
  swift_allocObject(v52, *(unsigned int *)(v52 + 48), *(unsigned __int16 *)(v52 + 52));
  v53 = sub_10020B3AC(v49, v115, (v51 & 1) == 0);
  v54 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(v2 + 24) = v53;
  swift_release(v54);
  v55 = *(_QWORD *)(v2 + 24);
  if (!v55)
    goto LABEL_41;
  *(_BYTE *)(v55 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_targetVisibility) = *(_BYTE *)(v2 + 113);
  v56 = *(_QWORD *)(v2 + 24);
  if (!v56)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v57 = *(_QWORD *)(v2 + 104);
  v58 = *(_BYTE *)(v2 + 112);
  v59 = v56 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_relativeBearing;
  *(_OWORD *)v59 = *(_OWORD *)(v2 + 88);
  *(_QWORD *)(v59 + 16) = v57;
  *(_BYTE *)(v59 + 24) = v58;
  v60 = *(_QWORD *)(v2 + 24);
  if (!v60)
  {
LABEL_43:
    __break(1u);
    return;
  }
  v61 = *(_QWORD *)(v2 + 184);
  v62 = *(_BYTE *)(v2 + 192);
  v63 = v60 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_deviceOrientation;
  v64 = *(_OWORD *)(v2 + 136);
  v65 = *(_OWORD *)(v2 + 152);
  v66 = *(_OWORD *)(v2 + 168);
  *(_OWORD *)v63 = *(_OWORD *)(v2 + 120);
  *(_OWORD *)(v63 + 16) = v64;
  *(_OWORD *)(v63 + 32) = v65;
  *(_OWORD *)(v63 + 48) = v66;
  *(_QWORD *)(v63 + 64) = v61;
  *(_BYTE *)(v63 + 72) = v62;
  v67 = v2 + OBJC_IVAR____TtC8SOSBuddy35AnalyticsSatelliteConnectionAttempt_currentServiceOutages;
  swift_beginAccess(v2 + OBJC_IVAR____TtC8SOSBuddy35AnalyticsSatelliteConnectionAttempt_currentServiceOutages, v122, 0, 0);
  sub_10000B234(v67, (uint64_t)v37, &qword_10031F880);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38) == 1)
  {
    sub_100007FF0((uint64_t)v37, &qword_10031F880);
    goto LABEL_11;
  }
  v112 = v38;
  v115 = v3;
  v68 = (uint64_t)v37;
  v69 = v116;
  v70 = sub_1000E8D6C(v68, v116, type metadata accessor for ServiceOutages);
  v71 = v121;
  Date.init()(v70);
  v72 = sub_10020D5C4();
  v73 = dispatch thunk of static Comparable.< infix(_:_:)(v71, v69);
  v74 = v117;
  v75 = v113;
  (*(void (**)(char *, char *, uint64_t))(v117 + 16))(v113, v71, v19);
  sub_1000E1F30(v69, (uint64_t)v42, type metadata accessor for ServiceOutages);
  if ((v73 & 1) != 0)
  {
    sub_10000AFFC((uint64_t)v42, type metadata accessor for ServiceOutages);
    v76 = *(void (**)(char *, uint64_t))(v74 + 8);
    v76(v75, v19);
    v76(v121, v19);
    goto LABEL_10;
  }
  v77 = v112;
  v78 = dispatch thunk of static Comparable.< infix(_:_:)(&v42[*(int *)(v112 + 20)], v75);
  sub_10000AFFC((uint64_t)v42, type metadata accessor for ServiceOutages);
  v79 = *(void (**)(char *, uint64_t))(v74 + 8);
  v79(v75, v19);
  if ((v78 & 1) != 0)
  {
    v79(v121, v19);
    goto LABEL_10;
  }
  v81 = v74;
  v113 = (char *)v79;
  v82 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56);
  v83 = v110;
  v82(v110, 1, 1, v19);
  v84 = *(_QWORD *)(v116 + *(int *)(v77 + 24));
  v85 = *(_QWORD *)(v84 + 16);
  if (!v85)
    goto LABEL_30;
  v106 = v82;
  v107 = v84;
  v86 = v84 + ((*(unsigned __int8 *)(v111 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v111 + 80));
  v111 = *(_QWORD *)(v111 + 72);
  v112 = v72;
  swift_bridgeObjectRetain(v84);
  v87 = (uint64_t)v119;
  v88 = (uint64_t)v120;
  while (1)
  {
    sub_1000E1F30(v86, (uint64_t)v6, type metadata accessor for ServiceOutages.Outage);
    sub_10000B234((uint64_t)v6, v88, &qword_100317D58);
    v89 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48);
    if (v89(v88, 1, v19) == 1)
    {
      sub_100007FF0(v88, &qword_100317D58);
    }
    else
    {
      v90 = *(void (**)(void))(v81 + 32);
      v91 = v114;
      v90();
      if ((dispatch thunk of static Comparable.< infix(_:_:)(v91, v121) & 1) == 0)
      {
        sub_10000AFFC((uint64_t)v6, type metadata accessor for ServiceOutages.Outage);
        swift_bridgeObjectRelease(v107);
        v83 = v110;
        sub_100007FF0(v110, &qword_100317D58);
        ((void (*)(uint64_t, char *, uint64_t))v90)(v83, v91, v19);
        v106(v83, 0, 1, v19);
        v81 = v117;
        goto LABEL_30;
      }
      ((void (*)(char *, uint64_t))v113)(v91, v19);
      v81 = v117;
      v87 = (uint64_t)v119;
    }
    sub_10000B234((uint64_t)&v6[*(int *)(v115 + 20)], v87, &qword_100317D58);
    v92 = v89(v87, 1, v19);
    v93 = v118;
    if (v92 != 1)
      break;
    sub_10000AFFC((uint64_t)v6, type metadata accessor for ServiceOutages.Outage);
    sub_100007FF0(v87, &qword_100317D58);
LABEL_19:
    v86 += v111;
    --v85;
    v88 = (uint64_t)v120;
    if (!v85)
    {
      swift_bridgeObjectRelease(v107);
      v83 = v110;
      goto LABEL_30;
    }
  }
  v94 = *(void (**)(char *, uint64_t, uint64_t))(v81 + 32);
  v94(v118, v87, v19);
  v95 = dispatch thunk of static Comparable.< infix(_:_:)(v93, v121);
  sub_10000AFFC((uint64_t)v6, type metadata accessor for ServiceOutages.Outage);
  if ((v95 & 1) != 0)
  {
    ((void (*)(char *, uint64_t))v113)(v93, v19);
    v87 = (uint64_t)v119;
    goto LABEL_19;
  }
  swift_bridgeObjectRelease(v107);
  v83 = v110;
  sub_100007FF0(v110, &qword_100317D58);
  v94((char *)v83, (uint64_t)v93, v19);
  v106(v83, 0, 1, v19);
LABEL_30:
  v96 = v109;
  sub_10000B234(v83, v109, &qword_100317D58);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v96, 1, v19) == 1)
  {
    sub_100007FF0(v83, &qword_100317D58);
    ((void (*)(char *, uint64_t))v113)(v121, v19);
    sub_10000AFFC(v116, type metadata accessor for ServiceOutages);
    sub_100007FF0(v96, &qword_100317D58);
    goto LABEL_11;
  }
  v97 = v108;
  (*(void (**)(char *, uint64_t, uint64_t))(v81 + 32))(v108, v96, v19);
  v98 = *(_QWORD *)(v2 + 24);
  if (v98)
  {
    v99 = swift_retain(*(_QWORD *)(v2 + 24));
    v100 = v121;
    v101 = fabs(floor(Date.distance(to:)(v97, v99)));
    v102 = v97;
    v103 = v113;
    ((void (*)(char *, uint64_t))v113)(v102, v19);
    sub_100007FF0(v83, &qword_100317D58);
    ((void (*)(char *, uint64_t))v103)(v100, v19);
    sub_10000AFFC(v116, type metadata accessor for ServiceOutages);
    if ((~*(_QWORD *)&v101 & 0x7FF0000000000000) != 0)
    {
      if (v101 > -1.0)
      {
        if (v101 < 1.84467441e19)
        {
          v104 = v98 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_nextStatusChangeAtStart;
          *(_QWORD *)v104 = (unint64_t)v101;
          *(_BYTE *)(v104 + 8) = 0;
          swift_release(v98);
          goto LABEL_11;
        }
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_40;
  }
  v105 = v113;
  ((void (*)(char *, uint64_t))v113)(v97, v19);
  sub_100007FF0(v83, &qword_100317D58);
  ((void (*)(char *, uint64_t))v105)(v121, v19);
LABEL_10:
  sub_10000AFFC(v116, type metadata accessor for ServiceOutages);
LABEL_11:
  sub_10020AF94();
  if (*(_BYTE *)(v2 + 114) == 1)
  {
    v80 = *(_QWORD *)(v2 + 24);
    if (v80)
    {
      swift_retain(*(_QWORD *)(v2 + 24));
      sub_10020BB60();
      swift_release(v80);
    }
    sub_10020ADAC();
  }
}

void sub_10020AC2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  __n128 v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;

  v0 = type metadata accessor for DispatchPredicate(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  v4 = (uint64_t *)((char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  *v4 = static OS_dispatch_queue.main.getter(v5);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v1 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v0);
  v6 = _dispatchPreconditionTest(_:)(v4);
  (*(void (**)(_QWORD *, uint64_t))(v1 + 8))(v4, v0);
  if ((v6 & 1) != 0)
  {
    if (qword_100315818 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_100315818, sub_1000D95C0);
LABEL_3:
  v7 = type metadata accessor for Logger(0);
  v8 = sub_10000D744(v7, (uint64_t)qword_10033FD00);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "SatelliteConnectionAttempt: timer expired", v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }

  sub_10020ADAC();
}

void sub_10020ADAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 24);
  if (!v2)
    goto LABEL_5;
  v3 = *(_QWORD *)(v0 + 72);
  v4 = *(_BYTE *)(v0 + 80);
  v5 = v2 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_currentTarget;
  v6 = *(_OWORD *)(v0 + 56);
  *(_OWORD *)v5 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 32) = v3;
  *(_BYTE *)(v5 + 40) = v4;
  v7 = *(_QWORD *)(v0 + 24);
  if (v7)
  {
    *(_BYTE *)(v7 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_currentIsTryOut) = *(_BYTE *)(v0 + OBJC_IVAR____TtC8SOSBuddy35AnalyticsSatelliteConnectionAttempt_currentIsTryOut);
    v8 = *(_QWORD *)(v0 + 24);
    if (v8)
    {
      swift_retain(*(_QWORD *)(v1 + 24));
      sub_10020BE70();
      v10 = v9;
      swift_release(v8);
      sub_100176278(1, v10);
      swift_bridgeObjectRelease(v10);
      v11 = *(_QWORD *)(v1 + 24);
      *(_QWORD *)(v1 + 24) = 0;
      swift_release(v11);
LABEL_5:
      v12 = OBJC_IVAR____TtC8SOSBuddy35AnalyticsSatelliteConnectionAttempt_expiryTimer;
      objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8SOSBuddy35AnalyticsSatelliteConnectionAttempt_expiryTimer), "invalidate");
      v13 = *(void **)(v1 + v12);
      *(_QWORD *)(v1 + v12) = 0;

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_10020AE90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v1 = v0;
  if (*(_QWORD *)(v0 + 24))
  {
    if (qword_100315818 != -1)
      swift_once(&qword_100315818, sub_1000D95C0);
    v2 = type metadata accessor for Logger(0);
    v3 = sub_10000D744(v2, (uint64_t)qword_10033FD00);
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "SatelliteConnectionAttempt: canceling event", v6, 2u);
      swift_slowDealloc(v6, -1, -1);
    }

    v7 = *(_QWORD *)(v1 + 24);
    *(_QWORD *)(v1 + 24) = 0;
    swift_release(v7);
  }
  v8 = OBJC_IVAR____TtC8SOSBuddy35AnalyticsSatelliteConnectionAttempt_expiryTimer;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8SOSBuddy35AnalyticsSatelliteConnectionAttempt_expiryTimer), "invalidate");
  v9 = *(void **)(v1 + v8);
  *(_QWORD *)(v1 + v8) = 0;

}

void sub_10020AF94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  __n128 v7;
  char v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  _QWORD aBlock[5];
  uint64_t v17;

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  v6 = (_QWORD *)((char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  *v6 = static OS_dispatch_queue.main.getter(v7);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v2);
  v8 = _dispatchPreconditionTest(_:)(v6);
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v6, v2);
  if ((v8 & 1) != 0)
  {
    v9 = OBJC_IVAR____TtC8SOSBuddy35AnalyticsSatelliteConnectionAttempt_expiryTimer;
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8SOSBuddy35AnalyticsSatelliteConnectionAttempt_expiryTimer), "invalidate");
    v10 = *(void **)(v1 + v9);
    *(_QWORD *)(v1 + v9) = 0;

    v11 = (void *)objc_opt_self(NSTimer);
    v12 = swift_allocObject(&unk_1002FA4B8, 24, 7);
    swift_weakInit(v12 + 16);
    aBlock[4] = sub_10020D5A4;
    v17 = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100076C24;
    aBlock[3] = &unk_1002FA4D0;
    v13 = _Block_copy(aBlock);
    swift_release(v17);
    v14 = objc_msgSend(v11, "scheduledTimerWithTimeInterval:repeats:block:", 0, v13, 900.0);
    _Block_release(v13);
    v15 = *(void **)(v1 + v9);
    *(_QWORD *)(v1 + v9) = v14;

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10020B14C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    v4 = result;
    sub_10020AC2C();
    return swift_release(v4);
  }
  return result;
}

uint64_t sub_10020B1A0()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  sub_100007FF0((uint64_t)v0 + OBJC_IVAR____TtC8SOSBuddy35AnalyticsSatelliteConnectionAttempt_currentServiceOutages, &qword_10031F880);

  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_10020B1F8()
{
  return type metadata accessor for AnalyticsSatelliteConnectionAttempt(0);
}

uint64_t type metadata accessor for AnalyticsSatelliteConnectionAttempt(uint64_t a1)
{
  return sub_10003D8E8(a1, qword_100329B78, (uint64_t)&nominal type descriptor for AnalyticsSatelliteConnectionAttempt);
}

void sub_10020B214(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[12];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = "\b";
  v4[2] = &unk_10025F230;
  v4[3] = &unk_10025F248;
  v4[4] = &unk_10025F260;
  v4[5] = &unk_10025F278;
  v4[6] = &unk_10025F290;
  v4[7] = &unk_10025F2A8;
  sub_1000F03D4(319, &qword_10031F998, type metadata accessor for ServiceOutages);
  if (v3 <= 0x3F)
  {
    v4[8] = *(_QWORD *)(v2 - 8) + 64;
    v4[9] = &unk_10025F230;
    v4[10] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[11] = "\b";
    swift_updateClassMetadata2(a1, 256, 12, v4, a1 + 80);
  }
}

uint64_t sub_10020B2F8(uint64_t a1)
{
  _QWORD *v1;

  return sub_10000B458(a1, *v1 + 40, &qword_100319FB8);
}

uint64_t sub_10020B31C(uint64_t a1)
{
  return sub_100209F08(a1);
}

__n128 sub_10020B33C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  __n128 result;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v2 = *v1;
  v3 = *(_QWORD *)(a1 + 96);
  v4 = *(_BYTE *)(a1 + 104);
  result = *(__n128 *)(a1 + 32);
  v6 = *(_OWORD *)(a1 + 48);
  v7 = *(_OWORD *)(a1 + 64);
  v8 = *(_OWORD *)(a1 + 80);
  *(__n128 *)(v2 + 120) = result;
  *(_OWORD *)(v2 + 136) = v6;
  *(_OWORD *)(v2 + 152) = v7;
  *(_OWORD *)(v2 + 168) = v8;
  *(_QWORD *)(v2 + 184) = v3;
  *(_BYTE *)(v2 + 192) = v4;
  return result;
}

void sub_10020B36C(uint64_t a1)
{
  sub_10020A094(a1);
}

uint64_t sub_10020B38C(uint64_t a1)
{
  return sub_10020A214(a1);
}

uint64_t sub_10020B3AC(_BYTE *a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v26)(uint64_t, _BYTE *, uint64_t);
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  __n128 v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  __n128 v41;
  void (*v42)(_BYTE *, uint64_t, __n128);
  void (*v43)(_BYTE *, uint64_t);
  _BYTE v45[4];
  int v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51[3];

  v4 = v3;
  LODWORD(v48) = a3;
  v7 = type metadata accessor for DispatchTime(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  v47 = &v45[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11, v12);
  v14 = &v45[-v13];
  v15 = sub_100003DB8(&qword_1003180C8);
  __chkstk_darwin(v15, v16);
  v18 = &v45[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = v3 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_nextStatusChangeAtStart;
  *(_QWORD *)v19 = 0;
  *(_BYTE *)(v19 + 8) = 1;
  v20 = v3 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_caLatency;
  *(_QWORD *)v20 = 0;
  *(_BYTE *)(v20 + 8) = 1;
  v21 = v3 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_syncLatency;
  *(_QWORD *)v21 = 0;
  *(_BYTE *)(v21 + 8) = 1;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_targetVisibility) = 3;
  v22 = v3 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_deviceOrientation;
  *(_QWORD *)(v22 + 64) = 0;
  *(_OWORD *)(v22 + 32) = 0u;
  *(_OWORD *)(v22 + 48) = 0u;
  *(_OWORD *)v22 = 0u;
  *(_OWORD *)(v22 + 16) = 0u;
  *(_BYTE *)(v22 + 72) = 1;
  v23 = v3 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_relativeBearing;
  *(_QWORD *)(v23 + 8) = 0;
  *(_QWORD *)(v23 + 16) = 0;
  *(_QWORD *)v23 = 0;
  *(_BYTE *)(v23 + 24) = 1;
  v24 = v3 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_currentTarget;
  *(_OWORD *)v24 = 0u;
  *(_OWORD *)(v24 + 16) = 0u;
  *(_QWORD *)(v24 + 32) = 0;
  *(_BYTE *)(v24 + 40) = 1;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_currentIsTryOut) = 2;
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
  v25(v3 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_trackingCALatencySince, 1, 1, v7);
  v25(v3 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_trackingSyncLatencySince, 1, 1, v7);
  v49 = v8;
  v26 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v8 + 16);
  v26(v3 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_startTimestamp, a1, v7);
  v46 = a2;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_newConnection) = a2;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_inServiceAtStart) = (_BYTE)v48;
  v26((uint64_t)v18, a1, v7);
  v25((uint64_t)v18, 0, 1, v7);
  v27 = v3 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_trackingCALatencySince;
  swift_beginAccess(v3 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_trackingCALatencySince, v51, 33, 0);
  sub_100123FDC((uint64_t)v18, v27, &qword_1003180C8);
  v28 = swift_endAccess(v51);
  ((void (*)(_BYTE *, _BYTE *, uint64_t, __n128))v26)(v18, a1, v7, v28);
  v25((uint64_t)v18, 0, 1, v7);
  v29 = v3 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_trackingSyncLatencySince;
  swift_beginAccess(v3 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_trackingSyncLatencySince, v51, 33, 0);
  sub_100123FDC((uint64_t)v18, v29, &qword_1003180C8);
  swift_endAccess(v51);
  if (qword_100315818 != -1)
    swift_once(&qword_100315818, sub_1000D95C0);
  v30 = type metadata accessor for Logger(0);
  sub_10000D744(v30, (uint64_t)qword_10033FD00);
  v31 = ((uint64_t (*)(_BYTE *, _BYTE *, uint64_t))v26)(v14, a1, v7);
  v32 = Logger.logObject.getter(v31);
  v33 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = swift_slowAlloc(18, -1);
    v35 = swift_slowAlloc(32, -1);
    v51[0] = v35;
    *(_DWORD *)v34 = 67109378;
    LODWORD(v50) = v46 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, (char *)&v50 + 4, v34 + 4, v34 + 8);
    *(_WORD *)(v34 + 8) = 2080;
    v48 = a1;
    v36 = v47;
    v37.n128_f64[0] = ((double (*)(_BYTE *, _BYTE *, uint64_t))v26)(v47, v14, v7);
    v38 = String.init<A>(describing:)(v36, v7, v37);
    v40 = v39;
    v50 = sub_100172BEC(v38, v39, v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, v51, v34 + 10, v34 + 18);
    v41 = swift_bridgeObjectRelease(v40);
    v42 = *(void (**)(_BYTE *, uint64_t, __n128))(v49 + 8);
    v42(v14, v7, v41);
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "SatelliteConnectionAttempt: started tracking newConnection = %{BOOL}d at %s", (uint8_t *)v34, 0x12u);
    swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v35, -1, -1);
    swift_slowDealloc(v34, -1, -1);

    ((void (*)(_BYTE *, uint64_t))v42)(v48, v7);
  }
  else
  {

    v43 = *(void (**)(_BYTE *, uint64_t))(v49 + 8);
    v43(v14, v7);
    v43(a1, v7);
  }
  return v4;
}

void sub_10020B840(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[24];
  char v43[24];

  v41 = a1;
  v2 = type metadata accessor for DispatchTime(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100003DB8(&qword_1003180C8);
  __chkstk_darwin(v7, v8);
  v39 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  v13 = (char *)&v38 - v12;
  __chkstk_darwin(v14, v15);
  v17 = (char *)&v38 - v16;
  v40 = v1;
  v18 = v1 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_trackingSyncLatencySince;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_trackingSyncLatencySince, v43, 0, 0);
  sub_10000B234(v18, (uint64_t)v17, &qword_1003180C8);
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48);
  v20 = v19(v17, 1, v2);
  v21 = sub_100007FF0((uint64_t)v17, &qword_1003180C8);
  if (v20 == 1 || (*(_BYTE *)(v41 + 1) & 1) == 0)
    return;
  static DispatchTime.now()(v21);
  sub_10000B234(v18, (uint64_t)v13, &qword_1003180C8);
  v22 = v19(v13, 1, v2);
  if ((_DWORD)v22 == 1)
  {
    __break(1u);
    return;
  }
  v23 = DispatchTime.uptimeNanoseconds.getter(v22);
  v24 = DispatchTime.uptimeNanoseconds.getter(v23);
  if (v24 >= v23)
    goto LABEL_7;
  v25 = DispatchTime.uptimeNanoseconds.getter(v24);
  v26 = DispatchTime.uptimeNanoseconds.getter(v25);
  v27 = v25 - v26;
  if (v25 < v26)
  {
    __break(1u);
LABEL_7:
    v27 = 0;
  }
  v28 = v40;
  v29 = v27;
  v30 = *(void (**)(char *, uint64_t))(v3 + 8);
  v30(v6, v2);
  v30(v13, v2);
  v31 = v28 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_syncLatency;
  *(_QWORD *)v31 = v29 / 0x3B9ACA00;
  *(_BYTE *)(v31 + 8) = 0;
  v32 = (uint64_t)v39;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v39, 1, 1, v2);
  swift_beginAccess(v18, v42, 33, 0);
  sub_100123FDC(v32, v18, &qword_1003180C8);
  swift_endAccess(v42);
  if (qword_100315818 != -1)
    swift_once(&qword_100315818, sub_1000D95C0);
  v33 = type metadata accessor for Logger(0);
  v34 = sub_10000D744(v33, (uint64_t)qword_10033FD00);
  v35 = Logger.logObject.getter(v34);
  v36 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v37 = 0;
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "SatelliteConnectionAttempt: detected link synced", v37, 2u);
    swift_slowDealloc(v37, -1, -1);
  }

}

void sub_10020BB60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  char *v36;
  uint64_t v37;
  _BYTE v38[24];
  char v39[24];

  v1 = type metadata accessor for DispatchTime(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100003DB8(&qword_1003180C8);
  __chkstk_darwin(v6, v7);
  v36 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  v12 = (char *)&v36 - v11;
  __chkstk_darwin(v13, v14);
  v16 = (char *)&v36 - v15;
  v37 = v0;
  v17 = v0 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_trackingCALatencySince;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_trackingCALatencySince, v39, 0, 0);
  sub_10000B234(v17, (uint64_t)v16, &qword_1003180C8);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 48);
  v19 = v18(v16, 1, v1);
  v20 = sub_100007FF0((uint64_t)v16, &qword_1003180C8);
  if (v19 == 1)
    return;
  static DispatchTime.now()(v20);
  sub_10000B234(v17, (uint64_t)v12, &qword_1003180C8);
  v21 = v18(v12, 1, v1);
  if ((_DWORD)v21 == 1)
  {
    __break(1u);
    return;
  }
  v22 = DispatchTime.uptimeNanoseconds.getter(v21);
  v23 = DispatchTime.uptimeNanoseconds.getter(v22);
  if (v23 >= v22)
    goto LABEL_6;
  v24 = DispatchTime.uptimeNanoseconds.getter(v23);
  v25 = DispatchTime.uptimeNanoseconds.getter(v24);
  v26 = v24 - v25;
  if (v24 < v25)
  {
    __break(1u);
LABEL_6:
    v26 = 0;
  }
  v27 = v26;
  v28 = *(void (**)(char *, uint64_t))(v2 + 8);
  v28(v5, v1);
  v28(v12, v1);
  v29 = v37 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_caLatency;
  *(_QWORD *)v29 = v27 / 0x3B9ACA00;
  *(_BYTE *)(v29 + 8) = 0;
  v30 = (uint64_t)v36;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v36, 1, 1, v1);
  swift_beginAccess(v17, v38, 33, 0);
  sub_100123FDC(v30, v17, &qword_1003180C8);
  swift_endAccess(v38);
  if (qword_100315818 != -1)
    swift_once(&qword_100315818, sub_1000D95C0);
  v31 = type metadata accessor for Logger(0);
  v32 = sub_10000D744(v31, (uint64_t)qword_10033FD00);
  v33 = Logger.logObject.getter(v32);
  v34 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v35 = 0;
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "SatelliteConnectionAttempt: detected CA in proper orientation", v35, 2u);
    swift_slowDealloc(v35, -1, -1);
  }

}

void sub_10020BE70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  int v3;
  const char *v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  _BYTE v8[176];

  v1 = sub_100003DB8(&qword_100319FC8);
  inited = swift_initStackObject(v1, v8);
  *(_OWORD *)(inited + 16) = xmmword_100251620;
  *(_QWORD *)(inited + 32) = 0x6174537472617473;
  *(_QWORD *)(inited + 40) = 0xEB00000000737574;
  v3 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_inServiceAtStart);
  sub_10006477C(0, (unint64_t *)&qword_100319FD0, NSString_ptr);
  if (v3 == 1)
  {
    v4 = "InService";
    v5 = 9;
  }
  else
  {
    v4 = "Outage";
    v5 = 6;
  }
  *(_QWORD *)(inited + 48) = NSString.init(stringLiteral:)(v4, v5, 2);
  *(_QWORD *)(inited + 56) = 0x65707954646E65;
  *(_QWORD *)(inited + 64) = 0xE700000000000000;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_caLatency + 8) & 1) != 0)
  {
    v6 = "TimerExpire";
    v7 = 11;
  }
  else
  {
    v6 = "InRightOrientation";
    v7 = 18;
  }
  *(_QWORD *)(inited + 72) = NSString.init(stringLiteral:)(v6, v7, 2);
  *(_QWORD *)(inited + 80) = 0x7373656E6E65706FLL;
  *(_QWORD *)(inited + 88) = 0xE800000000000000;
  __asm { BR              X10 }
}

unint64_t sub_10020BFD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSString v3;
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  unint64_t v7;
  Class isa;
  char isUniquelyReferenced_nonNull_native;
  Class v10;
  char v11;
  Class v12;
  char v13;
  Class v14;
  char v15;
  Class v16;
  char v17;
  Class v18;
  char v19;
  Class v20;
  char v21;
  Class v22;
  char v23;

  v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(0xE300000000000000);
  *(_QWORD *)(v1 + 96) = v3;
  *(_QWORD *)(v1 + 104) = 0x74617453636E7973;
  *(_QWORD *)(v1 + 112) = 0xEA00000000007375;
  v4 = v0 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_syncLatency;
  *(NSNumber *)(v1 + 120) = Bool._bridgeToObjectiveC()();
  *(_QWORD *)(v1 + 128) = 1701869940;
  *(_QWORD *)(v1 + 136) = 0xE400000000000000;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_newConnection) == 1)
  {
    v5 = "NewConnection";
    v6 = 13;
  }
  else
  {
    v5 = "LostConnection";
    v6 = 14;
  }
  *(_QWORD *)(v1 + 144) = NSString.init(stringLiteral:)(v5, v6, 2);
  strcpy((char *)(v1 + 152), "is_tryout_mode");
  *(_BYTE *)(v1 + 167) = -18;
  *(NSNumber *)(v1 + 168) = Bool._bridgeToObjectiveC()();
  v7 = sub_100224F60(v1);
  if ((*(_BYTE *)(v2 + 8) & 1) == 0)
  {
    isa = UInt64._bridgeToObjectiveC()().super.super.isa;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v7);
    sub_10020D010((uint64_t)isa, 0x636E6574614C6163, 0xEA00000000004D79, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  if ((*(_BYTE *)(v4 + 8) & 1) == 0)
  {
    v10 = UInt64._bridgeToObjectiveC()().super.super.isa;
    v11 = swift_isUniquelyReferenced_nonNull_native(v7);
    sub_10020D010((uint64_t)v10, 0x6574614C636E7973, 0xEC0000004D79636ELL, v11);
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_deviceOrientation + 72) & 1) == 0)
  {
    v12 = Double._bridgeToObjectiveC()().super.super.isa;
    v13 = swift_isUniquelyReferenced_nonNull_native(v7);
    sub_10020D010((uint64_t)v12, 0x7461746E6569726FLL, 0xEF736261686E6F69, v13);
    swift_bridgeObjectRelease(0x8000000000000000);
    v14 = Double._bridgeToObjectiveC()().super.super.isa;
    v15 = swift_isUniquelyReferenced_nonNull_native(v7);
    sub_10020D010((uint64_t)v14, 0x7461746E6569726FLL, 0xEF736261766E6F69, v15);
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_relativeBearing + 24) & 1) == 0)
  {
    v16 = Double._bridgeToObjectiveC()().super.super.isa;
    v17 = swift_isUniquelyReferenced_nonNull_native(v7);
    sub_10020D010((uint64_t)v16, 0x7461746E6569726FLL, 0xEC000000686E6F69, v17);
    swift_bridgeObjectRelease(0x8000000000000000);
    v18 = Double._bridgeToObjectiveC()().super.super.isa;
    v19 = swift_isUniquelyReferenced_nonNull_native(v7);
    sub_10020D010((uint64_t)v18, 0x7461746E6569726FLL, 0xEC000000766E6F69, v19);
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_nextStatusChangeAtStart + 8) & 1) == 0)
  {
    v20 = UInt64._bridgeToObjectiveC()().super.super.isa;
    v21 = swift_isUniquelyReferenced_nonNull_native(v7);
    sub_10020D010((uint64_t)v20, 0xD000000000000019, 0x800000010026E340, v21);
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_currentTarget + 40) & 1) == 0)
  {
    v22 = Int64._bridgeToObjectiveC()().super.super.isa;
    v23 = swift_isUniquelyReferenced_nonNull_native(v7);
    sub_10020D010((uint64_t)v22, 0x4449746153, 0xE500000000000000, v23);
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  return v7;
}

uint64_t sub_10020C40C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_startTimestamp;
  v2 = type metadata accessor for DispatchTime(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_100007FF0(v0 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_trackingCALatencySince, &qword_1003180C8);
  sub_100007FF0(v0 + OBJC_IVAR____TtC8SOSBuddyP33_29181C57CEC753861365ABD310953A9D4Data_trackingSyncLatencySince, &qword_1003180C8);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10020C48C()
{
  return _s8SOSBuddy4DataCMa_1(0);
}

uint64_t _s8SOSBuddy4DataCMa_1(uint64_t a1)
{
  return sub_10003D8E8(a1, qword_100329E88, (uint64_t)&_s8SOSBuddy4DataCMn_1);
}

void sub_10020C4A8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[11];
  uint64_t v7;
  uint64_t v8;

  v2 = type metadata accessor for DispatchTime(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = &unk_10025F290;
    v6[2] = &unk_10025F290;
    v6[3] = "\t";
    v6[4] = "\t";
    v6[5] = "\t";
    v6[6] = &unk_10025F278;
    v6[7] = &unk_10025F2A8;
    v6[8] = &unk_10025F260;
    v6[9] = &unk_10025F248;
    v6[10] = &unk_10025F230;
    sub_1000F03D4(319, (unint64_t *)&qword_100323F10, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchTime);
    if (v5 <= 0x3F)
    {
      v7 = *(_QWORD *)(v4 - 8) + 64;
      v8 = v7;
      swift_updateClassMetadata2(a1, 256, 13, v6, a1 + 80);
    }
  }
}

void sub_10020C588(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v8 = *v3;
  v10 = sub_10017D294(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_10008A6E8();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      swift_release(*(_QWORD *)(v17 + 8 * v10));
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = a2;
    *(_QWORD *)(v16[7] + 8 * v10) = a1;
    v20 = v16[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return;
    }
    goto LABEL_14;
  }
  sub_100087090(v13, a3 & 1);
  v18 = sub_10017D294(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    v10 = v18;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&_s15RenderPipelinesC10PipelineIdON);
  __break(1u);
}

uint64_t sub_10020C6BC(uint64_t a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  char v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v4 = v3;
  v7 = a2 & 1;
  v8 = *v3;
  v10 = sub_10017D354(a2 & 1);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_10008A888();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      return sub_10020D60C(a1, v16[7] + 72 * v10);
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = v7;
    v18 = v16[7] + 72 * v10;
    *(_OWORD *)v18 = *(_OWORD *)a1;
    v19 = *(_OWORD *)(a1 + 16);
    v20 = *(_OWORD *)(a1 + 32);
    v21 = *(_OWORD *)(a1 + 48);
    *(_BYTE *)(v18 + 64) = *(_BYTE *)(a1 + 64);
    *(_OWORD *)(v18 + 32) = v20;
    *(_OWORD *)(v18 + 48) = v21;
    *(_OWORD *)(v18 + 16) = v19;
    v22 = v16[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v16[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_100087360(result, a3 & 1);
  result = sub_10017D354(v7);
  if ((v14 & 1) == (v17 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      return sub_10020D60C(a1, v16[7] + 72 * v10);
    goto LABEL_11;
  }
LABEL_15:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for NotificationAgent.ContentType);
  __break(1u);
  return result;
}

void sub_10020C824(char a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_10017D414(a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_10008AC44();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7] + 16 * v12;
      swift_release(*(_QWORD *)(v19 + 8));
      *(_BYTE *)v19 = a1;
      *(_QWORD *)(v19 + 8) = a2;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_QWORD *)(v18[6] + 8 * v12) = a3;
    v22 = v18[7] + 16 * v12;
    *(_BYTE *)v22 = a1;
    *(_QWORD *)(v22 + 8) = a2;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_retain(a3);
      return;
    }
    goto LABEL_14;
  }
  sub_1000879C8(v15, a4 & 1);
  v20 = sub_10017D414(a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  v26 = type metadata accessor for Question();
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v26);
  __break(1u);
}

void sub_10020C980(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_10017D414(a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_10008AE00();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = (_QWORD *)(v18[7] + 16 * v12);
      swift_bridgeObjectRelease(v19[1]);
      *v19 = a1;
      v19[1] = a2;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_QWORD *)(v18[6] + 8 * v12) = a3;
    v22 = (_QWORD *)(v18[7] + 16 * v12);
    *v22 = a1;
    v22[1] = a2;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_retain(a3);
      return;
    }
    goto LABEL_14;
  }
  sub_100087CF8(v15, a4 & 1);
  v20 = sub_10017D414(a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  v26 = type metadata accessor for Option();
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v26);
  __break(1u);
}

_OWORD *sub_10020CAD4(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_10017D3B0(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_QWORD *)(v18[7] + 32 * v12);
        _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v19);
        return sub_10003E704(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_10008AFB4();
      goto LABEL_7;
    }
    sub_100088020(v15, a4 & 1);
    v21 = sub_10017D3B0(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_10020D414(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain(a3);
    }
  }
  result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

void sub_10020CC04(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;

  v4 = v3;
  v8 = *v3;
  v10 = sub_10017D414(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_10008B198();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      swift_bridgeObjectRelease(*(_QWORD *)(v17 + 8 * v10));
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v20 = 8 * v10;
    *(_QWORD *)(v16[6] + v20) = a2;
    *(_QWORD *)(v16[7] + v20) = a1;
    v21 = v16[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v16[2] = v23;
      swift_retain(a2);
      return;
    }
    goto LABEL_14;
  }
  sub_10008831C(v13, a3 & 1);
  v18 = sub_10017D414(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    v10 = v18;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  v24 = type metadata accessor for Question();
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v24);
  __break(1u);
}

_OWORD *sub_10020CD54(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _OWORD *result;
  uint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_10017D294(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_QWORD *)(v16[7] + 32 * v10);
        _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v17);
        return sub_10003E704(a1, v17);
      }
      return sub_10020D47C(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_10008B340();
      goto LABEL_7;
    }
    sub_100088644(v13, a3 & 1);
    v19 = sub_10017D294(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_10020D47C(v10, a2, a1, v16);
    }
  }
  result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Question.BuiltInId);
  __break(1u);
  return result;
}

void sub_10020CE6C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;

  v8 = v7;
  v15 = *v7;
  v17 = sub_10017D3B0(a5, a6);
  v18 = *(_QWORD *)(v15 + 16);
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v21 = v16;
  v22 = *(_QWORD *)(v15 + 24);
  if (v22 >= v20 && (a7 & 1) != 0)
    goto LABEL_7;
  if (v22 >= v20 && (a7 & 1) == 0)
  {
    sub_10008B6D4();
LABEL_7:
    v23 = (_QWORD *)*v8;
    if ((v21 & 1) != 0)
    {
LABEL_8:
      v24 = v23[7] + 32 * v17;
      sub_10000CCCC(*(_QWORD *)v24, *(_QWORD *)(v24 + 8));
      *(_QWORD *)v24 = a1;
      *(_QWORD *)(v24 + 8) = a2;
      *(_QWORD *)(v24 + 16) = a3;
      *(_BYTE *)(v24 + 24) = a4 & 1;
      return;
    }
LABEL_11:
    v23[(v17 >> 6) + 8] |= 1 << v17;
    v27 = (uint64_t *)(v23[6] + 16 * v17);
    *v27 = a5;
    v27[1] = a6;
    v28 = v23[7] + 32 * v17;
    *(_QWORD *)v28 = a1;
    *(_QWORD *)(v28 + 8) = a2;
    *(_QWORD *)(v28 + 16) = a3;
    *(_BYTE *)(v28 + 24) = a4 & 1;
    v29 = v23[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (!v30)
    {
      v23[2] = v31;
      swift_bridgeObjectRetain(a6);
      return;
    }
    goto LABEL_14;
  }
  sub_100088C14(v20, a7 & 1);
  v25 = sub_10017D3B0(a5, a6);
  if ((v21 & 1) == (v26 & 1))
  {
    v17 = v25;
    v23 = (_QWORD *)*v8;
    if ((v21 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_10020D010(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_10017D3B0(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_10008BAAC();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain(a3);
      return;
    }
    goto LABEL_14;
  }
  sub_100089264(v15, a4 & 1);
  v20 = sub_10017D3B0(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

uint64_t sub_10020D16C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v4 = v3;
  v8 = *v3;
  v10 = sub_10017D498(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_10008BC5C();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v16[7] + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v18 = 8 * v10;
    *(_QWORD *)(v16[6] + v18) = a2;
    *(_QWORD *)(v16[7] + v18) = a1;
    v19 = v16[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (!v20)
    {
      v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_100089570(result, a3 & 1);
  result = sub_10017D498(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
  __break(1u);
  return result;
}

_OWORD *sub_10020D298(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _OWORD *result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for CodingUserInfoKey(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)*v3;
  v15 = sub_10017D55C(a2);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
  }
  else
  {
    v19 = v14;
    v20 = v13[3];
    if (v20 >= v18 && (a3 & 1) != 0)
    {
LABEL_7:
      v21 = *v4;
      if ((v19 & 1) != 0)
      {
LABEL_8:
        v22 = (_QWORD *)(v21[7] + 32 * v15);
        _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v22);
        return sub_10003E704(a1, v22);
      }
      goto LABEL_11;
    }
    if (v20 >= v18 && (a3 & 1) == 0)
    {
      sub_10008C1CC();
      goto LABEL_7;
    }
    sub_100089EC8(v18, a3 & 1);
    v24 = sub_10017D55C(a2);
    if ((v19 & 1) == (v25 & 1))
    {
      v15 = v24;
      v21 = *v4;
      if ((v19 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a2, v8);
      return sub_10020D4E0(v15, (uint64_t)v12, a1, v21);
    }
  }
  result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
  __break(1u);
  return result;
}

_OWORD *sub_10020D414(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_10003E704(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

_OWORD *sub_10020D47C(unint64_t a1, char a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_BYTE *)(a4[6] + a1) = a2;
  result = sub_10003E704(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

_OWORD *sub_10020D4E0(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  _OWORD *result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for CodingUserInfoKey(0);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  result = sub_10003E704(a3, (_OWORD *)(a4[7] + 32 * a1));
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_10020D580()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10020D5A4(uint64_t a1)
{
  uint64_t v1;

  return sub_10020B14C(a1, v1);
}

double sub_10020D5AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_10020D5BC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_10020D5C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10031FA60;
  if (!qword_10031FA60)
  {
    v1 = type metadata accessor for Date(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Date, v1);
    atomic_store(result, (unint64_t *)&qword_10031FA60);
  }
  return result;
}

uint64_t sub_10020D60C(uint64_t a1, uint64_t a2)
{
  assignWithTake for NotificationAgent.NotificationState(a2, a1);
  return a2;
}

uint64_t _s8SOSBuddy14OptionSelectedCMa_0()
{
  return objc_opt_self(_TtC8SOSBuddyP33_04BFF93601F8CE168378DA6EA2F25F4114OptionSelected);
}

uint64_t sub_10020D668()
{
  void *v0;
  id v1;
  Swift::String v2;
  Swift::String_optional v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  Swift::String v19;
  Swift::String_optional v20;
  Swift::String v21;
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  Swift::String v27;
  Swift::String_optional v28;
  Swift::String v29;
  Swift::String v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  Swift::String v35;
  Swift::String_optional v36;
  Swift::String v37;
  Swift::String v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  Swift::String v43;
  Swift::String_optional v44;
  Swift::String v45;
  Swift::String v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  Swift::String v55;
  uint64_t v56;
  unint64_t v57;
  _UNKNOWN **v58;
  _UNKNOWN **v59;
  uint64_t v60;
  uint64_t v61;
  Swift::String v62;
  Swift::String v63;
  Swift::String v64;
  Swift::String v65;
  Swift::String v66;
  Swift::String v67;

  v0 = (void *)objc_opt_self(NSBundle);
  v1 = objc_msgSend(v0, "mainBundle");
  v2._countAndFlagsBits = 0xD000000000000015;
  v62._countAndFlagsBits = 0xD00000000000002CLL;
  v62._object = (void *)0x8000000100271220;
  v2._object = (void *)0x8000000100271630;
  v3.value._countAndFlagsBits = 0x636E656772656D45;
  v3.value._object = (void *)0xEE00796464754279;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v62);

  v55 = v5;
  v56 = 0;
  v57 = 0xE000000000000000;
  v58 = &off_1002E2528;
  v59 = &off_1002E2550;
  v60 = 0;
  v61 = 0;
  v6 = sub_100003DB8(&qword_100328A00);
  v7 = swift_allocObject(v6, 72, 7);
  *(_OWORD *)(v7 + 16) = xmmword_10025F350;
  v8 = objc_msgSend(v0, "mainBundle");
  v9._countAndFlagsBits = 0xD000000000000012;
  v63._object = (void *)0x8000000100271E70;
  v9._object = (void *)0x8000000100271E50;
  v10.value._countAndFlagsBits = 0x636E656772656D45;
  v10.value._object = (void *)0xEE00796464754279;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v63._countAndFlagsBits = 0xD000000000000037;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v63);

  v13 = static Color.green.getter();
  v14 = type metadata accessor for OptionPresentation();
  v15 = swift_allocObject(v14, 72, 7);
  *(Swift::String *)(v15 + 16) = v12;
  *(_OWORD *)(v15 + 48) = xmmword_10025F360;
  *(_QWORD *)(v15 + 64) = v13;
  v16 = type metadata accessor for Option();
  *(_QWORD *)(v15 + 32) = 0;
  *(_QWORD *)(v15 + 40) = 0;
  v17 = swift_allocObject(v16, 56, 7);
  strcpy((char *)(v17 + 16), "TYPE_MEDICAL");
  *(_BYTE *)(v17 + 29) = 0;
  *(_WORD *)(v17 + 30) = -5120;
  *(_QWORD *)(v17 + 32) = v15;
  *(_BYTE *)(v17 + 40) = 0;
  *(_QWORD *)(v17 + 48) = 40;
  *(_QWORD *)(v7 + 32) = v17;
  v18 = objc_msgSend(v0, "mainBundle");
  v64._object = (void *)0x8000000100271E70;
  v19._countAndFlagsBits = 0x656D697243;
  v19._object = (void *)0xE500000000000000;
  v20.value._countAndFlagsBits = 0x636E656772656D45;
  v20.value._object = (void *)0xEE00796464754279;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v64._countAndFlagsBits = 0xD000000000000037;
  v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v64);

  v23 = static Color.green.getter();
  v24 = swift_allocObject(v14, 72, 7);
  *(Swift::String *)(v24 + 16) = v22;
  *(_OWORD *)(v24 + 48) = xmmword_10025F370;
  *(_QWORD *)(v24 + 64) = v23;
  *(_QWORD *)(v24 + 32) = 0;
  *(_QWORD *)(v24 + 40) = 0;
  v25 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v25 + 16) = 0x4C4F505F45505954;
  *(_QWORD *)(v25 + 24) = 0xEB00000000454349;
  *(_QWORD *)(v25 + 32) = v24;
  *(_BYTE *)(v25 + 40) = 0;
  *(_QWORD *)(v25 + 48) = 40;
  *(_QWORD *)(v7 + 40) = v25;
  v26 = objc_msgSend(v0, "mainBundle");
  v65._object = (void *)0x8000000100271E70;
  v27._countAndFlagsBits = 1701996870;
  v27._object = (void *)0xE400000000000000;
  v28.value._countAndFlagsBits = 0x636E656772656D45;
  v28.value._object = (void *)0xEE00796464754279;
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  v65._countAndFlagsBits = 0xD000000000000037;
  v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, v28, (NSBundle)v26, v29, v65);

  v31 = static Color.green.getter();
  v32 = swift_allocObject(v14, 72, 7);
  *(Swift::String *)(v32 + 16) = v30;
  *(_OWORD *)(v32 + 48) = xmmword_10025F380;
  *(_QWORD *)(v32 + 64) = v31;
  *(_QWORD *)(v32 + 32) = 0;
  *(_QWORD *)(v32 + 40) = 0;
  v33 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v33 + 16) = 0x5249465F45505954;
  *(_QWORD *)(v33 + 24) = 0xE900000000000045;
  *(_QWORD *)(v33 + 32) = v32;
  *(_BYTE *)(v33 + 40) = 0;
  *(_QWORD *)(v33 + 48) = 40;
  *(_QWORD *)(v7 + 48) = v33;
  v34 = objc_msgSend(v0, "mainBundle");
  v66._object = (void *)0x8000000100271E70;
  v35._countAndFlagsBits = 0x20726F2074736F4CLL;
  v35._object = (void *)0xEF64657070617254;
  v36.value._countAndFlagsBits = 0x636E656772656D45;
  v36.value._object = (void *)0xEE00796464754279;
  v37._countAndFlagsBits = 0;
  v37._object = (void *)0xE000000000000000;
  v66._countAndFlagsBits = 0xD000000000000037;
  v38 = NSLocalizedString(_:tableName:bundle:value:comment:)(v35, v36, (NSBundle)v34, v37, v66);

  v39 = static Color.green.getter();
  v40 = swift_allocObject(v14, 72, 7);
  *(Swift::String *)(v40 + 16) = v38;
  *(_OWORD *)(v40 + 48) = xmmword_10025F390;
  *(_QWORD *)(v40 + 64) = v39;
  *(_QWORD *)(v40 + 32) = 0;
  *(_QWORD *)(v40 + 40) = 0;
  v41 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v41 + 16) = 0x524E535F45505954;
  *(_QWORD *)(v41 + 24) = 0xE800000000000000;
  *(_QWORD *)(v41 + 32) = v40;
  *(_BYTE *)(v41 + 40) = 0;
  *(_QWORD *)(v41 + 48) = 40;
  *(_QWORD *)(v7 + 56) = v41;
  v42 = objc_msgSend(v0, "mainBundle");
  v43._countAndFlagsBits = 0xD000000000000014;
  v67._object = (void *)0x8000000100271E70;
  v43._object = (void *)0x8000000100271EB0;
  v44.value._countAndFlagsBits = 0x636E656772656D45;
  v44.value._object = (void *)0xEE00796464754279;
  v45._countAndFlagsBits = 0;
  v45._object = (void *)0xE000000000000000;
  v67._countAndFlagsBits = 0xD000000000000037;
  v46 = NSLocalizedString(_:tableName:bundle:value:comment:)(v43, v44, (NSBundle)v42, v45, v67);

  v47 = static Color.green.getter();
  v48 = swift_allocObject(v14, 72, 7);
  *(Swift::String *)(v48 + 16) = v46;
  *(_OWORD *)(v48 + 48) = xmmword_10025F3A0;
  *(_QWORD *)(v48 + 64) = v47;
  *(_QWORD *)(v48 + 32) = 0;
  *(_QWORD *)(v48 + 40) = 0;
  v49 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v49 + 16) = 0x4142435F45505954;
  *(_QWORD *)(v49 + 24) = 0xE800000000000000;
  *(_QWORD *)(v49 + 32) = v48;
  *(_BYTE *)(v49 + 40) = 0;
  *(_QWORD *)(v49 + 48) = 40;
  *(_QWORD *)(v7 + 64) = v49;
  specialized Array._endMutation()(v49);
  v50 = v7;
  v51 = type metadata accessor for NoPrerequisites();
  v52 = swift_allocObject(v51, 16, 7);
  v53 = type metadata accessor for Question();
  swift_allocObject(v53, 160, 7);
  return sub_100085664(1162893652, 0xE400000000000000, 0, (uint64_t)&v55, v50, v52, (uint64_t)&off_1002E25C0, 7);
}

uint64_t sub_10020DCAC()
{
  void *v0;
  id v1;
  Swift::String v2;
  Swift::String_optional v3;
  Swift::String v4;
  Swift::String v5;
  id v6;
  Swift::String v7;
  Swift::String_optional v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  Swift::String v27[2];
  _QWORD *v28;
  _QWORD v29[3];
  Swift::String v30;
  Swift::String v31;

  v0 = (void *)objc_opt_self(NSBundle);
  v1 = objc_msgSend(v0, "mainBundle");
  v30._countAndFlagsBits = 0xD00000000000002CLL;
  v2._countAndFlagsBits = 0xD000000000000038;
  v30._object = (void *)0x8000000100271220;
  v2._object = (void *)0x80000001002684E0;
  v3.value._countAndFlagsBits = 0xD000000000000017;
  v3.value._object = (void *)0x8000000100267FB0;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v30);

  v6 = objc_msgSend(v0, "mainBundle");
  v7._countAndFlagsBits = 0xD00000000000002FLL;
  v31._countAndFlagsBits = 0xD00000000000005ALL;
  v31._object = (void *)0x8000000100268550;
  v7._object = (void *)0x8000000100268520;
  v8.value._countAndFlagsBits = 0xD000000000000017;
  v8.value._object = (void *)0x8000000100267FB0;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v31);

  v27[0] = v5;
  v27[1] = v10;
  v28 = _swiftEmptyArrayStorage;
  memset(v29, 0, sizeof(v29));
  v11 = sub_100003DB8(&qword_100328A00);
  v12 = swift_allocObject(v11, 56, 7);
  *(_OWORD *)(v12 + 16) = xmmword_10025F3B0;
  v13 = _s8SOSBuddy14OptionSelectedCMa_0();
  v14 = swift_allocObject(v13, 32, 7);
  *(_QWORD *)(v14 + 16) = 0x4142435F45505954;
  *(_QWORD *)(v14 + 24) = 0xE800000000000000;
  *(_QWORD *)(v12 + 32) = v14;
  v15 = type metadata accessor for BuiltInCondition();
  v16 = swift_allocObject(v15, 17, 7);
  *(_BYTE *)(v16 + 16) = 2;
  *(_QWORD *)(v12 + 40) = v16;
  v17 = swift_allocObject(v15, 17, 7);
  *(_BYTE *)(v17 + 16) = 5;
  v18 = type metadata accessor for NotCondition();
  v19 = swift_allocObject(v18, 32, 7);
  v20 = swift_allocObject(v11, 40, 7);
  *(_OWORD *)(v20 + 16) = xmmword_10024E820;
  *(_QWORD *)(v20 + 32) = v17;
  v26 = v20;
  v21 = specialized Array._endMutation()(v20);
  *(_BYTE *)(v19 + 16) = 2;
  *(_QWORD *)(v19 + 24) = v26;
  *(_QWORD *)(v12 + 48) = v19;
  specialized Array._endMutation()(v21);
  v22 = type metadata accessor for AndCondition();
  v23 = swift_allocObject(v22, 32, 7);
  *(_BYTE *)(v23 + 16) = 0;
  *(_QWORD *)(v23 + 24) = v12;
  v24 = type metadata accessor for Question();
  swift_allocObject(v24, 160, 7);
  return sub_100085664(0x4544495344414F52, 0xED00004B524F465FLL, 3, (uint64_t)v27, (uint64_t)_swiftEmptyArrayStorage, v23, (uint64_t)&off_1002E25E8, 1);
}

uint64_t sub_10020DF78()
{
  void *v0;
  id v1;
  Swift::String v2;
  Swift::String_optional v3;
  Swift::String v4;
  Swift::String v5;
  id v6;
  Swift::String v7;
  Swift::String_optional v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v22[2];
  _QWORD *v23;
  _QWORD v24[3];
  Swift::String v25;
  Swift::String v26;

  v0 = (void *)objc_opt_self(NSBundle);
  v1 = objc_msgSend(v0, "mainBundle");
  v25._countAndFlagsBits = 0xD00000000000002CLL;
  v2._countAndFlagsBits = 0xD00000000000002ELL;
  v25._object = (void *)0x8000000100271220;
  v2._object = (void *)0x8000000100271D80;
  v3.value._countAndFlagsBits = 0xD000000000000017;
  v3.value._object = (void *)0x8000000100267FB0;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v25);

  v6 = objc_msgSend(v0, "mainBundle");
  v26._countAndFlagsBits = 0xD000000000000046;
  v7._countAndFlagsBits = 0xD000000000000047;
  v26._object = (void *)0x8000000100271E00;
  v7._object = (void *)0x8000000100271DB0;
  v8.value._countAndFlagsBits = 0xD000000000000017;
  v8.value._object = (void *)0x8000000100267FB0;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v26);

  v22[0] = v5;
  v22[1] = v10;
  v23 = _swiftEmptyArrayStorage;
  memset(v24, 0, sizeof(v24));
  v11 = sub_100003DB8(&qword_100328A00);
  v12 = swift_allocObject(v11, 48, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100252A40;
  v13 = type metadata accessor for QuestionCondition();
  v14 = swift_allocObject(v13, 40, 7);
  *(_BYTE *)(v14 + 16) = 1;
  strcpy((char *)(v14 + 24), "ROADSIDE_FORK");
  *(_WORD *)(v14 + 38) = -4864;
  *(_QWORD *)(v12 + 32) = v14;
  v15 = type metadata accessor for BuiltInCondition();
  v16 = swift_allocObject(v15, 17, 7);
  *(_BYTE *)(v16 + 16) = 3;
  *(_QWORD *)(v12 + 40) = v16;
  specialized Array._endMutation()(v16);
  v17 = v12;
  v18 = type metadata accessor for AndCondition();
  v19 = swift_allocObject(v18, 32, 7);
  *(_BYTE *)(v19 + 16) = 0;
  *(_QWORD *)(v19 + 24) = v17;
  v20 = type metadata accessor for Question();
  swift_allocObject(v20, 160, 7);
  return sub_100085664(0xD000000000000012, 0x80000001002711B0, 3, (uint64_t)v22, (uint64_t)_swiftEmptyArrayStorage, v19, (uint64_t)&off_1002E2610, 2);
}

uint64_t sub_10020E1D4()
{
  void *v0;
  id v1;
  Swift::String v2;
  Swift::String_optional v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  Swift::String v19;
  Swift::String_optional v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String *v23;
  __n128 v24;
  uint64_t v25;
  id v26;
  Swift::String v27;
  Swift::String_optional v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String *v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v39;
  uint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  _QWORD v43[3];
  Swift::String v44;
  Swift::String v45;
  Swift::String v46;
  Swift::String v47;

  v0 = (void *)objc_opt_self(NSBundle);
  v1 = objc_msgSend(v0, "mainBundle");
  v44._countAndFlagsBits = 0xD00000000000002CLL;
  v44._object = (void *)0x8000000100271220;
  v2._countAndFlagsBits = 0x6465656E206F6857;
  v2._object = (void *)0xEF3F706C65682073;
  v3.value._countAndFlagsBits = 0x636E656772656D45;
  v3.value._object = (void *)0xEE00796464754279;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v44);

  v39 = v5;
  v40 = 0;
  v41 = 0xE000000000000000;
  v42 = _swiftEmptyArrayStorage;
  memset(v43, 0, sizeof(v43));
  v6 = sub_100003DB8(&qword_100328A00);
  v7 = swift_allocObject(v6, 56, 7);
  *(_OWORD *)(v7 + 16) = xmmword_10025F3B0;
  v8 = objc_msgSend(v0, "mainBundle");
  v45._object = (void *)0x8000000100271D40;
  v9._countAndFlagsBits = 25933;
  v9._object = (void *)0xE200000000000000;
  v10.value._countAndFlagsBits = 0x636E656772656D45;
  v10.value._object = (void *)0xEE00796464754279;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v45._countAndFlagsBits = 0xD000000000000031;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v45);

  v13 = type metadata accessor for OptionPresentation();
  v14 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v14[1] = v12;
  v14[3]._countAndFlagsBits = 0;
  v14[3]._object = 0;
  v14[4]._countAndFlagsBits = static Color.clear.getter(v15);
  v16 = type metadata accessor for Option();
  v14[2]._countAndFlagsBits = 0;
  v14[2]._object = 0;
  v17 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v17 + 16) = 0x454D5F4F4857;
  *(_QWORD *)(v17 + 24) = 0xE600000000000000;
  *(_QWORD *)(v17 + 32) = v14;
  *(_BYTE *)(v17 + 40) = 0;
  *(_QWORD *)(v17 + 48) = 40;
  *(_QWORD *)(v7 + 32) = v17;
  v18 = objc_msgSend(v0, "mainBundle");
  v46._object = (void *)0x8000000100271D40;
  v19._countAndFlagsBits = 0x20656E6F656D6F53;
  v19._object = (void *)0xEC00000065736C45;
  v20.value._countAndFlagsBits = 0x636E656772656D45;
  v20.value._object = (void *)0xEE00796464754279;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v46._countAndFlagsBits = 0xD000000000000031;
  v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v46);

  v23 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v23[1] = v22;
  v23[3]._countAndFlagsBits = 0;
  v23[3]._object = 0;
  v23[4]._countAndFlagsBits = static Color.clear.getter(v24);
  v23[2]._countAndFlagsBits = 0;
  v23[2]._object = 0;
  v25 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v25 + 16) = 0x4548544F5F4F4857;
  *(_QWORD *)(v25 + 24) = 0xE900000000000052;
  *(_QWORD *)(v25 + 32) = v23;
  *(_BYTE *)(v25 + 40) = 0;
  *(_QWORD *)(v25 + 48) = 40;
  *(_QWORD *)(v7 + 40) = v25;
  v26 = objc_msgSend(v0, "mainBundle");
  v47._object = (void *)0x8000000100271D40;
  v27._countAndFlagsBits = 0x656C7069746C754DLL;
  v27._object = (void *)0xEF656C706F655020;
  v28.value._countAndFlagsBits = 0x636E656772656D45;
  v28.value._object = (void *)0xEE00796464754279;
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  v47._countAndFlagsBits = 0xD000000000000031;
  v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, v28, (NSBundle)v26, v29, v47);

  v31 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v31[1] = v30;
  v31[3]._countAndFlagsBits = 0;
  v31[3]._object = 0;
  v31[4]._countAndFlagsBits = static Color.clear.getter(v32);
  v31[2]._countAndFlagsBits = 0;
  v31[2]._object = 0;
  v33 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v33 + 16) = 0x594E414D5F4F4857;
  *(_QWORD *)(v33 + 24) = 0xE800000000000000;
  *(_QWORD *)(v33 + 32) = v31;
  *(_BYTE *)(v33 + 40) = 0;
  *(_QWORD *)(v33 + 48) = 40;
  *(_QWORD *)(v7 + 48) = v33;
  specialized Array._endMutation()(v33);
  v34 = v7;
  v35 = type metadata accessor for QuestionCondition();
  v36 = swift_allocObject(v35, 40, 7);
  *(_BYTE *)(v36 + 16) = 1;
  *(_QWORD *)(v36 + 24) = 1162893652;
  *(_QWORD *)(v36 + 32) = 0xE400000000000000;
  v37 = type metadata accessor for Question();
  swift_allocObject(v37, 160, 7);
  return sub_100085664(5195863, 0xE300000000000000, 0, (uint64_t)&v39, v34, v36, (uint64_t)&off_1002E2638, 7);
}

uint64_t sub_10020E62C()
{
  void *v0;
  id v1;
  Swift::String v2;
  Swift::String_optional v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  Swift::String v19;
  Swift::String_optional v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String *v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  Swift::String v34;
  uint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  _QWORD v38[3];
  Swift::String v39;
  Swift::String v40;
  Swift::String v41;

  v0 = (void *)objc_opt_self(NSBundle);
  v1 = objc_msgSend(v0, "mainBundle");
  v2._countAndFlagsBits = 0xD000000000000028;
  v39._countAndFlagsBits = 0xD00000000000002CLL;
  v39._object = (void *)0x8000000100271220;
  v2._object = (void *)0x8000000100271D10;
  v3.value._countAndFlagsBits = 0x636E656772656D45;
  v3.value._object = (void *)0xEE00796464754279;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v39);

  v34 = v5;
  v35 = 0;
  v36 = 0xE000000000000000;
  v37 = _swiftEmptyArrayStorage;
  memset(v38, 0, sizeof(v38));
  v6 = sub_100003DB8(&qword_100328A00);
  v7 = swift_allocObject(v6, 48, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100252A40;
  v8 = objc_msgSend(v0, "mainBundle");
  v40._object = (void *)0x80000001002681B0;
  v9._countAndFlagsBits = 7562585;
  v9._object = (void *)0xE300000000000000;
  v10.value._countAndFlagsBits = 0x636E656772656D45;
  v10.value._object = (void *)0xEE00796464754279;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v40._countAndFlagsBits = 0xD00000000000002DLL;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v40);

  v13 = type metadata accessor for OptionPresentation();
  v14 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v14[1] = v12;
  v14[3]._countAndFlagsBits = 0;
  v14[3]._object = 0;
  v14[4]._countAndFlagsBits = static Color.clear.getter(v15);
  v16 = type metadata accessor for Option();
  v14[2]._countAndFlagsBits = 0;
  v14[2]._object = 0;
  v17 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v17 + 16) = 0x45595F434F4C5441;
  *(_QWORD *)(v17 + 24) = 0xE900000000000053;
  *(_QWORD *)(v17 + 32) = v14;
  *(_BYTE *)(v17 + 40) = 0;
  *(_QWORD *)(v17 + 48) = 40;
  *(_QWORD *)(v7 + 32) = v17;
  v18 = objc_msgSend(v0, "mainBundle");
  v41._object = (void *)0x80000001002681B0;
  v19._countAndFlagsBits = 28494;
  v19._object = (void *)0xE200000000000000;
  v20.value._countAndFlagsBits = 0x636E656772656D45;
  v20.value._object = (void *)0xEE00796464754279;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v41._countAndFlagsBits = 0xD00000000000002DLL;
  v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v41);

  v23 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v23[1] = v22;
  v23[3]._countAndFlagsBits = 0;
  v23[3]._object = 0;
  v23[4]._countAndFlagsBits = static Color.clear.getter(v24);
  v23[2]._countAndFlagsBits = 0;
  v23[2]._object = 0;
  v25 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v25 + 16) = 0x4F4E5F434F4C5441;
  *(_QWORD *)(v25 + 24) = 0xE800000000000000;
  *(_QWORD *)(v25 + 32) = v23;
  *(_BYTE *)(v25 + 40) = 0;
  *(_QWORD *)(v25 + 48) = 40;
  *(_QWORD *)(v7 + 40) = v25;
  specialized Array._endMutation()(v25);
  v26 = _s8SOSBuddy14OptionSelectedCMa_0();
  v27 = swift_allocObject(v26, 32, 7);
  *(_QWORD *)(v27 + 16) = 0x454D5F4F4857;
  *(_QWORD *)(v27 + 24) = 0xE600000000000000;
  v28 = type metadata accessor for NotCondition();
  v29 = swift_allocObject(v28, 32, 7);
  v30 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v30 + 16) = xmmword_10024E820;
  *(_QWORD *)(v30 + 32) = v27;
  v33 = v30;
  specialized Array._endMutation()(v30);
  *(_BYTE *)(v29 + 16) = 2;
  *(_QWORD *)(v29 + 24) = v33;
  v31 = type metadata accessor for Question();
  swift_allocObject(v31, 160, 7);
  return sub_100085664(0x434F4C5441, 0xE500000000000000, 0, (uint64_t)&v34, v7, v29, (uint64_t)&off_1002E2660, 7);
}

uint64_t sub_10020E9E0()
{
  void *v0;
  id v1;
  Swift::String v2;
  Swift::String_optional v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  Swift::String v19;
  Swift::String_optional v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String *v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  Swift::String v35;
  uint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  _QWORD v39[3];
  Swift::String v40;
  Swift::String v41;
  Swift::String v42;

  v0 = (void *)objc_opt_self(NSBundle);
  v1 = objc_msgSend(v0, "mainBundle");
  v2._countAndFlagsBits = 0xD000000000000016;
  v40._countAndFlagsBits = 0xD00000000000002CLL;
  v40._object = (void *)0x8000000100271220;
  v2._object = (void *)0x8000000100271CF0;
  v3.value._countAndFlagsBits = 0x636E656772656D45;
  v3.value._object = (void *)0xEE00796464754279;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v40);

  v35 = v5;
  v36 = 0;
  v37 = 0xE000000000000000;
  v38 = _swiftEmptyArrayStorage;
  memset(v39, 0, sizeof(v39));
  v6 = sub_100003DB8(&qword_100328A00);
  v7 = swift_allocObject(v6, 48, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100252A40;
  v8 = objc_msgSend(v0, "mainBundle");
  v41._object = (void *)0x8000000100271CB0;
  v9._countAndFlagsBits = 0x796C6C616D726F4ELL;
  v9._object = (void *)0xE800000000000000;
  v10.value._countAndFlagsBits = 0x636E656772656D45;
  v10.value._object = (void *)0xEE00796464754279;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v41._countAndFlagsBits = 0xD00000000000003ELL;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v41);

  v13 = type metadata accessor for OptionPresentation();
  v14 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v14[1] = v12;
  v14[3]._countAndFlagsBits = 0;
  v14[3]._object = 0;
  v14[4]._countAndFlagsBits = static Color.clear.getter(v15);
  v16 = type metadata accessor for Option();
  v14[2]._countAndFlagsBits = 0;
  v14[2]._object = 0;
  v17 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v17 + 16) = 0xD000000000000010;
  *(_QWORD *)(v17 + 24) = 0x80000001002715B0;
  *(_QWORD *)(v17 + 32) = v14;
  *(_BYTE *)(v17 + 40) = 0;
  *(_QWORD *)(v17 + 48) = 40;
  *(_QWORD *)(v7 + 32) = v17;
  v18 = objc_msgSend(v0, "mainBundle");
  v42._object = (void *)0x8000000100271CB0;
  v19._countAndFlagsBits = 0x6669442068746957;
  v19._object = (void *)0xEF79746C75636966;
  v20.value._countAndFlagsBits = 0x636E656772656D45;
  v20.value._object = (void *)0xEE00796464754279;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v42._countAndFlagsBits = 0xD00000000000003ELL;
  v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v42);

  v23 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v23[1] = v22;
  v23[3]._countAndFlagsBits = 0;
  v23[3]._object = 0;
  v23[4]._countAndFlagsBits = static Color.clear.getter(v24);
  v23[2]._countAndFlagsBits = 0;
  v23[2]._object = 0;
  v25 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v25 + 16) = 0xD000000000000013;
  *(_QWORD *)(v25 + 24) = 0x8000000100271590;
  *(_QWORD *)(v25 + 32) = v23;
  *(_BYTE *)(v25 + 40) = 0;
  *(_QWORD *)(v25 + 48) = 40;
  *(_QWORD *)(v7 + 40) = v25;
  specialized Array._endMutation()(v25);
  v26 = swift_allocObject(v6, 48, 7);
  *(_OWORD *)(v26 + 16) = xmmword_100252A40;
  v27 = _s8SOSBuddy14OptionSelectedCMa_0();
  v28 = swift_allocObject(v27, 32, 7);
  strcpy((char *)(v28 + 16), "TYPE_MEDICAL");
  *(_BYTE *)(v28 + 29) = 0;
  *(_WORD *)(v28 + 30) = -5120;
  *(_QWORD *)(v26 + 32) = v28;
  v29 = swift_allocObject(v27, 32, 7);
  *(_QWORD *)(v29 + 16) = 0x454D5F4F4857;
  *(_QWORD *)(v29 + 24) = 0xE600000000000000;
  *(_QWORD *)(v26 + 40) = v29;
  specialized Array._endMutation()(v29);
  v30 = v26;
  v31 = type metadata accessor for AndCondition();
  v32 = swift_allocObject(v31, 32, 7);
  *(_BYTE *)(v32 + 16) = 0;
  *(_QWORD *)(v32 + 24) = v30;
  v33 = type metadata accessor for Question();
  swift_allocObject(v33, 160, 7);
  return sub_100085664(0x4D45485441455242, 0xE900000000000045, 0, (uint64_t)&v35, v7, v32, (uint64_t)_swiftEmptyArrayStorage, 7);
}

uint64_t sub_10020EDF8()
{
  void *v0;
  id v1;
  Swift::String v2;
  Swift::String_optional v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  Swift::String v19;
  Swift::String_optional v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String *v23;
  __n128 v24;
  uint64_t v25;
  id v26;
  Swift::String v27;
  Swift::String_optional v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String *v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  Swift::String v47;
  uint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  _QWORD v51[3];
  Swift::String v52;
  Swift::String v53;
  Swift::String v54;
  Swift::String v55;

  v0 = (void *)objc_opt_self(NSBundle);
  v1 = objc_msgSend(v0, "mainBundle");
  v2._countAndFlagsBits = 0xD000000000000017;
  v52._countAndFlagsBits = 0xD00000000000002CLL;
  v52._object = (void *)0x8000000100271220;
  v2._object = (void *)0x8000000100271C90;
  v3.value._countAndFlagsBits = 0x636E656772656D45;
  v3.value._object = (void *)0xEE00796464754279;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v52);

  v47 = v5;
  v48 = 0;
  v49 = 0xE000000000000000;
  v50 = _swiftEmptyArrayStorage;
  memset(v51, 0, sizeof(v51));
  v6 = sub_100003DB8(&qword_100328A00);
  v7 = swift_allocObject(v6, 56, 7);
  *(_OWORD *)(v7 + 16) = xmmword_10025F3B0;
  v8 = objc_msgSend(v0, "mainBundle");
  v53._object = (void *)0x8000000100271CB0;
  v9._countAndFlagsBits = 0x796C6C616D726F4ELL;
  v9._object = (void *)0xE800000000000000;
  v10.value._countAndFlagsBits = 0x636E656772656D45;
  v10.value._object = (void *)0xEE00796464754279;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v53._countAndFlagsBits = 0xD00000000000003ELL;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v53);

  v13 = type metadata accessor for OptionPresentation();
  v14 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v14[1] = v12;
  v14[3]._countAndFlagsBits = 0;
  v14[3]._object = 0;
  v14[4]._countAndFlagsBits = static Color.clear.getter(v15);
  v16 = type metadata accessor for Option();
  v14[2]._countAndFlagsBits = 0;
  v14[2]._object = 0;
  v17 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v17 + 16) = 0xD000000000000013;
  *(_QWORD *)(v17 + 24) = 0x8000000100271570;
  *(_QWORD *)(v17 + 32) = v14;
  *(_BYTE *)(v17 + 40) = 0;
  *(_QWORD *)(v17 + 48) = 40;
  *(_QWORD *)(v7 + 32) = v17;
  v18 = objc_msgSend(v0, "mainBundle");
  v54._object = (void *)0x8000000100271CB0;
  v19._countAndFlagsBits = 0x6669442068746957;
  v19._object = (void *)0xEF79746C75636966;
  v20.value._countAndFlagsBits = 0x636E656772656D45;
  v20.value._object = (void *)0xEE00796464754279;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v54._countAndFlagsBits = 0xD00000000000003ELL;
  v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v54);

  v23 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v23[1] = v22;
  v23[3]._countAndFlagsBits = 0;
  v23[3]._object = 0;
  v23[4]._countAndFlagsBits = static Color.clear.getter(v24);
  v23[2]._countAndFlagsBits = 0;
  v23[2]._object = 0;
  v25 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v25 + 16) = 0xD000000000000016;
  *(_QWORD *)(v25 + 24) = 0x8000000100271550;
  *(_QWORD *)(v25 + 32) = v23;
  *(_BYTE *)(v25 + 40) = 0;
  *(_QWORD *)(v25 + 48) = 40;
  *(_QWORD *)(v7 + 40) = v25;
  v26 = objc_msgSend(v0, "mainBundle");
  v55._object = (void *)0x8000000100271CB0;
  v27._countAndFlagsBits = 0x6165724220746F4ELL;
  v27._object = (void *)0xED0000676E696874;
  v28.value._countAndFlagsBits = 0x636E656772656D45;
  v28.value._object = (void *)0xEE00796464754279;
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  v55._countAndFlagsBits = 0xD00000000000003ELL;
  v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, v28, (NSBundle)v26, v29, v55);

  v31 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v31[1] = v30;
  v31[3]._countAndFlagsBits = 0;
  v31[3]._object = 0;
  v31[4]._countAndFlagsBits = static Color.clear.getter(v32);
  v31[2]._countAndFlagsBits = 0;
  v31[2]._object = 0;
  v33 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v33 + 16) = 0xD000000000000010;
  *(_QWORD *)(v33 + 24) = 0x8000000100271530;
  *(_QWORD *)(v33 + 32) = v31;
  *(_BYTE *)(v33 + 40) = 0;
  *(_QWORD *)(v33 + 48) = 40;
  *(_QWORD *)(v7 + 48) = v33;
  specialized Array._endMutation()(v33);
  v34 = swift_allocObject(v6, 48, 7);
  *(_OWORD *)(v34 + 16) = xmmword_100252A40;
  v35 = _s8SOSBuddy14OptionSelectedCMa_0();
  v36 = swift_allocObject(v35, 32, 7);
  strcpy((char *)(v36 + 16), "TYPE_MEDICAL");
  *(_BYTE *)(v36 + 29) = 0;
  *(_WORD *)(v36 + 30) = -5120;
  *(_QWORD *)(v34 + 32) = v36;
  v37 = swift_allocObject(v35, 32, 7);
  *(_QWORD *)(v37 + 16) = 0x454D5F4F4857;
  *(_QWORD *)(v37 + 24) = 0xE600000000000000;
  v38 = type metadata accessor for NotCondition();
  v39 = swift_allocObject(v38, 32, 7);
  v40 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v40 + 16) = xmmword_10024E820;
  *(_QWORD *)(v40 + 32) = v37;
  v46 = v40;
  v41 = specialized Array._endMutation()(v40);
  *(_BYTE *)(v39 + 16) = 2;
  *(_QWORD *)(v39 + 24) = v46;
  *(_QWORD *)(v34 + 40) = v39;
  specialized Array._endMutation()(v41);
  v42 = type metadata accessor for AndCondition();
  v43 = swift_allocObject(v42, 32, 7);
  *(_BYTE *)(v43 + 16) = 0;
  *(_QWORD *)(v43 + 24) = v34;
  v44 = type metadata accessor for Question();
  swift_allocObject(v44, 160, 7);
  return sub_100085664(0x4F45485441455242, 0xEC00000052454854, 0, (uint64_t)&v47, v7, v43, (uint64_t)_swiftEmptyArrayStorage, 7);
}

uint64_t sub_10020F358()
{
  void *v0;
  id v1;
  Swift::String v2;
  Swift::String_optional v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  Swift::String v19;
  Swift::String_optional v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String *v23;
  __n128 v24;
  uint64_t v25;
  id v26;
  Swift::String v27;
  Swift::String_optional v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String *v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  Swift::String v48;
  uint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  _QWORD v52[3];
  Swift::String v53;
  Swift::String v54;
  Swift::String v55;
  Swift::String v56;

  v0 = (void *)objc_opt_self(NSBundle);
  v1 = objc_msgSend(v0, "mainBundle");
  v2._countAndFlagsBits = 0xD000000000000013;
  v53._countAndFlagsBits = 0xD00000000000002CLL;
  v53._object = (void *)0x8000000100271220;
  v2._object = (void *)0x8000000100271C30;
  v3.value._countAndFlagsBits = 0x636E656772656D45;
  v3.value._object = (void *)0xEE00796464754279;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v53);

  v48 = v5;
  v49 = 0;
  v50 = 0xE000000000000000;
  v51 = _swiftEmptyArrayStorage;
  memset(v52, 0, sizeof(v52));
  v6 = sub_100003DB8(&qword_100328A00);
  v7 = swift_allocObject(v6, 56, 7);
  *(_OWORD *)(v7 + 16) = xmmword_10025F3B0;
  v8 = objc_msgSend(v0, "mainBundle");
  v54._object = (void *)0x80000001002681B0;
  v9._countAndFlagsBits = 7562585;
  v9._object = (void *)0xE300000000000000;
  v10.value._countAndFlagsBits = 0x636E656772656D45;
  v10.value._object = (void *)0xEE00796464754279;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v54._countAndFlagsBits = 0xD00000000000002DLL;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v54);

  v13 = type metadata accessor for OptionPresentation();
  v14 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v14[1] = v12;
  v14[3]._countAndFlagsBits = 0;
  v14[3]._object = 0;
  v14[4]._countAndFlagsBits = static Color.clear.getter(v15);
  v16 = type metadata accessor for Option();
  v14[2]._countAndFlagsBits = 0;
  v14[2]._object = 0;
  v17 = swift_allocObject(v16, 56, 7);
  strcpy((char *)(v17 + 16), "CONSCIOUS_YES");
  *(_WORD *)(v17 + 30) = -4864;
  *(_QWORD *)(v17 + 32) = v14;
  *(_BYTE *)(v17 + 40) = 0;
  *(_QWORD *)(v17 + 48) = 40;
  *(_QWORD *)(v7 + 32) = v17;
  v18 = objc_msgSend(v0, "mainBundle");
  v55._countAndFlagsBits = 0xD000000000000035;
  v55._object = (void *)0x8000000100271C50;
  v19._countAndFlagsBits = 0x74616877656D6F53;
  v19._object = (void *)0xE800000000000000;
  v20.value._countAndFlagsBits = 0x636E656772656D45;
  v20.value._object = (void *)0xEE00796464754279;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v55);

  v23 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v23[1] = v22;
  v23[3]._countAndFlagsBits = 0;
  v23[3]._object = 0;
  v23[4]._countAndFlagsBits = static Color.clear.getter(v24);
  v23[2]._countAndFlagsBits = 0;
  v23[2]._object = 0;
  v25 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v25 + 16) = 0xD000000000000012;
  *(_QWORD *)(v25 + 24) = 0x8000000100271510;
  *(_QWORD *)(v25 + 32) = v23;
  *(_BYTE *)(v25 + 40) = 0;
  *(_QWORD *)(v25 + 48) = 40;
  *(_QWORD *)(v7 + 40) = v25;
  v26 = objc_msgSend(v0, "mainBundle");
  v56._object = (void *)0x80000001002681B0;
  v27._countAndFlagsBits = 28494;
  v27._object = (void *)0xE200000000000000;
  v28.value._countAndFlagsBits = 0x636E656772656D45;
  v28.value._object = (void *)0xEE00796464754279;
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  v56._countAndFlagsBits = 0xD00000000000002DLL;
  v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, v28, (NSBundle)v26, v29, v56);

  v31 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v31[1] = v30;
  v31[3]._countAndFlagsBits = 0;
  v31[3]._object = 0;
  v31[4]._countAndFlagsBits = static Color.clear.getter(v32);
  v31[2]._countAndFlagsBits = 0;
  v31[2]._object = 0;
  v33 = swift_allocObject(v16, 56, 7);
  strcpy((char *)(v33 + 16), "CONSCIOUS_NO");
  *(_BYTE *)(v33 + 29) = 0;
  *(_WORD *)(v33 + 30) = -5120;
  *(_QWORD *)(v33 + 32) = v31;
  *(_BYTE *)(v33 + 40) = 0;
  *(_QWORD *)(v33 + 48) = 40;
  *(_QWORD *)(v7 + 48) = v33;
  specialized Array._endMutation()(v33);
  v34 = swift_allocObject(v6, 48, 7);
  *(_OWORD *)(v34 + 16) = xmmword_100252A40;
  v35 = type metadata accessor for QuestionCondition();
  v36 = swift_allocObject(v35, 40, 7);
  *(_BYTE *)(v36 + 16) = 0;
  strcpy((char *)(v36 + 24), "BREATHEOTHER");
  *(_BYTE *)(v36 + 37) = 0;
  *(_WORD *)(v36 + 38) = -5120;
  *(_QWORD *)(v34 + 32) = v36;
  v37 = _s8SOSBuddy14OptionSelectedCMa_0();
  v38 = swift_allocObject(v37, 32, 7);
  *(_QWORD *)(v38 + 16) = 0xD000000000000010;
  *(_QWORD *)(v38 + 24) = 0x8000000100271530;
  v39 = type metadata accessor for NotCondition();
  v40 = swift_allocObject(v39, 32, 7);
  v41 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v41 + 16) = xmmword_10024E820;
  *(_QWORD *)(v41 + 32) = v38;
  v47 = v41;
  v42 = specialized Array._endMutation()(v41);
  *(_BYTE *)(v40 + 16) = 2;
  *(_QWORD *)(v40 + 24) = v47;
  *(_QWORD *)(v34 + 40) = v40;
  specialized Array._endMutation()(v42);
  v43 = type metadata accessor for AndCondition();
  v44 = swift_allocObject(v43, 32, 7);
  *(_BYTE *)(v44 + 16) = 0;
  *(_QWORD *)(v44 + 24) = v34;
  v45 = type metadata accessor for Question();
  swift_allocObject(v45, 160, 7);
  return sub_100085664(0x554F4943534E4F43, 0xE900000000000053, 0, (uint64_t)&v48, v7, v44, (uint64_t)_swiftEmptyArrayStorage, 7);
}

uint64_t sub_10020F8BC()
{
  void *v0;
  id v1;
  Swift::String v2;
  Swift::String_optional v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  id v7;
  Swift::String v8;
  Swift::String_optional v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v12;
  Swift::String *v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  Swift::String v18;
  Swift::String_optional v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String *v22;
  __n128 v23;
  uint64_t v24;
  id v25;
  Swift::String v26;
  Swift::String_optional v27;
  Swift::String v28;
  Swift::String v29;
  Swift::String *v30;
  __n128 v31;
  uint64_t v32;
  id v33;
  Swift::String v34;
  Swift::String_optional v35;
  Swift::String v36;
  Swift::String v37;
  Swift::String *v38;
  __n128 v39;
  uint64_t v40;
  id v41;
  Swift::String v42;
  Swift::String_optional v43;
  Swift::String v44;
  Swift::String v45;
  Swift::String *v46;
  __n128 v47;
  uint64_t v48;
  id v49;
  Swift::String v50;
  Swift::String_optional v51;
  Swift::String v52;
  Swift::String v53;
  Swift::String *v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  Swift::String v75;
  uint64_t v76;
  unint64_t v77;
  _QWORD *v78;
  _QWORD v79[3];
  Swift::String v80;
  Swift::String v81;
  Swift::String v82;
  Swift::String v83;
  Swift::String v84;
  Swift::String v85;
  Swift::String v86;

  v0 = (void *)objc_opt_self(NSBundle);
  v1 = objc_msgSend(v0, "mainBundle");
  v2._countAndFlagsBits = 0xD000000000000022;
  v80._countAndFlagsBits = 0xD00000000000002CLL;
  v80._object = (void *)0x8000000100271220;
  v2._object = (void *)0x8000000100271720;
  v3.value._countAndFlagsBits = 0x636E656772656D45;
  v3.value._object = (void *)0xEE00796464754279;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v80);

  v75 = v5;
  v76 = 0;
  v77 = 0xE000000000000000;
  v78 = _swiftEmptyArrayStorage;
  memset(v79, 0, sizeof(v79));
  v72 = sub_100003DB8(&qword_100328A00);
  v6 = swift_allocObject(v72, 80, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100253020;
  v7 = objc_msgSend(v0, "mainBundle");
  v81._object = (void *)0x8000000100271BA0;
  v8._countAndFlagsBits = 0x6150207473656843;
  v8._object = (void *)0xEA00000000006E69;
  v9.value._countAndFlagsBits = 0x636E656772656D45;
  v9.value._object = (void *)0xEE00796464754279;
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v81._countAndFlagsBits = 0xD000000000000067;
  v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v81);

  v12 = type metadata accessor for OptionPresentation();
  v13 = (Swift::String *)swift_allocObject(v12, 72, 7);
  v13[1] = v11;
  v13[3]._countAndFlagsBits = 0;
  v13[3]._object = 0;
  v13[4]._countAndFlagsBits = static Color.clear.getter(v14);
  v15 = type metadata accessor for Option();
  v13[2]._countAndFlagsBits = 0;
  v13[2]._object = 0;
  v16 = swift_allocObject(v15, 56, 7);
  strcpy((char *)(v16 + 16), "MEDTYPE_CHEST");
  *(_WORD *)(v16 + 30) = -4864;
  *(_QWORD *)(v16 + 32) = v13;
  *(_BYTE *)(v16 + 40) = 0;
  *(_QWORD *)(v16 + 48) = 40;
  *(_QWORD *)(v6 + 32) = v16;
  v17 = objc_msgSend(v0, "mainBundle");
  v18._countAndFlagsBits = 0xD000000000000010;
  v82._object = (void *)0x8000000100271BA0;
  v18._object = (void *)0x8000000100271C10;
  v19.value._countAndFlagsBits = 0x636E656772656D45;
  v19.value._object = (void *)0xEE00796464754279;
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  v82._countAndFlagsBits = 0xD000000000000067;
  v21 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, v19, (NSBundle)v17, v20, v82);

  v22 = (Swift::String *)swift_allocObject(v12, 72, 7);
  v22[1] = v21;
  v22[3]._countAndFlagsBits = 0;
  v22[3]._object = 0;
  v22[4]._countAndFlagsBits = static Color.clear.getter(v23);
  v22[2]._countAndFlagsBits = 0;
  v22[2]._object = 0;
  v24 = swift_allocObject(v15, 56, 7);
  strcpy((char *)(v24 + 16), "MEDTYPE_TRAUM");
  *(_WORD *)(v24 + 30) = -4864;
  *(_QWORD *)(v24 + 32) = v22;
  *(_BYTE *)(v24 + 40) = 0;
  *(_QWORD *)(v24 + 48) = 40;
  *(_QWORD *)(v6 + 40) = v24;
  v25 = objc_msgSend(v0, "mainBundle");
  v83._object = (void *)0x8000000100271BA0;
  v26._countAndFlagsBits = 0x7373656E6B636953;
  v26._object = (void *)0xE800000000000000;
  v27.value._countAndFlagsBits = 0x636E656772656D45;
  v27.value._object = (void *)0xEE00796464754279;
  v28._countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  v83._countAndFlagsBits = 0xD000000000000067;
  v29 = NSLocalizedString(_:tableName:bundle:value:comment:)(v26, v27, (NSBundle)v25, v28, v83);

  v30 = (Swift::String *)swift_allocObject(v12, 72, 7);
  v30[1] = v29;
  v30[3]._countAndFlagsBits = 0;
  v30[3]._object = 0;
  v30[4]._countAndFlagsBits = static Color.clear.getter(v31);
  v30[2]._countAndFlagsBits = 0;
  v30[2]._object = 0;
  v32 = swift_allocObject(v15, 56, 7);
  strcpy((char *)(v32 + 16), "MEDTYPE_SICKN");
  *(_WORD *)(v32 + 30) = -4864;
  *(_QWORD *)(v32 + 32) = v30;
  *(_BYTE *)(v32 + 40) = 0;
  *(_QWORD *)(v32 + 48) = 40;
  *(_QWORD *)(v6 + 48) = v32;
  v33 = objc_msgSend(v0, "mainBundle");
  v84._object = (void *)0x8000000100271BA0;
  v34._countAndFlagsBits = 0x656B6F727453;
  v34._object = (void *)0xE600000000000000;
  v35.value._countAndFlagsBits = 0x636E656772656D45;
  v35.value._object = (void *)0xEE00796464754279;
  v36._countAndFlagsBits = 0;
  v36._object = (void *)0xE000000000000000;
  v84._countAndFlagsBits = 0xD000000000000067;
  v37 = NSLocalizedString(_:tableName:bundle:value:comment:)(v34, v35, (NSBundle)v33, v36, v84);

  v38 = (Swift::String *)swift_allocObject(v12, 72, 7);
  v38[1] = v37;
  v38[3]._countAndFlagsBits = 0;
  v38[3]._object = 0;
  v38[4]._countAndFlagsBits = static Color.clear.getter(v39);
  v38[2]._countAndFlagsBits = 0;
  v38[2]._object = 0;
  v40 = swift_allocObject(v15, 56, 7);
  strcpy((char *)(v40 + 16), "MEDTYPE_STROK");
  *(_WORD *)(v40 + 30) = -4864;
  *(_QWORD *)(v40 + 32) = v38;
  *(_BYTE *)(v40 + 40) = 0;
  *(_QWORD *)(v40 + 48) = 40;
  *(_QWORD *)(v6 + 56) = v40;
  v41 = objc_msgSend(v0, "mainBundle");
  v85._object = (void *)0x8000000100271BA0;
  v42._countAndFlagsBits = 0x676E696E776F7244;
  v42._object = (void *)0xE800000000000000;
  v43.value._countAndFlagsBits = 0x636E656772656D45;
  v43.value._object = (void *)0xEE00796464754279;
  v44._countAndFlagsBits = 0;
  v44._object = (void *)0xE000000000000000;
  v85._countAndFlagsBits = 0xD000000000000067;
  v45 = NSLocalizedString(_:tableName:bundle:value:comment:)(v42, v43, (NSBundle)v41, v44, v85);

  v46 = (Swift::String *)swift_allocObject(v12, 72, 7);
  v46[1] = v45;
  v46[3]._countAndFlagsBits = 0;
  v46[3]._object = 0;
  v46[4]._countAndFlagsBits = static Color.clear.getter(v47);
  v46[2]._countAndFlagsBits = 0;
  v46[2]._object = 0;
  v48 = swift_allocObject(v15, 56, 7);
  strcpy((char *)(v48 + 16), "MEDTYPE_DROWN");
  *(_WORD *)(v48 + 30) = -4864;
  *(_QWORD *)(v48 + 32) = v46;
  *(_BYTE *)(v48 + 40) = 0;
  *(_QWORD *)(v48 + 48) = 40;
  *(_QWORD *)(v6 + 64) = v48;
  v49 = objc_msgSend(v0, "mainBundle");
  v86._countAndFlagsBits = 0xD000000000000066;
  v86._object = (void *)0x8000000100268440;
  v50._countAndFlagsBits = 0x726568744FLL;
  v50._object = (void *)0xE500000000000000;
  v51.value._countAndFlagsBits = 0x636E656772656D45;
  v51.value._object = (void *)0xEE00796464754279;
  v52._countAndFlagsBits = 0;
  v52._object = (void *)0xE000000000000000;
  v53 = NSLocalizedString(_:tableName:bundle:value:comment:)(v50, v51, (NSBundle)v49, v52, v86);

  v54 = (Swift::String *)swift_allocObject(v12, 72, 7);
  v54[1] = v53;
  v54[3]._countAndFlagsBits = 0;
  v54[3]._object = 0;
  v54[4]._countAndFlagsBits = static Color.clear.getter(v55);
  v54[2]._countAndFlagsBits = 0;
  v54[2]._object = 0;
  v56 = swift_allocObject(v15, 56, 7);
  strcpy((char *)(v56 + 16), "MEDTYPE_OTHER");
  *(_WORD *)(v56 + 30) = -4864;
  *(_QWORD *)(v56 + 32) = v54;
  *(_BYTE *)(v56 + 40) = 0;
  *(_QWORD *)(v56 + 48) = 40;
  *(_QWORD *)(v6 + 72) = v56;
  specialized Array._endMutation()(v56);
  v57 = swift_allocObject(v72, 56, 7);
  *(_OWORD *)(v57 + 16) = xmmword_10025F3B0;
  v58 = _s8SOSBuddy14OptionSelectedCMa_0();
  v59 = swift_allocObject(v58, 32, 7);
  strcpy((char *)(v59 + 16), "TYPE_MEDICAL");
  *(_BYTE *)(v59 + 29) = 0;
  *(_WORD *)(v59 + 30) = -5120;
  *(_QWORD *)(v57 + 32) = v59;
  v60 = swift_allocObject(v58, 32, 7);
  *(_QWORD *)(v60 + 16) = 0xD000000000000010;
  *(_QWORD *)(v60 + 24) = 0x8000000100271530;
  v61 = type metadata accessor for NotCondition();
  v62 = swift_allocObject(v61, 32, 7);
  v63 = swift_allocObject(v72, 40, 7);
  *(_OWORD *)(v63 + 16) = xmmword_10024E820;
  *(_QWORD *)(v63 + 32) = v60;
  v73 = v63;
  specialized Array._endMutation()(v63);
  *(_BYTE *)(v62 + 16) = 2;
  *(_QWORD *)(v62 + 24) = v73;
  *(_QWORD *)(v57 + 40) = v62;
  v64 = swift_allocObject(v58, 32, 7);
  strcpy((char *)(v64 + 16), "CONSCIOUS_NO");
  *(_BYTE *)(v64 + 29) = 0;
  *(_WORD *)(v64 + 30) = -5120;
  v65 = swift_allocObject(v61, 32, 7);
  v66 = swift_allocObject(v72, 40, 7);
  *(_OWORD *)(v66 + 16) = xmmword_10024E820;
  *(_QWORD *)(v66 + 32) = v64;
  v74 = v66;
  v67 = specialized Array._endMutation()(v66);
  *(_BYTE *)(v65 + 16) = 2;
  *(_QWORD *)(v65 + 24) = v74;
  *(_QWORD *)(v57 + 48) = v65;
  specialized Array._endMutation()(v67);
  v68 = type metadata accessor for AndCondition();
  v69 = swift_allocObject(v68, 32, 7);
  *(_BYTE *)(v69 + 16) = 0;
  *(_QWORD *)(v69 + 24) = v57;
  v70 = type metadata accessor for Question();
  swift_allocObject(v70, 160, 7);
  return sub_100085664(0x4550595444454DLL, 0xE700000000000000, 0, (uint64_t)&v75, v6, v69, (uint64_t)_swiftEmptyArrayStorage, 7);
}

uint64_t sub_10021014C()
{
  void *v0;
  id v1;
  Swift::String v2;
  Swift::String_optional v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  Swift::String v19;
  Swift::String_optional v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String *v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  Swift::String v35;
  uint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  _QWORD v39[3];
  Swift::String v40;
  Swift::String v41;
  Swift::String v42;

  v0 = (void *)objc_opt_self(NSBundle);
  v1 = objc_msgSend(v0, "mainBundle");
  v2._countAndFlagsBits = 0xD000000000000010;
  v40._countAndFlagsBits = 0xD00000000000002CLL;
  v40._object = (void *)0x8000000100271220;
  v2._object = (void *)0x8000000100271B80;
  v3.value._countAndFlagsBits = 0x636E656772656D45;
  v3.value._object = (void *)0xEE00796464754279;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v40);

  v35 = v5;
  v36 = 0;
  v37 = 0xE000000000000000;
  v38 = _swiftEmptyArrayStorage;
  memset(v39, 0, sizeof(v39));
  v6 = sub_100003DB8(&qword_100328A00);
  v7 = swift_allocObject(v6, 48, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100252A40;
  v8 = objc_msgSend(v0, "mainBundle");
  v41._object = (void *)0x8000000100271B40;
  v9._countAndFlagsBits = 0x6C4F20726F203533;
  v9._object = (void *)0xEB00000000726564;
  v10.value._countAndFlagsBits = 0x636E656772656D45;
  v10.value._object = (void *)0xEE00796464754279;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v41._countAndFlagsBits = 0xD000000000000038;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v41);

  v13 = type metadata accessor for OptionPresentation();
  v14 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v14[1] = v12;
  v14[3]._countAndFlagsBits = 0;
  v14[3]._object = 0;
  v14[4]._countAndFlagsBits = static Color.clear.getter(v15);
  v16 = type metadata accessor for Option();
  v14[2]._countAndFlagsBits = 0;
  v14[2]._object = 0;
  v17 = swift_allocObject(v16, 56, 7);
  strcpy((char *)(v17 + 16), "AGEME_35PLUS");
  *(_BYTE *)(v17 + 29) = 0;
  *(_WORD *)(v17 + 30) = -5120;
  *(_QWORD *)(v17 + 32) = v14;
  *(_BYTE *)(v17 + 40) = 0;
  *(_QWORD *)(v17 + 48) = 40;
  *(_QWORD *)(v7 + 32) = v17;
  v18 = objc_msgSend(v0, "mainBundle");
  v42._object = (void *)0x8000000100271B40;
  v19._countAndFlagsBits = 0x3533207265646E55;
  v19._object = (void *)0xE800000000000000;
  v20.value._countAndFlagsBits = 0x636E656772656D45;
  v20.value._object = (void *)0xEE00796464754279;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v42._countAndFlagsBits = 0xD000000000000038;
  v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v42);

  v23 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v23[1] = v22;
  v23[3]._countAndFlagsBits = 0;
  v23[3]._object = 0;
  v23[4]._countAndFlagsBits = static Color.clear.getter(v24);
  v23[2]._countAndFlagsBits = 0;
  v23[2]._object = 0;
  v25 = swift_allocObject(v16, 56, 7);
  strcpy((char *)(v25 + 16), "AGEME_BELOW35");
  *(_WORD *)(v25 + 30) = -4864;
  *(_QWORD *)(v25 + 32) = v23;
  *(_BYTE *)(v25 + 40) = 0;
  *(_QWORD *)(v25 + 48) = 40;
  *(_QWORD *)(v7 + 40) = v25;
  specialized Array._endMutation()(v25);
  v26 = swift_allocObject(v6, 48, 7);
  *(_OWORD *)(v26 + 16) = xmmword_100252A40;
  v27 = _s8SOSBuddy14OptionSelectedCMa_0();
  v28 = swift_allocObject(v27, 32, 7);
  *(_QWORD *)(v28 + 16) = 0x454D5F4F4857;
  *(_QWORD *)(v28 + 24) = 0xE600000000000000;
  *(_QWORD *)(v26 + 32) = v28;
  v29 = swift_allocObject(v27, 32, 7);
  strcpy((char *)(v29 + 16), "MEDTYPE_CHEST");
  *(_WORD *)(v29 + 30) = -4864;
  *(_QWORD *)(v26 + 40) = v29;
  specialized Array._endMutation()(v29);
  v30 = v26;
  v31 = type metadata accessor for AndCondition();
  v32 = swift_allocObject(v31, 32, 7);
  *(_BYTE *)(v32 + 16) = 0;
  *(_QWORD *)(v32 + 24) = v30;
  v33 = type metadata accessor for Question();
  swift_allocObject(v33, 160, 7);
  return sub_100085664(0x454D454741, 0xE500000000000000, 0, (uint64_t)&v35, v7, v32, (uint64_t)_swiftEmptyArrayStorage, 7);
}

uint64_t sub_100210568()
{
  void *v0;
  id v1;
  Swift::String v2;
  Swift::String_optional v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  Swift::String v19;
  Swift::String_optional v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String *v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  Swift::String v38;
  uint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  _QWORD v42[3];
  Swift::String v43;
  Swift::String v44;
  Swift::String v45;

  v0 = (void *)objc_opt_self(NSBundle);
  v1 = objc_msgSend(v0, "mainBundle");
  v2._countAndFlagsBits = 0xD000000000000011;
  v43._countAndFlagsBits = 0xD00000000000002CLL;
  v43._object = (void *)0x8000000100271220;
  v2._object = (void *)0x8000000100271B20;
  v3.value._countAndFlagsBits = 0x636E656772656D45;
  v3.value._object = (void *)0xEE00796464754279;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v43);

  v38 = v5;
  v39 = 0;
  v40 = 0xE000000000000000;
  v41 = _swiftEmptyArrayStorage;
  memset(v42, 0, sizeof(v42));
  v6 = sub_100003DB8(&qword_100328A00);
  v7 = swift_allocObject(v6, 48, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100252A40;
  v8 = objc_msgSend(v0, "mainBundle");
  v44._object = (void *)0x8000000100271B40;
  v9._countAndFlagsBits = 0x6C4F20726F203533;
  v9._object = (void *)0xEB00000000726564;
  v10.value._countAndFlagsBits = 0x636E656772656D45;
  v10.value._object = (void *)0xEE00796464754279;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v44._countAndFlagsBits = 0xD000000000000038;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v44);

  v13 = type metadata accessor for OptionPresentation();
  v14 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v14[1] = v12;
  v14[3]._countAndFlagsBits = 0;
  v14[3]._object = 0;
  v14[4]._countAndFlagsBits = static Color.clear.getter(v15);
  v16 = type metadata accessor for Option();
  v14[2]._countAndFlagsBits = 0;
  v14[2]._object = 0;
  v17 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v17 + 16) = 0x524548544F454741;
  *(_QWORD *)(v17 + 24) = 0xEF53554C5035335FLL;
  *(_QWORD *)(v17 + 32) = v14;
  *(_BYTE *)(v17 + 40) = 0;
  *(_QWORD *)(v17 + 48) = 40;
  *(_QWORD *)(v7 + 32) = v17;
  v18 = objc_msgSend(v0, "mainBundle");
  v45._object = (void *)0x8000000100271B40;
  v19._countAndFlagsBits = 0x3533207265646E55;
  v19._object = (void *)0xE800000000000000;
  v20.value._countAndFlagsBits = 0x636E656772656D45;
  v20.value._object = (void *)0xEE00796464754279;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v45._countAndFlagsBits = 0xD000000000000038;
  v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v45);

  v23 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v23[1] = v22;
  v23[3]._countAndFlagsBits = 0;
  v23[3]._object = 0;
  v23[4]._countAndFlagsBits = static Color.clear.getter(v24);
  v23[2]._countAndFlagsBits = 0;
  v23[2]._object = 0;
  v25 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v25 + 16) = 0xD000000000000010;
  *(_QWORD *)(v25 + 24) = 0x80000001002714F0;
  *(_QWORD *)(v25 + 32) = v23;
  *(_BYTE *)(v25 + 40) = 0;
  *(_QWORD *)(v25 + 48) = 40;
  *(_QWORD *)(v7 + 40) = v25;
  specialized Array._endMutation()(v25);
  v26 = swift_allocObject(v6, 48, 7);
  *(_OWORD *)(v26 + 16) = xmmword_100252A40;
  v27 = _s8SOSBuddy14OptionSelectedCMa_0();
  v28 = swift_allocObject(v27, 32, 7);
  *(_QWORD *)(v28 + 16) = 0x454D5F4F4857;
  *(_QWORD *)(v28 + 24) = 0xE600000000000000;
  v29 = type metadata accessor for NotCondition();
  v30 = swift_allocObject(v29, 32, 7);
  v31 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v31 + 16) = xmmword_10024E820;
  *(_QWORD *)(v31 + 32) = v28;
  v37 = v31;
  specialized Array._endMutation()(v31);
  *(_BYTE *)(v30 + 16) = 2;
  *(_QWORD *)(v30 + 24) = v37;
  *(_QWORD *)(v26 + 32) = v30;
  v32 = swift_allocObject(v27, 32, 7);
  strcpy((char *)(v32 + 16), "MEDTYPE_CHEST");
  *(_WORD *)(v32 + 30) = -4864;
  *(_QWORD *)(v26 + 40) = v32;
  specialized Array._endMutation()(v32);
  v33 = type metadata accessor for AndCondition();
  v34 = swift_allocObject(v33, 32, 7);
  *(_BYTE *)(v34 + 16) = 0;
  *(_QWORD *)(v34 + 24) = v26;
  v35 = type metadata accessor for Question();
  swift_allocObject(v35, 160, 7);
  return sub_100085664(0x524548544F454741, 0xE800000000000000, 0, (uint64_t)&v38, v7, v34, (uint64_t)_swiftEmptyArrayStorage, 7);
}

uint64_t sub_1002109E0()
{
  void *v0;
  id v1;
  Swift::String v2;
  Swift::String_optional v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  Swift::String v19;
  Swift::String_optional v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String *v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::String v31;
  uint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  _QWORD v35[3];
  Swift::String v36;
  Swift::String v37;
  Swift::String v38;

  v0 = (void *)objc_opt_self(NSBundle);
  v1 = objc_msgSend(v0, "mainBundle");
  v2._countAndFlagsBits = 0xD00000000000001ELL;
  v36._countAndFlagsBits = 0xD00000000000002CLL;
  v36._object = (void *)0x8000000100271220;
  v2._object = (void *)0x8000000100271B00;
  v3.value._countAndFlagsBits = 0x636E656772656D45;
  v3.value._object = (void *)0xEE00796464754279;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v36);

  v31 = v5;
  v32 = 0;
  v33 = 0xE000000000000000;
  v34 = _swiftEmptyArrayStorage;
  memset(v35, 0, sizeof(v35));
  v6 = sub_100003DB8(&qword_100328A00);
  v7 = swift_allocObject(v6, 48, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100252A40;
  v8 = objc_msgSend(v0, "mainBundle");
  v37._object = (void *)0x80000001002681B0;
  v9._countAndFlagsBits = 7562585;
  v9._object = (void *)0xE300000000000000;
  v10.value._countAndFlagsBits = 0x636E656772656D45;
  v10.value._object = (void *)0xEE00796464754279;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v37._countAndFlagsBits = 0xD00000000000002DLL;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v37);

  v13 = type metadata accessor for OptionPresentation();
  v14 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v14[1] = v12;
  v14[3]._countAndFlagsBits = 0;
  v14[3]._object = 0;
  v14[4]._countAndFlagsBits = static Color.clear.getter(v15);
  v16 = type metadata accessor for Option();
  v14[2]._countAndFlagsBits = 0;
  v14[2]._object = 0;
  v17 = swift_allocObject(v16, 56, 7);
  strcpy((char *)(v17 + 16), "IMNTDNGR_YES");
  *(_BYTE *)(v17 + 29) = 0;
  *(_WORD *)(v17 + 30) = -5120;
  *(_QWORD *)(v17 + 32) = v14;
  *(_BYTE *)(v17 + 40) = 0;
  *(_QWORD *)(v17 + 48) = 40;
  *(_QWORD *)(v7 + 32) = v17;
  v18 = objc_msgSend(v0, "mainBundle");
  v38._object = (void *)0x80000001002681B0;
  v19._countAndFlagsBits = 28494;
  v19._object = (void *)0xE200000000000000;
  v20.value._countAndFlagsBits = 0x636E656772656D45;
  v20.value._object = (void *)0xEE00796464754279;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v38._countAndFlagsBits = 0xD00000000000002DLL;
  v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v38);

  v23 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v23[1] = v22;
  v23[3]._countAndFlagsBits = 0;
  v23[3]._object = 0;
  v23[4]._countAndFlagsBits = static Color.clear.getter(v24);
  v23[2]._countAndFlagsBits = 0;
  v23[2]._object = 0;
  v25 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v25 + 16) = 0x52474E44544E4D49;
  *(_QWORD *)(v25 + 24) = 0xEB000000004F4E5FLL;
  *(_QWORD *)(v25 + 32) = v23;
  *(_BYTE *)(v25 + 40) = 0;
  *(_QWORD *)(v25 + 48) = 40;
  *(_QWORD *)(v7 + 40) = v25;
  specialized Array._endMutation()(v25);
  v26 = v7;
  v27 = _s8SOSBuddy14OptionSelectedCMa_0();
  v28 = swift_allocObject(v27, 32, 7);
  *(_QWORD *)(v28 + 16) = 0x4C4F505F45505954;
  *(_QWORD *)(v28 + 24) = 0xEB00000000454349;
  v29 = type metadata accessor for Question();
  swift_allocObject(v29, 160, 7);
  return sub_100085664(0x52474E44544E4D49, 0xE800000000000000, 0, (uint64_t)&v31, v26, v28, (uint64_t)_swiftEmptyArrayStorage, 7);
}

uint64_t sub_100210D4C()
{
  void *v0;
  id v1;
  Swift::String v2;
  Swift::String_optional v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  Swift::String v19;
  Swift::String_optional v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String *v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::String v31;
  uint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  _QWORD v35[3];
  Swift::String v36;
  Swift::String v37;
  Swift::String v38;

  v0 = (void *)objc_opt_self(NSBundle);
  v1 = objc_msgSend(v0, "mainBundle");
  v2._countAndFlagsBits = 0xD000000000000015;
  v36._countAndFlagsBits = 0xD00000000000002CLL;
  v36._object = (void *)0x8000000100271220;
  v2._object = (void *)0x8000000100271AE0;
  v3.value._countAndFlagsBits = 0x636E656772656D45;
  v3.value._object = (void *)0xEE00796464754279;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v36);

  v31 = v5;
  v32 = 0;
  v33 = 0xE000000000000000;
  v34 = _swiftEmptyArrayStorage;
  memset(v35, 0, sizeof(v35));
  v6 = sub_100003DB8(&qword_100328A00);
  v7 = swift_allocObject(v6, 48, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100252A40;
  v8 = objc_msgSend(v0, "mainBundle");
  v37._object = (void *)0x80000001002681B0;
  v9._countAndFlagsBits = 7562585;
  v9._object = (void *)0xE300000000000000;
  v10.value._countAndFlagsBits = 0x636E656772656D45;
  v10.value._object = (void *)0xEE00796464754279;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v37._countAndFlagsBits = 0xD00000000000002DLL;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v37);

  v13 = type metadata accessor for OptionPresentation();
  v14 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v14[1] = v12;
  v14[3]._countAndFlagsBits = 0;
  v14[3]._object = 0;
  v14[4]._countAndFlagsBits = static Color.clear.getter(v15);
  v16 = type metadata accessor for Option();
  v14[2]._countAndFlagsBits = 0;
  v14[2]._object = 0;
  v17 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v17 + 16) = 0x595F4E4F50414557;
  *(_QWORD *)(v17 + 24) = 0xEA00000000005345;
  *(_QWORD *)(v17 + 32) = v14;
  *(_BYTE *)(v17 + 40) = 0;
  *(_QWORD *)(v17 + 48) = 40;
  *(_QWORD *)(v7 + 32) = v17;
  v18 = objc_msgSend(v0, "mainBundle");
  v38._object = (void *)0x80000001002681B0;
  v19._countAndFlagsBits = 28494;
  v19._object = (void *)0xE200000000000000;
  v20.value._countAndFlagsBits = 0x636E656772656D45;
  v20.value._object = (void *)0xEE00796464754279;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v38._countAndFlagsBits = 0xD00000000000002DLL;
  v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v38);

  v23 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v23[1] = v22;
  v23[3]._countAndFlagsBits = 0;
  v23[3]._object = 0;
  v23[4]._countAndFlagsBits = static Color.clear.getter(v24);
  v23[2]._countAndFlagsBits = 0;
  v23[2]._object = 0;
  v25 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v25 + 16) = 0x4E5F4E4F50414557;
  *(_QWORD *)(v25 + 24) = 0xE90000000000004FLL;
  *(_QWORD *)(v25 + 32) = v23;
  *(_BYTE *)(v25 + 40) = 0;
  *(_QWORD *)(v25 + 48) = 40;
  *(_QWORD *)(v7 + 40) = v25;
  specialized Array._endMutation()(v25);
  v26 = v7;
  v27 = type metadata accessor for QuestionCondition();
  v28 = swift_allocObject(v27, 40, 7);
  *(_BYTE *)(v28 + 16) = 0;
  *(_QWORD *)(v28 + 24) = 0x52474E44544E4D49;
  *(_QWORD *)(v28 + 32) = 0xE800000000000000;
  v29 = type metadata accessor for Question();
  swift_allocObject(v29, 160, 7);
  return sub_100085664(0x4E4F50414557, 0xE600000000000000, 0, (uint64_t)&v31, v26, v28, (uint64_t)_swiftEmptyArrayStorage, 7);
}

uint64_t sub_1002110B4()
{
  void *v0;
  id v1;
  Swift::String v2;
  Swift::String_optional v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  Swift::String v19;
  Swift::String_optional v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String *v23;
  __n128 v24;
  uint64_t v25;
  id v26;
  Swift::String v27;
  Swift::String_optional v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String *v31;
  __n128 v32;
  uint64_t v33;
  id v34;
  Swift::String v35;
  Swift::String_optional v36;
  Swift::String v37;
  Swift::String v38;
  Swift::String *v39;
  __n128 v40;
  uint64_t v41;
  id v42;
  Swift::String v43;
  Swift::String_optional v44;
  Swift::String v45;
  Swift::String v46;
  Swift::String *v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  Swift::String v55;
  uint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  _QWORD v59[3];
  Swift::String v60;
  Swift::String v61;
  Swift::String v62;
  Swift::String v63;
  Swift::String v64;
  Swift::String v65;

  v0 = (void *)objc_opt_self(NSBundle);
  v1 = objc_msgSend(v0, "mainBundle");
  v2._countAndFlagsBits = 0xD000000000000022;
  v60._countAndFlagsBits = 0xD00000000000002CLL;
  v60._object = (void *)0x8000000100271220;
  v2._object = (void *)0x8000000100271720;
  v3.value._countAndFlagsBits = 0x636E656772656D45;
  v3.value._object = (void *)0xEE00796464754279;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v60);

  v55 = v5;
  v56 = 0;
  v57 = 0xE000000000000000;
  v58 = _swiftEmptyArrayStorage;
  memset(v59, 0, sizeof(v59));
  v6 = sub_100003DB8(&qword_100328A00);
  v7 = swift_allocObject(v6, 72, 7);
  *(_OWORD *)(v7 + 16) = xmmword_10025F350;
  v8 = objc_msgSend(v0, "mainBundle");
  v61._object = (void *)0x8000000100271A60;
  v9._countAndFlagsBits = 0x746C7561737341;
  v9._object = (void *)0xE700000000000000;
  v10.value._countAndFlagsBits = 0x636E656772656D45;
  v10.value._object = (void *)0xEE00796464754279;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v61._countAndFlagsBits = 0xD00000000000005ALL;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v61);

  v13 = type metadata accessor for OptionPresentation();
  v14 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v14[1] = v12;
  v14[3]._countAndFlagsBits = 0;
  v14[3]._object = 0;
  v14[4]._countAndFlagsBits = static Color.clear.getter(v15);
  v16 = type metadata accessor for Option();
  v14[2]._countAndFlagsBits = 0;
  v14[2]._object = 0;
  v17 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v17 + 16) = 0xD000000000000010;
  *(_QWORD *)(v17 + 24) = 0x80000001002714D0;
  *(_QWORD *)(v17 + 32) = v14;
  *(_BYTE *)(v17 + 40) = 0;
  *(_QWORD *)(v17 + 48) = 40;
  *(_QWORD *)(v7 + 32) = v17;
  v18 = objc_msgSend(v0, "mainBundle");
  v62._object = (void *)0x8000000100271A60;
  v19._countAndFlagsBits = 0x656D737361726148;
  v19._object = (void *)0xEA0000000000746ELL;
  v20.value._countAndFlagsBits = 0x636E656772656D45;
  v20.value._object = (void *)0xEE00796464754279;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v62._countAndFlagsBits = 0xD00000000000005ALL;
  v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v62);

  v23 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v23[1] = v22;
  v23[3]._countAndFlagsBits = 0;
  v23[3]._object = 0;
  v23[4]._countAndFlagsBits = static Color.clear.getter(v24);
  v23[2]._countAndFlagsBits = 0;
  v23[2]._object = 0;
  v25 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v25 + 16) = 0xD000000000000011;
  *(_QWORD *)(v25 + 24) = 0x80000001002714B0;
  *(_QWORD *)(v25 + 32) = v23;
  *(_BYTE *)(v25 + 40) = 0;
  *(_QWORD *)(v25 + 48) = 40;
  *(_QWORD *)(v7 + 40) = v25;
  v26 = objc_msgSend(v0, "mainBundle");
  v63._object = (void *)0x8000000100271A60;
  v27._countAndFlagsBits = 0x7265647572746E49;
  v27._object = (void *)0xE800000000000000;
  v28.value._countAndFlagsBits = 0x636E656772656D45;
  v28.value._object = (void *)0xEE00796464754279;
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  v63._countAndFlagsBits = 0xD00000000000005ALL;
  v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, v28, (NSBundle)v26, v29, v63);

  v31 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v31[1] = v30;
  v31[3]._countAndFlagsBits = 0;
  v31[3]._object = 0;
  v31[4]._countAndFlagsBits = static Color.clear.getter(v32);
  v31[2]._countAndFlagsBits = 0;
  v31[2]._object = 0;
  v33 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v33 + 16) = 0xD000000000000013;
  *(_QWORD *)(v33 + 24) = 0x8000000100271470;
  *(_QWORD *)(v33 + 32) = v31;
  *(_BYTE *)(v33 + 40) = 0;
  *(_QWORD *)(v33 + 48) = 40;
  *(_QWORD *)(v7 + 48) = v33;
  v34 = objc_msgSend(v0, "mainBundle");
  v64._object = (void *)0x8000000100271A60;
  v35._object = (void *)0x8000000100271AC0;
  v35._countAndFlagsBits = 0xD000000000000013;
  v36.value._countAndFlagsBits = 0x636E656772656D45;
  v36.value._object = (void *)0xEE00796464754279;
  v37._countAndFlagsBits = 0;
  v37._object = (void *)0xE000000000000000;
  v64._countAndFlagsBits = 0xD00000000000005ALL;
  v38 = NSLocalizedString(_:tableName:bundle:value:comment:)(v35, v36, (NSBundle)v34, v37, v64);

  v39 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v39[1] = v38;
  v39[3]._countAndFlagsBits = 0;
  v39[3]._object = 0;
  v39[4]._countAndFlagsBits = static Color.clear.getter(v40);
  v39[2]._countAndFlagsBits = 0;
  v39[2]._object = 0;
  v41 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v41 + 16) = 0xD000000000000013;
  *(_QWORD *)(v41 + 24) = 0x8000000100271490;
  *(_QWORD *)(v41 + 32) = v39;
  *(_BYTE *)(v41 + 40) = 0;
  *(_QWORD *)(v41 + 48) = 40;
  *(_QWORD *)(v7 + 56) = v41;
  v42 = objc_msgSend(v0, "mainBundle");
  v65._countAndFlagsBits = 0xD000000000000066;
  v65._object = (void *)0x8000000100268440;
  v43._countAndFlagsBits = 0x726568744FLL;
  v43._object = (void *)0xE500000000000000;
  v44.value._countAndFlagsBits = 0x636E656772656D45;
  v44.value._object = (void *)0xEE00796464754279;
  v45._countAndFlagsBits = 0;
  v45._object = (void *)0xE000000000000000;
  v46 = NSLocalizedString(_:tableName:bundle:value:comment:)(v43, v44, (NSBundle)v42, v45, v65);

  v47 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v47[1] = v46;
  v47[3]._countAndFlagsBits = 0;
  v47[3]._object = 0;
  v47[4]._countAndFlagsBits = static Color.clear.getter(v48);
  v47[2]._countAndFlagsBits = 0;
  v47[2]._object = 0;
  v49 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v49 + 16) = 0xD000000000000010;
  *(_QWORD *)(v49 + 24) = 0x8000000100271450;
  *(_QWORD *)(v49 + 32) = v47;
  *(_BYTE *)(v49 + 40) = 0;
  *(_QWORD *)(v49 + 48) = 40;
  *(_QWORD *)(v7 + 64) = v49;
  specialized Array._endMutation()(v49);
  v50 = v7;
  v51 = type metadata accessor for QuestionCondition();
  v52 = swift_allocObject(v51, 40, 7);
  *(_BYTE *)(v52 + 16) = 0;
  *(_QWORD *)(v52 + 24) = 0x4E4F50414557;
  *(_QWORD *)(v52 + 32) = 0xE600000000000000;
  v53 = type metadata accessor for Question();
  swift_allocObject(v53, 160, 7);
  return sub_100085664(0x59544543494C4F50, 0xEA00000000004550, 0, (uint64_t)&v55, v50, v52, (uint64_t)_swiftEmptyArrayStorage, 7);
}

uint64_t sub_1002116DC()
{
  void *v0;
  id v1;
  Swift::String v2;
  Swift::String_optional v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  Swift::String v19;
  Swift::String_optional v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String *v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  Swift::String v35;
  uint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  _QWORD v39[3];
  Swift::String v40;
  Swift::String v41;
  Swift::String v42;

  v0 = (void *)objc_opt_self(NSBundle);
  v1 = objc_msgSend(v0, "mainBundle");
  v2._countAndFlagsBits = 0xD00000000000001BLL;
  v40._countAndFlagsBits = 0xD00000000000002CLL;
  v40._object = (void *)0x8000000100271220;
  v2._object = (void *)0x8000000100271A40;
  v3.value._countAndFlagsBits = 0x636E656772656D45;
  v3.value._object = (void *)0xEE00796464754279;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v40);

  v35 = v5;
  v36 = 0;
  v37 = 0xE000000000000000;
  v38 = _swiftEmptyArrayStorage;
  memset(v39, 0, sizeof(v39));
  v6 = sub_100003DB8(&qword_100328A00);
  v7 = swift_allocObject(v6, 48, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100252A40;
  v8 = objc_msgSend(v0, "mainBundle");
  v41._object = (void *)0x80000001002681B0;
  v9._countAndFlagsBits = 7562585;
  v9._object = (void *)0xE300000000000000;
  v10.value._countAndFlagsBits = 0x636E656772656D45;
  v10.value._object = (void *)0xEE00796464754279;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v41._countAndFlagsBits = 0xD00000000000002DLL;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v41);

  v13 = type metadata accessor for OptionPresentation();
  v14 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v14[1] = v12;
  v14[3]._countAndFlagsBits = 0;
  v14[3]._object = 0;
  v14[4]._countAndFlagsBits = static Color.clear.getter(v15);
  v16 = type metadata accessor for Option();
  v14[2]._countAndFlagsBits = 0;
  v14[2]._object = 0;
  v17 = swift_allocObject(v16, 56, 7);
  strcpy((char *)(v17 + 16), "DOMESTIC_YES");
  *(_BYTE *)(v17 + 29) = 0;
  *(_WORD *)(v17 + 30) = -5120;
  *(_QWORD *)(v17 + 32) = v14;
  *(_BYTE *)(v17 + 40) = 0;
  *(_QWORD *)(v17 + 48) = 40;
  *(_QWORD *)(v7 + 32) = v17;
  v18 = objc_msgSend(v0, "mainBundle");
  v42._object = (void *)0x80000001002681B0;
  v19._countAndFlagsBits = 28494;
  v19._object = (void *)0xE200000000000000;
  v20.value._countAndFlagsBits = 0x636E656772656D45;
  v20.value._object = (void *)0xEE00796464754279;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v42._countAndFlagsBits = 0xD00000000000002DLL;
  v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v42);

  v23 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v23[1] = v22;
  v23[3]._countAndFlagsBits = 0;
  v23[3]._object = 0;
  v23[4]._countAndFlagsBits = static Color.clear.getter(v24);
  v23[2]._countAndFlagsBits = 0;
  v23[2]._object = 0;
  v25 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v25 + 16) = 0x43495453454D4F44;
  *(_QWORD *)(v25 + 24) = 0xEB000000004F4E5FLL;
  *(_QWORD *)(v25 + 32) = v23;
  *(_BYTE *)(v25 + 40) = 0;
  *(_QWORD *)(v25 + 48) = 40;
  *(_QWORD *)(v7 + 40) = v25;
  specialized Array._endMutation()(v25);
  v26 = swift_allocObject(v6, 48, 7);
  *(_OWORD *)(v26 + 16) = xmmword_100252A40;
  v27 = _s8SOSBuddy14OptionSelectedCMa_0();
  v28 = swift_allocObject(v27, 32, 7);
  *(_QWORD *)(v28 + 16) = 0xD000000000000010;
  *(_QWORD *)(v28 + 24) = 0x80000001002714D0;
  *(_QWORD *)(v26 + 32) = v28;
  v29 = swift_allocObject(v27, 32, 7);
  *(_QWORD *)(v29 + 16) = 0xD000000000000011;
  *(_QWORD *)(v29 + 24) = 0x80000001002714B0;
  *(_QWORD *)(v26 + 40) = v29;
  specialized Array._endMutation()(v29);
  v30 = v26;
  v31 = type metadata accessor for OrCondition();
  v32 = swift_allocObject(v31, 32, 7);
  *(_BYTE *)(v32 + 16) = 1;
  *(_QWORD *)(v32 + 24) = v30;
  v33 = type metadata accessor for Question();
  swift_allocObject(v33, 160, 7);
  return sub_100085664(0x43495453454D4F44, 0xE800000000000000, 0, (uint64_t)&v35, v7, v32, (uint64_t)_swiftEmptyArrayStorage, 7);
}

uint64_t sub_100211AD8()
{
  void *v0;
  id v1;
  Swift::String v2;
  Swift::String_optional v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  Swift::String v19;
  Swift::String_optional v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String *v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::String v31;
  uint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  _QWORD v35[3];
  Swift::String v36;
  Swift::String v37;
  Swift::String v38;

  v0 = (void *)objc_opt_self(NSBundle);
  v1 = objc_msgSend(v0, "mainBundle");
  v2._countAndFlagsBits = 0xD000000000000012;
  v36._countAndFlagsBits = 0xD00000000000002CLL;
  v36._object = (void *)0x8000000100271220;
  v2._object = (void *)0x8000000100271A20;
  v3.value._countAndFlagsBits = 0x636E656772656D45;
  v3.value._object = (void *)0xEE00796464754279;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v36);

  v31 = v5;
  v32 = 0;
  v33 = 0xE000000000000000;
  v34 = _swiftEmptyArrayStorage;
  memset(v35, 0, sizeof(v35));
  v6 = sub_100003DB8(&qword_100328A00);
  v7 = swift_allocObject(v6, 48, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100252A40;
  v8 = objc_msgSend(v0, "mainBundle");
  v37._object = (void *)0x80000001002681B0;
  v9._countAndFlagsBits = 7562585;
  v9._object = (void *)0xE300000000000000;
  v10.value._countAndFlagsBits = 0x636E656772656D45;
  v10.value._object = (void *)0xEE00796464754279;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v37._countAndFlagsBits = 0xD00000000000002DLL;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v37);

  v13 = type metadata accessor for OptionPresentation();
  v14 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v14[1] = v12;
  v14[3]._countAndFlagsBits = 0;
  v14[3]._object = 0;
  v14[4]._countAndFlagsBits = static Color.clear.getter(v15);
  v16 = type metadata accessor for Option();
  v14[2]._countAndFlagsBits = 0;
  v14[2]._object = 0;
  v17 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v17 + 16) = 0x595F455249464E4FLL;
  *(_QWORD *)(v17 + 24) = 0xEA00000000005345;
  *(_QWORD *)(v17 + 32) = v14;
  *(_BYTE *)(v17 + 40) = 0;
  *(_QWORD *)(v17 + 48) = 40;
  *(_QWORD *)(v7 + 32) = v17;
  v18 = objc_msgSend(v0, "mainBundle");
  v38._object = (void *)0x80000001002681B0;
  v19._countAndFlagsBits = 28494;
  v19._object = (void *)0xE200000000000000;
  v20.value._countAndFlagsBits = 0x636E656772656D45;
  v20.value._object = (void *)0xEE00796464754279;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v38._countAndFlagsBits = 0xD00000000000002DLL;
  v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v38);

  v23 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v23[1] = v22;
  v23[3]._countAndFlagsBits = 0;
  v23[3]._object = 0;
  v23[4]._countAndFlagsBits = static Color.clear.getter(v24);
  v23[2]._countAndFlagsBits = 0;
  v23[2]._object = 0;
  v25 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v25 + 16) = 0x4E5F455249464E4FLL;
  *(_QWORD *)(v25 + 24) = 0xE90000000000004FLL;
  *(_QWORD *)(v25 + 32) = v23;
  *(_BYTE *)(v25 + 40) = 0;
  *(_QWORD *)(v25 + 48) = 40;
  *(_QWORD *)(v7 + 40) = v25;
  specialized Array._endMutation()(v25);
  v26 = v7;
  v27 = _s8SOSBuddy14OptionSelectedCMa_0();
  v28 = swift_allocObject(v27, 32, 7);
  *(_QWORD *)(v28 + 16) = 0x5249465F45505954;
  *(_QWORD *)(v28 + 24) = 0xE900000000000045;
  v29 = type metadata accessor for Question();
  swift_allocObject(v29, 160, 7);
  return sub_100085664(0x455249464E4FLL, 0xE600000000000000, 0, (uint64_t)&v31, v26, v28, (uint64_t)_swiftEmptyArrayStorage, 7);
}

uint64_t sub_100211E40()
{
  void *v0;
  id v1;
  Swift::String v2;
  Swift::String_optional v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  id v7;
  Swift::String v8;
  Swift::String_optional v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v12;
  Swift::String *v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  Swift::String v18;
  Swift::String_optional v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String *v22;
  __n128 v23;
  uint64_t v24;
  id v25;
  Swift::String v26;
  Swift::String_optional v27;
  Swift::String v28;
  Swift::String v29;
  Swift::String *v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  Swift::String v44;
  uint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  _QWORD v48[3];
  Swift::String v49;
  Swift::String v50;
  Swift::String v51;
  Swift::String v52;

  v0 = (void *)objc_opt_self(NSBundle);
  v1 = objc_msgSend(v0, "mainBundle");
  v2._countAndFlagsBits = 0xD000000000000012;
  v49._countAndFlagsBits = 0xD00000000000002CLL;
  v49._object = (void *)0x8000000100271220;
  v2._object = (void *)0x8000000100271610;
  v3.value._countAndFlagsBits = 0x636E656772656D45;
  v3.value._object = (void *)0xEE00796464754279;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v49);

  v44 = v5;
  v45 = 0;
  v46 = 0xE000000000000000;
  v47 = _swiftEmptyArrayStorage;
  memset(v48, 0, sizeof(v48));
  v43 = sub_100003DB8(&qword_100328A00);
  v6 = swift_allocObject(v43, 56, 7);
  *(_OWORD *)(v6 + 16) = xmmword_10025F3B0;
  v7 = objc_msgSend(v0, "mainBundle");
  v50._object = (void *)0x80000001002681B0;
  v8._countAndFlagsBits = 7562585;
  v8._object = (void *)0xE300000000000000;
  v9.value._countAndFlagsBits = 0x636E656772656D45;
  v9.value._object = (void *)0xEE00796464754279;
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v50._countAndFlagsBits = 0xD00000000000002DLL;
  v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v50);

  v12 = type metadata accessor for OptionPresentation();
  v13 = (Swift::String *)swift_allocObject(v12, 72, 7);
  v13[1] = v11;
  v13[3]._countAndFlagsBits = 0;
  v13[3]._object = 0;
  v13[4]._countAndFlagsBits = static Color.clear.getter(v14);
  v15 = type metadata accessor for Option();
  v13[2]._countAndFlagsBits = 0;
  v13[2]._object = 0;
  v16 = swift_allocObject(v15, 56, 7);
  *(_QWORD *)(v16 + 16) = 0x5F44455050415254;
  *(_QWORD *)(v16 + 24) = 0xEB00000000534559;
  *(_QWORD *)(v16 + 32) = v13;
  *(_BYTE *)(v16 + 40) = 0;
  *(_QWORD *)(v16 + 48) = 40;
  *(_QWORD *)(v6 + 32) = v16;
  v17 = objc_msgSend(v0, "mainBundle");
  v51._object = (void *)0x80000001002681B0;
  v18._countAndFlagsBits = 28494;
  v18._object = (void *)0xE200000000000000;
  v19.value._countAndFlagsBits = 0x636E656772656D45;
  v19.value._object = (void *)0xEE00796464754279;
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  v51._countAndFlagsBits = 0xD00000000000002DLL;
  v21 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, v19, (NSBundle)v17, v20, v51);

  v22 = (Swift::String *)swift_allocObject(v12, 72, 7);
  v22[1] = v21;
  v22[3]._countAndFlagsBits = 0;
  v22[3]._object = 0;
  v22[4]._countAndFlagsBits = static Color.clear.getter(v23);
  v22[2]._countAndFlagsBits = 0;
  v22[2]._object = 0;
  v24 = swift_allocObject(v15, 56, 7);
  *(_QWORD *)(v24 + 16) = 0x5F44455050415254;
  *(_QWORD *)(v24 + 24) = 0xEA00000000004F4ELL;
  *(_QWORD *)(v24 + 32) = v22;
  *(_BYTE *)(v24 + 40) = 0;
  *(_QWORD *)(v24 + 48) = 40;
  *(_QWORD *)(v6 + 40) = v24;
  v25 = objc_msgSend(v0, "mainBundle");
  v52._countAndFlagsBits = 0xD000000000000034;
  v52._object = (void *)0x80000001002719E0;
  v26._countAndFlagsBits = 0x657275736E55;
  v26._object = (void *)0xE600000000000000;
  v27.value._countAndFlagsBits = 0x636E656772656D45;
  v27.value._object = (void *)0xEE00796464754279;
  v28._countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  v29 = NSLocalizedString(_:tableName:bundle:value:comment:)(v26, v27, (NSBundle)v25, v28, v52);

  v30 = (Swift::String *)swift_allocObject(v12, 72, 7);
  v30[1] = v29;
  v30[3]._countAndFlagsBits = 0;
  v30[3]._object = 0;
  v30[4]._countAndFlagsBits = static Color.clear.getter(v31);
  v30[2]._countAndFlagsBits = 0;
  v30[2]._object = 0;
  v32 = swift_allocObject(v15, 56, 7);
  strcpy((char *)(v32 + 16), "TRAPPED_UNSURE");
  *(_BYTE *)(v32 + 31) = -18;
  *(_QWORD *)(v32 + 32) = v30;
  *(_BYTE *)(v32 + 40) = 0;
  *(_QWORD *)(v32 + 48) = 40;
  *(_QWORD *)(v6 + 48) = v32;
  specialized Array._endMutation()(v32);
  v33 = swift_allocObject(v43, 48, 7);
  *(_OWORD *)(v33 + 16) = xmmword_100252A40;
  v34 = type metadata accessor for QuestionCondition();
  v35 = swift_allocObject(v34, 40, 7);
  *(_BYTE *)(v35 + 16) = 2;
  *(_QWORD *)(v35 + 24) = 0x455249464E4FLL;
  *(_QWORD *)(v35 + 32) = 0xE600000000000000;
  *(_QWORD *)(v33 + 32) = v35;
  v36 = _s8SOSBuddy14OptionSelectedCMa_0();
  v37 = swift_allocObject(v36, 32, 7);
  *(_QWORD *)(v37 + 16) = 0x4E5F455249464E4FLL;
  *(_QWORD *)(v37 + 24) = 0xE90000000000004FLL;
  *(_QWORD *)(v33 + 40) = v37;
  specialized Array._endMutation()(v37);
  v38 = v33;
  v39 = type metadata accessor for OrCondition();
  v40 = swift_allocObject(v39, 32, 7);
  *(_BYTE *)(v40 + 16) = 1;
  *(_QWORD *)(v40 + 24) = v38;
  v41 = type metadata accessor for Question();
  swift_allocObject(v41, 160, 7);
  return sub_100085664(0x44455050415254, 0xE700000000000000, 0, (uint64_t)&v44, v6, v40, (uint64_t)_swiftEmptyArrayStorage, 7);
}

uint64_t sub_100212314()
{
  void *v0;
  id v1;
  Swift::String v2;
  Swift::String_optional v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  id v7;
  Swift::String v8;
  Swift::String_optional v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v12;
  Swift::String *v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  Swift::String v18;
  Swift::String_optional v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String *v22;
  __n128 v23;
  uint64_t v24;
  id v25;
  Swift::String v26;
  Swift::String_optional v27;
  Swift::String v28;
  Swift::String v29;
  Swift::String *v30;
  __n128 v31;
  uint64_t v32;
  id v33;
  Swift::String v34;
  Swift::String_optional v35;
  Swift::String v36;
  Swift::String v37;
  Swift::String *v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  Swift::String v53;
  uint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  _QWORD v57[3];
  Swift::String v58;
  Swift::String v59;
  Swift::String v60;
  Swift::String v61;
  Swift::String v62;

  v0 = (void *)objc_opt_self(NSBundle);
  v1 = objc_msgSend(v0, "mainBundle");
  v2._countAndFlagsBits = 0xD000000000000018;
  v58._countAndFlagsBits = 0xD00000000000002CLL;
  v58._object = (void *)0x8000000100271220;
  v2._object = (void *)0x8000000100271940;
  v3.value._countAndFlagsBits = 0x636E656772656D45;
  v3.value._object = (void *)0xEE00796464754279;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v58);

  v53 = v5;
  v54 = 0;
  v55 = 0xE000000000000000;
  v56 = _swiftEmptyArrayStorage;
  memset(v57, 0, sizeof(v57));
  v52 = sub_100003DB8(&qword_100328A00);
  v6 = swift_allocObject(v52, 64, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100251630;
  v7 = objc_msgSend(v0, "mainBundle");
  v59._object = (void *)0x8000000100271980;
  v8._object = (void *)0x8000000100271960;
  v8._countAndFlagsBits = 0xD000000000000011;
  v9.value._countAndFlagsBits = 0x636E656772656D45;
  v9.value._object = (void *)0xEE00796464754279;
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v59._countAndFlagsBits = 0xD00000000000003ALL;
  v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v59);

  v12 = type metadata accessor for OptionPresentation();
  v13 = (Swift::String *)swift_allocObject(v12, 72, 7);
  v13[1] = v11;
  v13[3]._countAndFlagsBits = 0;
  v13[3]._object = 0;
  v13[4]._countAndFlagsBits = static Color.clear.getter(v14);
  v15 = type metadata accessor for Option();
  v13[2]._countAndFlagsBits = 0;
  v13[2]._object = 0;
  v16 = swift_allocObject(v15, 56, 7);
  strcpy((char *)(v16 + 16), "FIRETYPE_BLDG");
  *(_WORD *)(v16 + 30) = -4864;
  *(_QWORD *)(v16 + 32) = v13;
  *(_BYTE *)(v16 + 40) = 0;
  *(_QWORD *)(v16 + 48) = 40;
  *(_QWORD *)(v6 + 32) = v16;
  v17 = objc_msgSend(v0, "mainBundle");
  v60._object = (void *)0x8000000100271980;
  v18._countAndFlagsBits = 0x4220726F20726143;
  v18._object = (void *)0xEB0000000074616FLL;
  v19.value._countAndFlagsBits = 0x636E656772656D45;
  v19.value._object = (void *)0xEE00796464754279;
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  v60._countAndFlagsBits = 0xD00000000000003ALL;
  v21 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, v19, (NSBundle)v17, v20, v60);

  v22 = (Swift::String *)swift_allocObject(v12, 72, 7);
  v22[1] = v21;
  v22[3]._countAndFlagsBits = 0;
  v22[3]._object = 0;
  v22[4]._countAndFlagsBits = static Color.clear.getter(v23);
  v22[2]._countAndFlagsBits = 0;
  v22[2]._object = 0;
  v24 = swift_allocObject(v15, 56, 7);
  *(_QWORD *)(v24 + 16) = 0xD000000000000010;
  *(_QWORD *)(v24 + 24) = 0x8000000100271430;
  *(_QWORD *)(v24 + 32) = v22;
  *(_BYTE *)(v24 + 40) = 0;
  *(_QWORD *)(v24 + 48) = 40;
  *(_QWORD *)(v6 + 40) = v24;
  v25 = objc_msgSend(v0, "mainBundle");
  v61._object = (void *)0x8000000100271980;
  v26._object = (void *)0x80000001002719C0;
  v26._countAndFlagsBits = 0xD000000000000011;
  v27.value._countAndFlagsBits = 0x636E656772656D45;
  v27.value._object = (void *)0xEE00796464754279;
  v28._countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  v61._countAndFlagsBits = 0xD00000000000003ALL;
  v29 = NSLocalizedString(_:tableName:bundle:value:comment:)(v26, v27, (NSBundle)v25, v28, v61);

  v30 = (Swift::String *)swift_allocObject(v12, 72, 7);
  v30[1] = v29;
  v30[3]._countAndFlagsBits = 0;
  v30[3]._object = 0;
  v30[4]._countAndFlagsBits = static Color.clear.getter(v31);
  v30[2]._countAndFlagsBits = 0;
  v30[2]._object = 0;
  v32 = swift_allocObject(v15, 56, 7);
  strcpy((char *)(v32 + 16), "FIRETYPE_WILD");
  *(_WORD *)(v32 + 30) = -4864;
  *(_QWORD *)(v32 + 32) = v30;
  *(_BYTE *)(v32 + 40) = 0;
  *(_QWORD *)(v32 + 48) = 40;
  *(_QWORD *)(v6 + 48) = v32;
  v33 = objc_msgSend(v0, "mainBundle");
  v62._countAndFlagsBits = 0xD000000000000066;
  v62._object = (void *)0x8000000100268440;
  v34._countAndFlagsBits = 0x726568744FLL;
  v34._object = (void *)0xE500000000000000;
  v35.value._countAndFlagsBits = 0x636E656772656D45;
  v35.value._object = (void *)0xEE00796464754279;
  v36._countAndFlagsBits = 0;
  v36._object = (void *)0xE000000000000000;
  v37 = NSLocalizedString(_:tableName:bundle:value:comment:)(v34, v35, (NSBundle)v33, v36, v62);

  v38 = (Swift::String *)swift_allocObject(v12, 72, 7);
  v38[1] = v37;
  v38[3]._countAndFlagsBits = 0;
  v38[3]._object = 0;
  v38[4]._countAndFlagsBits = static Color.clear.getter(v39);
  v38[2]._countAndFlagsBits = 0;
  v38[2]._object = 0;
  v40 = swift_allocObject(v15, 56, 7);
  strcpy((char *)(v40 + 16), "FIRETYPE_OTHER");
  *(_BYTE *)(v40 + 31) = -18;
  *(_QWORD *)(v40 + 32) = v38;
  *(_BYTE *)(v40 + 40) = 0;
  *(_QWORD *)(v40 + 48) = 40;
  *(_QWORD *)(v6 + 56) = v40;
  specialized Array._endMutation()(v40);
  v41 = swift_allocObject(v52, 56, 7);
  *(_OWORD *)(v41 + 16) = xmmword_10025F3B0;
  v42 = type metadata accessor for QuestionCondition();
  v43 = swift_allocObject(v42, 40, 7);
  *(_BYTE *)(v43 + 16) = 2;
  *(_QWORD *)(v43 + 24) = 0x44455050415254;
  *(_QWORD *)(v43 + 32) = 0xE700000000000000;
  *(_QWORD *)(v41 + 32) = v43;
  v44 = _s8SOSBuddy14OptionSelectedCMa_0();
  v45 = swift_allocObject(v44, 32, 7);
  *(_QWORD *)(v45 + 16) = 0x5F44455050415254;
  *(_QWORD *)(v45 + 24) = 0xEA00000000004F4ELL;
  *(_QWORD *)(v41 + 40) = v45;
  v46 = swift_allocObject(v44, 32, 7);
  strcpy((char *)(v46 + 16), "TRAPPED_UNSURE");
  *(_BYTE *)(v46 + 31) = -18;
  *(_QWORD *)(v41 + 48) = v46;
  specialized Array._endMutation()(v46);
  v47 = v41;
  v48 = type metadata accessor for OrCondition();
  v49 = swift_allocObject(v48, 32, 7);
  *(_BYTE *)(v49 + 16) = 1;
  *(_QWORD *)(v49 + 24) = v47;
  v50 = type metadata accessor for Question();
  swift_allocObject(v50, 160, 7);
  return sub_100085664(0x4550595445524946, 0xE800000000000000, 0, (uint64_t)&v53, v6, v49, (uint64_t)_swiftEmptyArrayStorage, 7);
}

uint64_t sub_10021293C()
{
  void *v0;
  id v1;
  Swift::String v2;
  Swift::String_optional v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  Swift::String v19;
  Swift::String_optional v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String *v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::String v31;
  uint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  _QWORD v35[3];
  Swift::String v36;
  Swift::String v37;
  Swift::String v38;

  v0 = (void *)objc_opt_self(NSBundle);
  v1 = objc_msgSend(v0, "mainBundle");
  v2._countAndFlagsBits = 0xD000000000000012;
  v36._countAndFlagsBits = 0xD00000000000002CLL;
  v36._object = (void *)0x8000000100271220;
  v2._object = (void *)0x80000001002715F0;
  v3.value._countAndFlagsBits = 0x636E656772656D45;
  v3.value._object = (void *)0xEE00796464754279;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v36);

  v31 = v5;
  v32 = 0;
  v33 = 0xE000000000000000;
  v34 = _swiftEmptyArrayStorage;
  memset(v35, 0, sizeof(v35));
  v6 = sub_100003DB8(&qword_100328A00);
  v7 = swift_allocObject(v6, 48, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100252A40;
  v8 = objc_msgSend(v0, "mainBundle");
  v37._object = (void *)0x80000001002681B0;
  v9._countAndFlagsBits = 7562585;
  v9._object = (void *)0xE300000000000000;
  v10.value._countAndFlagsBits = 0x636E656772656D45;
  v10.value._object = (void *)0xEE00796464754279;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v37._countAndFlagsBits = 0xD00000000000002DLL;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v37);

  v13 = type metadata accessor for OptionPresentation();
  v14 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v14[1] = v12;
  v14[3]._countAndFlagsBits = 0;
  v14[3]._object = 0;
  v14[4]._countAndFlagsBits = static Color.clear.getter(v15);
  v16 = type metadata accessor for Option();
  v14[2]._countAndFlagsBits = 0;
  v14[2]._object = 0;
  v17 = swift_allocObject(v16, 56, 7);
  strcpy((char *)(v17 + 16), "SNRINJURED_YES");
  *(_BYTE *)(v17 + 31) = -18;
  *(_QWORD *)(v17 + 32) = v14;
  *(_BYTE *)(v17 + 40) = 0;
  *(_QWORD *)(v17 + 48) = 40;
  *(_QWORD *)(v7 + 32) = v17;
  v18 = objc_msgSend(v0, "mainBundle");
  v38._object = (void *)0x80000001002681B0;
  v19._countAndFlagsBits = 28494;
  v19._object = (void *)0xE200000000000000;
  v20.value._countAndFlagsBits = 0x636E656772656D45;
  v20.value._object = (void *)0xEE00796464754279;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v38._countAndFlagsBits = 0xD00000000000002DLL;
  v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v38);

  v23 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v23[1] = v22;
  v23[3]._countAndFlagsBits = 0;
  v23[3]._object = 0;
  v23[4]._countAndFlagsBits = static Color.clear.getter(v24);
  v23[2]._countAndFlagsBits = 0;
  v23[2]._object = 0;
  v25 = swift_allocObject(v16, 56, 7);
  strcpy((char *)(v25 + 16), "SNRINJURED_NO");
  *(_WORD *)(v25 + 30) = -4864;
  *(_QWORD *)(v25 + 32) = v23;
  *(_BYTE *)(v25 + 40) = 0;
  *(_QWORD *)(v25 + 48) = 40;
  *(_QWORD *)(v7 + 40) = v25;
  specialized Array._endMutation()(v25);
  v26 = v7;
  v27 = _s8SOSBuddy14OptionSelectedCMa_0();
  v28 = swift_allocObject(v27, 32, 7);
  *(_QWORD *)(v28 + 16) = 0x524E535F45505954;
  *(_QWORD *)(v28 + 24) = 0xE800000000000000;
  v29 = type metadata accessor for Question();
  swift_allocObject(v29, 160, 7);
  return sub_100085664(0x52554A4E49524E53, 0xEA00000000004445, 0, (uint64_t)&v31, v26, v28, (uint64_t)_swiftEmptyArrayStorage, 7);
}

uint64_t sub_100212CAC()
{
  void *v0;
  id v1;
  Swift::String v2;
  Swift::String_optional v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  Swift::String v19;
  Swift::String_optional v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String *v23;
  __n128 v24;
  uint64_t v25;
  id v26;
  Swift::String v27;
  Swift::String_optional v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String *v31;
  __n128 v32;
  uint64_t v33;
  id v34;
  Swift::String v35;
  Swift::String_optional v36;
  Swift::String v37;
  Swift::String v38;
  Swift::String *v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  Swift::String v47;
  uint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  _QWORD v51[3];
  Swift::String v52;
  Swift::String v53;
  Swift::String v54;
  Swift::String v55;
  Swift::String v56;

  v0 = (void *)objc_opt_self(NSBundle);
  v1 = objc_msgSend(v0, "mainBundle");
  v2._countAndFlagsBits = 0xD000000000000022;
  v52._countAndFlagsBits = 0xD00000000000002CLL;
  v52._object = (void *)0x8000000100271220;
  v2._object = (void *)0x8000000100271720;
  v3.value._countAndFlagsBits = 0x636E656772656D45;
  v3.value._object = (void *)0xEE00796464754279;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v52);

  v47 = v5;
  v48 = 0;
  v49 = 0xE000000000000000;
  v50 = _swiftEmptyArrayStorage;
  memset(v51, 0, sizeof(v51));
  v6 = sub_100003DB8(&qword_100328A00);
  v7 = swift_allocObject(v6, 64, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100251630;
  v8 = objc_msgSend(v0, "mainBundle");
  v53._object = (void *)0x80000001002718E0;
  v9._countAndFlagsBits = 0x6465646E61727453;
  v9._object = (void *)0xE800000000000000;
  v10.value._countAndFlagsBits = 0x636E656772656D45;
  v10.value._object = (void *)0xEE00796464754279;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v53._countAndFlagsBits = 0xD00000000000005CLL;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v53);

  v13 = type metadata accessor for OptionPresentation();
  v14 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v14[1] = v12;
  v14[3]._countAndFlagsBits = 0;
  v14[3]._object = 0;
  v14[4]._countAndFlagsBits = static Color.clear.getter(v15);
  v16 = type metadata accessor for Option();
  v14[2]._countAndFlagsBits = 0;
  v14[2]._object = 0;
  v17 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v17 + 16) = 0xD000000000000010;
  *(_QWORD *)(v17 + 24) = 0x8000000100271410;
  *(_QWORD *)(v17 + 32) = v14;
  *(_BYTE *)(v17 + 40) = 0;
  *(_QWORD *)(v17 + 48) = 40;
  *(_QWORD *)(v7 + 32) = v17;
  v18 = objc_msgSend(v0, "mainBundle");
  v54._object = (void *)0x80000001002718E0;
  v19._countAndFlagsBits = 0x64657070617254;
  v19._object = (void *)0xE700000000000000;
  v20.value._countAndFlagsBits = 0x636E656772656D45;
  v20.value._object = (void *)0xEE00796464754279;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v54._countAndFlagsBits = 0xD00000000000005CLL;
  v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v54);

  v23 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v23[1] = v22;
  v23[3]._countAndFlagsBits = 0;
  v23[3]._object = 0;
  v23[4]._countAndFlagsBits = static Color.clear.getter(v24);
  v23[2]._countAndFlagsBits = 0;
  v23[2]._object = 0;
  v25 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v25 + 16) = 0x5F45505954524E53;
  *(_QWORD *)(v25 + 24) = 0xEF44455050415254;
  *(_QWORD *)(v25 + 32) = v23;
  *(_BYTE *)(v25 + 40) = 0;
  *(_QWORD *)(v25 + 48) = 40;
  *(_QWORD *)(v7 + 40) = v25;
  v26 = objc_msgSend(v0, "mainBundle");
  v55._object = (void *)0x80000001002718E0;
  v27._countAndFlagsBits = 1953722188;
  v27._object = (void *)0xE400000000000000;
  v28.value._countAndFlagsBits = 0x636E656772656D45;
  v28.value._object = (void *)0xEE00796464754279;
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  v55._countAndFlagsBits = 0xD00000000000005CLL;
  v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, v28, (NSBundle)v26, v29, v55);

  v31 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v31[1] = v30;
  v31[3]._countAndFlagsBits = 0;
  v31[3]._object = 0;
  v31[4]._countAndFlagsBits = static Color.clear.getter(v32);
  v31[2]._countAndFlagsBits = 0;
  v31[2]._object = 0;
  v33 = swift_allocObject(v16, 56, 7);
  strcpy((char *)(v33 + 16), "SNRTYPE_LOST");
  *(_BYTE *)(v33 + 29) = 0;
  *(_WORD *)(v33 + 30) = -5120;
  *(_QWORD *)(v33 + 32) = v31;
  *(_BYTE *)(v33 + 40) = 0;
  *(_QWORD *)(v33 + 48) = 40;
  *(_QWORD *)(v7 + 48) = v33;
  v34 = objc_msgSend(v0, "mainBundle");
  v56._countAndFlagsBits = 0xD000000000000066;
  v56._object = (void *)0x8000000100268440;
  v35._countAndFlagsBits = 0x726568744FLL;
  v35._object = (void *)0xE500000000000000;
  v36.value._countAndFlagsBits = 0x636E656772656D45;
  v36.value._object = (void *)0xEE00796464754279;
  v37._countAndFlagsBits = 0;
  v37._object = (void *)0xE000000000000000;
  v38 = NSLocalizedString(_:tableName:bundle:value:comment:)(v35, v36, (NSBundle)v34, v37, v56);

  v39 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v39[1] = v38;
  v39[3]._countAndFlagsBits = 0;
  v39[3]._object = 0;
  v39[4]._countAndFlagsBits = static Color.clear.getter(v40);
  v39[2]._countAndFlagsBits = 0;
  v39[2]._object = 0;
  v41 = swift_allocObject(v16, 56, 7);
  strcpy((char *)(v41 + 16), "SNRTYPE_OTHER");
  *(_WORD *)(v41 + 30) = -4864;
  *(_QWORD *)(v41 + 32) = v39;
  *(_BYTE *)(v41 + 40) = 0;
  *(_QWORD *)(v41 + 48) = 40;
  *(_QWORD *)(v7 + 56) = v41;
  specialized Array._endMutation()(v41);
  v42 = v7;
  v43 = type metadata accessor for QuestionCondition();
  v44 = swift_allocObject(v43, 40, 7);
  *(_BYTE *)(v44 + 16) = 0;
  *(_QWORD *)(v44 + 24) = 0x52554A4E49524E53;
  *(_QWORD *)(v44 + 32) = 0xEA00000000004445;
  v45 = type metadata accessor for Question();
  swift_allocObject(v45, 160, 7);
  return sub_100085664(0x45505954524E53, 0xE700000000000000, 0, (uint64_t)&v47, v42, v44, (uint64_t)_swiftEmptyArrayStorage, 7);
}

uint64_t sub_1002131EC()
{
  void *v0;
  id v1;
  Swift::String v2;
  Swift::String_optional v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  id v7;
  Swift::String v8;
  Swift::String_optional v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v12;
  Swift::String *v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  Swift::String v18;
  Swift::String_optional v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String *v22;
  __n128 v23;
  uint64_t v24;
  id v25;
  Swift::String v26;
  Swift::String_optional v27;
  Swift::String v28;
  Swift::String v29;
  Swift::String *v30;
  __n128 v31;
  uint64_t v32;
  id v33;
  Swift::String v34;
  Swift::String_optional v35;
  Swift::String v36;
  Swift::String v37;
  Swift::String *v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  Swift::String v56;
  uint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  _QWORD v60[3];
  Swift::String v61;
  Swift::String v62;
  Swift::String v63;
  Swift::String v64;
  Swift::String v65;

  v0 = (void *)objc_opt_self(NSBundle);
  v1 = objc_msgSend(v0, "mainBundle");
  v2._countAndFlagsBits = 0xD000000000000016;
  v61._countAndFlagsBits = 0xD00000000000002CLL;
  v61._object = (void *)0x8000000100271220;
  v2._object = (void *)0x80000001002717B0;
  v3.value._countAndFlagsBits = 0x636E656772656D45;
  v3.value._object = (void *)0xEE00796464754279;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v61);

  v56 = v5;
  v57 = 0;
  v58 = 0xE000000000000000;
  v59 = _swiftEmptyArrayStorage;
  memset(v60, 0, sizeof(v60));
  v54 = sub_100003DB8(&qword_100328A00);
  v6 = swift_allocObject(v54, 64, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100251630;
  v7 = objc_msgSend(v0, "mainBundle");
  v62._object = (void *)0x80000001002717D0;
  v8._countAndFlagsBits = 0x6554207065657453;
  v8._object = (void *)0xED00006E69617272;
  v9.value._countAndFlagsBits = 0x636E656772656D45;
  v9.value._object = (void *)0xEE00796464754279;
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v62._countAndFlagsBits = 0xD00000000000006DLL;
  v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v62);

  v12 = type metadata accessor for OptionPresentation();
  v13 = (Swift::String *)swift_allocObject(v12, 72, 7);
  v13[1] = v11;
  v13[3]._countAndFlagsBits = 0;
  v13[3]._object = 0;
  v13[4]._countAndFlagsBits = static Color.clear.getter(v14);
  v15 = type metadata accessor for Option();
  v13[2]._countAndFlagsBits = 0;
  v13[2]._object = 0;
  v16 = swift_allocObject(v15, 56, 7);
  strcpy((char *)(v16 + 16), "SNRENV_STEEP");
  *(_BYTE *)(v16 + 29) = 0;
  *(_WORD *)(v16 + 30) = -5120;
  *(_QWORD *)(v16 + 32) = v13;
  *(_BYTE *)(v16 + 40) = 0;
  *(_QWORD *)(v16 + 48) = 40;
  *(_QWORD *)(v6 + 32) = v16;
  v17 = objc_msgSend(v0, "mainBundle");
  v63._object = (void *)0x80000001002717D0;
  v18._countAndFlagsBits = 0x7265746157;
  v18._object = (void *)0xE500000000000000;
  v19.value._countAndFlagsBits = 0x636E656772656D45;
  v19.value._object = (void *)0xEE00796464754279;
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  v63._countAndFlagsBits = 0xD00000000000006DLL;
  v21 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, v19, (NSBundle)v17, v20, v63);

  v22 = (Swift::String *)swift_allocObject(v12, 72, 7);
  v22[1] = v21;
  v22[3]._countAndFlagsBits = 0;
  v22[3]._object = 0;
  v22[4]._countAndFlagsBits = static Color.clear.getter(v23);
  v22[2]._countAndFlagsBits = 0;
  v22[2]._object = 0;
  v24 = swift_allocObject(v15, 56, 7);
  strcpy((char *)(v24 + 16), "SNRENV_WATER");
  *(_BYTE *)(v24 + 29) = 0;
  *(_WORD *)(v24 + 30) = -5120;
  *(_QWORD *)(v24 + 32) = v22;
  *(_BYTE *)(v24 + 40) = 0;
  *(_QWORD *)(v24 + 48) = 40;
  *(_QWORD *)(v6 + 40) = v24;
  v25 = objc_msgSend(v0, "mainBundle");
  v64._object = (void *)0x80000001002717D0;
  v26._countAndFlagsBits = 1702256963;
  v26._object = (void *)0xE400000000000000;
  v27.value._countAndFlagsBits = 0x636E656772656D45;
  v27.value._object = (void *)0xEE00796464754279;
  v28._countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  v64._countAndFlagsBits = 0xD00000000000006DLL;
  v29 = NSLocalizedString(_:tableName:bundle:value:comment:)(v26, v27, (NSBundle)v25, v28, v64);

  v30 = (Swift::String *)swift_allocObject(v12, 72, 7);
  v30[1] = v29;
  v30[3]._countAndFlagsBits = 0;
  v30[3]._object = 0;
  v30[4]._countAndFlagsBits = static Color.clear.getter(v31);
  v30[2]._countAndFlagsBits = 0;
  v30[2]._object = 0;
  v32 = swift_allocObject(v15, 56, 7);
  *(_QWORD *)(v32 + 16) = 0x435F564E45524E53;
  *(_QWORD *)(v32 + 24) = 0xEB00000000455641;
  *(_QWORD *)(v32 + 32) = v30;
  *(_BYTE *)(v32 + 40) = 0;
  *(_QWORD *)(v32 + 48) = 40;
  *(_QWORD *)(v6 + 48) = v32;
  v33 = objc_msgSend(v0, "mainBundle");
  v65._countAndFlagsBits = 0xD000000000000097;
  v65._object = (void *)0x8000000100271840;
  v34._countAndFlagsBits = 1701736270;
  v34._object = (void *)0xE400000000000000;
  v35.value._countAndFlagsBits = 0x636E656772656D45;
  v35.value._object = (void *)0xEE00796464754279;
  v36._countAndFlagsBits = 0;
  v36._object = (void *)0xE000000000000000;
  v37 = NSLocalizedString(_:tableName:bundle:value:comment:)(v34, v35, (NSBundle)v33, v36, v65);

  v38 = (Swift::String *)swift_allocObject(v12, 72, 7);
  v38[1] = v37;
  v38[3]._countAndFlagsBits = 0;
  v38[3]._object = 0;
  v38[4]._countAndFlagsBits = static Color.clear.getter(v39);
  v38[2]._countAndFlagsBits = 0;
  v38[2]._object = 0;
  v40 = swift_allocObject(v15, 56, 7);
  *(_QWORD *)(v40 + 16) = 0x4E5F564E45524E53;
  *(_QWORD *)(v40 + 24) = 0xEB00000000454E4FLL;
  *(_QWORD *)(v40 + 32) = v38;
  *(_BYTE *)(v40 + 40) = 0;
  *(_QWORD *)(v40 + 48) = 40;
  *(_QWORD *)(v6 + 56) = v40;
  specialized Array._endMutation()(v40);
  v41 = swift_allocObject(v54, 48, 7);
  *(_OWORD *)(v41 + 16) = xmmword_100252A40;
  v42 = type metadata accessor for QuestionCondition();
  v43 = swift_allocObject(v42, 40, 7);
  *(_BYTE *)(v43 + 16) = 0;
  *(_QWORD *)(v43 + 24) = 0x45505954524E53;
  *(_QWORD *)(v43 + 32) = 0xE700000000000000;
  *(_QWORD *)(v41 + 32) = v43;
  v44 = _s8SOSBuddy14OptionSelectedCMa_0();
  v45 = swift_allocObject(v44, 32, 7);
  strcpy((char *)(v45 + 16), "SNRTYPE_OTHER");
  *(_WORD *)(v45 + 30) = -4864;
  v46 = type metadata accessor for NotCondition();
  v47 = swift_allocObject(v46, 32, 7);
  v48 = swift_allocObject(v54, 40, 7);
  *(_OWORD *)(v48 + 16) = xmmword_10024E820;
  *(_QWORD *)(v48 + 32) = v45;
  v55 = v48;
  v49 = specialized Array._endMutation()(v48);
  *(_BYTE *)(v47 + 16) = 2;
  *(_QWORD *)(v47 + 24) = v55;
  *(_QWORD *)(v41 + 40) = v47;
  specialized Array._endMutation()(v49);
  v50 = type metadata accessor for AndCondition();
  v51 = swift_allocObject(v50, 32, 7);
  *(_BYTE *)(v51 + 16) = 0;
  *(_QWORD *)(v51 + 24) = v41;
  v52 = type metadata accessor for Question();
  swift_allocObject(v52, 160, 7);
  return sub_100085664(0x564E45524E53, 0xE600000000000000, 0, (uint64_t)&v56, v6, v51, (uint64_t)_swiftEmptyArrayStorage, 7);
}

uint64_t sub_100213820()
{
  void *v0;
  id v1;
  Swift::String v2;
  Swift::String_optional v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  Swift::String v19;
  Swift::String_optional v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String *v23;
  __n128 v24;
  uint64_t v25;
  id v26;
  Swift::String v27;
  Swift::String_optional v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String *v31;
  __n128 v32;
  uint64_t v33;
  id v34;
  Swift::String v35;
  Swift::String_optional v36;
  Swift::String v37;
  Swift::String v38;
  Swift::String *v39;
  __n128 v40;
  uint64_t v41;
  id v42;
  Swift::String v43;
  Swift::String_optional v44;
  Swift::String v45;
  Swift::String v46;
  Swift::String *v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  Swift::String v55;
  uint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  _QWORD v59[3];
  Swift::String v60;
  Swift::String v61;
  Swift::String v62;
  Swift::String v63;
  Swift::String v64;
  Swift::String v65;

  v0 = (void *)objc_opt_self(NSBundle);
  v1 = objc_msgSend(v0, "mainBundle");
  v2._countAndFlagsBits = 0xD000000000000022;
  v60._countAndFlagsBits = 0xD00000000000002CLL;
  v60._object = (void *)0x8000000100271220;
  v2._object = (void *)0x8000000100271720;
  v3.value._countAndFlagsBits = 0x636E656772656D45;
  v3.value._object = (void *)0xEE00796464754279;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v60);

  v55 = v5;
  v56 = 0;
  v57 = 0xE000000000000000;
  v58 = _swiftEmptyArrayStorage;
  memset(v59, 0, sizeof(v59));
  v6 = sub_100003DB8(&qword_100328A00);
  v7 = swift_allocObject(v6, 72, 7);
  *(_OWORD *)(v7 + 16) = xmmword_10025F350;
  v8 = objc_msgSend(v0, "mainBundle");
  v61._object = (void *)0x8000000100271750;
  v9._countAndFlagsBits = 0x20656C6369686556;
  v9._object = (void *)0xED00006873617243;
  v10.value._countAndFlagsBits = 0x636E656772656D45;
  v10.value._object = (void *)0xEE00796464754279;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v61._countAndFlagsBits = 0xD00000000000005FLL;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v61);

  v13 = type metadata accessor for OptionPresentation();
  v14 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v14[1] = v12;
  v14[3]._countAndFlagsBits = 0;
  v14[3]._object = 0;
  v14[4]._countAndFlagsBits = static Color.clear.getter(v15);
  v16 = type metadata accessor for Option();
  v14[2]._countAndFlagsBits = 0;
  v14[2]._object = 0;
  v17 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v17 + 16) = 0xD000000000000011;
  *(_QWORD *)(v17 + 24) = 0x80000001002713F0;
  *(_QWORD *)(v17 + 32) = v14;
  *(_BYTE *)(v17 + 40) = 0;
  *(_QWORD *)(v17 + 48) = 40;
  *(_QWORD *)(v7 + 32) = v17;
  v18 = objc_msgSend(v0, "mainBundle");
  v62._object = (void *)0x8000000100271750;
  v19._countAndFlagsBits = 0x20656C6369686556;
  v19._object = (void *)0xEF6D656C626F7250;
  v20.value._countAndFlagsBits = 0x636E656772656D45;
  v20.value._object = (void *)0xEE00796464754279;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v62._countAndFlagsBits = 0xD00000000000005FLL;
  v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v62);

  v23 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v23[1] = v22;
  v23[3]._countAndFlagsBits = 0;
  v23[3]._object = 0;
  v23[4]._countAndFlagsBits = static Color.clear.getter(v24);
  v23[2]._countAndFlagsBits = 0;
  v23[2]._object = 0;
  v25 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v25 + 16) = 0xD000000000000013;
  *(_QWORD *)(v25 + 24) = 0x80000001002713D0;
  *(_QWORD *)(v25 + 32) = v23;
  *(_BYTE *)(v25 + 40) = 0;
  *(_QWORD *)(v25 + 48) = 40;
  *(_QWORD *)(v7 + 40) = v25;
  v26 = objc_msgSend(v0, "mainBundle");
  v63._object = (void *)0x8000000100271750;
  v27._countAndFlagsBits = 0x656D452074616F42;
  v27._object = (void *)0xEE0079636E656772;
  v28.value._countAndFlagsBits = 0x636E656772656D45;
  v28.value._object = (void *)0xEE00796464754279;
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  v63._countAndFlagsBits = 0xD00000000000005FLL;
  v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, v28, (NSBundle)v26, v29, v63);

  v31 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v31[1] = v30;
  v31[3]._countAndFlagsBits = 0;
  v31[3]._object = 0;
  v31[4]._countAndFlagsBits = static Color.clear.getter(v32);
  v31[2]._countAndFlagsBits = 0;
  v31[2]._object = 0;
  v33 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v33 + 16) = 0xD000000000000011;
  *(_QWORD *)(v33 + 24) = 0x80000001002713B0;
  *(_QWORD *)(v33 + 32) = v31;
  *(_BYTE *)(v33 + 40) = 0;
  *(_QWORD *)(v33 + 48) = 40;
  *(_QWORD *)(v7 + 48) = v33;
  v34 = objc_msgSend(v0, "mainBundle");
  v64._object = (void *)0x8000000100271750;
  v35._countAndFlagsBits = 0x6D4520656E616C50;
  v35._object = (void *)0xEF79636E65677265;
  v36.value._countAndFlagsBits = 0x636E656772656D45;
  v36.value._object = (void *)0xEE00796464754279;
  v37._countAndFlagsBits = 0;
  v37._object = (void *)0xE000000000000000;
  v64._countAndFlagsBits = 0xD00000000000005FLL;
  v38 = NSLocalizedString(_:tableName:bundle:value:comment:)(v35, v36, (NSBundle)v34, v37, v64);

  v39 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v39[1] = v38;
  v39[3]._countAndFlagsBits = 0;
  v39[3]._object = 0;
  v39[4]._countAndFlagsBits = static Color.clear.getter(v40);
  v39[2]._countAndFlagsBits = 0;
  v39[2]._object = 0;
  v41 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v41 + 16) = 0xD000000000000011;
  *(_QWORD *)(v41 + 24) = 0x8000000100271390;
  *(_QWORD *)(v41 + 32) = v39;
  *(_BYTE *)(v41 + 40) = 0;
  *(_QWORD *)(v41 + 48) = 40;
  *(_QWORD *)(v7 + 56) = v41;
  v42 = objc_msgSend(v0, "mainBundle");
  v65._countAndFlagsBits = 0xD000000000000066;
  v65._object = (void *)0x8000000100268440;
  v43._countAndFlagsBits = 0x726568744FLL;
  v43._object = (void *)0xE500000000000000;
  v44.value._countAndFlagsBits = 0x636E656772656D45;
  v44.value._object = (void *)0xEE00796464754279;
  v45._countAndFlagsBits = 0;
  v45._object = (void *)0xE000000000000000;
  v46 = NSLocalizedString(_:tableName:bundle:value:comment:)(v43, v44, (NSBundle)v42, v45, v65);

  v47 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v47[1] = v46;
  v47[3]._countAndFlagsBits = 0;
  v47[3]._object = 0;
  v47[4]._countAndFlagsBits = static Color.clear.getter(v48);
  v47[2]._countAndFlagsBits = 0;
  v47[2]._object = 0;
  v49 = swift_allocObject(v16, 56, 7);
  strcpy((char *)(v49 + 16), "CBATYPE_OTHER");
  *(_WORD *)(v49 + 30) = -4864;
  *(_QWORD *)(v49 + 32) = v47;
  *(_BYTE *)(v49 + 40) = 0;
  *(_QWORD *)(v49 + 48) = 40;
  *(_QWORD *)(v7 + 64) = v49;
  specialized Array._endMutation()(v49);
  v50 = v7;
  v51 = _s8SOSBuddy14OptionSelectedCMa_0();
  v52 = swift_allocObject(v51, 32, 7);
  *(_QWORD *)(v52 + 16) = 0x4142435F45505954;
  *(_QWORD *)(v52 + 24) = 0xE800000000000000;
  v53 = type metadata accessor for Question();
  swift_allocObject(v53, 160, 7);
  return sub_100085664(0x45505954414243, 0xE700000000000000, 0, (uint64_t)&v55, v50, v52, (uint64_t)_swiftEmptyArrayStorage, 7);
}

uint64_t sub_100213E80()
{
  void *v0;
  id v1;
  Swift::String v2;
  Swift::String_optional v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  Swift::String v19;
  Swift::String_optional v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String *v23;
  __n128 v24;
  uint64_t v25;
  id v26;
  Swift::String v27;
  Swift::String_optional v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String *v31;
  __n128 v32;
  uint64_t v33;
  id v34;
  Swift::String v35;
  Swift::String_optional v36;
  Swift::String v37;
  Swift::String v38;
  Swift::String *v39;
  __n128 v40;
  uint64_t v41;
  id v42;
  Swift::String v43;
  Swift::String_optional v44;
  Swift::String v45;
  Swift::String v46;
  Swift::String *v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  Swift::String v55;
  uint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  _QWORD v59[3];
  Swift::String v60;
  Swift::String v61;
  Swift::String v62;
  Swift::String v63;
  Swift::String v64;
  Swift::String v65;

  v0 = (void *)objc_opt_self(NSBundle);
  v1 = objc_msgSend(v0, "mainBundle");
  v2._countAndFlagsBits = 0xD000000000000019;
  v60._countAndFlagsBits = 0xD00000000000002CLL;
  v60._object = (void *)0x8000000100271220;
  v2._object = (void *)0x80000001002716E0;
  v3.value._countAndFlagsBits = 0x636E656772656D45;
  v3.value._object = (void *)0xEE00796464754279;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v60);

  v55 = v5;
  v56 = 0;
  v57 = 0xE000000000000000;
  v58 = _swiftEmptyArrayStorage;
  memset(v59, 0, sizeof(v59));
  v6 = sub_100003DB8(&qword_100328A00);
  v7 = swift_allocObject(v6, 72, 7);
  *(_OWORD *)(v7 + 16) = xmmword_10025F350;
  v8 = objc_msgSend(v0, "mainBundle");
  v9._countAndFlagsBits = 0xD000000000000010;
  v61._object = (void *)0x80000001002683C0;
  v9._object = (void *)0x8000000100271700;
  v10.value._countAndFlagsBits = 0x636E656772656D45;
  v10.value._object = (void *)0xEE00796464754279;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v61._countAndFlagsBits = 0xD00000000000003BLL;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v61);

  v13 = type metadata accessor for OptionPresentation();
  v14 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v14[1] = v12;
  v14[3]._countAndFlagsBits = 0;
  v14[3]._object = 0;
  v14[4]._countAndFlagsBits = static Color.clear.getter(v15);
  v16 = type metadata accessor for Option();
  v14[2]._countAndFlagsBits = 0;
  v14[2]._object = 0;
  v17 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v17 + 16) = 0xD000000000000016;
  *(_QWORD *)(v17 + 24) = 0x8000000100271370;
  *(_QWORD *)(v17 + 32) = v14;
  *(_BYTE *)(v17 + 40) = 0;
  *(_QWORD *)(v17 + 48) = 40;
  *(_QWORD *)(v7 + 32) = v17;
  v18 = objc_msgSend(v0, "mainBundle");
  v62._object = (void *)0x80000001002683C0;
  v19._countAndFlagsBits = 0x5420656E69676E45;
  v19._object = (void *)0xEE00656C62756F72;
  v20.value._countAndFlagsBits = 0x636E656772656D45;
  v20.value._object = (void *)0xEE00796464754279;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v62._countAndFlagsBits = 0xD00000000000003BLL;
  v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v62);

  v23 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v23[1] = v22;
  v23[3]._countAndFlagsBits = 0;
  v23[3]._object = 0;
  v23[4]._countAndFlagsBits = static Color.clear.getter(v24);
  v23[2]._countAndFlagsBits = 0;
  v23[2]._object = 0;
  v25 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v25 + 16) = 0xD000000000000016;
  *(_QWORD *)(v25 + 24) = 0x8000000100271350;
  *(_QWORD *)(v25 + 32) = v23;
  *(_BYTE *)(v25 + 40) = 0;
  *(_QWORD *)(v25 + 48) = 40;
  *(_QWORD *)(v7 + 40) = v25;
  v26 = objc_msgSend(v0, "mainBundle");
  v63._object = (void *)0x80000001002683C0;
  v27._countAndFlagsBits = 0x7269542074616C46;
  v27._object = (void *)0xE900000000000065;
  v28.value._countAndFlagsBits = 0x636E656772656D45;
  v28.value._object = (void *)0xEE00796464754279;
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  v63._countAndFlagsBits = 0xD00000000000003BLL;
  v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, v28, (NSBundle)v26, v29, v63);

  v31 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v31[1] = v30;
  v31[3]._countAndFlagsBits = 0;
  v31[3]._object = 0;
  v31[4]._countAndFlagsBits = static Color.clear.getter(v32);
  v31[2]._countAndFlagsBits = 0;
  v31[2]._object = 0;
  v33 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v33 + 16) = 0xD000000000000014;
  *(_QWORD *)(v33 + 24) = 0x8000000100271330;
  *(_QWORD *)(v33 + 32) = v31;
  *(_BYTE *)(v33 + 40) = 0;
  *(_QWORD *)(v33 + 48) = 40;
  *(_QWORD *)(v7 + 48) = v33;
  v34 = objc_msgSend(v0, "mainBundle");
  v64._object = (void *)0x80000001002683C0;
  v35._countAndFlagsBits = 0x4720666F2074754FLL;
  v35._object = (void *)0xEA00000000007361;
  v36.value._countAndFlagsBits = 0x636E656772656D45;
  v36.value._object = (void *)0xEE00796464754279;
  v37._countAndFlagsBits = 0;
  v37._object = (void *)0xE000000000000000;
  v64._countAndFlagsBits = 0xD00000000000003BLL;
  v38 = NSLocalizedString(_:tableName:bundle:value:comment:)(v35, v36, (NSBundle)v34, v37, v64);

  v39 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v39[1] = v38;
  v39[3]._countAndFlagsBits = 0;
  v39[3]._object = 0;
  v39[4]._countAndFlagsBits = static Color.clear.getter(v40);
  v39[2]._countAndFlagsBits = 0;
  v39[2]._object = 0;
  v41 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v41 + 16) = 0xD000000000000013;
  *(_QWORD *)(v41 + 24) = 0x8000000100271310;
  *(_QWORD *)(v41 + 32) = v39;
  *(_BYTE *)(v41 + 40) = 0;
  *(_QWORD *)(v41 + 48) = 40;
  *(_QWORD *)(v7 + 56) = v41;
  v42 = objc_msgSend(v0, "mainBundle");
  v65._countAndFlagsBits = 0xD000000000000066;
  v65._object = (void *)0x8000000100268440;
  v43._countAndFlagsBits = 0x726568744FLL;
  v43._object = (void *)0xE500000000000000;
  v44.value._countAndFlagsBits = 0x636E656772656D45;
  v44.value._object = (void *)0xEE00796464754279;
  v45._countAndFlagsBits = 0;
  v45._object = (void *)0xE000000000000000;
  v46 = NSLocalizedString(_:tableName:bundle:value:comment:)(v43, v44, (NSBundle)v42, v45, v65);

  v47 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v47[1] = v46;
  v47[3]._countAndFlagsBits = 0;
  v47[3]._object = 0;
  v47[4]._countAndFlagsBits = static Color.clear.getter(v48);
  v47[2]._countAndFlagsBits = 0;
  v47[2]._object = 0;
  v49 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v49 + 16) = 0xD000000000000015;
  *(_QWORD *)(v49 + 24) = 0x80000001002712F0;
  *(_QWORD *)(v49 + 32) = v47;
  *(_BYTE *)(v49 + 40) = 0;
  *(_QWORD *)(v49 + 48) = 40;
  *(_QWORD *)(v7 + 64) = v49;
  specialized Array._endMutation()(v49);
  v50 = v7;
  v51 = _s8SOSBuddy14OptionSelectedCMa_0();
  v52 = swift_allocObject(v51, 32, 7);
  *(_QWORD *)(v52 + 16) = 0xD000000000000013;
  *(_QWORD *)(v52 + 24) = 0x80000001002713D0;
  v53 = type metadata accessor for Question();
  swift_allocObject(v53, 160, 7);
  return sub_100085664(0x424F52504C434856, 0xEF455059544D454CLL, 0, (uint64_t)&v55, v50, v52, (uint64_t)_swiftEmptyArrayStorage, 7);
}

uint64_t sub_1002144CC()
{
  void *v0;
  id v1;
  Swift::String v2;
  Swift::String_optional v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  Swift::String v19;
  Swift::String_optional v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String *v23;
  __n128 v24;
  uint64_t v25;
  id v26;
  Swift::String v27;
  Swift::String_optional v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String *v31;
  __n128 v32;
  uint64_t v33;
  id v34;
  Swift::String v35;
  Swift::String_optional v36;
  Swift::String v37;
  Swift::String v38;
  Swift::String *v39;
  __n128 v40;
  uint64_t v41;
  id v42;
  Swift::String v43;
  Swift::String_optional v44;
  Swift::String v45;
  Swift::String v46;
  Swift::String *v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  Swift::String v55;
  uint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  _QWORD v59[3];
  Swift::String v60;
  Swift::String v61;
  Swift::String v62;
  Swift::String v63;
  Swift::String v64;
  Swift::String v65;

  v0 = (void *)objc_opt_self(NSBundle);
  v1 = objc_msgSend(v0, "mainBundle");
  v60._countAndFlagsBits = 0xD00000000000002CLL;
  v60._object = (void *)0x8000000100271220;
  v2._object = (void *)0x8000000100271630;
  v2._countAndFlagsBits = 0xD000000000000015;
  v3.value._countAndFlagsBits = 0x636E656772656D45;
  v3.value._object = (void *)0xEE00796464754279;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v60);

  v55 = v5;
  v56 = 0;
  v57 = 0xE000000000000000;
  v58 = _swiftEmptyArrayStorage;
  memset(v59, 0, sizeof(v59));
  v6 = sub_100003DB8(&qword_100328A00);
  v7 = swift_allocObject(v6, 72, 7);
  *(_OWORD *)(v7 + 16) = xmmword_10025F350;
  v8 = objc_msgSend(v0, "mainBundle");
  v9._countAndFlagsBits = 0xD000000000000010;
  v61._object = (void *)0x8000000100271670;
  v9._object = (void *)0x8000000100271650;
  v10.value._countAndFlagsBits = 0x636E656772656D45;
  v10.value._object = (void *)0xEE00796464754279;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v61._countAndFlagsBits = 0xD00000000000004CLL;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v61);

  v13 = type metadata accessor for OptionPresentation();
  v14 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v14[1] = v12;
  v14[3]._countAndFlagsBits = 0;
  v14[3]._object = 0;
  v14[4]._countAndFlagsBits = static Color.clear.getter(v15);
  v16 = type metadata accessor for Option();
  v14[2]._countAndFlagsBits = 0;
  v14[2]._object = 0;
  v17 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v17 + 16) = 0xD000000000000015;
  *(_QWORD *)(v17 + 24) = 0x80000001002712D0;
  *(_QWORD *)(v17 + 32) = v14;
  *(_BYTE *)(v17 + 40) = 0;
  *(_QWORD *)(v17 + 48) = 40;
  *(_QWORD *)(v7 + 32) = v17;
  v18 = objc_msgSend(v0, "mainBundle");
  v62._object = (void *)0x8000000100271670;
  v19._countAndFlagsBits = 0x676E696B6E6953;
  v19._object = (void *)0xE700000000000000;
  v20.value._countAndFlagsBits = 0x636E656772656D45;
  v20.value._object = (void *)0xEE00796464754279;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v62._countAndFlagsBits = 0xD00000000000004CLL;
  v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v62);

  v23 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v23[1] = v22;
  v23[3]._countAndFlagsBits = 0;
  v23[3]._object = 0;
  v23[4]._countAndFlagsBits = static Color.clear.getter(v24);
  v23[2]._countAndFlagsBits = 0;
  v23[2]._object = 0;
  v25 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v25 + 16) = 0xD000000000000016;
  *(_QWORD *)(v25 + 24) = 0x80000001002712B0;
  *(_QWORD *)(v25 + 32) = v23;
  *(_BYTE *)(v25 + 40) = 0;
  *(_QWORD *)(v25 + 48) = 40;
  *(_QWORD *)(v7 + 40) = v25;
  v26 = objc_msgSend(v0, "mainBundle");
  v27._countAndFlagsBits = 0xD000000000000012;
  v63._object = (void *)0x8000000100271670;
  v27._object = (void *)0x80000001002716C0;
  v28.value._countAndFlagsBits = 0x636E656772656D45;
  v28.value._object = (void *)0xEE00796464754279;
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  v63._countAndFlagsBits = 0xD00000000000004CLL;
  v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, v28, (NSBundle)v26, v29, v63);

  v31 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v31[1] = v30;
  v31[3]._countAndFlagsBits = 0;
  v31[3]._object = 0;
  v31[4]._countAndFlagsBits = static Color.clear.getter(v32);
  v31[2]._countAndFlagsBits = 0;
  v31[2]._object = 0;
  v33 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v33 + 16) = 0xD000000000000014;
  *(_QWORD *)(v33 + 24) = 0x8000000100271290;
  *(_QWORD *)(v33 + 32) = v31;
  *(_BYTE *)(v33 + 40) = 0;
  *(_QWORD *)(v33 + 48) = 40;
  *(_QWORD *)(v7 + 48) = v33;
  v34 = objc_msgSend(v0, "mainBundle");
  v64._object = (void *)0x8000000100271670;
  v35._countAndFlagsBits = 0x7053206572616C46;
  v35._object = (void *)0xED0000646574746FLL;
  v36.value._countAndFlagsBits = 0x636E656772656D45;
  v36.value._object = (void *)0xEE00796464754279;
  v37._countAndFlagsBits = 0;
  v37._object = (void *)0xE000000000000000;
  v64._countAndFlagsBits = 0xD00000000000004CLL;
  v38 = NSLocalizedString(_:tableName:bundle:value:comment:)(v35, v36, (NSBundle)v34, v37, v64);

  v39 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v39[1] = v38;
  v39[3]._countAndFlagsBits = 0;
  v39[3]._object = 0;
  v39[4]._countAndFlagsBits = static Color.clear.getter(v40);
  v39[2]._countAndFlagsBits = 0;
  v39[2]._object = 0;
  v41 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v41 + 16) = 0xD000000000000014;
  *(_QWORD *)(v41 + 24) = 0x8000000100271270;
  *(_QWORD *)(v41 + 32) = v39;
  *(_BYTE *)(v41 + 40) = 0;
  *(_QWORD *)(v41 + 48) = 40;
  *(_QWORD *)(v7 + 56) = v41;
  v42 = objc_msgSend(v0, "mainBundle");
  v65._countAndFlagsBits = 0xD000000000000066;
  v65._object = (void *)0x8000000100268440;
  v43._countAndFlagsBits = 0x726568744FLL;
  v43._object = (void *)0xE500000000000000;
  v44.value._countAndFlagsBits = 0x636E656772656D45;
  v44.value._object = (void *)0xEE00796464754279;
  v45._countAndFlagsBits = 0;
  v45._object = (void *)0xE000000000000000;
  v46 = NSLocalizedString(_:tableName:bundle:value:comment:)(v43, v44, (NSBundle)v42, v45, v65);

  v47 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v47[1] = v46;
  v47[3]._countAndFlagsBits = 0;
  v47[3]._object = 0;
  v47[4]._countAndFlagsBits = static Color.clear.getter(v48);
  v47[2]._countAndFlagsBits = 0;
  v47[2]._object = 0;
  v49 = swift_allocObject(v16, 56, 7);
  *(_QWORD *)(v49 + 16) = 0xD000000000000014;
  *(_QWORD *)(v49 + 24) = 0x8000000100271250;
  *(_QWORD *)(v49 + 32) = v47;
  *(_BYTE *)(v49 + 40) = 0;
  *(_QWORD *)(v49 + 48) = 40;
  *(_QWORD *)(v7 + 64) = v49;
  specialized Array._endMutation()(v49);
  v50 = v7;
  v51 = _s8SOSBuddy14OptionSelectedCMa_0();
  v52 = swift_allocObject(v51, 32, 7);
  *(_QWORD *)(v52 + 16) = 0xD000000000000011;
  *(_QWORD *)(v52 + 24) = 0x80000001002713B0;
  v53 = type metadata accessor for Question();
  swift_allocObject(v53, 160, 7);
  return sub_100085664(0x4E47524D45525457, 0xEE00455059545943, 0, (uint64_t)&v55, v50, v52, (uint64_t)_swiftEmptyArrayStorage, 7);
}

uint64_t sub_100214B14()
{
  void *v0;
  id v1;
  Swift::String v2;
  Swift::String_optional v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  Swift::String v19;
  Swift::String_optional v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String *v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  Swift::String v35;
  uint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  _QWORD v39[3];
  Swift::String v40;
  Swift::String v41;
  Swift::String v42;

  v0 = (void *)objc_opt_self(NSBundle);
  v1 = objc_msgSend(v0, "mainBundle");
  v2._countAndFlagsBits = 0xD000000000000012;
  v40._countAndFlagsBits = 0xD00000000000002CLL;
  v40._object = (void *)0x8000000100271220;
  v2._object = (void *)0x8000000100271610;
  v3.value._countAndFlagsBits = 0x636E656772656D45;
  v3.value._object = (void *)0xEE00796464754279;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v40);

  v35 = v5;
  v36 = 0;
  v37 = 0xE000000000000000;
  v38 = _swiftEmptyArrayStorage;
  memset(v39, 0, sizeof(v39));
  v6 = sub_100003DB8(&qword_100328A00);
  v7 = swift_allocObject(v6, 48, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100252A40;
  v8 = objc_msgSend(v0, "mainBundle");
  v41._object = (void *)0x80000001002681B0;
  v9._countAndFlagsBits = 7562585;
  v9._object = (void *)0xE300000000000000;
  v10.value._countAndFlagsBits = 0x636E656772656D45;
  v10.value._object = (void *)0xEE00796464754279;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v41._countAndFlagsBits = 0xD00000000000002DLL;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v41);

  v13 = type metadata accessor for OptionPresentation();
  v14 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v14[1] = v12;
  v14[3]._countAndFlagsBits = 0;
  v14[3]._object = 0;
  v14[4]._countAndFlagsBits = static Color.clear.getter(v15);
  v16 = type metadata accessor for Option();
  v14[2]._countAndFlagsBits = 0;
  v14[2]._object = 0;
  v17 = swift_allocObject(v16, 56, 7);
  strcpy((char *)(v17 + 16), "CBATRAPPED_YES");
  *(_BYTE *)(v17 + 31) = -18;
  *(_QWORD *)(v17 + 32) = v14;
  *(_BYTE *)(v17 + 40) = 0;
  *(_QWORD *)(v17 + 48) = 40;
  *(_QWORD *)(v7 + 32) = v17;
  v18 = objc_msgSend(v0, "mainBundle");
  v42._object = (void *)0x80000001002681B0;
  v19._countAndFlagsBits = 28494;
  v19._object = (void *)0xE200000000000000;
  v20.value._countAndFlagsBits = 0x636E656772656D45;
  v20.value._object = (void *)0xEE00796464754279;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v42._countAndFlagsBits = 0xD00000000000002DLL;
  v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v42);

  v23 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v23[1] = v22;
  v23[3]._countAndFlagsBits = 0;
  v23[3]._object = 0;
  v23[4]._countAndFlagsBits = static Color.clear.getter(v24);
  v23[2]._countAndFlagsBits = 0;
  v23[2]._object = 0;
  v25 = swift_allocObject(v16, 56, 7);
  strcpy((char *)(v25 + 16), "CBATRAPPED_NO");
  *(_WORD *)(v25 + 30) = -4864;
  *(_QWORD *)(v25 + 32) = v23;
  *(_BYTE *)(v25 + 40) = 0;
  *(_QWORD *)(v25 + 48) = 40;
  *(_QWORD *)(v7 + 40) = v25;
  specialized Array._endMutation()(v25);
  v26 = swift_allocObject(v6, 48, 7);
  *(_OWORD *)(v26 + 16) = xmmword_100252A40;
  v27 = _s8SOSBuddy14OptionSelectedCMa_0();
  v28 = swift_allocObject(v27, 32, 7);
  *(_QWORD *)(v28 + 16) = 0xD000000000000011;
  *(_QWORD *)(v28 + 24) = 0x80000001002713F0;
  *(_QWORD *)(v26 + 32) = v28;
  v29 = swift_allocObject(v27, 32, 7);
  *(_QWORD *)(v29 + 16) = 0xD000000000000011;
  *(_QWORD *)(v29 + 24) = 0x8000000100271390;
  *(_QWORD *)(v26 + 40) = v29;
  specialized Array._endMutation()(v29);
  v30 = v26;
  v31 = type metadata accessor for OrCondition();
  v32 = swift_allocObject(v31, 32, 7);
  *(_BYTE *)(v32 + 16) = 1;
  *(_QWORD *)(v32 + 24) = v30;
  v33 = type metadata accessor for Question();
  swift_allocObject(v33, 160, 7);
  return sub_100085664(0x5050415254414243, 0xEA00000000004445, 0, (uint64_t)&v35, v7, v32, (uint64_t)_swiftEmptyArrayStorage, 7);
}

uint64_t sub_100214F18()
{
  void *v0;
  id v1;
  Swift::String v2;
  Swift::String_optional v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  Swift::String v19;
  Swift::String_optional v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String *v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::String v31;
  uint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  _QWORD v35[3];
  Swift::String v36;
  Swift::String v37;
  Swift::String v38;

  v0 = (void *)objc_opt_self(NSBundle);
  v1 = objc_msgSend(v0, "mainBundle");
  v2._countAndFlagsBits = 0xD000000000000012;
  v36._countAndFlagsBits = 0xD00000000000002CLL;
  v36._object = (void *)0x8000000100271220;
  v2._object = (void *)0x80000001002715F0;
  v3.value._countAndFlagsBits = 0x636E656772656D45;
  v3.value._object = (void *)0xEE00796464754279;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v36);

  v31 = v5;
  v32 = 0;
  v33 = 0xE000000000000000;
  v34 = _swiftEmptyArrayStorage;
  memset(v35, 0, sizeof(v35));
  v6 = sub_100003DB8(&qword_100328A00);
  v7 = swift_allocObject(v6, 48, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100252A40;
  v8 = objc_msgSend(v0, "mainBundle");
  v37._object = (void *)0x80000001002681B0;
  v9._countAndFlagsBits = 7562585;
  v9._object = (void *)0xE300000000000000;
  v10.value._countAndFlagsBits = 0x636E656772656D45;
  v10.value._object = (void *)0xEE00796464754279;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v37._countAndFlagsBits = 0xD00000000000002DLL;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v37);

  v13 = type metadata accessor for OptionPresentation();
  v14 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v14[1] = v12;
  v14[3]._countAndFlagsBits = 0;
  v14[3]._object = 0;
  v14[4]._countAndFlagsBits = static Color.clear.getter(v15);
  v16 = type metadata accessor for Option();
  v14[2]._countAndFlagsBits = 0;
  v14[2]._object = 0;
  v17 = swift_allocObject(v16, 56, 7);
  strcpy((char *)(v17 + 16), "CBAINJURED_YES");
  *(_BYTE *)(v17 + 31) = -18;
  *(_QWORD *)(v17 + 32) = v14;
  *(_BYTE *)(v17 + 40) = 0;
  *(_QWORD *)(v17 + 48) = 40;
  *(_QWORD *)(v7 + 32) = v17;
  v18 = objc_msgSend(v0, "mainBundle");
  v38._object = (void *)0x80000001002681B0;
  v19._countAndFlagsBits = 28494;
  v19._object = (void *)0xE200000000000000;
  v20.value._countAndFlagsBits = 0x636E656772656D45;
  v20.value._object = (void *)0xEE00796464754279;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v38._countAndFlagsBits = 0xD00000000000002DLL;
  v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v38);

  v23 = (Swift::String *)swift_allocObject(v13, 72, 7);
  v23[1] = v22;
  v23[3]._countAndFlagsBits = 0;
  v23[3]._object = 0;
  v23[4]._countAndFlagsBits = static Color.clear.getter(v24);
  v23[2]._countAndFlagsBits = 0;
  v23[2]._object = 0;
  v25 = swift_allocObject(v16, 56, 7);
  strcpy((char *)(v25 + 16), "CBAINJURED_NO");
  *(_WORD *)(v25 + 30) = -4864;
  *(_QWORD *)(v25 + 32) = v23;
  *(_BYTE *)(v25 + 40) = 0;
  *(_QWORD *)(v25 + 48) = 40;
  *(_QWORD *)(v7 + 40) = v25;
  specialized Array._endMutation()(v25);
  v26 = v7;
  v27 = _s8SOSBuddy14OptionSelectedCMa_0();
  v28 = swift_allocObject(v27, 32, 7);
  strcpy((char *)(v28 + 16), "CBATRAPPED_NO");
  *(_WORD *)(v28 + 30) = -4864;
  v29 = type metadata accessor for Question();
  swift_allocObject(v29, 160, 7);
  return sub_100085664(0x52554A4E49414243, 0xEA00000000004445, 0, (uint64_t)&v31, v26, v28, (uint64_t)_swiftEmptyArrayStorage, 7);
}

uint64_t sub_100215284()
{
  id v0;
  Swift::String v1;
  Swift::String_optional v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  Swift::String v49;
  uint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  _QWORD v53[3];
  Swift::String v54;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1._countAndFlagsBits = 0xD00000000000001FLL;
  v54._countAndFlagsBits = 0xD00000000000002CLL;
  v54._object = (void *)0x8000000100271220;
  v1._object = (void *)0x80000001002715D0;
  v2.value._countAndFlagsBits = 0x636E656772656D45;
  v2.value._object = (void *)0xEE00796464754279;
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v4 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, v2, (NSBundle)v0, v3, v54);

  v49 = v4;
  v50 = 0;
  v51 = 0xE000000000000000;
  v52 = _swiftEmptyArrayStorage;
  memset(v53, 0, sizeof(v53));
  v5 = sub_100003DB8(&qword_100328A00);
  v6 = swift_allocObject(v5, 40, 7);
  *(_OWORD *)(v6 + 16) = xmmword_10024E820;
  v7 = type metadata accessor for OptionPresentation();
  v8 = (_QWORD *)swift_allocObject(v7, 72, 7);
  v8[2] = 0;
  v8[3] = 0xE000000000000000;
  v8[6] = 0;
  v8[7] = 0;
  v8[8] = static Color.clear.getter(v9);
  v10 = type metadata accessor for Option();
  v8[4] = 0;
  v8[5] = 0;
  v11 = swift_allocObject(v10, 56, 7);
  strcpy((char *)(v11 + 16), "WHATFREE_TEXT");
  *(_WORD *)(v11 + 30) = -4864;
  *(_QWORD *)(v11 + 32) = v8;
  *(_BYTE *)(v11 + 40) = 1;
  *(_QWORD *)(v11 + 48) = 40;
  *(_QWORD *)(v6 + 32) = v11;
  specialized Array._endMutation()(v11);
  v48 = v6;
  v12 = swift_allocObject(v5, 88, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100253030;
  v13 = swift_allocObject(v5, 48, 7);
  *(_OWORD *)(v13 + 16) = xmmword_100252A40;
  v14 = _s8SOSBuddy14OptionSelectedCMa_0();
  v15 = swift_allocObject(v14, 32, 7);
  strcpy((char *)(v15 + 16), "MEDTYPE_OTHER");
  *(_WORD *)(v15 + 30) = -4864;
  *(_QWORD *)(v13 + 32) = v15;
  v16 = type metadata accessor for QuestionCondition();
  v17 = swift_allocObject(v16, 40, 7);
  *(_BYTE *)(v17 + 16) = 2;
  *(_QWORD *)(v17 + 24) = 0x4550595444454DLL;
  *(_QWORD *)(v17 + 32) = 0xE700000000000000;
  *(_QWORD *)(v13 + 40) = v17;
  specialized Array._endMutation()(v17);
  v18 = type metadata accessor for OrCondition();
  v19 = swift_allocObject(v18, 32, 7);
  *(_BYTE *)(v19 + 16) = 1;
  *(_QWORD *)(v19 + 24) = v13;
  *(_QWORD *)(v12 + 32) = v19;
  v20 = swift_allocObject(v5, 56, 7);
  *(_OWORD *)(v20 + 16) = xmmword_10025F3B0;
  v21 = swift_allocObject(v14, 32, 7);
  *(_QWORD *)(v21 + 16) = 0xD000000000000013;
  *(_QWORD *)(v21 + 24) = 0x8000000100271490;
  *(_QWORD *)(v20 + 32) = v21;
  v22 = swift_allocObject(v14, 32, 7);
  *(_QWORD *)(v22 + 16) = 0xD000000000000010;
  *(_QWORD *)(v22 + 24) = 0x8000000100271450;
  *(_QWORD *)(v20 + 40) = v22;
  v23 = swift_allocObject(v16, 40, 7);
  *(_BYTE *)(v23 + 16) = 2;
  *(_QWORD *)(v23 + 24) = 0x59544543494C4F50;
  *(_QWORD *)(v23 + 32) = 0xEA00000000004550;
  *(_QWORD *)(v20 + 48) = v23;
  specialized Array._endMutation()(v23);
  v24 = swift_allocObject(v18, 32, 7);
  *(_BYTE *)(v24 + 16) = 1;
  *(_QWORD *)(v24 + 24) = v20;
  *(_QWORD *)(v12 + 40) = v24;
  v25 = swift_allocObject(v5, 48, 7);
  *(_OWORD *)(v25 + 16) = xmmword_100252A40;
  v26 = swift_allocObject(v14, 32, 7);
  strcpy((char *)(v26 + 16), "FIRETYPE_OTHER");
  *(_BYTE *)(v26 + 31) = -18;
  *(_QWORD *)(v25 + 32) = v26;
  v27 = swift_allocObject(v16, 40, 7);
  *(_BYTE *)(v27 + 16) = 2;
  *(_QWORD *)(v27 + 24) = 0x4550595445524946;
  *(_QWORD *)(v27 + 32) = 0xE800000000000000;
  *(_QWORD *)(v25 + 40) = v27;
  specialized Array._endMutation()(v27);
  v28 = swift_allocObject(v18, 32, 7);
  *(_BYTE *)(v28 + 16) = 1;
  *(_QWORD *)(v28 + 24) = v25;
  *(_QWORD *)(v12 + 48) = v28;
  v29 = swift_allocObject(v5, 48, 7);
  *(_OWORD *)(v29 + 16) = xmmword_100252A40;
  v30 = swift_allocObject(v14, 32, 7);
  strcpy((char *)(v30 + 16), "SNRTYPE_OTHER");
  *(_WORD *)(v30 + 30) = -4864;
  *(_QWORD *)(v29 + 32) = v30;
  v31 = swift_allocObject(v16, 40, 7);
  *(_BYTE *)(v31 + 16) = 2;
  *(_QWORD *)(v31 + 24) = 0x45505954524E53;
  *(_QWORD *)(v31 + 32) = 0xE700000000000000;
  *(_QWORD *)(v29 + 40) = v31;
  specialized Array._endMutation()(v31);
  v32 = swift_allocObject(v18, 32, 7);
  *(_BYTE *)(v32 + 16) = 1;
  *(_QWORD *)(v32 + 24) = v29;
  *(_QWORD *)(v12 + 56) = v32;
  v33 = swift_allocObject(v5, 48, 7);
  *(_OWORD *)(v33 + 16) = xmmword_100252A40;
  v34 = swift_allocObject(v14, 32, 7);
  strcpy((char *)(v34 + 16), "CBATYPE_OTHER");
  *(_WORD *)(v34 + 30) = -4864;
  *(_QWORD *)(v33 + 32) = v34;
  v35 = swift_allocObject(v16, 40, 7);
  *(_BYTE *)(v35 + 16) = 2;
  *(_QWORD *)(v35 + 24) = 0x45505954414243;
  *(_QWORD *)(v35 + 32) = 0xE700000000000000;
  *(_QWORD *)(v33 + 40) = v35;
  specialized Array._endMutation()(v35);
  v36 = swift_allocObject(v18, 32, 7);
  *(_BYTE *)(v36 + 16) = 1;
  *(_QWORD *)(v36 + 24) = v33;
  *(_QWORD *)(v12 + 64) = v36;
  v37 = swift_allocObject(v5, 48, 7);
  *(_OWORD *)(v37 + 16) = xmmword_100252A40;
  v38 = swift_allocObject(v14, 32, 7);
  *(_QWORD *)(v38 + 16) = 0xD000000000000015;
  *(_QWORD *)(v38 + 24) = 0x80000001002712F0;
  *(_QWORD *)(v37 + 32) = v38;
  v39 = swift_allocObject(v16, 40, 7);
  *(_BYTE *)(v39 + 16) = 2;
  *(_QWORD *)(v39 + 24) = 0x424F52504C434856;
  *(_QWORD *)(v39 + 32) = 0xEF455059544D454CLL;
  *(_QWORD *)(v37 + 40) = v39;
  specialized Array._endMutation()(v39);
  v40 = swift_allocObject(v18, 32, 7);
  *(_BYTE *)(v40 + 16) = 1;
  *(_QWORD *)(v40 + 24) = v37;
  *(_QWORD *)(v12 + 72) = v40;
  v41 = swift_allocObject(v5, 48, 7);
  *(_OWORD *)(v41 + 16) = xmmword_100252A40;
  v42 = swift_allocObject(v14, 32, 7);
  *(_QWORD *)(v42 + 16) = 0xD000000000000014;
  *(_QWORD *)(v42 + 24) = 0x8000000100271250;
  *(_QWORD *)(v41 + 32) = v42;
  v43 = (_BYTE *)swift_allocObject(v16, 40, 7);
  v43[16] = 2;
  strcpy(v43 + 24, "WTREMRGNCYTYPE");
  v43[39] = -18;
  *(_QWORD *)(v41 + 40) = v43;
  specialized Array._endMutation()(v43);
  v44 = swift_allocObject(v18, 32, 7);
  *(_BYTE *)(v44 + 16) = 1;
  *(_QWORD *)(v44 + 24) = v41;
  *(_QWORD *)(v12 + 80) = v44;
  specialized Array._endMutation()(v44);
  v45 = swift_allocObject(v18, 32, 7);
  *(_BYTE *)(v45 + 16) = 1;
  *(_QWORD *)(v45 + 24) = v12;
  v46 = type metadata accessor for Question();
  swift_allocObject(v46, 160, 7);
  return sub_100085664(0x4545524654414857, 0xE800000000000000, 2, (uint64_t)&v49, v48, v45, (uint64_t)_swiftEmptyArrayStorage, 7);
}

uint64_t sub_1002159D0()
{
  id v0;
  Swift::String v1;
  Swift::String_optional v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _QWORD v20[3];
  Swift::String v21;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1._countAndFlagsBits = 0xD000000000000040;
  v21._object = (void *)0x8000000100271220;
  v1._object = (void *)0x80000001002711D0;
  v2.value._countAndFlagsBits = 0x636E656772656D45;
  v2.value._object = (void *)0xEE00796464754279;
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v21._countAndFlagsBits = 0xD00000000000002CLL;
  v4 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, v2, (NSBundle)v0, v3, v21);

  v16 = v4;
  v17 = 0;
  v18 = 0xE000000000000000;
  v19 = _swiftEmptyArrayStorage;
  memset(v20, 0, sizeof(v20));
  v5 = sub_100003DB8(&qword_100328A00);
  v6 = swift_allocObject(v5, 40, 7);
  *(_OWORD *)(v6 + 16) = xmmword_10024E820;
  v7 = type metadata accessor for OptionPresentation();
  v8 = (_QWORD *)swift_allocObject(v7, 72, 7);
  v8[2] = 0;
  v8[3] = 0xE000000000000000;
  v8[6] = 0;
  v8[7] = 0;
  v8[8] = static Color.clear.getter(v9);
  v10 = type metadata accessor for Option();
  v8[4] = 0;
  v8[5] = 0;
  v11 = swift_allocObject(v10, 56, 7);
  strcpy((char *)(v11 + 16), "LOCFREE_TEXT");
  *(_BYTE *)(v11 + 29) = 0;
  *(_WORD *)(v11 + 30) = -5120;
  *(_QWORD *)(v11 + 32) = v8;
  *(_BYTE *)(v11 + 40) = 1;
  *(_QWORD *)(v11 + 48) = 40;
  *(_QWORD *)(v6 + 32) = v11;
  specialized Array._endMutation()(v11);
  v12 = _s8SOSBuddy14OptionSelectedCMa_0();
  v13 = swift_allocObject(v12, 32, 7);
  *(_QWORD *)(v13 + 16) = 0x4F4E5F434F4C5441;
  *(_QWORD *)(v13 + 24) = 0xE800000000000000;
  v14 = type metadata accessor for Question();
  swift_allocObject(v14, 160, 7);
  return sub_100085664(0x45455246434F4CLL, 0xE700000000000000, 2, (uint64_t)&v16, v6, v13, (uint64_t)_swiftEmptyArrayStorage, 7);
}

uint64_t sub_100215BE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[8];

  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  v9[2] = 0;
  v9[3] = 0xE000000000000000;
  v9[4] = _swiftEmptyArrayStorage;
  memset(&v9[5], 0, 24);
  v0 = sub_100003DB8(&qword_100328A00);
  v1 = swift_allocObject(v0, 40, 7);
  *(_OWORD *)(v1 + 16) = xmmword_10024E820;
  v2 = type metadata accessor for BuiltInCondition();
  v3 = swift_allocObject(v2, 17, 7);
  *(_BYTE *)(v3 + 16) = 1;
  *(_QWORD *)(v1 + 32) = v3;
  specialized Array._endMutation()(v3);
  v4 = v1;
  v5 = type metadata accessor for AndCondition();
  v6 = swift_allocObject(v5, 32, 7);
  *(_BYTE *)(v6 + 16) = 0;
  *(_QWORD *)(v6 + 24) = v4;
  v7 = type metadata accessor for Question();
  swift_allocObject(v7, 160, 7);
  return sub_100085664(0xD000000000000010, 0x8000000100271190, 3, (uint64_t)v9, (uint64_t)_swiftEmptyArrayStorage, v6, (uint64_t)&off_1002E2688, 0);
}

id sub_100215CF0(uint64_t a1, unint64_t a2)
{
  id v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v20;
  uint64_t v21;

  if (!a2)
    return 0;
  v4 = objc_allocWithZone((Class)NSBundle);
  swift_bridgeObjectRetain(a2);
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v4, "initWithPath:", v5);

  if (!v6)
  {
    if (qword_1003158B0 != -1)
      swift_once(&qword_1003158B0, sub_1000D9854);
    v7 = type metadata accessor for Logger(0);
    sub_10000D744(v7, (uint64_t)qword_10033FEC8);
    swift_bridgeObjectRetain(a2);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(12, -1);
      v12 = swift_slowAlloc(32, -1);
      v21 = v12;
      *(_DWORD *)v11 = 136446210;
      swift_bridgeObjectRetain(a2);
      v20 = sub_100172BEC(a1, a2, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21, v11 + 4, v11 + 12);
      swift_bridgeObjectRelease_n(a2, 3);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Failed to load bundle for %{public}s", v11, 0xCu);
      swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1, -1);
      swift_slowDealloc(v11, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a2, 2);
    }
    return 0;
  }
  swift_bridgeObjectRelease(a2);
  v13 = sub_100185AEC(v6, 0x636E656772656D45, 0xEE00796464754279);
  if (qword_1003158B0 != -1)
    swift_once(&qword_1003158B0, sub_1000D9854);
  v14 = type metadata accessor for Logger(0);
  v15 = sub_10000D744(v14, (uint64_t)qword_10033FEC8);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Loading region questionnaire definition succeeded", v18, 2u);
    swift_slowDealloc(v18, -1, -1);
  }

  return v13;
}

uint64_t sub_100216174()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[8];
  char v11[16];
  __int128 v12;
  uint64_t v13;
  char v14;

  if (qword_1003158B0 != -1)
    swift_once(&qword_1003158B0, sub_1000D9854);
  v0 = type metadata accessor for Logger(0);
  v1 = sub_10000D744(v0, (uint64_t)qword_10033FEC8);
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Creating built-in emergency questionnaire instance", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }

  v10[0] = 0;
  strcpy(v11, "EmergencyBuddy");
  v11[15] = -18;
  v12 = xmmword_10025F3C0;
  v13 = 10;
  v14 = 0;
  v5 = sub_100003DB8(&qword_100328A00);
  v6 = swift_allocObject(v5, 264, 7);
  *(_OWORD *)(v6 + 16) = xmmword_10025F3D0;
  *(_QWORD *)(v6 + 32) = sub_10020D668();
  *(_QWORD *)(v6 + 40) = sub_10020DCAC();
  *(_QWORD *)(v6 + 48) = sub_10020DF78();
  *(_QWORD *)(v6 + 56) = sub_10020E1D4();
  *(_QWORD *)(v6 + 64) = sub_10020E62C();
  *(_QWORD *)(v6 + 72) = sub_10020E9E0();
  *(_QWORD *)(v6 + 80) = sub_10020EDF8();
  *(_QWORD *)(v6 + 88) = sub_10020F358();
  *(_QWORD *)(v6 + 96) = sub_10020F8BC();
  *(_QWORD *)(v6 + 104) = sub_10021014C();
  *(_QWORD *)(v6 + 112) = sub_100210568();
  *(_QWORD *)(v6 + 120) = sub_1002109E0();
  *(_QWORD *)(v6 + 128) = sub_100210D4C();
  *(_QWORD *)(v6 + 136) = sub_1002110B4();
  *(_QWORD *)(v6 + 144) = sub_1002116DC();
  *(_QWORD *)(v6 + 152) = sub_100211AD8();
  *(_QWORD *)(v6 + 160) = sub_100211E40();
  *(_QWORD *)(v6 + 168) = sub_100212314();
  *(_QWORD *)(v6 + 176) = sub_10021293C();
  *(_QWORD *)(v6 + 184) = sub_100212CAC();
  *(_QWORD *)(v6 + 192) = sub_1002131EC();
  *(_QWORD *)(v6 + 200) = sub_100213820();
  *(_QWORD *)(v6 + 208) = sub_100213E80();
  *(_QWORD *)(v6 + 216) = sub_1002144CC();
  *(_QWORD *)(v6 + 224) = sub_100214B14();
  *(_QWORD *)(v6 + 232) = sub_100214F18();
  *(_QWORD *)(v6 + 240) = sub_100215284();
  *(_QWORD *)(v6 + 248) = sub_1002159D0();
  v7 = sub_100215BE0();
  *(_QWORD *)(v6 + 256) = v7;
  specialized Array._endMutation()(v7);
  v8 = type metadata accessor for Questionnaire();
  swift_allocObject(v8, 120, 7);
  return sub_1000847A4(1, 0, (uint64_t)v10, 0, v6);
}

uint64_t sub_10021654C(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  id v17;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;

  if (qword_1003158B0 != -1)
    swift_once(&qword_1003158B0, sub_1000D9854);
  v4 = type metadata accessor for Logger(0);
  sub_10000D744(v4, (uint64_t)qword_10033FEC8);
  v6 = swift_bridgeObjectRetain_n(a2, 2, v5);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v20 = a2;
    v21 = v10;
    *(_DWORD *)v9 = 136446210;
    v19 = a1;
    swift_bridgeObjectRetain(a2);
    v11 = sub_100003DB8(&qword_100318260);
    v13 = String.init<A>(describing:)(&v19, v11, v12);
    v15 = v14;
    v19 = sub_100172BEC(v13, v14, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v9 + 4, v9 + 12);
    swift_bridgeObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease(v15);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Creating emergency questionnaire instance from bundle: %{public}s", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  v16 = sub_100215CF0(a1, a2);
  if (!v16)
    return sub_100216174();
  v17 = v16;
  swift_bridgeObjectRetain(a2);
  return (uint64_t)v17;
}

uint64_t sub_10021674C(__n128 a1)
{
  _BOOL4 v2;

  if ((~a1.n128_u32[0] & 0x7F800000) == 0 && (a1.n128_u32[0] & 0x7FFFFF) != 0)
    return 1;
  v2 = (~a1.n128_u32[2] & 0x7F800000) == 0 && (a1.n128_u32[2] & 0x7FFFFF) != 0;
  return (~a1.n128_u32[1] & 0x7F800000) == 0 && (a1.n128_u32[1] & 0x7FFFFF) != 0 || v2;
}

void sub_1002167A4(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void *);
  id v5;

  v4 = *(void (**)(void *))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4(a2);
  swift_release(v3);

}

void sub_1002167F8(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4)
{
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  unsigned int v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t inited;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  uint64_t v32;
  Class isa;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v52;
  _OWORD v53[2];
  __int128 aBlock;
  void (*v55)(uint64_t, void *);
  void *v56;
  uint64_t (*v57)(void *);
  uint64_t v58;
  char v59[136];

  v5 = a2;
  if (qword_100315848 != -1)
    swift_once(&qword_100315848, sub_1000D9674);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_10000D744(v6, (uint64_t)qword_10033FD90);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  v52 = a1;
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v53[0] = v11;
    v12.n128_u64[0] = 136315138;
    *(_DWORD *)v10 = 136315138;
    *(_QWORD *)&aBlock = a1;
    BYTE8(aBlock) = v5;
    v13 = String.init<A>(describing:)(&aBlock, &type metadata for CoreTelephonySPIAgent.RequestReason, v12);
    v14 = v5;
    v16 = v15;
    *(_QWORD *)&aBlock = sub_100172BEC(v13, v15, (uint64_t *)v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 8, v10 + 4, v10 + 12);
    v17 = v16;
    v5 = v14;
    swift_bridgeObjectRelease(v17);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "requestStewie(%s)", v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }

  v18 = objc_msgSend(objc_allocWithZone((Class)CTStewieRequestContext), "init");
  v19 = sub_100003DB8((uint64_t *)&unk_100318F28);
  inited = swift_initStackObject(v19, v59);
  *(_OWORD *)(inited + 16) = xmmword_10024DEE0;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(kCTStewieRequestSourceKey);
  *(_QWORD *)(inited + 40) = v21;
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(kCTStewieRequestSourceConnectionAssistant);
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v22;
  *(_QWORD *)(inited + 56) = v23;
  *(_QWORD *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(kCTStewieForceTransitionKey);
  *(_QWORD *)(inited + 88) = v24;
  *(_QWORD *)(inited + 120) = &type metadata for Bool;
  *(_BYTE *)(inited + 96) = 1;
  v25 = sub_10022499C(inited);
  v49 = v5;
  if (v5 >> 6)
  {
    if (v5 >> 6 != 1)
      __asm { BR              X9 }
    objc_msgSend(v18, "setReason:", qword_10025F4F8[(char)a1]);
    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(kCTStewieLaunchDemo);
    v28 = v27;
    v56 = &type metadata for Bool;
    LOBYTE(aBlock) = 1;
  }
  else
  {
    objc_msgSend(v18, "setReason:", 7);
    if ((v5 & 1) != 0)
      goto LABEL_12;
    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(kCTStewieProviderIdKey);
    v28 = v29;
    v56 = &type metadata for UInt64;
    *(_QWORD *)&aBlock = a1;
  }
  sub_10003E704(&aBlock, v53);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v25);
  sub_10020CAD4(v53, v26, v28, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease(v28);
  swift_bridgeObjectRelease(0x8000000000000000);
LABEL_12:
  sub_10013E7A0(v25);
  v32 = v31;
  swift_bridgeObjectRelease(v25);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v32);
  objc_msgSend(v18, "setMetadata:", isa);

  v34 = v18;
  v35 = Logger.logObject.getter(v34);
  v36 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = (uint8_t *)swift_slowAlloc(12, -1);
    v38 = swift_slowAlloc(32, -1);
    *(_QWORD *)&aBlock = v38;
    *(_DWORD *)v37 = 136315138;
    v39 = v34;
    v40 = objc_msgSend(v39, "description");
    v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
    v43 = v42;

    *(_QWORD *)&v53[0] = sub_100172BEC(v41, v43, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v53, (char *)v53 + 8, v37 + 4, v37 + 12);

    swift_bridgeObjectRelease(v43);
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "requestStewie with context: %s", v37, 0xCu);
    swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1, -1);
    swift_slowDealloc(v37, -1, -1);

  }
  else
  {

  }
  v44 = *(void **)(v48 + OBJC_IVAR____TtC8SOSBuddy21CoreTelephonySPIAgent_client);
  v45 = swift_allocObject(&unk_1002FAB08, 48, 7);
  *(_QWORD *)(v45 + 16) = v52;
  *(_BYTE *)(v45 + 24) = v49;
  *(_QWORD *)(v45 + 32) = a3;
  *(_QWORD *)(v45 + 40) = a4;
  v57 = sub_10021D088;
  v58 = v45;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v55 = sub_1002167A4;
  v56 = &unk_1002FAB20;
  v46 = _Block_copy(&aBlock);
  v47 = v58;
  swift_retain(a4);
  swift_release(v47);
  objc_msgSend(v44, "requestStewieWithContext:completion:", v34, v46);

  _Block_release(v46);
}

void sub_100216DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  id v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  _QWORD v19[5];
  uint64_t v20;

  v4 = v3;
  if (qword_100315848 != -1)
    swift_once(&qword_100315848, sub_1000D9674);
  v8 = type metadata accessor for Logger(0);
  v9 = sub_10000D744(v8, (uint64_t)qword_10033FD90);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "selectRoadsideProvider", v12, 2u);
    swift_slowDealloc(v12, -1, -1);
  }

  v13 = objc_msgSend(objc_allocWithZone((Class)CTSelectRoadsideProviderContext), "init");
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v14 = v13;
    objc_msgSend(v13, "setProviderId:", a1);
    v15 = *(void **)(v4 + OBJC_IVAR____TtC8SOSBuddy21CoreTelephonySPIAgent_client);
    v16 = swift_allocObject(&unk_1002FAA68, 32, 7);
    *(_QWORD *)(v16 + 16) = a2;
    *(_QWORD *)(v16 + 24) = a3;
    v19[4] = sub_10021CF88;
    v20 = v16;
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 1107296256;
    v19[2] = sub_100017F0C;
    v19[3] = &unk_1002FAA80;
    v17 = _Block_copy(v19);
    v18 = v20;
    swift_retain(a3);
    swift_release(v18);
    objc_msgSend(v15, "selectRoadsideProviderWithContext:completion:", v14, v17);
    _Block_release(v17);

  }
}

id sub_100216FC0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  char *v12;
  id v13;
  id v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  Swift::String v18;
  __n128 v19;
  _QWORD *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  id v27;
  objc_class *v28;
  id v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  _QWORD *v37;
  id v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  objc_super v48;
  _QWORD *v49;
  unint64_t v50;

  v46 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v44 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46, v1);
  v45 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v3, v4);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (void *)objc_opt_self(NSBundle);
  v12 = v0;
  v13 = objc_msgSend(v11, "mainBundle");
  v14 = objc_msgSend(v13, "bundleIdentifier");

  if (v14)
  {
    v15 = (_QWORD *)static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v17 = v16;

  }
  else
  {
    v17 = 0x8000000100260990;
    v15 = (_QWORD *)0xD000000000000012;
  }
  sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v49 = v15;
  v50 = v17;
  swift_bridgeObjectRetain(v17);
  v18._countAndFlagsBits = 0x6C4349505354432ELL;
  v18._object = (void *)0xEC000000746E6569;
  String.append(_:)(v18);
  v19 = swift_bridgeObjectRelease(v17);
  v20 = v49;
  v21 = v50;
  static DispatchQoS.unspecified.getter(v19);
  v49 = _swiftEmptyArrayStorage;
  v22 = sub_1000052EC((unint64_t *)&unk_1003178B0, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v23 = sub_100003DB8((uint64_t *)&unk_100324AE0);
  v24 = sub_10000F138((unint64_t *)&unk_1003178C0, (uint64_t *)&unk_100324AE0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v49, v23, v24, v3, v22);
  v25 = v45;
  (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v45, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v46);
  v26 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(v20, v21, v10, v6, v25, 0);
  *(_QWORD *)&v12[OBJC_IVAR____TtC8SOSBuddy21CoreTelephonySPIAgent_queue] = v26;
  v27 = objc_msgSend(objc_allocWithZone((Class)CoreTelephonyClient), "initWithQueue:", v26);
  *(_QWORD *)&v12[OBJC_IVAR____TtC8SOSBuddy21CoreTelephonySPIAgent_client] = v27;

  v28 = (objc_class *)type metadata accessor for CoreTelephonySPIAgent();
  v48.receiver = v12;
  v48.super_class = v28;
  v29 = objc_msgSendSuper2(&v48, "init");
  v30 = qword_100315820;
  v31 = v29;
  if (v30 != -1)
    swift_once(&qword_100315820, sub_1000D95E4);
  v32 = type metadata accessor for Logger(0);
  sub_10000D744(v32, (uint64_t)qword_10033FD18);
  v33 = v31;
  v34 = Logger.logObject.getter(v33);
  v35 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = (uint8_t *)swift_slowAlloc(12, -1);
    v37 = (_QWORD *)swift_slowAlloc(32, -1);
    v49 = v37;
    *(_DWORD *)v36 = 136446210;
    v46 = (uint64_t)(v36 + 4);
    v38 = v33;
    v39 = objc_msgSend(v38, "description");
    v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
    v42 = v41;

    v47 = sub_100172BEC(v40, v42, (uint64_t *)&v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48, v46, v36 + 12);

    swift_bridgeObjectRelease(v42);
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "[%{public}s] init", v36, 0xCu);
    swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1, -1);
    swift_slowDealloc(v36, -1, -1);

  }
  else
  {

  }
  return v33;
}

id sub_100217454()
{
  void *v0;
  uint64_t v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  objc_class *v12;
  uint64_t v14;
  uint64_t v15;
  objc_super v16;

  if (qword_100315820 != -1)
    swift_once(&qword_100315820, sub_1000D95E4);
  v1 = type metadata accessor for Logger(0);
  sub_10000D744(v1, (uint64_t)qword_10033FD18);
  v2 = v0;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v15 = v6;
    *(_DWORD *)v5 = 136446210;
    v7 = v2;
    v8 = objc_msgSend(v7, "description");
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v10;

    v14 = sub_100172BEC(v9, v11, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v5 + 4, v5 + 12);

    swift_bridgeObjectRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%{public}s] deinit", v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
  v12 = (objc_class *)type metadata accessor for CoreTelephonySPIAgent();
  v16.receiver = v2;
  v16.super_class = v12;
  return objc_msgSendSuper2(&v16, "dealloc");
}

uint64_t type metadata accessor for CoreTelephonySPIAgent()
{
  return objc_opt_self(_TtC8SOSBuddy21CoreTelephonySPIAgent);
}

void sub_1002176B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _QWORD v15[5];
  uint64_t v16;

  v3 = v2;
  if (qword_100315848 != -1)
    swift_once(&qword_100315848, sub_1000D9674);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_10000D744(v6, (uint64_t)qword_10033FD90);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "getConnectionAssistantServicePlot", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  v11 = *(void **)(v3 + OBJC_IVAR____TtC8SOSBuddy21CoreTelephonySPIAgent_client);
  v12 = swift_allocObject(&unk_1002FA7E8, 32, 7);
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  v15[4] = sub_10021CED0;
  v16 = v12;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = sub_100017F0C;
  v15[3] = &unk_1002FA800;
  v13 = _Block_copy(v15);
  v14 = v16;
  swift_retain(a2);
  swift_release(v14);
  objc_msgSend(v11, "getConnectionAssistantServicePlot:", v13);
  _Block_release(v13);
}

void sub_100217838(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _QWORD v15[5];
  uint64_t v16;

  v3 = v2;
  if (qword_100315848 != -1)
    swift_once(&qword_100315848, sub_1000D9674);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_10000D744(v6, (uint64_t)qword_10033FD90);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "fetchMyPhoneNumbers", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  v11 = *(void **)(v3 + OBJC_IVAR____TtC8SOSBuddy21CoreTelephonySPIAgent_client);
  v12 = swift_allocObject(&unk_1002FA748, 32, 7);
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  v15[4] = sub_10021CEB8;
  v16 = v12;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = sub_100017F0C;
  v15[3] = &unk_1002FA760;
  v13 = _Block_copy(v15);
  v14 = v16;
  swift_retain(a2);
  swift_release(v14);
  objc_msgSend(v11, "getSubscriptionInfo:", v13);
  _Block_release(v13);
}

void sub_1002179B8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char **v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  __n128 v52;
  void *v53;
  _QWORD *v54;
  uint64_t v55;
  void *v56;
  _QWORD *v57;
  char *v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t aBlock[5];
  _QWORD *v75;

  v69 = a3;
  v70 = a4;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  v10 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  v71 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = v12;
  if (a2)
  {
    v67 = v11;
    v68 = v10;
    swift_errorRetain(a2);
    if (qword_100315848 != -1)
      swift_once(&qword_100315848, sub_1000D9674);
    v15 = type metadata accessor for Logger(0);
    sub_10000D744(v15, (uint64_t)qword_10033FD90);
    swift_errorRetain(a2);
    v16 = swift_errorRetain(a2);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(12, -1);
      v20 = swift_slowAlloc(32, -1);
      v66 = v7;
      v21 = v20;
      v73 = a2;
      aBlock[0] = v20;
      *(_DWORD *)v19 = 136446210;
      swift_errorRetain(a2);
      v22 = sub_100003DB8((uint64_t *)&unk_100324AA0);
      v24 = String.init<A>(describing:)(&v73, v22, v23);
      v26 = v25;
      v73 = sub_100172BEC(v24, v25, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, aBlock, v19 + 4, v19 + 12);
      swift_bridgeObjectRelease(v26);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "fetchMyPhoneNumbers: %{public}s", v19, 0xCu);
      swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
      v27 = v21;
      v7 = v66;
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v19, -1, -1);

      swift_errorRelease(a2);
    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      swift_errorRelease(a2);

    }
    v34 = 0;
    goto LABEL_29;
  }
  if (!a1 || (v28 = objc_msgSend(a1, "subscriptionsValid")) == 0)
  {
    if (qword_100315848 != -1)
      swift_once(&qword_100315848, sub_1000D9674);
    v47 = type metadata accessor for Logger(0);
    v48 = sub_10000D744(v47, (uint64_t)qword_10033FD90);
    v49 = Logger.logObject.getter(v48);
    v50 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v51 = 0;
      _os_log_impl((void *)&_mh_execute_header, v49, v50, "fetchMyPhoneNumbers: no error returned, but subscriptions == nil", v51, 2u);
      swift_slowDealloc(v51, -1, -1);
    }

    v34 = 0;
    goto LABEL_35;
  }
  v29 = v28;
  v67 = v11;
  v68 = v10;
  v30 = sub_10006477C(0, &qword_10032A170, CTXPCServiceSubscriptionContext_ptr);
  v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v29, v30);

  v65 = v6;
  v66 = v7;
  if (!((unint64_t)v31 >> 62))
  {
    v32 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v32)
      goto LABEL_10;
LABEL_40:
    v34 = (char *)_swiftEmptyArrayStorage;
LABEL_41:
    swift_bridgeObjectRelease(v31);
    v6 = v65;
    v7 = v66;
LABEL_29:
    v11 = v67;
    v10 = v68;
LABEL_35:
    sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
    v53 = (void *)static OS_dispatch_queue.main.getter(v52);
    v54 = (_QWORD *)swift_allocObject(&unk_1002FA798, 40, 7);
    v55 = v70;
    v54[2] = v69;
    v54[3] = v55;
    v54[4] = v34;
    aBlock[4] = (uint64_t)sub_10021CECC;
    v75 = v54;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1001BAACC;
    aBlock[3] = (uint64_t)&unk_1002FA7B0;
    v56 = _Block_copy(aBlock);
    v57 = v75;
    swift_retain(v55);
    swift_release(v57);
    v58 = v71;
    static DispatchQoS.unspecified.getter(v59);
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    v60 = sub_1000052EC((unint64_t *)&qword_10031B310, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v61 = sub_100003DB8((uint64_t *)&unk_1003178D0);
    v62 = sub_10000F138((unint64_t *)&qword_10031B320, (uint64_t *)&unk_1003178D0);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v61, v62, v6, v60);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v58, v10, v56);
    _Block_release(v56);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v58, v11);
    return;
  }
  if (v31 < 0)
    v63 = v31;
  else
    v63 = v31 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v31);
  v32 = _CocoaArrayWrapper.endIndex.getter(v63);
  swift_bridgeObjectRelease(v31);
  if (!v32)
    goto LABEL_40;
LABEL_10:
  if (v32 >= 1)
  {
    v33 = 0;
    v34 = (char *)_swiftEmptyArrayStorage;
    v35 = &selRef_setDeviceMotionUpdateInterval_;
    do
    {
      if ((v31 & 0xC000000000000001) != 0)
        v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v33, v31);
      else
        v36 = *(id *)(v31 + 8 * v33 + 32);
      v37 = v36;
      if ((objc_msgSend(v36, v35[82]) & 1) == 0)
      {
        v38 = objc_msgSend(v37, "phoneNumber");
        if (v38)
        {
          v39 = v38;
          v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
          v42 = v41;

          v43 = HIBYTE(v42) & 0xF;
          if ((v42 & 0x2000000000000000) == 0)
            v43 = v40 & 0xFFFFFFFFFFFFLL;
          if (v43)
          {
            if ((swift_isUniquelyReferenced_nonNull_native(v34) & 1) == 0)
              v34 = sub_100171738(0, *((_QWORD *)v34 + 2) + 1, 1, v34);
            v45 = *((_QWORD *)v34 + 2);
            v44 = *((_QWORD *)v34 + 3);
            if (v45 >= v44 >> 1)
              v34 = sub_100171738((char *)(v44 > 1), v45 + 1, 1, v34);
            *((_QWORD *)v34 + 2) = v45 + 1;
            v46 = &v34[16 * v45];
            *((_QWORD *)v46 + 4) = v40;
            *((_QWORD *)v46 + 5) = v42;
            v35 = &selRef_setDeviceMotionUpdateInterval_;
          }
          else
          {
            swift_bridgeObjectRelease(v42);
          }
        }
      }
      ++v33;

    }
    while (v32 != v33);
    goto LABEL_41;
  }
  __break(1u);
}

void sub_100218018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t aBlock[5];
  uint64_t v28;

  v4 = v3;
  if (qword_100315848 != -1)
    swift_once(&qword_100315848, sub_1000D9674);
  v8 = type metadata accessor for Logger(0);
  v9 = sub_10000D744(v8, (uint64_t)qword_10033FD90);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v25 = v4;
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v26 = a1;
    aBlock[0] = v13;
    *(_DWORD *)v12 = 136446210;
    type metadata accessor for CTStewieExitReason(0);
    v16 = String.init<A>(describing:)(&v26, v14, v15);
    v18 = v17;
    v26 = sub_100172BEC(v16, v17, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, aBlock, v12 + 4, v12 + 12);
    v19 = v18;
    v4 = v25;
    swift_bridgeObjectRelease(v19);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "exitStewie(%{public}s", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }

  v20 = objc_msgSend(objc_allocWithZone((Class)CTStewieExitContext), "init");
  objc_msgSend(v20, "setReason:", a1);
  v21 = *(void **)(v4 + OBJC_IVAR____TtC8SOSBuddy21CoreTelephonySPIAgent_client);
  v22 = swift_allocObject(&unk_1002FA6A8, 32, 7);
  *(_QWORD *)(v22 + 16) = a2;
  *(_QWORD *)(v22 + 24) = a3;
  aBlock[4] = (uint64_t)sub_10021CE74;
  v28 = v22;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1002167A4;
  aBlock[3] = (uint64_t)&unk_1002FA6C0;
  v23 = _Block_copy(aBlock);
  v24 = v28;
  swift_retain(a3);
  swift_release(v24);
  objc_msgSend(v21, "exitStewieWithContext:completion:", v20, v23);
  _Block_release(v23);

}

uint64_t sub_10021827C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint8_t *v28;
  __n128 v29;
  void *v30;
  _QWORD *v31;
  void *v32;
  _QWORD *v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t aBlock[5];
  _QWORD *v48;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v44 = *(_QWORD *)(v11 - 8);
  v45 = v11;
  __chkstk_darwin(v11, v12);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v43 = v7;
    swift_errorRetain(a1);
    if (qword_100315848 != -1)
      swift_once(&qword_100315848, sub_1000D9674);
    v15 = type metadata accessor for Logger(0);
    sub_10000D744(v15, (uint64_t)qword_10033FD90);
    swift_errorRetain(a1);
    v16 = swift_errorRetain(a1);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v41 = a2;
      v19 = swift_slowAlloc(12, -1);
      v42 = a3;
      v20 = (uint8_t *)v19;
      v21 = swift_slowAlloc(32, -1);
      v46 = a1;
      aBlock[0] = v21;
      *(_DWORD *)v20 = 136446210;
      v40 = v20 + 4;
      swift_errorRetain(a1);
      v22 = sub_100003DB8((uint64_t *)&unk_100324AA0);
      v24 = String.init<A>(describing:)(&v46, v22, v23);
      v26 = v25;
      v46 = sub_100172BEC(v24, v25, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, aBlock, v40, v20 + 12);
      v27 = v26;
      a2 = v41;
      swift_bridgeObjectRelease(v27);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "exitStewie: %{public}s", v20, 0xCu);
      swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      v28 = v20;
      a3 = v42;
      swift_slowDealloc(v28, -1, -1);

      swift_errorRelease(a1);
    }
    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      swift_errorRelease(a1);

    }
    v7 = v43;
  }
  sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v30 = (void *)static OS_dispatch_queue.main.getter(v29);
  v31 = (_QWORD *)swift_allocObject(&unk_1002FA6F8, 40, 7);
  v31[2] = a2;
  v31[3] = a3;
  v31[4] = a1;
  aBlock[4] = (uint64_t)sub_10021CE88;
  v48 = v31;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1001BAACC;
  aBlock[3] = (uint64_t)&unk_1002FA710;
  v32 = _Block_copy(aBlock);
  v33 = v48;
  swift_errorRetain(a1);
  swift_retain(a3);
  swift_release(v33);
  static DispatchQoS.unspecified.getter(v34);
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  v35 = sub_1000052EC((unint64_t *)&qword_10031B310, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v36 = sub_100003DB8((uint64_t *)&unk_1003178D0);
  v37 = sub_10000F138((unint64_t *)&qword_10031B320, (uint64_t *)&unk_1003178D0);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v36, v37, v6, v35);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v10, v32);
  _Block_release(v32);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v14, v45);
}

void sub_100218650(char a1)
{
  sub_100218668(a1, "exitStewie(userRequested) success: %{public}s");
}

void sub_10021865C(char a1)
{
  sub_100218668(a1, "exitStewie(tryOut) success: %{public}s");
}

void sub_100218668(char a1, const char *a2)
{
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  NSObject *oslog;
  uint64_t v12;
  uint64_t v13;

  if (qword_100315848 != -1)
    swift_once(&qword_100315848, sub_1000D9674);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_10000D744(v4, (uint64_t)qword_10033FD90);
  oslog = Logger.logObject.getter(v5);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    *(_DWORD *)v7 = 136446210;
    v13 = v8;
    if ((a1 & 1) != 0)
      v9 = 1702195828;
    else
      v9 = 0x65736C6166;
    if ((a1 & 1) != 0)
      v10 = 0xE400000000000000;
    else
      v10 = 0xE500000000000000;
    v12 = sub_100172BEC(v9, v10, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13, v7 + 4, v7 + 12);
    swift_bridgeObjectRelease(v10);
    _os_log_impl((void *)&_mh_execute_header, oslog, v6, a2, v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

  }
  else
  {

  }
}

void sub_10021881C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t aBlock[6];

  v2 = v1;
  if (qword_100315848 != -1)
    swift_once(&qword_100315848, sub_1000D9674);
  v4 = type metadata accessor for Logger(0);
  sub_10000D744(v4, (uint64_t)qword_10033FD90);
  v5 = a1;
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v18 = v2;
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    aBlock[0] = v9;
    *(_DWORD *)v8 = 136446210;
    v10 = v5;
    v11 = objc_msgSend(v10, "description");
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v14 = v13;

    v15 = v12;
    v2 = v18;
    v19 = sub_100172BEC(v15, v14, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, aBlock, v8 + 4, v8 + 12);

    swift_bridgeObjectRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "reportStewieDeviceOrientation: %{public}s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

  }
  v16 = *(void **)(v2 + OBJC_IVAR____TtC8SOSBuddy21CoreTelephonySPIAgent_client);
  aBlock[4] = (uint64_t)sub_100218A6C;
  aBlock[5] = 0;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1002167A4;
  aBlock[3] = (uint64_t)&unk_1002FA670;
  v17 = _Block_copy(aBlock);
  objc_msgSend(v16, "reportStewieDeviceOrientation:completion:", v5, v17);
  _Block_release(v17);
}

void sub_100218A6C(uint64_t a1)
{
  sub_100219A50(a1, "reportStewieDeviceOrientation returned %{public}s");
}

void sub_100218A78(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v4, v5);
  v6 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v6, v7);
  if (qword_100315848 != -1)
    swift_once(&qword_100315848, sub_1000D9674);
  v8 = type metadata accessor for Logger(0);
  sub_10000D744(v8, (uint64_t)qword_10033FD90);
  v9 = a2 >> 62;
  v10 = sub_10000CC50(a1, a2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    *(_DWORD *)swift_slowAlloc(12, -1) = 134349056;
    __asm { BR              X11 }
  }
  sub_10000CCCC(a1, a2);

  __asm { BR              X10 }
}

uint64_t sub_100218F44(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  __n128 v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD aBlock[5];
  uint64_t v40;

  v33 = a3;
  v35 = type metadata accessor for DispatchWorkItemFlags(0);
  v38 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35, v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v36 = *(_QWORD *)(v10 - 8);
  v37 = v10;
  __chkstk_darwin(v10, v11);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1002191B8(a1, a2);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v34 = static OS_dispatch_queue.main.getter(v21);
  v22 = swift_allocObject(&unk_1002FA630, 57, 7);
  *(_QWORD *)(v22 + 16) = v33;
  *(_QWORD *)(v22 + 24) = a4;
  *(_QWORD *)(v22 + 32) = v14;
  *(_QWORD *)(v22 + 40) = v16;
  *(_QWORD *)(v22 + 48) = v18;
  *(_BYTE *)(v22 + 56) = v20;
  aBlock[4] = sub_10021CE44;
  v40 = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001BAACC;
  aBlock[3] = &unk_1002FA648;
  v23 = _Block_copy(aBlock);
  v24 = v40;
  sub_1000BAFC0(v14, v16, v18, v20);
  swift_retain(a4);
  swift_release(v24);
  static DispatchQoS.unspecified.getter(v25);
  aBlock[0] = _swiftEmptyArrayStorage;
  v26 = sub_1000052EC((unint64_t *)&qword_10031B310, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v27 = sub_100003DB8((uint64_t *)&unk_1003178D0);
  v28 = sub_10000F138((unint64_t *)&qword_10031B320, (uint64_t *)&unk_1003178D0);
  v29 = v27;
  v30 = v35;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v29, v28, v35, v26);
  v31 = (void *)v34;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v9, v23);
  _Block_release(v23);

  sub_1000BAFD4(v14, v16, v18, v20);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v30);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v13, v37);
}

uint64_t sub_1002191B8(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v23;
  uint64_t v24;

  if (a2)
  {
    swift_errorRetain(a2);
    if (qword_100315848 != -1)
      swift_once(&qword_100315848, sub_1000D9674);
    v3 = type metadata accessor for Logger(0);
    sub_10000D744(v3, (uint64_t)qword_10033FD90);
    swift_errorRetain(a2);
    v4 = swift_errorRetain(a2);
    v5 = Logger.logObject.getter(v4);
    v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc(12, -1);
      v8 = swift_slowAlloc(32, -1);
      v23 = a2;
      v24 = v8;
      *(_DWORD *)v7 = 136446210;
      swift_errorRetain(a2);
      v9 = sub_100003DB8((uint64_t *)&unk_100324AA0);
      v11 = String.init<A>(describing:)(&v23, v9, v10);
      v13 = v12;
      v23 = sub_100172BEC(v11, v12, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v7 + 4, v7 + 12);
      swift_bridgeObjectRelease(v13);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "compress_with_stewie_codec: failed with error - %{public}s", v7, 0xCu);
      swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v8, -1, -1);
      swift_slowDealloc(v7, -1, -1);

      swift_errorRelease(a2);
    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      swift_errorRelease(a2);

    }
  }
  else
  {
    if (a1)
    {
      v14 = objc_msgSend(a1, "compressedData");
      static Data._unconditionallyBridgeFromObjectiveC(_:)();
      v16 = v15;

      __asm { BR              X10 }
    }
    if (qword_100315848 != -1)
      swift_once(&qword_100315848, sub_1000D9674);
    v17 = type metadata accessor for Logger(0);
    v18 = sub_10000D744(v17, (uint64_t)qword_10033FD90);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "compress_with_stewie_codec: no error but empty compressedData in result", v21, 2u);
      swift_slowDealloc(v21, -1, -1);
    }

  }
  return 0;
}

void sub_10021981C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t aBlock[6];

  v2 = v1;
  if (qword_100315848 != -1)
    swift_once(&qword_100315848, sub_1000D9674);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_10000D744(v4, (uint64_t)qword_10033FD90);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v18 = a1;
    aBlock[0] = v9;
    *(_DWORD *)v8 = 136446210;
    type metadata accessor for CTStewieConnectionAssistantEventType(0);
    v12 = String.init<A>(describing:)(&v18, v10, v11);
    v14 = v13;
    v18 = sub_100172BEC(v12, v13, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, aBlock, v8 + 4, v8 + 12);
    swift_bridgeObjectRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "reportEvent: %{public}s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }

  v15 = objc_msgSend(objc_allocWithZone((Class)CTStewieConnectionAssistantEvent), "init");
  objc_msgSend(v15, "setEventType:", a1);
  v16 = *(void **)(v2 + OBJC_IVAR____TtC8SOSBuddy21CoreTelephonySPIAgent_client);
  aBlock[4] = (uint64_t)sub_100219A44;
  aBlock[5] = 0;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1002167A4;
  aBlock[3] = (uint64_t)&unk_1002FA558;
  v17 = _Block_copy(aBlock);
  objc_msgSend(v16, "reportStewieConnectionAssistantEvent:completion:", v15, v17);
  _Block_release(v17);

}

void sub_100219A44(uint64_t a1)
{
  sub_100219A50(a1, "reportStewieConnectionAssistantEvent returned %{public}s");
}

void sub_100219A50(uint64_t a1, const char *a2)
{
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  NSObject *oslog;
  uint64_t v15;
  uint64_t v16;

  if (a1)
  {
    swift_errorRetain(a1);
    if (qword_100315848 != -1)
      swift_once(&qword_100315848, sub_1000D9674);
    v4 = type metadata accessor for Logger(0);
    sub_10000D744(v4, (uint64_t)qword_10033FD90);
    swift_errorRetain(a1);
    v5 = swift_errorRetain(a1);
    oslog = Logger.logObject.getter(v5);
    v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc(12, -1);
      v8 = swift_slowAlloc(32, -1);
      v15 = a1;
      v16 = v8;
      *(_DWORD *)v7 = 136446210;
      swift_errorRetain(a1);
      v9 = sub_100003DB8((uint64_t *)&unk_100324AA0);
      v11 = String.init<A>(describing:)(&v15, v9, v10);
      v13 = v12;
      v15 = sub_100172BEC(v11, v12, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v7 + 4, v7 + 12);
      swift_bridgeObjectRelease(v13);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, oslog, v6, a2, v7, 0xCu);
      swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v8, -1, -1);
      swift_slowDealloc(v7, -1, -1);

      swift_errorRelease(a1);
    }
    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      swift_errorRelease(a1);

    }
  }
}

uint64_t sub_100219C50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  NSString v11;
  id v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  void *v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v39;
  uint64_t v40;
  id v41;

  if (a2)
  {
    v3 = sub_10021A0DC();
    if (v4)
      return v3;
  }
  v6 = sub_10021A91C();
  v8 = v6;
  if (!v7)
    return v6;
  v9 = v7;
  v10 = *(void **)(v2 + OBJC_IVAR____TtC8SOSBuddy21CoreTelephonySPIAgent_client);
  v11 = String._bridgeToObjectiveC()();
  v41 = 0;
  v12 = objc_msgSend(v10, "getCountryBundleLocationForBundleIdentifier:error:", v11, &v41);

  v13 = v41;
  if (v12)
  {
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v15 = v14;
    v16 = v13;

    if (qword_100315848 != -1)
      swift_once(&qword_100315848, sub_1000D9674);
    v17 = type metadata accessor for Logger(0);
    sub_10000D744(v17, (uint64_t)qword_10033FD90);
    swift_bridgeObjectRetain_n(v15, 2, v18);
    swift_bridgeObjectRetain(v9);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc(22, -1);
      v23 = (void *)swift_slowAlloc(64, -1);
      v41 = v23;
      *(_DWORD *)v22 = 136446466;
      swift_bridgeObjectRetain(v9);
      v39 = sub_100172BEC(v8, v9, (uint64_t *)&v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40, v22 + 4, v22 + 12);
      swift_bridgeObjectRelease_n(v9, 3);
      *(_WORD *)(v22 + 12) = 2082;
      swift_bridgeObjectRetain(v15);
      v39 = sub_100172BEC(v5, v15, (uint64_t *)&v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40, v22 + 14, v22 + 22);
      swift_bridgeObjectRelease_n(v15, 3);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "countryBundleLocation for %{public}s = %{public}s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy(v23, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v23, -1, -1);
      swift_slowDealloc(v22, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v15, 2);
      swift_bridgeObjectRelease_n(v9, 2);
    }
  }
  else
  {
    v24 = v41;
    swift_bridgeObjectRelease(v9);
    v25 = _convertNSErrorToError(_:)(v13);

    swift_willThrow(v26);
    if (qword_100315848 != -1)
      swift_once(&qword_100315848, sub_1000D9674);
    v27 = type metadata accessor for Logger(0);
    sub_10000D744(v27, (uint64_t)qword_10033FD90);
    swift_errorRetain(v25);
    v28 = swift_errorRetain(v25);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(12, -1);
      v32 = (void *)swift_slowAlloc(32, -1);
      v41 = v32;
      *(_DWORD *)v31 = 136446210;
      v39 = v25;
      swift_errorRetain(v25);
      v33 = sub_100003DB8((uint64_t *)&unk_100324AA0);
      v35 = String.init<A>(describing:)(&v39, v33, v34);
      v37 = v36;
      v39 = sub_100172BEC(v35, v36, (uint64_t *)&v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40, v31 + 4, v31 + 12);
      swift_bridgeObjectRelease(v37);
      swift_errorRelease(v25);
      swift_errorRelease(v25);
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Error calling getCountryBundleLocation: %{public}s", v31, 0xCu);
      swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1, -1);
      swift_slowDealloc(v31, -1, -1);

      swift_errorRelease(v25);
    }
    else
    {
      swift_errorRelease(v25);
      swift_errorRelease(v25);
      swift_errorRelease(v25);

    }
    return 0;
  }
  return v5;
}

uint64_t sub_10021A0DC()
{
  uint64_t v0;
  void *v1;
  void *object;
  NSString v3;
  id v4;
  id v5;
  _QWORD *v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  void *v26;
  __n128 v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  id v33;
  NSString v34;
  id v35;
  id v36;
  void *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  id v41;
  __n128 v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  void *v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v66;
  uint64_t v67;
  id v68;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8SOSBuddy21CoreTelephonySPIAgent_client);
  object = String.lowercased()()._object;
  v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v68 = 0;
  v4 = objc_msgSend(v1, "copyMccOrPlmnsListForIso3CountryCode:error:", v3, &v68);

  v5 = v68;
  v6 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, &type metadata for String);
  v7 = v5;

  if (v7)
  {
    v8 = v7;
    swift_bridgeObjectRelease(v6);
    if (qword_100315848 != -1)
      swift_once(&qword_100315848, sub_1000D9674);
    v9 = type metadata accessor for Logger(0);
    sub_10000D744(v9, (uint64_t)qword_10033FD90);
    v10 = v8;
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(12, -1);
      v14 = (void *)swift_slowAlloc(32, -1);
      v68 = v14;
      *(_DWORD *)v13 = 136446210;
      v15 = v10;
      v16 = objc_msgSend(v15, "description");
      v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
      v19 = v18;

      v66 = sub_100172BEC(v17, v19, (uint64_t *)&v68);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, &v67, v13 + 4, v13 + 12);

      swift_bridgeObjectRelease(v19);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Error calling copyMccOrPlmnsList: %{public}s", v13, 0xCu);
      swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v14, -1, -1);
      swift_slowDealloc(v13, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  if (qword_100315848 != -1)
    swift_once(&qword_100315848, sub_1000D9674);
  v20 = type metadata accessor for Logger(0);
  sub_10000D744(v20, (uint64_t)qword_10033FD90);
  v22 = swift_bridgeObjectRetain_n(v6, 2, v21);
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc(12, -1);
    v26 = (void *)swift_slowAlloc(32, -1);
    v68 = v26;
    *(_DWORD *)v25 = 136380675;
    v27 = swift_bridgeObjectRetain(v6);
    v28 = Array.description.getter(v27);
    v30 = v29;
    swift_bridgeObjectRelease(v6);
    v66 = sub_100172BEC(v28, v30, (uint64_t *)&v68);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, &v67, v25 + 4, v25 + 12);
    swift_bridgeObjectRelease_n(v6, 2);
    swift_bridgeObjectRelease(v30);
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "mccOrPlmnsList = %{private}s", v25, 0xCu);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);

    if (v6[2])
      goto LABEL_10;
LABEL_15:
    v48 = swift_bridgeObjectRelease(v6);
    v49 = Logger.logObject.getter(v48);
    v50 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v51 = 0;
      _os_log_impl((void *)&_mh_execute_header, v49, v50, "Empty mccOrPlmnsList returned", v51, 2u);
      swift_slowDealloc(v51, -1, -1);
    }

    return 0;
  }

  swift_bridgeObjectRelease_n(v6, 2);
  if (!v6[2])
    goto LABEL_15;
LABEL_10:
  v32 = v6[4];
  v31 = v6[5];
  swift_bridgeObjectRetain(v31);
  swift_bridgeObjectRelease(v6);
  v33 = objc_msgSend(objc_allocWithZone((Class)CTBundleMatchingInfo), "init");
  v34 = String._bridgeToObjectiveC()();
  objc_msgSend(v33, "setImsi:", v34);

  v68 = 0;
  v35 = objc_msgSend(v1, "getCountryBundleLocationForMatchingInfo:error:", v33, &v68);
  v36 = v68;
  if (!v35)
  {
    v52 = v68;
    swift_bridgeObjectRelease(v31);
    v53 = _convertNSErrorToError(_:)(v36);

    swift_willThrow(v54);
    swift_errorRetain(v53);
    v55 = swift_errorRetain(v53);
    v56 = Logger.logObject.getter(v55);
    v57 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc(12, -1);
      v59 = (void *)swift_slowAlloc(32, -1);
      v68 = v59;
      *(_DWORD *)v58 = 136446210;
      v66 = v53;
      swift_errorRetain(v53);
      v60 = sub_100003DB8((uint64_t *)&unk_100324AA0);
      v62 = String.init<A>(describing:)(&v66, v60, v61);
      v64 = v63;
      v66 = sub_100172BEC(v62, v63, (uint64_t *)&v68);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, &v67, v58 + 4, v58 + 12);
      swift_bridgeObjectRelease(v64);
      swift_errorRelease(v53);
      swift_errorRelease(v53);
      _os_log_impl((void *)&_mh_execute_header, v56, v57, "Error calling getCountryBundleLocationFor: %{public}s", v58, 0xCu);
      swift_arrayDestroy(v59, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v59, -1, -1);
      swift_slowDealloc(v58, -1, -1);

      swift_errorRelease(v53);
    }
    else
    {
      swift_errorRelease(v53);
      swift_errorRelease(v53);
      swift_errorRelease(v53);

    }
    return 0;
  }
  v37 = v35;
  v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
  v40 = v39;
  v41 = v36;

  swift_bridgeObjectRetain_n(v40, 2, v42);
  swift_bridgeObjectRetain(v31);
  v44 = Logger.logObject.getter(v43);
  v45 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v44, v45))
  {
    v46 = swift_slowAlloc(22, -1);
    v47 = (void *)swift_slowAlloc(64, -1);
    v68 = v47;
    *(_DWORD *)v46 = 136446466;
    swift_bridgeObjectRetain(v31);
    v66 = sub_100172BEC(v32, v31, (uint64_t *)&v68);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, &v67, v46 + 4, v46 + 12);
    swift_bridgeObjectRelease_n(v31, 3);
    *(_WORD *)(v46 + 12) = 2082;
    swift_bridgeObjectRetain(v40);
    v66 = sub_100172BEC(v38, v40, (uint64_t *)&v68);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, &v67, v46 + 14, v46 + 22);
    swift_bridgeObjectRelease_n(v40, 3);
    _os_log_impl((void *)&_mh_execute_header, v44, v45, "countryBundleLocation for %{public}s = %{public}s", (uint8_t *)v46, 0x16u);
    swift_arrayDestroy(v47, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v47, -1, -1);
    swift_slowDealloc(v46, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v40, 2);
    swift_bridgeObjectRelease_n(v31, 2);
  }
  return v38;
}

uint64_t sub_10021A91C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  id v8;
  _QWORD *v9;
  char **v10;
  void *v11;
  _QWORD *v12;
  _QWORD *v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  _QWORD *v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint8_t *v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  id v48;
  _QWORD *v49;
  void *v50;
  _QWORD *v51;
  id v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  _QWORD *v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  os_log_type_t v72;
  uint8_t *v73;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;

  v1 = v0;
  if (qword_100315848 != -1)
    swift_once(&qword_100315848, sub_1000D9674);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_10000D744(v2, (uint64_t)qword_10033FD90);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "getBestGuessCountryBundleIdentifier: trying active contexts first.", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(void **)(v1 + OBJC_IVAR____TtC8SOSBuddy21CoreTelephonySPIAgent_client);
  v77 = 0;
  v8 = objc_msgSend(v7, "getActiveContexts:", &v77);
  v9 = v77;
  v10 = &selRef_setDeviceMotionUpdateInterval_;
  if (v8)
  {
    v11 = v8;
    v12 = v77;
    v13 = objc_msgSend(v11, "subscriptions");

    if (v13)
    {
      v15 = sub_10006477C(0, &qword_10032A178, CTXPCContextInfo_ptr);
      v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v15);

      if ((unint64_t)v16 >> 62)
      {
        if (v16 < 0)
          v38 = v16;
        else
          v38 = v16 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v16);
        v17 = _CocoaArrayWrapper.endIndex.getter(v38);
        swift_bridgeObjectRelease(v16);
        if (v17)
          goto LABEL_9;
      }
      else
      {
        v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v17)
        {
LABEL_9:
          v77 = _swiftEmptyArrayStorage;
          specialized ContiguousArray.reserveCapacity(_:)(v17);
          if (v17 < 0)
            __break(1u);
          v18 = 0;
          do
          {
            if ((v16 & 0xC000000000000001) != 0)
              v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v18, v16);
            else
              v19 = *(id *)(v16 + 8 * v18 + 32);
            v20 = v19;
            ++v18;
            v21 = objc_msgSend(v19, "context");

            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            v22 = v77[2];
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v22);
            v23 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v21);
            specialized ContiguousArray._endMutation()(v23);
          }
          while (v17 != v18);
          v13 = v77;
          swift_bridgeObjectRelease(v16);
          v10 = &selRef_setDeviceMotionUpdateInterval_;
          goto LABEL_24;
        }
      }
      swift_bridgeObjectRelease(v16);
      v13 = _swiftEmptyArrayStorage;
    }
LABEL_24:
    v39 = sub_10021B108((uint64_t)v13, v14);
    v41 = v40;
    v42 = swift_bridgeObjectRelease(v13);
    if (v41)
      return v39;
    v28 = Logger.logObject.getter(v42);
    v43 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, (os_log_type_t)v43))
    {
      v44 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v44 = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, (os_log_type_t)v43, "No active context yielded a bundle identifier.", v44, 2u);
      swift_slowDealloc(v44, -1, -1);
    }
    goto LABEL_27;
  }
  v24 = v77;
  v25 = _convertNSErrorToError(_:)(v9);

  swift_willThrow(v26);
  swift_errorRetain(v25);
  v27 = swift_errorRetain(v25);
  v28 = Logger.logObject.getter(v27);
  v29 = static os_log_type_t.error.getter();
  if (!os_log_type_enabled(v28, v29))
  {
    swift_errorRelease(v25);
    swift_errorRelease(v25);
    swift_errorRelease(v25);
LABEL_27:

    goto LABEL_28;
  }
  v30 = (uint8_t *)swift_slowAlloc(12, -1);
  v31 = (_QWORD *)swift_slowAlloc(32, -1);
  v77 = v31;
  *(_DWORD *)v30 = 136446210;
  v75 = v25;
  swift_errorRetain(v25);
  v32 = sub_100003DB8((uint64_t *)&unk_100324AA0);
  v34 = String.init<A>(describing:)(&v75, v32, v33);
  v36 = v35;
  v75 = sub_100172BEC(v34, v35, (uint64_t *)&v77);
  v10 = &selRef_setDeviceMotionUpdateInterval_;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, &v76, v30 + 4, v30 + 12);
  swift_bridgeObjectRelease(v36);
  swift_errorRelease(v25);
  swift_errorRelease(v25);
  _os_log_impl((void *)&_mh_execute_header, v28, v29, "Error calling getActiveContexts: %{public}s", v30, 0xCu);
  swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v31, -1, -1);
  swift_slowDealloc(v30, -1, -1);

  v37 = swift_errorRelease(v25);
LABEL_28:
  v45 = Logger.logObject.getter(v37);
  v46 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v45, v46))
  {
    v47 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v47 = 0;
    _os_log_impl((void *)&_mh_execute_header, v45, v46, "getBestGuessCountryBundleIdentifier: trying all subscriptions.", v47, 2u);
    swift_slowDealloc(v47, -1, -1);
  }

  v77 = 0;
  v48 = objc_msgSend(v7, "getSubscriptionInfoWithError:", &v77);
  v49 = v77;
  if (!v48)
  {
    v56 = v77;
    v57 = _convertNSErrorToError(_:)(v49);

    swift_willThrow(v58);
    swift_errorRetain(v57);
    v59 = swift_errorRetain(v57);
    v60 = Logger.logObject.getter(v59);
    v61 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v60, v61))
    {
      v62 = (uint8_t *)swift_slowAlloc(12, -1);
      v63 = (_QWORD *)swift_slowAlloc(32, -1);
      v77 = v63;
      *(_DWORD *)v62 = 136446210;
      v75 = v57;
      swift_errorRetain(v57);
      v64 = sub_100003DB8((uint64_t *)&unk_100324AA0);
      v66 = String.init<A>(describing:)(&v75, v64, v65);
      v68 = v67;
      v75 = sub_100172BEC(v66, v67, (uint64_t *)&v77);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, &v76, v62 + 4, v62 + 12);
      swift_bridgeObjectRelease(v68);
      swift_errorRelease(v57);
      swift_errorRelease(v57);
      _os_log_impl((void *)&_mh_execute_header, v60, v61, "Error calling getSubscriptionInfo: %{public}s", v62, 0xCu);
      swift_arrayDestroy(v63, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v63, -1, -1);
      swift_slowDealloc(v62, -1, -1);

      swift_errorRelease(v57);
      return 0;
    }
    swift_errorRelease(v57);
    swift_errorRelease(v57);
    swift_errorRelease(v57);
LABEL_40:

    return 0;
  }
  v50 = v48;
  v51 = v77;
  v52 = objc_msgSend(v50, v10[64]);

  if (v52)
  {
    v54 = sub_10006477C(0, &qword_10032A170, CTXPCServiceSubscriptionContext_ptr);
    v55 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v52, v54);

  }
  else
  {
    v55 = 0;
  }
  v39 = sub_10021B108(v55, v53);
  v70 = v69;
  v71 = swift_bridgeObjectRelease(v55);
  if (!v70)
  {
    v60 = Logger.logObject.getter(v71);
    v72 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v60, v72))
    {
      v73 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v73 = 0;
      _os_log_impl((void *)&_mh_execute_header, v60, v72, "No subscription yielded a bundle identifier.", v73, 2u);
      swift_slowDealloc(v73, -1, -1);
    }
    goto LABEL_40;
  }
  return v39;
}

uint64_t sub_10021B108(uint64_t a1, __n128 a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t i;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if (a1)
  {
    v3 = a1 & 0xFFFFFFFFFFFFFF8;
    if ((unint64_t)a1 >> 62)
      goto LABEL_32;
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(a1, 2, a2);
    for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v27))
    {
      v5 = a1 & 0xC000000000000001;
      v6 = 4;
      do
      {
        if (v5)
          v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, a1);
        else
          v7 = *(id *)(a1 + 8 * v6);
        v8 = v7;
        v9 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
        {
          __break(1u);
          goto LABEL_31;
        }
        v10 = objc_msgSend(v7, "labelID");
        if (v10)
        {

          v11 = sub_10021B38C(v8);
          v13 = v12;

          if (v13)
          {
            swift_bridgeObjectRelease_n(a1, 2);
            return v11;
          }
        }
        else
        {

        }
        ++v6;
      }
      while (v9 != v4);
      swift_bridgeObjectRelease(a1);
      for (i = 4; ; ++i)
      {
        v21 = v5 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a1) : *(id *)(a1 + 8 * i);
        v22 = v21;
        v23 = i - 3;
        if (__OFADD__(i - 4, 1))
          break;
        v24 = objc_msgSend(v21, "labelID");
        if (v24)
        {
          v20 = v24;

        }
        else
        {
          v11 = sub_10021B38C(v22);
          v26 = v25;

          if (v26)
          {
            swift_bridgeObjectRelease(a1);
            return v11;
          }
        }
        if (v23 == v4)
        {
          swift_bridgeObjectRelease(a1);
          return 0;
        }
      }
LABEL_31:
      __break(1u);
LABEL_32:
      if (a1 >= 0)
        v27 = v3;
      else
        v27 = a1;
      swift_bridgeObjectRetain_n(a1, 2, a2);
    }
    swift_bridgeObjectRelease_n(a1, 2);
  }
  else
  {
    if (qword_100315848 != -1)
      swift_once(&qword_100315848, sub_1000D9674);
    v14 = type metadata accessor for Logger(0);
    v15 = sub_10000D744(v14, (uint64_t)qword_10033FD90);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Contexts are not available.", v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }

  }
  return 0;
}

uint64_t sub_10021B38C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  __n128 v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  void *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  id v59;

  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void **)(v1 + OBJC_IVAR____TtC8SOSBuddy21CoreTelephonySPIAgent_client);
  v9 = objc_msgSend(objc_allocWithZone((Class)CTBundle), "initWithBundleType:", 6);
  v59 = 0;
  v10 = objc_msgSend(v8, "copyBundleIdentifier:bundleType:error:", a1, v9, &v59);

  v11 = v59;
  if (!v10)
  {
    v31 = v59;
    v32 = _convertNSErrorToError(_:)(v11);

    swift_willThrow(v33);
    if (qword_100315848 != -1)
      swift_once(&qword_100315848, sub_1000D9674);
    v34 = type metadata accessor for Logger(0);
    sub_10000D744(v34, (uint64_t)qword_10033FD90);
    v35 = a1;
    swift_errorRetain(v32);
    v36 = v35;
    v37 = swift_errorRetain(v32);
    v38 = Logger.logObject.getter(v37);
    v39 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = swift_slowAlloc(22, -1);
      v56 = (void *)swift_slowAlloc(64, -1);
      v57 = v32;
      v59 = v56;
      *(_DWORD *)v40 = 136446466;
      swift_errorRetain(v32);
      v41 = sub_100003DB8((uint64_t *)&unk_100324AA0);
      v43 = String.init<A>(describing:)(&v57, v41, v42);
      v55 = v4;
      v45 = v44;
      v57 = sub_100172BEC(v43, v44, (uint64_t *)&v59);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v40 + 4, v40 + 12);
      swift_bridgeObjectRelease(v45);
      swift_errorRelease(v32);
      swift_errorRelease(v32);
      *(_WORD *)(v40 + 12) = 2082;
      v54 = v40 + 14;
      v46 = objc_msgSend(v36, "uuid");
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      v47 = sub_1000052EC(&qword_100316EB8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v48 = dispatch thunk of CustomStringConvertible.description.getter(v3, v47);
      v50 = v49;
      (*(void (**)(char *, uint64_t))(v55 + 8))(v7, v3);
      v57 = sub_100172BEC(v48, v50, (uint64_t *)&v59);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v54, v40 + 22);

      swift_bridgeObjectRelease(v50);
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "Error calling copyBundleIdentifier: %{public}s for %{public}s", (uint8_t *)v40, 0x16u);
      v51 = v56;
      swift_arrayDestroy(v56, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v51, -1, -1);
      swift_slowDealloc(v40, -1, -1);

      swift_errorRelease(v32);
    }
    else
    {
      swift_errorRelease(v32);
      swift_errorRelease(v32);
      swift_errorRelease(v32);

    }
    return 0;
  }
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v14 = v13;
  v15 = v11;

  v16 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0)
    v16 = v12 & 0xFFFFFFFFFFFFLL;
  if (!v16)
  {
    swift_bridgeObjectRelease(v14);
    return 0;
  }
  if (qword_100315848 != -1)
    swift_once(&qword_100315848, sub_1000D9674);
  v17 = type metadata accessor for Logger(0);
  sub_10000D744(v17, (uint64_t)qword_10033FD90);
  v18 = a1;
  swift_bridgeObjectRetain_n(v14, 2, v19);
  v20 = v18;
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc(22, -1);
    v56 = (void *)swift_slowAlloc(64, -1);
    v59 = v56;
    *(_DWORD *)v23 = 136446466;
    v55 = v23 + 4;
    v24 = objc_msgSend(v20, "uuid");
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    v25 = sub_1000052EC(&qword_100316EB8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v26 = dispatch thunk of CustomStringConvertible.description.getter(v3, v25);
    v27 = v4;
    v29 = v28;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v3);
    v57 = sub_100172BEC(v26, v29, (uint64_t *)&v59);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v55, v23 + 12);

    swift_bridgeObjectRelease(v29);
    *(_WORD *)(v23 + 12) = 2082;
    swift_bridgeObjectRetain(v14);
    v57 = sub_100172BEC(v12, v14, (uint64_t *)&v59);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v23 + 14, v23 + 22);
    swift_bridgeObjectRelease_n(v14, 3);
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "copyBundleIdentifier for context %{public}s == '%{public}s'", (uint8_t *)v23, 0x16u);
    v30 = v56;
    swift_arrayDestroy(v56, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1, -1);
    swift_slowDealloc(v23, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v14, 2);
  }
  return v12;
}

uint64_t sub_10021B994(void *a1, void *a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  void *v39;
  _QWORD *v40;
  void *v41;
  _QWORD *v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *aBlock;
  _QWORD v57[4];
  _QWORD *v58;

  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchQoS(0);
  v53 = *(_QWORD *)(v15 - 8);
  v54 = v15;
  __chkstk_darwin(v15, v16);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v52 = a3;
    swift_errorRetain(a1);
    if (qword_100315848 != -1)
      swift_once(&qword_100315848, sub_1000D9674);
    v19 = type metadata accessor for Logger(0);
    sub_10000D744(v19, (uint64_t)qword_10033FD90);
    swift_errorRetain(a1);
    v20 = swift_errorRetain(a1);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = swift_slowAlloc(22, -1);
      v49 = a4;
      v24 = v23;
      v25 = swift_slowAlloc(64, -1);
      v51 = v11;
      v26 = v25;
      v55 = v25;
      aBlock = a2;
      v27.n128_u64[0] = 136315394;
      *(_DWORD *)v24 = 136315394;
      v50 = a5;
      LOBYTE(v57[0]) = v52;
      v28 = String.init<A>(describing:)(&aBlock, &type metadata for CoreTelephonySPIAgent.RequestReason, v27);
      v30 = v29;
      aBlock = (void *)sub_100172BEC(v28, v29, &v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v57, v24 + 4, v24 + 12);
      swift_bridgeObjectRelease(v30);
      *(_WORD *)(v24 + 12) = 2082;
      aBlock = a1;
      swift_errorRetain(a1);
      v31 = sub_100003DB8((uint64_t *)&unk_100324AA0);
      v33 = String.init<A>(describing:)(&aBlock, v31, v32);
      v35 = v34;
      aBlock = (void *)sub_100172BEC(v33, v34, &v55);
      a5 = v50;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v57, v24 + 14, v24 + 22);
      swift_bridgeObjectRelease(v35);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "requestStewie(%s): %{public}s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
      v36 = v26;
      v11 = v51;
      swift_slowDealloc(v36, -1, -1);
      v37 = v24;
      a4 = v49;
      swift_slowDealloc(v37, -1, -1);

      swift_errorRelease(a1);
    }
    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      swift_errorRelease(a1);

    }
  }
  sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v39 = (void *)static OS_dispatch_queue.main.getter(v38);
  v40 = (_QWORD *)swift_allocObject(&unk_1002FAB58, 40, 7);
  v40[2] = a4;
  v40[3] = a5;
  v40[4] = a1;
  v57[3] = sub_10021CECC;
  v58 = v40;
  aBlock = _NSConcreteStackBlock;
  v57[0] = 1107296256;
  v57[1] = sub_1001BAACC;
  v57[2] = &unk_1002FAB70;
  v41 = _Block_copy(&aBlock);
  v42 = v58;
  swift_errorRetain(a1);
  swift_retain(a5);
  swift_release(v42);
  static DispatchQoS.unspecified.getter(v43);
  aBlock = &_swiftEmptyArrayStorage;
  v44 = sub_1000052EC((unint64_t *)&qword_10031B310, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v45 = sub_100003DB8((uint64_t *)&unk_1003178D0);
  v46 = sub_10000F138((unint64_t *)&qword_10031B320, (uint64_t *)&unk_1003178D0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v45, v46, v10, v44);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v18, v14, v41);
  _Block_release(v41);

  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v18, v54);
}

void sub_10021BDC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  _QWORD v16[5];
  uint64_t v17;

  v3 = v2;
  if (qword_100315848 != -1)
    swift_once(&qword_100315848, sub_1000D9674);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_10000D744(v6, (uint64_t)qword_10033FD90);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "fetchRoadsideProviders", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  v11 = *(void **)(v3 + OBJC_IVAR____TtC8SOSBuddy21CoreTelephonySPIAgent_client);
  v12 = objc_msgSend(objc_allocWithZone((Class)CTFetchRoadsideProvidersContext), "init");
  v13 = swift_allocObject(&unk_1002FA888, 32, 7);
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = a2;
  v16[4] = sub_10021CF0C;
  v17 = v13;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_100017F0C;
  v16[3] = &unk_1002FA8A0;
  v14 = _Block_copy(v16);
  v15 = v17;
  swift_retain(a2);
  swift_release(v15);
  objc_msgSend(v11, "fetchRoadsideProvidersWithContext:completion:", v12, v14);
  _Block_release(v14);

}

uint64_t sub_10021BF64(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, const char *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint8_t *v37;
  __n128 v38;
  void *v39;
  _QWORD *v40;
  void *v41;
  _QWORD *v42;
  id v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint8_t *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  const char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t aBlock[5];
  _QWORD *v62;

  v57 = a3;
  v58 = a7;
  v56 = a6;
  v13 = type metadata accessor for DispatchWorkItemFlags(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DispatchQoS(0);
  v59 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18, v19);
  v21 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v54 = a5;
    v55 = v18;
    swift_errorRetain(a2);
    if (qword_100315848 != -1)
      swift_once(&qword_100315848, sub_1000D9674);
    v22 = type metadata accessor for Logger(0);
    sub_10000D744(v22, (uint64_t)qword_10033FD90);
    swift_errorRetain(a2);
    v23 = swift_errorRetain(a2);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, v25))
    {
      v51 = a1;
      v26 = swift_slowAlloc(12, -1);
      v52 = a4;
      v27 = (uint8_t *)v26;
      v28 = swift_slowAlloc(32, -1);
      v50 = a8;
      v29 = v28;
      v60 = a2;
      aBlock[0] = v28;
      v53 = v14;
      *(_DWORD *)v27 = 136446210;
      v49 = v27 + 4;
      swift_errorRetain(a2);
      v30 = sub_100003DB8((uint64_t *)&unk_100324AA0);
      v32 = String.init<A>(describing:)(&v60, v30, v31);
      v34 = v33;
      v60 = sub_100172BEC(v32, v33, aBlock);
      v14 = v53;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, aBlock, v49, v27 + 12);
      v35 = v34;
      a1 = v51;
      swift_bridgeObjectRelease(v35);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v24, v25, v54, v27, 0xCu);
      swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
      v36 = v29;
      a8 = v50;
      swift_slowDealloc(v36, -1, -1);
      v37 = v27;
      a4 = v52;
      swift_slowDealloc(v37, -1, -1);

      swift_errorRelease(a2);
    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      swift_errorRelease(a2);

    }
    v18 = v55;
  }
  sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v39 = (void *)static OS_dispatch_queue.main.getter(v38);
  v40 = (_QWORD *)swift_allocObject(v56, 40, 7);
  v40[2] = v57;
  v40[3] = a4;
  v40[4] = a1;
  aBlock[4] = v58;
  v62 = v40;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1001BAACC;
  aBlock[3] = a8;
  v41 = _Block_copy(aBlock);
  v42 = v62;
  v43 = a1;
  swift_retain(a4);
  swift_release(v42);
  static DispatchQoS.unspecified.getter(v44);
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  v45 = sub_1000052EC((unint64_t *)&qword_10031B310, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v46 = sub_100003DB8((uint64_t *)&unk_1003178D0);
  v47 = sub_10000F138((unint64_t *)&qword_10031B320, (uint64_t *)&unk_1003178D0);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v46, v47, v13, v45);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v21, v17, v41);
  _Block_release(v41);

  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v21, v18);
}

void sub_10021C34C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _QWORD v15[5];
  uint64_t v16;

  v3 = v2;
  if (qword_100315848 != -1)
    swift_once(&qword_100315848, sub_1000D9674);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_10000D744(v6, (uint64_t)qword_10033FD90);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "getResumableRoadsideProvider", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  v11 = *(void **)(v3 + OBJC_IVAR____TtC8SOSBuddy21CoreTelephonySPIAgent_client);
  v12 = swift_allocObject(&unk_1002FA928, 32, 7);
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  v15[4] = sub_10021CF48;
  v16 = v12;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = sub_100017F0C;
  v15[3] = &unk_1002FA940;
  v13 = _Block_copy(v15);
  v14 = v16;
  swift_retain(a2);
  swift_release(v14);
  objc_msgSend(v11, "getResumableRoadsideProviderWithCompletion:", v13);
  _Block_release(v13);
}

uint64_t sub_10021C4CC(void *a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  void **v23;
  void **v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  void **v32;
  uint64_t v33;
  void **v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  _QWORD *v38;
  void **v39;
  __n128 v40;
  void *v41;
  uint64_t v42;
  void *v43;
  _QWORD *v44;
  __n128 v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  id v52;
  void *v53;
  __n128 v54;
  void *v55;
  _QWORD *v56;
  void *v57;
  _QWORD *v58;
  id v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  void *v67;
  _QWORD *v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v75;
  uint64_t v76;
  uint8_t *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void **aBlock;
  uint64_t v85;
  uint64_t (*v86)(uint64_t);
  void *v87;
  uint64_t (*v88)();
  _QWORD *v89;

  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  v12 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  v14 = *(_QWORD *)(v13 - 8);
  v81 = v13;
  v82 = v14;
  __chkstk_darwin(v13, v15);
  v17 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    if (qword_100315848 != -1)
      swift_once(&qword_100315848, sub_1000D9674);
    v78 = v17;
    v79 = v8;
    v33 = type metadata accessor for Logger(0);
    sub_10000D744(v33, (uint64_t)qword_10033FD90);
    v34 = a1;
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v35, v36))
    {
      v76 = a3;
      v77 = (uint8_t *)v12;
      v80 = v9;
      v37 = (uint8_t *)swift_slowAlloc(12, -1);
      v38 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v37 = 138543362;
      if (a1)
      {
        aBlock = v34;
        v39 = v34;
      }
      else
      {
        aBlock = 0;
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v85, v37 + 4, v37 + 12);
      *v38 = a1;

      _os_log_impl((void *)&_mh_execute_header, v35, v36, "resumableProvider: %{public}@", v37, 0xCu);
      v51 = sub_100003DB8(&qword_1003178F0);
      swift_arrayDestroy(v38, 1, v51);
      swift_slowDealloc(v38, -1, -1);
      swift_slowDealloc(v37, -1, -1);

      v9 = v80;
      a3 = v76;
      v50 = (char *)v77;
      if (!a1)
        goto LABEL_20;
    }
    else
    {

      v50 = v12;
      if (!a1)
        goto LABEL_20;
    }
    if (objc_msgSend(v34, "success"))
    {
      v52 = objc_msgSend(v34, "providerId");
      if (v52)
      {
        v53 = v52;
        sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
        v55 = (void *)static OS_dispatch_queue.main.getter(v54);
        v56 = (_QWORD *)swift_allocObject(&unk_1002FA9C8, 40, 7);
        v56[2] = a3;
        v56[3] = a4;
        v56[4] = v53;
        v88 = sub_10021CF7C;
        v89 = v56;
        aBlock = _NSConcreteStackBlock;
        v85 = 1107296256;
        v86 = sub_1001BAACC;
        v87 = &unk_1002FA9E0;
        v57 = _Block_copy(&aBlock);
        v58 = v89;
        swift_retain(a4);
        v59 = v53;
        swift_release(v58);
        v47 = v78;
        static DispatchQoS.unspecified.getter(v60);
        aBlock = (void **)_swiftEmptyArrayStorage;
        v61 = sub_1000052EC((unint64_t *)&qword_10031B310, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v62 = sub_100003DB8((uint64_t *)&unk_1003178D0);
        v63 = sub_10000F138((unint64_t *)&qword_10031B320, (uint64_t *)&unk_1003178D0);
        v64 = v62;
        v12 = v50;
        v8 = v79;
        dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v64, v63, v79, v61);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v47, v50, v57);
        _Block_release(v57);

LABEL_21:
        goto LABEL_22;
      }
    }
LABEL_20:
    sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
    v55 = (void *)static OS_dispatch_queue.main.getter(v65);
    v66 = swift_allocObject(&unk_1002FA978, 32, 7);
    *(_QWORD *)(v66 + 16) = a3;
    *(_QWORD *)(v66 + 24) = a4;
    v88 = sub_10021CF50;
    v89 = (_QWORD *)v66;
    aBlock = _NSConcreteStackBlock;
    v85 = 1107296256;
    v86 = sub_1001BAACC;
    v87 = &unk_1002FA990;
    v67 = _Block_copy(&aBlock);
    v68 = v89;
    swift_retain(a4);
    swift_release(v68);
    v47 = v78;
    static DispatchQoS.unspecified.getter(v69);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v70 = sub_1000052EC((unint64_t *)&qword_10031B310, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v71 = sub_100003DB8((uint64_t *)&unk_1003178D0);
    v72 = sub_10000F138((unint64_t *)&qword_10031B320, (uint64_t *)&unk_1003178D0);
    v73 = v71;
    v12 = v50;
    v8 = v79;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v73, v72, v79, v70);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v47, v50, v67);
    _Block_release(v67);
    goto LABEL_21;
  }
  v80 = v9;
  swift_errorRetain(a2);
  if (qword_100315848 != -1)
    swift_once(&qword_100315848, sub_1000D9674);
  v18 = type metadata accessor for Logger(0);
  sub_10000D744(v18, (uint64_t)qword_10033FD90);
  swift_errorRetain(a2);
  v19 = swift_errorRetain(a2);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc(12, -1);
    v23 = (void **)swift_slowAlloc(32, -1);
    v79 = v8;
    v24 = v23;
    v83 = a2;
    aBlock = v23;
    v78 = a4;
    *(_DWORD *)v22 = 136446210;
    v77 = v22 + 4;
    swift_errorRetain(a2);
    v25 = sub_100003DB8((uint64_t *)&unk_100324AA0);
    v27 = String.init<A>(describing:)(&v83, v25, v26);
    v28 = v17;
    v30 = v29;
    v83 = sub_100172BEC(v27, v29, (uint64_t *)&aBlock);
    a4 = v78;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, &aBlock, v77, v22 + 12);
    v31 = v30;
    v17 = v28;
    swift_bridgeObjectRelease(v31);
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "getResumableRoadsideProvider: %{public}s", v22, 0xCu);
    swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
    v32 = v24;
    v8 = v79;
    swift_slowDealloc(v32, -1, -1);
    swift_slowDealloc(v22, -1, -1);
  }
  else
  {
    swift_errorRelease(a2);
    swift_errorRelease(a2);
  }

  v9 = v80;
  sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v41 = (void *)static OS_dispatch_queue.main.getter(v40);
  v42 = swift_allocObject(&unk_1002FAA18, 32, 7);
  *(_QWORD *)(v42 + 16) = a3;
  *(_QWORD *)(v42 + 24) = a4;
  v88 = sub_10021D380;
  v89 = (_QWORD *)v42;
  aBlock = _NSConcreteStackBlock;
  v85 = 1107296256;
  v86 = sub_1001BAACC;
  v87 = &unk_1002FAA30;
  v43 = _Block_copy(&aBlock);
  v44 = v89;
  swift_retain(a4);
  swift_release(v44);
  static DispatchQoS.unspecified.getter(v45);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v46 = sub_1000052EC((unint64_t *)&qword_10031B310, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v47 = v17;
  v48 = sub_100003DB8((uint64_t *)&unk_1003178D0);
  v49 = sub_10000F138((unint64_t *)&qword_10031B320, (uint64_t *)&unk_1003178D0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v48, v49, v8, v46);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v47, v12, v43);
  _Block_release(v43);

  swift_errorRelease(a2);
LABEL_22:
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(v47, v81);
}

uint64_t sub_10021CD0C(uint64_t (*a1)(void), int a2, id a3)
{
  uint64_t result;
  char v5;

  if (((unint64_t)objc_msgSend(a3, "int64ValueSafe") & 0x8000000000000000) == 0)
    return a1();
  v5 = 2;
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, v5, 3451, 0);
  __break(1u);
  return result;
}

double sub_10021CD98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_10021CDA8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10021CDB0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10021CDD4(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100218F44(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_10021CDDC()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, uint64_t))(v0 + 16))(0, 0, 0, 2);
}

uint64_t sub_10021CE0C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  if (*(_BYTE *)(v0 + 56) != 2)
    sub_10000CCCC(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 57, 7);
}

uint64_t sub_10021CE44()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(unsigned __int8 *)(v0 + 56));
}

uint64_t sub_10021CE74(uint64_t a1)
{
  uint64_t v1;

  return sub_10021827C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10021CE7C()
{
  return sub_10021D0A4((void (*)(_QWORD))&_swift_errorRelease);
}

uint64_t sub_10021CE88()
{
  uint64_t v0;

  return (*(uint64_t (**)(BOOL))(v0 + 16))(*(_QWORD *)(v0 + 32) == 0);
}

void sub_10021CEB8(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002179B8(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_10021CEC0()
{
  return sub_10021D0A4((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_10021CED0(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10021BF64(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), "getConnectionAssistantServicePlot: %{public}s", (uint64_t)&unk_1002FA838, (uint64_t)sub_10021CECC, (uint64_t)&unk_1002FA850);
}

uint64_t sub_10021CF0C(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10021BF64(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), "fetchRoadsideProviders: %{public}s", (uint64_t)&unk_1002FA8D8, (uint64_t)sub_10021CECC, (uint64_t)&unk_1002FA8F0);
}

uint64_t sub_10021CF48(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10021C4CC(a1, a2, *(_QWORD *)(v2 + 16), *(char **)(v2 + 24));
}

uint64_t sub_10021CF50()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 16))(0, 1);
}

uint64_t sub_10021CF7C()
{
  uint64_t v0;

  return sub_10021CD0C(*(uint64_t (**)(void))(v0 + 16), *(_QWORD *)(v0 + 24), *(id *)(v0 + 32));
}

uint64_t sub_10021CF88(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10021BF64(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), "selectRoadsideProvider: %{public}s", (uint64_t)&unk_1002FAAB8, (uint64_t)sub_10021CFF0, (uint64_t)&unk_1002FAAD0);
}

uint64_t sub_10021CFC4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10021CFF0()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  void *v2;
  unsigned int v3;
  int v4;

  v1 = *(uint64_t (**)(_QWORD))(v0 + 16);
  v2 = *(void **)(v0 + 32);
  if (v2)
  {
    v3 = objc_msgSend(v2, "success");
    if (objc_msgSend(v2, "conversationResumed"))
      v4 = 256;
    else
      v4 = 0;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  return v1(v4 | v3);
}

uint64_t sub_10021D064()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10021D088(void *a1)
{
  uint64_t v1;

  return sub_10021B994(a1, *(void **)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_10021D098()
{
  return sub_10021D0A4((void (*)(_QWORD))&_swift_errorRelease);
}

uint64_t sub_10021D0A4(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release(*(_QWORD *)(v1 + 24));
  a1(*(_QWORD *)(v1 + 32));
  return swift_deallocObject(v1, 40, 7);
}

uint64_t getEnumTagSinglePayload for CoreTelephonySPIAgent.RequestReason(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 126);
  v3 = ((*(unsigned __int8 *)(a1 + 8) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 8) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7D)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for CoreTelephonySPIAgent.RequestReason(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_BYTE *)(result + 8) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_10021D184(uint64_t a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;

  v1 = *(unsigned __int8 *)(a1 + 8);
  v2 = (char)v1;
  v3 = v1 >> 6;
  if (v2 >= 0)
    return v3;
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_10021D1A4(uint64_t result)
{
  *(_BYTE *)(result + 8) &= 0x3Fu;
  return result;
}

uint64_t sub_10021D1B4(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    *(_BYTE *)(result + 8) = *(_BYTE *)(result + 8) & 1 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(_QWORD *)result = a2 - 2;
    *(_BYTE *)(result + 8) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreTelephonySPIAgent.RequestReason()
{
  return &type metadata for CoreTelephonySPIAgent.RequestReason;
}

uint64_t storeEnumTagSinglePayload for CoreTelephonySPIAgent.SelectRoadsideProviderResponse(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10021D23C + 4 * byte_10025F3E5[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_10021D270 + 4 * byte_10025F3E0[v4]))();
}

uint64_t sub_10021D270(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_10021D278(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x10021D280);
  return result;
}

uint64_t sub_10021D28C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x10021D294);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10021D298(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_10021D2A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CoreTelephonySPIAgent.SelectRoadsideProviderResponse()
{
  return &type metadata for CoreTelephonySPIAgent.SelectRoadsideProviderResponse;
}

double sub_10021D384(double result, double a2, double a3, double a4, double a5)
{
  if (a3 < result)
    return (1.0 - 1.0 / ((result - a3) / a4 * a5 + 1.0)) * a4 + a3;
  if (result < a2)
    return a2 - (1.0 - 1.0 / ((a2 - result) / a4 * a5 + 1.0)) * a4;
  return result;
}

ValueMetadata *type metadata accessor for Rubberband()
{
  return &type metadata for Rubberband;
}

ValueMetadata *type metadata accessor for MessageProgressViewStyle()
{
  return &type metadata for MessageProgressViewStyle;
}

uint64_t sub_10021D404(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1002A0BCC, 1);
}

uint64_t sub_10021D414@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v29;

  v4 = sub_100003DB8(&qword_10032A180);
  __chkstk_darwin(v4, v5);
  v7 = (uint64_t *)((char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_100003DB8(&qword_10032A188);
  v10 = __chkstk_darwin(v8, v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = GeometryProxy.size.getter(v10);
  v14 = a1[3];
  v15 = a1[4];
  sub_100007BBC(a1, v14);
  v16 = (*(double (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15);
  v17 = COERCE_DOUBLE(ProgressViewStyleConfiguration.fractionCompleted.getter());
  v19 = 0.0;
  if ((v18 & 1) != 0)
    v20 = 0.0;
  else
    v20 = v17;
  if (v13 >= v13 * (1.0 - v20))
    v21 = v13 * (1.0 - v20);
  else
    v21 = v13;
  if (v20 > 0.0)
    v19 = v16 * 0.5;
  if (v13 >= v19 + v13 * v20)
    v22 = v19 + v13 * v20;
  else
    v22 = v13;
  *v7 = static Alignment.leading.getter(*(_QWORD *)&v17, v18);
  v7[1] = v23;
  v24 = sub_100003DB8(&qword_10032A190);
  v25 = sub_10021D5FC(a1, (uint64_t)v7 + *(int *)(v24 + 44), v16, v21, v13, v22);
  if (v20 == 0.0)
    v26 = 0;
  else
    v26 = static Animation.linear.getter(v25);
  sub_10000B234((uint64_t)v7, (uint64_t)v12, &qword_10032A180);
  v27 = &v12[*(int *)(v8 + 36)];
  *(_QWORD *)v27 = v26;
  *((double *)v27 + 1) = v20;
  sub_100007FF0((uint64_t)v7, &qword_10032A180);
  return sub_10000B458((uint64_t)v12, a2, &qword_10032A188);
}

uint64_t sub_10021D5FC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;

  v49 = a2;
  v11 = sub_100003DB8(&qword_100321508);
  __chkstk_darwin(v11, v12);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100003DB8(&qword_100321510);
  __chkstk_darwin(v15, v16);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  v22 = (char *)&v48 - v21;
  v23 = sub_100003DB8(&qword_100321518);
  __chkstk_darwin(v23, v24);
  v26 = (char *)&v48 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100003DB8(&qword_100321520);
  __chkstk_darwin(v27, v28);
  v30 = (char *)&v48 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31, v32);
  v34 = (char *)&v48 - v33;
  *(_QWORD *)v26 = static VerticalAlignment.center.getter(v35);
  *((_QWORD *)v26 + 1) = 0;
  v26[16] = 1;
  v36 = sub_100003DB8(&qword_10032A198);
  v37 = sub_10021D948(a1, (uint64_t)&v26[*(int *)(v36 + 44)], a3, a4);
  v38 = static Alignment.center.getter(v37);
  sub_100133D1C(0.0, 1, 0.0, 1, a5, 0, 0.0, 1, (uint64_t)v30, 0.0, 1, 0.0, 1, v38, v39);
  sub_100007FF0((uint64_t)v26, &qword_100321518);
  v40 = sub_10000B458((uint64_t)v30, (uint64_t)v34, &qword_100321520);
  *(_QWORD *)v14 = static VerticalAlignment.center.getter(v40);
  *((_QWORD *)v14 + 1) = 0;
  v14[16] = 1;
  v41 = sub_100003DB8(&qword_10032A1A0);
  v42 = sub_10021DBDC(a1, (uint64_t)&v14[*(int *)(v41 + 44)], a3, a6);
  v43 = static Alignment.center.getter(v42);
  sub_100133D74(0.0, 1, 0.0, 1, a5, 0, 0.0, 1, (uint64_t)v18, 0.0, 1, 0.0, 1, v43, v44);
  sub_100007FF0((uint64_t)v14, &qword_100321508);
  sub_10000B458((uint64_t)v18, (uint64_t)v22, &qword_100321510);
  sub_10000B234((uint64_t)v34, (uint64_t)v30, &qword_100321520);
  sub_10000B234((uint64_t)v22, (uint64_t)v18, &qword_100321510);
  v45 = v49;
  sub_10000B234((uint64_t)v30, v49, &qword_100321520);
  v46 = sub_100003DB8(&qword_10032A1A8);
  sub_10000B234((uint64_t)v18, v45 + *(int *)(v46 + 48), &qword_100321510);
  sub_100007FF0((uint64_t)v22, &qword_100321510);
  sub_100007FF0((uint64_t)v34, &qword_100321520);
  sub_100007FF0((uint64_t)v18, &qword_100321510);
  return sub_100007FF0((uint64_t)v30, &qword_100321520);
}

uint64_t sub_10021D948@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t KeyPath;
  uint64_t *v36;
  uint64_t v37;
  _OWORD v39[3];

  v8 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v8, v9);
  v11 = (double *)((char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_100003DB8(&qword_10032A1B0);
  __chkstk_darwin(v12, v13);
  v15 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100003DB8(&qword_10032A1B8);
  __chkstk_darwin(v16, v17);
  v19 = (char *)v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v21);
  v23 = (char *)v39 - v22;
  v24 = (char *)v11 + *(int *)(v8 + 20);
  v25 = enum case for RoundedCornerStyle.continuous(_:);
  v26 = type metadata accessor for RoundedCornerStyle(0);
  v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v24, v25, v26);
  *v11 = a3 * 0.5;
  v11[1] = a3 * 0.5;
  v28 = static Alignment.center.getter(v27);
  _FrameLayout.init(width:height:alignment:)(v39, *(_QWORD *)&a4, 0, *(_QWORD *)&a3, 0, v28, v29);
  sub_10002C428((uint64_t)v11, (uint64_t)v15);
  v30 = &v15[*(int *)(v12 + 36)];
  v31 = v39[1];
  *(_OWORD *)v30 = v39[0];
  *((_OWORD *)v30 + 1) = v31;
  *((_OWORD *)v30 + 2) = v39[2];
  sub_10002C46C((uint64_t)v11);
  v32 = a1[3];
  v33 = a1[4];
  sub_100007BBC(a1, v32);
  v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 24))(v32, v33);
  KeyPath = swift_getKeyPath(&unk_10025F588);
  sub_10000B234((uint64_t)v15, (uint64_t)v19, &qword_10032A1B0);
  v36 = (uint64_t *)&v19[*(int *)(v16 + 36)];
  *v36 = KeyPath;
  v36[1] = v34;
  sub_100007FF0((uint64_t)v15, &qword_10032A1B0);
  sub_10000B458((uint64_t)v19, (uint64_t)v23, &qword_10032A1B8);
  sub_10000B234((uint64_t)v23, (uint64_t)v19, &qword_10032A1B8);
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 0;
  v37 = sub_100003DB8(&qword_10032A1C8);
  sub_10000B234((uint64_t)v19, a2 + *(int *)(v37 + 48), &qword_10032A1B8);
  sub_100007FF0((uint64_t)v23, &qword_10032A1B8);
  return sub_100007FF0((uint64_t)v19, &qword_10032A1B8);
}

uint64_t sub_10021DBDC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t KeyPath;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  _OWORD v41[3];

  v40 = a2;
  v7 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v7, v8);
  v10 = (double *)((char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_100003DB8(&qword_10032A1B0);
  __chkstk_darwin(v11, v12);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100003DB8(&qword_10032A1B8);
  __chkstk_darwin(v15, v16);
  v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  v22 = (char *)&v39 - v21;
  v23 = (char *)v10 + *(int *)(v7 + 20);
  v24 = enum case for RoundedCornerStyle.continuous(_:);
  v25 = type metadata accessor for RoundedCornerStyle(0);
  v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v23, v24, v25);
  *v10 = a3 * 0.5;
  v10[1] = a3 * 0.5;
  v27 = static Alignment.center.getter(v26);
  _FrameLayout.init(width:height:alignment:)(v41, *(_QWORD *)&a4, 0, *(_QWORD *)&a3, 0, v27, v28);
  sub_10002C428((uint64_t)v10, (uint64_t)v14);
  v29 = &v14[*(int *)(v11 + 36)];
  v30 = v41[1];
  *(_OWORD *)v29 = v41[0];
  *((_OWORD *)v29 + 1) = v30;
  *((_OWORD *)v29 + 2) = v41[2];
  sub_10002C46C((uint64_t)v10);
  v31 = a1[3];
  v32 = a1[4];
  sub_100007BBC(a1, v31);
  v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 16))(v31, v32);
  KeyPath = swift_getKeyPath(&unk_10025F588);
  sub_10000B234((uint64_t)v14, (uint64_t)v18, &qword_10032A1B0);
  v35 = (uint64_t *)&v18[*(int *)(v15 + 36)];
  *v35 = KeyPath;
  v35[1] = v33;
  sub_100007FF0((uint64_t)v14, &qword_10032A1B0);
  sub_10000B458((uint64_t)v18, (uint64_t)v22, &qword_10032A1B8);
  sub_10000B234((uint64_t)v22, (uint64_t)v18, &qword_10032A1B8);
  v36 = v40;
  sub_10000B234((uint64_t)v18, v40, &qword_10032A1B8);
  v37 = v36 + *(int *)(sub_100003DB8(&qword_10032A1C0) + 48);
  *(_QWORD *)v37 = 0;
  *(_BYTE *)(v37 + 8) = 0;
  sub_100007FF0((uint64_t)v22, &qword_10032A1B8);
  return sub_100007FF0((uint64_t)v18, &qword_10032A1B8);
}

uint64_t sub_10021DE74@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t result;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;

  v5 = type metadata accessor for ProgressViewStyleConfiguration(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5, v8);
  sub_10021DF64(v2, (uint64_t)v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (v9 + 56) & ~v9;
  v11 = swift_allocObject(&unk_1002FADC8, v10 + v7, v9 | 7);
  v12 = v15[1];
  *(_OWORD *)(v11 + 16) = v15[0];
  *(_OWORD *)(v11 + 32) = v12;
  *(_QWORD *)(v11 + 48) = v16;
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(v11 + v10, (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  *a2 = sub_10021E018;
  a2[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v11;
  return result;
}

uint64_t sub_10021DF64(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_10021DFA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for ProgressViewStyleConfiguration(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0((_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10021E018@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  type metadata accessor for ProgressViewStyleConfiguration(0);
  return sub_10021D414((_QWORD *)(v1 + 16), a1);
}

unint64_t sub_10021E074()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10032A1D0;
  if (!qword_10032A1D0)
  {
    v1 = sub_100007FAC(&qword_10032A1D8);
    result = swift_getWitnessTable(&protocol conformance descriptor for GeometryReader<A>, v1);
    atomic_store(result, (unint64_t *)&qword_10032A1D0);
  }
  return result;
}

uint64_t destroy for QuestionnaireView(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[2]);
  swift_release(a1[4]);
  swift_release(a1[6]);
  swift_bridgeObjectRelease(a1[8]);
  return swift_release(a1[9]);
}

uint64_t *initializeWithCopy for QuestionnaireView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v6 = a2[2];
  v5 = a2[3];
  a1[2] = v6;
  a1[3] = v5;
  v8 = a2[4];
  v7 = a2[5];
  a1[4] = v8;
  a1[5] = v7;
  v10 = a2[6];
  v9 = a2[7];
  a1[6] = v10;
  a1[7] = v9;
  v11 = a2[8];
  v12 = a2[9];
  a1[8] = v11;
  a1[9] = v12;
  swift_retain(v3);
  swift_retain(v6);
  swift_retain(v8);
  swift_retain(v10);
  swift_bridgeObjectRetain(v11);
  swift_retain(v12);
  return a1;
}

uint64_t *assignWithCopy for QuestionnaireView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *a1;
  v5 = *a2;
  *a1 = *a2;
  swift_retain(v5);
  swift_release(v4);
  a1[1] = a2[1];
  v6 = a1[2];
  v7 = a2[2];
  a1[2] = v7;
  swift_retain(v7);
  swift_release(v6);
  a1[3] = a2[3];
  v8 = a1[4];
  v9 = a2[4];
  a1[4] = v9;
  swift_retain(v9);
  swift_release(v8);
  a1[5] = a2[5];
  v10 = a1[6];
  v11 = a2[6];
  a1[6] = v11;
  swift_retain(v11);
  swift_release(v10);
  a1[7] = a2[7];
  v12 = a2[8];
  v13 = a1[8];
  a1[8] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  v14 = a1[9];
  v15 = a2[9];
  a1[9] = v15;
  swift_retain(v15);
  swift_release(v14);
  return a1;
}

_QWORD *assignWithTake for QuestionnaireView(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *a1;
  *a1 = *(_QWORD *)a2;
  swift_release(v4);
  v5 = a1[2];
  v6 = *(_QWORD *)(a2 + 16);
  a1[1] = *(_QWORD *)(a2 + 8);
  a1[2] = v6;
  swift_release(v5);
  v7 = a1[4];
  v8 = *(_QWORD *)(a2 + 32);
  a1[3] = *(_QWORD *)(a2 + 24);
  a1[4] = v8;
  swift_release(v7);
  v9 = a1[6];
  v10 = *(_QWORD *)(a2 + 48);
  a1[5] = *(_QWORD *)(a2 + 40);
  a1[6] = v10;
  swift_release(v9);
  a1[7] = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease(a1[8]);
  v11 = a1[9];
  *((_OWORD *)a1 + 4) = *(_OWORD *)(a2 + 64);
  swift_release(v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for QuestionnaireView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for QuestionnaireView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 64) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for QuestionnaireView()
{
  return &type metadata for QuestionnaireView;
}

uint64_t sub_10021E398(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1002A0C10, 1);
}

uint64_t sub_10021E3A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t OpaqueTypeConformance2;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t KeyPath;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t (*v48)();
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (**v53)();
  _OWORD *v54;
  __int128 v55;
  __int128 v56;
  unint64_t v57;
  unint64_t v58;
  char *v59;
  __n128 v60;
  uint64_t v61;
  _OWORD *v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (**v70)(uint64_t);
  void (*v71)(char *, uint64_t, __n128);
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t result;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t (*v82)();
  unint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  _BYTE v103[24];
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  _BYTE v107[24];
  __int128 v108;

  v2 = v1;
  v4 = sub_100003DB8(&qword_10032A1E0);
  __chkstk_darwin(v4, v5);
  v7 = (char *)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100003DB8(&qword_100320D38);
  v98 = *(_QWORD *)(v8 - 8);
  v99 = v8;
  __chkstk_darwin(v8, v9);
  v11 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = sub_100003DB8(&qword_100320D40);
  __chkstk_darwin(v97, v12);
  v14 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = sub_100003DB8(&qword_100320D48);
  __chkstk_darwin(v100, v15);
  v101 = (uint64_t)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100003DB8(&qword_100320D50);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  v102 = (char *)&v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100003DB8(&qword_100320D58);
  __chkstk_darwin(v21, v22);
  __chkstk_darwin(v23, v24);
  v27 = *(_QWORD *)(v2 + 32);
  if (!v27)
  {
    v80 = *(_QWORD *)(v2 + 40);
    v81 = type metadata accessor for EmergencyModel();
    v82 = type metadata accessor for EmergencyModel;
    v83 = &qword_100318690;
LABEL_9:
    v84 = sub_100056D60(v83, (uint64_t (*)(uint64_t))v82);
    result = EnvironmentObject.error()(0, v80, v81, v84);
    __break(1u);
    return result;
  }
  v28 = *(_QWORD *)(v27 + 88);
  if (v28)
  {
    v86 = v14;
    v88 = v27;
    v89 = v26;
    v90 = v18;
    v91 = v17;
    v92 = (uint64_t)&v85 - v25;
    v93 = v21;
    v94 = v4;
    v95 = v7;
    v96 = a1;
    v108 = *(_OWORD *)(v2 + 64);
    *(_OWORD *)v107 = *(_OWORD *)(v2 + 64);
    swift_retain(v28);
    v85 = sub_100003DB8(&qword_100320D78);
    State.projectedValue.getter(v103, v85);
    *(_QWORD *)v107 = *(_QWORD *)v103;
    *(_OWORD *)&v107[8] = *(_OWORD *)&v103[8];
    v29 = sub_100003DB8(&qword_100320D80);
    v30 = sub_100003DB8(&qword_100320D88);
    v31 = sub_1000084FC(&qword_100320D90, &qword_100320D80, (uint64_t)&protocol conformance descriptor for [A]);
    v32 = sub_1000084FC(&qword_100320D98, &qword_100320D80, (uint64_t)&protocol conformance descriptor for [A]);
    v33 = sub_1000084FC(&qword_100320DA0, &qword_100320D80, (uint64_t)&protocol conformance descriptor for [A]);
    v34 = sub_10012820C();
    v35 = sub_100128250();
    *(_QWORD *)v103 = &type metadata for QuestionnairePageView;
    *(_QWORD *)&v103[8] = &type metadata for QuestionnaireNavigationPage;
    *(_QWORD *)&v103[16] = &type metadata for QuestionnairePageView;
    v104 = v34;
    v105 = v35;
    v106 = v34;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v103, &opaque type descriptor for <<opaque return type of View.navigationDestination<A, B>(for:destination:)>>, 1);
    v87 = v28;
    NavigationStack.init<>(path:root:)(v107, sub_10021FF04, v28, v29, v30, v31, v32, v33, OpaqueTypeConformance2, v35);
    v37 = *(_QWORD **)(v2 + 48);
    if (v37)
    {
      v38 = v37[9];
      v39 = v37[10];
      sub_100007BBC(v37 + 6, v38);
      (*(void (**)(_BYTE *__return_ptr, uint64_t, uint64_t))(v39 + 24))(v103, v38, v39);
      v40 = v104;
      v41 = v105;
      sub_100007BBC(v103, v104);
      v42 = (*(uint64_t (**)(uint64_t, unint64_t))(v41 + 568))(v40, v41);
      KeyPath = swift_getKeyPath(&unk_10025F628);
      v45 = v98;
      v44 = v99;
      v46 = (uint64_t)v86;
      (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v86, v11, v99);
      v47 = (uint64_t *)(v46 + *(int *)(v97 + 36));
      *v47 = KeyPath;
      v47[1] = v42;
      (*(void (**)(char *, uint64_t))(v45 + 8))(v11, v44);
      _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v103);
      v48 = (uint64_t (*)())swift_allocObject(&unk_1002FAEB0, 96, 7);
      v49 = *(_OWORD *)(v2 + 48);
      *((_OWORD *)v48 + 3) = *(_OWORD *)(v2 + 32);
      *((_OWORD *)v48 + 4) = v49;
      *((_OWORD *)v48 + 5) = *(_OWORD *)(v2 + 64);
      v50 = *(_OWORD *)(v2 + 16);
      *((_OWORD *)v48 + 1) = *(_OWORD *)v2;
      *((_OWORD *)v48 + 2) = v50;
      v51 = v101;
      sub_10000B234(v46, v101, &qword_100320D40);
      v52 = v100;
      v53 = (uint64_t (**)())(v51 + *(int *)(v100 + 36));
      *v53 = sub_10021FF18;
      v53[1] = v48;
      v53[2] = 0;
      v53[3] = 0;
      sub_10021FF20((uint64_t *)v2);
      sub_100007FF0(v46, &qword_100320D40);
      *(_OWORD *)v103 = v108;
      State.wrappedValue.getter(v107, v85);
      v54 = (_OWORD *)swift_allocObject(&unk_1002FAED8, 96, 7);
      v55 = *(_OWORD *)(v2 + 48);
      v54[3] = *(_OWORD *)(v2 + 32);
      v54[4] = v55;
      v54[5] = *(_OWORD *)(v2 + 64);
      v56 = *(_OWORD *)(v2 + 16);
      v54[1] = *(_OWORD *)v2;
      v54[2] = v56;
      sub_10021FF20((uint64_t *)v2);
      v57 = sub_100128418();
      v58 = sub_100128520();
      v59 = v102;
      View.onChange<A>(of:initial:_:)(v107, 0, sub_10021FF94, v54, v52, v29, v57, v58, v60);
      swift_release(v54);
      swift_bridgeObjectRelease(*(_QWORD *)v107);
      sub_100007FF0(v51, &qword_100320D48);
      v61 = *(_QWORD *)(v88 + 32);
      v62 = (_OWORD *)swift_allocObject(&unk_1002FAF00, 96, 7);
      v63 = *(_OWORD *)(v2 + 48);
      v62[3] = *(_OWORD *)(v2 + 32);
      v62[4] = v63;
      v62[5] = *(_OWORD *)(v2 + 64);
      v64 = *(_OWORD *)(v2 + 16);
      v62[1] = *(_OWORD *)v2;
      v62[2] = v64;
      v65 = swift_allocObject(&unk_1002FAF28, 32, 7);
      *(_QWORD *)(v65 + 16) = sub_10021FFEC;
      *(_QWORD *)(v65 + 24) = v62;
      v66 = v90;
      v67 = v89;
      v68 = v91;
      (*(void (**)(uint64_t, char *, uint64_t))(v90 + 16))(v89, v59, v91);
      v69 = v93;
      *(_QWORD *)(v67 + *(int *)(v93 + 52)) = v61;
      v70 = (uint64_t (**)(uint64_t))(v67 + *(int *)(v69 + 56));
      *v70 = sub_100021640;
      v70[1] = (uint64_t (*)(uint64_t))v65;
      sub_10021FF20((uint64_t *)v2);
      v71 = *(void (**)(char *, uint64_t, __n128))(v66 + 8);
      v72 = swift_retain(v61);
      v71(v59, v68, v72);
      v73 = v92;
      sub_10000B458(v67, v92, &qword_100320D58);
      v74 = (uint64_t)v95;
      sub_10000B234(v73, (uint64_t)v95, &qword_100320D58);
      swift_storeEnumTagMultiPayload(v74, v94, 0);
      v75 = sub_1000084FC(&qword_100320D68, &qword_100320D58, (uint64_t)&protocol conformance descriptor for SubscriptionView<A, B>);
      v76 = sub_1001281C0();
      _ConditionalContent<>.init(storage:)(v74, v69, &type metadata for FallbackQuestionnairePageView, v75, v76);
      swift_release(v87);
      return sub_100007FF0(v73, &qword_100320D58);
    }
    v80 = *(_QWORD *)(v2 + 56);
    v81 = type metadata accessor for UIMetrics();
    v82 = type metadata accessor for UIMetrics;
    v83 = (unint64_t *)&qword_100316A00;
    goto LABEL_9;
  }
  swift_storeEnumTagMultiPayload(v7, v4, 1);
  v78 = sub_1000084FC(&qword_100320D68, &qword_100320D58, (uint64_t)&protocol conformance descriptor for SubscriptionView<A, B>);
  v79 = sub_1001281C0();
  return _ConditionalContent<>.init(storage:)(v7, v21, &type metadata for FallbackQuestionnairePageView, v78, v79);
}

uint64_t sub_10021EB18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[3];
  uint64_t v12[3];

  sub_1000AD2FC((uint64_t)&v10);
  v0 = v10;
  v1 = v11[0];
  v2 = v11[1];
  v3 = v11[2];
  sub_10000B458((uint64_t)v11, (uint64_t)v12, &qword_10031E720);
  swift_retain(v0);
  sub_1000D638C(v12);
  v4 = type metadata accessor for UIMetrics();
  v5 = sub_100056D60((unint64_t *)&qword_100316A00, (uint64_t (*)(uint64_t))type metadata accessor for UIMetrics);
  v9 = EnvironmentObject.init()(v4, v5);
  v6 = sub_10012820C();
  v7 = sub_100128250();
  View.navigationDestination<A, B>(for:destination:)(&type metadata for QuestionnaireNavigationPage, sub_100126D4C, 0, &type metadata for QuestionnairePageView, &type metadata for QuestionnaireNavigationPage, &type metadata for QuestionnairePageView, v6, v7, v6);
  swift_release(v0);
  sub_1000D63B8(v12);
  swift_release(v0);
  swift_release(v9);
  return sub_10007BB74(v1, v2, v3);
}

uint64_t sub_10021EC54(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  __int128 v11;

  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    v3 = *(_QWORD *)(v2 + 88);
    if (v3)
    {
      swift_retain(*(_QWORD *)(v2 + 88));
      v4 = sub_1000AD388();
      swift_release(v3);
    }
    else
    {
      v4 = _swiftEmptyArrayStorage;
    }
    v11 = *(_OWORD *)(a1 + 64);
    v10 = v4;
    v5 = sub_100003DB8(&qword_100320D78);
    return State.wrappedValue.setter(&v10, v5);
  }
  else
  {
    v7 = *(_QWORD *)(a1 + 40);
    v8 = type metadata accessor for EmergencyModel();
    v9 = sub_100056D60(&qword_100318690, (uint64_t (*)(uint64_t))type metadata accessor for EmergencyModel);
    result = EnvironmentObject.error()(0, v7, v8, v9);
    __break(1u);
  }
  return result;
}

void sub_10021ED1C(uint64_t **a1, uint64_t **a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, char *);
  unint64_t v23;
  void (*v24)(uint64_t, char *);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  NSObject *v28;
  _BOOL4 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  void (*v35)(uint64_t, char *);
  uint64_t *v36;
  __n128 v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  __n128 v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  os_log_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  __n128 v49;
  uint64_t v50;
  uint64_t *v51;
  NSObject *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t *v61;
  NSObject *v62;
  os_log_type_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  NSObject *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  Swift::String v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  void *v90;
  Swift::String v91;
  unint64_t v92;
  void *v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t *v96;
  __n128 v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t (*v103)();
  unint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  os_log_t v109;
  unint64_t v110;
  int v111;
  unint64_t v112;
  void (*v113)(uint64_t, uint64_t, char *);
  void (*v114)(uint64_t, char *);
  char *v115;
  uint64_t v116;
  uint64_t v117;
  __int128 v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  __chkstk_darwin(v9, v10);
  __chkstk_darwin(v11, v12);
  v16 = (uint64_t)&v106 - v15;
  v17 = *a1;
  v18 = *a2;
  v19 = (*a2)[2];
  if (v19 < v17[2])
  {
    v20 = a3[4];
    if (v20)
    {
      v21 = *(_QWORD *)(v20 + 88);
      v119 = v13;
      *(_QWORD *)&v118 = v14;
      if (v21)
      {
        swift_retain(v21);
        v22 = (void (*)(uint64_t, char *))sub_1000AD388();
        swift_release(v21);
      }
      else
      {
        v22 = (void (*)(uint64_t, char *))_swiftEmptyArrayStorage;
      }
      v23 = *((_QWORD *)v22 + 2);
      v24 = v22;
      v25 = v23 - v19;
      if (v23 <= v19)
      {
        swift_bridgeObjectRelease(v24);
        return;
      }
      v114 = v24;
      v110 = v23;
      v112 = v19;
      if (qword_1003158B0 != -1)
        goto LABEL_53;
LABEL_8:
      v26 = (char *)v6;
      v6 = sub_10000D744(v6, (uint64_t)qword_10033FEC8);
      v113 = *(void (**)(uint64_t, uint64_t, char *))(v7 + 16);
      v113(v16, v6, v26);
      sub_10021FF20(a3);
      swift_bridgeObjectRetain(v17);
      swift_bridgeObjectRetain(v18);
      sub_10021FF20(a3);
      swift_bridgeObjectRetain(v17);
      swift_bridgeObjectRetain(v18);
      v28 = Logger.logObject.getter(v27);
      v111 = static os_log_type_t.default.getter(v28);
      v29 = os_log_type_enabled(v28, (os_log_type_t)v111);
      v120 = a3;
      v116 = v6;
      v117 = v20;
      v115 = v26;
      if (v29)
      {
        v109 = v28;
        v30 = swift_slowAlloc(32, -1);
        v108 = swift_slowAlloc(96, -1);
        v121 = v108;
        *(_DWORD *)v30 = 136446723;
        v31 = *(_QWORD *)(v20 + 88);
        if (v31)
        {
          swift_retain(*(_QWORD *)(v20 + 88));
          v32 = sub_1000AD18C();
          v34 = v33;
          swift_release(v31);
        }
        else
        {
          v34 = 0xE100000000000000;
          v32 = 63;
        }
        v123 = sub_100172BEC(v32, v34, &v121);
        v107 = &v124;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v123, &v124, v30 + 4, v30 + 12);
        swift_bridgeObjectRelease(v34);
        v36 = v120;
        sub_100220018(v120);
        sub_100220018(v36);
        *(_WORD *)(v30 + 12) = 2081;
        v106 = v30 + 14;
        v37 = swift_bridgeObjectRetain(v17);
        v38 = Array.description.getter(v37);
        v40 = v39;
        swift_bridgeObjectRelease(v17);
        v123 = sub_100172BEC(v38, v40, &v121);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v123, &v124, v106, v30 + 22);
        swift_bridgeObjectRelease_n(v17, 2);
        swift_bridgeObjectRelease(v40);
        *(_WORD *)(v30 + 22) = 2081;
        v41 = swift_bridgeObjectRetain(v18);
        v42 = Array.description.getter(v41);
        v44 = v43;
        swift_bridgeObjectRelease(v18);
        v123 = sub_100172BEC(v42, v44, &v121);
        a3 = v36;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v123, v107, v30 + 24, v30 + 32);
        swift_bridgeObjectRelease_n(v18, 2);
        swift_bridgeObjectRelease(v44);
        v45 = v109;
        _os_log_impl((void *)&_mh_execute_header, v109, (os_log_type_t)v111, "[%{public}s] Path reduced from %{private}s to %{private}s", (uint8_t *)v30, 0x20u);
        v46 = v108;
        swift_arrayDestroy(v108, 3, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v46, -1, -1);
        swift_slowDealloc(v30, -1, -1);

        v35 = *(void (**)(uint64_t, char *))(v7 + 8);
        v35(v16, v115);
        v6 = v116;
        v20 = v117;
      }
      else
      {
        sub_100220018(a3);
        sub_100220018(a3);

        swift_bridgeObjectRelease_n(v18, 2);
        swift_bridgeObjectRelease_n(v17, 2);
        v35 = *(void (**)(uint64_t, char *))(v7 + 8);
        v35(v16, v26);
      }
      v47 = a3[2];
      if (!v47)
      {
        v101 = a3[3];
        v102 = type metadata accessor for AppRuntimeStateModel();
        v103 = type metadata accessor for AppRuntimeStateModel;
        v104 = &qword_100318498;
        goto LABEL_57;
      }
      v48 = *(unsigned __int8 *)(v47 + 41);
      v49 = swift_bridgeObjectRelease(v114);
      if (v48 == 3)
      {
        v114 = v35;
        v50 = v118;
        v7 = (uint64_t)v115;
        ((void (*)(_QWORD, uint64_t, char *, __n128))v113)(v118, v6, v115, v49);
        sub_10021FF20(a3);
        v51 = sub_10021FF20(a3);
        v52 = Logger.logObject.getter(v51);
        v16 = static os_log_type_t.default.getter(v52);
        if (os_log_type_enabled(v52, (os_log_type_t)v16))
        {
          v53 = swift_slowAlloc(22, -1);
          v54 = swift_slowAlloc(32, -1);
          v121 = v54;
          *(_DWORD *)v53 = 136446466;
          v55 = *(_QWORD *)(v20 + 88);
          if (v55)
          {
            swift_retain(*(_QWORD *)(v20 + 88));
            v56 = sub_1000AD18C();
            v58 = v57;
            swift_release(v55);
          }
          else
          {
            v58 = 0xE100000000000000;
            v56 = 63;
          }
          v123 = sub_100172BEC(v56, v58, &v121);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v123, &v124, v53 + 4, v53 + 12);
          swift_bridgeObjectRelease(v58);
          a3 = v120;
          sub_100220018(v120);
          sub_100220018(a3);
          *(_WORD *)(v53 + 12) = 2050;
          v123 = v25;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v123, &v124, v53 + 14, v53 + 22);
          _os_log_impl((void *)&_mh_execute_header, v52, (os_log_type_t)v16, "[%{public}s] Going back %{public}ld page(s)", (uint8_t *)v53, 0x16u);
          swift_arrayDestroy(v54, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v54, -1, -1);
          swift_slowDealloc(v53, -1, -1);

          v114(v118, (char *)v7);
          v6 = v116;
          v20 = v117;
        }
        else
        {
          sub_100220018(a3);
          sub_100220018(a3);

          v114(v50, (char *)v7);
        }
        if (v25 < 0)
        {
          __break(1u);
          goto LABEL_55;
        }
        if (v110 == v112)
          return;
        v18 = &qword_10032B0E0;
        v17 = &qword_100317750;
        *(_QWORD *)&v71 = 136446210;
        v118 = v71;
        v115 = (char *)&type metadata for Any + 8;
        while (1)
        {
          v72 = *(_QWORD *)(v20 + 88);
          if (v72)
          {
            v73 = *(_QWORD *)(v72 + 32);
            v74 = __CFADD__(v73, 1);
            v75 = v73 + 1;
            if (v74)
            {
              __break(1u);
LABEL_53:
              swift_once(&qword_1003158B0, sub_1000D9854);
              goto LABEL_8;
            }
            *(_QWORD *)(v72 + 32) = v75;
            swift_retain(v72);
            v16 = sub_1000B147C();
            v76 = *(_QWORD *)(v72 + 32);
            if (!v76 || (v77 = v76 - 1, (*(_QWORD *)(v72 + 32) = v77) == 0))
            {
              if ((*(_BYTE *)(v72 + 40) & 1) != 0)
              {
                *(_BYTE *)(v72 + 40) = 0;
                v7 = sub_100003DB8(&qword_10032B0E0);
                v78 = sub_1000084FC((unint64_t *)&qword_100317750, &qword_10032B0E0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
                Subject<>.send()(v7, v78);
              }
              if (*(_BYTE *)(v72 + 41) == 1)
              {
                *(_BYTE *)(v72 + 41) = 0;
                v7 = sub_100003DB8(&qword_10032B0E0);
                v79 = sub_1000084FC((unint64_t *)&qword_100317750, &qword_10032B0E0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
                Subject<>.send()(v7, v79);
              }
            }
            swift_release(v72);
            if ((v16 & 1) == 0)
            {
              sub_10021FF20(a3);
              v80 = sub_10021FF20(a3);
              v81 = Logger.logObject.getter(v80);
              v16 = static os_log_type_t.error.getter();
              if (os_log_type_enabled(v81, (os_log_type_t)v16))
              {
                v82 = swift_slowAlloc(12, -1);
                v7 = swift_slowAlloc(32, -1);
                v123 = v7;
                *(_DWORD *)v82 = v118;
                v83 = *(_QWORD *)(v20 + 88);
                if (v83)
                {
                  if (*(_BYTE *)(*(_QWORD *)(v83 + 264) + 32))
                    v84 = 82;
                  else
                    v84 = 69;
                  v121 = v84;
                  v122 = 0xE100000000000000;
                  swift_bridgeObjectRetain(0xE100000000000000);
                  v85._countAndFlagsBits = 46;
                  v85._object = (void *)0xE100000000000000;
                  String.append(_:)(v85);
                  v119 = v7;
                  v87 = v121;
                  v86 = v122;
                  swift_retain(v83);
                  swift_bridgeObjectRelease(0xE100000000000000);
                  v121 = *(_QWORD *)(v83 + 272);
                  v88 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt64, &protocol witness table for UInt64);
                  v90 = v89;
                  v121 = v87;
                  v122 = v86;
                  v7 = v119;
                  swift_bridgeObjectRetain(v86);
                  v91._countAndFlagsBits = v88;
                  v20 = v117;
                  v91._object = v90;
                  String.append(_:)(v91);
                  swift_release(v83);
                  v92 = v86;
                  v6 = v116;
                  swift_bridgeObjectRelease(v92);
                  v93 = v90;
                  a3 = v120;
                  swift_bridgeObjectRelease(v93);
                  v94 = v121;
                  v95 = v122;
                }
                else
                {
                  v95 = 0xE100000000000000;
                  v94 = 63;
                }
                v18 = &qword_10032B0E0;
                *(_QWORD *)(v82 + 4) = sub_100172BEC(v94, v95, &v123);
                swift_bridgeObjectRelease(v95);
                sub_100220018(a3);
                sub_100220018(a3);
                _os_log_impl((void *)&_mh_execute_header, v81, (os_log_type_t)v16, "[%{public}s] Failed trying to go back", (uint8_t *)v82, 0xCu);
                swift_arrayDestroy(v7, 1, v115);
                swift_slowDealloc(v7, -1, -1);
                swift_slowDealloc(v82, -1, -1);

                v17 = &qword_100317750;
              }
              else
              {
                sub_100220018(a3);
                sub_100220018(a3);

              }
            }
          }
          if (!--v25)
            return;
        }
      }
      v59 = v119;
      v60 = v115;
      ((void (*)(uint64_t, uint64_t, char *, __n128))v113)(v119, v6, v115, v49);
      sub_10021FF20(a3);
      sub_10021FF20(a3);
      sub_10021FF20(a3);
      v61 = sub_10021FF20(a3);
      v62 = Logger.logObject.getter(v61);
      v63 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v62, v63))
      {
        v114 = v35;
        v64 = v20;
        v65 = swift_slowAlloc(22, -1);
        v66 = swift_slowAlloc(64, -1);
        v121 = v66;
        *(_DWORD *)v65 = 136446466;
        v67 = *(_QWORD *)(v64 + 88);
        if (v67)
        {
          swift_retain(*(_QWORD *)(v64 + 88));
          v68 = sub_1000AD18C();
          v70 = v69;
          swift_release(v67);
        }
        else
        {
          v70 = 0xE100000000000000;
          v68 = 63;
        }
        v123 = sub_100172BEC(v68, v70, &v121);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v123, &v124, v65 + 4, v65 + 12);
        swift_bridgeObjectRelease(v70);
        v96 = v120;
        sub_100220018(v120);
        sub_100220018(v96);
        *(_WORD *)(v65 + 12) = 2082;
        LOBYTE(v123) = *(_BYTE *)(v47 + 41);
        v98 = String.init<A>(describing:)(&v123, &type metadata for AppRuntimeStateModel.Stage, v97);
        v100 = v99;
        v123 = sub_100172BEC(v98, v99, &v121);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v123, &v124, v65 + 14, v65 + 22);
        swift_bridgeObjectRelease(v100);
        sub_100220018(v96);
        sub_100220018(v96);
        _os_log_impl((void *)&_mh_execute_header, v62, v63, "[%{public}s] QuestionnaireBodyView: requesting going back on %{public}s stage", (uint8_t *)v65, 0x16u);
        swift_arrayDestroy(v66, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v66, -1, -1);
        swift_slowDealloc(v65, -1, -1);

        v114(v119, v60);
      }
      else
      {
        sub_100220018(a3);
        sub_100220018(a3);
        sub_100220018(a3);
        sub_100220018(a3);

        v35(v59, v60);
      }
    }
    else
    {
LABEL_55:
      v101 = a3[5];
      v102 = type metadata accessor for EmergencyModel();
      v103 = type metadata accessor for EmergencyModel;
      v104 = &qword_100318690;
LABEL_57:
      v105 = sub_100056D60(v104, (uint64_t (*)(uint64_t))v103);
      EnvironmentObject.error()(0, v101, v102, v105);
      __break(1u);
    }
  }
}

void sub_10021F8C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  __n128 v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  os_log_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  os_log_t v52;
  uint64_t v53;
  _OWORD v54[2];
  _QWORD *v55;
  __int128 v56;

  v2 = type metadata accessor for AccessibilityNotification.ScreenChanged(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
  {
    v8 = *(_QWORD *)(v7 + 88);
    if (v8)
    {
      swift_retain(*(_QWORD *)(v7 + 88));
      v9 = sub_1000AD388();
      swift_release(v8);
      v56 = *(_OWORD *)(a1 + 64);
      v54[0] = *(_OWORD *)(a1 + 64);
      v10 = sub_100003DB8(&qword_100320D78);
      State.wrappedValue.getter(&v55, v10);
      v11 = (uint64_t)v55;
      v12 = sub_1001DD1CC((uint64_t)v9, (uint64_t)v55);
      swift_bridgeObjectRelease(v11);
      if ((v12 & 1) != 0)
      {
        swift_bridgeObjectRelease(v9);
        if (qword_1003158B0 != -1)
          swift_once(&qword_1003158B0, sub_1000D9854);
        v13 = type metadata accessor for Logger(0);
        sub_10000D744(v13, (uint64_t)qword_10033FEC8);
        sub_10021FF20((uint64_t *)a1);
        v14 = sub_10021FF20((uint64_t *)a1);
        v15 = Logger.logObject.getter(v14);
        v16 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v15, v16))
        {
          v17 = (uint8_t *)swift_slowAlloc(12, -1);
          v18 = swift_slowAlloc(32, -1);
          *(_QWORD *)&v54[0] = v18;
          *(_DWORD *)v17 = 136446210;
          v19 = *(_QWORD *)(v7 + 88);
          if (v19)
          {
            swift_retain(*(_QWORD *)(v7 + 88));
            v20 = sub_1000AD18C();
            v22 = v21;
            swift_release(v19);
          }
          else
          {
            v22 = 0xE100000000000000;
            v20 = 63;
          }
          v55 = (_QWORD *)sub_100172BEC(v20, v22, (uint64_t *)v54);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56, v17 + 4, v17 + 12);
          swift_bridgeObjectRelease(v22);
          sub_100220018((uint64_t *)a1);
          sub_100220018((uint64_t *)a1);
          _os_log_impl((void *)&_mh_execute_header, v15, v16, "[%{public}s] Questionnaire path has not changed", v17, 0xCu);
          swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v18, -1, -1);
          swift_slowDealloc(v17, -1, -1);
        }
        else
        {
          sub_100220018((uint64_t *)a1);
          sub_100220018((uint64_t *)a1);
        }

      }
      else
      {
        if (qword_1003158B0 != -1)
          swift_once(&qword_1003158B0, sub_1000D9854);
        v23 = type metadata accessor for Logger(0);
        sub_10000D744(v23, (uint64_t)qword_10033FEC8);
        sub_10021FF20((uint64_t *)a1);
        sub_10021FF20((uint64_t *)a1);
        sub_10021FF20((uint64_t *)a1);
        swift_bridgeObjectRetain(v9);
        sub_10021FF20((uint64_t *)a1);
        swift_bridgeObjectRetain(v9);
        v25 = Logger.logObject.getter(v24);
        v26 = static os_log_type_t.default.getter(v25);
        if (os_log_type_enabled(v25, (os_log_type_t)v26))
        {
          v51 = v26;
          v52 = v25;
          v27 = v10;
          v28 = swift_slowAlloc(32, -1);
          v50 = swift_slowAlloc(96, -1);
          v55 = (_QWORD *)v50;
          *(_DWORD *)v28 = 136446723;
          v29 = *(_QWORD *)(v7 + 88);
          if (v29)
          {
            swift_retain(*(_QWORD *)(v7 + 88));
            v30 = sub_1000AD18C();
            v32 = v31;
            swift_release(v29);
          }
          else
          {
            v32 = 0xE100000000000000;
            v30 = 63;
          }
          *(_QWORD *)&v54[0] = sub_100172BEC(v30, v32, (uint64_t *)&v55);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v54, (char *)v54 + 8, v28 + 4, v28 + 12);
          swift_bridgeObjectRelease(v32);
          sub_100220018((uint64_t *)a1);
          sub_100220018((uint64_t *)a1);
          *(_WORD *)(v28 + 12) = 2081;
          v54[0] = v56;
          v49 = v27;
          State.wrappedValue.getter(&v53, v27);
          v33 = v53;
          v35 = Array.description.getter(v34);
          v37 = v36;
          swift_bridgeObjectRelease(v33);
          *(_QWORD *)&v54[0] = sub_100172BEC(v35, v37, (uint64_t *)&v55);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v54, (char *)v54 + 8, v28 + 14, v28 + 22);
          swift_bridgeObjectRelease(v37);
          sub_100220018((uint64_t *)a1);
          sub_100220018((uint64_t *)a1);
          *(_WORD *)(v28 + 22) = 2081;
          v38 = swift_bridgeObjectRetain(v9);
          v39 = Array.description.getter(v38);
          v41 = v40;
          swift_bridgeObjectRelease(v9);
          *(_QWORD *)&v54[0] = sub_100172BEC(v39, v41, (uint64_t *)&v55);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v54, (char *)v54 + 8, v28 + 24, v28 + 32);
          swift_bridgeObjectRelease_n(v9, 2);
          swift_bridgeObjectRelease(v41);
          v42 = v52;
          _os_log_impl((void *)&_mh_execute_header, v52, (os_log_type_t)v51, "[%{public}s] Questionnaire path changed from %{private}s to %{private}s", (uint8_t *)v28, 0x20u);
          v43 = v50;
          swift_arrayDestroy(v50, 3, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v43, -1, -1);
          v44 = v28;
          v10 = v49;
          swift_slowDealloc(v44, -1, -1);

        }
        else
        {
          sub_100220018((uint64_t *)a1);
          sub_100220018((uint64_t *)a1);
          sub_100220018((uint64_t *)a1);
          sub_100220018((uint64_t *)a1);

          swift_bridgeObjectRelease_n(v9, 2);
        }
        v54[0] = v56;
        v55 = v9;
        State.wrappedValue.setter(&v55, v10);
        memset(v54, 0, sizeof(v54));
        AccessibilityNotification.ScreenChanged.init(_:)(v54);
        _AccessibilityNotifications.post()();
        (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      }
    }
  }
  else
  {
    v45 = *(_QWORD *)(a1 + 40);
    v46 = type metadata accessor for EmergencyModel();
    v47 = sub_100056D60(&qword_100318690, (uint64_t (*)(uint64_t))type metadata accessor for EmergencyModel);
    EnvironmentObject.error()(0, v45, v46, v47);
    __break(1u);
  }
}

uint64_t sub_10021FEC4@<X0>(uint64_t a1@<X8>)
{
  return sub_10021E3A8(a1);
}

uint64_t sub_10021FF04()
{
  return sub_10021EB18();
}

uint64_t sub_10021FF18()
{
  uint64_t v0;

  return sub_10021EC54(v0 + 16);
}

uint64_t *sub_10021FF20(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *a1;
  v3 = a1[2];
  v4 = a1[4];
  v5 = a1[6];
  v6 = a1[8];
  swift_retain(a1[9]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

void sub_10021FF94(uint64_t **a1, uint64_t **a2)
{
  uint64_t v2;

  sub_10021ED1C(a1, a2, (uint64_t *)(v2 + 16));
}

uint64_t sub_10021FFA0()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[6]);
  swift_release(v0[8]);
  swift_bridgeObjectRelease(v0[10]);
  swift_release(v0[11]);
  return swift_deallocObject(v0, 96, 7);
}

void sub_10021FFEC()
{
  uint64_t v0;

  sub_10021F8C0(v0 + 16);
}

uint64_t sub_10021FFF4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t *sub_100220018(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *a1;
  v3 = a1[2];
  v4 = a1[4];
  v5 = a1[6];
  v6 = a1[9];
  swift_bridgeObjectRelease(a1[8]);
  swift_release(v2);
  swift_release(v3);
  swift_release(v4);
  swift_release(v5);
  swift_release(v6);
  return a1;
}

unint64_t sub_100220090()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10032A1E8;
  if (!qword_10032A1E8)
  {
    v1 = sub_100007FAC(&qword_10032A1F0);
    sub_1000084FC(&qword_100320D68, &qword_100320D58, (uint64_t)&protocol conformance descriptor for SubscriptionView<A, B>);
    sub_1001281C0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10032A1E8);
  }
  return result;
}

id sub_100220114(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  void *v9;
  NSString v10;
  id v11;
  id v12;
  NSString v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  NSString v30;
  id v31;
  NSString v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  NSString v47;
  uint64_t v48;
  uint64_t v49;
  id v50;

  if (!a4)
    return 0;
  v7 = objc_opt_self(CASpringAnimation);
  v8 = swift_dynamicCastObjCClass(a4, v7);
  if (!v8)
  {
    v28 = objc_opt_self(CABasicAnimation);
    v29 = swift_dynamicCastObjCClass(a4, v28);
    if (v29)
    {
      v9 = (void *)v29;
      swift_bridgeObjectRetain(a2);
      swift_unknownObjectRetain(a4);
      v30 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(a2);
      v31 = objc_msgSend((id)objc_opt_self(CABasicAnimation), "animationWithKeyPath:", v30);

      v32 = String._bridgeToObjectiveC()();
      v33 = objc_msgSend(a3, "valueForKeyPath:", v32);

      objc_msgSend(v31, "setFromValue:", v33);
      swift_unknownObjectRelease(v33);
      v34 = v31;
      v35 = objc_msgSend(v9, "timingFunction");
      objc_msgSend(v34, "setTimingFunction:", v35);

      v36 = v34;
      v37 = objc_msgSend(v9, "delegate");
      objc_msgSend(v36, "setDelegate:", v37);
      swift_unknownObjectRelease(v37);

      v38 = v36;
      objc_msgSend(v38, "setAutoreverses:", objc_msgSend(v9, "autoreverses"));

      v39 = v38;
      objc_msgSend(v9, "beginTime");
      objc_msgSend(v39, "setBeginTime:");

      v40 = v39;
      objc_msgSend(v9, "duration");
      objc_msgSend(v40, "setDuration:");

      v41 = v40;
      v42 = objc_msgSend(v9, "fillMode");
      objc_msgSend(v41, "setFillMode:", v42);

      v43 = v41;
      objc_msgSend(v9, "repeatCount");
      objc_msgSend(v43, "setRepeatCount:");

      v44 = v43;
      objc_msgSend(v9, "repeatDuration");
      objc_msgSend(v44, "setRepeatDuration:");

      v45 = v44;
      objc_msgSend(v9, "speed");
      objc_msgSend(v45, "setSpeed:");

      v46 = v45;
      objc_msgSend(v9, "timeOffset");
      objc_msgSend(v46, "setTimeOffset:");

      v26 = v46;
      v27 = objc_msgSend(v9, "beginTimeMode");
      goto LABEL_6;
    }
    return 0;
  }
  v9 = (void *)v8;
  swift_bridgeObjectRetain(a2);
  swift_unknownObjectRetain(a4);
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v11 = objc_msgSend((id)objc_opt_self(CASpringAnimation), "animationWithKeyPath:", v10);

  v12 = v11;
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(a3, "valueForKeyPath:", v13);

  objc_msgSend(v12, "setFromValue:", v14);
  objc_msgSend(v9, "mass", swift_unknownObjectRelease(v14).n128_f64[0]);
  objc_msgSend(v12, "setMass:");
  objc_msgSend(v9, "stiffness");
  objc_msgSend(v12, "setStiffness:");
  objc_msgSend(v9, "damping");
  objc_msgSend(v12, "setDamping:");
  objc_msgSend(v9, "initialVelocity");
  objc_msgSend(v12, "setInitialVelocity:");
  v15 = v12;
  v16 = objc_msgSend(v9, "delegate");
  objc_msgSend(v15, "setDelegate:", v16);
  swift_unknownObjectRelease(v16);

  v17 = v15;
  objc_msgSend(v17, "setAutoreverses:", objc_msgSend(v9, "autoreverses"));

  v18 = v17;
  objc_msgSend(v9, "beginTime");
  objc_msgSend(v18, "setBeginTime:");

  v19 = v18;
  objc_msgSend(v9, "duration");
  objc_msgSend(v19, "setDuration:");

  v20 = v19;
  v21 = objc_msgSend(v9, "fillMode");
  objc_msgSend(v20, "setFillMode:", v21);

  v22 = v20;
  objc_msgSend(v9, "repeatCount");
  objc_msgSend(v22, "setRepeatCount:");

  v23 = v22;
  objc_msgSend(v9, "repeatDuration");
  objc_msgSend(v23, "setRepeatDuration:");

  v24 = v23;
  objc_msgSend(v9, "speed");
  objc_msgSend(v24, "setSpeed:");

  v25 = v24;
  objc_msgSend(v9, "timeOffset");
  objc_msgSend(v25, "setTimeOffset:");

  v26 = v25;
  v27 = objc_msgSend(v9, "beginTimeMode");
LABEL_6:
  v47 = v27;
  if (!v47)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v49 = v48;
    v47 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v49);
  }
  objc_msgSend(v26, "setBeginTimeMode:", v47);

  v50 = v26;
  objc_msgSend(v9, "preferredFrameRateRange");
  objc_msgSend(v50, "setPreferredFrameRateRange:");

  swift_unknownObjectRelease(a4);
  return v50;
}

uint64_t destroy for MainView(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[2]);
  swift_release(a1[4]);
  swift_release(a1[7]);
  return swift_release(a1[9]);
}

uint64_t initializeWithCopy for MainView(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v6 = a2[2];
  v5 = a2[3];
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v5;
  v8 = a2[4];
  v7 = a2[5];
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  v9 = a2[7];
  *(_QWORD *)(a1 + 56) = v9;
  *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
  v10 = a2[9];
  *(_QWORD *)(a1 + 72) = v10;
  swift_retain(v3);
  swift_retain(v6);
  swift_retain(v8);
  swift_retain(v9);
  swift_retain(v10);
  return a1;
}

uint64_t *assignWithCopy for MainView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *a1;
  v5 = *a2;
  *a1 = *a2;
  swift_retain(v5);
  swift_release(v4);
  a1[1] = a2[1];
  v6 = a1[2];
  v7 = a2[2];
  a1[2] = v7;
  swift_retain(v7);
  swift_release(v6);
  a1[3] = a2[3];
  v8 = a1[4];
  v9 = a2[4];
  a1[4] = v9;
  swift_retain(v9);
  swift_release(v8);
  a1[5] = a2[5];
  *((_BYTE *)a1 + 48) = *((_BYTE *)a2 + 48);
  v10 = a1[7];
  v11 = a2[7];
  a1[7] = v11;
  swift_retain(v11);
  swift_release(v10);
  *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
  v12 = a1[9];
  v13 = a2[9];
  a1[9] = v13;
  swift_retain(v13);
  swift_release(v12);
  return a1;
}

uint64_t *assignWithTake for MainView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  v5 = a1[2];
  v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_release(v5);
  v7 = a1[4];
  v8 = a2[4];
  a1[3] = a2[3];
  a1[4] = v8;
  swift_release(v7);
  a1[5] = a2[5];
  *((_BYTE *)a1 + 48) = *((_BYTE *)a2 + 48);
  v9 = a1[7];
  a1[7] = a2[7];
  swift_release(v9);
  *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
  v10 = a1[9];
  a1[9] = a2[9];
  swift_release(v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for MainView(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 80))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MainView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MainView()
{
  return &type metadata for MainView;
}

uint64_t sub_100220AD0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1002A0C54, 1);
}

uint64_t sub_100220AE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _OWORD *v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t OpaqueTypeConformance2;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _OWORD *v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  double v81;
  uint64_t v82;
  double v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  void (*v90)(char *, char *, uint64_t);
  char *v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(char *, uint64_t);
  uint64_t result;
  uint64_t v96;
  uint64_t v97;
  uint64_t (*v98)();
  unint64_t *v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  int v104;
  uint64_t v105;
  char *v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _BYTE v122[136];
  _BYTE v123[136];
  _BYTE v124[168];
  __int128 v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  char v133;
  uint64_t v134;
  char v135;
  uint64_t v136;
  char v137;
  __int128 v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _OWORD v146[13];
  _OWORD v147[2];
  __int128 v148;
  _OWORD v149[14];
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  int v163;
  _OWORD v164[14];
  char v165;
  uint64_t v166;
  char v167;
  uint64_t v168;
  char v169;
  uint64_t v170;
  char v171;
  uint64_t v172;
  char v173;
  uint64_t v174;
  char v175;
  uint64_t v176;
  char v177;
  __int128 v178;
  uint64_t v179;
  char v180;
  uint64_t v181;
  char v182;
  uint64_t v183;
  char v184;
  uint64_t v185;
  char v186;
  uint64_t v187;
  char v188;
  uint64_t v189;
  char v190;
  __int128 v191;
  _BYTE v192[152];

  v2 = v1;
  v112 = sub_100003DB8(&qword_10032A1F8);
  v110 = *(_QWORD *)(v112 - 8);
  __chkstk_darwin(v112, v4);
  v6 = (char *)&v105 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100003DB8(&qword_10032A200);
  v115 = *(_QWORD *)(v7 - 8);
  v116 = v7;
  __chkstk_darwin(v7, v8);
  v114 = (char *)&v105 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100003DB8(&qword_10032A208);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  v14 = (char *)&v105 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  v113 = (char *)&v105 - v17;
  __chkstk_darwin(v18, v19);
  v117 = (char *)&v105 - v20;
  v148 = *(_OWORD *)(v1 + 64);
  v21 = sub_100003DB8(&qword_10032A210);
  State.wrappedValue.getter(v146, v21);
  v111 = LOBYTE(v146[0]);
  v118 = v14;
  v119 = v11;
  if (LOBYTE(v146[0]) == 6)
  {
    sub_100224228((uint64_t)&v148);
  }
  else
  {
    v22 = *(_QWORD *)(v1 + 32);
    if (!v22)
    {
LABEL_22:
      v96 = *(_QWORD *)(v2 + 40);
      v97 = type metadata accessor for UIMetrics();
      v98 = type metadata accessor for UIMetrics;
      v99 = (unint64_t *)&qword_100316A00;
      goto LABEL_23;
    }
    v23 = qword_100315788;
    swift_retain(*(_QWORD *)(v2 + 32));
    if (v23 != -1)
      swift_once(&qword_100315788, sub_10006F500);
    v24 = *(double *)&xmmword_10033FC40;
    v25 = swift_release(v22);
    v26 = *(double *)&xmmword_10033FC40;
    v27 = static Alignment.center.getter(v25);
    v30 = v29;
    if (v24 > v26)
    {
      v31 = static os_log_type_t.fault.getter(v28);
      v32 = v10;
      v33 = a1;
      v34 = v6;
      v35 = (void *)static Log.runtimeIssuesLog.getter();
      os_log(_:dso:log:_:_:)(v31, &_mh_execute_header, v35, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

      v6 = v34;
      a1 = v33;
      v10 = v32;
    }
    _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v166, 0, 1, 0, 1, 0, 1, *(_QWORD *)&v24, 0, 0, 1, *(_QWORD *)&v26, 0, v27, v30);
    LOBYTE(v146[0]) = 1;
    LOBYTE(v164[0]) = v167;
    LOBYTE(v150) = v169;
    LOBYTE(v139) = v171;
    LOBYTE(v125) = v173;
    v124[0] = v175;
    v123[0] = v177;
    *(_QWORD *)&v148 = 0;
    BYTE8(v148) = 1;
    *(_QWORD *)&v149[0] = v166;
    BYTE8(v149[0]) = v167;
    *(_QWORD *)&v149[1] = v168;
    BYTE8(v149[1]) = v169;
    *(_QWORD *)&v149[2] = v170;
    BYTE8(v149[2]) = v171;
    *(_QWORD *)&v149[3] = v172;
    BYTE8(v149[3]) = v173;
    *(_QWORD *)&v149[4] = v174;
    BYTE8(v149[4]) = v175;
    *(_QWORD *)&v149[5] = v176;
    BYTE8(v149[5]) = v177;
    v149[6] = v178;
    sub_10007E3B8((uint64_t)&v148);
  }
  v36 = sub_10000B458((uint64_t)&v148, (uint64_t)v192, &qword_10032A218);
  v37 = static HorizontalAlignment.center.getter(v36);
  sub_10022164C(v2);
  *(_OWORD *)((char *)&v164[10] + 7) = v160;
  *(_OWORD *)((char *)&v164[11] + 7) = v161;
  *(_OWORD *)((char *)&v164[12] + 7) = v162;
  *(_DWORD *)((char *)&v164[13] + 7) = v163;
  *(_OWORD *)((char *)&v164[6] + 7) = v156;
  *(_OWORD *)((char *)&v164[7] + 7) = v157;
  *(_OWORD *)((char *)&v164[8] + 7) = v158;
  *(_OWORD *)((char *)&v164[9] + 7) = v159;
  *(_OWORD *)((char *)&v164[2] + 7) = v152;
  *(_OWORD *)((char *)&v164[3] + 7) = v153;
  *(_OWORD *)((char *)&v164[4] + 7) = v154;
  *(_OWORD *)((char *)&v164[5] + 7) = v155;
  *(_OWORD *)((char *)v164 + 7) = v150;
  *(_OWORD *)((char *)&v164[1] + 7) = v151;
  *(_OWORD *)((char *)&v149[10] + 1) = v164[10];
  *(_OWORD *)((char *)&v149[11] + 1) = v164[11];
  *(_OWORD *)((char *)&v149[12] + 1) = v164[12];
  *(_OWORD *)((char *)&v149[12] + 12) = *(_OWORD *)((char *)&v164[12] + 11);
  *(_OWORD *)((char *)&v149[6] + 1) = v164[6];
  *(_OWORD *)((char *)&v149[7] + 1) = v164[7];
  *(_OWORD *)((char *)&v149[8] + 1) = v164[8];
  *(_OWORD *)((char *)&v149[9] + 1) = v164[9];
  *(_OWORD *)((char *)&v149[2] + 1) = v164[2];
  *(_OWORD *)((char *)&v149[3] + 1) = v164[3];
  *(_OWORD *)((char *)&v149[4] + 1) = v164[4];
  *(_OWORD *)((char *)&v149[5] + 1) = v164[5];
  *(_OWORD *)((char *)v149 + 1) = v164[0];
  v165 = 0;
  v148 = (unint64_t)v37;
  LOBYTE(v149[0]) = 0;
  *(_OWORD *)((char *)&v149[1] + 1) = v164[1];
  v38 = *(_QWORD *)v2;
  if (*(_QWORD *)v2)
  {
    v120 = v10;
    v121 = a1;
    LOBYTE(v139) = *(_BYTE *)(v38 + 41);
    v39 = (_OWORD *)swift_allocObject(&unk_1002FB020, 96, 7);
    v40 = *(_OWORD *)(v2 + 48);
    v39[3] = *(_OWORD *)(v2 + 32);
    v39[4] = v40;
    v39[5] = *(_OWORD *)(v2 + 64);
    v41 = *(_OWORD *)(v2 + 16);
    v39[1] = *(_OWORD *)v2;
    v39[2] = v41;
    sub_100175AE8((uint64_t *)v2);
    v42 = sub_100003DB8(&qword_10032A220);
    v43 = sub_1000084FC(&qword_10032A228, &qword_10032A220, (uint64_t)&protocol conformance descriptor for VStack<A>);
    v44 = sub_100125EFC();
    v108 = v43;
    v109 = v42;
    v107 = v44;
    View.onChange<A>(of:initial:_:)(&v139, 1, sub_100223A98, v39, v42, &type metadata for AppRuntimeStateModel.Stage, v43, v44);
    swift_release(v39);
    v146[11] = v149[10];
    v146[12] = v149[11];
    v147[0] = v149[12];
    *(_OWORD *)((char *)v147 + 12) = *(_OWORD *)((char *)&v149[12] + 12);
    v146[8] = v149[7];
    v146[9] = v149[8];
    v146[10] = v149[9];
    v146[4] = v149[3];
    v146[5] = v149[4];
    v146[6] = v149[5];
    v146[7] = v149[6];
    v146[0] = v148;
    v146[1] = v149[0];
    v146[2] = v149[1];
    v146[3] = v149[2];
    sub_100223AA0((uint64_t)v146);
    v45 = *(_QWORD **)(v2 + 16);
    v106 = v6;
    if (v45)
    {
      v47 = v45[7];
      v48 = v45[8];
      v49 = v45[9];
      v50 = v45[10];
      v51 = v45[11];
      v52 = v45[12];
      v139 = v45[6];
      v46 = v139;
      v140 = v47;
      v141 = v48;
      v142 = v49;
      v143 = v50;
      v144 = v51;
      v145 = v52;
      v53 = (_OWORD *)swift_allocObject(&unk_1002FB048, 96, 7);
      v54 = *(_OWORD *)(v2 + 48);
      v53[3] = *(_OWORD *)(v2 + 32);
      v53[4] = v54;
      v53[5] = *(_OWORD *)(v2 + 64);
      v55 = *(_OWORD *)(v2 + 16);
      v53[1] = *(_OWORD *)v2;
      v53[2] = v55;
      sub_100175AE8((uint64_t *)v2);
      sub_1001878DC(v46, v47, v48, v49, v50, v51, v52);
      v56 = sub_100003DB8(&qword_100323E40);
      v105 = v56;
      *(_QWORD *)&v125 = v109;
      *((_QWORD *)&v125 + 1) = &type metadata for AppRuntimeStateModel.Stage;
      v126 = v108;
      v127 = v107;
      OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v125, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
      v109 = OpaqueTypeConformance2;
      v58 = sub_100224080();
      v59 = v114;
      v60 = v112;
      v61 = v56;
      v62 = v106;
      View.onChange<A>(of:initial:_:)(&v139, 1, sub_100224078, v53, v112, v61, OpaqueTypeConformance2, v58);
      swift_release(v53);
      sub_1001877B0(v139, v140, v141, v142, v143, v144, v145);
      (*(void (**)(char *, uint64_t))(v110 + 8))(v62, v60);
      v125 = *(_OWORD *)(v2 + 48);
      v63 = sub_100003DB8(&qword_100316780);
      State.projectedValue.getter(&v139, v63);
      v64 = v139;
      v65 = v140;
      v66 = v141;
      v67 = (_OWORD *)swift_allocObject(&unk_1002FB070, 96, 7);
      v68 = *(_OWORD *)(v2 + 48);
      v67[3] = *(_OWORD *)(v2 + 32);
      v67[4] = v68;
      v67[5] = *(_OWORD *)(v2 + 64);
      v69 = *(_OWORD *)(v2 + 16);
      v67[1] = *(_OWORD *)v2;
      v67[2] = v69;
      sub_100175AE8((uint64_t *)v2);
      v70 = sub_100003DB8(&qword_10032A240);
      v139 = v60;
      v140 = v105;
      v141 = v109;
      v142 = v58;
      v71 = swift_getOpaqueTypeConformance2(&v139, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
      v72 = sub_100224178();
      v103 = v71;
      v102 = v70;
      v73 = v113;
      v74 = v116;
      View.fullScreenCover<A>(isPresented:onDismiss:content:)(v64, v65, v66, 0, 0, sub_100224170, v67, v116, v102, v103, v72);
      swift_release(v65);
      swift_release(v67);
      swift_release(v64);
      (*(void (**)(char *, uint64_t))(v115 + 8))(v59, v74);
      v76 = v119;
      v75 = v120;
      v77 = v117;
      (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v117, v73, v120);
      if (v111 == 6)
      {
        sub_100224228((uint64_t)&v125);
        sub_10000B458((uint64_t)&v125, (uint64_t)&v139, &qword_10032A218);
        v78 = v121;
LABEL_19:
        sub_10000B458((uint64_t)v192, (uint64_t)v123, &qword_10032A218);
        v90 = *(void (**)(char *, char *, uint64_t))(v76 + 16);
        v91 = v118;
        v90(v118, v77, v75);
        sub_10000B458((uint64_t)&v139, (uint64_t)v122, &qword_10032A218);
        sub_10000B458((uint64_t)v123, (uint64_t)v124, &qword_10032A218);
        sub_10000B458((uint64_t)v124, v78, &qword_10032A218);
        v92 = sub_100003DB8(&qword_10032A258);
        v90((char *)(v78 + *(int *)(v92 + 48)), v91, v75);
        v93 = v78 + *(int *)(v92 + 64);
        sub_10000B458((uint64_t)v122, (uint64_t)&v125, &qword_10032A218);
        sub_10000B458((uint64_t)&v125, v93, &qword_10032A218);
        v94 = *(void (**)(char *, uint64_t))(v76 + 8);
        v94(v77, v75);
        return ((uint64_t (*)(char *, uint64_t))v94)(v91, v75);
      }
      v79 = *(_QWORD *)(v2 + 32);
      v78 = v121;
      if (v79)
      {
        v80 = qword_100315788;
        swift_retain(*(_QWORD *)(v2 + 32));
        if (v80 != -1)
          swift_once(&qword_100315788, sub_10006F500);
        v81 = *(double *)&qword_10033FC50;
        v82 = swift_release(v79);
        v83 = *(double *)&qword_10033FC50;
        v84 = static Alignment.center.getter(v82);
        v87 = v86;
        if (v81 > v83)
        {
          v88 = static os_log_type_t.fault.getter(v85);
          v89 = (void *)static Log.runtimeIssuesLog.getter();
          os_log(_:dso:log:_:_:)(v88, &_mh_execute_header, v89, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

        }
        LOBYTE(v104) = 0;
        LOBYTE(v101) = 1;
        _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v179, 0, 1, 0, 1, 0, 1, *(_QWORD *)&v81, 0, 0, v101, *(_QWORD *)&v83, v104, v84, v87);
        v124[0] = 1;
        v123[0] = v180;
        v122[0] = v182;
        v124[160] = v184;
        v124[152] = v186;
        v124[144] = v188;
        v124[136] = v190;
        *(_QWORD *)&v125 = 0;
        BYTE8(v125) = 1;
        v126 = v179;
        LOBYTE(v127) = v180;
        v128 = v181;
        v129 = v182;
        v130 = v183;
        v131 = v184;
        v132 = v185;
        v133 = v186;
        v134 = v187;
        v135 = v188;
        v136 = v189;
        v137 = v190;
        v138 = v191;
        sub_10007E3B8((uint64_t)&v125);
        sub_10000B458((uint64_t)&v125, (uint64_t)&v139, &qword_10032A218);
        goto LABEL_19;
      }
      goto LABEL_22;
    }
    v96 = *(_QWORD *)(v2 + 24);
    v97 = type metadata accessor for TransitionAlertModel();
    v98 = type metadata accessor for TransitionAlertModel;
    v99 = (unint64_t *)&unk_1003184A0;
  }
  else
  {
    v96 = *(_QWORD *)(v2 + 8);
    v97 = type metadata accessor for AppRuntimeStateModel();
    v98 = type metadata accessor for AppRuntimeStateModel;
    v99 = &qword_100318498;
  }
LABEL_23:
  v100 = sub_1000052EC(v99, (uint64_t (*)(uint64_t))v98, (uint64_t)&unk_10024D2FC);
  result = EnvironmentObject.error()(0, v96, v97, v100);
  __break(1u);
  return result;
}

void sub_10022164C(uint64_t a1)
{
  uint64_t v1;
  _QWORD v2[54];
  __int128 v3;

  v3 = *(_OWORD *)(a1 + 64);
  v1 = sub_100003DB8(&qword_10032A210);
  State.wrappedValue.getter(v2, v1);
  __asm { BR              X10 }
}

__n128 sub_1002216BC()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __n128 result;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  _BYTE v45[224];
  _BYTE v46[224];
  _BYTE v47[432];
  _BYTE v48[64];
  uint64_t v49;
  uint64_t v50;
  __int16 v51;
  int v52;

  v5 = sub_100224410();
  *(_OWORD *)(v0 + 432) = 0u;
  *(_OWORD *)(v0 + 448) = 0u;
  *(_OWORD *)(v0 + 464) = 0u;
  *(_OWORD *)(v0 + 480) = 0u;
  LOBYTE(v49) = 0;
  _ConditionalContent<>.init(storage:)(v48, &type metadata for EmptyView, &type metadata for StewieUnavailableView, &protocol witness table for EmptyView, v5);
  v6 = v46[64];
  v7 = v2[43];
  *(_OWORD *)(v0 + 432) = v2[42];
  *(_OWORD *)(v0 + 448) = v7;
  v8 = v2[45];
  *(_OWORD *)(v0 + 464) = v2[44];
  *(_OWORD *)(v0 + 480) = v8;
  v49 = v6;
  v50 = 0;
  v51 = 0;
  v9 = sub_100003DB8(&qword_10032A2D0);
  v10 = sub_100003DB8(&qword_10032A2E8);
  v11 = sub_1002243A4();
  v12 = sub_100224454();
  _ConditionalContent<>.init(storage:)(v48, v9, v10, v11, v12);
  v13 = v47[80];
  v14 = v47[81];
  v15 = v2[57];
  v2[28] = v2[56];
  v2[29] = v15;
  v16 = v2[59];
  v2[30] = v2[58];
  v2[31] = v16;
  v2[32] = v2[60];
  v45[80] = v13;
  v45[81] = v14;
  sub_10000AC68((uint64_t)v45);
  sub_10000B458((uint64_t)v45, (uint64_t)v48, &qword_10032A360);
  v17 = sub_100003DB8(&qword_10032A2C0);
  v18 = sub_100003DB8(&qword_10032A308);
  v19 = sub_100224380();
  v20 = sub_100224500();
  _ConditionalContent<>.init(storage:)(v48, v17, v18, v19, v20);
  v2[66] = v42;
  v2[67] = v43;
  v2[68] = v44;
  *(_DWORD *)(v0 + 207) = *(_DWORD *)(v1 + 207);
  *(_OWORD *)(v0 + 96) = v38;
  *(_OWORD *)(v0 + 112) = v39;
  *(_OWORD *)(v0 + 128) = v40;
  *(_OWORD *)(v0 + 144) = v41;
  *(_OWORD *)(v0 + 32) = v34;
  *(_OWORD *)(v0 + 48) = v35;
  *(_OWORD *)(v0 + 64) = v36;
  *(_OWORD *)(v0 + 80) = v37;
  *(_OWORD *)v0 = v32;
  *(_OWORD *)(v0 + 16) = v33;
  sub_100224644((uint64_t)v47);
  sub_10000B458((uint64_t)v47, (uint64_t)v46, &qword_10032A298);
  v21 = sub_100003DB8(&qword_10032A2A0);
  v22 = sub_100003DB8(&qword_10032A2A8);
  v23 = sub_100008140(&qword_10032A2B0, &qword_10032A2A0, (void (*)(void))sub_100224380, (void (*)(void))sub_100224500);
  v24 = sub_100008140(&qword_10032A348, &qword_10032A2A8, (void (*)(void))sub_1002242A4, (void (*)(void))sub_100224350);
  _ConditionalContent<>.init(storage:)(v46, v21, v22, v23, v24);
  v25 = *(_OWORD *)(v3 + 176);
  *(_OWORD *)(v4 + 160) = *(_OWORD *)(v3 + 160);
  *(_OWORD *)(v4 + 176) = v25;
  *(_OWORD *)(v4 + 192) = *(_OWORD *)(v3 + 192);
  *(_DWORD *)(v4 + 208) = v52;
  v26 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(v4 + 96) = *(_OWORD *)(v3 + 96);
  *(_OWORD *)(v4 + 112) = v26;
  v27 = *(_OWORD *)(v3 + 144);
  *(_OWORD *)(v4 + 128) = *(_OWORD *)(v3 + 128);
  *(_OWORD *)(v4 + 144) = v27;
  v28 = *(_OWORD *)(v3 + 48);
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(v4 + 48) = v28;
  v29 = *(_OWORD *)(v3 + 80);
  *(_OWORD *)(v4 + 64) = *(_OWORD *)(v3 + 64);
  *(_OWORD *)(v4 + 80) = v29;
  result = *(__n128 *)v3;
  v31 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)v4 = *(_OWORD *)v3;
  *(_OWORD *)(v4 + 16) = v31;
  return result;
}

void sub_10022333C()
{
  _OWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  STACK[0x490] = (unint64_t)_swiftEmptyArrayStorage;
  v2 = sub_100003DB8(&qword_100317980);
  State.init(wrappedValue:)(&STACK[0x640], &STACK[0x490], v2);
  v3 = STACK[0x640];
  v4 = STACK[0x648];
  STACK[0x490] = STACK[0x640];
  STACK[0x498] = v4;
  LOBYTE(STACK[0x4A0]) = 0;
  v5 = sub_1000FFBA0();
  v6 = sub_100224260();
  swift_bridgeObjectRetain(v3);
  swift_retain(v4);
  _ConditionalContent<>.init(storage:)(&STACK[0x490], &type metadata for TryOutIntroView, &type metadata for TryOutConnectionDemoView, v5, v6);
  v7 = LOBYTE(STACK[0x650]);
  v0[27] = v0[27];
  STACK[0x650] = v7;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 81) = 0u;
  LOBYTE(STACK[0x6A1]) = 1;
  v8 = sub_100003DB8(&qword_10032A268);
  v9 = sub_100003DB8(&qword_10032A270);
  v10 = sub_1002242A4();
  v11 = sub_100224350();
  _ConditionalContent<>.init(storage:)(&STACK[0x640], v8, v9, v10, v11);
  v12 = STACK[0x330];
  v13 = STACK[0x331];
  v14 = *(_OWORD *)&STACK[0x2E0];
  *v0 = *(_OWORD *)&STACK[0x2D0];
  v0[1] = v14;
  v15 = *(_OWORD *)&STACK[0x300];
  v0[2] = *(_OWORD *)&STACK[0x2F0];
  v0[3] = v15;
  v16 = *(_OWORD *)&STACK[0x320];
  v0[4] = *(_OWORD *)&STACK[0x310];
  v0[5] = v16;
  LOBYTE(STACK[0x4F0]) = v12;
  LOBYTE(STACK[0x4F1]) = v13;
  sub_100224374((uint64_t)&STACK[0x490]);
  sub_10000B458((uint64_t)&STACK[0x490], (uint64_t)&STACK[0x640], &qword_10032A298);
  v17 = sub_100003DB8(&qword_10032A2A0);
  v18 = sub_100003DB8(&qword_10032A2A8);
  v19 = sub_100008140(&qword_10032A2B0, &qword_10032A2A0, (void (*)(void))sub_100224380, (void (*)(void))sub_100224500);
  v20 = sub_100008140(&qword_10032A348, &qword_10032A2A8, (void (*)(void))sub_1002242A4, (void (*)(void))sub_100224350);
  _ConditionalContent<>.init(storage:)(&STACK[0x640], v17, v18, v19, v20);
  swift_release(v4);
  swift_bridgeObjectRelease(v3);
  v21 = *(_OWORD *)&STACK[0x460];
  *(_OWORD *)&STACK[0x6E0] = *(_OWORD *)&STACK[0x450];
  *(_OWORD *)&STACK[0x6F0] = v21;
  *(_OWORD *)&STACK[0x700] = *(_OWORD *)&STACK[0x470];
  LODWORD(STACK[0x710]) = STACK[0x480];
  v22 = *(_OWORD *)&STACK[0x420];
  *(_OWORD *)&STACK[0x6A0] = *(_OWORD *)&STACK[0x410];
  *(_OWORD *)&STACK[0x6B0] = v22;
  v23 = *(_OWORD *)&STACK[0x440];
  *(_OWORD *)&STACK[0x6C0] = *(_OWORD *)&STACK[0x430];
  *(_OWORD *)&STACK[0x6D0] = v23;
  v24 = *(_OWORD *)&STACK[0x3E0];
  *(_OWORD *)&STACK[0x660] = *(_OWORD *)&STACK[0x3D0];
  *(_OWORD *)&STACK[0x670] = v24;
  v25 = *(_OWORD *)&STACK[0x400];
  *(_OWORD *)&STACK[0x680] = *(_OWORD *)&STACK[0x3F0];
  *(_OWORD *)&STACK[0x690] = v25;
  v26 = *(_OWORD *)&STACK[0x3C0];
  *(_OWORD *)&STACK[0x640] = *(_OWORD *)&STACK[0x3B0];
  *(_OWORD *)&STACK[0x650] = v26;
  JUMPOUT(0x1002232DCLL);
}

uint64_t sub_100223614(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  __int128 v12;

  v12 = *(_OWORD *)(a1 + 64);
  v2 = sub_100003DB8(&qword_10032A210);
  v3 = State.wrappedValue.getter(&v11, v2);
  if (v11)
  {
    v4 = static Animation.easeInOut(duration:)(v3, 0.2);
    __chkstk_darwin(v4, v5);
    withAnimation<A>(_:_:)(v6, sub_100224248);
    return swift_release(v4);
  }
  else if (*(_QWORD *)a1)
  {
    v11 = *(_BYTE *)(*(_QWORD *)a1 + 41);
    return State.wrappedValue.setter(&v11, v2);
  }
  else
  {
    v8 = *(_QWORD *)(a1 + 8);
    v9 = type metadata accessor for AppRuntimeStateModel();
    v10 = sub_1000052EC(&qword_100318498, (uint64_t (*)(uint64_t))type metadata accessor for AppRuntimeStateModel, (uint64_t)&unk_10024D2FC);
    result = EnvironmentObject.error()(0, v8, v9, v10);
    __break(1u);
  }
  return result;
}

uint64_t sub_10022373C(uint64_t a1)
{
  char v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  __int128 v8;

  if (*(_QWORD *)a1)
  {
    v1 = *(_BYTE *)(*(_QWORD *)a1 + 41);
    v8 = *(_OWORD *)(a1 + 64);
    v7 = v1;
    v2 = sub_100003DB8(&qword_10032A210);
    return State.wrappedValue.setter(&v7, v2);
  }
  else
  {
    v4 = *(_QWORD *)(a1 + 8);
    v5 = type metadata accessor for AppRuntimeStateModel();
    v6 = sub_1000052EC(&qword_100318498, (uint64_t (*)(uint64_t))type metadata accessor for AppRuntimeStateModel, (uint64_t)&unk_10024D2FC);
    result = EnvironmentObject.error()(0, v4, v5, v6);
    __break(1u);
  }
  return result;
}

uint64_t sub_1002237DC(uint64_t a1)
{
  uint64_t v1;
  BOOL v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  __int128 v9;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = *(_QWORD *)(v1 + 56) != 0;
    v9 = *(_OWORD *)(a1 + 48);
    v8 = v2;
    v3 = sub_100003DB8(&qword_100316780);
    return State.wrappedValue.setter(&v8, v3);
  }
  else
  {
    v5 = *(_QWORD *)(a1 + 24);
    v6 = type metadata accessor for TransitionAlertModel();
    v7 = sub_1000052EC((unint64_t *)&unk_1003184A0, (uint64_t (*)(uint64_t))type metadata accessor for TransitionAlertModel, (uint64_t)&unk_10024D2FC);
    result = EnvironmentObject.error()(0, v5, v6, v7);
    __break(1u);
  }
  return result;
}

uint64_t sub_10022387C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  char v43;

  v3 = *(_QWORD **)(a1 + 16);
  if (v3)
  {
    v4 = v3[7];
    if (v4)
    {
      v6 = v3[11];
      v5 = v3[12];
      v7 = v3[9];
      v28 = v3[8];
      v29 = v3[10];
      v8 = v3[6];
      v9 = type metadata accessor for TransitionAlertModel();
      v10 = sub_1000052EC((unint64_t *)&unk_1003184A0, (uint64_t (*)(uint64_t))type metadata accessor for TransitionAlertModel, (uint64_t)&unk_10024D2FC);
      swift_bridgeObjectRetain(v4);
      swift_bridgeObjectRetain(v7);
      swift_bridgeObjectRetain(v6);
      swift_bridgeObjectRetain(v5);
      v11 = EnvironmentObject.init()(v9, v10);
      v13 = v12;
      v14 = type metadata accessor for UIMetrics();
      v15 = sub_1000052EC((unint64_t *)&qword_100316A00, (uint64_t (*)(uint64_t))type metadata accessor for UIMetrics, (uint64_t)&unk_10024D2FC);
      *(_QWORD *)&v30 = v11;
      *((_QWORD *)&v30 + 1) = v13;
      *(_QWORD *)&v31 = EnvironmentObject.init()(v14, v15);
      *((_QWORD *)&v31 + 1) = v16;
      *(_QWORD *)&v32 = v8;
      *((_QWORD *)&v32 + 1) = v4;
      *(_QWORD *)&v33 = v28;
      *((_QWORD *)&v33 + 1) = v7;
      *(_QWORD *)&v34 = v29;
      *((_QWORD *)&v34 + 1) = v6;
      v35 = v5;
      v36 = 0;
    }
    else
    {
      v35 = 0;
      v33 = 0u;
      v34 = 0u;
      v31 = 0u;
      v32 = 0u;
      v30 = 0u;
      v36 = 1;
    }
    v17 = sub_1002241E4();
    result = _ConditionalContent<>.init(storage:)(&v30, &type metadata for ActiveTransitionAlertView, &type metadata for EmptyView, v17, &protocol witness table for EmptyView);
    v19 = v38;
    v20 = v39;
    v21 = v40;
    v22 = v41;
    v23 = v42;
    v24 = v43;
    *(_OWORD *)a2 = v37;
    *(_OWORD *)(a2 + 16) = v19;
    *(_OWORD *)(a2 + 32) = v20;
    *(_OWORD *)(a2 + 48) = v21;
    *(_OWORD *)(a2 + 64) = v22;
    *(_QWORD *)(a2 + 80) = v23;
    *(_BYTE *)(a2 + 88) = v24;
  }
  else
  {
    v25 = *(_QWORD *)(a1 + 24);
    v26 = type metadata accessor for TransitionAlertModel();
    v27 = sub_1000052EC((unint64_t *)&unk_1003184A0, (uint64_t (*)(uint64_t))type metadata accessor for TransitionAlertModel, (uint64_t)&unk_10024D2FC);
    result = EnvironmentObject.error()(0, v25, v26, v27);
    __break(1u);
  }
  return result;
}

uint64_t sub_100223A54@<X0>(uint64_t a1@<X8>)
{
  return sub_100220AE0(a1);
}

uint64_t sub_100223A98()
{
  uint64_t v0;

  return sub_100223614(v0 + 16);
}

uint64_t sub_100223AA0(uint64_t a1)
{
  int v3;

  v3 = *(unsigned __int16 *)(a1 + 232) | (*(unsigned __int8 *)(a1 + 234) << 16);
  sub_100223B30(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160), *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(_QWORD *)(a1 + 224),
    v3,
    SBYTE1(v3),
    SBYTE2(v3),
    SHIBYTE(v3),
    *(_BYTE *)(a1 + 235));
  return a1;
}

uint64_t sub_100223B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,char a28,char a29,char a30,char a31)
{
  if ((a31 & 1) != 0)
    return sub_100223FA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, (unsigned __int16)(a13 & 0x1FF) >> 8);
  else
    return sub_100223BEC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29 & 1);
}

uint64_t sub_100223BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,char a28,char a29)
{
  if ((a29 & 1) != 0)
    return sub_100223DAC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28 & 1);
  else
    return sub_100223CA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, (unsigned __int16)(a11 & 0x1FF) >> 8);
}

uint64_t sub_100223CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, char a12)
{
  if ((a12 & 1) != 0)
    return sub_100223D30(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11 & 1);
  else
    return sub_100223CD4(a1, a2, a3, a4, a5, a6, a7, a8, a9 & 1);
}

uint64_t sub_100223CD4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if ((a9 & 1) != 0)
  {
    swift_release(result);
    swift_release(a3);
    swift_release(a5);
    return swift_release(a7);
  }
  return result;
}

uint64_t sub_100223D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  if ((a11 & 1) != 0)
  {
    swift_bridgeObjectRelease(a9);
    swift_release(a1);
    swift_release(a3);
    a1 = a5;
    a5 = a10;
  }
  else
  {
    a7 = a3;
  }
  swift_release(a1);
  swift_release(a7);
  return swift_release(a5);
}

uint64_t sub_100223DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,char a28)
{
  if ((a28 & 1) != 0)
    return sub_100223EA0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27 & 1);
  else
    return sub_100223E50(a1, a2, a3, a4, a5, a6, a7 & 1);
}

uint64_t sub_100223E50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result;

  result = swift_release(a1);
  if ((a7 & 1) != 0)
  {
    swift_release(a3);
    return swift_release(a5);
  }
  return result;
}

uint64_t sub_100223EA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t result;

  result = swift_release(a1);
  if ((a27 & 1) == 0)
  {
    swift_release(a3);
    swift_release(a5);
    swift_release(a7);
    swift_release(a9);
    swift_release(a11);
    swift_release(a13);
    swift_release(a15);
    swift_release(a17);
    swift_release(a20);
    swift_release(a22);
    swift_release(a24);
    return swift_release(a26);
  }
  return result;
}

uint64_t sub_100223FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, char a14)
{
  if ((a14 & 1) != 0)
    return sub_100224050(a1, a2);
  else
    return sub_100223FD4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13 & 1);
}

uint64_t sub_100223FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  if ((a13 & 1) == 0)
  {
    swift_bridgeObjectRelease(a9);
    swift_release(a1);
    swift_release(a3);
    swift_release(a5);
    swift_release(a7);
    swift_release(a10);
    a1 = a12;
  }
  return swift_release(a1);
}

uint64_t sub_100224050(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease(a1);
  return swift_release(a2);
}

uint64_t sub_100224078()
{
  uint64_t v0;

  return sub_1002237DC(v0 + 16);
}

unint64_t sub_100224080()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10032A230;
  if (!qword_10032A230)
  {
    v1 = sub_100007FAC(&qword_100323E40);
    sub_1002240E4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_10032A230);
  }
  return result;
}

unint64_t sub_1002240E4()
{
  unint64_t result;

  result = qword_10032A238;
  if (!qword_10032A238)
  {
    result = swift_getWitnessTable(&unk_10025A18C, &type metadata for TransitionAlertModel.Alert);
    atomic_store(result, (unint64_t *)&qword_10032A238);
  }
  return result;
}

uint64_t sub_10022412C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[6]);
  swift_release(v0[9]);
  swift_release(v0[11]);
  return swift_deallocObject(v0, 96, 7);
}

uint64_t sub_100224170@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10022387C(v1 + 16, a1);
}

unint64_t sub_100224178()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10032A248;
  if (!qword_10032A248)
  {
    v1 = sub_100007FAC(&qword_10032A240);
    sub_1002241E4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10032A248);
  }
  return result;
}

unint64_t sub_1002241E4()
{
  unint64_t result;

  result = qword_10032A250;
  if (!qword_10032A250)
  {
    result = swift_getWitnessTable(&unk_10025796C, &type metadata for ActiveTransitionAlertView);
    atomic_store(result, (unint64_t *)&qword_10032A250);
  }
  return result;
}

double sub_100224228(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 128) = 1;
  return result;
}

uint64_t sub_100224248()
{
  uint64_t v0;

  return sub_10022373C(*(_QWORD *)(v0 + 16));
}

unint64_t sub_100224260()
{
  unint64_t result;

  result = qword_10032A260;
  if (!qword_10032A260)
  {
    result = swift_getWitnessTable(&unk_1002578FC, &type metadata for TryOutConnectionDemoView);
    atomic_store(result, (unint64_t *)&qword_10032A260);
  }
  return result;
}

uint64_t sub_1002242A4()
{
  return sub_100008140(&qword_10032A278, &qword_10032A268, (void (*)(void))sub_1002242C8, (void (*)(void))sub_10022430C);
}

unint64_t sub_1002242C8()
{
  unint64_t result;

  result = qword_10032A280;
  if (!qword_10032A280)
  {
    result = swift_getWitnessTable(&unk_1002573A4, &type metadata for RoadsideAssistanceQuestionnaireView);
    atomic_store(result, (unint64_t *)&qword_10032A280);
  }
  return result;
}

unint64_t sub_10022430C()
{
  unint64_t result;

  result = qword_10032A288;
  if (!qword_10032A288)
  {
    result = swift_getWitnessTable(&unk_1002554E0, &type metadata for FullScreenGuidanceFindMyView);
    atomic_store(result, (unint64_t *)&qword_10032A288);
  }
  return result;
}

uint64_t sub_100224350()
{
  return sub_100008140(&qword_10032A290, &qword_10032A270, (void (*)(void))sub_1000FFBA0, (void (*)(void))sub_100224260);
}

uint64_t sub_100224374(uint64_t result)
{
  *(_BYTE *)(result + 211) = 1;
  return result;
}

uint64_t sub_100224380()
{
  return sub_100008140(&qword_10032A2B8, &qword_10032A2C0, (void (*)(void))sub_1002243A4, (void (*)(void))sub_100224454);
}

unint64_t sub_1002243A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10032A2C8;
  if (!qword_10032A2C8)
  {
    v1 = sub_100007FAC(&qword_10032A2D0);
    sub_100224410();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10032A2C8);
  }
  return result;
}

unint64_t sub_100224410()
{
  unint64_t result;

  result = qword_10032A2D8;
  if (!qword_10032A2D8)
  {
    result = swift_getWitnessTable(&unk_1002550D8, &type metadata for StewieUnavailableView);
    atomic_store(result, (unint64_t *)&qword_10032A2D8);
  }
  return result;
}

uint64_t sub_100224454()
{
  return sub_100008140(&qword_10032A2E0, &qword_10032A2E8, (void (*)(void))sub_100224478, (void (*)(void))sub_1002244BC);
}

unint64_t sub_100224478()
{
  unint64_t result;

  result = qword_10032A2F0;
  if (!qword_10032A2F0)
  {
    result = swift_getWitnessTable(&unk_1002526E8, &type metadata for StewieOverInternetView);
    atomic_store(result, (unint64_t *)&qword_10032A2F0);
  }
  return result;
}

unint64_t sub_1002244BC()
{
  unint64_t result;

  result = qword_10032A2F8;
  if (!qword_10032A2F8)
  {
    result = swift_getWitnessTable(&unk_10025F5D4, &type metadata for QuestionnaireView);
    atomic_store(result, (unint64_t *)&qword_10032A2F8);
  }
  return result;
}

uint64_t sub_100224500()
{
  return sub_100008140(&qword_10032A300, &qword_10032A308, (void (*)(void))sub_100224524, (void (*)(void))sub_1002245D0);
}

uint64_t sub_100224524()
{
  return sub_100008140(&qword_10032A310, &qword_10032A318, (void (*)(void))sub_100224548, (void (*)(void))sub_10022458C);
}

unint64_t sub_100224548()
{
  unint64_t result;

  result = qword_10032A320;
  if (!qword_10032A320)
  {
    result = swift_getWitnessTable(&unk_100259004, &type metadata for FallbackStartView);
    atomic_store(result, (unint64_t *)&qword_10032A320);
  }
  return result;
}

unint64_t sub_10022458C()
{
  unint64_t result;

  result = qword_10032A328;
  if (!qword_10032A328)
  {
    result = swift_getWitnessTable(&unk_1002563C4, &type metadata for CurrentStateView);
    atomic_store(result, (unint64_t *)&qword_10032A328);
  }
  return result;
}

uint64_t sub_1002245D0()
{
  return sub_100008140(&qword_10032A330, &qword_10032A338, (void (*)(void))sub_1002245F4, (void (*)(void))sub_100099EC8);
}

unint64_t sub_1002245F4()
{
  unint64_t result;

  result = qword_10032A340;
  if (!qword_10032A340)
  {
    result = swift_getWitnessTable(&unk_100252844, &type metadata for ExplorerMainView);
    atomic_store(result, (unint64_t *)&qword_10032A340);
  }
  return result;
}

uint64_t sub_100224638(uint64_t result)
{
  *(_BYTE *)(result + 208) = 1;
  return result;
}

uint64_t sub_100224644(uint64_t result)
{
  *(_BYTE *)(result + 211) = 0;
  return result;
}

uint64_t sub_10022464C(uint64_t result)
{
  *(_BYTE *)(result + 208) = 0;
  return result;
}

_QWORD *sub_100224654(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = a1[2];
  v3 = a1[4];
  v4 = a1[6];
  v5 = a1[8];
  v6 = a1[10];
  v7 = a1[12];
  v8 = a1[14];
  v9 = a1[16];
  v10 = a1[19];
  v12 = a1[21];
  v13 = a1[23];
  v14 = a1[25];
  swift_release(*a1);
  swift_release(v2);
  swift_release(v3);
  swift_release(v4);
  swift_release(v5);
  swift_release(v6);
  swift_release(v7);
  swift_release(v8);
  swift_release(v9);
  swift_release(v10);
  swift_release(v12);
  swift_release(v13);
  swift_release(v14);
  return a1;
}

uint64_t sub_10022473C()
{
  return sub_1000084FC(&qword_10032A368, (uint64_t *)&unk_10032A370, (uint64_t)&protocol conformance descriptor for TupleView<A>);
}

unint64_t sub_100224768(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100003DB8(&qword_10032A6A8);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v7 = *(v6 - 2);
    v8 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    swift_unknownObjectRetain(v9);
    result = sub_10017D3B0(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v6 += 3;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100224880(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100003DB8(&qword_10031C680);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (_QWORD *)(a1 + 48);
  while (1)
  {
    v8 = *(v6 - 2);
    v7 = *(v6 - 1);
    v9 = *v6;
    swift_retain(*v6);
    swift_retain(v8);
    swift_retain(v7);
    result = sub_10017D414(v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v4[6] + 8 * result) = v8;
    v12 = (_QWORD *)(v4[7] + 16 * result);
    *v12 = v7;
    v12[1] = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v6 += 3;
    v4[2] = v15;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10022499C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100003DB8(&qword_10031C628);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_10000B234(v7, (uint64_t)&v16, (uint64_t *)&unk_10032A6C0);
    v8 = v16;
    v9 = v17;
    result = sub_10017D3B0(v16, v17);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v8;
    v12[1] = v9;
    result = (unint64_t)sub_10003E704(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 48;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100224AD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100003DB8(&qword_10031C638);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (_QWORD *)(a1 + 48);
  while (1)
  {
    v7 = *(v6 - 2);
    v8 = *((_BYTE *)v6 - 8);
    v9 = *v6;
    swift_retain(*v6);
    swift_retain(v7);
    result = sub_10017D414(v10);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v4[6] + 8 * result) = v7;
    v13 = v4[7] + 16 * result;
    *(_BYTE *)v13 = v8;
    *(_QWORD *)(v13 + 8) = v9;
    v14 = v4[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v6 += 3;
    v4[2] = v16;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100224BE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100003DB8((uint64_t *)&unk_10032A6F0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v8 = *(v6 - 1);
    v7 = *v6;
    swift_retain(v8);
    swift_bridgeObjectRetain(v7);
    result = sub_10017D414(v8);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = 8 * result;
    *(_QWORD *)(v4[6] + v11) = v8;
    *(_QWORD *)(v4[7] + v11) = v7;
    v12 = v4[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v4[2] = v14;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100224CF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100003DB8(&qword_10031C630);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v7 = *(v6 - 2);
    v8 = *(v6 - 1);
    v9 = *v6;
    swift_retain(v7);
    swift_bridgeObjectRetain(v9);
    result = sub_10017D414(v7);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v4[6] + 8 * result) = v7;
    v12 = (_QWORD *)(v4[7] + 16 * result);
    *v12 = v8;
    v12[1] = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v6 += 3;
    v4[2] = v15;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100224E04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char v12;
  unint64_t result;
  char v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100003DB8(&qword_10031C618);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(v1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(v1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v20 = v1;
  v6 = (_BYTE *)(v1 + 72);
  while (1)
  {
    v7 = *((_QWORD *)v6 - 5);
    v8 = *((_QWORD *)v6 - 4);
    v9 = *((_QWORD *)v6 - 3);
    v10 = *((_QWORD *)v6 - 2);
    v11 = *((_QWORD *)v6 - 1);
    v12 = *v6;
    swift_bridgeObjectRetain(v8);
    sub_10000CC50(v9, v10);
    result = sub_10017D3B0(v7, v8);
    if ((v14 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v15 = (uint64_t *)(v4[6] + 16 * result);
    *v15 = v7;
    v15[1] = v8;
    v16 = v4[7] + 32 * result;
    *(_QWORD *)v16 = v9;
    *(_QWORD *)(v16 + 8) = v10;
    *(_QWORD *)(v16 + 16) = v11;
    *(_BYTE *)(v16 + 24) = v12;
    v17 = v4[2];
    v18 = __OFADD__(v17, 1);
    v19 = v17 + 1;
    if (v18)
      goto LABEL_11;
    v4[2] = v19;
    v6 += 48;
    if (!--v5)
    {
      swift_release(v4);
      v1 = v20;
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100224F44(uint64_t a1)
{
  return sub_1002251CC(a1, &qword_10032A758, (uint64_t *)&unk_10032A760, (uint64_t (*)(uint64_t))sub_10017D494);
}

unint64_t sub_100224F60(uint64_t a1)
{
  return sub_10022509C(a1, (uint64_t *)&unk_10032A6B0);
}

unint64_t sub_100224F6C(uint64_t a1)
{
  return sub_10022509C(a1, (uint64_t *)&unk_10032A740);
}

unint64_t sub_100224F78(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100003DB8(&qword_10032A6A0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v7 = *(v6 - 2);
    v8 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    swift_retain(v9);
    result = sub_10017D3B0(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v6 += 3;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100225090(uint64_t a1)
{
  return sub_10022509C(a1, &qword_10032A698);
}

unint64_t sub_10022509C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  unint64_t result;
  char v13;
  uint64_t *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    v5 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100003DB8(a2);
  v4 = static _DictionaryStorage.allocate(capacity:)(v3);
  v5 = (_QWORD *)v4;
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v5;
  }
  swift_retain(v4);
  v7 = (void **)(a1 + 48);
  while (1)
  {
    v8 = (uint64_t)*(v7 - 2);
    v9 = (uint64_t)*(v7 - 1);
    v10 = *v7;
    swift_bridgeObjectRetain(v9);
    v11 = v10;
    result = sub_10017D3B0(v8, v9);
    if ((v13 & 1) != 0)
      break;
    *(_QWORD *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v14 = (uint64_t *)(v5[6] + 16 * result);
    *v14 = v8;
    v14[1] = v9;
    *(_QWORD *)(v5[7] + 8 * result) = v11;
    v15 = v5[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v5[2] = v17;
    v7 += 3;
    if (!--v6)
    {
      swift_release(v5);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1002251B0(uint64_t a1)
{
  return sub_1002251CC(a1, &qword_10032A730, &qword_10032A738, (uint64_t (*)(uint64_t))sub_10017D494);
}

unint64_t sub_1002251CC(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
    v9 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100003DB8(a2);
  v8 = static _DictionaryStorage.allocate(capacity:)(v5);
  v9 = (_QWORD *)v8;
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v9;
  }
  v11 = v8 + 64;
  v12 = a1 + 32;
  swift_retain(v8);
  while (1)
  {
    sub_10000B234(v12, (uint64_t)&v19, a3);
    v13 = v19;
    result = a4(v19);
    if ((v15 & 1) != 0)
      break;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v9[6] + 8 * result) = v13;
    result = (unint64_t)sub_10003E704(&v20, (_OWORD *)(v9[7] + 32 * result));
    v16 = v9[2];
    v17 = __OFADD__(v16, 1);
    v18 = v16 + 1;
    if (v17)
      goto LABEL_11;
    v9[2] = v18;
    v12 += 40;
    if (!--v10)
    {
      swift_release(v9);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1002252F4(uint64_t a1)
{
  return sub_10022530C(a1, &qword_10032A728);
}

unint64_t sub_100225300(uint64_t a1)
{
  return sub_10022530C(a1, &qword_10032A720);
}

unint64_t sub_10022530C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  id v9;
  __n128 v10;
  unint64_t result;
  char v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    v5 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100003DB8(a2);
  v4 = static _DictionaryStorage.allocate(capacity:)(v3);
  v5 = (_QWORD *)v4;
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v5;
  }
  swift_retain(v4);
  v7 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v8 = *v7;
    v9 = (id)*(v7 - 1);
    v10 = swift_bridgeObjectRetain(v8);
    result = sub_10017D494(v9, v10);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = 8 * result;
    *(_QWORD *)(v5[6] + v13) = v9;
    *(_QWORD *)(v5[7] + v13) = v8;
    v14 = v5[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v5[2] = v16;
    v7 += 2;
    if (!--v6)
    {
      swift_release(v5);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100225410(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100003DB8(&qword_10032A700);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v7 = *(v6 - 2);
    v8 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    result = sub_10017D3B0(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v6 += 3;
    v4[2] = v15;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

float ConnectionAssistantRenderer.RenderPipelines.Constants.earthOutlineWidth.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 60);
}

__int128 *ConnectionAssistantRenderer.RenderPipelines.Constants.default.unsafeMutableAddressor()
{
  if (qword_1003159B0 != -1)
    swift_once(&qword_1003159B0, sub_100225990);
  return &static ConnectionAssistantRenderer.RenderPipelines.Constants.default;
}

uint64_t ConnectionAssistantRenderer.RenderPipelines.__allocating_init(device:constants:pixelFormat:)(void *a1, unsigned int *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = swift_allocObject(v3, 224, 15);
  ConnectionAssistantRenderer.RenderPipelines.init(device:constants:pixelFormat:)(a1, a2, a3);
  return v7;
}

double ConnectionAssistantRenderer.RenderPipelines.Constants.coneGaussianRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 136);
}

uint64_t ConnectionAssistantRenderer.RenderPipelines.Constants.FunctionConstant.type.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(a1 + 16);
  if (swift_dynamicCastMetatype(v1, &type metadata for Bool))
    return 53;
  if (swift_dynamicCastMetatype(v1, &type metadata for Float))
    return 3;
  v3 = sub_100003DB8(&qword_10032A380);
  if (swift_dynamicCastMetatype(v1, v3))
    return 4;
  v4 = sub_100003DB8(&qword_10032A388);
  if (swift_dynamicCastMetatype(v1, v4))
    return 5;
  v5 = sub_100003DB8((uint64_t *)&unk_10032A390);
  if (swift_dynamicCastMetatype(v1, v5))
    return 6;
  if (swift_dynamicCastMetatype(v1, &type metadata for Float16))
    return 16;
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x206E776F6E6B6E75, 0xEC00000065707974, "SOSBuddy/ConnectionAssistantRendererPipelines.swift", 51, 2, 49, 0);
  __break(1u);
  return result;
}

uint64_t ConnectionAssistantRenderer.RenderPipelines.Constants.FunctionConstant.index.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t ConnectionAssistantRenderer.RenderPipelines.Constants.FunctionConstant.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 28));
}

uint64_t ConnectionAssistantRenderer.RenderPipelines.Constants.FunctionConstant.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 28), a1);
}

uint64_t (*ConnectionAssistantRenderer.RenderPipelines.Constants.FunctionConstant.wrappedValue.modify())()
{
  return ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter;
}

uint64_t ConnectionAssistantRenderer.RenderPipelines.Constants.FunctionConstant.projectedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(a2, v2);
}

uint64_t ConnectionAssistantRenderer.RenderPipelines.Constants.FunctionConstant.init(wrappedValue:index:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v9;
  uint64_t result;

  v9 = type metadata accessor for ConnectionAssistantRenderer.RenderPipelines.Constants.FunctionConstant(0, a3, a3, a4);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(&a5[*(int *)(v9 + 28)], a1, a3);
  *(_DWORD *)a5 = a2;
  return result;
}

uint64_t property wrapper backing initializer of ConnectionAssistantRenderer.RenderPipelines.Constants.earthAtmosphereColor()
{
  return 7;
}

__n128 ConnectionAssistantRenderer.RenderPipelines.Constants.$earthAtmosphereColor.getter()
{
  __n128 *v0;

  return v0[1];
}

uint64_t property wrapper backing initializer of ConnectionAssistantRenderer.RenderPipelines.Constants.earthAtmosphereInnerStrength()
{
  return 8;
}

__int16 ConnectionAssistantRenderer.RenderPipelines.Constants.earthAtmosphereInnerStrength.getter@<H0>()
{
  uint64_t v0;

  return *(_WORD *)(v0 + 36);
}

void ConnectionAssistantRenderer.RenderPipelines.Constants.earthAtmosphereInnerStrength.setter(__n128 a1)
{
  uint64_t v1;

  *(_WORD *)(v1 + 36) = a1.n128_u16[0];
}

__int16 ConnectionAssistantRenderer.RenderPipelines.Constants.$earthAtmosphereInnerStrength.getter@<H0>()
{
  uint64_t v0;

  return *(_WORD *)(v0 + 36);
}

uint64_t property wrapper backing initializer of ConnectionAssistantRenderer.RenderPipelines.Constants.earthAtmosphereOuterStrength()
{
  return 9;
}

__int16 ConnectionAssistantRenderer.RenderPipelines.Constants.earthAtmosphereOuterStrength.getter@<H0>()
{
  uint64_t v0;

  return *(_WORD *)(v0 + 44);
}

void ConnectionAssistantRenderer.RenderPipelines.Constants.earthAtmosphereOuterStrength.setter(__n128 a1)
{
  uint64_t v1;

  *(_WORD *)(v1 + 44) = a1.n128_u16[0];
}

uint64_t (*ConnectionAssistantRenderer.RenderPipelines.Constants.earthAtmosphereOuterStrength.modify())()
{
  return ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter;
}

__int16 ConnectionAssistantRenderer.RenderPipelines.Constants.$earthAtmosphereOuterStrength.getter@<H0>()
{
  uint64_t v0;

  return *(_WORD *)(v0 + 44);
}

uint64_t property wrapper backing initializer of ConnectionAssistantRenderer.RenderPipelines.Constants.earthAtmosphereGlowPower()
{
  return 10;
}

__int16 ConnectionAssistantRenderer.RenderPipelines.Constants.earthAtmosphereGlowPower.getter@<H0>()
{
  uint64_t v0;

  return *(_WORD *)(v0 + 52);
}

void ConnectionAssistantRenderer.RenderPipelines.Constants.earthAtmosphereGlowPower.setter(__n128 a1)
{
  uint64_t v1;

  *(_WORD *)(v1 + 52) = a1.n128_u16[0];
}

uint64_t (*ConnectionAssistantRenderer.RenderPipelines.Constants.earthAtmosphereGlowPower.modify())()
{
  return ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter;
}

__int16 ConnectionAssistantRenderer.RenderPipelines.Constants.$earthAtmosphereGlowPower.getter@<H0>()
{
  uint64_t v0;

  return *(_WORD *)(v0 + 52);
}

uint64_t property wrapper backing initializer of ConnectionAssistantRenderer.RenderPipelines.Constants.earthOutlineWidth()
{
  return 13;
}

void ConnectionAssistantRenderer.RenderPipelines.Constants.earthOutlineWidth.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 60) = a1;
}

uint64_t (*ConnectionAssistantRenderer.RenderPipelines.Constants.earthOutlineWidth.modify())()
{
  return ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter;
}

float ConnectionAssistantRenderer.RenderPipelines.Constants.$earthOutlineWidth.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 60);
}

uint64_t property wrapper backing initializer of ConnectionAssistantRenderer.RenderPipelines.Constants.earthOutlineColor()
{
  return 14;
}

void ConnectionAssistantRenderer.RenderPipelines.Constants.earthOutlineColor.setter(__n128 a1)
{
  __n128 *v1;

  v1[5] = a1;
}

__n128 ConnectionAssistantRenderer.RenderPipelines.Constants.$earthOutlineColor.getter()
{
  __n128 *v0;

  return v0[5];
}

uint64_t property wrapper backing initializer of ConnectionAssistantRenderer.RenderPipelines.Constants.coneBaseAlpha()
{
  return 15;
}

double ConnectionAssistantRenderer.RenderPipelines.Constants.coneBaseAlpha.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 104);
}

void ConnectionAssistantRenderer.RenderPipelines.Constants.coneBaseAlpha.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 104) = a1;
}

uint64_t (*ConnectionAssistantRenderer.RenderPipelines.Constants.coneBaseAlpha.modify())()
{
  return ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter;
}

double ConnectionAssistantRenderer.RenderPipelines.Constants.$coneBaseAlpha.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 104);
}

uint64_t property wrapper backing initializer of ConnectionAssistantRenderer.RenderPipelines.Constants.coneTopAlpha()
{
  return 16;
}

float ConnectionAssistantRenderer.RenderPipelines.Constants.coneTopAlpha.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 116);
}

void ConnectionAssistantRenderer.RenderPipelines.Constants.coneTopAlpha.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 116) = a1;
}

uint64_t (*ConnectionAssistantRenderer.RenderPipelines.Constants.coneTopAlpha.modify())()
{
  return ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter;
}

float ConnectionAssistantRenderer.RenderPipelines.Constants.$coneTopAlpha.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 116);
}

uint64_t property wrapper backing initializer of ConnectionAssistantRenderer.RenderPipelines.Constants.coneEllipseAlpha()
{
  return 17;
}

float ConnectionAssistantRenderer.RenderPipelines.Constants.coneEllipseAlpha.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 124);
}

void ConnectionAssistantRenderer.RenderPipelines.Constants.coneEllipseAlpha.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 124) = a1;
}

uint64_t (*ConnectionAssistantRenderer.RenderPipelines.Constants.coneEllipseAlpha.modify())()
{
  return ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter;
}

float ConnectionAssistantRenderer.RenderPipelines.Constants.$coneEllipseAlpha.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 124);
}

uint64_t property wrapper backing initializer of ConnectionAssistantRenderer.RenderPipelines.Constants.coneGaussianRadius()
{
  return 18;
}

void ConnectionAssistantRenderer.RenderPipelines.Constants.coneGaussianRadius.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 136) = a1;
}

uint64_t (*ConnectionAssistantRenderer.RenderPipelines.Constants.coneGaussianRadius.modify())()
{
  return ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter;
}

double ConnectionAssistantRenderer.RenderPipelines.Constants.$coneGaussianRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 136);
}

double sub_100225990()
{
  double result;

  LODWORD(static ConnectionAssistantRenderer.RenderPipelines.Constants.default) = 7;
  xmmword_100340060 = xmmword_10024BC80;
  LODWORD(xmmword_100340070) = 8;
  WORD2(xmmword_100340070) = *(_WORD *)"f2f6";
  DWORD2(xmmword_100340070) = 9;
  WORD6(xmmword_100340070) = *(_WORD *)"f6";
  dword_100340080 = 10;
  word_100340084 = *(_WORD *)"";
  qword_100340088 = 0x3F0000000000000DLL;
  LODWORD(xmmword_100340090) = 14;
  __asm { FMOV            V0.4S, #1.0 }
  xmmword_1003400A0 = _Q0;
  LODWORD(xmmword_1003400B0) = 15;
  *((_QWORD *)&xmmword_1003400B0 + 1) = 0x3E99999A3D4CCCCDLL;
  qword_1003400C0 = 16;
  unk_1003400C8 = 0x3C23D70A00000011;
  LODWORD(xmmword_1003400D0) = 18;
  result = 33554432.0;
  *((_QWORD *)&xmmword_1003400D0 + 1) = 0x4180000000000000;
  return result;
}

__n128 static ConnectionAssistantRenderer.RenderPipelines.Constants.default.getter@<Q0>(uint64_t a1@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;

  if (qword_1003159B0 != -1)
    swift_once(&qword_1003159B0, sub_100225990);
  v2 = *(_OWORD *)&qword_1003400C0;
  *(_OWORD *)(a1 + 96) = xmmword_1003400B0;
  *(_OWORD *)(a1 + 112) = v2;
  *(_OWORD *)(a1 + 128) = xmmword_1003400D0;
  v3 = *(_OWORD *)&dword_100340080;
  *(_OWORD *)(a1 + 32) = xmmword_100340070;
  *(_OWORD *)(a1 + 48) = v3;
  v4 = xmmword_1003400A0;
  *(_OWORD *)(a1 + 64) = xmmword_100340090;
  *(_OWORD *)(a1 + 80) = v4;
  result = (__n128)xmmword_100340060;
  *(_OWORD *)a1 = static ConnectionAssistantRenderer.RenderPipelines.Constants.default;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

__n128 ConnectionAssistantRenderer.RenderPipelines.constants.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  _BYTE v7[24];

  swift_beginAccess(v1 + 48, v7, 0, 0);
  v3 = *(_OWORD *)(v1 + 160);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(v1 + 144);
  *(_OWORD *)(a1 + 112) = v3;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(v1 + 176);
  v4 = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  v5 = *(_OWORD *)(v1 + 128);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(a1 + 80) = v5;
  result = *(__n128 *)(v1 + 64);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 48);
  *(__n128 *)(a1 + 16) = result;
  return result;
}

double ConnectionAssistantRenderer.RenderPipelines.constants.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  id v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  double result;
  uint64_t v12;
  _BYTE v13[24];

  swift_beginAccess(v1 + 48, v13, 1, 0);
  v3 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v1 + 144) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 160) = v3;
  *(_OWORD *)(v1 + 176) = *(_OWORD *)(a1 + 128);
  v4 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v1 + 96) = v4;
  v5 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 128) = v5;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 48) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 64) = v6;
  v7 = sub_1002275BC((unsigned int *)a1);
  v8 = *(void **)(v1 + 192);
  *(_QWORD *)(v1 + 192) = v7;

  v9 = sub_10022700C((uint64_t)_swiftEmptyArrayStorage);
  swift_beginAccess(v1 + 216, &v12, 1, 0);
  v10 = *(_QWORD *)(v1 + 216);
  *(_QWORD *)(v1 + 216) = v9;
  *(_QWORD *)&result = swift_bridgeObjectRelease(v10).n128_u64[0];
  return result;
}

void (*ConnectionAssistantRenderer.RenderPipelines.constants.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0xB0uLL);
  *a1 = v3;
  v3[21] = v1;
  swift_beginAccess(v1 + 48, v3 + 18, 33, 0);
  return sub_100225C0C;
}

void sub_100225C0C(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  id v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;

  v3 = *a1;
  v4 = *a1 + 144;
  swift_endAccess(v4);
  if ((a2 & 1) == 0)
  {
    v5 = *(_QWORD *)(v3 + 168);
    *(_OWORD *)v3 = *(_OWORD *)(v5 + 48);
    v6 = *(_OWORD *)(v5 + 112);
    v8 = *(_OWORD *)(v5 + 64);
    v7 = *(_OWORD *)(v5 + 80);
    *(_OWORD *)(v3 + 48) = *(_OWORD *)(v5 + 96);
    *(_OWORD *)(v3 + 64) = v6;
    *(_OWORD *)(v3 + 16) = v8;
    *(_OWORD *)(v3 + 32) = v7;
    v9 = *(_OWORD *)(v5 + 176);
    v11 = *(_OWORD *)(v5 + 128);
    v10 = *(_OWORD *)(v5 + 144);
    *(_OWORD *)(v3 + 112) = *(_OWORD *)(v5 + 160);
    *(_OWORD *)(v3 + 128) = v9;
    *(_OWORD *)(v3 + 80) = v11;
    *(_OWORD *)(v3 + 96) = v10;
    v12 = sub_1002275BC((unsigned int *)v3);
    v13 = *(void **)(v5 + 192);
    *(_QWORD *)(v5 + 192) = v12;

    v14 = sub_10022700C((uint64_t)_swiftEmptyArrayStorage);
    swift_beginAccess(v5 + 216, v4, 1, 0);
    v15 = *(_QWORD *)(v5 + 216);
    *(_QWORD *)(v5 + 216) = v14;
    swift_bridgeObjectRelease(v15);
  }
  free((void *)v3);
}

uint64_t ConnectionAssistantRenderer.RenderPipelines.init(device:constants:pixelFormat:)(void *a1, unsigned int *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t ObjCClassFromMetadata;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v18;

  if (qword_1003159B0 != -1)
    swift_once(&qword_1003159B0, sub_100225990);
  memmove((void *)(v3 + 48), &static ConnectionAssistantRenderer.RenderPipelines.Constants.default, 0x90uLL);
  *(_QWORD *)(v3 + 200) = 0;
  *(_BYTE *)(v3 + 208) = 0;
  *(_QWORD *)(v3 + 216) = sub_10022700C((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)(v3 + 16) = a1;
  v7 = type metadata accessor for ConnectionAssistantRenderer.RenderPipelines();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v7);
  v9 = (void *)objc_opt_self(NSBundle);
  swift_unknownObjectRetain(a1);
  v10 = objc_msgSend(v9, "bundleForClass:", ObjCClassFromMetadata);
  v18 = 0;
  v11 = objc_msgSend(a1, "newDefaultLibraryWithBundle:error:", v10, &v18);
  v12 = v18;
  if (v11)
  {
    *(_QWORD *)(v3 + 24) = v11;
    *(_QWORD *)(v3 + 32) = a3;
    v13 = v12;
    v14 = sub_1002275BC(a2);

    swift_unknownObjectRelease(a1);
    *(_QWORD *)(v3 + 192) = v14;
  }
  else
  {
    v15 = v18;
    _convertNSErrorToError(_:)(v12);

    swift_willThrow(v16);
    swift_unknownObjectRelease(a1);
    swift_unknownObjectRelease(*(_QWORD *)(v3 + 16));
    swift_unknownObjectRelease(*(_QWORD *)(v3 + 200));
    swift_bridgeObjectRelease(*(_QWORD *)(v3 + 216));
    swift_deallocPartialClassInstance(v3, v7, 224, 15);
  }
  return v3;
}

uint64_t type metadata accessor for ConnectionAssistantRenderer.RenderPipelines.Constants.FunctionConstant(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100005D84(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ConnectionAssistantRenderer.RenderPipelines.Constants.FunctionConstant);
}

uint64_t ConnectionAssistantRenderer.RenderPipelines.starKernelPipelineState.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12;

  v1 = sub_100003DB8(&qword_100328750);
  v3 = __chkstk_darwin(v1, v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v0 + 200);
  if (v6 || (*(_BYTE *)(v0 + 208) & 1) != 0)
  {
    swift_unknownObjectRetain(*(_QWORD *)(v0 + 200));
  }
  else
  {
    *(_BYTE *)(v0 + 208) = 1;
    static TaskPriority.userInitiated.getter(v3);
    v7 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 0, 1, v7);
    v8 = swift_allocObject(&unk_1002FB0D0, 24, 7);
    swift_weakInit(v8 + 16);
    v9 = (_QWORD *)swift_allocObject(&unk_1002FB0F8, 40, 7);
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = v8;
    v10 = sub_1001E51D8((uint64_t)v5, (uint64_t)&unk_10032A3A8, (uint64_t)v9);
    swift_release(v10);
    sub_100227844((uint64_t)v5);
  }
  return v6;
}

uint64_t sub_100225F98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 72) = a4;
  return swift_task_switch(sub_100225FFC, 0, 0);
}

uint64_t sub_100225FFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  id v4;
  void *v5;
  NSString v6;
  id v7;
  double v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 72) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  *(_QWORD *)(v0 + 80) = Strong;
  if (!Strong)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v3 = Strong;
  v4 = objc_msgSend(objc_allocWithZone((Class)MTLComputePipelineDescriptor), "init");
  *(_QWORD *)(v0 + 88) = v4;
  v5 = *(void **)(v3 + 24);
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v5, "newFunctionWithName:", v6);

  objc_msgSend(v4, "setComputeFunction:", v7);
  *(_QWORD *)&v8 = swift_unknownObjectRelease(v7).n128_u64[0];
  v9 = *(void **)(v3 + 16);
  *(_QWORD *)(v0 + 40) = 0;
  v10 = objc_msgSend(v9, "newComputePipelineStateWithDescriptor:options:reflection:error:", v4, 0, 0, v0 + 40, v8);
  *(_QWORD *)(v0 + 96) = v10;
  v11 = *(void **)(v0 + 40);
  if (v10)
  {
    v12 = v11;
  }
  else
  {
    v14 = v11;
    v15 = _convertNSErrorToError(_:)(v11);

    swift_willThrow(v16);
    swift_errorRelease(v15);
  }
  swift_weakInit(v0 + 64);
  v17 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 104) = static MainActor.shared.getter(v18);
  v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
  return swift_task_switch(sub_1002261F0, v19, v20);
}

uint64_t sub_1002261F0()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release(*(_QWORD *)(v0 + 104));
  swift_beginAccess(v0 + 64, v0 + 40, 0, 0);
  Strong = swift_weakLoadStrong(v0 + 64);
  if (Strong)
  {
    v2 = Strong;
    v3 = *(_QWORD *)(v0 + 96);
    v4 = *(_QWORD *)(v2 + 200);
    *(_QWORD *)(v2 + 200) = v3;
    swift_unknownObjectRetain(v3);
    swift_unknownObjectRelease(v4);
    swift_release(v2);
  }
  swift_weakDestroy(v0 + 64);
  return swift_task_switch(sub_1002262B4, 0, 0);
}

uint64_t sub_1002262B4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 80);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 96));

  swift_release(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100226328()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t sub_10022634C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];
  _BYTE v16[24];

  v3 = sub_100003DB8(&qword_100328750);
  __chkstk_darwin(v3, v4);
  v5 = (_QWORD *)(v1 + 216);
  swift_beginAccess(v1 + 216, v16, 0, 0);
  v6 = *(_QWORD *)(v1 + 216);
  if (!*(_QWORD *)(v6 + 16) || (v7 = sub_10017D294(a1), (v8 & 1) == 0))
  {
    v10 = _s15RenderPipelinesC13PipelineStateCMa();
    v11 = swift_allocObject(v10, 24, 7);
    *(_QWORD *)(v11 + 16) = 0;
    swift_beginAccess(v5, v15, 33, 0);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v5);
    v14 = *v5;
    *v5 = 0x8000000000000000;
    sub_10020C588(v11, a1, isUniquelyReferenced_nonNull_native);
    v13 = *v5;
    *v5 = v14;
    swift_bridgeObjectRelease(v13);
    swift_endAccess(v15);
    __asm { BR              X10 }
  }
  return swift_unknownObjectRetain(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v7) + 16));
}

uint64_t sub_100226658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;

  *(_BYTE *)(v6 + 97) = a6;
  *(_QWORD *)(v6 + 48) = a4;
  *(_QWORD *)(v6 + 56) = a5;
  return swift_task_switch(sub_100226674, 0, 0);
}

uint64_t sub_100226674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  *(_QWORD *)(v0 + 64) = Strong;
  if (!Strong)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v3 = sub_10022695C(*(_QWORD *)(v0 + 56));
  *(_QWORD *)(v0 + 72) = 0;
  *(_QWORD *)(v0 + 80) = v3;
  swift_weakInit(v0 + 40);
  v4 = type metadata accessor for MainActor(0);
  swift_unknownObjectRetain(v3);
  *(_QWORD *)(v0 + 88) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  return swift_task_switch(sub_100226768, v6, v7);
}

uint64_t sub_100226768()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(unsigned __int8 *)(v0 + 97);
  swift_release(*(_QWORD *)(v0 + 88));
  sub_100226824(v0 + 40, v2, v1, (char *)(v0 + 96));
  swift_unknownObjectRelease(v1);
  swift_weakDestroy(v0 + 40);
  return swift_task_switch(sub_1002267E8, 0, 0);
}

uint64_t sub_1002267E8()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 80);
  swift_release(*(_QWORD *)(v0 + 64));
  v2 = swift_unknownObjectRelease(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

void sub_100226824(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _BYTE v17[24];

  swift_beginAccess(a1, v17, 0, 0);
  Strong = swift_weakLoadStrong(a1);
  if (!Strong)
    goto LABEL_6;
  v9 = Strong;
  swift_beginAccess(Strong + 216, &v16, 0, 0);
  v10 = *(_QWORD *)(v9 + 216);
  swift_bridgeObjectRetain(v10);
  swift_release(v9);
  if (!*(_QWORD *)(v10 + 16) || (v11 = sub_10017D294(a2), (v12 & 1) == 0))
  {
    swift_bridgeObjectRelease(v10);
LABEL_6:
    v15 = 1;
    goto LABEL_7;
  }
  v13 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v11);
  swift_retain(v13);
  swift_bridgeObjectRelease(v10);
  v14 = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v13 + 16) = a3;
  swift_unknownObjectRetain(a3);
  swift_release(v13);
  swift_unknownObjectRelease(v14);
  v15 = 0;
LABEL_7:
  *a4 = v15;
}

uint64_t ConnectionAssistantRenderer.RenderPipelines.starRenderPipelineState.getter()
{
  return sub_10022634C(0);
}

uint64_t ConnectionAssistantRenderer.RenderPipelines.earthRenderPipeline.getter()
{
  return sub_10022634C(1);
}

uint64_t ConnectionAssistantRenderer.RenderPipelines.earthTexturedRenderPipeline.getter()
{
  return sub_10022634C(2);
}

uint64_t ConnectionAssistantRenderer.RenderPipelines.earthShapeRenderPipelineState.getter()
{
  return sub_10022634C(3);
}

uint64_t ConnectionAssistantRenderer.RenderPipelines.dotRenderPipelineState.getter()
{
  return sub_10022634C(4);
}

uint64_t ConnectionAssistantRenderer.RenderPipelines.coneRenderPipelineState.getter()
{
  return sub_10022634C(5);
}

uint64_t ConnectionAssistantRenderer.RenderPipelines.arrowRenderPipelineState.getter()
{
  return sub_10022634C(6);
}

uint64_t ConnectionAssistantRenderer.RenderPipelines.satelliteRenderPipelineState.getter()
{
  return sub_10022634C(7);
}

_QWORD *sub_10022695C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  id v4;
  void *v5;
  Swift::String v6;
  uint64_t v7;
  void *v8;
  Swift::String v9;
  NSString v10;
  void *v11;
  NSString v12;
  id v13;
  NSString v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  int v21;
  uint64_t v22;
  char **v23;
  char **v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char **v28;
  void *v29;
  _QWORD *v30;
  id v31;
  id v32;
  uint64_t v33;
  id v35[2];

  v2 = v1;
  v4 = objc_msgSend(objc_allocWithZone((Class)MTLRenderPipelineDescriptor), "init");
  v5 = *(void **)(a1 + 8);
  v35[0] = *(id *)a1;
  v35[1] = v5;
  swift_bridgeObjectRetain(v5);
  v6._countAndFlagsBits = 43;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(void **)(a1 + 24);
  swift_bridgeObjectRetain(v8);
  v9._countAndFlagsBits = v7;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(v8);
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  objc_msgSend(v4, "setLabel:", v10);

  v11 = (void *)v1[3];
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v11, "newFunctionWithName:", v12);

  objc_msgSend(v4, "setVertexFunction:", v13);
  swift_unknownObjectRelease(v13);
  v14 = String._bridgeToObjectiveC()();
  v15 = v2[24];
  v35[0] = 0;
  v16 = objc_msgSend(v11, "newFunctionWithName:constantValues:error:", v14, v15, v35);

  v17 = v35[0];
  if (!v16)
    goto LABEL_11;
  v18 = v35[0];
  objc_msgSend(v4, "setFragmentFunction:", v16);
  v19 = objc_msgSend(v4, "colorAttachments", swift_unknownObjectRelease(v16).n128_f64[0]);
  v20 = objc_msgSend(v19, "objectAtIndexedSubscript:", 0);

  if (!v20)
    goto LABEL_9;
  objc_msgSend(v20, "setPixelFormat:", v2[4]);
  objc_msgSend(v20, "setBlendingEnabled:", 1);
  v21 = *(unsigned __int8 *)(a1 + 32);
  v22 = 5;
  if (v21)
  {
    if (v21 != 1)
    {
      v26 = 0;
      v23 = &selRef_setSourceAlphaBlendFactor_;
      v24 = &selRef_setAlphaBlendOperation_;
      v25 = 4;
      v27 = 4;
      v28 = &selRef_setRgbBlendOperation_;
      goto LABEL_8;
    }
    v22 = 1;
  }
  objc_msgSend(v20, "setRgbBlendOperation:", 0);
  objc_msgSend(v20, "setAlphaBlendOperation:", 0);
  v23 = &selRef_setDestinationRGBBlendFactor_;
  v24 = &selRef_setSourceAlphaBlendFactor_;
  v25 = 1;
  v26 = 1;
  v27 = v22;
  v28 = &selRef_setSourceRGBBlendFactor_;
LABEL_8:
  objc_msgSend(v20, *v28, v25);
  objc_msgSend(v20, *v24, v26);
  objc_msgSend(v20, *v23, v27);
  objc_msgSend(v20, "setDestinationAlphaBlendFactor:", v22);

LABEL_9:
  v29 = (void *)v2[2];
  v35[0] = 0;
  v30 = objc_msgSend(v29, "newRenderPipelineStateWithDescriptor:error:", v4, v35);
  v17 = v35[0];
  if (!v30)
  {
LABEL_11:
    v32 = v17;
    _convertNSErrorToError(_:)(v17);

    swift_willThrow(v33);
    return v2;
  }
  v2 = v30;
  v31 = v35[0];

  return v2;
}

uint64_t ConnectionAssistantRenderer.RenderPipelines.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 200));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 216));
  return v0;
}

uint64_t ConnectionAssistantRenderer.RenderPipelines.__deallocating_deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 200));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 216));
  return swift_deallocClassInstance(v0, 224, 15);
}

unint64_t sub_100226D2C(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  Swift::UInt v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char v16;

  v1 = a1[2];
  if (!v1)
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  sub_100003DB8(&qword_10032A708);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  v4 = a1[4];
  v5 = a1[5];
  v6 = a1[6];
  result = sub_10017D298(v4);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain(v6);
    return (unint64_t)v3;
  }
  v9 = a1 + 9;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v4;
    v10 = (_QWORD *)(v3[7] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    if (!--v1)
      goto LABEL_8;
    v14 = v9 + 3;
    v4 = *(v9 - 2);
    v5 = *(v9 - 1);
    v15 = *v9;
    swift_bridgeObjectRetain(v6);
    result = sub_10017D298(v4);
    v9 = v14;
    v6 = v15;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_100226E38(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  char *i;
  unsigned __int8 v5;
  char v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_100003DB8(&qword_10032A710);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
    for (i = (char *)(a1 + 33); ; i += 2)
    {
      v5 = *(i - 1);
      v6 = *i;
      result = sub_10017D294(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v3[6] + result) = v5;
      *(_BYTE *)(v3[7] + result) = v6;
      v9 = v3[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v3[2] = v11;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_100226F0C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t i;
  char v5;
  unint64_t result;
  char v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  _BYTE v11[8];
  __int128 v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_100003DB8(&qword_10032A6E0);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
    for (i = a1 + 32; ; i += 40)
    {
      sub_10000B234(i, (uint64_t)v11, &qword_10032A6E8);
      v5 = v11[0];
      result = sub_10017D294(v11[0]);
      if ((v7 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v3[6] + result) = v5;
      result = (unint64_t)sub_10003E704(&v12, (_OWORD *)(v3[7] + 32 * result));
      v8 = v3[2];
      v9 = __OFADD__(v8, 1);
      v10 = v8 + 1;
      if (v9)
        goto LABEL_10;
      v3[2] = v10;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_10022700C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  sub_100003DB8(&qword_10031C648);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  LOBYTE(v4) = *(_BYTE *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  result = sub_10017D294(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain(v5);
    return (unint64_t)v3;
  }
  v8 = (uint64_t *)(a1 + 56);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    *(_QWORD *)(v3[7] + 8 * result) = v5;
    v9 = v3[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      break;
    v3[2] = v11;
    if (!--v1)
      goto LABEL_8;
    v12 = v8 + 2;
    v4 = *((unsigned __int8 *)v8 - 8);
    v13 = *v8;
    swift_retain(v5);
    result = sub_10017D294(v4);
    v8 = v12;
    v5 = v13;
    if ((v14 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_10022710C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  unint64_t result;
  char v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_100003DB8((uint64_t *)&unk_10032A6D0);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
    v4 = (_QWORD *)(a1 + 72);
    while (1)
    {
      v5 = *(v4 - 5);
      v6 = *(v4 - 4);
      v8 = *(v4 - 3);
      v7 = *(v4 - 2);
      v9 = *((_BYTE *)v4 - 8);
      v10 = *((_BYTE *)v4 - 7);
      v11 = *v4;
      result = sub_10018647C(v5);
      if ((v13 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v3[6] + 8 * result) = v5;
      v14 = v3[7] + 40 * result;
      *(_QWORD *)v14 = v6;
      *(_QWORD *)(v14 + 8) = v8;
      *(_QWORD *)(v14 + 16) = v7;
      *(_BYTE *)(v14 + 24) = v9;
      *(_BYTE *)(v14 + 25) = v10;
      *(_QWORD *)(v14 + 32) = v11;
      v15 = v3[2];
      v16 = __OFADD__(v15, 1);
      v17 = v15 + 1;
      if (v16)
        goto LABEL_10;
      v4 += 6;
      v3[2] = v17;
      swift_bridgeObjectRetain(v11);
      swift_bridgeObjectRetain(v7);
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_10022722C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t *i;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_100003DB8(&qword_10032A750);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
    for (i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      v5 = *(i - 1);
      v6 = *i;
      result = sub_10017D498(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v9 = 8 * result;
      *(_QWORD *)(v3[6] + v9) = v5;
      *(_QWORD *)(v3[7] + v9) = v6;
      v10 = v3[2];
      v11 = __OFADD__(v10, 1);
      v12 = v10 + 1;
      if (v11)
        goto LABEL_10;
      v3[2] = v12;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_100227300(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t result;
  char v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  sub_100003DB8(&qword_10031C640);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  v4 = *(_BYTE *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v8 = *(_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(a1 + 64);
  v9 = *(_QWORD *)(a1 + 80);
  v10 = *(_QWORD *)(a1 + 96);
  v28 = *(_QWORD *)(a1 + 88);
  v29 = *(_QWORD *)(a1 + 72);
  v26 = a1;
  v11 = *(_BYTE *)(a1 + 104);
  result = sub_10017D354(v4);
  if ((v13 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v6);
    return (unint64_t)v3;
  }
  v14 = (_BYTE *)(v26 + 184);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    v15 = v3[7] + 72 * result;
    *(_QWORD *)v15 = v5;
    *(_QWORD *)(v15 + 8) = v6;
    *(_QWORD *)(v15 + 16) = v8;
    *(_QWORD *)(v15 + 24) = v7;
    *(_QWORD *)(v15 + 32) = v29;
    *(_QWORD *)(v15 + 40) = v9;
    *(_QWORD *)(v15 + 48) = v28;
    *(_QWORD *)(v15 + 56) = v10;
    *(_BYTE *)(v15 + 64) = v11 & 1;
    v16 = v3[2];
    v17 = __OFADD__(v16, 1);
    v18 = v16 + 1;
    if (v17)
      break;
    v3[2] = v18;
    if (!--v1)
      goto LABEL_8;
    v4 = *(v14 - 72);
    v25 = *((_QWORD *)v14 - 8);
    v27 = *((_QWORD *)v14 - 7);
    v23 = v14 + 80;
    v24 = *((_QWORD *)v14 - 6);
    v22 = *((_QWORD *)v14 - 5);
    v19 = *((_QWORD *)v14 - 3);
    v20 = *((_QWORD *)v14 - 1);
    v28 = *((_QWORD *)v14 - 2);
    v29 = *((_QWORD *)v14 - 4);
    v11 = *v14;
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v10);
    result = sub_10017D354(v4);
    v10 = v20;
    v5 = v25;
    v6 = v27;
    v9 = v19;
    v14 = v23;
    v8 = v24;
    v7 = v22;
    if ((v21 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1002274BC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  sub_100003DB8(&qword_10032A718);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  LOBYTE(v4) = *(_BYTE *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  result = sub_10017D294(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_unknownObjectRetain(v5);
    return (unint64_t)v3;
  }
  v8 = (uint64_t *)(a1 + 56);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    *(_QWORD *)(v3[7] + 8 * result) = v5;
    v9 = v3[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      break;
    v3[2] = v11;
    if (!--v1)
      goto LABEL_8;
    v12 = v8 + 2;
    v4 = *((unsigned __int8 *)v8 - 8);
    v13 = *v8;
    swift_unknownObjectRetain(v5);
    result = sub_10017D294(v4);
    v8 = v12;
    v5 = v13;
    if ((v14 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

id sub_1002275BC(unsigned int *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;

  v2 = objc_msgSend(objc_allocWithZone((Class)MTLFunctionConstantValues), "init");
  v3 = *a1;
  v14 = *((_OWORD *)a1 + 1);
  objc_msgSend(v2, "setConstantValue:type:atIndex:", &v14, 5, v3);
  v4 = a1[8];
  LOWORD(v14) = *((_WORD *)a1 + 18);
  objc_msgSend(v2, "setConstantValue:type:atIndex:", &v14, 16, v4);
  v5 = a1[10];
  LOWORD(v14) = *((_WORD *)a1 + 22);
  objc_msgSend(v2, "setConstantValue:type:atIndex:", &v14, 16, v5);
  v6 = a1[12];
  LOWORD(v14) = *((_WORD *)a1 + 26);
  objc_msgSend(v2, "setConstantValue:type:atIndex:", &v14, 16, v6);
  v7 = a1[14];
  LODWORD(v14) = a1[15];
  objc_msgSend(v2, "setConstantValue:type:atIndex:", &v14, 3, v7);
  v8 = a1[16];
  v14 = *((_OWORD *)a1 + 5);
  objc_msgSend(v2, "setConstantValue:type:atIndex:", &v14, 6, v8);
  v9 = a1[24];
  *(_QWORD *)&v14 = *((_QWORD *)a1 + 13);
  objc_msgSend(v2, "setConstantValue:type:atIndex:", &v14, 4, v9);
  v10 = a1[28];
  LODWORD(v14) = a1[29];
  objc_msgSend(v2, "setConstantValue:type:atIndex:", &v14, 3, v10);
  v11 = a1[30];
  LODWORD(v14) = a1[31];
  objc_msgSend(v2, "setConstantValue:type:atIndex:", &v14, 3, v11);
  v12 = a1[32];
  *(_QWORD *)&v14 = *((_QWORD *)a1 + 17);
  objc_msgSend(v2, "setConstantValue:type:atIndex:", &v14, 4, v12);
  return v2;
}

uint64_t type metadata accessor for ConnectionAssistantRenderer.RenderPipelines()
{
  return objc_opt_self(_TtCC8SOSBuddy27ConnectionAssistantRenderer15RenderPipelines);
}

uint64_t sub_100227794()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002277B8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002277E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_10032A3A4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100228220;
  v3[9] = v2;
  return swift_task_switch(sub_100225FFC, 0, 0);
}

uint64_t sub_100227844(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100003DB8(&qword_100328750);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

__n128 _s15RenderPipelinesC9ConstantsVwcp(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t _s15RenderPipelinesC9ConstantsVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 144))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s15RenderPipelinesC9ConstantsVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 144) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAssistantRenderer.RenderPipelines.Constants()
{
  return &type metadata for ConnectionAssistantRenderer.RenderPipelines.Constants;
}

uint64_t sub_100227930(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.Int32 + 64;
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 24);
    return 0;
  }
  return result;
}

uint64_t *sub_1002279AC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if ((v5 | 3uLL) > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 4) & (unint64_t)~v5) + *(_QWORD *)(v4 + 64) > 0x18)
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~(v5 | 3)));
    swift_retain(v8);
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + v5 + 4) & ~v5, ((unint64_t)a2 + v5 + 4) & ~v5);
  }
  return v3;
}

uint64_t sub_100227A4C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_DWORD *sub_100227A6C(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_DWORD *sub_100227ABC(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_DWORD *sub_100227B0C(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_DWORD *sub_100227B5C(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_100227BAC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v8 = ((v6 + 4) & ~v6) + *(_QWORD *)(v4 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(uint64_t))(v4 + 48))((a1 + v6 + 4) & ~v6);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return v5 + v12 + 1;
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_100227C6C + 4 * byte_10025F6DE[(v8 - 1)]))();
}

void sub_100227CCC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  size_t v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = ((v8 + 4) & ~v8) + *(_QWORD *)(v6 + 64);
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v9 <= 3)
    {
      v14 = ((v11 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v14))
      {
        v12 = &dword_100000004;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = &_mh_execute_header.magic + 1;
    }
  }
  else
  {
    v12 = 0;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v9 < 4)
    {
      if ((_DWORD)v9)
      {
        v15 = v13 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if ((_DWORD)v9 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v9 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, ((v8 + 4) & ~v8) + *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t _s15RenderPipelinesC13PipelineStateCMa()
{
  return objc_opt_self(_TtCCC8SOSBuddy27ConnectionAssistantRenderer15RenderPipelinesP33_39C740675935A731AF7DFD3EF5923FCD13PipelineState);
}

uint64_t _s15RenderPipelinesC10PipelineIdOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s15RenderPipelinesC10PipelineIdOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_100227F94 + 4 * byte_10025F6F1[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_100227FC8 + 4 * byte_10025F6EC[v4]))();
}

uint64_t sub_100227FC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100227FD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100227FD8);
  return result;
}

uint64_t sub_100227FE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100227FECLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_100227FF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100227FF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s15RenderPipelinesC10PipelineIdOMa()
{
  return &_s15RenderPipelinesC10PipelineIdON;
}

unint64_t sub_100228018()
{
  unint64_t result;

  result = qword_10032A690;
  if (!qword_10032A690)
  {
    result = swift_getWitnessTable(&unk_10025F814, &_s15RenderPipelinesC10PipelineIdON);
    atomic_store(result, (unint64_t *)&qword_10032A690);
  }
  return result;
}

uint64_t sub_10022805C()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[6]);
  swift_bridgeObjectRelease(v0[8]);
  return swift_deallocObject(v0, 74, 7);
}

uint64_t sub_100228098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = v0 + 40;
  v4 = *(_BYTE *)(v0 + 73);
  v5 = swift_task_alloc(dword_10032A774);
  *(_QWORD *)(v1 + 16) = v5;
  *(_QWORD *)v5 = v1;
  *(_QWORD *)(v5 + 8) = sub_1001E5190;
  *(_BYTE *)(v5 + 97) = v4;
  *(_QWORD *)(v5 + 48) = v2;
  *(_QWORD *)(v5 + 56) = v3;
  return swift_task_switch(sub_100226674, 0, 0);
}

uint64_t _s15RenderPipelinesC9BlendModeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100228158 + 4 * byte_10025F6FB[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10022818C + 4 * byte_10025F6F6[v4]))();
}

uint64_t sub_10022818C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100228194(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10022819CLL);
  return result;
}

uint64_t sub_1002281A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002281B0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1002281B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002281BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s15RenderPipelinesC9BlendModeOMa()
{
  return &_s15RenderPipelinesC9BlendModeON;
}

unint64_t sub_1002281DC()
{
  unint64_t result;

  result = qword_10032A780;
  if (!qword_10032A780)
  {
    result = swift_getWitnessTable(&unk_10025F8A0, &_s15RenderPipelinesC9BlendModeON);
    atomic_store(result, (unint64_t *)&qword_10032A780);
  }
  return result;
}

ValueMetadata *type metadata accessor for TryOutConnectionAlertButtonsView()
{
  return &type metadata for TryOutConnectionAlertButtonsView;
}

uint64_t sub_100228234(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1002A0EB8, 1);
}

uint64_t sub_100228244@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, char *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  Swift::String v28;
  Swift::String v29;
  Swift::String v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  id v40;
  Swift::String v41;
  Swift::String v42;
  Swift::String v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  char *v49;
  char *v50;
  void (*v51)(char *, char *, uint64_t);
  char *v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  void (*v56)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  char *v67;
  char *v68;
  char *v69;
  Swift::String v70;
  Swift::String v71;
  Swift::String v72;

  LODWORD(v64) = a3;
  v62 = a1;
  v63 = a2;
  v69 = a4;
  v4 = sub_100003DB8(&qword_100319400);
  __chkstk_darwin(v4, v5);
  v67 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for KeyboardShortcut(0);
  v65 = *(_QWORD *)(v7 - 8);
  v66 = (void (*)(char *, uint64_t))v7;
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100003DB8(&qword_100318730);
  v59 = *(_QWORD *)(v11 - 8);
  v12 = v59;
  __chkstk_darwin(v11, v13);
  v68 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  v18 = (char *)&v58 - v17;
  v19 = sub_100003DB8(&qword_10032A788);
  v61 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19, v20);
  v22 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23, v24);
  v60 = (char *)&v58 - v25;
  v26 = (void *)objc_opt_self(NSBundle);
  v27 = objc_msgSend(v26, "mainBundle");
  v71._countAndFlagsBits = 0xD000000000000085;
  v71._object = (void *)0x80000001002724A0;
  v28._countAndFlagsBits = 0x66664F206E727554;
  v28._object = (void *)0xE800000000000000;
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, (Swift::String_optional)0, (NSBundle)v27, v29, v71);

  v70 = v30;
  v31 = swift_allocObject(&unk_1002FB420, 33, 7);
  v33 = v62;
  v32 = v63;
  *(_QWORD *)(v31 + 16) = v62;
  *(_QWORD *)(v31 + 24) = v32;
  *(_BYTE *)(v31 + 32) = v64;
  v34 = sub_10002B3F4();
  v64 = v34;
  swift_retain(v33);
  v35 = Button<>.init<A>(_:action:)(&v70, sub_100228734, v31, &type metadata for String, v34);
  static KeyboardShortcut.defaultAction.getter(v35);
  v36 = sub_1000084FC(&qword_100318738, &qword_100318730, (uint64_t)&protocol conformance descriptor for Button<A>);
  v37 = v22;
  View.keyboardShortcut(_:)(v10, v11, v36);
  (*(void (**)(char *, _QWORD))(v65 + 8))(v10, v66);
  v66 = *(void (**)(char *, uint64_t))(v12 + 8);
  v66(v18, v11);
  v39 = v60;
  v38 = v61;
  (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v60, v22, v19);
  v40 = objc_msgSend(v26, "mainBundle");
  v72._object = (void *)0x800000010026B010;
  v41._countAndFlagsBits = 0x6C65636E6143;
  v41._object = (void *)0xE600000000000000;
  v42._countAndFlagsBits = 0;
  v42._object = (void *)0xE000000000000000;
  v72._countAndFlagsBits = 0xD00000000000001BLL;
  v43 = NSLocalizedString(_:tableName:bundle:value:comment:)(v41, (Swift::String_optional)0, (NSBundle)v40, v42, v72);

  v70 = v43;
  v44 = v67;
  static ButtonRole.cancel.getter(v45, v46);
  v47 = type metadata accessor for ButtonRole(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v44, 0, 1, v47);
  Button<>.init<A>(_:role:action:)(&v70, v44, ConnectionAssistantRendererEarthOutline.Buffers.shapesCount.getter, 0, &type metadata for String, v64);
  v48 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
  v49 = v22;
  v50 = v39;
  v48(v49, v39, v19);
  v51 = *(void (**)(char *, char *, uint64_t))(v59 + 16);
  v52 = v68;
  v51(v68, v18, v11);
  v53 = v69;
  v48(v69, v37, v19);
  v54 = sub_100003DB8(&qword_10032A790);
  v51(&v53[*(int *)(v54 + 48)], v52, v11);
  v55 = v66;
  v66(v18, v11);
  v56 = *(void (**)(char *, uint64_t))(v38 + 8);
  v56(v50, v19);
  v55(v52, v11);
  return ((uint64_t (*)(char *, uint64_t))v56)(v37, v19);
}

uint64_t sub_100228698(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  unint64_t v7;
  char v8;

  if (a1)
  {
    v3 = *(_QWORD *)(a1 + 48);
    v8 = a3;
    swift_retain(v3);
    PassthroughSubject.send(_:)(&v8);
    return swift_release(v3);
  }
  else
  {
    v6 = type metadata accessor for AppEvents();
    v7 = sub_100228740();
    result = EnvironmentObject.error()(0, a2, v6, v7);
    __break(1u);
  }
  return result;
}

uint64_t sub_100228704@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_100228244(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(unsigned __int8 *)(v1 + 16), a1);
}

uint64_t sub_100228710()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 33, 7);
}

uint64_t sub_100228734()
{
  uint64_t v0;

  return sub_100228698(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
}

unint64_t sub_100228740()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100316A10;
  if (!qword_100316A10)
  {
    v1 = type metadata accessor for AppEvents();
    result = swift_getWitnessTable(&unk_100254EA8, v1);
    atomic_store(result, (unint64_t *)&qword_100316A10);
  }
  return result;
}

uint64_t sub_100228788()
{
  return sub_1000084FC(&qword_10032A798, &qword_10032A7A0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
}

uint64_t sub_1002287B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v1 = v0;
  v2 = *(_QWORD *)v0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_BYTE *)(v0 + 128) = 0;
  *(_QWORD *)(v0 + 136) = &_swiftEmptySetSingleton;
  *(_OWORD *)(v0 + 144) = 0u;
  *(_OWORD *)(v0 + 160) = 0u;
  *(_OWORD *)(v0 + 176) = 0u;
  *(_QWORD *)(v0 + 200) = &_swiftEmptySetSingleton;
  v3 = v0 + OBJC_IVAR____TtC8SOSBuddy21BannerAppearanceModel_bannerMode;
  *(_BYTE *)(v1 + 192) = 0;
  v4 = type metadata accessor for ConnectionAssitantBannerMode.Mode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = sub_100003DB8(&qword_10032B0E0);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  *(_QWORD *)(v1 + 16) = PassthroughSubject.init()(v6);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  *(_QWORD *)(v1 + 24) = PassthroughSubject.init()(v7);
  v8 = qword_100315820;
  swift_retain(v1);
  if (v8 != -1)
    swift_once(&qword_100315820, sub_1000D95E4);
  v9 = type metadata accessor for Logger(0);
  sub_10000D744(v9, (uint64_t)qword_10033FD18);
  v11 = swift_retain_n(v1, v10);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v21 = v1;
    v22 = v15;
    *(_DWORD *)v14 = 136446210;
    v16 = swift_retain(v1);
    v17 = String.init<A>(describing:)(&v21, v2, v16);
    v19 = v18;
    v21 = sub_100172BEC(v17, v18, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v14 + 4, v14 + 12);
    swift_release_n(v1);
    swift_bridgeObjectRelease(v19);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "[%{public}s] init", v14, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);

    swift_release(v1);
  }
  else
  {

    swift_release_n(v1);
  }
  return v1;
}

uint64_t sub_100228A20()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 136));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 200));
  return sub_100007FF0(v0 + OBJC_IVAR____TtC8SOSBuddy21BannerAppearanceModel_bannerMode, &qword_100316AD8);
}

_QWORD *sub_100228A58()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v1 = v0;
  v2 = *v0;
  if (qword_100315820 != -1)
    swift_once(&qword_100315820, sub_1000D95E4);
  v3 = type metadata accessor for Logger(0);
  sub_10000D744(v3, (uint64_t)qword_10033FD18);
  v5 = swift_retain_n(v0, v4);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v15 = (uint64_t)v1;
    v16 = v9;
    *(_DWORD *)v8 = 136446210;
    v10 = swift_retain(v1);
    v11 = String.init<A>(describing:)(&v15, v2, v10);
    v13 = v12;
    v15 = sub_100172BEC(v11, v12, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v8 + 4, v8 + 12);
    swift_release_n(v1);
    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "[%{public}s] deinit", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

    swift_release_n(v1);
  }
  swift_release(v1[2]);
  swift_release(v1[3]);
  swift_bridgeObjectRelease(v1[17]);
  swift_bridgeObjectRelease(v1[25]);
  sub_100007FF0((uint64_t)v1 + OBJC_IVAR____TtC8SOSBuddy21BannerAppearanceModel_bannerMode, &qword_100316AD8);
  return v1;
}

uint64_t sub_100228C48()
{
  uint64_t v0;

  sub_100228A58();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100228C6C()
{
  return type metadata accessor for BannerAppearanceModel(0);
}

uint64_t type metadata accessor for BannerAppearanceModel(uint64_t a1)
{
  uint64_t result;

  result = qword_10032A7D0;
  if (!qword_10032A7D0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BannerAppearanceModel);
  return result;
}

void sub_100228CB0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = &unk_10025F9F8;
  v4[1] = &unk_10025F9F8;
  v4[2] = &unk_10025F9F8;
  v4[3] = &unk_10025FA10;
  v4[4] = &unk_10025FA10;
  sub_100228D38(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 104);
  }
}

void sub_100228D38(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10032A7E0)
  {
    v2 = type metadata accessor for ConnectionAssitantBannerMode.Mode(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10032A7E0);
  }
}

void sub_100228D8C(double a1, double a2)
{
  __n128 *v2;
  __n128 *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  __n128 v25;
  uint64_t v26;

  if (v2[2].n128_f64[0] != a1 || v2[2].n128_f64[1] != a2)
  {
    v6 = v2;
    if (qword_100315838 != -1)
      swift_once(&qword_100315838, sub_1000D9630);
    v7 = type metadata accessor for Logger(0);
    sub_10000D744(v7, (uint64_t)qword_10033FD60);
    v9 = swift_retain_n(v2, v8);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc(22, -1);
      v13 = swift_slowAlloc(64, -1);
      v26 = v13;
      *(_DWORD *)v12 = 136446466;
      v25.n128_f64[0] = a1;
      v25.n128_f64[1] = a2;
      type metadata accessor for CGSize(0);
      v15 = v14;
      v17 = String.init<A>(describing:)(&v25, v14, v16);
      v19 = v18;
      v25.n128_u64[0] = sub_100172BEC(v17, v18, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v25.n128_i8[8], v12 + 4, v12 + 12);
      swift_bridgeObjectRelease(v19);
      *(_WORD *)(v12 + 12) = 2082;
      v25 = v6[2];
      v20 = String.init<A>(describing:)(&v25, v15, v25);
      v22 = v21;
      v25.n128_u64[0] = sub_100172BEC(v20, v21, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v25.n128_i8[8], v12 + 14, v12 + 22);
      swift_release_n(v6);
      swift_bridgeObjectRelease(v22);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "preferredSize did change from %{public}s to %{public}s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy(v13, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);

    }
    else
    {

      swift_release_n(v6);
    }
    v23 = sub_100003DB8(&qword_10032B0E0);
    v24 = sub_100016B20();
    Subject<>.send()(v23, v24);
  }
}

void sub_100228FD0(double a1, double a2)
{
  __n128 *v2;
  __n128 *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  __n128 v25;
  uint64_t v26;

  if (v2[3].n128_f64[0] != a1 || v2[3].n128_f64[1] != a2)
  {
    v6 = v2;
    if (qword_100315838 != -1)
      swift_once(&qword_100315838, sub_1000D9630);
    v7 = type metadata accessor for Logger(0);
    sub_10000D744(v7, (uint64_t)qword_10033FD60);
    v9 = swift_retain_n(v2, v8);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter(v10);
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc(22, -1);
      v13 = swift_slowAlloc(64, -1);
      v26 = v13;
      *(_DWORD *)v12 = 136446466;
      v25.n128_f64[0] = a1;
      v25.n128_f64[1] = a2;
      type metadata accessor for CGSize(0);
      v15 = v14;
      v17 = String.init<A>(describing:)(&v25, v14, v16);
      v19 = v18;
      v25.n128_u64[0] = sub_100172BEC(v17, v18, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v25.n128_i8[8], v12 + 4, v12 + 12);
      swift_bridgeObjectRelease(v19);
      *(_WORD *)(v12 + 12) = 2082;
      v25 = v6[3];
      v20 = String.init<A>(describing:)(&v25, v15, v25);
      v22 = v21;
      v25.n128_u64[0] = sub_100172BEC(v20, v21, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v25.n128_i8[8], v12 + 14, v12 + 22);
      swift_release_n(v6);
      swift_bridgeObjectRelease(v22);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "committedSize did change from %{public}s to %{public}s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy(v13, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);

    }
    else
    {

      swift_release_n(v6);
    }
    v23 = sub_100003DB8(&qword_10032B0E0);
    v24 = sub_100016B20();
    Subject<>.send()(v23, v24);
  }
}

void sub_100229214(double a1, double a2)
{
  __n128 *v2;
  __n128 *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  __n128 v25;
  uint64_t v26;

  if (v2[4].n128_f64[0] != a1 || v2[4].n128_f64[1] != a2)
  {
    v6 = v2;
    if (qword_100315838 != -1)
      swift_once(&qword_100315838, sub_1000D9630);
    v7 = type metadata accessor for Logger(0);
    sub_10000D744(v7, (uint64_t)qword_10033FD60);
    v9 = swift_retain_n(v2, v8);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc(22, -1);
      v13 = swift_slowAlloc(64, -1);
      v26 = v13;
      *(_DWORD *)v12 = 136446466;
      v25.n128_f64[0] = a1;
      v25.n128_f64[1] = a2;
      type metadata accessor for CGSize(0);
      v15 = v14;
      v17 = String.init<A>(describing:)(&v25, v14, v16);
      v19 = v18;
      v25.n128_u64[0] = sub_100172BEC(v17, v18, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v25.n128_i8[8], v12 + 4, v12 + 12);
      swift_bridgeObjectRelease(v19);
      *(_WORD *)(v12 + 12) = 2082;
      v25 = v6[4];
      v20 = String.init<A>(describing:)(&v25, v15, v25);
      v22 = v21;
      v25.n128_u64[0] = sub_100172BEC(v20, v21, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v25.n128_i8[8], v12 + 14, v12 + 22);
      swift_release_n(v6);
      swift_bridgeObjectRelease(v22);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "preferredSessionSize did change from %{public}s to %{public}s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy(v13, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);

    }
    else
    {

      swift_release_n(v6);
    }
    v23 = sub_100003DB8(&qword_10032B0E0);
    v24 = sub_100016B20();
    Subject<>.send()(v23, v24);
  }
}

void sub_100229458(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  int v8;
  uint64_t v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  CGFloat v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __n128 v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  __int128 v28;
  __n128 v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  CGRect v41;
  CGRect v42;

  v2 = v1;
  if (*(double *)(v1 + 80) == *(double *)a1 && *(double *)(v1 + 88) == *(double *)(a1 + 8))
  {
    v4 = *(double *)(v1 + 96);
    v5 = *(double *)(v1 + 104);
    v6 = *(double *)(v1 + 112);
    v7 = *(double *)(v1 + 120);
    v8 = *(unsigned __int8 *)(v1 + 128);
    v9 = *(_QWORD *)(v1 + 136);
    v10 = *(double *)(a1 + 16);
    v11 = *(double *)(a1 + 24);
    v12 = *(double *)(a1 + 32);
    v13 = *(double *)(a1 + 40);
    swift_bridgeObjectRetain(*(_QWORD *)(v2 + 136));
    v41.origin.x = v4;
    v41.origin.y = v5;
    v41.size.width = v6;
    v41.size.height = v7;
    v42.origin.x = v10;
    v42.origin.y = v11;
    v42.size.width = v12;
    v42.size.height = v13;
    if (CGRectEqualToRect(v41, v42) && ((v8 ^ *(unsigned __int8 *)(a1 + 48)) & 1) == 0)
    {
      v35 = sub_1001BF404(v9, *(_QWORD *)(a1 + 56));
      swift_bridgeObjectRelease(v9);
      if ((v35 & 1) != 0)
        return;
    }
    else
    {
      swift_bridgeObjectRelease(v9);
    }
  }
  if (qword_100315838 != -1)
    swift_once(&qword_100315838, sub_1000D9630);
  v14 = type metadata accessor for Logger(0);
  sub_10000D744(v14, (uint64_t)qword_10033FD60);
  sub_100114354(a1);
  swift_retain(v2);
  sub_100114354(a1);
  swift_retain(v2);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter(v16);
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(22, -1);
    v19 = swift_slowAlloc(64, -1);
    v40 = v19;
    *(_DWORD *)v18 = 136446466;
    v20 = *(_OWORD *)(a1 + 16);
    v36 = *(_OWORD *)a1;
    v37 = v20;
    v21 = *(_OWORD *)(a1 + 48);
    v38 = *(_OWORD *)(a1 + 32);
    v39 = v21;
    sub_100114354(a1);
    v23 = String.init<A>(describing:)(&v36, &type metadata for PreferredBannerLayout, v22);
    v25 = v24;
    *(_QWORD *)&v36 = sub_100172BEC(v23, v24, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, (char *)&v36 + 8, v18 + 4, v18 + 12);
    swift_bridgeObjectRelease(v25);
    sub_1001143C0(a1);
    sub_1001143C0(a1);
    *(_WORD *)(v18 + 12) = 2082;
    v26 = *(_BYTE *)(v2 + 128);
    v27 = *(_QWORD *)(v2 + 136);
    v28 = *(_OWORD *)(v2 + 96);
    v36 = *(_OWORD *)(v2 + 80);
    v37 = v28;
    v38 = *(_OWORD *)(v2 + 112);
    LOBYTE(v39) = v26;
    *((_QWORD *)&v39 + 1) = v27;
    v29 = swift_bridgeObjectRetain(v27);
    v30 = String.init<A>(describing:)(&v36, &type metadata for PreferredBannerLayout, v29);
    v32 = v31;
    *(_QWORD *)&v36 = sub_100172BEC(v30, v31, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, (char *)&v36 + 8, v18 + 14, v18 + 22);
    swift_release_n(v2);
    swift_bridgeObjectRelease(v32);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "requestedSessionLayout did change from %{public}s to %{public}s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy(v19, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

  }
  else
  {
    sub_1001143C0(a1);
    sub_1001143C0(a1);

    swift_release_n(v2);
  }
  v33 = sub_100003DB8(&qword_10032B0E0);
  v34 = sub_100016B20();
  Subject<>.send()(v33, v34);
}

void sub_10022979C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  int v8;
  uint64_t v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  CGFloat v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __n128 v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  __int128 v28;
  __n128 v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  CGRect v41;
  CGRect v42;

  v2 = v1;
  if (*(double *)(v1 + 144) == *(double *)a1 && *(double *)(v1 + 152) == *(double *)(a1 + 8))
  {
    v4 = *(double *)(v1 + 160);
    v5 = *(double *)(v1 + 168);
    v6 = *(double *)(v1 + 176);
    v7 = *(double *)(v1 + 184);
    v8 = *(unsigned __int8 *)(v1 + 192);
    v9 = *(_QWORD *)(v1 + 200);
    v10 = *(double *)(a1 + 16);
    v11 = *(double *)(a1 + 24);
    v12 = *(double *)(a1 + 32);
    v13 = *(double *)(a1 + 40);
    swift_bridgeObjectRetain(*(_QWORD *)(v2 + 200));
    v41.origin.x = v4;
    v41.origin.y = v5;
    v41.size.width = v6;
    v41.size.height = v7;
    v42.origin.x = v10;
    v42.origin.y = v11;
    v42.size.width = v12;
    v42.size.height = v13;
    if (CGRectEqualToRect(v41, v42) && ((v8 ^ *(unsigned __int8 *)(a1 + 48)) & 1) == 0)
    {
      v35 = sub_1001BF404(v9, *(_QWORD *)(a1 + 56));
      swift_bridgeObjectRelease(v9);
      if ((v35 & 1) != 0)
        return;
    }
    else
    {
      swift_bridgeObjectRelease(v9);
    }
  }
  if (qword_100315838 != -1)
    swift_once(&qword_100315838, sub_1000D9630);
  v14 = type metadata accessor for Logger(0);
  sub_10000D744(v14, (uint64_t)qword_10033FD60);
  sub_100114354(a1);
  swift_retain(v2);
  sub_100114354(a1);
  swift_retain(v2);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter(v16);
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(22, -1);
    v19 = swift_slowAlloc(64, -1);
    v40 = v19;
    *(_DWORD *)v18 = 136446466;
    v20 = *(_OWORD *)(a1 + 16);
    v36 = *(_OWORD *)a1;
    v37 = v20;
    v21 = *(_OWORD *)(a1 + 48);
    v38 = *(_OWORD *)(a1 + 32);
    v39 = v21;
    sub_100114354(a1);
    v23 = String.init<A>(describing:)(&v36, &type metadata for PreferredBannerLayout, v22);
    v25 = v24;
    *(_QWORD *)&v36 = sub_100172BEC(v23, v24, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, (char *)&v36 + 8, v18 + 4, v18 + 12);
    swift_bridgeObjectRelease(v25);
    sub_1001143C0(a1);
    sub_1001143C0(a1);
    *(_WORD *)(v18 + 12) = 2082;
    v26 = *(_BYTE *)(v2 + 192);
    v27 = *(_QWORD *)(v2 + 200);
    v28 = *(_OWORD *)(v2 + 160);
    v36 = *(_OWORD *)(v2 + 144);
    v37 = v28;
    v38 = *(_OWORD *)(v2 + 176);
    LOBYTE(v39) = v26;
    *((_QWORD *)&v39 + 1) = v27;
    v29 = swift_bridgeObjectRetain(v27);
    v30 = String.init<A>(describing:)(&v36, &type metadata for PreferredBannerLayout, v29);
    v32 = v31;
    *(_QWORD *)&v36 = sub_100172BEC(v30, v31, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, (char *)&v36 + 8, v18 + 14, v18 + 22);
    swift_release_n(v2);
    swift_bridgeObjectRelease(v32);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "committedSessionLayout did change from %{public}s to %{public}s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy(v19, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

  }
  else
  {
    sub_1001143C0(a1);
    sub_1001143C0(a1);

    swift_release_n(v2);
  }
  v33 = sub_100003DB8(&qword_10032B0E0);
  v34 = sub_100016B20();
  Subject<>.send()(v33, v34);
}

uint64_t sub_100229AE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  char v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  _BYTE v25[24];

  v3 = type metadata accessor for ConnectionAssitantBannerMode.Mode(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  v7 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = sub_100003DB8(&qword_100316AD8);
  __chkstk_darwin(v8, v9);
  v11 = &v25[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = sub_100003DB8(&qword_1003295F8);
  __chkstk_darwin(v12, v13);
  v15 = &v25[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v16 = v1 + OBJC_IVAR____TtC8SOSBuddy21BannerAppearanceModel_bannerMode;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8SOSBuddy21BannerAppearanceModel_bannerMode, v25, 0, 0);
  v17 = (uint64_t)&v15[*(int *)(v12 + 48)];
  sub_10022A15C(v16, (uint64_t)v15);
  sub_10022A15C(a1, v17);
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v18((uint64_t)v15, 1, v3) == 1)
  {
    if (v18(v17, 1, v3) == 1)
      return sub_100007FF0((uint64_t)v15, &qword_100316AD8);
  }
  else
  {
    sub_10022A15C((uint64_t)v15, (uint64_t)v11);
    if (v18(v17, 1, v3) != 1)
    {
      sub_1001FC25C(v17, (uint64_t)v7);
      sub_10019E824((uint64_t)v11, (uint64_t)v7);
      v21 = v20;
      sub_1001FC220((uint64_t)v7);
      sub_1001FC220((uint64_t)v11);
      result = sub_100007FF0((uint64_t)v15, &qword_100316AD8);
      if ((v21 & 1) != 0)
        return result;
      goto LABEL_8;
    }
    sub_1001FC220((uint64_t)v11);
  }
  sub_100007FF0((uint64_t)v15, &qword_1003295F8);
LABEL_8:
  v22 = sub_100003DB8(&qword_10032B0E0);
  v23 = sub_100016B20();
  return Subject<>.send()(v22, v23);
}

uint64_t sub_100229CFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57[24];

  v3 = type metadata accessor for ConnectionAssitantBannerMode.Mode(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_100003DB8(&qword_100316AD8);
  v9 = __chkstk_darwin(v53, v8);
  v52 = (uint64_t)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9, v11);
  v14 = (char *)&v50 - v13;
  __chkstk_darwin(v12, v15);
  v17 = (char *)&v50 - v16;
  v18 = sub_100003DB8(&qword_1003295F8);
  __chkstk_darwin(v18, v19);
  v21 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = v1;
  v22 = v1 + OBJC_IVAR____TtC8SOSBuddy21BannerAppearanceModel_bannerMode;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8SOSBuddy21BannerAppearanceModel_bannerMode, v57, 0, 0);
  v23 = (uint64_t)&v21[*(int *)(v18 + 48)];
  sub_10022A15C(v22, (uint64_t)v21);
  sub_10022A15C(a1, v23);
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v24((uint64_t)v21, 1, v3) == 1)
  {
    if (v24(v23, 1, v3) == 1)
      return sub_100007FF0((uint64_t)v21, &qword_100316AD8);
  }
  else
  {
    sub_10022A15C((uint64_t)v21, (uint64_t)v17);
    if (v24(v23, 1, v3) != 1)
    {
      sub_1001FC25C(v23, (uint64_t)v7);
      sub_10019E824((uint64_t)v17, (uint64_t)v7);
      v49 = v48;
      sub_1001FC220((uint64_t)v7);
      sub_1001FC220((uint64_t)v17);
      result = sub_100007FF0((uint64_t)v21, &qword_100316AD8);
      if ((v49 & 1) != 0)
        return result;
      goto LABEL_7;
    }
    sub_1001FC220((uint64_t)v17);
  }
  sub_100007FF0((uint64_t)v21, &qword_1003295F8);
LABEL_7:
  if (qword_100315838 != -1)
    swift_once(&qword_100315838, sub_1000D9630);
  v26 = type metadata accessor for Logger(0);
  sub_10000D744(v26, (uint64_t)qword_10033FD60);
  sub_10022A15C(a1, (uint64_t)v14);
  v27 = v54;
  v29 = swift_retain_n(v54, 2, v28);
  v30 = Logger.logObject.getter(v29);
  v31 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = swift_slowAlloc(22, -1);
    v51 = swift_slowAlloc(64, -1);
    v56 = v51;
    *(_DWORD *)v32 = 136446466;
    v33 = v52;
    sub_10022A15C((uint64_t)v14, v52);
    v34 = v53;
    v36 = String.init<A>(describing:)(v33, v53, v35);
    v38 = v37;
    v55 = sub_100172BEC(v36, v37, &v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56, v32 + 4, v32 + 12);
    v39 = v38;
    v40 = v54;
    swift_bridgeObjectRelease(v39);
    sub_100007FF0((uint64_t)v14, &qword_100316AD8);
    *(_WORD *)(v32 + 12) = 2082;
    sub_10022A15C(v22, v33);
    v42 = String.init<A>(describing:)(v33, v34, v41);
    v44 = v43;
    v55 = sub_100172BEC(v42, v43, &v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56, v32 + 14, v32 + 22);
    swift_release_n(v40, 2);
    swift_bridgeObjectRelease(v44);
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "bannerMode did change from %{public}s to %{public}s", (uint8_t *)v32, 0x16u);
    v45 = v51;
    swift_arrayDestroy(v51, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v45, -1, -1);
    swift_slowDealloc(v32, -1, -1);

  }
  else
  {
    sub_100007FF0((uint64_t)v14, &qword_100316AD8);

    swift_release_n(v27, 2);
  }
  v46 = sub_100003DB8(&qword_10032B0E0);
  v47 = sub_100016B20();
  return Subject<>.send()(v46, v47);
}

uint64_t sub_10022A15C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100003DB8(&qword_100316AD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10022A1A4(_QWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  int v19;

  v5 = *(_QWORD *)(*(_QWORD *)(v4 + 264) + 104);
  if (!*(_QWORD *)(v5 + 16))
    return 0;
  swift_bridgeObjectRetain(a3);
  v10 = sub_10017D3B0(a2, a3);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease(a3);
    return 0;
  }
  v12 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v10);
  swift_retain(v12);
  swift_bridgeObjectRelease(a3);
  v13 = a1[9];
  swift_bridgeObjectRetain(v13);
  v14 = sub_100100E5C(v12, v13);
  swift_bridgeObjectRelease(v13);
  if ((v14 & 1) == 0 || (v15 = *a1, !*(_QWORD *)(*a1 + 16)))
  {
    swift_release(v12);
    return 0;
  }
  swift_retain(v12);
  v17 = sub_10017D414(v16);
  if ((v18 & 1) == 0)
  {
    swift_release_n(v12);
    return 0;
  }
  v19 = *(unsigned __int8 *)(*(_QWORD *)(v15 + 56) + 16 * v17);
  swift_release(v12);
  if (a4)
  {
    swift_release(v12);
    if (a4 == 1)
      return v19 != 3;
    else
      return v19 == 3;
  }
  else
  {
    swift_release(v12);
    return 1;
  }
}

uint64_t sub_10022A2DC(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unsigned __int8 *v10;
  uint64_t v11;

  v4 = a1[9];
  swift_bridgeObjectRetain(v4);
  v5 = sub_100100E5C(a2, v4);
  swift_bridgeObjectRelease(v4);
  if ((v5 & 1) != 0)
  {
    v6 = *a1;
    if (*(_QWORD *)(*a1 + 16))
    {
      swift_retain(a2);
      v8 = sub_10017D414(v7);
      if ((v9 & 1) != 0)
      {
        v10 = (unsigned __int8 *)(*(_QWORD *)(v6 + 56) + 16 * v8);
        v11 = *v10;
        swift_retain(*((_QWORD *)v10 + 1));
        swift_release(a2);
        __asm { BR              X9 }
      }
      swift_release(a2);
    }
  }
  return 0;
}

float32x2_t ConnectionAssistantRendererProjection.Circle.boundingBox.getter(float32x2_t a1, int32x2_t a2)
{
  return vsub_f32(a1, (float32x2_t)vdup_lane_s32(a2, 0));
}

uint64_t ConnectionAssistantRendererProjection.Ellipse.init(at:radius:camera:)@<X0>(float32x4_t *a1@<X0>, uint64_t a2@<X8>, float32x4_t a3@<Q0>, double a4@<D1>)
{
  float32x2_t v6[5];

  sub_10022A9EC(a1, v6, a3, a4);
  return sub_10022AC04((uint64_t)v6, a2);
}

double ConnectionAssistantRendererProjection.Ellipse.rendererEllipse.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

float32x2_t ConnectionAssistantRendererProjection.Ellipse.boundingBox.getter()
{
  float32x2_t *v0;

  return vsub_f32(*v0, vsqrt_f32(vadd_f32(vmul_f32(v0[1], v0[1]), vmul_f32(v0[2], v0[2]))));
}

double ConnectionAssistantRendererProjection.Triangle.boundingBox.getter(float32x4_t a1, int8x16_t a2, float32x4_t a3)
{
  float32x4_t v3;
  float32x4_t v4;
  int8x16_t v5;
  int16x4_t v6;
  int8x16_t v7;
  int16x4_t v8;
  double result;

  v3.i64[0] = a1.i64[0];
  v3.i64[1] = a1.i64[0];
  v4.i64[0] = a2.i64[0];
  v4.i64[1] = a1.i64[0];
  a1.i64[1] = a2.i64[0];
  a2.i64[1] = a2.i64[0];
  v5.i64[0] = a3.i64[0];
  v5.i64[1] = a3.i64[0];
  v6.i32[0] = vmovn_s32(vcgtq_f32(a1, v4)).u32[0];
  v6.i32[1] = vmovn_s32(vcgeq_f32(a1, v4)).i32[1];
  v7 = vbslq_s8((int8x16_t)vmovl_s16(v6), a2, (int8x16_t)v3);
  v3.i64[0] = v7.i64[0];
  v3.i64[1] = a3.i64[0];
  a3.i64[1] = vextq_s8(v7, v7, 8uLL).u64[0];
  v8.i32[0] = vmovn_s32(vcgtq_f32(v3, a3)).u32[0];
  v8.i32[1] = vmovn_s32(vcgeq_f32(v3, a3)).i32[1];
  *(_QWORD *)&result = vbslq_s8((int8x16_t)vmovl_s16(v8), v5, v7).u64[0];
  return result;
}

uint64_t ConnectionAssistantRendererProjection.Ellipse.init(at:normal:radius:camera:)@<X0>(int32x4_t *a1@<X0>, uint64_t a2@<X8>, __n128 a3@<Q0>, __n128 a4@<Q1>, float a5@<S2>)
{
  float32x2_t v7[5];

  sub_10022AC4C(a1, v7, a3, a4, a5);
  return sub_10022AC04((uint64_t)v7, a2);
}

uint64_t ConnectionAssistantRendererProjection.Ellipse.tangents(from:)(float32x2_t a1)
{
  float32x2_t *v1;
  float cosval;
  float v4;
  __float2 v5;
  float32x2_t v6;
  float32x2_t v7;
  float32x2_t v8;
  float32x2_t v9;
  float32x2_t v10;
  float32x2_t v11;
  float32x2_t v12;
  float v13;
  float v15;
  float v16;
  float v17;
  float v18;
  __float2 v19;
  float32x2_t v20;
  float32x2_t v21;
  float32x2_t v22;
  float32x2_t v23;
  float v24;
  float v25;

  v5 = __sincosf_stret(v1[4].f32[0]);
  cosval = v5.__cosval;
  LODWORD(v4) = *(_QWORD *)&v5;
  v6 = *v1;
  v7 = v1[3];
  v8 = vsub_f32(a1, *v1);
  v9 = vmul_n_f32(v8, cosval);
  v10 = vmul_n_f32((float32x2_t)vrev64_s32((int32x2_t)v8), v4);
  v11.i32[0] = vadd_f32(v9, v10).u32[0];
  v11.i32[1] = vsub_f32(v9, v10).i32[1];
  v12 = vdiv_f32(v11, v7);
  v13 = sqrtf(vaddv_f32(vmul_f32(v12, v12)));
  if ((float)(v13 * v13) < 1.0)
    return 0;
  v24 = v4;
  v25 = cosval;
  v15 = atan2f(v12.f32[1], v12.f32[0]);
  v16 = -v15;
  v17 = asinf(1.0 / v13);
  v18 = v17 - v15;
  v19 = __sincosf_stret(v16 - v17);
  __sincosf_stret(v18);
  v20 = vmul_f32(v7, (float32x2_t)__PAIR64__(-v19.__cosval, LODWORD(v19.__sinval)));
  v21 = vmul_n_f32((float32x2_t)vrev64_s32((int32x2_t)v20), v24);
  v22 = vmul_n_f32(v20, v25);
  v23.i32[0] = vsub_f32(v22, v21).u32[0];
  v23.i32[1] = vadd_f32(v22, v21).i32[1];
  return (uint64_t)vadd_f32(v6, v23);
}

double ConnectionAssistantRendererProjection.Triangle.top.getter(double a1, double a2)
{
  return a2;
}

double ConnectionAssistantRendererProjection.Ellipse.axes.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

float32x2_t ConnectionAssistantRendererProjection.Ellipse.init(center:radii:angle:)@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, float a4@<S2>)
{
  __float2 v7;
  __float2 v8;
  float32x2_t result;

  v7 = __sincosf_stret(a4);
  v8 = __sincosf_stret(a4 + 1.5708);
  result = vmul_lane_f32((float32x2_t)__PAIR64__(LODWORD(v8.__sinval), LODWORD(v8.__cosval)), *(float32x2_t *)&a3, 1);
  *(double *)a1 = a2;
  *(float32x2_t *)(a1 + 8) = vmul_n_f32((float32x2_t)__PAIR64__(LODWORD(v7.__sinval), LODWORD(v7.__cosval)), *(float *)&a3);
  *(float32x2_t *)(a1 + 16) = result;
  *(double *)(a1 + 24) = a3;
  *(float *)(a1 + 32) = a4;
  return result;
}

void ConnectionAssistantRendererProjection.Ellipse.init(center:axes:)(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, float32x2_t a4@<D2>)
{
  int32x2_t v7;
  int32x2_t v8;
  float32x2_t v9;
  float v10;

  v7 = (int32x2_t)vmul_f32(*(float32x2_t *)&a3, *(float32x2_t *)&a3);
  v8 = (int32x2_t)vmul_f32(a4, a4);
  v9 = vsqrt_f32(vadd_f32((float32x2_t)vzip1_s32(v7, v8), (float32x2_t)vzip2_s32(v7, v8)));
  v10 = atan2f(*((float *)&a3 + 1), *(float *)&a3);
  *(double *)a1 = a2;
  *(double *)(a1 + 8) = a3;
  *(double *)(a1 + 16) = *(double *)&a4;
  *(float32x2_t *)(a1 + 24) = v9;
  *(float *)(a1 + 32) = v10;
}

void ConnectionAssistantRendererProjection.Ellipse.init(center:conjugateAxes:)(uint64_t a1@<X8>, double a2@<D0>, int32x2_t a3@<D1>, float32x2_t a4@<D2>)
{
  float32x2_t v6;
  float32x2_t v7;
  float32x2_t v8;
  float v9;
  float32x2_t v10;
  float32x2_t v11;
  float32x2_t v12;
  float32x2_t v13;
  float32x2_t v14;
  float32x2_t v15;
  float32x2_t v16;
  float32x2_t v17;
  float32x2_t v18;
  float32x2_t v19;
  float32x2_t v20;
  float32x2_t v21;
  float32x2_t v22;
  float32x2_t v23;
  float32x2_t v24;
  float32x2_t v25;
  float32x2_t v26;
  float32x2_t v27;
  float32x2_t v28;
  float32x2_t v29;
  int32x2_t v30;
  int32x2_t v31;
  float32x2_t v32;
  float v33;
  float32x2_t v34;

  v6 = (float32x2_t)vrev64_s32(a3);
  v7.i32[0] = vsub_f32(a4, v6).u32[0];
  v7.i32[1] = vadd_f32(v6, a4).i32[1];
  v8 = vmul_f32(v7, (float32x2_t)0x3F0000003F000000);
  v9 = sqrtf(vaddv_f32(vmul_f32(v8, v8)));
  v6.f32[0] = -*(float *)&a3.i32[1];
  v10 = vsub_f32(v6, v8);
  v11 = vmul_f32(v10, v10);
  v11.i32[0] = vadd_f32(v11, (float32x2_t)vdup_lane_s32((int32x2_t)v11, 1)).u32[0];
  v12 = vrsqrte_f32((float32x2_t)v11.u32[0]);
  v13 = vmul_f32(v12, vrsqrts_f32((float32x2_t)v11.u32[0], vmul_f32(v12, v12)));
  v14 = vadd_f32(v8, vmul_n_f32(vmul_n_f32(v10, vmul_f32(v13, vrsqrts_f32((float32x2_t)v11.u32[0], vmul_f32(v13, v13))).f32[0]), v9));
  v15 = vsub_f32(a4, v8);
  v16 = vmul_f32(v15, v15);
  v16.i32[0] = vadd_f32(v16, (float32x2_t)vdup_lane_s32((int32x2_t)v16, 1)).u32[0];
  v17 = vrsqrte_f32((float32x2_t)v16.u32[0]);
  v18 = vmul_f32(v17, vrsqrts_f32((float32x2_t)v16.u32[0], vmul_f32(v17, v17)));
  v19 = vadd_f32(v8, vmul_n_f32(vmul_n_f32(v15, vmul_f32(v18, vrsqrts_f32((float32x2_t)v16.u32[0], vmul_f32(v18, v18))).f32[0]), v9));
  v20 = vsub_f32(a4, v14);
  v21 = vsub_f32(a4, v19);
  v22 = vmul_f32(v14, v14);
  v22.i32[0] = vadd_f32(v22, (float32x2_t)vdup_lane_s32((int32x2_t)v22, 1)).u32[0];
  v23 = vrsqrte_f32((float32x2_t)v22.u32[0]);
  v24 = vmul_f32(v23, vrsqrts_f32((float32x2_t)v22.u32[0], vmul_f32(v23, v23)));
  v25 = vmul_n_f32(vmul_n_f32(v14, vmul_f32(v24, vrsqrts_f32((float32x2_t)v22.u32[0], vmul_f32(v24, v24))).f32[0]), sqrtf(vaddv_f32(vmul_f32(v21, v21))));
  v26 = vmul_f32(v19, v19);
  v26.i32[0] = vadd_f32(v26, (float32x2_t)vdup_lane_s32((int32x2_t)v26, 1)).u32[0];
  v27 = vrsqrte_f32((float32x2_t)v26.u32[0]);
  v28 = vmul_f32(v27, vrsqrts_f32((float32x2_t)v26.u32[0], vmul_f32(v27, v27)));
  v29 = vmul_n_f32(vmul_n_f32(v19, vmul_f32(v28, vrsqrts_f32((float32x2_t)v26.u32[0], vmul_f32(v28, v28))).f32[0]), sqrtf(vaddv_f32(vmul_f32(v20, v20))));
  v34 = v25;
  v30 = (int32x2_t)vmul_f32(v25, v25);
  v31 = (int32x2_t)vmul_f32(v29, v29);
  v32 = vsqrt_f32(vadd_f32((float32x2_t)vzip1_s32(v30, v31), (float32x2_t)vzip2_s32(v30, v31)));
  v33 = atan2f(v25.f32[1], v25.f32[0]);
  *(double *)a1 = a2;
  *(float32x2_t *)(a1 + 8) = v34;
  *(float32x2_t *)(a1 + 16) = v29;
  *(float32x2_t *)(a1 + 24) = v32;
  *(float *)(a1 + 32) = v33;
}

float32x2_t sub_10022A954(float32x2_t a1, float32x2_t a2, float32x2_t a3, float32x2_t a4)
{
  float32x2_t v4;
  float32x2_t result;
  float v6;
  float32x2_t v7;
  float32x2_t v8;
  float32x2_t v9;
  float32x4_t v10;
  uint16x4_t v11;

  v4 = vsub_f32(a4, a3);
  result = vsub_f32(a1, a2);
  v6 = vmul_lane_f32(v4, result, 1).f32[0] - vmuls_lane_f32(result.f32[0], v4, 1);
  if (v6 != 0.0)
  {
    v7 = vsub_f32(a2, a3);
    v8 = (float32x2_t)vdup_lane_s32((int32x2_t)result, 0);
    v8.i32[0] = v4.i32[0];
    v9 = vmul_n_f32(vsub_f32(vmul_n_f32((float32x2_t)__PAIR64__(result.u32[1], v4.u32[1]), v7.f32[0]), vmul_lane_f32(v8, v7, 1)), 1.0 / v6);
    *(float32x2_t *)v10.f32 = v9;
    *(float32x2_t *)&v10.u32[2] = v9;
    v11.i32[0] = vmovn_s32(vcgtq_f32(v10, (float32x4_t)xmmword_10025FA30)).u32[0];
    v11.i32[1] = vmovn_s32(vcgtq_f32((float32x4_t)xmmword_10025FA30, v10)).i32[1];
    if ((vmaxv_u16(v11) & 1) == 0)
      return vadd_f32(vmul_n_f32(result, v9.f32[0]), a2);
  }
  return result;
}

void sub_10022A9EC(float32x4_t *a1@<X0>, float32x2_t *a2@<X8>, float32x4_t a3@<Q0>, double a4@<D1>)
{
  unsigned __int32 v6;
  unsigned __int32 v7;
  float v8;
  BOOL v9;
  BOOL v10;
  float32x2_t v11;
  BOOL v12;
  char v13;
  float32x2_t v14;
  float32x2_t v15;
  float32x2_t v16;
  float v17;
  float32x4_t v18;
  float v19;
  float v20;
  float v21;
  float32x2_t v22;
  float32x2_t v23;
  float32x2_t v24;
  float32_t v25;
  float v26;
  float32x2_t v27;
  float32x2_t v28;
  float32x2_t v29;
  float32x2_t v30;
  int32x2_t v31;
  int32x2_t v32;
  float32x2_t v33;
  float32x2_t v34;

  v6 = ~a3.i32[0] & 0x7F800000;
  v7 = a3.i32[0] & 0x7FFFFF;
  v8 = 0.0;
  if (v6)
    v9 = 1;
  else
    v9 = v7 == 0;
  if (v9 && ((~a3.i32[1] & 0x7F800000) == 0 ? (v10 = (a3.i32[1] & 0x7FFFFF) == 0) : (v10 = 1), v10))
  {
    v11 = 0;
    v12 = (a3.i32[2] & 0x7FFFFF) != 0 && (~a3.i32[2] & 0x7F800000) == 0;
    v13 = 1;
    if (v12)
    {
      v14 = 0;
      v15 = 0;
      v16 = 0;
    }
    else
    {
      v14 = 0;
      v15 = 0;
      v16 = 0;
      if (*(float *)&a4 > 0.0)
      {
        v17 = a1[2].f32[0];
        v18 = vaddq_f32(a1[15], vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a1[12], a3.f32[0]), a1[13], *(float32x2_t *)a3.f32, 1), a1[14], a3, 2));
        v19 = *(float *)&a4 * *(float *)&a4;
        v20 = vmuls_lane_f32(v18.f32[2], v18, 2);
        v21 = v20 + (float)(vmulq_f32(v18, v18).f32[0] + vmuls_lane_f32(v18.f32[1], *(float32x2_t *)v18.f32, 1));
        if (vabds_f32(v20, v21) >= 0.00000011921)
        {
          v25 = (float)(v17 * v18.f32[1]) * *(float *)&a4;
          v26 = (float)(v19 - v20) * (float)((float)(v19 - v20) * (float)(v21 - v20));
          v27 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v18.f32, 0);
          v27.f32[0] = -v18.f32[1];
          v28 = vmul_n_f32(vmul_n_f32(v27, v17), *(float *)&a4);
          v29.i32[0] = vdup_lane_s32((int32x2_t)v28, 1).u32[0];
          v29.f32[1] = v25;
          v33 = vmul_n_f32(v29, sqrtf((float)-(float)(v19 - v21) / v26));
          v34 = vmul_n_f32(v28, sqrtf((float)-(float)(v19 - v20) / v26));
          v28.f32[0] = v20 - v19;
          v30 = vdiv_f32(vmul_n_f32(*(float32x2_t *)v18.f32, v17 * v18.f32[2]), (float32x2_t)vdup_lane_s32((int32x2_t)v28, 0));
          v31 = (int32x2_t)vmul_f32(v33, v33);
          v32 = (int32x2_t)vmul_f32(v34, v34);
          v23 = vsqrt_f32(vadd_f32((float32x2_t)vzip1_s32(v31, v32), (float32x2_t)vzip2_s32(v31, v32)));
          v8 = atan2f(v33.f32[1], v33.f32[0]);
          v22 = v33;
          v24 = v34;
          v11 = v30;
        }
        else
        {
          v11 = 0;
          *(float *)&a4 = (float)-(float)(v17 * *(float *)&a4) * sqrtf(-1.0 / (float)(v19 - v20));
          v22.i32[0] = LODWORD(a4);
          v8 = 0.0;
          v22.f32[1] = *(float *)&a4 * 0.0;
          v23 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)&a4, 0);
          v24.f32[0] = *(float *)&a4 * 0.000000075498;
          v24.i32[1] = LODWORD(a4);
        }
        v13 = 0;
        v14 = v22;
        v15 = v24;
        v16 = v23;
      }
    }
  }
  else
  {
    v11 = 0;
    v14 = 0;
    v15 = 0;
    v16 = 0;
    v13 = 1;
  }
  *a2 = v11;
  a2[1] = v14;
  a2[2] = v15;
  a2[3] = v16;
  a2[4].f32[0] = v8;
  a2[4].i8[4] = v13;
}

uint64_t sub_10022AC04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100003DB8(&qword_10031EBF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10022AC4C(int32x4_t *a1@<X0>, float32x2_t *a2@<X8>, __n128 a3@<Q0>, __n128 a4@<Q1>, float a5@<S2>)
{
  float v6;
  float v10;
  float32x2_t v11;
  float32x2_t v12;
  float32x2_t v13;
  float32x2_t v14;
  char v15;
  char v16;
  float32x4_t v17;
  float32x4_t v18;
  float32x4_t v19;
  int32x4_t v20;
  float32x4_t v21;
  float32x4_t v22;
  float32x4_t v23;
  float32x4_t v24;
  int32x4_t v25;
  float32x4_t v26;
  float32x2_t v27;
  float32x2_t v28;
  char v29;
  char v30;
  float32x2_t v31;
  float32x2_t v32;
  char v33;
  char v34;
  float32x2_t v35;
  float32x2_t v36;
  char v37;
  char v38;
  float32x2_t v39;
  char v40;
  float32x2_t v41;
  float32x2_t v42;
  char v43;
  float32x2_t v44;
  int32x2_t v45;
  int32x2_t v46;
  float32x2_t v47;
  float32x4_t v49;
  float32x2_t v50;
  float32x4_t v51;
  float32x2_t v52;
  float32x4_t v54;

  v6 = 0.0;
  if ((~a3.n128_u32[0] & 0x7F800000) == 0 && (a3.n128_u32[0] & 0x7FFFFF) != 0)
    goto LABEL_13;
  if ((~a3.n128_u32[1] & 0x7F800000) == 0 && (a3.n128_u32[1] & 0x7FFFFF) != 0)
    goto LABEL_13;
  v10 = a3.n128_f32[2];
  if ((~a3.n128_u32[2] & 0x7F800000) == 0 && (a3.n128_u32[2] & 0x7FFFFF) != 0)
    goto LABEL_13;
  v50 = (float32x2_t)a3.n128_u64[0];
  v16 = sub_10021674C(a4);
  v11 = 0;
  v15 = 1;
  if ((v16 & 1) != 0 || a5 <= 0.0)
  {
    v12 = 0;
    v13 = 0;
    v14 = 0;
    goto LABEL_14;
  }
  v17 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)a4, (int32x4_t)a4), (int8x16_t)a4, 0xCuLL);
  v18 = vnegq_f32((float32x4_t)a4);
  v19 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(a1[5], a1[5]), (int8x16_t)a1[5], 0xCuLL), v18), (float32x4_t)a1[5], v17);
  v20 = (int32x4_t)vmulq_f32(v19, v19);
  v20.i32[0] = vadd_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)v20.i8, 1), vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v20, 2), *(float32x2_t *)v20.i8)).u32[0];
  v21 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v19, (int32x4_t)v19), (int8x16_t)v19, 0xCuLL);
  *(float32x2_t *)v19.f32 = vrsqrte_f32((float32x2_t)v20.u32[0]);
  *(float32x2_t *)v19.f32 = vmul_f32(*(float32x2_t *)v19.f32, vrsqrts_f32((float32x2_t)v20.u32[0], vmul_f32(*(float32x2_t *)v19.f32, *(float32x2_t *)v19.f32)));
  v22 = vmulq_n_f32(v21, vmul_f32(*(float32x2_t *)v19.f32, vrsqrts_f32((float32x2_t)v20.u32[0], vmul_f32(*(float32x2_t *)v19.f32, *(float32x2_t *)v19.f32))).f32[0]);
  v23 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v22, (int32x4_t)v22), (int8x16_t)v22, 0xCuLL), v18), v22, v17);
  v24 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v23, (int32x4_t)v23), (int8x16_t)v23, 0xCuLL);
  v25 = (int32x4_t)vmulq_f32(v23, v23);
  v25.i32[0] = vadd_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)v25.i8, 1), vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v25, 2), *(float32x2_t *)v25.i8)).u32[0];
  *(float32x2_t *)v18.f32 = vrsqrte_f32((float32x2_t)v25.u32[0]);
  *(float32x2_t *)v18.f32 = vmul_f32(*(float32x2_t *)v18.f32, vrsqrts_f32((float32x2_t)v25.u32[0], vmul_f32(*(float32x2_t *)v18.f32, *(float32x2_t *)v18.f32)));
  v26 = vmulq_n_f32(v24, vmul_f32(*(float32x2_t *)v18.f32, vrsqrts_f32((float32x2_t)v25.u32[0], vmul_f32(*(float32x2_t *)v18.f32, *(float32x2_t *)v18.f32))).f32[0]);
  *(float *)v25.i32 = vmuls_lane_f32(a5, v22, 2);
  *(float32x2_t *)v20.i8 = vmul_n_f32(*(float32x2_t *)v22.f32, a5);
  *(float32x2_t *)v22.f32 = vadd_f32(v50, *(float32x2_t *)v20.i8);
  v22.f32[2] = v10 + *(float *)v25.i32;
  v22.i32[3] = 0;
  *(float32x2_t *)v18.f32 = vsub_f32(v50, *(float32x2_t *)v20.i8);
  v18.f32[2] = v10 - *(float *)v25.i32;
  v18.i32[3] = 0;
  v49 = v18;
  *(float *)v25.i32 = vmuls_lane_f32(a5, v26, 2);
  *(float32x2_t *)v26.f32 = vmul_n_f32(*(float32x2_t *)v26.f32, a5);
  *(float32x2_t *)v20.i8 = vsub_f32(v50, *(float32x2_t *)v26.f32);
  *(float *)&v20.i32[2] = v10 - *(float *)v25.i32;
  v20.i32[3] = 0;
  *(float32x2_t *)v18.f32 = vadd_f32(v50, *(float32x2_t *)v26.f32);
  v18.f32[2] = v10 + *(float *)v25.i32;
  v18.i32[3] = 0;
  v51 = v18;
  v54 = (float32x4_t)v20;
  ConnectionAssistantCamera.projectUV(point:)(v22);
  v28 = v27;
  v30 = v29;
  ConnectionAssistantCamera.projectUV(point:)(v49);
  v32 = v31;
  v34 = v33;
  ConnectionAssistantCamera.projectUV(point:)(v54);
  v36 = v35;
  v38 = v37;
  ConnectionAssistantCamera.projectUV(point:)(v51);
  if ((v30 & 1) != 0
    || (v34 & 1) != 0
    || (v38 & 1) != 0
    || (v40 & 1) != 0
    || (v41 = v39, sub_10022A954(v28, v32, v36, v39), (v43 & 1) != 0))
  {
LABEL_13:
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v15 = 1;
  }
  else
  {
    v11 = v42;
    v44 = vmul_f32(vsub_f32(v41, v36), (float32x2_t)0x3F0000003F000000);
    v52 = vmul_f32(vsub_f32(v32, v28), (float32x2_t)0x3F0000003F000000);
    v45 = (int32x2_t)vmul_f32(v52, v52);
    v46 = (int32x2_t)vmul_f32(v44, v44);
    v47 = vsqrt_f32(vadd_f32((float32x2_t)vzip1_s32(v45, v46), (float32x2_t)vzip2_s32(v45, v46)));
    v6 = atan2f(v52.f32[1], v52.f32[0]);
    v15 = 0;
    v12 = v52;
    v13 = v44;
    v14 = v47;
  }
LABEL_14:
  *a2 = v11;
  a2[1] = v12;
  a2[2] = v13;
  a2[3] = v14;
  a2[4].f32[0] = v6;
  a2[4].i8[4] = v15;
}

ValueMetadata *type metadata accessor for ConnectionAssistantRendererProjection()
{
  return &type metadata for ConnectionAssistantRendererProjection;
}

ValueMetadata *type metadata accessor for ConnectionAssistantRendererProjection.Circle()
{
  return &type metadata for ConnectionAssistantRendererProjection.Circle;
}

ValueMetadata *type metadata accessor for ConnectionAssistantRendererProjection.Triangle()
{
  return &type metadata for ConnectionAssistantRendererProjection.Triangle;
}

__n128 initializeWithCopy for ConnectionAssistantRendererProjection.Ellipse(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for ConnectionAssistantRendererProjection.Ellipse(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 36))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ConnectionAssistantRendererProjection.Ellipse(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 36) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAssistantRendererProjection.Ellipse()
{
  return &type metadata for ConnectionAssistantRendererProjection.Ellipse;
}

uint64_t sub_10022B000(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 1701667182;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x746E65726170;
    else
      v4 = 0x616E6964726F6F63;
    if (v3 == 1)
      v5 = 0xE600000000000000;
    else
      v5 = 0xEB00000000736574;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v2 = 0x746E65726170;
      else
        v2 = 0x616E6964726F6F63;
      if (v6 == 1)
        v7 = 0xE600000000000000;
      else
        v7 = 0xEB00000000736574;
      if (v4 != v2)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v5 = 0xE400000000000000;
    v4 = 1701667182;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE400000000000000;
  if (v4 != 1701667182)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2, v7, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v7)
    goto LABEL_21;
  v8 = 1;
  v7 = v5;
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

uint64_t sub_10022B110(char a1, unsigned __int8 a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  char v7;

  v2 = 0x676E69646E6573;
  if (a1)
  {
    if (a1 == 1)
      v3 = 1953391987;
    else
      v3 = 1701736302;
    v4 = 0xE400000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_6:
      if (v5 == 1)
        v2 = 1953391987;
      else
        v2 = 1701736302;
      v6 = 0xE400000000000000;
      if (v3 != v2)
        goto LABEL_15;
      goto LABEL_13;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x676E69646E6573;
    v5 = a2;
    if (a2)
      goto LABEL_6;
  }
  v6 = 0xE700000000000000;
  if (v3 != 0x676E69646E6573)
  {
LABEL_15:
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v2, v6, 0);
    goto LABEL_16;
  }
LABEL_13:
  if (v4 != v6)
    goto LABEL_15;
  v7 = 1;
  v6 = v4;
LABEL_16:
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_10022B208(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6564697364616F52;
  else
    v3 = 0x636E656772656D45;
  if (v2)
    v4 = 0xE900000000000079;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6564697364616F52;
  else
    v5 = 0x636E656772656D45;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE900000000000079;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

void sub_10022B2B0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_10022B2F0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10022B350 + 4 * byte_10025FA94[a2]))(1954047316);
}

uint64_t sub_10022B350(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 1954047316 && v1 == v2)
  {
    v3 = 1;
    v2 = v1;
  }
  else
  {
    v3 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 1954047316, v2, 0);
  }
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v2);
  return v3 & 1;
}

void sub_10022B3F4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_10022B434(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10022B494 + 4 * byte_10025FA9C[a2]))(1954047348);
}

uint64_t sub_10022B494(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 1954047348 && v1 == v2)
  {
    v3 = 1;
    v2 = v1;
  }
  else
  {
    v3 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 1954047348, v2, 0);
  }
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v2);
  return v3 & 1;
}

uint64_t sub_10022B538(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000012;
  else
    v3 = 0xD000000000000011;
  if (v2)
    v4 = 0x8000000100260530;
  else
    v4 = 0x8000000100260550;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000012;
  else
    v5 = 0xD000000000000011;
  if ((a2 & 1) != 0)
    v6 = 0x8000000100260550;
  else
    v6 = 0x8000000100260530;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_10022B5DC(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x73676E6974746553;
  else
    v3 = 0x436C6F72746E6F43;
  if (v2)
    v4 = 0xED00007265746E65;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x73676E6974746553;
  else
    v5 = 0x436C6F72746E6F43;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xED00007265746E65;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_10022B68C(char a1, char a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x80000001002605B0;
  else
    v2 = 0x8000000100260590;
  if ((a2 & 1) != 0)
    v3 = 0x80000001002605B0;
  else
    v3 = 0x8000000100260590;
  if (v2 == v3)
  {
    v4 = 1;
    v3 = v2;
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013, v2, 0xD000000000000013, v3, 0);
  }
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  return v4 & 1;
}

void sub_10022B728(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_10022B78C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10022B824 + 4 * byte_10025FAA7[a2]))(0x5F544F4E5F544153);
}

uint64_t sub_10022B824(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x5F544F4E5F544153 && v1 == 0xEC000000434E5953)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x5F544F4E5F544153, 0xEC000000434E5953, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xEC000000434E5953);
  return v2 & 1;
}

double sub_10022B904()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double result;
  _BYTE v25[40];
  _BYTE v26[40];

  v1 = v0;
  v0[7] = 0;
  swift_unknownObjectWeakAssign(v0 + 6, 0);
  sub_10000BD10();
  v2 = v0[25];
  v3 = v0[26];
  v4 = v0[27];
  v5 = v1[28];
  v6 = v1[29];
  v7 = v1[30];
  v8 = v1[31];
  v9 = v1[32];
  *(_OWORD *)(v1 + 25) = xmmword_10024E030;
  *(_OWORD *)(v1 + 27) = xmmword_10024E030;
  *(_OWORD *)(v1 + 29) = xmmword_10024E030;
  v1[31] = 0;
  v1[32] = 0;
  sub_10006491C(v2, v3);
  sub_10006491C(v4, v5);
  sub_100064A24(v6, v7, v8, v9);
  v10 = *((unsigned __int8 *)v1 + 129);
  if ((_DWORD)v10 == 1)
  {
    v11 = sub_100003DB8(&qword_10032B0E0);
    v12 = sub_1000084FC((unint64_t *)&qword_100317750, &qword_10032B0E0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
    Subject<>.send()(v11, v12);
  }
  *((_BYTE *)v1 + 129) = 0;
  sub_10022E79C(v10);
  v13 = v1[17];
  v14 = v1[18];
  v15 = (_QWORD *)v1[19];
  if (v15 == (_QWORD *)1)
  {
    v16 = 1;
    v17 = v1[18];
    v18 = v1[17];
  }
  else
  {
    sub_100232CD0(v1[17], v1[18], v1[19]);
    sub_10000D71C(v13, v14);
    swift_bridgeObjectRetain(v15);
    sub_100232BB4(v13, v14, (uint64_t)v15);
    sub_100232BB4(0, 0, 1);
    v19 = sub_100003DB8(&qword_10032B0E0);
    v20 = sub_1000084FC((unint64_t *)&qword_100317750, &qword_10032B0E0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
    Subject<>.send()(v19, v20);
    v18 = v1[17];
    v17 = v1[18];
    v16 = v1[19];
  }
  v1[17] = 0;
  v1[18] = 0;
  v1[19] = 1;
  sub_100232BB4(v18, v17, v16);
  sub_10022E9D4(v13, v14, v15);
  sub_100232BB4(v13, v14, (uint64_t)v15);
  *((_BYTE *)v1 + 176) = 2;
  sub_10000B458((uint64_t)(v1 + 12), (uint64_t)v25, &qword_10032A9C8);
  sub_10000B458((uint64_t)v25, (uint64_t)v26, &qword_10032A9C8);
  if (v26[32] != 3)
  {
    v21 = sub_100003DB8(&qword_10032B0E0);
    v22 = sub_1000084FC((unint64_t *)&qword_100317750, &qword_10032B0E0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
    Subject<>.send()(v21, v22);
  }
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_BYTE *)v1 + 128) = 3;
  sub_10022E250((uint64_t)v25);
  v23 = v1[34];
  v1[33] = 0;
  v1[34] = 0;
  *(_QWORD *)&result = swift_bridgeObjectRelease(v23).n128_u64[0];
  return result;
}

void sub_10022BB80(char a1)
{
  uint64_t v1;
  int v2;
  int v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = *(unsigned __int8 *)(v1 + 176);
  v4 = v2 == 2;
  v3 = v2 & 1;
  v4 = !v4 && v3 == (a1 & 1);
  if (!v4)
  {
    v5 = v1;
    if (qword_100315858 != -1)
      swift_once(&qword_100315858, sub_1000D96AC);
    v7 = type metadata accessor for Logger(0);
    sub_10000D744(v7, (uint64_t)qword_10033FDC0);
    v9 = swift_retain_n(v1, v8);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc(22, -1);
      v13 = swift_slowAlloc(64, -1);
      v27 = v13;
      *(_DWORD *)v12 = 136446466;
      LOBYTE(v26) = *(_BYTE *)(v5 + 176);
      v14 = sub_100003DB8((uint64_t *)&unk_1003263F0);
      v16 = String.init<A>(describing:)(&v26, v14, v15);
      v18 = v17;
      v26 = sub_100172BEC(v16, v17, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v12 + 4, v12 + 12);
      swift_release_n(v5);
      swift_bridgeObjectRelease(v18);
      *(_WORD *)(v12 + 12) = 2082;
      if ((a1 & 1) != 0)
        v19 = 1702195828;
      else
        v19 = 0x65736C6166;
      if ((a1 & 1) != 0)
        v20 = 0xE400000000000000;
      else
        v20 = 0xE500000000000000;
      v26 = sub_100172BEC(v19, v20, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v12 + 14, v12 + 22);
      swift_bridgeObjectRelease(v20);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Cached _linkConnected state changed from %{public}s to %{public}s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy(v13, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);

    }
    else
    {

      swift_release_n(v5);
    }
    *(_BYTE *)(v5 + 176) = a1 & 1;
    if ((a1 & 1) != 0)
    {
      v21 = *(_QWORD *)(v5 + 88);
      if (v21)
      {
        swift_retain(*(_QWORD *)(v5 + 88));
        v22 = sub_1000AD998();
        v24 = v23;
        swift_release(v21);
        if (v24)
        {
          v25 = *(_QWORD *)(v5 + 88);
          if (v25)
          {
            swift_retain(v25);
            sub_1000AA8A0(v22, v24);
            swift_release(v25);
          }
          swift_bridgeObjectRelease(v24);
        }
      }
    }
  }
}

void sub_10022BE1C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  __n128 v10;
  __n128 v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  __n128 v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v3 = v2;
  v6 = v2[21];
  if (v6)
  {
    if (a2)
    {
      v7 = v2[20];
      v8 = v7 == a1 && v6 == a2;
      if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)(v7, v6, a1, a2, 0) & 1) != 0)
        return;
    }
  }
  else if (!a2)
  {
    return;
  }
  if (qword_100315858 != -1)
    swift_once(&qword_100315858, sub_1000D96AC);
  v9 = type metadata accessor for Logger(0);
  sub_10000D744(v9, (uint64_t)qword_10033FDC0);
  swift_bridgeObjectRetain_n(a2, 2, v10);
  v12 = swift_retain_n(v2, v11);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc(22, -1);
    v16 = swift_slowAlloc(64, -1);
    v33 = v16;
    *(_DWORD *)v15 = 136446466;
    v17 = v3[21];
    v31 = v3[20];
    v32 = v17;
    swift_bridgeObjectRetain(v17);
    v18 = sub_100003DB8(&qword_100318260);
    v20 = String.init<A>(describing:)(&v31, v18, v19);
    v22 = v21;
    v31 = sub_100172BEC(v20, v21, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v15 + 4, v15 + 12);
    swift_release_n(v3);
    swift_bridgeObjectRelease(v22);
    *(_WORD *)(v15 + 12) = 2082;
    v31 = a1;
    v32 = a2;
    v23 = swift_bridgeObjectRetain(a2);
    v24 = String.init<A>(describing:)(&v31, v18, v23);
    v26 = v25;
    v31 = sub_100172BEC(v24, v25, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v15 + 14, v15 + 22);
    swift_bridgeObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease(v26);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "iso3166Alpha3CountryCode changed from %{public}s to %{public}s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy(v16, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v15, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
    swift_release_n(v3);
  }
  v27 = v3[21];
  v3[20] = a1;
  v3[21] = a2;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRelease(v27);
  if (v3[11])
  {
    sub_1000AD25C();
    if ((v28 & 1) == 0)
    {
      v29 = v3[20];
      v30 = v3[21];
      swift_bridgeObjectRetain(v30);
      sub_10022D764(v29, v30);
      swift_bridgeObjectRelease(v30);
    }
  }
}

void sub_10022C0DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  char v38;

  if (qword_100315858 != -1)
    swift_once(&qword_100315858, sub_1000D96AC);
  v3 = type metadata accessor for Logger(0);
  v4 = sub_10000D744(v3, (uint64_t)qword_10033FDC0);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v30 = v8;
    *(_DWORD *)v7 = 136446210;
    sub_10000B458(a1, (uint64_t)&v35, &qword_100322A58);
    v9 = sub_100003DB8(&qword_100322A58);
    v11 = String.init<A>(describing:)(&v35, v9, v10);
    v13 = v12;
    v35 = sub_100172BEC(v11, v12, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36, v7 + 4, v7 + 12);
    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "onConversationDidChange - %{public}s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);
  }

  v14 = sub_10000B458(a1, (uint64_t)&v30, &qword_100322A58);
  if (v32 == 2)
  {
    v35 = 0;
    v36 = 0;
    v37 = xmmword_10025CA70;
    v38 = 0;
LABEL_23:
    sub_10022D464((uint64_t)&v35, 1);
    return;
  }
  v15 = v31;
  if (v31 < 0)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, 2, 3451, 0);
    __break(1u);
  }
  else
  {
    v16 = v30;
    v17 = v33;
    v18 = v32 & 1;
    v19 = v34 & 1;
    v20 = *(unsigned __int8 *)(v1 + 128);
    if (v20 == 3
      || (v21 = *(_QWORD *)(v1 + 112),
          v29 = *(_QWORD *)(v1 + 120),
          v22 = *(_QWORD *)(v1 + 104),
          sub_10022B3F4(*(_BYTE *)(v1 + 96)),
          (v14 & 1) == 0))
    {
LABEL_20:
      v26 = Logger.logObject.getter(v14);
      v27 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v26, v27))
      {
        v28 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v28 = 0;
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "Updating emergency with the simulated request", v28, 2u);
        swift_slowDealloc(v28, -1, -1);
      }

      v35 = v16;
      v36 = v15;
      *(_QWORD *)&v37 = v18;
      *((_QWORD *)&v37 + 1) = v17;
      v38 = v19;
      goto LABEL_23;
    }
    if ((v21 & 1) != 0)
    {
      if (!v19)
        goto LABEL_20;
    }
    else if (v19 || v22 != v17)
    {
      goto LABEL_20;
    }
    if (v29 != v15 || v20 != 2 * (_DWORD)v18)
      goto LABEL_20;
    v23 = Logger.logObject.getter(v14);
    v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "onConversationDidChange - the same emergency request is tracked already", v25, 2u);
      swift_slowDealloc(v25, -1, -1);
    }

  }
}

void sub_10022C468(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (qword_100315858 != -1)
    swift_once(&qword_100315858, sub_1000D96AC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_10000D744(v2, (uint64_t)qword_10033FDC0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v15 = v7;
    *(_DWORD *)v6 = 136446210;
    sub_10000B458(a1, (uint64_t)&v13, &qword_10032A9C0);
    v8 = sub_100003DB8(&qword_10032A9C0);
    v10 = String.init<A>(describing:)(&v13, v8, v9);
    v12 = v11;
    v13 = sub_100172BEC(v10, v11, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v6 + 4, v6 + 12);
    swift_bridgeObjectRelease(v12);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "onEmergencyRequest - %{public}s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }

  sub_10022D464(a1, 0);
}

uint64_t sub_10022C618(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  char v4;
  _OWORD v6[2];
  char v7;
  __int128 v8;
  __int128 v9;
  char v10;

  v2 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v2;
  v7 = *(_BYTE *)(a1 + 32);
  v3 = a2[1];
  v8 = *a2;
  v9 = v3;
  v10 = *((_BYTE *)a2 + 32);
  sub_100232A08((uint64_t)v6);
  return v4 & 1;
}

_QWORD *sub_10022C660()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  id v24;
  id v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  Swift::String v30;
  __n128 v31;
  _QWORD *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  _QWORD *v40;
  void *v41;
  __n128 v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  _QWORD *v51;
  __n128 v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  _QWORD *v81;
  unint64_t v82;
  id v83;
  uint64_t v84;

  v1 = v0;
  v72 = *v0;
  v2 = sub_100003DB8(&qword_100329AF0);
  __chkstk_darwin(v2, v3);
  v73 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100003DB8(&qword_10032A9D8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  v9 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v78 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80, v10);
  v79 = (char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v77, v12);
  v14 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v15, v16);
  v18 = (char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100003DB8(&qword_10032B0E0);
  swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
  v20 = swift_retain(v0);
  v0[4] = PassthroughSubject.init()(v20);
  v21 = sub_100003DB8(&qword_100322CE0);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  v0[5] = PassthroughSubject.init()(v22);
  v0[7] = 0;
  swift_unknownObjectWeakInit(v0 + 6, 0);
  v23 = type metadata accessor for EEDSource(0);
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  v0[8] = sub_10000B688();
  v24 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v25 = objc_msgSend(v24, "bundleIdentifier");

  v75 = v6;
  v76 = v5;
  v74 = v9;
  if (v25)
  {
    v26 = (_QWORD *)static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v28 = v27;

  }
  else
  {
    v28 = 0x8000000100260990;
    v26 = (_QWORD *)0xD000000000000012;
  }
  v29 = sub_10000D75C();
  v81 = v26;
  v82 = v28;
  swift_bridgeObjectRetain(v28);
  v30._countAndFlagsBits = 0xD00000000000001DLL;
  v30._object = (void *)0x8000000100272670;
  String.append(_:)(v30);
  v31 = swift_bridgeObjectRelease(v28);
  v32 = v81;
  v33 = v82;
  static DispatchQoS.unspecified.getter(v31);
  v81 = _swiftEmptyArrayStorage;
  v34 = sub_1000052EC((unint64_t *)&unk_1003178B0, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v35 = sub_100003DB8((uint64_t *)&unk_100324AE0);
  v36 = sub_1000084FC((unint64_t *)&unk_1003178C0, (uint64_t *)&unk_100324AE0, (uint64_t)&protocol conformance descriptor for [A]);
  v37 = v35;
  v38 = v29;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v81, v37, v36, v77, v34);
  v39 = v79;
  (*(void (**)(char *, _QWORD, uint64_t))(v78 + 104))(v79, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v80);
  v1[9] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(v32, v33, v18, v14, v39, 0);
  *((_BYTE *)v1 + 80) = 2;
  *(_OWORD *)(v1 + 11) = 0u;
  *(_OWORD *)(v1 + 13) = 0u;
  v1[15] = 0;
  *((_WORD *)v1 + 64) = 3;
  v1[17] = 0;
  v1[18] = 0;
  v1[20] = 0;
  v1[21] = 0;
  v1[19] = 1;
  v40 = v1 + 23;
  *((_BYTE *)v1 + 176) = 2;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
  {
    v41 = &_swiftEmptySetSingleton;
    *v40 = &_swiftEmptySetSingleton;
    goto LABEL_6;
  }
  if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_100209204((uint64_t)_swiftEmptyArrayStorage);
    *v40 = v70;
  }
  else
  {
    v41 = &_swiftEmptySetSingleton;
    *v40 = &_swiftEmptySetSingleton;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
      goto LABEL_6;
  }
  if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
    sub_100209204((uint64_t)_swiftEmptyArrayStorage);
  else
    v41 = &_swiftEmptySetSingleton;
LABEL_6:
  *(_OWORD *)(v1 + 25) = xmmword_10024E030;
  v1[24] = v41;
  *(_OWORD *)(v1 + 27) = xmmword_10024E030;
  *(_OWORD *)(v1 + 29) = xmmword_10024E030;
  *(_OWORD *)(v1 + 31) = 0u;
  *(_OWORD *)(v1 + 33) = 0u;
  swift_release(v1);
  swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
  v1[2] = PassthroughSubject.init()(v42);
  swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
  v1[3] = PassthroughSubject.init()(v43);
  v44 = qword_100315820;
  swift_retain(v1);
  if (v44 != -1)
    swift_once(&qword_100315820, sub_1000D95E4);
  v45 = type metadata accessor for Logger(0);
  sub_10000D744(v45, (uint64_t)qword_10033FD18);
  v47 = swift_retain_n(v1, v46);
  v48 = Logger.logObject.getter(v47);
  v49 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v48, v49))
  {
    v50 = (uint8_t *)swift_slowAlloc(12, -1);
    v51 = (_QWORD *)swift_slowAlloc(32, -1);
    v81 = v51;
    *(_DWORD *)v50 = 136446210;
    v83 = v1;
    v52 = swift_retain(v1);
    v53 = String.init<A>(describing:)(&v83, v72, v52);
    v55 = v54;
    v83 = (id)sub_100172BEC(v53, v54, (uint64_t *)&v81);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, &v84, v50 + 4, v50 + 12);
    swift_release_n(v1);
    swift_bridgeObjectRelease(v55);
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "[%{public}s] init", v50, 0xCu);
    swift_arrayDestroy(v51, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v51, -1, -1);
    swift_slowDealloc(v50, -1, -1);

  }
  else
  {

    swift_release_n(v1);
  }
  v57 = v75;
  v56 = v76;
  v59 = (uint64_t)v73;
  v58 = v74;
  v81 = *(_QWORD **)(v1[8] + 16);
  v60 = swift_retain(v81);
  v83 = (id)static OS_dispatch_queue.main.getter(v60);
  v61 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v59, 1, 1, v61);
  v62 = sub_100003DB8(&qword_100316EA0);
  v63 = sub_1000084FC(&qword_10032A9E0, &qword_100316EA0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v64 = sub_1000052EC((unint64_t *)&qword_10032B100, (uint64_t (*)(uint64_t))sub_10000D75C, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  Publisher.receive<A>(on:options:)(&v83, v59, v62, v38, v63, v64);
  sub_100007FF0(v59, &qword_100329AF0);

  swift_release(v81);
  v65 = swift_allocObject(&unk_1002FB848, 24, 7);
  swift_weakInit(v65 + 16);
  v66 = sub_1000084FC(&qword_10032A9E8, &qword_10032A9D8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v68 = Publisher<>.sink(receiveValue:)(sub_100232D00, v65, v56, v66, v67);
  swift_release(v65);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v56);
  swift_beginAccess(v1 + 23, &v81, 33, 0);
  AnyCancellable.store(in:)(v1 + 23);
  swift_endAccess(&v81);
  swift_release(v68);
  swift_release(v1);
  return v1;
}

uint64_t sub_10022CE08(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  _BYTE v8[24];

  v2 = *a1;
  v3 = a1[1];
  v4 = (_QWORD *)a1[2];
  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  result = swift_weakLoadStrong(v5);
  if (result)
  {
    v7 = result;
    sub_10000D71C(v2, v3);
    swift_bridgeObjectRetain(v4);
    sub_10022D2B4(v2, v3, v4);
    sub_10022EE8C();
    return swift_release(v7);
  }
  return result;
}

double sub_10022CE94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));
  sub_100025CF8(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 64));

  swift_release(*(_QWORD *)(v0 + 88));
  sub_100232BB4(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 168));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 184));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 192));
  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 232);
  v4 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 248);
  v6 = *(_QWORD *)(v0 + 256);
  sub_10006491C(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208));
  sub_10006491C(v1, v2);
  sub_100064A24(v3, v4, v5, v6);
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 272)).n128_u64[0];
  return result;
}

_QWORD *sub_10022CF50()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v1 = v0;
  v2 = *v0;
  if (qword_100315820 != -1)
    swift_once(&qword_100315820, sub_1000D95E4);
  v3 = type metadata accessor for Logger(0);
  sub_10000D744(v3, (uint64_t)qword_10033FD18);
  v5 = swift_retain_n(v0, v4);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v21 = (uint64_t)v1;
    v22 = v9;
    *(_DWORD *)v8 = 136446210;
    v10 = swift_retain(v1);
    v11 = String.init<A>(describing:)(&v21, v2, v10);
    v13 = v12;
    v21 = sub_100172BEC(v11, v12, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v8 + 4, v8 + 12);
    swift_release_n(v1);
    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "[%{public}s] deinit", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

    swift_release_n(v1);
  }
  swift_release(v1[2]);
  swift_release(v1[3]);
  swift_release(v1[4]);
  swift_release(v1[5]);
  sub_100025CF8((uint64_t)(v1 + 6));
  swift_release(v1[8]);

  swift_release(v1[11]);
  sub_100232BB4(v1[17], v1[18], v1[19]);
  swift_bridgeObjectRelease(v1[21]);
  swift_bridgeObjectRelease(v1[23]);
  swift_bridgeObjectRelease(v1[24]);
  v14 = v1[27];
  v15 = v1[28];
  v16 = v1[29];
  v17 = v1[30];
  v18 = v1[31];
  v19 = v1[32];
  sub_10006491C(v1[25], v1[26]);
  sub_10006491C(v14, v15);
  sub_100064A24(v16, v17, v18, v19);
  swift_bridgeObjectRelease(v1[34]);
  return v1;
}

uint64_t sub_10022D1A8()
{
  uint64_t v0;

  sub_10022CF50();
  return swift_deallocClassInstance(v0, 280, 7);
}

uint64_t type metadata accessor for EmergencyModel()
{
  return objc_opt_self(_TtC8SOSBuddy14EmergencyModel);
}

ValueMetadata *type metadata accessor for QuestionnaireLoadingState()
{
  return &type metadata for QuestionnaireLoadingState;
}

ValueMetadata *type metadata accessor for QuestionnaireLoadingState.RequestDone()
{
  return &type metadata for QuestionnaireLoadingState.RequestDone;
}

ValueMetadata *type metadata accessor for QuestionnaireLoadingState.Request()
{
  return &type metadata for QuestionnaireLoadingState.Request;
}

uint64_t getEnumTagSinglePayload for EmergencyModel.Emergency(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 32);
  v4 = v3 >= 3;
  v5 = v3 - 3;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for EmergencyModel.Emergency(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for EmergencyModel.Emergency()
{
  return &type metadata for EmergencyModel.Emergency;
}

double sub_10022D2B4(uint64_t a1, unint64_t a2, _QWORD *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v4 = v3;
  v8 = v3[17];
  v9 = v3[18];
  v10 = (_QWORD *)v3[19];
  if (v10 == (_QWORD *)1)
  {
    if (a3 == (_QWORD *)1)
      goto LABEL_8;
    goto LABEL_5;
  }
  if (a3 == (_QWORD *)1)
  {
LABEL_5:
    sub_100232CD0(v3[17], v3[18], v3[19]);
    sub_100232CD0(v8, v9, (uint64_t)v10);
    sub_100232CD0(a1, a2, (uint64_t)a3);
    sub_100232BB4(v8, v9, (uint64_t)v10);
    sub_100232BB4(a1, a2, (uint64_t)a3);
LABEL_7:
    v12 = sub_100003DB8(&qword_10032B0E0);
    v13 = sub_1000084FC((unint64_t *)&qword_100317750, &qword_10032B0E0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
    Subject<>.send()(v12, v13);
    goto LABEL_8;
  }
  sub_100232CD0(v3[17], v3[18], v3[19]);
  sub_100232CD0(a1, a2, (uint64_t)a3);
  v11 = sub_10000D604(v8, v9, v10, a1, a2, a3);
  sub_100232BB4(a1, a2, (uint64_t)a3);
  if (!v11)
    goto LABEL_7;
LABEL_8:
  v14 = v4[17];
  v15 = v4[18];
  v16 = v4[19];
  v4[17] = a1;
  v4[18] = a2;
  v4[19] = a3;
  sub_100232CD0(a1, a2, (uint64_t)a3);
  sub_100232BB4(v14, v15, v16);
  sub_10022E9D4(v8, v9, v10);
  sub_100232BB4(a1, a2, (uint64_t)a3);
  return sub_100232BB4(v8, v9, (uint64_t)v10);
}

void sub_10022D464(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  __int128 v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  char v29;
  uint64_t v30[5];
  __int128 v31;
  __int128 v32;
  char v33;

  v3 = v2;
  if (qword_100315858 != -1)
    swift_once(&qword_100315858, sub_1000D96AC);
  v6 = type metadata accessor for Logger(0);
  sub_10000D744(v6, (uint64_t)qword_10033FDC0);
  v8 = swift_retain_n(v2, v7);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc(22, -1);
    v12 = swift_slowAlloc(64, -1);
    v30[0] = v12;
    *(_DWORD *)v11 = 136446466;
    sub_10000B458(a1, (uint64_t)&v31, &qword_10032A9C0);
    v13 = sub_100003DB8(&qword_10032A9C0);
    v15 = String.init<A>(describing:)(&v31, v13, v14);
    v17 = v16;
    *(_QWORD *)&v31 = sub_100172BEC(v15, v16, v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, (char *)&v31 + 8, v11 + 4, v11 + 12);
    swift_bridgeObjectRelease(v17);
    *(_WORD *)(v11 + 12) = 2082;
    v18 = *(_BYTE *)(v3 + 128);
    v19 = *(_OWORD *)(v3 + 112);
    v31 = *(_OWORD *)(v3 + 96);
    v32 = v19;
    v33 = v18;
    v20 = sub_100003DB8(&qword_10032A9C8);
    v22 = String.init<A>(describing:)(&v31, v20, v21);
    v24 = v23;
    *(_QWORD *)&v31 = sub_100172BEC(v22, v23, v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, (char *)&v31 + 8, v11 + 14, v11 + 22);
    swift_release_n(v3);
    swift_bridgeObjectRelease(v24);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Received request: %{public}s for currentEmergency: %{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v12, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

  }
  else
  {

    swift_release_n(v3);
  }
  sub_10000B458(a1, (uint64_t)&v27, &qword_10032A9C0);
  if (v28 == 2)
  {
    sub_10000B458(v3 + 96, (uint64_t)v30, &qword_10032A9C8);
    sub_10000B458((uint64_t)v30, (uint64_t)&v31, &qword_10032A9C8);
    if (v33 != 3)
    {
      v25 = sub_100003DB8(&qword_10032B0E0);
      v26 = sub_1000084FC((unint64_t *)&qword_100317750, &qword_10032B0E0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
      Subject<>.send()(v25, v26);
    }
    *(_OWORD *)(v3 + 96) = 0u;
    *(_OWORD *)(v3 + 112) = 0u;
    *(_BYTE *)(v3 + 128) = 3;
    sub_10022E250((uint64_t)v30);
  }
  else
  {
    v31 = v27;
    v32 = v28;
    v33 = v29;
    sub_10022F934((unsigned __int8 *)&v31, a2 & 1);
  }
}

void sub_10022D764(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint8_t *v27;
  __n128 v28;
  char v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  void *v39;
  __n128 v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  _QWORD *v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  _QWORD *v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  NSObject *v79;
  os_log_type_t v80;
  uint8_t *v81;
  const char *v82;
  __n128 v83;
  uint64_t v84;
  _QWORD *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t aBlock;
  _QWORD v93[4];
  _QWORD *v94;

  v3 = v2;
  v89 = a1;
  v90 = a2;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  v8 = (char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v87 = *(_QWORD *)(v9 - 8);
  v88 = v9;
  __chkstk_darwin(v9, v10);
  v86 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchPredicate(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  v16 = (uint64_t *)((char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_100315858 != -1)
    swift_once(&qword_100315858, sub_1000D96AC);
  v17 = type metadata accessor for Logger(0);
  v18 = sub_10000D744(v17, (uint64_t)qword_10033FDC0);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(2, -1);
    v85 = v3;
    v22 = v8;
    v23 = v5;
    v24 = v4;
    v25 = v18;
    v26 = v21;
    *(_WORD *)v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "_updateQuestionnaireStateAsync", v21, 2u);
    v27 = v26;
    v18 = v25;
    v4 = v24;
    v5 = v23;
    v8 = v22;
    v3 = v85;
    swift_slowDealloc(v27, -1, -1);
  }

  sub_10000D75C();
  *v16 = static OS_dispatch_queue.main.getter(v28);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v12);
  v29 = _dispatchPreconditionTest(_:)(v16);
  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v16, v12);
  if ((v29 & 1) == 0)
  {
    __break(1u);
    return;
  }
  v31 = v3[28];
  if (v31 == 1)
  {
    v32 = v3[30];
    v33 = v90;
    if (v32 == 1)
    {
LABEL_8:
      v34 = v3[27];
      v35 = v3[28];
      v36 = v89;
      v3[27] = v89;
      v3[28] = v33;
      swift_bridgeObjectRetain(v33);
      sub_10006491C(v34, v35);
      sub_10022EE8C();
      v37 = swift_allocObject(&unk_1002FB848, 24, 7);
      swift_weakInit(v37 + 16, v3);
      v38 = (_QWORD *)swift_allocObject(&unk_1002FB870, 40, 7);
      v38[2] = v37;
      v38[3] = v36;
      v38[4] = v33;
      v93[3] = sub_100232C0C;
      v94 = v38;
      aBlock = (uint64_t)_NSConcreteStackBlock;
      v93[0] = 1107296256;
      v93[1] = sub_1001BAACC;
      v93[2] = &unk_1002FB888;
      v39 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain(v33);
      v40 = swift_retain(v37);
      v41 = v86;
      static DispatchQoS.unspecified.getter(v40);
      v91 = _swiftEmptyArrayStorage;
      v42 = sub_1000052EC((unint64_t *)&qword_10031B310, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v43 = sub_100003DB8((uint64_t *)&unk_1003178D0);
      v44 = sub_1000084FC((unint64_t *)&qword_10031B320, (uint64_t *)&unk_1003178D0, (uint64_t)&protocol conformance descriptor for [A]);
      dispatch thunk of SetAlgebra.init<A>(_:)(&v91, v43, v44, v4, v42);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v41, v8, v39);
      _Block_release(v39);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      (*(void (**)(char *, uint64_t))(v87 + 8))(v41, v88);
      v45 = v94;
      swift_release(v37);
      swift_release(v45);
      return;
    }
    if (v90)
    {
      if (!v32)
        goto LABEL_8;
      v57 = v3[29];
      v58 = v3[31];
      v59 = v3[32];
      if (v57 == v89 && v32 == v90)
      {
        swift_bridgeObjectRetain_n(v90, 2, v30);
        sub_100064990(v89, v33, v58, v59);
        swift_bridgeObjectRelease_n(v33, 2);
        swift_bridgeObjectRelease(v32);
        v60 = swift_bridgeObjectRelease(v59);
      }
      else
      {
        LODWORD(v85) = _stringCompareWithSmolCheck(_:_:expecting:)(v89, v90, v3[29], v3[30], 0);
        swift_bridgeObjectRetain_n(v33, 2, v83);
        sub_100064990(v57, v32, v58, v59);
        swift_bridgeObjectRelease_n(v33, 2);
        swift_bridgeObjectRelease(v32);
        v60 = swift_bridgeObjectRelease(v59);
        if ((v85 & 1) == 0)
          goto LABEL_8;
      }
    }
    else
    {
      swift_bridgeObjectRetain(v3[30]);
      if (v32)
      {
        swift_bridgeObjectRelease(v32);
        goto LABEL_8;
      }
    }
    v79 = Logger.logObject.getter(v60);
    v80 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v79, v80))
      goto LABEL_37;
    v81 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v81 = 0;
    v82 = "Questionnaire is already loaded for the requested country code, ignoring this request";
    goto LABEL_36;
  }
  v46 = v3[27];
  sub_1000649C4(v46, v3[28]);
  sub_1000649C4(v46, v31);
  swift_bridgeObjectRetain(v31);
  v48 = Logger.logObject.getter(v47);
  v49 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v48, v49))
  {
    v50 = (uint8_t *)swift_slowAlloc(12, -1);
    v51 = (_QWORD *)swift_slowAlloc(32, -1);
    v91 = v51;
    aBlock = v46;
    v88 = v18;
    *(_DWORD *)v50 = 136446210;
    v93[0] = v31;
    swift_bridgeObjectRetain(v31);
    v52 = sub_100003DB8(&qword_100318260);
    v54 = String.init<A>(describing:)(&aBlock, v52, v53);
    v56 = v55;
    aBlock = sub_100172BEC(v54, v55, (uint64_t *)&v91);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v93, v50 + 4, v50 + 12);
    swift_bridgeObjectRelease(v56);
    sub_10006491C(v46, v31);
    sub_10006491C(v46, v31);
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "Questionnaire loading is in progress for iso3166Alpha3CountryCode: %{public}s", v50, 0xCu);
    swift_arrayDestroy(v51, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v51, -1, -1);
    swift_slowDealloc(v50, -1, -1);
  }
  else
  {
    sub_10006491C(v46, v31);
    sub_10006491C(v46, v31);
  }

  v63 = v89;
  v62 = v90;
  if (v90)
  {
    if (v31)
    {
      if (v46 == v89 && v31 == v90)
      {
        v61 = sub_10006491C(v89, v90);
LABEL_29:
        v79 = Logger.logObject.getter(v61);
        v80 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(v79, v80))
        {
LABEL_37:

          return;
        }
        v81 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v81 = 0;
        v82 = "Questionnaire is already loading for the requested country code, ignoring this request";
LABEL_36:
        _os_log_impl((void *)&_mh_execute_header, v79, v80, v82, v81, 2u);
        swift_slowDealloc(v81, -1, -1);
        goto LABEL_37;
      }
      v78 = _stringCompareWithSmolCheck(_:_:expecting:)(v89, v90, v46, v31, 0);
      v61 = sub_10006491C(v46, v31);
      if ((v78 & 1) != 0)
        goto LABEL_29;
      goto LABEL_24;
    }
  }
  else if (!v31)
  {
    goto LABEL_29;
  }
  sub_10006491C(v46, v31);
LABEL_24:
  v65 = swift_bridgeObjectRetain_n(v62, 2, v64);
  v66 = Logger.logObject.getter(v65);
  v67 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v66, v67))
  {
    v68 = (uint8_t *)swift_slowAlloc(12, -1);
    v69 = (_QWORD *)swift_slowAlloc(32, -1);
    v91 = v69;
    aBlock = v63;
    *(_DWORD *)v68 = 136446210;
    v93[0] = v62;
    swift_bridgeObjectRetain(v62);
    v70 = sub_100003DB8(&qword_100318260);
    v72 = String.init<A>(describing:)(&aBlock, v70, v71);
    v74 = v73;
    aBlock = sub_100172BEC(v72, v73, (uint64_t *)&v91);
    v63 = v89;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v93, v68 + 4, v68 + 12);
    swift_bridgeObjectRelease_n(v90, 2);
    v75 = v74;
    v62 = v90;
    swift_bridgeObjectRelease(v75);
    _os_log_impl((void *)&_mh_execute_header, v66, v67, "Deferring questionnaire loading for iso3166Alpha3CountryCode: %{public}s", v68, 0xCu);
    swift_arrayDestroy(v69, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v69, -1, -1);
    swift_slowDealloc(v68, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v62, 2);
  }
  v76 = v3[25];
  v77 = v3[26];
  v3[25] = v63;
  v3[26] = v62;
  swift_bridgeObjectRetain(v62);
  sub_10006491C(v76, v77);
}

void sub_10022E018(char a1)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __n128 v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = v1;
  v4 = *(unsigned __int8 *)(v1 + 80);
  if (v4 == 2)
  {
    if (a1 == 2)
      return;
  }
  else if (a1 != 2 && ((((a1 & 1) == 0) ^ v4) & 1) != 0)
  {
    return;
  }
  if (qword_100315858 != -1)
    swift_once(&qword_100315858, sub_1000D96AC);
  v5 = type metadata accessor for Logger(0);
  sub_10000D744(v5, (uint64_t)qword_10033FDC0);
  v7 = swift_retain_n(v1, v6);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc(22, -1);
    v11 = swift_slowAlloc(64, -1);
    v22 = v11;
    *(_DWORD *)v10 = 136446466;
    LOBYTE(v21) = a1;
    v12 = sub_100003DB8((uint64_t *)&unk_1003263F0);
    v14 = String.init<A>(describing:)(&v21, v12, v13);
    v16 = v15;
    v21 = sub_100172BEC(v14, v15, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease(v16);
    *(_WORD *)(v10 + 12) = 2082;
    LOBYTE(v21) = *(_BYTE *)(v2 + 80);
    v18 = String.init<A>(describing:)(&v21, v12, v17);
    v20 = v19;
    v21 = sub_100172BEC(v18, v19, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v10 + 14, v10 + 22);
    swift_release_n(v2);
    swift_bridgeObjectRelease(v20);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "lastConversationWasCommitted changed from %{public}s to %{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy(v11, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

    swift_release_n(v2);
  }
}

void sub_10022E250(uint64_t a1)
{
  __n128 *v1;
  __n128 *v2;
  int v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unsigned __int8 v24;
  __n128 v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  int v29;
  char v30;
  int v31;
  uint64_t v32;
  __n128 v33[2];
  unsigned __int8 v34;
  uint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;
  _BYTE v40[32];
  char v41;

  v2 = v1;
  sub_10000B458(a1, (uint64_t)v36, &qword_10032A9C8);
  v4 = v1[8].n128_u8[0];
  if (v4 == 3)
  {
    sub_10000B458(a1, (uint64_t)v40, &qword_10032A9C8);
    if (v41 == 3)
      return;
    goto LABEL_13;
  }
  v5 = v36[1];
  v6 = v37;
  v32 = v38;
  v31 = v39;
  v7 = v1[6].n128_i64[0];
  v8 = v1[6].n128_i64[1];
  v9 = v1[7].n128_i64[0];
  v10 = v1[7].n128_i64[1];
  sub_10000B458(a1, (uint64_t)v40, &qword_10032A9C8);
  if (v41 != 3)
  {
    sub_10022B3F4(v7);
    if ((v11 & 1) != 0)
    {
      if ((v9 & 1) == 0)
      {
        if ((v6 & 1) != 0 || v8 != v5)
          goto LABEL_13;
LABEL_11:
        if (v10 == v32 && v4 == v31)
          return;
        goto LABEL_13;
      }
      if ((v6 & 1) != 0)
        goto LABEL_11;
    }
  }
LABEL_13:
  if (qword_100315858 != -1)
    swift_once(&qword_100315858, sub_1000D96AC);
  v12 = type metadata accessor for Logger(0);
  sub_10000D744(v12, (uint64_t)qword_10033FDC0);
  v14 = swift_retain_n(v1, v13);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc(22, -1);
    v18 = swift_slowAlloc(64, -1);
    v35 = v18;
    *(_DWORD *)v17 = 136446466;
    sub_10000B458(a1, (uint64_t)v33, &qword_10032A9C8);
    v19 = sub_100003DB8(&qword_10032A9C8);
    v21 = String.init<A>(describing:)(v33, v19, v20);
    v23 = v22;
    v33[0].n128_u64[0] = sub_100172BEC(v21, v22, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v33, &v33[0].n128_i8[8], v17 + 4, v17 + 12);
    swift_bridgeObjectRelease(v23);
    *(_WORD *)(v17 + 12) = 2082;
    v24 = v2[8].n128_u8[0];
    v25 = v2[7];
    v33[0] = v2[6];
    v33[1] = v25;
    v34 = v24;
    v26 = String.init<A>(describing:)(v33, v19, v33[0]);
    v28 = v27;
    v33[0].n128_u64[0] = sub_100172BEC(v26, v27, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v33, &v33[0].n128_i8[8], v17 + 14, v17 + 22);
    swift_release_n(v2);
    swift_bridgeObjectRelease(v28);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "currentEmergency changed from %{public}s to %{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v18, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);

  }
  else
  {

    swift_release_n(v2);
  }
  v29 = v2[8].n128_u8[0];
  if (v29 != 3)
  {
    v30 = v2[5].n128_i8[0];
    v2[5].n128_u8[0] = v29 != 0;
    sub_10022E018(v30);
  }
  sub_10022E558();
}

uint64_t sub_10022E558()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  void *v14;
  uint64_t v15;
  void *v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[5];
  uint64_t v25;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v23 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2, v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100003DB8(&qword_10032B0E0);
  v12 = sub_1000084FC((unint64_t *)&qword_100317750, &qword_10032B0E0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  Subject<>.send()(v11, v12);
  sub_10000D75C();
  v14 = (void *)static OS_dispatch_queue.main.getter(v13);
  v15 = swift_allocObject(&unk_1002FB848, 24, 7);
  swift_weakInit(v15 + 16, v1);
  aBlock[4] = sub_100232CA8;
  v25 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001BAACC;
  aBlock[3] = &unk_1002FB950;
  v16 = _Block_copy(aBlock);
  swift_release(v25);
  static DispatchQoS.unspecified.getter(v17);
  aBlock[0] = _swiftEmptyArrayStorage;
  v18 = sub_1000052EC((unint64_t *)&qword_10031B310, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v19 = sub_100003DB8((uint64_t *)&unk_1003178D0);
  v20 = sub_1000084FC((unint64_t *)&qword_10031B320, (uint64_t *)&unk_1003178D0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v2, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v5, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_10022E79C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (*(_BYTE *)(v1 + 129) != (result & 1))
  {
    v2 = v1;
    v3 = result;
    if (qword_100315858 != -1)
      swift_once(&qword_100315858, sub_1000D96AC);
    v4 = type metadata accessor for Logger(0);
    sub_10000D744(v4, (uint64_t)qword_10033FDC0);
    v6 = swift_retain_n(v1, v5);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = swift_slowAlloc(22, -1);
      v10 = swift_slowAlloc(64, -1);
      v16 = v10;
      *(_DWORD *)v9 = 136446466;
      if ((v3 & 1) != 0)
        v11 = 1702195828;
      else
        v11 = 0x65736C6166;
      if ((v3 & 1) != 0)
        v12 = 0xE400000000000000;
      else
        v12 = 0xE500000000000000;
      v15 = sub_100172BEC(v11, v12, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v9 + 4, v9 + 12);
      swift_bridgeObjectRelease(v12);
      *(_WORD *)(v9 + 12) = 2082;
      if (*(_BYTE *)(v2 + 129))
        v13 = 1702195828;
      else
        v13 = 0x65736C6166;
      if (*(_BYTE *)(v2 + 129))
        v14 = 0xE400000000000000;
      else
        v14 = 0xE500000000000000;
      v15 = sub_100172BEC(v13, v14, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v9 + 14, v9 + 22);
      swift_release_n(v2);
      swift_bridgeObjectRelease(v14);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "syncInProgress state changed from %{public}s to %{public}s", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy(v10, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v10, -1, -1);
      swift_slowDealloc(v9, -1, -1);

    }
    else
    {

      swift_release_n(v2);
    }
    return sub_10022E558();
  }
  return result;
}

double sub_10022E9D4(uint64_t a1, unint64_t a2, _QWORD *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  double result;
  char v31;
  char v32;
  char v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t v41;

  v4 = v3;
  v9 = v3[17];
  v8 = v3[18];
  v10 = (_QWORD *)v4[19];
  if (v10 == (_QWORD *)1)
  {
    if (a3 == (_QWORD *)1)
      return result;
    goto LABEL_5;
  }
  if (a3 != (_QWORD *)1)
  {
    if (v8 >> 60 == 15)
    {
      if (a2 >> 60 == 15)
      {
        sub_100232CD0(v9, v8, v4[19]);
        sub_100232CD0(a1, a2, (uint64_t)a3);
        goto LABEL_19;
      }
    }
    else if (a2 >> 60 != 15)
    {
      sub_100232CD0(v9, v8, v4[19]);
      sub_100232CD0(a1, a2, (uint64_t)a3);
      sub_10000D71C(v9, v8);
      sub_10000D71C(a1, a2);
      sub_10000D38C(v9, v8);
      v32 = v31;
      sub_10000D730(a1, a2);
      sub_10000D730(v9, v8);
      if ((v32 & 1) == 0)
      {
        v34 = a1;
        v35 = a2;
        v36 = (uint64_t)a3;
LABEL_27:
        sub_100232BB4(v34, v35, v36);
        v11 = v9;
        v12 = v8;
        v13 = (uint64_t)v10;
        goto LABEL_6;
      }
LABEL_19:
      if (!v10)
      {
        if (!a3)
        {
          sub_100232BB4(a1, a2, 0);
          return sub_100232BB4(v9, v8, 0);
        }
        sub_100232BB4(a1, a2, (uint64_t)a3);
        v11 = v9;
        v12 = v8;
        v13 = 0;
        goto LABEL_6;
      }
      if (a3)
      {
        v33 = sub_1001DCCB4(v10, a3);
        sub_100232BB4(a1, a2, (uint64_t)a3);
        result = sub_100232BB4(v9, v8, (uint64_t)v10);
        if ((v33 & 1) != 0)
          return result;
        goto LABEL_7;
      }
      v34 = a1;
      v35 = a2;
      v36 = 0;
      goto LABEL_27;
    }
    sub_10000D71C(v9, v8);
    sub_10000D71C(a1, a2);
    sub_10000D730(v9, v8);
    sub_10000D730(a1, a2);
    goto LABEL_7;
  }
LABEL_5:
  sub_100232CD0(v9, v8, v4[19]);
  sub_100232CD0(a1, a2, (uint64_t)a3);
  sub_100232BB4(v9, v8, (uint64_t)v10);
  v11 = a1;
  v12 = a2;
  v13 = (uint64_t)a3;
LABEL_6:
  sub_100232BB4(v11, v12, v13);
LABEL_7:
  if (qword_100315858 != -1)
    swift_once(&qword_100315858, sub_1000D96AC);
  v14 = type metadata accessor for Logger(0);
  sub_10000D744(v14, (uint64_t)qword_10033FDC0);
  sub_100232CD0(a1, a2, (uint64_t)a3);
  swift_retain(v4);
  sub_100232CD0(a1, a2, (uint64_t)a3);
  swift_retain(v4);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter(v16);
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(22, -1);
    v37 = swift_slowAlloc(64, -1);
    v38 = a1;
    v40 = a3;
    v41 = v37;
    *(_DWORD *)v18 = 136380931;
    v39 = a2;
    sub_100232CD0(a1, a2, (uint64_t)a3);
    v19 = sub_100003DB8(&qword_10032A9D0);
    v21 = String.init<A>(describing:)(&v38, v19, v20);
    v23 = v22;
    v38 = sub_100172BEC(v21, v22, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v18 + 4, v18 + 12);
    swift_bridgeObjectRelease(v23);
    sub_100232BB4(a1, a2, (uint64_t)a3);
    sub_100232BB4(a1, a2, (uint64_t)a3);
    *(_WORD *)(v18 + 12) = 2081;
    v24 = v4[18];
    v25 = v4[19];
    v38 = v4[17];
    v39 = v24;
    v40 = (_QWORD *)v25;
    v26.n128_f64[0] = sub_100232CD0(v38, v24, v25);
    v27 = String.init<A>(describing:)(&v38, v19, v26);
    v29 = v28;
    v38 = sub_100172BEC(v27, v28, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v18 + 14, v18 + 22);
    swift_release_n(v4);
    swift_bridgeObjectRelease(v29);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "EED state changed from %{private}s to %{private}s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy(v37, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1, -1);
    swift_slowDealloc(v18, -1, -1);

  }
  else
  {
    sub_100232BB4(a1, a2, (uint64_t)a3);
    sub_100232BB4(a1, a2, (uint64_t)a3);

    swift_release_n(v4);
  }
  sub_10022E558();
  return result;
}

uint64_t sub_10022EE8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  __n128 v11;
  uint64_t v12;
  void (*v13)(_QWORD *, uint64_t, uint64_t);
  char v14;
  uint64_t (*v15)(_QWORD *, uint64_t);
  uint64_t result;
  __n128 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v27[24];

  v1 = v0;
  v2 = sub_100003DB8(&qword_100316EB0);
  __chkstk_darwin(v2, v3);
  v5 = &v27[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for DispatchPredicate(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  v10 = &v27[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10000D75C();
  *v10 = static OS_dispatch_queue.main.getter(v11);
  v12 = enum case for DispatchPredicate.onQueue(_:);
  v13 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v7 + 104);
  v13(v10, enum case for DispatchPredicate.onQueue(_:), v6);
  v14 = _dispatchPreconditionTest(_:)(v10);
  v15 = *(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8);
  result = v15(v10, v6);
  if ((v14 & 1) != 0)
  {
    v18 = *(_QWORD *)(v0 + 64);
    *v10 = static OS_dispatch_queue.main.getter(v17);
    v13(v10, v12, v6);
    v19 = _dispatchPreconditionTest(_:)(v10);
    result = v15(v10, v6);
    if ((v19 & 1) != 0)
    {
      v20 = v18 + OBJC_IVAR____TtC8SOSBuddy9EEDSource__pendingFetchId;
      swift_beginAccess(v18 + OBJC_IVAR____TtC8SOSBuddy9EEDSource__pendingFetchId, v27, 0, 0);
      sub_10000D798(v20, (uint64_t)v5);
      v21 = type metadata accessor for UUID(0);
      LODWORD(v20) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v5, 1, v21);
      sub_100007FF0((uint64_t)v5, &qword_100316EB0);
      if ((_DWORD)v20 == 1 && *(_QWORD *)(v1 + 224) == 1)
      {
        v22 = *(_QWORD *)(v1 + 272) != 0;
        v23 = *(unsigned __int8 *)(v1 + 129);
        if ((_DWORD)v23 == v22)
          goto LABEL_11;
      }
      else
      {
        LOBYTE(v22) = 1;
        if ((*(_BYTE *)(v1 + 129) & 1) != 0)
        {
          v23 = 1;
LABEL_11:
          *(_BYTE *)(v1 + 129) = v22;
          return sub_10022E79C(v23);
        }
        v23 = 0;
      }
      v24 = sub_100003DB8(&qword_10032B0E0);
      v25 = sub_1000084FC((unint64_t *)&qword_100317750, &qword_10032B0E0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
      Subject<>.send()(v24, v25);
      goto LABEL_11;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10022F0C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(_QWORD, _QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  void *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  void *v38;
  char *v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v48)(_QWORD, _QWORD);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t aBlock[5];
  _QWORD *v59;

  v1 = v0;
  v51 = type metadata accessor for DispatchWorkItemFlags(0);
  v56 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51, v2);
  v55 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v53 = *(_QWORD *)(v4 - 8);
  v54 = v4;
  __chkstk_darwin(v4, v5);
  v52 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for DispatchTime(0);
  v7 = *(void (**)(_QWORD, _QWORD))(v50 - 8);
  v9 = __chkstk_darwin(v50, v8);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v12);
  v49 = (char *)&v48 - v13;
  v14 = type metadata accessor for UUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  v17 = __chkstk_darwin(v14, v16);
  v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = UUID.init()(v17);
  v21 = UUID.uuidString.getter(v20);
  v23 = v22;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v14);
  if (qword_100315858 != -1)
    swift_once(&qword_100315858, sub_1000D96AC);
  v24 = type metadata accessor for Logger(0);
  sub_10000D744(v24, (uint64_t)qword_10033FDC0);
  v26 = swift_bridgeObjectRetain_n(v23, 2, v25);
  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v27, v28))
  {
    v48 = v7;
    v29 = (uint8_t *)swift_slowAlloc(12, -1);
    v30 = swift_slowAlloc(32, -1);
    aBlock[0] = v30;
    *(_DWORD *)v29 = 136446210;
    swift_bridgeObjectRetain(v23);
    v57 = sub_100172BEC(v21, v23, aBlock);
    v7 = v48;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, aBlock, v29 + 4, v29 + 12);
    swift_bridgeObjectRelease_n(v23, 3);
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "Artificially delaying sync for 2 seconds to let imagent to start up for token %{public}s", v29, 0xCu);
    swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1, -1);
    swift_slowDealloc(v29, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v23, 2);
  }
  v31 = *(_QWORD *)(v1 + 272);
  *(_QWORD *)(v1 + 264) = v21;
  *(_QWORD *)(v1 + 272) = v23;
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRelease(v31);
  sub_10022EE8C();
  sub_10000D75C();
  v33 = (void *)static OS_dispatch_queue.main.getter(v32);
  static DispatchTime.now()(v33);
  v34 = v49;
  + infix(_:_:)(v11, 2.0);
  v48 = (void (*)(_QWORD, _QWORD))*((_QWORD *)v7 + 1);
  v35 = v50;
  v48(v11, v50);
  v36 = swift_allocObject(&unk_1002FB848, 24, 7);
  swift_weakInit(v36 + 16, v1);
  v37 = (_QWORD *)swift_allocObject(&unk_1002FB9D8, 40, 7);
  v37[2] = v36;
  v37[3] = v21;
  v37[4] = v23;
  aBlock[4] = (uint64_t)sub_100232CC4;
  v59 = v37;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1001BAACC;
  aBlock[3] = (uint64_t)&unk_1002FB9F0;
  v38 = _Block_copy(aBlock);
  swift_release(v59);
  v39 = v52;
  static DispatchQoS.unspecified.getter(v40);
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  v41 = sub_1000052EC((unint64_t *)&qword_10031B310, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v42 = sub_100003DB8((uint64_t *)&unk_1003178D0);
  v43 = sub_1000084FC((unint64_t *)&qword_10031B320, (uint64_t *)&unk_1003178D0, (uint64_t)&protocol conformance descriptor for [A]);
  v44 = v55;
  v45 = v42;
  v46 = v51;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v45, v43, v51, v41);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v34, v39, v44, v38);
  _Block_release(v38);

  (*(void (**)(char *, uint64_t))(v56 + 8))(v44, v46);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v39, v54);
  return ((uint64_t (*)(char *, uint64_t))v48)(v34, v35);
}

uint64_t sub_10022F578(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  _BYTE v8[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  result = swift_weakLoadStrong(v5);
  if (result)
  {
    v7 = result;
    sub_10022F5E8(a2, a3);
    return swift_release(v7);
  }
  return result;
}

void sub_10022F5E8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v5 = *(_QWORD *)(v2 + 272);
  if (v5
    && ((v6 = v2, v7 = *(_QWORD *)(v2 + 264), v7 == a1) ? (v8 = v5 == a2) : (v8 = 0),
        v8 || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v7, v5, 0) & 1) != 0))
  {
    if (qword_100315858 != -1)
      swift_once(&qword_100315858, sub_1000D96AC);
    v9 = type metadata accessor for Logger(0);
    sub_10000D744(v9, (uint64_t)qword_10033FDC0);
    v11 = swift_bridgeObjectRetain_n(a2, 2, v10);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(12, -1);
      v15 = swift_slowAlloc(32, -1);
      v25 = v15;
      *(_DWORD *)v14 = 136446210;
      swift_bridgeObjectRetain(a2);
      v24 = sub_100172BEC(a1, a2, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v14 + 4, v14 + 12);
      swift_bridgeObjectRelease_n(a2, 3);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Done delaying sync for 2 seconds for token %{public}s", v14, 0xCu);
      swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v15, -1, -1);
      swift_slowDealloc(v14, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a2, 2);
    }
    v23 = *(_QWORD *)(v6 + 272);
    *(_QWORD *)(v6 + 264) = 0;
    *(_QWORD *)(v6 + 272) = 0;
    swift_bridgeObjectRelease(v23);
    sub_10022EE8C();
  }
  else
  {
    if (qword_100315858 != -1)
      swift_once(&qword_100315858, sub_1000D96AC);
    v16 = type metadata accessor for Logger(0);
    sub_10000D744(v16, (uint64_t)qword_10033FDC0);
    v18 = swift_bridgeObjectRetain_n(a2, 2, v17);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(12, -1);
      v22 = swift_slowAlloc(32, -1);
      v25 = v22;
      *(_DWORD *)v21 = 136446210;
      swift_bridgeObjectRetain(a2);
      v24 = sub_100172BEC(a1, a2, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v21 + 4, v21 + 12);
      swift_bridgeObjectRelease_n(a2, 3);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Delaying sync token %{public}s expired, ignoring", v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a2, 2);
    }
  }
}

void sub_10022F934(unsigned __int8 *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  char *v57;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE v64[40];
  _BYTE v65[40];

  v3 = v2;
  v5 = (char *)(v2 + 96);
  if (*(_BYTE *)(v2 + 128) == 3)
    goto LABEL_11;
  v6 = *(_QWORD *)(v2 + 120);
  v7 = *((_QWORD *)a1 + 1);
  v8 = a1[16];
  if ((v8 & 1) == 0)
  {
    if (v6 == v7)
    {
      v9 = a2 ^ 1;
      goto LABEL_7;
    }
LABEL_11:
    v10 = 0;
    goto LABEL_12;
  }
  v9 = 0;
  v10 = 0;
  if (v6 != v7)
    goto LABEL_12;
LABEL_7:
  sub_10022B3F4(*v5);
  if ((v11 & 1) != 0 && *(_BYTE *)(v3 + 128) != 2)
  {
    v10 = v8 & 1;
    if ((v9 & 1) == 0)
    {
LABEL_69:
      v59 = v10;
      if (qword_100315858 != -1)
        swift_once(&qword_100315858, sub_1000D96AC);
      v52 = type metadata accessor for Logger(0);
      v53 = sub_10000D744(v52, (uint64_t)qword_10033FDC0);
      v54 = Logger.logObject.getter(v53);
      v55 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v54, v55))
      {
        v56 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v56 = 0;
        _os_log_impl((void *)&_mh_execute_header, v54, v55, "ConversationId is the same, keeping the current questionnaire state", v56, 2u);
        swift_slowDealloc(v56, -1, -1);
      }

      goto LABEL_24;
    }
  }
  else
  {
    v10 = 0;
    if ((v9 & 1) == 0)
      goto LABEL_69;
  }
LABEL_12:
  v59 = v10;
  if (qword_100315858 != -1)
    swift_once(&qword_100315858, sub_1000D96AC);
  v12 = type metadata accessor for Logger(0);
  v13 = sub_10000D744(v12, (uint64_t)qword_10033FDC0);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "ConversationId changed or this is a new request for non-committed conversation, attempting to reset the questionnaire", v16, 2u);
    swift_slowDealloc(v16, -1, -1);
  }

  v17 = *(_QWORD *)(v3 + 88);
  if (v17)
  {
    if (*(_QWORD *)(v17 + 32))
    {
      *(_BYTE *)(v17 + 40) = 1;
      swift_retain(v17);
    }
    else
    {
      swift_retain(*(_QWORD *)(v3 + 88));
      v18 = sub_100003DB8(&qword_10032B0E0);
      v19 = sub_1000084FC((unint64_t *)&qword_100317750, &qword_10032B0E0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
      Subject<>.send()(v18, v19);
    }
    sub_1000ADCBC(0);
    if (*(_QWORD *)(v17 + 32))
    {
      *(_BYTE *)(v17 + 41) = 1;
    }
    else
    {
      v20 = sub_100003DB8(&qword_10032B0E0);
      v21 = sub_1000084FC((unint64_t *)&qword_100317750, &qword_10032B0E0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
      Subject<>.send()(v20, v21);
    }
    swift_release(v17);
  }
LABEL_24:
  v22 = *((_QWORD *)a1 + 3);
  v60 = v22;
  v61 = a1[32];
  if ((v61 & 1) != 0)
    goto LABEL_32;
  if (v22 == 1)
  {
    v23 = 0;
    v24 = *(_QWORD *)(v3 + 88);
    if (!v24)
      goto LABEL_34;
    goto LABEL_33;
  }
  if (v22 != 8)
  {
LABEL_32:
    v23 = 2;
    v24 = *(_QWORD *)(v3 + 88);
    if (!v24)
      goto LABEL_34;
LABEL_33:
    swift_retain(v24);
    sub_1000AE670(v23);
    swift_release(v24);
    goto LABEL_34;
  }
  if (byte_100322668 == 2)
    v23 = 0;
  else
    v23 = byte_100322668;
  v24 = *(_QWORD *)(v3 + 88);
  if (v24)
    goto LABEL_33;
LABEL_34:
  v25 = 2 * (a1[16] & 1);
  v26 = *((_QWORD *)a1 + 1);
  v27 = *a1;
  v57 = v5;
  sub_10000B458((uint64_t)v5, (uint64_t)v64, &qword_10032A9C8);
  v28 = *(_QWORD *)(v3 + 96);
  v29 = *(_QWORD *)(v3 + 104);
  v31 = *(_QWORD *)(v3 + 112);
  v30 = *(_QWORD *)(v3 + 120);
  v32 = *(unsigned __int8 *)(v3 + 128);
  sub_10000B458((uint64_t)v64, (uint64_t)v65, &qword_10032A9C8);
  if (v65[32] == 3)
    goto LABEL_45;
  sub_10022B3F4(v28);
  if ((v33 & 1) == 0)
    goto LABEL_45;
  if ((v31 & 1) != 0)
  {
    if (!v61)
    {
LABEL_45:
      v34 = sub_100003DB8(&qword_10032B0E0);
      v35 = sub_1000084FC((unint64_t *)&qword_100317750, &qword_10032B0E0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
      Subject<>.send()(v34, v35);
      goto LABEL_46;
    }
  }
  else if ((v61 & 1) != 0 || v29 != v60)
  {
    goto LABEL_45;
  }
  if (v30 != v26 || v32 != v25)
    goto LABEL_45;
LABEL_46:
  *(_QWORD *)(v3 + 96) = v27;
  *(_QWORD *)(v3 + 104) = v60;
  *(_QWORD *)(v3 + 112) = v61;
  *(_QWORD *)(v3 + 120) = v26;
  *(_BYTE *)(v3 + 128) = v25;
  sub_10022E250((uint64_t)v64);
  if ((v59 & 1) != 0)
    return;
  if (*(_BYTE *)(v3 + 128) == 3 || *v57 >= 2u)
  {
    sub_10000BF18();
    if ((a2 & 1) == 0)
      goto LABEL_57;
  }
  else
  {
    sub_10000BF18();
    v36 = *(_QWORD *)(v3 + 160);
    v37 = *(_QWORD *)(v3 + 168);
    swift_bridgeObjectRetain(v37);
    sub_10022D764(v36, v37);
    swift_bridgeObjectRelease(v37);
    if ((a2 & 1) == 0)
    {
LABEL_57:
      if ((v61 & 1) == 0 && v60 == 8)
      {
        if (qword_100315858 != -1)
          swift_once(&qword_100315858, sub_1000D96AC);
        v48 = type metadata accessor for Logger(0);
        v49 = sub_10000D744(v48, (uint64_t)qword_10033FDC0);
        v43 = Logger.logObject.getter(v49);
        v50 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(v43, v50))
          goto LABEL_64;
        v51 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v51 = 0;
        _os_log_impl((void *)&_mh_execute_header, v43, v50, "Emergency started from roadside assistance flow, skipping the delay", v51, 2u);
        v47 = v51;
LABEL_63:
        swift_slowDealloc(v47, -1, -1);
LABEL_64:

        return;
      }
      sub_10022F0C8();
      return;
    }
  }
  v38 = *(_QWORD *)(v3 + 272);
  if (!v38)
    goto LABEL_57;
  v39 = *(_QWORD *)(v3 + 264);
  v40 = qword_100315858;
  swift_bridgeObjectRetain(v38);
  if (v40 != -1)
    swift_once(&qword_100315858, sub_1000D96AC);
  v41 = type metadata accessor for Logger(0);
  sub_10000D744(v41, (uint64_t)qword_10033FDC0);
  swift_bridgeObjectRetain(v38);
  v43 = Logger.logObject.getter(v42);
  v44 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v43, v44))
  {
    v45 = (uint8_t *)swift_slowAlloc(12, -1);
    v46 = swift_slowAlloc(32, -1);
    v63 = v46;
    *(_DWORD *)v45 = 136446210;
    swift_bridgeObjectRetain(v38);
    v62 = sub_100172BEC(v39, v38, &v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63, v45 + 4, v45 + 12);
    swift_bridgeObjectRelease_n(v38, 3);
    _os_log_impl((void *)&_mh_execute_header, v43, v44, "Delay request token %{public}s is already pending, skipping this one", v45, 0xCu);
    swift_arrayDestroy(v46, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v46, -1, -1);
    v47 = v45;
    goto LABEL_63;
  }

  swift_bridgeObjectRelease_n(v38, 2);
}

uint64_t sub_100230018(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  result = swift_weakLoadStrong(v1);
  if (result)
  {
    v3 = result;
    sub_10023006C();
    return swift_release(v3);
  }
  return result;
}

void sub_10023006C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  __int16 v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t Strong;
  uint64_t v42;
  _UNKNOWN **v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  unint64_t v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  unint64_t v64;
  uint8_t *v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  void *v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint8_t *v78;
  uint8_t *v79;
  uint8_t *v80;
  uint64_t v81;
  NSObject *v82;
  void (*v83)(char *, uint64_t);
  uint64_t v84;
  uint8_t *v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t aBlock[5];
  _QWORD *v92;
  char v93[32];

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v89 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2, v3);
  v5 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  v10 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchTime(0);
  v12 = *(_QWORD *)(v11 - 8);
  v14 = __chkstk_darwin(v11, v13);
  v16 = (char *)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v17);
  v19 = (char *)&v79 - v18;
  if (*(_BYTE *)(v1 + 128) == 3)
    goto LABEL_4;
  if ((*(_BYTE *)(v1 + 129) & 1) != 0)
    return;
  if (*(_BYTE *)(v1 + 128))
  {
LABEL_4:
    v20 = *(_QWORD *)(v1 + 88);
    if (v20)
    {
      swift_retain(*(_QWORD *)(v1 + 88));
      sub_1000AAEA8();
      swift_release(v20);
    }
    return;
  }
  v88 = v2;
  if (*(unsigned __int8 *)(v1 + 96) <= 1u)
  {
    v21 = *(_QWORD *)(v1 + 88);
    if (v21)
    {
      swift_beginAccess(v21 + 48, v93, 0, 0);
      v22 = *(_QWORD *)(v21 + 144);
      v23 = *(_QWORD *)(v22 + 16);
      if (v23)
      {
        LODWORD(v87) = *(unsigned __int8 *)(v23 + v22 + 31);
        swift_retain(v21);
        if ((_DWORD)v87 != 4)
        {
          sub_1000AAEA8();
          v40 = v21;
LABEL_34:
          swift_release(v40);
          return;
        }
        v87 = v21;
        v24 = sub_1000AD998();
        if (v25)
        {
          if ((v26 & 0x100) != 0)
          {
            v44 = v24;
            v45 = v25;
            if (qword_100315858 != -1)
              swift_once(&qword_100315858, sub_1000D96AC);
            v46 = type metadata accessor for Logger(0);
            sub_10000D744(v46, (uint64_t)qword_10033FDC0);
            v48 = swift_bridgeObjectRetain_n(v45, 2, v47);
            v49 = Logger.logObject.getter(v48);
            v50 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v49, v50))
            {
              v51 = (uint8_t *)swift_slowAlloc(12, -1);
              v52 = swift_slowAlloc(32, -1);
              aBlock[0] = v52;
              *(_DWORD *)v51 = 136446210;
              swift_bridgeObjectRetain(v45);
              v90 = sub_100172BEC(v44, v45, aBlock);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, aBlock, v51 + 4, v51 + 12);
              swift_bridgeObjectRelease_n(v45, 3);
              _os_log_impl((void *)&_mh_execute_header, v49, v50, "Send questionnaire for token %{public}s", v51, 0xCu);
              swift_arrayDestroy(v52, 1, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v52, -1, -1);
              swift_slowDealloc(v51, -1, -1);

            }
            else
            {

              swift_bridgeObjectRelease_n(v45, 2);
            }
            sub_1000AB27C(v44, v45);
            v53 = swift_bridgeObjectRelease(v45);
            v54 = Logger.logObject.getter(v53);
            v55 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v54, v55))
            {
              v56 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v56 = 0;
              _os_log_impl((void *)&_mh_execute_header, v54, v55, "Sending the start message with questionnaire out", v56, 2u);
              swift_slowDealloc(v56, -1, -1);
            }

            sub_1002321B0();
          }
          else
          {
            v27 = v24;
            v28 = v25;
            if (qword_100315858 != -1)
              swift_once(&qword_100315858, sub_1000D96AC);
            v29 = type metadata accessor for Logger(0);
            sub_10000D744(v29, (uint64_t)qword_10033FDC0);
            swift_bridgeObjectRetain(v28);
            v31 = Logger.logObject.getter(v30);
            v32 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v31, v32))
            {
              v33 = (uint8_t *)swift_slowAlloc(12, -1);
              v34 = swift_slowAlloc(32, -1);
              aBlock[0] = v34;
              *(_DWORD *)v33 = 136446210;
              swift_bridgeObjectRetain(v28);
              v90 = sub_100172BEC(v27, v28, aBlock);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, aBlock, v33 + 4, v33 + 12);
              swift_bridgeObjectRelease_n(v28, 3);
              _os_log_impl((void *)&_mh_execute_header, v31, v32, "Pending send token %{public}s", v33, 0xCu);
              swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v34, -1, -1);
              swift_slowDealloc(v33, -1, -1);

            }
            else
            {

              swift_bridgeObjectRelease_n(v28, 2);
            }
          }
          v40 = v87;
          goto LABEL_34;
        }
        LODWORD(v86) = *(unsigned __int8 *)(v1 + 176);
        Strong = swift_unknownObjectWeakLoadStrong(v1 + 48);
        if (Strong)
        {
          v42 = Strong;
          v85 = (uint8_t *)*(id *)(Strong + 152);
          swift_unknownObjectRelease(v42);
          v43 = &off_1002FA538;
        }
        else
        {
          v85 = 0;
          v43 = 0;
        }
        v84 = sub_1000ABA28(v86 & 1, (uint64_t)v85, (uint64_t)v43);
        v86 = v57;
        swift_unknownObjectRelease(v85);
        if (qword_100315858 == -1)
          goto LABEL_38;
      }
      else
      {
        __break(1u);
      }
      swift_once(&qword_100315858, sub_1000D96AC);
LABEL_38:
      v58 = type metadata accessor for Logger(0);
      sub_10000D744(v58, (uint64_t)qword_10033FDC0);
      v60 = swift_bridgeObjectRetain_n(v86, 2, v59);
      v61 = Logger.logObject.getter(v60);
      v62 = static os_log_type_t.default.getter();
      LODWORD(v83) = v62;
      if (os_log_type_enabled(v61, v62))
      {
        v85 = (uint8_t *)swift_slowAlloc(12, -1);
        v81 = swift_slowAlloc(32, -1);
        aBlock[0] = v81;
        v82 = v61;
        v63 = v85;
        v64 = v86;
        v65 = v85;
        *(_DWORD *)v85 = 136446210;
        v79 = v63 + 4;
        v80 = v65 + 12;
        swift_bridgeObjectRetain(v64);
        v90 = sub_100172BEC(v84, v64, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, aBlock, v79, v80);
        swift_bridgeObjectRelease_n(v64, 3);
        _os_log_impl((void *)&_mh_execute_header, v82, (os_log_type_t)v83, "Starting new questionnaire send attempt for token %{public}s", v85, 0xCu);
        v66 = v81;
        swift_arrayDestroy(v81, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v66, -1, -1);
        swift_slowDealloc(v85, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v86, 2);
      }
      sub_10000D75C();
      v85 = (uint8_t *)static OS_dispatch_queue.main.getter(v67);
      static DispatchTime.now()(v85);
      + infix(_:_:)(v16, 8.0);
      v83 = *(void (**)(char *, uint64_t))(v12 + 8);
      v83(v16, v11);
      v68 = swift_allocObject(&unk_1002FB848, 24, 7);
      swift_weakInit(v68 + 16, v1);
      v69 = (_QWORD *)swift_allocObject(&unk_1002FB988, 40, 7);
      v70 = v84;
      v69[2] = v68;
      v69[3] = v70;
      v69[4] = v86;
      aBlock[4] = (uint64_t)sub_100232CB4;
      v92 = v69;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1001BAACC;
      aBlock[3] = (uint64_t)&unk_1002FB9A0;
      v71 = _Block_copy(aBlock);
      swift_release(v92);
      static DispatchQoS.unspecified.getter(v72);
      aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
      v73 = sub_1000052EC((unint64_t *)&qword_10031B310, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v74 = sub_100003DB8((uint64_t *)&unk_1003178D0);
      v75 = sub_1000084FC((unint64_t *)&qword_10031B320, (uint64_t *)&unk_1003178D0, (uint64_t)&protocol conformance descriptor for [A]);
      v76 = v74;
      v77 = v88;
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v76, v75, v88, v73);
      v78 = v85;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v19, v10, v5, v71);
      swift_release(v87);
      _Block_release(v71);

      (*(void (**)(char *, uint64_t))(v89 + 8))(v5, v77);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      v83(v19, v11);
      return;
    }
  }
  if (qword_100315858 != -1)
    swift_once(&qword_100315858, sub_1000D96AC);
  v35 = type metadata accessor for Logger(0);
  v36 = sub_10000D744(v35, (uint64_t)qword_10033FDC0);
  v37 = Logger.logObject.getter(v36);
  v38 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v39 = 0;
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "Sending start message without questionnaire out", v39, 2u);
    swift_slowDealloc(v39, -1, -1);
  }

  sub_1002321B0();
}

void sub_1002309F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  __n128 v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  void *v83;
  _QWORD *v84;
  char *v85;
  __n128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  char *v102;
  _QWORD *v103;
  _QWORD *aBlock;
  _QWORD v105[4];
  _QWORD *v106;
  uint64_t v107[3];
  char v108[32];

  v103 = (_QWORD *)a2;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  v9 = (char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  v102 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1 + 16;
  swift_beginAccess(a1 + 16, v108, 0, 0);
  Strong = swift_weakLoadStrong(a1 + 16);
  if (!Strong)
  {
    if (qword_100315858 != -1)
      swift_once(&qword_100315858, sub_1000D96AC);
    v33 = type metadata accessor for Logger(0);
    sub_10000D744(v33, (uint64_t)qword_10033FDC0);
    v35 = swift_bridgeObjectRetain_n(a3, 2, v34);
    v36 = Logger.logObject.getter(v35);
    v37 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc(12, -1);
      v39 = swift_slowAlloc(32, -1);
      v107[0] = v39;
      *(_DWORD *)v38 = 136446210;
      aBlock = v103;
      v105[0] = a3;
      swift_bridgeObjectRetain(a3);
      v40 = sub_100003DB8(&qword_100318260);
      v42 = String.init<A>(describing:)(&aBlock, v40, v41);
      v44 = v43;
      aBlock = (_QWORD *)sub_100172BEC(v42, v43, v107);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v105, v38 + 4, v38 + 12);
      swift_bridgeObjectRelease_n(a3, 2);
      swift_bridgeObjectRelease(v44);
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Loading questionnaire request for iso3166Alpha3CountryCode: %{public}s has expired", v38, 0xCu);
      swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v39, -1, -1);
      swift_slowDealloc(v38, -1, -1);

      return;
    }

LABEL_22:
    swift_bridgeObjectRelease_n(a3, 2);
    return;
  }
  v16 = Strong;
  v17 = swift_unknownObjectWeakLoadStrong(Strong + 48);
  if (!v17)
  {
    if (qword_100315858 != -1)
      swift_once(&qword_100315858, sub_1000D96AC);
    v45 = type metadata accessor for Logger(0);
    sub_10000D744(v45, (uint64_t)qword_10033FDC0);
    v47 = swift_bridgeObjectRetain_n(a3, 2, v46);
    v48 = Logger.logObject.getter(v47);
    v49 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v48, v49))
    {
      v50 = (uint8_t *)swift_slowAlloc(12, -1);
      v51 = v16;
      v52 = swift_slowAlloc(32, -1);
      v107[0] = v52;
      *(_DWORD *)v50 = 136446210;
      aBlock = v103;
      v105[0] = a3;
      swift_bridgeObjectRetain(a3);
      v53 = sub_100003DB8(&qword_100318260);
      v55 = String.init<A>(describing:)(&aBlock, v53, v54);
      v57 = v56;
      aBlock = (_QWORD *)sub_100172BEC(v55, v56, v107);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v105, v50 + 4, v50 + 12);
      swift_bridgeObjectRelease_n(a3, 2);
      swift_bridgeObjectRelease(v57);
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "Loading questionnaire request for iso3166Alpha3CountryCode: %{public}s has expired, no countryBundleLocationProvider available", v50, 0xCu);
      swift_arrayDestroy(v52, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v52, -1, -1);
      swift_slowDealloc(v50, -1, -1);
      swift_release(v51);

      return;
    }

    swift_release(v16);
    goto LABEL_22;
  }
  v18 = v17;
  v96 = v10;
  v101 = *(id *)(v17 + 152);
  swift_unknownObjectRelease(v18);
  if (qword_100315858 != -1)
    swift_once(&qword_100315858, sub_1000D96AC);
  v19 = type metadata accessor for Logger(0);
  v20 = sub_10000D744(v19, (uint64_t)qword_10033FDC0);
  v22 = swift_bridgeObjectRetain_n(a3, 2, v21);
  v94 = v20;
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.default.getter();
  v25 = os_log_type_enabled(v23, v24);
  v99 = v5;
  v100 = v16;
  v97 = v9;
  v98 = v6;
  v95 = v11;
  if (v25)
  {
    v26 = (uint8_t *)swift_slowAlloc(12, -1);
    v27 = swift_slowAlloc(32, -1);
    v107[0] = v27;
    *(_DWORD *)v26 = 136446210;
    aBlock = v103;
    v105[0] = a3;
    swift_bridgeObjectRetain(a3);
    v28 = sub_100003DB8(&qword_100318260);
    v30 = String.init<A>(describing:)(&aBlock, v28, v29);
    v32 = v31;
    aBlock = (_QWORD *)sub_100172BEC(v30, v31, v107);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v105, v26 + 4, v26 + 12);
    swift_bridgeObjectRelease_n(a3, 2);
    swift_bridgeObjectRelease(v32);
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Requesting bundle location for iso3166Alpha3CountryCode: %{public}s", v26, 0xCu);
    swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v26, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a3, 2);
  }
  v58 = sub_100219C50((uint64_t)v103, a3);
  v60 = v59;
  v62 = swift_bridgeObjectRetain_n(v59, 2, v61);
  v63 = Logger.logObject.getter(v62);
  v64 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v63, v64))
  {
    v65 = (uint8_t *)swift_slowAlloc(12, -1);
    v66 = swift_slowAlloc(32, -1);
    v107[0] = v66;
    v94 = a3;
    *(_DWORD *)v65 = 136446210;
    aBlock = (_QWORD *)v58;
    v105[0] = v60;
    swift_bridgeObjectRetain(v60);
    v67 = sub_100003DB8(&qword_100318260);
    v69 = String.init<A>(describing:)(&aBlock, v67, v68);
    v71 = v70;
    aBlock = (_QWORD *)sub_100172BEC(v69, v70, v107);
    a3 = v94;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v105, v65 + 4, v65 + 12);
    swift_bridgeObjectRelease_n(v60, 2);
    swift_bridgeObjectRelease(v71);
    _os_log_impl((void *)&_mh_execute_header, v63, v64, "Loading questionnaire from bundleLocation: %{public}s", v65, 0xCu);
    swift_arrayDestroy(v66, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v66, -1, -1);
    swift_slowDealloc(v65, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v60, 2);
  }
  v72 = sub_10021654C(v58, v60);
  v74 = v73;
  v76 = v75;
  swift_bridgeObjectRelease(v60);
  sub_10000D75C();
  v78 = (void *)static OS_dispatch_queue.main.getter(v77);
  v79 = swift_allocObject(&unk_1002FB848, 24, 7);
  swift_beginAccess(v14, v107, 0, 0);
  v80 = swift_weakLoadStrong(v14);
  swift_weakInit(v79 + 16, v80);
  swift_release(v80);
  v81 = (_QWORD *)swift_allocObject(&unk_1002FB8C0, 64, 7);
  v82 = (uint64_t)v103;
  v81[2] = v79;
  v81[3] = v82;
  v81[4] = a3;
  v81[5] = v72;
  v81[6] = v74;
  v81[7] = v76;
  v105[3] = sub_100232C6C;
  v106 = v81;
  aBlock = _NSConcreteStackBlock;
  v105[0] = 1107296256;
  v105[1] = sub_1001BAACC;
  v105[2] = &unk_1002FB8D8;
  v83 = _Block_copy(&aBlock);
  v84 = v106;
  swift_bridgeObjectRetain(v76);
  swift_bridgeObjectRetain(a3);
  swift_retain(v72);
  swift_release(v84);
  v85 = v102;
  static DispatchQoS.unspecified.getter(v86);
  aBlock = _swiftEmptyArrayStorage;
  v87 = sub_1000052EC((unint64_t *)&qword_10031B310, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v88 = sub_100003DB8((uint64_t *)&unk_1003178D0);
  v89 = sub_1000084FC((unint64_t *)&qword_10031B320, (uint64_t *)&unk_1003178D0, (uint64_t)&protocol conformance descriptor for [A]);
  v90 = v97;
  v91 = v88;
  v92 = v99;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v91, v89, v99, v87);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v85, v90, v83);
  _Block_release(v83);
  swift_bridgeObjectRelease(v76);
  swift_release(v72);
  swift_release(v100);

  (*(void (**)(char *, uint64_t))(v98 + 8))(v90, v92);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v85, v96);
}

uint64_t sub_100231324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(_QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[24];

  v11 = a1 + 16;
  swift_beginAccess(a1 + 16, v17, 0, 0);
  Strong = swift_weakLoadStrong(v11);
  if (Strong)
  {
    v13 = Strong;
    sub_1002313EC(a2, a3, a4, a5, a6);
    swift_release(v13);
  }
  swift_beginAccess(v11, &v16, 0, 0);
  result = swift_weakLoadStrong(v11);
  if (result)
  {
    v15 = result;
    sub_10022EE8C();
    return swift_release(v15);
  }
  return result;
}

void sub_1002313EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint8_t *v39;
  unint64_t v40;
  __n128 v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __n128 v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t Strong;
  _UNKNOWN **v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  unsigned __int8 v97;
  void *v98;
  uint64_t v99;
  __n128 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __n128 v111;
  uint64_t v112;
  uint64_t v113;
  __n128 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  __n128 v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  uint64_t v128;
  _QWORD *v129;
  void (*v130)(char *, uint64_t);
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  void (*v138)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v139;
  __int128 v140;
  uint64_t v141[3];
  id v142;
  uint64_t v143;
  _QWORD v144[3];

  v6 = v5;
  v137 = a4;
  v138 = a5;
  v133 = a3;
  v9 = sub_100003DB8(&qword_100329AF0);
  __chkstk_darwin(v9, v10);
  v134 = (char *)&v128 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = sub_100003DB8((uint64_t *)&unk_100326490);
  v12 = *(_QWORD *)(v136 - 8);
  __chkstk_darwin(v136, v13);
  v135 = (char *)&v128 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchPredicate(0);
  *(_QWORD *)&v140 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15, v16);
  v18 = (uint64_t *)((char *)&v128 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_100315858 != -1)
    swift_once(&qword_100315858, sub_1000D96AC);
  v19 = type metadata accessor for Logger(0);
  v20 = sub_10000D744(v19, (uint64_t)qword_10033FDC0);
  v22 = swift_bridgeObjectRetain_n(a2, 2, v21);
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.default.getter();
  v25 = os_log_type_enabled(v23, v24);
  v139 = a1;
  if (v25)
  {
    v131 = v20;
    v26 = swift_slowAlloc(12, -1);
    v130 = (void (*)(char *, uint64_t))v15;
    v27 = (uint8_t *)v26;
    v28 = swift_slowAlloc(32, -1);
    v132 = v12;
    v29 = v28;
    v141[0] = v28;
    *(_DWORD *)v27 = 136446210;
    v143 = a1;
    v144[0] = a2;
    swift_bridgeObjectRetain(a2);
    v30 = sub_100003DB8(&qword_100318260);
    v32 = String.init<A>(describing:)(&v143, v30, v31);
    v33 = v6;
    v35 = v34;
    v143 = sub_100172BEC(v32, v34, v141);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v143, v144, v27 + 4, v27 + 12);
    v36 = a2;
    swift_bridgeObjectRelease_n(a2, 2);
    v37 = v35;
    v6 = v33;
    swift_bridgeObjectRelease(v37);
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "_onQuestionnaireLoadRequestDone for iso3166Alpha3CountryCode: %{public}s", v27, 0xCu);
    swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
    v38 = v29;
    v12 = v132;
    swift_slowDealloc(v38, -1, -1);
    v39 = v27;
    v15 = (uint64_t)v130;
    swift_slowDealloc(v39, -1, -1);

  }
  else
  {

    v36 = a2;
    swift_bridgeObjectRelease_n(a2, 2);
  }
  v40 = sub_10000D75C();
  *v18 = static OS_dispatch_queue.main.getter(v41);
  v42 = v140;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v140 + 104))(v18, enum case for DispatchPredicate.onQueue(_:), v15);
  v43 = _dispatchPreconditionTest(_:)(v18);
  v44 = (*(uint64_t (**)(_QWORD *, uint64_t))(v42 + 8))(v18, v15);
  if ((v43 & 1) == 0)
  {
    __break(1u);
    goto LABEL_55;
  }
  v46 = *(_QWORD *)(v6 + 216);
  v45 = *(_QWORD *)(v6 + 224);
  if (!v45)
  {
    if (!v36)
    {
      v51 = *(_QWORD *)(v6 + 216);
      goto LABEL_19;
    }
    goto LABEL_22;
  }
  if (v45 == 1)
  {
    v47 = Logger.logObject.getter(v44);
    v48 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v47, v48))
    {
LABEL_26:

      return;
    }
    v49 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v49 = 0;
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "No questionnaire loading requests are in progress, ignoring", v49, 2u);
    v50 = v49;
LABEL_24:
    swift_slowDealloc(v50, -1, -1);
    goto LABEL_26;
  }
  if (!v36)
    goto LABEL_22;
  if (v46 == v139 && v45 == v36)
  {
    v51 = v139;
    goto LABEL_19;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)(v6 + 216), *(_QWORD *)(v6 + 224), v139, v36, 0) & 1) == 0)
  {
LABEL_22:
    sub_1000649C4(v46, v45);
    swift_bridgeObjectRetain(v45);
    v47 = Logger.logObject.getter(v59);
    v60 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v47, v60))
    {
      sub_10006491C(v46, v45);
      sub_10006491C(v46, v45);
      goto LABEL_26;
    }
    v61 = (uint8_t *)swift_slowAlloc(12, -1);
    v62 = swift_slowAlloc(32, -1);
    v141[0] = v62;
    *(_DWORD *)v61 = 136446210;
    v143 = v46;
    v144[0] = v45;
    swift_bridgeObjectRetain(v45);
    v63 = sub_100003DB8(&qword_100318260);
    v65 = String.init<A>(describing:)(&v143, v63, v64);
    v67 = v66;
    v143 = sub_100172BEC(v65, v66, v141);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v143, v144, v61 + 4, v61 + 12);
    swift_bridgeObjectRelease(v67);
    sub_10006491C(v46, v45);
    sub_10006491C(v46, v45);
    _os_log_impl((void *)&_mh_execute_header, v47, v60, "Received questionnaire loading result not for the expected country code %{public}s, ignoring", v61, 0xCu);
    swift_arrayDestroy(v62, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v62, -1, -1);
    v50 = v61;
    goto LABEL_24;
  }
  v51 = *(_QWORD *)(v6 + 216);
  v36 = *(_QWORD *)(v6 + 224);
LABEL_19:
  v140 = xmmword_10024E030;
  *(_OWORD *)(v6 + 216) = xmmword_10024E030;
  swift_bridgeObjectRetain(v45);
  sub_10006491C(v51, v36);
  v52 = *(_QWORD *)(v6 + 208);
  if (v52 != 1)
  {
    v68 = *(_QWORD *)(v6 + 200);
    sub_1000649C4(v68, *(_QWORD *)(v6 + 208));
    sub_10006491C(v46, v45);
    v69 = *(_QWORD *)(v6 + 200);
    v70 = *(_QWORD *)(v6 + 208);
    *(_OWORD *)(v6 + 200) = v140;
    sub_10006491C(v69, v70);
    sub_10022D764(v68, v52);
    sub_10006491C(v68, v52);
    return;
  }
  v36 = v40;
  v54 = *(_QWORD *)(v6 + 232);
  v53 = *(_QWORD *)(v6 + 240);
  v55 = *(_QWORD *)(v6 + 248);
  v56 = *(_QWORD *)(v6 + 256);
  if (v53 == 1)
  {
    v57 = 1;
    v58 = v138;
    goto LABEL_37;
  }
  v58 = v138;
  if (v56)
  {
    if (v138)
    {
      if (v55 == v137 && (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v56 == v138)
        goto LABEL_33;
      v71 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)(v6 + 248), *(_QWORD *)(v6 + 256), v137, v138, 0);
      v58 = v138;
      if ((v71 & 1) != 0)
        goto LABEL_33;
    }
LABEL_36:
    v54 = *(_QWORD *)(v6 + 232);
    v57 = *(_QWORD *)(v6 + 240);
    v55 = *(_QWORD *)(v6 + 248);
    v56 = *(_QWORD *)(v6 + 256);
LABEL_37:
    *(_QWORD *)(v6 + 232) = v46;
    *(_QWORD *)(v6 + 240) = v45;
    *(_QWORD *)(v6 + 248) = v137;
    *(_QWORD *)(v6 + 256) = v58;
    swift_bridgeObjectRetain(v58);
    sub_100064A24(v54, v57, v55, v56);
    Strong = swift_unknownObjectWeakLoadStrong(v6 + 48);
    if (Strong)
      v91 = &off_1002F3C70;
    else
      v91 = 0;
    v92 = type metadata accessor for QuestionnaireState();
    swift_allocObject(v92, 280, 7);
    swift_retain(v133);
    sub_1000ADAA0(v93, Strong, (uint64_t)v91);
    v18 = v94;
    v95 = v36;
    if (*(_BYTE *)(v6 + 128) != 3 && (*(_BYTE *)(v6 + 112) & 1) == 0)
    {
      v96 = *(_QWORD *)(v6 + 104);
      if (v96 == 1)
      {
        v97 = 0;
        goto LABEL_48;
      }
      if (v96 == 8)
      {
        if (byte_100322668 == 2)
          v97 = 0;
        else
          v97 = byte_100322668;
LABEL_48:
        sub_1000AE670(v97);
        if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
        {
          v98 = &_swiftEmptySetSingleton;
LABEL_50:
          *(_QWORD *)&v140 = v6 + 192;
          swift_beginAccess(v6 + 192, &v143, 1, 0);
          v99 = *(_QWORD *)(v6 + 192);
          *(_QWORD *)(v6 + 192) = v98;
          swift_bridgeObjectRelease(v99);
          v141[0] = v18[2];
          v100 = swift_retain(v141[0]);
          v142 = (id)static OS_dispatch_queue.main.getter(v100);
          v101 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
          v138 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(v101 - 8) + 56);
          v139 = v101;
          v102 = (uint64_t)v134;
          v138(v134, 1, 1, v101);
          v103 = sub_100003DB8(&qword_10032B0E0);
          v132 = v103;
          v104 = sub_1000084FC((unint64_t *)&qword_1003264A0, &qword_10032B0E0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
          v137 = v104;
          v133 = sub_1000052EC((unint64_t *)&qword_10032B100, (uint64_t (*)(uint64_t))sub_10000D75C, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
          v105 = v135;
          Publisher.receive<A>(on:options:)(&v142, v102, v103, v95, v104, v133);
          sub_100007FF0(v102, &qword_100329AF0);

          swift_release(v141[0]);
          v106 = swift_allocObject(&unk_1002FB848, 24, 7);
          v129 = v18;
          v107 = v106;
          swift_weakInit(v106 + 16, v6);
          v108 = v95;
          v109 = swift_allocObject(&unk_1002FB910, 32, 7);
          *(_QWORD *)(v109 + 16) = sub_100064A58;
          *(_QWORD *)(v109 + 24) = v107;
          v131 = sub_1000084FC((unint64_t *)&unk_1003264B0, (uint64_t *)&unk_100326490, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
          v110 = v136;
          v112 = Publisher<>.sink(receiveValue:)(sub_100021640, v109, v136, v131, v111);
          swift_release(v109);
          v130 = *(void (**)(char *, uint64_t))(v12 + 8);
          v130(v105, v110);
          v113 = v140;
          swift_beginAccess(v140, v141, 33, 0);
          AnyCancellable.store(in:)(v113);
          swift_endAccess(v141);
          swift_release(v112);
          v141[0] = v18[3];
          v114 = swift_retain(v141[0]);
          v142 = (id)static OS_dispatch_queue.main.getter(v114);
          v138(v102, 1, 1, v139);
          v115 = v132;
          Publisher.receive<A>(on:options:)(&v142, v102, v132, v108, v137, v133);
          sub_100007FF0(v102, &qword_100329AF0);

          swift_release(v141[0]);
          v116 = swift_allocObject(&unk_1002FB848, 24, 7);
          swift_weakInit(v116 + 16, v6);
          v117 = swift_allocObject(&unk_1002FB938, 32, 7);
          *(_QWORD *)(v117 + 16) = sub_100232CA0;
          *(_QWORD *)(v117 + 24) = v116;
          v119 = Publisher<>.sink(receiveValue:)(sub_1000216F8, v117, v110, v131, v118);
          swift_release(v117);
          v130(v105, v110);
          swift_beginAccess(v113, v141, 33, 0);
          AnyCancellable.store(in:)(v113);
          swift_endAccess(v141);
          swift_release(v119);
          v120 = *(_QWORD *)(v6 + 88);
          v121 = v129;
          *(_QWORD *)(v6 + 88) = v129;
          swift_retain(v121);
          swift_release(v120);
          v122 = sub_1000084FC((unint64_t *)&qword_100317750, &qword_10032B0E0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
          Subject<>.send()(v115, v122);
          sub_10022E558();
          Subject<>.send()(v115, v122);
          swift_release(v121);
          return;
        }
LABEL_55:
        if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
        {
          sub_100209204((uint64_t)_swiftEmptyArrayStorage);
          v98 = v127;
        }
        else
        {
          v98 = &_swiftEmptySetSingleton;
        }
        v95 = v36;
        goto LABEL_50;
      }
    }
    v97 = 2;
    goto LABEL_48;
  }
  if (v138)
    goto LABEL_36;
LABEL_33:
  sub_1000649C4(v46, v45);
  swift_bridgeObjectRetain(v56);
  swift_bridgeObjectRetain(v53);
  sub_1000649C4(v46, v45);
  sub_100064990(v54, v53, v55, v56);
  swift_bridgeObjectRetain(v53);
  swift_bridgeObjectRetain(v56);
  v73 = Logger.logObject.getter(v72);
  v74 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v73, v74))
  {
    v75 = swift_slowAlloc(22, -1);
    *(_QWORD *)&v140 = v56;
    v76 = v75;
    v137 = swift_slowAlloc(64, -1);
    v141[0] = v137;
    *(_DWORD *)v76 = 136446466;
    v138 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v55;
    v143 = v46;
    v144[0] = v45;
    swift_bridgeObjectRetain(v45);
    v77 = sub_100003DB8(&qword_100318260);
    v139 = v6;
    v78 = v77;
    v80 = String.init<A>(describing:)(&v143, v77, v79);
    v82 = v81;
    v143 = sub_100172BEC(v80, v81, v141);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v143, v144, v76 + 4, v76 + 12);
    swift_bridgeObjectRelease(v82);
    sub_10006491C(v46, v45);
    sub_10006491C(v46, v45);
    *(_WORD *)(v76 + 12) = 2082;
    v143 = v54;
    v144[0] = v53;
    v83 = swift_bridgeObjectRetain(v53);
    v84 = v78;
    v6 = v139;
    v85 = String.init<A>(describing:)(&v143, v84, v83);
    v87 = v86;
    v143 = sub_100172BEC(v85, v86, v141);
    v55 = (uint64_t)v138;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v143, v144, v76 + 14, v76 + 22);
    swift_bridgeObjectRelease_n(v140, 2);
    swift_bridgeObjectRelease_n(v53, 2);
    swift_bridgeObjectRelease(v87);
    _os_log_impl((void *)&_mh_execute_header, v73, v74, "Questionnaire for country code %{public}s, is loaded from the same source as the previous country code %{public}s, ignoring", (uint8_t *)v76, 0x16u);
    v88 = v137;
    swift_arrayDestroy(v137, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v88, -1, -1);
    v89 = v76;
    v56 = v140;
    swift_slowDealloc(v89, -1, -1);
    swift_bridgeObjectRelease(v53);

  }
  else
  {
    sub_10006491C(v46, v45);
    sub_10006491C(v46, v45);

    swift_bridgeObjectRelease_n(v56, 2);
    swift_bridgeObjectRelease_n(v53, 3);
  }
  v123 = *(_QWORD *)(v6 + 232);
  v124 = *(_QWORD *)(v6 + 240);
  v125 = *(_QWORD *)(v6 + 248);
  v126 = *(_QWORD *)(v6 + 256);
  *(_QWORD *)(v6 + 232) = v46;
  *(_QWORD *)(v6 + 240) = v45;
  *(_QWORD *)(v6 + 248) = v55;
  *(_QWORD *)(v6 + 256) = v56;
  sub_100064A24(v123, v124, v125, v126);
}

uint64_t sub_1002320DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v10, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    sub_10022E558();
    swift_release(v3);
  }
  swift_beginAccess(v1, &v9, 0, 0);
  result = swift_weakLoadStrong(v1);
  if (result)
  {
    v5 = result;
    v6 = *(_QWORD *)(result + 32);
    swift_retain(v6);
    swift_release(v5);
    v7 = sub_100003DB8(&qword_10032B0E0);
    v8 = sub_1000084FC((unint64_t *)&qword_100317750, &qword_10032B0E0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
    Subject<>.send()(v7, v8);
    return swift_release(v6);
  }
  return result;
}

void sub_1002321B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  int v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  const char *v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  unsigned __int8 *v53;
  uint64_t v54;
  NSObject *oslog;
  os_log_t osloga;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  _BYTE v63[40];
  uint64_t v64;
  _BYTE v65[40];

  v1 = v0;
  if (qword_100315858 != -1)
    swift_once(&qword_100315858, sub_1000D96AC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_10000D744(v2, (uint64_t)qword_10033FDC0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "_sendStartMessage", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v8 = *(unsigned __int8 *)(v1 + 128);
  if (v8 == 3)
  {
    oslog = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v9, "currentEmergency == nil, nothing to associate start message with", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }
LABEL_23:

    return;
  }
  v11 = *(_QWORD *)(v1 + 120);
  v12 = *(_QWORD *)(v1 + 104);
  osloga = (os_log_t)*(unsigned __int8 *)(v1 + 96);
  v13 = *(_QWORD *)(v1 + 112) & 1;
  v53 = (unsigned __int8 *)(v1 + 96);
  v54 = v11;
  if (!*(_BYTE *)(v1 + 128))
  {
    v18 = Logger.logObject.getter(v7);
    v19 = static os_log_type_t.default.getter();
    v51 = v12;
    v52 = v13;
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v20 = 134349056;
      v64 = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, v65, v20 + 4, v20 + 12);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Marking conversation id %{public}llu as committing", v20, 0xCu);
      swift_slowDealloc(v20, -1, -1);
    }

    sub_10000B458((uint64_t)v53, (uint64_t)v63, &qword_10032A9C8);
    v21 = *(_QWORD *)(v1 + 96);
    v22 = *(_QWORD *)(v1 + 104);
    v23 = *(_QWORD *)(v1 + 112);
    v24 = *(_QWORD *)(v1 + 120);
    v25 = *(unsigned __int8 *)(v1 + 128);
    sub_10000B458((uint64_t)v63, (uint64_t)&v64, &qword_10032A9C8);
    if (v65[24] == 3)
      goto LABEL_27;
    sub_10022B3F4(v21);
    if ((v26 & 1) == 0)
      goto LABEL_27;
    if ((v23 & 1) != 0)
    {
      if (!v52)
      {
LABEL_27:
        v29 = sub_100003DB8(&qword_10032B0E0);
        v30 = sub_1000084FC((unint64_t *)&qword_100317750, &qword_10032B0E0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
        Subject<>.send()(v29, v30);
LABEL_28:
        v12 = v51;
        v13 = v52;
        *(_QWORD *)(v1 + 96) = osloga;
        *(_QWORD *)(v1 + 104) = v51;
        *(_QWORD *)(v1 + 112) = v52;
        *(_QWORD *)(v1 + 120) = v54;
        *(_BYTE *)(v1 + 128) = 1;
        sub_10022E250((uint64_t)v63);
        goto LABEL_29;
      }
    }
    else if (v52 || v22 != v51)
    {
      goto LABEL_27;
    }
    if (v24 == v54 && v25 == 1)
      goto LABEL_28;
    goto LABEL_27;
  }
  if (v8 != 1)
  {
    oslog = Logger.logObject.getter(v7);
    v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v28 = 134349056;
      v64 = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, v65, v28 + 4, v28 + 12);
      _os_log_impl((void *)&_mh_execute_header, oslog, v27, "conversation id %{public}llu is already committed, it should not have been", v28, 0xCu);
      swift_slowDealloc(v28, -1, -1);

      return;
    }
    goto LABEL_23;
  }
  v14 = Logger.logObject.getter(v7);
  v15 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v16 = 134349056;
    v64 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, v65, v16 + 4, v16 + 12);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Already in the process of committing conversation id %{public}llu, overriding it", v16, 0xCu);
    swift_slowDealloc(v16, -1, -1);
  }

LABEL_29:
  if (*(_BYTE *)(v1 + 128) == 3 || *v53 > 1u)
  {
    if (qword_100315890 != -1)
      swift_once(&qword_100315890, sub_1000D97D4);
    v40 = sub_10000D744(v2, (uint64_t)qword_10033FE68);
    v31 = Logger.logObject.getter(v40);
    v32 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v31, v32))
      goto LABEL_39;
    v33 = (uint8_t *)swift_slowAlloc(12, -1);
    v34 = swift_slowAlloc(32, -1);
    v62 = v34;
    v41.n128_u64[0] = 136446210;
    *(_DWORD *)v33 = 136446210;
    LOBYTE(v57) = (_BYTE)osloga;
    v58 = v12;
    LOBYTE(v59) = v13 != 0;
    v60 = v54;
    v61 = v8;
    v42 = String.init<A>(describing:)(&v57, &type metadata for EmergencyModel.Emergency, v41);
    v44 = v43;
    v57 = sub_100172BEC(v42, v43, &v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v33 + 4, v33 + 12);
    swift_bridgeObjectRelease(v44);
    v39 = "_sendStartMessage - not adding questionnaire for %{public}s";
    goto LABEL_38;
  }
  if (!*(_QWORD *)(v1 + 88))
  {
    v31 = Logger.logObject.getter(v17);
    v32 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v31, v32))
    {
LABEL_39:

      goto LABEL_40;
    }
    v33 = (uint8_t *)swift_slowAlloc(12, -1);
    v34 = swift_slowAlloc(32, -1);
    v62 = v34;
    v35.n128_u64[0] = 136446210;
    *(_DWORD *)v33 = 136446210;
    LOBYTE(v57) = (_BYTE)osloga;
    v58 = v12;
    LOBYTE(v59) = v13 != 0;
    v60 = v54;
    v61 = v8;
    v36 = String.init<A>(describing:)(&v57, &type metadata for EmergencyModel.Emergency, v35);
    v38 = v37;
    v57 = sub_100172BEC(v36, v37, &v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v33 + 4, v33 + 12);
    swift_bridgeObjectRelease(v38);
    v39 = "Questionnaire state is not defined for: %{public}s";
LABEL_38:
    _os_log_impl((void *)&_mh_execute_header, v31, v32, v39, v33, 0xCu);
    swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1, -1);
    swift_slowDealloc(v33, -1, -1);
    goto LABEL_39;
  }
LABEL_40:
  v45 = *(_QWORD *)(v1 + 152) != 1 && *(_QWORD *)(v1 + 144) >> 60 != 15;
  if (*(_BYTE *)(v1 + 128) == 3 || *v53 > 1u)
  {
    v46 = 0;
  }
  else
  {
    v46 = *(_QWORD *)(v1 + 88);
    swift_retain(v46);
  }
  v57 = v54;
  LOBYTE(v58) = (_BYTE)osloga;
  BYTE1(v58) = v45;
  v59 = v46;
  v47 = PassthroughSubject.send(_:)(&v57);
  v48 = Logger.logObject.getter(v47);
  v49 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v48, v49))
  {
    v50 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v50 = 0;
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "Requested starting emergency thread", v50, 2u);
    swift_slowDealloc(v50, -1, -1);
  }

  swift_release(v46);
}

uint64_t sub_100232980(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v9, 0, 0);
  result = swift_weakLoadStrong(v5);
  if (result)
  {
    v7 = result;
    v8 = *(_QWORD *)(result + 88);
    swift_retain(v8);
    result = swift_release(v7);
    if (v8)
    {
      sub_1000AC1E8(a2, a3);
      return swift_release(v8);
    }
  }
  return result;
}

void sub_100232A08(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_100232A54()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t))((char *)sub_100232AB4 + 4 * byte_10025FAB2[*v0]))(1954047348);
}

BOOL sub_100232AB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  _BOOL8 result;
  char v7;

  if (a1 == 1954047348 && v3 == v4)
  {
    swift_bridgeObjectRelease_n(v3, 2);
  }
  else
  {
    v5 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v3, 1954047348, v4, 0);
    swift_bridgeObjectRelease(v3);
    swift_bridgeObjectRelease(v4);
    result = 0;
    if ((v5 & 1) == 0)
      return result;
  }
  v7 = *(_BYTE *)(v2 + 16);
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    if (!*(_BYTE *)(v2 + 16))
      return 0;
  }
  else
  {
    if (*(_QWORD *)(v1 + 8) != *(_QWORD *)(v2 + 8))
      v7 = 1;
    if ((v7 & 1) != 0)
      return 0;
  }
  return *(_QWORD *)(v1 + 24) == *(_QWORD *)(v2 + 24) && *(unsigned __int8 *)(v1 + 32) == *(unsigned __int8 *)(v2 + 32);
}

double sub_100232BB4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  double result;

  if (a3 != 1)
  {
    sub_10000D730(a1, a2);
    *(_QWORD *)&result = swift_bridgeObjectRelease(a3).n128_u64[0];
  }
  return result;
}

uint64_t sub_100232BE4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100232C0C()
{
  uint64_t *v0;

  sub_1002309F8(v0[2], v0[3], v0[4]);
}

double sub_100232C18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_100232C28(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100232C30()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_release(v0[5]);
  swift_bridgeObjectRelease(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100232C6C()
{
  uint64_t v0;

  return sub_100231324(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 56));
}

uint64_t sub_100232C7C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100232CA0()
{
  uint64_t v0;

  return sub_1002320DC(v0);
}

uint64_t sub_100232CA8()
{
  uint64_t v0;

  return sub_100230018(v0);
}

uint64_t sub_100232CB4()
{
  uint64_t v0;

  return sub_100232980(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_100232CC4()
{
  uint64_t v0;

  return sub_10022F578(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

double sub_100232CD0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  double result;

  if (a3 != 1)
  {
    sub_10000D71C(a1, a2);
    *(_QWORD *)&result = swift_bridgeObjectRetain(a3).n128_u64[0];
  }
  return result;
}

uint64_t sub_100232D00(uint64_t *a1)
{
  uint64_t v1;

  return sub_10022CE08(a1, v1);
}

uint64_t storeEnumTagSinglePayload for EmergencyModel.ConversationState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100232D54 + 4 * byte_10025FABB[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100232D88 + 4 * byte_10025FAB6[v4]))();
}

uint64_t sub_100232D88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100232D90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100232D98);
  return result;
}

uint64_t sub_100232DA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100232DACLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100232DB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100232DB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EmergencyModel.ConversationState()
{
  return &type metadata for EmergencyModel.ConversationState;
}

ValueMetadata *type metadata accessor for EmergencyModel.Conversation()
{
  return &type metadata for EmergencyModel.Conversation;
}

unint64_t sub_100232DE8()
{
  unint64_t result;

  result = qword_10032A9F0;
  if (!qword_10032A9F0)
  {
    result = swift_getWitnessTable(&unk_10025FC48, &type metadata for EmergencyModel.ConversationState);
    atomic_store(result, (unint64_t *)&qword_10032A9F0);
  }
  return result;
}

uint64_t destroy for ExplorerConnectionAssistantBannerView(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[2]);
  swift_release(a1[4]);
  swift_release(a1[6]);
  swift_release(a1[8]);
  swift_release(a1[10]);
  return swift_release(a1[12]);
}

uint64_t initializeWithCopy for ExplorerConnectionAssistantBannerView(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v6 = a2[2];
  v5 = a2[3];
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v5;
  v8 = a2[4];
  v7 = a2[5];
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v7;
  v10 = a2[6];
  v9 = a2[7];
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v9;
  v12 = a2[8];
  v11 = a2[9];
  *(_QWORD *)(a1 + 64) = v12;
  *(_QWORD *)(a1 + 72) = v11;
  v14 = a2[10];
  v13 = a2[11];
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v13;
  v16 = a2[12];
  v15 = a2[13];
  *(_QWORD *)(a1 + 96) = v16;
  *(_QWORD *)(a1 + 104) = v15;
  v17 = *((_OWORD *)a2 + 8);
  *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
  *(_OWORD *)(a1 + 128) = v17;
  swift_retain(v3);
  swift_retain(v6);
  swift_retain(v8);
  swift_retain(v10);
  swift_retain(v12);
  swift_retain(v14);
  swift_retain(v16);
  return a1;
}

uint64_t *assignWithCopy for ExplorerConnectionAssistantBannerView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *a1;
  v5 = *a2;
  *a1 = *a2;
  swift_retain(v5);
  swift_release(v4);
  a1[1] = a2[1];
  v6 = a1[2];
  v7 = a2[2];
  a1[2] = v7;
  swift_retain(v7);
  swift_release(v6);
  a1[3] = a2[3];
  v8 = a1[4];
  v9 = a2[4];
  a1[4] = v9;
  swift_retain(v9);
  swift_release(v8);
  a1[5] = a2[5];
  v10 = a1[6];
  v11 = a2[6];
  a1[6] = v11;
  swift_retain(v11);
  swift_release(v10);
  a1[7] = a2[7];
  v12 = a1[8];
  v13 = a2[8];
  a1[8] = v13;
  swift_retain(v13);
  swift_release(v12);
  a1[9] = a2[9];
  v14 = a1[10];
  v15 = a2[10];
  a1[10] = v15;
  swift_retain(v15);
  swift_release(v14);
  a1[11] = a2[11];
  v16 = a1[12];
  v17 = a2[12];
  a1[12] = v17;
  swift_retain(v17);
  swift_release(v16);
  a1[13] = a2[13];
  a1[14] = a2[14];
  a1[15] = a2[15];
  a1[16] = a2[16];
  a1[17] = a2[17];
  return a1;
}

uint64_t *assignWithTake for ExplorerConnectionAssistantBannerView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  v5 = a1[2];
  v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_release(v5);
  v7 = a1[4];
  v8 = a2[4];
  a1[3] = a2[3];
  a1[4] = v8;
  swift_release(v7);
  v9 = a1[6];
  v10 = a2[6];
  a1[5] = a2[5];
  a1[6] = v10;
  swift_release(v9);
  v11 = a1[8];
  v12 = a2[8];
  a1[7] = a2[7];
  a1[8] = v12;
  swift_release(v11);
  v13 = a1[10];
  v14 = a2[10];
  a1[9] = a2[9];
  a1[10] = v14;
  swift_release(v13);
  v15 = a1[12];
  v16 = a2[12];
  a1[11] = a2[11];
  a1[12] = v16;
  swift_release(v15);
  a1[13] = a2[13];
  v17 = *((_OWORD *)a2 + 8);
  *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
  *((_OWORD *)a1 + 8) = v17;
  return a1;
}

uint64_t getEnumTagSinglePayload for ExplorerConnectionAssistantBannerView(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 144))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ExplorerConnectionAssistantBannerView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 144) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 144) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ExplorerConnectionAssistantBannerView()
{
  return &type metadata for ExplorerConnectionAssistantBannerView;
}

uint64_t sub_100233204()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int v16;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  unint64_t *v26;
  uint64_t v27;
  _BYTE v29[24];

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  v5 = &v29[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = sub_100003DB8(&qword_10031B548);
  __chkstk_darwin(v6, v7);
  v9 = &v29[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = type metadata accessor for TimeZone(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  v14 = &v29[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (!*v0)
  {
    v23 = v0[1];
    v24 = type metadata accessor for ConnectivityModel();
    v25 = (uint64_t (*)(uint64_t))type metadata accessor for ConnectivityModel;
    v26 = &qword_100316B00;
LABEL_22:
    v27 = sub_100056D60(v26, v25);
    result = EnvironmentObject.error()(0, v23, v24, v27);
    __break(1u);
    return result;
  }
  v15 = v0[2];
  if (!*(_QWORD *)(*v0 + 80))
  {
    if (v15)
    {
LABEL_13:
      if ((*(_BYTE *)(v15 + 72) & 1) != 0)
        return 0;
      else
        return *(_QWORD *)(v15 + 56);
    }
    goto LABEL_20;
  }
  if (!v15)
  {
LABEL_20:
    v23 = v0[3];
    v24 = type metadata accessor for GeoLocationModel();
    v25 = (uint64_t (*)(uint64_t))type metadata accessor for GeoLocationModel;
    v26 = &qword_10031CD28;
    goto LABEL_22;
  }
  v16 = *(unsigned __int8 *)(v15 + 48);
  if (v16 == 2 || (v16 & 1) != 0)
    goto LABEL_13;
  v18 = v0[10];
  if (!v18)
  {
    v23 = v0[11];
    v24 = type metadata accessor for TimeZoneModel(0);
    v25 = type metadata accessor for TimeZoneModel;
    v26 = &qword_10031CD30;
    goto LABEL_22;
  }
  v19 = v18 + OBJC_IVAR____TtC8SOSBuddy13TimeZoneModel__timeZone;
  swift_beginAccess(v18 + OBJC_IVAR____TtC8SOSBuddy13TimeZoneModel__timeZone, v29, 0, 0);
  sub_10007A178(v19, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    v20 = swift_retain(v18);
    static TimeZone.autoupdatingCurrent.getter(v20);
    v21 = sub_1001E3534((uint64_t)v9);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v9, v10);
    swift_retain(v18);
  }
  Date.init()(v21);
  TimeZone.secondsFromGMT(for:)(v5);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  swift_release(v18);
  return 0x4051800000000000;
}

uint64_t sub_1002334E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = type metadata accessor for GeoLocationModel.LocationAssertion();
    swift_allocObject(v2, 40, 7);
    swift_retain(v1);
    v4 = sub_100016B6C(v3, 0x72656E6E6142, 0xE600000000000000);
    swift_release(v1);
    return v4;
  }
  else
  {
    v6 = *(_QWORD *)(a1 + 24);
    v7 = type metadata accessor for GeoLocationModel();
    v8 = sub_100056D60(&qword_10031CD28, (uint64_t (*)(uint64_t))type metadata accessor for GeoLocationModel);
    result = EnvironmentObject.error()(0, v6, v7, v8);
    __break(1u);
  }
  return result;
}

_QWORD *sub_100233584(uint64_t a1, CGFloat *a2)
{
  _QWORD v3[14];

  sub_100068DE0(a2[14], a2[15], a2[16], a2[17]);
  sub_1002335E4((uint64_t)v3);
  sub_100069664((char *)v3);
  return sub_10006A744(v3);
}

uint64_t sub_1002335E4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t result;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)();
  unint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  void *v51;
  char v52;
  BOOL v53;
  char v54;
  char v55;
  uint64_t v56;
  char v57;
  uint64_t v58;

  v2 = v1;
  v3 = *v1;
  if (v3)
  {
    v5 = *(_QWORD *)(v3 + 80);
    if (v5)
    {
      v6 = *(_QWORD *)(v3 + 72);
      v7 = sub_100003DB8(&qword_100317970);
      v8 = swift_allocObject(v7, 72, 7);
      *(_OWORD *)(v8 + 16) = xmmword_10024E070;
      *(_QWORD *)(v8 + 56) = &type metadata for String;
      *(_QWORD *)(v8 + 64) = sub_10001CAF4();
      *(_QWORD *)(v8 + 32) = v6;
      *(_QWORD *)(v8 + 40) = v5;
      swift_bridgeObjectRetain(v5);
      v9 = String.init(format:_:)(16421, 0xE200000000000000);
      v11 = v2[8];
      if (v11)
      {
        v56 = v9;
        v58 = v10;
        if (*(_QWORD *)(v11 + 64))
          v53 = sub_100067058(3u, *(_QWORD *)(v11 + 88));
        else
          v53 = 0;
        v21 = 0;
        v22 = 0;
        v23 = 0;
        v24 = 0;
        v25 = 0;
        v26 = 0;
        v27 = 0;
        v54 = 0;
        v52 = 1;
        v28 = &_swiftEmptySetSingleton;
LABEL_28:
        result = sub_100233204();
        *(_BYTE *)a1 = 1;
        *(_QWORD *)(a1 + 8) = v28;
        *(_BYTE *)(a1 + 16) = v21;
        *(_BYTE *)(a1 + 17) = v52;
        *(_BYTE *)(a1 + 18) = v22;
        *(_QWORD *)(a1 + 24) = v56;
        *(_QWORD *)(a1 + 32) = v58;
        *(_QWORD *)(a1 + 40) = v23;
        *(_QWORD *)(a1 + 48) = v24;
        *(_QWORD *)(a1 + 56) = v25;
        *(_QWORD *)(a1 + 64) = v26;
        *(_QWORD *)(a1 + 72) = v27;
        *(_BYTE *)(a1 + 80) = v54;
        *(_BYTE *)(a1 + 81) = v53;
        *(_QWORD *)(a1 + 88) = result;
        *(_QWORD *)(a1 + 96) = v42;
        *(_BYTE *)(a1 + 104) = v43;
        return result;
      }
      goto LABEL_31;
    }
    v12 = v2[8];
    if (!v12)
    {
LABEL_31:
      v44 = v2[9];
      v45 = type metadata accessor for StewieModel();
      v46 = type metadata accessor for StewieModel;
      v47 = &qword_1003186E0;
      goto LABEL_34;
    }
    v13 = v2[6];
    if (*(_QWORD *)(v12 + 64))
    {
      if (v13)
      {
        v14 = *(void **)(v13 + 200);
        if (!*(_QWORD *)(*(_QWORD *)(v12 + 88) + 16))
        {
          v15 = *(_BYTE *)(v3 + 57);
          v51 = *(void **)(v13 + 200);
          swift_bridgeObjectRetain(v14);
          v16 = 0;
          v49 = 0;
          v17 = 0;
          v18 = 0;
          v19 = 0;
          v58 = 0;
          v50 = 2;
          v20 = 9;
          goto LABEL_20;
        }
LABEL_15:
        v55 = *(_BYTE *)(v3 + 57);
        v57 = *(_BYTE *)(*(_QWORD *)(v3 + 48) + 120);
        v29 = *(_BYTE *)(v3 + 56);
        swift_bridgeObjectRetain(v14);
        swift_retain(v3);
        sub_1001BFA30();
        v31 = v30;
        v19 = v32;
        v34 = v33;
        swift_release(v3);
        swift_bridgeObjectRelease(v31);
        v35 = v2[4];
        if (!v35)
        {
          v44 = v2[5];
          v45 = type metadata accessor for GuidanceMessagesModel();
          v46 = type metadata accessor for GuidanceMessagesModel;
          v47 = &qword_1003195D8;
          goto LABEL_34;
        }
        v36 = *(_QWORD *)(v35 + 48);
        v58 = v34;
        v51 = v14;
        v50 = v29;
        if (v36)
        {
          v37 = *(_QWORD *)(v36 + 32);
          v18 = *(_QWORD *)(v36 + 40);
          swift_bridgeObjectRetain(v18);
        }
        else
        {
          v37 = 0;
          v18 = 0xE000000000000000;
        }
        swift_retain(v35);
        sub_1001BF7E0();
        v16 = v38;
        v49 = v39;
        swift_release(v35);
        v15 = v55;
        v20 = v57;
        v17 = v37;
LABEL_20:
        v56 = v19;
        if ((*(_BYTE *)(v13 + 80) & 1) != 0 || (*(_BYTE *)(v13 + 66) & 1) != 0 || (*(_BYTE *)(v13 + 192) & 1) != 0)
        {
          v27 = 0;
          v40 = 1;
        }
        else
        {
          v40 = 0;
          v27 = *(_QWORD *)(v13 + 168);
        }
        v54 = v40;
        v24 = v18;
        v21 = v20;
        v25 = v16;
        v23 = v17;
        if (*(_QWORD *)(v12 + 64))
          v53 = sub_100067058(3u, *(_QWORD *)(v12 + 88));
        else
          v53 = 0;
        v52 = v15 ^ 1;
        v28 = v51;
        v22 = v50;
        v26 = v49;
        goto LABEL_28;
      }
    }
    else if (v13)
    {
      v14 = *(void **)(v13 + 200);
      goto LABEL_15;
    }
    v44 = v2[7];
    v45 = type metadata accessor for GuidanceModel();
    v46 = type metadata accessor for GuidanceModel;
    v47 = &qword_100316B08;
    goto LABEL_34;
  }
  v44 = v2[1];
  v45 = type metadata accessor for ConnectivityModel();
  v46 = type metadata accessor for ConnectivityModel;
  v47 = &qword_100316B00;
LABEL_34:
  v48 = sub_100056D60(v47, (uint64_t (*)(uint64_t))v46);
  result = EnvironmentObject.error()(0, v44, v45, v48);
  __break(1u);
  return result;
}

uint64_t sub_100233984()
{
  __int128 *v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  unsigned __int8 v21[8];
  unint64_t v22;
  uint64_t v23;
  char v24;
  int64x2_t v25;
  unint64_t v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  __int128 v33;
  _OWORD v34[5];
  _OWORD v35[2];
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;

  v1 = v0[7];
  v42 = v0[6];
  v43 = v1;
  v44 = v0[8];
  v2 = v0[3];
  v38 = v0[2];
  v39 = v2;
  v3 = v0[5];
  v40 = v0[4];
  v41 = v3;
  v4 = v0[1];
  v36 = *v0;
  v37 = v4;
  v25 = vdupq_n_s64(0xC053000000000000);
  v34[3] = unk_100317048;
  v34[4] = xmmword_100317058;
  v35[0] = unk_100317068;
  *(_OWORD *)((char *)v35 + 9) = unk_100317071;
  v33 = xmmword_10024D530;
  v34[0] = xmmword_100317018;
  v21[0] = 1;
  v22 = 0xC04E000000000000;
  v23 = 0;
  v24 = 1;
  v26 = 0xC053000000000000;
  v27 = 0;
  v28 = 1;
  v29 = 0xC010000000000000;
  v30 = 0;
  v31 = 0xC010000000000000;
  v32 = 0;
  v34[1] = unk_100317028;
  v34[2] = xmmword_100317038;
  v5 = sub_100233204();
  v7 = v6;
  v9 = v8;
  v10 = (_OWORD *)swift_allocObject(&unk_1002FBC18, 160, 7);
  v11 = v43;
  v10[7] = v42;
  v10[8] = v11;
  v10[9] = v44;
  v12 = v39;
  v10[3] = v38;
  v10[4] = v12;
  v13 = v41;
  v10[5] = v40;
  v10[6] = v13;
  v14 = v37;
  v10[1] = v36;
  v10[2] = v14;
  v15 = (_OWORD *)swift_allocObject(&unk_1002FBC40, 160, 7);
  v16 = v43;
  v15[7] = v42;
  v15[8] = v16;
  v15[9] = v44;
  v17 = v39;
  v15[3] = v38;
  v15[4] = v17;
  v18 = v41;
  v15[5] = v40;
  v15[6] = v18;
  v19 = v37;
  v15[1] = v36;
  v15[2] = v19;
  objc_allocWithZone((Class)type metadata accessor for ConnectionAssistantViewController());
  sub_100233D50((uint64_t *)&v36);
  sub_100233D50((uint64_t *)&v36);
  return sub_100067668(v21, v34, v5, v7, v9, (uint64_t)sub_100233CE8, (uint64_t)v10, (uint64_t)sub_100233D48, (uint64_t)v15);
}

_QWORD *sub_100233B40()
{
  __int128 *v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  _QWORD v6[14];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v1 = v0[7];
  v13 = v0[6];
  v14 = v1;
  v15 = v0[8];
  v2 = v0[3];
  v9 = v0[2];
  v10 = v2;
  v3 = v0[5];
  v11 = v0[4];
  v12 = v3;
  v4 = v0[1];
  v7 = *v0;
  v8 = v4;
  sub_100068DE0(*(CGFloat *)&v14, *((CGFloat *)&v14 + 1), *(CGFloat *)&v15, *((CGFloat *)&v15 + 1));
  sub_1002335E4((uint64_t)v6);
  sub_100069664((char *)v6);
  return sub_10006A744(v6);
}

uint64_t sub_100233BC4(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) != 0)
    return 0;
  return result;
}

uint64_t sub_100233BDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100233CA0();
  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100233C2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100233CA0();
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100233C7C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100233CA0();
  UIViewControllerRepresentable.body.getter(a1, v2);
  __break(1u);
}

unint64_t sub_100233CA0()
{
  unint64_t result;

  result = qword_10032A9F8;
  if (!qword_10032A9F8)
  {
    result = swift_getWitnessTable(&unk_10025FC98, &type metadata for ExplorerConnectionAssistantBannerView);
    atomic_store(result, (unint64_t *)&qword_10032A9F8);
  }
  return result;
}

uint64_t sub_100233CE8()
{
  uint64_t v0;

  return sub_1002334E4(v0 + 16);
}

uint64_t sub_100233CF4()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[6]);
  swift_release(v0[8]);
  swift_release(v0[10]);
  swift_release(v0[12]);
  swift_release(v0[14]);
  return swift_deallocObject(v0, 160, 7);
}

_QWORD *sub_100233D48(uint64_t a1)
{
  uint64_t v1;

  return sub_100233584(a1, (CGFloat *)(v1 + 16));
}

uint64_t *sub_100233D50(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1;
  v3 = a1[2];
  v4 = a1[4];
  v5 = a1[6];
  v6 = a1[8];
  v7 = a1[10];
  swift_retain(a1[12]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  return a1;
}

uint64_t ConnectionAssistantLocationDotRenderer.init(device:buffers:renderPipelines:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  result = sub_100234138(a1, a2, a3);
  if (v3)
    return v5;
  return result;
}

void ConnectionAssistantLocationDotRenderer.render(dot:parameters:camera:destination:renderCommandEncoder:)(uint64_t a1, float32x2_t *a2, void *a3, void *a4, uint64_t a5, __n128 a6, uint64_t a7, void *a8)
{
  uint64_t v12;
  __int32 v13;
  float32x2_t v14;
  uint64_t v15;
  float32x2_t v16;
  __int32 v17;
  float32x2_t v18;
  __int32 v19;
  float32x4_t v20;
  float32x2_t v21;
  float32x2_t v22;
  float32x4_t v23;
  float32x4_t v24;
  float v25;
  float v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  float v30;
  float32_t v31;
  float32x2_t *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  __int32 v36;
  NSString v37;
  int32x2_t v38;
  int32x2_t v39;
  float32x2_t v40;
  float32x2_t v41;
  float32x2_t v42;
  id v43;
  id v44;
  float32x2_t v45;
  float v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  _QWORD v54[4];

  v12 = ConnectionAssistantLocationDot.project(from:camera:)((uint64_t)a2, a6);
  if ((v15 & 0x100000000) == 0)
  {
    v16 = (float32x2_t)v12;
    v17 = v13;
    v18 = v14;
    v19 = v15;
    v20 = vmulq_f32(*(float32x4_t *)a1, *(float32x4_t *)a1);
    v20.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32((int32x4_t)v20, 2), vadd_f32(*(float32x2_t *)v20.f32, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v20.f32, 1))).u32[0];
    v21 = vrsqrte_f32((float32x2_t)v20.u32[0]);
    v22 = vmul_f32(v21, vrsqrts_f32((float32x2_t)v20.u32[0], vmul_f32(v21, v21)));
    v23 = vmulq_n_f32(*(float32x4_t *)a1, vmul_f32(v22, vrsqrts_f32((float32x2_t)v20.u32[0], vmul_f32(v22, v22))).f32[0]);
    *(float32x2_t *)v20.f32 = vsub_f32(0, a2[10]);
    v20.f32[2] = 0.0 - a2[11].f32[0];
    v24 = vmulq_f32(v23, v20);
    v25 = 1.0;
    v24.f32[0] = fminf(fmaxf((float)(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v24, 2), vaddq_f32(v24, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v24.f32, 1))).f32[0]+ 0.05)/ 0.1, 0.0), 1.0);
    v26 = (float)(v24.f32[0] * v24.f32[0]) * (float)((float)(v24.f32[0] * -2.0) + 3.0);
    v27 = (uint64_t)*a2;
    *(float32x2_t *)v24.f32 = a2[2];
    v28 = (uint64_t)*a2;
    v29 = (uint64_t)a2[1];
    v30 = ConnectionAssistantCamera.Viewport.normalizedPointSize.getter(v28, v29, *(double *)v24.i64);
    v50 = *(_OWORD *)(a1 + 32);
    v51 = *(_OWORD *)(a1 + 48);
    v31 = *(float *)(a1 + 64) * v26;
    v32 = (float32x2_t *)objc_msgSend((id)swift_unknownObjectRetain(a8), "contents");
    v33 = a8;
    v32->f32[0] = v30;
    *(_OWORD *)v32[2].f32 = v50;
    v32[4] = v16;
    v32[5].i32[0] = v17;
    *(_OWORD *)v32[6].f32 = v51;
    v32[8] = v18;
    v32[9].i32[0] = v19;
    v32[9].f32[1] = v31;
    v34 = sub_10022634C(4);
    if (v34)
    {
      v35 = v34;
      v36 = v19;
      v37 = String._bridgeToObjectiveC()();
      objc_msgSend(a4, "setLabel:", v37);

      objc_msgSend(a4, "setRenderPipelineState:", v35);
      v38.i32[0] = v17;
      v39.i32[0] = v36;
      v40 = ConnectionAssistantLocationDot.Projection.boundingBox.getter(v16, v38, v18, v39);
      v42 = v41;
      v43 = objc_msgSend(a3, "width");
      v44 = objc_msgSend(a3, "height");
      v45.i32[0] = 1.0;
      if (v27)
      {
        if (v29)
        {
          v46 = (float)v27 / (float)v29;
          v25 = fminf(v46, 1.0);
          v45.f32[0] = fmaxf(v46, 1.0);
        }
      }
      v45.f32[1] = 1.0 / v25;
      v54[0] = sub_100106E90((uint64_t)v43, (uint64_t)v44, v40, v42, v45);
      v54[1] = v47;
      v54[2] = v48;
      v54[3] = v49;
      objc_msgSend(a4, "setScissorRect:", v54);
      objc_msgSend(a4, "setVertexBuffer:offset:atIndex:", *(_QWORD *)(a5 + 24), 0, 0);
      objc_msgSend(a4, "setVertexBuffer:offset:atIndex:", *(_QWORD *)(a5 + 32), 0, 1);
      objc_msgSend(a4, "setFragmentBuffer:offset:atIndex:", v33, 0, 0);
      objc_msgSend(a4, "drawPrimitives:vertexStart:vertexCount:", 4, 0, 4);
      swift_unknownObjectRelease(v35);
    }
  }
}

uint64_t sub_100234138(void *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;

  swift_retain(a2);
  if (objc_msgSend(a1, "newBufferWithLength:options:", 80, 1, swift_retain(a3).n128_f64[0]))
  {
    swift_unknownObjectRelease(a1);
    swift_release(a3);
    swift_release(a2);
  }
  else
  {
    v6 = sub_10001D534();
    v7 = swift_allocError(&type metadata for ConnectionAssistantRenderer.Buffers.Error, v6, 0, 0);
    swift_willThrow(v7);
    swift_release_n(a2);
    swift_release_n(a3);
    swift_unknownObjectRelease(a1);
  }
  return a2;
}

ValueMetadata *type metadata accessor for ConnectionAssistantLocationDotRenderer()
{
  return &type metadata for ConnectionAssistantLocationDotRenderer;
}

ValueMetadata *type metadata accessor for ConnectionAssistantLocationDotRenderer.Parameters()
{
  return &type metadata for ConnectionAssistantLocationDotRenderer.Parameters;
}

ValueMetadata *type metadata accessor for ShowFindMyButtonView()
{
  return &type metadata for ShowFindMyButtonView;
}

uint64_t sub_100234244(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1002A1118, 1);
}

uint64_t sub_100234254@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  unint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  double v66;
  _QWORD *v67;
  double v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  _OWORD *v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t result;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD v117[3];
  uint64_t v118;
  _OWORD v119[7];

  v99 = a4;
  v94 = a2;
  v95 = a1;
  v116 = a5;
  v112 = type metadata accessor for KeyboardShortcut(0);
  v111 = *(_QWORD *)(v112 - 8);
  __chkstk_darwin(v112, v6);
  v110 = (char *)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = type metadata accessor for ButtonBorderShape(0);
  v107 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109, v8);
  v10 = (char *)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for BorderedButtonStyle(0);
  v98 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100, v11);
  v13 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = sub_100003DB8(&qword_10032AA00);
  v96 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97, v14);
  v16 = (char *)&v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_100003DB8(&qword_10032AA08);
  v101 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103, v17);
  v19 = (char *)&v94 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_100003DB8(&qword_10032AA10);
  __chkstk_darwin(v102, v20);
  v22 = (char *)&v94 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_100003DB8(&qword_10032AA18);
  v105 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106, v23);
  v25 = (char *)&v94 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_100003DB8(&qword_10032AA20);
  __chkstk_darwin(v104, v26);
  v108 = (char *)&v94 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_100003DB8(&qword_10032AA28);
  __chkstk_darwin(v114, v28);
  v115 = (uint64_t)&v94 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_100003DB8(&qword_10032AA30);
  __chkstk_darwin(v30, v31);
  v113 = (char *)&v94 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    v33 = a3[9];
    v34 = a3[10];
    sub_100007BBC(a3 + 6, v33);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v34 + 32))(v117, v33, v34);
    v35 = (_QWORD *)swift_allocObject(&unk_1002FBE30, 48, 7);
    v36 = v95;
    v37 = v94;
    v35[2] = v95;
    v35[3] = v37;
    v38 = v99;
    v35[4] = a3;
    v35[5] = v38;
    v39 = sub_100234BCC();
    swift_retain(v36);
    swift_retain(a3);
    v40 = Button.init(action:label:)(sub_100234BC0, v35, sub_10011A0E4, 0, &type metadata for ShowFindMyButtonLabelView, v39);
    BorderedButtonStyle.init()(v40);
    v41 = sub_1000084FC(&qword_10032AA40, &qword_10032AA00, (uint64_t)&protocol conformance descriptor for Button<A>);
    v42 = sub_1000052EC((unint64_t *)&qword_100319760, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedButtonStyle);
    v43 = v97;
    v44 = v100;
    View.buttonStyle<A>(_:)(v13, v97, v100, v41, v42);
    (*(void (**)(char *, uint64_t))(v98 + 8))(v13, v44);
    v45 = (*(uint64_t (**)(char *, uint64_t))(v96 + 8))(v16, v43);
    static ButtonBorderShape.capsule.getter(v45);
    KeyPath = swift_getKeyPath(&unk_10025FE18);
    v47 = v102;
    v48 = (uint64_t *)&v22[*(int *)(v102 + 36)];
    v49 = sub_100003DB8(&qword_100318968);
    v50 = v107;
    v51 = v109;
    (*(void (**)(char *, char *, uint64_t))(v107 + 16))((char *)v48 + *(int *)(v49 + 28), v10, v109);
    *v48 = KeyPath;
    v52 = v101;
    v53 = v103;
    (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v22, v19, v103);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v10, v51);
    v54 = (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v19, v53);
    v55 = v110;
    static KeyboardShortcut.defaultAction.getter(v54);
    v56 = sub_1002359D0();
    View.keyboardShortcut(_:)(v55, v47, v56);
    (*(void (**)(char *, uint64_t))(v111 + 8))(v55, v112);
    sub_100007FF0((uint64_t)v22, &qword_10032AA10);
    v58 = static Color.green.getter(v57);
    v59 = swift_getKeyPath(&unk_10025FE48);
    *(_QWORD *)&v119[0] = v58;
    v60 = swift_retain(v58);
    v61 = AnyShapeStyle.init<A>(_:)(v119, &type metadata for Color, &protocol witness table for Color, v60);
    v62 = v105;
    v63 = (uint64_t)v108;
    v64 = v106;
    (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v108, v25, v106);
    swift_release(v58);
    v65 = (uint64_t *)(v63 + *(int *)(v104 + 36));
    *v65 = v59;
    v65[1] = v61;
    (*(void (**)(char *, uint64_t))(v62 + 8))(v25, v64);
    v66 = *(double *)(*sub_100007BBC(v117, v118) + 216);
    v67 = sub_100007BBC(v117, v118);
    v68 = *(double *)(*v67 + 216);
    v69 = static Alignment.center.getter(v67);
    v72 = v71;
    if (v66 > v68)
    {
      v73 = static os_log_type_t.fault.getter(v70);
      v74 = (void *)static Log.runtimeIssuesLog.getter();
      os_log(_:dso:log:_:_:)(v73, &_mh_execute_header, v74, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    }
    _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v119, *(_QWORD *)&v66, 0, 0, 1, *(_QWORD *)&v68, 0, 0, 1, 0, 1, 0, 1, v69, v72);
    v75 = v115;
    sub_10000B234(v63, v115, &qword_10032AA20);
    v76 = v114;
    v77 = (_OWORD *)(v75 + *(int *)(v114 + 36));
    v78 = v119[5];
    v77[4] = v119[4];
    v77[5] = v78;
    v77[6] = v119[6];
    v79 = v119[1];
    *v77 = v119[0];
    v77[1] = v79;
    v80 = v119[3];
    v77[2] = v119[2];
    v77[3] = v80;
    sub_100007FF0(v63, &qword_10032AA20);
    v81 = LocalizedStringKey.init(stringLiteral:)(0x6E694620776F6853, 0xEC000000794D2064);
    v82 = Text.init(_:tableName:bundle:comment:)(v81);
    v84 = v83;
    v86 = v85;
    v88 = v87 & 1;
    v89 = sub_100235AE0();
    v90 = (uint64_t)v113;
    View.accessibility(label:)(v82, v84, v88, v86, v76, v89);
    sub_10002B438(v82, v84, v88);
    swift_bridgeObjectRelease(v86);
    sub_100007FF0(v75, &qword_10032AA28);
    sub_10000B458(v90, v116, &qword_10032AA30);
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v117);
  }
  else
  {
    v92 = type metadata accessor for UIMetrics();
    v93 = sub_1000052EC((unint64_t *)&qword_100316A00, (uint64_t (*)(uint64_t))type metadata accessor for UIMetrics, (uint64_t)&unk_10024D2FC);
    result = EnvironmentObject.error()(0, v99, v92, v93);
    __break(1u);
  }
  return result;
}

uint64_t sub_100234AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  char v11;

  if (a1)
  {
    v3 = *(_QWORD *)(a1 + 168);
    v11 = 0;
    swift_retain(v3);
    PassthroughSubject.send(_:)(&v11);
    swift_release(v3);
    v4 = *(_QWORD *)(a1 + 80);
    swift_retain(v4);
    v5 = sub_100003DB8(&qword_10032B0E0);
    v6 = sub_1000084FC((unint64_t *)&qword_100317750, &qword_10032B0E0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
    Subject<>.send()(v5, v6);
    return swift_release(v4);
  }
  else
  {
    v9 = type metadata accessor for AppEvents();
    v10 = sub_1000052EC((unint64_t *)&qword_100316A10, (uint64_t (*)(uint64_t))type metadata accessor for AppEvents, (uint64_t)&unk_100254EA8);
    result = EnvironmentObject.error()(0, a2, v9, v10);
    __break(1u);
  }
  return result;
}

uint64_t sub_100234B88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100234254(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_100234B94()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100234BC0()
{
  uint64_t v0;

  return sub_100234AAC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_100234BCC()
{
  unint64_t result;

  result = qword_10032AA38;
  if (!qword_10032AA38)
  {
    result = swift_getWitnessTable(&unk_10025FE9C, &type metadata for ShowFindMyButtonLabelView);
    atomic_store(result, (unint64_t *)&qword_10032AA38);
  }
  return result;
}

uint64_t sub_100234C10@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  unint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[5];
  _OWORD v34[7];

  v6 = sub_100003DB8(&qword_100320650);
  __chkstk_darwin(v6, v7);
  v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100003DB8(&qword_100320658);
  __chkstk_darwin(v10, v11);
  v13 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100003DB8(&qword_100320660);
  __chkstk_darwin(v14, v15);
  v17 = (char *)v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v18 = a1[9];
    v19 = a1[10];
    sub_100007BBC(a1 + 6, v18);
    v20 = (*(_QWORD *(**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v19 + 32))(v33, v18, v19);
    *(_QWORD *)v9 = static VerticalAlignment.center.getter(v20);
    *((_QWORD *)v9 + 1) = 0;
    v9[16] = 1;
    v21 = sub_100003DB8(&qword_100320668);
    v22 = sub_100234E90((uint64_t)a1, a2, &v9[*(int *)(v21 + 44)]);
    v23 = static Alignment.center.getter(v22);
    _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v34, 0, 1, 0, 1, 0x7FF0000000000000, 0, 0x4042000000000000, 0, 0, 1, 0, 1, v23, v24);
    sub_10000B234((uint64_t)v9, (uint64_t)v13, &qword_100320650);
    v25 = &v13[*(int *)(v10 + 36)];
    v26 = v34[5];
    *((_OWORD *)v25 + 4) = v34[4];
    *((_OWORD *)v25 + 5) = v26;
    *((_OWORD *)v25 + 6) = v34[6];
    v27 = v34[1];
    *(_OWORD *)v25 = v34[0];
    *((_OWORD *)v25 + 1) = v27;
    v28 = v34[3];
    *((_OWORD *)v25 + 2) = v34[2];
    *((_OWORD *)v25 + 3) = v28;
    sub_100007FF0((uint64_t)v9, &qword_100320650);
    v29 = sub_10011B1CC();
    View.accessibility(hidden:)(1, v10, v29);
    sub_100007FF0((uint64_t)v13, &qword_100320658);
    sub_10000B458((uint64_t)v17, a3, &qword_100320660);
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v33);
  }
  else
  {
    v31 = type metadata accessor for UIMetrics();
    v32 = sub_1000052EC((unint64_t *)&qword_100316A00, (uint64_t (*)(uint64_t))type metadata accessor for UIMetrics, (uint64_t)&unk_10024D2FC);
    result = EnvironmentObject.error()(0, a2, v31, v32);
    __break(1u);
  }
  return result;
}

uint64_t sub_100234E90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  char v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t KeyPath;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  __n128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  UIContentSizeCategory v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _OWORD *v114;
  __int128 v115;
  id v116;
  double v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  int *v126;
  char *v127;
  uint64_t result;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  UIContentSizeCategory v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  char v160;

  v148 = a3;
  v136 = sub_100003DB8(&qword_100316A20);
  __chkstk_darwin(v136, v5);
  v154 = (char *)&v131 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = sub_100003DB8(&qword_100320680);
  v140 = *(_QWORD *)(v141 - 8);
  __chkstk_darwin(v141, v7);
  v138 = (char *)&v131 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = sub_100003DB8(&qword_100320688);
  __chkstk_darwin(v137, v9);
  v142 = (char *)&v131 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = sub_100003DB8(&qword_100320690);
  __chkstk_darwin(v139, v11);
  v145 = (uint64_t)&v131 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = sub_100003DB8(&qword_100320698);
  __chkstk_darwin(v144, v13);
  v147 = (uint64_t)&v131 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  v143 = (uint64_t)&v131 - v17;
  __chkstk_darwin(v18, v19);
  v146 = (uint64_t)&v131 - v20;
  v21 = type metadata accessor for Font.Leading(0);
  v151 = *(_QWORD *)(v21 - 8);
  v152 = v21;
  __chkstk_darwin(v21, v22);
  v24 = (char *)&v131 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = sub_100003DB8(&qword_10031A218);
  __chkstk_darwin(v132, v25);
  v27 = (uint64_t *)((char *)&v131 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28 = type metadata accessor for Image.Scale(0);
  v29 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28, v30);
  v32 = (char *)&v131 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_100003DB8(&qword_10031A208);
  __chkstk_darwin(v33, v34);
  v36 = (uint64_t *)((char *)&v131 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  v133 = sub_100003DB8(&qword_10031A1F0);
  __chkstk_darwin(v133, v37);
  v39 = (char *)&v131 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_100003DB8(&qword_1003206A0);
  v149 = *(_QWORD *)(v40 - 8);
  v150 = v40;
  __chkstk_darwin(v40, v41);
  v134 = (uint64_t)&v131 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_100003DB8(&qword_1003206A8);
  __chkstk_darwin(v43, v44);
  v135 = (uint64_t)&v131 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46, v47);
  v156 = (uint64_t)&v131 - v48;
  if (!a1)
    goto LABEL_11;
  v155 = a1;
  v49 = *(id *)(a1 + 112);
  v153 = UIContentSizeCategoryAccessibilityExtraLarge;
  v50 = static UIContentSizeCategory.>= infix(_:_:)(v49, UIContentSizeCategoryAccessibilityExtraLarge);

  if ((v50 & 1) != 0)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v149 + 56))(v156, 1, 1, v150);
    v52 = enum case for Font.Leading.tight(_:);
    v54 = v151;
    v53 = v152;
  }
  else
  {
    v55 = Image.init(_internalSystemName:)(0x796D646E6966, 0xE600000000000000, v51);
    (*(void (**)(char *, _QWORD, uint64_t))(v29 + 104))(v32, enum case for Image.Scale.medium(_:), v28);
    KeyPath = swift_getKeyPath(&unk_10025FEF0);
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))((char *)v27 + *(int *)(v132 + 28), v32, v28);
    *v27 = KeyPath;
    sub_10000B234((uint64_t)v27, (uint64_t)v36 + *(int *)(v33 + 36), &qword_10031A218);
    *v36 = v55;
    swift_retain(v55);
    sub_100007FF0((uint64_t)v27, &qword_10031A218);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v32, v28);
    v57 = swift_release(v55);
    v58 = static Font.title3.getter(v57);
    static Font.Weight.semibold.getter(v58);
    v59 = Font.weight(_:)(v58);
    swift_release(v58);
    v52 = enum case for Font.Leading.tight(_:);
    v54 = v151;
    v53 = v152;
    (*(void (**)(char *, _QWORD, uint64_t))(v151 + 104))(v24, enum case for Font.Leading.tight(_:), v152);
    v60 = Font.leading(_:)(v24, v59);
    swift_release(v59);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v24, v53);
    v61 = swift_getKeyPath(&unk_10025FF20);
    sub_10000B234((uint64_t)v36, (uint64_t)v39, &qword_10031A208);
    v62 = (uint64_t *)&v39[*(int *)(v133 + 36)];
    *v62 = v61;
    v62[1] = v60;
    sub_100007FF0((uint64_t)v36, &qword_10031A208);
    v64 = static Color.green.getter(v63);
    v65 = v134;
    sub_10000B234((uint64_t)v39, v134, &qword_10031A1F0);
    v66 = v150;
    *(_QWORD *)(v65 + *(int *)(v150 + 36)) = v64;
    sub_100007FF0((uint64_t)v39, &qword_10031A1F0);
    v67 = v156;
    sub_10000B458(v65, v156, &qword_1003206A0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v149 + 56))(v67, 0, 1, v66);
  }
  v68 = LocalizedStringKey.init(stringLiteral:)(0x6E694620776F6853, 0xEC000000794D2064);
  v69 = Text.init(_:tableName:bundle:comment:)(v68);
  v71 = v70;
  v73 = v72;
  v75 = v74 & 1;
  v76 = static Font.title3.getter(v69);
  static Font.Weight.semibold.getter(v76);
  v77 = Font.weight(_:)(v76);
  swift_release(v76);
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 104))(v24, v52, v53);
  v78 = Font.leading(_:)(v24, v77);
  swift_release(v77);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v24, v53);
  v79 = Text.font(_:)(v78, v69, v71, v75, v73);
  v81 = v80;
  v83 = v82;
  v85 = v84;
  swift_release(v78);
  LOBYTE(v78) = v83 & 1;
  sub_10002B438(v69, v71, v75);
  v86 = swift_bridgeObjectRelease(v73);
  v87 = static Color.green.getter(v86);
  v88 = Text.foregroundColor(_:)(v87, v79, v81, v83 & 1, v85);
  v90 = v89;
  LOBYTE(v75) = v91;
  v93 = v92;
  swift_release(v87);
  sub_10002B438(v79, v81, v78);
  swift_bridgeObjectRelease(v85);
  a2 = v155;
  v94 = *(id *)(v155 + 112);
  v95 = v153;
  LOBYTE(v78) = static UIContentSizeCategory.>= infix(_:_:)(v94, v153);

  v96 = swift_getKeyPath(&unk_10025FF50);
  *(_QWORD *)&v157 = v88;
  *((_QWORD *)&v157 + 1) = v90;
  LOBYTE(v158) = v75 & 1;
  *((_QWORD *)&v158 + 1) = v93;
  *(_QWORD *)&v159 = v96;
  *((_QWORD *)&v159 + 1) = (v78 & 1) == 0;
  v160 = v78 & 1;
  v97 = enum case for DynamicTypeSize.accessibility2(_:);
  v98 = type metadata accessor for DynamicTypeSize(0);
  v99 = (uint64_t)v154;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 104))(v154, v97, v98);
  v100 = sub_1000052EC(&qword_100316A30, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  if ((dispatch thunk of static Equatable.== infix(_:_:)(v99, v99, v98, v100) & 1) == 0)
  {
    __break(1u);
LABEL_11:
    v129 = type metadata accessor for UIMetrics();
    v130 = sub_1000052EC((unint64_t *)&qword_100316A00, (uint64_t (*)(uint64_t))type metadata accessor for UIMetrics, (uint64_t)&unk_10024D2FC);
    result = EnvironmentObject.error()(0, a2, v129, v130);
    __break(1u);
    return result;
  }
  v101 = sub_100003DB8(&qword_100320050);
  v102 = sub_10010D0B0();
  v103 = sub_1000084FC(&qword_100316A40, &qword_100316A20, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
  v104 = v138;
  View.dynamicTypeSize<A>(_:)(v99, v101, v136, v102, v103);
  sub_100007FF0(v99, &qword_100316A20);
  sub_10002B438(v157, *((uint64_t *)&v157 + 1), v158);
  swift_bridgeObjectRelease(*((_QWORD *)&v158 + 1));
  swift_release(v159);
  v105 = swift_getKeyPath(&unk_10025FF80);
  v106 = v140;
  v107 = (uint64_t)v142;
  v108 = v141;
  (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v142, v104, v141);
  v109 = v107 + *(int *)(v137 + 36);
  *(_QWORD *)v109 = v105;
  *(_BYTE *)(v109 + 8) = 1;
  v110 = (*(uint64_t (**)(char *, uint64_t))(v106 + 8))(v104, v108);
  v111 = static Alignment.center.getter(v110);
  _FrameLayout.init(width:height:alignment:)(&v157, 0, 1, 0, 1, v111, v112);
  v113 = v145;
  sub_10000B234(v107, v145, &qword_100320688);
  v114 = (_OWORD *)(v113 + *(int *)(v139 + 36));
  v115 = v158;
  *v114 = v157;
  v114[1] = v115;
  v114[2] = v159;
  sub_100007FF0(v107, &qword_100320688);
  v116 = *(id *)(a2 + 112);
  LOBYTE(v107) = static UIContentSizeCategory.>= infix(_:_:)(v116, v95);

  if ((v107 & 1) != 0)
    v117 = 1.0;
  else
    v117 = 0.5;
  v118 = swift_getKeyPath(&unk_10025FFB0);
  v119 = v143;
  sub_10000B234(v113, v143, &qword_100320690);
  v120 = v119 + *(int *)(v144 + 36);
  *(_QWORD *)v120 = v118;
  *(double *)(v120 + 8) = v117;
  sub_100007FF0(v113, &qword_100320690);
  v121 = v146;
  sub_10000B458(v119, v146, &qword_100320698);
  v122 = v156;
  v123 = v135;
  sub_10000B234(v156, v135, &qword_1003206A8);
  v124 = v147;
  sub_10000B234(v121, v147, &qword_100320698);
  v125 = v148;
  *v148 = 0;
  *((_BYTE *)v125 + 8) = 1;
  v126 = (int *)sub_100003DB8(&qword_1003206B0);
  sub_10000B234(v123, (uint64_t)v125 + v126[12], &qword_1003206A8);
  sub_10000B234(v124, (uint64_t)v125 + v126[16], &qword_100320698);
  v127 = (char *)v125 + v126[20];
  *(_QWORD *)v127 = 0;
  v127[8] = 1;
  sub_100007FF0(v121, &qword_100320698);
  sub_100007FF0(v122, &qword_1003206A8);
  sub_100007FF0(v124, &qword_100320698);
  return sub_100007FF0(v123, &qword_1003206A8);
}

uint64_t sub_1002359C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100234C10(*(_QWORD **)v1, *(_QWORD *)(v1 + 8), a1);
}

unint64_t sub_1002359D0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_10032AA48;
  if (!qword_10032AA48)
  {
    v1 = sub_100007FAC(&qword_10032AA10);
    v2[0] = sub_100007FAC(&qword_10032AA00);
    v2[1] = type metadata accessor for BorderedButtonStyle(255);
    v2[2] = sub_1000084FC(&qword_10032AA40, &qword_10032AA00, (uint64_t)&protocol conformance descriptor for Button<A>);
    v2[3] = sub_1000052EC((unint64_t *)&qword_100319760, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedButtonStyle);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_1000084FC(&qword_100318978, &qword_100318968, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10032AA48);
  }
  return result;
}

unint64_t sub_100235AE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10032AA50;
  if (!qword_10032AA50)
  {
    v1 = sub_100007FAC(&qword_10032AA28);
    sub_100235B4C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10032AA50);
  }
  return result;
}

unint64_t sub_100235B4C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10032AA58;
  if (!qword_10032AA58)
  {
    v1 = sub_100007FAC(&qword_10032AA20);
    v2[0] = sub_100007FAC(&qword_10032AA10);
    v2[1] = sub_1002359D0();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.keyboardShortcut(_:)>>, 1);
    sub_1000084FC(&qword_100318880, &qword_100318888, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10032AA58);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShowFindMyButtonLabelView()
{
  return &type metadata for ShowFindMyButtonLabelView;
}

uint64_t sub_100235C08()
{
  return sub_10000A9B0(&qword_10032AA60, &qword_10032AA30, (void (*)(void))sub_100235AE0);
}

uint64_t sub_100235C34(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1002A1140, 1);
}

void sub_100235C6C(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(unsigned __int8 *)(v1 + 91);
  if ((_DWORD)v3 == 2)
  {
    if (a1 == 2)
      goto LABEL_7;
LABEL_6:
    v4 = sub_100003DB8(&qword_10032B0E0);
    v5 = sub_100016B20();
    Subject<>.send()(v4, v5);
    goto LABEL_7;
  }
  if (a1 == 2 || ((((a1 & 1) == 0) ^ v3) & 1) == 0)
    goto LABEL_6;
LABEL_7:
  *(_BYTE *)(v1 + 91) = a1;
  sub_10023700C(v3);
  if ((a1 & 1) != 0)
  {
    v6 = *(unsigned __int8 *)(v1 + 88);
    if (v6 != 2)
    {
      if ((v6 & 1) == 0)
      {
        v7 = sub_100003DB8(&qword_10032B0E0);
        v8 = sub_100016B20();
        Subject<>.send()(v7, v8);
      }
      *(_BYTE *)(v1 + 88) = 1;
    }
    sub_100236BB0(v6);
  }
  v9 = *(_QWORD *)(v1 + 96);
  if (v9)
  {
    v10 = *(_QWORD *)(v9 + 16);
    if (v10)
    {
      swift_retain(v9);
      swift_retain(v10);
      sub_100038F38(a1 & 1);
      swift_release(v9);
      swift_release(v10);
    }
  }
}

void sub_100235D98(char a1)
{
  _BYTE *v1;

  v1[90] = a1;
  if (v1[88] == 2 || v1[89] & 1 | a1 & 1)
    sub_1002378E4();
  else
    sub_100237B08(1.5);
}

uint64_t sub_100235DC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  __n128 v9;
  char v10;
  uint64_t result;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _BYTE v17[8];
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10000D75C();
  *v8 = static OS_dispatch_queue.main.getter(v9);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v4);
  v10 = _dispatchPreconditionTest(_:)(v8);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8))(v8, v4);
  if ((v10 & 1) != 0)
  {
    sub_10007F30C(a1, (uint64_t)v17);
    if (v18 && sub_100067058(3u, v19))
    {
      if (*(_BYTE *)(v2 + 88) != 2)
      {
LABEL_10:
        sub_100236838();
        return sub_100236860(*(_BYTE *)(v2 + 88) != 2);
      }
      v13 = sub_100003DB8(&qword_10032B0E0);
      v12 = sub_100016B20();
      Subject<>.send()(v13, v12);
      *(_BYTE *)(v2 + 88) = 0;
      LOBYTE(v13) = 2;
    }
    else
    {
      LODWORD(v13) = *(unsigned __int8 *)(v2 + 88);
      if ((_DWORD)v13 != 2)
      {
        v14 = sub_100003DB8(&qword_10032B0E0);
        v15 = sub_100016B20();
        Subject<>.send()(v14, v15);
      }
      *(_BYTE *)(v2 + 88) = 2;
    }
    sub_100236BB0(v13);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

void sub_100235F44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  _BYTE v25[24];
  _BYTE v26[24];

  v1 = sub_100003DB8(&qword_100316B68);
  v3 = __chkstk_darwin(v1, v2);
  v5 = &v25[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3, v6);
  v8 = &v25[-v7];
  v9 = *(unsigned __int8 *)(v0 + 88);
  if (v9 != 2)
  {
    v10 = sub_100003DB8(&qword_10032B0E0);
    v11 = sub_100016B20();
    Subject<>.send()(v10, v11);
  }
  *(_BYTE *)(v0 + 88) = 2;
  sub_100236BB0(v9);
  v12 = *(_QWORD *)(v0 + 96);
  *(_QWORD *)(v0 + 96) = 0;
  swift_release(v12);
  v13 = type metadata accessor for TransmissionProgress(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 1, 1, v13);
  v14 = v0 + OBJC_IVAR____TtC8SOSBuddy11TryOutModel__simulatedTransmissionProgress;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8SOSBuddy11TryOutModel__simulatedTransmissionProgress, v26, 0, 0);
  sub_100238E0C(v14, (uint64_t)v5);
  sub_100237268((uint64_t)v8);
  swift_beginAccess(v14, v25, 33, 0);
  sub_1001456E4((uint64_t)v8, v14);
  swift_endAccess(v25);
  sub_100237484((uint64_t)v5);
  sub_100007FF0((uint64_t)v8, &qword_100316B68);
  sub_100007FF0((uint64_t)v5, &qword_100316B68);
  v15 = *(unsigned __int16 *)(v0 + 56);
  if (v15 >> 9 < 0x7F)
  {
    v16 = sub_100003DB8(&qword_10032B0E0);
    v17 = sub_100016B20();
    Subject<>.send()(v16, v17);
  }
  *(_WORD *)(v0 + 56) = -512;
  sub_1002361A8(v15);
  v19 = *(_QWORD *)(v0 + 64);
  v18 = *(_QWORD *)(v0 + 72);
  if (v18)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + 72));
    v20 = sub_100003DB8(&qword_10032B0E0);
    v21 = sub_100016B20();
    Subject<>.send()(v20, v21);
    v22 = *(_QWORD *)(v0 + 72);
  }
  else
  {
    v22 = 0;
  }
  *(_QWORD *)(v0 + 64) = 0;
  *(_QWORD *)(v0 + 72) = 0;
  swift_bridgeObjectRelease(v22);
  sub_1002365A0(v19, v18);
  swift_bridgeObjectRelease(v18);
  v23 = *(void **)(v0 + OBJC_IVAR____TtC8SOSBuddy11TryOutModel__awayTimer);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8SOSBuddy11TryOutModel__awayTimer) = 0;

  v24 = v0 + OBJC_IVAR____TtC8SOSBuddy11TryOutModel__awayTimerStartedFor;
  *(_QWORD *)v24 = 0;
  *(_BYTE *)(v24 + 8) = 1;
}

uint64_t sub_10023619C(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return sub_100238D58(*a1, *a2);
}

uint64_t sub_1002361A8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  __int16 v3;
  unsigned int v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __n128 v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = v1;
  v3 = result;
  v4 = *(unsigned __int16 *)(v1 + 56);
  if (v4 >> 9 <= 0x7E)
  {
    if ((unsigned __int16)((unsigned __int16)result >> 9) <= 0x7Eu)
    {
      if (v4 >> 14)
      {
        if (v4 >> 14 == 1)
        {
          if ((result & 0xC000) == 0x4000)
          {
            if (*(_WORD *)(v1 + 56) == 5)
            {
              if (result == 5)
                return result;
            }
            else if (result != 5 && v4 == result)
            {
              return result;
            }
          }
        }
        else if (v4 == 0x8000)
        {
          if ((unsigned __int16)result == 0x8000)
            return result;
        }
        else if ((unsigned __int16)result == 32769)
        {
          return result;
        }
      }
      else if ((unsigned __int16)result < 0x4000u
             && v4 == result
             && ((((v4 & 0x100) == 0) ^ ((unsigned __int16)(result & 0x100) >> 8)) & 1) != 0)
      {
        return result;
      }
    }
  }
  else if ((unsigned __int16)((unsigned __int16)result >> 9) > 0x7Eu)
  {
    return result;
  }
  if (qword_100315860 != -1)
    swift_once(&qword_100315860, sub_1000D96D0);
  v5 = type metadata accessor for Logger(0);
  sub_10000D744(v5, (uint64_t)qword_10033FDD8);
  v7 = swift_retain_n(v1, v6);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc(22, -1);
    v11 = swift_slowAlloc(64, -1);
    v36 = v11;
    *(_DWORD *)v10 = 136446466;
    LOWORD(v35) = v3;
    v12 = sub_100003DB8(&qword_10031CBD8);
    v14 = String.init<A>(describing:)(&v35, v12, v13);
    v16 = v15;
    v35 = sub_100172BEC(v14, v15, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease(v16);
    *(_WORD *)(v10 + 12) = 2082;
    LOWORD(v35) = *(_WORD *)(v2 + 56);
    v18 = String.init<A>(describing:)(&v35, v12, v17);
    v20 = v19;
    v35 = sub_100172BEC(v18, v19, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36, v10 + 14, v10 + 22);
    swift_release_n(v2);
    swift_bridgeObjectRelease(v20);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "TryOutModel state changed from: %{public}s to: %{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy(v11, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

    swift_release_n(v2);
  }
  v21 = *(_QWORD **)(v2 + 80);
  v22 = v21[4];
  if (*(__int16 *)(v2 + 56) < 0)
  {
    v26 = 0;
  }
  else
  {
    if (v22)
      goto LABEL_15;
    v23 = v21[2];
    v24 = v21[3];
    v25 = type metadata accessor for PreventSuspensionAssertion();
    swift_allocObject(v25, 32, 7);
    swift_bridgeObjectRetain(v24);
    v26 = sub_1000D855C(0xD000000000000011, 0x8000000100260EC0, v23, v24);
    v22 = v21[4];
  }
  v21[4] = v26;
  swift_release(v22);
LABEL_15:
  v27 = *(unsigned __int16 *)(v2 + 56);
  if (v27 >> 9 <= 0x7E && (v27 & 0xC000) == 0x4000)
  {
    v29 = *(_QWORD *)(v2 + 64);
    v28 = *(_QWORD *)(v2 + 72);
    if (v28)
    {
      swift_bridgeObjectRetain(*(_QWORD *)(v2 + 72));
      v30 = sub_100003DB8(&qword_10032B0E0);
      v31 = sub_100016B20();
      Subject<>.send()(v30, v31);
      v32 = *(_QWORD *)(v2 + 72);
    }
    else
    {
      v32 = 0;
    }
    *(_QWORD *)(v2 + 64) = 0;
    *(_QWORD *)(v2 + 72) = 0;
    swift_bridgeObjectRelease(v32);
    sub_1002365A0(v29, v28);
    swift_bridgeObjectRelease(v28);
  }
  v33 = sub_100003DB8(&qword_10032B0E0);
  v34 = sub_100016B20();
  return Subject<>.send()(v33, v34);
}

uint64_t sub_1002365A0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  __n128 v9;
  __n128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v5 = result;
  v6 = *(_QWORD *)(v2 + 72);
  if (v6)
  {
    if (a2)
    {
      result = *(_QWORD *)(v2 + 64);
      if (result == v5 && v6 == a2)
        return result;
      result = _stringCompareWithSmolCheck(_:_:expecting:)(result, v6, v5, a2, 0);
      if ((result & 1) != 0)
        return result;
    }
  }
  else if (!a2)
  {
    return result;
  }
  if (qword_100315860 != -1)
    swift_once(&qword_100315860, sub_1000D96D0);
  v8 = type metadata accessor for Logger(0);
  sub_10000D744(v8, (uint64_t)qword_10033FDD8);
  swift_bridgeObjectRetain_n(a2, 2, v9);
  v11 = swift_retain_n(v2, v10);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc(22, -1);
    v15 = swift_slowAlloc(64, -1);
    v29 = a2;
    v30 = v15;
    *(_DWORD *)v14 = 136446466;
    v28 = v5;
    swift_bridgeObjectRetain(a2);
    v16 = sub_100003DB8(&qword_100318260);
    v18 = String.init<A>(describing:)(&v28, v16, v17);
    v20 = v19;
    v28 = sub_100172BEC(v18, v19, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29, v14 + 4, v14 + 12);
    swift_bridgeObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease(v20);
    *(_WORD *)(v14 + 12) = 2082;
    v21 = *(_QWORD *)(v3 + 72);
    v28 = *(_QWORD *)(v3 + 64);
    v29 = v21;
    v22 = swift_bridgeObjectRetain(v21);
    v23 = String.init<A>(describing:)(&v28, v16, v22);
    v25 = v24;
    v28 = sub_100172BEC(v23, v24, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29, v14 + 14, v14 + 22);
    swift_release_n(v3);
    swift_bridgeObjectRelease(v25);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "TryOutModel lastErrorReported changed from: %{public}s to: %{public}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy(v15, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);

  }
  else
  {

    swift_release_n(v3);
    swift_bridgeObjectRelease_n(a2, 2);
  }
  v26 = sub_100003DB8(&qword_10032B0E0);
  v27 = sub_100016B20();
  return Subject<>.send()(v26, v27);
}

void sub_100236838()
{
  _BYTE *v0;

  if (v0[88] == 2 || (v0[89] & 1) != 0 || (v0[90] & 1) != 0)
    sub_1002378E4();
  else
    sub_100237B08(1.5);
}

uint64_t sub_100236860(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[24];
  _BYTE v38[24];

  v2 = v1;
  v4 = sub_100003DB8(&qword_100316B68);
  v6 = __chkstk_darwin(v4, v5);
  v8 = &v37[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  result = __chkstk_darwin(v6, v9);
  v12 = &v37[-v11];
  v13 = *(_QWORD *)(v2 + 96);
  if ((a1 & 1) != 0)
  {
    if (!v13)
    {
      if (qword_100315860 != -1)
        swift_once(&qword_100315860, sub_1000D96D0);
      v14 = type metadata accessor for Logger(0);
      v15 = sub_10000D744(v14, (uint64_t)qword_10033FDD8);
      v16 = Logger.logObject.getter(v15);
      v17 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v18 = 0;
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "Activating message simulation engine", v18, 2u);
        swift_slowDealloc(v18, -1, -1);
      }

      v19 = type metadata accessor for MessageSimulationEngineImplementation();
      v20 = swift_allocObject(v19, 24, 7);
      *(_QWORD *)(v20 + 16) = 0;
      v21 = *(_QWORD *)(v2 + 96);
      *(_QWORD *)(v2 + 96) = v20;
      result = swift_release(v21);
      v22 = *(_QWORD *)(v2 + 96);
      if (v22)
      {
        v23 = *(_BYTE *)(v2 + 91) & 1;
        v24 = type metadata accessor for MessageSimulationEngineImplementation.OnState(0);
        v25 = swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
        swift_retain(v22);
        swift_retain(v2);
        v27 = sub_100238E98(v26, v23, v25);
        swift_release(v2);
        v28 = *(_QWORD *)(v22 + 16);
        *(_QWORD *)(v22 + 16) = v27;
        swift_release(v22);
        return swift_release(v28);
      }
    }
  }
  else
  {
    if (v13)
    {
      if (qword_100315860 != -1)
        swift_once(&qword_100315860, sub_1000D96D0);
      v29 = type metadata accessor for Logger(0);
      v30 = sub_10000D744(v29, (uint64_t)qword_10033FDD8);
      v31 = Logger.logObject.getter(v30);
      v32 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v33 = 0;
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "Deactivating message simulation engine", v33, 2u);
        swift_slowDealloc(v33, -1, -1);
      }

      v34 = *(_QWORD *)(v2 + 96);
      *(_QWORD *)(v2 + 96) = 0;
      swift_release(v34);
    }
    v35 = type metadata accessor for TransmissionProgress(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v12, 1, 1, v35);
    v36 = v2 + OBJC_IVAR____TtC8SOSBuddy11TryOutModel__simulatedTransmissionProgress;
    swift_beginAccess(v2 + OBJC_IVAR____TtC8SOSBuddy11TryOutModel__simulatedTransmissionProgress, v38, 0, 0);
    sub_100238E0C(v36, (uint64_t)v8);
    sub_100237268((uint64_t)v12);
    swift_beginAccess(v36, v37, 33, 0);
    sub_1001456E4((uint64_t)v12, v36);
    swift_endAccess(v37);
    sub_100237484((uint64_t)v8);
    sub_100007FF0((uint64_t)v12, &qword_100316B68);
    return sub_100007FF0((uint64_t)v8, &qword_100316B68);
  }
  return result;
}

void sub_100236BB0(unsigned __int8 a1)
{
  uint64_t v1;
  int v2;
  int v3;
  _BOOL4 v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __n128 v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  __int16 v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v2 = a1;
  v3 = *(unsigned __int8 *)(v1 + 88);
  if (v3 == 2)
  {
    if (a1 == 2)
      return;
  }
  else
  {
    v4 = (v3 & 1) == 0;
    if (a1 != 2 && ((a1 ^ v4) & 1) != 0)
      return;
  }
  if (qword_100315860 != -1)
    swift_once(&qword_100315860, sub_1000D96D0);
  v5 = type metadata accessor for Logger(0);
  sub_10000D744(v5, (uint64_t)qword_10033FDD8);
  v7 = swift_retain_n(v1, v6);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc(22, -1);
    v11 = swift_slowAlloc(64, -1);
    v43 = v11;
    *(_DWORD *)v10 = 136446466;
    LOBYTE(v42) = v2;
    v12 = sub_100003DB8(&qword_10032ABB8);
    v14 = String.init<A>(describing:)(&v42, v12, v13);
    v16 = v15;
    v42 = sub_100172BEC(v14, v15, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease(v16);
    *(_WORD *)(v10 + 12) = 2082;
    LOBYTE(v42) = *(_BYTE *)(v1 + 88);
    v18 = String.init<A>(describing:)(&v42, v12, v17);
    v20 = v19;
    v42 = sub_100172BEC(v18, v19, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v10 + 14, v10 + 22);
    swift_release_n(v1);
    swift_bridgeObjectRelease(v20);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "TryOutModel service active changed from: %{public}s to: %{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy(v11, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

    v21 = swift_release_n(v1);
  }
  v22 = *(unsigned __int8 *)(v1 + 88);
  if (v2 != 2)
  {
    if (v22 == 2)
    {
      v23 = *(unsigned __int16 *)(v1 + 56);
      if ((unsigned __int16)(v23 + 512) < 0x8201u)
      {
        v33 = sub_100003DB8(&qword_10032B0E0);
        v34 = sub_100016B20();
        Subject<>.send()(v33, v34);
      }
      v35 = -32767;
      goto LABEL_25;
    }
LABEL_23:
    v36 = sub_100003DB8(&qword_10032B0E0);
    v37 = sub_100016B20();
    Subject<>.send()(v36, v37);
    return;
  }
  if (v22 == 2)
    goto LABEL_23;
  v23 = *(unsigned __int16 *)(v1 + 56);
  if (v23 >> 9 > 0x7E)
    goto LABEL_24;
  if (!(v23 >> 14))
  {
    v40 = sub_100003DB8(&qword_10032B0E0);
    v41 = sub_100016B20();
    Subject<>.send()(v40, v41);
    *(_WORD *)(v1 + 56) = v23 | 0x4000;
    goto LABEL_26;
  }
  if (v23 >> 14 != 1)
  {
LABEL_24:
    v38 = sub_100003DB8(&qword_10032B0E0);
    v39 = sub_100016B20();
    Subject<>.send()(v38, v39);
    v35 = 16389;
LABEL_25:
    *(_WORD *)(v1 + 56) = v35;
LABEL_26:
    sub_1002361A8(v23);
    return;
  }
  v24 = Logger.logObject.getter(v21);
  v25 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc(12, -1);
    v27 = swift_slowAlloc(32, -1);
    v43 = v27;
    *(_DWORD *)v26 = 136446210;
    LOBYTE(v42) = v23;
    v28 = sub_100003DB8(&qword_100322C30);
    v30 = String.init<A>(describing:)(&v42, v28, v29);
    v32 = v31;
    v42 = sub_100172BEC(v30, v31, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v26 + 4, v26 + 12);
    swift_bridgeObjectRelease(v32);
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "TryOutModel state is already activated for %{public}s, nothing more to do", v26, 0xCu);
    swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v26, -1, -1);
  }

}

uint64_t sub_10023700C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  int v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __n128 v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = v1;
  v3 = result;
  v4 = *(unsigned __int8 *)(v1 + 91);
  if (v4 == 2)
  {
    if (result == 2)
      return result;
  }
  else if (result != 2 && ((((result & 1) == 0) ^ v4) & 1) != 0)
  {
    return result;
  }
  if (qword_100315860 != -1)
    swift_once(&qword_100315860, sub_1000D96D0);
  v5 = type metadata accessor for Logger(0);
  sub_10000D744(v5, (uint64_t)qword_10033FDD8);
  v7 = swift_retain_n(v1, v6);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc(22, -1);
    v11 = swift_slowAlloc(64, -1);
    v24 = v11;
    *(_DWORD *)v10 = 136446466;
    LOBYTE(v23) = v3;
    v12 = sub_100003DB8((uint64_t *)&unk_1003263F0);
    v14 = String.init<A>(describing:)(&v23, v12, v13);
    v16 = v15;
    v23 = sub_100172BEC(v14, v15, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease(v16);
    *(_WORD *)(v10 + 12) = 2082;
    LOBYTE(v23) = *(_BYTE *)(v2 + 91);
    v18 = String.init<A>(describing:)(&v23, v12, v17);
    v20 = v19;
    v23 = sub_100172BEC(v18, v19, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v10 + 14, v10 + 22);
    swift_release_n(v2);
    swift_bridgeObjectRelease(v20);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "TryOutModel cached connected changed from: %{public}s to: %{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy(v11, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

    swift_release_n(v2);
  }
  v21 = sub_100003DB8(&qword_10032B0E0);
  v22 = sub_100016B20();
  return Subject<>.send()(v21, v22);
}

double sub_100237268(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  double result;
  char v20;
  uint64_t v21;
  unint64_t v22;
  _BYTE v24[24];

  v3 = type metadata accessor for TransmissionProgress(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = sub_100003DB8(&qword_100316B68);
  __chkstk_darwin(v8, v9);
  v11 = &v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = sub_100003DB8(&qword_10031FA30);
  __chkstk_darwin(v12, v13);
  v15 = &v24[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v16 = v1 + OBJC_IVAR____TtC8SOSBuddy11TryOutModel__simulatedTransmissionProgress;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8SOSBuddy11TryOutModel__simulatedTransmissionProgress, v24, 0, 0);
  v17 = (uint64_t)&v15[*(int *)(v12 + 48)];
  sub_100238E0C(v16, (uint64_t)v15);
  sub_100238E0C(a1, v17);
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v18((uint64_t)v15, 1, v3) == 1)
  {
    if (v18(v17, 1, v3) == 1)
    {
      sub_100007FF0((uint64_t)v15, &qword_100316B68);
      return result;
    }
  }
  else
  {
    sub_100238E0C((uint64_t)v15, (uint64_t)v11);
    if (v18(v17, 1, v3) != 1)
    {
      sub_10000AFB0(v17, (uint64_t)v7);
      v20 = sub_1000FD360(v11, v7);
      sub_10010CC90((uint64_t)v7);
      sub_10010CC90((uint64_t)v11);
      sub_100007FF0((uint64_t)v15, &qword_100316B68);
      if ((v20 & 1) != 0)
        return result;
      goto LABEL_8;
    }
    sub_10010CC90((uint64_t)v11);
  }
  sub_100007FF0((uint64_t)v15, &qword_10031FA30);
LABEL_8:
  v21 = sub_100003DB8(&qword_10032B0E0);
  v22 = sub_100016B20();
  *(_QWORD *)&result = Subject<>.send()(v21, v22).n128_u64[0];
  return result;
}

void sub_100237484(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55[24];

  v3 = type metadata accessor for TransmissionProgress(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  v7 = (uint64_t *)((char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v51 = sub_100003DB8(&qword_100316B68);
  v9 = __chkstk_darwin(v51, v8);
  v50 = (uint64_t)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9, v11);
  v14 = (char *)&v48 - v13;
  __chkstk_darwin(v12, v15);
  v17 = (uint64_t *)((char *)&v48 - v16);
  v18 = sub_100003DB8(&qword_10031FA30);
  __chkstk_darwin(v18, v19);
  v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = v1;
  v22 = v1 + OBJC_IVAR____TtC8SOSBuddy11TryOutModel__simulatedTransmissionProgress;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8SOSBuddy11TryOutModel__simulatedTransmissionProgress, v55, 0, 0);
  v23 = (uint64_t)&v21[*(int *)(v18 + 48)];
  sub_100238E0C(v22, (uint64_t)v21);
  sub_100238E0C(a1, v23);
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v24((uint64_t)v21, 1, v3) == 1)
  {
    if (v24(v23, 1, v3) == 1)
    {
      sub_100007FF0((uint64_t)v21, &qword_100316B68);
      return;
    }
  }
  else
  {
    sub_100238E0C((uint64_t)v21, (uint64_t)v17);
    if (v24(v23, 1, v3) != 1)
    {
      sub_10000AFB0(v23, (uint64_t)v7);
      v47 = sub_1000FD360(v17, v7);
      sub_10010CC90((uint64_t)v7);
      sub_10010CC90((uint64_t)v17);
      sub_100007FF0((uint64_t)v21, &qword_100316B68);
      if ((v47 & 1) != 0)
        return;
      goto LABEL_7;
    }
    sub_10010CC90((uint64_t)v17);
  }
  sub_100007FF0((uint64_t)v21, &qword_10031FA30);
LABEL_7:
  if (qword_100315860 != -1)
    swift_once(&qword_100315860, sub_1000D96D0);
  v25 = type metadata accessor for Logger(0);
  sub_10000D744(v25, (uint64_t)qword_10033FDD8);
  sub_100238E0C(a1, (uint64_t)v14);
  v26 = v52;
  v28 = swift_retain_n(v52, v27);
  v29 = Logger.logObject.getter(v28);
  v30 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = swift_slowAlloc(22, -1);
    v49 = swift_slowAlloc(64, -1);
    v54 = v49;
    *(_DWORD *)v31 = 136446466;
    v32 = v50;
    sub_100238E0C((uint64_t)v14, v50);
    v33 = v51;
    v35 = String.init<A>(describing:)(v32, v51, v34);
    v37 = v36;
    v53 = sub_100172BEC(v35, v36, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54, v31 + 4, v31 + 12);
    v38 = v37;
    v39 = v52;
    swift_bridgeObjectRelease(v38);
    sub_100007FF0((uint64_t)v14, &qword_100316B68);
    *(_WORD *)(v31 + 12) = 2082;
    sub_100238E0C(v22, v32);
    v41 = String.init<A>(describing:)(v32, v33, v40);
    v43 = v42;
    v53 = sub_100172BEC(v41, v42, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54, v31 + 14, v31 + 22);
    swift_release_n(v39);
    swift_bridgeObjectRelease(v43);
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "TryOutModel simulatedTransmissionProgress changed from: %{public}s to: %{public}s", (uint8_t *)v31, 0x16u);
    v44 = v49;
    swift_arrayDestroy(v49, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v44, -1, -1);
    swift_slowDealloc(v31, -1, -1);

  }
  else
  {
    sub_100007FF0((uint64_t)v14, &qword_100316B68);

    swift_release_n(v26);
  }
  v45 = sub_100003DB8(&qword_10032B0E0);
  v46 = sub_100016B20();
  Subject<>.send()(v45, v46);
}

void sub_1002378E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _UNKNOWN **v8;
  uint8_t *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void *v18;
  void *v19;
  char *v20;
  uint64_t v21;
  char v22[8];
  uint64_t v23;

  v1 = OBJC_IVAR____TtC8SOSBuddy11TryOutModel__awayTimer;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC8SOSBuddy11TryOutModel__awayTimer))
  {
    v2 = v0;
    if (qword_100315860 != -1)
      swift_once(&qword_100315860, sub_1000D96D0);
    v3 = type metadata accessor for Logger(0);
    sub_10000D744(v3, (uint64_t)qword_10033FDD8);
    v5 = swift_retain_n(v0, v4);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.default.getter();
    v8 = &off_10032A000;
    if (os_log_type_enabled(v6, v7))
    {
      v9 = (uint8_t *)swift_slowAlloc(12, -1);
      v10 = swift_slowAlloc(32, -1);
      v23 = v10;
      *(_DWORD *)v9 = 136446210;
      v11 = *(_BYTE *)(v2 + OBJC_IVAR____TtC8SOSBuddy11TryOutModel__awayTimerStartedFor + 8);
      v21 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8SOSBuddy11TryOutModel__awayTimerStartedFor);
      v22[0] = v11;
      v12 = sub_100003DB8(&qword_10032ABC0);
      v14 = String.init<A>(describing:)(&v21, v12, v13);
      v16 = v15;
      v21 = sub_100172BEC(v14, v15, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, v22, v9 + 4, v9 + 12);
      swift_release_n(v2);
      v17 = v16;
      v8 = &off_10032A000;
      swift_bridgeObjectRelease(v17);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Away timer for %{public}s canceled", v9, 0xCu);
      swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v10, -1, -1);
      swift_slowDealloc(v9, -1, -1);

      v18 = *(void **)(v2 + v1);
      if (v18)
      {
LABEL_6:
        objc_msgSend(v18, "invalidate");
        v19 = *(void **)(v2 + v1);
LABEL_9:
        *(_QWORD *)(v2 + v1) = 0;

        v20 = (char *)v8[336] + v2;
        *(_QWORD *)v20 = 0;
        v20[8] = 1;
        return;
      }
    }
    else
    {

      swift_release_n(v2);
      v18 = *(void **)(v2 + v1);
      if (v18)
        goto LABEL_6;
    }
    v19 = 0;
    goto LABEL_9;
  }
}

void sub_100237B08(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  __n128 v9;
  char v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  void **aBlock;
  _QWORD v23[4];
  uint64_t v24;

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  v8 = (_QWORD *)((char *)&v23[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000D75C();
  *v8 = static OS_dispatch_queue.main.getter(v9);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v4);
  v10 = _dispatchPreconditionTest(_:)(v8);
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v8, v4);
  if ((v10 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    swift_once(&qword_100315860, sub_1000D96D0);
    goto LABEL_5;
  }
  v11 = v2 + OBJC_IVAR____TtC8SOSBuddy11TryOutModel__awayTimerStartedFor;
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC8SOSBuddy11TryOutModel__awayTimerStartedFor + 8) & 1) == 0
    && *(double *)v11 == a1)
  {
    return;
  }
  sub_1002378E4();
  v12 = (void *)objc_opt_self(NSTimer);
  v13 = swift_allocObject(&unk_1002FC080, 24, 7);
  swift_weakInit(v13 + 16);
  v23[3] = sub_100238E78;
  v24 = v13;
  aBlock = _NSConcreteStackBlock;
  v23[0] = 1107296256;
  v23[1] = sub_100076C24;
  v23[2] = &unk_1002FC098;
  v14 = _Block_copy(&aBlock);
  swift_release(v24);
  v15 = objc_msgSend(v12, "scheduledTimerWithTimeInterval:repeats:block:", 0, v14, a1);
  _Block_release(v14);
  v16 = *(void **)(v2 + OBJC_IVAR____TtC8SOSBuddy11TryOutModel__awayTimer);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8SOSBuddy11TryOutModel__awayTimer) = v15;

  *(double *)v11 = a1;
  *(_BYTE *)(v11 + 8) = 0;
  if (qword_100315860 != -1)
    goto LABEL_10;
LABEL_5:
  v17 = type metadata accessor for Logger(0);
  v18 = sub_10000D744(v17, (uint64_t)qword_10033FDD8);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v21 = 134349056;
    aBlock = *(void ***)&a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v23, v21 + 4, v21 + 12);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Away timer started for %{public}f", v21, 0xCu);
    swift_slowDealloc(v21, -1, -1);
  }

}

uint64_t sub_100237D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t Strong;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _BYTE v17[24];
  _BYTE v18[24];
  _BYTE v19[24];

  v2 = a2 + 16;
  if (qword_100315860 != -1)
    swift_once(&qword_100315860, sub_1000D96D0);
  v3 = type metadata accessor for Logger(0);
  v4 = sub_10000D744(v3, (uint64_t)qword_10033FDD8);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Away timer fired", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }

  swift_beginAccess(v2, v19, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v9 = *(void **)(Strong + OBJC_IVAR____TtC8SOSBuddy11TryOutModel__awayTimer);
    *(_QWORD *)(Strong + OBJC_IVAR____TtC8SOSBuddy11TryOutModel__awayTimer) = 0;
    swift_release(Strong);

  }
  swift_beginAccess(v2, v18, 0, 0);
  v10 = swift_weakLoadStrong(v2);
  if (v10)
  {
    v11 = v10 + OBJC_IVAR____TtC8SOSBuddy11TryOutModel__awayTimerStartedFor;
    *(_QWORD *)v11 = 0;
    *(_BYTE *)(v11 + 8) = 1;
    swift_release(v10);
  }
  swift_beginAccess(v2, v17, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    v13 = result;
    v14 = *(_QWORD *)(result + 48);
    swift_retain(v14);
    swift_release(v13);
    v15 = sub_100003DB8(&qword_10032B0E0);
    v16 = sub_100016B20();
    Subject<>.send()(v15, v16);
    return swift_release(v14);
  }
  return result;
}

double sub_100237F48()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  unint64_t v6;
  double result;

  if (qword_100315860 != -1)
    swift_once(&qword_100315860, sub_1000D96D0);
  v0 = type metadata accessor for Logger(0);
  v1 = sub_10000D744(v0, (uint64_t)qword_10033FDD8);
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Messages changed", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }

  v5 = sub_100003DB8(&qword_10032B0E0);
  v6 = sub_100016B20();
  Subject<>.send()(v5, v6);
  *(_QWORD *)&result = Subject<>.send()(v5, v6).n128_u64[0];
  return result;
}

uint64_t sub_100238050(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[16];
  uint64_t v50[3];

  v3 = v2;
  v46 = a2;
  v5 = sub_100003DB8(&qword_100316B68);
  v7 = __chkstk_darwin(v5, v6);
  v47 = (uint64_t)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v9);
  v11 = (uint64_t *)((char *)&v42 - v10);
  v12 = type metadata accessor for UUID(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100315860 != -1)
    swift_once(&qword_100315860, sub_1000D96D0);
  v17 = type metadata accessor for Logger(0);
  sub_10000D744(v17, (uint64_t)qword_10033FDD8);
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a1, v12);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc(22, -1);
    v45 = v2;
    v22 = v21;
    v23 = swift_slowAlloc(32, -1);
    v43 = v23;
    v50[0] = v23;
    *(_DWORD *)v22 = 136446466;
    v24 = UUID.uuidString.getter(v23);
    v26 = v25;
    v48 = sub_100172BEC(v24, v25, v50);
    v44 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, v49, v22 + 4, v22 + 12);
    v27 = swift_bridgeObjectRelease(v26);
    (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v16, v12, v27);
    *(_WORD *)(v22 + 12) = 2050;
    v28 = v46;
    v48 = v46;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, v49, v22 + 14, v22 + 22);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Message progress for %{public}s, %{public}ld%%", (uint8_t *)v22, 0x16u);
    v29 = v43;
    swift_arrayDestroy(v43, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v29, -1, -1);
    v30 = v22;
    v3 = v45;
    swift_slowDealloc(v30, -1, -1);

  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);

    v28 = v46;
  }
  v32 = UUID.uuidString.getter(v31);
  v34 = v33;
  v35 = (int *)type metadata accessor for TransmissionProgress(0);
  v36 = (char *)v11 + v35[5];
  v37 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v36, 1, 1, v37);
  *v11 = v32;
  v11[1] = v34;
  v38 = (char *)v11 + v35[6];
  *(_QWORD *)v38 = 0;
  v38[8] = 1;
  *(uint64_t *)((char *)v11 + v35[7]) = v28;
  *((_BYTE *)v11 + v35[8]) = 7;
  (*(void (**)(uint64_t *, _QWORD, uint64_t, int *))(*((_QWORD *)v35 - 1) + 56))(v11, 0, 1, v35);
  v39 = v3 + OBJC_IVAR____TtC8SOSBuddy11TryOutModel__simulatedTransmissionProgress;
  swift_beginAccess(v3 + OBJC_IVAR____TtC8SOSBuddy11TryOutModel__simulatedTransmissionProgress, v50, 0, 0);
  v40 = v47;
  sub_100238E0C(v39, v47);
  sub_100237268((uint64_t)v11);
  swift_beginAccess(v39, &v48, 33, 0);
  sub_1001456E4((uint64_t)v11, v39);
  swift_endAccess(&v48);
  sub_100237484(v40);
  sub_100007FF0((uint64_t)v11, &qword_100316B68);
  return sub_100007FF0(v40, &qword_100316B68);
}

uint64_t sub_1002383F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint8_t *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38[3];

  v2 = v1;
  v4 = sub_100003DB8(&qword_100316B68);
  v6 = __chkstk_darwin(v4, v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  v11 = (char *)&v32 - v10;
  v12 = type metadata accessor for UUID(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100315860 != -1)
    swift_once(&qword_100315860, sub_1000D96D0);
  v17 = type metadata accessor for Logger(0);
  sub_10000D744(v17, (uint64_t)qword_10033FDD8);
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a1, v12);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(12, -1);
    v22 = swift_slowAlloc(32, -1);
    v34 = v8;
    v23 = v22;
    v38[0] = v22;
    v35 = v2;
    *(_DWORD *)v21 = 136446210;
    v33 = v21 + 4;
    v24 = UUID.uuidString.getter(v22);
    v26 = v25;
    v36 = sub_100172BEC(v24, v25, v38);
    v2 = v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v33, v21 + 12);
    v27 = swift_bridgeObjectRelease(v26);
    (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v16, v12, v27);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Message sent for %{public}s, clearing _simulatedTransmissionProgress", v21, 0xCu);
    swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
    v28 = v23;
    v8 = v34;
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v21, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  }

  v29 = type metadata accessor for TransmissionProgress(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v11, 1, 1, v29);
  v30 = v2 + OBJC_IVAR____TtC8SOSBuddy11TryOutModel__simulatedTransmissionProgress;
  swift_beginAccess(v2 + OBJC_IVAR____TtC8SOSBuddy11TryOutModel__simulatedTransmissionProgress, v38, 0, 0);
  sub_100238E0C(v30, (uint64_t)v8);
  sub_100237268((uint64_t)v11);
  swift_beginAccess(v30, &v36, 33, 0);
  sub_1001456E4((uint64_t)v11, v30);
  swift_endAccess(&v36);
  sub_100237484((uint64_t)v8);
  sub_100007FF0((uint64_t)v11, &qword_100316B68);
  return sub_100007FF0((uint64_t)v8, &qword_100316B68);
}

uint64_t sub_1002386F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  __n128 v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  __n128 v13;

  v1 = v0;
  v2 = sub_100003DB8(&qword_10032ABC8);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v3 = swift_retain(v0);
  *(_QWORD *)(v0 + 32) = PassthroughSubject.init()(v3);
  v4 = sub_100003DB8(&qword_10032B0E0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  *(_QWORD *)(v0 + 40) = PassthroughSubject.init()(v5);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  *(_QWORD *)(v0 + 48) = PassthroughSubject.init()(v6);
  *(_WORD *)(v0 + 56) = -512;
  v7 = type metadata accessor for PreventSuspension();
  *(_QWORD *)(v0 + 64) = 0;
  *(_QWORD *)(v0 + 72) = 0;
  v8 = swift_allocObject(v7, 40, 7);
  strcpy((char *)(v8 + 16), "In TryOut mode");
  *(_BYTE *)(v8 + 31) = -18;
  *(_QWORD *)(v8 + 32) = 0;
  *(_QWORD *)(v0 + 80) = v8;
  *(_DWORD *)(v0 + 88) = 33686018;
  *(_QWORD *)(v0 + 96) = 0;
  v9 = v0 + OBJC_IVAR____TtC8SOSBuddy11TryOutModel__simulatedTransmissionProgress;
  v10 = type metadata accessor for TransmissionProgress(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8SOSBuddy11TryOutModel_kAppNotForegroundTimeInterval) = 0x3FF8000000000000;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8SOSBuddy11TryOutModel__awayTimer) = 0;
  v11 = v1 + OBJC_IVAR____TtC8SOSBuddy11TryOutModel__awayTimerStartedFor;
  *(_QWORD *)v11 = 0;
  *(_BYTE *)(v11 + 8) = 1;
  swift_release(v1);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  *(_QWORD *)(v1 + 16) = PassthroughSubject.init()(v12);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  *(_QWORD *)(v1 + 24) = PassthroughSubject.init()(v13);
  return v1;
}

void sub_100238888()
{
  _QWORD *v0;

  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  swift_bridgeObjectRelease(v0[9]);
  swift_release(v0[10]);
  swift_release(v0[12]);
  sub_100007FF0((uint64_t)v0 + OBJC_IVAR____TtC8SOSBuddy11TryOutModel__simulatedTransmissionProgress, &qword_100316B68);

}

_QWORD *sub_1002388EC()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  swift_bridgeObjectRelease(v0[9]);
  swift_release(v0[10]);
  swift_release(v0[12]);
  sub_100007FF0((uint64_t)v0 + OBJC_IVAR____TtC8SOSBuddy11TryOutModel__simulatedTransmissionProgress, &qword_100316B68);

  return v0;
}

uint64_t sub_100238968()
{
  uint64_t v0;

  sub_1002388EC();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10023898C()
{
  return type metadata accessor for TryOutModel(0);
}

uint64_t type metadata accessor for TryOutModel(uint64_t a1)
{
  uint64_t result;

  result = qword_10032AAB0;
  if (!qword_10032AAB0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TryOutModel);
  return result;
}

void sub_1002389D0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[15];

  v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[3] = &unk_100260068;
  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[4] = &unk_100260080;
  v4[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[6] = &unk_100260098;
  v4[7] = &unk_100260098;
  v4[8] = &unk_100260098;
  v4[9] = &unk_100260098;
  v4[10] = &unk_1002600B0;
  sub_100142000(319);
  if (v3 <= 0x3F)
  {
    v4[11] = *(_QWORD *)(v2 - 8) + 64;
    v4[12] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[13] = &unk_1002600B0;
    v4[14] = &unk_1002600C8;
    swift_updateClassMetadata2(a1, 256, 15, v4, a1 + 104);
  }
}

uint64_t storeEnumTagSinglePayload for TryOutModel.WhenActive(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100238AE0 + 4 * byte_10025FFE5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100238B14 + 4 * byte_10025FFE0[v4]))();
}

uint64_t sub_100238B14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100238B1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100238B24);
  return result;
}

uint64_t sub_100238B30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100238B38);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100238B3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100238B44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TryOutModel.WhenActive()
{
  return &type metadata for TryOutModel.WhenActive;
}

uint64_t getEnumTagSinglePayload for TryOutModel.State(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x7E)
    goto LABEL_17;
  if (a2 + 65410 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65410 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65410;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65410;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65410;
  }
LABEL_17:
  v6 = ((*a1 >> 7) & 0x7C | (*a1 >> 14)) ^ 0x7F;
  if (v6 >= 0x7D)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for TryOutModel.State(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65410 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65410 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x7E)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x7D)
    return ((uint64_t (*)(void))((char *)&loc_100238C50 + 4 * byte_10025FFEF[v4]))();
  *a1 = a2 - 126;
  return ((uint64_t (*)(void))((char *)sub_100238C84 + 4 * byte_10025FFEA[v4]))();
}

uint64_t sub_100238C84(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_100238C8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x100238C94);
  return result;
}

uint64_t sub_100238CAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x100238CB4);
  *(_WORD *)result = (((-a2 >> 2) & 0x1F) - 32 * (_WORD)a2) << 9;
  return result;
}

uint64_t sub_100238CB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_100238CC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_100238CCC(unsigned __int16 *a1)
{
  int v1;

  v1 = (__int16)*a1;
  if (v1 >= 0)
    return *a1 >> 14;
  else
    return (v1 & 0x1FFu) + 2;
}

_WORD *sub_100238CE8(_WORD *result)
{
  *result &= 0x3FFFu;
  return result;
}

_WORD *sub_100238CF8(_WORD *result, unsigned int a2)
{
  if (a2 < 2)
    *result = *result & 0x1FF | ((_WORD)a2 << 14);
  else
    *result = (a2 + 510) & 0x1FF | 0x8000;
  return result;
}

ValueMetadata *type metadata accessor for TryOutModel.State()
{
  return &type metadata for TryOutModel.State;
}

uint64_t sub_100238D38(uint64_t a1)
{
  return PassthroughSubject.send(_:)(a1);
}

uint64_t sub_100238D58(unsigned __int16 a1, unsigned __int16 a2)
{
  if (a1 >> 14)
  {
    if (a1 >> 14 == 1)
    {
      if ((a2 & 0xC000) == 0x4000)
      {
        if (a1 == 5)
        {
          if (a2 != 5)
            return 0;
        }
        else if (a2 == 5 || a2 != a1)
        {
          return 0;
        }
        return 1;
      }
    }
    else if (a1 == 0x8000)
    {
      if (a2 == 0x8000)
        return 1;
    }
    else if (a2 == 32769)
    {
      return 1;
    }
    return 0;
  }
  if (a2 >= 0x4000u)
    return 0;
  if (a2 != a1)
    return 0;
  else
    return ((a1 & 0x100) == 0) ^ ((unsigned __int16)(a2 & 0x100) >> 8);
}

uint64_t sub_100238E0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100003DB8(&qword_100316B68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100238E54()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100238E78(uint64_t a1)
{
  uint64_t v1;

  return sub_100237D9C(a1, v1);
}

double sub_100238E80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_100238E90(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100238E98(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_BYTE *)(a3 + 16) = 0;
  v6 = sub_100003DB8(&qword_100328A00);
  v7 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_10024E820;
  v8 = type metadata accessor for TryOutTranscriptHeaderItem(0);
  v9 = swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  v10 = (_QWORD *)(v9 + OBJC_IVAR____TtC8SOSBuddy26TryOutTranscriptHeaderItem_content);
  *v10 = 0;
  v10[1] = 0xE000000000000000;
  *(_BYTE *)(v9 + 16) = 3;
  v11 = UUID.init()(v9);
  *(_QWORD *)(v7 + 32) = v9;
  specialized Array._endMutation()(v11);
  *(_QWORD *)(a3 + 24) = v7;
  *(_QWORD *)(a3 + 32) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a3 + 40) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a3 + 48) = _swiftEmptyArrayStorage;
  v12 = a3
      + OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_itemIdToScrollTo;
  v13 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  *(_QWORD *)(a3
            + OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_emergencyConversationTranscript) = 0;
  v14 = (_OWORD *)(a3
                 + OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_emergencyConversationTranscriptItemInFlight);
  *v14 = 0u;
  v14[1] = 0u;
  v15 = a3
      + OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_progressDelegate;
  *(_QWORD *)(v15 + 8) = 0;
  v16 = swift_unknownObjectWeakInit(v15, 0);
  v17 = OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_connected;
  *(_BYTE *)(a3
           + OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_connected) = 0;
  *(_QWORD *)(a3
            + OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_messagesInProgress) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a3
            + OBJC_IVAR____TtCC8SOSBuddy37MessageSimulationEngineImplementationP33_823280F1246CE8B17C8172210A2C70437OnState_oneSecondTimer) = 0;
  *(_QWORD *)(v16 + 8) = &off_1002FC048;
  swift_unknownObjectWeakAssign(v16, a1);
  *(_BYTE *)(a3 + v17) = a2;
  return a3;
}

uint64_t storeEnumTagSinglePayload for TryOutModel.OfferedState(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100239064 + 4 * byte_10025FFF9[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_100239098 + 4 * byte_10025FFF4[v4]))();
}

uint64_t sub_100239098(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1002390A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1002390A8);
  return result;
}

uint64_t sub_1002390B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1002390BCLL);
  *(_BYTE *)(result + 1) = a2 + 1;
  return result;
}

uint64_t sub_1002390C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1002390C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TryOutModel.OfferedState()
{
  return &type metadata for TryOutModel.OfferedState;
}

uint64_t sub_1002390E4(uint64_t a1)
{
  _QWORD v2[5];

  v2[0] = "!";
  v2[1] = L" ";
  v2[2] = &unk_1002601D0;
  v2[3] = &unk_1002601D0;
  v2[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  return swift_initClassMetadata2(a1, 0, 5, v2, a1 + 96);
}

void sub_100239148(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + qword_10032ABE0);
  *(_QWORD *)(v1 + qword_10032ABE0) = a1;

}

void sub_10023915C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + qword_10032ABE8);
  *(_QWORD *)(v1 + qword_10032ABE8) = a1;

}

void sub_100239170(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_1002396B0();
}

void sub_100239194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  id v6;
  void *v7;
  objc_super v8;

  v5 = (objc_class *)type metadata accessor for LockScreenView(0, *(_QWORD *)((swift_isaMask & *v4) + 0x50), *(_QWORD *)((swift_isaMask & *v4) + 0x58), a4);
  v8.receiver = v4;
  v8.super_class = v5;
  objc_msgSendSuper2(&v8, "layoutSubviews");
  v6 = objc_msgSend(*(id *)((char *)v4 + qword_10032ABF0), "view");
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v4, "bounds");
    objc_msgSend(v7, "setFrame:");

  }
}

void sub_100239234(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v4 = a1;
  sub_100239194((uint64_t)v4, v1, v2, v3);

}

void sub_100239268()
{
  char *v0;
  id v1;
  id v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double Width;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  _QWORD *v23;
  void *v24;
  double v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  Class isa;
  CGRect v37;

  v1 = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
  objc_msgSend(v0, "addLayoutGuide:", v1);
  v2 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v2, "_referenceBounds");
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;

  v37.origin.x = v4;
  v37.origin.y = v6;
  v37.size.width = v8;
  v37.size.height = v10;
  Width = CGRectGetWidth(v37);
  v12 = objc_msgSend(v1, "topAnchor");
  v13 = objc_msgSend(v0, "topAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  v15 = *(void **)&v0[qword_10032ABE0];
  *(_QWORD *)&v0[qword_10032ABE0] = v14;

  v16 = objc_msgSend(v0, "bottomAnchor");
  v17 = objc_msgSend(v1, "bottomAnchor");
  v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

  v19 = *(void **)&v0[qword_10032ABE8];
  *(_QWORD *)&v0[qword_10032ABE8] = v18;

  v20 = sub_100003DB8(&qword_100328A00);
  v21 = swift_allocObject(v20, 64, 7);
  *(_OWORD *)(v21 + 16) = xmmword_100251630;
  v22 = *(void **)&v0[qword_10032ABE0];
  if (!v22)
  {
    __break(1u);
    goto LABEL_8;
  }
  v23 = (_QWORD *)v21;
  *(_QWORD *)(v21 + 32) = v22;
  v24 = *(void **)&v0[qword_10032ABE8];
  if (!v24)
  {
LABEL_8:
    __break(1u);
    return;
  }
  if (Width < 414.0)
    v25 = 46.0;
  else
    v25 = 51.0;
  v26 = (void *)objc_opt_self(NSLayoutConstraint);
  v23[5] = v24;
  v27 = v22;
  v28 = v24;
  v29 = objc_msgSend(v1, "leadingAnchor");
  v30 = objc_msgSend(v0, "leadingAnchor");
  v31 = objc_msgSend(v29, "constraintEqualToAnchor:constant:", v30, v25);

  v23[6] = v31;
  v32 = objc_msgSend(v1, "trailingAnchor");
  v33 = objc_msgSend(v0, "trailingAnchor");
  v34 = objc_msgSend(v32, "constraintEqualToAnchor:constant:", v33, -v25);

  v23[7] = v34;
  specialized Array._endMutation()(v35);
  sub_100239674();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v26, "activateConstraints:", isa, swift_bridgeObjectRelease(v23).n128_f64[0]);

}

void sub_1002395B8()
{
  sub_100239750();
}

id sub_1002395D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for LockScreenView(0, *(_QWORD *)((swift_isaMask & *v4) + 0x50), *(_QWORD *)((swift_isaMask & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, "dealloc");
}

void sub_100239620(uint64_t a1)
{

}

uint64_t type metadata accessor for LockScreenView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100005D84(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LockScreenView);
}

unint64_t sub_100239674()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10031BB20;
  if (!qword_10031BB20)
  {
    v1 = objc_opt_self(NSLayoutConstraint);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10031BB20);
  }
  return result;
}

void sub_1002396B0()
{
  char *v0;
  char *v1;
  char *v2;

  v1 = &v0[qword_10032ABD0];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  v1[32] = 1;
  v2 = &v0[qword_10032ABD8];
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *(_QWORD *)&v0[qword_10032ABE0] = 0;
  *(_QWORD *)&v0[qword_10032ABE8] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100260900, "SOSBuddy/LockScreenView.swift", 29, 2, 42, 0);
  __break(1u);
}

void sub_100239750()
{
  _swift_stdlib_reportUnimplementedInitializer("SOSBuddy.LockScreenView", 23, "init(frame:)", 12, 0);
  __break(1u);
}

uint64_t sub_10023977C(uint64_t a1, uint64_t a2, void (*a3)(__n128))
{
  __n128 v5;
  uint64_t result;

  if (a2)
  {
    v5 = swift_retain(a2);
    a3(v5);
    return swift_release(a2);
  }
  return result;
}

uint64_t sub_1002397C8()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  _BYTE v22[24];
  uint64_t v23;

  if (qword_100315838 != -1)
    swift_once(&qword_100315838, sub_1000D9630);
  v1 = type metadata accessor for Logger(0);
  sub_10000D744(v1, (uint64_t)qword_10033FD60);
  v2 = v0;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc(22, -1);
    v6 = swift_slowAlloc(64, -1);
    v23 = v6;
    *(_DWORD *)v5 = 136446466;
    v7 = &v2[qword_1003265F0];
    swift_beginAccess(&v2[qword_1003265F0], v22, 0, 0);
    if (*(_QWORD *)v7)
      v8 = v7[16];
    else
      v8 = 6;
    LOBYTE(v21) = v8;
    v9 = sub_100003DB8((uint64_t *)&unk_10032B1B0);
    v11 = String.init<A>(describing:)(&v21, v9, v10);
    v13 = v12;
    v21 = sub_100172BEC(v11, v12, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, v22, v5 + 4, v5 + 12);

    swift_bridgeObjectRelease(v13);
    *(_WORD *)(v5 + 12) = 2082;
    if (*(_QWORD *)v7)
      v14 = v7[17];
    else
      v14 = 2;
    LOBYTE(v21) = v14;
    v15 = sub_100003DB8(&qword_10032B1A8);
    v17 = String.init<A>(describing:)(&v21, v15, v16);
    v19 = v18;
    v21 = sub_100172BEC(v17, v18, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, v22, v5 + 14, v5 + 22);

    swift_bridgeObjectRelease(v19);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "_activePresentable changed: stage = %{public}s: pendingStateUpdate = %{public}s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy(v6, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
  return sub_100239F50();
}

void (*sub_100239A30(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + qword_1003265F0, a1, 33, 0);
  return sub_100239A78;
}

void sub_100239A78(uint64_t a1, char a2)
{
  swift_endAccess(a1);
  if ((a2 & 1) == 0)
    sub_1002397C8();
}

char *sub_100239AA8(uint64_t a1, unint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  __n128 v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  uint64_t *v27;
  NSString v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  id v35;
  char *v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  void *v46;
  id v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  objc_super v52;

  v5 = qword_1003265A0;
  v6 = sub_100003DB8(&qword_10031EF78);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  v7 = v2;
  *(_QWORD *)&v2[v5] = PassthroughSubject.init()(v8);
  v9 = qword_1003265A8;
  v10 = sub_100003DB8(&qword_10032B210);
  swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  *(_QWORD *)&v7[v9] = PassthroughSubject.init()(v11);
  v12 = qword_1003265B0;
  swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  *(_QWORD *)&v7[v12] = PassthroughSubject.init()(v13);
  v14 = qword_1003265B8;
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  *(_QWORD *)&v7[v14] = PassthroughSubject.init()(v15);
  v16 = qword_1003265C0;
  v17 = sub_100003DB8(&qword_10031D150);
  swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  *(_QWORD *)&v7[v16] = PassthroughSubject.init()(v18);
  v19 = qword_1003265C8;
  v20 = sub_100003DB8(&qword_10032B1E8);
  swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  *(_QWORD *)&v7[v19] = PassthroughSubject.init()(v21);
  v22 = qword_1003265D0;
  swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  *(_QWORD *)&v7[v22] = PassthroughSubject.init()(v23);
  v24 = &unk_100326000;
  v25 = qword_1003265E0;
  *(_QWORD *)&v7[qword_1003265E0] = 0;
  swift_unknownObjectWeakInit(&v7[qword_1003265E8], 0);
  v26 = &v7[qword_1003265F0];
  *(_QWORD *)v26 = 0;
  *((_QWORD *)v26 + 1) = 0;
  *((_WORD *)v26 + 8) = 0;
  v7[qword_1003265F8] = 2;
  v7[qword_100326600] = 2;
  v7[qword_100326608] = 2;
  v27 = (uint64_t *)&v7[qword_1003265D8];
  *v27 = a1;
  v27[1] = a2;
  swift_bridgeObjectRetain(a2);
  v28 = String._bridgeToObjectiveC()();
  v29 = objc_msgSend((id)objc_opt_self(BNBannerSource), "bannerSourceForDestination:forRequesterIdentifier:", 0, v28);

  v30 = *(void **)&v7[v25];
  *(_QWORD *)&v7[v25] = v29;

  v52.receiver = v7;
  v52.super_class = (Class)sub_100003DB8(&qword_10032B260);
  v31 = objc_msgSendSuper2(&v52, "init");
  v32 = qword_100315820;
  v33 = v31;
  if (v32 != -1)
    swift_once(&qword_100315820, sub_1000D95E4);
  v34 = type metadata accessor for Logger(0);
  sub_10000D744(v34, (uint64_t)qword_10033FD18);
  v35 = v33;
  swift_bridgeObjectRetain(a2);
  v36 = (char *)v35;
  v37 = Logger.logObject.getter(v36);
  v38 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = swift_slowAlloc(22, -1);
    v49 = a1;
    v40 = swift_slowAlloc(64, -1);
    v51 = v40;
    *(_DWORD *)v39 = 136446466;
    v41 = v36;
    v42 = objc_msgSend(v41, "description");
    v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
    v45 = v44;

    v50 = sub_100172BEC(v43, v45, &v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51, v39 + 4, v39 + 12);

    swift_bridgeObjectRelease(v45);
    *(_WORD *)(v39 + 12) = 2080;
    swift_bridgeObjectRetain(a2);
    v50 = sub_100172BEC(v49, a2, &v51);
    v24 = (_QWORD *)&unk_100326000;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51, v39 + 14, v39 + 22);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "[%{public}s] init for '%s'", (uint8_t *)v39, 0x16u);
    swift_arrayDestroy(v40, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v40, -1, -1);
    swift_slowDealloc(v39, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  v46 = *(void **)&v36[v24[188]];
  if (v46)
  {
    v47 = v46;
    objc_msgSend(v47, "setDelegate:", v36);

  }
  return v36;
}

uint64_t sub_100239F50()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t result;
  char v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  int v11;
  int v12;

  v1 = qword_100326600;
  v2 = *(unsigned __int8 *)(v0 + qword_100326600);
  result = sub_1001BB6AC();
  if (v2 == 2 || ((result ^ v2) & 1) != 0)
  {
    v4 = sub_1001BB6AC();
    v5 = v4 & 1;
    *(_BYTE *)(v0 + v1) = v4 & 1;
    if (qword_100315838 != -1)
      swift_once(&qword_100315838, sub_1000D9630);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_10000D744(v6, (uint64_t)qword_10033FD60);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v10 = 67240192;
      v11 = v5;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12, v10 + 4, v10 + 8);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "isAnyBannerPresented changed to %{BOOL,public}d", v10, 8u);
      swift_slowDealloc(v10, -1, -1);
    }

    HIBYTE(v12) = v5;
    return PassthroughSubject.send(_:)((char *)&v12 + 3);
  }
  return result;
}

double sub_10023A0A4(unsigned __int8 a1)
{
  unsigned __int8 *v1;
  int v2;
  unsigned __int8 *v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  void (*v13)(_QWORD *, _QWORD, _QWORD *);
  char v14;
  void (*v15)(_QWORD *, _QWORD *);
  double result;
  int v17;
  _BOOL4 v18;
  uint64_t v19;
  unsigned __int8 *v20;
  NSObject *v21;
  os_log_type_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 *v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  __n128 v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  os_log_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  char v43;
  char *v44;
  uint64_t v45;
  id v46;
  char *v47;
  uint64_t v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int16 v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, char);
  uint64_t v58;
  os_log_t v59;
  uint64_t v60;
  void (*v61)(_QWORD *, _QWORD, _QWORD *);
  uint64_t v62;
  void (*v63)(_QWORD *, _QWORD *);
  unsigned int v64;
  uint64_t v65[4];
  uint64_t v66;
  _BYTE v67[16];

  v3 = v1;
  v5 = (_QWORD *)type metadata accessor for DispatchPredicate(0);
  v6 = *(v5 - 1);
  __chkstk_darwin(v5, v7);
  v9 = (uint64_t *)((char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  *v9 = static OS_dispatch_queue.main.getter(v11);
  v12 = enum case for DispatchPredicate.onQueue(_:);
  v13 = *(void (**)(_QWORD *, _QWORD, _QWORD *))(v6 + 104);
  v13(v9, enum case for DispatchPredicate.onQueue(_:), v5);
  v14 = _dispatchPreconditionTest(_:)(v9);
  v15 = *(void (**)(_QWORD *, _QWORD *))(v6 + 8);
  v15(v9, v5);
  if ((v14 & 1) == 0)
  {
    __break(1u);
LABEL_27:
    swift_once(&qword_100315838, sub_1000D9630);
    goto LABEL_8;
  }
  v64 = v12;
  v2 = a1;
  v12 = qword_100326608;
  v17 = v3[qword_100326608];
  if (v17 == 2)
  {
    if (a1 == 2)
      return result;
  }
  else
  {
    v18 = (v17 & 1) == 0;
    if (a1 != 2 && ((a1 ^ v18) & 1) != 0)
      return result;
  }
  v63 = v15;
  if (qword_100315838 != -1)
    goto LABEL_27;
LABEL_8:
  v19 = type metadata accessor for Logger(0);
  sub_10000D744(v19, (uint64_t)qword_10033FD60);
  v20 = v3;
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.default.getter(v21);
  v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    v24 = swift_slowAlloc(22, -1);
    v61 = v13;
    v25 = v24;
    v60 = swift_slowAlloc(64, -1);
    v65[0] = v60;
    *(_DWORD *)v25 = 136446466;
    v59 = v21;
    LOBYTE(v66) = v3[v12];
    v26 = sub_100003DB8(&qword_10032B1A8);
    HIDWORD(v58) = v23;
    v27 = v20;
    v28 = v26;
    v30 = String.init<A>(describing:)(&v66, v26, v29);
    v62 = v10;
    v32 = v31;
    v66 = sub_100172BEC(v30, v31, v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, v67, v25 + 4, v25 + 12);

    v33 = swift_bridgeObjectRelease(v32);
    *(_WORD *)(v25 + 12) = 2082;
    LOBYTE(v66) = v2;
    v34 = String.init<A>(describing:)(&v66, v28, v33);
    v36 = v35;
    v66 = sub_100172BEC(v34, v35, v65);
    v10 = v62;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, v67, v25 + 14, v25 + 22);
    v37 = v36;
    v20 = v27;
    swift_bridgeObjectRelease(v37);
    v38 = v59;
    _os_log_impl((void *)&_mh_execute_header, v59, BYTE4(v58), "SessionBannerState changed from %{public}s to %{public}s", (uint8_t *)v25, 0x16u);
    v39 = v60;
    swift_arrayDestroy(v60, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1, -1);
    v40 = v25;
    v13 = v61;
    swift_slowDealloc(v40, -1, -1);

  }
  else
  {

  }
  v3[v12] = v2;
  if (v2 == 2)
  {
    v42 = v10;
    *v9 = static OS_dispatch_queue.main.getter(v41);
    v13(v9, v64, v5);
    v43 = _dispatchPreconditionTest(_:)(v9);
    v63(v9, v5);
    if ((v43 & 1) == 0)
    {
      __break(1u);
      goto LABEL_29;
    }
    v44 = (char *)&v20[qword_1003265F0];
    *(_QWORD *)&result = swift_beginAccess(&v20[qword_1003265F0], v65, 0, 0).n128_u64[0];
    v5 = *(_QWORD **)v44;
    if (*(_QWORD *)v44)
    {
      v42 = *((_QWORD *)v44 + 1);
      v45 = qword_1003157B0;
      swift_unknownObjectRetain(v5);
      if (v45 == -1)
      {
LABEL_15:
        v46 = (id)qword_10033FCE0;
        sub_10023B294(v5, v42, 0, v46);
        swift_unknownObjectRelease(v5);

        return result;
      }
LABEL_29:
      swift_once(&qword_1003157B0, sub_10008E06C);
      goto LABEL_15;
    }
  }
  else
  {
    v47 = (char *)&v20[qword_1003265F0];
    swift_beginAccess(&v20[qword_1003265F0], &v66, 1, 0);
    v48 = *(_QWORD *)v47;
    if (*(_QWORD *)v47)
    {
      v49 = v47[16];
      swift_unknownObjectRetain(*(_QWORD *)v47);
      if (v49 >= 3)
      {
        v57 = sub_100239A30((uint64_t)v65);
        if (*(_QWORD *)v56)
          *(_BYTE *)(v56 + 17) = v2 & 1;
        v57((uint64_t)v65, 0);
      }
      else
      {
        sub_100208500(v2 & 1);
      }
      v55 = v48;
    }
    else
    {
      sub_10023A8AC(v2 & 1);
      v51 = v50;
      v52 = *(_QWORD *)v47;
      *(_QWORD *)v47 = v50;
      *((_QWORD *)v47 + 1) = v53;
      *((_WORD *)v47 + 8) = v54;
      swift_unknownObjectRetain(v50);
      swift_unknownObjectRelease(v52);
      sub_1002397C8();
      v55 = v51;
    }
    *(_QWORD *)&result = swift_unknownObjectRelease(v55).n128_u64[0];
  }
  return result;
}

void sub_10023A54C(char **a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  char **p_name;
  uint8_t *v18;
  id v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  __n128 v25;
  char v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40[2];

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  v8 = (uint64_t *)((char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100315838 != -1)
    swift_once(&qword_100315838, sub_1000D9630);
  v14 = sub_10000D744(v9, (uint64_t)qword_10033FD60);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v14, v9);
  v15 = swift_unknownObjectRetain_n(a1, 2);
  v16 = Logger.logObject.getter(v15);
  v38 = static os_log_type_t.default.getter(v16);
  p_name = &ResourceBundleClass.name;
  if (os_log_type_enabled(v16, (os_log_type_t)v38))
  {
    v34 = v10;
    v35 = v5;
    v36 = v4;
    v37 = v2;
    v18 = (uint8_t *)swift_slowAlloc(12, -1);
    v33 = swift_slowAlloc(32, -1);
    v40[0] = v33;
    *(_DWORD *)v18 = 136446210;
    v19 = objc_msgSend(a1, "requestIdentifier");
    p_name = a1;
    if (!v19)
      goto LABEL_12;
    v20 = v19;
    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v23 = v22;

    v39 = sub_100172BEC(v21, v23, v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, v40, v18 + 4, v18 + 12);
    swift_unknownObjectRelease_n(p_name, 2);
    swift_bridgeObjectRelease(v23);
    _os_log_impl((void *)&_mh_execute_header, v16, (os_log_type_t)v38, "wasHidden: %{public}s", v18, 0xCu);
    v24 = v33;
    swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v9);
    a1 = p_name;
    v4 = v36;
    v5 = v35;
  }
  else
  {

    swift_unknownObjectRelease_n(a1, 2);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  *v8 = static OS_dispatch_queue.main.getter(v25);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v4);
  v26 = _dispatchPreconditionTest(_:)(v8);
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v8, v4);
  if ((v26 & 1) != 0)
  {
    v27 = objc_msgSend(a1, "requestIdentifier", sub_10023A0A4(2u));
    if (v27)
    {
      v28 = v27;
      v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      v31 = v30;

      v40[0] = v29;
      v40[1] = v31;
      PassthroughSubject.send(_:)(v40);
      swift_bridgeObjectRelease(v31);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_12:
  swift_unknownObjectRelease(p_name);
  __break(1u);
}

void sub_10023A8AC(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  __n128 v14;
  char v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  BOOL v19;
  uint8_t *v20;
  void *v21;
  void *v22;
  char v23;
  uint64_t Strong;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t ObjectType;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t inited;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  Class isa;
  double v41;
  id v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  void *v49;
  id v50;
  void *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  __n128 v55;
  char *v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  void *v60;
  uint64_t v61;
  unint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  void *v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  uint8_t *v73;
  void *v74;
  uint64_t v75;
  __n128 v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  __n128 v80;
  uint64_t v81;
  uint8_t *v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE v89[80];
  id v90;

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  v8 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchPredicate(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  v13 = (uint64_t *)((char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  *v13 = static OS_dispatch_queue.main.getter(v14);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v9);
  v15 = _dispatchPreconditionTest(_:)(v13);
  (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v13, v9);
  if ((v15 & 1) != 0)
  {
    if (qword_100315838 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_100315838, sub_1000D9630);
LABEL_3:
  v16 = (id)sub_10000D744(v4, (uint64_t)qword_10033FD60);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter(v17);
  v19 = os_log_type_enabled(v17, v18);
  v86 = v8;
  v87 = v5;
  if (v19)
  {
    v20 = (uint8_t *)swift_slowAlloc(12, -1);
    v21 = (void *)swift_slowAlloc(32, -1);
    v90 = v21;
    *(_DWORD *)v20 = 136446210;
    v88 = sub_100172BEC(0xD00000000000001ALL, 0x800000010026E4C0, (uint64_t *)&v90);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v88, v89, v20 + 4, v20 + 12);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "presentBanner for '%{public}s'", v20, 0xCu);
    swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v20, -1, -1);
  }

  v22 = *(void **)&v2[qword_1003265E0];
  if (!v22)
  {
    v56 = v2;
    v57 = Logger.logObject.getter(v56);
    v58 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v57, v58))
    {

      return;
    }
    v59 = (uint8_t *)swift_slowAlloc(12, -1);
    v60 = (void *)swift_slowAlloc(32, -1);
    v90 = v60;
    *(_DWORD *)v59 = 136446210;
    v61 = *(_QWORD *)&v56[qword_1003265D8];
    v62 = *(_QWORD *)&v56[qword_1003265D8 + 8];
    swift_bridgeObjectRetain(v62);
    v88 = sub_100172BEC(v61, v62, (uint64_t *)&v90);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v88, v89, v59 + 4, v59 + 12);

    swift_bridgeObjectRelease(v62);
    _os_log_impl((void *)&_mh_execute_header, v57, v58, "_bannerSource for '%{public}s' has expired", v59, 0xCu);
    swift_arrayDestroy(v60, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v60, -1, -1);
    swift_slowDealloc(v59, -1, -1);
LABEL_17:

    return;
  }
  v85 = v4;
  v23 = a1;
  Strong = swift_unknownObjectWeakLoadStrong(&v2[qword_1003265E8]);
  if (!Strong)
  {
    v57 = v22;
    v63 = Logger.logObject.getter(v57);
    v64 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v63, v64))
    {
      v65 = (uint8_t *)swift_slowAlloc(12, -1);
      v66 = (void *)swift_slowAlloc(32, -1);
      v90 = v66;
      *(_DWORD *)v65 = 136446210;
      v88 = sub_100172BEC(0xD00000000000001ALL, 0x800000010026E4C0, (uint64_t *)&v90);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v88, v89, v65 + 4, v65 + 12);
      _os_log_impl((void *)&_mh_execute_header, v63, v64, "contentProducer for '%{public}s' has expired", v65, 0xCu);
      swift_arrayDestroy(v66, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v66, -1, -1);
      swift_slowDealloc(v65, -1, -1);
    }

    goto LABEL_17;
  }
  v25 = Strong;
  v26 = *(_QWORD *)&v2[qword_1003265D8];
  v27 = *(_QWORD *)&v2[qword_1003265D8 + 8];
  v28 = v22;
  swift_bridgeObjectRetain(v27);
  ObjectType = swift_getObjectType(v25);
  v30 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for SessionBannerViewContentProducer);
  if (!v30)
  {
    __break(1u);
LABEL_26:

    __break(1u);
    return;
  }
  v31 = v30;
  v32 = (char *)objc_allocWithZone((Class)type metadata accessor for SessionBannerViewController());
  v33 = v2;
  swift_unknownObjectRetain(v25);
  v84 = v25;
  v34 = sub_100241980(v26, v27, 0xD00000000000001ALL, 0x800000010026E4C0, v25, v31, v23 & 1, v33, v32);
  v35 = sub_100003DB8((uint64_t *)&unk_100326470);
  inited = swift_initStackObject(v35, v89);
  *(_OWORD *)(inited + 16) = xmmword_10024DEE0;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(kSBUIPresentableWantsDismissalPreventionContextUserInfoKey);
  *(_QWORD *)(inited + 40) = v37;
  sub_10006477C(0, (unint64_t *)&unk_10032B1C0, NSNumber_ptr);
  *(NSNumber *)(inited + 48) = NSNumber.init(integerLiteral:)(1);
  *(_QWORD *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(kSBUIPresentableSystemApertureSupportingUserInfoKey);
  *(_QWORD *)(inited + 64) = v38;
  *(NSNumber *)(inited + 72) = NSNumber.init(integerLiteral:)(1);
  v39 = sub_100224768(inited);
  sub_100003DB8((uint64_t *)&unk_100326480);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v41 = swift_bridgeObjectRelease(v39).n128_u64[0];
  v90 = 0;
  LOBYTE(v33) = objc_msgSend(v28, "postPresentable:options:userInfo:error:", v34, 1, isa, &v90, v41);

  v42 = v90;
  if ((v33 & 1) != 0)
  {
    v44 = v86;
    v43 = v87;
    v45 = v85;
    (*(void (**)(char *, id, uint64_t))(v87 + 16))(v86, v16, v85);
    v16 = (id)swift_unknownObjectRetain(v34);
    v46 = Logger.logObject.getter(v42);
    v47 = static os_log_type_t.default.getter(v46);
    if (!os_log_type_enabled(v46, v47))
    {

      swift_unknownObjectRelease(v84);
      (*(void (**)(char *, uint64_t, __n128))(v43 + 8))(v44, v45, v80);
      return;
    }
    v83 = v28;
    v48 = (uint8_t *)swift_slowAlloc(12, -1);
    v49 = (void *)swift_slowAlloc(32, -1);
    v90 = v49;
    *(_DWORD *)v48 = 136446210;
    v50 = objc_msgSend(v16, "requestIdentifier");
    if (v50)
    {
      v51 = v50;
      v82 = v48 + 4;
      v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
      v54 = v53;

      v88 = sub_100172BEC(v52, v54, (uint64_t *)&v90);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v88, v89, v82, v48 + 12);

      swift_bridgeObjectRelease(v54);
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "presentBanner: presenting '%{public}s'", v48, 0xCu);
      swift_arrayDestroy(v49, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v49, -1, -1);
      swift_slowDealloc(v48, -1, -1);

      v55 = swift_unknownObjectRelease(v84);
      (*(void (**)(char *, uint64_t, __n128))(v87 + 8))(v86, v45, v55);
      return;
    }
    goto LABEL_26;
  }
  v67 = v90;
  v68 = _convertNSErrorToError(_:)(v42);

  swift_willThrow(v69);
  swift_errorRetain(v68);
  v70 = swift_errorRetain(v68);
  v71 = Logger.logObject.getter(v70);
  v72 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v71, v72))
  {
    v73 = (uint8_t *)swift_slowAlloc(12, -1);
    v74 = (void *)swift_slowAlloc(32, -1);
    v90 = v74;
    *(_DWORD *)v73 = 136446210;
    v88 = v68;
    swift_errorRetain(v68);
    v75 = sub_100003DB8((uint64_t *)&unk_100324AA0);
    v77 = String.init<A>(describing:)(&v88, v75, v76);
    v79 = v78;
    v88 = sub_100172BEC(v77, v78, (uint64_t *)&v90);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v88, v89, v73 + 4, v73 + 12);
    swift_bridgeObjectRelease(v79);
    swift_errorRelease(v68);
    swift_errorRelease(v68);
    _os_log_impl((void *)&_mh_execute_header, v71, v72, "presentBanner failed: %{public}s", v73, 0xCu);
    swift_arrayDestroy(v74, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v74, -1, -1);
    swift_slowDealloc(v73, -1, -1);

    swift_unknownObjectRelease(v84);
    swift_errorRelease(v68);
  }
  else
  {

    swift_unknownObjectRelease(v84);
    swift_errorRelease(v68);
    swift_errorRelease(v68);
    swift_errorRelease(v68);

  }
}

void sub_10023B294(void *a1, uint64_t a2, int a3, void *a4)
{
  char *v4;
  char *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  __n128 v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  BOOL v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  id v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  void *v45;
  uint64_t v46;
  unint64_t v47;
  id v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  id v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  const char *v62;
  char v63;
  uint64_t v64;
  void (*v65)(uint64_t, char);
  uint64_t v66;
  id v67;
  id v68;
  id v69;
  id v70;
  uint64_t v71;
  void (*v72)(uint64_t, char);
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE *v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  uint64_t v82;
  id v83;
  void *v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  __n128 v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  void *v93;
  __n128 v94;
  void *v95;
  id v96;
  _BYTE v97[4];
  int v98;
  uint64_t v99;
  _BYTE *v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  uint64_t v109[3];
  uint64_t v110;
  uint64_t v111;

  v5 = v4;
  LODWORD(v104) = a3;
  v9 = type metadata accessor for Logger(0);
  v102 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9, v10);
  v12 = &v97[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for DispatchPredicate(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  v17 = &v97[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  *v17 = static OS_dispatch_queue.main.getter(v18);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v17, enum case for DispatchPredicate.onQueue(_:), v13);
  v19 = _dispatchPreconditionTest(_:)(v17);
  (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v17, v13);
  if ((v19 & 1) != 0)
  {
    v103 = a4;
    if (qword_100315838 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_100315838, sub_1000D9630);
LABEL_3:
  v20 = sub_10000D744(v9, (uint64_t)qword_10033FD60);
  v21 = swift_unknownObjectRetain_n(a1, 2);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.default.getter(v22);
  v24 = os_log_type_enabled(v22, v23);
  v100 = v12;
  v101 = v9;
  v105 = v20;
  if (v24)
  {
    v25 = (uint8_t *)swift_slowAlloc(12, -1);
    v26 = swift_slowAlloc(32, -1);
    v110 = v26;
    *(_DWORD *)v25 = 136446210;
    v108 = a1;
    v109[0] = a2;
    swift_unknownObjectRetain(a1);
    v27 = sub_100003DB8(qword_100326818);
    v29 = String.init<A>(describing:)(&v108, v27, v28);
    v31 = v30;
    v108 = (id)sub_100172BEC(v29, v30, &v110);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v108, v109, v25 + 4, v25 + 12);
    swift_unknownObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v31);
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "_revokeBanner: revoking %{public}s", v25, 0xCu);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n(a1, 2);
  }
  v32 = *(void **)&v5[qword_1003265E0];
  if (!v32)
  {
    v41 = v5;
    v42 = Logger.logObject.getter(v41);
    v43 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc(12, -1);
      v45 = (void *)swift_slowAlloc(32, -1);
      v108 = v45;
      *(_DWORD *)v44 = 136446210;
      v46 = *(_QWORD *)&v41[qword_1003265D8];
      v47 = *(_QWORD *)&v41[qword_1003265D8 + 8];
      swift_bridgeObjectRetain(v47);
      v110 = sub_100172BEC(v46, v47, (uint64_t *)&v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, &v111, v44 + 4, v44 + 12);

      swift_bridgeObjectRelease(v47);
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "_bannerSource for '%{public}s' has expired", v44, 0xCu);
      swift_arrayDestroy(v45, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v45, -1, -1);
      swift_slowDealloc(v44, -1, -1);

    }
    else
    {

    }
    return;
  }
  v33 = &v5[qword_1003265F0];
  swift_beginAccess(&v5[qword_1003265F0], &v110, 0, 0);
  v34 = *(_QWORD *)v33;
  if (!*(_QWORD *)v33)
  {
    v48 = v32;
    v49 = Logger.logObject.getter(v48);
    v50 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v51 = 0;
      _os_log_impl((void *)&_mh_execute_header, v49, v50, "_revokeBanner when no presentable is active, ignoring", v51, 2u);
      swift_slowDealloc(v51, -1, -1);
    }

    return;
  }
  v98 = *((unsigned __int16 *)v33 + 8);
  v35 = v32;
  v36 = objc_msgSend((id)swift_unknownObjectRetain(v34), "requestIdentifier");
  v99 = v34;
  if (v36)
  {
    v37 = v36;
    v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
    v40 = v39;

  }
  else
  {
    v38 = 0;
    v40 = 0;
  }
  v52 = objc_msgSend(a1, "requestIdentifier");
  if (!v52)
  {
    v57 = v35;
    if (!v40)
      goto LABEL_30;
    goto LABEL_24;
  }
  v53 = v52;
  v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
  v56 = v55;

  v57 = v35;
  if (!v40)
  {
    if (!v56)
      goto LABEL_30;
    goto LABEL_26;
  }
  if (!v56)
  {
LABEL_24:
    v56 = v40;
LABEL_26:
    swift_bridgeObjectRelease(v56);
    goto LABEL_27;
  }
  if (v38 == v54 && v40 == v56)
  {
    swift_bridgeObjectRelease(v40);
    swift_bridgeObjectRelease(v56);
    goto LABEL_30;
  }
  v63 = _stringCompareWithSmolCheck(_:_:expecting:)(v38, v40, v54, v56, 0);
  swift_bridgeObjectRelease(v40);
  swift_bridgeObjectRelease(v56);
  if ((v63 & 1) == 0)
  {
LABEL_27:
    v59 = Logger.logObject.getter(v58);
    v60 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v59, v60))
    {
      v61 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v61 = 0;
      v62 = "_revokeBanner for non-active presentable, ignoring";
LABEL_41:
      _os_log_impl((void *)&_mh_execute_header, v59, v60, v62, v61, 2u);
      swift_slowDealloc(v61, -1, -1);
      swift_unknownObjectRelease(v99);

LABEL_57:
      return;
    }
LABEL_42:

LABEL_43:
    swift_unknownObjectRelease(v99);
    return;
  }
LABEL_30:
  v65 = sub_100239A30((uint64_t)&v108);
  if (*(_QWORD *)v64)
    *(_BYTE *)(v64 + 17) = 2;
  v66 = ((uint64_t (*)(id *, _QWORD))v65)(&v108, 0);
  if (v98 > 2u)
  {
    v59 = Logger.logObject.getter(v66);
    v60 = static os_log_type_t.default.getter(v59);
    if (os_log_type_enabled(v59, v60))
    {
      v61 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v61 = 0;
      v62 = "_revokeBanner for presentable for which revoke is already in progress, ignoring";
      goto LABEL_41;
    }
    goto LABEL_42;
  }
  v67 = objc_msgSend(a1, "requestIdentifier");
  v108 = 0;
  v68 = objc_msgSend(v57, "revokePresentableWithRequestIdentifier:reason:animated:userInfo:error:", v67, v103, v104 & 1, 0, &v108);

  v69 = v108;
  if (v68)
  {
    v70 = v108;

    if (*(_QWORD *)v33 && !v33[16])
    {
      if (qword_1003157A8 != -1)
        swift_once(&qword_1003157A8, sub_10008E038);
      sub_100245D60(a1);
    }
    else
    {
      v72 = sub_100239A30((uint64_t)&v108);
      if (*(_QWORD *)v71)
        *(_BYTE *)(v71 + 16) = 3;
      v72((uint64_t)&v108, 0);
    }
    swift_unknownObjectRelease(v99);
    goto LABEL_57;
  }
  v73 = v108;
  v74 = _convertNSErrorToError(_:)(v69);

  swift_willThrow(v75);
  v76 = v101;
  v77 = v102;
  v78 = v100;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v102 + 16))(v100, v105, v101);
  swift_unknownObjectRetain(a1);
  swift_errorRetain(v74);
  swift_unknownObjectRetain(a1);
  v79 = swift_errorRetain(v74);
  v80 = Logger.logObject.getter(v79);
  v81 = static os_log_type_t.error.getter();
  if (!os_log_type_enabled(v80, v81))
  {
    swift_unknownObjectRelease_n(a1, 2);
    swift_errorRelease(v74);
    swift_errorRelease(v74);

    v94.n128_f64[0] = (*(double (**)(_BYTE *, uint64_t))(v77 + 8))(v78, v76);
    goto LABEL_48;
  }
  v104 = v57;
  v105 = a2;
  v82 = swift_slowAlloc(22, -1);
  v103 = (void *)swift_slowAlloc(64, -1);
  v108 = v103;
  *(_DWORD *)v82 = 136446466;
  v83 = objc_msgSend(a1, "requestIdentifier");
  if (v83)
  {
    v84 = v83;
    v85 = static String._unconditionallyBridgeFromObjectiveC(_:)(v83);
    v87 = v86;

    v106 = sub_100172BEC(v85, v87, (uint64_t *)&v108);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, &v107, v82 + 4, v82 + 12);
    swift_unknownObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v87);
    *(_WORD *)(v82 + 12) = 2082;
    v106 = v74;
    swift_errorRetain(v74);
    v88 = sub_100003DB8((uint64_t *)&unk_100324AA0);
    v90 = String.init<A>(describing:)(&v106, v88, v89);
    v92 = v91;
    v106 = sub_100172BEC(v90, v91, (uint64_t *)&v108);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, &v107, v82 + 14, v82 + 22);
    swift_bridgeObjectRelease(v92);
    swift_errorRelease(v74);
    swift_errorRelease(v74);
    _os_log_impl((void *)&_mh_execute_header, v80, v81, "revokeBanner(%{public}s) failed: %{public}s", (uint8_t *)v82, 0x16u);
    v93 = v103;
    swift_arrayDestroy(v103, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v93, -1, -1);
    swift_slowDealloc(v82, -1, -1);

    (*(void (**)(_BYTE *, uint64_t))(v102 + 8))(v100, v101);
    v57 = v104;
LABEL_48:
    v95 = (void *)_convertErrorToNSError(_:)(v74, v94);
    v96 = objc_msgSend(v95, "code");

    if (v96 == (id)3)
    {
      if (qword_1003157A0 != -1)
        swift_once(&qword_1003157A0, sub_10008E004);
      sub_100245D60(a1);
    }

    swift_errorRelease(v74);
    goto LABEL_43;
  }
  swift_errorRelease(v74);
  swift_unknownObjectRelease(a1);
  __break(1u);
}

void sub_10023BD1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_10023BD6C();

  }
}

void sub_10023BD6C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  __n128 v12;
  char v13;
  char *v14;
  __int16 v15;
  char *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  __int16 v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  __int16 v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int16 v42;
  uint64_t v43;
  __int128 v44;
  __int16 v45;
  uint64_t v46;
  char v47[24];

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  v6 = (_QWORD *)((char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_100315838 != -1)
    swift_once(&qword_100315838, sub_1000D9630);
  v7 = type metadata accessor for Logger(0);
  v8 = sub_10000D744(v7, (uint64_t)qword_10033FD60);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "executePendingStateUpdate", v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }

  sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  *v6 = static OS_dispatch_queue.main.getter(v12);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v2);
  v13 = _dispatchPreconditionTest(_:)(v6);
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v6, v2);
  if ((v13 & 1) != 0)
  {
    v14 = &v1[qword_1003265F0];
    swift_beginAccess(&v1[qword_1003265F0], v47, 1, 0);
    if (*(_QWORD *)v14 && (v15 = *((_WORD *)v14 + 8), v15 == 5))
    {
      if ((v15 & 0xFF00) == 0x200)
      {
        v16 = v1;
        v17 = Logger.logObject.getter(v16);
        v18 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v17, v18))
        {
          v19 = (uint8_t *)swift_slowAlloc(12, -1);
          v20 = swift_slowAlloc(32, -1);
          v46 = v20;
          *(_DWORD *)v19 = 136446210;
          v21 = *((_WORD *)v14 + 8);
          v44 = *(_OWORD *)v14;
          v45 = v21;
          swift_unknownObjectRetain(v44);
          v22 = sub_100003DB8(&qword_10032B1D0);
          v24 = String.init<A>(describing:)(&v44, v22, v23);
          v26 = v25;
          *(_QWORD *)&v44 = sub_100172BEC(v24, v25, &v46);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, (char *)&v44 + 8, v19 + 4, v19 + 12);

          swift_bridgeObjectRelease(v26);
          _os_log_impl((void *)&_mh_execute_header, v17, v18, "executePendingStateUpdate request expired, current presentable == %{public}s", v19, 0xCu);
          swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v20, -1, -1);
          swift_slowDealloc(v19, -1, -1);

        }
        else
        {

        }
        v43 = *(_QWORD *)v14;
        *((_WORD *)v14 + 8) = 0;
        *(_QWORD *)v14 = 0;
        *((_QWORD *)v14 + 1) = 0;
        swift_unknownObjectRelease(v43);
        sub_1002397C8();
      }
      else
      {
        sub_10023A8AC(HIBYTE(v15) & 1);
        v39 = v38;
        v40 = *(_QWORD *)v14;
        *(_QWORD *)v14 = v38;
        *((_QWORD *)v14 + 1) = v41;
        *((_WORD *)v14 + 8) = v42;
        swift_unknownObjectRetain(v38);
        swift_unknownObjectRelease(v40);
        sub_1002397C8();
        swift_unknownObjectRelease(v39);
      }
    }
    else
    {
      v27 = v1;
      v28 = Logger.logObject.getter(v27);
      v29 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc(12, -1);
        v31 = swift_slowAlloc(32, -1);
        v46 = v31;
        *(_DWORD *)v30 = 136446210;
        v32 = *((_WORD *)v14 + 8);
        v44 = *(_OWORD *)v14;
        v45 = v32;
        swift_unknownObjectRetain(v44);
        v33 = sub_100003DB8(&qword_10032B1D0);
        v35 = String.init<A>(describing:)(&v44, v33, v34);
        v37 = v36;
        *(_QWORD *)&v44 = sub_100172BEC(v35, v36, &v46);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, (char *)&v44 + 8, v30 + 4, v30 + 12);

        swift_bridgeObjectRelease(v37);
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "executePendingStateUpdate request overridden, current presentable == %{public}s", v30, 0xCu);
        swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v31, -1, -1);
        swift_slowDealloc(v30, -1, -1);

      }
      else
      {

      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for SessionEnvironmentFactory()
{
  return objc_opt_self(_TtC8SOSBuddy25SessionEnvironmentFactory);
}

void sub_10023C240()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t Strong;
  _QWORD *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  os_log_type_t v68;
  uint8_t *v69;
  NSObject *oslog;

  v1 = v0;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 8);
  if (Strong)
  {
    v3 = (_QWORD *)Strong;
    v4 = v0[9];
    sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
    v5 = swift_retain(v0);
    v6 = static OS_dispatch_queue.main.getter(v5);
    v7 = sub_100003DB8(&qword_10032B1D8);
    v8 = swift_allocObject(v7, 40, 7);
    swift_weakInit(v8 + 16);
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
      && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
    {
      sub_100209204((uint64_t)_swiftEmptyArrayStorage);
    }
    else
    {
      v9 = &_swiftEmptySetSingleton;
    }
    *(_QWORD *)(v8 + 32) = v9;
    swift_weakAssign(v8 + 16, v1);
    swift_release(v1);
    *(_QWORD *)(v8 + 24) = v6;
    v10 = *(_QWORD *)(v1[10] + 16);
    swift_retain(v10);
    v12 = sub_100242520(v11, (uint64_t)sub_10023C8BC, 0);
    swift_retain(v12);
    swift_release(v10);
    swift_release(v8);
    v13 = v1[6];
    v14 = *(_QWORD *)(v13 + qword_1003265A0);
    swift_retain(v14);
    v16 = sub_100242778(v15, (uint64_t)sub_10023C994, 0);
    swift_retain(v16);
    swift_release(v14);
    swift_release(v12);
    v17 = *(_QWORD *)(v13 + qword_1003265B0);
    swift_retain(v17);
    v19 = sub_1002429D0(v18, (uint64_t)sub_10023C998, 0);
    swift_retain(v19);
    swift_release(v17);
    swift_release(v16);
    v20 = *(_QWORD *)(v13 + qword_1003265A8);
    swift_retain(v20);
    v22 = sub_1002429D0(v21, (uint64_t)sub_10023CB88, 0);
    swift_retain(v22);
    swift_release(v20);
    swift_release(v19);
    v23 = *(_QWORD *)(v13 + qword_1003265B8);
    swift_retain(v1);
    swift_retain(v23);
    v25 = sub_100242778(v24, (uint64_t)sub_100246710, (uint64_t)v1);
    swift_retain(v25);
    swift_release(v23);
    swift_release(v22);
    swift_release(v1);
    v26 = *(_QWORD *)(v13 + qword_1003265C0);
    swift_retain(v26);
    v28 = sub_100242C28(v27, (uint64_t)sub_10023D2CC, 0);
    swift_retain(v28);
    swift_release(v26);
    swift_release(v25);
    v29 = *(_QWORD *)(v13 + qword_1003265C8);
    swift_retain(v29);
    v31 = sub_100242E80(v30, (uint64_t)sub_10023D338, 0);
    swift_retain(v31);
    swift_release(v29);
    swift_release(v28);
    v32 = *(_QWORD *)(v13 + qword_1003265D0);
    swift_retain(v32);
    v34 = sub_100242E80(v33, (uint64_t)sub_10023D694, 0);
    swift_retain(v34);
    swift_release(v32);
    swift_release(v31);
    v35 = *(void **)(v3[9] + 24);
    v36 = swift_allocObject(&unk_1002FC570, 32, 7);
    *(_QWORD *)(v36 + 16) = v3;
    *(_QWORD *)(v36 + 24) = v4;
    swift_retain(v35);
    swift_unknownObjectRetain(v3);
    v37 = sub_100242520(v35, (uint64_t)sub_10024673C, v36);
    swift_retain(v37);
    swift_release(v35);
    swift_release(v34);
    swift_release(v36);
    v38 = *(_QWORD *)(v3[3] + 40);
    swift_retain(v38);
    v40 = sub_1002430D8(v39, (uint64_t)sub_10023DA40, 0);
    swift_retain(v40);
    swift_release(v38);
    swift_release(v37);
    v41 = *(_QWORD *)(v3[4] + 32);
    swift_retain(v41);
    v43 = sub_1002430D8(v42, (uint64_t)sub_10023DAA0, 0);
    swift_retain(v43);
    swift_release(v41);
    swift_release(v40);
    v44 = *(_QWORD *)(v3[5] + 24);
    swift_retain(v44);
    v46 = sub_100242520(v45, (uint64_t)sub_10023DADC, 0);
    swift_retain(v46);
    swift_release(v44);
    swift_release(v43);
    v47 = *(_QWORD *)(*(_QWORD *)(v3[6] + 112) + 48);
    swift_retain(v47);
    v49 = sub_100243330(v48, (uint64_t)sub_10023DCBC, 0);
    swift_retain(v49);
    swift_release(v47);
    swift_release(v46);
    v50 = *(_QWORD *)(*(_QWORD *)(v3[6] + 112) + 56);
    swift_retain(v50);
    v52 = sub_100242520(v51, (uint64_t)sub_10023DD08, 0);
    swift_retain(v52);
    swift_release(v50);
    swift_release(v49);
    v53 = *(_QWORD *)(*(_QWORD *)(v3[6] + 72) + 24);
    swift_retain(v53);
    v55 = sub_100242520(v54, (uint64_t)sub_10023DD6C, 0);
    swift_retain(v55);
    swift_release(v53);
    swift_release(v52);
    v56 = *(_QWORD *)(*(_QWORD *)(v3[6] + 96) + 24);
    swift_retain(v56);
    v58 = sub_100242520(v57, (uint64_t)sub_10023DDE4, 0);
    swift_retain(v58);
    swift_release(v56);
    swift_release(v55);
    v59 = *(_QWORD *)(*(_QWORD *)(v3[6] + 56) + 24);
    swift_retain(v59);
    v61 = sub_100242520(v60, (uint64_t)sub_10023DE20, 0);
    swift_retain(v61);
    swift_release(v59);
    swift_release(v58);
    v62 = *(_QWORD *)(*(_QWORD *)(v3[6] + 32) + 48);
    swift_retain(v62);
    v64 = sub_100243588(v63, (uint64_t)sub_10023DE98, 0);
    swift_retain(v64);
    swift_release(v62);
    swift_unknownObjectRelease(v3);
    swift_release(v61);
    v65 = v1[11];
    v1[11] = v64;
    swift_release(v65);
  }
  else
  {
    if (qword_100315838 != -1)
      swift_once(&qword_100315838, sub_1000D9630);
    v66 = type metadata accessor for Logger(0);
    v67 = sub_10000D744(v66, (uint64_t)qword_10033FD60);
    oslog = Logger.logObject.getter(v67);
    v68 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v68))
    {
      v69 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v69 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v68, "Unexpected _deps == nil", v69, 2u);
      swift_slowDealloc(v69, -1, -1);
    }

  }
}

uint64_t sub_10023C8BC()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  if (qword_100315838 != -1)
    swift_once(&qword_100315838, sub_1000D9630);
  v0 = type metadata accessor for Logger(0);
  v1 = sub_10000D744(v0, (uint64_t)qword_10033FD60);
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "userAttentionTracker requested syncState", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }

  return sub_10023E4DC();
}

uint64_t sub_10023C998(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;

  v4 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  if (qword_100315838 != -1)
    swift_once(&qword_100315838, sub_1000D9630);
  v6 = type metadata accessor for Logger(0);
  sub_10000D744(v6, (uint64_t)qword_10033FD60);
  v8 = swift_bridgeObjectRetain_n(v3, 2, v7);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    *(_DWORD *)v11 = 136315138;
    v23 = v12;
    v20 = v4;
    v21 = v3;
    v22 = v5;
    swift_bridgeObjectRetain(v3);
    v13 = sub_100003DB8(&qword_10032B200);
    v15 = String.init<A>(describing:)(&v20, v13, v14);
    v17 = v16;
    v20 = sub_100172BEC(v15, v16, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21, v11 + 4, v11 + 12);
    swift_bridgeObjectRelease_n(v3, 2);
    swift_bridgeObjectRelease(v17);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "bannerExpandedByExternalRequest - %s", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v3, 2);
  }
  v18 = *(_QWORD *)(a1 + 80);
  swift_retain(v18);
  sub_1001F95BC(v5);
  swift_release(v18);
  return sub_10023E4DC();
}

uint64_t sub_10023CB88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t Strong;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;

  v4 = sub_100003DB8(&qword_100316AD8);
  __chkstk_darwin(v4, v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)a2;
  v8 = *(_QWORD *)(a2 + 8);
  v31 = *(unsigned __int8 *)(a2 + 16);
  if (qword_100315838 != -1)
    swift_once(&qword_100315838, sub_1000D9630);
  v10 = type metadata accessor for Logger(0);
  sub_10000D744(v10, (uint64_t)qword_10033FD60);
  v12 = swift_bridgeObjectRetain_n(v8, 2, v11);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(12, -1);
    v16 = swift_slowAlloc(32, -1);
    *(_DWORD *)v15 = 136315138;
    v32 = v16;
    v33 = v9;
    v34 = v8;
    v35 = v31;
    swift_bridgeObjectRetain(v8);
    v17 = sub_100003DB8(&qword_10032B200);
    v19 = String.init<A>(describing:)(&v33, v17, v18);
    v21 = v20;
    v33 = sub_100172BEC(v19, v20, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v15 + 4, v15 + 12);
    swift_bridgeObjectRelease_n(v8, 2);
    swift_bridgeObjectRelease(v21);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "bannerCollapsedByExternalRequest - %s", v15, 0xCu);
    swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v15, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v8, 2);
  }
  v22 = *(_QWORD *)(a1 + 80);
  if (*(_QWORD *)(*(_QWORD *)(v22 + 56) + 16))
  {
    swift_retain(*(_QWORD *)(a1 + 80));
    sub_1001F8868(0);
    swift_release(v22);
  }
  result = sub_10023E4DC();
  if ((v31 & 1) != 0)
  {
    v24 = *(_QWORD *)(a1 + 24);
    Strong = swift_unknownObjectWeakLoadStrong(a1 + 64);
    if (Strong)
    {
      v26 = Strong;
      v27 = *(_QWORD *)(Strong + 40);
      swift_retain(v24);
      swift_retain(v27);
      swift_unknownObjectRelease(v26);
      v28 = v27 + OBJC_IVAR____TtC8SOSBuddy21BannerAppearanceModel_bannerMode;
      swift_beginAccess(v27 + OBJC_IVAR____TtC8SOSBuddy21BannerAppearanceModel_bannerMode, &v33, 0, 0);
      sub_10022A15C(v28, (uint64_t)v7);
      swift_release(v27);
    }
    else
    {
      v29 = type metadata accessor for ConnectionAssitantBannerMode.Mode(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v7, 1, 1, v29);
      swift_retain(v24);
    }
    PassthroughSubject.send(_:)(v7);
    swift_release(v24);
    return sub_100007FF0((uint64_t)v7, &qword_100316AD8);
  }
  return result;
}

uint64_t sub_10023CE84()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  __n128 v21;
  void *v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  void *v25;
  __n128 v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD aBlock[5];
  uint64_t v38;

  v33 = type metadata accessor for DispatchWorkItemFlags(0);
  v36 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33, v0);
  v2 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DispatchQoS(0);
  v34 = *(_QWORD *)(v3 - 8);
  v35 = v3;
  __chkstk_darwin(v3, v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchTime(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  v15 = (char *)&v33 - v14;
  if (qword_100315838 != -1)
    swift_once(&qword_100315838, sub_1000D9630);
  v16 = type metadata accessor for Logger(0);
  v17 = sub_10000D744(v16, (uint64_t)qword_10033FD60);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "removedByExternalRequest", v20, 2u);
    swift_slowDealloc(v20, -1, -1);
  }

  sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v22 = (void *)static OS_dispatch_queue.main.getter(v21);
  static DispatchTime.now()(v22);
  + infix(_:_:)(v11, 0.8);
  v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  v23(v11, v7);
  v24 = swift_allocObject(&unk_1002FC520, 24, 7);
  swift_weakInit(v24 + 16);
  aBlock[4] = sub_1002467B8;
  v38 = v24;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001BAACC;
  aBlock[3] = &unk_1002FC650;
  v25 = _Block_copy(aBlock);
  swift_release(v38);
  static DispatchQoS.unspecified.getter(v26);
  aBlock[0] = _swiftEmptyArrayStorage;
  v27 = sub_10006A7F8();
  v28 = sub_100003DB8((uint64_t *)&unk_1003178D0);
  v29 = sub_1000084FC((unint64_t *)&qword_10031B320, (uint64_t *)&unk_1003178D0, (uint64_t)&protocol conformance descriptor for [A]);
  v30 = v28;
  v31 = v33;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v30, v29, v33, v27);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v15, v6, v2, v25);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v36 + 8))(v2, v31);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v6, v35);
  return ((uint64_t (*)(char *, uint64_t))v23)(v15, v7);
}

uint64_t sub_10023D1C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t result;
  uint64_t v8;
  _BYTE v9[24];

  v1 = a1 + 16;
  if (qword_100315838 != -1)
    swift_once(&qword_100315838, sub_1000D9630);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_10000D744(v2, (uint64_t)qword_10033FD60);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Check if the banner is required still after it was forecefully removed", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  swift_beginAccess(v1, v9, 0, 0);
  result = swift_weakLoadStrong(v1);
  if (result)
  {
    v8 = result;
    sub_10023E4DC();
    return swift_release(v8);
  }
  return result;
}

uint64_t sub_10023D2CC(uint64_t a1, char *a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v7;

  v3 = *a2;
  v4 = *(_QWORD *)(a1 + 80);
  swift_retain(v4);
  sub_1001F8C18(v3);
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 32);
  v7 = v3;
  swift_retain(v5);
  PassthroughSubject.send(_:)(&v7);
  return swift_release(v5);
}

uint64_t sub_10023D338(uint64_t a1, uint64_t a2)
{
  double v3;
  double v4;
  CGFloat x;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  int v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  double v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  CGFloat v34;
  CGSize v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  double v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  CGSize v44;
  __int128 v45;
  CGRect v46;
  CGRect v47;

  v4 = *(double *)a2;
  v3 = *(double *)(a2 + 8);
  x = *(double *)(a2 + 16);
  v6 = *(double *)(a2 + 24);
  v7 = *(double *)(a2 + 32);
  v8 = *(double *)(a2 + 40);
  v9 = *(unsigned __int8 *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  if (qword_100315838 != -1)
    swift_once(&qword_100315838, sub_1000D9630);
  v11 = type metadata accessor for Logger(0);
  sub_10000D744(v11, (uint64_t)qword_10033FD60);
  v13 = swift_bridgeObjectRetain_n(v10, 2, v12);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(12, -1);
    v17 = swift_slowAlloc(32, -1);
    v41 = v17;
    *(_DWORD *)v16 = 136446210;
    *(double *)&v42 = v4;
    *((double *)&v42 + 1) = v3;
    *(CGFloat *)&v43 = x;
    *((CGFloat *)&v43 + 1) = v6;
    v44.width = v7;
    v44.height = v8;
    LOBYTE(v45) = v9;
    *((_QWORD *)&v45 + 1) = v10;
    v18 = swift_bridgeObjectRetain(v10);
    v19 = String.init<A>(describing:)(&v42, &type metadata for PreferredBannerLayout, v18);
    v20 = v9;
    v22 = v21;
    *(_QWORD *)&v42 = sub_100172BEC(v19, v21, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, (char *)&v42 + 8, v16 + 4, v16 + 12);
    swift_bridgeObjectRelease_n(v10, 2);
    v23 = v22;
    v9 = v20;
    swift_bridgeObjectRelease(v23);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Preferred banner layout will change: %{public}s", v16, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v10, 2);
  }
  result = swift_unknownObjectWeakLoadStrong(a1 + 64);
  if (result)
  {
    v25 = result;
    v26 = *(_QWORD *)(result + 40);
    swift_retain(v26);
    swift_unknownObjectRelease(v25);
    v27 = *(_OWORD *)(v26 + 96);
    v42 = *(_OWORD *)(v26 + 80);
    v43 = v27;
    v28 = *(_OWORD *)(v26 + 128);
    v44 = *(CGSize *)(v26 + 112);
    v45 = v28;
    if (*(double *)&v42 == v4 && *((double *)&v42 + 1) == v3)
    {
      v39 = v3;
      v40 = v4;
      v29 = v7;
      v30 = v6;
      v31 = x;
      v32 = v8;
      v34 = *((double *)&v43 + 1);
      v33 = *(double *)&v43;
      v35 = v44;
      swift_bridgeObjectRetain(v10);
      sub_100114354((uint64_t)&v42);
      v46.origin.x = v33;
      v47.origin.x = v31;
      v6 = v30;
      v7 = v29;
      v3 = v39;
      v4 = v40;
      v46.origin.y = v34;
      v8 = v32;
      v46.size = v35;
      x = v47.origin.x;
      v47.origin.y = v6;
      v47.size.width = v7;
      v47.size.height = v8;
      if (CGRectEqualToRect(v46, v47)
        && ((v9 ^ v45) & 1) == 0
        && (sub_1001BF404(*((_QWORD *)&v45 + 1), v10) & 1) != 0)
      {
        goto LABEL_15;
      }
    }
    else
    {
      swift_bridgeObjectRetain(v10);
      sub_100114354((uint64_t)&v42);
    }
    v36 = sub_100003DB8(&qword_10032B0E0);
    v37 = sub_1000084FC((unint64_t *)&qword_100317750, &qword_10032B0E0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
    Subject<>.send()(v36, v37);
LABEL_15:
    v38 = *(_QWORD *)(v26 + 136);
    *(double *)(v26 + 80) = v4;
    *(double *)(v26 + 88) = v3;
    *(CGFloat *)(v26 + 96) = x;
    *(CGFloat *)(v26 + 104) = v6;
    *(CGFloat *)(v26 + 112) = v7;
    *(CGFloat *)(v26 + 120) = v8;
    *(_BYTE *)(v26 + 128) = v9;
    *(_QWORD *)(v26 + 136) = v10;
    swift_bridgeObjectRelease(v38);
    sub_100229458((uint64_t)&v42);
    sub_1001143C0((uint64_t)&v42);
    return swift_release(v26);
  }
  return result;
}

uint64_t sub_10023D694(uint64_t a1, uint64_t a2)
{
  double v3;
  double v4;
  CGFloat x;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  int v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  double v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  CGFloat v34;
  CGSize v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  double v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  CGSize v44;
  __int128 v45;
  CGRect v46;
  CGRect v47;

  v4 = *(double *)a2;
  v3 = *(double *)(a2 + 8);
  x = *(double *)(a2 + 16);
  v6 = *(double *)(a2 + 24);
  v7 = *(double *)(a2 + 32);
  v8 = *(double *)(a2 + 40);
  v9 = *(unsigned __int8 *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  if (qword_100315838 != -1)
    swift_once(&qword_100315838, sub_1000D9630);
  v11 = type metadata accessor for Logger(0);
  sub_10000D744(v11, (uint64_t)qword_10033FD60);
  v13 = swift_bridgeObjectRetain_n(v10, 2, v12);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(12, -1);
    v17 = swift_slowAlloc(32, -1);
    v41 = v17;
    *(_DWORD *)v16 = 136446210;
    *(double *)&v42 = v4;
    *((double *)&v42 + 1) = v3;
    *(CGFloat *)&v43 = x;
    *((CGFloat *)&v43 + 1) = v6;
    v44.width = v7;
    v44.height = v8;
    LOBYTE(v45) = v9;
    *((_QWORD *)&v45 + 1) = v10;
    v18 = swift_bridgeObjectRetain(v10);
    v19 = String.init<A>(describing:)(&v42, &type metadata for PreferredBannerLayout, v18);
    v20 = v9;
    v22 = v21;
    *(_QWORD *)&v42 = sub_100172BEC(v19, v21, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, (char *)&v42 + 8, v16 + 4, v16 + 12);
    swift_bridgeObjectRelease_n(v10, 2);
    v23 = v22;
    v9 = v20;
    swift_bridgeObjectRelease(v23);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Preferred banner layout did change: %{public}s", v16, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v10, 2);
  }
  result = swift_unknownObjectWeakLoadStrong(a1 + 64);
  if (result)
  {
    v25 = result;
    v26 = *(_QWORD *)(result + 40);
    swift_retain(v26);
    swift_unknownObjectRelease(v25);
    v27 = *(_OWORD *)(v26 + 160);
    v42 = *(_OWORD *)(v26 + 144);
    v43 = v27;
    v28 = *(_OWORD *)(v26 + 192);
    v44 = *(CGSize *)(v26 + 176);
    v45 = v28;
    if (*(double *)&v42 == v4 && *((double *)&v42 + 1) == v3)
    {
      v39 = v3;
      v40 = v4;
      v29 = v7;
      v30 = v6;
      v31 = x;
      v32 = v8;
      v34 = *((double *)&v43 + 1);
      v33 = *(double *)&v43;
      v35 = v44;
      swift_bridgeObjectRetain(v10);
      sub_100114354((uint64_t)&v42);
      v46.origin.x = v33;
      v47.origin.x = v31;
      v6 = v30;
      v7 = v29;
      v3 = v39;
      v4 = v40;
      v46.origin.y = v34;
      v8 = v32;
      v46.size = v35;
      x = v47.origin.x;
      v47.origin.y = v6;
      v47.size.width = v7;
      v47.size.height = v8;
      if (CGRectEqualToRect(v46, v47)
        && ((v9 ^ v45) & 1) == 0
        && (sub_1001BF404(*((_QWORD *)&v45 + 1), v10) & 1) != 0)
      {
        goto LABEL_15;
      }
    }
    else
    {
      swift_bridgeObjectRetain(v10);
      sub_100114354((uint64_t)&v42);
    }
    v36 = sub_100003DB8(&qword_10032B0E0);
    v37 = sub_1000084FC((unint64_t *)&qword_100317750, &qword_10032B0E0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
    Subject<>.send()(v36, v37);
LABEL_15:
    v38 = *(_QWORD *)(v26 + 200);
    *(double *)(v26 + 144) = v4;
    *(double *)(v26 + 152) = v3;
    *(CGFloat *)(v26 + 160) = x;
    *(CGFloat *)(v26 + 168) = v6;
    *(CGFloat *)(v26 + 176) = v7;
    *(CGFloat *)(v26 + 184) = v8;
    *(_BYTE *)(v26 + 192) = v9;
    *(_QWORD *)(v26 + 200) = v10;
    swift_bridgeObjectRelease(v38);
    sub_10022979C((uint64_t)&v42);
    sub_1001143C0((uint64_t)&v42);
    return swift_release(v26);
  }
  return result;
}

uint64_t sub_10023D9F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)(a1 + 80);
  v4 = *(_BYTE *)(*(_QWORD *)(a3 + 72) + 48);
  swift_retain(v3);
  sub_1001F9728(v4);
  swift_release(v3);
  return sub_10023E4DC();
}

uint64_t sub_10023DA40(uint64_t a1, char *a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)(a1 + 80);
  v4 = *a2;
  swift_retain(v3);
  sub_1001F9988(v4);
  swift_release(v3);
  *(_BYTE *)(*(_QWORD *)(a1 + 48) + qword_1003265F8) = v4;
  sub_100239F50();
  return sub_10023E4DC();
}

uint64_t sub_10023DAA0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 80);
  swift_retain(v1);
  sub_1001F9C94();
  swift_release(v1);
  return sub_10023E4DC();
}

uint64_t sub_10023DADC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _BYTE v18[24];

  v2 = sub_100003DB8(&qword_100316AD8);
  __chkstk_darwin(v2, v3);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  result = swift_unknownObjectWeakLoadStrong(a1 + 64);
  if (result)
  {
    v7 = result;
    v8 = *(_QWORD *)(result + 40);
    swift_retain(v8);
    swift_unknownObjectRelease(v7);
    v9 = v8 + OBJC_IVAR____TtC8SOSBuddy21BannerAppearanceModel_bannerMode;
    swift_beginAccess(v8 + OBJC_IVAR____TtC8SOSBuddy21BannerAppearanceModel_bannerMode, v18, 0, 0);
    sub_10022A15C(v9, (uint64_t)v5);
    v10 = type metadata accessor for ConnectionAssitantBannerMode.Mode(0);
    LODWORD(v9) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v5, 1, v10);
    sub_100007FF0((uint64_t)v5, &qword_100316AD8);
    if ((_DWORD)v9 == 1)
    {
      v11 = *(_QWORD *)(a1 + 80);
      if (*(_QWORD *)(*(_QWORD *)(v11 + 56) + 16))
      {
        swift_retain(*(_QWORD *)(a1 + 80));
        sub_1001F8868(0);
        swift_release(v11);
        if (qword_100315838 != -1)
          swift_once(&qword_100315838, sub_1000D9630);
        v12 = type metadata accessor for Logger(0);
        v13 = sub_10000D744(v12, (uint64_t)qword_10033FD60);
        v14 = Logger.logObject.getter(v13);
        v15 = static os_log_type_t.default.getter(v14);
        if (os_log_type_enabled(v14, v15))
        {
          v16 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v16 = 0;
          _os_log_impl((void *)&_mh_execute_header, v14, v15, "Banner mode is nil, released all assertions", v16, 2u);
          swift_slowDealloc(v16, -1, -1);
        }

        sub_10023E4DC();
      }
    }
    return swift_release(v8);
  }
  return result;
}

uint64_t sub_10023DCBC(uint64_t a1, _BYTE *a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 80);
  swift_retain(v3);
  sub_1001F9EF4(a2);
  swift_release(v3);
  return sub_10023E4DC();
}

uint64_t sub_10023DD08(uint64_t a1)
{
  uint64_t v1;
  Swift::Int v2;

  v1 = *(_QWORD *)(a1 + 80);
  v2 = sub_1002096D0((uint64_t)&off_1002E26B0);
  swift_retain(v1);
  sub_1001F849C(0, v2);
  swift_release(v1);
  swift_bridgeObjectRelease(v2);
  return sub_10023E4DC();
}

uint64_t sub_10023DD6C(uint64_t a1)
{
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  Strong = swift_unknownObjectWeakLoadStrong(a1 + 64);
  if (Strong)
  {
    v3 = Strong;
    v4 = *(_QWORD *)(*(_QWORD *)(Strong + 48) + 72);
    swift_retain(v4);
    swift_unknownObjectRelease(v3);
    v5 = *(_QWORD *)(a1 + 80);
    swift_retain(v5);
    sub_1001F8C9C();
    swift_release(v4);
    swift_release(v5);
  }
  return sub_10023E4DC();
}

uint64_t sub_10023DDE4(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 80);
  swift_retain(v1);
  sub_1001F8DC8();
  swift_release(v1);
  return sub_10023E4DC();
}

uint64_t sub_10023DE20(uint64_t a1)
{
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  Strong = swift_unknownObjectWeakLoadStrong(a1 + 64);
  if (Strong)
  {
    v3 = Strong;
    v4 = *(_QWORD *)(*(_QWORD *)(Strong + 48) + 56);
    swift_retain(v4);
    swift_unknownObjectRelease(v3);
    v5 = *(_QWORD *)(a1 + 80);
    swift_retain(v5);
    sub_1001F9360(v4);
    swift_release(v4);
    swift_release(v5);
  }
  return sub_10023E4DC();
}

uint64_t sub_10023DE98()
{
  return sub_10023E4DC();
}

void sub_10023DEB8(uint64_t a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t Strong;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  CGPoint v25;
  __int128 v26;
  CGPoint v28;
  CGSize v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  CGPoint v36;
  CGSize v37;
  __int128 v38;
  CGPoint v40;
  CGSize v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  __int128 v55;
  CGPoint v56;
  CGSize v57;
  __int128 v58;
  __int128 v59;
  CGPoint v60;
  CGSize v61;
  __int128 v62;
  CGRect v63;
  CGRect v64;
  CGRect v65;
  CGRect v66;

  v4 = v3;
  v8 = type metadata accessor for DispatchPredicate(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  v12 = (_QWORD *)((char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = v3 + 64;
  Strong = swift_unknownObjectWeakLoadStrong(v3 + 64);
  if (Strong)
  {
    v15 = Strong;
    v16 = *(_QWORD *)(Strong + 40);
    swift_retain(v16);
    swift_unknownObjectRelease(v15);
    v17 = *(double *)(v16 + 64);
    v18 = *(double *)(v16 + 72);
    if (v17 != a2 || v18 != a3)
    {
      v20 = sub_100003DB8(&qword_10032B0E0);
      v21 = sub_1000084FC((unint64_t *)&qword_100317750, &qword_10032B0E0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
      Subject<>.send()(v20, v21);
    }
    *(double *)(v16 + 64) = a2;
    *(double *)(v16 + 72) = a3;
    sub_100229214(v17, v18);
    swift_release(v16);
  }
  v22 = swift_unknownObjectWeakLoadStrong(v13);
  if (v22)
  {
    v23 = v22;
    v24 = *(_QWORD *)(v22 + 40);
    swift_retain(v24);
    swift_unknownObjectRelease(v23);
    v25 = *(CGPoint *)(v24 + 96);
    v59 = *(_OWORD *)(v24 + 80);
    v60 = v25;
    v26 = *(_OWORD *)(v24 + 128);
    v61 = *(CGSize *)(v24 + 112);
    v62 = v26;
    if (*(double *)&v59 == a2 && *((double *)&v59 + 1) == a3)
    {
      v28 = v60;
      v29 = v61;
      sub_100114354((uint64_t)&v59);
      v65.origin.x = 0.0;
      v65.origin.y = 0.0;
      v65.size.width = 0.0;
      v65.size.height = 0.0;
      v63.origin = v28;
      v63.size = v29;
      if (CGRectEqualToRect(v63, v65)
        && (v62 & 1) == 0
        && (sub_1001BF404(*((_QWORD *)&v62 + 1), &_swiftEmptySetSingleton) & 1) != 0)
      {
        goto LABEL_18;
      }
    }
    else
    {
      sub_100114354((uint64_t)&v59);
    }
    v30 = sub_100003DB8(&qword_10032B0E0);
    v31 = sub_1000084FC((unint64_t *)&qword_100317750, &qword_10032B0E0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
    Subject<>.send()(v30, v31);
LABEL_18:
    v32 = *(_QWORD *)(v24 + 136);
    *(double *)(v24 + 80) = a2;
    *(double *)(v24 + 88) = a3;
    *(_OWORD *)(v24 + 96) = 0u;
    *(_OWORD *)(v24 + 112) = 0u;
    *(_BYTE *)(v24 + 128) = 0;
    *(_QWORD *)(v24 + 136) = &_swiftEmptySetSingleton;
    swift_bridgeObjectRelease(v32);
    sub_100229458((uint64_t)&v59);
    sub_1001143C0((uint64_t)&v59);
    swift_release(v24);
  }
  v33 = swift_unknownObjectWeakLoadStrong(v13);
  if (!v33)
    goto LABEL_30;
  v34 = v33;
  v35 = *(_QWORD *)(v33 + 40);
  swift_retain(v35);
  swift_unknownObjectRelease(v34);
  v36 = *(CGPoint *)(v35 + 160);
  v55 = *(_OWORD *)(v35 + 144);
  v37 = *(CGSize *)(v35 + 176);
  v38 = *(_OWORD *)(v35 + 192);
  v56 = v36;
  v57 = v37;
  v58 = v38;
  if (*(double *)&v55 == a2 && *((double *)&v55 + 1) == a3)
  {
    v40 = v56;
    v41 = v57;
    sub_100114354((uint64_t)&v55);
    v66.origin.x = 0.0;
    v66.origin.y = 0.0;
    v66.size.width = 0.0;
    v66.size.height = 0.0;
    v64.origin = v40;
    v64.size = v41;
    if (CGRectEqualToRect(v64, v66)
      && (v58 & 1) == 0
      && (sub_1001BF404(*((_QWORD *)&v58 + 1), &_swiftEmptySetSingleton) & 1) != 0)
    {
      goto LABEL_29;
    }
  }
  else
  {
    sub_100114354((uint64_t)&v55);
  }
  v42 = sub_100003DB8(&qword_10032B0E0);
  v43 = sub_1000084FC((unint64_t *)&qword_100317750, &qword_10032B0E0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  Subject<>.send()(v42, v43);
LABEL_29:
  v44 = *(_QWORD *)(v35 + 200);
  *(double *)(v35 + 144) = a2;
  *(double *)(v35 + 152) = a3;
  *(_OWORD *)(v35 + 160) = 0u;
  *(_OWORD *)(v35 + 176) = 0u;
  *(_BYTE *)(v35 + 192) = 0;
  *(_QWORD *)(v35 + 200) = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease(v44);
  sub_10022979C((uint64_t)&v55);
  sub_1001143C0((uint64_t)&v55);
  swift_release(v35);
LABEL_30:
  v45 = *(_QWORD *)(v4 + 80);
  swift_retain(v45);
  sub_1001F7F34();
  swift_release(v45);
  v46 = *(_QWORD *)(v4 + 48);
  sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  *v12 = static OS_dispatch_queue.main.getter(v47);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v8);
  LOBYTE(v45) = _dispatchPreconditionTest(_:)(v12);
  (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v12, v8);
  if ((v45 & 1) == 0)
  {
    __break(1u);
LABEL_38:
    swift_once(&qword_100315838, sub_1000D9630);
    goto LABEL_33;
  }
  swift_unknownObjectWeakAssign(v46 + qword_1003265E8, a1);
  v48 = swift_allocObject(&unk_1002FC520, 24, 7);
  swift_weakInit(v48 + 16);
  swift_retain(v48);
  v49 = sub_10007F9E0((uint64_t)sub_1002466C0, v48);
  swift_release_n(v48);
  if ((v49 & 1) != 0)
    return;
  if (qword_100315838 != -1)
    goto LABEL_38;
LABEL_33:
  v50 = type metadata accessor for Logger(0);
  v51 = sub_10000D744(v50, (uint64_t)qword_10033FD60);
  v52 = Logger.logObject.getter(v51);
  v53 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v52, v53))
  {
    v54 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v54 = 0;
    _os_log_impl((void *)&_mh_execute_header, v52, v53, "Failed to start statusBarAgent", v54, 2u);
    swift_slowDealloc(v54, -1, -1);
  }

}

uint64_t sub_10023E3CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  __n128 v8;
  char v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  v6 = (uint64_t *)((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10007FDE0();
  v7 = *(_QWORD *)(v0 + 48);
  sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  *v6 = static OS_dispatch_queue.main.getter(v8);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v2);
  v9 = _dispatchPreconditionTest(_:)(v6);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v6, v2);
  if ((v9 & 1) != 0)
  {
    swift_unknownObjectWeakAssign(v7 + qword_1003265E8, 0);
    sub_10023A0A4(2u);
    v11 = *(_QWORD *)(v1 + 80);
    swift_retain(v11);
    sub_1001F7F34();
    return swift_release(v11);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10023E4DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::Int v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  _BOOL4 v32;
  uint64_t v33;
  unsigned __int8 v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  _DWORD v44[4];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE v52[24];
  _QWORD v53[8];
  __int16 v54;

  v1 = sub_100003DB8(&qword_100316AD8);
  __chkstk_darwin(v1, v2);
  v4 = (char *)v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = v0;
  v5 = v0 + 64;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 64);
  v7 = Strong;
  v50 = v5;
  v48 = v4;
  if (Strong)
  {
    v8 = *(_QWORD *)(*(_QWORD *)(Strong + 48) + 32);
    swift_retain(v8);
    swift_unknownObjectRelease(v7);
    v10 = *(_QWORD *)(v8 + 56);
    v9 = *(_QWORD *)(v8 + 64);
    v7 = *(_QWORD *)(v8 + 72);
    v11 = *(_QWORD *)(v8 + 80);
    v13 = *(_QWORD *)(v8 + 88);
    v12 = *(_QWORD *)(v8 + 96);
    v15 = *(_QWORD *)(v8 + 104);
    v14 = *(_QWORD *)(v8 + 112);
    v16 = *(unsigned __int16 *)(v8 + 120);
    sub_10007F464(v10, v9, v7, v11, v13, v12, v15, v14);
    v17 = v8;
    v18 = v16;
    swift_release(v17);
  }
  else
  {
    v10 = 0;
    v9 = 0;
    v11 = 0;
    v13 = 0;
    v12 = 0;
    v15 = 0;
    v14 = 0;
    v18 = 0;
  }
  v49 = v10;
  v53[0] = v10;
  v53[1] = v9;
  v47 = v7;
  v53[2] = v7;
  v53[3] = v11;
  v53[4] = v13;
  v53[5] = v12;
  v53[6] = v15;
  v53[7] = v14;
  v54 = v18;
  v19 = *(_QWORD *)(v51 + 80);
  swift_retain(v19);
  sub_1001F9F6C((uint64_t)v53);
  swift_release(v19);
  v20 = v15;
  v45 = v12;
  v46 = v11;
  v44[3] = v18;
  v21 = v9;
  if (v9)
  {
    swift_bridgeObjectRetain(v13);
    v22 = sub_1002096C4((uint64_t)&off_1002E1D98);
    if (v13)
    {
      v23 = sub_1001BF5E8(v13, v22);
      swift_bridgeObjectRelease(v13);
      goto LABEL_9;
    }
  }
  else
  {
    v22 = sub_1002096C4((uint64_t)&off_1002E1D98);
  }
  v23 = 0;
LABEL_9:
  v24 = (uint64_t)v48;
  v25 = v50;
  swift_bridgeObjectRelease(v22);
  v26 = swift_unknownObjectWeakLoadStrong(v25);
  if (!v26)
  {
    v33 = type metadata accessor for ConnectionAssitantBannerMode.Mode(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v24, 1, 1, v33);
    sub_100007FF0(v24, &qword_100316AD8);
LABEL_15:
    sub_10007ED6C(v49, v21, v47, v46, v13, v45, v20, v14);
LABEL_16:
    v34 = 2;
    goto LABEL_17;
  }
  v27 = v26;
  v28 = *(_QWORD *)(v26 + 40);
  swift_retain(v28);
  swift_unknownObjectRelease(v27);
  v29 = v28 + OBJC_IVAR____TtC8SOSBuddy21BannerAppearanceModel_bannerMode;
  swift_beginAccess(v28 + OBJC_IVAR____TtC8SOSBuddy21BannerAppearanceModel_bannerMode, v52, 0, 0);
  sub_10022A15C(v29, v24);
  swift_release(v28);
  v30 = type metadata accessor for ConnectionAssitantBannerMode.Mode(0);
  v31 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v24, 1, v30);
  sub_100007FF0(v24, &qword_100316AD8);
  if ((v23 & 1) != 0 || v31 == 1)
    goto LABEL_15;
  if (v21)
  {
    v32 = v49 == 5;
    sub_10007ED6C(v49, v21, v47, v46, v13, v45, v20, v14);
  }
  else
  {
    v32 = 0;
  }
  v36 = swift_unknownObjectWeakLoadStrong(v50);
  if (v36
    && (v37 = v36,
        v38 = *(_QWORD *)(v36 + 32),
        swift_retain(v38),
        swift_unknownObjectRelease(v37),
        v39 = *(unsigned __int8 *)(v38 + 42),
        swift_release(v38),
        v39 != 2))
  {
    v40 = v39 & 1;
  }
  else
  {
    v40 = 0;
  }
  v41 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v51 + 80) + 56) + 16);
  v34 = v41 != 0;
  if (((v32 | v40) & 1) == 0 && !v41)
    goto LABEL_16;
  if ((sub_1001BB6AC() & 1) == 0)
  {
    v42 = *(_QWORD *)(v51 + 80);
    swift_retain(v42);
    v43 = sub_1001FA600();
    swift_release(v42);
    v34 = (v41 != 0) & ~v43;
  }
LABEL_17:
  sub_10023A0A4(v34);
  return sub_10023E8A8();
}

uint64_t sub_10023E8A8()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  int v30;
  int v31;
  char v33;
  uint64_t v34;

  v34 = v0 + 64;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 64);
  if (!Strong)
    goto LABEL_5;
  v2 = Strong;
  v3 = *(_QWORD **)(*(_QWORD *)(Strong + 48) + 32);
  swift_retain(v3);
  swift_unknownObjectRelease(v2);
  v4 = v3[7];
  v5 = v3[8];
  v6 = v3[9];
  v7 = v3[10];
  v8 = v3[11];
  v9 = v3[12];
  v10 = v3[13];
  v11 = v3[14];
  sub_10007F464(v4, v5, v6, v7, v8, v9, v10, v11);
  swift_release(v3);
  if (!v5)
  {
LABEL_5:
    v12 = sub_1002096C4((uint64_t)&off_1002E1D70);
    goto LABEL_6;
  }
  swift_bridgeObjectRetain(v8);
  sub_10007ED6C(v4, v5, v6, v7, v8, v9, v10, v11);
  v12 = sub_1002096C4((uint64_t)&off_1002E1D70);
  if (!v8)
  {
LABEL_6:
    swift_bridgeObjectRelease(v12);
    v14 = 1;
    goto LABEL_7;
  }
  v13 = sub_1001BF5E8(v8, v12);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v12);
  v14 = v13 ^ 1;
LABEL_7:
  v15 = swift_unknownObjectWeakLoadStrong(v34);
  if (!v15)
    goto LABEL_13;
  v16 = v15;
  v33 = v14;
  v17 = *(_QWORD **)(*(_QWORD *)(v15 + 48) + 32);
  swift_retain(v17);
  swift_unknownObjectRelease(v16);
  v18 = v17[7];
  v19 = v17[8];
  v20 = v17[9];
  v21 = v17[10];
  v22 = v17[11];
  v23 = v17[12];
  v24 = v17[13];
  v25 = v17[14];
  sub_10007F464(v18, v19, v20, v21, v22, v23, v24, v25);
  swift_release(v17);
  if (!v19)
    goto LABEL_13;
  sub_10007ED6C(v18, v19, v20, v21, v22, v23, v24, v25);
  if ((v33 & (v18 == 5)) == 1)
  {
    v26 = swift_unknownObjectWeakLoadStrong(v34);
    if (v26)
    {
      v27 = v26;
      v28 = *(_QWORD *)(*(_QWORD *)(v26 + 48) + 96);
      swift_retain(v28);
      swift_unknownObjectRelease(v27);
      v29 = *(unsigned __int8 *)(*(_QWORD *)(v28 + 48) + 120);
      swift_release(v28);
      if (v29 == 9)
        v30 = 0;
      else
        v30 = (v29 < 2) << 8;
      v31 = 1;
    }
    else
    {
      v30 = 0;
      v31 = 1;
    }
  }
  else
  {
LABEL_13:
    v30 = 0;
    v31 = 0;
  }
  return sub_100080038(v30 | v31);
}

double sub_10023EB20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  double result;
  uint64_t v8;
  char **v9;
  _BYTE v10[24];

  v1 = v0;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 64);
  if (Strong)
  {
    v3 = Strong;
    v4 = *(_QWORD *)(Strong + 32);
    swift_retain(v4);
    swift_unknownObjectRelease(v3);
    LOBYTE(v3) = *(_BYTE *)(v4 + 42);
    swift_release(v4);
    if ((v3 & 1) != 0)
    {
      v5 = *(_QWORD *)(v1 + 80);
      swift_retain(v5);
      sub_1001F95BC(1);
      swift_release(v5);
    }
  }
  sub_10023E4DC();
  v6 = (uint64_t *)(*(_QWORD *)(v1 + 48) + qword_1003265F0);
  *(_QWORD *)&result = swift_beginAccess(v6, v10, 0, 0).n128_u64[0];
  v8 = *v6;
  if (*v6)
  {
    v9 = (char **)swift_unknownObjectRetain(v8);
    sub_10023A54C(v9);
    *(_QWORD *)&result = swift_unknownObjectRelease(v8).n128_u64[0];
  }
  return result;
}

uint64_t sub_10023EBEC()
{
  uint64_t v0;

  v0 = sub_100241340();
  return swift_deallocClassInstance(v0, 96, 7);
}

uint64_t type metadata accessor for _SessionEnvironmentBannerSession()
{
  return objc_opt_self(_TtC8SOSBuddyP33_566C6ABEEF8435CF5EE888C5D69093A932_SessionEnvironmentBannerSession);
}

_QWORD *sub_10023EC28()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  __n128 v7;
  __n128 v8;
  id v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;

  v1 = v0;
  v2 = sub_100003DB8(&qword_10032B0E0);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v0[2] = PassthroughSubject.init()(v3);
  v4 = sub_100003DB8(&qword_100322A90);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v0[3] = PassthroughSubject.init()(v5);
  v6 = sub_100003DB8(&qword_10031D150);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  v0[4] = PassthroughSubject.init()(v7);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  v0[5] = PassthroughSubject.init()(v8);
  v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v10 = objc_msgSend(v9, "bundleIdentifier");

  if (v10)
  {
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

  }
  else
  {
    v13 = 0x8000000100260990;
    v11 = 0xD000000000000012;
  }
  v14 = objc_allocWithZone((Class)sub_100003DB8(&qword_10032B260));
  v1[6] = sub_100239AA8(v11, v13);
  v1[7] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StatusBarAgent()), "init");
  v1[9] = 0;
  swift_unknownObjectWeakInit(v1 + 8, 0);
  v15 = type metadata accessor for SessionUserAttentionTracker(0);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  v1[10] = sub_1001FAB74();
  v1[11] = 0;
  return v1;
}

double sub_10023EDC4()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_retain(*(_QWORD *)(*(_QWORD *)v0 + 16)).n128_u64[0];
  return result;
}

double sub_10023EDD0()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_retain(*(_QWORD *)(*(_QWORD *)v0 + 24)).n128_u64[0];
  return result;
}

double sub_10023EDDC()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_retain(*(_QWORD *)(*(_QWORD *)v0 + 32)).n128_u64[0];
  return result;
}

double sub_10023EDE8()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_retain(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) + 24)).n128_u64[0];
  return result;
}

double sub_10023EDF8()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_retain(*(_QWORD *)(*(_QWORD *)v0 + 40)).n128_u64[0];
  return result;
}

void sub_10023EE08()
{
  sub_10023C240();
}

uint64_t sub_10023EE28()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  *(_QWORD *)(*(_QWORD *)v0 + 88) = 0;
  return swift_release(v1);
}

void sub_10023EE38(uint64_t a1, double a2, double a3)
{
  sub_10023DEB8(a1, a2, a3);
}

uint64_t sub_10023EE58()
{
  return sub_10023E3CC();
}

uint64_t sub_10023EE78()
{
  return sub_10023E4DC();
}

uint64_t sub_10023EE9C()
{
  return sub_1001BB6AC() & 1;
}

void sub_10023EEC4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t Strong;
  _QWORD *v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  os_log_type_t v61;
  uint8_t *v62;
  NSObject *oslog;

  v1 = v0;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 8);
  if (Strong)
  {
    v3 = (_QWORD *)Strong;
    sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
    v4 = swift_retain(v0);
    v5 = static OS_dispatch_queue.main.getter(v4);
    v6 = sub_100003DB8(&qword_10032B0E8);
    v7 = swift_allocObject(v6, 40, 7);
    swift_weakInit(v7 + 16);
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
      && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
    {
      sub_100209204((uint64_t)_swiftEmptyArrayStorage);
    }
    else
    {
      v8 = &_swiftEmptySetSingleton;
    }
    *(_QWORD *)(v7 + 32) = v8;
    swift_weakAssign(v7 + 16, v1);
    swift_release(v1);
    *(_QWORD *)(v7 + 24) = v5;
    v9 = *(_QWORD *)(v1[10] + 16);
    swift_retain(v9);
    v11 = sub_1002437E0(v10, (uint64_t)sub_10023F46C, 0);
    swift_retain(v11);
    swift_release(v9);
    swift_release(v7);
    v12 = v1[6];
    v13 = *(_QWORD *)(v12 + OBJC_IVAR____TtC8SOSBuddy11BannerAgent_bannerTapped);
    swift_retain(v13);
    v15 = sub_100243A38(v14, (uint64_t)sub_10023C994, 0);
    swift_retain(v15);
    swift_release(v13);
    swift_release(v11);
    v16 = *(_QWORD *)(v12 + OBJC_IVAR____TtC8SOSBuddy11BannerAgent_bannerDismissedByUser);
    swift_retain(v16);
    v18 = sub_100243A38(v17, (uint64_t)sub_10023F5B0, 0);
    swift_retain(v18);
    swift_release(v16);
    swift_release(v15);
    v19 = *(_QWORD *)(v12 + OBJC_IVAR____TtC8SOSBuddy11BannerAgent_anyBannerPresentedChanged);
    swift_retain(v19);
    v21 = sub_100243C90(v20, (uint64_t)sub_10023F6FC, 0);
    swift_retain(v21);
    swift_release(v19);
    swift_release(v18);
    v22 = *(_QWORD *)(v12 + OBJC_IVAR____TtC8SOSBuddy11BannerAgent_preferredBannerSizeWillChange);
    swift_retain(v22);
    v24 = sub_100243EE8(v23, (uint64_t)sub_10023F770, 0);
    swift_retain(v24);
    swift_release(v22);
    swift_release(v21);
    v25 = *(_QWORD *)(v12 + OBJC_IVAR____TtC8SOSBuddy11BannerAgent_preferredBannerSizeDidChange);
    swift_retain(v25);
    v27 = sub_100243EE8(v26, (uint64_t)sub_10023F920, 0);
    swift_retain(v27);
    swift_release(v25);
    swift_release(v24);
    v28 = *(_QWORD *)(v3[9] + 24);
    swift_retain(v28);
    v30 = sub_1002437E0(v29, (uint64_t)sub_10023FB48, 0);
    swift_retain(v30);
    swift_release(v28);
    swift_release(v27);
    v31 = *(_QWORD *)(*(_QWORD *)(v3[6] + 112) + 48);
    swift_retain(v31);
    v33 = sub_100244140(v32, (uint64_t)sub_10023FB6C, 0);
    swift_retain(v33);
    swift_release(v31);
    swift_release(v30);
    v34 = *(_QWORD *)(*(_QWORD *)(v3[6] + 112) + 56);
    swift_retain(v34);
    v36 = sub_1002437E0(v35, (uint64_t)sub_10023FBBC, 0);
    swift_retain(v36);
    swift_release(v34);
    swift_release(v33);
    v37 = *(_QWORD *)(*(_QWORD *)(v3[6] + 72) + 24);
    swift_retain(v37);
    v39 = sub_1002437E0(v38, (uint64_t)sub_10023FC24, 0);
    swift_retain(v39);
    swift_release(v37);
    swift_release(v36);
    v40 = *(_QWORD *)(*(_QWORD *)(v3[6] + 96) + 24);
    swift_retain(v40);
    v42 = sub_1002437E0(v41, (uint64_t)sub_10023FCA0, 0);
    swift_retain(v42);
    swift_release(v40);
    swift_release(v39);
    v43 = *(_QWORD *)(v3[3] + 40);
    swift_retain(v43);
    v45 = sub_100244398(v44, (uint64_t)sub_10023FCE0, 0);
    swift_retain(v45);
    swift_release(v43);
    swift_release(v42);
    v46 = *(_QWORD *)(v3[4] + 32);
    swift_retain(v46);
    v48 = sub_100244398(v47, (uint64_t)sub_10023FD30, 0);
    swift_retain(v48);
    swift_release(v46);
    swift_release(v45);
    v49 = *(_QWORD *)(v3[5] + 24);
    swift_retain(v49);
    v51 = sub_1002437E0(v50, (uint64_t)sub_10023FD70, 0);
    swift_retain(v51);
    swift_release(v49);
    swift_release(v48);
    v52 = *(_QWORD *)(*(_QWORD *)(v3[6] + 56) + 24);
    swift_retain(v52);
    v54 = sub_1002437E0(v53, (uint64_t)sub_10023FF54, 0);
    swift_retain(v54);
    swift_release(v52);
    swift_release(v51);
    v55 = *(_QWORD *)(*(_QWORD *)(v3[6] + 32) + 48);
    swift_retain(v55);
    v57 = sub_1002445F0(v56, (uint64_t)sub_10023FB48, 0);
    swift_retain(v57);
    swift_release(v55);
    swift_unknownObjectRelease(v3);
    swift_release(v54);
    v58 = v1[11];
    v1[11] = v57;
    swift_release(v58);
  }
  else
  {
    if (qword_100315838 != -1)
      swift_once(&qword_100315838, sub_1000D9630);
    v59 = type metadata accessor for Logger(0);
    v60 = sub_10000D744(v59, (uint64_t)qword_10033FD60);
    oslog = Logger.logObject.getter(v60);
    v61 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v61))
    {
      v62 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v62 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v61, "Unexpected _deps == nil", v62, 2u);
      swift_slowDealloc(v62, -1, -1);
    }

  }
}

uint64_t sub_10023F46C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  if (qword_100315838 != -1)
    swift_once(&qword_100315838, sub_1000D9630);
  v0 = type metadata accessor for Logger(0);
  v1 = sub_10000D744(v0, (uint64_t)qword_10033FD60);
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "userAttentionTracker requested syncState", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }

  sub_100240898();
  return sub_100240E44();
}

uint64_t sub_10023F548(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(a1 + 16);
  swift_retain(v1);
  v2 = sub_100003DB8(&qword_10032B0E0);
  v3 = sub_1000084FC((unint64_t *)&qword_100317750, &qword_10032B0E0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  Subject<>.send()(v2, v3);
  return swift_release(v1);
}

uint64_t sub_10023F5B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v15[24];

  v2 = sub_100003DB8(&qword_100316AD8);
  __chkstk_darwin(v2, v3);
  v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = *(_QWORD *)(a1 + 80);
  if (*(_QWORD *)(*(_QWORD *)(v6 + 56) + 16))
  {
    swift_retain(*(_QWORD *)(a1 + 80));
    sub_1001F8868(0);
    swift_release(v6);
  }
  sub_100240898();
  sub_100240E44();
  v7 = *(_QWORD *)(a1 + 24);
  Strong = swift_unknownObjectWeakLoadStrong(a1 + 64);
  if (Strong)
  {
    v9 = Strong;
    v10 = *(_QWORD *)(Strong + 40);
    swift_retain(v7);
    swift_retain(v10);
    swift_unknownObjectRelease(v9);
    v11 = v10 + OBJC_IVAR____TtC8SOSBuddy21BannerAppearanceModel_bannerMode;
    swift_beginAccess(v10 + OBJC_IVAR____TtC8SOSBuddy21BannerAppearanceModel_bannerMode, v15, 0, 0);
    sub_10022A15C(v11, (uint64_t)v5);
    swift_release(v10);
  }
  else
  {
    v12 = type metadata accessor for ConnectionAssitantBannerMode.Mode(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v5, 1, 1, v12);
    swift_retain(v7);
  }
  PassthroughSubject.send(_:)(v5);
  swift_release(v7);
  return sub_100007FF0((uint64_t)v5, &qword_100316AD8);
}

uint64_t sub_10023F6FC(uint64_t a1, char *a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v7;

  v3 = *a2;
  sub_100240E44();
  v4 = *(_QWORD *)(a1 + 80);
  swift_retain(v4);
  sub_1001F8C18(v3);
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 32);
  v7 = v3;
  swift_retain(v5);
  PassthroughSubject.send(_:)(&v7);
  return swift_release(v5);
}

void sub_10023F770(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  NSObject *oslog;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *a2;
  v3 = a2[1];
  if (qword_100315838 != -1)
    swift_once(&qword_100315838, sub_1000D9630);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_10000D744(v4, (uint64_t)qword_10033FD60);
  oslog = Logger.logObject.getter(v5);
  v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(oslog, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v17 = v8;
    *(_DWORD *)v7 = 136446210;
    v15 = v2;
    v16 = v3;
    type metadata accessor for CGSize(0);
    v11 = String.init<A>(describing:)(&v15, v9, v10);
    v13 = v12;
    v15 = sub_100172BEC(v11, v12, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v7 + 4, v7 + 12);
    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, oslog, v6, "Preferred banner size will change: %{public}s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_10023F920(uint64_t a1, double *a2)
{
  double v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;

  v3 = *a2;
  v4 = a2[1];
  if (qword_100315838 != -1)
    swift_once(&qword_100315838, sub_1000D9630);
  v5 = type metadata accessor for Logger(0);
  v6 = sub_10000D744(v5, (uint64_t)qword_10033FD60);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v26 = v10;
    *(_DWORD *)v9 = 136446210;
    v24 = *(_QWORD *)&v3;
    v25 = v4;
    type metadata accessor for CGSize(0);
    v13 = String.init<A>(describing:)(&v24, v11, v12);
    v15 = v14;
    v24 = sub_100172BEC(v13, v14, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v9 + 4, v9 + 12);
    swift_bridgeObjectRelease(v15);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Preferred banner size did change: %{public}s", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }

  result = swift_unknownObjectWeakLoadStrong(a1 + 64);
  if (result)
  {
    v17 = result;
    v18 = *(_QWORD *)(result + 40);
    swift_retain(v18);
    swift_unknownObjectRelease(v17);
    v19 = *(double *)(v18 + 48);
    v20 = *(double *)(v18 + 56);
    if (v19 != v3 || v20 != v4)
    {
      v22 = sub_100003DB8(&qword_10032B0E0);
      v23 = sub_1000084FC((unint64_t *)&qword_100317750, &qword_10032B0E0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
      Subject<>.send()(v22, v23);
    }
    *(double *)(v18 + 48) = v3;
    *(double *)(v18 + 56) = v4;
    sub_100228FD0(v19, v20);
    return swift_release(v18);
  }
  return result;
}

uint64_t sub_10023FB48()
{
  sub_100240898();
  return sub_100240E44();
}

uint64_t sub_10023FB6C(uint64_t a1, _BYTE *a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 80);
  swift_retain(v3);
  sub_1001F9EF4(a2);
  swift_release(v3);
  sub_100240898();
  return sub_100240E44();
}

uint64_t sub_10023FBBC(uint64_t a1)
{
  uint64_t v1;
  Swift::Int v2;

  v1 = *(_QWORD *)(a1 + 80);
  v2 = sub_1002096D0((uint64_t)&off_1002E26D8);
  swift_retain(v1);
  sub_1001F849C(0, v2);
  swift_release(v1);
  swift_bridgeObjectRelease(v2);
  sub_100240898();
  return sub_100240E44();
}

uint64_t sub_10023FC24(uint64_t a1)
{
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  Strong = swift_unknownObjectWeakLoadStrong(a1 + 64);
  if (Strong)
  {
    v3 = Strong;
    v4 = *(_QWORD *)(*(_QWORD *)(Strong + 48) + 72);
    swift_retain(v4);
    swift_unknownObjectRelease(v3);
    v5 = *(_QWORD *)(a1 + 80);
    swift_retain(v5);
    sub_1001F8C9C();
    swift_release(v4);
    swift_release(v5);
  }
  sub_100240898();
  return sub_100240E44();
}

uint64_t sub_10023FCA0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 80);
  swift_retain(v1);
  sub_1001F8DC8();
  swift_release(v1);
  sub_100240898();
  return sub_100240E44();
}

uint64_t sub_10023FCE0(uint64_t a1, char *a2)
{
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(a1 + 80);
  v3 = *a2;
  swift_retain(v2);
  sub_1001F9988(v3);
  swift_release(v2);
  sub_100240898();
  return sub_100240E44();
}

uint64_t sub_10023FD30(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 80);
  swift_retain(v1);
  sub_1001F9C94();
  swift_release(v1);
  sub_100240898();
  return sub_100240E44();
}

uint64_t sub_10023FD70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _BYTE v18[24];

  v2 = sub_100003DB8(&qword_100316AD8);
  __chkstk_darwin(v2, v3);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  result = swift_unknownObjectWeakLoadStrong(a1 + 64);
  if (result)
  {
    v7 = result;
    v8 = *(_QWORD *)(result + 40);
    swift_retain(v8);
    swift_unknownObjectRelease(v7);
    v9 = v8 + OBJC_IVAR____TtC8SOSBuddy21BannerAppearanceModel_bannerMode;
    swift_beginAccess(v8 + OBJC_IVAR____TtC8SOSBuddy21BannerAppearanceModel_bannerMode, v18, 0, 0);
    sub_10022A15C(v9, (uint64_t)v5);
    v10 = type metadata accessor for ConnectionAssitantBannerMode.Mode(0);
    LODWORD(v9) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v5, 1, v10);
    sub_100007FF0((uint64_t)v5, &qword_100316AD8);
    if ((_DWORD)v9 == 1)
    {
      v11 = *(_QWORD *)(a1 + 80);
      if (*(_QWORD *)(*(_QWORD *)(v11 + 56) + 16))
      {
        swift_retain(*(_QWORD *)(a1 + 80));
        sub_1001F8868(0);
        swift_release(v11);
        if (qword_100315838 != -1)
          swift_once(&qword_100315838, sub_1000D9630);
        v12 = type metadata accessor for Logger(0);
        v13 = sub_10000D744(v12, (uint64_t)qword_10033FD60);
        v14 = Logger.logObject.getter(v13);
        v15 = static os_log_type_t.default.getter(v14);
        if (os_log_type_enabled(v14, v15))
        {
          v16 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v16 = 0;
          _os_log_impl((void *)&_mh_execute_header, v14, v15, "Banner mode is nil, released all assertions", v16, 2u);
          swift_slowDealloc(v16, -1, -1);
        }

        sub_100240898();
        sub_100240E44();
      }
    }
    return swift_release(v8);
  }
  return result;
}

uint64_t sub_10023FF54(uint64_t a1)
{
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  Strong = swift_unknownObjectWeakLoadStrong(a1 + 64);
  if (Strong)
  {
    v3 = Strong;
    v4 = *(_QWORD *)(*(_QWORD *)(Strong + 48) + 56);
    swift_retain(v4);
    swift_unknownObjectRelease(v3);
    v5 = *(_QWORD *)(a1 + 80);
    swift_retain(v5);
    sub_1001F9360(v4);
    swift_release(v4);
    swift_release(v5);
  }
  sub_100240898();
  return sub_100240E44();
}

void sub_10023FFD0(uint64_t a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t Strong;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t ObjectType;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;

  v4 = v3;
  v8 = type metadata accessor for DispatchPredicate(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  v12 = (uint64_t *)((char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = v3 + 64;
  Strong = swift_unknownObjectWeakLoadStrong(v3 + 64);
  if (Strong)
  {
    v15 = Strong;
    v16 = *(_QWORD *)(Strong + 40);
    swift_retain(v16);
    swift_unknownObjectRelease(v15);
    v17 = *(double *)(v16 + 32);
    v18 = *(double *)(v16 + 40);
    if (v17 != a2 || v18 != a3)
    {
      v20 = sub_100003DB8(&qword_10032B0E0);
      v21 = sub_1000084FC((unint64_t *)&qword_100317750, &qword_10032B0E0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
      Subject<>.send()(v20, v21);
    }
    *(double *)(v16 + 32) = a2;
    *(double *)(v16 + 40) = a3;
    sub_100228D8C(v17, v18);
    swift_release(v16);
  }
  v22 = swift_unknownObjectWeakLoadStrong(v13);
  if (v22)
  {
    v23 = v22;
    v24 = *(_QWORD *)(v22 + 40);
    swift_retain(v24);
    swift_unknownObjectRelease(v23);
    v25 = *(double *)(v24 + 48);
    v26 = *(double *)(v24 + 56);
    if (v25 != a2 || v26 != a3)
    {
      v28 = sub_100003DB8(&qword_10032B0E0);
      v29 = sub_1000084FC((unint64_t *)&qword_100317750, &qword_10032B0E0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
      Subject<>.send()(v28, v29);
    }
    *(double *)(v24 + 48) = a2;
    *(double *)(v24 + 56) = a3;
    sub_100228FD0(v25, v26);
    swift_release(v24);
  }
  v30 = *(_QWORD *)(v4 + 80);
  swift_retain(v30);
  sub_1001F7F34();
  swift_release(v30);
  v31 = *(_QWORD *)(v4 + 48);
  ObjectType = swift_getObjectType(a1);
  v33 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for BannerViewContentProducer);
  if (!v33)
  {
    __break(1u);
    return;
  }
  v34 = v33;
  sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  *v12 = static OS_dispatch_queue.main.getter(v35);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v8);
  v36 = _dispatchPreconditionTest(_:)(v12);
  (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v12, v8);
  if ((v36 & 1) == 0)
  {
    __break(1u);
LABEL_24:
    swift_once(&qword_100315838, sub_1000D9630);
    goto LABEL_19;
  }
  v37 = v31 + OBJC_IVAR____TtC8SOSBuddy11BannerAgent__contentProducer;
  *(_QWORD *)(v37 + 8) = v34;
  swift_unknownObjectWeakAssign(v37, a1);
  v38 = swift_allocObject(&unk_1002FC318, 24, 7);
  swift_weakInit(v38 + 16);
  swift_retain(v38);
  v39 = sub_10007F9E0((uint64_t)sub_1002465E0, v38);
  swift_release_n(v38);
  if ((v39 & 1) != 0)
    return;
  if (qword_100315838 != -1)
    goto LABEL_24;
LABEL_19:
  v40 = type metadata accessor for Logger(0);
  v41 = sub_10000D744(v40, (uint64_t)qword_10033FD60);
  v42 = Logger.logObject.getter(v41);
  v43 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v42, v43))
  {
    v44 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v44 = 0;
    _os_log_impl((void *)&_mh_execute_header, v42, v43, "Failed to start statusBarAgent", v44, 2u);
    swift_slowDealloc(v44, -1, -1);
  }

}

uint64_t sub_100240338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  void *v18;
  uint64_t v19;
  uint64_t Strong;
  void *v21;
  __n128 v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[5];
  uint64_t v31;
  _BYTE v32[24];

  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v29 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8, v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for DispatchQoS(0);
  v12 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28, v13);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1 + 16;
  sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v18 = (void *)static OS_dispatch_queue.main.getter(v17);
  v19 = swift_allocObject(a2, 24, 7);
  swift_beginAccess(v16, v32, 0, 0);
  Strong = swift_weakLoadStrong(v16);
  swift_weakInit(v19 + 16);
  swift_release(Strong);
  aBlock[4] = a3;
  v31 = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001BAACC;
  aBlock[3] = a4;
  v21 = _Block_copy(aBlock);
  swift_release(v31);
  static DispatchQoS.unspecified.getter(v22);
  aBlock[0] = _swiftEmptyArrayStorage;
  v23 = sub_10006A7F8();
  v24 = sub_100003DB8((uint64_t *)&unk_1003178D0);
  v25 = sub_1000084FC((unint64_t *)&qword_10031B320, (uint64_t *)&unk_1003178D0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v24, v25, v8, v23);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v11, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v28);
}

uint64_t sub_10024055C(uint64_t a1, void (*a2)(void))
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  _BYTE v6[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    a2();
    return swift_release(v5);
  }
  return result;
}

uint64_t sub_1002405B4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  void (*v10)(_QWORD *, uint64_t, _QWORD *);
  char v11;
  void (*v12)(_QWORD *, _QWORD *);
  uint64_t v13;
  __n128 v14;
  char v15;
  void *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v21;

  v1 = v0;
  v2 = (_QWORD *)type metadata accessor for DispatchPredicate(0);
  v3 = *(v2 - 1);
  __chkstk_darwin(v2, v4);
  v6 = (uint64_t *)((char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10007FDE0();
  v7 = *(_QWORD *)(v0 + 48);
  sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  *v6 = static OS_dispatch_queue.main.getter(v8);
  v9 = enum case for DispatchPredicate.onQueue(_:);
  v10 = *(void (**)(_QWORD *, uint64_t, _QWORD *))(v3 + 104);
  v10(v6, enum case for DispatchPredicate.onQueue(_:), v2);
  v11 = _dispatchPreconditionTest(_:)(v6);
  v12 = *(void (**)(_QWORD *, _QWORD *))(v3 + 8);
  v12(v6, v2);
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  v13 = v7 + OBJC_IVAR____TtC8SOSBuddy11BannerAgent__contentProducer;
  *(_QWORD *)(v13 + 8) = 0;
  v14 = swift_unknownObjectWeakAssign(v13, 0);
  *v6 = static OS_dispatch_queue.main.getter(v14);
  v10(v6, v9, v2);
  v15 = _dispatchPreconditionTest(_:)(v6);
  v12(v6, v2);
  if ((v15 & 1) == 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v16 = *(void **)(v7 + OBJC_IVAR____TtC8SOSBuddy11BannerAgent__activePresentable);
  if (v16)
  {
    v17 = qword_1003157B0;
    v2 = v16;
    if (v17 == -1)
    {
LABEL_5:
      v18 = (id)qword_10033FCE0;
      sub_1001B3E0C(v2, 0, v18);

      goto LABEL_6;
    }
LABEL_9:
    swift_once(&qword_1003157B0, sub_10008E06C);
    goto LABEL_5;
  }
LABEL_6:
  v19 = *(_QWORD *)(v1 + 80);
  swift_retain(v19);
  sub_1001F7F34();
  return swift_release(v19);
}

uint64_t sub_100240774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  void (*v9)(_QWORD *, uint64_t, uint64_t);
  char v10;
  uint64_t (*v11)(_QWORD *, uint64_t);
  uint64_t result;
  __n128 v13;
  char v14;
  uint64_t v15;

  v1 = type metadata accessor for DispatchPredicate(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  v5 = (uint64_t *)((char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(v0 + 48);
  sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  *v5 = static OS_dispatch_queue.main.getter(v7);
  v8 = enum case for DispatchPredicate.onQueue(_:);
  v9 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v2 + 104);
  v9(v5, enum case for DispatchPredicate.onQueue(_:), v1);
  v10 = _dispatchPreconditionTest(_:)(v5);
  v11 = *(uint64_t (**)(_QWORD *, uint64_t))(v2 + 8);
  result = v11(v5, v1);
  if ((v10 & 1) != 0)
  {
    *v5 = static OS_dispatch_queue.main.getter(v13);
    v9(v5, v8, v1);
    v14 = _dispatchPreconditionTest(_:)(v5);
    result = v11(v5, v1);
    if ((v14 & 1) != 0)
      return *(_QWORD *)(v6 + OBJC_IVAR____TtC8SOSBuddy11BannerAgent__activePresentable) != 0;
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_100240898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::Int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  void (*v54)(uint64_t *, uint64_t, uint64_t);
  uint64_t v55;
  void (*v56)(uint64_t *, uint64_t);
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  void *v64;
  uint64_t v65;
  id v66;
  _BYTE v67[12];
  int v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE v76[24];
  _QWORD v77[8];
  __int16 v78;

  v73 = type metadata accessor for DispatchPredicate(0);
  v70 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73, v1);
  v72 = (uint64_t *)&v67[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = sub_100003DB8(&qword_100316AD8);
  __chkstk_darwin(v3, v4);
  v69 = &v67[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = *(_QWORD *)(v0 + 80);
  v71 = v0;
  v74 = v6;
  v75 = v0 + 64;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 64);
  v8 = Strong;
  if (Strong)
  {
    v9 = *(_QWORD *)(*(_QWORD *)(Strong + 48) + 32);
    swift_retain(v74);
    swift_retain(v9);
    swift_unknownObjectRelease(v8);
    v10 = *(_QWORD *)(v9 + 64);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = *(_QWORD *)(v9 + 80);
    v8 = *(_QWORD *)(v9 + 88);
    v13 = *(_QWORD *)(v9 + 96);
    v15 = *(_QWORD *)(v9 + 104);
    v14 = *(_QWORD *)(v9 + 112);
    v16 = *(_WORD *)(v9 + 120);
    v17 = *(_QWORD *)(v9 + 56);
    sub_10007F464(v17, v10, v11, v12, v8, v13, v15, v14);
    swift_release(v9);
  }
  else
  {
    swift_retain(v74);
    v17 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v15 = 0;
    v14 = 0;
    v16 = 0;
  }
  v18 = v17;
  v77[0] = v17;
  v77[1] = v10;
  v77[2] = v11;
  v77[3] = v12;
  v77[4] = v8;
  v77[5] = v13;
  v77[6] = v15;
  v77[7] = v14;
  v78 = v16;
  v19 = v74;
  sub_1001F9F6C((uint64_t)v77);
  sub_10007ED6C(v18, v10, v11, v12, v8, v13, v15, v14);
  swift_release(v19);
  v20 = swift_unknownObjectWeakLoadStrong(v75);
  if (!v20)
    goto LABEL_8;
  v21 = v20;
  v22 = *(_QWORD **)(*(_QWORD *)(v20 + 48) + 32);
  swift_retain(v22);
  swift_unknownObjectRelease(v21);
  v23 = v22[7];
  v24 = v22[8];
  v25 = v22[9];
  v26 = v22[10];
  v27 = v22[11];
  v28 = v22[12];
  v29 = v22[13];
  v30 = v22[14];
  sub_10007F464(v23, v24, v25, v26, v27, v28, v29, v30);
  swift_release(v22);
  if (!v24)
  {
LABEL_8:
    v31 = sub_1002096C4((uint64_t)&off_1002E1DC0);
    goto LABEL_9;
  }
  swift_bridgeObjectRetain(v27);
  sub_10007ED6C(v23, v24, v25, v26, v27, v28, v29, v30);
  v31 = sub_1002096C4((uint64_t)&off_1002E1DC0);
  if (!v27)
  {
LABEL_9:
    v68 = 0;
    goto LABEL_10;
  }
  v68 = sub_1001BF5E8(v27, v31);
  swift_bridgeObjectRelease(v27);
LABEL_10:
  v32 = (uint64_t)v69;
  v33 = v70;
  swift_bridgeObjectRelease(v31);
  v34 = swift_unknownObjectWeakLoadStrong(v75);
  if (v34
    && (v35 = v34,
        v36 = *(_QWORD *)(v34 + 24),
        swift_retain(v36),
        swift_unknownObjectRelease(v35),
        v37 = *(unsigned __int8 *)(v36 + 80),
        swift_release(v36),
        v37 != 2))
  {
    LODWORD(v74) = v37 & 1;
  }
  else
  {
    LODWORD(v74) = 0;
  }
  v38 = swift_unknownObjectWeakLoadStrong(v75);
  if (v38)
  {
    v39 = v38;
    v40 = *(_QWORD *)(v38 + 72);
    swift_retain(v40);
    swift_unknownObjectRelease(v39);
    LODWORD(v39) = *(unsigned __int8 *)(v40 + 48);
    swift_release(v40);
    v41 = ((_DWORD)v39 == 2) | v39;
  }
  else
  {
    v41 = 1;
  }
  v42 = swift_unknownObjectWeakLoadStrong(v75);
  v43 = v42;
  if (v42)
  {
    v44 = *(_QWORD *)(v42 + 40);
    swift_retain(v44);
    swift_unknownObjectRelease(v43);
    v43 = v44 + OBJC_IVAR____TtC8SOSBuddy21BannerAppearanceModel_bannerMode;
    swift_beginAccess(v44 + OBJC_IVAR____TtC8SOSBuddy21BannerAppearanceModel_bannerMode, v76, 0, 0);
    sub_10022A15C(v43, v32);
    swift_release(v44);
    v45 = type metadata accessor for ConnectionAssitantBannerMode.Mode(0);
    LODWORD(v43) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 48))(v32, 1, v45) != 1;
  }
  else
  {
    v46 = type metadata accessor for ConnectionAssitantBannerMode.Mode(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v32, 1, 1, v46);
  }
  sub_100007FF0(v32, &qword_100316AD8);
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v71 + 80) + 56) + 16))
    v47 = v43;
  else
    v47 = 0;
  v48 = *(_QWORD *)(v71 + 48);
  sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v50 = static OS_dispatch_queue.main.getter(v49);
  v52 = v72;
  v51 = v73;
  *v72 = v50;
  v53 = enum case for DispatchPredicate.onQueue(_:);
  v54 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v33 + 104);
  v54(v52, enum case for DispatchPredicate.onQueue(_:), v51);
  v55 = _dispatchPreconditionTest(_:)(v52);
  v56 = *(void (**)(uint64_t *, uint64_t))(v33 + 8);
  v56(v52, v51);
  if ((v55 & 1) == 0)
  {
    __break(1u);
    goto LABEL_38;
  }
  v58 = OBJC_IVAR____TtC8SOSBuddy11BannerAgent__activePresentable;
  if (*(_QWORD *)(v48 + OBJC_IVAR____TtC8SOSBuddy11BannerAgent__activePresentable))
  {
    if (((v68 | v74 | v41) & 1) != 0 || v47 != 1)
      goto LABEL_32;
LABEL_31:
    sub_1001B33D8();
    return;
  }
  v59 = *(_QWORD *)(v71 + 80);
  swift_retain(v59);
  v60 = sub_1001FA600();
  swift_release(v59);
  if (((v68 | v74 | v41) & 1) == 0 && ((v47 ^ 1) & 1) == 0 && (v60 & 1) == 0)
    goto LABEL_31;
LABEL_32:
  v61 = static OS_dispatch_queue.main.getter(v57);
  v63 = v72;
  v62 = v73;
  *v72 = v61;
  v54(v63, v53, v62);
  v55 = _dispatchPreconditionTest(_:)(v63);
  v56(v63, v62);
  if ((v55 & 1) == 0)
  {
LABEL_38:
    __break(1u);
LABEL_39:
    swift_once(&qword_1003157B0, sub_10008E06C);
    goto LABEL_35;
  }
  v64 = *(void **)(v48 + v58);
  if (!v64)
    return;
  v65 = qword_1003157B0;
  v55 = v64;
  if (v65 != -1)
    goto LABEL_39;
LABEL_35:
  v66 = (id)qword_10033FCE0;
  sub_1001B3E0C((void *)v55, 0, v66);

}

uint64_t sub_100240E44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::Int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BOOL4 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  char v40;
  uint64_t result;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v1 = type metadata accessor for DispatchPredicate(0);
  v50 = *(_QWORD *)(v1 - 8);
  v51 = v1;
  __chkstk_darwin(v1, v2);
  v49 = (uint64_t *)((char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v52 = v0;
  v53 = v0 + 64;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 64);
  if (!Strong)
    goto LABEL_5;
  v5 = Strong;
  v6 = *(_QWORD **)(*(_QWORD *)(Strong + 48) + 32);
  swift_retain(v6);
  swift_unknownObjectRelease(v5);
  v7 = v6[7];
  v8 = v6[8];
  v9 = v6[9];
  v10 = v6[10];
  v11 = v6[11];
  v12 = v6[12];
  v13 = v6[13];
  v14 = v6[14];
  sub_10007F464(v7, v8, v9, v10, v11, v12, v13, v14);
  swift_release(v6);
  if (v8)
  {
    swift_bridgeObjectRetain(v11);
    sub_10007ED6C(v7, v8, v9, v10, v11, v12, v13, v14);
    v15 = sub_1002096C4((uint64_t)&off_1002E1DE8);
    if (v11)
    {
      v16 = sub_1001BF5E8(v11, v15);
      swift_bridgeObjectRelease(v11);
      goto LABEL_7;
    }
  }
  else
  {
LABEL_5:
    v15 = sub_1002096C4((uint64_t)&off_1002E1DE8);
  }
  v16 = 0;
LABEL_7:
  v17 = v53;
  swift_bridgeObjectRelease(v15);
  v18 = swift_unknownObjectWeakLoadStrong(v17);
  if (v18)
  {
    v19 = v18;
    HIDWORD(v48) = v16;
    v20 = *(_QWORD **)(*(_QWORD *)(v18 + 48) + 32);
    swift_retain(v20);
    swift_unknownObjectRelease(v19);
    v21 = v20[7];
    v22 = v20[8];
    v23 = v20[9];
    v24 = v20[10];
    v25 = v20[11];
    v26 = v20[12];
    v28 = v20[13];
    v27 = v20[14];
    sub_10007F464(v21, v22, v23, v24, v25, v26, v28, v27);
    swift_release(v20);
    if (v22)
    {
      v29 = v21 != 5;
      sub_10007ED6C(v21, v22, v23, v24, v25, v26, v28, v27);
    }
    else
    {
      v29 = 1;
    }
    v30 = v52;
    v17 = v53;
    v16 = HIDWORD(v48);
  }
  else
  {
    v29 = 1;
    v30 = v52;
  }
  v31 = swift_unknownObjectWeakLoadStrong(v17);
  if (v31)
  {
    v32 = v31;
    v33 = *(_QWORD *)(v31 + 24);
    swift_retain(v33);
    swift_unknownObjectRelease(v32);
    LOBYTE(v32) = *(_BYTE *)(v33 + 80);
    swift_release(v33);
    if ((v32 & 1) != 0)
      goto LABEL_17;
  }
  v34 = *(_QWORD *)(v30 + 48);
  sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v36 = static OS_dispatch_queue.main.getter(v35);
  v38 = v49;
  v37 = v50;
  *v49 = v36;
  v39 = v51;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v37 + 104))(v38, enum case for DispatchPredicate.onQueue(_:), v51);
  v40 = _dispatchPreconditionTest(_:)(v38);
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v37 + 8))(v38, v39);
  if ((v40 & 1) != 0)
  {
    if (!((v16 | v29) & 1 | (*(_QWORD *)(v34 + OBJC_IVAR____TtC8SOSBuddy11BannerAgent__activePresentable) != 0)))
    {
      v44 = swift_unknownObjectWeakLoadStrong(v17);
      if (v44
        && (v45 = v44,
            v46 = *(_QWORD *)(*(_QWORD *)(v44 + 48) + 96),
            swift_retain(v46),
            swift_unknownObjectRelease(v45),
            v47 = *(unsigned __int8 *)(*(_QWORD *)(v46 + 48) + 120),
            swift_release(v46),
            v47 != 9))
      {
        v42 = (v47 < 2) << 8;
      }
      else
      {
        v42 = 0;
      }
      v43 = 1;
      return sub_100080038(v42 | v43);
    }
LABEL_17:
    v42 = 0;
    v43 = 0;
    return sub_100080038(v42 | v43);
  }
  __break(1u);
  return result;
}

uint64_t sub_1002411BC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  char v14;
  uint64_t result;
  BOOL v16;
  uint64_t v17;
  BOOL v18;

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  v6 = (uint64_t *)((char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 8);
  if (Strong)
  {
    v8 = Strong;
    v9 = *(_QWORD *)(Strong + 32);
    swift_retain(v9);
    swift_unknownObjectRelease(v8);
    LOBYTE(v8) = *(_BYTE *)(v9 + 42);
    swift_release(v9);
    if ((v8 & 1) != 0)
    {
      v10 = v1[10];
      swift_retain(v10);
      sub_1001F95BC(1);
      swift_release(v10);
    }
  }
  sub_100240898();
  sub_100240E44();
  v11 = v1[5];
  v12 = v1[6];
  sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v13 = swift_retain(v11);
  *v6 = static OS_dispatch_queue.main.getter(v13);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v2);
  v14 = _dispatchPreconditionTest(_:)(v6);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v6, v2);
  if ((v14 & 1) != 0)
  {
    if (*(_QWORD *)(v12 + OBJC_IVAR____TtC8SOSBuddy11BannerAgent__activePresentable))
      v16 = 1;
    else
      v16 = *(_QWORD *)(*(_QWORD *)(v1[10] + 56) + 16) != 0;
    v18 = v16;
    PassthroughSubject.send(_:)(&v18);
    return swift_release(v11);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100241340()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));

  sub_100025CF8(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 80));
  swift_release(*(_QWORD *)(v0 + 88));
  return v0;
}

uint64_t type metadata accessor for _SessionEnvironmentBannerKitStatusBar()
{
  return objc_opt_self(_TtC8SOSBuddyP33_566C6ABEEF8435CF5EE888C5D69093A937_SessionEnvironmentBannerKitStatusBar);
}

_QWORD *sub_1002413BC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  __n128 v7;
  __n128 v8;
  id v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;

  v1 = v0;
  v2 = sub_100003DB8(&qword_10032B0E0);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v0[2] = PassthroughSubject.init()(v3);
  v4 = sub_100003DB8(&qword_100322A90);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v0[3] = PassthroughSubject.init()(v5);
  v6 = sub_100003DB8(&qword_10031D150);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  v0[4] = PassthroughSubject.init()(v7);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  v0[5] = PassthroughSubject.init()(v8);
  v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v10 = objc_msgSend(v9, "bundleIdentifier");

  if (v10)
  {
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

  }
  else
  {
    v13 = 0x8000000100260990;
    v11 = 0xD000000000000012;
  }
  v14 = objc_allocWithZone((Class)type metadata accessor for BannerAgent());
  v1[6] = sub_1001B2CB0(v11, v13);
  v1[7] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StatusBarAgent()), "init");
  v1[9] = 0;
  swift_unknownObjectWeakInit(v1 + 8, 0);
  v15 = type metadata accessor for SessionUserAttentionTracker(0);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  v1[10] = sub_1001FAB74();
  v1[11] = 0;
  return v1;
}

uint64_t sub_100241554(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;

  v5 = *v2;
  *(_QWORD *)(v5 + 72) = a2;
  swift_unknownObjectWeakAssign(v5 + 64, a1);
  v6 = *(_QWORD *)(v5 + 80);
  *(_QWORD *)(v6 + 40) = a2;
  return swift_unknownObjectWeakAssign(v6 + 32, a1);
}

void sub_1002415A0()
{
  sub_10023EEC4();
}

void sub_1002415C0(uint64_t a1, double a2, double a3)
{
  sub_10023FFD0(a1, a2, a3);
}

uint64_t sub_1002415E0()
{
  return sub_1002405B4();
}

uint64_t sub_100241600()
{
  sub_100240898();
  return sub_100240E44();
}

uint64_t sub_100241624()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  swift_retain(v1);
  sub_1001FA464();
  return swift_release(v1);
}

uint64_t sub_100241654()
{
  return sub_100240774() & 1;
}

uint64_t sub_100241678(uint64_t a1, uint64_t a2, void (*a3)(__n128))
{
  __n128 v5;
  uint64_t result;

  if (a2)
  {
    v5 = swift_retain(a2);
    a3(v5);
    return swift_release(a2);
  }
  return result;
}

uint64_t sub_1002416E0(uint64_t a1, uint64_t a2, void (*a3)(__n128))
{
  __n128 v5;
  uint64_t result;

  if (a2)
  {
    v5 = swift_retain(a2);
    a3(v5);
    return swift_release(a2);
  }
  return result;
}

uint64_t sub_100241760(uint64_t result, uint64_t a2, void (*a3)(__n128))
{
  uint64_t v3;
  char v4;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)(result + 8);
  v4 = *(_BYTE *)(result + 16);
  v8 = *(_QWORD *)result;
  v9 = v3;
  v10 = v4;
  if (a2)
  {
    v7 = swift_retain(a2);
    a3(v7);
    return swift_release(a2);
  }
  return result;
}

char *sub_1002417D0(char *result, uint64_t a2, void (*a3)(__n128))
{
  __n128 v5;
  char v6;

  v6 = *result;
  if (a2)
  {
    v5 = swift_retain(a2);
    a3(v5);
    return (char *)swift_release(a2);
  }
  return result;
}

uint64_t *sub_100241838(uint64_t *result, uint64_t a2, void (*a3)(__n128))
{
  uint64_t v3;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v3 = result[1];
  v7 = *result;
  v8 = v3;
  if (a2)
  {
    v6 = swift_retain(a2);
    a3(v6);
    return (uint64_t *)swift_release(a2);
  }
  return result;
}

uint64_t sub_1002418A0(uint64_t a1, uint64_t a2, void (*a3)(__n128))
{
  __n128 v5;
  uint64_t result;

  if (a2)
  {
    v5 = swift_retain(a2);
    a3(v5);
    return swift_release(a2);
  }
  return result;
}

uint64_t *sub_100241918(uint64_t *result, uint64_t a2, void (*a3)(__n128))
{
  __n128 v5;
  uint64_t v6;

  v6 = *result;
  if (a2)
  {
    v5 = swift_retain(a2);
    a3(v5);
    return (uint64_t *)swift_release(a2);
  }
  return result;
}

char *sub_100241980(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, char a7, void *a8, char *a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  id v23;
  char *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  char *v29;
  uint64_t v30;
  objc_class *v31;
  id v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  id v36;
  char *v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  char *v65;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77[3];
  id v78;
  objc_super v79;

  v75 = a3;
  v76 = a8;
  v73 = a5;
  v74 = a1;
  v13 = sub_100003DB8(&qword_100329AF0);
  __chkstk_darwin(v13, v14);
  v69 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100003DB8((uint64_t *)&unk_100326490);
  v71 = *(_QWORD *)(v16 - 8);
  v72 = v16;
  __chkstk_darwin(v16, v17);
  v70 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = &a9[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__contentProducer];
  *((_QWORD *)v19 + 1) = 0;
  swift_unknownObjectWeakInit(v19, 0);
  v20 = &a9[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__delegate];
  *((_QWORD *)v20 + 1) = 0;
  swift_unknownObjectWeakInit(v20, 0);
  v21 = &a9[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__content];
  *(_OWORD *)v21 = 0u;
  *((_OWORD *)v21 + 1) = 0u;
  *(_QWORD *)&a9[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__activeLayoutMode] = 0;
  v22 = OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController_tapGesture;
  v23 = objc_allocWithZone((Class)UITapGestureRecognizer);
  v24 = a9;
  *(_QWORD *)&a9[v22] = objc_msgSend(v23, "init");
  swift_unknownObjectWeakInit(&v24[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController_presentableContext], 0);
  *(_QWORD *)&v24[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController_dismissalPreventionAssertion] = 0;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_100209204((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    v25 = &_swiftEmptySetSingleton;
  }
  v27 = v73;
  v26 = v74;
  *(_QWORD *)&v24[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__subscriptions] = v25;
  v28 = (uint64_t *)&v24[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__requesterId];
  *v28 = v26;
  v28[1] = a2;
  v29 = &v24[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__requestId];
  *(_QWORD *)v29 = v75;
  *((_QWORD *)v29 + 1) = a4;
  *((_QWORD *)v19 + 1) = a6;
  swift_unknownObjectWeakAssign(v19, v27);
  v30 = 3;
  if ((a7 & 1) != 0)
    v30 = 4;
  *(_QWORD *)&v24[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__preferredLayoutMode] = v30;
  *((_QWORD *)v20 + 1) = &off_1002F77C8;
  swift_unknownObjectWeakAssign(v20, v76);
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a4);

  v31 = (objc_class *)type metadata accessor for SessionBannerViewController();
  v79.receiver = v24;
  v79.super_class = v31;
  v32 = objc_msgSendSuper2(&v79, "initWithNibName:bundle:", 0, 0);
  v33 = qword_100315838;
  v34 = v32;
  if (v33 != -1)
    swift_once(&qword_100315838, sub_1000D9630);
  v35 = type metadata accessor for Logger(0);
  sub_10000D744(v35, (uint64_t)qword_10033FD60);
  v36 = v34;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a4);
  v37 = (char *)v36;
  v38 = Logger.logObject.getter(v37);
  v39 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v38, v39))
  {
    v40 = swift_slowAlloc(32, -1);
    v68 = swift_slowAlloc(96, -1);
    v77[0] = v68;
    *(_DWORD *)v40 = 136446722;
    v67 = v40 + 4;
    v41 = v37;
    v42 = a4;
    v43 = objc_msgSend(v41, "description");
    v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
    v46 = v45;

    v78 = (id)sub_100172BEC(v44, v46, v77);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, &v79, v67, v40 + 12);

    swift_bridgeObjectRelease(v46);
    *(_WORD *)(v40 + 12) = 2080;
    swift_bridgeObjectRetain(a2);
    v78 = (id)sub_100172BEC(v74, a2, v77);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, &v79, v40 + 14, v40 + 22);
    swift_bridgeObjectRelease_n(a2, 3);
    *(_WORD *)(v40 + 22) = 2080;
    v47 = v73;
    swift_bridgeObjectRetain(v42);
    v78 = (id)sub_100172BEC(v75, v42, v77);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, &v79, v40 + 24, v40 + 32);
    v48 = v42;
    v27 = v47;
    swift_bridgeObjectRelease_n(v48, 3);
    _os_log_impl((void *)&_mh_execute_header, v38, v39, "[%{public}s] init for '%s' and %s", (uint8_t *)v40, 0x20u);
    v49 = v68;
    swift_arrayDestroy(v68, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v49, -1, -1);
    swift_slowDealloc(v40, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a4, 2);
    swift_bridgeObjectRelease_n(a2, 2);

  }
  objc_msgSend(v37, "setPreferredContentSize:", *(double *)(*(_QWORD *)(v27 + 40) + 64), *(double *)(*(_QWORD *)(v27 + 40) + 72));
  v77[0] = *(_QWORD *)(v27 + 328);
  v50 = v77[0];
  v51 = sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v52 = swift_retain(v50);
  v78 = (id)static OS_dispatch_queue.main.getter(v52);
  v53 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v54 = (uint64_t)v69;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v69, 1, 1, v53);
  v55 = sub_100003DB8(&qword_10032B0E0);
  v56 = sub_1000084FC((unint64_t *)&qword_1003264A0, &qword_10032B0E0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v57 = sub_10002158C();
  v58 = v70;
  Publisher.receive<A>(on:options:)(&v78, v54, v55, v51, v56, v57);
  sub_100007FF0(v54, &qword_100329AF0);

  swift_release(v77[0]);
  v59 = swift_allocObject(&unk_1002FC480, 24, 7);
  swift_unknownObjectWeakInit(v59 + 16, v37);
  v60 = swift_allocObject(&unk_1002FC4A8, 32, 7);
  *(_QWORD *)(v60 + 16) = sub_1002091D8;
  *(_QWORD *)(v60 + 24) = v59;
  v61 = sub_1000084FC((unint64_t *)&unk_1003264B0, (uint64_t *)&unk_100326490, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v62 = v72;
  v64 = Publisher<>.sink(receiveValue:)(sub_100021640, v60, v72, v61, v63);
  swift_release(v60);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v58, v62);
  v65 = &v37[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__subscriptions];
  swift_beginAccess(&v37[OBJC_IVAR____TtC8SOSBuddy27SessionBannerViewController__subscriptions], v77, 33, 0);
  AnyCancellable.store(in:)(v65);
  swift_endAccess(v77);
  swift_release(v64);

  swift_unknownObjectRelease(v27);
  return v37;
}

uint64_t sub_10024202C(uint64_t a1, uint64_t a2, void (*a3)(__n128))
{
  __n128 v5;
  uint64_t result;

  if (a2)
  {
    v5 = swift_retain(a2);
    a3(v5);
    return swift_release(a2);
  }
  return result;
}

uint64_t sub_100242070(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t Strong;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  id v30[4];

  v4 = v3;
  v29 = a2;
  v7 = sub_100003DB8(&qword_100329AF0);
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100003DB8((uint64_t *)&unk_10032B170);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30[3] = a1;
  v16 = sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v30[0] = (id)static OS_dispatch_queue.main.getter();
  v17 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v10, 1, 1, v17);
  v18 = sub_100003DB8(&qword_10031D150);
  v19 = sub_1000084FC((unint64_t *)&unk_10032B180, &qword_10031D150, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v20 = sub_10002158C();
  Publisher.receive<A>(on:options:)(v30, v10, v18, v16, v19, v20);
  sub_100007FF0((uint64_t)v10, &qword_100329AF0);

  Strong = swift_weakLoadStrong(v4 + 16);
  v22 = (_QWORD *)swift_allocObject(&unk_1002FC890, 40, 7);
  v23 = v29;
  v22[2] = Strong;
  v22[3] = v23;
  v22[4] = a3;
  v24 = sub_1000084FC(&qword_1003205E0, (uint64_t *)&unk_10032B170, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_retain(Strong);
  v25 = swift_retain(a3);
  v26 = Publisher<>.sink(receiveValue:)(sub_100246860, v22, v11, v24, v25);
  swift_release(Strong);
  swift_release(v22);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  swift_beginAccess(v4 + 32, v30, 33, 0);
  AnyCancellable.store(in:)(v4 + 32);
  swift_endAccess(v30);
  swift_release(v26);
  return v4;
}

uint64_t sub_1002422C8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t Strong;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  id v30[4];

  v4 = v3;
  v29 = a2;
  v7 = sub_100003DB8(&qword_100329AF0);
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100003DB8(&qword_10032B268);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30[3] = a1;
  v16 = sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v30[0] = (id)static OS_dispatch_queue.main.getter();
  v17 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v10, 1, 1, v17);
  v18 = sub_100003DB8(&qword_10032B270);
  v19 = sub_1000084FC(&qword_10032B278, &qword_10032B270, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v20 = sub_10002158C();
  Publisher.receive<A>(on:options:)(v30, v10, v18, v16, v19, v20);
  sub_100007FF0((uint64_t)v10, &qword_100329AF0);

  Strong = swift_weakLoadStrong(v4 + 16);
  v22 = (_QWORD *)swift_allocObject(&unk_1002FC868, 40, 7);
  v23 = v29;
  v22[2] = Strong;
  v22[3] = v23;
  v22[4] = a3;
  v24 = sub_1000084FC(qword_10032B280, &qword_10032B268, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_retain(Strong);
  v25 = swift_retain(a3);
  v26 = Publisher<>.sink(receiveValue:)(sub_100246658, v22, v11, v24, v25);
  swift_release(Strong);
  swift_release(v22);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  swift_beginAccess(v4 + 32, v30, 33, 0);
  AnyCancellable.store(in:)(v4 + 32);
  swift_endAccess(v30);
  swift_release(v26);
  return v4;
}

uint64_t sub_100242520(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t Strong;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  id v31[4];

  v4 = v3;
  v30 = a2;
  v7 = sub_100003DB8(&qword_100329AF0);
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100003DB8((uint64_t *)&unk_100326490);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[3] = a1;
  v16 = sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v31[0] = (id)static OS_dispatch_queue.main.getter(v17);
  v18 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
  v19 = sub_100003DB8(&qword_10032B0E0);
  v20 = sub_1000084FC((unint64_t *)&qword_1003264A0, &qword_10032B0E0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v21 = sub_10002158C();
  Publisher.receive<A>(on:options:)(v31, v10, v19, v16, v20, v21);
  sub_100007FF0((uint64_t)v10, &qword_100329AF0);

  Strong = swift_weakLoadStrong(v4 + 16);
  v23 = (_QWORD *)swift_allocObject(&unk_1002FC6D8, 40, 7);
  v24 = v30;
  v23[2] = Strong;
  v23[3] = v24;
  v23[4] = a3;
  v25 = sub_1000084FC((unint64_t *)&unk_1003264B0, (uint64_t *)&unk_100326490, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_retain(Strong);
  v26 = swift_retain(a3);
  v27 = Publisher<>.sink(receiveValue:)(sub_1002467F4, v23, v11, v25, v26);
  swift_release(Strong);
  swift_release(v23);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  swift_beginAccess(v4 + 32, v31, 33, 0);
  AnyCancellable.store(in:)(v4 + 32);
  swift_endAccess(v31);
  swift_release(v27);
  return v4;
}

uint64_t sub_100242778(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t Strong;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  id v31[4];

  v4 = v3;
  v30 = a2;
  v7 = sub_100003DB8(&qword_100329AF0);
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100003DB8((uint64_t *)&unk_10032B190);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[3] = a1;
  v16 = sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v31[0] = (id)static OS_dispatch_queue.main.getter(v17);
  v18 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
  v19 = sub_100003DB8(&qword_10031EF78);
  v20 = sub_1000084FC(&qword_10032B1A0, &qword_10031EF78, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v21 = sub_10002158C();
  Publisher.receive<A>(on:options:)(v31, v10, v19, v16, v20, v21);
  sub_100007FF0((uint64_t)v10, &qword_100329AF0);

  Strong = swift_weakLoadStrong(v4 + 16);
  v23 = (_QWORD *)swift_allocObject(&unk_1002FC6B0, 40, 7);
  v24 = v30;
  v23[2] = Strong;
  v23[3] = v24;
  v23[4] = a3;
  v25 = sub_1000084FC(&qword_100322BB0, (uint64_t *)&unk_10032B190, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_retain(Strong);
  v26 = swift_retain(a3);
  v27 = Publisher<>.sink(receiveValue:)(sub_1002467D4, v23, v11, v25, v26);
  swift_release(Strong);
  swift_release(v23);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  swift_beginAccess(v4 + 32, v31, 33, 0);
  AnyCancellable.store(in:)(v4 + 32);
  swift_endAccess(v31);
  swift_release(v27);
  return v4;
}

uint64_t sub_1002429D0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t Strong;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  id v31[4];

  v4 = v3;
  v30 = a2;
  v7 = sub_100003DB8(&qword_100329AF0);
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100003DB8(&qword_10032B208);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[3] = a1;
  v16 = sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v31[0] = (id)static OS_dispatch_queue.main.getter(v17);
  v18 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
  v19 = sub_100003DB8(&qword_10032B210);
  v20 = sub_1000084FC(&qword_10032B218, &qword_10032B210, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v21 = sub_10002158C();
  Publisher.receive<A>(on:options:)(v31, v10, v19, v16, v20, v21);
  sub_100007FF0((uint64_t)v10, &qword_100329AF0);

  Strong = swift_weakLoadStrong(v4 + 16);
  v23 = (_QWORD *)swift_allocObject(&unk_1002FC688, 40, 7);
  v24 = v30;
  v23[2] = Strong;
  v23[3] = v24;
  v23[4] = a3;
  v25 = sub_1000084FC(&qword_10032B220, &qword_10032B208, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_retain(Strong);
  v26 = swift_retain(a3);
  v27 = Publisher<>.sink(receiveValue:)(sub_1002467C4, v23, v11, v25, v26);
  swift_release(Strong);
  swift_release(v23);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  swift_beginAccess(v4 + 32, v31, 33, 0);
  AnyCancellable.store(in:)(v4 + 32);
  swift_endAccess(v31);
  swift_release(v27);
  return v4;
}

uint64_t sub_100242C28(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t Strong;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  id v31[4];

  v4 = v3;
  v30 = a2;
  v7 = sub_100003DB8(&qword_100329AF0);
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100003DB8((uint64_t *)&unk_10032B170);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[3] = a1;
  v16 = sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v31[0] = (id)static OS_dispatch_queue.main.getter(v17);
  v18 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
  v19 = sub_100003DB8(&qword_10031D150);
  v20 = sub_1000084FC((unint64_t *)&unk_10032B180, &qword_10031D150, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v21 = sub_10002158C();
  Publisher.receive<A>(on:options:)(v31, v10, v19, v16, v20, v21);
  sub_100007FF0((uint64_t)v10, &qword_100329AF0);

  Strong = swift_weakLoadStrong(v4 + 16);
  v23 = (_QWORD *)swift_allocObject(&unk_1002FC638, 40, 7);
  v24 = v30;
  v23[2] = Strong;
  v23[3] = v24;
  v23[4] = a3;
  v25 = sub_1000084FC(&qword_1003205E0, (uint64_t *)&unk_10032B170, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_retain(Strong);
  v26 = swift_retain(a3);
  v27 = Publisher<>.sink(receiveValue:)(sub_100246788, v23, v11, v25, v26);
  swift_release(Strong);
  swift_release(v23);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  swift_beginAccess(v4 + 32, v31, 33, 0);
  AnyCancellable.store(in:)(v4 + 32);
  swift_endAccess(v31);
  swift_release(v27);
  return v4;
}

uint64_t sub_100242E80(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t Strong;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  id v31[4];

  v4 = v3;
  v30 = a2;
  v7 = sub_100003DB8(&qword_100329AF0);
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100003DB8(&qword_10032B1E0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[3] = a1;
  v16 = sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v31[0] = (id)static OS_dispatch_queue.main.getter(v17);
  v18 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
  v19 = sub_100003DB8(&qword_10032B1E8);
  v20 = sub_1000084FC(&qword_10032B1F0, &qword_10032B1E8, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v21 = sub_10002158C();
  Publisher.receive<A>(on:options:)(v31, v10, v19, v16, v20, v21);
  sub_100007FF0((uint64_t)v10, &qword_100329AF0);

  Strong = swift_weakLoadStrong(v4 + 16);
  v23 = (_QWORD *)swift_allocObject(&unk_1002FC610, 40, 7);
  v24 = v30;
  v23[2] = Strong;
  v23[3] = v24;
  v23[4] = a3;
  v25 = sub_1000084FC(&qword_10032B1F8, &qword_10032B1E0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_retain(Strong);
  v26 = swift_retain(a3);
  v27 = Publisher<>.sink(receiveValue:)(sub_1002467A8, v23, v11, v25, v26);
  swift_release(Strong);
  swift_release(v23);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  swift_beginAccess(v4 + 32, v31, 33, 0);
  AnyCancellable.store(in:)(v4 + 32);
  swift_endAccess(v31);
  swift_release(v27);
  return v4;
}

uint64_t sub_1002430D8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t Strong;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  id v31[4];

  v4 = v3;
  v30 = a2;
  v7 = sub_100003DB8(&qword_100329AF0);
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100003DB8((uint64_t *)&unk_10032B110);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[3] = a1;
  v16 = sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v31[0] = (id)static OS_dispatch_queue.main.getter(v17);
  v18 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
  v19 = sub_100003DB8(&qword_100320D28);
  v20 = sub_1000084FC((unint64_t *)&unk_10032B120, &qword_100320D28, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v21 = sub_10002158C();
  Publisher.receive<A>(on:options:)(v31, v10, v19, v16, v20, v21);
  sub_100007FF0((uint64_t)v10, &qword_100329AF0);

  Strong = swift_weakLoadStrong(v4 + 16);
  v23 = (_QWORD *)swift_allocObject(&unk_1002FC5E8, 40, 7);
  v24 = v30;
  v23[2] = Strong;
  v23[3] = v24;
  v23[4] = a3;
  v25 = sub_1000084FC(&qword_100322A60, (uint64_t *)&unk_10032B110, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_retain(Strong);
  v26 = swift_retain(a3);
  v27 = Publisher<>.sink(receiveValue:)(sub_100246788, v23, v11, v25, v26);
  swift_release(Strong);
  swift_release(v23);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  swift_beginAccess(v4 + 32, v31, 33, 0);
  AnyCancellable.store(in:)(v4 + 32);
  swift_endAccess(v31);
  swift_release(v27);
  return v4;
}

uint64_t sub_100243330(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t Strong;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  id v31[4];

  v4 = v3;
  v30 = a2;
  v7 = sub_100003DB8(&qword_100329AF0);
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100003DB8((uint64_t *)&unk_10032B130);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[3] = a1;
  v16 = sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v31[0] = (id)static OS_dispatch_queue.main.getter(v17);
  v18 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
  v19 = sub_100003DB8(&qword_100322C50);
  v20 = sub_1000084FC((unint64_t *)&unk_10032B140, &qword_100322C50, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v21 = sub_10002158C();
  Publisher.receive<A>(on:options:)(v31, v10, v19, v16, v20, v21);
  sub_100007FF0((uint64_t)v10, &qword_100329AF0);

  Strong = swift_weakLoadStrong(v4 + 16);
  v23 = (_QWORD *)swift_allocObject(&unk_1002FC5C0, 40, 7);
  v24 = v30;
  v23[2] = Strong;
  v23[3] = v24;
  v23[4] = a3;
  v25 = sub_1000084FC(&qword_100322C58, (uint64_t *)&unk_10032B130, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_retain(Strong);
  v26 = swift_retain(a3);
  v27 = Publisher<>.sink(receiveValue:)(sub_100246768, v23, v11, v25, v26);
  swift_release(Strong);
  swift_release(v23);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  swift_beginAccess(v4 + 32, v31, 33, 0);
  AnyCancellable.store(in:)(v4 + 32);
  swift_endAccess(v31);
  swift_release(v27);
  return v4;
}

uint64_t sub_100243588(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t Strong;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  id v31[4];

  v4 = v3;
  v30 = a2;
  v7 = sub_100003DB8(&qword_100329AF0);
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100003DB8(&qword_100322A68);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[3] = a1;
  v16 = sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v31[0] = (id)static OS_dispatch_queue.main.getter(v17);
  v18 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
  v19 = sub_100003DB8((uint64_t *)&unk_10032B0F0);
  v20 = sub_1000084FC(&qword_100322A70, (uint64_t *)&unk_10032B0F0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v21 = sub_10002158C();
  Publisher.receive<A>(on:options:)(v31, v10, v19, v16, v20, v21);
  sub_100007FF0((uint64_t)v10, &qword_100329AF0);

  Strong = swift_weakLoadStrong(v4 + 16);
  v23 = (_QWORD *)swift_allocObject(&unk_1002FC598, 40, 7);
  v24 = v30;
  v23[2] = Strong;
  v23[3] = v24;
  v23[4] = a3;
  v25 = sub_1000084FC(&qword_100322A78, &qword_100322A68, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_retain(Strong);
  v26 = swift_retain(a3);
  v27 = Publisher<>.sink(receiveValue:)(sub_100246748, v23, v11, v25, v26);
  swift_release(Strong);
  swift_release(v23);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  swift_beginAccess(v4 + 32, v31, 33, 0);
  AnyCancellable.store(in:)(v4 + 32);
  swift_endAccess(v31);
  swift_release(v27);
  return v4;
}

uint64_t sub_1002437E0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t Strong;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  id v31[4];

  v4 = v3;
  v30 = a2;
  v7 = sub_100003DB8(&qword_100329AF0);
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100003DB8((uint64_t *)&unk_100326490);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[3] = a1;
  v16 = sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v31[0] = (id)static OS_dispatch_queue.main.getter(v17);
  v18 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
  v19 = sub_100003DB8(&qword_10032B0E0);
  v20 = sub_1000084FC((unint64_t *)&qword_1003264A0, &qword_10032B0E0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v21 = sub_10002158C();
  Publisher.receive<A>(on:options:)(v31, v10, v19, v16, v20, v21);
  sub_100007FF0((uint64_t)v10, &qword_100329AF0);

  Strong = swift_weakLoadStrong(v4 + 16);
  v23 = (_QWORD *)swift_allocObject(&unk_1002FC458, 40, 7);
  v24 = v30;
  v23[2] = Strong;
  v23[3] = v24;
  v23[4] = a3;
  v25 = sub_1000084FC((unint64_t *)&unk_1003264B0, (uint64_t *)&unk_100326490, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_retain(Strong);
  v26 = swift_retain(a3);
  v27 = Publisher<>.sink(receiveValue:)(sub_100246868, v23, v11, v25, v26);
  swift_release(Strong);
  swift_release(v23);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  swift_beginAccess(v4 + 32, v31, 33, 0);
  AnyCancellable.store(in:)(v4 + 32);
  swift_endAccess(v31);
  swift_release(v27);
  return v4;
}

uint64_t sub_100243A38(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t Strong;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  id v31[4];

  v4 = v3;
  v30 = a2;
  v7 = sub_100003DB8(&qword_100329AF0);
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100003DB8((uint64_t *)&unk_10032B190);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[3] = a1;
  v16 = sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v31[0] = (id)static OS_dispatch_queue.main.getter(v17);
  v18 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
  v19 = sub_100003DB8(&qword_10031EF78);
  v20 = sub_1000084FC(&qword_10032B1A0, &qword_10031EF78, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v21 = sub_10002158C();
  Publisher.receive<A>(on:options:)(v31, v10, v19, v16, v20, v21);
  sub_100007FF0((uint64_t)v10, &qword_100329AF0);

  Strong = swift_weakLoadStrong(v4 + 16);
  v23 = (_QWORD *)swift_allocObject(&unk_1002FC430, 40, 7);
  v24 = v30;
  v23[2] = Strong;
  v23[3] = v24;
  v23[4] = a3;
  v25 = sub_1000084FC(&qword_100322BB0, (uint64_t *)&unk_10032B190, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_retain(Strong);
  v26 = swift_retain(a3);
  v27 = Publisher<>.sink(receiveValue:)(sub_100246864, v23, v11, v25, v26);
  swift_release(Strong);
  swift_release(v23);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  swift_beginAccess(v4 + 32, v31, 33, 0);
  AnyCancellable.store(in:)(v4 + 32);
  swift_endAccess(v31);
  swift_release(v27);
  return v4;
}

uint64_t sub_100243C90(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t Strong;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  id v31[4];

  v4 = v3;
  v30 = a2;
  v7 = sub_100003DB8(&qword_100329AF0);
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100003DB8((uint64_t *)&unk_10032B170);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[3] = a1;
  v16 = sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v31[0] = (id)static OS_dispatch_queue.main.getter(v17);
  v18 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
  v19 = sub_100003DB8(&qword_10031D150);
  v20 = sub_1000084FC((unint64_t *)&unk_10032B180, &qword_10031D150, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v21 = sub_10002158C();
  Publisher.receive<A>(on:options:)(v31, v10, v19, v16, v20, v21);
  sub_100007FF0((uint64_t)v10, &qword_100329AF0);

  Strong = swift_weakLoadStrong(v4 + 16);
  v23 = (_QWORD *)swift_allocObject(&unk_1002FC408, 40, 7);
  v24 = v30;
  v23[2] = Strong;
  v23[3] = v24;
  v23[4] = a3;
  v25 = sub_1000084FC(&qword_1003205E0, (uint64_t *)&unk_10032B170, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_retain(Strong);
  v26 = swift_retain(a3);
  v27 = Publisher<>.sink(receiveValue:)(sub_100246860, v23, v11, v25, v26);
  swift_release(Strong);
  swift_release(v23);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  swift_beginAccess(v4 + 32, v31, 33, 0);
  AnyCancellable.store(in:)(v4 + 32);
  swift_endAccess(v31);
  swift_release(v27);
  return v4;
}

uint64_t sub_100243EE8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t Strong;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  id v31[4];

  v4 = v3;
  v30 = a2;
  v7 = sub_100003DB8(&qword_100329AF0);
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100003DB8((uint64_t *)&unk_10032B150);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[3] = a1;
  v16 = sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v31[0] = (id)static OS_dispatch_queue.main.getter(v17);
  v18 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
  v19 = sub_100003DB8(&qword_10031EF80);
  v20 = sub_1000084FC((unint64_t *)&unk_10032B160, &qword_10031EF80, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v21 = sub_10002158C();
  Publisher.receive<A>(on:options:)(v31, v10, v19, v16, v20, v21);
  sub_100007FF0((uint64_t)v10, &qword_100329AF0);

  Strong = swift_weakLoadStrong(v4 + 16);
  v23 = (_QWORD *)swift_allocObject(&unk_1002FC3E0, 40, 7);
  v24 = v30;
  v23[2] = Strong;
  v23[3] = v24;
  v23[4] = a3;
  v25 = sub_1000084FC(&qword_100322B68, (uint64_t *)&unk_10032B150, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_retain(Strong);
  v26 = swift_retain(a3);
  v27 = Publisher<>.sink(receiveValue:)(sub_100246658, v23, v11, v25, v26);
  swift_release(Strong);
  swift_release(v23);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  swift_beginAccess(v4 + 32, v31, 33, 0);
  AnyCancellable.store(in:)(v4 + 32);
  swift_endAccess(v31);
  swift_release(v27);
  return v4;
}

uint64_t sub_100244140(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t Strong;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  id v31[4];

  v4 = v3;
  v30 = a2;
  v7 = sub_100003DB8(&qword_100329AF0);
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100003DB8((uint64_t *)&unk_10032B130);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[3] = a1;
  v16 = sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v31[0] = (id)static OS_dispatch_queue.main.getter(v17);
  v18 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
  v19 = sub_100003DB8(&qword_100322C50);
  v20 = sub_1000084FC((unint64_t *)&unk_10032B140, &qword_100322C50, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v21 = sub_10002158C();
  Publisher.receive<A>(on:options:)(v31, v10, v19, v16, v20, v21);
  sub_100007FF0((uint64_t)v10, &qword_100329AF0);

  Strong = swift_weakLoadStrong(v4 + 16);
  v23 = (_QWORD *)swift_allocObject(&unk_1002FC3B8, 40, 7);
  v24 = v30;
  v23[2] = Strong;
  v23[3] = v24;
  v23[4] = a3;
  v25 = sub_1000084FC(&qword_100322C58, (uint64_t *)&unk_10032B130, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_retain(Strong);
  v26 = swift_retain(a3);
  v27 = Publisher<>.sink(receiveValue:)(sub_10024685C, v23, v11, v25, v26);
  swift_release(Strong);
  swift_release(v23);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  swift_beginAccess(v4 + 32, v31, 33, 0);
  AnyCancellable.store(in:)(v4 + 32);
  swift_endAccess(v31);
  swift_release(v27);
  return v4;
}

uint64_t sub_100244398(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t Strong;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  id v31[4];

  v4 = v3;
  v30 = a2;
  v7 = sub_100003DB8(&qword_100329AF0);
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100003DB8((uint64_t *)&unk_10032B110);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[3] = a1;
  v16 = sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v31[0] = (id)static OS_dispatch_queue.main.getter(v17);
  v18 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
  v19 = sub_100003DB8(&qword_100320D28);
  v20 = sub_1000084FC((unint64_t *)&unk_10032B120, &qword_100320D28, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v21 = sub_10002158C();
  Publisher.receive<A>(on:options:)(v31, v10, v19, v16, v20, v21);
  sub_100007FF0((uint64_t)v10, &qword_100329AF0);

  Strong = swift_weakLoadStrong(v4 + 16);
  v23 = (_QWORD *)swift_allocObject(&unk_1002FC390, 40, 7);
  v24 = v30;
  v23[2] = Strong;
  v23[3] = v24;
  v23[4] = a3;
  v25 = sub_1000084FC(&qword_100322A60, (uint64_t *)&unk_10032B110, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_retain(Strong);
  v26 = swift_retain(a3);
  v27 = Publisher<>.sink(receiveValue:)(sub_100246860, v23, v11, v25, v26);
  swift_release(Strong);
  swift_release(v23);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  swift_beginAccess(v4 + 32, v31, 33, 0);
  AnyCancellable.store(in:)(v4 + 32);
  swift_endAccess(v31);
  swift_release(v27);
  return v4;
}

uint64_t sub_1002445F0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t Strong;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  id v31[4];

  v4 = v3;
  v30 = a2;
  v7 = sub_100003DB8(&qword_100329AF0);
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100003DB8(&qword_100322A68);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[3] = a1;
  v16 = sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v31[0] = (id)static OS_dispatch_queue.main.getter(v17);
  v18 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
  v19 = sub_100003DB8((uint64_t *)&unk_10032B0F0);
  v20 = sub_1000084FC(&qword_100322A70, (uint64_t *)&unk_10032B0F0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v21 = sub_10002158C();
  Publisher.receive<A>(on:options:)(v31, v10, v19, v16, v20, v21);
  sub_100007FF0((uint64_t)v10, &qword_100329AF0);

  Strong = swift_weakLoadStrong(v4 + 16);
  v23 = (_QWORD *)swift_allocObject(&unk_1002FC368, 40, 7);
  v24 = v30;
  v23[2] = Strong;
  v23[3] = v24;
  v23[4] = a3;
  v25 = sub_1000084FC(&qword_100322A78, &qword_100322A68, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_retain(Strong);
  v26 = swift_retain(a3);
  v27 = Publisher<>.sink(receiveValue:)(sub_100246858, v23, v11, v25, v26);
  swift_release(Strong);
  swift_release(v23);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  swift_beginAccess(v4 + 32, v31, 33, 0);
  AnyCancellable.store(in:)(v4 + 32);
  swift_endAccess(v31);
  swift_release(v27);
  return v4;
}

uint64_t sub_100244848(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t Strong;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  id v31[4];

  v4 = v3;
  v30 = a2;
  v7 = sub_100003DB8(&qword_100329AF0);
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100003DB8((uint64_t *)&unk_100326490);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[3] = a1;
  v16 = sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v31[0] = (id)static OS_dispatch_queue.main.getter(v17);
  v18 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
  v19 = sub_100003DB8(&qword_10032B0E0);
  v20 = sub_1000084FC((unint64_t *)&qword_1003264A0, &qword_10032B0E0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v21 = sub_10002158C();
  Publisher.receive<A>(on:options:)(v31, v10, v19, v16, v20, v21);
  sub_100007FF0((uint64_t)v10, &qword_100329AF0);

  Strong = swift_weakLoadStrong(v4 + 16);
  v23 = (_QWORD *)swift_allocObject(&unk_1002FC840, 40, 7);
  v24 = v30;
  v23[2] = Strong;
  v23[3] = v24;
  v23[4] = a3;
  v25 = sub_1000084FC((unint64_t *)&unk_1003264B0, (uint64_t *)&unk_100326490, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_retain(Strong);
  v26 = swift_retain(a3);
  v27 = Publisher<>.sink(receiveValue:)(sub_100246868, v23, v11, v25, v26);
  swift_release(Strong);
  swift_release(v23);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  swift_beginAccess(v4 + 32, v31, 33, 0);
  AnyCancellable.store(in:)(v4 + 32);
  swift_endAccess(v31);
  swift_release(v27);
  return v4;
}

uint64_t sub_100244AA0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t Strong;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  id v31[4];

  v4 = v3;
  v30 = a2;
  v7 = sub_100003DB8(&qword_100329AF0);
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100003DB8((uint64_t *)&unk_10032B130);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[3] = a1;
  v16 = sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v31[0] = (id)static OS_dispatch_queue.main.getter(v17);
  v18 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
  v19 = sub_100003DB8(&qword_100322C50);
  v20 = sub_1000084FC((unint64_t *)&unk_10032B140, &qword_100322C50, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v21 = sub_10002158C();
  Publisher.receive<A>(on:options:)(v31, v10, v19, v16, v20, v21);
  sub_100007FF0((uint64_t)v10, &qword_100329AF0);

  Strong = swift_weakLoadStrong(v4 + 16);
  v23 = (_QWORD *)swift_allocObject(&unk_1002FC818, 40, 7);
  v24 = v30;
  v23[2] = Strong;
  v23[3] = v24;
  v23[4] = a3;
  v25 = sub_1000084FC(&qword_100322C58, (uint64_t *)&unk_10032B130, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_retain(Strong);
  v26 = swift_retain(a3);
  v27 = Publisher<>.sink(receiveValue:)(sub_10024685C, v23, v11, v25, v26);
  swift_release(Strong);
  swift_release(v23);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  swift_beginAccess(v4 + 32, v31, 33, 0);
  AnyCancellable.store(in:)(v4 + 32);
  swift_endAccess(v31);
  swift_release(v27);
  return v4;
}

uint64_t sub_100244CF8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t Strong;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  id v31[4];

  v4 = v3;
  v30 = a2;
  v7 = sub_100003DB8(&qword_100329AF0);
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100003DB8(&qword_100322A68);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[3] = a1;
  v16 = sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v31[0] = (id)static OS_dispatch_queue.main.getter(v17);
  v18 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
  v19 = sub_100003DB8((uint64_t *)&unk_10032B0F0);
  v20 = sub_1000084FC(&qword_100322A70, (uint64_t *)&unk_10032B0F0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v21 = sub_10002158C();
  Publisher.receive<A>(on:options:)(v31, v10, v19, v16, v20, v21);
  sub_100007FF0((uint64_t)v10, &qword_100329AF0);

  Strong = swift_weakLoadStrong(v4 + 16);
  v23 = (_QWORD *)swift_allocObject(&unk_1002FC7F0, 40, 7);
  v24 = v30;
  v23[2] = Strong;
  v23[3] = v24;
  v23[4] = a3;
  v25 = sub_1000084FC(&qword_100322A78, &qword_100322A68, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_retain(Strong);
  v26 = swift_retain(a3);
  v27 = Publisher<>.sink(receiveValue:)(sub_100246858, v23, v11, v25, v26);
  swift_release(Strong);
  swift_release(v23);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  swift_beginAccess(v4 + 32, v31, 33, 0);
  AnyCancellable.store(in:)(v4 + 32);
  swift_endAccess(v31);
  swift_release(v27);
  return v4;
}

uint64_t sub_100244F50(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t Strong;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  id v31[4];

  v4 = v3;
  v30 = a2;
  v7 = sub_100003DB8(&qword_100329AF0);
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100003DB8((uint64_t *)&unk_10032B170);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[3] = a1;
  v16 = sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v31[0] = (id)static OS_dispatch_queue.main.getter(v17);
  v18 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
  v19 = sub_100003DB8(&qword_10031D150);
  v20 = sub_1000084FC((unint64_t *)&unk_10032B180, &qword_10031D150, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v21 = sub_10002158C();
  Publisher.receive<A>(on:options:)(v31, v10, v19, v16, v20, v21);
  sub_100007FF0((uint64_t)v10, &qword_100329AF0);

  Strong = swift_weakLoadStrong(v4 + 16);
  v23 = (_QWORD *)swift_allocObject(&unk_1002FC7C8, 40, 7);
  v24 = v30;
  v23[2] = Strong;
  v23[3] = v24;
  v23[4] = a3;
  v25 = sub_1000084FC(&qword_1003205E0, (uint64_t *)&unk_10032B170, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_retain(Strong);
  v26 = swift_retain(a3);
  v27 = Publisher<>.sink(receiveValue:)(sub_100246860, v23, v11, v25, v26);
  swift_release(Strong);
  swift_release(v23);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  swift_beginAccess(v4 + 32, v31, 33, 0);
  AnyCancellable.store(in:)(v4 + 32);
  swift_endAccess(v31);
  swift_release(v27);
  return v4;
}

uint64_t sub_1002451A8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t Strong;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  id v31[4];

  v4 = v3;
  v30 = a2;
  v7 = sub_100003DB8(&qword_100329AF0);
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100003DB8(&qword_100322B88);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[3] = a1;
  v16 = sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v31[0] = (id)static OS_dispatch_queue.main.getter(v17);
  v18 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
  v19 = sub_100003DB8(&qword_10031B330);
  v20 = sub_1000084FC(&qword_100322B90, &qword_10031B330, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v21 = sub_10002158C();
  Publisher.receive<A>(on:options:)(v31, v10, v19, v16, v20, v21);
  sub_100007FF0((uint64_t)v10, &qword_100329AF0);

  Strong = swift_weakLoadStrong(v4 + 16);
  v23 = (_QWORD *)swift_allocObject(&unk_1002FC7A0, 40, 7);
  v24 = v30;
  v23[2] = Strong;
  v23[3] = v24;
  v23[4] = a3;
  v25 = sub_1000084FC((unint64_t *)&unk_10032B250, &qword_100322B88, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_retain(Strong);
  v26 = swift_retain(a3);
  v27 = Publisher<>.sink(receiveValue:)(sub_100246824, v23, v11, v25, v26);
  swift_release(Strong);
  swift_release(v23);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  swift_beginAccess(v4 + 32, v31, 33, 0);
  AnyCancellable.store(in:)(v4 + 32);
  swift_endAccess(v31);
  swift_release(v27);
  return v4;
}

uint64_t sub_100245400(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t Strong;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  id v31[4];

  v4 = v3;
  v30 = a2;
  v7 = sub_100003DB8(&qword_100329AF0);
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100003DB8((uint64_t *)&unk_100326490);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[3] = a1;
  v16 = sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v31[0] = (id)static OS_dispatch_queue.main.getter(v17);
  v18 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
  v19 = sub_100003DB8(&qword_10032B0E0);
  v20 = sub_1000084FC((unint64_t *)&qword_1003264A0, &qword_10032B0E0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v21 = sub_10002158C();
  Publisher.receive<A>(on:options:)(v31, v10, v19, v16, v20, v21);
  sub_100007FF0((uint64_t)v10, &qword_100329AF0);

  Strong = swift_weakLoadStrong(v4 + 16);
  v23 = (_QWORD *)swift_allocObject(&unk_1002FC728, 40, 7);
  v24 = v30;
  v23[2] = Strong;
  v23[3] = v24;
  v23[4] = a3;
  v25 = sub_1000084FC((unint64_t *)&unk_1003264B0, (uint64_t *)&unk_100326490, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_retain(Strong);
  v26 = swift_retain(a3);
  v27 = Publisher<>.sink(receiveValue:)(sub_100246868, v23, v11, v25, v26);
  swift_release(Strong);
  swift_release(v23);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  swift_beginAccess(v4 + 32, v31, 33, 0);
  AnyCancellable.store(in:)(v4 + 32);
  swift_endAccess(v31);
  swift_release(v27);
  return v4;
}

uint64_t sub_100245658(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t Strong;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  id v31[4];

  v4 = v3;
  v30 = a2;
  v7 = sub_100003DB8(&qword_100329AF0);
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100003DB8((uint64_t *)&unk_10032B170);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[3] = a1;
  v16 = sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v31[0] = (id)static OS_dispatch_queue.main.getter(v17);
  v18 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
  v19 = sub_100003DB8(&qword_10031D150);
  v20 = sub_1000084FC((unint64_t *)&unk_10032B180, &qword_10031D150, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v21 = sub_10002158C();
  Publisher.receive<A>(on:options:)(v31, v10, v19, v16, v20, v21);
  sub_100007FF0((uint64_t)v10, &qword_100329AF0);

  Strong = swift_weakLoadStrong(v4 + 16);
  v23 = (_QWORD *)swift_allocObject(&unk_1002FC700, 40, 7);
  v24 = v30;
  v23[2] = Strong;
  v23[3] = v24;
  v23[4] = a3;
  v25 = sub_1000084FC(&qword_1003205E0, (uint64_t *)&unk_10032B170, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_retain(Strong);
  v26 = swift_retain(a3);
  v27 = Publisher<>.sink(receiveValue:)(sub_100246860, v23, v11, v25, v26);
  swift_release(Strong);
  swift_release(v23);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  swift_beginAccess(v4 + 32, v31, 33, 0);
  AnyCancellable.store(in:)(v4 + 32);
  swift_endAccess(v31);
  swift_release(v27);
  return v4;
}

uint64_t sub_1002458B0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t Strong;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  id v31[4];

  v4 = v3;
  v30 = a2;
  v7 = sub_100003DB8(&qword_100329AF0);
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100003DB8(&qword_10032B228);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[3] = a1;
  v16 = sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v31[0] = (id)static OS_dispatch_queue.main.getter(v17);
  v18 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
  v19 = sub_100003DB8(&qword_10032B230);
  v20 = sub_1000084FC(&qword_10032B238, &qword_10032B230, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v21 = sub_10002158C();
  Publisher.receive<A>(on:options:)(v31, v10, v19, v16, v20, v21);
  sub_100007FF0((uint64_t)v10, &qword_100329AF0);

  Strong = swift_weakLoadStrong(v4 + 16);
  v23 = (_QWORD *)swift_allocObject(&unk_1002FC778, 40, 7);
  v24 = v30;
  v23[2] = Strong;
  v23[3] = v24;
  v23[4] = a3;
  v25 = sub_1000084FC((unint64_t *)&unk_10032B240, &qword_10032B228, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_retain(Strong);
  v26 = swift_retain(a3);
  v27 = Publisher<>.sink(receiveValue:)(sub_10024685C, v23, v11, v25, v26);
  swift_release(Strong);
  swift_release(v23);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  swift_beginAccess(v4 + 32, v31, 33, 0);
  AnyCancellable.store(in:)(v4 + 32);
  swift_endAccess(v31);
  swift_release(v27);
  return v4;
}

uint64_t sub_100245B08(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t Strong;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  id v31[4];

  v4 = v3;
  v30 = a2;
  v7 = sub_100003DB8(&qword_100329AF0);
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100003DB8((uint64_t *)&unk_100326490);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[3] = a1;
  v16 = sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  v31[0] = (id)static OS_dispatch_queue.main.getter(v17);
  v18 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
  v19 = sub_100003DB8(&qword_10032B0E0);
  v20 = sub_1000084FC((unint64_t *)&qword_1003264A0, &qword_10032B0E0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v21 = sub_10002158C();
  Publisher.receive<A>(on:options:)(v31, v10, v19, v16, v20, v21);
  sub_100007FF0((uint64_t)v10, &qword_100329AF0);

  Strong = swift_weakLoadStrong(v4 + 16);
  v23 = (_QWORD *)swift_allocObject(&unk_1002FC750, 40, 7);
  v24 = v30;
  v23[2] = Strong;
  v23[3] = v24;
  v23[4] = a3;
  v25 = sub_1000084FC((unint64_t *)&unk_1003264B0, (uint64_t *)&unk_100326490, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_retain(Strong);
  v26 = swift_retain(a3);
  v27 = Publisher<>.sink(receiveValue:)(sub_100246868, v23, v11, v25, v26);
  swift_release(Strong);
  swift_release(v23);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  swift_beginAccess(v4 + 32, v31, 33, 0);
  AnyCancellable.store(in:)(v4 + 32);
  swift_endAccess(v31);
  swift_release(v27);
  return v4;
}

void sub_100245D60(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *);
  char *v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  char *v35;
  __int16 v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  char v45;
  char *v46;
  uint64_t v47;
  char **p_name;
  id v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, char);
  __n128 v65;
  void *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  char *v72;
  __n128 v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97[24];
  __int128 aBlock;
  uint64_t (*v99)(uint64_t);
  void *v100;
  void (*v101)();
  uint64_t v102;
  uint64_t v103[4];

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v93 = *(_QWORD *)(v3 - 8);
  v94 = v3;
  __chkstk_darwin(v3, v4);
  v92 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v90 = *(_QWORD *)(v6 - 8);
  v91 = v6;
  __chkstk_darwin(v6, v7);
  v89 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for DispatchTime(0);
  v86 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88, v9);
  v85 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  v87 = (char *)&v80 - v13;
  v14 = type metadata accessor for DispatchPredicate(0);
  v96 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14, v15);
  v17 = (uint64_t *)((char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = type metadata accessor for Logger(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18, v20);
  v22 = (char *)&v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100315838 != -1)
    swift_once(&qword_100315838, sub_1000D9630);
  v23 = sub_10000D744(v18, (uint64_t)qword_10033FD60);
  v24 = *(void (**)(char *))(v19 + 16);
  v95 = v23;
  v24(v22);
  swift_unknownObjectRetain_n(a1, 2);
  v25 = v1;
  v26 = Logger.logObject.getter(v25);
  v27 = static os_log_type_t.default.getter(v26);
  if (os_log_type_enabled(v26, (os_log_type_t)v27))
  {
    v81 = v27;
    v82 = v19;
    v83 = v14;
    v84 = v25;
    v28 = swift_slowAlloc(22, -1);
    v80 = swift_slowAlloc(64, -1);
    v103[0] = v80;
    *(_DWORD *)v28 = 136446466;
    v29 = objc_msgSend(a1, "requestIdentifier");
    v27 = (uint64_t)a1;
    if (!v29)
    {
LABEL_34:
      swift_unknownObjectRelease(v27);

      __break(1u);
      return;
    }
    v30 = v29;
    v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
    v33 = v32;

    *(_QWORD *)&aBlock = sub_100172BEC(v31, v33, v103);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 8, v28 + 4, v28 + 12);
    swift_unknownObjectRelease_n(v27, 2);
    swift_bridgeObjectRelease(v33);
    *(_WORD *)(v28 + 12) = 2082;
    v34 = v84;
    v35 = &v84[qword_1003265F0];
    swift_beginAccess(&v84[qword_1003265F0], v97, 0, 0);
    v36 = *((_WORD *)v35 + 8);
    aBlock = *(_OWORD *)v35;
    LOWORD(v99) = v36;
    swift_unknownObjectRetain(aBlock);
    v37 = sub_100003DB8(&qword_10032B1D0);
    v39 = String.init<A>(describing:)(&aBlock, v37, v38);
    v41 = v40;
    *(_QWORD *)&aBlock = sub_100172BEC(v39, v40, v103);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 8, v28 + 14, v28 + 22);

    swift_bridgeObjectRelease(v41);
    _os_log_impl((void *)&_mh_execute_header, v26, (os_log_type_t)v81, "didDisappear: for %{public}s, active presentable == %{public}s", (uint8_t *)v28, 0x16u);
    v42 = v80;
    swift_arrayDestroy(v80, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v42, -1, -1);
    swift_slowDealloc(v28, -1, -1);

    (*(void (**)(char *, uint64_t))(v82 + 8))(v22, v18);
    a1 = (void *)v27;
    v14 = v83;
  }
  else
  {

    swift_unknownObjectRelease_n(a1, 2);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
    v34 = v25;
  }
  sub_10006477C(0, (unint64_t *)&qword_10031ED20, OS_dispatch_queue_ptr);
  *v17 = static OS_dispatch_queue.main.getter(v43);
  v44 = v96;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v96 + 104))(v17, enum case for DispatchPredicate.onQueue(_:), v14);
  v45 = _dispatchPreconditionTest(_:)(v17);
  (*(void (**)(_QWORD *, uint64_t))(v44 + 8))(v17, v14);
  if ((v45 & 1) == 0)
  {
    __break(1u);
    goto LABEL_34;
  }
  v46 = &v34[qword_1003265F0];
  swift_beginAccess(&v34[qword_1003265F0], v103, 1, 0);
  v47 = *(_QWORD *)v46;
  if (*(_QWORD *)v46)
  {
    p_name = &ResourceBundleClass.name;
    v49 = objc_msgSend((id)swift_unknownObjectRetain(*(_QWORD *)v46), "requestIdentifier");
    swift_unknownObjectRelease(v47);
    if (v49)
    {
      v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
      v47 = v51;

    }
    else
    {
      v50 = 0;
      v47 = 0;
    }
  }
  else
  {
    v50 = 0;
    p_name = (char **)(&ResourceBundleClass + 24);
  }
  v52 = objc_msgSend(a1, p_name[491]);
  if (!v52)
  {
    if (!v47)
      goto LABEL_27;
    goto LABEL_20;
  }
  v53 = v52;
  v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
  v56 = v55;

  if (!v47)
  {
    if (!v56)
      goto LABEL_27;
    goto LABEL_22;
  }
  if (!v56)
  {
LABEL_20:
    v56 = v47;
LABEL_22:
    swift_bridgeObjectRelease(v56);
    goto LABEL_23;
  }
  if (v50 == v54 && v47 == v56)
  {
    swift_bridgeObjectRelease(v47);
    swift_bridgeObjectRelease(v56);
LABEL_27:
    v62 = *(_QWORD *)v46;
    if (*(_QWORD *)v46 && v46[17] << 8 != 512)
    {
      v64 = sub_100239A30((uint64_t)&aBlock);
      if (*(_QWORD *)v63)
        *(_BYTE *)(v63 + 16) = 5;
      v65.n128_f64[0] = ((double (*)(__int128 *, _QWORD))v64)(&aBlock, 0);
      v66 = (void *)static OS_dispatch_queue.main.getter(v65);
      v67 = v85;
      static DispatchTime.now()(v66);
      v68 = v87;
      + infix(_:_:)(v67, 0.2);
      v96 = *(_QWORD *)(v86 + 8);
      v69 = v88;
      ((void (*)(char *, uint64_t))v96)(v67, v88);
      v70 = swift_allocObject(&unk_1002FC4D0, 24, 7);
      swift_unknownObjectWeakInit(v70 + 16, v34);
      v101 = sub_1002466B8;
      v102 = v70;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      v99 = sub_1001BAACC;
      v100 = &unk_1002FC4E8;
      v71 = _Block_copy(&aBlock);
      swift_release(v102);
      v72 = v89;
      static DispatchQoS.unspecified.getter(v73);
      *(_QWORD *)&aBlock = _swiftEmptyArrayStorage;
      v74 = sub_10006A7F8();
      v75 = sub_100003DB8((uint64_t *)&unk_1003178D0);
      v76 = sub_1000084FC((unint64_t *)&qword_10031B320, (uint64_t *)&unk_1003178D0, (uint64_t)&protocol conformance descriptor for [A]);
      v77 = v92;
      v78 = v75;
      v79 = v94;
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v78, v76, v94, v74);
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v68, v72, v77, v71);
      _Block_release(v71);

      (*(void (**)(char *, uint64_t))(v93 + 8))(v77, v79);
      (*(void (**)(char *, uint64_t))(v90 + 8))(v72, v91);
      ((void (*)(char *, uint64_t))v96)(v68, v69);
    }
    else
    {
      *(_QWORD *)v46 = 0;
      *((_QWORD *)v46 + 1) = 0;
      *((_WORD *)v46 + 8) = 0;
      swift_unknownObjectRelease(v62);
      sub_1002397C8();
    }
    return;
  }
  v61 = _stringCompareWithSmolCheck(_:_:expecting:)(v50, v47, v54, v56, 0);
  swift_bridgeObjectRelease(v47);
  swift_bridgeObjectRelease(v56);
  if ((v61 & 1) != 0)
    goto LABEL_27;
LABEL_23:
  v58 = Logger.logObject.getter(v57);
  v59 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v58, v59))
  {
    v60 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v60 = 0;
    _os_log_impl((void *)&_mh_execute_header, v58, v59, "Received didDisappear for non-active presentable", v60, 2u);
    swift_slowDealloc(v60, -1, -1);
  }

}

uint64_t sub_1002465BC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002465E0()
{
  uint64_t v0;

  return sub_100240338(v0, (uint64_t)&unk_1002FC318, (uint64_t)sub_100246610, (uint64_t)&unk_1002FC330);
}

uint64_t sub_100246610()
{
  uint64_t v0;

  return sub_10024055C(v0, (void (*)(void))sub_1002411BC);
}

double sub_100246630(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_100246640(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100246658(uint64_t a1)
{
  uint64_t v1;

  return sub_100241678(a1, *(_QWORD *)(v1 + 16), *(void (**)(__n128))(v1 + 24));
}

uint64_t sub_100246670()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100246694()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1002466B8()
{
  uint64_t v0;

  sub_10023BD1C(v0);
}

uint64_t sub_1002466C0()
{
  uint64_t v0;

  return sub_100240338(v0, (uint64_t)&unk_1002FC520, (uint64_t)sub_1002466F0, (uint64_t)&unk_1002FC538);
}

uint64_t sub_1002466F0()
{
  uint64_t v0;

  return sub_10024055C(v0, (void (*)(void))sub_10023EB20);
}

uint64_t sub_100246710()
{
  return sub_10023CE84();
}

uint64_t sub_100246718()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10024673C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10023D9F0(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t *sub_100246748(uint64_t *a1)
{
  uint64_t v1;

  return sub_100241918(a1, *(_QWORD *)(v1 + 16), *(void (**)(__n128))(v1 + 24));
}

uint64_t sub_100246768(uint64_t a1)
{
  uint64_t v1;

  return sub_10023977C(a1, *(_QWORD *)(v1 + 16), *(void (**)(__n128))(v1 + 24));
}

char *sub_100246788(char *a1)
{
  uint64_t v1;

  return sub_1002417D0(a1, *(_QWORD *)(v1 + 16), *(void (**)(__n128))(v1 + 24));
}

uint64_t sub_1002467A8(uint64_t a1)
{
  uint64_t v1;

  return sub_1002416E0(a1, *(_QWORD *)(v1 + 16), *(void (**)(__n128))(v1 + 24));
}

uint64_t sub_1002467B8()
{
  uint64_t v0;

  return sub_10023D1C4(v0);
}

uint64_t sub_1002467C4(uint64_t a1)
{
  uint64_t v1;

  return sub_100241760(a1, *(_QWORD *)(v1 + 16), *(void (**)(__n128))(v1 + 24));
}

uint64_t *sub_1002467D4(uint64_t *a1)
{
  uint64_t v1;

  return sub_100241838(a1, *(_QWORD *)(v1 + 16), *(void (**)(__n128))(v1 + 24));
}

uint64_t sub_1002467F4(uint64_t a1)
{
  uint64_t v1;

  return sub_10024202C(a1, *(_QWORD *)(v1 + 16), *(void (**)(__n128))(v1 + 24));
}

uint64_t sub_100246824(uint64_t a1)
{
  uint64_t v1;

  return sub_1002418A0(a1, *(_QWORD *)(v1 + 16), *(void (**)(__n128))(v1 + 24));
}

uint64_t sub_100246898(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 0, 0, v2, qword_1003400E8 + a1 + 16);
}

uint64_t sub_1002468D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;

  v6 = sub_100246D60(a1, a2, a3, a4);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v4 + qword_1003400E8) - 8) + 8))(a1);
  return v6;
}

uint64_t sub_100246924()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  if (qword_100315888 != -1)
    swift_once(&qword_100315888, sub_1000D97B0);
  v0 = type metadata accessor for Logger(0);
  v1 = sub_10000D744(v0, (uint64_t)qword_10033FE50);
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "SecureUIHostingController: _isSecureForRemoteViewService", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }

  return 1;
}

uint64_t sub_1002469F4()
{
  sub_100246924();
  return 1;
}

uint64_t sub_100246A0C(void *a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;

  v1 = qword_100315888;
  v2 = a1;
  if (v1 != -1)
    swift_once(&qword_100315888, sub_1000D97B0);
  v3 = type metadata accessor for Logger(0);
  v4 = sub_10000D744(v3, (uint64_t)qword_10033FE50);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "SecureUIHostingController: _canShowWhileLocked", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }

  return 1;
}

void *sub_100246AE8(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return sub_100246B28(a1, a2);
}

void *sub_100246B28(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void (*v10)(uint64_t, uint64_t);
  id v11;
  uint64_t v13;

  v5 = *(_QWORD *)((swift_isaMask & *v2) + qword_1003400E8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v13 - v7;
  (*(void (**)(char *))(v6 + 16))((char *)&v13 - v7);
  v9 = (void *)UIHostingController.init(coder:rootView:)(a1, v8);
  v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v11 = v9;
  v10(a2, v5);
  if (v9)

  return v9;
}

id sub_100246BE8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v6;
  id v7;
  objc_super v9;

  v6 = (objc_class *)type metadata accessor for SecureUIHostingController(0, *(_QWORD *)((swift_isaMask & *v4) + qword_1003400E8), *(_QWORD *)((swift_isaMask & *v4) + qword_1003400E8 + 8), a4);
  v9.receiver = v4;
  v9.super_class = v6;
  v7 = objc_msgSendSuper2(&v9, "initWithCoder:", a1);

  return v7;
}

id sub_100246C5C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a3;
  return sub_100246BE8(v3, v4, v5, v6);
}

id sub_100246C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for SecureUIHostingController(0, *(_QWORD *)((swift_isaMask & *v4) + qword_1003400E8), *(_QWORD *)((swift_isaMask & *v4) + qword_1003400E8 + 8), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, "dealloc");
}

uint64_t type metadata accessor for SecureUIHostingController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100005D84(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SecureUIHostingController);
}

uint64_t sub_100246CE4(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v5;

  __chkstk_darwin(a1, a1);
  v2 = (char *)&v5 - v1;
  (*(void (**)(char *))(v3 + 16))((char *)&v5 - v1);
  return UIHostingController.init(rootView:)(v2);
}

uint64_t sub_100246D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id v6;

  v6 = objc_allocWithZone((Class)type metadata accessor for SecureUIHostingController(0, *(_QWORD *)(v4 + qword_1003400E8), *(_QWORD *)(v4 + qword_1003400E8 + 8), a4));
  return sub_100246CE4(a1);
}

uint64_t destroy for MultipleChoiceContentView(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[2]);
  swift_release(a1[3]);
  return swift_release(a1[5]);
}

uint64_t initializeWithCopy for MultipleChoiceContentView(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2[2];
  *(_QWORD *)(a1 + 16) = v5;
  v6 = a2[5];
  v8 = *(_OWORD *)(a2 + 3);
  *(_OWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 40) = v6;
  swift_retain(v3);
  swift_retain(v5);
  swift_retain(v8);
  swift_retain(v6);
  return a1;
}

uint64_t *assignWithCopy for MultipleChoiceContentView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *a1;
  v5 = *a2;
  *a1 = *a2;
  swift_retain(v5);
  swift_release(v4);
  a1[1] = a2[1];
  v6 = a2[2];
  v7 = a1[2];
  a1[2] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[3];
  v9 = a1[3];
  a1[3] = v8;
  swift_retain(v8);
  swift_release(v9);
  v11 = a2[4];
  v10 = a2[5];
  v12 = a1[5];
  a1[4] = v11;
  a1[5] = v10;
  swift_retain(v10);
  swift_release(v12);
  return a1;
}

uint64_t *assignWithTake for MultipleChoiceContentView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  a1[1] = a2[1];
  swift_release(a1[2]);
  v5 = a1[3];
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  swift_release(v5);
  v6 = a1[5];
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  swift_release(v6);
  return a1;
}

ValueMetadata *type metadata accessor for MultipleChoiceContentView()
{
  return &type metadata for MultipleChoiceContentView;
}

uint64_t sub_100246F58(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1002A1720, 1);
}

uint64_t sub_100246F68@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49[2];
  uint64_t v50;
  _QWORD v51[3];
  uint64_t v52;
  uint64_t v53;

  v2 = v1;
  v48 = a1;
  v3 = sub_100003DB8(&qword_10032B310);
  __chkstk_darwin(v3, v4);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_100003DB8(&qword_10032B318);
  __chkstk_darwin(v47, v7);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)*v1;
  if (*v1)
  {
    v11 = v10[9];
    v12 = v10[10];
    sub_100007BBC(v10 + 6, v11);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v12 + 24))(v51, v11, v12);
    v13 = v52;
    v14 = v53;
    sub_100007BBC(v51, v52);
    v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 280))(v13, v14);
    v17 = v16;
    *(_QWORD *)v6 = static HorizontalAlignment.center.getter(v15);
    *((_QWORD *)v6 + 1) = v17;
    v6[16] = 0;
    v46 = &v6[*(int *)(sub_100003DB8(&qword_10032B320) + 44)];
    v18 = v1[3];
    v50 = *(_QWORD *)(v18 + 136);
    v19 = v50;
    KeyPath = swift_getKeyPath(&unk_100260448);
    v21 = v1[2];
    v22 = v1[5];
    sub_100007CBC((uint64_t)v51, (uint64_t)v49);
    v23 = (_OWORD *)swift_allocObject(&unk_1002FCA18, 104, 7);
    v24 = v2[1];
    v23[1] = *v2;
    v23[2] = v24;
    v23[3] = v2[2];
    sub_100007D04(v49, (uint64_t)(v23 + 4));
    swift_bridgeObjectRetain(v19);
    swift_retain(v10);
    swift_retain(v21);
    swift_retain(v18);
    swift_retain(v22);
    v25 = sub_100003DB8(&qword_100318210);
    v26 = sub_100003DB8(&qword_10032B328);
    v27 = sub_1000084FC(&qword_100318220, &qword_100318210, (uint64_t)&protocol conformance descriptor for [A]);
    v28 = sub_100027688();
    v29 = sub_100247FBC();
    v30 = ForEach<>.init(_:id:content:)(&v50, KeyPath, sub_100247FB0, v23, v25, v26, v27, v28, v29);
    LOBYTE(v27) = static Edge.Set.bottom.getter(v30);
    v31 = v52;
    v32 = v53;
    sub_100007BBC(v51, v52);
    v33 = (*(double (**)(uint64_t, uint64_t))(v32 + 280))(v31, v32);
    v34 = EdgeInsets.init(_all:)(v33);
    v36 = v35;
    v38 = v37;
    v40 = v39;
    sub_10000B234((uint64_t)v6, (uint64_t)v9, &qword_10032B310);
    v41 = &v9[*(int *)(v47 + 36)];
    *v41 = v27;
    *((double *)v41 + 1) = v34;
    *((_QWORD *)v41 + 2) = v36;
    *((_QWORD *)v41 + 3) = v38;
    *((_QWORD *)v41 + 4) = v40;
    v41[40] = 0;
    sub_100007FF0((uint64_t)v6, &qword_10032B310);
    sub_1002480AC((uint64_t)v9, v48);
    return _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v51);
  }
  else
  {
    v43 = v1[1];
    v44 = type metadata accessor for UIMetrics();
    v45 = sub_10007DE90();
    result = EnvironmentObject.error()(0, v43, v44, v45);
    __break(1u);
  }
  return result;
}

uint64_t sub_100247280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v52;
  uint64_t v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;
  char v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  char v83;
  __int128 v84;

  v62 = a2;
  v64 = a4;
  v6 = sub_100003DB8(&qword_10032B358);
  __chkstk_darwin(v6, v7);
  v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100003DB8(&qword_10032B360);
  __chkstk_darwin(v10, v11);
  v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100003DB8(&qword_10032B350);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_100003DB8(&qword_10032B340);
  __chkstk_darwin(v63, v19);
  v21 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a1 + 8) == 1)
  {
    v22 = *(_QWORD *)a1;
    if ((*(_BYTE *)(v22 + 40) & 1) != 0)
    {
      swift_storeEnumTagMultiPayload(v13, v10, 1);
      v23 = sub_1000084FC(&qword_10032B348, &qword_10032B350, (uint64_t)&protocol conformance descriptor for Toggle<A>);
      swift_retain(v22);
      _ConditionalContent<>.init(storage:)(v13, v14, &type metadata for EmptyView, v23, &protocol witness table for EmptyView);
    }
    else
    {
      v61 = v6;
      v60 = *(_QWORD *)(v62 + 24);
      swift_retain(v22);
      v52 = sub_1002477BC(v60, v22);
      v54 = __chkstk_darwin(v52, v53);
      Toggle.init(isOn:label:)(v54);
      v6 = v61;
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v13, v18, v14);
      swift_storeEnumTagMultiPayload(v13, v10, 0);
      v55 = sub_1000084FC(&qword_10032B348, &qword_10032B350, (uint64_t)&protocol conformance descriptor for Toggle<A>);
      _ConditionalContent<>.init(storage:)(v13, v14, &type metadata for EmptyView, v55, &protocol witness table for EmptyView);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    }
    sub_10000B234((uint64_t)v21, (uint64_t)v9, &qword_10032B340);
    swift_storeEnumTagMultiPayload(v9, v6, 0);
    v56 = sub_100003DB8(&qword_100318248);
    v57 = sub_100248028();
    v58 = sub_10002777C();
    _ConditionalContent<>.init(storage:)(v9, v63, v56, v57, v58);
    sub_10002AB8C(v22, 1);
    return sub_100007FF0((uint64_t)v21, &qword_10032B340);
  }
  else
  {
    v24 = v6;
    v25 = a3[3];
    v26 = a3[4];
    sub_100007BBC(a3, v25);
    v27 = (*(double (**)(uint64_t, uint64_t))(v26 + 288))(v25, v26);
    v28 = a3[3];
    v29 = a3[4];
    sub_100007BBC(a3, v28);
    v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 288))(v28, v29);
    v32 = v31;
    v33 = static Alignment.center.getter(v30);
    v36 = v35;
    if (v27 > v32)
    {
      v37 = static os_log_type_t.fault.getter(v34);
      v38 = (void *)static Log.runtimeIssuesLog.getter();
      os_log(_:dso:log:_:_:)(v37, &_mh_execute_header, v38, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    }
    _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v72, 0, 1, 0, 1, 0, 1, *(_QWORD *)&v27, 0, 0, 1, *(_QWORD *)&v32, 0, v33, v36);
    v39 = v72;
    v40 = v73;
    v41 = v74;
    v42 = v75;
    v43 = v76;
    v44 = v78;
    v45 = v79;
    v46 = v80;
    v47 = v82;
    v71 = 1;
    v70 = v73;
    v69 = v75;
    v68 = v77;
    v67 = v79;
    v66 = v81;
    v65 = v83;
    *(_QWORD *)v9 = 0;
    v9[8] = 1;
    *((_QWORD *)v9 + 2) = v39;
    v9[24] = v40;
    *((_QWORD *)v9 + 4) = v41;
    v9[40] = v42;
    *((_QWORD *)v9 + 6) = v43;
    v9[56] = v68;
    *((_QWORD *)v9 + 8) = v44;
    v9[72] = v45;
    *((_QWORD *)v9 + 10) = v46;
    v9[88] = v66;
    *((_QWORD *)v9 + 12) = v47;
    v9[104] = v65;
    *((_OWORD *)v9 + 7) = v84;
    swift_storeEnumTagMultiPayload(v9, v24, 1);
    v48 = sub_100003DB8(&qword_100318248);
    v49 = sub_100248028();
    v50 = sub_10002777C();
    return _ConditionalContent<>.init(storage:)(v9, v63, v48, v49, v50);
  }
}

uint64_t sub_1002477BC(uint64_t a1, uint64_t a2)
{
  __int128 *v2;
  _OWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v18;
  __int128 v19;

  if (*(_BYTE *)(a1 + 32) == 1 && *(_BYTE *)(a2 + 40) != 1)
  {
    v4 = v2;
    v19 = *v2;
    v7 = *((_QWORD *)v2 + 2);
    v6 = *((_QWORD *)v2 + 3);
    v8 = *((_QWORD *)v2 + 5);
    type metadata accessor for MainActor(0);
    sub_100031A88(&v19);
    swift_retain(v7);
    swift_retain(v6);
    swift_retain(v8);
    swift_retain(a1);
    v9 = swift_retain(a2);
    v10 = static MainActor.shared.getter(v9);
    v11 = swift_allocObject(&unk_1002FCA40, 96, 7);
    *(_QWORD *)(v11 + 16) = v10;
    *(_QWORD *)(v11 + 24) = &protocol witness table for MainActor;
    v12 = v2[1];
    *(_OWORD *)(v11 + 32) = *v2;
    *(_OWORD *)(v11 + 48) = v12;
    *(_OWORD *)(v11 + 64) = v2[2];
    *(_QWORD *)(v11 + 80) = a1;
    *(_QWORD *)(v11 + 88) = a2;
    sub_100031A88(&v19);
    swift_retain(v7);
    swift_retain(v6);
    swift_retain(v8);
    swift_retain(a1);
    v13 = swift_retain(a2);
    v14 = static MainActor.shared.getter(v13);
    v15 = swift_allocObject(&unk_1002FCA68, 96, 7);
    *(_QWORD *)(v15 + 16) = v14;
    *(_QWORD *)(v15 + 24) = &protocol witness table for MainActor;
    v16 = v4[1];
    *(_OWORD *)(v15 + 32) = *v4;
    *(_OWORD *)(v15 + 48) = v16;
    *(_OWORD *)(v15 + 64) = v4[2];
    *(_QWORD *)(v15 + 80) = a1;
    *(_QWORD *)(v15 + 88) = a2;
    Binding.init(get:set:)(&v18, sub_100248100, v11, sub_100248168, v15, &type metadata for Bool);
  }
  else
  {
    LOBYTE(v19) = 0;
    static Binding.constant(_:)(&v18, &v19, &type metadata for Bool);
  }
  return v18;
}

void sub_10024795C(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];

  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(v5 + 24);
  v26[0] = *(_QWORD *)(v5 + 16);
  v26[1] = v6;
  v7 = sub_10002B3F4();
  v8 = swift_bridgeObjectRetain(v6);
  v9 = Text.init<A>(_:)(v26, &type metadata for String, v7, v8);
  v11 = v10;
  v13 = v12;
  v15 = v14 & 1;
  v16 = a2[3];
  v17 = a2[4];
  sub_100007BBC(a2, v16);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 200))(v16, v17);
  v19 = Text.font(_:)(v18, v9, v11, v15, v13);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  swift_release(v18);
  sub_10002B438(v9, v11, v15);
  swift_bridgeObjectRelease(v13);
  *(_QWORD *)a3 = v19;
  *(_QWORD *)(a3 + 8) = v21;
  *(_BYTE *)(a3 + 16) = v23 & 1;
  *(_QWORD *)(a3 + 24) = v25;
}

void sub_100247A60(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, _BYTE *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  _BYTE v14[24];

  if (*(_BYTE *)(a2 + 32) != 1)
    goto LABEL_6;
  v7 = *(_QWORD *)(a1 + 16);
  swift_beginAccess(v7 + 48, v14, 0, 0);
  v8 = *(_QWORD *)(v7 + 56);
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_6;
  swift_retain(a2);
  v10 = sub_10017D414(v9);
  if ((v11 & 1) == 0)
  {
    swift_release(a2);
LABEL_6:
    v13 = 0;
    goto LABEL_7;
  }
  v12 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v10);
  swift_bridgeObjectRetain(v12);
  swift_release(a2);
  v13 = sub_10006705C(a3, v12);
  swift_bridgeObjectRelease(v12);
LABEL_7:
  *a4 = v13 & 1;
}

void sub_100247B24(unsigned __int8 *a1, uint64_t a2, uint64_t a3, __int128 *a4, uint64_t a5, uint64_t a6)
{
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  os_log_type_t v34;
  uint8_t *v35;
  NSObject *log;
  os_log_type_t type;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[24];
  __int128 v42;

  v9 = *a1;
  v10 = *((_QWORD *)a4 + 2);
  swift_beginAccess(v10 + 48, v41, 0, 0);
  v11 = *(_QWORD *)(v10 + 136);
  if (v11
    && ((v12 = *(_QWORD *)(v11 + 16),
         v13 = *(_QWORD *)(v11 + 24),
         v15 = *(_QWORD *)(a5 + 16),
         v14 = *(_QWORD *)(a5 + 24),
         v12 == v15)
      ? (v16 = v13 == v14)
      : (v16 = 0),
        v16
     || (_stringCompareWithSmolCheck(_:_:expecting:)(v12, v13, *(_QWORD *)(a5 + 16), *(_QWORD *)(a5 + 24), 0) & 1) != 0))
  {
    sub_1000B4728(a5, a6, v9);
    if ((v17 & 1) != 0)
      return;
    if (qword_1003158B0 != -1)
      swift_once(&qword_1003158B0, sub_1000D9854);
    v18 = type metadata accessor for Logger(0);
    sub_10000D744(v18, (uint64_t)qword_10033FEC8);
    v42 = *a4;
    v19 = *((_QWORD *)a4 + 3);
    v20 = *((_QWORD *)a4 + 5);
    sub_100031A88(&v42);
    swift_retain(v10);
    swift_retain(v19);
    swift_retain(v20);
    swift_retain(a6);
    swift_retain(a5);
    sub_100031A88(&v42);
    swift_retain(v10);
    swift_retain(v19);
    swift_retain(v20);
    swift_retain(a6);
    swift_retain(a5);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v22, v23))
    {
      sub_100042AD0(&v42);
      swift_release(v20);
      swift_release(v19);
      swift_release(v10);
      sub_100042AD0(&v42);

      swift_release_n(a5);
      swift_release_n(a6);
      swift_release(v20);
      swift_release(v19);
      swift_release(v10);
      return;
    }
    v24 = swift_slowAlloc(32, -1);
    v38 = swift_slowAlloc(96, -1);
    v40 = v38;
    *(_DWORD *)v24 = 136446723;
    type = v23;
    log = v22;
    v25 = sub_1000AD18C();
    v27 = v26;
    v39 = sub_100172BEC(v25, v26, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40, v24 + 4, v24 + 12);
    swift_bridgeObjectRelease(v27);
    sub_100042AD0(&v42);
    swift_release(v20);
    swift_release(v19);
    swift_release(v10);
    sub_100042AD0(&v42);
    swift_release(v20);
    swift_release(v19);
    swift_release(v10);
    *(_WORD *)(v24 + 12) = 2081;
    v28 = *(_QWORD *)(a6 + 16);
    v29 = *(_QWORD *)(a6 + 24);
    swift_bridgeObjectRetain(v29);
    v39 = sub_100172BEC(v28, v29, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40, v24 + 14, v24 + 22);
    swift_release_n(a6);
    swift_bridgeObjectRelease(v29);
    *(_WORD *)(v24 + 22) = 2081;
    swift_bridgeObjectRetain(v14);
    v39 = sub_100172BEC(v15, v14, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40, v24 + 24, v24 + 32);
    swift_release_n(a5);
    swift_bridgeObjectRelease(v14);
    v30 = log;
    _os_log_impl((void *)&_mh_execute_header, log, type, "[%{public}s] QuestionnaireBodyView: failed to update value of %{private}s for %{private}s", (uint8_t *)v24, 0x20u);
    swift_arrayDestroy(v38, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1, -1);
    v31 = v24;
  }
  else
  {
    if (qword_100315820 != -1)
      swift_once(&qword_100315820, sub_1000D95E4);
    v32 = type metadata accessor for Logger(0);
    v33 = sub_10000D744(v32, (uint64_t)qword_10033FD18);
    v30 = Logger.logObject.getter(v33);
    v34 = static os_log_type_t.default.getter(v30);
    if (!os_log_type_enabled(v30, v34))
      goto LABEL_17;
    v35 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v35 = 0;
    _os_log_impl((void *)&_mh_execute_header, v30, v34, "Multiple choice question: Updating value when it is not a current question anymore", v35, 2u);
    v31 = (uint64_t)v35;
  }
  swift_slowDealloc(v31, -1, -1);
LABEL_17:

}

uint64_t sub_100247F6C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  _s8SOSBuddy36CallEmergencyServicesButtonLabelViewVwxx_0(v0 + 8);
  return swift_deallocObject(v0, 104, 7);
}

uint64_t sub_100247FB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100247280(a1, v2 + 16, (_QWORD *)(v2 + 64), a2);
}

unint64_t sub_100247FBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10032B330;
  if (!qword_10032B330)
  {
    v1 = sub_100007FAC(&qword_10032B328);
    sub_100248028();
    sub_10002777C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10032B330);
  }
  return result;
}

unint64_t sub_100248028()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10032B338;
  if (!qword_10032B338)
  {
    v1 = sub_100007FAC(&qword_10032B340);
    sub_1000084FC(&qword_10032B348, &qword_10032B350, (uint64_t)&protocol conformance descriptor for Toggle<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10032B338);
  }
  return result;
}

uint64_t sub_1002480AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100003DB8(&qword_10032B318);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1002480F4(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10024795C(*(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24), a1);
}

void sub_100248100(_BYTE *a1@<X8>)
{
  uint64_t v1;

  sub_100247A60(v1 + 32, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), a1);
}

uint64_t sub_100248114()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[6]);
  swift_release(v0[7]);
  swift_release(v0[9]);
  swift_release(v0[10]);
  swift_release(v0[11]);
  return swift_deallocObject(v0, 96, 7);
}

void sub_100248168(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_100247B24(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (__int128 *)(v1 + 32), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88));
}

unint64_t sub_10024817C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10032B368;
  if (!qword_10032B368)
  {
    v1 = sub_100007FAC(&qword_10032B318);
    sub_1000084FC(&qword_10032B370, &qword_10032B310, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10032B368);
  }
  return result;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self(_TtC8SOSBuddyP33_A811DC25D1CA02355C3BE8DBF0B1E22E19ResourceBundleClass);
}
