Swift::Void __swiftcall UIImageView.blurView()()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 8);
  v2 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v1);
  objc_msgSend(v0, "bounds");
  objc_msgSend(v2, "setFrame:");
  objc_msgSend(v2, "setAutoresizingMask:", 18);
  objc_msgSend(v0, "addSubview:", v2);

}

CGContext *UIImage.fitnessTintAndPill(with:backgroundColor:symbolCenteringOffset:assetSize:)(void *a1, void *a2, char a3, double a4)
{
  void *v4;
  void *v5;
  double v9;
  id v10;
  double v11;
  double v12;
  double v13;
  CGColor *v14;
  id v15;
  CGColor *v16;
  double v17;
  CGFloat v18;
  CGContext *result;
  CGContext *v20;
  double v21;
  id v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  CGContext *v35;
  CGSize v36;
  CGRect v37;
  CGRect v38;

  v5 = v4;
  if ((a3 - 2) > 8u)
    v9 = 300.0;
  else
    v9 = dbl_1001A07F8[(char)(a3 - 2)];
  v10 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v10, "scale");
  v12 = v11;

  v13 = v9 * v12;
  if (!a2 || (v14 = (CGColor *)objc_msgSend(a2, "CGColor")) == 0)
  {
    v15 = objc_msgSend(a1, "colorWithAlphaComponent:", 0.18);
    v14 = (CGColor *)objc_msgSend(v15, "CGColor");

  }
  v16 = (CGColor *)objc_msgSend(v5, "imageWithRenderingMode:", 2);
  objc_msgSend(v5, "scale");
  v18 = v17;
  v36.width = v13 + 4.0;
  v36.height = v13 + 4.0;
  UIGraphicsBeginImageContextWithOptions(v36, 0, v18);
  result = UIGraphicsGetCurrentContext();
  if (result)
  {
    v20 = result;
    v21 = v13 * 0.5;
    v22 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    objc_msgSend(v22, "set");

    v37.origin.x = 2.0;
    v37.origin.y = 2.0;
    v37.size.width = v13;
    v37.size.height = v13;
    CGContextFillRect(v20, v37);
    CGContextSetFillColorWithColor(v20, v14);
    v38.origin.x = 2.0;
    v38.origin.y = 2.0;
    v38.size.width = v13;
    v38.size.height = v13;
    CGContextAddEllipseInRect(v20, v38);
    CGContextDrawPath(v20, kCGPathFillStroke);
    objc_msgSend(a1, "set");
    -[CGColor size](v16, "size");
    v24 = v23;
    -[CGColor size](v16, "size");
    v26 = v24 / v25;
    -[CGColor size](v16, "size");
    v28 = v27;
    -[CGColor size](v16, "size");
    if (v29 <= v28)
    {
      v33 = v21;
      v34 = v21 / v26;
    }
    else
    {
      -[CGColor size](v16, "size");
      v31 = v30;
      -[CGColor size](v16, "size");
      if (v31 >= v32)
      {

        v35 = 0;
        v20 = v16;
        goto LABEL_15;
      }
      v33 = v21 * v26;
      v34 = v21;
    }
    -[CGColor drawInRect:](v16, "drawInRect:", v21 - v33 * 0.5 + a4, v21 - v34 * 0.5 + a4);

    result = UIGraphicsGetImageFromCurrentImageContext();
    if (result)
    {
      v35 = result;

      UIGraphicsEndImageContext();
      v16 = v14;
LABEL_15:

      return v35;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id UIImage.averageColor.getter()
{
  uint64_t v0;
  id v1;
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  unint64_t v17;
  NSString v18;
  Class isa;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  const __CFNull *v26;
  NSString *v27;
  unint64_t v28;
  id v29;
  Class v30;
  id v31;
  id result;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  double v36;
  unint64_t v37;
  double v38;
  unint64_t v39;
  double v40;
  id v41;
  uint64_t v42;
  _BYTE v43[136];

  v1 = objc_msgSend(objc_allocWithZone((Class)CIImage), "initWithImage:", v0);
  if (!v1)
    return 0;
  v2 = v1;
  objc_msgSend(v1, "extent");
  v4 = v3;
  objc_msgSend(v2, "extent");
  v6 = v5;
  objc_msgSend(v2, "extent");
  v8 = v7;
  objc_msgSend(v2, "extent");
  v10 = objc_msgSend(objc_allocWithZone((Class)CIVector), "initWithX:Y:Z:W:", v4, v6, v8, v9);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any)>);
  inited = swift_initStackObject(v11, v43);
  *(_OWORD *)(inited + 16) = xmmword_10019EEE0;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(kCIInputImageKey);
  *(_QWORD *)(inited + 40) = v13;
  *(_QWORD *)(inited + 72) = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for CIImage, CIImage_ptr);
  *(_QWORD *)(inited + 48) = v2;
  *(_QWORD *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(kCIInputExtentKey);
  *(_QWORD *)(inited + 88) = v14;
  *(_QWORD *)(inited + 120) = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for CIVector, CIVector_ptr);
  *(_QWORD *)(inited + 96) = v10;
  v15 = v10;
  v16 = v2;
  v17 = specialized Dictionary.init(dictionaryLiteral:)(inited);
  v18 = String._bridgeToObjectiveC()();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v17);
  v20 = objc_msgSend((id)objc_opt_self(CIFilter), "filterWithName:withInputParameters:", v18, isa);

  if (!v20)
  {

    return 0;
  }
  v21 = objc_msgSend(v20, "outputImage");
  if (!v21)
  {

    return 0;
  }
  v22 = v21;
  v23 = static Array._allocateBufferUninitialized(minimumCapacity:)(4, &type metadata for UInt8);
  *(_QWORD *)(v23 + 16) = 4;
  *(_DWORD *)(v23 + 32) = 0;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(CIContextOption, Any)>);
  v25 = swift_initStackObject(v24, &v42);
  *(_OWORD *)(v25 + 16) = xmmword_10019ED20;
  *(_QWORD *)(v25 + 32) = kCIContextWorkingColorSpace;
  *(_QWORD *)(v25 + 64) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CFNullRef?);
  *(_QWORD *)(v25 + 40) = kCFNull;
  v26 = kCFNull;
  v27 = kCIContextWorkingColorSpace;
  v28 = specialized Dictionary.init(dictionaryLiteral:)(v25);
  v29 = objc_allocWithZone((Class)CIContext);
  type metadata accessor for CIContextOption(0);
  lazy protocol witness table accessor for type CIContextOption and conformance CIContextOption();
  v30 = Dictionary._bridgeToObjectiveC()().super.isa;
  v31 = objc_msgSend(v29, "initWithOptions:", v30, swift_bridgeObjectRelease(v28).n128_f64[0]);

  result = objc_msgSend(v31, "render:toBitmap:rowBytes:bounds:format:colorSpace:", v22, v23 + 32, 4, kCIFormatRGBA8, 0, 0.0, 0.0, 1.0, 1.0);
  v34 = *(_QWORD *)(v23 + 16);
  if (!v34)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v34 == 1)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v34 < 3)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v34 != 3)
  {
    LOBYTE(v33) = *(_BYTE *)(v23 + 32);
    *(double *)&v35 = (double)v33;
    v36 = *(double *)&v35 / 255.0;
    LOBYTE(v35) = *(_BYTE *)(v23 + 33);
    *(double *)&v37 = (double)v35;
    v38 = *(double *)&v37 / 255.0;
    LOBYTE(v37) = *(_BYTE *)(v23 + 34);
    *(double *)&v39 = (double)v37;
    v40 = *(double *)&v39 / 255.0;
    LOBYTE(v39) = *(_BYTE *)(v23 + 35);
    v41 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", v36, v38, v40, (double)v39 / 255.0);
    swift_bridgeObjectRelease(v23);

    return v41;
  }
LABEL_16:
  __break(1u);
  return result;
}

UIImage_optional __swiftcall UIImage.cropped()()
{
  void *v0;
  CGImage *v1;
  CGImage *v2;
  CGImage *v3;
  CGImage *v4;
  CGImage *v5;
  Swift::Bool v6;
  CGImage *v7;
  CGImageRef v8;
  objc_class *v9;
  objc_class *v10;
  UIImage_optional result;
  CGRect v12;

  v1 = (CGImage *)objc_msgSend(v0, "CGImage");
  if (v1)
  {
    v2 = v1;
    CGImageGetWidth(v1);

  }
  v3 = (CGImage *)objc_msgSend(v0, "CGImage");
  if (v3)
  {
    v4 = v3;
    CGImageGetHeight(v3);

  }
  v5 = (CGImage *)objc_msgSend(v0, "CGImage");
  if (v5
    && (v7 = v5,
        MOSuggestionInterstitialExpandableListViewCellConstants.init()(),
        v8 = CGImageCreateWithImageInRect(v7, v12),
        v7,
        v8))
  {
    v9 = (objc_class *)objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:scale:orientation:", v8, objc_msgSend(v0, "imageOrientation"), 0.0);

  }
  else
  {
    v9 = 0;
  }
  v10 = v9;
  result.value.super.isa = v10;
  result.is_nil = v6;
  return result;
}

UIImage_optional __swiftcall UIImage.circular()()
{
  void *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  id v5;
  double *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  objc_class *v11;
  objc_class *v12;
  Swift::Bool v13;
  _QWORD v14[5];
  uint64_t v15;
  UIImage_optional result;

  objc_msgSend(v0, "size");
  v2 = v1;
  objc_msgSend(v0, "size");
  v4 = v3;
  v5 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:", v2, v3);
  v6 = (double *)swift_allocObject(&unk_1001E7068, 40, 7);
  v6[2] = v2;
  v6[3] = v4;
  *((_QWORD *)v6 + 4) = v0;
  v7 = swift_allocObject(&unk_1001E7090, 32, 7);
  *(_QWORD *)(v7 + 16) = partial apply for closure #1 in UIImage.circular();
  *(_QWORD *)(v7 + 24) = v6;
  v14[4] = partial apply for thunk for @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> ();
  v15 = v7;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = thunk for @escaping @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> ();
  v14[3] = &block_descriptor_11;
  v8 = _Block_copy(v14);
  v9 = v15;
  v10 = v0;
  swift_retain(v7);
  v11 = (objc_class *)objc_msgSend(v5, "imageWithActions:", v8, swift_release(v9).n128_f64[0]);

  _Block_release(v8);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation(v7, "", 90, 91, 59, 1);
  swift_release(v6);
  swift_release(v7);
  if ((v5 & 1) != 0)
    __break(1u);
  else
    v12 = v11;
  result.value.super.isa = v12;
  result.is_nil = v13;
  return result;
}

id closure #1 in UIImage.circular()(uint64_t a1, void *a2)
{
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;

  MOSuggestionInterstitialExpandableListViewCellConstants.init()();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v11 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithOvalInRect:", v3, v5, v7, v9);
  objc_msgSend(v11, "addClip");

  return objc_msgSend(a2, "drawInRect:", v4, v6, v8, v10);
}

void thunk for @escaping @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> ()(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

unint64_t lazy protocol witness table accessor for type CIContextOption and conformance CIContextOption()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type CIContextOption and conformance CIContextOption;
  if (!lazy protocol witness table cache variable for type CIContextOption and conformance CIContextOption)
  {
    type metadata accessor for CIContextOption(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for CIContextOption, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CIContextOption and conformance CIContextOption);
  }
  return result;
}

uint64_t sub_100080674()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

id partial apply for closure #1 in UIImage.circular()(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in UIImage.circular()(a1, *(void **)(v1 + 32));
}

uint64_t sub_1000806A4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t partial apply for thunk for @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> ()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_11(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

double MOMapAnnotation.coordinate.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC16MomentsUIService15MOMapAnnotation_coordinate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService15MOMapAnnotation_coordinate, v3, 0, 0);
  return *(double *)v1;
}

uint64_t MOMapAnnotation.coordinate.setter(double a1, double a2)
{
  uint64_t v2;
  double *v5;
  uint64_t result;
  _BYTE v7[24];

  v5 = (double *)(v2 + OBJC_IVAR____TtC16MomentsUIService15MOMapAnnotation_coordinate);
  result = swift_beginAccess(v2 + OBJC_IVAR____TtC16MomentsUIService15MOMapAnnotation_coordinate, v7, 1, 0);
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MOMapAnnotation.coordinate.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService15MOMapAnnotation_coordinate, a1, 33, 0);
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

uint64_t MOMapAnnotation.title.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC16MomentsUIService15MOMapAnnotation_title);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService15MOMapAnnotation_title, v4, 0, 0);
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t MOMapAnnotation.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[24];

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC16MomentsUIService15MOMapAnnotation_title);
  swift_beginAccess(v5, v8, 1, 0);
  v6 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease(v6);
}

uint64_t (*MOMapAnnotation.title.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService15MOMapAnnotation_title, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id MOMapAnnotation.__allocating_init(coordinate:title:)(uint64_t a1, uint64_t a2, double a3, double a4)
{
  objc_class *v4;
  char *v9;
  char *v10;
  double *v11;
  uint64_t v12;
  objc_super v14;
  char v15[24];

  v9 = (char *)objc_allocWithZone(v4);
  v10 = &v9[OBJC_IVAR____TtC16MomentsUIService15MOMapAnnotation_title];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v11 = (double *)&v9[OBJC_IVAR____TtC16MomentsUIService15MOMapAnnotation_coordinate];
  *v11 = a3;
  v11[1] = a4;
  swift_beginAccess(v10, v15, 1, 0);
  v12 = *((_QWORD *)v10 + 1);
  *(_QWORD *)v10 = a1;
  *((_QWORD *)v10 + 1) = a2;
  swift_bridgeObjectRelease(v12);
  v14.receiver = v9;
  v14.super_class = v4;
  return objc_msgSendSuper2(&v14, "init");
}

id MOMapAnnotation.init(coordinate:title:)(uint64_t a1, uint64_t a2, double a3, double a4)
{
  char *v4;
  char *v7;
  double *v8;
  uint64_t v9;
  objc_super v11;
  char v12[24];

  v7 = &v4[OBJC_IVAR____TtC16MomentsUIService15MOMapAnnotation_title];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v8 = (double *)&v4[OBJC_IVAR____TtC16MomentsUIService15MOMapAnnotation_coordinate];
  *v8 = a3;
  v8[1] = a4;
  swift_beginAccess(v7, v12, 1, 0);
  v9 = *((_QWORD *)v7 + 1);
  *(_QWORD *)v7 = a1;
  *((_QWORD *)v7 + 1) = a2;
  swift_bridgeObjectRelease(v9);
  v11.receiver = v4;
  v11.super_class = (Class)type metadata accessor for MOMapAnnotation();
  return objc_msgSendSuper2(&v11, "init");
}

uint64_t type metadata accessor for MOMapAnnotation()
{
  return objc_opt_self(_TtC16MomentsUIService15MOMapAnnotation);
}

uint64_t MOMapAnnotation.__allocating_init(coordinate:title:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

void MOMapAnnotation.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("MomentsUIService.MOMapAnnotation", 32, "init()", 6, 0);
  __break(1u);
}

id MOMapAnnotation.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOMapAnnotation();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id MOSuggestionAssetMapSnapshotProvider.targetQueue.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 24, v2, 0, 0);
  return *(id *)(v0 + 24);
}

void MOSuggestionAssetMapSnapshotProvider.targetQueue.setter(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  _BYTE v4[24];

  swift_beginAccess(v1 + 24, v4, 1, 0);
  v3 = *(void **)(v1 + 24);
  *(_QWORD *)(v1 + 24) = a1;

}

uint64_t MOSuggestionAssetMapSnapshotProvider.__allocating_init(targetQueue:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, 56, 7);
  MOSuggestionAssetMapSnapshotProvider.init(targetQueue:)(a1);
  return v3;
}

uint64_t MOSuggestionAssetMapSnapshotProvider.init(targetQueue:)(id a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v19;
  _QWORD *v20;

  v2 = v1;
  v4 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue, OS_dispatch_queue_ptr);
  static DispatchQoS.userInitiated.getter();
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v7);
  v20 = _swiftEmptyArrayStorage;
  v14 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  v16 = lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A], &demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v20, v15, v16, v4, v14);
  v17 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000031, 0x80000001001A60C0, v13, v6, v10, 0);
  *(_QWORD *)(v2 + 16) = v17;
  *(_QWORD *)(v2 + 32) = 0x3F40624DD2F1A9FCLL;
  *(_QWORD *)(v2 + 40) = objc_msgSend(objc_allocWithZone((Class)NSCache), "init");
  *(_QWORD *)(v2 + 48) = objc_msgSend(objc_allocWithZone((Class)GEOMapService), "init");
  if (!a1)
    a1 = v17;
  *(_QWORD *)(v2 + 24) = a1;
  objc_msgSend(*(id *)(v2 + 40), "setCountLimit:", 30);
  return v2;
}

double MOSuggestionAssetMapSnapshotProvider.getMapItem(resource:completion:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  double result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD aBlock[5];
  _QWORD *v30;

  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v27 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v26 - 8);
  v11 = __chkstk_darwin(v26);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 120))(v11);
  v15 = swift_allocObject(&unk_1001E70E0, 24, 7);
  swift_weakInit(v15 + 16);
  v16 = (_QWORD *)swift_allocObject(&unk_1001E7108, 48, 7);
  v16[2] = v15;
  v16[3] = a1;
  v16[4] = a2;
  v16[5] = a3;
  aBlock[4] = partial apply for closure #1 in MOSuggestionAssetMapSnapshotProvider.getMapItem(resource:completion:);
  v30 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_12;
  v17 = _Block_copy(aBlock);
  swift_retain(v15);
  v18 = a1;
  swift_retain(a3);
  static DispatchQoS.unspecified.getter(v19);
  v28 = _swiftEmptyArrayStorage;
  v20 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  v22 = lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v28, v21, v22, v7, v20);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v9, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v26);
  v23 = v30;
  swift_release(v15);
  *(_QWORD *)&result = swift_release(v23).n128_u64[0];
  return result;
}

uint64_t sub_100081168()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void closure #1 in MOSuggestionAssetMapSnapshotProvider.getMapItem(resource:completion:)(uint64_t a1, void *a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v8;
  uint64_t Strong;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  objc_class *v19;
  Class isa;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  void *v25;
  _QWORD *v26;
  id v27;
  _QWORD v28[5];
  _QWORD *v29;
  char v30[24];
  char v31[24];

  v8 = a1 + 16;
  swift_beginAccess(a1 + 16, v31, 0, 0);
  Strong = swift_weakLoadStrong(v8);
  if (Strong)
  {
    v10 = Strong;
    v11 = *(id *)(Strong + 40);
    v12 = objc_msgSend(a2, "identifier", swift_release(v10).n128_f64[0]);
    if (!v12)
    {
      __break(1u);
      return;
    }
    v13 = v12;
    v14 = objc_msgSend(v11, "objectForKey:", v12);

    if (v14)
    {
      v15 = swift_unknownObjectRetain();
      a3(v15);
      swift_unknownObjectRelease_n(v14, 2);
      return;
    }
  }
  swift_beginAccess(v8, v30, 0, 0);
  v16 = swift_weakLoadStrong(v8);
  if (v16)
  {
    v17 = v16;
    v18 = *(id *)(v16 + 48);
    v19 = (objc_class *)objc_msgSend(a2, "data", swift_release(v17).n128_f64[0]);
    isa = v19;
    if (v19)
    {
      v21 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v19);
      v23 = v22;

      isa = Data._bridgeToObjectiveC()().super.isa;
      outlined consume of Data._Representation(v21, v23);
    }
    v24 = (_QWORD *)swift_allocObject(&unk_1001E72C8, 48, 7);
    v24[2] = a1;
    v24[3] = a2;
    v24[4] = a3;
    v24[5] = a4;
    v28[4] = partial apply for closure #1 in closure #1 in MOSuggestionAssetMapSnapshotProvider.getMapItem(resource:completion:);
    v29 = v24;
    v28[0] = _NSConcreteStackBlock;
    v28[1] = 1107296256;
    v28[2] = thunk for @escaping @callee_guaranteed (@guaranteed GEOMapItem?, @guaranteed Error?) -> ();
    v28[3] = &block_descriptor_38;
    v25 = _Block_copy(v28);
    v26 = v29;
    swift_retain(a1);
    v27 = a2;
    swift_retain(a4);
    objc_msgSend(v18, "resolveMapItemFromHandle:completionHandler:", isa, v25, swift_release(v26).n128_f64[0]);
    _Block_release(v25);

  }
}

void partial apply for closure #1 in MOSuggestionAssetMapSnapshotProvider.getMapItem(resource:completion:)()
{
  uint64_t v0;

  closure #1 in MOSuggestionAssetMapSnapshotProvider.getMapItem(resource:completion:)(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void (**)(uint64_t))(v0 + 32), *(_QWORD *)(v0 + 40));
}

id closure #1 in closure #1 in MOSuggestionAssetMapSnapshotProvider.getMapItem(resource:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t Strong;
  uint64_t v22;
  void *v23;
  id v24;
  id result;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[3];
  _BYTE v30[8];
  uint64_t v31[3];

  if (!a2)
  {
LABEL_6:
    if (a1)
      goto LABEL_7;
    return (id)a5(0);
  }
  swift_errorRetain(a2);
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v10 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v10, (uint64_t)static MOAngelLogger.assets);
  swift_errorRetain(a2);
  v11 = swift_errorRetain(a2);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v27 = a3;
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v31[0] = v15;
    *(_DWORD *)v14 = 136315138;
    swift_getErrorValue(a2, v30, v29);
    v16 = Error.localizedDescription.getter(v29[1], v29[2]);
    v18 = v17;
    v28 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v17, v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, v29, v14 + 4);
    swift_bridgeObjectRelease(v18);
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "[MOPOIAnnotationView]  %s", v14, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    v19 = v14;
    a3 = v27;
    swift_slowDealloc(v19, -1, -1);

    swift_errorRelease(a2);
    goto LABEL_6;
  }
  swift_errorRelease(a2);
  swift_errorRelease(a2);
  swift_errorRelease(a2);

  if (!a1)
    return (id)a5(0);
LABEL_7:
  v20 = a3 + 16;
  swift_beginAccess(v20, v31, 0, 0);
  Strong = swift_weakLoadStrong(v20);
  if (!Strong)
  {
    swift_unknownObjectRetain();
    goto LABEL_13;
  }
  v22 = Strong;
  v23 = *(void **)(Strong + 40);
  swift_unknownObjectRetain();
  v24 = v23;
  result = objc_msgSend(a4, "identifier", swift_release(v22).n128_f64[0]);
  if (result)
  {
    v26 = result;
    objc_msgSend(v24, "setObject:forKey:", a1, result);

LABEL_13:
    a5(a1);
    return (id)swift_unknownObjectRelease(a1);
  }
  __break(1u);
  return result;
}

uint64_t thunk for @escaping @callee_guaranteed (@guaranteed GEOMapItem?, @guaranteed Error?) -> ()(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  id v7;

  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  swift_unknownObjectRetain();
  v7 = a3;
  v6(a2, a3);
  swift_release(v5);

  return swift_unknownObjectRelease(a2);
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_12(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }
  return result;
}

void MOSuggestionAssetMapSnapshotProvider.getMapFor(locations:size:completion:)(uint64_t a1, char a2, void (*a3)(_QWORD), uint64_t a4)
{
  uint64_t v4;
  void *v7;
  uint64_t v8;
  void (*v9)(void *, void (*)(void *), uint64_t, __n128);
  __n128 v10;

  if ((a2 - 2) > 8u)
  {
    a3(0);
  }
  else
  {
    v7 = (void *)(*(uint64_t (**)(void))(*(_QWORD *)v4 + 192))();
    v8 = swift_allocObject(&unk_1001E7158, 32, 7);
    *(_QWORD *)(v8 + 16) = a3;
    *(_QWORD *)(v8 + 24) = a4;
    v9 = *(void (**)(void *, void (*)(void *), uint64_t, __n128))(*(_QWORD *)v4 + 200);
    v10 = swift_retain(a4);
    v9(v7, partial apply for closure #1 in MOSuggestionAssetMapSnapshotProvider.getMapFor(locations:size:completion:), v8, v10);

    swift_release(v8);
  }
}

void closure #1 in MOSuggestionAssetMapSnapshotProvider.getMapFor(locations:size:completion:)(void *a1, void (*a2)(void))
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t ObjCClassFromMetadata;
  id v8;
  id v9;

  if (a1)
  {
    v4 = MOSuggestionAssetsTypeMultiPinMap;
    v5 = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIImage, UIImage_ptr);
    v6 = objc_allocWithZone((Class)MOSuggestionAsset);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v5);
    v8 = a1;
    v9 = objc_msgSend(v6, "init:type:contentClassType:", v8, v4, ObjCClassFromMetadata);
    a2();

  }
  else
  {
    a2();
  }
}

void partial apply for closure #1 in MOSuggestionAssetMapSnapshotProvider.getMapFor(locations:size:completion:)(void *a1)
{
  uint64_t v1;

  closure #1 in MOSuggestionAssetMapSnapshotProvider.getMapFor(locations:size:completion:)(a1, *(void (**)(void))(v1 + 16));
}

void *MOSuggestionAssetMapSnapshotProvider.makeOptions(for:size:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  double v3;
  uint64_t v4;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char **v9;
  id v10;
  char **v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  double v53;
  id v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  uint64_t v73;
  uint64_t v74;
  NSObject *v75;
  NSObject *v76;
  os_log_type_t v77;
  NSObject *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  NSObject *v83;
  NSObject *v84;
  os_log_type_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  Class isa;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  void *v97;
  uint64_t v98;
  id v99;
  id v100;
  unint64_t v101;
  char v102[48];
  uint64_t v103;
  uint64_t v104;
  double v105;
  uint64_t v106;

  v4 = a2;
  v6 = a2;
  v7 = 216;
  if (a2 == 3)
    v7 = 208;
  v8 = (*(uint64_t (**)(void))(*v2 + v7))();
  v9 = &selRef_genericAvatarFor_pointSize_completion_;
  v10 = objc_msgSend(objc_allocWithZone((Class)MKStandardMapConfiguration), "init");
  v11 = &selRef_filterIncludingAllCategories;
  if (v6 != 8 && (specialized static MOAngelDefaultsManager.BOOLeanValueFor(_:)() & 1) == 0)
    v11 = &selRef_filterExcludingAllCategories;
  v12 = objc_msgSend((id)objc_opt_self(MKPointOfInterestFilter), *v11);
  objc_msgSend(v10, "setPointOfInterestFilter:", v12);

  v13 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
LABEL_78:
    if (a1 < 0)
      v90 = a1;
    else
      v90 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v14 = _CocoaArrayWrapper.endIndex.getter(v90);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v15 = objc_msgSend(objc_allocWithZone((Class)MKMapSnapshotOptions), v9[24]);
  v100 = v15;
  v101 = (unint64_t)v8 >> 62;
  v99 = v10;
  if (v14 != 1)
  {
    v21 = 0;
    v23 = v4 == 8 || (v4 - 5) < 2u;
    goto LABEL_37;
  }
  v16 = v15;
  if (v13)
  {
    if (a1 < 0)
      v24 = a1;
    else
      v24 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    if (_CocoaArrayWrapper.endIndex.getter(v24))
    {
LABEL_11:
      if ((a1 & 0xC000000000000001) != 0)
      {
        v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
      }
      else
      {
        if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_94;
        }
        v13 = *(_QWORD *)(a1 + 32);
        swift_retain(v13);
      }
      v18 = swift_bridgeObjectRelease(a1);
      if ((*(double (**)(__n128))(*(_QWORD *)v13 + 360))(v18) > 0.9)
      {
        v19 = (*(uint64_t (**)(void))(*(_QWORD *)v13 + 288))();
        if (v19)
        {
          v20 = swift_unknownObjectRelease(v19);
          goto LABEL_30;
        }
      }
      v3 = (*(double (**)(void))(*(_QWORD *)v13 + 456))();
      if (one-time initialization token for LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD == -1)
      {
LABEL_29:
        if (*(double *)&static MOMapLocation.LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD < v3)
        {
LABEL_34:
          swift_release(v13);
          goto LABEL_36;
        }
LABEL_30:
        v25 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v13 + 288))(v20);
        if (v25)
        {
          v26 = v25;
          v27 = objc_msgSend(objc_allocWithZone((Class)MKMapItem), "initWithGeoMapItem:isPlaceHolderPlace:", v25, 1);
          if (v27)
          {
            if ((v4 - 2) >= 9u)
            {
              v29 = 300.0;
              v30 = 300.0;
            }
            else
            {
              v28 = 8 * (char)(v4 - 2);
              v29 = *(double *)((char *)&unk_1001A08D8 + v28);
              v30 = *(double *)((char *)&unk_1001A0920 + v28);
            }
            v97 = v27;
            v54 = objc_msgSend((id)objc_opt_self(MKMapCamera), "cameraLookingAtMapItem:forViewSize:allowPitch:", v27, 1, v29, v30);
            v55 = (*(double (**)(void))(*(_QWORD *)v13 + 240))();
            objc_msgSend(v54, "setCenterCoordinate:", v55, (*(double (**)(void))(*(_QWORD *)v13 + 264))());
            v96 = v54;
            objc_msgSend(v16, "setCamera:", v54);
            v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
            *(double *)&v57 = COERCE_DOUBLE(swift_initStackObject(v56, v102));
            *(_OWORD *)(v57 + 16) = xmmword_10019EDA0;
            *(_QWORD *)(v57 + 32) = v13;
            v105 = *(double *)&v57;
            specialized Array._endMutation()(v57);
            v58 = *(_QWORD *)&v105;
            swift_retain(v13);
            v59 = specialized static MOSuggestionAssetMapsClusterer.makeRegion(containing:applyBottomPaddingForPlatter:applyBottomPaddingForGradient:horizontalAspectRatio:markerStyle:applyRenderMargin:shouldAdjustMarker:)(v58, 0, 0, 0, 1);
            v61 = v60;
            v3 = v62;
            v64 = v63;
            objc_msgSend(v16, "region", swift_bridgeObjectRelease(v58).n128_f64[0]);
            v66 = v65;
            v68 = v67;
            if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
              swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
            v69 = type metadata accessor for Logger(0);
            v70 = __swift_project_value_buffer(v69, (uint64_t)static MOAngelLogger.assets);
            v71 = Logger.logObject.getter(v70);
            v72 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v71, v72))
            {
              v73 = swift_slowAlloc(22, -1);
              *(_DWORD *)v73 = 134218240;
              v105 = v64;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v105, &v106, v73 + 4);
              *(_WORD *)(v73 + 12) = 2048;
              v105 = v3;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v105, &v106, v73 + 14);
              _os_log_impl((void *)&_mh_execute_header, v71, v72, "[MapSnapshot] naive region region=%f, %f", (uint8_t *)v73, 0x16u);
              v74 = v73;
              v10 = v99;
              swift_slowDealloc(v74, -1, -1);
            }

            v75 = v16;
            v76 = Logger.logObject.getter(v75);
            v77 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v76, v77))
            {
              v78 = v75;
              v79 = swift_slowAlloc(22, -1);
              *(_DWORD *)v79 = 134218240;
              -[NSObject region](v78, "region");
              v105 = *(double *)&v80;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v105, &v106, v79 + 4);
              *(_WORD *)(v79 + 12) = 2048;
              -[NSObject region](v78, "region");
              v105 = *(double *)&v81;
              v10 = v99;
              v16 = v100;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v105, &v106, v79 + 14);

              _os_log_impl((void *)&_mh_execute_header, v76, v77, "[MapSnapshot] options.camera region=%f, %f", (uint8_t *)v79, 0x16u);
              v82 = v79;
              v75 = v78;
              swift_slowDealloc(v82, -1, -1);
            }
            else
            {

              v76 = v75;
            }
            v14 = 1;

            if (v66 >= v3 || v68 >= v64)
            {
              swift_unknownObjectRelease(v26);

              swift_release(v13);
            }
            else
            {
              v95 = v26;
              -[NSObject setRegion:](v75, "setRegion:", v59, v61, v3, v64);
              v83 = v75;
              v84 = Logger.logObject.getter(v83);
              v85 = static os_log_type_t.debug.getter();
              if (os_log_type_enabled(v84, v85))
              {
                v86 = swift_slowAlloc(22, -1);
                *(_DWORD *)v86 = 134218240;
                -[NSObject region](v83, "region");
                v105 = *(double *)&v87;
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v105, &v106, v86 + 4);

                *(_WORD *)(v86 + 12) = 2048;
                -[NSObject region](v83, "region");
                v105 = *(double *)&v88;
                v10 = v99;
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v105, &v106, v86 + 14);

                _os_log_impl((void *)&_mh_execute_header, v84, v85, "[MapSnapshot] using naive region region=%f, %f", (uint8_t *)v86, 0x16u);
                v89 = v86;
                v14 = 1;
                swift_slowDealloc(v89, -1, -1);
                swift_unknownObjectRelease(v95);

                swift_release(v13);
              }
              else
              {

                swift_unknownObjectRelease(v95);
                swift_release(v13);
              }
              v16 = v100;
            }
            goto LABEL_45;
          }
          swift_release(v13);
          swift_unknownObjectRelease(v26);
          goto LABEL_36;
        }
        goto LABEL_34;
      }
LABEL_94:
      v20 = swift_once(&one-time initialization token for LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD, one-time initialization function for LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD);
      goto LABEL_29;
    }
  }
  else
  {
    v17 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v17)
      goto LABEL_11;
  }
  swift_bridgeObjectRelease(a1);
LABEL_36:
  v23 = 0;
  v21 = v4 == 4;
LABEL_37:
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v31 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v31, (uint64_t)static MOAngelLogger.assets);
  v32 = swift_bridgeObjectRetain_n(v8, 2);
  v33 = Logger.logObject.getter(v32);
  v34 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v33, v34))
  {
    v98 = v14;
    v35 = swift_slowAlloc(40, -1);
    *(double *)&v95 = COERCE_DOUBLE(swift_slowAlloc(32, -1));
    v105 = *(double *)&v95;
    *(_DWORD *)v35 = 136316162;
    v36 = MOSuggestionAssetTileSize.description.getter(v4);
    v38 = v37;
    v104 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v36, v37, (uint64_t *)&v105);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, &v105, v35 + 4);
    swift_bridgeObjectRelease(v38);
    *(_WORD *)(v35 + 12) = 2048;
    if (v101)
    {
      if (v8 < 0)
        v94 = v8;
      else
        v94 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v8);
      v39 = _CocoaArrayWrapper.endIndex.getter(v94);
      swift_bridgeObjectRelease(v8);
    }
    else
    {
      v39 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v8);
    v104 = v39;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, &v105, v35 + 14);
    swift_bridgeObjectRelease(v8);
    *(_WORD *)(v35 + 22) = 1024;
    LODWORD(v104) = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, (char *)&v104 + 4, v35 + 24);
    *(_WORD *)(v35 + 28) = 1024;
    v21 = v21;
    LODWORD(v104) = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, (char *)&v104 + 4, v35 + 30);
    *(_WORD *)(v35 + 34) = 1024;
    LODWORD(v104) = (v4 & 0xFD) == 4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, (char *)&v104 + 4, v35 + 36);
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "[MapSnapshot] style: %s, numLocations: %ld, applyBottomPaddingForPlatter: %{BOOL}d, applyBottomPaddingForGradient: %{BOOL}d, shouldHaveHorizontalAspectRatio: %{BOOL}d", (uint8_t *)v35, 0x28u);
    swift_arrayDestroy(v95, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v95, -1, -1);
    swift_slowDealloc(v35, -1, -1);

    v14 = v98;
    v10 = v99;
  }
  else
  {

    swift_bridgeObjectRelease_n(v8, 2);
  }
  v16 = v100;
  objc_msgSend(v100, "setRegion:", specialized static MOSuggestionAssetMapsClusterer.makeRegion(containing:applyBottomPaddingForPlatter:applyBottomPaddingForGradient:horizontalAspectRatio:markerStyle:applyRenderMargin:shouldAdjustMarker:)(v8, v23, v21, (v4 & 0xFD) == 4, 1));
LABEL_45:
  objc_msgSend(v16, "setShowsBuildings:", 1, v95);
  objc_msgSend(v16, "setPreferredConfiguration:", v10);
  objc_msgSend(v16, "_setAllowsSimultaneousLightDarkSnapshots:", 1);
  objc_msgSend(v16, "_setUseSnapshotService:", 1);
  if ((v4 - 2) > 8u)
  {
    v41 = 300.0;
    v42 = 300.0;
  }
  else
  {
    v40 = 8 * (char)(v4 - 2);
    v41 = *(double *)((char *)&unk_1001A08D8 + v40);
    v42 = *(double *)((char *)&unk_1001A0920 + v40);
  }
  objc_msgSend(v16, "setSize:", v41, v42);
  v105 = COERCE_DOUBLE(_swiftEmptyArrayStorage);
  if (v101)
  {
    if (v8 < 0)
      v91 = v8;
    else
      v91 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v43 = _CocoaArrayWrapper.endIndex.getter(v91);
    if (v43)
      goto LABEL_50;
  }
  else
  {
    v43 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v8);
    if (v43)
    {
LABEL_50:
      v13 = 0;
      v44 = 4;
      while (1)
      {
        a1 = v44 - 4;
        if ((v8 & 0xC000000000000001) != 0)
        {
          v9 = (char **)specialized _ArrayBuffer._getElementSlowPath(_:)(v44 - 4, v8);
          v46 = v44 - 3;
          if (__OFADD__(a1, 1))
            goto LABEL_77;
        }
        else
        {
          v9 = *(char ***)(v8 + 8 * v44);
          swift_retain(v9);
          v46 = v44 - 3;
          if (__OFADD__(a1, 1))
          {
LABEL_77:
            __break(1u);
            goto LABEL_78;
          }
        }
        v104 = (uint64_t)v9;
        closure #1 in MOSuggestionAssetMapSnapshotProvider.makeOptions(for:size:)(&v104, v4, v14 == 1, &v103);
        swift_release(v9);
        v48 = v103;
        if (v103)
        {
          v10 = (id)v43;
          v49 = v4;
          v50 = v14;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v47);
          v52 = *(_QWORD *)((*(_QWORD *)&v105 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v51 = *(_QWORD *)((*(_QWORD *)&v105 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v52 >= v51 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v51 > 1, v52 + 1, 1);
          v45 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v52, v48);
          specialized Array._endMutation()(v45);
          v14 = v50;
          v4 = v49;
          v43 = (uint64_t)v10;
        }
        ++v44;
        if (v46 == v43)
        {
          swift_bridgeObjectRelease(v8);
          v53 = v105;
          v10 = v99;
          v16 = v100;
          goto LABEL_87;
        }
      }
    }
  }
  swift_bridgeObjectRelease(v8);
  v53 = COERCE_DOUBLE(_swiftEmptyArrayStorage);
LABEL_87:
  swift_bridgeObjectRelease(v8);
  type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MKAnnotationView, MKAnnotationView_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v16, "setAnnotationViews:", isa, swift_bridgeObjectRelease(*(_QWORD *)&v53).n128_f64[0]);

  return v16;
}

uint64_t closure #1 in MOSuggestionAssetMapSnapshotProvider.makeOptions(for:size:)@<X0>(uint64_t *a1@<X0>, char a2@<W1>, char a3@<W2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  double (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  __n128 v15;
  uint64_t v16;
  double (*v17)(void);
  uint64_t (*v18)(void);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  double v32;
  uint64_t v33;
  double v34;
  double v35;
  objc_class *v36;
  char *v37;
  char *v38;
  double *v39;
  uint64_t v40;
  double v41;
  id v42;
  id v43;
  id v44;
  uint64_t result;
  objc_super v49;
  char v50[24];
  double v51;
  _BYTE v52[8];
  uint64_t v53;
  BOOL v54;
  char v55;
  char v56;
  BOOL v57;
  uint64_t v58;

  v4 = *a1;
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v5 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v5, (uint64_t)static MOAngelLogger.assets);
  v6 = swift_retain_n(v4, 2);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc(28, -1);
    *(_DWORD *)v9 = 134218496;
    v10 = *(double (**)(void))(*(_QWORD *)v4 + 360);
    v51 = v10();
    v11 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, v52, v9 + 4);
    *(_WORD *)(v9 + 12) = 2048;
    v51 = (*(double (**)(uint64_t))(*(_QWORD *)v4 + 456))(v11);
    v12 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, v52, v9 + 14);
    *(_WORD *)(v9 + 22) = 1024;
    if (((double (*)(uint64_t))v10)(v12) <= 0.9)
    {
      swift_release(v4);
    }
    else
    {
      v13 = (*(uint64_t (**)(void))(*(_QWORD *)v4 + 288))();
      swift_release(v4);
      if (v13)
      {
        swift_unknownObjectRelease(v13);
        v14 = 1;
LABEL_10:
        LODWORD(v51) = v14;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, (char *)&v51 + 4, v9 + 24);
        swift_release(v4);
        _os_log_impl((void *)&_mh_execute_header, v7, v8, "[MapSnapshot] confidenceLevel=%f, unc=%f, shouldUseSpecificPlaceName=%{BOOL}d", (uint8_t *)v9, 0x1Cu);
        swift_slowDealloc(v9, -1, -1);

        goto LABEL_11;
      }
    }
    v14 = 0;
    goto LABEL_10;
  }

  v16 = swift_release_n(v4, 2, v15);
LABEL_11:
  v17 = *(double (**)(void))(*(_QWORD *)v4 + 360);
  if (((double (*)(uint64_t))v17)(v16) > 0.9
    && (v18 = *(uint64_t (**)(void))(*(_QWORD *)v4 + 288), (v19 = v18()) != 0))
  {
    v20 = swift_unknownObjectRelease(v19);
    v21 = ((uint64_t (*)(uint64_t))v18)(v20);
  }
  else
  {
    v21 = 0;
  }
  v22 = (*(uint64_t (**)(void))(*(_QWORD *)v4 + 384))();
  v23 = (*(uint64_t (**)(void))(*(_QWORD *)v4 + 312))();
  v25 = v24;
  if (v17() > 0.9 && (v26 = (*(uint64_t (**)(void))(*(_QWORD *)v4 + 288))()) != 0)
  {
    v26 = swift_unknownObjectRelease(v26);
    v27 = 1;
  }
  else
  {
    v27 = 0;
  }
  v28 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 480))(v26);
  if (v17() > 0.9 && (v29 = (*(uint64_t (**)(void))(*(_QWORD *)v4 + 288))()) != 0)
  {
    v30 = swift_unknownObjectRelease(v29);
    v31 = 0;
  }
  else
  {
    v32 = (*(double (**)(void))(*(_QWORD *)v4 + 456))();
    if (one-time initialization token for LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD != -1)
      v30 = swift_once(&one-time initialization token for LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD, one-time initialization function for LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD);
    v31 = *(double *)&static MOMapLocation.LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD < v32;
  }
  if ((v25 & 1) != 0)
    v33 = 1;
  else
    v33 = v23;
  v51 = *(double *)&v21;
  v52[0] = a2;
  v52[1] = v22 & 1;
  v53 = v33;
  v54 = (a3 & 1) == 0;
  v55 = v27;
  v56 = v28 & 1;
  v57 = v31;
  v58 = 0x4000000000000000;
  v34 = (*(double (**)(uint64_t))(*(_QWORD *)v4 + 240))(v30);
  v35 = (*(double (**)(void))(*(_QWORD *)v4 + 264))();
  v36 = (objc_class *)type metadata accessor for MOMapAnnotation();
  v37 = (char *)objc_allocWithZone(v36);
  v38 = &v37[OBJC_IVAR____TtC16MomentsUIService15MOMapAnnotation_title];
  *(_QWORD *)v38 = 0;
  *((_QWORD *)v38 + 1) = 0;
  v39 = (double *)&v37[OBJC_IVAR____TtC16MomentsUIService15MOMapAnnotation_coordinate];
  *v39 = v34;
  v39[1] = v35;
  swift_beginAccess(v38, v50, 1, 0);
  v40 = *((_QWORD *)v38 + 1);
  *(_QWORD *)v38 = 0;
  *((_QWORD *)v38 + 1) = 0;
  *(_QWORD *)&v41 = swift_bridgeObjectRelease(v40).n128_u64[0];
  v49.receiver = v37;
  v49.super_class = v36;
  v42 = objc_msgSendSuper2(&v49, "init", v41);
  v43 = objc_allocWithZone((Class)type metadata accessor for MOPOIAnnotationView());
  v44 = specialized MOPOIAnnotationView.init(annotation:configuration:)((uint64_t)v42, (uint64_t)&v51);

  result = swift_unknownObjectRelease(v21);
  *a4 = v44;
  return result;
}

void MOSuggestionAssetMapSnapshotProvider.snapshot(options:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD v11[5];
  uint64_t v12;

  v6 = objc_msgSend(objc_allocWithZone((Class)MKMapSnapshotter), "initWithOptions:", a1);
  v7 = (void *)(*(uint64_t (**)(void))(*(_QWORD *)v3 + 120))();
  v8 = swift_allocObject(&unk_1001E7180, 32, 7);
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  v11[4] = partial apply for closure #1 in MOSuggestionAssetMapSnapshotProvider.snapshot(options:completion:);
  v12 = v8;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = thunk for @escaping @callee_guaranteed (@guaranteed NSNumber?, @guaranteed Error?) -> ();
  v11[3] = &block_descriptor_12_0;
  v9 = _Block_copy(v11);
  v10 = v12;
  swift_retain(a3);
  objc_msgSend(v6, "startWithQueue:completionHandler:", v7, v9, swift_release(v10).n128_f64[0]);
  _Block_release(v9);

}

void closure #1 in MOSuggestionAssetMapSnapshotProvider.snapshot(options:completion:)(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  _QWORD v16[3];
  _BYTE v17[8];
  uint64_t v18;
  uint64_t v19;

  if (a1)
  {
    v4 = a1;
    v15 = objc_msgSend(v4, "image");
    a3();

  }
  else
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1)
      swift_once(&serverManager._clientConnections, one-time initialization function for shared);
    v6 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v6, (uint64_t)static MOAngelLogger.shared);
    swift_errorRetain(a2);
    v7 = swift_errorRetain(a2);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(12, -1);
      v11 = swift_slowAlloc(32, -1);
      v19 = v11;
      *(_DWORD *)v10 = 136315138;
      if (a2)
      {
        swift_getErrorValue(a2, v17, v16);
        v12 = Error.localizedDescription.getter(v16[1], v16[2]);
        v14 = v13;
      }
      else
      {
        v14 = 0xE500000000000000;
        v12 = 0x3E6C696E3CLL;
      }
      v18 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v14, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v10 + 4);
      swift_bridgeObjectRelease(v14);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "[Assets] MKMapSnapshotter: Unable to create Map Snapshot. error=%s", v10, 0xCu);
      swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v11, -1, -1);
      swift_slowDealloc(v10, -1, -1);
    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);
    }

    ((void (*)(_QWORD))a3)(0);
  }
}

_QWORD *MOSuggestionAssetMapSnapshotProvider.consolidatedClusterPin(locations:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  double v8;
  char v9;
  uint64_t v10;
  __n128 v11;
  double v12;
  double v13;
  double (*v14)(void);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v17 = a1;
    else
      v17 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease(a1);
    if (v2 > 0)
    {
      swift_bridgeObjectRetain(a1);
      v18 = _CocoaArrayWrapper.endIndex.getter(v17);
      if (!v18)
      {
        v9 = 0;
        v4 = 0;
        v6 = 0.0;
        v7 = 0.0;
        v8 = 0.0;
LABEL_22:
        swift_bridgeObjectRelease(a1);
        v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
        v21 = swift_allocObject(v20, 40, 7);
        *(_OWORD *)(v21 + 16) = xmmword_10019EDA0;
        v22 = type metadata accessor for MOMapLocation(0);
        swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
        swift_unknownObjectRetain();
        v23 = MOMapLocation.init(latitude:longitude:title:clusterCount:geoMapItem:confidenceLevel:isWork:enclosingArea:horizontalUncertainty:isScaledDownPOI:poiCateogory:)(0, 0xE000000000000000, v2, 0, v4, v9 & 1, 0, 0, v8 / (double)v2, v7 / (double)v2, v6, 0.0, 0, 0, 0xE000000000000000);
        *(_QWORD *)(v21 + 32) = v23;
        specialized Array._endMutation()(v23);
        v19 = v21;
        swift_unknownObjectRelease(v4);
        return (_QWORD *)v19;
      }
      v3 = v18;
      if (v18 >= 1)
      {
LABEL_4:
        v4 = 0;
        v5 = 0;
        v6 = 0.0;
        v7 = 0.0;
        v8 = 0.0;
        do
        {
          if ((a1 & 0xC000000000000001) != 0)
          {
            v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
          }
          else
          {
            v10 = *(_QWORD *)(a1 + 8 * v5 + 32);
            v11 = swift_retain(v10);
          }
          v12 = (*(double (**)(__n128))(*(_QWORD *)v10 + 240))(v11);
          v13 = (*(double (**)(void))(*(_QWORD *)v10 + 264))();
          v14 = *(double (**)(void))(*(_QWORD *)v10 + 360);
          if (v6 < v14())
            v6 = v14();
          v15 = (*(uint64_t (**)(void))(*(_QWORD *)v10 + 288))();
          if (v15)
          {
            v16 = v15;
            swift_unknownObjectRelease(v4);
            v4 = v16;
          }
          ++v5;
          v8 = v8 + v12;
          v7 = v7 + v13;
          v9 = (*(uint64_t (**)(void))(*(_QWORD *)v10 + 384))();
          swift_release(v10);
        }
        while (v3 != v5);
        goto LABEL_22;
      }
      __break(1u);
    }
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
    {
      swift_bridgeObjectRetain(a1);
      v3 = v2;
      goto LABEL_4;
    }
  }
  return _swiftEmptyArrayStorage;
}

_QWORD *MOSuggestionAssetMapSnapshotProvider.clusteredPinsUsingHierachicalDendogram(locations:)(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  double *v5;
  uint64_t v6;
  double v7;
  double v8;
  long double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  _QWORD *result;
  char v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  id v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double *v37;
  double v38;
  double v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  double v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  int *v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  double *v65;
  uint64_t v66;
  uint64_t v67;
  _BOOL4 v68;
  _QWORD *v69;
  uint64_t v70;

  v2 = (int *)type metadata accessor for MOSuggestionAssetMapsClusterer.Cluster(0);
  v3 = *((_QWORD *)v2 - 1);
  __chkstk_darwin(v2);
  v5 = (double *)((char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!((unint64_t)a1 >> 62))
  {
    if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10) >= 3)
      goto LABEL_3;
LABEL_31:
    swift_bridgeObjectRetain(a1);
    return (_QWORD *)a1;
  }
  if (a1 < 0)
    v59 = a1;
  else
    v59 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v60 = _CocoaArrayWrapper.endIndex.getter(v59);
  swift_bridgeObjectRelease(a1);
  if (v60 < 3)
    goto LABEL_31;
LABEL_3:
  v6 = 1;
  v7 = specialized static MOSuggestionAssetMapsClusterer.makeRegion(containing:applyBottomPaddingForPlatter:applyBottomPaddingForGradient:horizontalAspectRatio:markerStyle:applyRenderMargin:shouldAdjustMarker:)(a1, 0, 0, 0, 1);
  v9 = v8;
  v11 = v10;
  v13 = v12;
  if (v10 <= 0.0005)
  {
LABEL_10:
    v65 = v5;
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
      swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    v17 = type metadata accessor for Logger(0);
    v18 = __swift_project_value_buffer(v17, (uint64_t)static MOAngelLogger.assets);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v21 = 134217984;
      v69 = (_QWORD *)v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70, v21 + 4);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "[MOSuggestionAssetMapsClusterer] using numBuckets: %ld", v21, 0xCu);
      swift_slowDealloc(v21, -1, -1);
    }

    v22 = specialized static MOSuggestionAssetMapsClusterer.clusteredPins(locations:targetRegion:numBuckets:)(a1, v6, v7, v9, v11, v13);
    v23 = specialized static MOAngelDefaultsManager.BOOLeanValueFor(_:)();
    if ((v23 & 1) != 0)
    {
      v56 = Logger.logObject.getter(v23);
      v57 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v56, v57))
      {
        v58 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v58 = 0;
        _os_log_impl((void *)&_mh_execute_header, v56, v57, "[MOSuggestionAssetMapsClusterer] Skipping dendrogram", v58, 2u);
        swift_slowDealloc(v58, -1, -1);
      }

    }
    else
    {
      swift_bridgeObjectRelease(v22);
      v25 = Logger.logObject.getter(v24);
      v26 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v25, v26))
      {
        v27 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v27 = 0;
        _os_log_impl((void *)&_mh_execute_header, v25, v26, "[MOSuggestionAssetMapsClusterer] Building dendrogram", v27, 2u);
        swift_slowDealloc(v27, -1, -1);
      }

      v28 = objc_allocWithZone((Class)type metadata accessor for MOSuggestionAssetMapsClusterer());
      swift_bridgeObjectRetain(a1);
      v30 = (_QWORD *)MOSuggestionAssetMapsClusterer.init(mapLocations:separationThreshold:)(v29, 1.0);
      v31 = (*(uint64_t (**)(void))((swift_isaMask & *v30) + 0xF8))();
      v32 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v30) + 0x100))(v31);
      v33 = v32;
      v34 = *(_QWORD *)(v32 + 16);
      if (v34)
      {
        v64 = v30;
        v69 = _swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)(v34);
        v35 = *(unsigned __int8 *)(v3 + 80);
        v63 = v33;
        v36 = v33 + ((v35 + 32) & ~v35);
        v66 = *(_QWORD *)(v3 + 72);
        v37 = v65;
        do
        {
          outlined init with copy of MOSuggestionAssetMapsClusterer.Cluster(v36, (uint64_t)v37);
          v38 = *v37;
          v39 = v37[1];
          v40 = v2[12];
          v41 = (uint64_t *)((char *)v37 + v2[11]);
          v42 = *((_QWORD *)v37 + 3);
          v68 = v42 < 2;
          if (v42 < 2)
            v42 = 0;
          v67 = v42;
          v43 = *(double *)((char *)v37 + v2[10]);
          v44 = *(double *)((char *)v37 + v2[14]);
          v45 = *v41;
          v46 = v41[1];
          v47 = *(_QWORD *)((char *)v37 + v2[9]);
          v48 = *((_BYTE *)v37 + v40);
          v49 = v2;
          v50 = *((_BYTE *)v37 + v2[13]);
          v51 = type metadata accessor for MOMapLocation(0);
          swift_allocObject(v51, *(unsigned int *)(v51 + 48), *(unsigned __int16 *)(v51 + 52));
          swift_bridgeObjectRetain(v46);
          swift_unknownObjectRetain();
          v61 = v50;
          v2 = v49;
          v52 = MOMapLocation.init(latitude:longitude:title:clusterCount:geoMapItem:confidenceLevel:isWork:enclosingArea:horizontalUncertainty:isScaledDownPOI:poiCateogory:)(v45, v46, v67, v68, v47, v48, 0, 0, v38, v39, v43, v44, v61, 0, 0xE000000000000000);
          v53 = outlined destroy of MOSuggestionAssetMapsClusterer.Cluster((uint64_t)v37);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v53);
          v54 = v69[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v54);
          v55 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v54, v52);
          specialized ContiguousArray._endMutation()(v55);
          v36 += v66;
          --v34;
        }
        while (v34);
        v22 = (uint64_t)v69;
        swift_bridgeObjectRelease(v63);

      }
      else
      {
        swift_bridgeObjectRelease(v32);

        return _swiftEmptyArrayStorage;
      }
    }
    return (_QWORD *)v22;
  }
  result = (_QWORD *)specialized static MOAngelDefaultsManager.doubleValueFor(_:)();
  if ((v15 & 1) != 0)
  {
    v6 = 5;
    goto LABEL_10;
  }
  v16 = round(*(double *)&result);
  if ((~*(_QWORD *)&v16 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v16 <= -9.22337204e18)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v16 < 9.22337204e18)
  {
    v6 = (uint64_t)v16;
    goto LABEL_10;
  }
LABEL_35:
  __break(1u);
  return result;
}

id *MOSuggestionAssetMapSnapshotProvider.deinit()
{
  id *v0;

  return v0;
}

uint64_t MOSuggestionAssetMapSnapshotProvider.__deallocating_deinit()
{
  id *v0;

  return swift_deallocClassInstance(v0, 56, 7);
}

void MOSuggestionAssetMapSnapshotProvider.getRouteMapFor(_:size:completion:)(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4)
{
  char **v4;
  void *v5;
  char **v6;
  id v11;
  uint64_t v12;
  double *v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  double *v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  id v31;
  id v32;
  uint64_t v33;
  double v34;
  double v35;
  id v36;
  uint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  objc_class *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  double v51;
  id v52;
  id v53;
  _QWORD *v54;
  uint64_t v55;
  Class isa;
  uint64_t v57;
  id v58;
  void *v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  char **v67;
  objc_super v68;
  char v69[24];
  _QWORD aBlock[5];
  uint64_t v71;

  v6 = v4;
  v11 = (id)((unint64_t)a1 >> 62);
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v63 = a1;
    else
      v63 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v12 = _CocoaArrayWrapper.endIndex.getter(v63);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v13 = _swiftEmptyArrayStorage;
  v66 = a3;
  v67 = v6;
  v65 = v11;
  if (v12)
  {
    aBlock[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v12 & ~(v12 >> 63), 0);
    if (v12 < 0)
    {
      __break(1u);
      goto LABEL_33;
    }
    v14 = 0;
    v13 = (double *)aBlock[0];
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14, a1);
      else
        v15 = *(id *)(a1 + 8 * v14 + 32);
      v16 = v15;
      objc_msgSend(v15, "coordinate");
      v18 = v17;
      v20 = v19;

      aBlock[0] = v13;
      v22 = *((_QWORD *)v13 + 2);
      v21 = *((_QWORD *)v13 + 3);
      if (v22 >= v21 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
        v13 = (double *)aBlock[0];
      }
      ++v14;
      *((_QWORD *)v13 + 2) = v22 + 1;
      v23 = &v13[2 * v22];
      *((_QWORD *)v23 + 4) = v18;
      *((_QWORD *)v23 + 5) = v20;
    }
    while (v12 != v14);
  }
  v24 = specialized MOSuggestionAssetMapSnapshotProvider.makeRouteRect(_:size:)((uint64_t)v13, a2);
  v26 = v25;
  v28 = v27;
  v30 = v29;
  swift_bridgeObjectRelease(v13);
  v6 = &selRef_genericAvatarFor_pointSize_completion_;
  v11 = objc_msgSend(objc_allocWithZone((Class)MKStandardMapConfiguration), "init");
  v31 = objc_msgSend((id)objc_opt_self(MKPointOfInterestFilter), "filterExcludingAllCategories");
  objc_msgSend(v11, "setPointOfInterestFilter:", v31);

  v32 = objc_msgSend(objc_allocWithZone((Class)MKMapSnapshotOptions), "init");
  v5 = v32;
  if ((a2 - 2) >= 9u)
  {
    v34 = 300.0;
    v35 = 300.0;
  }
  else
  {
    v33 = 8 * (char)(a2 - 2);
    v34 = *(double *)((char *)&unk_1001A08D8 + v33);
    v35 = *(double *)((char *)&unk_1001A0920 + v33);
  }
  objc_msgSend(v32, "setSize:", v34, v35);
  objc_msgSend(v5, "setMapRect:", v24, v26, v28, v30);
  objc_msgSend(v5, "setPreferredConfiguration:", v11);
  v36 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithUserInterfaceStyle:", 2);
  objc_msgSend(v5, "setTraitCollection:", v36);

  objc_msgSend(v5, "_setUseSnapshotService:", 1);
  if (v12 != 1)
    goto LABEL_27;
  if (!v65)
  {
    v37 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v37)
      goto LABEL_18;
LABEL_26:
    swift_bridgeObjectRelease(a1);
    goto LABEL_27;
  }
  if (a1 < 0)
    v57 = a1;
  else
    v57 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  if (!_CocoaArrayWrapper.endIndex.getter(v57))
    goto LABEL_26;
LABEL_18:
  v64 = a4;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_33:
    v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    goto LABEL_21;
  }
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v38 = *(id *)(a1 + 32);
LABEL_21:
    v39 = v38;
    swift_bridgeObjectRelease(a1);
    v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v41 = swift_allocObject(v40, 40, 7);
    *(_OWORD *)(v41 + 16) = xmmword_10019EDA0;
    objc_msgSend(v39, "coordinate");
    v43 = v42;
    v45 = v44;
    v46 = (objc_class *)type metadata accessor for MOMapAnnotation();
    v47 = (char *)objc_allocWithZone(v46);
    v48 = &v47[OBJC_IVAR____TtC16MomentsUIService15MOMapAnnotation_title];
    *(_QWORD *)v48 = 0;
    *((_QWORD *)v48 + 1) = 0;
    v49 = &v47[OBJC_IVAR____TtC16MomentsUIService15MOMapAnnotation_coordinate];
    *(_QWORD *)v49 = v43;
    *((_QWORD *)v49 + 1) = v45;
    swift_beginAccess(v48, v69, 1, 0);
    v50 = *((_QWORD *)v48 + 1);
    *(_QWORD *)v48 = 0;
    *((_QWORD *)v48 + 1) = 0;
    *(_QWORD *)&v51 = swift_bridgeObjectRelease(v50).n128_u64[0];
    v68.receiver = v47;
    v68.super_class = v46;
    v52 = objc_msgSendSuper2(&v68, v6[24], v51);
    v53 = objc_allocWithZone((Class)type metadata accessor for WorkoutLocationAnnotationView());
    v54 = specialized WorkoutLocationAnnotationView.init(annotation:type:tileSize:)(v52, 0, v53);
    *(_QWORD *)(v41 + 32) = v54;
    aBlock[0] = v41;
    specialized Array._endMutation()(v54);
    v55 = aBlock[0];
    type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MKAnnotationView, MKAnnotationView_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v5, "setAnnotationViews:", isa, swift_bridgeObjectRelease(v55).n128_f64[0]);

    a4 = v64;
    a3 = v66;
LABEL_27:
    v58 = objc_msgSend(objc_allocWithZone((Class)MKMapSnapshotter), "initWithOptions:", v5);
    v59 = (void *)(*((uint64_t (**)(void))*v67 + 15))();
    v60 = swift_allocObject(&unk_1001E71D0, 41, 7);
    *(_QWORD *)(v60 + 16) = a3;
    *(_QWORD *)(v60 + 24) = a4;
    *(_QWORD *)(v60 + 32) = a1;
    *(_BYTE *)(v60 + 40) = a2;
    aBlock[4] = partial apply for closure #2 in MOSuggestionAssetMapSnapshotProvider.getRouteMapFor(_:size:completion:);
    v71 = v60;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed NSNumber?, @guaranteed Error?) -> ();
    aBlock[3] = &block_descriptor_18;
    v61 = _Block_copy(aBlock);
    v62 = v71;
    swift_bridgeObjectRetain(a1);
    swift_retain(a4);
    objc_msgSend(v58, "startWithQueue:completionHandler:", v59, v61, swift_release(v62).n128_f64[0]);
    _Block_release(v61);

    return;
  }
  __break(1u);
}

uint64_t closure #2 in MOSuggestionAssetMapSnapshotProvider.getRouteMapFor(_:size:completion:)(void *a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  id v23;
  __n128 v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t aBlock[5];
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[3];
  char v51[8];

  v12 = type metadata accessor for DispatchWorkItemFlags(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for DispatchQoS(0);
  v17 = __chkstk_darwin(v16);
  v20 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v45 = v18;
    v46 = v17;
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue, OS_dispatch_queue_ptr);
    v21 = a1;
    v44 = v13;
    v22 = a4;
    v23 = v21;
    v25 = (void *)static OS_dispatch_queue.main.getter(v24);
    v26 = swift_allocObject(&unk_1001E7278, 56, 7);
    *(_QWORD *)(v26 + 16) = a5;
    *(_BYTE *)(v26 + 24) = a6;
    *(_QWORD *)(v26 + 32) = v23;
    *(_QWORD *)(v26 + 40) = a3;
    *(_QWORD *)(v26 + 48) = v22;
    aBlock[4] = (uint64_t)partial apply for closure #1 in closure #2 in MOSuggestionAssetMapSnapshotProvider.getRouteMapFor(_:size:completion:);
    v48 = v26;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = (uint64_t)&block_descriptor_32;
    v27 = _Block_copy(aBlock);
    v28 = v48;
    v29 = v23;
    swift_bridgeObjectRetain(a5);
    swift_retain(v22);
    swift_release(v28);
    static DispatchQoS.unspecified.getter(v30);
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    v31 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    v33 = lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v32, v33, v12, v31);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v20, v15, v27);
    _Block_release(v27);

    (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v12);
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v20, v46);
  }
  else
  {
    if (a2)
    {
      swift_errorRetain(a2);
      if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
        swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
      v35 = type metadata accessor for Logger(0);
      __swift_project_value_buffer(v35, (uint64_t)static MOAngelLogger.assets);
      swift_errorRetain(a2);
      v36 = swift_errorRetain(a2);
      v37 = Logger.logObject.getter(v36);
      v38 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v37, v38))
      {
        v39 = (uint8_t *)swift_slowAlloc(12, -1);
        v40 = swift_slowAlloc(32, -1);
        aBlock[0] = v40;
        *(_DWORD *)v39 = 136315138;
        swift_getErrorValue(a2, v51, v50);
        v41 = Error.localizedDescription.getter(v50[1], v50[2]);
        v43 = v42;
        v49 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v41, v42, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, v50, v39 + 4);
        swift_bridgeObjectRelease(v43);
        swift_errorRelease(a2);
        swift_errorRelease(a2);
        _os_log_impl((void *)&_mh_execute_header, v37, v38, "[RouteSnapshot] snapshot error %s", v39, 0xCu);
        swift_arrayDestroy(v40, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v40, -1, -1);
        swift_slowDealloc(v39, -1, -1);

        swift_errorRelease(a2);
      }
      else
      {
        swift_errorRelease(a2);
        swift_errorRelease(a2);
        swift_errorRelease(a2);

      }
    }
    return a3(0);
  }
}

void MOSuggestionAssetMapSnapshotProvider.getGenericMapFor(location:size:completion:)(uint64_t a1, unsigned __int8 a2, void (*a3)(_QWORD), uint64_t a4)
{
  uint64_t v4;
  id v7;
  uint64_t v8;
  void (*v9)(id, void (*)(void *), uint64_t, __n128);
  __n128 v10;

  if ((a2 - 2) > 8u)
  {
    a3(0);
  }
  else
  {
    v7 = specialized MOSuggestionAssetMapSnapshotProvider.makeOptionsForArea(for:size:)(a1, a2);
    v8 = swift_allocObject(&unk_1001E7220, 32, 7);
    *(_QWORD *)(v8 + 16) = a3;
    *(_QWORD *)(v8 + 24) = a4;
    v9 = *(void (**)(id, void (*)(void *), uint64_t, __n128))(*(_QWORD *)v4 + 200);
    v10 = swift_retain(a4);
    v9(v7, partial apply for closure #1 in MOSuggestionAssetMapSnapshotProvider.getGenericMapFor(location:size:completion:), v8, v10);

    swift_release(v8);
  }
}

void closure #1 in MOSuggestionAssetMapSnapshotProvider.getGenericMapFor(location:size:completion:)(id a1, void (*a2)(void))
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  if (a1)
  {
    v3 = a1;
    v4 = MOSuggestionAssetsTypeGenericMap;
    v5 = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIImage, UIImage_ptr);
    a1 = objc_msgSend(objc_allocWithZone((Class)MOSuggestionAsset), "init:type:contentClassType:", v3, v4, swift_getObjCClassFromMetadata(v5));
  }
  v6 = a1;
  a2();

}

void partial apply for closure #1 in MOSuggestionAssetMapSnapshotProvider.snapshot(options:completion:)(void *a1, uint64_t a2)
{
  uint64_t v2;

  closure #1 in MOSuggestionAssetMapSnapshotProvider.snapshot(options:completion:)(a1, a2, *(void (**)(void))(v2 + 16));
}

double specialized MOSuggestionAssetMapSnapshotProvider.makeRouteRect(_:size:)(uint64_t a1, unsigned __int8 a2)
{
  int v2;
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;

  v2 = a2;
  v3 = objc_msgSend((id)objc_opt_self(MKPolyline), "polylineWithCoordinates:count:", a1 + 32, *(_QWORD *)(a1 + 16));
  objc_msgSend(v3, "boundingMapRect");
  v7 = v6;
  v8 = v4;
  if (v4 > v5)
    v9 = v4;
  else
    v9 = v5;
  if (v2 == 3)
    v10 = v9 * 2.75;
  else
    v10 = v9 * 2.5;

  return v7 + v8 * 0.5 - v10 * 0.5;
}

uint64_t sub_100084284()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 41, 7);
}

uint64_t partial apply for closure #2 in MOSuggestionAssetMapSnapshotProvider.getRouteMapFor(_:size:completion:)(void *a1, uint64_t a2)
{
  uint64_t v2;

  return closure #2 in MOSuggestionAssetMapSnapshotProvider.getRouteMapFor(_:size:completion:)(a1, a2, *(uint64_t (**)(_QWORD))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_BYTE *)(v2 + 40));
}

_QWORD *specialized WorkoutLocationAnnotationView.init(annotation:type:tileSize:)(void *a1, char a2, void *a3)
{
  uint64_t v4;
  id v5;
  void *v6;
  _QWORD *v7;
  id v8;
  UIAccessibilityTraits v9;
  _QWORD *v10;
  unint64_t v11;
  UIAccessibilityTraits v12;
  void *v13;
  _QWORD *v14;
  id v15;
  Swift::String v16;
  Swift::String v17;
  void *object;
  NSString v19;
  objc_super v21;
  Swift::String v22;

  v4 = a2 & 1;
  v21.receiver = a3;
  v21.super_class = (Class)type metadata accessor for WorkoutLocationAnnotationView();
  v5 = objc_msgSendSuper2(&v21, "initWithAnnotation:reuseIdentifier:", a1, 0);
  objc_msgSend(v5, "setFrame:", 0.0, 0.0, 15.0, 15.0);
  v6 = (void *)objc_opt_self(UIColor);
  v7 = v5;
  v8 = objc_msgSend(v6, "clearColor");
  objc_msgSend(v7, "setBackgroundColor:", v8);

  objc_msgSend(v7, "setCanShowCallout:", 1);
  (*(void (**)(uint64_t))((swift_isaMask & *v7) + 0x58))(v4);
  objc_msgSend(v7, "setIsAccessibilityElement:", 1);
  v9 = UIAccessibilityTraitImage;
  v10 = v7;
  v11 = (unint64_t)objc_msgSend(v10, "accessibilityTraits");
  if ((v9 & ~v11) != 0)
    v12 = v9;
  else
    v12 = 0;
  objc_msgSend(v10, "setAccessibilityTraits:", v12 | v11);

  v13 = (void *)objc_opt_self(NSBundle);
  v14 = v10;
  v15 = objc_msgSend(v13, "mainBundle");
  v22._object = (void *)0x80000001001A8590;
  v16._countAndFlagsBits = 0x6E73206574756F52;
  v16._object = (void *)0xEE00746F68737061;
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v22._countAndFlagsBits = 0xD000000000000033;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v22)._object;

  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v14, "setAccessibilityLabel:", v19, swift_bridgeObjectRelease(object).n128_f64[0]);

  return v14;
}

void specialized static MOSuggestionAssetMapSnapshotProvider.overlay(annotationView:at:on:context:)(void *a1, id a2, CGContext *a3)
{
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  CGFloat v11;
  double v12;
  double v13;
  CGFloat v14;
  id v15;
  CGRect v16;
  CGRect v17;

  objc_msgSend(a2, "pointForCoordinate:");
  v6 = v5;
  v8 = v7;
  objc_msgSend(a1, "bounds");
  v9 = v6 - CGRectGetMidX(v16);
  objc_msgSend(a1, "centerOffset");
  v11 = v9 + v10;
  objc_msgSend(a1, "bounds");
  v12 = v8 - CGRectGetMidY(v17);
  objc_msgSend(a1, "centerOffset");
  v14 = v12 + v13;
  CGContextSaveGState(a3);
  CGContextTranslateCTM(a3, v11, v14);
  objc_msgSend(a1, "prepareForSnapshotting");
  v15 = objc_msgSend(a1, "layer");
  objc_msgSend(v15, "renderInContext:", a3);

  CGContextRestoreGState(a3);
}

void specialized static MOSuggestionAssetMapSnapshotProvider.routeImage(locations:size:lineWidth:snapshot:)(uint64_t a1, id a2, double a3)
{
  id *v3;
  id v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  id v12;
  double v13;
  CGFloat v14;
  id v15;
  double v16;
  double v17;
  id v18;
  double v19;
  double v20;
  id v21;
  CGContext *v22;
  CGContext *v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t *v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  id v37;
  objc_class *v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  CGSize v45;

  v7 = objc_msgSend(a2, "image");
  objc_msgSend(v7, "size");
  v9 = v8;
  v11 = v10;

  v12 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v12, "scale");
  v14 = v13;

  v45.width = v9;
  v45.height = v11;
  UIGraphicsBeginImageContextWithOptions(v45, 0, v14);
  v15 = objc_msgSend(a2, "image");
  objc_msgSend(v15, "size");
  v17 = v16;

  v18 = objc_msgSend(a2, "image");
  objc_msgSend(v18, "size");
  v20 = v19;

  v21 = objc_msgSend(a2, "image");
  objc_msgSend(v21, "drawInRect:", 0.0, 0.0, v17, v20);

  v22 = UIGraphicsGetCurrentContext();
  if (!v22)
    return;
  v23 = v22;
  v24 = objc_allocWithZone((Class)type metadata accessor for MOSuggestionAssetGradientRouteRenderer());
  swift_bridgeObjectRetain(a1);
  v26 = (void *)MOSuggestionAssetGradientRouteRenderer.init(routeLocations:)(v25);
  v27 = &v44;
  v28 = (_QWORD *)__chkstk_darwin(v26);
  (*(void (**)(CGContext *, id (*)(double, double), double))((swift_isaMask & *v28) + 0x78))(v23, partial apply for closure #1 in static MOSuggestionAssetMapSnapshotProvider.routeImage(locations:size:lineWidth:snapshot:), a3);
  CGContextStrokePath(v23);
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v41 = a1;
    else
      v41 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v29 = _CocoaArrayWrapper.endIndex.getter(v41);
    if (v29)
      goto LABEL_4;
LABEL_18:
    swift_bridgeObjectRelease(a1);
LABEL_19:
    UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return;
  }
  v29 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v29)
    goto LABEL_18;
LABEL_4:
  if ((a1 & 0xC000000000000001) == 0)
  {
    v30 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v30)
    {
      v3 = (id *)(a1 + 32);
      v27 = (uint64_t *)*(id *)(a1 + 32);
      swift_bridgeObjectRelease(a1);
      v31 = v29 - 1;
      if (!__OFSUB__(v29, 1))
      {
        if (v31 < v30)
        {
          v3 = (id *)v3[v31];
          goto LABEL_9;
        }
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_24;
  }
  v27 = (uint64_t *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
  swift_bridgeObjectRelease(a1);
  v42 = __OFSUB__(v29, 1);
  v43 = v29 - 1;
  if (!v42)
  {
    swift_bridgeObjectRetain(a1);
    v3 = (id *)specialized _ArrayBuffer._getElementSlowPath(_:)(v43, a1);
    swift_bridgeObjectRelease(a1);
LABEL_9:
    if (serverManager._connectionProperties == (NSMutableDictionary *)-1)
    {
LABEL_10:
      v32 = type metadata accessor for Logger(0);
      v33 = __swift_project_value_buffer(v32, (uint64_t)static MOAngelLogger.assets);
      v34 = Logger.logObject.getter(v33);
      v35 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v34, v35))
      {
        v36 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v36 = 0;
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "[RouteSnapshot] Rendering valid start and stop pins", v36, 2u);
        swift_slowDealloc(v36, -1, -1);
      }

      v37 = objc_msgSend(objc_allocWithZone((Class)MKPointAnnotation), "init");
      v38 = (objc_class *)type metadata accessor for WorkoutLocationAnnotationView();
      v39 = specialized WorkoutLocationAnnotationView.init(annotation:type:tileSize:)(v37, 0, objc_allocWithZone(v38));
      objc_msgSend(v27, "coordinate");
      specialized static MOSuggestionAssetMapSnapshotProvider.overlay(annotationView:at:on:context:)(v39, a2, v23);

      v40 = specialized WorkoutLocationAnnotationView.init(annotation:type:tileSize:)(objc_msgSend(objc_allocWithZone((Class)MKPointAnnotation), "init"), 1, objc_allocWithZone(v38));
      objc_msgSend(v3, "coordinate");
      specialized static MOSuggestionAssetMapSnapshotProvider.overlay(annotationView:at:on:context:)(v40, a2, v23);

      goto LABEL_19;
    }
LABEL_25:
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    goto LABEL_10;
  }
  __break(1u);
}

id specialized MOSuggestionAssetMapSnapshotProvider.makeOptionsForArea(for:size:)(uint64_t a1, unsigned __int8 a2)
{
  int v4;
  double v5;
  double v6;
  id v7;
  double v8;
  uint64_t v9;
  double v10;
  double v11;

  v4 = a2;
  v5 = (*(double (**)(uint64_t))(*(_QWORD *)a1 + 456))(a1) / 111000.0 * 1.5;
  if (v4 == 3)
    v5 = v5 + v5;
  v6 = fmin(v5, 180.0);
  v7 = objc_msgSend(objc_allocWithZone((Class)MKMapSnapshotOptions), "init");
  v8 = (*(double (**)(void))(*(_QWORD *)a1 + 240))();
  objc_msgSend(v7, "setRegion:", v8, (*(double (**)(void))(*(_QWORD *)a1 + 264))(), v6, v6);
  objc_msgSend(v7, "setShowsBuildings:", 1);
  objc_msgSend(v7, "_setAllowsSimultaneousLightDarkSnapshots:", 1);
  if ((a2 - 2) > 8u)
  {
    v10 = 300.0;
    v11 = 300.0;
  }
  else
  {
    v9 = 8 * (char)(a2 - 2);
    v10 = *(double *)((char *)&unk_1001A08D8 + v9);
    v11 = *(double *)((char *)&unk_1001A0920 + v9);
  }
  objc_msgSend(v7, "setSize:", v10, v11);
  return v7;
}

uint64_t sub_100084BA0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void partial apply for closure #1 in MOSuggestionAssetMapSnapshotProvider.getGenericMapFor(location:size:completion:)(void *a1)
{
  uint64_t v1;

  closure #1 in MOSuggestionAssetMapSnapshotProvider.getGenericMapFor(location:size:completion:)(a1, *(void (**)(void))(v1 + 16));
}

void sub_100084BCC(_QWORD **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  *(double *)a2 = (*(double (**)(void))((swift_isaMask & **a1) + 0x60))();
  *(_QWORD *)(a2 + 8) = v3;
}

uint64_t sub_100084C0C(double *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(double, double))((swift_isaMask & **a2) + 0x68))(*a1, a1[1]);
}

uint64_t sub_100084C48@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x78))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100084C88(uint64_t *a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **a2) + 0x80);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t sub_100084CDC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 120))();
  *a2 = result;
  return result;
}

uint64_t sub_100084D0C(id *a1, uint64_t a2)
{
  return (*(uint64_t (**)(id))(**(_QWORD **)a2 + 128))(*a1);
}

uint64_t type metadata accessor for MOSuggestionAssetMapSnapshotProvider()
{
  return objc_opt_self(_TtC16MomentsUIService36MOSuggestionAssetMapSnapshotProvider);
}

uint64_t sub_100084D5C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void partial apply for closure #1 in closure #2 in MOSuggestionAssetMapSnapshotProvider.getRouteMapFor(_:size:completion:)()
{
  uint64_t v0;
  void (*v1)(void);
  void *v2;
  id v3;

  v1 = *(void (**)(void))(v0 + 40);
  specialized static MOSuggestionAssetMapSnapshotProvider.routeImage(locations:size:lineWidth:snapshot:)(*(_QWORD *)(v0 + 16), *(id *)(v0 + 32), 3.0);
  v3 = v2;
  v1();

}

id partial apply for closure #1 in static MOSuggestionAssetMapSnapshotProvider.routeImage(locations:size:lineWidth:snapshot:)(double a1, double a2)
{
  uint64_t v2;
  void *v3;
  CLLocationCoordinate2D v4;

  v3 = *(void **)(v2 + 16);
  v4 = MKCoordinateForMapPoint(*(MKMapPoint *)&a1);
  return objc_msgSend(v3, "pointForCoordinate:", v4.latitude, v4.longitude);
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

id partial apply for closure #1 in closure #1 in MOSuggestionAssetMapSnapshotProvider.getMapItem(resource:completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return closure #1 in closure #1 in MOSuggestionAssetMapSnapshotProvider.getMapItem(resource:completion:)(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(uint64_t (**)(uint64_t))(v2 + 32));
}

uint64_t outlined consume of Data._Representation(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release(result);
  }
  return swift_release(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

_QWORD *MOSuggestionActivityRouteAssetView.__allocating_init(routeMap:name:assignedTileSize:frame:calories:duration:distance:)(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13)
{
  objc_class *v13;
  id v27;

  v27 = objc_allocWithZone(v13);
  return MOSuggestionActivityRouteAssetView.init(routeMap:name:assignedTileSize:frame:calories:duration:distance:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

int64x2_t one-time initialization function for DEFAULT_LARGE_SIZE()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4077700000000000uLL);
  static Constants.DEFAULT_LARGE_SIZE = (__int128)result;
  return result;
}

void closure #1 in variable initialization expression of MOSuggestionActivityRouteAssetView.exerciseNameLabel()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v1 = (void *)objc_opt_self(UIFont);
  v2 = objc_msgSend(v1, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  v3 = objc_msgSend(v2, "fontDescriptor");
  v4 = objc_msgSend(v3, "fontDescriptorWithSymbolicTraits:", 2);

  if (v4)
  {
    v5 = objc_msgSend(v1, "fontWithDescriptor:size:", v4, 0.0);

    objc_msgSend(v0, "setFont:", v5);
    v6 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
    objc_msgSend(v0, "setTextColor:", v6);

    objc_msgSend(v0, "setTextAlignment:", 0);
    objc_msgSend(v0, "setLineBreakMode:", 0);
    objc_msgSend(v0, "setAdjustsFontForContentSizeCategory:", 1);
    objc_msgSend(v0, "setNumberOfLines:", 2);
    objc_msgSend(v0, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityMedium);
  }
  else
  {
    __break(1u);
  }
}

void closure #1 in variable initialization expression of MOSuggestionActivityRouteAssetView.workoutDataLabel()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v1 = (void *)objc_opt_self(UIFont);
  v2 = objc_msgSend(v1, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  v3 = objc_msgSend(v2, "fontDescriptor");
  v4 = objc_msgSend(v3, "fontDescriptorWithSymbolicTraits:", 2);

  if (v4)
  {
    v5 = objc_msgSend(v1, "fontWithDescriptor:size:", v4, 0.0);

    objc_msgSend(v0, "setFont:", v5);
    v6 = objc_msgSend((id)objc_opt_self(UIColor), "tertiaryLabelColor");
    objc_msgSend(v0, "setTextColor:", v6);

    objc_msgSend(v0, "setLineBreakMode:", 0);
    objc_msgSend(v0, "setTextAlignment:", 0);
    objc_msgSend(v0, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityMedium);
    objc_msgSend(v0, "setAdjustsFontForContentSizeCategory:", 1);
  }
  else
  {
    __break(1u);
  }
}

_QWORD *MOSuggestionActivityRouteAssetView.init(routeMap:name:assignedTileSize:frame:calories:duration:distance:)(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13)
{
  void *v13;
  _BYTE *v24;
  NSString v25;
  void *v26;
  id v27;
  NSString v28;
  id v29;
  NSString v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  __n128 v47;
  objc_super v52;

  v24 = v13;
  v25 = String._bridgeToObjectiveC()();
  v26 = (void *)objc_opt_self(UIColor);
  v27 = objc_msgSend(v26, "colorNamed:", v25);

  if (!v27)
    v27 = objc_msgSend(v26, "systemBlueColor");
  *(_QWORD *)&v24[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_distanceBlue] = v27;
  v28 = String._bridgeToObjectiveC()();
  v29 = objc_msgSend(v26, "colorNamed:", v28);

  if (!v29)
    v29 = objc_msgSend(v26, "systemYellowColor");
  *(_QWORD *)&v24[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_timeYellow] = v29;
  v30 = String._bridgeToObjectiveC()();
  v31 = objc_msgSend(v26, "colorNamed:", v30);

  if (!v31)
    v31 = objc_msgSend(v26, "systemPinkColor");
  *(_QWORD *)&v24[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_movePink] = v31;
  v32 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_exerciseNameLabel;
  closure #1 in variable initialization expression of MOSuggestionActivityRouteAssetView.exerciseNameLabel();
  *(_QWORD *)&v24[v32] = v33;
  v34 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_workoutDataLabel;
  closure #1 in variable initialization expression of MOSuggestionActivityRouteAssetView.workoutDataLabel();
  *(_QWORD *)&v24[v34] = v35;
  v36 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_labelStack;
  v37 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v37, "setAxis:", 1);
  objc_msgSend(v37, "setDistribution:", 4);
  objc_msgSend(v37, "setAlignment:", 1);
  objc_msgSend(v37, "setSpacing:", 2.0);
  *(_QWORD *)&v24[v36] = v37;
  *(_QWORD *)&v24[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_routeMap] = a1;
  v38 = &v24[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_name];
  *v38 = a2;
  v38[1] = a3;
  v24[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_assignedTileSize] = a4;
  *(double *)&v24[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_duration] = a13;
  v39 = &v24[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_calories];
  *v39 = a5;
  v39[1] = a6;
  v40 = &v24[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_distance];
  *v40 = a7;
  v40[1] = a8;
  v41 = a1;

  v52.receiver = v24;
  v52.super_class = (Class)type metadata accessor for MOSuggestionActivityRouteAssetView();
  v42 = objc_msgSendSuper2(&v52, "initWithFrame:", a9, a10, a11, a12);
  objc_msgSend(v42, "setContentMode:", 1);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UITraitDefinition.Type>);
  v44 = swift_allocObject(v43, 48, 7);
  *(_OWORD *)(v44 + 16) = xmmword_10019ED20;
  *(_QWORD *)(v44 + 32) = type metadata accessor for UITraitUserInterfaceStyle(0);
  *(_QWORD *)(v44 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  v45 = v42;
  v46 = UIView.registerForTraitChanges(_:action:)(v44, "handleTraitChange");
  swift_unknownObjectRelease(v46);

  v47 = swift_bridgeObjectRelease(v44);
  (*(void (**)(__n128))((swift_isaMask & *v45) + 0xB8))(v47);

  return v45;
}

uint64_t type metadata accessor for MOSuggestionActivityRouteAssetView()
{
  return objc_opt_self(_TtC16MomentsUIService34MOSuggestionActivityRouteAssetView);
}

Swift::Void __swiftcall MOSuggestionActivityRouteAssetView.makeUIView()()
{
  char *v0;
  double v1;
  double v2;
  double v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  void *v10;
  NSString v11;
  double v12;
  double v13;
  id v14;
  double Width;
  id v16;
  void *v17;
  double v18;
  double Height;
  double v20;
  unint64_t v21;
  NSObject *v22;
  uint64_t v23;
  char **v24;
  void *v25;
  char **v26;
  char isEscapingClosureAtFileLocation;
  double v28;
  id v29;
  char *v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  double v37;
  uint64_t v38;
  char *v39;
  double v40;
  uint64_t v41;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  char **v52;
  id v53;
  _QWORD *v54;
  unint64_t v55;
  void *v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  void *v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  char *v71;
  id v72;
  Swift::String v73;
  Swift::String v74;
  Swift::String v75;
  uint64_t v76;
  NSString *v77;
  void **v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  void **v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  double v86;
  uint64_t v87;
  id v88;
  Swift::String v89;
  Swift::String v90;
  Swift::String v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;
  double v99;
  double v100;
  id v101;
  _QWORD *v102;
  id v103;
  void *v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  void *v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  char *v119;
  id v120;
  Swift::String v121;
  Swift::String v122;
  Swift::String v123;
  uint64_t v124;
  NSString *v125;
  unint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  _QWORD *v132;
  double v133;
  double v134;
  _QWORD *v135;
  __n128 v136;
  void *v137;
  id v138;
  Swift::String v139;
  Swift::String v140;
  Swift::String v141;
  uint64_t v142;
  char *v143;
  unint64_t v144;
  unint64_t v145;
  unint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  double v152;
  void **v153;
  unint64_t v154;
  void *v155;
  uint64_t v156;
  id v157;
  Swift::String v158;
  Swift::String v159;
  Swift::String v160;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  unint64_t v167;
  _QWORD *v168;
  id v169;
  double v170;
  void *v171;
  char **v172;
  id v173;
  id v174;
  id v175;
  id v176;
  double v177;
  double v178;
  char *v179;
  double v180;
  double v181;
  id v182;
  id v183;
  id v184;
  id v185;
  id v186;
  id v187;
  id v188;
  void **v189;
  id v190;
  void *v191;
  id v192;
  Swift::String v193;
  Swift::String v194;
  Swift::String v195;
  uint64_t v196;
  unint64_t v197;
  uint64_t v198;
  unint64_t v199;
  uint64_t v200;
  unint64_t v201;
  unint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  double v206;
  id v207;
  Swift::String v208;
  Swift::String v209;
  Swift::String v210;
  uint64_t v211;
  unint64_t v212;
  uint64_t v213;
  id v214;
  NSString v215;
  id v216;
  char *v217;
  id v218;
  Swift::String v219;
  Swift::String v220;
  Swift::String v221;
  id v222;
  uint64_t v223;
  NSAttributedStringKey v224;
  uint64_t v225;
  uint64_t v226;
  id v227;
  NSString v228;
  void *v229;
  double v230;
  uint64_t v231;
  void *v232;
  id v233;
  Swift::String v234;
  Swift::String v235;
  Swift::String v236;
  uint64_t v237;
  void **v238;
  unint64_t v239;
  uint64_t v240;
  uint64_t v241;
  double v242;
  void *v243;
  id v244;
  NSString v245;
  id v246;
  void **v247;
  uint64_t v248;
  uint64_t v249;
  id v250;
  id v251;
  Swift::String v252;
  Swift::String v253;
  Swift::String v254;
  uint64_t v255;
  char *v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  double v262;
  NSAttributedStringKey v263;
  id v264;
  NSString v265;
  NSAttributedStringKey v266;
  id v267;
  id v268;
  Swift::String v269;
  Swift::String v270;
  Swift::String v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  void **v276;
  uint64_t v277;
  uint64_t v278;
  id v279;
  NSString v280;
  id v281;
  uint64_t v282;
  uint64_t v283;
  double v284;
  id v285;
  char *v286;
  void *v287;
  id v288;
  void *v289;
  id v290;
  id v291;
  id v292;
  id v293;
  id v294;
  void *v295;
  id v296;
  id v297;
  id v298;
  id v299;
  id v300;
  void *v301;
  id v302;
  id v303;
  id v304;
  id v305;
  id *v306;
  id *v307;
  double v308;
  uint64_t v309;
  id v310;
  Swift::String v311;
  Swift::String v312;
  Swift::String v313;
  uint64_t v314;
  void *v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  unint64_t v319;
  unint64_t v320;
  Swift::String v321;
  Swift::String v322;
  Swift::String v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  id v327;
  id v328;
  NSString v329;
  NSString *v330;
  id v331;
  Swift::String v332;
  Swift::String v333;
  Swift::String v334;
  void **v335;
  uint64_t v336;
  uint64_t v337;
  NSAttributedStringKey v338;
  uint64_t v339;
  uint64_t v340;
  double v341;
  id v342;
  NSString v343;
  double v344;
  char *v345;
  uint64_t v346;
  id v347;
  Swift::String v348;
  Swift::String v349;
  Swift::String v350;
  uint64_t v351;
  unint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  double v357;
  NSAttributedStringKey v358;
  id v359;
  NSString v360;
  id v361;
  uint64_t v362;
  uint64_t v363;
  double v364;
  id v365;
  id v366;
  Swift::String v367;
  Swift::String v368;
  Swift::String v369;
  void **v370;
  uint64_t v371;
  unint64_t v372;
  uint64_t v373;
  uint64_t v374;
  double v375;
  NSAttributedStringKey v376;
  id v377;
  NSString v378;
  id v379;
  uint64_t v380;
  uint64_t v381;
  id v382;
  Swift::String v383;
  Swift::String v384;
  Swift::String v385;
  uint64_t v386;
  char *v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  _QWORD *v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  id v395;
  NSString v396;
  void *v397;
  id v398;
  id v399;
  Swift::String v400;
  Swift::String v401;
  Swift::String v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  _QWORD *v407;
  char *v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  id v412;
  NSString v413;
  id v414;
  uint64_t v415;
  uint64_t v416;
  double v417;
  id v418;
  void *v419;
  id v420;
  void *v421;
  id v422;
  id v423;
  id v424;
  id v425;
  id v426;
  void *v427;
  id v428;
  id v429;
  id v430;
  id v431;
  id v432;
  id v433;
  id v434;
  id v435;
  id *v436;
  Swift::String v437;
  Swift::String v438;
  Swift::String v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  id v443;
  NSString v444;
  NSString *v445;
  char *v446;
  id v447;
  Swift::String v448;
  Swift::String v449;
  Swift::String v450;
  void *v451;
  uint64_t v452;
  uint64_t v453;
  void **v454;
  uint64_t v455;
  uint64_t v456;
  double v457;
  id v458;
  NSString v459;
  double v460;
  id v461;
  Swift::String v462;
  Swift::String v463;
  Swift::String v464;
  uint64_t v465;
  uint64_t v466;
  unint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  double v472;
  NSAttributedStringKey v473;
  id v474;
  NSString v475;
  id v476;
  uint64_t v477;
  uint64_t v478;
  double v479;
  uint64_t v480;
  void *v481;
  id v482;
  Swift::String v483;
  Swift::String v484;
  Swift::String v485;
  uint64_t v486;
  unint64_t v487;
  uint64_t v488;
  uint64_t v489;
  id v490;
  NSString v491;
  id v492;
  uint64_t v493;
  uint64_t v494;
  id v495;
  id v496;
  Swift::String v497;
  Swift::String v498;
  Swift::String v499;
  uint64_t v500;
  char *v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  _QWORD *v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  double v509;
  NSAttributedStringKey v510;
  id v511;
  NSString v512;
  id v513;
  id v514;
  Swift::String v515;
  Swift::String v516;
  Swift::String v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  id v525;
  NSString v526;
  id v527;
  uint64_t v528;
  uint64_t v529;
  id v530;
  double v531;
  uint64_t *v532;
  Swift::String v533;
  Swift::String v534;
  Swift::String v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  id v539;
  NSString v540;
  id v541;
  uint64_t v542;
  id v543;
  Swift::String v544;
  Swift::String v545;
  Swift::String v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  id v550;
  uint64_t v551;
  uint64_t v552;
  id v553;
  NSString v554;
  id v555;
  uint64_t v556;
  uint64_t v557;
  double v558;
  char *v559;
  id v560;
  Swift::String v561;
  Swift::String v562;
  Swift::String v563;
  uint64_t v564;
  unint64_t v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  id v570;
  NSString v571;
  id v572;
  uint64_t v573;
  uint64_t v574;
  double v575;
  uint64_t v576;
  void **v577;
  id v578;
  Swift::String v579;
  Swift::String v580;
  Swift::String v581;
  uint64_t v582;
  uint64_t v583;
  unint64_t v584;
  uint64_t v585;
  uint64_t v586;
  id v587;
  NSString v588;
  id v589;
  uint64_t v590;
  uint64_t v591;
  id v592;
  id v593;
  Swift::String v594;
  Swift::String v595;
  Swift::String v596;
  uint64_t v597;
  char *v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  id v605;
  NSString v606;
  id v607;
  uint64_t v608;
  uint64_t v609;
  id v610;
  id v611;
  Swift::String v612;
  Swift::String v613;
  Swift::String v614;
  uint64_t v615;
  uint64_t v616;
  uint64_t v617;
  uint64_t v618;
  uint64_t v619;
  uint64_t v620;
  uint64_t v621;
  id v622;
  NSString v623;
  id v624;
  uint64_t v625;
  uint64_t v626;
  uint64_t v627;
  double v628;
  char *v629;
  double v630;
  double v631;
  id v632;
  id v633;
  id v634;
  id v635;
  void *v636;
  id v637;
  double v638;
  _QWORD *v639;
  id v640;
  void *v641;
  id v642;
  id v643;
  id v644;
  id v645;
  id v646;
  id v647;
  char *v648;
  id v649;
  Swift::String v650;
  Swift::String v651;
  void *v652;
  NSString v653;
  unint64_t v654;
  uint64_t v655;
  uint64_t v656;
  void *v657;
  NSAttributedStringKey v658;
  NSAttributedStringKey v659;
  NSAttributedStringKey v660;
  void **v661;
  NSAttributedStringKey v662;
  void **v663;
  id v664;
  id v665;
  uint64_t v666;
  __int128 v667;
  __int128 v668;
  __int128 v669;
  _QWORD *v670;
  uint64_t v671;
  char *v672;
  id v673;
  _QWORD *v674;
  id v675;
  void **v676;
  unint64_t v677;
  __int128 v678;
  char *v679;
  void **aBlock;
  _QWORD v681[4];
  char **v682;
  uint64_t v683;
  unint64_t v684;
  char v685;
  uint64_t v686;
  uint64_t v687;
  Swift::String v688;
  Swift::String v689;
  Swift::String v690;
  Swift::String v691;
  Swift::String v692;
  Swift::String v693;
  Swift::String v694;
  Swift::String v695;
  Swift::String v696;
  Swift::String v697;
  Swift::String v698;
  Swift::String v699;
  Swift::String v700;
  Swift::String v701;
  Swift::String v702;
  Swift::String v703;
  Swift::String v704;
  Swift::String v705;
  Swift::String v706;
  Swift::String v707;
  Swift::String v708;
  Swift::String v709;
  Swift::String v710;
  Swift::String v711;
  Swift::String v712;
  Swift::String v713;
  Swift::String v714;
  Swift::String v715;
  Swift::String v716;
  Swift::String v717;
  Swift::String v718;
  CGRect v719;
  CGRect v720;
  CGRect v721;
  CGRect v722;

  v4 = (_QWORD *)type metadata accessor for CharacterSet(0);
  v5 = *(v4 - 1);
  __chkstk_darwin(v4);
  v7 = (char *)&v655 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void *)objc_opt_self(UIColor);
  v9 = objc_msgSend(v8, "blackColor");
  objc_msgSend(v0, "setBackgroundColor:", v9);

  v10 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_exerciseNameLabel];
  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v10, "setText:", v11);

  objc_msgSend(v0, "frame");
  if (v12 <= 0.0 || (objc_msgSend(v0, "frame"), v13 <= 0.0))
  {
    if (one-time initialization token for DEFAULT_LARGE_SIZE != -1)
      swift_once(&one-time initialization token for DEFAULT_LARGE_SIZE, one-time initialization function for DEFAULT_LARGE_SIZE);
    objc_msgSend(v0, "frame");
    objc_msgSend(v0, "setFrame:");
  }
  v14 = *(id *)&v0[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_workoutDataLabel];
  objc_msgSend(v0, "frame");
  Width = CGRectGetWidth(v719);
  v16 = objc_msgSend(v14, "font");
  if (!v16)
  {
    __break(1u);
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
    JUMPOUT(0x100089C98);
  }
  v17 = v16;
  *(_QWORD *)&v669 = v10;
  v671 = v5;
  v672 = v7;
  objc_msgSend(v16, "pointSize");
  Height = v18;

  v20 = specialized UILabel.estimatedHeight(forWidth:text:ofSize:weight:)(0, 0xE000000000000000, Width, Height, UIFontWeightBold);
  v21 = *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_calories + 8];
  v676 = *(void ***)&v0[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_calories];
  v677 = v21;
  v683 = 0;
  v684 = 0xE000000000000000;
  if (one-time initialization token for queue != -1)
    swift_once(&one-time initialization token for queue, one-time initialization function for queue);
  v22 = static MOSuggestionAssetWorkoutProvider.queue;
  v23 = swift_allocObject(&unk_1001E7318, 32, 7);
  *(_QWORD *)(v23 + 16) = &v683;
  *(_QWORD *)(v23 + 24) = v0;
  v24 = (char **)swift_allocObject(&unk_1001E7340, 32, 7);
  v24[2] = (char *)partial apply for closure #1 in MOSuggestionActivityRouteAssetView.makeUIView();
  v24[3] = (char *)v23;
  v681[3] = partial apply for thunk for @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> ();
  v682 = v24;
  aBlock = _NSConcreteStackBlock;
  v681[0] = 1107296256;
  v681[1] = thunk for @escaping @callee_guaranteed () -> ();
  v681[2] = &block_descriptor_13;
  v25 = _Block_copy(&aBlock);
  v26 = v682;
  v679 = v0;
  swift_retain(v24);
  swift_release(v26);
  dispatch_sync(v22, v25);
  _Block_release(v25);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v24, "", 117, 103, 53, 1);
  *(_QWORD *)&v28 = swift_release(v24).n128_u64[0];
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
LABEL_116:
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    goto LABEL_24;
  }
  v674 = v4;
  v29 = objc_msgSend(v8, "systemWhiteColor", v28);
  v673 = v14;
  objc_msgSend(v14, "setTextColor:", v29);

  v24 = &selRef_genericAvatarFor_pointSize_completion_;
  v30 = v679;
  objc_msgSend(v679, "frame");
  v32 = (v31 + -16.0) * 0.5;
  Width = v32 + v32;
  v675 = (id)objc_opt_self(UIBezierPath);
  *(_QWORD *)&v678 = objc_msgSend(v675, "bezierPathWithRoundedRect:cornerRadius:", 8.0, 8.0, v32 + v32, v32 + v32, v32);
  v4 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", *(_QWORD *)&v30[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_routeMap]);
  v14 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v30, "addSubview:", v4);
  objc_msgSend(v30, "addSubview:", v14);
  *(double *)&v33 = 300.0;
  LODWORD(v25) = v30[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_assignedTileSize]
               - 2;
  *(double *)&v34 = 100.0;
  *(double *)&v35 = 400.0;
  v36 = 98.0;
  v1 = 200.0;
  v37 = 200.0;
  Height = 98.0;
  switch(v30[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_assignedTileSize])
  {
    case 2:
      v37 = 100.0;
      v36 = 100.0;
      v1 = 100.0;
      Height = 100.0;
      break;
    case 3:
    case 9:
    case 10:
      *(double *)&v33 = 50.0;
      goto LABEL_12;
    case 4:
      break;
    case 5:
LABEL_14:
      *(double *)&v38 = 200.0;
LABEL_19:
      v37 = *(double *)&v38;
      v36 = *(double *)&v38;
      Height = v1;
      break;
    case 6:
LABEL_15:
      Height = v1;
      v36 = 200.0;
      v37 = 400.0;
      v1 = *(double *)&v35;
      break;
    case 7:
LABEL_16:
      v36 = 100.0;
      v37 = 400.0;
      v1 = *(double *)&v35;
      Height = *(double *)&v34;
      break;
    default:
LABEL_12:
      v1 = *(double *)&v33;
      v36 = 98.0;
      v37 = 200.0;
      v35 = v33;
      v34 = v33;
      Height = *(double *)&v33;
      switch(v30[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_assignedTileSize])
      {
        case 3:
        case 9:
        case 10:
          *(double *)&v38 = 50.0;
          goto LABEL_19;
        case 4:
          goto LABEL_20;
        case 5:
          goto LABEL_14;
        case 6:
          goto LABEL_15;
        case 7:
          goto LABEL_16;
        default:
          *(double *)&v38 = 300.0;
          goto LABEL_19;
      }
  }
LABEL_20:
  v3 = 1.0 / (v36 / v37);
  v39 = v679;
  objc_msgSend(v679, "frame");
  v40 = CGRectGetWidth(v720);
  objc_msgSend(v39, "frame");
  v2 = v40 / CGRectGetHeight(v721);
  objc_msgSend(v39, "frame");
  if (v2 >= v3)
  {
    v1 = CGRectGetWidth(*(CGRect *)&v41);
    v45 = 1;
  }
  else
  {
    Height = CGRectGetHeight(*(CGRect *)&v41);
    v45 = 2;
  }
  objc_msgSend(v4, "setContentMode:", v45);
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    goto LABEL_116;
LABEL_24:
  v46 = type metadata accessor for Logger(0);
  v47 = __swift_project_value_buffer(v46, (uint64_t)static MOAngelLogger.assets);
  v48 = Logger.logObject.getter(v47);
  v49 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v48, v49))
  {
    v50 = swift_slowAlloc(28, -1);
    *(_DWORD *)v50 = 67109632;
    LODWORD(aBlock) = v2 < v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 4, v50 + 4);
    *(_WORD *)(v50 + 8) = 2048;
    aBlock = *(void ***)&v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v681, v50 + 10);
    *(_WORD *)(v50 + 18) = 2048;
    aBlock = *(void ***)&v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v681, v50 + 20);
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "[MOSuggestionActivityRouteAssetView] isElongated=%{BOOL}d, assignedRatio=%f, frameRatio=%f", (uint8_t *)v50, 0x1Cu);
    v51 = v50;
    v24 = &selRef_genericAvatarFor_pointSize_completion_;
    swift_slowDealloc(v51, -1, -1);
  }

  v52 = &selRef_genericAvatarFor_pointSize_completion_;
  switch((int)v25)
  {
    case 0:
      goto LABEL_44;
    case 1:
      objc_msgSend(v679, v24[89]);
      v100 = (v99 + -8.0) * 0.5 + (v99 + -8.0) * 0.5;
      v101 = objc_msgSend(v675, "bezierPathWithRoundedRect:cornerRadius:", 4.0, 4.0, v100, v100);

      *(_QWORD *)&v678 = v101;
LABEL_44:
      v102 = UIView.fillSuper(margin:)(0.0);
      swift_bridgeObjectRelease(v102);
      goto LABEL_109;
    case 2:
      v103 = objc_msgSend(v4, "superview");
      if (v103)
      {
        v104 = v103;
        objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v105 = objc_msgSend(v4, "leadingAnchor");
        v106 = objc_msgSend(v104, "leadingAnchor");
        v107 = objc_msgSend(v105, "constraintEqualToAnchor:", v106);

        objc_msgSend(v107, "setConstant:", 0.0);
        if (v107)
        {
          v108 = v107;
          objc_msgSend(v108, "setActive:", 1);

        }
      }
      v109 = objc_msgSend(v4, "superview");
      if (v109)
      {
        v110 = v109;
        objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v111 = objc_msgSend(v4, "centerYAnchor");
        v112 = objc_msgSend(v110, "centerYAnchor");
        v113 = objc_msgSend(v111, "constraintEqualToAnchor:", v112);

        objc_msgSend(v113, "setConstant:", 0.0);
        if (v113)
        {
          v114 = v113;
          objc_msgSend(v114, "setActive:", 1);

        }
      }
      v665 = v14;
      v666 = v23;
      objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v115 = objc_msgSend(v4, "widthAnchor");
      v116 = objc_msgSend(v115, "constraintEqualToConstant:", v1);

      objc_msgSend(v116, "setActive:", 1);
      objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v117 = objc_msgSend(v4, "heightAnchor");
      v118 = objc_msgSend(v117, "constraintEqualToConstant:", Height);

      objc_msgSend(v118, "setActive:", 1);
      v119 = v679;
      (*(void (**)(void))((swift_isaMask & *(_QWORD *)v679) + 0xC0))();
      *(_QWORD *)&v667 = objc_opt_self(NSBundle);
      v120 = objc_msgSend((id)v667, "mainBundle");
      v690._object = (void *)0x80000001001A99B0;
      v121._countAndFlagsBits = 16421;
      v121._object = (void *)0xE200000000000000;
      v122._countAndFlagsBits = 0;
      v122._object = (void *)0xE000000000000000;
      v690._countAndFlagsBits = 0xD000000000000018;
      v123 = NSLocalizedString(_:tableName:bundle:value:comment:)(v121, (Swift::String_optional)0, (NSBundle)v120, v122, v690);

      v664 = (id)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v124 = swift_allocObject(v664, 72, 7);
      v668 = xmmword_10019ED20;
      *(_OWORD *)(v124 + 16) = xmmword_10019ED20;
      v126 = *(_QWORD *)&v119[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_distance];
      v125 = *(NSString **)&v119[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_distance + 8];
      *(_QWORD *)(v124 + 56) = &type metadata for String;
      v127 = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v124 + 64) = v127;
      *(_QWORD *)(v124 + 32) = v126;
      *(_QWORD *)(v124 + 40) = v125;
      swift_bridgeObjectRetain(v125);
      static String.localizedStringWithFormat(_:_:)(v123._countAndFlagsBits, v123._object, v124);
      v129 = v128;
      swift_bridgeObjectRelease(v123._object);
      swift_bridgeObjectRelease(v124);
      v130 = ((unint64_t)v125 >> 56) & 0xF;
      v663 = (void **)v126;
      v662 = v125;
      if (((unint64_t)v125 & 0x2000000000000000) == 0)
        v130 = v126 & 0xFFFFFFFFFFFFLL;
      v670 = v4;
      if (v130)
      {
        v131 = (void *)v667;
      }
      else
      {
        *(_QWORD *)&v206 = swift_bridgeObjectRelease(v129).n128_u64[0];
        v131 = (void *)v667;
        v207 = objc_msgSend((id)v667, "mainBundle", v206);
        v694._object = (void *)0x80000001001A99D0;
        v208._countAndFlagsBits = 16421;
        v208._object = (void *)0xE200000000000000;
        v209._countAndFlagsBits = 0;
        v209._object = (void *)0xE000000000000000;
        v694._countAndFlagsBits = 0xD000000000000018;
        v210 = NSLocalizedString(_:tableName:bundle:value:comment:)(v208, (Swift::String_optional)0, (NSBundle)v207, v209, v694);

        v211 = swift_allocObject(v664, 72, 7);
        *(_OWORD *)(v211 + 16) = v668;
        *(_QWORD *)(v211 + 56) = &type metadata for String;
        *(_QWORD *)(v211 + 64) = v127;
        *(_QWORD *)(v211 + 32) = v676;
        v212 = v677;
        *(_QWORD *)(v211 + 40) = v677;
        swift_bridgeObjectRetain(v212);
        static String.localizedStringWithFormat(_:_:)(v210._countAndFlagsBits, v210._object, v211);
        v129 = v213;
        swift_bridgeObjectRelease(v210._object);
        swift_bridgeObjectRelease(v211);
      }
      v214 = objc_allocWithZone((Class)NSMutableAttributedString);
      v215 = String._bridgeToObjectiveC()();
      v216 = objc_msgSend(v214, "initWithString:", v215, swift_bridgeObjectRelease(v129).n128_f64[0]);

      v659 = *(NSAttributedStringKey *)&v679[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_distanceBlue];
      v217 = v679;
      v218 = objc_msgSend(v131, "mainBundle");
      v658 = (NSAttributedStringKey)0x80000001001A98D0;
      v695._object = (void *)0x80000001001A98D0;
      v219._countAndFlagsBits = 16421;
      v219._object = (void *)0xE200000000000000;
      v220._countAndFlagsBits = 0;
      v220._object = (void *)0xE000000000000000;
      v695._countAndFlagsBits = 0xD000000000000010;
      v221 = NSLocalizedString(_:tableName:bundle:value:comment:)(v219, (Swift::String_optional)0, (NSBundle)v218, v220, v695);

      v222 = v664;
      v223 = swift_allocObject(v664, 72, 7);
      *(_OWORD *)(v223 + 16) = v668;
      *(_QWORD *)(v223 + 56) = &type metadata for String;
      *(_QWORD *)(v223 + 64) = v127;
      v661 = (void **)v127;
      *(_QWORD *)(v223 + 32) = v663;
      v224 = v662;
      *(_QWORD *)(v223 + 40) = v662;
      swift_bridgeObjectRetain(v224);
      static String.localizedStringWithFormat(_:_:)(v221._countAndFlagsBits, v221._object, v223);
      v226 = v225;
      swift_bridgeObjectRelease(v221._object);
      v227 = objc_msgSend(v216, "mutableString", swift_bridgeObjectRelease(v223).n128_f64[0]);
      v228 = String._bridgeToObjectiveC()();
      objc_msgSend(v227, "rangeOfString:options:", v228, 1);

      v657 = NSForegroundColorAttributeName;
      v229 = v216;
      objc_msgSend(v216, "addAttribute:value:range:");
      *(_QWORD *)&v230 = swift_bridgeObjectRelease(v226).n128_u64[0];
      v231 = *(_QWORD *)&v217[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_movePink];
      v232 = (void *)v667;
      v233 = objc_msgSend((id)v667, "mainBundle", v230);
      v659 = (NSAttributedStringKey)0x80000001001A9910;
      v696._object = (void *)0x80000001001A9910;
      v234._countAndFlagsBits = 16421;
      v234._object = (void *)0xE200000000000000;
      v235._countAndFlagsBits = 0;
      v235._object = (void *)0xE000000000000000;
      v696._countAndFlagsBits = 0xD000000000000010;
      v236 = NSLocalizedString(_:tableName:bundle:value:comment:)(v234, (Swift::String_optional)0, (NSBundle)v233, v235, v696);

      v237 = swift_allocObject(v222, 72, 7);
      *(_OWORD *)(v237 + 16) = v668;
      v238 = v661;
      *(_QWORD *)(v237 + 56) = &type metadata for String;
      *(_QWORD *)(v237 + 64) = v238;
      *(_QWORD *)(v237 + 32) = v676;
      v239 = v677;
      *(_QWORD *)(v237 + 40) = v677;
      swift_bridgeObjectRetain(v239);
      static String.localizedStringWithFormat(_:_:)(v236._countAndFlagsBits, v236._object, v237);
      v241 = v240;
      swift_bridgeObjectRelease(v236._object);
      *(_QWORD *)&v242 = swift_bridgeObjectRelease(v237).n128_u64[0];
      v243 = v229;
      v660 = (NSAttributedStringKey)v229;
      v244 = objc_msgSend(v229, "mutableString", v242);
      v245 = String._bridgeToObjectiveC()();
      v246 = objc_msgSend(v244, "rangeOfString:options:", v245, 1);
      v247 = v238;
      v249 = v248;

      objc_msgSend(v243, "addAttribute:value:range:", v657, v231, v246, v249);
      swift_bridgeObjectRelease(v241);
      v250 = specialized static MOSuggestionTheme.Fonts.footnoteEmphFontSmallCaps()();
      v251 = objc_msgSend(v232, "mainBundle");
      v697._object = v658;
      v252._countAndFlagsBits = 16421;
      v252._object = (void *)0xE200000000000000;
      v253._countAndFlagsBits = 0;
      v253._object = (void *)0xE000000000000000;
      v697._countAndFlagsBits = 0xD000000000000010;
      v254 = NSLocalizedString(_:tableName:bundle:value:comment:)(v252, (Swift::String_optional)0, (NSBundle)v251, v253, v697);

      v255 = swift_allocObject(v222, 72, 7);
      *(_OWORD *)(v255 + 16) = v668;
      aBlock = v663;
      v681[0] = v662;
      v256 = v672;
      CharacterSet.init(charactersIn:)(0x3736353433323130, 0xEC0000002C2E3938);
      v663 = (void **)lazy protocol witness table accessor for type String and conformance String();
      v257 = StringProtocol.trimmingCharacters(in:)(v256, &type metadata for String, v663);
      v259 = v258;
      v671 = *(_QWORD *)(v671 + 8);
      ((void (*)(char *, _QWORD *))v671)(v256, v674);
      *(_QWORD *)(v255 + 56) = &type metadata for String;
      *(_QWORD *)(v255 + 64) = v247;
      *(_QWORD *)(v255 + 32) = v257;
      *(_QWORD *)(v255 + 40) = v259;
      static String.localizedStringWithFormat(_:_:)(v254._countAndFlagsBits, v254._object, v255);
      v261 = v260;
      swift_bridgeObjectRelease(v254._object);
      *(_QWORD *)&v262 = swift_bridgeObjectRelease(v255).n128_u64[0];
      v263 = v660;
      v264 = -[NSString mutableString](v660, "mutableString", v262);
      v265 = String._bridgeToObjectiveC()();
      objc_msgSend(v264, "rangeOfString:options:", v265, 1);

      v662 = NSFontAttributeName;
      v266 = v263;
      -[NSString addAttribute:value:range:](v263, "addAttribute:value:range:");

      swift_bridgeObjectRelease(v261);
      v267 = specialized static MOSuggestionTheme.Fonts.footnoteEmphFontSmallCaps()();
      v268 = objc_msgSend((id)v667, "mainBundle");
      v698._object = v659;
      v269._countAndFlagsBits = 16421;
      v269._object = (void *)0xE200000000000000;
      v270._countAndFlagsBits = 0;
      v270._object = (void *)0xE000000000000000;
      v698._countAndFlagsBits = 0xD000000000000010;
      v271 = NSLocalizedString(_:tableName:bundle:value:comment:)(v269, (Swift::String_optional)0, (NSBundle)v268, v270, v698);

      v272 = swift_allocObject(v664, 72, 7);
      *(_OWORD *)(v272 + 16) = v668;
      aBlock = v676;
      v681[0] = v677;
      CharacterSet.init(charactersIn:)(0x3736353433323130, 0xEC0000002C2E3938);
      v273 = StringProtocol.trimmingCharacters(in:)(v256, &type metadata for String, v663);
      v275 = v274;
      ((void (*)(char *, _QWORD *))v671)(v256, v674);
      v276 = v661;
      *(_QWORD *)(v272 + 56) = &type metadata for String;
      *(_QWORD *)(v272 + 64) = v276;
      *(_QWORD *)(v272 + 32) = v273;
      *(_QWORD *)(v272 + 40) = v275;
      static String.localizedStringWithFormat(_:_:)(v271._countAndFlagsBits, v271._object, v272);
      v278 = v277;
      swift_bridgeObjectRelease(v271._object);
      v279 = -[NSString mutableString](v266, "mutableString", swift_bridgeObjectRelease(v272).n128_f64[0]);
      v280 = String._bridgeToObjectiveC()();
      v281 = objc_msgSend(v279, "rangeOfString:options:", v280, 1);
      v283 = v282;

      -[NSString addAttribute:value:range:](v266, "addAttribute:value:range:", v662, v267, v281, v283);
      *(_QWORD *)&v284 = swift_bridgeObjectRelease(v278).n128_u64[0];
      v285 = v673;
      objc_msgSend(v673, "setAttributedText:", v266, v284);
      v286 = v679;
      v287 = *(void **)&v679[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_labelStack];
      objc_msgSend(v287, "addArrangedSubview:", (_QWORD)v669);
      objc_msgSend(v287, "addArrangedSubview:", v285);
      objc_msgSend(v286, "addSubview:", v287);
      v288 = objc_msgSend(v287, "superview");
      if (v288)
      {
        v289 = v288;
        objc_msgSend(v287, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v290 = objc_msgSend(v287, "leadingAnchor");
        v291 = objc_msgSend(v289, "leadingAnchor");
        v292 = objc_msgSend(v290, "constraintEqualToAnchor:", v291);

        objc_msgSend(v292, "setConstant:", Width + 24.0);
        v293 = v292;
        objc_msgSend(v293, "setActive:", 1);

      }
      v294 = objc_msgSend(v287, "superview");
      v23 = v666;
      v14 = v665;
      if (v294)
      {
        v295 = v294;
        objc_msgSend(v287, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v296 = objc_msgSend(v287, "trailingAnchor");
        v297 = objc_msgSend(v295, "trailingAnchor");
        v298 = objc_msgSend(v296, "constraintEqualToAnchor:", v297);

        objc_msgSend(v298, "setConstant:", -12.0);
        v299 = v298;
        objc_msgSend(v299, "setActive:", 1);

      }
      v300 = objc_msgSend(v287, "superview");
      v4 = v670;
      v52 = &selRef_genericAvatarFor_pointSize_completion_;
      if (!v300)
      {
        v307 = (id *)&v685;
        goto LABEL_97;
      }
      v301 = v300;
      objc_msgSend(v287, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v302 = objc_msgSend(v287, "centerYAnchor");
      v303 = objc_msgSend(v301, "centerYAnchor");
      v304 = objc_msgSend(v302, "constraintEqualToAnchor:", v303);

      objc_msgSend(v304, "setConstant:", 0.0);
      if (v304)
      {
        v305 = v304;
        objc_msgSend(v305, "setActive:", 1);
        v306 = (id *)&v685;
        goto LABEL_95;
      }
      v436 = (id *)&v685;
      goto LABEL_100;
    case 3:
      v665 = v14;
      v666 = v23;
      v132 = v679;
      objc_msgSend(v679, v24[89]);
      v134 = (v133 - (v20 + 12.0 + 5.0 + v20 + 12.0 + 5.0)) * 0.5;
      v661 = (void **)objc_msgSend(v675, "bezierPathWithRoundedRect:cornerRadius:", v20 + 12.0 + 5.0, v20 + 12.0 + 5.0, v134 + v134, v134 + v134);

      v135 = UIView.fillSuper(margin:)(0.0);
      v136 = swift_bridgeObjectRelease(v135);
      (*(void (**)(__n128))((swift_isaMask & *v132) + 0xC0))(v136);
      v137 = (void *)objc_opt_self(NSBundle);
      v138 = objc_msgSend(v137, "mainBundle");
      v691._countAndFlagsBits = 0xD000000000000021;
      v691._object = (void *)0x80000001001A99F0;
      v139._countAndFlagsBits = 0x402520B7C2204025;
      v139._object = (void *)0xA800000000000000;
      v140._countAndFlagsBits = 0;
      v140._object = (void *)0xE000000000000000;
      v141 = NSLocalizedString(_:tableName:bundle:value:comment:)(v139, (Swift::String_optional)0, (NSBundle)v138, v140, v691);

      *(_QWORD *)&v668 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v142 = swift_allocObject(v668, 112, 7);
      v678 = xmmword_10019EEE0;
      *(_OWORD *)(v142 + 16) = xmmword_10019EEE0;
      v143 = (char *)v132 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_distance;
      v145 = *(_QWORD *)((char *)v132 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_distance);
      v144 = *((_QWORD *)v143 + 1);
      *(_QWORD *)(v142 + 56) = &type metadata for String;
      v146 = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v142 + 32) = v145;
      *(_QWORD *)(v142 + 40) = v144;
      v147 = v683;
      v148 = v684;
      *(_QWORD *)(v142 + 96) = &type metadata for String;
      *(_QWORD *)(v142 + 104) = v146;
      *(_QWORD *)&v669 = v146;
      *(_QWORD *)(v142 + 64) = v146;
      *(_QWORD *)(v142 + 72) = v147;
      *(_QWORD *)(v142 + 80) = v148;
      swift_bridgeObjectRetain(v144);
      swift_bridgeObjectRetain(v148);
      static String.localizedStringWithFormat(_:_:)(v141._countAndFlagsBits, v141._object, v142);
      v150 = v149;
      swift_bridgeObjectRelease(v141._object);
      swift_bridgeObjectRelease(v142);
      v151 = HIBYTE(v144) & 0xF;
      v664 = (id)v145;
      v663 = (void **)v144;
      if ((v144 & 0x2000000000000000) == 0)
        v151 = v145 & 0xFFFFFFFFFFFFLL;
      v670 = v4;
      *(_QWORD *)&v667 = v137;
      if (!v151)
      {
        *(_QWORD *)&v152 = swift_bridgeObjectRelease(v150).n128_u64[0];
        v153 = v676;
        v154 = v677;
        v155 = v137;
        if ((v677 & 0x2000000000000000) != 0)
          v156 = HIBYTE(v677) & 0xF;
        else
          v156 = (unint64_t)v676 & 0xFFFFFFFFFFFFLL;
        v157 = objc_msgSend(v155, "mainBundle", v152);
        if (v156)
        {
          v692._countAndFlagsBits = 0xD000000000000021;
          v692._object = (void *)0x80000001001A9930;
          v158._countAndFlagsBits = 0x402520B7C2204025;
          v158._object = (void *)0xA800000000000000;
          v159._countAndFlagsBits = 0;
          v159._object = (void *)0xE000000000000000;
          v160 = NSLocalizedString(_:tableName:bundle:value:comment:)(v158, (Swift::String_optional)0, (NSBundle)v157, v159, v692);
          countAndFlagsBits = v160._countAndFlagsBits;
          object = v160._object;

          v163 = swift_allocObject(v668, 112, 7);
          *(_OWORD *)(v163 + 16) = v678;
          v164 = v669;
          *(_QWORD *)(v163 + 56) = &type metadata for String;
          *(_QWORD *)(v163 + 64) = v164;
          *(_QWORD *)(v163 + 32) = v153;
          *(_QWORD *)(v163 + 40) = v154;
          v165 = v683;
          v166 = v684;
          *(_QWORD *)(v163 + 96) = &type metadata for String;
          *(_QWORD *)(v163 + 104) = v164;
          *(_QWORD *)(v163 + 72) = v165;
          *(_QWORD *)(v163 + 80) = v166;
          swift_bridgeObjectRetain(v154);
          v167 = v166;
        }
        else
        {
          v706._countAndFlagsBits = 0xD000000000000014;
          v706._object = (void *)0x80000001001A9960;
          v437._countAndFlagsBits = 16421;
          v437._object = (void *)0xE200000000000000;
          v438._countAndFlagsBits = 0;
          v438._object = (void *)0xE000000000000000;
          v439 = NSLocalizedString(_:tableName:bundle:value:comment:)(v437, (Swift::String_optional)0, (NSBundle)v157, v438, v706);
          countAndFlagsBits = v439._countAndFlagsBits;
          object = v439._object;

          v163 = swift_allocObject(v668, 72, 7);
          *(_OWORD *)(v163 + 16) = xmmword_10019ED20;
          v440 = v683;
          v167 = v684;
          v441 = v669;
          *(_QWORD *)(v163 + 56) = &type metadata for String;
          *(_QWORD *)(v163 + 64) = v441;
          *(_QWORD *)(v163 + 32) = v440;
          *(_QWORD *)(v163 + 40) = v167;
        }
        swift_bridgeObjectRetain(v167);
        static String.localizedStringWithFormat(_:_:)(countAndFlagsBits, object, v163);
        v150 = v442;
        swift_bridgeObjectRelease(object);
        swift_bridgeObjectRelease(v163);
        v137 = (void *)v667;
      }
      v443 = objc_allocWithZone((Class)NSMutableAttributedString);
      v444 = String._bridgeToObjectiveC()();
      v445 = (NSString *)objc_msgSend(v443, "initWithString:", v444, swift_bridgeObjectRelease(v150).n128_f64[0]);

      v446 = v679;
      v659 = *(NSAttributedStringKey *)&v679[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_distanceBlue];
      v447 = objc_msgSend(v137, "mainBundle");
      v660 = (NSAttributedStringKey)0x80000001001A98D0;
      v707._object = (void *)0x80000001001A98D0;
      v448._countAndFlagsBits = 16421;
      v448._object = (void *)0xE200000000000000;
      v449._countAndFlagsBits = 0;
      v449._object = (void *)0xE000000000000000;
      v707._countAndFlagsBits = 0xD000000000000010;
      v450 = NSLocalizedString(_:tableName:bundle:value:comment:)(v448, (Swift::String_optional)0, (NSBundle)v447, v449, v707);

      v451 = v137;
      v452 = swift_allocObject(v668, 72, 7);
      v678 = xmmword_10019ED20;
      *(_OWORD *)(v452 + 16) = xmmword_10019ED20;
      v453 = v669;
      *(_QWORD *)(v452 + 56) = &type metadata for String;
      *(_QWORD *)(v452 + 64) = v453;
      *(_QWORD *)(v452 + 32) = v664;
      v454 = v663;
      *(_QWORD *)(v452 + 40) = v663;
      swift_bridgeObjectRetain(v454);
      static String.localizedStringWithFormat(_:_:)(v450._countAndFlagsBits, v450._object, v452);
      v456 = v455;
      swift_bridgeObjectRelease(v450._object);
      *(_QWORD *)&v457 = swift_bridgeObjectRelease(v452).n128_u64[0];
      v662 = v445;
      v458 = -[NSString mutableString](v445, "mutableString", v457);
      v459 = String._bridgeToObjectiveC()();
      objc_msgSend(v458, "rangeOfString:options:", v459, 1);

      v658 = NSForegroundColorAttributeName;
      -[NSString addAttribute:value:range:](v445, "addAttribute:value:range:");
      *(_QWORD *)&v460 = swift_bridgeObjectRelease(v456).n128_u64[0];
      v659 = *(NSAttributedStringKey *)&v446[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_timeYellow];
      v461 = objc_msgSend(v451, "mainBundle", v460);
      v708._object = (void *)0x80000001001A98F0;
      v462._countAndFlagsBits = 16421;
      v462._object = (void *)0xE200000000000000;
      v463._countAndFlagsBits = 0;
      v463._object = (void *)0xE000000000000000;
      v708._countAndFlagsBits = 0xD000000000000010;
      v464 = NSLocalizedString(_:tableName:bundle:value:comment:)(v462, (Swift::String_optional)0, (NSBundle)v461, v463, v708);

      v465 = v668;
      v466 = swift_allocObject(v668, 72, 7);
      *(_OWORD *)(v466 + 16) = v678;
      v468 = v683;
      v467 = v684;
      *(_QWORD *)(v466 + 56) = &type metadata for String;
      *(_QWORD *)(v466 + 64) = v453;
      v469 = v453;
      *(_QWORD *)(v466 + 32) = v468;
      *(_QWORD *)(v466 + 40) = v467;
      swift_bridgeObjectRetain(v467);
      static String.localizedStringWithFormat(_:_:)(v464._countAndFlagsBits, v464._object, v466);
      v471 = v470;
      swift_bridgeObjectRelease(v464._object);
      *(_QWORD *)&v472 = swift_bridgeObjectRelease(v466).n128_u64[0];
      v473 = v662;
      v474 = -[NSString mutableString](v662, "mutableString", v472);
      v475 = String._bridgeToObjectiveC()();
      v476 = objc_msgSend(v474, "rangeOfString:options:", v475, 1);
      v478 = v477;

      -[NSString addAttribute:value:range:](v473, "addAttribute:value:range:", NSForegroundColorAttributeName, v659, v476, v478);
      *(_QWORD *)&v479 = swift_bridgeObjectRelease(v471).n128_u64[0];
      v480 = *(_QWORD *)&v446[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_movePink];
      v481 = (void *)v667;
      v482 = objc_msgSend((id)v667, "mainBundle", v479);
      v659 = (NSAttributedStringKey)0x80000001001A9910;
      v709._object = (void *)0x80000001001A9910;
      v483._countAndFlagsBits = 16421;
      v483._object = (void *)0xE200000000000000;
      v484._countAndFlagsBits = 0;
      v484._object = (void *)0xE000000000000000;
      v709._countAndFlagsBits = 0xD000000000000010;
      v485 = NSLocalizedString(_:tableName:bundle:value:comment:)(v483, (Swift::String_optional)0, (NSBundle)v482, v484, v709);

      v486 = swift_allocObject(v465, 72, 7);
      *(_OWORD *)(v486 + 16) = v678;
      *(_QWORD *)(v486 + 56) = &type metadata for String;
      *(_QWORD *)(v486 + 64) = v469;
      *(_QWORD *)(v486 + 32) = v676;
      v487 = v677;
      *(_QWORD *)(v486 + 40) = v677;
      swift_bridgeObjectRetain(v487);
      static String.localizedStringWithFormat(_:_:)(v485._countAndFlagsBits, v485._object, v486);
      v489 = v488;
      swift_bridgeObjectRelease(v485._object);
      v490 = -[NSString mutableString](v473, "mutableString", swift_bridgeObjectRelease(v486).n128_f64[0]);
      v491 = String._bridgeToObjectiveC()();
      v492 = objc_msgSend(v490, "rangeOfString:options:", v491, 1);
      v494 = v493;

      -[NSString addAttribute:value:range:](v473, "addAttribute:value:range:", v658, v480, v492, v494);
      swift_bridgeObjectRelease(v489);
      v495 = specialized static MOSuggestionTheme.Fonts.footnoteEmphFontSmallCaps()();
      v496 = objc_msgSend(v481, "mainBundle");
      v710._object = v660;
      v497._countAndFlagsBits = 16421;
      v497._object = (void *)0xE200000000000000;
      v498._countAndFlagsBits = 0;
      v498._object = (void *)0xE000000000000000;
      v710._countAndFlagsBits = 0xD000000000000010;
      v499 = NSLocalizedString(_:tableName:bundle:value:comment:)(v497, (Swift::String_optional)0, (NSBundle)v496, v498, v710);

      v500 = swift_allocObject(v465, 72, 7);
      *(_OWORD *)(v500 + 16) = v678;
      aBlock = (void **)v664;
      v681[0] = v663;
      v501 = v672;
      CharacterSet.init(charactersIn:)(0x3736353433323130, 0xEC0000002C2E3938);
      v664 = (id)lazy protocol witness table accessor for type String and conformance String();
      v502 = StringProtocol.trimmingCharacters(in:)(v501, &type metadata for String, v664);
      v504 = v503;
      v671 = *(_QWORD *)(v671 + 8);
      v505 = v674;
      ((void (*)(char *, _QWORD *))v671)(v501, v674);
      v506 = v669;
      *(_QWORD *)(v500 + 56) = &type metadata for String;
      *(_QWORD *)(v500 + 64) = v506;
      *(_QWORD *)(v500 + 32) = v502;
      *(_QWORD *)(v500 + 40) = v504;
      static String.localizedStringWithFormat(_:_:)(v499._countAndFlagsBits, v499._object, v500);
      v508 = v507;
      swift_bridgeObjectRelease(v499._object);
      *(_QWORD *)&v509 = swift_bridgeObjectRelease(v500).n128_u64[0];
      v510 = v662;
      v511 = -[NSString mutableString](v662, "mutableString", v509);
      v512 = String._bridgeToObjectiveC()();
      objc_msgSend(v511, "rangeOfString:options:", v512, 1);

      v663 = NSFontAttributeName;
      -[NSString addAttribute:value:range:](v510, "addAttribute:value:range:");

      swift_bridgeObjectRelease(v508);
      v513 = specialized static MOSuggestionTheme.Fonts.footnoteEmphFontSmallCaps()();
      v514 = objc_msgSend((id)v667, "mainBundle");
      v711._object = v659;
      v515._countAndFlagsBits = 16421;
      v515._object = (void *)0xE200000000000000;
      v516._countAndFlagsBits = 0;
      v516._object = (void *)0xE000000000000000;
      v711._countAndFlagsBits = 0xD000000000000010;
      v517 = NSLocalizedString(_:tableName:bundle:value:comment:)(v515, (Swift::String_optional)0, (NSBundle)v514, v516, v711);

      v518 = swift_allocObject(v668, 72, 7);
      *(_OWORD *)(v518 + 16) = v678;
      aBlock = v676;
      v681[0] = v677;
      CharacterSet.init(charactersIn:)(0x3736353433323130, 0xEC0000002C2E3938);
      v519 = StringProtocol.trimmingCharacters(in:)(v501, &type metadata for String, v664);
      v521 = v520;
      ((void (*)(char *, _QWORD *))v671)(v501, v505);
      v522 = v669;
      *(_QWORD *)(v518 + 56) = &type metadata for String;
      *(_QWORD *)(v518 + 64) = v522;
      *(_QWORD *)(v518 + 32) = v519;
      *(_QWORD *)(v518 + 40) = v521;
      static String.localizedStringWithFormat(_:_:)(v517._countAndFlagsBits, v517._object, v518);
      v524 = v523;
      swift_bridgeObjectRelease(v517._object);
      v525 = -[NSString mutableString](v510, "mutableString", swift_bridgeObjectRelease(v518).n128_f64[0]);
      v526 = String._bridgeToObjectiveC()();
      v527 = objc_msgSend(v525, "rangeOfString:options:", v526, 1);
      v529 = v528;

      v530 = v527;
      v52 = &selRef_genericAvatarFor_pointSize_completion_;
      -[NSString addAttribute:value:range:](v510, "addAttribute:value:range:", v663, v513, v530, v529);

      *(_QWORD *)&v531 = swift_bridgeObjectRelease(v524).n128_u64[0];
      objc_msgSend(v673, "setAttributedText:", v510, v531);

      v532 = &v686;
      goto LABEL_107;
    case 4:
    case 5:
      v53 = objc_msgSend(v4, "superview");
      v54 = v4;
      v55 = v677;
      v670 = v54;
      if (v53)
      {
        v56 = v53;
        objc_msgSend(v54, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v57 = objc_msgSend(v54, "leadingAnchor");
        v58 = objc_msgSend(v56, "leadingAnchor");
        v59 = objc_msgSend(v57, "constraintEqualToAnchor:", v58);

        objc_msgSend(v59, "setConstant:", 0.0);
        if (v59)
        {
          v60 = v59;
          objc_msgSend(v60, "setActive:", 1);

        }
        v54 = v670;
      }
      v61 = objc_msgSend(v54, "superview");
      if (v61)
      {
        v62 = v61;
        objc_msgSend(v54, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v63 = objc_msgSend(v54, "centerYAnchor");
        v64 = objc_msgSend(v62, "centerYAnchor");
        v65 = objc_msgSend(v63, "constraintEqualToAnchor:", v64);

        objc_msgSend(v65, "setConstant:", 0.0);
        if (v65)
        {
          v66 = v65;
          objc_msgSend(v66, "setActive:", 1);

        }
        v54 = v670;
      }
      v665 = v14;
      v666 = v23;
      objc_msgSend(v54, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v67 = objc_msgSend(v54, "widthAnchor");
      v68 = objc_msgSend(v67, "constraintEqualToConstant:", v1);

      objc_msgSend(v68, "setActive:", 1);
      objc_msgSend(v54, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v69 = objc_msgSend(v54, "heightAnchor");
      v70 = objc_msgSend(v69, "constraintEqualToConstant:", Height);

      objc_msgSend(v70, "setActive:", 1);
      v71 = v679;
      (*(void (**)(void))((swift_isaMask & *(_QWORD *)v679) + 0xC0))();
      v664 = (id)objc_opt_self(NSBundle);
      v72 = objc_msgSend(v664, "mainBundle");
      v688._countAndFlagsBits = 0xD00000000000002CLL;
      v688._object = (void *)0x80000001001A98A0;
      v73._countAndFlagsBits = 0x402520B7C2204025;
      v73._object = (void *)0xAE00402520B7C220;
      v74._countAndFlagsBits = 0;
      v74._object = (void *)0xE000000000000000;
      v75 = NSLocalizedString(_:tableName:bundle:value:comment:)(v73, (Swift::String_optional)0, (NSBundle)v72, v74, v688);

      v663 = (void **)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v76 = swift_allocObject(v663, 152, 7);
      *(_OWORD *)(v76 + 16) = xmmword_10019F2D0;
      v78 = *(void ***)&v71[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_distance];
      v77 = *(NSString **)&v71[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_distance + 8];
      *(_QWORD *)(v76 + 56) = &type metadata for String;
      v79 = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v76 + 32) = v78;
      *(_QWORD *)(v76 + 40) = v77;
      v80 = v683;
      v81 = v684;
      *(_QWORD *)(v76 + 96) = &type metadata for String;
      *(_QWORD *)(v76 + 104) = v79;
      *(_QWORD *)(v76 + 64) = v79;
      *(_QWORD *)(v76 + 72) = v80;
      *(_QWORD *)(v76 + 80) = v81;
      *(_QWORD *)(v76 + 136) = &type metadata for String;
      *(_QWORD *)(v76 + 144) = v79;
      *(_QWORD *)&v668 = v79;
      v82 = v676;
      *(_QWORD *)(v76 + 112) = v676;
      *(_QWORD *)(v76 + 120) = v55;
      swift_bridgeObjectRetain(v55);
      swift_bridgeObjectRetain(v77);
      swift_bridgeObjectRetain(v81);
      static String.localizedStringWithFormat(_:_:)(v75._countAndFlagsBits, v75._object, v76);
      v84 = v83;
      swift_bridgeObjectRelease(v75._object);
      swift_bridgeObjectRelease(v76);
      v85 = ((unint64_t)v77 >> 56) & 0xF;
      v661 = v78;
      v660 = v77;
      if (((unint64_t)v77 & 0x2000000000000000) == 0)
        v85 = (unint64_t)v78 & 0xFFFFFFFFFFFFLL;
      if (!v85)
      {
        *(_QWORD *)&v86 = swift_bridgeObjectRelease(v84).n128_u64[0];
        if ((v55 & 0x2000000000000000) != 0)
          v87 = HIBYTE(v55) & 0xF;
        else
          v87 = (unint64_t)v82 & 0xFFFFFFFFFFFFLL;
        v88 = objc_msgSend(v664, "mainBundle", v86);
        if (v87)
        {
          v689._countAndFlagsBits = 0xD000000000000021;
          v689._object = (void *)0x80000001001A9980;
          v89._countAndFlagsBits = 0x402520B7C2204025;
          v89._object = (void *)0xA800000000000000;
          v90._countAndFlagsBits = 0;
          v90._object = (void *)0xE000000000000000;
          v91 = NSLocalizedString(_:tableName:bundle:value:comment:)(v89, (Swift::String_optional)0, (NSBundle)v88, v90, v689);
          v92 = v91._countAndFlagsBits;
          v93 = v91._object;

          v94 = swift_allocObject(v663, 112, 7);
          *(_OWORD *)(v94 + 16) = xmmword_10019EEE0;
          v95 = v683;
          v96 = v684;
          v97 = v668;
          *(_QWORD *)(v94 + 56) = &type metadata for String;
          *(_QWORD *)(v94 + 64) = v97;
          *(_QWORD *)(v94 + 32) = v95;
          *(_QWORD *)(v94 + 40) = v96;
          *(_QWORD *)(v94 + 96) = &type metadata for String;
          *(_QWORD *)(v94 + 104) = v97;
          *(_QWORD *)(v94 + 72) = v82;
          *(_QWORD *)(v94 + 80) = v55;
          swift_bridgeObjectRetain(v55);
          v98 = v96;
        }
        else
        {
          v700._countAndFlagsBits = 0xD000000000000014;
          v700._object = (void *)0x80000001001A9960;
          v321._countAndFlagsBits = 16421;
          v321._object = (void *)0xE200000000000000;
          v322._countAndFlagsBits = 0;
          v322._object = (void *)0xE000000000000000;
          v323 = NSLocalizedString(_:tableName:bundle:value:comment:)(v321, (Swift::String_optional)0, (NSBundle)v88, v322, v700);
          v92 = v323._countAndFlagsBits;
          v93 = v323._object;

          v94 = swift_allocObject(v663, 72, 7);
          *(_OWORD *)(v94 + 16) = xmmword_10019ED20;
          v324 = v683;
          v98 = v684;
          v325 = v668;
          *(_QWORD *)(v94 + 56) = &type metadata for String;
          *(_QWORD *)(v94 + 64) = v325;
          *(_QWORD *)(v94 + 32) = v324;
          *(_QWORD *)(v94 + 40) = v98;
        }
        swift_bridgeObjectRetain(v98);
        static String.localizedStringWithFormat(_:_:)(v92, v93, v94);
        v84 = v326;
        swift_bridgeObjectRelease(v93);
        swift_bridgeObjectRelease(v94);
      }
      v327 = v664;
      v328 = objc_allocWithZone((Class)NSMutableAttributedString);
      v329 = String._bridgeToObjectiveC()();
      v330 = (NSString *)objc_msgSend(v328, "initWithString:", v329, swift_bridgeObjectRelease(v84).n128_f64[0]);

      v658 = *(NSAttributedStringKey *)&v679[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_distanceBlue];
      v331 = objc_msgSend(v327, "mainBundle");
      v659 = (NSAttributedStringKey)0x80000001001A98D0;
      v701._object = (void *)0x80000001001A98D0;
      v332._countAndFlagsBits = 16421;
      v332._object = (void *)0xE200000000000000;
      v333._countAndFlagsBits = 0;
      v333._object = (void *)0xE000000000000000;
      v701._countAndFlagsBits = 0xD000000000000010;
      v334 = NSLocalizedString(_:tableName:bundle:value:comment:)(v332, (Swift::String_optional)0, (NSBundle)v331, v333, v701);

      v335 = v663;
      v336 = swift_allocObject(v663, 72, 7);
      v667 = xmmword_10019ED20;
      *(_OWORD *)(v336 + 16) = xmmword_10019ED20;
      v337 = v668;
      *(_QWORD *)(v336 + 56) = &type metadata for String;
      *(_QWORD *)(v336 + 64) = v337;
      *(_QWORD *)(v336 + 32) = v661;
      v338 = v660;
      *(_QWORD *)(v336 + 40) = v660;
      swift_bridgeObjectRetain(v338);
      static String.localizedStringWithFormat(_:_:)(v334._countAndFlagsBits, v334._object, v336);
      v340 = v339;
      swift_bridgeObjectRelease(v334._object);
      *(_QWORD *)&v341 = swift_bridgeObjectRelease(v336).n128_u64[0];
      v662 = v330;
      v342 = -[NSString mutableString](v330, "mutableString", v341);
      v343 = String._bridgeToObjectiveC()();
      objc_msgSend(v342, "rangeOfString:options:", v343, 1);

      v657 = NSForegroundColorAttributeName;
      -[NSString addAttribute:value:range:](v330, "addAttribute:value:range:");
      *(_QWORD *)&v344 = swift_bridgeObjectRelease(v340).n128_u64[0];
      v345 = v679;
      v346 = *(_QWORD *)&v679[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_timeYellow];
      v347 = objc_msgSend(v327, "mainBundle", v344);
      v702._object = (void *)0x80000001001A98F0;
      v348._countAndFlagsBits = 16421;
      v348._object = (void *)0xE200000000000000;
      v349._countAndFlagsBits = 0;
      v349._object = (void *)0xE000000000000000;
      v702._countAndFlagsBits = 0xD000000000000010;
      v350 = NSLocalizedString(_:tableName:bundle:value:comment:)(v348, (Swift::String_optional)0, (NSBundle)v347, v349, v702);

      v351 = swift_allocObject(v335, 72, 7);
      *(_OWORD *)(v351 + 16) = v667;
      v353 = v683;
      v352 = v684;
      v354 = v668;
      *(_QWORD *)(v351 + 56) = &type metadata for String;
      *(_QWORD *)(v351 + 64) = v354;
      *(_QWORD *)(v351 + 32) = v353;
      *(_QWORD *)(v351 + 40) = v352;
      swift_bridgeObjectRetain(v352);
      static String.localizedStringWithFormat(_:_:)(v350._countAndFlagsBits, v350._object, v351);
      v356 = v355;
      swift_bridgeObjectRelease(v350._object);
      *(_QWORD *)&v357 = swift_bridgeObjectRelease(v351).n128_u64[0];
      v358 = v662;
      v359 = -[NSString mutableString](v662, "mutableString", v357);
      v360 = String._bridgeToObjectiveC()();
      v361 = objc_msgSend(v359, "rangeOfString:options:", v360, 1);
      v363 = v362;

      -[NSString addAttribute:value:range:](v358, "addAttribute:value:range:", NSForegroundColorAttributeName, v346, v361, v363);
      *(_QWORD *)&v364 = swift_bridgeObjectRelease(v356).n128_u64[0];
      v656 = *(_QWORD *)&v345[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_movePink];
      v365 = v664;
      v366 = objc_msgSend(v664, "mainBundle", v364);
      v658 = (NSAttributedStringKey)0x80000001001A9910;
      v703._object = (void *)0x80000001001A9910;
      v367._countAndFlagsBits = 16421;
      v367._object = (void *)0xE200000000000000;
      v368._countAndFlagsBits = 0;
      v368._object = (void *)0xE000000000000000;
      v703._countAndFlagsBits = 0xD000000000000010;
      v369 = NSLocalizedString(_:tableName:bundle:value:comment:)(v367, (Swift::String_optional)0, (NSBundle)v366, v368, v703);

      v370 = v663;
      v371 = swift_allocObject(v663, 72, 7);
      *(_OWORD *)(v371 + 16) = v667;
      *(_QWORD *)(v371 + 56) = &type metadata for String;
      *(_QWORD *)(v371 + 64) = v354;
      *(_QWORD *)(v371 + 32) = v676;
      v372 = v677;
      *(_QWORD *)(v371 + 40) = v677;
      swift_bridgeObjectRetain(v372);
      static String.localizedStringWithFormat(_:_:)(v369._countAndFlagsBits, v369._object, v371);
      v374 = v373;
      swift_bridgeObjectRelease(v369._object);
      *(_QWORD *)&v375 = swift_bridgeObjectRelease(v371).n128_u64[0];
      v376 = v662;
      v377 = -[NSString mutableString](v662, "mutableString", v375);
      v378 = String._bridgeToObjectiveC()();
      v379 = objc_msgSend(v377, "rangeOfString:options:", v378, 1);
      v381 = v380;

      -[NSString addAttribute:value:range:](v376, "addAttribute:value:range:", v657, v656, v379, v381);
      swift_bridgeObjectRelease(v374);
      v657 = specialized static MOSuggestionTheme.Fonts.footnoteEmphFontSmallCaps()();
      v382 = objc_msgSend(v365, "mainBundle");
      v704._object = v659;
      v383._countAndFlagsBits = 16421;
      v383._object = (void *)0xE200000000000000;
      v384._countAndFlagsBits = 0;
      v384._object = (void *)0xE000000000000000;
      v704._countAndFlagsBits = 0xD000000000000010;
      v385 = NSLocalizedString(_:tableName:bundle:value:comment:)(v383, (Swift::String_optional)0, (NSBundle)v382, v384, v704);

      v386 = swift_allocObject(v370, 72, 7);
      *(_OWORD *)(v386 + 16) = v667;
      aBlock = v661;
      v681[0] = v660;
      v387 = v672;
      CharacterSet.init(charactersIn:)(0x3736353433323130, 0xEC0000002C2E3938);
      v661 = (void **)lazy protocol witness table accessor for type String and conformance String();
      v388 = StringProtocol.trimmingCharacters(in:)(v387, &type metadata for String, v661);
      v390 = v389;
      v671 = *(_QWORD *)(v671 + 8);
      v391 = v674;
      ((void (*)(char *, _QWORD *))v671)(v387, v674);
      v392 = v668;
      *(_QWORD *)(v386 + 56) = &type metadata for String;
      *(_QWORD *)(v386 + 64) = v392;
      *(_QWORD *)(v386 + 32) = v388;
      *(_QWORD *)(v386 + 40) = v390;
      static String.localizedStringWithFormat(_:_:)(v385._countAndFlagsBits, v385._object, v386);
      v394 = v393;
      swift_bridgeObjectRelease(v385._object);
      v395 = -[NSString mutableString](v376, "mutableString", swift_bridgeObjectRelease(v386).n128_f64[0]);
      v396 = String._bridgeToObjectiveC()();
      objc_msgSend(v395, "rangeOfString:options:", v396, 1);

      v660 = NSFontAttributeName;
      v397 = v657;
      -[NSString addAttribute:value:range:](v376, "addAttribute:value:range:");

      swift_bridgeObjectRelease(v394);
      v398 = specialized static MOSuggestionTheme.Fonts.footnoteEmphFontSmallCaps()();
      v399 = objc_msgSend(v664, "mainBundle");
      v705._object = v658;
      v400._countAndFlagsBits = 16421;
      v400._object = (void *)0xE200000000000000;
      v401._countAndFlagsBits = 0;
      v401._object = (void *)0xE000000000000000;
      v705._countAndFlagsBits = 0xD000000000000010;
      v402 = NSLocalizedString(_:tableName:bundle:value:comment:)(v400, (Swift::String_optional)0, (NSBundle)v399, v401, v705);

      v403 = swift_allocObject(v663, 72, 7);
      *(_OWORD *)(v403 + 16) = v667;
      aBlock = v676;
      v681[0] = v677;
      CharacterSet.init(charactersIn:)(0x3736353433323130, 0xEC0000002C2E3938);
      v404 = StringProtocol.trimmingCharacters(in:)(v387, &type metadata for String, v661);
      v406 = v405;
      v407 = v391;
      v408 = v679;
      ((void (*)(char *, _QWORD *))v671)(v387, v407);
      v409 = v668;
      *(_QWORD *)(v403 + 56) = &type metadata for String;
      *(_QWORD *)(v403 + 64) = v409;
      *(_QWORD *)(v403 + 32) = v404;
      *(_QWORD *)(v403 + 40) = v406;
      static String.localizedStringWithFormat(_:_:)(v402._countAndFlagsBits, v402._object, v403);
      v411 = v410;
      swift_bridgeObjectRelease(v402._object);
      v412 = -[NSString mutableString](v376, "mutableString", swift_bridgeObjectRelease(v403).n128_f64[0]);
      v413 = String._bridgeToObjectiveC()();
      v414 = objc_msgSend(v412, "rangeOfString:options:", v413, 1);
      v416 = v415;

      -[NSString addAttribute:value:range:](v376, "addAttribute:value:range:", v660, v398, v414, v416);
      *(_QWORD *)&v417 = swift_bridgeObjectRelease(v411).n128_u64[0];
      v418 = v673;
      objc_msgSend(v673, "setAttributedText:", v376, v417);
      v419 = *(void **)&v408[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_labelStack];
      objc_msgSend(v419, "addArrangedSubview:", (_QWORD)v669);
      objc_msgSend(v419, "addArrangedSubview:", v418);
      objc_msgSend(v408, "addSubview:", v419);
      v420 = objc_msgSend(v419, "superview");
      if (v420)
      {
        v421 = v420;
        objc_msgSend(v419, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v422 = objc_msgSend(v419, "leadingAnchor");
        v423 = objc_msgSend(v421, "leadingAnchor");
        v424 = objc_msgSend(v422, "constraintEqualToAnchor:", v423);

        objc_msgSend(v424, "setConstant:", Width + 24.0);
        v425 = v424;
        objc_msgSend(v425, "setActive:", 1);

      }
      v426 = objc_msgSend(v419, "superview");
      v23 = v666;
      v14 = v665;
      if (v426)
      {
        v427 = v426;
        objc_msgSend(v419, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v428 = objc_msgSend(v419, "trailingAnchor");
        v429 = objc_msgSend(v427, "trailingAnchor");
        v430 = objc_msgSend(v428, "constraintEqualToAnchor:", v429);

        objc_msgSend(v430, "setConstant:", -12.0);
        v431 = v430;
        objc_msgSend(v431, "setActive:", 1);

      }
      v432 = objc_msgSend(v419, "superview");
      v4 = v670;
      v52 = &selRef_genericAvatarFor_pointSize_completion_;
      if (v432)
      {
        v301 = v432;
        objc_msgSend(v419, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v433 = objc_msgSend(v419, "centerYAnchor");
        v434 = objc_msgSend(v301, "centerYAnchor");
        v435 = objc_msgSend(v433, "constraintEqualToAnchor:", v434);

        objc_msgSend(v435, "setConstant:", 0.0);
        if (v435)
        {
          v305 = v435;
          objc_msgSend(v305, "setActive:", 1);
          v306 = (id *)&v687;
LABEL_95:

        }
        else
        {
          v436 = (id *)&v687;
LABEL_100:

        }
LABEL_108:
        v24 = &selRef_genericAvatarFor_pointSize_completion_;
      }
      else
      {
        v307 = (id *)&v687;
LABEL_97:

        v24 = &selRef_genericAvatarFor_pointSize_completion_;
      }
LABEL_109:
      v629 = v679;
      objc_msgSend(v679, v24[89]);
      v631 = v630;
      objc_msgSend(v629, v24[89]);
      v632 = objc_msgSend(v675, "bezierPathWithRoundedRect:cornerRadius:", 0.0, 0.0, v631);
      objc_msgSend(v632, "appendPath:", (_QWORD)v678);
      objc_msgSend(v632, "setUsesEvenOddFillRule:", 1);
      v633 = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
      v634 = objc_msgSend(v632, "CGPath");
      objc_msgSend(v633, "setPath:", v634);

      objc_msgSend(v633, "setFillRule:", kCAFillRuleEvenOdd);
      v635 = objc_msgSend(v629, "backgroundColor");
      if (v635)
      {
        v636 = v635;
        v637 = objc_msgSend(v635, "CGColor");

      }
      else
      {
        v637 = 0;
      }
      objc_msgSend(v633, "setFillColor:", v637);

      LODWORD(v638) = 1057803469;
      objc_msgSend(v633, "setOpacity:", v638);
      v639 = UIView.fillSuper(margin:)(0.0);
      v640 = objc_msgSend(v14, "superview", swift_bridgeObjectRelease(v639).n128_f64[0]);
      if (v640)
      {
        v641 = v640;
        objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v642 = objc_msgSend(v14, "centerYAnchor");
        v643 = objc_msgSend(v641, "centerYAnchor");
        v644 = objc_msgSend(v642, "constraintEqualToAnchor:", v643);

        objc_msgSend(v644, "setConstant:", 0.0);
        v645 = v644;
        v52 = &selRef_genericAvatarFor_pointSize_completion_;
        v646 = v645;
        objc_msgSend(v645, "setActive:", 1);

      }
      v647 = objc_msgSend(v14, "layer");
      objc_msgSend(v647, "addSublayer:", v633);

      v648 = v679;
      objc_msgSend(v679, "setIsAccessibilityElement:", 1);
      objc_msgSend(v648, "setAccessibilityIgnoresInvertColors:", 1);
      v649 = objc_msgSend((id)objc_opt_self(NSBundle), v52[72]);
      v718._countAndFlagsBits = 0xD00000000000002CLL;
      v718._object = (void *)0x80000001001A9870;
      v650._countAndFlagsBits = 0x2074756F6B726F57;
      v650._object = (void *)0xED00006574756F72;
      v651._countAndFlagsBits = 0;
      v651._object = (void *)0xE000000000000000;
      v652 = NSLocalizedString(_:tableName:bundle:value:comment:)(v650, (Swift::String_optional)0, (NSBundle)v649, v651, v718)._object;

      v653 = String._bridgeToObjectiveC()();
      objc_msgSend(v648, "setAccessibilityLabel:", v653, swift_bridgeObjectRelease(v652).n128_f64[0]);

      (*(void (**)(void))((swift_isaMask & *(_QWORD *)v648) + 0xC8))();
      v654 = v684;
      swift_release(v23);
      swift_bridgeObjectRelease(v654);
      return;
    case 6:
      v665 = v14;
      v666 = v23;
      v670 = v4;
      v168 = UIView.fillSuper(margin:)(0.0);
      swift_bridgeObjectRelease(v168);
      v169 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
      objc_msgSend(v679, v24[89]);
      v170 = CGRectGetWidth(v722);
      v171 = (void *)objc_opt_self(UIFont);
      v172 = v24;
      v173 = objc_msgSend(v171, "preferredFontForTextStyle:", UIFontTextStyleBody);
      v174 = objc_msgSend(v173, "fontDescriptor");
      v175 = objc_msgSend(v174, "fontDescriptorWithSymbolicTraits:", 2);

      if (!v175)
        goto LABEL_118;
      v176 = objc_msgSend(v171, "fontWithDescriptor:size:", v175, 0.0);

      v177 = specialized UILabel.estimatedHeight(forWidth:text:ofFont:)(0, 0xE000000000000000, v176, v170);
      v178 = v177 + 12.0 + 5.0;
      v179 = v679;
      objc_msgSend(v679, v172[89]);
      v181 = (v180 - (v178 + v178)) * 0.5 + (v180 - (v178 + v178)) * 0.5;
      v662 = (NSAttributedStringKey)objc_msgSend(v675, "bezierPathWithRoundedRect:cornerRadius:", v178, v178, v181, v181);

      (*(void (**)(void))((swift_isaMask & *(_QWORD *)v179) + 0xC0))();
      v182 = objc_msgSend(v171, "preferredFontForTextStyle:", UIFontTextStyleBody);
      v183 = objc_msgSend(v182, "fontDescriptor");
      v184 = objc_msgSend(v183, "fontDescriptorWithSymbolicTraits:", 2);

      if (!v184)
        goto LABEL_119;
      v185 = objc_msgSend(v171, "fontWithDescriptor:size:", v184, 0.0);

      objc_msgSend((id)v669, "setFont:", v185);
      v186 = objc_msgSend(v171, "preferredFontForTextStyle:", UIFontTextStyleBody);
      v187 = objc_msgSend(v186, "fontDescriptor");
      v188 = objc_msgSend(v187, "fontDescriptorWithSymbolicTraits:", 2);

      v189 = v676;
      if (!v188)
        goto LABEL_120;
      v190 = objc_msgSend(v171, "fontWithDescriptor:size:", v188, 0.0);

      objc_msgSend(v673, "setFont:", v190);
      v191 = (void *)objc_opt_self(NSBundle);
      v192 = objc_msgSend(v191, "mainBundle");
      v693._countAndFlagsBits = 0xD00000000000002CLL;
      v693._object = (void *)0x80000001001A98A0;
      v193._countAndFlagsBits = 0x402520B7C2204025;
      v193._object = (void *)0xAE00402520B7C220;
      v194._countAndFlagsBits = 0;
      v194._object = (void *)0xE000000000000000;
      v195 = NSLocalizedString(_:tableName:bundle:value:comment:)(v193, (Swift::String_optional)0, (NSBundle)v192, v194, v693);

      *(_QWORD *)&v668 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v196 = swift_allocObject(v668, 152, 7);
      *(_OWORD *)(v196 + 16) = xmmword_10019F2D0;
      v198 = *(_QWORD *)&v679[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_distance];
      v197 = *(_QWORD *)&v679[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_distance + 8];
      *(_QWORD *)(v196 + 56) = &type metadata for String;
      v199 = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v196 + 32) = v198;
      *(_QWORD *)(v196 + 40) = v197;
      v200 = v683;
      v201 = v684;
      *(_QWORD *)(v196 + 96) = &type metadata for String;
      *(_QWORD *)(v196 + 104) = v199;
      *(_QWORD *)(v196 + 64) = v199;
      *(_QWORD *)(v196 + 72) = v200;
      *(_QWORD *)(v196 + 80) = v201;
      *(_QWORD *)(v196 + 136) = &type metadata for String;
      *(_QWORD *)(v196 + 144) = v199;
      *(_QWORD *)&v678 = v199;
      v202 = v677;
      *(_QWORD *)(v196 + 112) = v189;
      *(_QWORD *)(v196 + 120) = v202;
      swift_bridgeObjectRetain(v202);
      swift_bridgeObjectRetain(v197);
      swift_bridgeObjectRetain(v201);
      static String.localizedStringWithFormat(_:_:)(v195._countAndFlagsBits, v195._object, v196);
      v204 = v203;
      swift_bridgeObjectRelease(v195._object);
      swift_bridgeObjectRelease(v196);
      v205 = HIBYTE(v197) & 0xF;
      *(_QWORD *)&v667 = v198;
      if ((v197 & 0x2000000000000000) == 0)
        v205 = v198 & 0xFFFFFFFFFFFFLL;
      v664 = (id)v197;
      if (!v205)
      {
        *(_QWORD *)&v308 = swift_bridgeObjectRelease(v204).n128_u64[0];
        if ((v202 & 0x2000000000000000) != 0)
          v309 = HIBYTE(v202) & 0xF;
        else
          v309 = (unint64_t)v189 & 0xFFFFFFFFFFFFLL;
        v310 = objc_msgSend(v191, "mainBundle", v308);
        if (v309)
        {
          v699._countAndFlagsBits = 0xD000000000000021;
          v699._object = (void *)0x80000001001A9930;
          v311._countAndFlagsBits = 0x402520B7C2204025;
          v311._object = (void *)0xA800000000000000;
          v312._countAndFlagsBits = 0;
          v312._object = (void *)0xE000000000000000;
          v313 = NSLocalizedString(_:tableName:bundle:value:comment:)(v311, (Swift::String_optional)0, (NSBundle)v310, v312, v699);
          v314 = v313._countAndFlagsBits;
          v315 = v313._object;

          v316 = swift_allocObject(v668, 112, 7);
          *(_OWORD *)(v316 + 16) = xmmword_10019EEE0;
          v317 = v678;
          *(_QWORD *)(v316 + 56) = &type metadata for String;
          *(_QWORD *)(v316 + 64) = v317;
          *(_QWORD *)(v316 + 32) = v189;
          *(_QWORD *)(v316 + 40) = v202;
          v318 = v683;
          v319 = v684;
          *(_QWORD *)(v316 + 96) = &type metadata for String;
          *(_QWORD *)(v316 + 104) = v317;
          *(_QWORD *)(v316 + 72) = v318;
          *(_QWORD *)(v316 + 80) = v319;
          swift_bridgeObjectRetain(v202);
          v320 = v319;
        }
        else
        {
          v712._countAndFlagsBits = 0xD000000000000014;
          v712._object = (void *)0x80000001001A9960;
          v533._countAndFlagsBits = 16421;
          v533._object = (void *)0xE200000000000000;
          v534._countAndFlagsBits = 0;
          v534._object = (void *)0xE000000000000000;
          v535 = NSLocalizedString(_:tableName:bundle:value:comment:)(v533, (Swift::String_optional)0, (NSBundle)v310, v534, v712);
          v314 = v535._countAndFlagsBits;
          v315 = v535._object;

          v316 = swift_allocObject(v668, 72, 7);
          *(_OWORD *)(v316 + 16) = xmmword_10019ED20;
          v536 = v683;
          v320 = v684;
          v537 = v678;
          *(_QWORD *)(v316 + 56) = &type metadata for String;
          *(_QWORD *)(v316 + 64) = v537;
          *(_QWORD *)(v316 + 32) = v536;
          *(_QWORD *)(v316 + 40) = v320;
        }
        swift_bridgeObjectRetain(v320);
        static String.localizedStringWithFormat(_:_:)(v314, v315, v316);
        v204 = v538;
        swift_bridgeObjectRelease(v315);
        swift_bridgeObjectRelease(v316);
      }
      v539 = objc_allocWithZone((Class)NSMutableAttributedString);
      v540 = String._bridgeToObjectiveC()();
      v541 = objc_msgSend(v539, "initWithString:", v540, swift_bridgeObjectRelease(v204).n128_f64[0]);

      v542 = *(_QWORD *)&v679[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_distanceBlue];
      v663 = (void **)v191;
      v543 = objc_msgSend(v191, "mainBundle");
      v661 = (void **)0x80000001001A98D0;
      v713._object = (void *)0x80000001001A98D0;
      v544._countAndFlagsBits = 16421;
      v544._object = (void *)0xE200000000000000;
      v545._countAndFlagsBits = 0;
      v545._object = (void *)0xE000000000000000;
      v713._countAndFlagsBits = 0xD000000000000010;
      v546 = NSLocalizedString(_:tableName:bundle:value:comment:)(v544, (Swift::String_optional)0, (NSBundle)v543, v545, v713);

      v547 = v668;
      v548 = swift_allocObject(v668, 72, 7);
      v669 = xmmword_10019ED20;
      *(_OWORD *)(v548 + 16) = xmmword_10019ED20;
      v549 = v678;
      *(_QWORD *)(v548 + 56) = &type metadata for String;
      *(_QWORD *)(v548 + 64) = v549;
      *(_QWORD *)(v548 + 32) = v667;
      v550 = v664;
      *(_QWORD *)(v548 + 40) = v664;
      swift_bridgeObjectRetain(v550);
      static String.localizedStringWithFormat(_:_:)(v546._countAndFlagsBits, v546._object, v548);
      v552 = v551;
      swift_bridgeObjectRelease(v546._object);
      v553 = objc_msgSend(v541, "mutableString", swift_bridgeObjectRelease(v548).n128_f64[0]);
      v554 = String._bridgeToObjectiveC()();
      v555 = objc_msgSend(v553, "rangeOfString:options:", v554, 1);
      v557 = v556;

      v659 = NSForegroundColorAttributeName;
      objc_msgSend(v541, "addAttribute:value:range:", NSForegroundColorAttributeName, v542, v555, v557);
      *(_QWORD *)&v558 = swift_bridgeObjectRelease(v552).n128_u64[0];
      v559 = v679;
      v660 = *(NSAttributedStringKey *)&v679[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_timeYellow];
      v560 = objc_msgSend(v191, "mainBundle", v558);
      v714._object = (void *)0x80000001001A98F0;
      v561._countAndFlagsBits = 16421;
      v561._object = (void *)0xE200000000000000;
      v562._countAndFlagsBits = 0;
      v562._object = (void *)0xE000000000000000;
      v714._countAndFlagsBits = 0xD000000000000010;
      v563 = NSLocalizedString(_:tableName:bundle:value:comment:)(v561, (Swift::String_optional)0, (NSBundle)v560, v562, v714);

      v564 = swift_allocObject(v547, 72, 7);
      *(_OWORD *)(v564 + 16) = v669;
      v566 = v683;
      v565 = v684;
      v567 = v678;
      *(_QWORD *)(v564 + 56) = &type metadata for String;
      *(_QWORD *)(v564 + 64) = v567;
      *(_QWORD *)(v564 + 32) = v566;
      *(_QWORD *)(v564 + 40) = v565;
      swift_bridgeObjectRetain(v565);
      static String.localizedStringWithFormat(_:_:)(v563._countAndFlagsBits, v563._object, v564);
      v569 = v568;
      swift_bridgeObjectRelease(v563._object);
      v570 = objc_msgSend(v541, "mutableString", swift_bridgeObjectRelease(v564).n128_f64[0]);
      v571 = String._bridgeToObjectiveC()();
      v572 = objc_msgSend(v570, "rangeOfString:options:", v571, 1);
      v574 = v573;

      objc_msgSend(v541, "addAttribute:value:range:", NSForegroundColorAttributeName, v660, v572, v574);
      *(_QWORD *)&v575 = swift_bridgeObjectRelease(v569).n128_u64[0];
      v576 = *(_QWORD *)&v559[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_movePink];
      v577 = v663;
      v578 = objc_msgSend(v663, "mainBundle", v575);
      v660 = (NSAttributedStringKey)0x80000001001A9910;
      v715._object = (void *)0x80000001001A9910;
      v579._countAndFlagsBits = 16421;
      v579._object = (void *)0xE200000000000000;
      v580._countAndFlagsBits = 0;
      v580._object = (void *)0xE000000000000000;
      v715._countAndFlagsBits = 0xD000000000000010;
      v581 = NSLocalizedString(_:tableName:bundle:value:comment:)(v579, (Swift::String_optional)0, (NSBundle)v578, v580, v715);

      v582 = v668;
      v583 = swift_allocObject(v668, 72, 7);
      *(_OWORD *)(v583 + 16) = v669;
      *(_QWORD *)(v583 + 56) = &type metadata for String;
      *(_QWORD *)(v583 + 64) = v567;
      *(_QWORD *)(v583 + 32) = v676;
      v584 = v677;
      *(_QWORD *)(v583 + 40) = v677;
      swift_bridgeObjectRetain(v584);
      static String.localizedStringWithFormat(_:_:)(v581._countAndFlagsBits, v581._object, v583);
      v586 = v585;
      swift_bridgeObjectRelease(v581._object);
      v587 = objc_msgSend(v541, "mutableString", swift_bridgeObjectRelease(v583).n128_f64[0]);
      v588 = String._bridgeToObjectiveC()();
      v589 = objc_msgSend(v587, "rangeOfString:options:", v588, 1);
      v591 = v590;

      objc_msgSend(v541, "addAttribute:value:range:", v659, v576, v589, v591);
      swift_bridgeObjectRelease(v586);
      v592 = specialized static MOSuggestionTheme.Fonts.footnoteEmphFontSmallCaps()();
      v593 = objc_msgSend(v577, "mainBundle");
      v716._object = v661;
      v594._countAndFlagsBits = 16421;
      v594._object = (void *)0xE200000000000000;
      v595._countAndFlagsBits = 0;
      v595._object = (void *)0xE000000000000000;
      v716._countAndFlagsBits = 0xD000000000000010;
      v596 = NSLocalizedString(_:tableName:bundle:value:comment:)(v594, (Swift::String_optional)0, (NSBundle)v593, v595, v716);

      v597 = swift_allocObject(v582, 72, 7);
      *(_OWORD *)(v597 + 16) = v669;
      aBlock = (void **)v667;
      v681[0] = v664;
      v598 = v672;
      CharacterSet.init(charactersIn:)(0x3736353433323130, 0xEC0000002C2E3938);
      *(_QWORD *)&v667 = lazy protocol witness table accessor for type String and conformance String();
      v599 = StringProtocol.trimmingCharacters(in:)(v598, &type metadata for String, v667);
      v601 = v600;
      v671 = *(_QWORD *)(v671 + 8);
      ((void (*)(char *, _QWORD *))v671)(v598, v674);
      v602 = v678;
      *(_QWORD *)(v597 + 56) = &type metadata for String;
      *(_QWORD *)(v597 + 64) = v602;
      *(_QWORD *)(v597 + 32) = v599;
      *(_QWORD *)(v597 + 40) = v601;
      static String.localizedStringWithFormat(_:_:)(v596._countAndFlagsBits, v596._object, v597);
      v604 = v603;
      swift_bridgeObjectRelease(v596._object);
      v605 = objc_msgSend(v541, "mutableString", swift_bridgeObjectRelease(v597).n128_f64[0]);
      v606 = String._bridgeToObjectiveC()();
      v607 = objc_msgSend(v605, "rangeOfString:options:", v606, 1);
      v609 = v608;

      objc_msgSend(v541, "addAttribute:value:range:", NSFontAttributeName, v592, v607, v609);
      swift_bridgeObjectRelease(v604);
      v610 = specialized static MOSuggestionTheme.Fonts.footnoteEmphFontSmallCaps()();
      v611 = objc_msgSend(v663, "mainBundle");
      v717._object = v660;
      v612._countAndFlagsBits = 16421;
      v612._object = (void *)0xE200000000000000;
      v613._countAndFlagsBits = 0;
      v613._object = (void *)0xE000000000000000;
      v717._countAndFlagsBits = 0xD000000000000010;
      v614 = NSLocalizedString(_:tableName:bundle:value:comment:)(v612, (Swift::String_optional)0, (NSBundle)v611, v613, v717);

      v615 = swift_allocObject(v668, 72, 7);
      *(_OWORD *)(v615 + 16) = v669;
      aBlock = v676;
      v681[0] = v677;
      CharacterSet.init(charactersIn:)(0x3736353433323130, 0xEC0000002C2E3938);
      v616 = StringProtocol.trimmingCharacters(in:)(v598, &type metadata for String, v667);
      v618 = v617;
      ((void (*)(char *, _QWORD *))v671)(v598, v674);
      v619 = v678;
      *(_QWORD *)(v615 + 56) = &type metadata for String;
      *(_QWORD *)(v615 + 64) = v619;
      *(_QWORD *)(v615 + 32) = v616;
      *(_QWORD *)(v615 + 40) = v618;
      static String.localizedStringWithFormat(_:_:)(v614._countAndFlagsBits, v614._object, v615);
      v621 = v620;
      swift_bridgeObjectRelease(v614._object);
      v622 = objc_msgSend(v541, "mutableString", swift_bridgeObjectRelease(v615).n128_f64[0]);
      v623 = String._bridgeToObjectiveC()();
      v624 = objc_msgSend(v622, "rangeOfString:options:", v623, 1);
      v626 = v625;

      v627 = v626;
      v52 = &selRef_genericAvatarFor_pointSize_completion_;
      objc_msgSend(v541, "addAttribute:value:range:", NSFontAttributeName, v610, v624, v627);

      *(_QWORD *)&v628 = swift_bridgeObjectRelease(v621).n128_u64[0];
      objc_msgSend(v673, "setAttributedText:", v541, v628);

      v532 = &v687;
LABEL_107:
      *(_QWORD *)&v678 = *(v532 - 32);
      v23 = v666;
      v4 = v670;
      v14 = v665;
      goto LABEL_108;
    default:
      goto LABEL_109;
  }
}

void closure #1 in MOSuggestionActivityRouteAssetView.makeUIView()(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  double v18;
  id v19;
  void *v20;
  uint64_t countAndFlagsBits;
  void *v22;
  void *object;
  id v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::String v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  _QWORD v43[2];
  _QWORD v44[4];
  uint64_t v45;
  uint64_t v46;

  v42 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MeasurementFormatUnitUsage<NSUnitDuration>);
  v40 = *(_QWORD *)(v3 - 8);
  v41 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FloatingPointFormatStyle<Double>?);
  __chkstk_darwin(v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitDuration><>.FormatStyle.UnitWidth);
  v37 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitDuration><>.FormatStyle);
  v38 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitDuration>);
  v36 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = objc_msgSend(objc_allocWithZone((Class)FIUIFormattingManager), "init");
  v18 = *(double *)(a2 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_duration);
  v19 = objc_msgSend(v17, "stringWithDuration:durationFormat:", 2, v18);
  if (v19)
  {
    v20 = v19;
    countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    object = v22;

  }
  else
  {
    v24 = objc_msgSend((id)objc_opt_self(NSUnitDuration), "minutes");
    v25 = type metadata accessor for NSUnitDuration();
    Measurement.init(value:unit:)(v24, v25, v18);
    static Measurement<>.FormatStyle.UnitWidth.abbreviated.getter(v25);
    v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FloatingPointFormatStyle<Double>);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v8, 1, 1, v26);
    static MeasurementFormatUnitUsage.general.getter(v25);
    static FormatStyle.measurement<A>(width:usage:numberFormatStyle:)(v10, v5, v8, v25);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v5, v41);
    outlined destroy of FloatingPointFormatStyle<Double>?((uint64_t)v8);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v39);
    v27 = lazy protocol witness table accessor for type Measurement<NSUnitDuration><>.FormatStyle and conformance Measurement<A><>.FormatStyle();
    Measurement<>.formatted<A>(_:)(&v45, v13, v14, v11, v27);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v11);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v14);
    v28 = v46;
    v44[2] = v45;
    v44[3] = v46;
    v44[0] = 32;
    v44[1] = 0xE100000000000000;
    v43[0] = 0;
    v43[1] = 0xE000000000000000;
    v29 = lazy protocol witness table accessor for type String and conformance String();
    StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(v44, v43, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v29, v29, v29);
    v31 = v30;
    swift_bridgeObjectRelease(v28);
    v32 = String.uppercased()();
    countAndFlagsBits = v32._countAndFlagsBits;
    object = v32._object;
    swift_bridgeObjectRelease(v31);

  }
  v33 = v42;
  v34 = v42[1];
  *v42 = countAndFlagsBits;
  v33[1] = (uint64_t)object;
  swift_bridgeObjectRelease(v34);
}

uint64_t thunk for @callee_guaranteed () -> ()(uint64_t (*a1)(void))
{
  return a1();
}

Swift::Void __swiftcall MOSuggestionActivityRouteAssetView.setupLabels()()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_exerciseNameLabel];
  objc_msgSend(v1, "addSubview:", v2);
  v3 = *(void **)&v1[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_workoutDataLabel];
  objc_msgSend(v1, "addSubview:", v3);
  v4 = objc_msgSend(v2, "superview");
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v6 = objc_msgSend(v2, "topAnchor");
    v7 = objc_msgSend(v5, "topAnchor");
    v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

    objc_msgSend(v8, "setConstant:", 12.0);
    if (v8)
    {
      v9 = v8;
      objc_msgSend(v9, "setActive:", 1);

    }
  }
  v10 = objc_msgSend(v2, "superview");
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v12 = objc_msgSend(v2, "leadingAnchor");
    v13 = objc_msgSend(v11, "leadingAnchor");
    v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

    objc_msgSend(v14, "setConstant:", 8.0);
    if (v14)
    {
      v15 = v14;
      objc_msgSend(v15, "setActive:", 1);

    }
  }
  v16 = objc_msgSend(v2, "superview");
  if (v16)
  {
    v17 = v16;
    objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v18 = objc_msgSend(v2, "trailingAnchor");
    v19 = objc_msgSend(v17, "trailingAnchor");
    v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

    objc_msgSend(v20, "setConstant:", -8.0);
    if (v20)
    {
      v21 = v20;
      objc_msgSend(v21, "setActive:", 1);

    }
  }
  objc_msgSend(v2, "setTextAlignment:", 1);
  objc_msgSend(v3, "setTextAlignment:", 1);
  v22 = objc_msgSend(v3, "superview");
  if (v22)
  {
    v23 = v22;
    objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v24 = objc_msgSend(v3, "bottomAnchor");
    v25 = objc_msgSend(v23, "bottomAnchor");
    v26 = objc_msgSend(v24, "constraintEqualToAnchor:", v25);

    if (v26)
    {
      objc_msgSend(v26, "setConstant:", -12.0);
      v27 = v26;
      objc_msgSend(v27, "setActive:", 1);

    }
  }
  v28 = objc_msgSend(v3, "superview");
  if (v28)
  {
    v29 = v28;
    objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v30 = objc_msgSend(v3, "leadingAnchor");
    v31 = objc_msgSend(v29, "leadingAnchor");
    v32 = objc_msgSend(v30, "constraintEqualToAnchor:", v31);

    objc_msgSend(v32, "setConstant:", 0.0);
    if (v32)
    {
      v33 = v32;
      objc_msgSend(v33, "setActive:", 1);

    }
  }
  v34 = objc_msgSend(v3, "superview");
  if (v34)
  {
    v39 = v34;
    objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v35 = objc_msgSend(v3, "trailingAnchor");
    v36 = objc_msgSend(v39, "trailingAnchor");
    v37 = objc_msgSend(v35, "constraintEqualToAnchor:", v36);

    objc_msgSend(v37, "setConstant:", 8.0);
    if (v37)
    {
      v38 = v37;
      objc_msgSend(v38, "setActive:", 1);

    }
  }
}

Swift::Void __swiftcall MOSuggestionActivityRouteAssetView.adjustForFontSizeChanges()()
{
  _BYTE *v0;
  char v1;
  id v2;
  id v3;
  uint64_t v4;

  v1 = v0[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_assignedTileSize];
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = objc_msgSend(v2, "preferredContentSizeCategory");

  LOBYTE(v2) = static UIContentSizeCategory.> infix(_:_:)(v3, UIContentSizeCategoryLarge);
  if ((v2 & (((v1 - 6) & 0xFD) == 0)) != 0)
    v4 = 3;
  else
    v4 = 1;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_workoutDataLabel], "setNumberOfLines:", v4);
}

Swift::Void __swiftcall MOSuggestionActivityRouteAssetView.handleTraitChange()()
{
  _QWORD *v0;

  (*(void (**)(void))((swift_isaMask & *v0) + 0xC8))();
}

void MOSuggestionActivityRouteAssetView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MomentsUIService.MOSuggestionActivityRouteAssetView", 51, "init(frame:)", 12, 0);
  __break(1u);
}

id MOSuggestionActivityRouteAssetView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionActivityRouteAssetView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void specialized MOSuggestionActivityRouteAssetView.init(coder:)()
{
  char *v0;
  NSString v1;
  void *v2;
  id v3;
  NSString v4;
  id v5;
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  v1 = String._bridgeToObjectiveC()();
  v2 = (void *)objc_opt_self(UIColor);
  v3 = objc_msgSend(v2, "colorNamed:", v1);

  if (!v3)
    v3 = objc_msgSend(v2, "systemBlueColor");
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_distanceBlue] = v3;
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v2, "colorNamed:", v4);

  if (!v5)
    v5 = objc_msgSend(v2, "systemYellowColor");
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_timeYellow] = v5;
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v2, "colorNamed:", v6);

  if (!v7)
    v7 = objc_msgSend(v2, "systemPinkColor");
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_movePink] = v7;
  v8 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_exerciseNameLabel;
  closure #1 in variable initialization expression of MOSuggestionActivityRouteAssetView.exerciseNameLabel();
  *(_QWORD *)&v0[v8] = v9;
  v10 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_workoutDataLabel;
  closure #1 in variable initialization expression of MOSuggestionActivityRouteAssetView.workoutDataLabel();
  *(_QWORD *)&v0[v10] = v11;
  v12 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_labelStack;
  v13 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v13, "setAxis:", 1);
  objc_msgSend(v13, "setDistribution:", 4);
  objc_msgSend(v13, "setAlignment:", 1);
  objc_msgSend(v13, "setSpacing:", 2.0);
  *(_QWORD *)&v0[v12] = v13;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionSheetRouteAssetView.swift", 54, 2, 88, 0);
  __break(1u);
}

uint64_t sub_10008AAE8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void partial apply for closure #1 in MOSuggestionActivityRouteAssetView.makeUIView()()
{
  uint64_t v0;

  closure #1 in MOSuggestionActivityRouteAssetView.makeUIView()(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10008AB14()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_13(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t type metadata accessor for NSUnitDuration()
{
  unint64_t result;
  uint64_t v1;

  result = lazy cache variable for type metadata for NSUnitDuration;
  if (!lazy cache variable for type metadata for NSUnitDuration)
  {
    v1 = objc_opt_self(NSUnitDuration);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for NSUnitDuration);
  }
  return result;
}

uint64_t outlined destroy of FloatingPointFormatStyle<Double>?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FloatingPointFormatStyle<Double>?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t lazy protocol witness table accessor for type Measurement<NSUnitDuration><>.FormatStyle and conformance Measurement<A><>.FormatStyle()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type Measurement<NSUnitDuration><>.FormatStyle and conformance Measurement<A><>.FormatStyle;
  if (!lazy protocol witness table cache variable for type Measurement<NSUnitDuration><>.FormatStyle and conformance Measurement<A><>.FormatStyle)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Measurement<NSUnitDuration><>.FormatStyle);
    result = swift_getWitnessTable(&protocol conformance descriptor for Measurement<A><>.FormatStyle, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Measurement<NSUnitDuration><>.FormatStyle and conformance Measurement<A><>.FormatStyle);
  }
  return result;
}

void *MOSuggestionEvergreenCollectionViewCell.reuseIdentifier.unsafeMutableAddressor()
{
  return &static MOSuggestionEvergreenCollectionViewCell.reuseIdentifier;
}

unint64_t static MOSuggestionEvergreenCollectionViewCell.reuseIdentifier.getter()
{
  return 0xD000000000000027;
}

void *MOSuggestionEvergreenCollectionViewCell.bottomPadding.unsafeMutableAddressor()
{
  return &static MOSuggestionEvergreenCollectionViewCell.bottomPadding;
}

id MOSuggestionEvergreenCollectionViewCell.assetView.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MomentsUIService39MOSuggestionEvergreenCollectionViewCell_assetView);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService39MOSuggestionEvergreenCollectionViewCell_assetView, v3, 0, 0);
  return *v1;
}

void MOSuggestionEvergreenCollectionViewCell.assetView.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC16MomentsUIService39MOSuggestionEvergreenCollectionViewCell_assetView);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*MOSuggestionEvergreenCollectionViewCell.assetView.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService39MOSuggestionEvergreenCollectionViewCell_assetView, a1, 33, 0);
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

uint64_t MOSuggestionEvergreenCollectionViewCell.assetViewModel.getter()
{
  return MOSuggestionEvergreenCollectionViewCell.assetViewModel.getter(&OBJC_IVAR____TtC16MomentsUIService39MOSuggestionEvergreenCollectionViewCell_assetViewModel);
}

uint64_t MOSuggestionEvergreenCollectionViewCell.assetViewModel.setter(uint64_t a1)
{
  _QWORD *v1;
  char *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (char *)v1 + OBJC_IVAR____TtC16MomentsUIService39MOSuggestionEvergreenCollectionViewCell_assetViewModel;
  swift_beginAccess((char *)v1 + OBJC_IVAR____TtC16MomentsUIService39MOSuggestionEvergreenCollectionViewCell_assetViewModel, v6, 1, 0);
  v4 = swift_weakAssign(v3, a1);
  (*(void (**)(uint64_t))((swift_isaMask & *v1) + 0xB8))(v4);
  return swift_release(a1);
}

void (*MOSuggestionEvergreenCollectionViewCell.assetViewModel.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC16MomentsUIService39MOSuggestionEvergreenCollectionViewCell_assetViewModel;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  v3[3] = swift_weakLoadStrong(v5);
  return MOSuggestionEvergreenCollectionViewCell.assetViewModel.modify;
}

void MOSuggestionEvergreenCollectionViewCell.assetViewModel.modify(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  swift_weakAssign(*(_QWORD *)(*(_QWORD *)a1 + 32) + *(_QWORD *)(*(_QWORD *)a1 + 40), v4);
  if ((a2 & 1) != 0)
  {
    swift_release(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    v5 = (_QWORD *)v3[4];
    swift_endAccess(v3);
    v6 = swift_release(v4);
    (*(void (**)(uint64_t))((swift_isaMask & *v5) + 0xB8))(v6);
  }
  free(v3);
}

uint64_t MOSuggestionEvergreenCollectionViewCell.cellViewModel.getter()
{
  return MOSuggestionEvergreenCollectionViewCell.assetViewModel.getter(&OBJC_IVAR____TtC16MomentsUIService39MOSuggestionEvergreenCollectionViewCell_cellViewModel);
}

uint64_t MOSuggestionEvergreenCollectionViewCell.assetViewModel.getter(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v2 = v1 + *a1;
  swift_beginAccess(v2, v4, 0, 0);
  return swift_weakLoadStrong(v2);
}

void MOSuggestionEvergreenCollectionViewCell.cellViewModel.setter(uint64_t a1)
{
  _QWORD *v1;
  char *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v7[24];

  v3 = (char *)v1 + OBJC_IVAR____TtC16MomentsUIService39MOSuggestionEvergreenCollectionViewCell_cellViewModel;
  swift_beginAccess((char *)v1 + OBJC_IVAR____TtC16MomentsUIService39MOSuggestionEvergreenCollectionViewCell_cellViewModel, v7, 1, 0);
  v4 = swift_weakAssign(v3, a1);
  v5 = (_QWORD *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x68))(v4);
  v6 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x80))();
  (*(void (**)(uint64_t))((swift_isaMask & *v5) + 0xA0))(v6);
  swift_release(a1);

}

void (*MOSuggestionEvergreenCollectionViewCell.cellViewModel.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC16MomentsUIService39MOSuggestionEvergreenCollectionViewCell_cellViewModel;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  v3[3] = swift_weakLoadStrong(v5);
  return MOSuggestionEvergreenCollectionViewCell.cellViewModel.modify;
}

void MOSuggestionEvergreenCollectionViewCell.cellViewModel.modify(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  swift_weakAssign(*(_QWORD *)(*(_QWORD *)a1 + 32) + *(_QWORD *)(*(_QWORD *)a1 + 40), v4);
  if ((a2 & 1) != 0)
  {
    swift_release(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    v5 = (_QWORD *)v3[4];
    swift_endAccess(v3);
    v6 = swift_release(v4);
    v7 = (_QWORD *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v5) + 0x68))(v6);
    v8 = (*(uint64_t (**)(void))((swift_isaMask & *v5) + 0x80))();
    (*(void (**)(uint64_t))((swift_isaMask & *v7) + 0xA0))(v8);

  }
  free(v3);
}

Swift::Void __swiftcall MOSuggestionEvergreenCollectionViewCell.setupShadow()()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  double v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;

  v1 = objc_msgSend(v0, "contentView");
  v2 = (void *)objc_opt_self(UIColor);
  v3 = objc_msgSend(v2, "clearColor");
  objc_msgSend(v1, "setBackgroundColor:", v3);

  v4 = objc_msgSend(v0, "contentView");
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v5 = objc_msgSend(v0, "contentView");
  v6 = objc_msgSend(v5, "layer");

  objc_msgSend(v6, "setMaskedCorners:", 1);
  v7 = objc_msgSend(v0, "contentView");
  objc_msgSend(v7, "setClipsToBounds:", 1);

  v8 = objc_msgSend(v0, "contentView");
  v9 = objc_msgSend(v8, "layer");

  objc_msgSend(v9, "setMasksToBounds:", 0);
  v10 = objc_msgSend(v0, "contentView");
  v11 = objc_msgSend(v10, "layer");

  if (one-time initialization token for cornerRadius != -1)
    swift_once(&one-time initialization token for cornerRadius, one-time initialization function for cornerRadius);
  objc_msgSend(v11, "setCornerRadius:", *(double *)&static MOSuggestionTheme.Sizes.cornerRadius);

  v12 = objc_msgSend(v0, "contentView");
  v13 = objc_msgSend(v12, "layer");

  v14 = objc_msgSend(v2, "blackColor");
  v15 = objc_msgSend(v14, "CGColor");

  objc_msgSend(v13, "setShadowColor:", v15);
  v16 = objc_msgSend(v0, "contentView");
  v17 = objc_msgSend(v16, "layer");

  LODWORD(v18) = 1036831949;
  objc_msgSend(v17, "setShadowOpacity:", v18);

  v19 = objc_msgSend(v0, "contentView");
  v20 = objc_msgSend(v19, "layer");

  objc_msgSend(v20, "setShadowOffset:", 0.0, 2.0);
  v21 = objc_msgSend(v0, "contentView");
  v22 = objc_msgSend(v21, "layer");

  objc_msgSend(v22, "setShadowRadius:", 4.0);
  v23 = objc_msgSend(v0, "contentView");
  v24 = objc_msgSend(v23, "layer");

  objc_msgSend(v24, "setCornerCurve:", kCACornerCurveContinuous);
  v25 = objc_msgSend(v0, "contentView");
  v26 = objc_msgSend(v25, "layer");

  objc_msgSend(v26, "setShadowPathIsBounds:", 1);
}

void MOSuggestionEvergreenCollectionViewCell.init(coder:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OBJC_IVAR____TtC16MomentsUIService39MOSuggestionEvergreenCollectionViewCell_assetView;
  v2 = type metadata accessor for MOSuggestionSheetAssetView();
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)), "init");
  swift_weakInit(&v0[OBJC_IVAR____TtC16MomentsUIService39MOSuggestionEvergreenCollectionViewCell_assetViewModel]);
  swift_weakInit(&v0[OBJC_IVAR____TtC16MomentsUIService39MOSuggestionEvergreenCollectionViewCell_cellViewModel]);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionEvergreenCollectionViewCell.swift", 62, 2, 54, 0);
  __break(1u);
}

Swift::Void __swiftcall MOSuggestionEvergreenCollectionViewCell.setAssetViewModel()()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x68))();
  v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x80))();
  (*(void (**)(uint64_t))((swift_isaMask & *v2) + 0xA0))(v1);

}

Swift::Void __swiftcall MOSuggestionEvergreenCollectionViewCell.setupConstraints()()
{
  _QWORD *v0;
  uint64_t (*v1)(void);
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  id v30;

  v1 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0x68);
  v2 = (void *)v1();
  v3 = objc_msgSend(v2, "superview");
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v5 = objc_msgSend(v2, "topAnchor");
    v6 = objc_msgSend(v4, "topAnchor");
    v7 = objc_msgSend(v5, "constraintEqualToAnchor:", v6);

    objc_msgSend(v7, "setConstant:", 4.0);
    if (v7)
    {
      v7 = v7;
      objc_msgSend(v7, "setActive:", 1);

      v2 = v7;
    }

  }
  else
  {
    v7 = 0;
    v4 = v2;
  }

  v8 = (void *)v1();
  v9 = objc_msgSend(v8, "superview");
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v11 = objc_msgSend(v8, "leadingAnchor");
    v12 = objc_msgSend(v10, "leadingAnchor");
    v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

    objc_msgSend(v13, "setConstant:", 4.0);
    if (v13)
    {
      v13 = v13;
      objc_msgSend(v13, "setActive:", 1);

      v8 = v13;
    }

  }
  else
  {
    v13 = 0;
    v10 = v8;
  }

  v14 = (void *)v1();
  v15 = objc_msgSend(v14, "superview");
  if (v15)
  {
    v16 = v15;
    objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v17 = objc_msgSend(v14, "trailingAnchor");
    v18 = objc_msgSend(v16, "trailingAnchor");
    v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

    objc_msgSend(v19, "setConstant:", -4.0);
    if (v19)
    {
      v19 = v19;
      objc_msgSend(v19, "setActive:", 1);

      v14 = v19;
    }

  }
  else
  {
    v19 = 0;
    v16 = v14;
  }

  v20 = (void *)v1();
  v21 = objc_msgSend(v20, "superview");
  if (v21)
  {
    v22 = v21;
    objc_msgSend(v20, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v23 = objc_msgSend(v20, "bottomAnchor");
    v24 = objc_msgSend(v22, "bottomAnchor");
    v25 = objc_msgSend(v23, "constraintEqualToAnchor:", v24);

    if (v25)
    {
      objc_msgSend(v25, "setConstant:", -8.0);
      v25 = v25;
      objc_msgSend(v25, "setActive:", 1);

      v20 = v25;
    }

  }
  else
  {
    v25 = 0;
    v22 = v20;
  }

  v26 = (void *)v1();
  v27 = objc_msgSend(v26, "heightAnchor");

  v28 = (void *)v1();
  v29 = objc_msgSend(v28, "widthAnchor");

  v30 = objc_msgSend(v27, "constraintGreaterThanOrEqualToAnchor:multiplier:", v29, 0.5);
  objc_msgSend(v30, "setActive:", 1);

}

Swift::Void __swiftcall MOSuggestionEvergreenCollectionViewCell.updateCell(with:)(Swift::OpaquePointer with)
{
  _QWORD *v1;
  uint64_t v3;
  unint64_t rawValue;
  _QWORD *v5;

  v5 = (_QWORD *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x68))();
  if ((unint64_t)with._rawValue >> 62)
  {
    if ((uint64_t)with._rawValue < 0)
      rawValue = (unint64_t)with._rawValue;
    else
      rawValue = (unint64_t)with._rawValue & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(with._rawValue);
    v3 = _CocoaArrayWrapper.endIndex.getter(rawValue);
    if (!v3)
      goto LABEL_6;
  }
  else
  {
    v3 = *(_QWORD *)(((unint64_t)with._rawValue & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(with._rawValue);
    if (!v3)
    {
LABEL_6:
      swift_bridgeObjectRelease(with._rawValue);
      (*(void (**)(uint64_t))((swift_isaMask & *v5) + 0xA0))(v3);

      return;
    }
  }
  if (((unint64_t)with._rawValue & 0xC000000000000001) != 0)
  {
    v3 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, with._rawValue);
    goto LABEL_6;
  }
  if (*(_QWORD *)(((unint64_t)with._rawValue & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v3 = *((_QWORD *)with._rawValue + 4);
    swift_retain(v3);
    goto LABEL_6;
  }
  __break(1u);
}

id MOSuggestionEvergreenCollectionViewCell.hitTest(_:with:)(uint64_t a1, double a2, double a3)
{
  void *v3;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  objc_super v12;

  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for MOSuggestionEvergreenCollectionViewCell();
  v7 = objc_msgSendSuper2(&v12, "hitTest:withEvent:", a1, a2, a3);
  if (v7)
  {
    v8 = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for UIButton, UIButton_ptr);
    if ((objc_msgSend(v7, "isKindOfClass:", swift_getObjCClassFromMetadata(v8)) & 1) == 0)
    {
      v9 = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for PHLivePhotoView, PHLivePhotoView_ptr);
      if ((objc_msgSend(v7, "isKindOfClass:", swift_getObjCClassFromMetadata(v9)) & 1) == 0)
      {

        v10 = v3;
        return v3;
      }
    }
  }
  return v7;
}

Swift::Void __swiftcall MOSuggestionEvergreenCollectionViewCell.prepareForReuse()()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  objc_super v3;

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for MOSuggestionEvergreenCollectionViewCell();
  objc_msgSendSuper2(&v3, "prepareForReuse");
  v1 = (*(uint64_t (**)(_QWORD))((swift_isaMask & *v0) + 0xA0))(0);
  v2 = (_QWORD *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x68))(v1);
  (*(void (**)(_QWORD))((swift_isaMask & *v2) + 0xA0))(0);

}

id MOSuggestionEvergreenCollectionViewCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionEvergreenCollectionViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

_QWORD *specialized MOSuggestionEvergreenCollectionViewCell.init(frame:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  char *v4;
  double y;
  double width;
  double height;
  _QWORD *v8;
  id v9;
  void *v10;
  _QWORD *v11;
  id v12;
  char v14[24];
  objc_super v15;

  v1 = OBJC_IVAR____TtC16MomentsUIService39MOSuggestionEvergreenCollectionViewCell_assetView;
  v2 = type metadata accessor for MOSuggestionSheetAssetView();
  v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2));
  v4 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v3, "init");
  swift_weakInit(&v4[OBJC_IVAR____TtC16MomentsUIService39MOSuggestionEvergreenCollectionViewCell_assetViewModel]);
  swift_weakInit(&v4[OBJC_IVAR____TtC16MomentsUIService39MOSuggestionEvergreenCollectionViewCell_cellViewModel]);

  y = CGRectZero.origin.y;
  width = CGRectZero.size.width;
  height = CGRectZero.size.height;
  v15.receiver = v4;
  v15.super_class = (Class)type metadata accessor for MOSuggestionEvergreenCollectionViewCell();
  v8 = objc_msgSendSuper2(&v15, "initWithFrame:", CGRectZero.origin.x, y, width, height);
  v9 = objc_msgSend(v8, "contentView");
  objc_msgSend(v9, "addSubview:", *(_QWORD *)((char *)v8 + OBJC_IVAR____TtC16MomentsUIService39MOSuggestionEvergreenCollectionViewCell_assetView), swift_beginAccess((char *)v8 + OBJC_IVAR____TtC16MomentsUIService39MOSuggestionEvergreenCollectionViewCell_assetView, v14, 0, 0).n128_f64[0]);

  (*(void (**)(void))((swift_isaMask & *v8) + 0xC0))();
  v10 = (void *)objc_opt_self(UIColor);
  v11 = v8;
  v12 = objc_msgSend(v10, "clearColor");
  objc_msgSend(v11, "setBackgroundColor:", v12);

  objc_msgSend(v11, "setClipsToBounds:", 0);
  return v11;
}

uint64_t type metadata accessor for MOSuggestionEvergreenCollectionViewCell()
{
  return objc_opt_self(_TtC16MomentsUIService39MOSuggestionEvergreenCollectionViewCell);
}

double specialized static MOSuggestionEvergreenCollectionViewCell.calculateEvergreenHeight(width:)(double a1)
{
  id v2;
  id v3;
  double v4;
  id v5;
  double v6;

  v2 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v3 = specialized static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)((uint64_t)UIFontTextStyleCaption1, 0, 0x100000000, *(uint64_t *)&UIFontWeightBold, 0, 0);
  v4 = specialized UILabel.estimatedHeight(forWidth:text:ofFont:)(0, 0xE000000000000000, v3, a1);

  v5 = specialized static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)((uint64_t)UIFontTextStyleTitle2, 0, 0x8000, *(uint64_t *)&UIFontWeightSemibold, 0, 0);
  v6 = specialized UILabel.estimatedHeight(forWidth:text:ofFont:)(168430090, 0xE400000000000000, v5, a1);

  return v4 + v6 + 34.0 + 8.0;
}

uint64_t sub_10008C224@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x68))();
  *a2 = result;
  return result;
}

uint64_t sub_10008C264(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x70))(*a1);
}

uint64_t sub_10008C2A4@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x80))();
  *a2 = result;
  return result;
}

uint64_t sub_10008C2E4(_QWORD *a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0x88);
  v3 = swift_retain(*a1);
  return v2(v3);
}

uint64_t sub_10008C324@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x98))();
  *a2 = result;
  return result;
}

uint64_t sub_10008C364(_QWORD *a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0xA0);
  v3 = swift_retain(*a1);
  return v2(v3);
}

char *ReflectionPromptView.__allocating_init(type:prompts:updateReflectionIndex:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  id v9;

  v9 = objc_allocWithZone(v4);
  return ReflectionPromptView.init(type:prompts:updateReflectionIndex:)(a1, a2, a3, a4);
}

id ReflectionPromptView.shuffleButton.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_shuffleButton);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_shuffleButton, v3, 0, 0);
  return *v1;
}

void ReflectionPromptView.shuffleButton.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_shuffleButton);
}

uint64_t (*ReflectionPromptView.shuffleButton.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_shuffleButton, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id ReflectionPromptView.tertiaryVibrancyEffectView.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_tertiaryVibrancyEffectView);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_tertiaryVibrancyEffectView, v3, 0, 0);
  return *v1;
}

void ReflectionPromptView.tertiaryVibrancyEffectView.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_tertiaryVibrancyEffectView);
}

uint64_t (*ReflectionPromptView.tertiaryVibrancyEffectView.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_tertiaryVibrancyEffectView, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id ReflectionPromptView.blurredEffectView.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_blurredEffectView);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_blurredEffectView, v3, 0, 0);
  return *v1;
}

void ReflectionPromptView.blurredEffectView.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_blurredEffectView);
}

uint64_t (*ReflectionPromptView.blurredEffectView.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_blurredEffectView, a1, 33, 0);
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

id ReflectionPromptView.accentColor.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_accentColor);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_accentColor, v3, 0, 0);
  return *v1;
}

void ReflectionPromptView.accentColor.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_accentColor);
}

uint64_t (*ReflectionPromptView.accentColor.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_accentColor, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id ReflectionPromptView.blurBackgroundColor.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_blurBackgroundColor);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_blurBackgroundColor, v3, 0, 0);
  return *v1;
}

void ReflectionPromptView.blurBackgroundColor.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_blurBackgroundColor);
}

uint64_t (*ReflectionPromptView.blurBackgroundColor.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_blurBackgroundColor, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id closure #1 in variable initialization expression of ReflectionPromptView.reflectionPrompt()
{
  id v0;
  id v1;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v0, "setTextAlignment:", 4);
  objc_msgSend(v0, "setNumberOfLines:", 4);
  objc_msgSend(v0, "setLineBreakMode:", 4);
  v1 = specialized static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)((uint64_t)UIFontTextStyleTitle2, 0, 0x8000, *(uint64_t *)&UIFontWeightSemibold, 0, 0);
  objc_msgSend(v0, "setFont:", v1);

  objc_msgSend(v0, "setContentMode:", 6);
  objc_msgSend(v0, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityMedium);
  objc_msgSend(v0, "setBaselineAdjustment:", 0);
  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  return v0;
}

id closure #1 in variable initialization expression of ReflectionPromptView.categoryLabel()
{
  id v0;
  id v1;
  id v2;
  id v3;
  id v4;
  Swift::String v5;
  Swift::String v6;
  void *object;
  NSString v8;
  Swift::String v10;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v0, "setNumberOfLines:", 1);
  v1 = specialized static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)((uint64_t)UIFontTextStyleCaption1, 0, 0x100000000, *(uint64_t *)&UIFontWeightBold, 0, 0);
  objc_msgSend(v0, "setFont:", v1);

  objc_msgSend(v0, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityMedium);
  v2 = objc_msgSend((id)objc_opt_self(UIColor), "systemWhiteColor");
  v3 = objc_msgSend(v2, "colorWithAlphaComponent:", 0.5);

  objc_msgSend(v0, "setTextColor:", v3);
  v4 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v10._object = (void *)0x80000001001A9F10;
  v5._countAndFlagsBits = 0x495443454C464552;
  v5._object = (void *)0xEA00000000004E4FLL;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v10._countAndFlagsBits = 0xD000000000000016;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v10)._object;

  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setText:", v8, swift_bridgeObjectRelease(object).n128_f64[0]);

  objc_msgSend(v0, "setLineBreakMode:", 4);
  return v0;
}

char *ReflectionPromptView.init(type:prompts:updateReflectionIndex:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  double y;
  double width;
  double height;
  char *v25;
  uint64_t v26;
  void *v27;
  char *v28;
  id v29;
  id v30;
  double v31;
  NSString v32;
  uint64_t v33;
  uint64_t v34;
  void *object;
  void *v36;
  void **v37;
  void *v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v45[24];
  objc_super v46;

  *(_QWORD *)&v4[OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_promptIndex] = 0;
  v9 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_shuffleButton;
  v10 = objc_allocWithZone((Class)UIButton);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "init");
  v12 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_tertiaryVibrancyEffectView;
  v13 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 16);
  v14 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v13);

  *(_QWORD *)&v11[v12] = v14;
  v15 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_blurredEffectView;
  *(_QWORD *)&v11[v15] = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "init");
  v16 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_accentColor;
  v17 = (void *)objc_opt_self(UIColor);
  *(_QWORD *)&v11[v16] = objc_msgSend(v17, "systemWhiteColor");
  v18 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_blurBackgroundColor;
  *(_QWORD *)&v11[v18] = objc_msgSend(v17, "systemWhiteColor");
  v19 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_reflectionPrompt;
  *(_QWORD *)&v11[v19] = closure #1 in variable initialization expression of ReflectionPromptView.reflectionPrompt();
  v20 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_categoryLabel;
  *(_QWORD *)&v11[v20] = closure #1 in variable initialization expression of ReflectionPromptView.categoryLabel();
  *(_QWORD *)&v11[OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_type] = a1;
  *(_QWORD *)&v11[OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_prompts] = a2;
  v21 = &v11[OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_updateReflectionIndex];
  *(_QWORD *)v21 = a3;
  *((_QWORD *)v21 + 1) = a4;
  swift_retain(a4);

  y = CGRectZero.origin.y;
  width = CGRectZero.size.width;
  height = CGRectZero.size.height;
  v46.receiver = v11;
  v46.super_class = (Class)type metadata accessor for ReflectionPromptView();
  v25 = (char *)objc_msgSendSuper2(&v46, "initWithFrame:", CGRectZero.origin.x, y, width, height);
  v26 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_categoryLabel;
  v27 = *(void **)&v25[OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_categoryLabel];
  v28 = v25;
  v29 = v27;
  v30 = objc_msgSend(v29, "text");
  v32 = v30;
  if (v30)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
    v34 = v33;

    object = String.uppercased()()._object;
    swift_bridgeObjectRelease(v34);
    v32 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v31 = swift_bridgeObjectRelease(object).n128_u64[0];
  }
  objc_msgSend(v29, "setText:", v32, v31);

  v36 = *(void **)&v25[v26];
  v37 = (void **)&v28[OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_accentColor];
  swift_beginAccess(&v28[OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_accentColor], v45, 0, 0);
  v38 = *v37;
  v39 = v36;
  v40 = objc_msgSend(v38, "colorWithAlphaComponent:", 0.5);
  objc_msgSend(v39, "setTextColor:", v40);

  v41 = (*(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)v28) + 0x198))();
  v42 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *(_QWORD *)v28) + 0x188))(v41);
  v43 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *(_QWORD *)v28) + 0x190))(v42);
  (*(void (**)(uint64_t))((swift_isaMask & *(_QWORD *)v28) + 0x1A0))(v43);

  swift_release(a4);
  return v28;
}

uint64_t type metadata accessor for ReflectionPromptView()
{
  return objc_opt_self(_TtC16MomentsUIService20ReflectionPromptView);
}

Swift::Void __swiftcall ReflectionPromptView.layoutSubviews()()
{
  ReflectionPromptView.layoutSubviews()((SEL *)&selRef_layoutSubviews);
}

Swift::Void __swiftcall ReflectionPromptView.setupBlurBackground()()
{
  _QWORD *v0;
  _QWORD *v1;
  id v2;
  uint64_t (*v3)(void);
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  _QWORD *v8;
  _QWORD *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  _QWORD *v19;
  __n128 v20;
  void *v21;
  id v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  NSString v33;
  uint64_t v34;
  uint64_t inited;
  unint64_t v36;
  Class isa;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  unint64_t v44;
  Class v45;
  Class v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  void *v56;
  void *v57;
  uint64_t v58;
  id v59;
  id v60;
  void *v61;
  id v62;
  id v63;
  id v64;
  void *v65;
  id v66;
  uint64_t (*v67)(void);
  void *v68;
  id v69;
  void *v70;
  id v71;
  id v72;
  id v73;
  id v74;
  void *v75;
  id v76;
  void *v77;
  uint64_t v78;
  void *v79;
  uint64_t (*v80)(void);
  uint64_t v81;
  char v82[128];
  char v83[184];

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 16);
  v3 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0x108);
  v4 = (void *)v3();
  objc_msgSend(v1, "bounds");
  objc_msgSend(v4, "setFrame:");

  v5 = (void *)v3();
  objc_msgSend(v5, "setAutoresizingMask:", 18);

  v6 = (void *)v3();
  objc_msgSend(v1, "addSubview:", v6);

  v7 = (void *)v3();
  v8 = UIView.fillSuper(margin:)(0.0);

  v9 = v8;
  v10 = v2;
  swift_bridgeObjectRelease(v9);
  v11 = objc_msgSend((id)objc_opt_self(UIVibrancyEffect), "effectForBlurEffect:style:", v2, 0);
  v12 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v11);
  v13 = (*(uint64_t (**)(id))((swift_isaMask & *v1) + 0xF8))(v12);
  v14 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0xF0);
  v15 = (void *)((uint64_t (*)(uint64_t))v14)(v13);
  objc_msgSend(v1, "bounds");
  objc_msgSend(v15, "setFrame:");

  v16 = (void *)v14();
  objc_msgSend(v16, "setAutoresizingMask:", 18);

  v17 = (void *)v14();
  objc_msgSend(v1, "addSubview:", v17);

  v18 = (void *)v14();
  v19 = UIView.fillSuper(margin:)(0.0);

  v20 = swift_bridgeObjectRelease(v19);
  v21 = (void *)((uint64_t (*)(__n128))v14)(v20);
  v22 = objc_msgSend(v21, "contentView");

  v23 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_categoryLabel;
  objc_msgSend(v22, "addSubview:", *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_categoryLabel));

  v24 = (void *)v14();
  v25 = objc_msgSend(v24, "contentView");

  v81 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_reflectionPrompt;
  objc_msgSend(v25, "addSubview:", *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_reflectionPrompt));

  v78 = v23;
  v26 = *(id *)((char *)v1 + v23);
  v27 = objc_msgSend(v26, "superview");
  v74 = v11;
  v76 = v10;
  v80 = v14;
  if (v27)
  {
    v28 = v27;
    objc_msgSend(v26, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v29 = objc_msgSend(v26, "leadingAnchor");
    v30 = objc_msgSend(v28, "leadingAnchor");
    v31 = objc_msgSend(v29, "constraintEqualToAnchor:", v30);

    objc_msgSend(v31, "setConstant:", 16.0);
    if (v31)
    {
      v31 = v31;
      objc_msgSend(v31, "setActive:", 1);

      v26 = v31;
    }

  }
  else
  {
    v31 = 0;
    v28 = v26;
  }
  v32 = v78;

  v79 = (void *)objc_opt_self(NSLayoutConstraint);
  v33 = String._bridgeToObjectiveC()();
  v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any)>);
  inited = swift_initStackObject(v34, v83);
  *(_OWORD *)(inited + 16) = xmmword_10019F2D0;
  *(_QWORD *)(inited + 32) = 0xD000000000000017;
  *(_QWORD *)(inited + 40) = 0x80000001001A9CC0;
  *(_QWORD *)(inited + 48) = 0x4018000000000000;
  *(_QWORD *)(inited + 72) = &type metadata for Double;
  *(_QWORD *)(inited + 80) = 0xD000000000000014;
  *(_QWORD *)(inited + 88) = 0x80000001001A9CE0;
  *(_QWORD *)(inited + 96) = 0x4028000000000000;
  *(_QWORD *)(inited + 120) = &type metadata for Double;
  strcpy((char *)(inited + 128), "TEXT_PADDING");
  *(_QWORD *)(inited + 168) = &type metadata for Double;
  *(_BYTE *)(inited + 141) = 0;
  *(_WORD *)(inited + 142) = -5120;
  *(_QWORD *)(inited + 144) = 0x4030000000000000;
  v36 = specialized Dictionary.init(dictionaryLiteral:)(inited);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v36);
  v38 = swift_initStackObject(v34, v82);
  *(_OWORD *)(v38 + 16) = xmmword_10019EEE0;
  strcpy((char *)(v38 + 32), "categoryLabel");
  *(_WORD *)(v38 + 46) = -4864;
  v39 = *(void **)((char *)v1 + v32);
  v40 = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for UILabel, UILabel_ptr);
  *(_QWORD *)(v38 + 48) = v39;
  *(_QWORD *)(v38 + 72) = v40;
  *(_QWORD *)(v38 + 80) = 0xD000000000000010;
  *(_QWORD *)(v38 + 88) = 0x80000001001A9D00;
  v41 = *(void **)((char *)v1 + v81);
  *(_QWORD *)(v38 + 120) = v40;
  *(_QWORD *)(v38 + 96) = v41;
  v42 = v39;
  v43 = v41;
  v44 = specialized Dictionary.init(dictionaryLiteral:)(v38);
  v45 = Dictionary._bridgeToObjectiveC()().super.isa;
  v46 = (Class)objc_msgSend(v79, "constraintsWithVisualFormat:options:metrics:views:", v33, 0, isa, v45, swift_bridgeObjectRelease(v44).n128_f64[0]);

  if (!v46)
  {
    v48 = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint, NSLayoutConstraint_ptr);
    v49 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v48);
    v46 = Array._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v47 = swift_bridgeObjectRelease(v49).n128_u64[0];
  }
  objc_msgSend(v79, "activateConstraints:", v46, v47, v74, v76);

  v50 = *(id *)((char *)v1 + v81);
  v51 = objc_msgSend(v50, "superview");
  if (v51)
  {
    v52 = v51;
    objc_msgSend(v50, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v53 = objc_msgSend(v50, "trailingAnchor");
    v54 = objc_msgSend(v52, "trailingAnchor");
    v55 = objc_msgSend(v53, "constraintEqualToAnchor:", v54);

    objc_msgSend(v55, "setConstant:", -16.0);
    if (v55)
    {
      v55 = v55;
      objc_msgSend(v55, "setActive:", 1);

      v50 = v55;
    }
    v57 = v75;
    v56 = v77;

    v58 = v81;
  }
  else
  {
    v58 = v81;
    v55 = 0;
    v52 = v50;
    v57 = v75;
    v56 = v77;
  }

  v59 = *(id *)((char *)v1 + v58);
  v60 = objc_msgSend(v59, "superview");
  if (v60)
  {
    v61 = v60;
    objc_msgSend(v59, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v62 = objc_msgSend(v59, "leadingAnchor");
    v63 = objc_msgSend(v61, "leadingAnchor");
    v64 = objc_msgSend(v62, "constraintEqualToAnchor:", v63);

    objc_msgSend(v64, "setConstant:", 16.0);
    if (v64)
    {
      v64 = v64;
      objc_msgSend(v64, "setActive:", 1);

      v59 = v64;
    }

    v58 = v81;
  }
  else
  {
    v64 = 0;
    v61 = v59;
  }

  v65 = (void *)v80();
  v66 = objc_msgSend(v65, "contentView");

  v67 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0xD8);
  v68 = (void *)v67();
  objc_msgSend(v66, "addSubview:", v68);

  v69 = *(id *)((char *)v1 + v58);
  v70 = (void *)v67();
  objc_msgSend(v69, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v71 = objc_msgSend(v69, "trailingAnchor");
  v72 = objc_msgSend(v70, "trailingAnchor");
  v73 = objc_msgSend(v71, "constraintEqualToAnchor:constant:", v72, 6.0);

  objc_msgSend(v73, "setActive:", 1);
}

Swift::Void __swiftcall ReflectionPromptView.setupShuffleButton()()
{
  _QWORD *v0;
  id v1;
  id v2;
  uint64_t (*v3)(void);
  void *v4;
  id v5;
  NSString v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  char **v16;
  void *v17;
  char **v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;

  v1 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleExtraLargeTitle2);
  v2 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:", v1);

  v3 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0xD8);
  v4 = (void *)v3();
  v5 = v2;
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v6, v5);

  objc_msgSend(v4, "setImage:forState:", v7, 0);
  v8 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "updatePromptIndex:");
  v9 = (void *)v3();
  objc_msgSend(v9, "addGestureRecognizer:", v8);

  v10 = (void *)v3();
  objc_msgSend(v10, "setUserInteractionEnabled:", 1);

  v11 = (void *)v3();
  objc_msgSend(v11, "setDeliversTouchesForGesturesToSuperview:", 0);

  v12 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xF0))();
  v13 = objc_msgSend(v12, "contentView");

  v14 = (void *)v3();
  objc_msgSend(v13, "addSubview:", v14);

  v15 = (void *)v3();
  v16 = &selRef_genericAvatarFor_pointSize_completion_;
  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v17 = (void *)v3();
  v18 = &selRef_genericAvatarFor_pointSize_completion_;
  v19 = objc_msgSend(v17, "superview");
  if (v19)
  {
    v20 = v19;
    v31 = v5;
    v21 = v8;
    objc_msgSend(v17, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v22 = objc_msgSend(v17, "trailingAnchor");
    v23 = objc_msgSend(v20, "trailingAnchor");
    v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

    objc_msgSend(v24, "setConstant:", -8.0);
    if (v24)
    {
      v24 = v24;
      objc_msgSend(v24, "setActive:", 1);

      v17 = v24;
    }

    v8 = v21;
    v5 = v31;
    v16 = &selRef_genericAvatarFor_pointSize_completion_;
    v18 = &selRef_genericAvatarFor_pointSize_completion_;
  }
  else
  {
    v24 = 0;
    v20 = v17;
  }

  v25 = (void *)v3();
  v26 = objc_msgSend(v25, v18[94]);
  if (v26)
  {
    v27 = v26;
    objc_msgSend(v25, v16[47], 0);
    v28 = objc_msgSend(v25, "topAnchor");
    v29 = objc_msgSend(v27, "topAnchor");
    v30 = objc_msgSend(v28, "constraintEqualToAnchor:", v29);

    objc_msgSend(v30, "setConstant:", 10.0);
    if (v30)
    {
      v32 = v30;
      objc_msgSend(v32, "setActive:", 1);

      v25 = v32;
    }
    else
    {
      v32 = 0;
    }

  }
  else
  {
    v32 = 0;
    v27 = v25;
  }

}

Swift::Void __swiftcall ReflectionPromptView.setUpBackground()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  void *v3;
  void *v4;
  id v5;
  id v6;
  NSString v7;
  id v8;
  NSString v9;
  id v10;
  uint64_t v11;
  NSString v12;
  uint64_t v13;
  void *v14;
  uint64_t (*v15)(void);
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  id v26;

  v1 = v0;
  v2 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0xD8);
  v3 = (void *)v2();
  v4 = (void *)objc_opt_self(UIColor);
  v5 = objc_msgSend(v4, "systemWhiteColor");
  v6 = objc_msgSend(v5, "colorWithAlphaComponent:", 0.5);

  objc_msgSend(v3, "setTintColor:", v6);
  switch(*(_QWORD *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_type))
  {
    case 1:
      v7 = String._bridgeToObjectiveC()();
      v8 = objc_msgSend(v4, "colorNamed:", v7);

      if (!v8)
        v8 = objc_msgSend(v4, "systemWhiteColor");
      (*(void (**)(id))((swift_isaMask & *v1) + 0x140))(v8);
      v9 = String._bridgeToObjectiveC()();
      v10 = objc_msgSend(v4, "colorNamed:", v9);

      v11 = 37;
      if (!v10)
        goto LABEL_7;
      break;
    default:
      v12 = String._bridgeToObjectiveC()();
      v10 = objc_msgSend(v4, "colorNamed:", v12);

      v11 = 40;
      if (!v10)
LABEL_7:
        v10 = objc_msgSend(v4, "systemWhiteColor");
      break;
  }
  v13 = (*(uint64_t (**)(id))((swift_isaMask & *v1) + 8 * v11))(v10);
  v14 = (void *)((uint64_t (*)(uint64_t))v2)(v13);
  v15 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0x120);
  v16 = (void *)v15();
  v17 = objc_msgSend(v16, "colorWithAlphaComponent:", 0.5);

  objc_msgSend(v14, "setTintColor:", v17);
  v18 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_categoryLabel;
  v19 = *(id *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_categoryLabel);
  v20 = (void *)v15();
  v21 = objc_msgSend(v20, "colorWithAlphaComponent:", 0.5);

  objc_msgSend(v19, "setTintColor:", v21);
  v22 = *(id *)((char *)v1 + v18);
  v23 = (void *)v15();
  v24 = objc_msgSend(v23, "colorWithAlphaComponent:", 0.5);

  v25 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x108))();
  v26 = (id)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x138))();
  objc_msgSend(v25, "setBackgroundColor:", v26);

}

Swift::Void __swiftcall ReflectionPromptView.setupTextColor()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t (*v5)(void);
  id v6;
  void *v7;
  id v8;
  id v9;
  NSString v10;
  void *v11;
  uint64_t v12;
  id v13;

  v1 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_promptIndex);
  if ((v1 & 0x8000000000000000) == 0)
  {
    v2 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_prompts);
    if (v1 < *(_QWORD *)(v2 + 16))
    {
      v3 = *(_QWORD *)(v2 + 16 * v1 + 40);
      v4 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_categoryLabel);
      v5 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0x120);
      swift_bridgeObjectRetain(v3);
      v6 = v4;
      v7 = (void *)v5();
      v8 = objc_msgSend(v7, "colorWithAlphaComponent:", 0.5);

      objc_msgSend(v6, "setTextColor:", v8);
      v9 = objc_allocWithZone((Class)NSMutableAttributedString);
      v10 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v3);
      v13 = objc_msgSend(v9, "initWithString:", v10);

      v11 = (void *)v5();
      objc_msgSend(v13, "addAttribute:value:range:", NSForegroundColorAttributeName, v11, 0, objc_msgSend(v13, "length"));

      v12 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_reflectionPrompt;
      objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_reflectionPrompt), "setAttributedText:", v13);
      objc_msgSend(*(id *)((char *)v0 + v12), "setAdjustsFontSizeToFitWidth:", 1);
      objc_msgSend(*(id *)((char *)v0 + v12), "setNumberOfLines:", 0);

    }
  }
}

Swift::Void __swiftcall ReflectionPromptView.updatePromptIndex(_:)(UITapGestureRecognizer a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;

  v2 = v1;
  v4 = *(uint64_t (**)(uint64_t))((char *)v1
                                         + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_updateReflectionIndex);
  v3 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_updateReflectionIndex + 8);
  v5 = swift_retain(v3);
  v6 = v4(v5);
  swift_release(v3);
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_promptIndex) = v6;
  (*(void (**)(void))((swift_isaMask & *v2) + 0x1A0))();
}

void ReflectionPromptView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MomentsUIService.ReflectionPromptView", 37, "init(frame:)", 12, 0);
  __break(1u);
}

id ReflectionPromptView.__deallocating_deinit()
{
  return ReflectionPromptView.layoutSubviews()((SEL *)&selRef_dealloc);
}

id ReflectionPromptView.layoutSubviews()(SEL *a1)
{
  void *v1;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for ReflectionPromptView();
  return objc_msgSendSuper2(&v4, *a1);
}

void specialized ReflectionPromptView.init(coder:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_promptIndex] = 0;
  v1 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_shuffleButton;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
  v2 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_tertiaryVibrancyEffectView;
  v3 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 16);
  v4 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v3);

  *(_QWORD *)&v0[v2] = v4;
  v5 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_blurredEffectView;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "init");
  v6 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_accentColor;
  v7 = (void *)objc_opt_self(UIColor);
  *(_QWORD *)&v0[v6] = objc_msgSend(v7, "systemWhiteColor");
  v8 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_blurBackgroundColor;
  *(_QWORD *)&v0[v8] = objc_msgSend(v7, "systemWhiteColor");
  v9 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_reflectionPrompt;
  *(_QWORD *)&v0[v9] = closure #1 in variable initialization expression of ReflectionPromptView.reflectionPrompt();
  v10 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_categoryLabel;
  *(_QWORD *)&v0[v10] = closure #1 in variable initialization expression of ReflectionPromptView.categoryLabel();

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionSheetReflectionAssetView.swift", 59, 2, 72, 0);
  __break(1u);
}

uint64_t sub_10008E544@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xD8))();
  *a2 = result;
  return result;
}

uint64_t sub_10008E584(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0xE0))(*a1);
}

uint64_t sub_10008E5C4@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xF0))();
  *a2 = result;
  return result;
}

uint64_t sub_10008E604(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0xF8))(*a1);
}

uint64_t sub_10008E644@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x108))();
  *a2 = result;
  return result;
}

uint64_t sub_10008E684(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x110))(*a1);
}

uint64_t sub_10008E6C4@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x120))();
  *a2 = result;
  return result;
}

uint64_t sub_10008E704(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x128))(*a1);
}

uint64_t sub_10008E744@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x138))();
  *a2 = result;
  return result;
}

uint64_t sub_10008E784(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x140))(*a1);
}

void *MOSuggestionCollectionViewListCell.gutter.unsafeMutableAddressor()
{
  return &static MOSuggestionCollectionViewListCell.gutter;
}

void *MOSuggestionCollectionViewListCell.journalButtonGutter.unsafeMutableAddressor()
{
  return &static MOSuggestionCollectionViewListCell.journalButtonGutter;
}

double static MOSuggestionCollectionViewListCell.journalButtonGutter.getter()
{
  return 36.0;
}

void *MOSuggestionCollectionViewListCell.margin.unsafeMutableAddressor()
{
  return &static MOSuggestionCollectionViewListCell.margin;
}

double static MOSuggestionInterstitialExpandableListViewCellConstants.CELL_INSET_MARGIN.getter()
{
  return 12.0;
}

unint64_t static MOSuggestionCollectionViewListCell.reuseIdentifier.getter()
{
  return 0xD000000000000022;
}

uint64_t MOSuggestionCollectionViewListCell.assetViewModel.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_assetViewModel);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_assetViewModel, v3, 0, 0);
  return swift_retain(*v1);
}

uint64_t MOSuggestionCollectionViewListCell.assetViewModel.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[24];

  v3 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_assetViewModel);
  swift_beginAccess((char *)v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_assetViewModel, v7, 1, 0);
  v4 = *v3;
  *v3 = a1;
  swift_retain(a1);
  v5 = swift_release(v4);
  (*(void (**)(uint64_t))((swift_isaMask & *v1) + 0x178))(v5);
  return swift_release(a1);
}

uint64_t (*MOSuggestionCollectionViewListCell.assetViewModel.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_assetViewModel, a1, 33, 0);
  return MOSuggestionCollectionViewListCell.assetViewModel.modify;
}

uint64_t MOSuggestionCollectionViewListCell.assetViewModel.modify(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess(a1);
  if ((a2 & 1) == 0)
    return (*(uint64_t (**)(uint64_t))((swift_isaMask & **(_QWORD **)(a1 + 24)) + 0x178))(result);
  return result;
}

id closure #1 in variable initialization expression of MOSuggestionCollectionViewListCell.titleLabel()
{
  return closure #1 in variable initialization expression of MOSuggestionCollectionViewListCell.titleLabel((SEL *)&selRef_labelColor);
}

id MOSuggestionCollectionViewListCell.titleLabel.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_titleLabel);
}

id closure #1 in variable initialization expression of MOSuggestionCollectionViewListCell.subtitleLabel()
{
  return closure #1 in variable initialization expression of MOSuggestionCollectionViewListCell.titleLabel((SEL *)&selRef_secondaryLabelColor);
}

id closure #1 in variable initialization expression of MOSuggestionCollectionViewListCell.titleLabel(SEL *a1)
{
  id v2;
  id v3;

  v2 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v2, "setLineBreakMode:", 4);
  objc_msgSend(v2, "setNumberOfLines:", 1);
  v3 = objc_msgSend((id)objc_opt_self(UIColor), *a1);
  objc_msgSend(v2, "setTextColor:", v3);

  objc_msgSend(v2, "setTextAlignment:", 4);
  objc_msgSend(v2, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v2, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityExtraLarge);
  return v2;
}

id MOSuggestionCollectionViewListCell.subtitleLabel.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_subtitleLabel);
}

id MOSuggestionCollectionViewListCell.stackView.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_stackView);
}

id MOSuggestionCollectionViewListCell.platterView.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_platterView);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_platterView, v3, 0, 0);
  return *v1;
}

void MOSuggestionCollectionViewListCell.platterView.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_platterView);
}

uint64_t (*MOSuggestionCollectionViewListCell.platterView.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_platterView, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id MOSuggestionCollectionViewListCell.playButton.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_playButton);
}

uint64_t key path setter for MOSuggestionCollectionViewListCell.accessoryButtonAction : MOSuggestionCollectionViewListCell(uint64_t *a1, _QWORD **a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t (*)(), uint64_t, __n128);
  __n128 v7;

  v3 = *a1;
  v4 = a1[1];
  v5 = swift_allocObject(&unk_1001E7490, 32, 7);
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = v4;
  v6 = *(uint64_t (**)(uint64_t (*)(), uint64_t, __n128))((swift_isaMask & **a2) + 0xF0);
  v7 = swift_retain(v4);
  return v6(partial apply for thunk for @escaping @callee_guaranteed () -> (@out ()), v5, v7);
}

uint64_t MOSuggestionCollectionViewListCell.accessoryButtonAction.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_accessoryButtonAction);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_accessoryButtonAction, v4, 0, 0);
  v2 = *v1;
  swift_retain(v1[1]);
  return v2;
}

uint64_t MOSuggestionCollectionViewListCell.accessoryButtonAction.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[24];

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_accessoryButtonAction);
  swift_beginAccess(v5, v8, 1, 0);
  v6 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return swift_release(v6);
}

uint64_t (*MOSuggestionCollectionViewListCell.accessoryButtonAction.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_accessoryButtonAction, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

Swift::Void __swiftcall MOSuggestionCollectionViewListCell.setInteractionState(added:saved:)(Swift::Bool_optional added, Swift::Bool_optional saved)
{
  _QWORD *v2;
  uint64_t (*v3)(void);
  _QWORD *v4;
  id v5;

  if (added.value)
  {
    v3 = *(uint64_t (**)(void))((swift_isaMask & *v2) + 0x138);
    v4 = (_QWORD *)v3();
    (*(void (**)(_QWORD))((swift_isaMask & *v4) + 0x98))(0);
LABEL_6:

    v5 = (id)v3();
    objc_msgSend(v5, "setHidden:", 0);

    return;
  }
  if (saved.value)
  {
    v3 = *(uint64_t (**)(void))((swift_isaMask & *v2) + 0x138);
    v4 = (_QWORD *)v3();
    (*(void (**)(uint64_t))((swift_isaMask & *v4) + 0x98))(1);
    goto LABEL_6;
  }
}

void MOSuggestionCollectionViewListCell.cellViewModel.didset()
{
  _QWORD *v0;
  _QWORD *v1;
  char *v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  double v8;
  NSString v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  _QWORD *v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  char v35[24];

  v1 = v0;
  v2 = (char *)v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_cellViewModel;
  swift_beginAccess((char *)v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_cellViewModel, v35, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  v4 = Strong;
  if (!Strong)
    goto LABEL_10;
  v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)Strong + 296))(Strong);
  swift_release(v4);
  if (!v5)
  {
    v4 = 0;
    goto LABEL_10;
  }
  if ((unint64_t)v5 >> 62)
  {
    if (v5 >= 0)
      v34 = v5 & 0xFFFFFFFFFFFFFF8;
    else
      v34 = v5;
    swift_bridgeObjectRetain(v5);
    v4 = _CocoaArrayWrapper.endIndex.getter(v34);
    swift_bridgeObjectRelease(v5);
    if (v4)
    {
LABEL_5:
      if ((v5 & 0xC000000000000001) != 0)
      {
        v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v5);
      }
      else
      {
        if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        v4 = *(_QWORD *)(v5 + 32);
        swift_retain(v4);
      }
    }
  }
  else
  {
    v4 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_5;
  }
  swift_bridgeObjectRelease(v5);
LABEL_10:
  (*(void (**)(uint64_t))((swift_isaMask & *v1) + 0xC0))(v4);
  v6 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_titleLabel);
  v7 = swift_weakLoadStrong(v2);
  v9 = (NSString)v7;
  if (v7)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v7 + 176))(v7);
    v11 = v10;
    swift_release(v9);
    v9 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v8 = swift_bridgeObjectRelease(v11).n128_u64[0];
  }
  objc_msgSend(v6, "setText:", v9, v8);

  v12 = specialized static MOSuggestionTheme.Fonts.footnoteEmphShortFont()();
  UILabel.setLineSpacing(lineSpacing:lineHeightMultiple:baselineOffset:font:)(v12, 0.0, 0.95, 0.0);

  v13 = swift_weakLoadStrong(v2);
  if (v13)
  {
    v14 = v13;
    v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v13 + 224))(v13);
    swift_release(v14);
    v16 = v15 & 1;
  }
  else
  {
    v16 = 2;
  }
  v17 = swift_weakLoadStrong(v2);
  if (v17)
  {
    v19 = v17;
    v20 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v17 + 248))(v17);
    v18 = swift_release(v19);
    v21 = v20 & 1;
  }
  else
  {
    v21 = 2;
  }
  v22 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))((swift_isaMask & *v1) + 0x100))(v16, v21, v18);
  v23 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x188))(v22);
  v24 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0xB8))(v23);
  if (v24)
  {
    v25 = v24;
    v26 = (*(uint64_t (**)(void))(*(_QWORD *)v24 + 728))();
    v28 = v27;
    v29 = swift_release(v25);
    if (v28)
      (*(void (**)(uint64_t, uint64_t, __n128))((swift_isaMask & **(_QWORD **)((char *)v1
                                                                                      + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_playButton))
                                                       + 0x60))(v26, v28, v29);
  }
  v30 = *(_QWORD **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_playButton);
  v31 = swift_weakLoadStrong(v2);
  if (v31)
  {
    v33 = *(unsigned __int8 *)(v31 + 80);
    v32 = swift_release(v31);
  }
  else
  {
    v33 = 0;
  }
  (*(void (**)(uint64_t, __n128))((swift_isaMask & *v30) + 0x78))(v33, v32);
}

uint64_t MOSuggestionCollectionViewListCell.cellViewModel.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_cellViewModel;
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_cellViewModel, v3, 0, 0);
  return swift_weakLoadStrong(v1);
}

double MOSuggestionCollectionViewListCell.cellViewModel.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double result;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_cellViewModel;
  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_cellViewModel, v5, 1, 0);
  swift_weakAssign(v3, a1);
  MOSuggestionCollectionViewListCell.cellViewModel.didset();
  *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  return result;
}

void (*MOSuggestionCollectionViewListCell.cellViewModel.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_cellViewModel;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  v3[3] = swift_weakLoadStrong(v5);
  return MOSuggestionCollectionViewListCell.cellViewModel.modify;
}

void MOSuggestionCollectionViewListCell.cellViewModel.modify(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  swift_weakAssign(*(_QWORD *)(*(_QWORD *)a1 + 32) + *(_QWORD *)(*(_QWORD *)a1 + 40), v4);
  if ((a2 & 1) != 0)
  {
    swift_release(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_release(v4);
    MOSuggestionCollectionViewListCell.cellViewModel.didset();
  }
  free(v3);
}

id MOSuggestionCollectionViewListCell.assetView.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_assetView);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_assetView, v3, 0, 0);
  return *v1;
}

void MOSuggestionCollectionViewListCell.assetView.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_assetView);
}

uint64_t (*MOSuggestionCollectionViewListCell.assetView.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_assetView, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id MOSuggestionCollectionViewListCell.addedView.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_addedView);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_addedView, v3, 0, 0);
  return *v1;
}

void MOSuggestionCollectionViewListCell.addedView.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_addedView);
}

uint64_t (*MOSuggestionCollectionViewListCell.addedView.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_addedView, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id MOSuggestionCollectionViewListCell.assetContainerView.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_assetContainerView);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_assetContainerView, v3, 0, 0);
  return *v1;
}

void MOSuggestionCollectionViewListCell.assetContainerView.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_assetContainerView);
}

uint64_t (*MOSuggestionCollectionViewListCell.assetContainerView.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_assetContainerView, a1, 33, 0);
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

Swift::Void __swiftcall MOSuggestionCollectionViewListCell.handleTraitChange()()
{
  _QWORD *v0;
  id v1;
  id v2;
  id v3;

  v3 = (id)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xD0))();
  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "userInterfaceStyle");

  specialized static MOSuggestionTheme.Styles.styleViewAsPlatter(view:traitCollection:)(v3, (uint64_t)v2);
}

uint64_t MOSuggestionCollectionViewListCell.updateConfiguration(using:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v13;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIBackgroundConfiguration?);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  v5 = (char *)&v13 - v4;
  v6 = type metadata accessor for UIBackgroundConfiguration(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  UICollectionViewCell.backgroundConfiguration.getter(v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    static UIBackgroundConfiguration.clear()();
    outlined destroy of UIBackgroundConfiguration?((uint64_t)v5);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
  }
  v11 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  UIBackgroundConfiguration.backgroundColor.setter(v11);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v3, v10, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v3, 0, 1, v6);
  UICollectionViewCell.backgroundConfiguration.setter(v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t MOSuggestionCollectionViewListCell.updateCell(with:)(uint64_t a1)
{
  _QWORD *v1;
  void (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(void (**)(uint64_t))((swift_isaMask & *v1) + 0xC0);
  v3 = swift_retain(a1);
  v2(v3);
  return (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x188))();
}

Swift::Void __swiftcall MOSuggestionCollectionViewListCell.setAssetViewModel()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v1 = v0;
  v2 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0xB8);
  v3 = v2();
  if (v3)
  {
    v4 = v3;
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 808))(1);
    v3 = swift_release(v4);
  }
  v5 = (_QWORD *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x120))(v3);
  v6 = v2();
  (*(void (**)(uint64_t))((swift_isaMask & *v5) + 0xA0))(v6);

  (*(void (**)(void))((swift_isaMask & *v1) + 0x188))();
  (*(void (**)(void))((swift_isaMask & *v1) + 0x180))();
}

Swift::Void __swiftcall MOSuggestionCollectionViewListCell.setPlayButton()()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  _QWORD *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  Class isa;
  uint64_t (*v28)(void);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v1 = v0;
  v2 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_buttonHolder);
  objc_msgSend(v1, "addSubview:", v2);
  v3 = *(_QWORD **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_playButton);
  objc_msgSend(v2, "addArrangedSubview:", v3);
  objc_msgSend(v2, "setCustomSpacing:afterView:", v3, 12.0);
  objc_msgSend(v3, "setUserInteractionEnabled:", 1);
  v4 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_stackView);
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v5 = objc_msgSend(v2, "leadingAnchor");
  v6 = objc_msgSend(v4, "trailingAnchor");
  v7 = objc_msgSend(v5, "constraintEqualToAnchor:", v6);

  objc_msgSend(v7, "setConstant:", 12.0);
  objc_msgSend(v7, "setActive:", 1);

  v8 = objc_msgSend(v2, "superview");
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v10 = objc_msgSend(v2, "trailingAnchor");
    v11 = objc_msgSend(v9, "trailingAnchor");
    v12 = objc_msgSend(v10, "constraintEqualToAnchor:", v11);

    objc_msgSend(v12, "setConstant:", -36.0);
    v13 = v12;
    objc_msgSend(v13, "setActive:", 1);

  }
  v14 = objc_msgSend(v2, "superview");
  if (v14)
  {
    v15 = v14;
    objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v16 = objc_msgSend(v2, "centerYAnchor");
    v17 = objc_msgSend(v15, "centerYAnchor");
    v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

    objc_msgSend(v18, "setConstant:", 0.0);
    v19 = v18;
    objc_msgSend(v19, "setActive:", 1);

  }
  v20 = (void *)objc_opt_self(NSLayoutConstraint);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v22 = swift_allocObject(v21, 40, 7);
  *(_OWORD *)(v22 + 16) = xmmword_10019EDA0;
  v23 = objc_msgSend(v3, "heightAnchor");
  v24 = objc_msgSend(v3, "widthAnchor");
  v25 = objc_msgSend(v23, "constraintEqualToAnchor:", v24);

  *(_QWORD *)(v22 + 32) = v25;
  specialized Array._endMutation()(v26);
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v20, "activateConstraints:", isa, swift_bridgeObjectRelease(v22).n128_f64[0]);

  v28 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0xB8);
  v29 = v28();
  if (!v29)
    goto LABEL_13;
  v30 = v29;
  (*(void (**)(uint64_t))(*(_QWORD *)v29 + 728))(v29);
  v32 = v31;
  swift_release(v30);
  if (!v32)
    goto LABEL_13;
  v33 = swift_bridgeObjectRelease(v32);
  v34 = ((uint64_t (*)(__n128))v28)(v33);
  if (v34)
  {
    v35 = v34;
    v36 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v34 + 776))(v34);
    v37 = swift_release(v35);
    if (v36 == 1)
      goto LABEL_11;
  }
  v38 = v28();
  if (v38
    && (v39 = v38,
        v40 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v38 + 776))(v38),
        v37 = swift_release(v39),
        v40 == 4))
  {
LABEL_11:
    v41 = ((uint64_t (*)(__n128))v28)(v37);
    if (v41)
    {
      v43 = v41;
      v44 = (*(uint64_t (**)(void))(*(_QWORD *)v41 + 728))();
      v46 = v45;
      v42 = swift_release(v43);
    }
    else
    {
      v44 = 0;
      v46 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, __n128))((swift_isaMask & *v3) + 0x60))(v44, v46, v42);
    objc_msgSend(v3, "setHidden:", 0);
  }
  else
  {
LABEL_13:
    objc_msgSend(v3, "setHidden:", 1);
  }
}

Swift::Void __swiftcall MOSuggestionCollectionViewListCell.layoutSubviews()()
{
  _QWORD *v0;
  id v1;
  void *v2;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  objc_super v12;

  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for MOSuggestionCollectionViewListCell();
  v1 = objc_msgSendSuper2(&v12, "layoutSubviews");
  v2 = (void *)(*(uint64_t (**)(id))((swift_isaMask & *v0) + 0x138))(v1);
  v3 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xD0))();
  objc_msgSend(v3, "frame");
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;

  objc_msgSend(v2, "setFrame:", v5, v7, v9, v11);
}

Swift::Void __swiftcall MOSuggestionCollectionViewListCell.setLabels()()
{
  _QWORD *v0;
  uint64_t (*v1)(void);
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  NSString v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;

  v1 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0x108);
  v2 = v1();
  if (v2
    && (v3 = v2,
        v4 = *(id *)(v2 + 16),
        v5 = objc_msgSend(v4, "interfaceType", swift_release(v3).n128_f64[0]),
        v4,
        v5 == (id)4))
  {
    v6 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_subtitleLabel);
    v7 = v1();
    v9 = (NSString)v7;
    if (v7)
    {
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 384))(v7);
      v11 = v10;
      v8 = swift_release(v9).n128_u64[0];
      if (!v11)
      {
        v9 = 0;
        goto LABEL_9;
      }
      v9 = String._bridgeToObjectiveC()();
      v12 = v11;
      goto LABEL_8;
    }
  }
  else
  {
    v6 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_subtitleLabel);
    v13 = v1();
    v9 = (NSString)v13;
    if (v13)
    {
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 376))(v13);
      v15 = v14;
      swift_release(v9);
      v9 = String._bridgeToObjectiveC()();
      v12 = v15;
LABEL_8:
      v8 = swift_bridgeObjectRelease(v12).n128_u64[0];
    }
  }
LABEL_9:
  objc_msgSend(v6, "setText:", v9, *(double *)&v8);

  v16 = specialized static MOSuggestionTheme.Fonts.footnoteShortFont()();
  UILabel.setLineSpacing(lineSpacing:lineHeightMultiple:baselineOffset:font:)(v16, 0.0, 1.0, 0.0);

}

Swift::Void __swiftcall MOSuggestionCollectionViewListCell.setupConstraints()()
{
  _QWORD *v0;
  uint64_t (*v1)(void);
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  uint64_t (*v27)(void);
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  void *v46;
  id v47;
  id v48;
  id v49;
  void *v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(void);
  void *v60;
  id v61;
  void *v62;
  id v63;
  id v64;
  void *v65;
  id v66;
  void *v67;
  id v68;
  id v69;
  void *v70;
  id v71;
  void *v72;
  id v73;
  id v74;
  void *v75;
  id v76;
  void *v77;
  id v78;
  id v79;
  void *v80;
  id v81;
  void *v82;
  id v83;
  id v84;
  uint64_t v85;
  Class isa;

  v1 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0x120);
  v2 = (void *)v1();
  v3 = objc_msgSend(v2, "superview");
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v5 = objc_msgSend(v2, "topAnchor");
    v6 = objc_msgSend(v4, "topAnchor");
    v7 = objc_msgSend(v5, "constraintEqualToAnchor:", v6);

    objc_msgSend(v7, "setConstant:", 0.0);
    if (v7)
    {
      v7 = v7;
      objc_msgSend(v7, "setActive:", 1);

      v2 = v7;
    }

  }
  else
  {
    v7 = 0;
    v4 = v2;
  }

  v8 = (void *)v1();
  v9 = objc_msgSend(v8, "superview");
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v11 = objc_msgSend(v8, "leadingAnchor");
    v12 = objc_msgSend(v10, "leadingAnchor");
    v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

    objc_msgSend(v13, "setConstant:", 0.0);
    if (v13)
    {
      v13 = v13;
      objc_msgSend(v13, "setActive:", 1);

      v8 = v13;
    }

  }
  else
  {
    v13 = 0;
    v10 = v8;
  }

  v14 = (void *)v1();
  v15 = objc_msgSend(v14, "superview");
  if (v15)
  {
    v16 = v15;
    objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v17 = objc_msgSend(v14, "trailingAnchor");
    v18 = objc_msgSend(v16, "trailingAnchor");
    v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

    objc_msgSend(v19, "setConstant:", 0.0);
    if (v19)
    {
      v19 = v19;
      objc_msgSend(v19, "setActive:", 1);

      v14 = v19;
    }

  }
  else
  {
    v19 = 0;
    v16 = v14;
  }

  v20 = (void *)v1();
  v21 = objc_msgSend(v20, "superview");
  if (v21)
  {
    v22 = v21;
    objc_msgSend(v20, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v23 = objc_msgSend(v20, "bottomAnchor");
    v24 = objc_msgSend(v22, "bottomAnchor");
    v25 = objc_msgSend(v23, "constraintEqualToAnchor:", v24);

    if (v25)
    {
      objc_msgSend(v25, "setConstant:", -0.0);
      v25 = v25;
      objc_msgSend(v25, "setActive:", 1);

      v20 = v25;
    }

  }
  else
  {
    v25 = 0;
    v22 = v20;
  }

  v26 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_stackView);
  v27 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0xD0);
  v28 = (void *)v27();
  objc_msgSend(v26, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v29 = objc_msgSend(v26, "leadingAnchor");
  v30 = objc_msgSend(v28, "trailingAnchor");
  v31 = objc_msgSend(v29, "constraintEqualToAnchor:", v30);

  objc_msgSend(v31, "setConstant:", 12.0);
  objc_msgSend(v31, "setActive:", 1);

  v32 = objc_msgSend(v26, "superview");
  if (v32)
  {
    v33 = v32;
    objc_msgSend(v26, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v34 = objc_msgSend(v26, "centerYAnchor");
    v35 = objc_msgSend(v33, "centerYAnchor");
    v36 = objc_msgSend(v34, "constraintEqualToAnchor:", v35);

    objc_msgSend(v36, "setConstant:", 0.0);
    v37 = v36;
    objc_msgSend(v37, "setActive:", 1);

  }
  v38 = (void *)v27();
  v39 = objc_msgSend(v38, "superview");
  if (v39)
  {
    v40 = v39;
    objc_msgSend(v38, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v41 = objc_msgSend(v38, "topAnchor");
    v42 = objc_msgSend(v40, "topAnchor");
    v43 = objc_msgSend(v41, "constraintEqualToAnchor:", v42);

    objc_msgSend(v43, "setConstant:", 4.0);
    if (v43)
    {
      v43 = v43;
      objc_msgSend(v43, "setActive:", 1);

      v38 = v43;
    }

  }
  else
  {
    v43 = 0;
    v40 = v38;
  }

  v44 = (void *)v27();
  v45 = objc_msgSend(v44, "superview");
  if (v45)
  {
    v46 = v45;
    objc_msgSend(v44, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v47 = objc_msgSend(v44, "bottomAnchor");
    v48 = objc_msgSend(v46, "bottomAnchor");
    v49 = objc_msgSend(v47, "constraintEqualToAnchor:", v48);

    if (v49)
    {
      objc_msgSend(v49, "setConstant:", -4.0);
      v49 = v49;
      objc_msgSend(v49, "setActive:", 1);

      v44 = v49;
    }

  }
  else
  {
    v49 = 0;
    v46 = v44;
  }

  v50 = (void *)v27();
  v51 = objc_msgSend(v50, "superview");
  if (v51)
  {
    v52 = v51;
    objc_msgSend(v50, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v53 = objc_msgSend(v50, "leadingAnchor");
    v54 = objc_msgSend(v52, "leadingAnchor");
    v55 = objc_msgSend(v53, "constraintEqualToAnchor:", v54);

    objc_msgSend(v55, "setConstant:", 4.0);
    if (v55)
    {
      v55 = v55;
      objc_msgSend(v55, "setActive:", 1);

      v50 = v55;
    }

  }
  else
  {
    v55 = 0;
    v52 = v50;
  }

  v56 = (void *)objc_opt_self(NSLayoutConstraint);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v58 = swift_allocObject(v57, 72, 7);
  *(_OWORD *)(v58 + 16) = xmmword_1001A0A10;
  v59 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0x150);
  v60 = (void *)v59();
  v61 = objc_msgSend(v60, "heightAnchor");

  v62 = (void *)v59();
  v63 = objc_msgSend(v62, "widthAnchor");

  v64 = objc_msgSend(v61, "constraintEqualToAnchor:", v63);
  *(_QWORD *)(v58 + 32) = v64;
  v65 = (void *)v59();
  v66 = objc_msgSend(v65, "topAnchor");

  v67 = (void *)v27();
  v68 = objc_msgSend(v67, "topAnchor");

  v69 = objc_msgSend(v66, "constraintEqualToAnchor:constant:", v68, 4.0);
  *(_QWORD *)(v58 + 40) = v69;
  v70 = (void *)v59();
  v71 = objc_msgSend(v70, "leadingAnchor");

  v72 = (void *)v27();
  v73 = objc_msgSend(v72, "leadingAnchor");

  v74 = objc_msgSend(v71, "constraintEqualToAnchor:constant:", v73, 4.0);
  *(_QWORD *)(v58 + 48) = v74;
  v75 = (void *)v59();
  v76 = objc_msgSend(v75, "trailingAnchor");

  v77 = (void *)v27();
  v78 = objc_msgSend(v77, "trailingAnchor");

  v79 = objc_msgSend(v76, "constraintEqualToAnchor:constant:", v78, -4.0);
  *(_QWORD *)(v58 + 56) = v79;
  v80 = (void *)v59();
  v81 = objc_msgSend(v80, "bottomAnchor");

  v82 = (void *)v27();
  v83 = objc_msgSend(v82, "bottomAnchor");

  v84 = objc_msgSend(v81, "constraintEqualToAnchor:constant:", v83, -4.0);
  *(_QWORD *)(v58 + 64) = v84;
  specialized Array._endMutation()(v85);
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v56, "activateConstraints:", isa, swift_bridgeObjectRelease(v58).n128_f64[0]);

}

id MOSuggestionCollectionViewListCell.hitTest(_:with:)(uint64_t a1, double a2, double a3)
{
  void *v3;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  objc_super v12;

  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for MOSuggestionCollectionViewListCell();
  v7 = objc_msgSendSuper2(&v12, "hitTest:withEvent:", a1, a2, a3);
  if (v7)
  {
    v8 = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for UIButton, UIButton_ptr);
    if ((objc_msgSend(v7, "isKindOfClass:", swift_getObjCClassFromMetadata(v8)) & 1) == 0)
    {
      v9 = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for PHLivePhotoView, PHLivePhotoView_ptr);
      if ((objc_msgSend(v7, "isKindOfClass:", swift_getObjCClassFromMetadata(v9)) & 1) == 0)
      {

        v10 = v3;
        return v3;
      }
    }
  }
  return v7;
}

Swift::Void __swiftcall MOSuggestionCollectionViewListCell.prepareForReuse()()
{
  _QWORD *v0;
  void *v1;
  NSString v2;
  void *v3;
  NSString v4;
  uint64_t v5;
  _QWORD *v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for MOSuggestionCollectionViewListCell();
  objc_msgSendSuper2(&v7, "prepareForReuse");
  v1 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_titleLabel);
  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setText:", v2);

  v3 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_subtitleLabel);
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "setText:", v4);

  v5 = (*(uint64_t (**)(_QWORD))((swift_isaMask & *v0) + 0x110))(0);
  v6 = (_QWORD *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x120))(v5);
  (*(void (**)(_QWORD))((swift_isaMask & *v6) + 0xA0))(0);

}

id MOSuggestionCollectionViewListCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionCollectionViewListCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

char *specialized MOSuggestionCollectionViewListCell.init(frame:)()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void (__swiftcall **v14)();
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  double y;
  double width;
  double height;
  char *v27;
  char *v28;
  void *v29;
  char *v30;
  void *v31;
  uint64_t v32;
  id *v33;
  id *v34;
  id *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v43;
  char v44[24];
  char v45[24];
  char v46[24];
  objc_super v47;

  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_assetViewModel] = 0;
  v1 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_titleLabel;
  v2 = v0;
  *(_QWORD *)&v0[v1] = closure #1 in variable initialization expression of MOSuggestionCollectionViewListCell.titleLabel((SEL *)&selRef_labelColor);
  v3 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_subtitleLabel;
  *(_QWORD *)&v2[v3] = closure #1 in variable initialization expression of MOSuggestionCollectionViewListCell.titleLabel((SEL *)&selRef_secondaryLabelColor);
  v4 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_stackView;
  v5 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v5, "setAxis:", 1);
  objc_msgSend(v5, "setAlignment:", 1);
  objc_msgSend(v5, "setDistribution:", 0);
  *(_QWORD *)&v2[v4] = v5;
  v6 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_buttonHolder;
  v7 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v7, "setAxis:", 0);
  objc_msgSend(v7, "setAlignment:", 3);
  objc_msgSend(v7, "setDistribution:", 0);
  *(_QWORD *)&v2[v6] = v7;
  v8 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_platterView;
  v9 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v10 = objc_msgSend(v9, "traitCollection");
  v11 = objc_msgSend(v10, "userInterfaceStyle");

  specialized static MOSuggestionTheme.Styles.styleViewAsPlatter(view:traitCollection:)(v9, (uint64_t)v11);
  *(_QWORD *)&v2[v8] = v9;
  v12 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_playButton;
  v13 = type metadata accessor for MOSuggestionSheetListPlayButton();
  *(_QWORD *)&v2[v12] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v13)), "init");
  v14 = (void (__swiftcall **)())&v2[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_accessoryButtonAction];
  *v14 = MOSuggestionInterstitialExpandableListViewCellConstants.init();
  v14[1] = 0;
  swift_weakInit(&v2[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_cellViewModel]);
  v15 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_assetView;
  v16 = type metadata accessor for MOSuggestionSheetAssetView();
  *(_QWORD *)&v2[v15] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v16)), "init");
  v17 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_addedView;
  v18 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MOSuggestionAddedView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v18[OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_symbolOnly] = 1;
  v19 = v18;
  objc_msgSend(v19, "setClipsToBounds:", 1);
  MOSuggestionAddedView.initAddedView()();

  *(_QWORD *)&v2[v17] = v19;
  v20 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_assetContainerView;
  v21 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v22 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v21, "setBackgroundColor:", v22);

  objc_msgSend(v21, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v23 = objc_msgSend(v21, "layer");
  objc_msgSend(v23, "setMaskedCorners:", 1);

  objc_msgSend(v21, "setClipsToBounds:", 1);
  *(_QWORD *)&v2[v20] = v21;

  y = CGRectZero.origin.y;
  width = CGRectZero.size.width;
  height = CGRectZero.size.height;
  v47.receiver = v2;
  v47.super_class = (Class)type metadata accessor for MOSuggestionCollectionViewListCell();
  v27 = (char *)objc_msgSendSuper2(&v47, "initWithFrame:", CGRectZero.origin.x, y, width, height);
  v28 = &v27[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_assetView];
  swift_beginAccess(&v27[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_assetView], v46, 0, 0);
  v29 = *(void **)v28;
  v30 = v27;
  objc_msgSend(v29, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v31 = *(void **)&v30[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_stackView];
  v32 = *(_QWORD *)&v30[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_titleLabel];
  objc_msgSend(v31, "addArrangedSubview:", v32);
  objc_msgSend(v31, "addArrangedSubview:", *(_QWORD *)&v30[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_subtitleLabel]);
  objc_msgSend(v31, "setCustomSpacing:afterView:", v32, 0.0);
  v33 = (id *)&v30[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_platterView];
  objc_msgSend(v30, "addSubview:", *(_QWORD *)&v30[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_platterView], swift_beginAccess(&v30[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_platterView], v45, 0, 0).n128_f64[0]);
  objc_msgSend(v30, "addSubview:", v31);
  v34 = (id *)&v30[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_assetContainerView];
  objc_msgSend(v30, "addSubview:", *(_QWORD *)&v30[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_assetContainerView], swift_beginAccess(&v30[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_assetContainerView], v44, 0, 0).n128_f64[0]);
  v35 = (id *)&v30[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_addedView];
  objc_msgSend(v30, "addSubview:", *(_QWORD *)&v30[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_addedView], swift_beginAccess(&v30[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_addedView], &v43, 0, 0).n128_f64[0]);
  objc_msgSend(*v33, "addSubview:", *v34);
  v36 = objc_msgSend(*v34, "addSubview:", *(_QWORD *)v28);
  v37 = (*(uint64_t (**)(id))((swift_isaMask & *(_QWORD *)v30) + 0x190))(v36);
  (*(void (**)(uint64_t))((swift_isaMask & *(_QWORD *)v30) + 0x180))(v37);
  objc_msgSend(v30, "setClipsToBounds:", 0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UITraitDefinition.Type>);
  v39 = swift_allocObject(v38, 48, 7);
  *(_OWORD *)(v39 + 16) = xmmword_10019ED20;
  *(_QWORD *)(v39 + 32) = type metadata accessor for UITraitUserInterfaceStyle(0);
  *(_QWORD *)(v39 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  v40 = v30;
  v41 = UIView.registerForTraitChanges(_:action:)(v39, "handleTraitChange");
  swift_unknownObjectRelease(v41);

  objc_msgSend(*v35, "setHidden:", 1, swift_bridgeObjectRelease(v39).n128_f64[0]);
  (*(void (**)(_QWORD, _QWORD))((swift_isaMask & *(_QWORD *)v40) + 0x100))(0, 0);

  return v40;
}

void specialized MOSuggestionCollectionViewListCell.init(coder:)()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void (__swiftcall **v14)();
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;

  v1 = v0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_assetViewModel] = 0;
  v2 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_titleLabel;
  *(_QWORD *)&v1[v2] = closure #1 in variable initialization expression of MOSuggestionCollectionViewListCell.titleLabel((SEL *)&selRef_labelColor);
  v3 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_subtitleLabel;
  *(_QWORD *)&v1[v3] = closure #1 in variable initialization expression of MOSuggestionCollectionViewListCell.titleLabel((SEL *)&selRef_secondaryLabelColor);
  v4 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_stackView;
  v5 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v5, "setAxis:", 1);
  objc_msgSend(v5, "setAlignment:", 1);
  objc_msgSend(v5, "setDistribution:", 0);
  *(_QWORD *)&v1[v4] = v5;
  v6 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_buttonHolder;
  v7 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v7, "setAxis:", 0);
  objc_msgSend(v7, "setAlignment:", 3);
  objc_msgSend(v7, "setDistribution:", 0);
  *(_QWORD *)&v1[v6] = v7;
  v8 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_platterView;
  v9 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v10 = objc_msgSend(v9, "traitCollection");
  v11 = objc_msgSend(v10, "userInterfaceStyle");

  specialized static MOSuggestionTheme.Styles.styleViewAsPlatter(view:traitCollection:)(v9, (uint64_t)v11);
  *(_QWORD *)&v1[v8] = v9;
  v12 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_playButton;
  v13 = type metadata accessor for MOSuggestionSheetListPlayButton();
  *(_QWORD *)&v1[v12] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v13)), "init");
  v14 = (void (__swiftcall **)())&v1[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_accessoryButtonAction];
  *v14 = MOSuggestionInterstitialExpandableListViewCellConstants.init();
  v14[1] = 0;
  swift_weakInit(&v1[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_cellViewModel]);
  v15 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_assetView;
  v16 = type metadata accessor for MOSuggestionSheetAssetView();
  *(_QWORD *)&v1[v15] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v16)), "init");
  v17 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_addedView;
  v18 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MOSuggestionAddedView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v18[OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_symbolOnly] = 1;
  v19 = v18;
  objc_msgSend(v19, "setClipsToBounds:", 1);
  MOSuggestionAddedView.initAddedView()();

  *(_QWORD *)&v1[v17] = v19;
  v20 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_assetContainerView;
  v21 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v22 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v21, "setBackgroundColor:", v22);

  objc_msgSend(v21, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v23 = objc_msgSend(v21, "layer");
  objc_msgSend(v23, "setMaskedCorners:", 1);

  objc_msgSend(v21, "setClipsToBounds:", 1);
  *(_QWORD *)&v1[v20] = v21;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionCollectionViewListCell.swift", 57, 2, 140, 0);
  __break(1u);
}

uint64_t outlined destroy of UIBackgroundConfiguration?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIBackgroundConfiguration?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for MOSuggestionCollectionViewListCell()
{
  return objc_opt_self(_TtC16MomentsUIService34MOSuggestionCollectionViewListCell);
}

uint64_t sub_10009187C@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xB8))();
  *a2 = result;
  return result;
}

uint64_t sub_1000918BC(_QWORD *a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0xC0);
  v3 = swift_retain(*a1);
  return v2(v3);
}

uint64_t sub_1000918FC@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xD0))();
  *a2 = result;
  return result;
}

uint64_t sub_10009193C(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0xD8))(*a1);
}

uint64_t sub_10009197C@<X0>(_QWORD **a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xE8))();
  v5 = v4;
  result = swift_allocObject(&unk_1001E74B8, 32, 7);
  *(_QWORD *)(result + 16) = v3;
  *(_QWORD *)(result + 24) = v5;
  *a2 = partial apply for thunk for @escaping @callee_guaranteed () -> (@out ());
  a2[1] = (uint64_t (*)())result;
  return result;
}

uint64_t sub_1000919F0@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x108))();
  *a2 = result;
  return result;
}

uint64_t sub_100091A30(_QWORD *a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0x110);
  v3 = swift_retain(*a1);
  return v2(v3);
}

uint64_t sub_100091A70@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x120))();
  *a2 = result;
  return result;
}

uint64_t sub_100091AB0(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x128))(*a1);
}

uint64_t sub_100091AF0@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x138))();
  *a2 = result;
  return result;
}

uint64_t sub_100091B30(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x140))(*a1);
}

uint64_t sub_100091B70@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x150))();
  *a2 = result;
  return result;
}

uint64_t sub_100091BB0(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x158))(*a1);
}

uint64_t sub_100091BF0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t specialized Dictionary.init(dictionaryLiteral:)(uint64_t a1)
{
  return specialized Dictionary.init(dictionaryLiteral:)(a1, &demangling cache variable for type metadata for _DictionaryStorage<NSAttributedStringKey, Any>, &demangling cache variable for type metadata for (NSAttributedStringKey, Any), (uint64_t (*)(uint64_t))specialized __RawDictionaryStorage.find<A>(_:));
}

{
  return specialized Dictionary.init(dictionaryLiteral:)(a1, &demangling cache variable for type metadata for _DictionaryStorage<UIFontDescriptorTraitKey, Any>, &demangling cache variable for type metadata for (UIFontDescriptorTraitKey, Any), (uint64_t (*)(uint64_t))specialized __RawDictionaryStorage.find<A>(_:));
}

{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void **v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<String, NSObject>);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (void **)(a1 + 48);
  while (1)
  {
    v7 = (uint64_t)*(v6 - 2);
    v8 = (uint64_t)*(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    v10 = v9;
    result = specialized __RawDictionaryStorage.find<A>(_:)(v7, v8);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v4[6] + 16 * result);
    *v13 = v7;
    v13[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v10;
    v14 = v4[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v4[2] = v16;
    v6 += 3;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UUID, [AnyHashable : Any]?));
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v23 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v23);
    return (unint64_t)v8;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<UUID, [AnyHashable : Any]?>);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    outlined init with copy of Date?(v13, (uint64_t)v5, &demangling cache variable for type metadata for (UUID, [AnyHashable : Any]?));
    result = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for UUID(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v5, v19);
    *(_QWORD *)(v8[7] + 8 * v17) = *(_QWORD *)&v5[v10];
    v20 = v8[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_12;
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v23 = v25;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<MOUsageContextType, [UUID : [AnyHashable : Any]?]>);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v7 = *v6;
    v8 = (id)*(v6 - 1);
    swift_bridgeObjectRetain(v7);
    result = specialized __RawDictionaryStorage.find<A>(_:)(v8);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = 8 * result;
    *(_QWORD *)(v4[6] + v11) = v8;
    *(_QWORD *)(v4[7] + v11) = v7;
    v12 = v4[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v4[2] = v14;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void **v6;
  void *v7;
  id v8;
  id v9;
  unint64_t result;
  char v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<NSAttributedStringKey, UIFont>);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (void **)(a1 + 40);
  while (1)
  {
    v7 = *v6;
    v8 = *(v6 - 1);
    v9 = v7;
    result = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = 8 * result;
    *(_QWORD *)(v4[6] + v12) = v8;
    *(_QWORD *)(v4[7] + v12) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<UIFontDescriptorTraitKey, UIFontWeight>);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v7 = *v6;
    v8 = (id)*(v6 - 1);
    result = specialized __RawDictionaryStorage.find<A>(_:)(v8);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = 8 * result;
    *(_QWORD *)(v4[6] + v11) = v8;
    *(_QWORD *)(v4[7] + v11) = v7;
    v12 = v4[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v4[2] = v14;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  return specialized Dictionary.init(dictionaryLiteral:)(a1, &demangling cache variable for type metadata for _DictionaryStorage<UIFontDescriptorAttributeName, Any>, &demangling cache variable for type metadata for (UIFontDescriptorAttributeName, Any), specialized __RawDictionaryStorage.find<A>(_:));
}

{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<UIFontDescriptorFeatureKey, Int>);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v7 = *v6;
    v8 = (id)*(v6 - 1);
    result = specialized __RawDictionaryStorage.find<A>(_:)(v8);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = 8 * result;
    *(_QWORD *)(v4[6] + v11) = v8;
    *(_QWORD *)(v4[7] + v11) = v7;
    v12 = v4[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v6 += 2;
    v4[2] = v14;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<String, Any>);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    outlined init with copy of Date?(v7, (uint64_t)&v16, &demangling cache variable for type metadata for (String, Any));
    v8 = v16;
    v9 = v17;
    result = specialized __RawDictionaryStorage.find<A>(_:)(v16, v17);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v8;
    v12[1] = v9;
    result = (unint64_t)outlined init with take of Any(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 48;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<MOSuggestionAssetAnalytics.AssetTransferEvent.EventFields, MOSuggestionAssetsType>);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (id *)(a1 + 40);
  while (1)
  {
    v7 = *((unsigned __int8 *)v6 - 8);
    v8 = *v6;
    result = specialized __RawDictionaryStorage.find<A>(_:)(v7);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v4[6] + result) = v7;
    *(_QWORD *)(v4[7] + 8 * result) = v8;
    v11 = v4[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4[2] = v13;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  return specialized Dictionary.init(dictionaryLiteral:)(a1, &demangling cache variable for type metadata for _DictionaryStorage<CIContextOption, Any>, &demangling cache variable for type metadata for (CIContextOption, Any), specialized __RawDictionaryStorage.find<A>(_:));
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UUID, (Bool, Bool)));
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v25 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v25);
    return (unint64_t)v8;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<UUID, (Bool, Bool)>);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = &v5[*(int *)(v2 + 48)];
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v27 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    outlined init with copy of Date?(v13, (uint64_t)v5, &demangling cache variable for type metadata for (UUID, (Bool, Bool)));
    result = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for UUID(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v5, v19);
    v20 = (char *)(v8[7] + 2 * v17);
    v21 = v10[1];
    *v20 = *v10;
    v20[1] = v21;
    v22 = v8[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_12;
    v8[2] = v24;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v25 = v27;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  id *v6;
  char v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<MOSuggestionAssetsType, MOSuggestionAssetVisualSubType>);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (id *)(a1 + 40);
  while (1)
  {
    v7 = *(_BYTE *)v6;
    v8 = *(v6 - 1);
    result = specialized __RawDictionaryStorage.find<A>(_:)(v8);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v4[6] + 8 * result) = v8;
    *(_BYTE *)(v4[7] + result) = v7;
    v11 = v4[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4[2] = v13;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  return specialized Dictionary.init(dictionaryLiteral:)(a1, &demangling cache variable for type metadata for _DictionaryStorage<UIApplicationOpenExternalURLOptionsKey, Any>, &demangling cache variable for type metadata for (UIApplicationOpenExternalURLOptionsKey, Any), specialized __RawDictionaryStorage.find<A>(_:));
}

{
  return specialized Dictionary.init(dictionaryLiteral:)(a1, &demangling cache variable for type metadata for _DictionaryStorage<MOSuggestionAssetMetadataKey, Any>, &demangling cache variable for type metadata for (MOSuggestionAssetMetadataKey, Any), specialized __RawDictionaryStorage.find<A>(_:));
}

{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<MOSuggestionAssetMetadataKey, Any?>);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    outlined init with copy of Date?(v7, (uint64_t)&v14, &demangling cache variable for type metadata for (MOSuggestionAssetMetadataKey, Any?));
    v8 = v14;
    result = specialized __RawDictionaryStorage.find<A>(_:)(v14);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v4[6] + 8 * result) = v8;
    result = outlined init with take of Date?((uint64_t)&v15, v4[7] + 32 * result, &demangling cache variable for type metadata for Any?);
    v11 = v4[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4[2] = v13;
    v7 += 40;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  Swift::UInt v7;
  char v8;
  uint64_t v9;
  id v10;
  unint64_t result;
  char v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<MOAssetAndMediaType, Int>);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(v1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(v1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v17 = v1;
  v6 = (_QWORD *)(v1 + 56);
  while (1)
  {
    v7 = *(v6 - 2);
    v8 = *((_BYTE *)v6 - 8);
    v9 = *v6;
    v10 = (id)*(v6 - 3);
    result = specialized __RawDictionaryStorage.find<A>(_:)(v10, v7, v8);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = v4[6] + 24 * result;
    *(_QWORD *)v13 = v10;
    *(_QWORD *)(v13 + 8) = v7;
    *(_BYTE *)(v13 + 16) = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v9;
    v14 = v4[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v6 += 4;
    v4[2] = v16;
    if (!--v5)
    {
      swift_release(v4);
      v1 = v17;
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t result;
  char v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (String, URL));
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v26 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v26);
    return (unint64_t)v8;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<String, URL>);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = (char *)v5 + *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v28 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    outlined init with copy of Date?(v13, (uint64_t)v5, &demangling cache variable for type metadata for (String, URL));
    v15 = *v5;
    v16 = v5[1];
    result = specialized __RawDictionaryStorage.find<A>(_:)(*v5, v16);
    if ((v18 & 1) != 0)
      break;
    v19 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v20 = (uint64_t *)(v8[6] + 16 * result);
    *v20 = v15;
    v20[1] = v16;
    v21 = v8[7];
    v22 = type metadata accessor for URL(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v19, v10, v22);
    v23 = v8[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_12;
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v26 = v28;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<String, Double>);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v7 = *(v6 - 2);
    v8 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    result = specialized __RawDictionaryStorage.find<A>(_:)(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v6 += 3;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<String, String?>);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (_QWORD *)(a1 + 56);
  while (1)
  {
    v7 = *(v6 - 3);
    v8 = *(v6 - 2);
    v10 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(*v6);
    swift_bridgeObjectRetain(v8);
    result = specialized __RawDictionaryStorage.find<A>(_:)(v7, v8);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v4[6] + 16 * result);
    *v13 = v7;
    v13[1] = v8;
    v14 = (_QWORD *)(v4[7] + 16 * result);
    *v14 = v10;
    v14[1] = v9;
    v15 = v4[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v6 += 4;
    v4[2] = v17;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (String, Date?));
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v25 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v25);
    return (unint64_t)v8;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<String, Date?>);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = (uint64_t)v5 + *(int *)(v2 + 48);
  v26 = a1;
  v27 = v10;
  v11 = v7 + 64;
  v12 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    outlined init with copy of Date?(v12, (uint64_t)v5, &demangling cache variable for type metadata for (String, Date?));
    v14 = *v5;
    v15 = v5[1];
    result = specialized __RawDictionaryStorage.find<A>(_:)(*v5, v15);
    if ((v17 & 1) != 0)
      break;
    v18 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v19 = (uint64_t *)(v8[6] + 16 * result);
    *v19 = v14;
    v19[1] = v15;
    v20 = v8[7];
    v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    result = outlined init with take of Date?(v27, v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v18, (uint64_t *)&demangling cache variable for type metadata for Date?);
    v22 = v8[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_12;
    v8[2] = v24;
    v12 += v13;
    if (!--v9)
    {
      swift_release(v8);
      v25 = v26;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<AnyHashable, Any>);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    outlined init with copy of Date?(v7, (uint64_t)v16, &demangling cache variable for type metadata for (AnyHashable, Any));
    result = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v16);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v10 = v4[6] + 40 * result;
    v11 = v16[0];
    v12 = v16[1];
    *(_QWORD *)(v10 + 32) = v17;
    *(_OWORD *)v10 = v11;
    *(_OWORD *)(v10 + 16) = v12;
    result = (unint64_t)outlined init with take of Any(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 72;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *i;
  unsigned __int8 v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<MOSuggestionAssetVisualSubType, Int>);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
    for (i = (_QWORD *)(a1 + 40); ; i += 2)
    {
      v5 = *((_BYTE *)i - 8);
      v6 = *i;
      result = specialized __RawDictionaryStorage.find<A>(_:)(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v3[6] + result) = v5;
      *(_QWORD *)(v3[7] + 8 * result) = v6;
      v9 = v3[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v3[2] = v11;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

{
  uint64_t v1;
  _QWORD *v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char v16;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<MOSuggestionAssetVisualSubType, String>);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  v4 = *(_BYTE *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  result = specialized __RawDictionaryStorage.find<A>(_:)(v4);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain(v5);
    return (unint64_t)v3;
  }
  v9 = (_QWORD *)(a1 + 72);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    v10 = (_QWORD *)(v3[7] + 16 * result);
    *v10 = v6;
    v10[1] = v5;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    if (!--v1)
      goto LABEL_8;
    v14 = v9 + 3;
    v4 = *((_BYTE *)v9 - 16);
    v6 = *(v9 - 1);
    v15 = *v9;
    swift_bridgeObjectRetain(v5);
    result = specialized __RawDictionaryStorage.find<A>(_:)(v4);
    v9 = v14;
    v5 = v15;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

{
  uint64_t v1;
  _QWORD *v3;
  unsigned __int8 v4;
  void *v5;
  unint64_t result;
  char v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  char v15;
  id v16;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<MOSuggestionAssetVisualSubType, MOSuggestionAssetsType>);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  v4 = *(_BYTE *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  result = specialized __RawDictionaryStorage.find<A>(_:)(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    v16 = v5;
    return (unint64_t)v3;
  }
  v8 = (_QWORD *)(a1 + 56);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    *(_QWORD *)(v3[7] + 8 * result) = v5;
    v9 = v3[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      break;
    v3[2] = v11;
    if (!--v1)
      goto LABEL_8;
    v12 = v8 + 2;
    v4 = *((_BYTE *)v8 - 8);
    v13 = (void *)*v8;
    v14 = v5;
    result = specialized __RawDictionaryStorage.find<A>(_:)(v4);
    v8 = v12;
    v5 = v13;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *i;
  char v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<MOSuggestionAssetTileSize, CGFloat>);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
    for (i = (_QWORD *)(a1 + 40); ; i += 2)
    {
      v5 = *((_BYTE *)i - 8);
      v6 = *i;
      result = specialized __RawDictionaryStorage.find<A>(_:)(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v3[6] + result) = v5;
      *(_QWORD *)(v3[7] + 8 * result) = v6;
      v9 = v3[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v3[2] = v11;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t specialized Dictionary.init(dictionaryLiteral:)(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
    v9 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = static _DictionaryStorage.allocate(capacity:)(v5);
  v9 = (_QWORD *)v8;
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v9;
  }
  v11 = v8 + 64;
  v12 = a1 + 32;
  swift_retain(v8);
  while (1)
  {
    outlined init with copy of Date?(v12, (uint64_t)&v19, a3);
    v13 = v19;
    result = a4(v19);
    if ((v15 & 1) != 0)
      break;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v9[6] + 8 * result) = v13;
    result = (unint64_t)outlined init with take of Any(&v20, (_OWORD *)(v9[7] + 32 * result));
    v16 = v9[2];
    v17 = __OFADD__(v16, 1);
    v18 = v16 + 1;
    if (v17)
      goto LABEL_11;
    v9[2] = v18;
    v12 += 40;
    if (!--v10)
    {
      swift_release(v9);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t MONotificationAnalytics.NotificationEngagementEvent.init(bundle:notificationActivityTrigger:suggestionID:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = a2;
  *(_BYTE *)(a5 + 8) = result != 0;
  *(_QWORD *)(a5 + 16) = result;
  *(_QWORD *)(a5 + 24) = a3;
  *(_QWORD *)(a5 + 32) = a4;
  return result;
}

Swift::Void __swiftcall MONotificationAnalytics.NotificationEngagementEvent.send()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, _QWORD, uint64_t);
  _QWORD *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t inited;
  id v26;
  id v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  id v33;
  NSString v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  NSString v40;
  uint64_t v41;
  id v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  NSString v47;
  id v48;
  char isUniquelyReferenced_nonNull_native;
  char *v50;
  uint64_t v51;
  char v52;
  id v53;
  char v54;
  uint64_t v55;
  char v56;
  id v57;
  char v58;
  uint64_t v59;
  char v60;
  id v61;
  char v62;
  uint64_t v63;
  char v64;
  id v65;
  char v66;
  uint64_t v67;
  char v68;
  id v69;
  char v70;
  NSString v71;
  void *v72;
  uint64_t v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  char *v88;
  uint64_t v89;
  _QWORD aBlock[5];
  uint64_t v91;
  char v92[88];

  v78 = type metadata accessor for UUID(0);
  v76 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v77 = (char *)&v75 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1 = type metadata accessor for DateComponents(0);
  v85 = *(_QWORD *)(v1 - 8);
  v86 = v1;
  __chkstk_darwin(v1);
  v88 = (char *)&v75 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Calendar(0);
  v83 = *(_QWORD *)(v3 - 8);
  v84 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Date(0);
  v81 = *(_QWORD *)(v6 - 8);
  v82 = v6;
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = static Date.now.getter(v7);
  static Calendar.current.getter(v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Calendar.Component>);
  v12 = type metadata accessor for Calendar.Component(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = *(unsigned __int8 *)(v13 + 80);
  v16 = (v15 + 32) & ~v15;
  v17 = swift_allocObject(v11, v16 + 5 * v14, v15 | 7);
  *(_OWORD *)(v17 + 16) = xmmword_1001A01D0;
  v18 = v17 + v16;
  v19 = *(void (**)(uint64_t, _QWORD, uint64_t))(v13 + 104);
  v19(v18, enum case for Calendar.Component.year(_:), v12);
  v19(v18 + v14, enum case for Calendar.Component.month(_:), v12);
  v19(v18 + 2 * v14, enum case for Calendar.Component.day(_:), v12);
  v20 = v87;
  v19(v18 + 3 * v14, enum case for Calendar.Component.hour(_:), v12);
  v19(v18 + 4 * v14, enum case for Calendar.Component.minute(_:), v12);
  v21 = specialized Set.init(_nonEmptyArrayLiteral:)(v17);
  swift_setDeallocating(v17);
  swift_arrayDestroy(v18, 5, v12);
  swift_deallocClassInstance(v17, 32, 7);
  v79 = v5;
  v80 = v9;
  Calendar.dateComponents(_:from:)(v21, v9);
  swift_bridgeObjectRelease(v21);
  v22 = swift_allocObject(&unk_1001E74F0, 24, 7);
  v23 = (void *)v20[2];
  v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, NSObject)>);
  if (v23)
  {
    inited = swift_initStackObject(v24, &v89);
    *(_OWORD *)(inited + 16) = xmmword_1001A02E0;
    strcpy((char *)(inited + 32), "suggestionID");
    *(_BYTE *)(inited + 45) = 0;
    *(_WORD *)(inited + 46) = -5120;
    v26 = v23;
    v27 = objc_msgSend(v26, "suggestionID");
    v28 = v77;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v27);

    UUID.uuidString.getter();
    v30 = v29;
    v31 = *(void (**)(char *, uint64_t))(v76 + 8);
    v32 = v78;
    v31(v28, v78);
    v33 = objc_allocWithZone((Class)NSString);
    v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v30);
    v35 = objc_msgSend(v33, "initWithString:", v34);

    *(_QWORD *)(inited + 48) = v35;
    *(_QWORD *)(inited + 56) = 0x4449656C646E7562;
    *(_QWORD *)(inited + 64) = 0xE800000000000000;
    v36 = objc_msgSend(v26, "bundleIdentifier");
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v36);

    UUID.uuidString.getter();
    v38 = v37;
    v31(v28, v32);
    v39 = objc_allocWithZone((Class)NSString);
    v40 = String._bridgeToObjectiveC()();
    v41 = v38;
    v20 = v87;
    swift_bridgeObjectRelease(v41);
    v42 = objc_msgSend(v39, "initWithString:", v40);

    *(_QWORD *)(inited + 72) = v42;
    *(_QWORD *)(inited + 80) = 0x65707954627573;
    *(_QWORD *)(inited + 88) = 0xE700000000000000;
    *(_QWORD *)(inited + 96) = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithUnsignedInteger:", objc_msgSend(v26, "bundleSubType"));
    *(_QWORD *)(inited + 104) = 0x7079547265707573;
    *(_QWORD *)(inited + 112) = 0xE900000000000065;
    *(_QWORD *)(inited + 120) = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithUnsignedInteger:", objc_msgSend(v26, "bundleSuperType"));
    strcpy((char *)(inited + 128), "interfaceType");
    *(_WORD *)(inited + 142) = -4864;
    *(_QWORD *)(inited + 144) = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithUnsignedInteger:", objc_msgSend(v26, "interfaceType"));
    *(_QWORD *)(inited + 152) = 0xD000000000000018;
    *(_QWORD *)(inited + 160) = 0x80000001001A5F00;
    *(_QWORD *)(inited + 168) = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithUnsignedInteger:", *v20);
    *(_QWORD *)(inited + 176) = 0xD00000000000001ALL;
    *(_QWORD *)(inited + 184) = 0x80000001001A5F20;
    *(_QWORD *)(inited + 192) = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", *((unsigned __int8 *)v20 + 8));
    v43 = specialized Dictionary.init(dictionaryLiteral:)(inited);

  }
  else
  {
    v44 = swift_initStackObject(v24, v92);
    *(_OWORD *)(v44 + 16) = xmmword_10019EEE0;
    *(_QWORD *)(v44 + 32) = 0xD000000000000018;
    *(_QWORD *)(v44 + 40) = 0x80000001001A5F00;
    *(_QWORD *)(v44 + 48) = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithUnsignedInteger:", *v20);
    *(_QWORD *)(v44 + 56) = 0xD00000000000001ALL;
    *(_QWORD *)(v44 + 64) = 0x80000001001A5F20;
    *(_QWORD *)(v44 + 72) = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", *((unsigned __int8 *)v20 + 8));
    v43 = specialized Dictionary.init(dictionaryLiteral:)(v44);
  }
  *(_QWORD *)(v22 + 16) = v43;
  v45 = v20[4];
  if (v45)
  {
    v46 = objc_allocWithZone((Class)NSString);
    swift_bridgeObjectRetain(v45);
    v47 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v45);
    v48 = objc_msgSend(v46, "initWithString:", v47);

    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v43);
    aBlock[0] = v43;
    *(_QWORD *)(v22 + 16) = 0x8000000000000000;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)v48, 0x6974736567677573, 0xEC00000044496E6FLL, isUniquelyReferenced_nonNull_native);
    v43 = aBlock[0];
    *(_QWORD *)(v22 + 16) = aBlock[0];
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  v50 = v88;
  v51 = DateComponents.year.getter();
  if ((v52 & 1) == 0)
  {
    v53 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", v51);
    v54 = swift_isUniquelyReferenced_nonNull_native(v43);
    aBlock[0] = *(_QWORD *)(v22 + 16);
    *(_QWORD *)(v22 + 16) = 0x8000000000000000;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)v53, 0xD000000000000012, 0x80000001001A5DB0, v54);
    v43 = aBlock[0];
    *(_QWORD *)(v22 + 16) = aBlock[0];
    v51 = swift_bridgeObjectRelease(0x8000000000000000);
  }
  v55 = DateComponents.month.getter(v51);
  if ((v56 & 1) == 0)
  {
    v57 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", v55);
    v58 = swift_isUniquelyReferenced_nonNull_native(v43);
    aBlock[0] = *(_QWORD *)(v22 + 16);
    *(_QWORD *)(v22 + 16) = 0x8000000000000000;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)v57, 0xD000000000000013, 0x80000001001A5DD0, v58);
    v43 = aBlock[0];
    *(_QWORD *)(v22 + 16) = aBlock[0];
    v55 = swift_bridgeObjectRelease(0x8000000000000000);
  }
  v59 = DateComponents.day.getter(v55);
  if ((v60 & 1) == 0)
  {
    v61 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", v59);
    v62 = swift_isUniquelyReferenced_nonNull_native(v43);
    aBlock[0] = *(_QWORD *)(v22 + 16);
    *(_QWORD *)(v22 + 16) = 0x8000000000000000;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)v61, 0xD000000000000011, 0x80000001001A5DF0, v62);
    v43 = aBlock[0];
    *(_QWORD *)(v22 + 16) = aBlock[0];
    v59 = swift_bridgeObjectRelease(0x8000000000000000);
  }
  v63 = DateComponents.hour.getter(v59);
  if ((v64 & 1) == 0)
  {
    v65 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", v63);
    v66 = swift_isUniquelyReferenced_nonNull_native(v43);
    aBlock[0] = *(_QWORD *)(v22 + 16);
    *(_QWORD *)(v22 + 16) = 0x8000000000000000;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)v65, 0xD000000000000012, 0x80000001001A5E10, v66);
    v43 = aBlock[0];
    *(_QWORD *)(v22 + 16) = aBlock[0];
    v63 = swift_bridgeObjectRelease(0x8000000000000000);
  }
  v67 = DateComponents.minute.getter(v63);
  if ((v68 & 1) == 0)
  {
    v69 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", v67);
    v70 = swift_isUniquelyReferenced_nonNull_native(v43);
    aBlock[0] = *(_QWORD *)(v22 + 16);
    *(_QWORD *)(v22 + 16) = 0x8000000000000000;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)v69, 0xD000000000000014, 0x80000001001A5E30, v70);
    *(_QWORD *)(v22 + 16) = aBlock[0];
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  v71 = String._bridgeToObjectiveC()();
  aBlock[4] = partial apply for closure #1 in MONotificationAnalytics.NotificationEngagementEvent.send();
  v91 = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> (@owned [String : NSObject]?);
  aBlock[3] = &block_descriptor_14;
  v72 = _Block_copy(aBlock);
  v73 = v91;
  swift_retain(v22);
  v74 = swift_release(v73);
  AnalyticsSendEventLazy(v71, v72, v74);
  _Block_release(v72);

  (*(void (**)(char *, uint64_t))(v85 + 8))(v50, v86);
  (*(void (**)(char *, uint64_t))(v83 + 8))(v79, v84);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v80, v82);
  swift_release(v22);
}

void *MONotificationAnalytics.Events.notificationEngaged.unsafeMutableAddressor()
{
  return &static MONotificationAnalytics.Events.notificationEngaged;
}

unint64_t static MONotificationAnalytics.Events.notificationEngaged.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t MONotificationAnalytics.NotificationEngagementEvent.EventFields.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_100093DB4
                                                                     + 4 * aL[a1]))(0xD000000000000012, 0x80000001001A5DB0);
}

uint64_t sub_100093DB4(uint64_t a1)
{
  return a1 + 1;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance MONotificationAnalytics.NotificationEngagementEvent.EventFields(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = MONotificationAnalytics.NotificationEngagementEvent.EventFields.rawValue.getter(*a1);
  v5 = v4;
  v6 = MONotificationAnalytics.NotificationEngagementEvent.EventFields.rawValue.getter(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance MONotificationAnalytics.NotificationEngagementEvent.EventFields()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  v1 = *v0;
  Hasher.init(_seed:)(v6, 0);
  v2 = MONotificationAnalytics.NotificationEngagementEvent.EventFields.rawValue.getter(v1);
  v4 = v3;
  String.hash(into:)(v6, v2, v3);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

double protocol witness for Hashable.hash(into:) in conformance MONotificationAnalytics.NotificationEngagementEvent.EventFields(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  v3 = MONotificationAnalytics.NotificationEngagementEvent.EventFields.rawValue.getter(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  return result;
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance MONotificationAnalytics.NotificationEngagementEvent.EventFields(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[9];

  v2 = *v1;
  Hasher.init(_seed:)(v7, a1);
  v3 = MONotificationAnalytics.NotificationEngagementEvent.EventFields.rawValue.getter(v2);
  v5 = v4;
  String.hash(into:)(v7, v3, v4);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance MONotificationAnalytics.NotificationEngagementEvent.EventFields@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = specialized MONotificationAnalytics.NotificationEngagementEvent.EventFields.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance MONotificationAnalytics.NotificationEngagementEvent.EventFields@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = MONotificationAnalytics.NotificationEngagementEvent.EventFields.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t MOPOIAnnotationViewConfiguration.tileSize.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t MOPOIAnnotationViewConfiguration.tileSize.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

void *MONotificationAnalytics.NotificationEngagementEvent.notificationBundle.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

void MONotificationAnalytics.NotificationEngagementEvent.notificationBundle.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
}

uint64_t MONotificationAnalytics.NotificationEngagementEvent.suggID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 32));
  return v1;
}

uint64_t MONotificationAnalytics.NotificationEngagementEvent.suggID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v2 + 32));
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

_OWORD *specialized _NativeDictionary.setValue(_:forKey:isUnique:)(_OWORD *a1, void *a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *result;
  uint64_t v18;
  char v19;

  v4 = v3;
  v7 = *v3;
  v9 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = *(_QWORD *)(v7 + 24);
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = (_QWORD *)(*(_QWORD *)(v15 + 56) + 32 * v9);
        __swift_destroy_boxed_opaque_existential_1(v16);
        return outlined init with take of Any(a1, v16);
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      specialized _NativeDictionary.copy()();
      goto LABEL_7;
    }
    specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v12, a3 & 1);
    v18 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
    if ((v13 & 1) == (v19 & 1))
    {
      v9 = v18;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      specialized _NativeDictionary._insert(at:key:value:)(v9, a2, a1, v15);
      return a2;
    }
  }
  type metadata accessor for UIFontDescriptorAttributeName(0);
  result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *result;
  uint64_t v18;
  char v19;

  v4 = v3;
  v7 = *v3;
  v9 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = *(_QWORD *)(v7 + 24);
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = (_QWORD *)(*(_QWORD *)(v15 + 56) + 32 * v9);
        __swift_destroy_boxed_opaque_existential_1(v16);
        return outlined init with take of Any(a1, v16);
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      specialized _NativeDictionary.copy()();
      goto LABEL_7;
    }
    specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v12, a3 & 1);
    v18 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
    if ((v13 & 1) == (v19 & 1))
    {
      v9 = v18;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      specialized _NativeDictionary._insert(at:key:value:)(v9, a2, a1, v15);
      return a2;
    }
  }
  type metadata accessor for UIFontDescriptorTraitKey(0);
  result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *result;
  uint64_t v18;
  char v19;
  uint64_t v20;

  v4 = v3;
  v7 = *v3;
  v9 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = *(_QWORD *)(v7 + 24);
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = (_QWORD *)(*(_QWORD *)(v15 + 56) + 32 * v9);
        __swift_destroy_boxed_opaque_existential_1(v16);
        return outlined init with take of Any(a1, v16);
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      specialized _NativeDictionary.copy()();
      goto LABEL_7;
    }
    specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v12, a3 & 1);
    v18 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
    if ((v13 & 1) == (v19 & 1))
    {
      v9 = v18;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      specialized _NativeDictionary._insert(at:key:value:)(v9, a2, a1, v15);
      return a2;
    }
  }
  type metadata accessor for MOSuggestionAssetMetadataKey(0);
  result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v20);
  __break(1u);
  return result;
}

void specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  char v18;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        *(_QWORD *)(v16[7] + 8 * v10) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      specialized _NativeDictionary.copy()();
      goto LABEL_7;
    }
    specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v13, a3 & 1);
    v17 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
    if ((v14 & 1) == (v18 & 1))
    {
      v10 = v17;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      specialized _NativeDictionary._insert(at:key:value:)(v10, a2, a1, v16);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for MOSuggestionAssetVisualSubType);
  __break(1u);
}

void specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];

        *(_QWORD *)(v19 + 8 * v12) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      specialized _NativeDictionary.copy()();
      goto LABEL_7;
    }
    specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v15, a4 & 1);
    v20 = specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
    if ((v16 & 1) == (v21 & 1))
    {
      v12 = v20;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      specialized _NativeDictionary._insert(at:key:value:)(v12, a2, a3, a1, v18);
      swift_bridgeObjectRetain(a3);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        swift_bridgeObjectRelease(*(_QWORD *)(v19 + 8 * v12));
        *(_QWORD *)(v19 + 8 * v12) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      specialized _NativeDictionary.copy()();
      goto LABEL_7;
    }
    specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v15, a4 & 1);
    v20 = specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
    if ((v16 & 1) == (v21 & 1))
    {
      v12 = v20;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      specialized _NativeDictionary._insert(at:key:value:)(v12, a2, a3, a1, v18);
      swift_bridgeObjectRetain(a3);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  char v20;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        *(_QWORD *)(v18[7] + 8 * v12) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      specialized _NativeDictionary.copy()();
      goto LABEL_7;
    }
    specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v15, a4 & 1);
    v19 = specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
    if ((v16 & 1) == (v20 & 1))
    {
      v12 = v19;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      specialized _NativeDictionary._insert(at:key:value:)(v12, a2, a3, a1, v18);
      swift_bridgeObjectRetain(a3);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        v20 = type metadata accessor for URL(0);
        (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v12, a1, v20);
        return;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      specialized _NativeDictionary.copy()();
      goto LABEL_7;
    }
    specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v15, a4 & 1);
    v21 = specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      specialized _NativeDictionary._insert(at:key:value:)(v12, a2, a3, a1, v18);
      swift_bridgeObjectRetain(a3);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        outlined assign with take of Date?(a1, v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v12, (uint64_t *)&demangling cache variable for type metadata for Date?);
        return;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      specialized _NativeDictionary.copy()();
      goto LABEL_7;
    }
    specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v15, a4 & 1);
    v21 = specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      specialized _NativeDictionary._insert(at:key:value:)(v12, a2, a3, a1, v18);
      swift_bridgeObjectRetain(a3);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;

  v4 = v3;
  v8 = *v3;
  v10 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = *(_QWORD *)(v8 + 24);
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = *(_QWORD *)(v16 + 56);
        swift_bridgeObjectRelease(*(_QWORD *)(v17 + 8 * v10));
        *(_QWORD *)(v17 + 8 * v10) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      specialized _NativeDictionary.copy()();
      goto LABEL_7;
    }
    specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v13, a3 & 1);
    v18 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
    if ((v14 & 1) == (v19 & 1))
    {
      v10 = v18;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      specialized _NativeDictionary._insert(at:key:value:)(v10, a2, a1, v16);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
  __break(1u);
}

id specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  id result;
  uint64_t v17;
  char v18;
  uint64_t v19;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
        return (id)outlined assign with take of Date?(a1, v15[7] + 32 * v9, &demangling cache variable for type metadata for Any?);
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      specialized _NativeDictionary.copy()();
      goto LABEL_7;
    }
    specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v12, a3 & 1);
    v17 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
    if ((v13 & 1) == (v18 & 1))
    {
      v9 = v17;
      v15 = *v4;
      if ((v13 & 1) != 0)
        return (id)outlined assign with take of Date?(a1, v15[7] + 32 * v9, &demangling cache variable for type metadata for Any?);
LABEL_11:
      specialized _NativeDictionary._insert(at:key:value:)(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  type metadata accessor for MOSuggestionAssetMetadataKey(0);
  result = (id)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v19);
  __break(1u);
  return result;
}

_OWORD *specialized _NativeDictionary.setValue(_:forKey:isUnique:)(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;
  _BYTE v21[40];

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_QWORD *)(v16[7] + 32 * v10);
        __swift_destroy_boxed_opaque_existential_1(v17);
        return outlined init with take of Any(a1, v17);
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      specialized _NativeDictionary.copy()();
      goto LABEL_7;
    }
    specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v13, a3 & 1);
    v19 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      outlined init with copy of AnyHashable(a2, (uint64_t)v21);
      return specialized _NativeDictionary._insert(at:key:value:)(v10, (uint64_t)v21, a1, v16);
    }
  }
  result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for AnyHashable);
  __break(1u);
  return result;
}

void specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7)
{
  _QWORD *v7;
  _QWORD **v8;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  char v26;

  v8 = (_QWORD **)v7;
  v15 = (_QWORD *)*v7;
  v17 = specialized __RawDictionaryStorage.find<A>(_:)(a5, a6);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = v15[3];
    if (v22 >= v20 && (a7 & 1) != 0)
    {
LABEL_7:
      v23 = *v8;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v24 = v23[7] + 32 * v17;
        swift_bridgeObjectRelease(*(_QWORD *)(v24 + 16));
        *(_QWORD *)v24 = a1;
        *(_QWORD *)(v24 + 8) = a2;
        *(_QWORD *)(v24 + 16) = a3;
        *(_BYTE *)(v24 + 24) = a4 & 1;
        return;
      }
      goto LABEL_11;
    }
    if (v22 >= v20 && (a7 & 1) == 0)
    {
      specialized _NativeDictionary.copy()();
      goto LABEL_7;
    }
    specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v20, a7 & 1);
    v25 = specialized __RawDictionaryStorage.find<A>(_:)(a5, a6);
    if ((v21 & 1) == (v26 & 1))
    {
      v17 = v25;
      v23 = *v8;
      if ((v21 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      specialized _NativeDictionary._insert(at:key:value:)(v17, a5, a6, a1, a2, a3, a4 & 1, v23);
      swift_bridgeObjectRetain(a6);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  unint64_t v22;
  char v23;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v14 = specialized __RawDictionaryStorage.find<A>(_:)(a3, a4);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a5 & 1) != 0)
    {
LABEL_7:
      v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = (uint64_t *)(v20[7] + 16 * v14);
        swift_bridgeObjectRelease(v21[1]);
        *v21 = a1;
        v21[1] = a2;
        return;
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a5 & 1) == 0)
    {
      specialized _NativeDictionary.copy()();
      goto LABEL_7;
    }
    specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v17, a5 & 1);
    v22 = specialized __RawDictionaryStorage.find<A>(_:)(a3, a4);
    if ((v18 & 1) == (v23 & 1))
    {
      v14 = v22;
      v20 = *v6;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      specialized _NativeDictionary._insert(at:key:value:)(v14, a3, a4, a1, a2, v20);
      swift_bridgeObjectRetain(a4);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, uint64_t a2, char a3, double a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  char v20;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = specialized __RawDictionaryStorage.find<A>(_:)(a1, a2);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a3 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        *(double *)(v18[7] + 8 * v12) = a4;
        return;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a3 & 1) == 0)
    {
      specialized _NativeDictionary.copy()();
      goto LABEL_7;
    }
    specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v15, a3 & 1);
    v19 = specialized __RawDictionaryStorage.find<A>(_:)(a1, a2);
    if ((v16 & 1) == (v20 & 1))
    {
      v12 = v19;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      specialized _NativeDictionary._insert(at:key:value:)(v12, a1, a2, v18, a4);
      swift_bridgeObjectRetain(a2);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

unint64_t specialized Dictionary.init(dictionaryLiteral:)(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;

  v1 = a1[2];
  if (!v1)
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<Int, [MOSuggestionAssetTileSize]>);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  v5 = a1[4];
  v4 = a1[5];
  result = specialized __RawDictionaryStorage.find<A>(_:)(v5);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain(v4);
    return (unint64_t)v3;
  }
  v8 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v5;
    *(_QWORD *)(v3[7] + v9) = v4;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v5 = *(v8 - 1);
    v14 = *v8;
    swift_bridgeObjectRetain(v4);
    result = specialized __RawDictionaryStorage.find<A>(_:)(v5);
    v8 = v13;
    v4 = v14;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  Swift::UInt v5;
  unint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;

  v1 = a1[2];
  if (!v1)
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<MOSetting, [MOEventBundleSourceType]>);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  v5 = a1[4];
  v4 = a1[5];
  result = specialized __RawDictionaryStorage.find<A>(_:)(v5);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain(v4);
    return (unint64_t)v3;
  }
  v8 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v5;
    *(_QWORD *)(v3[7] + v9) = v4;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v5 = *(v8 - 1);
    v14 = *v8;
    swift_bridgeObjectRetain(v4);
    result = specialized __RawDictionaryStorage.find<A>(_:)(v5);
    v8 = v13;
    v4 = v14;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

void *specialized Set.init(_nonEmptyArrayLiteral:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  void *result;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;

  v2 = type metadata accessor for Calendar.Component(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v30 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<Calendar.Component>);
    v10 = static _SetStorage.allocate(capacity:)(v9);
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v31 = v9;
    v32 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v35 = v10 + 56;
    while (1)
    {
      v33 = v11;
      v34(v8, v32 + v13 * v11, v2);
      v14 = *(_QWORD *)(v10 + 40);
      v15 = lazy protocol witness table accessor for type Calendar.Component and conformance Calendar.Component(&lazy protocol witness table cache variable for type Calendar.Component and conformance Calendar.Component, (uint64_t)&protocol conformance descriptor for Calendar.Component);
      v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v2, v15);
      v17 = ~(-1 << *(_BYTE *)(v10 + 32));
      v18 = v16 & v17;
      v19 = (v16 & (unint64_t)v17) >> 6;
      v20 = *(_QWORD *)(v35 + 8 * v19);
      v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        do
        {
          v34(v6, *(_QWORD *)(v10 + 48) + v18 * v13, v2);
          v22 = lazy protocol witness table accessor for type Calendar.Component and conformance Calendar.Component(&lazy protocol witness table cache variable for type Calendar.Component and conformance Calendar.Component, (uint64_t)&protocol conformance descriptor for Calendar.Component);
          v23 = dispatch thunk of static Equatable.== infix(_:_:)(v6, v8, v2, v22);
          v24 = v3;
          v25 = *(void (**)(char *, uint64_t))(v3 + 8);
          v25(v6, v2);
          if ((v23 & 1) != 0)
          {
            v25(v8, v2);
            v3 = v24;
            v9 = v31;
            goto LABEL_4;
          }
          v18 = (v18 + 1) & v17;
          v19 = v18 >> 6;
          v20 = *(_QWORD *)(v35 + 8 * (v18 >> 6));
          v21 = 1 << v18;
          v3 = v24;
        }
        while ((v20 & (1 << v18)) != 0);
        v9 = v31;
      }
      *(_QWORD *)(v35 + 8 * v19) = v21 | v20;
      result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v18 * v13, v8, v2);
      v27 = *(_QWORD *)(v10 + 16);
      v28 = __OFADD__(v27, 1);
      v29 = v27 + 1;
      if (v28)
        break;
      *(_QWORD *)(v10 + 16) = v29;
LABEL_4:
      v11 = v33 + 1;
      if (v33 + 1 == v9)
        return (void *)v10;
    }
    __break(1u);
  }
  else
  {
    return &_swiftEmptySetSingleton;
  }
  return result;
}

uint64_t sub_100095B14()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t partial apply for closure #1 in MONotificationAnalytics.NotificationEngagementEvent.send()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = specialized closure #1 in MONotificationAnalytics.NotificationEngagementEvent.send()(v0);
  return swift_bridgeObjectRetain(v1);
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_14(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t specialized MONotificationAnalytics.NotificationEngagementEvent.EventFields.init(rawValue:)(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of MONotificationAnalytics.NotificationEngagementEvent.EventFields.init(rawValue:), v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 0x10)
    return 16;
  else
    return v3;
}

unint64_t lazy protocol witness table accessor for type MONotificationAnalytics.NotificationEngagementEvent.EventFields and conformance MONotificationAnalytics.NotificationEngagementEvent.EventFields()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MONotificationAnalytics.NotificationEngagementEvent.EventFields and conformance MONotificationAnalytics.NotificationEngagementEvent.EventFields;
  if (!lazy protocol witness table cache variable for type MONotificationAnalytics.NotificationEngagementEvent.EventFields and conformance MONotificationAnalytics.NotificationEngagementEvent.EventFields)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MONotificationAnalytics.NotificationEngagementEvent.EventFields, &type metadata for MONotificationAnalytics.NotificationEngagementEvent.EventFields);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MONotificationAnalytics.NotificationEngagementEvent.EventFields and conformance MONotificationAnalytics.NotificationEngagementEvent.EventFields);
  }
  return result;
}

uint64_t type metadata accessor for MONotificationAnalytics()
{
  return objc_opt_self(_TtC16MomentsUIService23MONotificationAnalytics);
}

ValueMetadata *type metadata accessor for MONotificationAnalytics.Events()
{
  return &type metadata for MONotificationAnalytics.Events;
}

uint64_t destroy for MONotificationAnalytics.NotificationEngagementEvent(uint64_t a1)
{

  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
}

uint64_t initializeWithCopy for MONotificationAnalytics.NotificationEngagementEvent(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(void **)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = v3;
  swift_bridgeObjectRetain(v5);
  return a1;
}

uint64_t assignWithCopy for MONotificationAnalytics.NotificationEngagementEvent(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(void **)(a1 + 16);
  v5 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  v6 = v5;

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MONotificationAnalytics.NotificationEngagementEvent(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for MONotificationAnalytics.NotificationEngagementEvent(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MONotificationAnalytics.NotificationEngagementEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MONotificationAnalytics.NotificationEngagementEvent()
{
  return &type metadata for MONotificationAnalytics.NotificationEngagementEvent;
}

uint64_t storeEnumTagSinglePayload for MONotificationAnalytics.NotificationEngagementEvent.EventFields(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_100095E88 + 4 * byte_1001A0A85[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_100095EBC + 4 * byte_1001A0A80[v4]))();
}

uint64_t sub_100095EBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100095EC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100095ECCLL);
  return result;
}

uint64_t sub_100095ED8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100095EE0);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_100095EE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100095EEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MONotificationAnalytics.NotificationEngagementEvent.EventFields()
{
  return &type metadata for MONotificationAnalytics.NotificationEngagementEvent.EventFields;
}

uint64_t specialized closure #1 in MONotificationAnalytics.NotificationEngagementEvent.send()(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  __n128 v14;
  __n128 v15;
  uint64_t v17;
  _BYTE v18[24];
  uint64_t v19[3];

  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v2 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v2, (uint64_t)static MOAngelLogger.assets);
  v3 = swift_retain_n(a1, 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v19[0] = v7;
    *(_DWORD *)v6 = 136315138;
    swift_beginAccess(a1 + 16, v18, 0, 0);
    v8 = *(_QWORD *)(a1 + 16);
    v9 = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSObject, NSObject_ptr);
    v10 = swift_bridgeObjectRetain(v8);
    v11 = Dictionary.debugDescription.getter(v10, &type metadata for String, v9, &protocol witness table for String);
    v13 = v12;
    swift_bridgeObjectRelease(v8);
    v17 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v13, v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, v18, v6 + 4);
    swift_release_n(a1, 2, v14);
    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "[Notification Analytics] result=%s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {

    swift_release_n(a1, 2, v15);
  }
  swift_beginAccess(a1 + 16, v19, 0, 0);
  return *(_QWORD *)(a1 + 16);
}

void specialized Set.init(_nonEmptyArrayLiteral:)(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::Int v27;
  id v28;
  Swift::Int v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  id v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v1 = a1;
  v2 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(v1);
    if (v3)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<HKQuantityType>);
      v4 = (_QWORD *)static _SetStorage.allocate(capacity:)(v3);
      if (!v2)
        goto LABEL_4;
LABEL_11:
      if (v1 < 0)
        v7 = v1;
      else
        v7 = v1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v1);
      v5 = _CocoaArrayWrapper.endIndex.getter(v7);
      swift_bridgeObjectRelease(v1);
      if (!v5)
        return;
      goto LABEL_15;
    }
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
  }
  v4 = &_swiftEmptySetSingleton;
  if (v2)
    goto LABEL_11;
LABEL_4:
  v5 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
    return;
LABEL_15:
  v8 = (char *)(v4 + 7);
  v45 = v5;
  if ((v1 & 0xC000000000000001) != 0)
  {
    v9 = 0;
    v43 = v1;
    while (1)
    {
      while (1)
      {
        v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v1);
        v11 = __OFADD__(v9++, 1);
        if (v11)
        {
          __break(1u);
          goto LABEL_42;
        }
        v12 = v10;
        v13 = NSObject._rawHashValue(seed:)(v4[5]);
        v14 = -1 << *((_BYTE *)v4 + 32);
        v15 = v13 & ~v14;
        v16 = v15 >> 6;
        v17 = *(_QWORD *)&v8[8 * (v15 >> 6)];
        v18 = 1 << v15;
        if (((1 << v15) & v17) != 0)
          break;
LABEL_26:
        *(_QWORD *)&v8[8 * v16] = v18 | v17;
        *(_QWORD *)(v4[6] + 8 * v15) = v12;
        v24 = v4[2];
        v11 = __OFADD__(v24, 1);
        v25 = v24 + 1;
        if (v11)
          goto LABEL_43;
        v4[2] = v25;
        if (v9 == v5)
          return;
      }
      type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for HKQuantityType, HKQuantityType_ptr);
      v19 = *(id *)(v4[6] + 8 * v15);
      v20 = static NSObject.== infix(_:_:)(v19);

      if ((v20 & 1) == 0)
      {
        v21 = ~v14;
        while (1)
        {
          v15 = (v15 + 1) & v21;
          v16 = v15 >> 6;
          v17 = *(_QWORD *)&v8[8 * (v15 >> 6)];
          v18 = 1 << v15;
          if ((v17 & (1 << v15)) == 0)
            break;
          v22 = *(id *)(v4[6] + 8 * v15);
          v23 = static NSObject.== infix(_:_:)(v22);

          if ((v23 & 1) != 0)
            goto LABEL_17;
        }
        v1 = v43;
        v5 = v45;
        goto LABEL_26;
      }
LABEL_17:
      swift_unknownObjectRelease(v12);
      v1 = v43;
      v5 = v45;
      if (v9 == v45)
        return;
    }
  }
  v26 = 0;
  v42 = v1 + 32;
  v44 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v26 != v44)
  {
    v27 = v4[5];
    v28 = *(id *)(v42 + 8 * v26);
    v29 = NSObject._rawHashValue(seed:)(v27);
    v30 = -1 << *((_BYTE *)v4 + 32);
    v31 = v29 & ~v30;
    v32 = v31 >> 6;
    v33 = *(_QWORD *)&v8[8 * (v31 >> 6)];
    v34 = 1 << v31;
    if (((1 << v31) & v33) != 0)
    {
      type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for HKQuantityType, HKQuantityType_ptr);
      v35 = *(id *)(v4[6] + 8 * v31);
      v36 = static NSObject.== infix(_:_:)(v35);

      if ((v36 & 1) != 0)
      {
LABEL_30:

        goto LABEL_31;
      }
      v37 = ~v30;
      while (1)
      {
        v31 = (v31 + 1) & v37;
        v32 = v31 >> 6;
        v33 = *(_QWORD *)&v8[8 * (v31 >> 6)];
        v34 = 1 << v31;
        if ((v33 & (1 << v31)) == 0)
          break;
        v38 = *(id *)(v4[6] + 8 * v31);
        v39 = static NSObject.== infix(_:_:)(v38);

        if ((v39 & 1) != 0)
          goto LABEL_30;
      }
    }
    *(_QWORD *)&v8[8 * v32] = v34 | v33;
    *(_QWORD *)(v4[6] + 8 * v31) = v28;
    v40 = v4[2];
    v11 = __OFADD__(v40, 1);
    v41 = v40 + 1;
    if (v11)
      goto LABEL_44;
    v4[2] = v41;
LABEL_31:
    if (++v26 == v45)
      return;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
}

uint64_t outlined assign with take of Date?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t lazy protocol witness table accessor for type Calendar.Component and conformance Calendar.Component(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for Calendar.Component(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *MOSuggestionAssetSystemSymbolProvider.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1)
    swift_once(&one-time initialization token for shared, one-time initialization function for shared);
  return &static MOSuggestionAssetSystemSymbolProvider.shared;
}

uint64_t static MOSuggestionAssetSystemSymbolProvider.shared.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for MOSuggestionAssetSystemSymbolProvider();
  return swift_initStaticObject(v0, &unk_1002070E0);
}

void MOSuggestionAssetSystemSymbolProvider.getAssetFor(symbol:size:completion:)(uint64_t a1, unint64_t a2, char a3, void (*a4)(CGContext *))
{
  NSString v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  NSString v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  CGContext *v26;
  uint64_t v27;
  uint64_t v28;

  swift_bridgeObjectRetain(a2);
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v9 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v8);

  if (v9)
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1)
      swift_once(&serverManager._clientConnections, one-time initialization function for shared);
    v10 = type metadata accessor for Logger(0);
    v11 = __swift_project_value_buffer(v10, (uint64_t)static MOAngelLogger.shared);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "[Assets] Packed asset for system symbol", v14, 2u);
      swift_slowDealloc(v14, -1, -1);
    }

    if ((a3 - 2) >= 9u)
    {
      v21 = String._bridgeToObjectiveC()();
      v22 = (void *)objc_opt_self(UIColor);
      v23 = objc_msgSend(v22, "colorNamed:", v21);

      if (!v23)
        v23 = objc_msgSend(v22, "systemRedColor");
      v24 = objc_msgSend(v22, "systemWhiteColor");
      v25 = objc_msgSend(v24, "colorWithAlphaComponent:", 0.55);

      v26 = UIImage.fitnessTintAndPill(with:backgroundColor:symbolCenteringOffset:assetSize:)(v23, v25, a3, 1.0);
      a4(v26);

    }
    else
    {
      v26 = (CGContext *)v9;
      a4((CGContext *)v9);

    }
  }
  else
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1)
      swift_once(&serverManager._clientConnections, one-time initialization function for shared);
    v15 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v15, (uint64_t)static MOAngelLogger.shared);
    v16 = swift_bridgeObjectRetain_n(a2, 2);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(12, -1);
      v20 = swift_slowAlloc(32, -1);
      v28 = v20;
      *(_DWORD *)v19 = 136315138;
      swift_bridgeObjectRetain(a2);
      v27 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v19 + 4);
      swift_bridgeObjectRelease_n(a2, 3);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "[Assets] Unable to fetch SF symbol for string:%s", v19, 0xCu);
      swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v19, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a2, 2);
    }
    a4(0);
  }
}

uint64_t type metadata accessor for MOSuggestionAssetSystemSymbolProvider()
{
  return objc_opt_self(_TtC16MomentsUIService37MOSuggestionAssetSystemSymbolProvider);
}

uint64_t specialized static MOSuggestionAssetSystemSymbolProvider.symbolName(type:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;

  v2 = 0x772E657275676966;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOWorkoutMotionActivityActionWalk[0]);
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v3 == v6 && v5 == v7)
  {
    swift_bridgeObjectRelease_n(v5, 2);
    return v2;
  }
  v9 = v7;
  v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  if ((v10 & 1) == 0)
  {
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOWorkoutMotionActivityActionRun[0]);
    v13 = v12;
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v11 == v14 && v13 == v15)
    {
      swift_bridgeObjectRelease_n(v13, 2);
    }
    else
    {
      v17 = v15;
      v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v14, v15, 0);
      swift_bridgeObjectRelease(v13);
      swift_bridgeObjectRelease(v17);
      if ((v18 & 1) == 0)
        return 0;
    }
    return 0x722E657275676966;
  }
  return v2;
}

CGContext *specialized static MOSuggestionAssetSystemSymbolProvider.getMotionAcrtivityAssetFor(symbol:size:glyphOnly:)(uint64_t a1, unint64_t a2, unsigned __int8 a3, char a4)
{
  NSString v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  NSString v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  CGContext *v20;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  swift_bridgeObjectRetain(a2);
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v9 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v8);

  if (!v9)
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1)
      swift_once(&serverManager._clientConnections, one-time initialization function for shared);
    v22 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v22, (uint64_t)static MOAngelLogger.shared);
    v23 = swift_bridgeObjectRetain_n(a2, 2);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(12, -1);
      v27 = swift_slowAlloc(32, -1);
      v29 = v27;
      *(_DWORD *)v26 = 136315138;
      swift_bridgeObjectRetain(a2);
      v28 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29, v26 + 4);
      swift_bridgeObjectRelease_n(a2, 3);
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "[Assets] Unable to fetch SF symbol for string:%s", v26, 0xCu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v26, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a2, 2);
    }
    return 0;
  }
  if (serverManager._clientConnections != (NSMutableDictionary *)-1)
    swift_once(&serverManager._clientConnections, one-time initialization function for shared);
  v10 = type metadata accessor for Logger(0);
  v11 = __swift_project_value_buffer(v10, (uint64_t)static MOAngelLogger.shared);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "[Assets] Packed asset for system symbol", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  if (a3 - 2 < 7 || a3 == 10 || (a4 & 1) != 0)
    return (CGContext *)v9;
  v15 = String._bridgeToObjectiveC()();
  v16 = (void *)objc_opt_self(UIColor);
  v17 = objc_msgSend(v16, "colorNamed:", v15);

  if (!v17)
    v17 = objc_msgSend(v16, "systemRedColor");
  v18 = objc_msgSend(v16, "systemWhiteColor");
  v19 = objc_msgSend(v18, "colorWithAlphaComponent:", 0.55);

  v20 = UIImage.fitnessTintAndPill(with:backgroundColor:symbolCenteringOffset:assetSize:)(v17, v19, a3, 1.0);
  return v20;
}

void *MOSuggestionCollectionView.ProtectedContentConstants.journalingIconName.unsafeMutableAddressor()
{
  return &static MOSuggestionCollectionView.ProtectedContentConstants.journalingIconName;
}

unint64_t static MOSuggestionCollectionView.ProtectedContentConstants.journalingIconName.getter()
{
  return 0xD000000000000019;
}

void one-time initialization function for localizedAppName()
{
  id v0;
  Swift::String v1;
  Swift::String v2;
  Swift::String v3;
  Swift::String v4;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v4._countAndFlagsBits = 0xD000000000000025;
  v4._object = (void *)0x80000001001AA0E0;
  v1._object = (void *)0x80000001001A6950;
  v1._countAndFlagsBits = 0xD000000000000016;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  static MOSuggestionCollectionView.ProtectedContentConstants.localizedAppName = (__int128)v3;
}

__int128 *MOSuggestionCollectionView.ProtectedContentConstants.localizedAppName.unsafeMutableAddressor()
{
  if (one-time initialization token for localizedAppName != -1)
    swift_once(&one-time initialization token for localizedAppName, one-time initialization function for localizedAppName);
  return &static MOSuggestionCollectionView.ProtectedContentConstants.localizedAppName;
}

uint64_t static MOSuggestionCollectionView.ProtectedContentConstants.localizedAppName.getter()
{
  uint64_t v0;

  if (one-time initialization token for localizedAppName != -1)
    swift_once(&one-time initialization token for localizedAppName, one-time initialization function for localizedAppName);
  v0 = static MOSuggestionCollectionView.ProtectedContentConstants.localizedAppName;
  swift_bridgeObjectRetain(*((_QWORD *)&static MOSuggestionCollectionView.ProtectedContentConstants.localizedAppName + 1));
  return v0;
}

Swift::Void __swiftcall MOSuggestionCollectionView.setupProtectedContentBanner()()
{
  _QWORD *v0;
  _QWORD *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  NSString v13;
  id v14;
  id v15;
  char v16;
  double v17;
  double v18;
  id v19;
  char **v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  NSString v47;
  id v48;
  uint64_t v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  void *v55;
  id v56;
  id v57;
  id v58;
  void (*v59)(id);
  id v60;
  void *v61;
  id v62;
  _OWORD v63[2];
  _QWORD v64[3];
  ValueMetadata *v65;
  unint64_t v66;

  v1 = v0;
  v65 = &type metadata for MOAppProtectionFeatureFlags;
  v66 = lazy protocol witness table accessor for type MOAppProtectionFeatureFlags and conformance MOAppProtectionFeatureFlags();
  v2 = isFeatureEnabled(_:)(v64);
  v3 = __swift_destroy_boxed_opaque_existential_1(v64);
  if ((v2 & 1) != 0)
  {
    v4 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x110))(v3);
    if (v4)
    {
      v5 = (_QWORD *)v4;
      v6 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xF8))();
      if (v6)
      {
        v7 = v6;
        v8 = String._bridgeToObjectiveC()();
        v9 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v8);

        if (v9)
        {
          if (one-time initialization token for localizedAppName != -1)
            swift_once(&one-time initialization token for localizedAppName, one-time initialization function for localizedAppName);
          v10 = *((_QWORD *)&static MOSuggestionCollectionView.ProtectedContentConstants.localizedAppName + 1);
          v11 = objc_allocWithZone((Class)APBaseExtensionShieldView);
          swift_bridgeObjectRetain(v10);
          v12 = v9;
          v13 = String._bridgeToObjectiveC()();
          v14 = objc_msgSend(v11, "initWithLocalizedApplicationName:iconImage:", v13, v12, swift_bridgeObjectRelease(v10).n128_f64[0]);

          objc_msgSend(v14, "setDelegate:", v1);
          objc_msgSend(v14, "setHidden:", 1);
          v15 = objc_msgSend(v1, "addSubview:", v14);
          LOBYTE(v10) = (*(uint64_t (**)(id))((swift_isaMask & *v5) + 0x1B0))(v15);
          v16 = (*(uint64_t (**)(void))(*(_QWORD *)v7 + 552))();
          v17 = 50.0;
          if ((v10 & 1) != 0)
            v17 = 0.0;
          if ((v16 & 1) != 0)
            v18 = v17;
          else
            v18 = 0.0;
          v19 = objc_msgSend(v14, "superview", v12);
          v20 = &selRef_genericAvatarFor_pointSize_completion_;
          if (v19)
          {
            v21 = v19;
            objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
            v22 = objc_msgSend(v14, "leadingAnchor");
            v23 = objc_msgSend(v21, "leadingAnchor");
            v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

            objc_msgSend(v24, "setConstant:", 0.0);
            v25 = v24;
            v20 = &selRef_genericAvatarFor_pointSize_completion_;
            v26 = v25;
            objc_msgSend(v25, "setActive:", 1);

          }
          v27 = objc_msgSend(v14, "superview");
          if (v27)
          {
            v28 = v27;
            objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
            v29 = objc_msgSend(v14, "trailingAnchor");
            v30 = objc_msgSend(v28, "trailingAnchor");
            v31 = objc_msgSend(v29, "constraintEqualToAnchor:", v30);

            objc_msgSend(v31, "setConstant:", 0.0);
            v32 = v31;
            v20 = &selRef_genericAvatarFor_pointSize_completion_;
            v33 = v32;
            objc_msgSend(v32, "setActive:", 1);

          }
          v34 = objc_msgSend(v14, "superview");
          if (v34)
          {
            v35 = v34;
            objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
            v36 = objc_msgSend(v14, "bottomAnchor");
            v37 = objc_msgSend(v35, "bottomAnchor");
            v38 = objc_msgSend(v36, "constraintEqualToAnchor:", v37);

            v20 = &selRef_genericAvatarFor_pointSize_completion_;
            if (v38)
            {
              objc_msgSend(v38, "setConstant:", -0.0);
              v39 = v38;
              objc_msgSend(v39, "setActive:", 1);

            }
          }
          v40 = objc_msgSend(v14, "superview");
          if (v40)
          {
            v41 = v40;
            objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
            v42 = objc_msgSend(v14, "topAnchor");
            v43 = objc_msgSend(v41, "topAnchor");
            v44 = objc_msgSend(v42, "constraintEqualToAnchor:", v43);

            objc_msgSend(v44, "setConstant:", v18);
            v45 = v44;
            v20 = &selRef_genericAvatarFor_pointSize_completion_;
            v46 = v45;
            objc_msgSend(v45, "setActive:", 1);

          }
          v47 = String._bridgeToObjectiveC()();
          v48 = objc_msgSend(v14, "valueForKey:", v47);

          if (v48)
          {
            _bridgeAnyObjectToAny(_:)(v63, v48);
            swift_unknownObjectRelease(v48);
          }
          else
          {
            memset(v63, 0, sizeof(v63));
          }
          outlined init with take of Any?((uint64_t)v63, (uint64_t)v64);
          if (v65)
          {
            v49 = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for UIImageView, UIImageView_ptr);
            if ((swift_dynamicCast(&v62, v64, (char *)&type metadata for Any + 8, v49, 6) & 1) != 0)
            {
              v50 = v62;
              objc_msgSend(v62, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
              v51 = objc_msgSend(v50, "widthAnchor");
              v52 = objc_msgSend(v51, "constraintEqualToConstant:", 52.0);

              objc_msgSend(v52, v20[93], 1);
              objc_msgSend(v50, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
              v53 = objc_msgSend(v50, "heightAnchor");
              v54 = objc_msgSend(v53, "constraintEqualToConstant:", 52.0);

              objc_msgSend(v54, v20[93], 1);
            }
          }
          else
          {
            outlined destroy of Any?((uint64_t)v64);
          }
          v55 = (void *)objc_opt_self(UIColor);
          v56 = v14;
          v57 = objc_msgSend(v55, "systemBackgroundColor");
          objc_msgSend(v56, "setBackgroundColor:", v57);

          v58 = objc_msgSend(v56, "layer");
          objc_msgSend(v58, "setZPosition:", 1.79769313e308);

          v59 = *(void (**)(id))((swift_isaMask & *v1) + 0x208);
          v60 = v56;
          v59(v56);

          swift_release(v7);
        }
        else
        {

          swift_release(v7);
        }
      }
      else
      {

      }
    }
  }
}

double MOSuggestionCollectionView.shieldViewUnlockButtonPressed(_:)()
{
  _QWORD *v0;
  uint64_t v1;
  double result;
  uint64_t v3;

  v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xF8))();
  if (v1)
  {
    v3 = v1;
    MOSuggestionCollectionViewModel.initiateAuthentication()();
    *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  }
  return result;
}

Swift::Void __swiftcall MOSuggestionCollectionView.didUpdateProtectedContentStatus(authorized:)(Swift::Bool authorized)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __n128 v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD aBlock[5];
  uint64_t v20;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue, OS_dispatch_queue_ptr);
  v11 = (void *)static OS_dispatch_queue.main.getter(v10);
  v12 = swift_allocObject(&unk_1001E76E0, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16);
  v13 = swift_allocObject(&unk_1001E7708, 25, 7);
  *(_QWORD *)(v13 + 16) = v12;
  *(_BYTE *)(v13 + 24) = authorized;
  aBlock[4] = partial apply for closure #1 in MOSuggestionCollectionView.didUpdateProtectedContentStatus(authorized:);
  v20 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_15;
  v14 = _Block_copy(aBlock);
  swift_release(v20);
  static DispatchQoS.unspecified.getter(v15);
  aBlock[0] = _swiftEmptyArrayStorage;
  v16 = lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  v18 = lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v17, v18, v2, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_100097AB0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void closure #1 in MOSuggestionCollectionView.didUpdateProtectedContentStatus(authorized:)(uint64_t a1, char a2)
{
  uint64_t v3;
  _QWORD *Strong;
  void *v5;
  void *v6;
  _QWORD *v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  _BYTE v16[24];
  _BYTE v17[24];
  _BYTE v18[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v18, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x200))();

    if (v6)
    {
      objc_msgSend(v6, "setHidden:", a2 & 1);

    }
  }
  if ((a2 & 1) != 0)
  {
    swift_beginAccess(v3, v17, 0, 0);
    v7 = (_QWORD *)swift_unknownObjectWeakLoadStrong(v3);
    if (v7)
    {
      v8 = v7;
      v9 = (*(uint64_t (**)(void))((swift_isaMask & *v7) + 0xF8))();

      if (v9)
      {
        if (((*(uint64_t (**)(void))(*(_QWORD *)v9 + 552))() & 1) == 0
          && (swift_beginAccess(v3, v16, 0, 0), (v10 = (_QWORD *)swift_unknownObjectWeakLoadStrong(v3)) != 0)
          && (v11 = v10,
              v12 = (*(uint64_t (**)(void))((swift_isaMask & *v10) + 0x158))(),
              v14 = v13,
              v11,
              v12))
        {
          ObjectType = swift_getObjectType(v12);
          (*(void (**)(uint64_t, uint64_t))(v14 + 16))(ObjectType, v14);
          swift_release(v9);
          swift_unknownObjectRelease(v12);
        }
        else
        {
          swift_release(v9);
        }
      }
    }
  }
}

uint64_t sub_100097C54()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void partial apply for closure #1 in MOSuggestionCollectionView.didUpdateProtectedContentStatus(authorized:)()
{
  uint64_t v0;

  closure #1 in MOSuggestionCollectionView.didUpdateProtectedContentStatus(authorized:)(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_15(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void protocol witness for MOSuggestionCollectionViewDelegate.didUpdateProtectedContentStatus(authorized:) in conformance MOSuggestionCollectionView(Swift::Bool a1)
{
  MOSuggestionCollectionView.didUpdateProtectedContentStatus(authorized:)(a1);
}

ValueMetadata *type metadata accessor for MOSuggestionCollectionView.ProtectedContentConstants()
{
  return &type metadata for MOSuggestionCollectionView.ProtectedContentConstants;
}

void *MOSuggestionInterstitialExpandableListViewCellConstants.ASSET_PLATTER_EDGE_LENGTH.unsafeMutableAddressor()
{
  return &static MOSuggestionInterstitialExpandableListViewCellConstants.ASSET_PLATTER_EDGE_LENGTH;
}

void *MOSuggestionInterstitialExpandableListViewCellConstants.CELL_INSET_MARGIN.unsafeMutableAddressor()
{
  return &static MOSuggestionInterstitialExpandableListViewCellConstants.CELL_INSET_MARGIN;
}

void *MOSuggestionInterstitialExpandableListViewCellConstants.LABEL_SPACING.unsafeMutableAddressor()
{
  return &static MOSuggestionInterstitialExpandableListViewCellConstants.LABEL_SPACING;
}

void one-time initialization function for CHECKMARK_PLATTER_SIZE()
{
  uint64_t v0;

  if (one-time initialization token for checkPlatterViewSize != -1)
    swift_once(&one-time initialization token for checkPlatterViewSize, one-time initialization function for checkPlatterViewSize);
  static MOSuggestionInterstitialExpandableListViewCellConstants.CHECKMARK_PLATTER_SIZE = static CGSize.* infix(_:_:)(*(double *)&static MOSuggestionCarouselAssetCell.checkPlatterViewSize, *((double *)&static MOSuggestionCarouselAssetCell.checkPlatterViewSize+ 1), 1.2);
  qword_100216D70 = v0;
}

uint64_t *MOSuggestionInterstitialExpandableListViewCellConstants.CHECKMARK_PLATTER_SIZE.unsafeMutableAddressor()
{
  if (one-time initialization token for CHECKMARK_PLATTER_SIZE != -1)
    swift_once(&one-time initialization token for CHECKMARK_PLATTER_SIZE, one-time initialization function for CHECKMARK_PLATTER_SIZE);
  return &static MOSuggestionInterstitialExpandableListViewCellConstants.CHECKMARK_PLATTER_SIZE;
}

double static MOSuggestionInterstitialExpandableListViewCellConstants.CHECKMARK_PLATTER_SIZE.getter()
{
  if (one-time initialization token for CHECKMARK_PLATTER_SIZE != -1)
    swift_once(&one-time initialization token for CHECKMARK_PLATTER_SIZE, one-time initialization function for CHECKMARK_PLATTER_SIZE);
  return *(double *)&static MOSuggestionInterstitialExpandableListViewCellConstants.CHECKMARK_PLATTER_SIZE;
}

void *MOSuggestionInterstitialExpandableListViewCellConstants.CHECKMARK_PLATTER_MARGIN.unsafeMutableAddressor()
{
  return &static MOSuggestionInterstitialExpandableListViewCellConstants.CHECKMARK_PLATTER_MARGIN;
}

void *MOSuggestionInterstitialExpandableListViewCell.reuseIdentifier.unsafeMutableAddressor()
{
  return &static MOSuggestionInterstitialExpandableListViewCell.reuseIdentifier;
}

unint64_t static MOSuggestionInterstitialExpandableListViewCell.reuseIdentifier.getter()
{
  return 0xD00000000000002ELL;
}

id closure #1 in variable initialization expression of MOSuggestionInterstitialExpandableListViewCell.titleLabel()
{
  id v0;
  id v1;
  id v2;
  Class isa;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v0, "setLineBreakMode:", 4);
  objc_msgSend(v0, "setNumberOfLines:", 0);
  v1 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  objc_msgSend(v0, "setTextColor:", v1);

  objc_msgSend(v0, "setTextAlignment:", 4);
  objc_msgSend(v0, "setAdjustsFontForContentSizeCategory:", 1);
  v2 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  isa = UIFont.withWeight(_:)(UIFontWeightSemibold).super.isa;

  objc_msgSend(v0, "setFont:", isa);
  return v0;
}

id closure #1 in variable initialization expression of MOSuggestionInterstitialExpandableListViewCell.subtitleLabel()
{
  id v0;
  id v1;
  id v2;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v0, "setLineBreakMode:", 4);
  objc_msgSend(v0, "setNumberOfLines:", 0);
  v1 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  objc_msgSend(v0, "setTextColor:", v1);

  objc_msgSend(v0, "setTextAlignment:", 4);
  objc_msgSend(v0, "setAdjustsFontForContentSizeCategory:", 1);
  v2 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  objc_msgSend(v0, "setFont:", v2);

  return v0;
}

id MOSuggestionInterstitialExpandableListViewCell.stackView.getter()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_stackView));
}

uint64_t key path getter for MOSuggestionInterstitialExpandableListViewCell.didToggle : MOSuggestionInterstitialExpandableListViewCell@<X0>(_QWORD **a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x98))();
  if (result)
  {
    v5 = result;
    v6 = v4;
    result = swift_allocObject(&unk_1001E7820, 32, 7);
    *(_QWORD *)(result + 16) = v5;
    *(_QWORD *)(result + 24) = v6;
    v7 = partial apply for thunk for @escaping @callee_guaranteed () -> (@out ());
  }
  else
  {
    v7 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())result;
  return result;
}

uint64_t key path setter for MOSuggestionInterstitialExpandableListViewCell.didToggle : MOSuggestionInterstitialExpandableListViewCell(uint64_t *a1, _QWORD **a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t (*v7)(uint64_t (*)(), uint64_t);

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject(&unk_1001E77F8, 32, 7);
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed () -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(uint64_t (**)(uint64_t (*)(), uint64_t))((swift_isaMask & **a2) + 0xA0);
  outlined copy of (@escaping @callee_guaranteed () -> ())?(v3, v4);
  return v7(v6, v5);
}

uint64_t MOSuggestionInterstitialExpandableListViewCell.didToggle.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_didToggle);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_didToggle, v4, 0, 0);
  v2 = *v1;
  outlined copy of (@escaping @callee_guaranteed () -> ())?(*v1, v1[1]);
  return v2;
}

uint64_t MOSuggestionInterstitialExpandableListViewCell.didToggle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_didToggle);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return outlined consume of (@escaping @callee_guaranteed () -> ())?(v6, v7);
}

uint64_t (*MOSuggestionInterstitialExpandableListViewCell.didToggle.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_didToggle, a1, 33, 0);
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

uint64_t MOSuggestionInterstitialExpandableListViewCell.keyColor.getter()
{
  return MOSuggestionSheetInterstitialView.controller.getter(&OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_keyColor, (uint64_t (*)(uint64_t))&_swift_unknownObjectWeakLoadStrong);
}

void MOSuggestionInterstitialExpandableListViewCell.keyColor.setter(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_keyColor;
  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_keyColor, v5, 1, 0);
  v4 = swift_unknownObjectWeakAssign(v3, a1);
  if (swift_unknownObjectWeakLoadStrong(v4))
    (*(void (**)(void))((swift_isaMask & **(_QWORD **)(v1
                                                     + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_checkmarkView))
                      + 0x88))();

}

void (*MOSuggestionInterstitialExpandableListViewCell.keyColor.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_keyColor;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  v3[3] = swift_unknownObjectWeakLoadStrong(v5);
  return MOSuggestionInterstitialExpandableListViewCell.keyColor.modify;
}

void MOSuggestionInterstitialExpandableListViewCell.keyColor.modify(uint64_t *a1, char a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;

  v3 = *a1;
  v4 = *(void **)(*a1 + 24);
  swift_unknownObjectWeakAssign(*(_QWORD *)(*a1 + 32) + *(_QWORD *)(*a1 + 40), v4);
  if ((a2 & 1) != 0)
  {

    swift_endAccess(v3);
  }
  else
  {
    v5 = *(_QWORD *)(v3 + 32) + *(_QWORD *)(v3 + 40);
    swift_endAccess(v3);

    if (swift_unknownObjectWeakLoadStrong(v5))
      (*(void (**)(void))((swift_isaMask & **(_QWORD **)(*(_QWORD *)(v3 + 32)
                                                       + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_checkmarkView))
                        + 0x88))();
  }
  free((void *)v3);
}

Swift::Void __swiftcall MOSuggestionInterstitialExpandableListViewCell.updateData()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(__n128);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  void *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  NSString v19;
  void *v20;
  uint64_t v21;
  NSString v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  NSString v28;
  void *v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  NSString v33;

  v1 = v0;
  v2 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xE0))();
  if (v2)
  {
    v3 = (unsigned __int8 *)v2;
    v4 = (*(uint64_t (**)(void))((swift_isaMask & **(_QWORD **)((char *)v0
                                                             + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_assetView))
                              + 0x70))();
    v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 272))(v4);
    if (v5)
    {
      v7 = v5;
      if ((unint64_t)v5 >> 62)
      {
        if (v5 >= 0)
          v5 &= 0xFFFFFFFFFFFFFF8uLL;
        v8 = _CocoaArrayWrapper.endIndex.getter(v5);
      }
      else
      {
        v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      v6 = swift_bridgeObjectRelease(v7);
      if (v8 == 1)
      {
        v9 = *(void (**)(__n128))(*(_QWORD *)v3 + 200);
        v9(v6);
        v11 = v10;
        v6 = swift_bridgeObjectRelease(v10);
        if (v11)
        {
          v12 = (*(uint64_t (**)(__n128))(*(_QWORD *)v3 + 176))(v6);
          if (!v12)
          {
            v29 = *(void **)((char *)v1
                           + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_titleLabel);
            ((void (*)(void))v9)();
            if (v30)
            {
              v32 = v30;
              v33 = String._bridgeToObjectiveC()();
              *(_QWORD *)&v31 = swift_bridgeObjectRelease(v32).n128_u64[0];
            }
            else
            {
              v33 = 0;
            }
            objc_msgSend(v29, "setText:", v33, v31);

            MOSuggestionInterstitialListAssetViewModel.singleFirstTitleAndDate.getter();
            if (!v26)
              goto LABEL_26;
            goto LABEL_24;
          }
          v6 = swift_bridgeObjectRelease(v12);
        }
      }
    }
    v13 = (*(uint64_t (**)(__n128))(*(_QWORD *)v3 + 176))(v6);
    if (v13)
    {
      v14 = swift_bridgeObjectRelease(v13);
      v15 = *(void **)((char *)v1
                     + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_titleLabel);
      (*(void (**)(__n128))(*(_QWORD *)v3 + 200))(v14);
      if (v16)
      {
        v18 = v16;
        v19 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v17 = swift_bridgeObjectRelease(v18).n128_u64[0];
      }
      else
      {
        v19 = 0;
      }
      objc_msgSend(v15, "setText:", v19, v17);

      if ((v3[65] | 4) == 0xF)
        MOSuggestionInterstitialListAssetViewModel.concactenatedTitles.getter();
      else
        MOSuggestionInterstitialListAssetViewModel.toplevelDateRangeString.getter();
      v25 = v24;
      if (!v24)
        goto LABEL_26;
      goto LABEL_25;
    }
    v20 = *(void **)((char *)v1
                   + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_titleLabel);
    v21 = (*(uint64_t (**)(void))(*(_QWORD *)v3 + 248))();
    v22 = (NSString)v21;
    if (v21)
    {
      if (*(_QWORD *)(v21 + 16))
      {
        v23 = *(_QWORD *)(v21 + 40);
        swift_bridgeObjectRetain(v23);
        swift_bridgeObjectRelease(v22);
        v22 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v23);
      }
      else
      {
        swift_bridgeObjectRelease(v21);
        v22 = 0;
      }
    }
    objc_msgSend(v20, "setText:", v22);

    MOSuggestionInterstitialListAssetViewModel.subLevelDateRangeString.getter();
    if (!v26)
      goto LABEL_26;
LABEL_24:
    v25 = v26;
LABEL_25:
    v27 = *(void **)((char *)v1
                   + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_subtitleLabel);
    v28 = String._bridgeToObjectiveC()();
    objc_msgSend(v27, "setText:", v28, swift_bridgeObjectRelease(v25).n128_f64[0]);

LABEL_26:
    MOSuggestionInterstitialExpandableListViewCell.setUpCheckPlatter()();
    swift_release(v3);
  }
}

uint64_t MOSuggestionInterstitialExpandableListViewCell.viewModel.getter()
{
  return MOSuggestionSheetInterstitialView.controller.getter(&OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_viewModel, (uint64_t (*)(uint64_t))&_swift_weakLoadStrong);
}

double MOSuggestionInterstitialExpandableListViewCell.viewModel.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double result;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_viewModel;
  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_viewModel, v5, 1, 0);
  swift_weakAssign(v3, a1);
  MOSuggestionInterstitialExpandableListViewCell.updateData()();
  *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  return result;
}

void (*MOSuggestionInterstitialExpandableListViewCell.viewModel.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_viewModel;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  v3[3] = swift_weakLoadStrong(v5);
  return MOSuggestionInterstitialExpandableListViewCell.viewModel.modify;
}

void MOSuggestionInterstitialExpandableListViewCell.viewModel.modify(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  swift_weakAssign(*(_QWORD *)(*(_QWORD *)a1 + 32) + *(_QWORD *)(*(_QWORD *)a1 + 40), v4);
  if ((a2 & 1) != 0)
  {
    swift_release(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_release(v4);
    MOSuggestionInterstitialExpandableListViewCell.updateData()();
  }
  free(v3);
}

char *MOSuggestionInterstitialExpandableListViewCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  objc_class *v17;
  char *v18;
  void *v19;
  uint64_t v20;
  char *v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  _QWORD *v30;
  void (*v31)(_QWORD *, const char *);
  char *v32;
  _QWORD v34[4];
  objc_super v35;

  v9 = OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_titleLabel;
  v10 = v4;
  *(_QWORD *)&v4[v9] = closure #1 in variable initialization expression of MOSuggestionInterstitialExpandableListViewCell.titleLabel();
  v11 = OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_subtitleLabel;
  *(_QWORD *)&v10[v11] = closure #1 in variable initialization expression of MOSuggestionInterstitialExpandableListViewCell.subtitleLabel();
  v12 = OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_stackView;
  v13 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v13, "setAxis:", 1);
  objc_msgSend(v13, "setAlignment:", 1);
  objc_msgSend(v13, "setDistribution:", 2);
  *(_QWORD *)&v10[v12] = v13;
  v14 = &v10[OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_didToggle];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  swift_unknownObjectWeakInit(&v10[OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_keyColor]);
  v15 = OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_assetView;
  *(_QWORD *)&v10[v15] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MOSuggestionInterstitialListAssetView()), "init");
  v10[OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_isTopLevel] = 0;
  v16 = OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_checkmarkView;
  if (one-time initialization token for checkPlatterViewSize != -1)
    swift_once(&one-time initialization token for checkPlatterViewSize, one-time initialization function for checkPlatterViewSize);
  *(_QWORD *)&v10[v16] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CanvasAssetAccessoryView()), "initWithFrame:", 0.0, 0.0, static MOSuggestionSheetMosaicCell.checkPlatterViewSize);
  swift_weakInit(&v10[OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_viewModel]);

  v17 = (objc_class *)type metadata accessor for MOSuggestionInterstitialExpandableListViewCell();
  v35.receiver = v10;
  v35.super_class = v17;
  v18 = (char *)objc_msgSendSuper2(&v35, "initWithFrame:", a1, a2, a3, a4);
  v19 = *(void **)&v18[OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_stackView];
  v20 = *(_QWORD *)&v18[OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_titleLabel];
  v21 = v18;
  objc_msgSend(v19, "addArrangedSubview:", v20);
  objc_msgSend(v19, "addArrangedSubview:", *(_QWORD *)&v21[OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_subtitleLabel]);
  v22 = objc_msgSend(v21, "contentView");
  objc_msgSend(v22, "addSubview:", v19);

  v23 = objc_msgSend(v21, "contentView");
  objc_msgSend(v23, "addSubview:", *(_QWORD *)&v21[OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_assetView]);

  v24 = objc_msgSend(v21, "contentView");
  v25 = OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_checkmarkView;
  objc_msgSend(v24, "addSubview:", *(_QWORD *)&v21[OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_checkmarkView]);

  MOSuggestionInterstitialExpandableListViewCell.setupViewsAndLayouts()();
  v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UITraitDefinition.Type>);
  v27 = swift_allocObject(v26, 48, 7);
  *(_OWORD *)(v27 + 16) = xmmword_10019ED20;
  *(_QWORD *)(v27 + 32) = type metadata accessor for UITraitUserInterfaceStyle(0);
  *(_QWORD *)(v27 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  v28 = v21;
  v29 = UIView.registerForTraitChanges(_:action:)(v27, "handleTraitChange");
  swift_unknownObjectRelease(v29);

  objc_msgSend(v28, "handleTraitChange", swift_bridgeObjectRelease(v27).n128_f64[0]);
  v30 = *(_QWORD **)&v21[v25];
  v34[3] = v17;
  v34[0] = v28;
  v31 = *(void (**)(_QWORD *, const char *))((swift_isaMask & *v30) + 0xA8);
  v32 = v28;
  v31(v34, "didTapCheckmark");
  outlined destroy of Any?((uint64_t)v34);
  MOSuggestionInterstitialExpandableListViewCell.setUpCheckPlatter()();
  objc_msgSend(v32, "setIndentationLevel:", 0, v34[0]);

  return v32;
}

Swift::Void __swiftcall MOSuggestionInterstitialExpandableListViewCell.setupViewsAndLayouts()()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  double v10;
  id v11;
  id v12;
  double v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  void *v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  void *v58;
  id v59;
  void *v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  void *v66;
  id v67;
  id v68;
  id v69;
  id v70;
  void *v71;
  id v72;
  void *v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_stackView);
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_assetView);
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = *(void **)(v0 + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_checkmarkView);
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = objc_msgSend(v3, "superview");
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v6 = objc_msgSend(v3, "leadingAnchor");
    v7 = objc_msgSend(v5, "leadingAnchor");
    v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

    objc_msgSend(v8, "setConstant:", 6.0);
    if (v8)
    {
      v9 = v8;
      objc_msgSend(v9, "setActive:", 1);

    }
  }
  if (one-time initialization token for CHECKMARK_PLATTER_SIZE != -1)
    swift_once(&one-time initialization token for CHECKMARK_PLATTER_SIZE, one-time initialization function for CHECKMARK_PLATTER_SIZE);
  v10 = *(double *)&static MOSuggestionInterstitialExpandableListViewCellConstants.CHECKMARK_PLATTER_SIZE;
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v11 = objc_msgSend(v3, "widthAnchor");
  v12 = objc_msgSend(v11, "constraintEqualToConstant:", v10);

  objc_msgSend(v12, "setActive:", 1);
  v13 = *(double *)&qword_100216D70;
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v14 = objc_msgSend(v3, "heightAnchor");
  v15 = objc_msgSend(v14, "constraintEqualToConstant:", v13);

  objc_msgSend(v15, "setActive:", 1);
  v16 = objc_msgSend(v3, "superview");
  if (v16)
  {
    v17 = v16;
    objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v18 = objc_msgSend(v3, "centerYAnchor");
    v19 = objc_msgSend(v17, "centerYAnchor");
    v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

    objc_msgSend(v20, "setConstant:", 0.0);
    v21 = v20;
    objc_msgSend(v21, "setActive:", 1);

  }
  v22 = objc_msgSend(v2, "leadingAnchor");
  v23 = objc_msgSend(v3, "trailingAnchor");
  v24 = objc_msgSend(v22, "constraintEqualToAnchor:constant:", v23, 6.0);

  objc_msgSend(v24, "setActive:", 1);
  v25 = objc_msgSend(v2, "superview");
  if (v25)
  {
    v26 = v25;
    objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v27 = objc_msgSend(v2, "centerYAnchor");
    v28 = objc_msgSend(v26, "centerYAnchor");
    v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

    objc_msgSend(v29, "setConstant:", 0.0);
    v30 = v29;
    objc_msgSend(v30, "setActive:", 1);

  }
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v31 = objc_msgSend(v2, "widthAnchor");
  v32 = objc_msgSend(v31, "constraintEqualToConstant:", 40.0);

  objc_msgSend(v32, "setActive:", 1);
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v33 = objc_msgSend(v2, "heightAnchor");
  v34 = objc_msgSend(v33, "constraintEqualToConstant:", 40.0);

  objc_msgSend(v34, "setActive:", 1);
  v35 = objc_msgSend(v1, "superview");
  if (v35)
  {
    v36 = v35;
    objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v37 = objc_msgSend(v1, "topAnchor");
    v38 = objc_msgSend(v36, "topAnchor");
    v39 = objc_msgSend(v37, "constraintEqualToAnchor:", v38);

    objc_msgSend(v39, "setConstant:", 12.0);
    v40 = v39;
    objc_msgSend(v40, "setActive:", 1);

  }
  v41 = objc_msgSend(v1, "heightAnchor");
  v42 = objc_msgSend(v41, "constraintGreaterThanOrEqualToConstant:", 40.0);

  objc_msgSend(v42, "setActive:", 1);
  v43 = objc_msgSend(v1, "superview");
  if (v43)
  {
    v44 = v43;
    objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v45 = objc_msgSend(v1, "bottomAnchor");
    v46 = objc_msgSend(v44, "bottomAnchor");
    v47 = objc_msgSend(v45, "constraintEqualToAnchor:", v46);

    if (v47)
    {
      objc_msgSend(v47, "setConstant:", -12.0);
      v48 = v47;
      objc_msgSend(v48, "setActive:", 1);

    }
  }
  v49 = objc_msgSend(v1, "superview");
  if (v49)
  {
    v50 = v49;
    objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v51 = objc_msgSend(v1, "trailingAnchor");
    v52 = objc_msgSend(v50, "trailingAnchor");
    v53 = objc_msgSend(v51, "constraintEqualToAnchor:", v52);

    objc_msgSend(v53, "setConstant:", -12.0);
    v54 = v53;
    objc_msgSend(v54, "setActive:", 1);

  }
  v55 = objc_msgSend(v1, "leadingAnchor");
  v56 = objc_msgSend(v2, "trailingAnchor");
  v57 = objc_msgSend(v55, "constraintEqualToAnchor:constant:", v56, 12.0);

  objc_msgSend(v57, "setActive:", 1);
  v58 = *(void **)(v0 + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_titleLabel);
  v59 = objc_msgSend(v58, "superview");
  if (v59)
  {
    v60 = v59;
    objc_msgSend(v58, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v61 = objc_msgSend(v58, "trailingAnchor");
    v62 = objc_msgSend(v60, "trailingAnchor");
    v63 = objc_msgSend(v61, "constraintEqualToAnchor:", v62);

    objc_msgSend(v63, "setConstant:", 0.0);
    v64 = v63;
    objc_msgSend(v64, "setActive:", 1);

  }
  v65 = objc_msgSend(v58, "superview");
  if (v65)
  {
    v66 = v65;
    objc_msgSend(v58, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v67 = objc_msgSend(v58, "leadingAnchor");
    v68 = objc_msgSend(v66, "leadingAnchor");
    v69 = objc_msgSend(v67, "constraintEqualToAnchor:", v68);

    objc_msgSend(v69, "setConstant:", 0.0);
    v70 = v69;
    objc_msgSend(v70, "setActive:", 1);

  }
  v71 = *(void **)(v0 + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_subtitleLabel);
  v72 = objc_msgSend(v71, "superview");
  if (v72)
  {
    v73 = v72;
    objc_msgSend(v71, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v74 = objc_msgSend(v71, "trailingAnchor");
    v75 = objc_msgSend(v73, "trailingAnchor");
    v76 = objc_msgSend(v74, "constraintEqualToAnchor:", v75);

    objc_msgSend(v76, "setConstant:", 0.0);
    v77 = v76;
    objc_msgSend(v77, "setActive:", 1);

  }
  v78 = objc_msgSend(v71, "superview");
  if (v78)
  {
    v83 = v78;
    objc_msgSend(v71, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v79 = objc_msgSend(v71, "leadingAnchor");
    v80 = objc_msgSend(v83, "leadingAnchor");
    v81 = objc_msgSend(v79, "constraintEqualToAnchor:", v80);

    objc_msgSend(v81, "setConstant:", 0.0);
    v82 = v81;
    objc_msgSend(v82, "setActive:", 1);

  }
}

Swift::Void __swiftcall MOSuggestionInterstitialExpandableListViewCell.setUpCheckPlatter()()
{
  _QWORD *v0;
  _QWORD *v1;
  _BYTE *v2;
  _BYTE *v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v1 = v0;
  v2 = (_BYTE *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xE0))();
  if (!v2)
    goto LABEL_7;
  v3 = v2;
  if (v2[90] != 1)
  {
LABEL_6:
    swift_release(v3);
LABEL_7:
    v6 = *(void **)((char *)v1
                  + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_checkmarkView);
    objc_msgSend(v6, "setUserInteractionEnabled:", 0);
    objc_msgSend(v6, "setHidden:", 1);
    return;
  }
  v4 = (*(uint64_t (**)(_BYTE *))(*(_QWORD *)v2 + 176))(v2);
  if (!v4)
  {
    if ((v3[88] & 1) == 0)
    {
      v5 = *(void **)((char *)v1
                    + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_checkmarkView);
      objc_msgSend(v5, "setUserInteractionEnabled:", 0);
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  swift_bridgeObjectRelease(v4);
  v5 = *(void **)((char *)v1
                + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_checkmarkView);
  objc_msgSend(v5, "setUserInteractionEnabled:", 1);
LABEL_9:
  objc_msgSend(v5, "setHidden:", 0);
  swift_release(v3);
}

id MOSuggestionInterstitialExpandableListViewCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionInterstitialExpandableListViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

Swift::Void __swiftcall MOSuggestionInterstitialExpandableListViewCell.didTapCheckmark()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  void (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xE0))();
  if (v1)
  {
    v2 = v1;
    v3 = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 176))();
    if (v3)
    {
      v4 = swift_bridgeObjectRelease(v3);
      v5 = (void (*)(void))(*(uint64_t (**)(__n128))((swift_isaMask & *v0) + 0x98))(v4);
      if (v5)
      {
        v7 = (uint64_t)v5;
        v8 = v6;
        v5();
        outlined consume of (@escaping @callee_guaranteed () -> ())?(v7, v8);
      }
    }
    swift_release(v2);
  }
}

Swift::Void __swiftcall MOSuggestionInterstitialExpandableListViewCell.updateCheckmark(_:)(Swift::Bool a1)
{
  uint64_t v1;

  (*(void (**)(Swift::Bool))((swift_isaMask & **(_QWORD **)(v1
                                                                     + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_checkmarkView))
                                      + 0xA0))(a1);
}

Swift::Void __swiftcall MOSuggestionInterstitialExpandableListViewCell.handleTraitChange()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIBackgroundConfiguration?);
  __chkstk_darwin(v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UIBackgroundConfiguration(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(v0, "traitCollection");
  v9 = objc_msgSend(v8, "userInterfaceStyle");

  static UIBackgroundConfiguration.listGroupedCell()();
  v10 = (void *)objc_opt_self(UIColor);
  if (v9 == (id)1)
  {
    v11 = objc_msgSend(v10, "systemGroupedBackgroundColor");
  }
  else
  {
    v12 = objc_msgSend(v10, "whiteColor");
    v11 = objc_msgSend(v12, "colorWithAlphaComponent:", 0.15);

  }
  UIBackgroundConfiguration.backgroundColor.setter(v11);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v3, v7, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
  UICollectionViewCell.backgroundConfiguration.setter(v3);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

Swift::Void __swiftcall MOSuggestionInterstitialExpandableListViewCell.updateTitle(_:)(Swift::String_optional a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  if (a1.value._object)
  {
    v2 = v1;
    v3 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xE0))();
    if (v3)
    {
      v4 = v3;
      v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 176))(v3);
      if (v5)
      {
        swift_bridgeObjectRelease(v5);
        v6 = *(void **)((char *)v2
                      + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_titleLabel);
        v7 = String._bridgeToObjectiveC()();
        objc_msgSend(v6, "setText:", v7);
        swift_release(v4);

      }
      else
      {
        swift_release(v4);
      }
    }
  }
}

Swift::Void __swiftcall MOSuggestionInterstitialExpandableListViewCell.prepareForReuse()()
{
  _QWORD *v0;
  void *v1;
  NSString v2;
  void *v3;
  NSString v4;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for MOSuggestionInterstitialExpandableListViewCell();
  objc_msgSendSuper2(&v5, "prepareForReuse");
  v1 = *(void **)((char *)v0
                + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_titleLabel);
  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setText:", v2);

  v3 = *(void **)((char *)v0
                + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_subtitleLabel);
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "setText:", v4);

  (*(void (**)(_QWORD))((swift_isaMask & *v0) + 0xE8))(0);
  MOSuggestionInterstitialExpandableListViewCell.setUpCheckPlatter()();
}

uint64_t type metadata accessor for MOSuggestionInterstitialExpandableListViewCell()
{
  return objc_opt_self(_TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell);
}

void specialized MOSuggestionInterstitialExpandableListViewCell.init(coder:)()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_titleLabel;
  *(_QWORD *)&v0[v1] = closure #1 in variable initialization expression of MOSuggestionInterstitialExpandableListViewCell.titleLabel();
  v2 = OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_subtitleLabel;
  *(_QWORD *)&v0[v2] = closure #1 in variable initialization expression of MOSuggestionInterstitialExpandableListViewCell.subtitleLabel();
  v3 = OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_stackView;
  v4 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v4, "setAxis:", 1);
  objc_msgSend(v4, "setAlignment:", 1);
  objc_msgSend(v4, "setDistribution:", 2);
  *(_QWORD *)&v0[v3] = v4;
  v5 = &v0[OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_didToggle];
  *v5 = 0;
  v5[1] = 0;
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_keyColor]);
  v6 = OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_assetView;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MOSuggestionInterstitialListAssetView()), "init");
  v0[OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_isTopLevel] = 0;
  v7 = OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_checkmarkView;
  if (one-time initialization token for checkPlatterViewSize != -1)
    swift_once(&one-time initialization token for checkPlatterViewSize, one-time initialization function for checkPlatterViewSize);
  *(_QWORD *)&v0[v7] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CanvasAssetAccessoryView()), "initWithFrame:", 0.0, 0.0, static MOSuggestionSheetMosaicCell.checkPlatterViewSize);
  swift_weakInit(&v0[OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_viewModel]);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionInterstitialExpandableListViewCell.swift", 69, 2, 92, 0);
  __break(1u);
}

uint64_t sub_100099FF4@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xB0))();
  *a2 = result;
  return result;
}

uint64_t sub_10009A034(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0xB8);
  v4 = *a1;
  return v3(v2);
}

uint64_t sub_10009A080@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xE0))();
  *a2 = result;
  return result;
}

uint64_t sub_10009A0C0(_QWORD *a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0xE8);
  v3 = swift_retain(*a1);
  return v2(v3);
}

ValueMetadata *type metadata accessor for MOSuggestionInterstitialExpandableListViewCellConstants()
{
  return &type metadata for MOSuggestionInterstitialExpandableListViewCellConstants;
}

uint64_t sub_10009A110()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  Swift::Int v23;
  char *v24;
  uint64_t result;
  char *v26;
  char *v27;
  void (*v28)(_BYTE *, _QWORD);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *);
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  _BYTE v44[32];
  uint64_t v45;

  v33 = a5;
  v34 = a8;
  v39 = a1;
  v40 = a2;
  v32 = *(_QWORD *)(a5 - 8);
  __chkstk_darwin(a1);
  v41 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(v12 + 8), v13, &protocol requirements base descriptor for Sequence, &associated type descriptor for Sequence.Element);
  v15 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v16 = __chkstk_darwin(AssociatedTypeWitness);
  v37 = (char *)&v30 - v17;
  v42 = a4;
  __chkstk_darwin(v16);
  v36 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = swift_getAssociatedTypeWitness(0, a6, a3, &protocol requirements base descriptor for Collection, &associated type descriptor for Collection.Index);
  v35 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v21 = (char *)&v30 - v20;
  v22 = dispatch thunk of Collection.count.getter(a3, a6);
  if (!v22)
    return static Array._allocateUninitialized(_:)(0, v42);
  v23 = v22;
  v31 = v19;
  v24 = v42;
  v45 = ContiguousArray.init()(v42);
  v38 = type metadata accessor for ContiguousArray(0, v24);
  ContiguousArray.reserveCapacity(_:)(v23);
  v42 = v21;
  result = dispatch thunk of Collection.startIndex.getter(a3);
  if (v23 < 0)
  {
    __break(1u);
  }
  else
  {
    v27 = v36;
    v26 = v37;
    while (1)
    {
      v28 = (void (*)(_BYTE *, _QWORD))dispatch thunk of Collection.subscript.read(v44, v42, a3, a6);
      (*(void (**)(char *))(v15 + 16))(v26);
      v28(v44, 0);
      v29 = v43;
      v39(v26, v41);
      if (v29)
        break;
      v43 = 0;
      (*(void (**)(char *, uint64_t))(v15 + 8))(v26, AssociatedTypeWitness);
      ContiguousArray.append(_:)(v27, v38);
      dispatch thunk of Collection.formIndex(after:)(v42, a3, a6);
      if (!--v23)
      {
        (*(void (**)(char *, uint64_t))(v35 + 8))(v42, v31);
        return v45;
      }
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v26, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v42, v31);
    swift_release(v45);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v32 + 32))(v34, v41, v33);
  }
  return result;
}

uint64_t MOWeakArray.count.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MOWeakArray.count.getter(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))&Array.count.getter);
}

uint64_t type metadata accessor for MOWeakReference(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MOWeakReference);
}

double MOWeakArray.subscript.setter(uint64_t a1, Swift::Int a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double result;

  if (a1)
  {
    v7 = type metadata accessor for MOWeakReference(0, *(_QWORD *)(a3 + 16), a3, a4);
    v11 = specialized MOWeakReference.__allocating_init(_:)(a1, v8, v9, v10);
    type metadata accessor for Array(0, v7);
    swift_unknownObjectRetain();
    Array._makeMutableAndUnique()();
    v12 = *v4;
    Array._checkSubscript_mutating(_:)(a2);
    v13 = (v12 & 0xFFFFFFFFFFFFFF8) + 8 * a2;
    v14 = *(_QWORD *)(v13 + 0x20);
    *(_QWORD *)(v13 + 32) = v11;
    swift_unknownObjectRelease_n(a1, 2);
    *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  }
  return result;
}

uint64_t MOWeakArray.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v7 = type metadata accessor for MOWeakReference(0, a5, a3, a4);
  v8 = Array.subscript.getter(a1, a2, v7, (uint64_t)&v12);
  v9 = v12;
  if (!v12)
    return 0;
  v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v12 + 96))(v8);
  swift_release(v9);
  return v10;
}

uint64_t MOWeakArray.init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  specialized MOWeakArray.init(_:)(a1, a2);
  v4 = v3;
  swift_bridgeObjectRelease(a1);
  return v4;
}

uint64_t MOWeakReference.strongValue.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 16, v2, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v0 + 16);
}

uint64_t MOWeakReference.strongValue.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + 16;
  swift_beginAccess(v3, v5, 1, 0);
  swift_unknownObjectWeakAssign(v3, a1);
  return swift_unknownObjectRelease(a1);
}

void (*MOWeakReference.strongValue.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess(v1 + 16, v3, 33, 0);
  v3[3] = swift_unknownObjectWeakLoadStrong(v1 + 16);
  return MOWeakReference.strongValue.modify;
}

void MOWeakReference.strongValue.modify(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  swift_unknownObjectWeakAssign(*(_QWORD *)(*(_QWORD *)a1 + 32) + 16, v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
  }
  free(v3);
}

uint64_t MOWeakReference.__allocating_init(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  v5 = specialized MOWeakReference.__allocating_init(_:)(a1, a2, a3, a4);
  swift_unknownObjectRelease(a1);
  return v5;
}

uint64_t MOWeakReference.init(_:)(uint64_t a1)
{
  uint64_t v2;

  v2 = specialized MOWeakReference.init(_:)(a1);
  swift_unknownObjectRelease(a1);
  return v2;
}

uint64_t MOWeakReference.deinit()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return v0;
}

uint64_t MOWeakReference.__deallocating_deinit()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t MOWeakArray.init(repeating:count:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v9 = a1;
  v5 = specialized Array.init(repeating:count:)((uint64_t)&v9, a2, a3);
  specialized MOWeakArray.init(_:)(v5, a3);
  v7 = v6;
  swift_unknownObjectRelease(a1);
  swift_bridgeObjectRelease(v5);
  return v7;
}

uint64_t MOWeakArray.endIndex.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MOWeakArray.count.getter(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))&Array.endIndex.getter);
}

uint64_t MOWeakArray.count.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v6;

  v6 = type metadata accessor for MOWeakReference(0, a4, a3, a4);
  return a5(a1, v6);
}

uint64_t MOWeakArray.first.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t WitnessTable;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = type metadata accessor for MOWeakReference(255, a4, a3, a4);
  v5 = type metadata accessor for Array(0, v4);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v5);
  v7 = Collection.first.getter(&v11, v5, WitnessTable);
  v8 = v11;
  if (!v11)
    return 0;
  v9 = (*(uint64_t (**)(_QWORD *))(*(_QWORD *)v11 + 96))(v7);
  swift_release(v8);
  return v9;
}

double key path setter for MOWeakArray.subscript(_:) : <A>MOWeakArray<A>A(uint64_t a1, uint64_t a2, Swift::Int *a3, uint64_t a4)
{
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a3;
  v5 = type metadata accessor for MOWeakArray(0, *(Swift::Int *)((char *)a3 + a4 - 8), (uint64_t)a3, a4);
  v6 = swift_unknownObjectRetain();
  return MOWeakArray.subscript.setter(v6, v4, v5, v7);
}

double (*MOWeakArray.subscript.modify(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  a1[2] = a3;
  a1[3] = (uint64_t)v4;
  a1[1] = a2;
  *a1 = MOWeakArray.subscript.getter(a2, *v4, a3, a4, *(_QWORD *)(a3 + 16));
  return MOWeakArray.subscript.modify;
}

double MOWeakArray.subscript.modify(uint64_t *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  uint64_t v8;
  double result;

  v4 = a1[2];
  v5 = *a1;
  v6 = a1[1];
  if ((a2 & 1) == 0)
    return MOWeakArray.subscript.setter(*a1, v6, v4, a4);
  v7 = swift_unknownObjectRetain();
  MOWeakArray.subscript.setter(v7, v6, v4, v8);
  swift_unknownObjectRelease(v5);
  return result;
}

Swift::Int __swiftcall MOWeakArray.index(after:)(Swift::Int after)
{
  BOOL v1;
  Swift::Int result;

  v1 = __OFADD__(after, 1);
  result = after + 1;
  if (v1)
    __break(1u);
  return result;
}

uint64_t protocol witness for Collection.endIndex.getter in conformance MOWeakArray<A>@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t *v4;
  uint64_t result;

  result = MOWeakArray.endIndex.getter(*v4, a2, a3, *(_QWORD *)(a1 + 16));
  *a4 = result;
  return result;
}

void (*protocol witness for Collection.subscript.read in conformance MOWeakArray<A>(uint64_t **a1, uint64_t *a2, uint64_t a3))(_QWORD *a1)
{
  uint64_t *v3;
  uint64_t *v7;
  uint64_t (*v8)(_QWORD *);
  uint64_t v9;

  v7 = (uint64_t *)malloc(0x30uLL);
  *a1 = v7;
  v8 = MOWeakArray.subscript.read(v7, *a2, *v3, v3[1], v3[2], *(_QWORD *)(a3 + 16));
  v7[4] = v9;
  v7[5] = (uint64_t)v8;
  return protocol witness for Collection.subscript.read in conformance MOWeakArray<A>;
}

void protocol witness for Collection.subscript.read in conformance MOWeakArray<A>(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 40))(*a1);
  free(v1);
}

uint64_t (*MOWeakArray.subscript.read(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6))(_QWORD *a1)
{
  *a1 = MOWeakArray.subscript.getter(a2, a3, a3, a4, a6);
  return MOWeakArray.subscript.read;
}

uint64_t MOWeakArray.subscript.read(_QWORD *a1)
{
  return swift_unknownObjectRelease(*a1);
}

uint64_t protocol witness for Collection.count.getter in conformance MOWeakArray<A>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return MOWeakArray.count.getter(*v3, a2, a3, *(_QWORD *)(a1 + 16));
}

void protocol witness for Collection._customIndexOfEquatableElement(_:) in conformance MOWeakArray<A>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t protocol witness for Collection._failEarlyRangeCheck(_:bounds:) in conformance MOWeakArray<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return specialized Collection._failEarlyRangeCheck(_:bounds:)(a1, a2, a3, a4, (uint64_t (*)(_QWORD, uint64_t, uint64_t))&type metadata accessor for Range, (uint64_t (*)(char *, char *, uint64_t, uint64_t))&dispatch thunk of static Comparable.< infix(_:_:));
}

{
  return specialized Collection._failEarlyRangeCheck(_:bounds:)(a1, a2, a3, a4, (uint64_t (*)(_QWORD, uint64_t, uint64_t))&type metadata accessor for ClosedRange, (uint64_t (*)(char *, char *, uint64_t, uint64_t))&dispatch thunk of static Comparable.<= infix(_:_:));
}

_QWORD *protocol witness for Collection.index(after:) in conformance MOWeakArray<A>@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  if (__OFADD__(*result, 1))
    __break(1u);
  else
    *a2 = *result + 1;
  return result;
}

_QWORD *protocol witness for Collection.formIndex(after:) in conformance MOWeakArray<A>(_QWORD *result)
{
  if (__OFADD__(*result, 1))
    __break(1u);
  else
    ++*result;
  return result;
}

__n128 protocol witness for Sequence.makeIterator() in conformance MOWeakArray<A>@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  unint64_t v2;
  __n128 result;

  v2 = v1[1].n128_u64[0];
  result = *v1;
  *a1 = *v1;
  a1[1].n128_u64[0] = v2;
  a1[1].n128_u64[1] = 0;
  return result;
}

uint64_t protocol witness for Sequence.underestimatedCount.getter in conformance MOWeakArray<A>(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for MOWeakArray<A>, a1);
  return Collection.underestimatedCount.getter(a1, WitnessTable);
}

uint64_t protocol witness for Sequence._copyToContiguousArray() in conformance MOWeakArray<A>(uint64_t a1)
{
  _QWORD *v1;
  uint64_t WitnessTable;
  uint64_t v4;

  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for MOWeakArray<A>, a1);
  v4 = specialized Collection._copyToContiguousArray()(v1, a1, WitnessTable);
  swift_bridgeObjectRelease(*v1);
  swift_bridgeObjectRelease(v1[1]);
  return v4;
}

uint64_t protocol witness for Sequence.withContiguousStorageIfAvailable<A>(_:) in conformance MOWeakArray<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Sequence.withContiguousStorageIfAvailable<A>(_:)(a1, a2, a4, a3);
}

Swift::Void __swiftcall Array._checkSubscript_mutating(_:)(Swift::Int a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v5;

  v2 = v1;
  v4 = ((uint64_t (*)())_swift_isClassOrObjCExistentialType)();
  if (a1 < 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return;
  }
  v5 = v2 & 0xFFFFFFFFFFFFF8;
  if ((v4 & 1) == 0)
    v5 = v2;
  if (*(_QWORD *)(v5 + 16) <= (unint64_t)a1)
    goto LABEL_7;
}

uint64_t specialized Collection._failEarlyRangeCheck(_:bounds:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char v17;
  void (*v18)(char *, uint64_t, uint64_t);
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t result;
  void (*v22)(char *, uint64_t);
  uint64_t v23;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, a4, a3, &protocol requirements base descriptor for Collection, &associated type descriptor for Collection.Index);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a4, a3, AssociatedTypeWitness, &protocol requirements base descriptor for Collection, &associated conformance descriptor for Collection.Collection.Index: Comparable);
  v10 = type metadata accessor for Range(0, AssociatedTypeWitness, AssociatedConformanceWitness);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v23 - v15;
  v17 = dispatch thunk of static Comparable.<= infix(_:_:)(a2, a1, AssociatedTypeWitness, AssociatedConformanceWitness);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v18(v16, a1, v10);
  v18(v14, a2, v10);
  if ((v17 & 1) == 0)
  {
    v22 = *(void (**)(char *, uint64_t))(v11 + 8);
    v22(v14, v10);
    result = ((uint64_t (*)(char *, uint64_t))v22)(v16, v10);
    goto LABEL_5;
  }
  v19 = dispatch thunk of static Comparable.<= infix(_:_:)(&v16[*(int *)(v10 + 36)], &v14[*(int *)(v10 + 36)], AssociatedTypeWitness, AssociatedConformanceWitness);
  v20 = *(void (**)(char *, uint64_t))(v11 + 8);
  v20(v14, v10);
  result = ((uint64_t (*)(char *, uint64_t))v20)(v16, v10);
  if ((v19 & 1) == 0)
LABEL_5:
    __break(1u);
  return result;
}

uint64_t specialized Collection._failEarlyRangeCheck(_:bounds:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t), uint64_t (*a6)(char *, char *, uint64_t, uint64_t))
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  uint64_t (*v25)(char *, char *, uint64_t, uint64_t);

  v25 = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, a4, a3, &protocol requirements base descriptor for Collection, &associated type descriptor for Collection.Index);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a4, a3, AssociatedTypeWitness, &protocol requirements base descriptor for Collection, &associated conformance descriptor for Collection.Collection.Index: Comparable);
  v13 = a5(0, AssociatedTypeWitness, AssociatedConformanceWitness);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v24 - v16;
  v18 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v15);
  v20 = (char *)&v24 - v19;
  v21 = dispatch thunk of static Comparable.<= infix(_:_:)(a2, a1, AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, a1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, a2, v13);
  if ((v21 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    result = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, AssociatedTypeWitness);
    goto LABEL_5;
  }
  v22 = v25(v20, &v17[*(int *)(v13 + 36)], AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  result = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, AssociatedTypeWitness);
  if ((v22 & 1) == 0)
LABEL_5:
    __break(1u);
  return result;
}

uint64_t specialized Array.init(repeating:count:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = static Array._allocateUninitialized(_:)(a2, a3);
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    v8 = result;
    if (a2)
    {
      v9 = v7;
      v10 = *(_QWORD *)(a3 - 8);
      v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
      v11(v7, a1, a3);
      v12 = a2 - 1;
      if (v12)
      {
        v13 = *(_QWORD *)(v10 + 72);
        v14 = v9 + v13;
        do
        {
          v11(v14, a1, a3);
          v14 += v13;
          --v12;
        }
        while (v12);
      }
    }
    type metadata accessor for Array(0, a3);
    return v8;
  }
  return result;
}

uint64_t specialized MOWeakReference.init(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = swift_unknownObjectWeakInit(v1 + 16, 0);
  swift_beginAccess(v3, v5, 1, 0);
  swift_unknownObjectWeakAssign(v1 + 16, a1);
  return v1;
}

uint64_t specialized MOWeakReference.__allocating_init(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;

  v6 = type metadata accessor for MOWeakReference(0, *(_QWORD *)(v4 + 80), a3, a4);
  swift_allocObject(v6, 24, 7);
  return specialized MOWeakReference.init(_:)(a1);
}

double specialized MOWeakArray.init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t WitnessTable;
  uint64_t v8;
  uint64_t v9;
  double result;
  _QWORD v11[6];

  v11[5] = a1;
  v11[2] = a2;
  v3 = type metadata accessor for Array(0, a2);
  v6 = (char *)type metadata accessor for MOWeakReference(0, a2, v4, v5);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v3);
  v9 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF((void (*)(char *, char *))partial apply for closure #1 in MOWeakArray.init(_:), (uint64_t)v11, v3, v6, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v8);
  *(_QWORD *)&result = swift_bridgeObjectRetain(v9).n128_u64[0];
  return result;
}

uint64_t base witness table accessor for Sequence in MOWeakArray<A>(uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for MOWeakArray<A>, a1);
}

void *associated type witness table accessor for Collection.Index : Comparable in MOWeakArray<A>()
{
  return &protocol witness table for Int;
}

uint64_t associated type witness table accessor for Collection.Indices : Collection in MOWeakArray<A>(uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for DefaultIndices<A>, a1);
}

uint64_t associated type witness table accessor for Collection.SubSequence : Collection in MOWeakArray<A>(uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for Slice<A>, a1);
}

uint64_t associated type witness table accessor for Sequence.Iterator : IteratorProtocol in MOWeakArray<A>(uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for IndexingIterator<A>, a1);
}

uint64_t sub_10009B250@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 96))();
  *a2 = result;
  return result;
}

uint64_t sub_10009B280(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 104);
  v3 = swift_unknownObjectRetain();
  return v2(v3);
}

uint64_t sub_10009B2B0()
{
  return 8;
}

_QWORD *sub_10009B2BC(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10009B2C8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result;

  result = MOWeakArray.subscript.getter(*a2, *a1, a3, a4, *(uint64_t *)((char *)a2 + a3 - 8));
  *a5 = result;
  return result;
}

uint64_t sub_10009B304()
{
  return 8;
}

uint64_t type metadata completion function for MOWeakReference(uint64_t a1)
{
  const char *v2;

  v2 = "\b";
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + 88);
}

uint64_t type metadata instantiation function for MOWeakArray(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

uint64_t destroy for MOWeakArray(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  return swift_bridgeObjectRelease(a1[1]);
}

uint64_t *initializeBufferWithCopyOfBuffer for MOWeakArray(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t *assignWithCopy for MOWeakArray(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[2] = a2[2];
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

_QWORD *assignWithTake for MOWeakArray(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;

  swift_bridgeObjectRelease(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease(v4);
  a1[2] = *(_QWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for MOWeakArray(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MOWeakArray(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for MOWeakArray(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MOWeakArray);
}

uint64_t partial apply for closure #1 in MOWeakArray.init(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *a1;
  v8 = type metadata accessor for MOWeakReference(0, v6, a2, a3);
  result = specialized MOWeakReference.__allocating_init(_:)(v7, v8, v9, v10);
  *a4 = result;
  return result;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return swift_getGenericMetadata(a1, v6, a5);
}

MomentsUIService::FallbackAssetSymbol __swiftcall FallbackAssetSymbol.init(visualSubType:)(MomentsUIService::MOSuggestionAssetVisualSubType visualSubType)
{
  if (visualSubType > MomentsUIService_MOSuggestionAssetVisualSubType_mapMultiPin)
    return 6;
  else
    return byte_1001A0F90[visualSubType];
}

uint64_t FallbackAssetSymbol.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10009B5F0 + 4 * byte_1001A0E60[a1]))(0x6F746F6870, 0xE500000000000000);
}

uint64_t sub_10009B5F0()
{
  return 0x6F65646976;
}

uint64_t sub_10009B600()
{
  return 0x636973756DLL;
}

uint64_t sub_10009B610()
{
  return 0x7374736163646F70;
}

unint64_t sub_10009B628()
{
  return 0xD000000000000015;
}

unint64_t sub_10009B69C()
{
  return 0xD000000000000011;
}

void MOSuggestionFallbackAssetView.__allocating_init(with:sizeType:)(uint64_t a1, unint64_t a2, char a3)
{
  objc_class *v3;
  id v7;
  NSMutableDictionary *connectionProperties;
  id v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v7 = objc_msgSend(objc_allocWithZone(v3), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  connectionProperties = serverManager._connectionProperties;
  v9 = v7;
  if (connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v10 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v10, (uint64_t)static MOAngelLogger.assets);
  v11 = swift_bridgeObjectRetain_n(a2, 2);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v17 = v15;
    *(_DWORD *)v14 = 136315138;
    swift_bridgeObjectRetain(a2);
    v16 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v14 + 4);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "[MOSuggestionFallbackAssetView] fallbackSymbol=%s", v14, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  __asm { BR              X11 }
}

id one-time initialization function for BIG_SYMBOL()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:scale:", 4, 3, 46.0);
  static FallbackConstants.BIG_SYMBOL = (uint64_t)result;
  return result;
}

uint64_t *FallbackConstants.BIG_SYMBOL.unsafeMutableAddressor()
{
  if (one-time initialization token for BIG_SYMBOL != -1)
    swift_once(&one-time initialization token for BIG_SYMBOL, one-time initialization function for BIG_SYMBOL);
  return &static FallbackConstants.BIG_SYMBOL;
}

id static FallbackConstants.BIG_SYMBOL.getter()
{
  return default argument 2 of MOSuggestionWorkoutIconGlyphView.init(image:glyphBackgroundColor:glyphTintColor:)(&one-time initialization token for BIG_SYMBOL, (id *)&static FallbackConstants.BIG_SYMBOL);
}

void *FallbackConstants.SMALL_SYMBOL_BOUND.unsafeMutableAddressor()
{
  return &static FallbackConstants.SMALL_SYMBOL_BOUND;
}

double static ProgressIndicatorConstants.FRAME_SIZE.getter()
{
  return 30.0;
}

void one-time initialization function for SMALL_SYMBOL()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleLargeTitle);
  v1 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", v0, -1);

  static FallbackConstants.SMALL_SYMBOL = (uint64_t)v1;
}

uint64_t *FallbackConstants.SMALL_SYMBOL.unsafeMutableAddressor()
{
  if (one-time initialization token for SMALL_SYMBOL != -1)
    swift_once(&one-time initialization token for SMALL_SYMBOL, one-time initialization function for SMALL_SYMBOL);
  return &static FallbackConstants.SMALL_SYMBOL;
}

id static FallbackConstants.SMALL_SYMBOL.getter()
{
  return default argument 2 of MOSuggestionWorkoutIconGlyphView.init(image:glyphBackgroundColor:glyphTintColor:)(&one-time initialization token for SMALL_SYMBOL, (id *)&static FallbackConstants.SMALL_SYMBOL);
}

id one-time initialization function for IMAGE_TINT_COLOR(uint64_t a1)
{
  return one-time initialization function for IMAGE_TINT_COLOR(a1, (SEL *)&selRef_systemLightGrayColor, &static FallbackConstants.IMAGE_TINT_COLOR);
}

uint64_t *FallbackConstants.IMAGE_TINT_COLOR.unsafeMutableAddressor()
{
  if (one-time initialization token for IMAGE_TINT_COLOR != -1)
    swift_once(&one-time initialization token for IMAGE_TINT_COLOR, one-time initialization function for IMAGE_TINT_COLOR);
  return &static FallbackConstants.IMAGE_TINT_COLOR;
}

id static FallbackConstants.IMAGE_TINT_COLOR.getter()
{
  return default argument 2 of MOSuggestionWorkoutIconGlyphView.init(image:glyphBackgroundColor:glyphTintColor:)(&one-time initialization token for IMAGE_TINT_COLOR, (id *)&static FallbackConstants.IMAGE_TINT_COLOR);
}

id one-time initialization function for BACKGROUND_COLOR(uint64_t a1)
{
  return one-time initialization function for IMAGE_TINT_COLOR(a1, (SEL *)&selRef_tertiarySystemFillColor, &static FallbackConstants.BACKGROUND_COLOR);
}

id one-time initialization function for IMAGE_TINT_COLOR(uint64_t a1, SEL *a2, _QWORD *a3)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), *a2);
  *a3 = result;
  return result;
}

uint64_t *FallbackConstants.BACKGROUND_COLOR.unsafeMutableAddressor()
{
  if (one-time initialization token for BACKGROUND_COLOR != -1)
    swift_once(&one-time initialization token for BACKGROUND_COLOR, one-time initialization function for BACKGROUND_COLOR);
  return &static FallbackConstants.BACKGROUND_COLOR;
}

id static FallbackConstants.BACKGROUND_COLOR.getter()
{
  return default argument 2 of MOSuggestionWorkoutIconGlyphView.init(image:glyphBackgroundColor:glyphTintColor:)(&one-time initialization token for BACKGROUND_COLOR, (id *)&static FallbackConstants.BACKGROUND_COLOR);
}

uint64_t FallbackAssetSymbol.init(assetType:mediaType:)(void *a1, uint64_t a2, char a3)
{
  return specialized FallbackAssetSymbol.init(assetType:mediaType:)(a1, a2, a3 & 1);
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance FallbackAssetSymbol(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = FallbackAssetSymbol.rawValue.getter(*a1);
  v5 = v4;
  v6 = FallbackAssetSymbol.rawValue.getter(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance FallbackAssetSymbol()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  v1 = *v0;
  Hasher.init(_seed:)(v6, 0);
  v2 = FallbackAssetSymbol.rawValue.getter(v1);
  v4 = v3;
  String.hash(into:)(v6, v2, v3);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

double protocol witness for Hashable.hash(into:) in conformance FallbackAssetSymbol(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  v3 = FallbackAssetSymbol.rawValue.getter(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  return result;
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance FallbackAssetSymbol(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[9];

  v2 = *v1;
  Hasher.init(_seed:)(v7, a1);
  v3 = FallbackAssetSymbol.rawValue.getter(v2);
  v5 = v4;
  String.hash(into:)(v7, v3, v4);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance FallbackAssetSymbol@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = specialized FallbackAssetSymbol.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance FallbackAssetSymbol@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = FallbackAssetSymbol.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

id MOSuggestionFallbackAssetView.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  uint64_t v13;
  id v14;
  objc_super v16;

  v9 = OBJC_IVAR____TtC16MomentsUIService29MOSuggestionFallbackAssetView_imageView;
  v10 = objc_allocWithZone((Class)UIImageView);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "init");

  v16.receiver = v11;
  v16.super_class = (Class)type metadata accessor for MOSuggestionFallbackAssetView();
  v12 = objc_msgSendSuper2(&v16, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v12, "setContentMode:", 2);
  v13 = one-time initialization token for BACKGROUND_COLOR;
  v14 = v12;
  if (v13 != -1)
    swift_once(&one-time initialization token for BACKGROUND_COLOR, one-time initialization function for BACKGROUND_COLOR);
  objc_msgSend(v14, "setBackgroundColor:", static FallbackConstants.BACKGROUND_COLOR);

  return v14;
}

void MOSuggestionFallbackAssetView.init(coder:)()
{
  char *v0;
  uint64_t v1;

  v1 = OBJC_IVAR____TtC16MomentsUIService29MOSuggestionFallbackAssetView_imageView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionFallbackAssetView.swift", 52, 2, 89, 0);
  __break(1u);
}

id MOSuggestionFallbackAssetView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionFallbackAssetView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t specialized FallbackAssetSymbol.init(assetType:mediaType:)(void *a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypePhoto);
  v8 = v7;
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v6 == v9 && v8 == v10)
    goto LABEL_14;
  v12 = v10;
  v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v9, v10, 0);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v12);
  if ((v13 & 1) != 0)
  {
LABEL_15:

    return 0;
  }
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeLivePhoto);
  v8 = v15;
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v14 == v16 && v8 == v17)
  {
LABEL_14:
    swift_bridgeObjectRelease_n(v8, 2);
    goto LABEL_15;
  }
  v19 = v17;
  v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v8, v16, v17, 0);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v19);
  if ((v20 & 1) != 0)
    goto LABEL_15;
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeVideo);
  v23 = v22;
  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v26 = v24;
  if (v21 == v25 && v23 == v24)
  {
    swift_bridgeObjectRelease_n(v23, 2);
LABEL_18:

    return 1;
  }
  v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v23, v25, v24, 0);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v26);
  if ((v29 & 1) != 0)
    goto LABEL_18;
  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeWorkout);
  v32 = v31;
  v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v35 = v33;
  if (v30 == v34 && v32 == v33)
  {
    swift_bridgeObjectRelease_n(v32, 2);
LABEL_23:

    return 5;
  }
  v36 = _stringCompareWithSmolCheck(_:_:expecting:)(v30, v32, v34, v33, 0);
  swift_bridgeObjectRelease(v32);
  swift_bridgeObjectRelease(v35);
  if ((v36 & 1) != 0)
    goto LABEL_23;
  v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeContactPhoto);
  v39 = v38;
  v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v42 = v40;
  if (v37 == v41 && v39 == v40)
  {
    swift_bridgeObjectRelease_n(v39, 2);
LABEL_28:

    return 7;
  }
  v43 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v39, v41, v40, 0);
  swift_bridgeObjectRelease(v39);
  swift_bridgeObjectRelease(v42);
  if ((v43 & 1) != 0)
    goto LABEL_28;
  v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeMediaCoverArt);
  v46 = v45;
  v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v49 = v47;
  if (v44 == v48 && v46 == v47)
  {
    swift_bridgeObjectRelease_n(v46, 2);
    goto LABEL_33;
  }
  v50 = _stringCompareWithSmolCheck(_:_:expecting:)(v44, v46, v48, v47, 0);
  swift_bridgeObjectRelease(v46);
  swift_bridgeObjectRelease(v49);
  if ((v50 & 1) != 0)
  {
LABEL_33:

    if ((a3 & 1) != 0)
      return 6;
    v27 = 2;
    if (a2 != 1)
    {
      if (a2 == 4)
        return 2;
      else
        return 3;
    }
    return v27;
  }
  v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeMultiPinMap);
  v53 = v52;
  v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v56 = v54;
  if (v51 == v55 && v53 == v54)
  {
    swift_bridgeObjectRelease_n(v53, 2);
LABEL_43:

    return 4;
  }
  v57 = _stringCompareWithSmolCheck(_:_:expecting:)(v51, v53, v55, v54, 0);
  swift_bridgeObjectRelease(v53);
  swift_bridgeObjectRelease(v56);
  if ((v57 & 1) != 0)
    goto LABEL_43;
  v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeStateOfMindAsset);
  v60 = v59;
  v62 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v63 = v61;
  v27 = 8;
  if (v58 != v62 || v60 != v61)
  {
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(v58, v60, v62, v61, 0) & 1) != 0)
      v27 = 8;
    else
      v27 = 6;
  }
  v64 = a1;

  swift_bridgeObjectRelease(v60);
  swift_bridgeObjectRelease(v63);
  return v27;
}

unint64_t specialized FallbackAssetSymbol.init(rawValue:)(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of FallbackAssetSymbol.init(rawValue:), v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 9)
    return 9;
  else
    return v3;
}

uint64_t type metadata accessor for MOSuggestionFallbackAssetView()
{
  return objc_opt_self(_TtC16MomentsUIService29MOSuggestionFallbackAssetView);
}

unint64_t lazy protocol witness table accessor for type FallbackAssetSymbol and conformance FallbackAssetSymbol()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type FallbackAssetSymbol and conformance FallbackAssetSymbol;
  if (!lazy protocol witness table cache variable for type FallbackAssetSymbol and conformance FallbackAssetSymbol)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FallbackAssetSymbol, &type metadata for FallbackAssetSymbol);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type FallbackAssetSymbol and conformance FallbackAssetSymbol);
  }
  return result;
}

ValueMetadata *type metadata accessor for FallbackConstants()
{
  return &type metadata for FallbackConstants;
}

uint64_t getEnumTagSinglePayload for FallbackAssetSymbol(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FallbackAssetSymbol(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_10009CC94 + 4 * byte_1001A0E6E[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_10009CCC8 + 4 * byte_1001A0E69[v4]))();
}

uint64_t sub_10009CCC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10009CCD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10009CCD8);
  return result;
}

uint64_t sub_10009CCE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10009CCECLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_10009CCF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10009CCF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FallbackAssetSymbol()
{
  return &type metadata for FallbackAssetSymbol;
}

id MOSuggestionAssetPhotoLivePhotoVideosType.assetType.getter(char a1)
{
  return *(id *)*(&off_1001E80E8 + a1);
}

MomentsUIService::MOSuggestionAssetPhotoLivePhotoVideosType_optional __swiftcall MOSuggestionAssetPhotoLivePhotoVideosType.init(rawValue:)(Swift::Int rawValue)
{
  if ((unint64_t)rawValue >= 3)
    LOBYTE(rawValue) = 3;
  return (MomentsUIService::MOSuggestionAssetPhotoLivePhotoVideosType_optional)rawValue;
}

uint64_t *protocol witness for RawRepresentable.init(rawValue:) in conformance MOSuggestionAssetPhotoLivePhotoVideosType@<X0>(uint64_t *result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  v2 = *result;
  if ((unint64_t)*result >= 3)
    LOBYTE(v2) = 3;
  *a2 = v2;
  return result;
}

int64x2_t one-time initialization function for highQualityImageSize()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4097700000000000uLL);
  static MOSuggestionAssetPhotoLivePhotoVideosProvider.highQualityImageSize = (__int128)result;
  return result;
}

{
  int64x2_t result;

  result = vdupq_n_s64(0x409F400000000000uLL);
  static MOAssetPhotoMomentProvider.highQualityImageSize = (__int128)result;
  return result;
}

__int128 *MOSuggestionAssetPhotoLivePhotoVideosProvider.highQualityImageSize.unsafeMutableAddressor()
{
  if (one-time initialization token for highQualityImageSize != -1)
    swift_once(&one-time initialization token for highQualityImageSize, one-time initialization function for highQualityImageSize);
  return &static MOSuggestionAssetPhotoLivePhotoVideosProvider.highQualityImageSize;
}

double static MOSuggestionAssetPhotoLivePhotoVideosProvider.highQualityImageSize.getter()
{
  if (one-time initialization token for highQualityImageSize != -1)
    swift_once(&one-time initialization token for highQualityImageSize, one-time initialization function for highQualityImageSize);
  return *(double *)&static MOSuggestionAssetPhotoLivePhotoVideosProvider.highQualityImageSize;
}

void one-time initialization function for fileProviderDomain()
{
  NSString v0;
  id v1;
  NSString v2;
  NSString v3;
  id v4;

  v0 = String._bridgeToObjectiveC()();
  v1 = objc_allocWithZone((Class)NSFileProviderDomain);
  v2 = String._bridgeToObjectiveC()();
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v1, "initWithIdentifier:displayName:pathRelativeToDocumentStorage:hidden:", v0, v2, v3, 1);

  static MOSuggestionAssetPhotoLivePhotoVideosProvider.fileProviderDomain = (uint64_t)v4;
}

uint64_t *MOSuggestionAssetPhotoLivePhotoVideosProvider.fileProviderDomain.unsafeMutableAddressor()
{
  if (one-time initialization token for fileProviderDomain != -1)
    swift_once(&one-time initialization token for fileProviderDomain, one-time initialization function for fileProviderDomain);
  return &static MOSuggestionAssetPhotoLivePhotoVideosProvider.fileProviderDomain;
}

id static MOSuggestionAssetPhotoLivePhotoVideosProvider.fileProviderDomain.getter()
{
  if (one-time initialization token for fileProviderDomain != -1)
    swift_once(&one-time initialization token for fileProviderDomain, one-time initialization function for fileProviderDomain);
  return (id)static MOSuggestionAssetPhotoLivePhotoVideosProvider.fileProviderDomain;
}

void one-time initialization function for photosFileProviderManager()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;

  if (one-time initialization token for fileProviderDomain != -1)
    swift_once(&one-time initialization token for fileProviderDomain, one-time initialization function for fileProviderDomain);
  v0 = (id)static MOSuggestionAssetPhotoLivePhotoVideosProvider.fileProviderDomain;
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend((id)objc_opt_self(NSFileProviderManager), "managerWithProviderIdentifier:groupName:domain:", v1, v2, v0);

  static MOSuggestionAssetPhotoLivePhotoVideosProvider.photosFileProviderManager = (uint64_t)v3;
}

uint64_t *MOSuggestionAssetPhotoLivePhotoVideosProvider.photosFileProviderManager.unsafeMutableAddressor()
{
  if (one-time initialization token for photosFileProviderManager != -1)
    swift_once(&one-time initialization token for photosFileProviderManager, one-time initialization function for photosFileProviderManager);
  return &static MOSuggestionAssetPhotoLivePhotoVideosProvider.photosFileProviderManager;
}

uint64_t static MOSuggestionAssetPhotoLivePhotoVideosProvider.photosFileProviderManager.getter()
{
  uint64_t v0;
  id v1;

  if (one-time initialization token for photosFileProviderManager != -1)
    swift_once(&one-time initialization token for photosFileProviderManager, one-time initialization function for photosFileProviderManager);
  v0 = static MOSuggestionAssetPhotoLivePhotoVideosProvider.photosFileProviderManager;
  v1 = (id)static MOSuggestionAssetPhotoLivePhotoVideosProvider.photosFileProviderManager;
  return v0;
}

uint64_t PropertyDescriptor.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.uuid.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

id MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.asset.getter()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + *(int *)(type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(0)
                                    + 20)));
}

uint64_t type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(uint64_t a1)
{
  uint64_t result;

  result = type metadata singleton initialization cache for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask;
  if (!type metadata singleton initialization cache for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask);
  return result;
}

void MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.asset.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(0) + 20);

  *(_QWORD *)(v1 + v3) = a1;
}

void (__swiftcall *MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.asset.modify())()
{
  type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(0);
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

double MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.targetSize.getter()
{
  uint64_t v0;

  return *(double *)(v0
                   + *(int *)(type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(0)
                            + 24));
}

uint64_t MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.targetSize.setter(double a1, double a2)
{
  uint64_t v2;
  uint64_t result;
  double *v6;

  result = type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(0);
  v6 = (double *)(v2 + *(int *)(result + 24));
  *v6 = a1;
  v6[1] = a2;
  return result;
}

void (__swiftcall *MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.targetSize.modify())()
{
  type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(0);
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

uint64_t MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.contentMode.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0
                   + *(int *)(type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(0)
                            + 28));
}

uint64_t MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.contentMode.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(0);
  *(_QWORD *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

void (__swiftcall *MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.contentMode.modify())()
{
  type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(0);
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

uint64_t MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.oneUpIntent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + *(int *)(type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(0)
                                     + 32));
}

uint64_t MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.oneUpIntent.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(0);
  *(_BYTE *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

void (__swiftcall *MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.oneUpIntent.modify())()
{
  type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(0);
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

double key path getter for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.completion : MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  v3 = (uint64_t *)(a1
                 + *(int *)(type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(0)
                          + 36));
  v5 = *v3;
  v4 = v3[1];
  v6 = swift_allocObject(&unk_1001E7FE0, 32, 7);
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  *a2 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed PHLivePhoto?) -> ();
  a2[1] = v6;
  *(_QWORD *)&result = swift_retain(v4).n128_u64[0];
  return result;
}

void key path setter for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.completion : MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (**v6)(uint64_t);
  uint64_t (*v7)(uint64_t);

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject(&unk_1001E7FB8, 32, 7);
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  v6 = (uint64_t (**)(uint64_t))(a2
                                        + *(int *)(type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(0)
                                                 + 36));
  v7 = v6[1];
  swift_retain(v3);
  swift_release(v7);
  *v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed PHLivePhoto?) -> (@out ());
  v6[1] = (uint64_t (*)(uint64_t))v5;
}

uint64_t MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.completion.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0
                 + *(int *)(type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(0)
                          + 36));
  v2 = *v1;
  swift_retain(v1[1]);
  return v2;
}

void MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.completion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2
                + *(int *)(type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(0)
                         + 36));
  swift_release(v5[1]);
  *v5 = a1;
  v5[1] = a2;
}

void (__swiftcall *MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.completion.modify())()
{
  type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(0);
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

int *MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.init(uuid:asset:targetSize:contentMode:oneUpIntent:completion:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>, double a9@<D1>)
{
  uint64_t v18;
  int *result;
  double *v20;
  _QWORD *v21;

  v18 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a7, a1, v18);
  result = (int *)type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(0);
  *(_QWORD *)(a7 + result[5]) = a2;
  v20 = (double *)(a7 + result[6]);
  *v20 = a8;
  v20[1] = a9;
  *(_QWORD *)(a7 + result[7]) = a3;
  *(_BYTE *)(a7 + result[8]) = a4;
  v21 = (_QWORD *)(a7 + result[9]);
  *v21 = a5;
  v21[1] = a6;
  return result;
}

uint64_t MOSuggestionAssetPhotoLivePhotoVideosProvider.pendingLivePhotoTasks.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 32, v2, 0, 0);
  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 32));
}

uint64_t MOSuggestionAssetPhotoLivePhotoVideosProvider.pendingLivePhotoTasks.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  swift_beginAccess(v1 + 32, v5, 1, 0);
  v3 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease(v3);
}

uint64_t (*MOSuggestionTipCoordinator.onboardingTip.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + 32, a1, 33, 0);
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

uint64_t MOSuggestionAssetPhotoLivePhotoVideosProvider.numActiveLivePhotoOperations.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 40, v2, 0, 0);
  return *(_QWORD *)(v0 + 40);
}

uint64_t MOSuggestionAssetPhotoLivePhotoVideosProvider.numActiveLivePhotoOperations.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  _BYTE v4[24];

  result = swift_beginAccess(v1 + 40, v4, 1, 0);
  *(_QWORD *)(v1 + 40) = a1;
  return result;
}

void MOSuggestionAssetPhotoLivePhotoVideosProvider.getAssetsFor(identifiers:cacheType:completion:)(uint64_t a1, unsigned int a2, char **a3, _QWORD *a4)
{
  uint64_t v4;
  unint64_t v5;
  _QWORD *v8;
  void *v9;
  Class isa;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  unint64_t v31;
  Swift::Int v32;
  Swift::Int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char **v47;
  id v48;
  void *v49;
  id v50;
  uint64_t v51;
  id v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  os_log_type_t v70;
  id v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  __n128 v80;
  __n128 v81;
  __n128 v82;
  uint64_t v83;
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  uint8_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  void *v96;
  char **v97;
  _QWORD *v98;
  uint64_t v99;
  unsigned __int8 v100;
  unint64_t v101;
  uint64_t v102;
  id v103;
  char v105[24];
  char v106[24];
  char v107[24];
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;

  if (!*(_QWORD *)(a1 + 16))
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1)
      swift_once(&serverManager._clientConnections, one-time initialization function for shared);
    v26 = type metadata accessor for Logger(0);
    v27 = __swift_project_value_buffer(v26, (uint64_t)static MOAngelLogger.shared);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "[Assets] (Photos) No localIdentifiers provided for", v30, 2u);
      swift_slowDealloc(v30, -1, -1);
    }

    ((void (*)(_QWORD))a3)(0);
    return;
  }
  v8 = objc_msgSend(objc_allocWithZone((Class)PHFetchOptions), "init");
  objc_msgSend(v8, "setIncludeGuestAssets:", 1);
  v9 = (void *)objc_opt_self(PHAsset);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v103 = objc_msgSend(v9, "fetchAssetsWithLocalIdentifiers:options:", isa, v8);

  if ((uint64_t)objc_msgSend(v103, "count") < 1
    || (v11 = objc_msgSend(v103, "fetchedObjects")) == 0)
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1)
      swift_once(&serverManager._clientConnections, one-time initialization function for shared);
    v21 = type metadata accessor for Logger(0);
    v22 = __swift_project_value_buffer(v21, (uint64_t)static MOAngelLogger.shared);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "[Assets] (Photos) PHAsset fetch failed", v25, 2u);
      swift_slowDealloc(v25, -1, -1);
    }

    ((void (*)(_QWORD))a3)(0);
    return;
  }
  v12 = v11;
  v99 = v4;
  v13 = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for PHAsset, PHAsset_ptr);
  v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);

  if (serverManager._clientConnections != (NSMutableDictionary *)-1)
    swift_once(&serverManager._clientConnections, one-time initialization function for shared);
  v15 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v15, (uint64_t)static MOAngelLogger.shared);
  v16 = swift_bridgeObjectRetain_n(v14, 2);
  v17 = Logger.logObject.getter(v16);
  LOBYTE(v18) = static os_log_type_t.info.getter();
  if (!os_log_type_enabled((os_log_t)v17, (os_log_type_t)v18))
  {

    swift_bridgeObjectRelease_n(v14, 2);
    goto LABEL_21;
  }
  v5 = swift_slowAlloc(12, -1);
  *(_DWORD *)v5 = 134217984;
  if ((unint64_t)v14 >> 62)
    goto LABEL_124;
  v19 = v14;
  v20 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease(v19);
    v108 = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v108, &v109, v5 + 4);
    swift_bridgeObjectRelease(v19);
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v17, (os_log_type_t)v18, "[Assets] (Photos) PHAsset fetch completed with n=%ld for", (uint8_t *)v5, 0xCu);
    swift_slowDealloc(v5, -1, -1);

    v14 = v19;
LABEL_21:
    v100 = a2 - 2;
    v98 = a4;
    if ((a2 - 2) <= 8u)
    {
      v31 = (unint64_t)v14 >> 62;
      if (!((unint64_t)v14 >> 62))
      {
        if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10) <= 3uLL)
          goto LABEL_43;
        v5 = 3;
        if ((v14 & 0xC000000000000001) != 0)
        {
LABEL_25:
          if (v5)
          {
            v32 = 0;
            do
            {
              v33 = v32 + 1;
              _ArrayBuffer._typeCheckSlowPath(_:)(v32);
              v32 = v33;
            }
            while (v5 != v33);
          }
        }
LABEL_28:
        if (v31)
        {
          if (v14 < 0)
            v35 = v14;
          else
            v35 = v14 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v14);
          v34 = _CocoaArrayWrapper.subscript.getter(0, v5, v35);
          v18 = v36;
          v17 = v37;
          v5 = v38;
          swift_bridgeObjectRelease_n(v14, 2);
          if ((v5 & 1) == 0)
            goto LABEL_35;
        }
        else
        {
          v17 = 0;
          v34 = v14 & 0xFFFFFFFFFFFFFF8;
          v18 = (v14 & 0xFFFFFFFFFFFFFF8) + 32;
          v5 = (2 * v5) | 1;
          if ((v5 & 1) == 0)
            goto LABEL_35;
        }
        v39 = type metadata accessor for __ContiguousArrayStorageBase(0);
        v40 = swift_unknownObjectRetain_n(v34, 2);
        v41 = (_QWORD *)swift_dynamicCastClass(v40, v39);
        if (!v41)
        {
          swift_unknownObjectRelease(v34);
          v41 = _swiftEmptyArrayStorage;
        }
        v42 = v41[2];
        swift_release(v41);
        if (__OFSUB__(v5 >> 1, v17))
        {
          __break(1u);
        }
        else
        {
          v43 = v34;
          if (v42 == (v5 >> 1) - v17)
          {
            v14 = swift_dynamicCastClass(v34, v39);
            swift_unknownObjectRelease(v34);
            if (v14)
              goto LABEL_43;
            v14 = (uint64_t)_swiftEmptyArrayStorage;
            goto LABEL_42;
          }
        }
        swift_unknownObjectRelease(v43);
LABEL_35:
        v14 = (uint64_t)specialized _copyCollectionToContiguousArray<A>(_:)(v34, v18, v17, v5);
LABEL_42:
        swift_unknownObjectRelease(v34);
        goto LABEL_43;
      }
      if (v14 < 0)
        v17 = v14;
      else
        v17 = v14 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v14);
      v18 = _CocoaArrayWrapper.endIndex.getter(v17);
      v91 = v14;
      swift_bridgeObjectRelease(v14);
      if (v18 >= 4)
      {
        v5 = v14;
        swift_bridgeObjectRetain(v14);
        v92 = _CocoaArrayWrapper.endIndex.getter(v17);
        swift_bridgeObjectRelease(v14);
        swift_bridgeObjectRetain(v14);
        v93 = _CocoaArrayWrapper.endIndex.getter(v17);
        swift_bridgeObjectRelease(v91);
        if (v93 < 0)
        {
          __break(1u);
LABEL_144:
          v14 = v91;
          if ((v91 & 0xC000000000000001) != 0)
            goto LABEL_25;
          goto LABEL_28;
        }
        if (v92 >= 3)
          v94 = 3;
        else
          v94 = v92;
        if (v92 >= 0)
          v5 = v94;
        else
          v5 = 3;
        LOBYTE(v18) = v91;
        swift_bridgeObjectRetain(v91);
        v17 = _CocoaArrayWrapper.endIndex.getter(v17);
        swift_bridgeObjectRelease(v91);
        if (v17 >= (uint64_t)v5)
          goto LABEL_144;
        __break(1u);
      }
      v14 = v91;
    }
LABEL_43:
    a4 = _swiftEmptyArrayStorage;
    v111 = (uint64_t)_swiftEmptyArrayStorage;
    v112 = _swiftEmptyArrayStorage;
    v110 = (uint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)v14 >> 62)
    {
      if (v14 < 0)
        v76 = v14;
      else
        v76 = v14 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v14);
      v44 = _CocoaArrayWrapper.endIndex.getter(v76);
      swift_bridgeObjectRelease(v14);
      v96 = v8;
      v97 = a3;
      if (v44)
      {
LABEL_45:
        if (v44 >= 1)
        {
          v45 = 0;
          v46 = v14 & 0xC000000000000001;
          v47 = &selRef_genericAvatarFor_pointSize_completion_;
          a3 = &selRef_genericAvatarFor_pointSize_completion_;
          v95 = (char *)&type metadata for Any + 8;
          v101 = v14 & 0xC000000000000001;
          v102 = v14;
          while (1)
          {
            if (v46)
              v48 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v45, v14);
            else
              v48 = *(id *)(v14 + 8 * v45 + 32);
            v49 = v48;
            if ((objc_msgSend(v48, v47[424], v95, v96) & 4) != 0)
            {
              v52 = v49;
              v53 = Logger.logObject.getter(v52);
              v54 = static os_log_type_t.info.getter();
              if (os_log_type_enabled(v53, v54))
              {
                v55 = swift_slowAlloc(12, -1);
                v56 = swift_slowAlloc(32, -1);
                v108 = v56;
                *(_DWORD *)v55 = 136315138;
                v57 = objc_msgSend(v52, "localIdentifier");
                v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(v57);
                v60 = v59;

                v47 = &selRef_genericAvatarFor_pointSize_completion_;
                v61 = v58;
                a3 = &selRef_genericAvatarFor_pointSize_completion_;
                *(_QWORD *)(v55 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v61, v60, &v108);

                swift_bridgeObjectRelease(v60);
                _os_log_impl((void *)&_mh_execute_header, v53, v54, "[Assets] (Photos) Asset has contains screenshot id=%s", (uint8_t *)v55, 0xCu);
                v62 = (char *)&type metadata for Any + 8;
                v63 = v56;
LABEL_59:
                swift_arrayDestroy(v63, 1, v62);
                v64 = v56;
                v14 = v102;
                swift_slowDealloc(v64, -1, -1);
                v65 = v55;
                v46 = v101;
                swift_slowDealloc(v65, -1, -1);

                goto LABEL_48;
              }
            }
            else
            {
              if (objc_msgSend(v49, a3[425]) == (id)2)
              {
                if (objc_msgSend(v49, "isGuestAsset"))
                {
                  if (v100 < 9u)
                    goto LABEL_67;
                }
                else if (a2 - 2 < 6 || a2 - 9 <= 1)
                {
                  goto LABEL_67;
                }
                v50 = v49;
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v50);
                v51 = v110;
LABEL_68:
                v66 = v51 & 0xFFFFFFFFFFFFFF8;
                v68 = *(_QWORD *)(v66 + 16);
                v67 = *(_QWORD *)(v66 + 24);
                if (v68 >= v67 >> 1)
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v67 > 1, v68 + 1, 1);
                v69 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v68, v50);
                specialized Array._endMutation()(v69);

                goto LABEL_48;
              }
              if (objc_msgSend(v49, a3[425]) == (id)1)
              {
                if ((objc_msgSend(v49, v47[424]) & 8) != 0
                  && a2 - 2 >= 6
                  && a2 - 9 >= 2)
                {
                  v50 = v49;
                  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v50);
                  v51 = v111;
                  goto LABEL_68;
                }
LABEL_67:
                v50 = v49;
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v50);
                v51 = (uint64_t)v112;
                goto LABEL_68;
              }
              v52 = v49;
              v53 = Logger.logObject.getter(v52);
              v70 = static os_log_type_t.info.getter();
              if (os_log_type_enabled(v53, v70))
              {
                v55 = swift_slowAlloc(12, -1);
                v56 = swift_slowAlloc(32, -1);
                v108 = v56;
                *(_DWORD *)v55 = 136315138;
                v71 = objc_msgSend(v52, "localIdentifier");
                v72 = static String._unconditionallyBridgeFromObjectiveC(_:)(v71);
                v74 = v73;

                v47 = &selRef_genericAvatarFor_pointSize_completion_;
                v75 = v72;
                a3 = &selRef_genericAvatarFor_pointSize_completion_;
                *(_QWORD *)(v55 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v75, v74, &v108);

                swift_bridgeObjectRelease(v74);
                _os_log_impl((void *)&_mh_execute_header, v53, v70, "[Assets] (Photos) Unsupport PHAsset id=%s", (uint8_t *)v55, 0xCu);
                v63 = v56;
                v62 = v95;
                goto LABEL_59;
              }
            }

LABEL_48:
            if (v44 == ++v45)
            {
              swift_bridgeObjectRelease(v14);
              v18 = (uint64_t)v112;
              a4 = _swiftEmptyArrayStorage;
              goto LABEL_79;
            }
          }
        }
        __break(1u);
LABEL_121:
        __break(1u);
LABEL_122:
        __break(1u);
        goto LABEL_123;
      }
    }
    else
    {
      v44 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
      v96 = v8;
      v97 = a3;
      if (v44)
        goto LABEL_45;
    }
    swift_bridgeObjectRelease(v14);
    v18 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_79:
    v77 = swift_allocObject(&unk_1001E7BD8, 24, 7);
    *(_QWORD *)(v77 + 16) = 0;
    v5 = swift_allocObject(&unk_1001E7BD8, 24, 7);
    *(_QWORD *)(v5 + 16) = 0;
    v8 = (_QWORD *)(v5 + 16);
    v78 = swift_allocObject(&unk_1001E7C00, 24, 7);
    *(_QWORD *)(v78 + 16) = _swiftEmptyArrayStorage;
    v79 = (_QWORD *)swift_allocObject(&unk_1001E7C28, 56, 7);
    v79[2] = v77;
    v79[3] = v78;
    v14 = (uint64_t)v98;
    v79[4] = v5;
    v79[5] = v97;
    v79[6] = v98;
    if ((unint64_t)v18 >> 62)
    {
      if (v18 < 0)
        v88 = v18;
      else
        v88 = v18 & 0xFFFFFFFFFFFFFF8;
      swift_retain(v77);
      swift_retain(v78);
      swift_retain(v5);
      swift_retain(v98);
      swift_bridgeObjectRetain(v18);
      v17 = _CocoaArrayWrapper.endIndex.getter(v88);
      swift_bridgeObjectRelease(v18);
      if (v17 < 1)
        goto LABEL_85;
    }
    else
    {
      v17 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_retain(v77);
      swift_retain(v78);
      swift_retain(v5);
      swift_retain(v98);
      if (v17 < 1)
        goto LABEL_85;
    }
    v80 = swift_beginAccess(v8, v105, 1, 0);
    if (__OFADD__(*v8, 1))
      goto LABEL_121;
    ++*v8;
    if (v100 > 8u)
      (*(void (**)(uint64_t, _QWORD, void (*)(uint64_t), _QWORD *, __n128))(*(_QWORD *)v99 + 208))(v18, MOSuggestionAssetsTypePhoto, partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.getAssetsFor(identifiers:cacheType:completion:), v79, v80);
    else
      (*(void (**)(uint64_t, _QWORD, void (*)(uint64_t), _QWORD *, __n128))(*(_QWORD *)v99 + 184))(v18, a2, partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.getAssetsFor(identifiers:cacheType:completion:), v79, v80);
LABEL_85:
    swift_bridgeObjectRelease(v18);
    v18 = v111;
    if ((unint64_t)v111 >> 62)
    {
      if (v111 < 0)
        v89 = v111;
      else
        v89 = v111 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v111);
      v17 = _CocoaArrayWrapper.endIndex.getter(v89);
      swift_bridgeObjectRelease(v18);
      if (v17 < 1)
        goto LABEL_91;
    }
    else
    {
      v17 = *(_QWORD *)((v111 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v17 < 1)
        goto LABEL_91;
    }
    v81 = swift_beginAccess(v8, v106, 1, 0);
    if (__OFADD__(*v8, 1))
      goto LABEL_122;
    ++*v8;
    if (v100 > 8u)
      (*(void (**)(uint64_t, _QWORD, void (*)(uint64_t), _QWORD *, __n128))(*(_QWORD *)v99 + 208))(v18, MOSuggestionAssetsTypeLivePhoto, partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.getAssetsFor(identifiers:cacheType:completion:), v79, v81);
    else
      (*(void (**)(uint64_t, _QWORD, void (*)(uint64_t), _QWORD *, __n128))(*(_QWORD *)v99 + 200))(v18, a2, partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.getAssetsFor(identifiers:cacheType:completion:), v79, v81);
LABEL_91:
    swift_bridgeObjectRelease(v18);
    v18 = v110;
    if ((unint64_t)v110 >> 62)
    {
      if (v110 < 0)
        v90 = v110;
      else
        v90 = v110 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v110);
      v17 = _CocoaArrayWrapper.endIndex.getter(v90);
      swift_bridgeObjectRelease(v18);
      if (v17 < 1)
        goto LABEL_98;
    }
    else
    {
      v17 = *(_QWORD *)((v110 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v17 < 1)
        goto LABEL_98;
    }
    v82 = swift_beginAccess(v8, v107, 1, 0);
    if (!__OFADD__(*v8, 1))
      break;
LABEL_123:
    __break(1u);
LABEL_124:
    v19 = v14;
    if (v14 >= 0)
      v14 &= 0xFFFFFFFFFFFFFF8uLL;
    swift_bridgeObjectRetain(v19);
    v20 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(v19);
  }
  ++*v8;
  if (a2 > 0xAu)
    goto LABEL_104;
  v83 = 1;
  if (((1 << a2) & 0x6FC) == 0)
  {
    if (a2 == 8)
      goto LABEL_97;
LABEL_104:
    v83 = 1;
    goto LABEL_97;
  }
  v83 = 0;
LABEL_97:
  (*(void (**)(uint64_t, uint64_t, void (*)(uint64_t), _QWORD *, __n128))(*(_QWORD *)v99 + 232))(v18, v83, partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.getAssetsFor(identifiers:cacheType:completion:), v79, v82);
LABEL_98:
  swift_bridgeObjectRelease(v18);
  swift_beginAccess(v8, &v108, 0, 0);
  if (!*v8)
  {
    v85 = Logger.logObject.getter(v84);
    v86 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v85, v86))
    {
      v87 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v87 = 0;
      _os_log_impl((void *)&_mh_execute_header, v85, v86, "[Assets] (Photos) No assets to fetch", v87, 2u);
      swift_slowDealloc(v87, -1, -1);
    }

    ((void (*)(_QWORD))v97)(0);
  }
  swift_release(v79);

  swift_release(v77);
  swift_release(v5);
  swift_release(v78);

}

BOOL static MOSuggestionAssetPhotoLivePhotoVideosProvider.playableVideo(_:asset:)(unsigned __int8 a1, id a2)
{
  unsigned int v2;

  v2 = a1;
  if (objc_msgSend(a2, "isGuestAsset"))
    return v2 - 2 >= 9;
  if (v2 <= 0xA)
    return (0x103u >> v2) & 1;
  return 1;
}

uint64_t MOSuggestionCollectionViewCellViewModel.isSizeEligibleForAutoplay(size:)(unsigned __int8 a1)
{
  return (a1 > 0xAu) | (0x103u >> a1) & 1;
}

void closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.getAssetsFor(identifiers:cacheType:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(__n128))
{
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  _BYTE v21[24];
  _BYTE v22[24];
  _BYTE v23[24];

  v10 = (uint64_t *)(a2 + 16);
  swift_beginAccess(a2 + 16, v23, 1, 0);
  v11 = *(_QWORD *)(a2 + 16);
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
  {
    __break(1u);
  }
  else
  {
    v14 = (_QWORD *)(a3 + 16);
    v15 = (_QWORD *)(a4 + 16);
    *v10 = v13;
    if (a1)
    {
      swift_beginAccess(v14, v22, 33, 0);
      swift_bridgeObjectRetain(a1);
      specialized Array.append<A>(contentsOf:)(v16);
      swift_endAccess(v22);
    }
    swift_beginAccess(v10, v22, 0, 0);
    v17 = *v10;
    swift_beginAccess(v15, v21, 0, 0);
    if (v17 == *v15)
    {
      swift_beginAccess(v14, &v20, 0, 0);
      v18 = *v14;
      v19 = swift_bridgeObjectRetain(*v14);
      a5(v19);
      swift_bridgeObjectRelease(v18);
    }
  }
}

id PHAsset.squareCropRect.getter()
{
  return PHAsset.squareCropRect.getter(200.0, 200.0);
}

id PHAsset.landscapeCropRect.getter()
{
  return PHAsset.squareCropRect.getter(200.0, 98.0);
}

id PHAsset.squareCropRect.getter(double a1, double a2)
{
  uint64_t v2;

  return objc_msgSend((id)objc_opt_self(PHAssetView), "preferredContentsRectForAsset:targetSize:", v2, a1, a2);
}

id PHAsset.portraitCropRect.getter()
{
  uint64_t v0;

  return objc_msgSend((id)objc_opt_self(PHAssetView), "preferredContentsRectForAsset:targetSize:", v0, 98.0, 200.0);
}

void MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchImages(_:cacheType:completion:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  double v16;
  double v17;
  id v18;
  double v19;
  double v20;
  double v21;
  double v22;
  _BOOL4 v23;
  _QWORD *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v31;
  id v32;
  _QWORD aBlock[5];
  uint64_t v36;

  v6 = swift_allocObject(&unk_1001E7BD8, 24, 7);
  *(_QWORD *)(v6 + 16) = 0;
  v7 = swift_allocObject(&unk_1001E7C50, 24, 7);
  *(_QWORD *)(v7 + 16) = _swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v29 = a1;
    else
      v29 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v8 = _CocoaArrayWrapper.endIndex.getter(v29);
    if (v8)
      goto LABEL_3;
LABEL_22:
    swift_release(v7);
    swift_bridgeObjectRelease(a1);
    swift_release(v6);
    return;
  }
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v8)
    goto LABEL_22;
LABEL_3:
  if (v8 >= 1)
  {
    v9 = 0;
    v32 = *(id *)(v4 + 16);
    v31 = (char)(a2 - 2);
    while (1)
    {
      v14 = (a1 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, a1)
          : *(id *)(a1 + 8 * v9 + 32);
      v15 = v14;
      if (v31 >= 9)
        break;
      v16 = dbl_1001A1128[v31];
      v17 = dbl_1001A1170[v31];
      v18 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      objc_msgSend(v18, "scale");
      v20 = v19;

      v21 = v16 * v20;
      v22 = v17 * v20;
      if (a2 != 8)
        goto LABEL_15;
      v23 = 1;
LABEL_16:
      v24 = (_QWORD *)swift_allocObject(&unk_1001E7C78, 64, 7);
      v24[2] = v15;
      v24[3] = v7;
      v24[4] = v6;
      v24[5] = a1;
      v24[6] = a3;
      v24[7] = a4;
      v25 = objc_allocWithZone((Class)PHImageRequestOptions);
      v26 = v15;
      swift_bridgeObjectRetain(a1);
      v27 = v26;
      swift_retain(v7);
      swift_retain(v6);
      v28 = objc_msgSend(v25, "init", swift_retain(a4).n128_f64[0]);
      objc_msgSend(v28, "setDeliveryMode:", 1);
      objc_msgSend(v28, "setNetworkAccessAllowed:", 1);
      objc_msgSend(v28, "setUseLowMemoryMode:", 1);
      if (v23)
        objc_msgSend(v28, "setDownloadIntent:", 3);
      ++v9;
      v10 = swift_allocObject(&unk_1001E7CA0, 32, 7);
      *(_QWORD *)(v10 + 16) = partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchImages(_:cacheType:completion:);
      *(_QWORD *)(v10 + 24) = v24;
      aBlock[4] = partial apply for thunk for @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> ();
      v36 = v10;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed UIImage?, @guaranteed [AnyHashable : Any]?) -> ();
      aBlock[3] = &block_descriptor_16;
      v11 = _Block_copy(aBlock);
      v12 = v36;
      v13 = v28;
      swift_retain(v24);
      swift_release(v12);
      objc_msgSend(v32, "requestImageForAsset:targetSize:contentMode:options:resultHandler:", v27, 1, v13, v11, v21, v22);
      _Block_release(v11);

      swift_release(v24);
      if (v8 == v9)
        goto LABEL_22;
    }
    if (one-time initialization token for highQualityImageSize != -1)
      swift_once(&one-time initialization token for highQualityImageSize, one-time initialization function for highQualityImageSize);
    v22 = *((double *)&static MOSuggestionAssetPhotoLivePhotoVideosProvider.highQualityImageSize + 1);
    v21 = *(double *)&static MOSuggestionAssetPhotoLivePhotoVideosProvider.highQualityImageSize;
LABEL_15:
    v23 = (a2 - 11) < 0xF7u;
    goto LABEL_16;
  }
  __break(1u);
}

double closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchImages(_:cacheType:completion:)(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, __n128))
{
  uint64_t *v8;
  uint64_t *v9;
  id v11;
  id v12;
  id *v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t ObjCClassFromMetadata;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  Class isa;
  id v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  double result;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[24];

  v8 = (uint64_t *)(a3 + 16);
  v9 = (uint64_t *)(a4 + 16);
  if (a1)
  {
    v11 = a1;
    v12 = objc_msgSend(a2, "mediaType");
    v13 = (id *)&MOSuggestionAssetsTypeVideo;
    if (v12 != (id)2)
      v13 = (id *)&MOSuggestionAssetsTypePhoto;
    v14 = *v13;
    v15 = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIImage, UIImage_ptr);
    v16 = objc_allocWithZone((Class)MOSuggestionAsset);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v15);
    v18 = v11;
    v19 = objc_msgSend(v16, "init:type:contentClassType:", v18, v14, ObjCClassFromMetadata);

    v20 = specialized static MOSuggestionAssetPhotoLivePhotoVideosProvider.packedImageMetadata(from:)(a2);
    specialized _dictionaryUpCast<A, B, C, D>(_:)((uint64_t)v20);
    v22 = v21;
    swift_bridgeObjectRelease(v20);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v19, "addMetadata:", isa, swift_bridgeObjectRelease(v22).n128_f64[0]);

    swift_beginAccess(v8, v37, 33, 0);
    v24 = v19;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v24);
    v26 = *(_QWORD *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v25 = *(_QWORD *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v26 >= v25 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v25 > 1, v26 + 1, 1);
    v27 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v26, v24);
    specialized Array._endMutation()(v27);
    swift_endAccess(v37);

  }
  *(_QWORD *)&result = swift_beginAccess(v9, v37, 1, 0).n128_u64[0];
  v29 = *v9 + 1;
  if (__OFADD__(*v9, 1))
  {
    __break(1u);
  }
  else
  {
    *v9 = v29;
    if (!((unint64_t)a5 >> 62))
    {
      if (v29 != *(_QWORD *)((a5 & 0xFFFFFFFFFFFFF8) + 0x10))
        return result;
      goto LABEL_10;
    }
  }
  if (a5 < 0)
    v34 = a5;
  else
    v34 = a5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a5);
  v35 = _CocoaArrayWrapper.endIndex.getter(v34);
  *(_QWORD *)&result = swift_bridgeObjectRelease(a5).n128_u64[0];
  if (v29 == v35)
  {
LABEL_10:
    swift_beginAccess(v8, &v36, 0, 0);
    v30 = *v8;
    v31 = swift_bridgeObjectRetain(v30);
    v32 = specialized _arrayConditionalCast<A, B>(_:)(v31);
    v33 = swift_bridgeObjectRelease(v30);
    a6(v32, v33);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v32).n128_u64[0];
  }
  return result;
}

void MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchLivePhotoObjects(_:size:completion:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  _QWORD *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  double v17;
  double v18;
  id v19;
  double v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v26;
  void (*v27)(id, uint64_t, _BOOL8, uint64_t (*)(uint64_t), _QWORD *, double, double);

  v7 = swift_allocObject(&unk_1001E7BD8, 24, 7);
  *(_QWORD *)(v7 + 16) = 0;
  v8 = swift_allocObject(&unk_1001E7CF0, 24, 7);
  *(_QWORD *)(v8 + 16) = _swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v24 = a1;
    else
      v24 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v9 = _CocoaArrayWrapper.endIndex.getter(v24);
    if (v9)
      goto LABEL_3;
LABEL_21:
    swift_release(v8);
    swift_bridgeObjectRelease(a1);
    swift_release(v7);
    return;
  }
  v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v9)
    goto LABEL_21;
LABEL_3:
  if (v9 >= 1)
  {
    v10 = 0;
    v27 = *(void (**)(id, uint64_t, _BOOL8, uint64_t (*)(uint64_t), _QWORD *, double, double))(*(_QWORD *)v4 + 216);
    v26 = (char)(a2 - 2);
    while (1)
    {
      v15 = (a1 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, a1)
          : *(id *)(a1 + 8 * v10 + 32);
      v16 = v15;
      if (v26 >= 9)
        break;
      v17 = dbl_1001A1128[v26];
      v18 = dbl_1001A1170[v26];
      v19 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      objc_msgSend(v19, "scale");
      v21 = v20;

      v22 = v17 * v21;
      v23 = v18 * v21;
      if (a2 != 8)
        goto LABEL_16;
      v11 = 1;
LABEL_6:
      ++v10;
      v12 = (_QWORD *)swift_allocObject(&unk_1001E7D18, 64, 7);
      v12[2] = v16;
      v12[3] = v8;
      v12[4] = v7;
      v12[5] = a1;
      v12[6] = a3;
      v12[7] = a4;
      v13 = v16;
      swift_bridgeObjectRetain(a1);
      v14 = v13;
      swift_retain(v8);
      swift_retain(v7);
      swift_retain(a4);
      v27(v14, 1, v11, partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchLivePhotoObjects(_:size:completion:), v12, v22, v23);

      swift_release(v12);
      if (v9 == v10)
        goto LABEL_21;
    }
    if (one-time initialization token for highQualityImageSize != -1)
      swift_once(&one-time initialization token for highQualityImageSize, one-time initialization function for highQualityImageSize);
    v23 = *((double *)&static MOSuggestionAssetPhotoLivePhotoVideosProvider.highQualityImageSize + 1);
    v22 = *(double *)&static MOSuggestionAssetPhotoLivePhotoVideosProvider.highQualityImageSize;
LABEL_16:
    v11 = (a2 - 11) < 0xF7u;
    goto LABEL_6;
  }
  __break(1u);
}

double closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchLivePhotoObjects(_:size:completion:)(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, __n128))
{
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t ObjCClassFromMetadata;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  Class isa;
  id v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  double result;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[24];

  v8 = (uint64_t *)(a3 + 16);
  v9 = (uint64_t *)(a4 + 16);
  if (a1)
  {
    v12 = MOSuggestionAssetsTypeLivePhoto;
    v13 = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for PHLivePhoto, PHLivePhoto_ptr);
    v14 = objc_allocWithZone((Class)MOSuggestionAsset);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v13);
    v16 = a1;
    v17 = objc_msgSend(v14, "init:type:contentClassType:", v16, v12, ObjCClassFromMetadata);
    v18 = specialized static MOSuggestionAssetPhotoLivePhotoVideosProvider.packedImageMetadata(from:)(a2);
    specialized _dictionaryUpCast<A, B, C, D>(_:)((uint64_t)v18);
    v20 = v19;
    swift_bridgeObjectRelease(v18);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v17, "addMetadata:", isa, swift_bridgeObjectRelease(v20).n128_f64[0]);

    swift_beginAccess(v8, v35, 33, 0);
    v22 = v17;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v22);
    v24 = *(_QWORD *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v23 = *(_QWORD *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v24 >= v23 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v23 > 1, v24 + 1, 1);
    v25 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v22);
    specialized Array._endMutation()(v25);
    swift_endAccess(v35);

  }
  *(_QWORD *)&result = swift_beginAccess(v9, v35, 1, 0).n128_u64[0];
  v27 = *v9 + 1;
  if (__OFADD__(*v9, 1))
  {
    __break(1u);
  }
  else
  {
    *v9 = v27;
    if (!((unint64_t)a5 >> 62))
    {
      if (v27 != *(_QWORD *)((a5 & 0xFFFFFFFFFFFFF8) + 0x10))
        return result;
      goto LABEL_8;
    }
  }
  if (a5 < 0)
    v32 = a5;
  else
    v32 = a5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a5);
  v33 = _CocoaArrayWrapper.endIndex.getter(v32);
  *(_QWORD *)&result = swift_bridgeObjectRelease(a5).n128_u64[0];
  if (v27 == v33)
  {
LABEL_8:
    swift_beginAccess(v8, &v34, 0, 0);
    v28 = *v8;
    v29 = swift_bridgeObjectRetain(v28);
    v30 = specialized _arrayConditionalCast<A, B>(_:)(v29);
    v31 = swift_bridgeObjectRelease(v28);
    a6(v30, v31);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v30).n128_u64[0];
  }
  return result;
}

void MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchURLAsset(_:assetType:completion:)(unint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  char *v28;
  id v29;
  void **v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  __n128 v37;
  void (*v38)(char *, uint64_t, __n128);
  uint64_t v39;
  uint64_t (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  char *v45;
  uint8_t *v46;
  void **v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  __n128 v52;
  char *v53;
  void (*v54)(char *, uint64_t);
  void **v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  void *v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  id v72;
  double v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  __n128 v78;
  void ***p_aBlock;
  uint8_t *v80;
  uint64_t (*v81)(char *, char *, uint64_t);
  uint64_t v82;
  unsigned int v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  id v98;
  id v99;
  void *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  void **aBlock;
  uint64_t v106;
  void (*v107)(uint64_t, void *);
  void *v108;
  void (*v109)(uint64_t);
  uint64_t v110;

  v86 = a4;
  v91 = a3;
  v90 = a2;
  v89 = type metadata accessor for URL.DirectoryHint(0);
  v88 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v87 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for URL(0);
  v101 = *(_QWORD *)(v103 - 8);
  v6 = *(_QWORD *)(v101 + 64);
  v7 = __chkstk_darwin(v103);
  v8 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v102 = (char *)&v76 - v10;
  __chkstk_darwin(v9);
  v12 = (char *)&v76 - v11;
  v92 = swift_allocObject(&unk_1001E7D40, 24, 7);
  *(_QWORD *)(v92 + 16) = _swiftEmptyArrayStorage;
  v95 = a1;
  if (!(a1 >> 62))
  {
    v13 = *(_QWORD *)((v95 & 0xFFFFFFFFFFFFF8) + 0x10);
    v14 = swift_bridgeObjectRetain(v95);
    if (v13)
      goto LABEL_3;
LABEL_26:
    swift_release(v92);
    swift_bridgeObjectRelease(v95);
    return;
  }
  if (v95 < 0)
    v75 = v95;
  else
    v75 = v95 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v95);
  v13 = _CocoaArrayWrapper.endIndex.getter(v75);
  if (!v13)
    goto LABEL_26;
LABEL_3:
  if (v13 >= 1)
  {
    v15 = 0;
    v94 = v95 & 0xC000000000000001;
    v83 = enum case for URL.DirectoryHint.inferFromPath(_:);
    p_aBlock = &aBlock;
    v82 = v6 + 7;
    v14.n128_u64[0] = 136315138;
    v78 = v14;
    v77 = (char *)&type metadata for Any + 8;
    v85 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    v93 = v12;
    v84 = v13;
    do
    {
      if (v94)
        v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15, v95);
      else
        v16 = *(id *)(v95 + 8 * v15 + 32);
      v17 = v16;
      v18 = objc_allocWithZone((Class)type metadata accessor for PhotosFileProviderRegister.Configuration(0));
      v19 = (void *)PhotosFileProviderRegister.Configuration.init(usage:)(2);
      dispatch thunk of PhotosFileProviderRegister.Configuration.shouldIncludeLocation.setter(0);
      dispatch thunk of PhotosFileProviderRegister.Configuration.shouldIncludeCaption.setter(0);
      dispatch thunk of PhotosFileProviderRegister.Configuration.clientEncodingPolicy.setter(1);
      dispatch thunk of PhotosFileProviderRegister.Configuration.userEncodingPolicy.setter(1);
      if (one-time initialization token for photosFileProviderManager != -1)
        swift_once(&one-time initialization token for photosFileProviderManager, one-time initialization function for photosFileProviderManager);
      if (static MOSuggestionAssetPhotoLivePhotoVideosProvider.photosFileProviderManager)
      {
        v20 = one-time initialization token for fileProviderDomain;
        v21 = (id)static MOSuggestionAssetPhotoLivePhotoVideosProvider.photosFileProviderManager;
        v22 = v19;
        if (v20 != -1)
          swift_once(&one-time initialization token for fileProviderDomain, one-time initialization function for fileProviderDomain);
        v23 = (void *)static MOSuggestionAssetPhotoLivePhotoVideosProvider.fileProviderDomain;
        v24 = objc_allocWithZone((Class)type metadata accessor for PhotosFileProviderRegister(0));
        v25 = (void *)PhotosFileProviderRegister.init(configuration:fileProviderManager:domain:)(v22, v21, v23);
        v26 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "init");
        v100 = v17;
        v97 = v25;
        v96 = dispatch thunk of PhotosFileProviderRegister.registerFileRepresentations(itemProvider:asset:)(v26, v17);

        v99 = v21;
        v27 = objc_msgSend(v21, "documentStorageURL");
        v28 = v102;
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v27);

        v29 = objc_msgSend((id)static MOSuggestionAssetPhotoLivePhotoVideosProvider.fileProviderDomain, "pathRelativeToDocumentStorage");
        v30 = (void **)static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
        v32 = v31;

        aBlock = v30;
        v106 = v32;
        v33 = v88;
        v34 = v87;
        v35 = v89;
        (*(void (**)(char *, _QWORD, uint64_t))(v88 + 104))(v87, v83, v89);
        v36 = lazy protocol witness table accessor for type String and conformance String();
        URL.appending<A>(component:directoryHint:)(&aBlock, v34, &type metadata for String, v36);
        (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v35);
        v37 = swift_bridgeObjectRelease(v106);
        v38 = *(void (**)(char *, uint64_t, __n128))(v101 + 8);
        v38(v28, v103, v37);
        if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
          swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
        v98 = v22;
        v39 = type metadata accessor for Logger(0);
        __swift_project_value_buffer(v39, (uint64_t)static MOAngelLogger.assets);
        v40 = *(uint64_t (**)(char *, char *, uint64_t))(v101 + 16);
        v41 = v40(v8, v12, v103);
        v42 = Logger.logObject.getter(v41);
        v43 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v42, v43))
        {
          v44 = swift_slowAlloc(12, -1);
          v81 = v40;
          v45 = v8;
          v46 = (uint8_t *)v44;
          v47 = (void **)swift_slowAlloc(32, -1);
          aBlock = v47;
          *(_DWORD *)v46 = v78.n128_u32[0];
          v80 = v46 + 4;
          v48 = URL.absoluteURL.getter();
          v49 = URL.absoluteString.getter(v48);
          v51 = v50;
          ((void (*)(char *, uint64_t))v38)(v102, v103);
          v104 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v49, v51, (uint64_t *)&aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, p_aBlock, v80);
          v52 = swift_bridgeObjectRelease(v51);
          v53 = v45;
          v40 = v81;
          v54 = (void (*)(char *, uint64_t))v38;
          v38(v53, v103, v52);
          _os_log_impl((void *)&_mh_execute_header, v42, v43, "[MOSuggestionAssetPhotoLivePhotoVideosProvider] checking path=%s", v46, 0xCu);
          swift_arrayDestroy(v47, 1, v77);
          v55 = v47;
          v12 = v93;
          swift_slowDealloc(v55, -1, -1);
          swift_slowDealloc(v46, -1, -1);

        }
        else
        {
          ((void (*)(char *, uint64_t))v38)(v8, v103);

          v54 = (void (*)(char *, uint64_t))v38;
        }
        v56 = static MOSuggestionAssetPhotoLivePhotoVideosProvider.fileProviderDomain;
        v40(v102, v12, v103);
        v57 = *(unsigned __int8 *)(v101 + 80);
        v58 = (v57 + 32) & ~v57;
        v59 = (v82 + v58) & 0xFFFFFFFFFFFFFFF8;
        v60 = (v59 + 15) & 0xFFFFFFFFFFFFFFF8;
        v61 = (v60 + 15) & 0xFFFFFFFFFFFFFFF8;
        v62 = (v61 + 15) & 0xFFFFFFFFFFFFFFF8;
        v63 = swift_allocObject(&unk_1001E7D68, v62 + 8, v57 | 7);
        v64 = v86;
        *(_QWORD *)(v63 + 16) = v91;
        *(_QWORD *)(v63 + 24) = v64;
        (*(void (**)(uint64_t, char *, uint64_t))(v101 + 32))(v63 + v58, v102, v103);
        *(_QWORD *)(v63 + v59) = v96;
        v65 = v90;
        *(_QWORD *)(v63 + v60) = v90;
        v66 = v100;
        *(_QWORD *)(v63 + v61) = v100;
        v67 = v92;
        *(_QWORD *)(v63 + v62) = v92;
        v109 = partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchURLAsset(_:assetType:completion:);
        v110 = v63;
        aBlock = _NSConcreteStackBlock;
        v106 = 1107296256;
        v107 = thunk for @escaping @callee_guaranteed (@guaranteed CGImageRef?) -> ();
        v108 = &block_descriptor_33;
        v68 = _Block_copy(&aBlock);
        v69 = v110;
        v70 = v64;
        v12 = v93;
        swift_retain(v70);
        v71 = v65;
        v72 = v66;
        swift_retain(v67);
        *(_QWORD *)&v73 = swift_release(v69).n128_u64[0];
        v74 = v99;
        objc_msgSend(v99, "addDomain:completionHandler:", v56, v68, v73);
        _Block_release(v68);

        v54(v12, v103);
        v8 = v85;
        v13 = v84;
      }
      else
      {

      }
      ++v15;
    }
    while (v13 != v15);
    goto LABEL_26;
  }
  __break(1u);
}

void closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchURLAsset(_:assetType:completion:)(uint64_t a1, void (*a2)(uint64_t, __n128), uint64_t a3, void *a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(uint64_t, __n128);
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  _QWORD *v35;
  void *v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSString v44;
  unsigned __int8 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  _BOOL4 v53;
  uint64_t v54;
  uint8_t *v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  __n128 v61;
  void (*v62)(uint64_t, uint64_t, __n128);
  void *v63;
  id v64;
  NSURL *v65;
  void *v66;
  void *v67;
  unsigned int v68;
  id v69;
  NSMutableDictionary *connectionProperties;
  id v71;
  void (*v72)(uint64_t, __n128);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  __n128 v84;
  void *v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  NSObject *v90;
  os_log_type_t v91;
  uint8_t *v92;
  id v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  id v97;
  uint64_t v98;
  uint64_t *v99;
  void (*v100)(uint64_t, unint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  NSObject *v106;
  os_log_type_t v107;
  uint8_t *v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  __n128 v114;
  NSURL *v115;
  void *v116;
  void *v117;
  uint64_t v118;
  id v119;
  uint64_t ObjCClassFromMetadata;
  id v121;
  void *v122;
  uint64_t v123;
  uint64_t v124;
  Class isa;
  id v126;
  unint64_t v127;
  unint64_t v128;
  uint64_t v129;
  __n128 v130;
  uint64_t v131;
  uint64_t v132;
  __n128 v133;
  uint64_t v134;
  __n128 v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  void (*v147)(char *, uint64_t);
  void (*v148)(uint64_t, __n128);
  uint64_t v149;
  uint64_t v150;
  void *v151;
  uint64_t v152;
  _QWORD v153[3];
  char v154[16];
  uint64_t v155;
  _BYTE v156[16];
  id v157;
  uint64_t v158;

  v151 = a4;
  v152 = a8;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v14);
  v16 = (char *)&v138 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for URL(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v20 = __chkstk_darwin(v19);
  __chkstk_darwin(v20);
  v22 = __chkstk_darwin((char *)&v138 - v21);
  v23 = __chkstk_darwin(v22);
  v28 = (char *)&v138 - v27;
  if (!a1)
  {
    v142 = v23;
    v138 = v26;
    v143 = a5;
    v144 = v16;
    v139 = v25;
    v140 = a6;
    v141 = a7;
    v145 = v24;
    v146 = a3;
    v148 = a2;
    v38 = (void *)objc_opt_self(NSFileManager);
    v39 = objc_msgSend(v38, "defaultManager");
    v40 = v151;
    v41 = URL.absoluteURL.getter();
    URL.absoluteString.getter(v41);
    v43 = v42;
    v149 = v18;
    v150 = v17;
    v147 = *(void (**)(char *, uint64_t))(v18 + 8);
    v147(v28, v17);
    v44 = String._bridgeToObjectiveC()();
    v45 = objc_msgSend(v39, "directoryExistsAtPath:", v44, swift_bridgeObjectRelease(v43).n128_f64[0]);

    if ((v45 & 1) != 0)
    {
      if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
        swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
      v46 = type metadata accessor for Logger(0);
      __swift_project_value_buffer(v46, (uint64_t)static MOAngelLogger.assets);
      v48 = v149;
      v47 = v150;
      v49 = v142;
      v50 = (*(uint64_t (**)(uint64_t, void *, uint64_t))(v149 + 16))(v142, v40, v150);
      v51 = Logger.logObject.getter(v50);
      v52 = static os_log_type_t.default.getter();
      v53 = os_log_type_enabled(v51, v52);
      v54 = v145;
      if (v53)
      {
        v55 = (uint8_t *)swift_slowAlloc(12, -1);
        v56 = (void *)swift_slowAlloc(32, -1);
        v157 = v56;
        *(_DWORD *)v55 = 136315138;
        v57 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes(&lazy protocol witness table cache variable for type URL and conformance URL, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
        v58 = dispatch thunk of CustomStringConvertible.description.getter(v150, v57);
        v60 = v59;
        v155 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v58, v59, (uint64_t *)&v157);
        v47 = v150;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v155, v156, v55 + 4);
        v61 = swift_bridgeObjectRelease(v60);
        v62 = (void (*)(uint64_t, uint64_t, __n128))v147;
        ((void (*)(uint64_t, uint64_t, __n128))v147)(v49, v47, v61);
        _os_log_impl((void *)&_mh_execute_header, v51, v52, "[MOSuggestionAssetPhotoLivePhotoVideosProvider] photospicker dir already exists dir=%s", v55, 0xCu);
        swift_arrayDestroy(v56, 1, (char *)&type metadata for Any + 8);
        v63 = v56;
        v48 = v149;
        swift_slowDealloc(v63, -1, -1);
        swift_slowDealloc(v55, -1, -1);
      }
      else
      {
        v62 = (void (*)(uint64_t, uint64_t, __n128))v147;
        v147((char *)v49, v47);
      }

      v72 = v148;
    }
    else
    {
      v64 = objc_msgSend(v38, "defaultManager");
      URL._bridgeToObjectiveC()(v65);
      v67 = v66;
      v157 = 0;
      v68 = objc_msgSend(v64, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:", v66, 1, 0, &v157);

      v69 = v157;
      if (v68)
      {
        connectionProperties = serverManager._connectionProperties;
        v71 = v157;
        v62 = (void (*)(uint64_t, uint64_t, __n128))v147;
        v72 = v148;
        v48 = v149;
        v73 = v152;
        if (connectionProperties != (NSMutableDictionary *)-1)
          swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
        v74 = type metadata accessor for Logger(0);
        __swift_project_value_buffer(v74, (uint64_t)static MOAngelLogger.assets);
        v75 = v138;
        v47 = v150;
        v76 = (*(uint64_t (**)(uint64_t, void *, uint64_t))(v48 + 16))(v138, v40, v150);
        v77 = Logger.logObject.getter(v76);
        v78 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v77, v78))
        {
          v79 = (uint8_t *)swift_slowAlloc(12, -1);
          v151 = (void *)swift_slowAlloc(32, -1);
          v157 = v151;
          *(_DWORD *)v79 = 136315138;
          v80 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes(&lazy protocol witness table cache variable for type URL and conformance URL, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
          v81 = dispatch thunk of CustomStringConvertible.description.getter(v150, v80);
          v83 = v82;
          v155 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v81, v82, (uint64_t *)&v157);
          v48 = v149;
          v47 = v150;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v155, v156, v79 + 4);
          v84 = swift_bridgeObjectRelease(v83);
          v62(v75, v47, v84);
          _os_log_impl((void *)&_mh_execute_header, v77, v78, "[MOSuggestionAssetPhotoLivePhotoVideosProvider] creating dir=%s", v79, 0xCu);
          v85 = v151;
          swift_arrayDestroy(v151, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v85, -1, -1);
          swift_slowDealloc(v79, -1, -1);
        }
        else
        {
          ((void (*)(uint64_t, uint64_t))v62)(v75, v47);
        }

        v98 = (uint64_t)v144;
        v54 = v145;
LABEL_29:
        v99 = (uint64_t *)(v73 + 16);
        if (*(_QWORD *)(v143 + 16))
        {
          v100 = *(void (**)(uint64_t, unint64_t, uint64_t))(v48 + 16);
          v100(v98, v143 + ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80)), v47);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v48 + 56))(v98, 0, 1, v47);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v98, 1, v47) != 1)
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 32))(v54, v98, v47);
            v101 = v54;
            if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
              swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
            v102 = type metadata accessor for Logger(0);
            __swift_project_value_buffer(v102, (uint64_t)static MOAngelLogger.assets);
            v103 = v139;
            v104 = v101;
            v105 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v100)(v139, v101, v47);
            v106 = Logger.logObject.getter(v105);
            v107 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v106, v107))
            {
              v108 = (uint8_t *)swift_slowAlloc(12, -1);
              v109 = (void *)swift_slowAlloc(32, -1);
              v157 = v109;
              *(_DWORD *)v108 = 136315138;
              v110 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes(&lazy protocol witness table cache variable for type URL and conformance URL, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
              v111 = dispatch thunk of CustomStringConvertible.description.getter(v150, v110);
              v113 = v112;
              v155 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v111, v112, (uint64_t *)&v157);
              v62 = (void (*)(uint64_t, uint64_t, __n128))v147;
              v47 = v150;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v155, v156, v108 + 4);
              v114 = swift_bridgeObjectRelease(v113);
              v62(v103, v47, v114);
              _os_log_impl((void *)&_mh_execute_header, v106, v107, "[MOSuggestionAssetPhotoLivePhotoVideosProvider] registered file url=%s", v108, 0xCu);
              swift_arrayDestroy(v109, 1, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v109, -1, -1);
              swift_slowDealloc(v108, -1, -1);
            }
            else
            {
              ((void (*)(uint64_t, uint64_t))v62)(v103, v47);
            }

            URL._bridgeToObjectiveC()(v115);
            v117 = v116;
            v118 = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for NSURL, NSURL_ptr);
            v119 = objc_allocWithZone((Class)MOSuggestionAsset);
            ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v118);
            v121 = objc_msgSend(v119, "init:type:contentClassType:", v117, v140, ObjCClassFromMetadata);

            v122 = specialized static MOSuggestionAssetPhotoLivePhotoVideosProvider.packedImageMetadata(from:)(v141);
            specialized _dictionaryUpCast<A, B, C, D>(_:)((uint64_t)v122);
            v124 = v123;
            swift_bridgeObjectRelease(v122);
            isa = Dictionary._bridgeToObjectiveC()().super.isa;
            objc_msgSend(v121, "addMetadata:", isa, swift_bridgeObjectRelease(v124).n128_f64[0]);

            swift_beginAccess(v99, &v157, 33, 0);
            v126 = v121;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v126);
            v128 = *(_QWORD *)((*v99 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v127 = *(_QWORD *)((*v99 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v128 >= v127 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v127 > 1, v128 + 1, 1);
            v129 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v128, v126);
            specialized Array._endMutation()(v129);
            swift_endAccess(&v157);

            ((void (*)(uint64_t, uint64_t))v62)(v104, v47);
            v72 = v148;
LABEL_41:
            v130 = swift_beginAccess(v99, &v157, 0, 0);
            v131 = *v99;
            if ((unint64_t)*v99 >> 62)
            {
              if (v131 < 0)
                v136 = *v99;
              else
                v136 = v131 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(*v99);
              v137 = _CocoaArrayWrapper.endIndex.getter(v136);
              v130 = swift_bridgeObjectRelease(v131);
              if (v137 >= 1)
                goto LABEL_43;
            }
            else if (*(uint64_t *)((v131 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
            {
LABEL_43:
              swift_beginAccess(v99, &v155, 0, 0);
              v132 = *v99;
              v133 = swift_bridgeObjectRetain(*v99);
              v134 = specialized _arrayConditionalCast<A, B>(_:)(v133);
              v135 = swift_bridgeObjectRelease(v132);
              v72(v134, v135);
              swift_bridgeObjectRelease(v134);
              return;
            }
            v72(0, v130);
            return;
          }
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56))(v98, 1, 1, v47);
        }
        outlined destroy of Any?(v98, &demangling cache variable for type metadata for URL?);
        goto LABEL_41;
      }
      v86 = v157;
      v87 = _convertNSErrorToError(_:)(v69);

      swift_willThrow();
      v62 = (void (*)(uint64_t, uint64_t, __n128))v147;
      v72 = v148;
      v54 = v145;
      if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
        swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
      v88 = type metadata accessor for Logger(0);
      __swift_project_value_buffer(v88, (uint64_t)static MOAngelLogger.assets);
      swift_errorRetain(v87);
      v89 = swift_errorRetain(v87);
      v90 = Logger.logObject.getter(v89);
      v91 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v90, v91))
      {
        v92 = (uint8_t *)swift_slowAlloc(12, -1);
        v157 = (id)swift_slowAlloc(32, -1);
        v93 = v157;
        *(_DWORD *)v92 = 136315138;
        swift_getErrorValue(v87, v154, v153);
        v94 = Error.localizedDescription.getter(v153[1], v153[2]);
        v96 = v95;
        v155 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v94, v95, (uint64_t *)&v157);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v155, v156, v92 + 4);
        swift_bridgeObjectRelease(v96);
        swift_errorRelease(v87);
        swift_errorRelease(v87);
        _os_log_impl((void *)&_mh_execute_header, v90, v91, "[MOSuggestionAssetPhotoLivePhotoVideosProvider] error creating photospicker dir, error=%s", v92, 0xCu);
        swift_arrayDestroy(v93, 1, (char *)&type metadata for Any + 8);
        v97 = v93;
        v62 = (void (*)(uint64_t, uint64_t, __n128))v147;
        swift_slowDealloc(v97, -1, -1);
        swift_slowDealloc(v92, -1, -1);

        swift_errorRelease(v87);
      }
      else
      {
        swift_errorRelease(v87);
        swift_errorRelease(v87);
        swift_errorRelease(v87);

      }
      v48 = v149;
      v47 = v150;
    }
    v98 = (uint64_t)v144;
    v73 = v152;
    goto LABEL_29;
  }
  v29 = a2;
  swift_errorRetain(a1);
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v30 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v30, (uint64_t)static MOAngelLogger.assets);
  swift_errorRetain(a1);
  v31 = swift_errorRetain(a1);
  v32 = Logger.logObject.getter(v31);
  v33 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc(12, -1);
    v35 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v34 = 138412290;
    swift_errorRetain(a1);
    v36 = (void *)_swift_stdlib_bridgeErrorToNSError(a1);
    v157 = v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v157, &v158, v34 + 4);
    *v35 = v36;
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "[MOSuggestionAssetPhotoLivePhotoVideosProvider] domain creation err=%@", v34, 0xCu);
    v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy(v35, 1, v37);
    swift_slowDealloc(v35, -1, -1);
    swift_slowDealloc(v34, -1, -1);
  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }

  ((void (*)(_QWORD))v29)(0);
  swift_errorRelease(a1);
}

uint64_t MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchLivePhoto(for:targetSize:contentMode:oneUpIntent:onComplete:)(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, double a6, double a7)
{
  uint64_t v7;
  int *v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  double *v20;
  char *v21;
  uint64_t v23;

  v15 = (int *)type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1;
  swift_retain(a5);
  UUID.init()(v19);
  *(_QWORD *)&v17[v15[5]] = v18;
  v20 = (double *)&v17[v15[6]];
  *v20 = a6;
  v20[1] = a7;
  *(_QWORD *)&v17[v15[7]] = a2;
  v17[v15[8]] = a3;
  v21 = &v17[v15[9]];
  *(_QWORD *)v21 = a4;
  *((_QWORD *)v21 + 1) = a5;
  (*(void (**)(char *))(*(_QWORD *)v7 + 224))(v17);
  return outlined destroy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask((uint64_t)v17);
}

void MOSuggestionAssetPhotoLivePhotoVideosProvider.executeLivePhotoTask(_:)(uint64_t a1)
{
  unint64_t *v1;
  unint64_t *v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  NSObject *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  os_log_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  void (*v54)(uint64_t *, _QWORD);
  _QWORD *v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  double v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  id v69;
  unint64_t *v70;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  os_log_t v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *v78;
  id v79;
  uint64_t v80;
  uint64_t aBlock[5];
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v2 = v1;
  v4 = (int *)type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(0);
  v80 = *((_QWORD *)v4 - 1);
  v5 = *(_QWORD *)(v80 + 64);
  v6 = __chkstk_darwin(v4);
  v78 = ((char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v74 - v8;
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v74 - v11;
  v13 = __chkstk_darwin(v10);
  v77 = (uint64_t)&v74 - v14;
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v74 - v16;
  __chkstk_darwin(v15);
  v19 = ((char *)&v74 - v18);
  v20 = objc_msgSend(objc_allocWithZone((Class)PHLivePhotoRequestOptions), "init");
  objc_msgSend(v20, "setDeliveryMode:", 1);
  v21 = objc_msgSend(v20, "setNetworkAccessAllowed:", 1);
  if (*(_BYTE *)(a1 + v4[8]) == 1)
    v21 = objc_msgSend(v20, "setDownloadIntent:", 3);
  if ((*(uint64_t (**)(id))(*v1 + 136))(v21) > 1)
  {
    v79 = v20;
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
      swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    v39 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v39, (uint64_t)static MOAngelLogger.assets);
    outlined init with copy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(a1, (uint64_t)v12);
    v40 = outlined init with copy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(a1, (uint64_t)v9);
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = swift_slowAlloc(22, -1);
      v77 = swift_slowAlloc(64, -1);
      aBlock[0] = v77;
      *(_DWORD *)v43 = 136315394;
      v76 = v43 + 4;
      v44 = objc_msgSend(*(id *)&v12[v4[5]], "localIdentifier");
      v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
      v47 = v46;

      v83 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v45, v47, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, &v84, v76);
      swift_bridgeObjectRelease(v47);
      v48 = outlined destroy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask((uint64_t)v12);
      *(_WORD *)(v43 + 12) = 2080;
      v49 = UUID.uuidString.getter(v48);
      v51 = v50;
      v83 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v49, v50, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, &v84, v43 + 14);
      swift_bridgeObjectRelease(v51);
      outlined destroy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask((uint64_t)v9);
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "[MOSuggestionAssetPhotoLivePhotoVideosProvider] queueing task request, assetID=%s, uuid=%s", (uint8_t *)v43, 0x16u);
      v52 = v77;
      swift_arrayDestroy(v77, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v52, -1, -1);
      swift_slowDealloc(v43, -1, -1);
    }
    else
    {
      outlined destroy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask((uint64_t)v12);
      outlined destroy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask((uint64_t)v9);
    }

    v19 = v78;
    outlined init with copy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(a1, (uint64_t)v78);
    v24 = (*(uint64_t (**)(uint64_t *))(*v2 + 128))(aBlock);
    v2 = v70;
    v53 = *v70;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v70);
    *v2 = v53;
    v20 = v79;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_17;
  }
  else
  {
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
      swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    v22 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v22, (uint64_t)static MOAngelLogger.assets);
    outlined init with copy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(a1, (uint64_t)v19);
    v23 = outlined init with copy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(a1, (uint64_t)v17);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.debug.getter();
    v26 = v25;
    if (os_log_type_enabled(v24, v25))
    {
      v27 = swift_slowAlloc(22, -1);
      v78 = swift_slowAlloc(64, -1);
      aBlock[0] = (uint64_t)v78;
      *(_DWORD *)v27 = 136315394;
      v74 = v27 + 4;
      v28 = objc_msgSend(*(id *)((char *)&v19->isa + v4[5]), "localIdentifier");
      LODWORD(v76) = v26;
      v29 = v28;
      v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
      v79 = v20;
      v31 = v30;
      v75 = v24;
      v33 = v32;

      v83 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v31, v33, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, &v84, v74);
      swift_bridgeObjectRelease(v33);
      v34 = outlined destroy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask((uint64_t)v19);
      *(_WORD *)(v27 + 12) = 2080;
      v35 = UUID.uuidString.getter(v34);
      v37 = v36;
      v83 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v36, aBlock);
      v20 = v79;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, &v84, v27 + 14);
      swift_bridgeObjectRelease(v37);
      outlined destroy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask((uint64_t)v17);
      v38 = v75;
      _os_log_impl((void *)&_mh_execute_header, v75, (os_log_type_t)v76, "[MOSuggestionAssetPhotoLivePhotoVideosProvider] executing task request, assetID=%s, uuid=%s", (uint8_t *)v27, 0x16u);
      v24 = v78;
      swift_arrayDestroy(v78, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v24, -1, -1);
      swift_slowDealloc(v27, -1, -1);

    }
    else
    {
      outlined destroy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask((uint64_t)v19);
      outlined destroy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask((uint64_t)v17);

    }
    v53 = (unint64_t)v2;
    v54 = (void (*)(uint64_t *, _QWORD))(*(uint64_t (**)(uint64_t *))(*v2 + 152))(aBlock);
    if (!__OFADD__(*v55, 1))
    {
      ++*v55;
      v54(aBlock, 0);
      v56 = (void *)v2[2];
      v57 = v4[6];
      v58 = *(_QWORD *)(a1 + v4[5]);
      v59 = *(double *)(a1 + v57);
      v60 = *(double *)(a1 + v57 + 8);
      v61 = *(_QWORD *)(a1 + v4[7]);
      v62 = swift_allocObject(&unk_1001E7DB8, 24, 7);
      swift_weakInit(v62 + 16);
      v63 = v77;
      outlined init with copy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(a1, v77);
      v64 = *(unsigned __int8 *)(v80 + 80);
      v65 = (v64 + 24) & ~v64;
      v66 = swift_allocObject(&unk_1001E7DE0, v65 + v5, v64 | 7);
      *(_QWORD *)(v66 + 16) = v62;
      outlined init with take of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(v63, v66 + v65);
      aBlock[4] = (uint64_t)partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.executeLivePhotoTask(_:);
      v82 = v66;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed UIImage?, @guaranteed [AnyHashable : Any]?) -> ();
      aBlock[3] = (uint64_t)&block_descriptor_42_0;
      v67 = _Block_copy(aBlock);
      v68 = v82;
      v69 = v20;
      swift_release(v68);
      objc_msgSend(v56, "requestLivePhotoForAsset:targetSize:contentMode:options:resultHandler:", v58, v61, v69, v67, v59, v60);

      _Block_release(v67);
      goto LABEL_20;
    }
    __break(1u);
  }
  v53 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v53 + 16) + 1, 1, v53);
  *v2 = v53;
LABEL_17:
  v73 = *(_QWORD *)(v53 + 16);
  v72 = *(_QWORD *)(v53 + 24);
  if (v73 >= v72 >> 1)
  {
    v53 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v72 > 1, v73 + 1, 1, v53);
    *v2 = v53;
  }
  *(_QWORD *)(v53 + 16) = v73 + 1;
  outlined init with take of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask((uint64_t)v19, v53+ ((*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80))+ *(_QWORD *)(v80 + 72) * v73);
  ((void (*)(uint64_t *, _QWORD))v24)(aBlock, 0);
LABEL_20:

}

void closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.executeLivePhotoTask(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD aBlock[5];
  uint64_t v15;
  char v16[24];

  v6 = a3 + 16;
  swift_beginAccess(a3 + 16, v16, 0, 0);
  Strong = swift_weakLoadStrong(v6);
  if (Strong)
  {
    v8 = Strong;
    v9 = type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(0);
    (*(void (**)(uint64_t))(a4 + *(int *)(v9 + 36)))(a1);
    v10 = *(NSObject **)(v8 + 24);
    v11 = swift_allocObject(&unk_1001E8058, 32, 7);
    *(_QWORD *)(v11 + 16) = partial apply for closure #1 in closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.executeLivePhotoTask(_:);
    *(_QWORD *)(v11 + 24) = v8;
    aBlock[4] = partial apply for thunk for @escaping @callee_guaranteed () -> (@out ());
    v15 = v11;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = &block_descriptor_81;
    v12 = _Block_copy(aBlock);
    v13 = v15;
    swift_retain(v8);
    swift_retain(v11);
    swift_release(v13);
    dispatch_sync(v10, v12);
    swift_release(v8);
    _Block_release(v12);
    LOBYTE(v10) = swift_isEscapingClosureAtFileLocation(v11, "", 131, 378, 39, 1);
    swift_release(v8);
    swift_release(v11);
    if ((v10 & 1) != 0)
      __break(1u);
  }
}

void closure #1 in closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.executeLivePhotoTask(_:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  __n128 v26;
  void (*v27)(_QWORD *, _QWORD);
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(_QWORD *, _QWORD);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD aBlock[5];
  uint64_t v62;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v57 = *(_QWORD *)(v2 - 8);
  v58 = v2;
  __chkstk_darwin(v2);
  v56 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v54 = *(_QWORD *)(v4 - 8);
  v55 = v4;
  __chkstk_darwin(v4);
  v53 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for DispatchTime(0);
  v50 = *(_QWORD *)(v52 - 8);
  v6 = __chkstk_darwin(v52);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v51 = (char *)&v49 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask?);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v49 - v14;
  v16 = type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  v19 = __chkstk_darwin(v16);
  v20 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v19);
  v59 = (uint64_t)&v49 - v22;
  v23 = (*(uint64_t (**)(uint64_t))(*a1 + 112))(v21);
  v24 = v23;
  if (*(_QWORD *)(v23 + 16))
  {
    outlined init with copy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(v23 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)), (uint64_t)v15);
    v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
    v25(v15, 0, 1, v16);
  }
  else
  {
    v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
    v25(v15, 1, 1, v16);
  }
  v26 = swift_bridgeObjectRelease(v24);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v17 + 48))(v15, 1, v16, v26) == 1)
  {
    outlined destroy of Any?((uint64_t)v15, &demangling cache variable for type metadata for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask?);
    v27 = (void (*)(_QWORD *, _QWORD))(*(uint64_t (**)(_QWORD *))(*a1 + 152))(aBlock);
    if (!__OFSUB__(*v28, 1))
    {
      --*v28;
      v27(aBlock, 0);
      return;
    }
    __break(1u);
    goto LABEL_12;
  }
  outlined init with take of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask((uint64_t)v15, v59);
  v29 = (*(uint64_t (**)(_QWORD *))(*a1 + 128))(aBlock);
  if (!*(_QWORD *)(*(_QWORD *)v30 + 16))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v31 = (uint64_t (*)(_QWORD *, _QWORD))v29;
  v32 = v30;
  v33 = *(unsigned __int8 *)(v17 + 80);
  outlined init with copy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(*(_QWORD *)v30 + ((v33 + 32) & ~v33), (uint64_t)v13);
  v25(v13, 0, 1, v16);
  outlined destroy of Any?((uint64_t)v13, &demangling cache variable for type metadata for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask?);
  if (!*(_QWORD *)(*(_QWORD *)v32 + 16))
  {
LABEL_13:
    __break(1u);
    return;
  }
  specialized Array.replaceSubrange<A>(_:with:)(0, 1);
  v34 = v31(aBlock, 0);
  v49 = a1[3];
  static DispatchTime.now()(v34);
  v35 = v51;
  + infix(_:_:)(v8, 2.0);
  v50 = *(_QWORD *)(v50 + 8);
  v36 = v52;
  ((void (*)(char *, uint64_t))v50)(v8, v52);
  v37 = v59;
  outlined init with copy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(v59, (uint64_t)v20);
  v38 = (v33 + 24) & ~v33;
  v39 = swift_allocObject(&unk_1001E80A8, v38 + v18, v33 | 7);
  *(_QWORD *)(v39 + 16) = a1;
  outlined init with take of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask((uint64_t)v20, v39 + v38);
  aBlock[4] = partial apply for closure #1 in closure #1 in closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.executeLivePhotoTask(_:);
  v62 = v39;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_87;
  v40 = _Block_copy(aBlock);
  swift_retain(a1);
  v41 = v53;
  static DispatchQoS.unspecified.getter(v42);
  v60 = _swiftEmptyArrayStorage;
  v43 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  v45 = lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  v46 = v56;
  v47 = v44;
  v48 = v58;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v60, v47, v45, v58, v43);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v35, v41, v46, v40);
  _Block_release(v40);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v46, v48);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v41, v55);
  ((void (*)(char *, uint64_t))v50)(v35, v36);
  outlined destroy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(v37);
  swift_release(v62);
}

void (*closure #1 in closure #1 in closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.executeLivePhotoTask(_:)(uint64_t a1, uint64_t a2))(_BYTE *, _QWORD)
{
  void (*result)(_BYTE *, _QWORD);
  _QWORD *v5;
  _BYTE v6[32];

  result = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))(*(_QWORD *)a1 + 152))(v6);
  if (__OFSUB__(*v5, 1))
  {
    __break(1u);
  }
  else
  {
    --*v5;
    result(v6, 0);
    return (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 224))(a2);
  }
  return result;
}

void MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchVideos(_:oneUpIntent:completion:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  _QWORD *v14;
  void *v15;
  _QWORD *v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  id v22;
  _QWORD aBlock[5];
  _QWORD *v24;

  v8 = swift_allocObject(&unk_1001E7BD8, 24, 7);
  *(_QWORD *)(v8 + 16) = 0;
  v9 = swift_allocObject(&unk_1001E7D40, 24, 7);
  *(_QWORD *)(v9 + 16) = _swiftEmptyArrayStorage;
  v22 = objc_msgSend(objc_allocWithZone((Class)PHVideoRequestOptions), "init");
  objc_msgSend(v22, "setNetworkAccessAllowed:", 1);
  if ((a2 & 1) != 0)
    objc_msgSend(v22, "setDownloadIntent:", 3);
  if (!((unint64_t)a1 >> 62))
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v10)
      goto LABEL_5;
LABEL_16:

LABEL_17:
    swift_bridgeObjectRelease(a1);
    swift_release(v8);
    swift_release(v9);
    return;
  }
  if (a1 < 0)
    v19 = a1;
  else
    v19 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v10 = _CocoaArrayWrapper.endIndex.getter(v19);
  if (!v10)
    goto LABEL_16;
LABEL_5:
  if (v10 >= 1)
  {
    v11 = 0;
    v20 = *(id *)(v4 + 16);
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, a1);
      else
        v12 = *(id *)(a1 + 8 * v11 + 32);
      v13 = v12;
      ++v11;
      v14 = (_QWORD *)swift_allocObject(&unk_1001E7E30, 64, 7);
      v14[2] = v13;
      v14[3] = v9;
      v14[4] = v8;
      v14[5] = a1;
      v14[6] = a3;
      v14[7] = a4;
      aBlock[4] = partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchVideos(_:oneUpIntent:completion:);
      v24 = v14;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed AVAsset?, @guaranteed AVAudioMix?, @guaranteed [AnyHashable : Any]?) -> ();
      aBlock[3] = &block_descriptor_50;
      v15 = _Block_copy(aBlock);
      v16 = v24;
      swift_bridgeObjectRetain(a1);
      v17 = v22;
      v18 = v13;
      swift_retain(v9);
      swift_retain(v8);
      swift_retain(a4);
      objc_msgSend(v20, "requestAVAssetForVideo:options:resultHandler:", v18, v17, v15, swift_release(v16).n128_f64[0]);
      _Block_release(v15);

    }
    while (v10 != v11);

    goto LABEL_17;
  }
  __break(1u);
}

void closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchVideos(_:oneUpIntent:completion:)(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t, __n128))
{
  uint64_t *v11;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  Class isa;
  id v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[24];

  v11 = (uint64_t *)(a5 + 16);
  if (a1)
  {
    v14 = objc_opt_self(AVURLAsset);
    v15 = swift_dynamicCastObjCClass(a1, v14);
    if (v15)
    {
      v16 = (void *)v15;
      v17 = a1;
      v18 = objc_msgSend(v16, "URL");
      if (!v18)
      {
        __break(1u);
        return;
      }
      v19 = v18;
      v20 = MOSuggestionAssetsTypeVideo;
      v21 = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for NSURL, NSURL_ptr);
      v22 = objc_msgSend(objc_allocWithZone((Class)MOSuggestionAsset), "init:type:contentClassType:", v19, v20, swift_getObjCClassFromMetadata(v21));

      v23 = specialized static MOSuggestionAssetPhotoLivePhotoVideosProvider.packedImageMetadata(from:)(a4);
      specialized _dictionaryUpCast<A, B, C, D>(_:)((uint64_t)v23);
      v25 = v24;
      swift_bridgeObjectRelease(v23);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v22, "addMetadata:", isa, swift_bridgeObjectRelease(v25).n128_f64[0]);

      swift_beginAccess(v11, v40, 33, 0);
      v27 = v22;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v27);
      v29 = *(_QWORD *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v28 = *(_QWORD *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v29 >= v28 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1);
      v30 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v27);
      specialized Array._endMutation()(v30);
      swift_endAccess(v40);

    }
  }
  v31 = (uint64_t *)(a6 + 16);
  swift_beginAccess(v31, v40, 1, 0);
  v32 = *v31 + 1;
  if (__OFADD__(*v31, 1))
  {
    __break(1u);
  }
  else
  {
    *v31 = v32;
    if (!((unint64_t)a7 >> 62))
    {
      if (v32 != *(_QWORD *)((a7 & 0xFFFFFFFFFFFFF8) + 0x10))
        return;
      goto LABEL_10;
    }
  }
  if (a7 < 0)
    v37 = a7;
  else
    v37 = a7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a7);
  v38 = _CocoaArrayWrapper.endIndex.getter(v37);
  swift_bridgeObjectRelease(a7);
  if (v32 == v38)
  {
LABEL_10:
    swift_beginAccess(v11, &v39, 0, 0);
    v33 = *v11;
    v34 = swift_bridgeObjectRetain(v33);
    v35 = specialized _arrayConditionalCast<A, B>(_:)(v34);
    v36 = swift_bridgeObjectRelease(v33);
    a8(v35, v36);
    swift_bridgeObjectRelease(v35);
  }
}

uint64_t MOSuggestionAssetPhotoLivePhotoVideosProvider.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return v0;
}

uint64_t MOSuggestionAssetPhotoLivePhotoVideosProvider.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t MOSuggestionAssetPhotoLivePhotoVideosProvider.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_allocObject(v0, 48, 7);
  MOSuggestionAssetPhotoLivePhotoVideosProvider.init()();
  return v1;
}

_QWORD *MOSuggestionAssetPhotoLivePhotoVideosProvider.init()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _QWORD *v16;

  v1 = v0;
  v15 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v2 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[2] = objc_msgSend(objc_allocWithZone((Class)PHCachingImageManager), "init");
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter();
  v16 = _swiftEmptyArrayStorage;
  v11 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  v13 = lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A], &demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v16, v12, v13, v5, v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v15);
  v1[3] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000037, 0x80000001001A6100, v10, v7, v4, 0);
  v1[4] = _swiftEmptyArrayStorage;
  v1[5] = 0;
  return v1;
}

void static MOSuggestionAssetPhotoLivePhotoVideosProvider.getLivePhotoFromComponentsURL(baseURL:assetIdentifier:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), uint64_t a5)
{
  id v9;
  NSURL *v10;
  void *v11;
  void *v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  double v17;
  id v18;
  uint64_t isEscapingClosureAtFileLocation;
  NSMutableDictionary *connectionProperties;
  uint64_t v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void *v32;
  id v33;
  void (*v34)(_QWORD);
  uint64_t v35;
  id aBlock[5];
  uint64_t v37;

  v9 = objc_msgSend(objc_allocWithZone((Class)NSFileCoordinator), "init");
  URL._bridgeToObjectiveC()(v10);
  v12 = v11;
  v13 = (_QWORD *)swift_allocObject(&unk_1001E7E80, 48, 7);
  v13[2] = a2;
  v13[3] = a3;
  v13[4] = a4;
  v13[5] = a5;
  v14 = swift_allocObject(&unk_1001E7EA8, 32, 7);
  *(_QWORD *)(v14 + 16) = partial apply for closure #1 in static MOSuggestionAssetPhotoLivePhotoVideosProvider.getLivePhotoFromComponentsURL(baseURL:assetIdentifier:completion:);
  *(_QWORD *)(v14 + 24) = v13;
  aBlock[4] = partial apply for thunk for @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> ();
  v37 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed (@in_guaranteed URL) -> ();
  aBlock[3] = &block_descriptor_59;
  v15 = _Block_copy(aBlock);
  v16 = v37;
  swift_bridgeObjectRetain(a3);
  swift_retain(a5);
  swift_retain(v14);
  *(_QWORD *)&v17 = swift_release(v16).n128_u64[0];
  aBlock[0] = 0;
  objc_msgSend(v9, "coordinateReadingItemAtURL:options:error:byAccessor:", v12, 0, aBlock, v15, v17);
  _Block_release(v15);

  v18 = aBlock[0];
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v14, "", 131, 430, 75, 1);
  swift_release(v14);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
LABEL_10:
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    goto LABEL_4;
  }
  if (!v18)
    goto LABEL_8;
  connectionProperties = serverManager._connectionProperties;
  isEscapingClosureAtFileLocation = (uint64_t)v18;
  if (connectionProperties != (NSMutableDictionary *)-1)
    goto LABEL_10;
LABEL_4:
  v21 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v21, (uint64_t)static MOAngelLogger.assets);
  v22 = (id)isEscapingClosureAtFileLocation;
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v23, v24))
  {
    v34 = a4;
    v25 = (uint8_t *)swift_slowAlloc(12, -1);
    v32 = (void *)swift_slowAlloc(32, -1);
    aBlock[0] = v32;
    *(_DWORD *)v25 = 136315138;
    v26 = objc_msgSend(v22, "localizedDescription");
    v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    v33 = v9;
    v29 = v28;

    v30 = v27;
    a4 = v34;
    v35 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v29, (uint64_t *)aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, aBlock, v25 + 4);

    v31 = v29;
    v9 = v33;
    swift_bridgeObjectRelease(v31);
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "[MOSuggestionAssetPhotoLivePhotoVideosProvider] Failed to retrieve URL for Live Photo %s", v25, 0xCu);
    swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v32, -1, -1);
    swift_slowDealloc(v25, -1, -1);

  }
  else
  {

  }
  a4(0);

LABEL_8:
  swift_release(v13);

}

void closure #1 in static MOSuggestionAssetPhotoLivePhotoVideosProvider.getLivePhotoFromComponentsURL(baseURL:assetIdentifier:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  NSURL *v21;
  void *v22;
  void *v23;
  id v24;
  void **v25;
  uint64_t v26;
  void **v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void (*v32)(_QWORD, _QWORD, _QWORD);
  _QWORD *v33;
  uint64_t v34;
  unint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  void (*v51)(char *, uint64_t, __n128);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v53;
  unint64_t v54;
  void **v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  void **v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  Class isa;
  _QWORD *v72;
  void *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  void (*v82)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t (*v88)(char *, char *, uint64_t);
  void (*v89)(_QWORD, _QWORD, _QWORD);
  uint64_t v90;
  unint64_t v91;
  _QWORD *v92;
  char *v93;
  uint64_t v94;
  unint64_t v95;
  _QWORD v96[3];
  char v97[16];
  void **aBlock;
  uint64_t v99;
  void (*v100)(uint64_t, void *, uint64_t);
  void *v101;
  void (*v102)(void *, uint64_t);
  _QWORD *v103;

  v79 = a4;
  v80 = a3;
  v78 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Locale?);
  __chkstk_darwin(v6);
  v8 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v87 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v75 - v14;
  __chkstk_darwin(v13);
  v93 = (char *)&v75 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v17);
  v19 = (char *)&v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  URL._bridgeToObjectiveC()(v21);
  v23 = v22;
  aBlock = 0;
  v24 = objc_msgSend(v20, "contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:", v22, 0, 0, &aBlock);

  v25 = aBlock;
  if (!v24)
  {
    v55 = aBlock;
    v56 = _convertNSErrorToError(_:)(v25);

    swift_willThrow();
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
      swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    v57 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v57, (uint64_t)static MOAngelLogger.assets);
    swift_errorRetain(v56);
    v58 = swift_errorRetain(v56);
    v59 = Logger.logObject.getter(v58);
    v60 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v59, v60))
    {
      v61 = (uint8_t *)swift_slowAlloc(12, -1);
      v62 = (void **)swift_slowAlloc(32, -1);
      aBlock = v62;
      *(_DWORD *)v61 = 136315138;
      swift_getErrorValue(v56, v97, v96);
      v63 = Error.localizedDescription.getter(v96[1], v96[2]);
      v65 = v64;
      v94 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v63, v64, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v94, &v95, v61 + 4);
      swift_bridgeObjectRelease(v65);
      swift_errorRelease(v56);
      swift_errorRelease(v56);
      _os_log_impl((void *)&_mh_execute_header, v59, v60, "%s", v61, 0xCu);
      swift_arrayDestroy(v62, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v62, -1, -1);
      swift_slowDealloc(v61, -1, -1);

      swift_errorRelease(v56);
    }
    else
    {
      swift_errorRelease(v56);
      swift_errorRelease(v56);
      swift_errorRelease(v56);

    }
    v66 = _swiftEmptyArrayStorage;
    v67 = v80;
    v68 = v79;
    v69 = v78;
    goto LABEL_26;
  }
  v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v24, v9);
  v27 = v25;

  v28 = *(_QWORD *)(v26 + 16);
  v77 = a5;
  if (!v28)
  {
    v66 = _swiftEmptyArrayStorage;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v19, 1, 1, v9);
    goto LABEL_23;
  }
  v29 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v76 = v26;
  v81 = v29;
  v30 = v26 + v29;
  v31 = *(_QWORD *)(v10 + 72);
  v32 = *(void (**)(_QWORD, _QWORD, _QWORD))(v10 + 16);
  v33 = _swiftEmptyArrayStorage;
  v86 = v8;
  v85 = v19;
  v84 = v31;
  v89 = v32;
  v83 = v10;
  do
  {
    v92 = v33;
    v32(v19, v30, v9);
    v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v36(v19, 0, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v19, 1, v9) == 1)
    {
      swift_bridgeObjectRelease(v76);
      a5 = v77;
      v67 = v80;
      v68 = v79;
      v69 = v78;
      v66 = v92;
      goto LABEL_26;
    }
    v82 = v36;
    v90 = v28;
    v91 = v30;
    v37 = v93;
    v88 = *(uint64_t (**)(char *, char *, uint64_t))(v10 + 32);
    v38 = v88(v93, v19, v9);
    aBlock = (void **)URL.pathExtension.getter(v38);
    v99 = v39;
    v94 = 5656397;
    v95 = 0xE300000000000000;
    v40 = type metadata accessor for Locale(0);
    v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56);
    v41(v8, 1, 1, v40);
    v42 = v9;
    v43 = (uint64_t)v8;
    v44 = lazy protocol witness table accessor for type String and conformance String();
    v45 = StringProtocol.compare<A>(_:options:range:locale:)(&v94, 1, 0, 0, 1, v43, &type metadata for String, &type metadata for String, v44, v44);
    outlined destroy of Any?(v43, &demangling cache variable for type metadata for Locale?);
    swift_bridgeObjectRelease(v95);
    v46 = swift_bridgeObjectRelease(v99);
    v47 = ((uint64_t (*)(char *, char *, uint64_t, __n128))v32)(v15, v37, v42, v46);
    if (v45)
    {
      aBlock = (void **)URL.pathExtension.getter(v47);
      v99 = v48;
      v94 = 1128875336;
      v95 = 0xE400000000000000;
      v41((char *)v43, 1, 1, v40);
      v49 = StringProtocol.compare<A>(_:options:range:locale:)(&v94, 1, 0, 0, 1, v43, &type metadata for String, &type metadata for String, v44, v44);
      outlined destroy of Any?(v43, &demangling cache variable for type metadata for Locale?);
      swift_bridgeObjectRelease(v95);
      v50 = swift_bridgeObjectRelease(v99);
      v10 = v83;
      v51 = *(void (**)(char *, uint64_t, __n128))(v83 + 8);
      v51(v15, v42, v50);
      v9 = v42;
      v33 = v92;
      if (v49)
      {
        v19 = v85;
        v34 = v84;
        v32 = v89;
        v35 = v91;
        goto LABEL_5;
      }
    }
    else
    {
      v10 = v83;
      v51 = *(void (**)(char *, uint64_t, __n128))(v83 + 8);
      ((void (*)(char *, uint64_t))v51)(v15, v42);
      v9 = v42;
      v33 = v92;
    }
    v89(v87, v93, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v33);
    v19 = v85;
    v34 = v84;
    v35 = v91;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v33 = (_QWORD *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v33[2] + 1, 1, (unint64_t)v33);
    v54 = v33[2];
    v53 = v33[3];
    if (v54 >= v53 >> 1)
      v33 = (_QWORD *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v53 > 1, v54 + 1, 1, (unint64_t)v33);
    v33[2] = v54 + 1;
    v88((char *)v33 + v81 + v54 * v34, v87, v9);
    v32 = v89;
LABEL_5:
    ((void (*)(char *, uint64_t))v51)(v93, v9);
    v30 = v35 + v34;
    v28 = v90 - 1;
    v8 = v86;
  }
  while (v90 != 1);
  v66 = v33;
  v26 = v76;
  v82(v19, 1, 1, v9);
LABEL_23:
  swift_bridgeObjectRelease(v26);
  a5 = v77;
  v67 = v80;
  v68 = v79;
  v69 = v78;
LABEL_26:
  v70 = (void *)objc_opt_self(PHLivePhoto);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v66);
  v72 = (_QWORD *)swift_allocObject(&unk_1001E8008, 48, 7);
  v72[2] = v69;
  v72[3] = v67;
  v72[4] = v68;
  v72[5] = a5;
  v102 = partial apply for closure #1 in closure #1 in static MOSuggestionAssetPhotoLivePhotoVideosProvider.getLivePhotoFromComponentsURL(baseURL:assetIdentifier:completion:);
  v103 = v72;
  aBlock = _NSConcreteStackBlock;
  v99 = 1107296256;
  v100 = thunk for @escaping @callee_guaranteed (@guaranteed PHLivePhoto?, @guaranteed [AnyHashable : Any]) -> ();
  v101 = &block_descriptor_75;
  v73 = _Block_copy(&aBlock);
  v74 = v103;
  swift_bridgeObjectRetain(v67);
  swift_retain(a5);
  swift_release(v74);
  objc_msgSend(v70, "requestLivePhotoWithResourceFileURLs:placeholderImage:targetSize:contentMode:resultHandler:", isa, 0, 0, v73, 0.0, 0.0);
  _Block_release(v73);

}

void closure #1 in closure #1 in static MOSuggestionAssetPhotoLivePhotoVideosProvider.getLivePhotoFromComponentsURL(baseURL:assetIdentifier:completion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t ObjCClassFromMetadata;
  id v11;
  id v12;
  NSString v13;
  id v14;

  if (a1)
  {
    v7 = MOSuggestionAssetsTypeLivePhoto;
    v8 = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for PHLivePhoto, PHLivePhoto_ptr);
    v9 = objc_allocWithZone((Class)MOSuggestionAsset);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v8);
    v11 = a1;
    v12 = objc_msgSend(v9, "init:type:contentClassType:", v11, v7, ObjCClassFromMetadata);
    v13 = String._bridgeToObjectiveC()();
    objc_msgSend(v12, "addIdentifier:", v13);

    v14 = v12;
    ((void (*)(id))a5)(v12);

  }
  else
  {
    a5();
  }
}

uint64_t thunk for @escaping @callee_guaranteed (@in_guaranteed URL) -> ()(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(char *);
  uint64_t v10;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void (**)(char *))(a1 + 32);
  static URL._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v8(v7);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void static MOSuggestionAssetPhotoLivePhotoVideosProvider.normalizedSquareCrop(normalizedCropRect:imageBounds:)()
{
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGRect v4;
  CGRect v5;

  specialized static MOSuggestionAssetPhotoLivePhotoVideosProvider.squareCrop(normalizedCropRect:imageBounds:)();
  x = v4.origin.x;
  y = v4.origin.y;
  width = v4.size.width;
  height = v4.size.height;
  CGRectGetWidth(v4);
  v5.origin.x = x;
  v5.origin.y = y;
  v5.size.width = width;
  v5.size.height = height;
  CGRectGetHeight(v5);
  MOSuggestionInterstitialExpandableListViewCellConstants.init()();
}

void specialized static MOSuggestionAssetPhotoLivePhotoVideosProvider.assetTypeFromIdentifier(_:)(uint64_t a1, uint64_t a2)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  Class isa;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;

  v4 = objc_msgSend(objc_allocWithZone((Class)PHFetchOptions), "init");
  objc_msgSend(v4, "setIncludeGuestAssets:", 1);
  v5 = (void *)objc_opt_self(PHAsset);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  v7 = swift_allocObject(v6, 48, 7);
  *(_OWORD *)(v7 + 16) = xmmword_10019ED20;
  *(_QWORD *)(v7 + 32) = a1;
  *(_QWORD *)(v7 + 40) = a2;
  swift_bridgeObjectRetain(a2);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v9 = objc_msgSend(v5, "fetchAssetsWithLocalIdentifiers:options:", isa, v4, swift_bridgeObjectRelease(v7).n128_f64[0]);

  v10 = objc_msgSend(v9, "fetchedObjects");
  if (!v10)
  {

    return;
  }
  v11 = v10;
  v12 = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for PHAsset, PHAsset_ptr);
  v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

  if (!((unint64_t)v13 >> 62))
  {
    if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
LABEL_15:

    swift_bridgeObjectRelease(v13);
    return;
  }
  if (v13 < 0)
    v16 = v13;
  else
    v16 = v13 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v13);
  v17 = _CocoaArrayWrapper.endIndex.getter(v16);
  swift_bridgeObjectRelease(v13);
  if (!v17)
    goto LABEL_15;
LABEL_4:
  if ((v13 & 0xC000000000000001) != 0)
  {
    v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v13);
  }
  else
  {
    if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v14 = *(id *)(v13 + 32);
  }
  v15 = v14;
  if (objc_msgSend(v14, "mediaType", swift_bridgeObjectRelease(v13).n128_f64[0]) == (id)1)
  {
    objc_msgSend(v15, "mediaSubtypes");

  }
  else
  {

  }
}

uint64_t sub_1000A31C0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000A31D0()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

void partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.getAssetsFor(identifiers:cacheType:completion:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.getAssetsFor(identifiers:cacheType:completion:)(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void (**)(__n128))(v1 + 40));
}

void *specialized static MOSuggestionAssetPhotoLivePhotoVideosProvider.packedImageMetadata(from:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  void (*v18)(char *, char *, uint64_t);
  void *v19;
  _QWORD *v20;
  id v21;
  void *v22;
  char isUniquelyReferenced_nonNull_native;
  __n128 v24;
  void *v25;
  void *v26;
  id v27;
  double v28;
  double v29;
  double v30;
  double v31;
  id v32;
  uint64_t v33;
  void *v34;
  char v35;
  void *v36;
  id v37;
  double v38;
  double v39;
  double v40;
  double v41;
  id v42;
  char v43;
  void *v44;
  id v45;
  double v46;
  double v47;
  double v48;
  double v49;
  id v50;
  char v51;
  void *v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  id v59;
  id v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  _QWORD *v66;
  void *v67;
  char v68;
  id v69;
  uint64_t v70;
  char v71;
  void *v72;
  char *v74;
  uint64_t v75;
  void *v76;
  _OWORD v77[2];
  __int128 v78;
  _QWORD *v79;
  void *v80;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  v3 = __chkstk_darwin(v2);
  v74 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  v75 = (uint64_t)&v74 - v6;
  __chkstk_darwin(v5);
  v8 = (char *)&v74 - v7;
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v74 - v14;
  v80 = &_swiftEmptyDictionarySingleton;
  v16 = objc_msgSend(a1, "creationDate");
  if (v16)
  {
    v17 = v16;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    v18 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v18(v8, v13, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      v18(v15, v8, v9);
      v19 = (void *)MOSuggestionAssetMetadataKeyPhotoMomentDate;
      v79 = (_QWORD *)v9;
      v20 = __swift_allocate_boxed_opaque_existential_1(&v78);
      (*(void (**)(_QWORD *, char *, uint64_t))(v10 + 16))(v20, v15, v9);
      outlined init with take of Any(&v78, v77);
      v21 = v19;
      v22 = v80;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v80);
      v76 = v22;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v77, v21, isUniquelyReferenced_nonNull_native);
      v80 = v76;

      v24 = swift_bridgeObjectRelease(0x8000000000000000);
      (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v15, v9, v24);
      goto LABEL_6;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  }
  outlined destroy of Any?((uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for Date?);
LABEL_6:
  v25 = (void *)MOSuggestionAssetMetadataKeyPhotoBestSquareCropRect;
  v26 = (void *)objc_opt_self(PHAssetView);
  v27 = v25;
  objc_msgSend(v26, "preferredContentsRectForAsset:targetSize:", a1, 200.0, 200.0);
  v32 = objc_msgSend(objc_allocWithZone((Class)MOSuggestionAssetPhotoCropRect), "initWithCGRect:", v28, v29, v30, v31);
  v33 = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetPhotoCropRect, MOSuggestionAssetPhotoCropRect_ptr);
  v79 = (_QWORD *)v33;
  *(_QWORD *)&v78 = v32;
  outlined init with take of Any(&v78, v77);
  v34 = v80;
  v35 = swift_isUniquelyReferenced_nonNull_native(v80);
  v76 = v34;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v77, v27, v35);
  v36 = v76;

  swift_bridgeObjectRelease(0x8000000000000000);
  v37 = MOSuggestionAssetMetadataKeyPhotoBestLandscapeCropRect;
  objc_msgSend(v26, "preferredContentsRectForAsset:targetSize:", a1, 200.0, 98.0);
  v42 = objc_msgSend(objc_allocWithZone((Class)MOSuggestionAssetPhotoCropRect), "initWithCGRect:", v38, v39, v40, v41);
  v79 = (_QWORD *)v33;
  *(_QWORD *)&v78 = v42;
  outlined init with take of Any(&v78, v77);
  v43 = swift_isUniquelyReferenced_nonNull_native(v36);
  v76 = v36;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v77, v37, v43);
  v44 = v76;

  swift_bridgeObjectRelease(0x8000000000000000);
  v45 = MOSuggestionAssetMetadataKeyPhotoBestPortraitCropRect;
  objc_msgSend(v26, "preferredContentsRectForAsset:targetSize:", a1, 98.0, 200.0);
  v50 = objc_msgSend(objc_allocWithZone((Class)MOSuggestionAssetPhotoCropRect), "initWithCGRect:", v46, v47, v48, v49);
  v79 = (_QWORD *)v33;
  *(_QWORD *)&v78 = v50;
  outlined init with take of Any(&v78, v77);
  v51 = swift_isUniquelyReferenced_nonNull_native(v44);
  v76 = v44;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v77, v45, v51);
  v52 = v76;

  swift_bridgeObjectRelease(0x8000000000000000);
  v53 = MOSuggestionAssetMetadataKeyPhotoLocalIdentifier;
  v54 = objc_msgSend(a1, "localIdentifier");
  v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
  v57 = v56;

  v79 = &type metadata for String;
  *(_QWORD *)&v78 = v55;
  *((_QWORD *)&v78 + 1) = v57;
  outlined init with take of Any(&v78, v77);
  v58 = swift_isUniquelyReferenced_nonNull_native(v52);
  v76 = v52;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v77, v53, v58);
  v80 = v76;

  swift_bridgeObjectRelease(0x8000000000000000);
  v59 = MOSuggestionAssetMetadataKeyPhotoTakenDate;
  v60 = objc_msgSend(a1, "creationDate");
  if (v60)
  {
    v61 = v60;
    v62 = (uint64_t)v74;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    v63 = 0;
  }
  else
  {
    v63 = 1;
    v62 = (uint64_t)v74;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v62, v63, 1, v9);
  v64 = v75;
  outlined init with take of Date?(v62, v75);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v64, 1, v9) == 1)
  {
    outlined destroy of Any?(v64, (uint64_t *)&demangling cache variable for type metadata for Date?);
    specialized Dictionary._Variant.removeValue(forKey:)((uint64_t)v59, &v78);

    outlined destroy of Any?((uint64_t)&v78, &demangling cache variable for type metadata for Any?);
    v65 = v80;
  }
  else
  {
    v79 = (_QWORD *)v9;
    v66 = __swift_allocate_boxed_opaque_existential_1(&v78);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v10 + 32))(v66, v64, v9);
    outlined init with take of Any(&v78, v77);
    v67 = v80;
    v68 = swift_isUniquelyReferenced_nonNull_native(v80);
    v76 = v67;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v77, v59, v68);
    v65 = v76;

    swift_bridgeObjectRelease(0x8000000000000000);
  }
  v69 = MOSuggestionAssetMetadataKeyVideoDuration;
  objc_msgSend(a1, "duration");
  v79 = &type metadata for Double;
  *(_QWORD *)&v78 = v70;
  outlined init with take of Any(&v78, v77);
  v71 = swift_isUniquelyReferenced_nonNull_native(v65);
  v76 = v65;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v77, v69, v71);
  v72 = v76;

  swift_bridgeObjectRelease(0x8000000000000000);
  return v72;
}

uint64_t sub_1000A38E8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchImages(_:cacheType:completion:)(uint64_t a1)
{
  return partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchImages(_:cacheType:completion:)(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchImages(_:cacheType:completion:));
}

uint64_t sub_1000A391C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_16(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchLivePhotoObjects(_:size:completion:)(uint64_t a1)
{
  return partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchImages(_:cacheType:completion:)(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchLivePhotoObjects(_:size:completion:));
}

uint64_t partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchImages(_:cacheType:completion:)(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_1000A397C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6));

  swift_release(*(_QWORD *)(v0 + v9));
  return swift_deallocObject(v0, v9 + 8, v5);
}

void partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchURLAsset(_:assetType:completion:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchURLAsset(_:assetType:completion:)(a1, *(void (**)(uint64_t, __n128))(v1 + 16), *(_QWORD *)(v1 + 24), (void *)(v1 + v4), *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v1 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t outlined destroy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined init with copy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with take of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A3B80()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.executeLivePhotoTask(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(0)
                                      - 8)
                          + 80);
  closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.executeLivePhotoTask(_:)(a1, a2, *(_QWORD *)(v2 + 16), v2 + ((v5 + 24) & ~v5));
}

uint64_t objectdestroy_13Tm()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

void partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchVideos(_:oneUpIntent:completion:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchVideos(_:oneUpIntent:completion:)(a1, a2, a3, *(void **)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(void (**)(uint64_t, __n128))(v3 + 48));
}

void partial apply for closure #1 in static MOSuggestionAssetPhotoLivePhotoVideosProvider.getLivePhotoFromComponentsURL(baseURL:assetIdentifier:completion:)(uint64_t a1)
{
  uint64_t *v1;

  closure #1 in static MOSuggestionAssetPhotoLivePhotoVideosProvider.getLivePhotoFromComponentsURL(baseURL:assetIdentifier:completion:)(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1000A3C7C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void specialized static MOSuggestionAssetPhotoLivePhotoVideosProvider.squareCrop(normalizedCropRect:imageBounds:)()
{
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  CGFloat v9;
  uint64_t v10;
  CGRect v11;
  CGRect v12;
  CGRect v13;
  CGRect v14;

  MOSuggestionInterstitialExpandableListViewCellConstants.init()();
  x = v11.origin.x;
  y = v11.origin.y;
  width = v11.size.width;
  height = v11.size.height;
  CGRectGetHeight(v11);
  v12.origin.x = x;
  v12.origin.y = y;
  v12.size.width = width;
  v12.size.height = height;
  CGRectGetWidth(v12);
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v4 = type metadata accessor for Logger(0);
  v5 = __swift_project_value_buffer(v4, (uint64_t)static MOAngelLogger.assets);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc(42, -1);
    *(_DWORD *)v8 = 134218752;
    v9 = x;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v9, &v10, v8 + 4);
    *(_WORD *)(v8 + 12) = 2048;
    v9 = y;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v9, &v10, v8 + 14);
    *(_WORD *)(v8 + 22) = 2048;
    v13.origin.x = x;
    v13.origin.y = y;
    v13.size.width = width;
    v13.size.height = height;
    v9 = CGRectGetWidth(v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v9, &v10, v8 + 24);
    *(_WORD *)(v8 + 32) = 2048;
    v14.origin.x = x;
    v14.origin.y = y;
    v14.size.width = width;
    v14.size.height = height;
    v9 = CGRectGetHeight(v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v9, &v10, v8 + 34);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Cropping to %f, %f, %f, %f", (uint8_t *)v8, 0x2Au);
    swift_slowDealloc(v8, -1, -1);
  }

  MOSuggestionInterstitialExpandableListViewCellConstants.init()();
}

unint64_t lazy protocol witness table accessor for type MOSuggestionAssetPhotoLivePhotoVideosType and conformance MOSuggestionAssetPhotoLivePhotoVideosType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MOSuggestionAssetPhotoLivePhotoVideosType and conformance MOSuggestionAssetPhotoLivePhotoVideosType;
  if (!lazy protocol witness table cache variable for type MOSuggestionAssetPhotoLivePhotoVideosType and conformance MOSuggestionAssetPhotoLivePhotoVideosType)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MOSuggestionAssetPhotoLivePhotoVideosType, &type metadata for MOSuggestionAssetPhotoLivePhotoVideosType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionAssetPhotoLivePhotoVideosType and conformance MOSuggestionAssetPhotoLivePhotoVideosType);
  }
  return result;
}

uint64_t sub_1000A3F14@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 112))();
  *a2 = result;
  return result;
}

uint64_t sub_1000A3F44(_QWORD *a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 120);
  v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

uint64_t sub_1000A3F74@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 136))();
  *a2 = result;
  return result;
}

uint64_t sub_1000A3FA4(_QWORD *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 144))(*a1);
}

uint64_t getEnumTagSinglePayload for MOSuggestionAssetPhotoLivePhotoVideosType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MOSuggestionAssetPhotoLivePhotoVideosType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1000A40AC + 4 * byte_1001A0FB5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1000A40E0 + 4 * byte_1001A0FB0[v4]))();
}

uint64_t sub_1000A40E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000A40E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000A40F0);
  return result;
}

uint64_t sub_1000A40FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000A4104);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1000A4108(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000A4110(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosType()
{
  return &type metadata for MOSuggestionAssetPhotoLivePhotoVideosType;
}

uint64_t type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider()
{
  return objc_opt_self(_TtC16MomentsUIService45MOSuggestionAssetPhotoLivePhotoVideosProvider);
}

_QWORD *initializeBufferWithCopyOfBuffer for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = *(void **)((char *)a2 + v8);
    *(_QWORD *)((char *)v4 + v8) = v10;
    *(_OWORD *)((char *)v4 + v9) = *(_OWORD *)((char *)a2 + v9);
    v11 = a3[8];
    *(_QWORD *)((char *)v4 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    *((_BYTE *)v4 + v11) = *((_BYTE *)a2 + v11);
    v12 = a3[9];
    v13 = (_QWORD *)((char *)v4 + v12);
    v14 = (_QWORD *)((char *)a2 + v12);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = v10;
  }
  swift_retain(v15);
  return v4;
}

uint64_t destroy for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

  return swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 36) + 8));
}

uint64_t initializeWithCopy for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  id v15;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v10 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v10) = *(_BYTE *)(a2 + v10);
  v11 = a3[9];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = v9;
  swift_retain(v14);
  return a1;
}

uint64_t assignWithCopy for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v14 = a3[9];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  v17 = v16[1];
  v18 = v15[1];
  *v15 = *v16;
  v15[1] = v17;
  swift_retain(v17);
  swift_release(v18);
  return a1;
}

uint64_t initializeWithTake for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  v9 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  v10 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v11 = *(_QWORD *)(a1 + v10 + 8);
  *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
  swift_release(v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000A44E0);
}

uint64_t sub_1000A44E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000A4568);
}

uint64_t sub_1000A4568(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata completion function for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = &unk_1001A10F0;
    v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[4] = &unk_1001A1108;
    v4[5] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed PHLivePhoto?) -> (@out ())(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@guaranteed PHLivePhoto?) -> ()(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t objectdestroy_52Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void partial apply for closure #1 in closure #1 in static MOSuggestionAssetPhotoLivePhotoVideosProvider.getLivePhotoFromComponentsURL(baseURL:assetIdentifier:completion:)(void *a1, uint64_t a2)
{
  uint64_t v2;

  closure #1 in closure #1 in static MOSuggestionAssetPhotoLivePhotoVideosProvider.getLivePhotoFromComponentsURL(baseURL:assetIdentifier:completion:)(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void (**)(void))(v2 + 32));
}

void partial apply for closure #1 in closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.executeLivePhotoTask(_:)()
{
  _QWORD *v0;

  closure #1 in closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.executeLivePhotoTask(_:)(v0);
}

uint64_t sub_1000A471C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t objectdestroy_38Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  v7 = v0 + v4;
  v8 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);

  swift_release(*(_QWORD *)(v7 + *(int *)(v1 + 36) + 8));
  return swift_deallocObject(v0, v5, v6);
}

void (*partial apply for closure #1 in closure #1 in closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.executeLivePhotoTask(_:)())(_BYTE *, _QWORD)
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(0)
                                      - 8)
                          + 80);
  return closure #1 in closure #1 in closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.executeLivePhotoTask(_:)(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

CGFloat one-time initialization function for GridWidth()
{
  id v0;
  double v1;
  CGFloat v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  CGFloat result;
  CGRect v10;

  v0 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v0, "bounds");
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;

  v10.origin.x = v2;
  v10.origin.y = v4;
  v10.size.width = v6;
  v10.size.height = v8;
  result = CGRectGetWidth(v10) + -8.0 + -4.0;
  static MOSuggestionSheetGridManager.GridWidth = *(_QWORD *)&result;
  return result;
}

uint64_t *MOSuggestionSheetGridManager.GridWidth.unsafeMutableAddressor()
{
  if (one-time initialization token for GridWidth != -1)
    swift_once(&one-time initialization token for GridWidth, one-time initialization function for GridWidth);
  return &static MOSuggestionSheetGridManager.GridWidth;
}

double static MOSuggestionSheetGridManager.GridWidth.getter()
{
  if (one-time initialization token for GridWidth != -1)
    swift_once(&one-time initialization token for GridWidth, one-time initialization function for GridWidth);
  return *(double *)&static MOSuggestionSheetGridManager.GridWidth;
}

uint64_t MOSuggestionSheetGridManager.AssetSizeType.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1000A499C + 4 * byte_1001A11C0[a1]))(0x656772616CLL, 0xE500000000000000);
}

uint64_t sub_1000A499C()
{
  return 0x69576D756964656DLL;
}

uint64_t sub_1000A49B8()
{
  return 0x6D756964656DLL;
}

uint64_t sub_1000A49CC()
{
  return 0x6C6C616D73;
}

uint64_t sub_1000A49DC()
{
  return 0x616D536172747865;
}

uint64_t sub_1000A49FC()
{
  return 0x657263536C6C7566;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance MOSuggestionSheetGridManager.AssetSizeType(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1000A4A68@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1000A4B00 + 4 * byte_1001A11CC[a1]))(0x69576D756964656DLL);
}

uint64_t sub_1000A4B00(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x69576D756964656DLL && v1 == 0xEA00000000006564)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x69576D756964656DLL, 0xEA00000000006564, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xEA00000000006564);
  return v2 & 1;
}

void protocol witness for Hashable.hashValue.getter in conformance MOSuggestionSheetGridManager.AssetSizeType()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X9 }
}

Swift::Int sub_1000A4C34()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x69576D756964656DLL, 0xEA00000000006564);
  swift_bridgeObjectRelease(0xEA00000000006564);
  return Hasher._finalize()();
}

void protocol witness for Hashable.hash(into:) in conformance MOSuggestionSheetGridManager.AssetSizeType()
{
  __asm { BR              X10 }
}

uint64_t sub_1000A4D14(uint64_t a1)
{
  String.hash(into:)(a1, 0x69576D756964656DLL, 0xEA00000000006564);
  return swift_bridgeObjectRelease(0xEA00000000006564);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance MOSuggestionSheetGridManager.AssetSizeType(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  _QWORD v3[9];

  v2 = *v1;
  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X9 }
}

Swift::Int sub_1000A4DEC()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x69576D756964656DLL, 0xEA00000000006564);
  swift_bridgeObjectRelease(0xEA00000000006564);
  return Hasher._finalize()();
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance MOSuggestionSheetGridManager.AssetSizeType@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = specialized MOSuggestionSheetGridManager.AssetSizeType.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance MOSuggestionSheetGridManager.AssetSizeType()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1000A4EEC + 4 * byte_1001A11E4[*v0]))();
}

void sub_1000A4EEC(_QWORD *a1@<X8>)
{
  *a1 = 0x69576D756964656DLL;
  a1[1] = 0xEA00000000006564;
}

void sub_1000A4F0C(_QWORD *a1@<X8>)
{
  *a1 = 0x6D756964656DLL;
  a1[1] = 0xE600000000000000;
}

void sub_1000A4F24(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x6C6C616D73;
  a1[1] = v1;
}

void sub_1000A4F38(_QWORD *a1@<X8>)
{
  *a1 = 0x616D536172747865;
  a1[1] = 0xEA00000000006C6CLL;
}

void sub_1000A4F5C(_QWORD *a1@<X8>)
{
  *a1 = 0x657263536C6C7566;
  a1[1] = 0xEA00000000006E65;
}

uint64_t specialized static MOSuggestionSheetGridManager.getSizeType(for:)(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double Width;
  double v10;
  CGRect v12;
  CGRect v13;

  Width = CGRectGetWidth(*(CGRect *)&a1);
  if (one-time initialization token for GridWidth != -1)
    swift_once(&one-time initialization token for GridWidth, one-time initialization function for GridWidth);
  if (*(double *)&static MOSuggestionSheetGridManager.GridWidth * 0.5 >= Width)
  {
    v10 = *(double *)&static MOSuggestionSheetGridManager.GridWidth * 0.25;
    if (Width < *(double *)&static MOSuggestionSheetGridManager.GridWidth * 0.5 && v10 < Width)
    {
      v13.origin.x = a1;
      v13.origin.y = a2;
      v13.size.width = a3;
      v13.size.height = a4;
      return 2 * (CGRectGetHeight(v13) < v10);
    }
    else if (Width >= *(double *)&static MOSuggestionSheetGridManager.GridWidth / 5.0)
    {
      return 3;
    }
    else
    {
      return 4;
    }
  }
  else
  {
    v12.origin.x = a1;
    v12.origin.y = a2;
    v12.size.width = a3;
    v12.size.height = a4;
    if (Width == CGRectGetHeight(v12))
      return 5;
    else
      return 1;
  }
}

unint64_t specialized MOSuggestionSheetGridManager.AssetSizeType.init(rawValue:)(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of MOSuggestionSheetGridManager.AssetSizeType.init(rawValue:), v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 6)
    return 6;
  else
    return v3;
}

unint64_t lazy protocol witness table accessor for type MOSuggestionSheetGridManager.AssetSizeType and conformance MOSuggestionSheetGridManager.AssetSizeType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MOSuggestionSheetGridManager.AssetSizeType and conformance MOSuggestionSheetGridManager.AssetSizeType;
  if (!lazy protocol witness table cache variable for type MOSuggestionSheetGridManager.AssetSizeType and conformance MOSuggestionSheetGridManager.AssetSizeType)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MOSuggestionSheetGridManager.AssetSizeType, &type metadata for MOSuggestionSheetGridManager.AssetSizeType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionSheetGridManager.AssetSizeType and conformance MOSuggestionSheetGridManager.AssetSizeType);
  }
  return result;
}

uint64_t type metadata accessor for MOSuggestionSheetGridManager()
{
  return objc_opt_self(_TtC16MomentsUIService28MOSuggestionSheetGridManager);
}

uint64_t storeEnumTagSinglePayload for MOSuggestionSheetGridManager.AssetSizeType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1000A5170 + 4 * byte_1001A11EF[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1000A51A4 + 4 * byte_1001A11EA[v4]))();
}

uint64_t sub_1000A51A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000A51AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000A51B4);
  return result;
}

uint64_t sub_1000A51C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000A51C8);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1000A51CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000A51D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MOSuggestionSheetGridManager.AssetSizeType()
{
  return &type metadata for MOSuggestionSheetGridManager.AssetSizeType;
}

uint64_t *MOSuggestionAssetWorkoutProvider.queue.unsafeMutableAddressor()
{
  if (one-time initialization token for queue != -1)
    swift_once(&one-time initialization token for queue, one-time initialization function for queue);
  return &static MOSuggestionAssetWorkoutProvider.queue;
}

id static MOSuggestionAssetWorkoutProvider.queue.getter()
{
  if (one-time initialization token for queue != -1)
    swift_once(&one-time initialization token for queue, one-time initialization function for queue);
  return (id)static MOSuggestionAssetWorkoutProvider.queue;
}

id one-time initialization function for sharedHealthStore()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)HKHealthStore), "init");
  static MOSuggestionAssetWorkoutProvider.sharedHealthStore = (uint64_t)result;
  return result;
}

void MOSuggestionAssetWorkoutProvider.getWorkout(workoutUUID:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v7;
  Class isa;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  _QWORD v15[5];
  uint64_t v16;

  v4 = v3;
  v7 = (void *)objc_opt_self(HKQuery);
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v9 = objc_msgSend(v7, "predicateForObjectWithUUID:", isa);

  v10 = objc_msgSend((id)objc_opt_self(HKObjectType), "workoutType");
  v11 = swift_allocObject(&unk_1001E8250, 32, 7);
  *(_QWORD *)(v11 + 16) = a2;
  *(_QWORD *)(v11 + 24) = a3;
  v12 = objc_allocWithZone((Class)HKSampleQuery);
  v15[4] = partial apply for closure #1 in MOSuggestionAssetWorkoutProvider.getWorkout(workoutUUID:completion:);
  v16 = v11;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = thunk for @escaping @callee_guaranteed (@guaranteed HKSampleQuery, @guaranteed [HKSample]?, @guaranteed Error?) -> ();
  v15[3] = &block_descriptor_17;
  v13 = _Block_copy(v15);
  v14 = objc_msgSend(v12, "initWithSampleType:predicate:limit:sortDescriptors:resultsHandler:", v10, v9, 1, 0, v13, swift_retain(a3).n128_f64[0]);

  _Block_release(v13);
  objc_msgSend(*(id *)(v4 + 24), "executeQuery:", v14, swift_release(v16).n128_f64[0]);

}

void closure #1 in MOSuggestionAssetWorkoutProvider.getWorkout(workoutUUID:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;

  if (!a2)
    goto LABEL_15;
  v6 = a2 & 0xFFFFFFFFFFFFFF8;
  if (!((unint64_t)a2 >> 62))
  {
    v7 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a2);
    if (v7)
      goto LABEL_4;
    goto LABEL_14;
  }
  if (a2 >= 0)
    v13 = a2 & 0xFFFFFFFFFFFFFF8;
  else
    v13 = a2;
  swift_bridgeObjectRetain(a2);
  if (!_CocoaArrayWrapper.endIndex.getter(v13))
  {
LABEL_14:
    swift_bridgeObjectRelease(a2);
LABEL_15:
    a4(0);
    return;
  }
LABEL_4:
  if ((a2 & 0xC000000000000001) != 0)
  {
    v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
    goto LABEL_7;
  }
  if (*(_QWORD *)(v6 + 16))
  {
    v8 = *(id *)(a2 + 32);
LABEL_7:
    v9 = v8;
    swift_bridgeObjectRelease(a2);
    v10 = objc_opt_self(HKWorkout);
    v11 = swift_dynamicCastObjCClass(v9, v10);
    if (v11)
    {
      v12 = v11;
      v14 = v9;
      a4(v12);

      return;
    }

    goto LABEL_15;
  }
  __break(1u);
}

uint64_t sub_1000A56FC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void partial apply for closure #1 in MOSuggestionAssetWorkoutProvider.getWorkout(workoutUUID:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  closure #1 in MOSuggestionAssetWorkoutProvider.getWorkout(workoutUUID:completion:)(a1, a2, a3, *(void (**)(uint64_t))(v3 + 16));
}

uint64_t MOSuggestionAssetWorkoutProvider.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t MOSuggestionAssetWorkoutProvider.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t MOSuggestionAssetWorkoutProvider.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_allocObject(v0, 32, 7);
  *(_QWORD *)(v1 + 16) = -1;
  *(_QWORD *)(v1 + 24) = objc_msgSend(objc_allocWithZone((Class)HKHealthStore), "init");
  return v1;
}

uint64_t MOSuggestionAssetWorkoutProvider.init()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = -1;
  *(_QWORD *)(v0 + 24) = objc_msgSend(objc_allocWithZone((Class)HKHealthStore), "init");
  return v0;
}

uint64_t static MOSuggestionAssetWorkoutProvider.localizedDistanceUsingPreferredUnit(meters:workoutType:)(uint64_t a1, double a2)
{
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;

  if (one-time initialization token for sharedHealthStore != -1)
    swift_once(&one-time initialization token for sharedHealthStore, one-time initialization function for sharedHealthStore);
  v4 = objc_msgSend(objc_allocWithZone((Class)FIUIUnitManager), "initWithHealthStore:", static MOSuggestionAssetWorkoutProvider.sharedHealthStore);
  v5 = objc_msgSend(objc_allocWithZone((Class)FIUIFormattingManager), "initWithUnitManager:", v4);

  if (!v5)
    return 0;
  v6 = objc_msgSend(objc_allocWithZone((Class)FIUIWorkoutActivityType), "initWithActivityTypeIdentifier:isIndoor:", a1, 0);
  v7 = FIUIDistanceTypeForActivityType();

  v8 = objc_msgSend(v5, "localizedStringWithDistanceInMeters:distanceType:unitStyle:", v7, 3, a2);
  if (!v8)
  {

    return 0;
  }
  v9 = v8;
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);

  return v10;
}

HKQuantityType_optional __swiftcall HKWorkout.distanceQuantityTypeForWorkoutType()()
{
  void *v0;
  Swift::Bool v1;
  id v2;
  objc_class *isa;
  id *v4;
  HKQuantityType_optional result;

  v2 = objc_msgSend(v0, "workoutActivityType");
  isa = 0;
  v4 = (id *)&HKQuantityTypeIdentifierDistanceWalkingRunning;
  switch((unint64_t)v2)
  {
    case 0xDuLL:
    case 0x4AuLL:
      v4 = (id *)&HKQuantityTypeIdentifierDistanceCycling;
      goto LABEL_6;
    case 0x18uLL:
    case 0x25uLL:
    case 0x34uLL:
      goto LABEL_6;
    case 0x28uLL:
    case 0x3CuLL:
    case 0x3DuLL:
    case 0x43uLL:
      v4 = (id *)&HKQuantityTypeIdentifierDistanceDownhillSnowSports;
      goto LABEL_6;
    case 0x2EuLL:
      v4 = (id *)&HKQuantityTypeIdentifierDistanceSwimming;
      goto LABEL_6;
    case 0x46uLL:
    case 0x47uLL:
      v4 = (id *)&HKQuantityTypeIdentifierDistanceWheelchair;
LABEL_6:
      type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for HKQuantityType, HKQuantityType_ptr);
      isa = HKQuantityType.init(_:)((HKQuantityTypeIdentifier)*v4).super.super.super.isa;
      break;
    default:
      break;
  }
  result.value.super.super.super.isa = isa;
  result.is_nil = v1;
  return result;
}

double HKWorkout.packedSuggestionAssetMetadata(completion:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  uint64_t v20;
  double *v21;
  _QWORD aBlock[5];
  _QWORD *v23;

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v20 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for queue != -1)
    swift_once(&one-time initialization token for queue, one-time initialization function for queue);
  v12 = (_QWORD *)swift_allocObject(&unk_1001E82A0, 40, 7);
  v12[2] = v2;
  v12[3] = a1;
  v12[4] = a2;
  aBlock[4] = partial apply for closure #1 in HKWorkout.packedSuggestionAssetMetadata(completion:);
  v23 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_6_0;
  v13 = _Block_copy(aBlock);
  v14 = v2;
  swift_retain(a2);
  static DispatchQoS.unspecified.getter(v15);
  v21 = _swiftEmptyArrayStorage;
  v16 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  v18 = lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v21, v17, v18, v5, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  *(_QWORD *)&result = swift_release(v23).n128_u64[0];
  return result;
}

void HKWorkout._packedSuggestionAssetMetadata(completion:)(void (*a1)(__n128), uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  id v33;
  id v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  id v38;
  id v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t inited;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  void *v52;
  void *v53;
  uint64_t v54;
  __n128 v55;
  Class v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  void *v61;
  uint64_t v62;
  id v63;
  id v64;
  id v65;
  id v66;
  uint64_t v67;
  _QWORD *v68;
  void *v69;
  _QWORD *v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  unint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  void *v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  __n128 v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  _QWORD *v91;
  void *v92;
  _QWORD *v93;
  id v94;
  id v95;
  id v96;
  Class isa;
  uint64_t v98;
  _QWORD *v99;
  _QWORD *v100;
  void *v101;
  void *v102;
  void *v103;
  id v104;
  void *v105;
  char v107[48];
  char v108[24];
  __int128 aBlock;
  __int128 v110;
  double (*v111)(uint64_t, uint64_t);
  _QWORD *v112;
  char v113[40];
  char v114[24];
  _BYTE v115[32];

  v3 = v2;
  v5 = swift_allocObject(&unk_1001E82F0, 24, 7);
  *(_QWORD *)(v5 + 16) = &_swiftEmptyDictionarySingleton;
  v6 = MOSuggestionAssetMetadataKeyWorkoutWorkoutStartTime;
  v7 = objc_msgSend(v3, "startDate");
  v8 = type metadata accessor for Date(0);
  *((_QWORD *)&v110 + 1) = v8;
  __swift_allocate_boxed_opaque_existential_1(&aBlock);
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v7);

  specialized Dictionary.subscript.setter((uint64_t)&aBlock, v6);
  v9 = MOSuggestionAssetMetadataKeyWorkoutWorkoutEndTime;
  v10 = objc_msgSend(v3, "endDate");
  *((_QWORD *)&v110 + 1) = v8;
  __swift_allocate_boxed_opaque_existential_1(&aBlock);
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v10);

  specialized Dictionary.subscript.setter((uint64_t)&aBlock, v9);
  v11 = MOSuggestionAssetMetadataKeyWorkoutDuration;
  objc_msgSend(v3, "duration");
  *((_QWORD *)&v110 + 1) = &type metadata for Double;
  *(_QWORD *)&aBlock = v12;
  specialized Dictionary.subscript.setter((uint64_t)&aBlock, v11);
  v13 = MOSuggestionAssetMetadataKeyWorkoutType;
  v14 = objc_msgSend(v3, "workoutActivityType");
  v15 = objc_msgSend(v3, "fi_swimmingLocationType");
  v16 = _HKWorkoutIsIndoor(v3);
  v17 = (id)FILocalizedNameForActivityType(v14, v15, v16);
  if (v17)
  {
    v18 = v17;
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v21 = v20;

    *((_QWORD *)&v110 + 1) = &type metadata for String;
    *(_QWORD *)&aBlock = v19;
    *((_QWORD *)&aBlock + 1) = v21;
  }
  else
  {
    aBlock = 0u;
    v110 = 0u;
  }
  specialized Dictionary.subscript.setter((uint64_t)&aBlock, v13);
  v22 = MOSuggestionAssetMetadataKeyWorkoutHKType;
  v23 = objc_msgSend(v3, "workoutActivityType");
  *((_QWORD *)&v110 + 1) = &type metadata for UInt;
  *(_QWORD *)&aBlock = v23;
  specialized Dictionary.subscript.setter((uint64_t)&aBlock, v22);
  v24 = objc_msgSend(v3, "metadata");
  if (v24)
  {
    v25 = v24;
    v26 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v24, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

    v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(HKMetadataKeyIndoorWorkout);
    v29 = v28;
    if (*(_QWORD *)(v26 + 16) && (v30 = specialized __RawDictionaryStorage.find<A>(_:)(v27, v28), (v31 & 1) != 0))
    {
      outlined init with copy of Any(*(_QWORD *)(v26 + 56) + 32 * v30, (uint64_t)&aBlock);
    }
    else
    {
      aBlock = 0u;
      v110 = 0u;
    }
    swift_bridgeObjectRelease(v29);
    swift_bridgeObjectRelease(v26);
    if (*((_QWORD *)&v110 + 1))
    {
      if ((swift_dynamicCast(v115, &aBlock, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) != 0)
      {
        *((_QWORD *)&v110 + 1) = &type metadata for Bool;
        LOBYTE(aBlock) = v115[0];
        specialized Dictionary.subscript.setter((uint64_t)&aBlock, MOSuggestionAssetMetadataKeyWorkoutIsIndoors);
      }
    }
    else
    {
      outlined destroy of Any?((uint64_t)&aBlock);
    }
  }
  v99 = (_QWORD *)(v5 + 16);
  if (one-time initialization token for sharedHealthStore != -1)
    swift_once(&one-time initialization token for sharedHealthStore, one-time initialization function for sharedHealthStore);
  v32 = static MOSuggestionAssetWorkoutProvider.sharedHealthStore;
  v33 = objc_msgSend(objc_allocWithZone((Class)HKQuantityType), "initWithIdentifier:", HKQuantityTypeIdentifierHeartRate);
  v34 = objc_msgSend(objc_allocWithZone((Class)HKQuantityType), "initWithIdentifier:", HKQuantityTypeIdentifierActiveEnergyBurned);
  v35 = (unint64_t)HKWorkout.distanceQuantityTypeForWorkoutType()();
  v36 = swift_allocObject(&unk_1001E8318, 24, 7);
  *(_QWORD *)(v36 + 16) = 0;
  v37 = (uint64_t *)(v36 + 16);
  v104 = (id)v32;
  v38 = objc_msgSend(objc_allocWithZone((Class)FIUIUnitManager), "initWithHealthStore:", v32);
  v39 = objc_msgSend(objc_allocWithZone((Class)FIUIFormattingManager), "initWithUnitManager:", v38);

  v105 = v39;
  if (!v39)
  {
    v53 = v34;
    v54 = *(_QWORD *)(v5 + 16);
    v55 = swift_bridgeObjectRetain(v54);
    a1(v55);
    swift_release(v5);

    swift_release(v36);
    swift_bridgeObjectRelease(v54);
    v56 = (Class)v35;
LABEL_48:

    return;
  }
  v103 = (void *)v35;
  v40 = (_QWORD *)swift_allocObject(&unk_1001E8340, 56, 7);
  v40[2] = v36;
  v40[3] = 2;
  v40[4] = a1;
  v40[5] = a2;
  v41 = a2;
  v100 = v40;
  v101 = v34;
  v42 = v5;
  v40[6] = v5;
  v102 = v33;
  if (v33 && v34)
  {
    v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    inited = swift_initStackObject(v43, v107);
    *(_OWORD *)(inited + 16) = xmmword_10019F870;
    *(_QWORD *)(inited + 32) = v33;
    *(_QWORD *)(inited + 40) = v34;
    *(_QWORD *)&aBlock = inited;
    specialized Array._endMutation()(inited);
    v45 = aBlock;
    if ((unint64_t)aBlock >> 62)
    {
      if ((uint64_t)aBlock < 0)
        v62 = aBlock;
      else
        v62 = aBlock & 0xFFFFFFFFFFFFFF8;
      v63 = v33;
      v64 = v34;
      v65 = v63;
      v66 = v64;
      swift_retain(v41);
      swift_retain(v42);
      swift_retain(v36);
      swift_bridgeObjectRetain(v45);
      v67 = _CocoaArrayWrapper.endIndex.getter(v62);
      swift_bridgeObjectRelease(v45);
      v98 = v36;
      if (v67)
        goto LABEL_20;
    }
    else
    {
      v46 = *(_QWORD *)((aBlock & 0xFFFFFFFFFFFFF8) + 0x10);
      v47 = v33;
      v48 = v34;
      v49 = v47;
      v42 = v5;
      v50 = v48;
      swift_retain(v41);
      swift_retain(v5);
      swift_retain(v36);
      v98 = v36;
      if (v46)
      {
LABEL_20:
        specialized Set.init(_nonEmptyArrayLiteral:)(v45);
        v52 = v51;
LABEL_32:
        swift_bridgeObjectRelease(v45);
        type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for HKQuantityType, HKQuantityType_ptr);
        lazy protocol witness table accessor for type HKQuantityType and conformance NSObject();
        isa = Set._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v52);
        v68 = (_QWORD *)swift_allocObject(&unk_1001E83B8, 80, 7);
        v68[2] = v103;
        v68[3] = v102;
        v68[4] = v3;
        v68[5] = v42;
        v68[6] = v105;
        v68[7] = v101;
        v68[8] = partial apply for closure #1 in HKWorkout._packedSuggestionAssetMetadata(completion:);
        v68[9] = v100;
        v111 = partial apply for closure #2 in HKWorkout._packedSuggestionAssetMetadata(completion:);
        v112 = v68;
        *(_QWORD *)&aBlock = _NSConcreteStackBlock;
        *((_QWORD *)&aBlock + 1) = 1107296256;
        *(_QWORD *)&v110 = thunk for @escaping @callee_guaranteed (@guaranteed [HKQuantityType : HKUnit], @guaranteed Error?) -> ();
        *((_QWORD *)&v110 + 1) = &block_descriptor_27;
        v69 = _Block_copy(&aBlock);
        v70 = v112;
        v71 = v103;
        v72 = v3;
        v73 = v105;
        swift_retain(v100);
        v74 = v102;
        v75 = v101;
        v59 = v42;
        swift_retain(v42);
        v61 = v104;
        objc_msgSend(v104, "preferredUnitsForQuantityTypes:completion:", isa, v69, swift_release(v70).n128_f64[0]);
        _Block_release(v69);

        v36 = v98;
        goto LABEL_33;
      }
    }
    v52 = &_swiftEmptySetSingleton;
    goto LABEL_32;
  }
  swift_beginAccess(v37, v115, 1, 0);
  v57 = *v37 + 1;
  if (__OFADD__(*v37, 1))
  {
    __break(1u);
    goto LABEL_50;
  }
  *v37 = v57;
  if (v57 == 2)
  {
    swift_beginAccess(v99, v108, 0, 0);
    v58 = *(_QWORD *)(v5 + 16);
    swift_retain(a2);
    v59 = v5;
    swift_retain(v5);
    swift_retain(v36);
    v60 = swift_bridgeObjectRetain(v58);
    a1(v60);
    swift_bridgeObjectRelease(v58);
  }
  else
  {
    swift_retain(a2);
    v59 = v5;
    swift_retain(v5);
    swift_retain(v36);
  }
  v61 = v104;
LABEL_33:
  v76 = (unint64_t)HKWorkout.distanceQuantityTypeForWorkoutType()();
  if (v76)
  {
    v77 = (void *)v76;
    v78 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v79 = swift_initStackObject(v78, v113);
    *(_OWORD *)(v79 + 16) = xmmword_10019EDA0;
    *(_QWORD *)(v79 + 32) = v77;
    *(_QWORD *)&aBlock = v79;
    specialized Array._endMutation()(v79);
    v80 = aBlock;
    if ((unint64_t)aBlock >> 62)
    {
      if ((uint64_t)aBlock < 0)
        v88 = aBlock;
      else
        v88 = aBlock & 0xFFFFFFFFFFFFFF8;
      v89 = v77;
      swift_bridgeObjectRetain(v80);
      v90 = _CocoaArrayWrapper.endIndex.getter(v88);
      swift_bridgeObjectRelease(v80);
      if (v90)
        goto LABEL_36;
    }
    else
    {
      v81 = *(_QWORD *)((aBlock & 0xFFFFFFFFFFFFF8) + 0x10);
      v82 = v77;
      if (v81)
      {
LABEL_36:
        specialized Set.init(_nonEmptyArrayLiteral:)(v80);
        v84 = v83;
LABEL_47:
        swift_bridgeObjectRelease(v80);
        type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for HKQuantityType, HKQuantityType_ptr);
        lazy protocol witness table accessor for type HKQuantityType and conformance NSObject();
        v56 = Set._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v84);
        v91 = (_QWORD *)swift_allocObject(&unk_1001E8368, 64, 7);
        v91[2] = v77;
        v91[3] = v3;
        v91[4] = v59;
        v91[5] = v105;
        v91[6] = partial apply for closure #1 in HKWorkout._packedSuggestionAssetMetadata(completion:);
        v91[7] = v100;
        v111 = partial apply for closure #3 in HKWorkout._packedSuggestionAssetMetadata(completion:);
        v112 = v91;
        *(_QWORD *)&aBlock = _NSConcreteStackBlock;
        *((_QWORD *)&aBlock + 1) = 1107296256;
        *(_QWORD *)&v110 = thunk for @escaping @callee_guaranteed (@guaranteed [HKQuantityType : HKUnit], @guaranteed Error?) -> ();
        *((_QWORD *)&v110 + 1) = &block_descriptor_21_0;
        v92 = _Block_copy(&aBlock);
        v93 = v112;
        swift_retain(v59);
        v94 = v3;
        v95 = v105;
        swift_retain(v100);
        v96 = v77;
        objc_msgSend(v61, "preferredUnitsForQuantityTypes:completion:", v56, v92, swift_release(v93).n128_f64[0]);
        swift_release(v100);

        _Block_release(v92);
        swift_release(v59);
        swift_release(v36);

        goto LABEL_48;
      }
    }
    v84 = &_swiftEmptySetSingleton;
    goto LABEL_47;
  }
  swift_beginAccess(v37, &aBlock, 1, 0);
  v85 = *v37 + 1;
  if (!__OFADD__(*v37, 1))
  {
    *v37 = v85;
    if (v85 == 2)
    {
      swift_beginAccess(v99, v114, 0, 0);
      v86 = *v99;
      v87 = swift_bridgeObjectRetain(*v99);
      a1(v87);

      swift_bridgeObjectRelease(v86);
    }
    else
    {

    }
    swift_release(v59);
    swift_release(v36);
    swift_release(v100);

    v56 = (Class)v103;
    goto LABEL_48;
  }
LABEL_50:
  __break(1u);
}

uint64_t closure #1 in HKWorkout._packedSuggestionAssetMetadata(completion:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  _QWORD *v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[24];

  v9 = (_QWORD *)(a1 + 16);
  result = swift_beginAccess(a1 + 16, v18, 1, 0);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
  {
    __break(1u);
  }
  else
  {
    *v9 = v13;
    if (v13 == a2)
    {
      v14 = (uint64_t *)(a5 + 16);
      swift_beginAccess(v14, &v17, 0, 0);
      v15 = *v14;
      v16 = swift_bridgeObjectRetain(v15);
      a3(v16);
      return swift_bridgeObjectRelease(v15);
    }
  }
  return result;
}

double closure #2 in HKWorkout._packedSuggestionAssetMetadata(completion:)(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, void *a7, void *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  const void *v35;
  double result;
  void *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double *v46;
  _QWORD aBlock[5];
  _QWORD *v48;

  v42 = a8;
  v38 = a10;
  v40 = type metadata accessor for DispatchWorkItemFlags(0);
  v45 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v39 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DispatchQoS(0);
  v43 = *(_QWORD *)(v18 - 8);
  v44 = v18;
  __chkstk_darwin(v18);
  v20 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for queue != -1)
    swift_once(&one-time initialization token for queue, one-time initialization function for queue);
  v41 = static MOSuggestionAssetWorkoutProvider.queue;
  v21 = (_QWORD *)swift_allocObject(&unk_1001E8408, 96, 7);
  v21[2] = a2;
  v21[3] = a3;
  v21[4] = a1;
  v21[5] = a4;
  v21[6] = a5;
  v21[7] = a6;
  v22 = v42;
  v21[8] = a7;
  v21[9] = v22;
  v21[10] = a9;
  v23 = v38;
  v21[11] = v38;
  aBlock[4] = partial apply for closure #1 in closure #2 in HKWorkout._packedSuggestionAssetMetadata(completion:);
  v48 = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_33_0;
  v37 = _Block_copy(aBlock);
  swift_errorRetain(a2);
  v24 = a3;
  swift_bridgeObjectRetain(a1);
  v25 = a4;
  v26 = a5;
  swift_retain(a6);
  v27 = a7;
  v28 = v22;
  swift_retain(v23);
  static DispatchQoS.unspecified.getter(v29);
  v46 = _swiftEmptyArrayStorage;
  v30 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  v32 = lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  v34 = v39;
  v33 = v40;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v46, v31, v32, v40, v30);
  v35 = v37;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v20, v34, v37);
  _Block_release(v35);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v34, v33);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v20, v44);
  *(_QWORD *)&result = swift_release(v48).n128_u64[0];
  return result;
}

id closure #1 in closure #2 in HKWorkout._packedSuggestionAssetMetadata(completion:)(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5, uint64_t a6, void *a7, void *a8, uint64_t (*a9)(void))
{
  void *v9;
  uint64_t v10;
  uint64_t v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  id v31;
  void *v32;
  char **v33;
  id v34;
  void *v35;
  id v36;
  double v37;
  id v38;
  uint64_t v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  id result;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  void *object;
  NSString v49;
  id v50;
  uint64_t v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  char v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  __n128 v71;
  id v72;
  id v73;
  id v74;
  id v75;
  void *v76;
  id v77;
  double v78;
  id v79;
  uint64_t v80;
  double v81;
  id v82;
  id v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  Swift::String v87;
  void *v88;
  id v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  NSObject *v93;
  uint64_t v94;
  os_log_type_t v95;
  uint8_t *v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  id v100;
  uint64_t v101;
  char v102;
  __n128 v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  __n128 v108;
  void *v109;
  uint64_t v110;
  void *v111;
  void *v112;
  void *v115;
  void *v116;
  uint64_t v118;
  uint64_t v119;
  _QWORD v120[3];
  char v121[8];
  uint64_t v122;
  uint64_t v123;
  _BYTE v124[16];
  Swift::String v125;
  __int128 v126;

  v9 = a8;
  v10 = a6;
  if (a1)
  {
    swift_errorRetain(a1);
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
      swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    v16 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v16, (uint64_t)static MOAngelLogger.assets);
    swift_errorRetain(a1);
    v17 = a2;
    swift_errorRetain(a1);
    v18 = v17;
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, v20))
    {
      v111 = a5;
      v21 = swift_slowAlloc(22, -1);
      v110 = swift_slowAlloc(64, -1);
      v125._countAndFlagsBits = v110;
      *(_DWORD *)v21 = 136315394;
      v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HKQuantityType?);
      v23 = Optional.debugDescription.getter(v22);
      v25 = v24;
      v123 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v24, &v125._countAndFlagsBits);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v123, v124, v21 + 4);

      swift_bridgeObjectRelease(v25);
      *(_WORD *)(v21 + 12) = 2080;
      swift_getErrorValue(a1, v121, v120);
      v26 = Error.localizedDescription.getter(v120[1], v120[2]);
      v28 = v27;
      v123 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v27, &v125._countAndFlagsBits);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v123, v124, v21 + 14);
      swift_bridgeObjectRelease(v28);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "[HKWorkout] Failed to fetch HK preferred units for %s error=%s", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy(v110, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v110, -1, -1);
      v29 = v21;
      a5 = v111;
      swift_slowDealloc(v29, -1, -1);

      swift_errorRelease(a1);
    }
    else
    {
      swift_errorRelease(a1);

      swift_errorRelease(a1);
      swift_errorRelease(a1);

    }
    v9 = a8;
    v10 = a6;
  }
  v30 = (uint64_t *)(v10 + 16);
  v31 = a4;
  v32 = specialized Dictionary.subscript.getter(v31, a3);

  v33 = &selRef_genericAvatarFor_pointSize_completion_;
  if (v32)
  {
    v34 = objc_msgSend(a5, "statisticsForType:", v31);
    if (v34
      && (v35 = v34,
          v36 = objc_msgSend(v34, "averageQuantity"),
          v35,
          v36))
    {
      v112 = a5;
      objc_msgSend(v36, "doubleValueForUnit:", v32);
      if (v37 <= 0.0)
      {

      }
      else
      {
        v38 = MOSuggestionAssetMetadataKeyWorkoutAverageHeartRate;
        objc_msgSend(v36, "doubleValueForUnit:", v32);
        *((_QWORD *)&v126 + 1) = &type metadata for Double;
        v125._countAndFlagsBits = v39;
        swift_beginAccess(v10 + 16, &v123, 33, 0);
        specialized Dictionary.subscript.setter((uint64_t)&v125, v38);
        v40 = (void *)MOSuggestionAssetMetadataKeyWorkoutAverageHeartRateQuantity;
        *((_QWORD *)&v126 + 1) = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for HKQuantity, HKQuantity_ptr);
        v125._countAndFlagsBits = (uint64_t)v36;
        v41 = v40;
        v42 = v36;
        specialized Dictionary.subscript.setter((uint64_t)&v125, v41);
        swift_endAccess(&v123);
        v43 = MOSuggestionAssetMetadataKeyWorkoutAverageHeartRateWithUnit;
        v109 = v42;
        result = objc_msgSend(a7, "localizedStringWithHeartRate:unitStyle:", v42, 1);
        if (!result)
        {
          __break(1u);
          goto LABEL_50;
        }
        v45 = result;
        static String._unconditionallyBridgeFromObjectiveC(_:)(result);
        v47 = v46;

        object = String.uppercased()()._object;
        swift_bridgeObjectRelease(v47);
        v49 = String._bridgeToObjectiveC()();
        v50 = objc_msgSend(v49, "trimmedString", swift_bridgeObjectRelease(object).n128_f64[0]);

        if (v50)
        {
          v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
          v53 = v52;

          *((_QWORD *)&v126 + 1) = &type metadata for String;
          v125._countAndFlagsBits = v51;
          v125._object = v53;
        }
        else
        {
          v125 = (Swift::String)0;
          v126 = 0u;
        }
        swift_beginAccess(v10 + 16, &v123, 33, 0);
        specialized Dictionary.subscript.setter((uint64_t)&v125, v43);
        swift_endAccess(&v123);
        v33 = &selRef_genericAvatarFor_pointSize_completion_;
        if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
          swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
        v54 = type metadata accessor for Logger(0);
        __swift_project_value_buffer(v54, (uint64_t)static MOAngelLogger.assets);
        v55 = swift_retain_n(v10);
        v56 = v10;
        v57 = Logger.logObject.getter(v55);
        v58 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v57, v58))
        {
          v115 = v9;
          v118 = v56;
          v59 = (uint8_t *)swift_slowAlloc(12, -1);
          v60 = swift_slowAlloc(32, -1);
          v122 = v60;
          *(_DWORD *)v59 = 136315138;
          v61 = (void *)MOSuggestionAssetMetadataKeyWorkoutAverageHeartRateWithUnit;
          swift_beginAccess(v30, &v123, 32, 0);
          v62 = *v30;
          if (*(_QWORD *)(*v30 + 16))
          {
            v63 = v61;
            v64 = specialized __RawDictionaryStorage.find<A>(_:)(v63);
            if ((v65 & 1) != 0)
            {
              outlined init with copy of Any(*(_QWORD *)(v62 + 56) + 32 * v64, (uint64_t)&v125);
            }
            else
            {
              v125 = (Swift::String)0;
              v126 = 0u;
            }

          }
          else
          {
            v125 = (Swift::String)0;
            v126 = 0u;
          }
          swift_endAccess(&v123);
          v67 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Any?);
          v68 = Optional.debugDescription.getter(v67);
          v70 = v69;
          outlined destroy of Any?((uint64_t)&v125);
          v125._countAndFlagsBits = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v68, v70, &v122);
          v71 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, &v125._object, v59 + 4);
          swift_release_n(v118, v71);
          swift_bridgeObjectRelease(v70);
          _os_log_impl((void *)&_mh_execute_header, v57, v58, "[HKWorkout] heartrate: %s", v59, 0xCu);
          swift_arrayDestroy(v60, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v60, -1, -1);
          swift_slowDealloc(v59, -1, -1);

          v10 = v118;
          a5 = v112;
          v9 = v115;
          v33 = &selRef_genericAvatarFor_pointSize_completion_;
        }
        else
        {

          swift_release_n(v56, v66);
          v10 = v56;
          a5 = v112;
        }
      }
    }
    else
    {

    }
  }
  v72 = v9;
  v73 = specialized Dictionary.subscript.getter(v72, a3);

  if (!v73)
    return (id)a9();
  v74 = objc_msgSend(objc_allocWithZone((Class)HKQuantityFormattingParameters), "init");
  objc_msgSend(v74, "setPreferredUnit:", v73);
  objc_msgSend(v74, "setPrecision:", 0);
  v75 = objc_msgSend(a5, v33[466], v72);
  if (!v75
    || (v76 = v75, v77 = objc_msgSend(v75, "sumQuantity"), v76, !v77))
  {

LABEL_41:
    return (id)a9();
  }
  objc_msgSend(v77, "doubleValueForUnit:", v73);
  if (v78 <= 0.0)
  {
LABEL_43:

    return (id)a9();
  }
  v79 = MOSuggestionAssetMetadataKeyWorkoutCaloriesBurnt;
  objc_msgSend(v77, "doubleValueForUnit:", v73);
  *((_QWORD *)&v126 + 1) = &type metadata for Double;
  v125._countAndFlagsBits = v80;
  swift_beginAccess(v30, &v123, 33, 0);
  specialized Dictionary.subscript.setter((uint64_t)&v125, v79);
  swift_endAccess(&v123);
  v73 = v73;
  objc_msgSend(v77, "doubleValueForUnit:", v73);
  v82 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v73, floor(v81));

  v83 = MOSuggestionAssetMetadataKeyWorkoutCaloriesBurntWithUnit;
  result = objc_msgSend(a7, "localizedStringWithActiveEnergy:unitStyle:", v77, 1);
  if (result)
  {
    v84 = result;
    static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v86 = v85;

    v87 = String.uppercased()();
    swift_bridgeObjectRelease(v86);
    *((_QWORD *)&v126 + 1) = &type metadata for String;
    v125 = v87;
    swift_beginAccess(v30, &v123, 33, 0);
    specialized Dictionary.subscript.setter((uint64_t)&v125, v83);
    v88 = (void *)MOSuggestionAssetMetadataKeyWorkoutCaloriesBurntQuantity;
    *((_QWORD *)&v126 + 1) = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for HKQuantity, HKQuantity_ptr);
    v125._countAndFlagsBits = (uint64_t)v82;
    v89 = v88;
    v90 = v82;
    specialized Dictionary.subscript.setter((uint64_t)&v125, v89);
    swift_endAccess(&v123);
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
      swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    v91 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v91, (uint64_t)static MOAngelLogger.assets);
    v92 = swift_retain_n(v10);
    v93 = Logger.logObject.getter(v92);
    v94 = v10;
    v95 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v93, v95))
    {
      v116 = v90;
      v119 = v94;
      v96 = (uint8_t *)swift_slowAlloc(12, -1);
      v97 = swift_slowAlloc(32, -1);
      v122 = v97;
      *(_DWORD *)v96 = 136315138;
      v98 = (void *)MOSuggestionAssetMetadataKeyWorkoutCaloriesBurntWithUnit;
      swift_beginAccess(v30, &v123, 32, 0);
      v99 = *v30;
      if (*(_QWORD *)(*v30 + 16))
      {
        v100 = v98;
        v101 = specialized __RawDictionaryStorage.find<A>(_:)(v100);
        if ((v102 & 1) != 0)
        {
          outlined init with copy of Any(*(_QWORD *)(v99 + 56) + 32 * v101, (uint64_t)&v125);
        }
        else
        {
          v125 = (Swift::String)0;
          v126 = 0u;
        }

      }
      else
      {
        v125 = (Swift::String)0;
        v126 = 0u;
      }
      swift_endAccess(&v123);
      v104 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Any?);
      v105 = Optional.debugDescription.getter(v104);
      v107 = v106;
      outlined destroy of Any?((uint64_t)&v125);
      v125._countAndFlagsBits = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v105, v107, &v122);
      v108 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, &v125._object, v96 + 4);
      swift_release_n(v119, v108);
      swift_bridgeObjectRelease(v107);
      _os_log_impl((void *)&_mh_execute_header, v93, v95, "[HKWorkout] calories: %s", v96, 0xCu);
      swift_arrayDestroy(v97, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v97, -1, -1);
      swift_slowDealloc(v96, -1, -1);

      goto LABEL_41;
    }

    swift_release_n(v94, v103);
    goto LABEL_43;
  }
LABEL_50:
  __break(1u);
  return result;
}

double closure #3 in HKWorkout._packedSuggestionAssetMetadata(completion:)(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double result;
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double *v36;
  _QWORD aBlock[5];
  _QWORD *v38;

  v32[0] = type metadata accessor for DispatchWorkItemFlags(0);
  v35 = *(_QWORD *)(v32[0] - 8);
  __chkstk_darwin(v32[0]);
  v17 = (char *)v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DispatchQoS(0);
  v33 = *(_QWORD *)(v18 - 8);
  v34 = v18;
  __chkstk_darwin(v18);
  v20 = (char *)v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for queue != -1)
    swift_once(&one-time initialization token for queue, one-time initialization function for queue);
  v32[1] = static MOSuggestionAssetWorkoutProvider.queue;
  v21 = (_QWORD *)swift_allocObject(&unk_1001E8458, 80, 7);
  v21[2] = a2;
  v21[3] = a3;
  v21[4] = a1;
  v21[5] = a4;
  v21[6] = a5;
  v21[7] = a6;
  v21[8] = a7;
  v21[9] = a8;
  aBlock[4] = partial apply for closure #1 in closure #3 in HKWorkout._packedSuggestionAssetMetadata(completion:);
  v38 = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_39;
  v22 = _Block_copy(aBlock);
  swift_errorRetain(a2);
  v23 = a3;
  swift_bridgeObjectRetain(a1);
  v24 = a4;
  swift_retain(a5);
  v25 = a6;
  swift_retain(a8);
  static DispatchQoS.unspecified.getter(v26);
  v36 = _swiftEmptyArrayStorage;
  v27 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  v29 = lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  v30 = v32[0];
  dispatch thunk of SetAlgebra.init<A>(_:)(&v36, v28, v29, v32[0], v27);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v20, v17, v22);
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v17, v30);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v20, v34);
  *(_QWORD *)&result = swift_release(v38).n128_u64[0];
  return result;
}

id closure #1 in closure #3 in HKWorkout._packedSuggestionAssetMetadata(completion:)(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, void *a6, uint64_t (*a7)(_QWORD))
{
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD);
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  double v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  void *v40;
  id v41;
  id v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  double v47;
  double v48;
  id v49;
  uint64_t v50;
  id result;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  Swift::String v55;
  uint64_t v56;
  _QWORD v57[3];
  _BYTE v58[8];
  uint64_t v59;
  _BYTE v60[16];
  Swift::String v61;
  _QWORD *v62;

  if (a1)
  {
    swift_errorRetain(a1);
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
      swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    v10 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v10, (uint64_t)static MOAngelLogger.assets);
    v11 = a2;
    swift_errorRetain(a1);
    v12 = v11;
    v13 = swift_errorRetain(a1);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc(22, -1);
      v56 = swift_slowAlloc(64, -1);
      v61._countAndFlagsBits = v56;
      *(_DWORD *)v16 = 136315394;
      v17 = a7;
      v18 = objc_msgSend(v12, "debugDescription");
      v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
      v21 = v20;

      a7 = v17;
      v59 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v21, &v61._countAndFlagsBits);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, v60, v16 + 4);

      swift_bridgeObjectRelease(v21);
      *(_WORD *)(v16 + 12) = 2080;
      swift_getErrorValue(a1, v58, v57);
      v22 = Error.localizedDescription.getter(v57[1], v57[2]);
      v24 = v23;
      v59 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v23, &v61._countAndFlagsBits);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, v60, v16 + 14);
      swift_bridgeObjectRelease(v24);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "[HKWorkout] Failed to fetch HK preferred units for %s error=%s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy(v56, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v56, -1, -1);
      swift_slowDealloc(v16, -1, -1);

      v25 = swift_errorRelease(a1);
    }
    else
    {
      swift_errorRelease(a1);

      swift_errorRelease(a1);
      swift_errorRelease(a1);

    }
    return (id)a7(v25);
  }
  v30 = a2;
  v31 = specialized Dictionary.subscript.getter(v30, a3);

  if (!v31)
    return (id)a7(v25);
  v32 = objc_msgSend(objc_allocWithZone((Class)HKQuantityFormattingParameters), "init");
  objc_msgSend(v32, "setPreferredUnit:", v31);
  objc_msgSend(v32, "setPrecision:", 2);
  v33 = objc_msgSend(a4, "statisticsForType:", v30);
  if (!v33
    || (v34 = v33, v35 = objc_msgSend(v33, "sumQuantity"), v34, !v35))
  {

    return (id)a7(v25);
  }
  objc_msgSend(v35, "doubleValueForUnit:", v31);
  if (v36 <= 0.0)
  {

    return (id)a7(v25);
  }
  v37 = a5 + 16;
  v38 = MOSuggestionAssetMetadataKeyWorkoutTotalDistance;
  objc_msgSend(v35, "doubleValueForUnit:", v31);
  v62 = &type metadata for Double;
  v61._countAndFlagsBits = v39;
  swift_beginAccess(v37, &v59, 33, 0);
  specialized Dictionary.subscript.setter((uint64_t)&v61, v38);
  v40 = (void *)MOSuggestionAssetMetadataKeyWorkoutTotalDistanceQuantity;
  v62 = (_QWORD *)type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for HKQuantity, HKQuantity_ptr);
  v61._countAndFlagsBits = (uint64_t)v35;
  v41 = v40;
  v42 = v35;
  specialized Dictionary.subscript.setter((uint64_t)&v61, v41);
  swift_endAccess(&v59);
  v43 = (void *)MOSuggestionAssetMetadataKeyWorkoutTotalDistanceWithUnit;
  v44 = (void *)objc_opt_self(HKUnit);
  v45 = v43;
  v46 = objc_msgSend(v44, "meterUnit");
  objc_msgSend(v42, "doubleValueForUnit:", v46);
  v48 = v47;

  v49 = objc_msgSend((id)objc_opt_self(FIUIWorkoutActivityType), "activityTypeWithWorkout:", a4);
  v50 = FIUIDistanceTypeForActivityType();

  result = objc_msgSend(a6, "localizedStringWithDistanceInMeters:distanceType:unitStyle:", v50, 1, v48);
  if (result)
  {
    v52 = result;
    static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v54 = v53;

    v55 = String.uppercased()();
    swift_bridgeObjectRelease(v54);
    v62 = &type metadata for String;
    v61 = v55;
    swift_beginAccess(v37, &v59, 33, 0);
    specialized Dictionary.subscript.setter((uint64_t)&v61, v45);
    swift_endAccess(&v59);

    return (id)a7(v25);
  }
  __break(1u);
  return result;
}

Swift::String __swiftcall String.trimmed()()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  void *v4;
  Swift::String result;
  _QWORD v6[2];
  _QWORD v7[2];
  uint64_t v8;
  uint64_t v9;

  v8 = v0;
  v9 = v1;
  v7[0] = 32;
  v7[1] = 0xE100000000000000;
  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  v2 = lazy protocol witness table accessor for type String and conformance String();
  v3 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(v7, v6, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v2, v2, v2);
  result._object = v4;
  result._countAndFlagsBits = v3;
  return result;
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_17(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000A7D60()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void partial apply for closure #1 in HKWorkout.packedSuggestionAssetMetadata(completion:)()
{
  uint64_t v0;

  HKWorkout._packedSuggestionAssetMetadata(completion:)(*(void (**)(__n128))(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t type metadata accessor for MOSuggestionAssetWorkoutProvider()
{
  return objc_opt_self(_TtC16MomentsUIService32MOSuggestionAssetWorkoutProvider);
}

uint64_t sub_1000A7DD4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

id _HKWorkoutIsIndoor(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "metadata"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", HKMetadataKeyIndoorWorkout));
  v4 = objc_msgSend(v3, "BOOLValue");

  return v4;
}

uint64_t sub_1000A7E5C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000A7E6C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t partial apply for closure #1 in HKWorkout._packedSuggestionAssetMetadata(completion:)()
{
  uint64_t v0;

  return closure #1 in HKWorkout._packedSuggestionAssetMetadata(completion:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

unint64_t lazy protocol witness table accessor for type HKQuantityType and conformance NSObject()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type HKQuantityType and conformance NSObject;
  if (!lazy protocol witness table cache variable for type HKQuantityType and conformance NSObject)
  {
    v1 = type metadata accessor for UIApplication(255, (unint64_t *)&lazy cache variable for type metadata for HKQuantityType, HKQuantityType_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type HKQuantityType and conformance NSObject);
  }
  return result;
}

uint64_t sub_1000A7F08()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

double partial apply for closure #3 in HKWorkout._packedSuggestionAssetMetadata(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return closure #3 in HKWorkout._packedSuggestionAssetMetadata(completion:)(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(v2 + 32), *(void **)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_1000A7F5C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 72));
  return swift_deallocObject(v0, 80, 7);
}

double partial apply for closure #2 in HKWorkout._packedSuggestionAssetMetadata(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return closure #2 in HKWorkout._packedSuggestionAssetMetadata(completion:)(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), *(_QWORD *)(v2 + 40), *(void **)(v2 + 48), *(void **)(v2 + 56), *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72));
}

uint64_t sub_1000A7FE0()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 56));

  swift_release(*(_QWORD *)(v0 + 88));
  return swift_deallocObject(v0, 96, 7);
}

id partial apply for closure #1 in closure #2 in HKWorkout._packedSuggestionAssetMetadata(completion:)()
{
  uint64_t v0;

  return closure #1 in closure #2 in HKWorkout._packedSuggestionAssetMetadata(completion:)(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48), *(_QWORD *)(v0 + 56), *(void **)(v0 + 64), *(void **)(v0 + 72), *(uint64_t (**)(void))(v0 + 80));
}

uint64_t sub_1000A8078()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 48));

  swift_release(*(_QWORD *)(v0 + 72));
  return swift_deallocObject(v0, 80, 7);
}

id partial apply for closure #1 in closure #3 in HKWorkout._packedSuggestionAssetMetadata(completion:)()
{
  uint64_t v0;

  return closure #1 in closure #3 in HKWorkout._packedSuggestionAssetMetadata(completion:)(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40), *(_QWORD *)(v0 + 48), *(void **)(v0 + 56), *(uint64_t (**)(_QWORD))(v0 + 64));
}

_QWORD *MOSuggestionInterstitialListAssetViewModel.__allocating_init(workoutAsset:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char v25;
  uint64_t ObjCClassMetadata;
  id v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  _QWORD *result;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  id v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  int v68;
  char *v69;
  void *v70;
  unsigned int (*v71)(char *, uint64_t, uint64_t);
  id v72;
  uint64_t v73;
  void (*v74)(char *, char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, char *, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(id, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, __n128, int);
  __n128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unsigned int (*v101)(char *, uint64_t, uint64_t);
  uint64_t v102;
  void (*v103)(char *, uint64_t);
  uint64_t v104;
  int v105;
  __int128 v106;
  void (*v107)(char *, char *, uint64_t);
  unsigned int (*v108)(char *, uint64_t, uint64_t);
  uint64_t v109;
  id v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD v120[2];
  __int128 v121;
  __int128 v122;
  char v123;

  v2 = type metadata accessor for MOSuggestionSheetAssetDateRange(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v114 = (char *)&v106 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v106 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v106 - v9;
  v11 = type metadata accessor for Date(0);
  v116 = *(_QWORD *)(v11 - 8);
  v117 = v11;
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v115 = (char *)&v106 - v15;
  v16 = objc_msgSend(a1, "assetType");
  v17 = MOSuggestionAssetsTypeWorkout;
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v20 = v19;
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  if (v18 == v21 && v20 == v22)
  {

    swift_bridgeObjectRelease_n(v20, 2);
  }
  else
  {
    v24 = v22;
    v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, v21, v22, 0);

    swift_bridgeObjectRelease(v20);
    swift_bridgeObjectRelease(v24);
    if ((v25 & 1) == 0)
      goto LABEL_12;
  }
  ObjCClassMetadata = swift_getObjCClassMetadata(objc_msgSend(a1, "contentClassType"));
  if (ObjCClassMetadata == type metadata accessor for MOSuggestionGenericFallBackInfo())
  {
LABEL_12:
    if (serverManager._clientConnections != (NSMutableDictionary *)-1)
      swift_once(&serverManager._clientConnections, one-time initialization function for shared);
    v33 = type metadata accessor for Logger(0);
    v34 = __swift_project_value_buffer(v33, (uint64_t)static MOAngelLogger.shared);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v37 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "[MOSuggestionInterstitialListAssetViewModel.workoutAsset] Mismatched init for asset type", v37, 2u);
      swift_slowDealloc(v37, -1, -1);
    }
    goto LABEL_38;
  }
  v27 = objc_msgSend(a1, "content");
  v28 = objc_opt_self(MOSuggestionAssetWorkout);
  v29 = (void *)swift_dynamicCastObjCClass(v27, v28);
  if (!v29)
  {
    swift_unknownObjectRelease(v27);
    v38 = 0;
LABEL_34:
    if (serverManager._clientConnections != (NSMutableDictionary *)-1)
      swift_once(&serverManager._clientConnections, one-time initialization function for shared);
    v53 = type metadata accessor for Logger(0);
    v54 = __swift_project_value_buffer(v53, (uint64_t)static MOAngelLogger.shared);
    v35 = Logger.logObject.getter(v54);
    v55 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v35, v55))
    {

      return 0;
    }
    v56 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v56 = 0;
    _os_log_impl((void *)&_mh_execute_header, v35, v55, "[MOSuggestionInterstitialListAssetViewModel.workoutAsset] Invalid workout object", v56, 2u);
    swift_slowDealloc(v56, -1, -1);

LABEL_38:
    return 0;
  }
  v30 = v29;
  v31 = objc_msgSend(v29, "icon");
  if (v31)
  {
    swift_unknownObjectRelease(v27);
    v112 = 7;
    v32 = v31;
  }
  else
  {
    v39 = objc_msgSend(v30, "renderedRouteMap");
    swift_unknownObjectRelease(v27);
    if (!v39)
    {
      v38 = 0;
      goto LABEL_34;
    }
    v32 = v39;
    v112 = 9;
  }
  v40 = v31;
  v41 = objc_msgSend(a1, "metadata");
  v42 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v41, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  specialized _dictionaryDownCastConditional<A, B, C, D>(_:)(v42);
  v44 = v43;
  swift_bridgeObjectRelease(v42);
  if (!v44)
  {
    v38 = v32;

    goto LABEL_34;
  }
  if (!*(_QWORD *)(v44 + 16))
  {
    v121 = 0u;
    v122 = 0u;
    goto LABEL_30;
  }
  v45 = MOSuggestionAssetMetadataKeyWorkoutType;
  v46 = specialized __RawDictionaryStorage.find<A>(_:)(v45);
  if ((v47 & 1) == 0)
  {
    v121 = 0u;
    v122 = 0u;

    goto LABEL_30;
  }
  outlined init with copy of Any(*(_QWORD *)(v44 + 56) + 32 * v46, (uint64_t)&v121);

  if (!*((_QWORD *)&v122 + 1))
  {
LABEL_30:
    v38 = v32;

    swift_bridgeObjectRelease(v44);
    v51 = &demangling cache variable for type metadata for Any?;
    v52 = (char *)&v121;
LABEL_31:
    outlined destroy of Any?((uint64_t)v52, v51);
    goto LABEL_34;
  }
  if ((swift_dynamicCast(&v118, &v121, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {
    v38 = v32;

    swift_bridgeObjectRelease(v44);
    goto LABEL_34;
  }
  v48 = *(_QWORD *)(v44 + 16);
  v111 = v119;
  if (!v48)
  {
    v121 = 0u;
    v122 = 0u;
    v59 = v117;
LABEL_49:
    outlined destroy of Any?((uint64_t)&v121, &demangling cache variable for type metadata for Any?);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v116 + 56))(v10, 1, 1, v59);
    goto LABEL_50;
  }
  v109 = v118;
  v110 = MOSuggestionAssetMetadataKeyWorkoutWorkoutStartTime;
  v49 = specialized __RawDictionaryStorage.find<A>(_:)(v110);
  if ((v50 & 1) != 0)
  {
    outlined init with copy of Any(*(_QWORD *)(v44 + 56) + 32 * v49, (uint64_t)&v121);
  }
  else
  {
    v121 = 0u;
    v122 = 0u;
  }

  v59 = v117;
  if (!*((_QWORD *)&v122 + 1))
    goto LABEL_49;
  v60 = swift_dynamicCast(v10, &v121, (char *)&type metadata for Any + 8, v117, 6);
  v61 = v59;
  v62 = v116;
  v110 = *(id *)(v116 + 56);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v110)(v10, v60 ^ 1u, 1, v61);
  v108 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48);
  if (v108(v10, 1, v117) == 1)
  {
LABEL_50:
    v38 = v32;

    swift_bridgeObjectRelease(v111);
    swift_bridgeObjectRelease(v44);
    v51 = (uint64_t *)&demangling cache variable for type metadata for Date?;
    v52 = v10;
    goto LABEL_31;
  }
  v63 = v115;
  v107 = *(void (**)(char *, char *, uint64_t))(v116 + 32);
  v107(v115, v10, v117);
  if (*(_QWORD *)(v44 + 16))
  {
    v64 = MOSuggestionAssetMetadataKeyWorkoutWorkoutEndTime;
    v65 = specialized __RawDictionaryStorage.find<A>(_:)(v64);
    if ((v66 & 1) != 0)
    {
      outlined init with copy of Any(*(_QWORD *)(v44 + 56) + 32 * v65, (uint64_t)&v121);
    }
    else
    {
      v121 = 0u;
      v122 = 0u;
    }

    v63 = v115;
  }
  else
  {
    v121 = 0u;
    v122 = 0u;
  }
  swift_bridgeObjectRelease(v44);
  if (!*((_QWORD *)&v122 + 1))
  {
    outlined destroy of Any?((uint64_t)&v121, &demangling cache variable for type metadata for Any?);
    v67 = v117;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v110)(v8, 1, 1, v117);
    goto LABEL_59;
  }
  v67 = v117;
  v68 = swift_dynamicCast(v8, &v121, (char *)&type metadata for Any + 8, v117, 6);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v110)(v8, v68 ^ 1u, 1, v67);
  if (v108(v8, 1, v67) == 1)
  {
LABEL_59:
    v38 = v32;

    swift_bridgeObjectRelease(v111);
    (*(void (**)(char *, uint64_t))(v116 + 8))(v63, v67);
    v51 = (uint64_t *)&demangling cache variable for type metadata for Date?;
    v52 = v8;
    goto LABEL_31;
  }
  v107(v14, v8, v67);
  v69 = v63;
  v70 = (void *)objc_opt_self(UIColor);
  v71 = (unsigned int (*)(char *, uint64_t, uint64_t))v32;
  v72 = objc_msgSend(v70, "blackColor");
  v121 = 0u;
  v122 = 0u;
  v123 = 1;
  v73 = type metadata accessor for MOSuggestionSheetImage();
  swift_allocObject(v73, 105, 7);
  v108 = v71;
  v107 = (void (*)(char *, char *, uint64_t))MOSuggestionSheetImage.init(image:associatedTintColor:associatedBackgroundColor:tileBackgroundColor:shouldBeRounded:squareCrop:extraMargin:)((uint64_t)v71, 0, 0, v72, v31 != 0, (uint64_t)&v121, 0, 1);
  v74 = *(void (**)(char *, char *, uint64_t))(v116 + 16);
  v75 = (uint64_t)v114;
  v74(v114, v69, v67);
  v76 = v75 + *(int *)(v2 + 20);
  v74((char *)v76, v14, v67);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v110)(v76, 0, 1, v67);
  v77 = objc_msgSend(a1, "identifier");
  v78 = static String._unconditionallyBridgeFromObjectiveC(_:)(v77);
  v80 = v79;

  v118 = v78;
  v119 = v80;
  v120[0] = 35;
  v120[1] = 0xE100000000000000;
  v81 = lazy protocol witness table accessor for type String and conformance String();
  result = (_QWORD *)StringProtocol.components<A>(separatedBy:)(v120, &type metadata for String, &type metadata for String, v81, v81);
  if (result[2])
  {
    v82 = result;
    v83 = result[5];
    v110 = (id)result[4];
    swift_bridgeObjectRetain(v83);
    swift_bridgeObjectRelease(v80);
    swift_bridgeObjectRelease(v82);
    v84 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MOSuggestionSheetAssetDateRange>);
    v85 = *(unsigned __int8 *)(v3 + 80);
    v86 = (v85 + 32) & ~v85;
    v87 = swift_allocObject(v84, v86 + *(_QWORD *)(v3 + 72), v85 | 7);
    v106 = xmmword_10019ED20;
    *(_OWORD *)(v87 + 16) = xmmword_10019ED20;
    outlined init with copy of MOSuggestionSheetAssetDateRange(v75, v87 + v86);
    v88 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    v89 = swift_allocObject(v88, 48, 7);
    *(_OWORD *)(v89 + 16) = v106;
    v90 = v111;
    *(_QWORD *)(v89 + 32) = v109;
    *(_QWORD *)(v89 + 40) = v90;
    v91 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v92 = swift_allocObject(v91, 40, 7);
    *(_OWORD *)(v92 + 16) = xmmword_10019EDA0;
    v93 = v107;
    *(_QWORD *)(v92 + 32) = v107;
    v118 = v92;
    specialized Array._endMutation()(v92);
    v94 = v118;
    v95 = v75;
    v96 = *(uint64_t (**)(id, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, __n128, int))(v113 + 344);
    v97 = swift_retain(v93);
    HIBYTE(v105) = 0;
    *(_WORD *)((char *)&v105 + 1) = 1;
    LOBYTE(v105) = v112;
    v57 = v96(v110, v83, 0, 0, 0, v87, v89, v94, v97, v105);
    swift_retain(v57);
    v98 = MOSuggestionInterstitialListAssetViewModel._groupAssetTypeAndCountDescription(with:)(0);
    v100 = v99;
    v101 = v108;

    swift_release(v93);
    outlined destroy of MOSuggestionSheetAssetDateRange(v95);
    v102 = v117;
    v103 = *(void (**)(char *, uint64_t))(v116 + 8);
    v103(v14, v117);
    v103(v115, v102);
    swift_beginAccess(v57 + 24, &v118, 1, 0);
    v104 = *(_QWORD *)(v57 + 32);
    *(_QWORD *)(v57 + 24) = v98;
    *(_QWORD *)(v57 + 32) = v100;
    swift_release(v57);
    swift_bridgeObjectRelease(v104);
    return (_QWORD *)v57;
  }
  __break(1u);
  return result;
}

uint64_t Array<A>.sortedByAscendingTime.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  if (a1 < 0 || (a1 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain(a1);
    v2 = (uint64_t)specialized _copyCollectionToContiguousArray<A>(_:)(v4);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
  v5 = v2;
  specialized MutableCollection<>.sort(by:)(&v5);
  return v5;
}

uint64_t closure #1 in Array<A>.sortedByAscendingTime.getter(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  char *v39;
  uint64_t v40;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionSheetAssetDateRange?);
  v6 = __chkstk_darwin(v5);
  v39 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v9 = (char *)&v38 - v8;
  v10 = type metadata accessor for MOSuggestionSheetAssetDateRange(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v38 = (uint64_t)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v38 - v15;
  v17 = *a1;
  v18 = *a2;
  v19 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v17 + 224);
  v20 = v19(v14);
  v21 = swift_bridgeObjectRelease(v20);
  if (v20)
  {
    v40 = v2;
    v22 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v18 + 224);
    v23 = v22(v21);
    v24 = swift_bridgeObjectRelease(v23);
    if (v23)
    {
      v25 = v19(v24);
      if (!v25)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
LABEL_10:
        outlined destroy of MOSuggestionSheetAssetDateRange?((uint64_t)v9);
        LOBYTE(v20) = 0;
        return v20 & 1;
      }
      v26 = v25;
      if (*(_QWORD *)(v25 + 16))
      {
        outlined init with copy of MOSuggestionSheetAssetDateRange(v25 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), (uint64_t)v9);
        v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
        v27(v9, 0, 1, v10);
      }
      else
      {
        v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
        v27(v9, 1, 1, v10);
      }
      swift_bridgeObjectRelease(v26);
      v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
      if (v28(v9, 1, v10) == 1)
        goto LABEL_10;
      v29 = outlined init with take of MOSuggestionSheetAssetDateRange((uint64_t)v9, (uint64_t)v16);
      v30 = v22(v29);
      if (v30)
      {
        v31 = v30;
        if (*(_QWORD *)(v30 + 16))
        {
          v32 = v30 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
          v33 = (uint64_t)v39;
          outlined init with copy of MOSuggestionSheetAssetDateRange(v32, (uint64_t)v39);
          v34 = 0;
        }
        else
        {
          v34 = 1;
          v33 = (uint64_t)v39;
        }
        v27((char *)v33, v34, 1, v10);
        swift_bridgeObjectRelease(v31);
        if (v28((char *)v33, 1, v10) != 1)
        {
          v35 = v33;
          v36 = v38;
          outlined init with take of MOSuggestionSheetAssetDateRange(v35, v38);
          LOBYTE(v20) = static Date.< infix(_:_:)(v16, v36);
          outlined destroy of MOSuggestionSheetAssetDateRange(v36);
          outlined destroy of MOSuggestionSheetAssetDateRange((uint64_t)v16);
          return v20 & 1;
        }
      }
      else
      {
        v33 = (uint64_t)v39;
        v27(v39, 1, 1, v10);
      }
      outlined destroy of MOSuggestionSheetAssetDateRange((uint64_t)v16);
      outlined destroy of MOSuggestionSheetAssetDateRange?(v33);
      LOBYTE(v20) = 0;
    }
    else
    {
      LOBYTE(v20) = 1;
    }
  }
  return v20 & 1;
}

uint64_t outlined destroy of MOSuggestionSheetAssetDateRange?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionSheetAssetDateRange?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t UIImage.temporaryCacheURL(assetIdentifier:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  NSString *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  __n128 v35;
  void (*v36)(char *, uint64_t, __n128);
  uint64_t v37;
  NSData *v38;
  char *v39;
  NSData *v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  UIImage *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v53 = a2;
  v51 = a3;
  v52 = a1;
  v3 = type metadata accessor for UTType(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v56 - 8);
  v8 = __chkstk_darwin(v56);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v50 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v50 - v14;
  v16 = NSTemporaryDirectory();
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  URL.init(fileURLWithPath:)(v17, v19);
  v20 = swift_bridgeObjectRelease(v19);
  static UTType.png.getter(v20);
  v21 = v53;
  v53 = v15;
  URL.appendingPathComponent(_:conformingTo:)(v52, v21, v6);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v22 = type metadata accessor for Logger(0);
  v23 = __swift_project_value_buffer(v22, (uint64_t)static MOAngelLogger.assets);
  v24 = *(uint64_t (**)(char *, char *, uint64_t))(v7 + 16);
  v55 = v13;
  v25 = v56;
  v26 = v24(v10, v13, v56);
  v52 = v23;
  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.info.getter();
  v29 = v7;
  if (os_log_type_enabled(v27, v28))
  {
    v30 = (uint8_t *)swift_slowAlloc(12, -1);
    v31 = swift_slowAlloc(32, -1);
    v59 = v31;
    *(_DWORD *)v30 = 136315138;
    v32 = URL.debugDescription.getter();
    v34 = v33;
    v57 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v32, v33, &v59);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v30 + 4);
    v35 = swift_bridgeObjectRelease(v34);
    v36 = *(void (**)(char *, uint64_t, __n128))(v7 + 8);
    v36(v10, v25, v35);
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "[MOSuggestionAssetCacheManager.wrapImageAssetInURL] path=%s", v30, 0xCu);
    swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v31, -1, -1);
    swift_slowDealloc(v30, -1, -1);
  }
  else
  {
    v36 = *(void (**)(char *, uint64_t, __n128))(v7 + 8);
    ((void (*)(char *, uint64_t))v36)(v10, v25);
  }

  v37 = v25;
  v38 = UIImagePNGRepresentation(v54);
  v39 = v55;
  if (v38)
  {
    v40 = v38;
    v41 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v38);
    v43 = v42;

    Data.write(to:options:)(v39, 0, v41, v43);
    ((void (*)(char *, uint64_t))v36)(v53, v37);
    outlined consume of Data._Representation(v41, v43);
    v47 = v51;
    (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v51, v39, v37);
    v48 = 0;
  }
  else
  {
    v44 = Logger.logObject.getter(0);
    v45 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v46 = 0;
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "[UIImage.temporaryCacheURL] Failed to generate png data", v46, 2u);
      swift_slowDealloc(v46, -1, -1);
    }

    ((void (*)(char *, uint64_t))v36)(v39, v25);
    ((void (*)(char *, uint64_t))v36)(v53, v25);
    v48 = 1;
    v47 = v51;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56))(v47, v48, 1, v37);
}

void specialized static MOSuggestionAssetCacheManager.wrapWorkoutAssetInURLIfNecessary(asset:cacheType:completion:)(void *a1, unsigned __int8 a2, void (*a3)(_QWORD), uint8_t *a4)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  id v30;
  __n128 v31;
  unsigned int (*v32)(_QWORD, _QWORD, _QWORD);
  uint64_t v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  void (*v43)(_QWORD);
  uint64_t v44;
  id v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  void (*v54)(id);
  char *v55;
  uint64_t v56;
  id v57;
  NSObject *v58;
  os_log_type_t v59;
  BOOL v60;
  uint8_t *v61;
  id v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint8_t *v66;
  uint64_t v67;
  id v68;
  NSURL *v69;
  void *v70;
  void *v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  uint64_t v78;
  Class isa;
  id v80;
  uint64_t v81;
  uint8_t *v82;
  uint8_t *v83;
  uint64_t v84;
  unsigned int (*v85)(_QWORD, _QWORD, _QWORD);
  int v86;
  id v87;
  id v88;
  char *v89;
  id v90;
  uint8_t *v91;
  void (*v92)(_QWORD);
  uint64_t v93;
  uint64_t v94;

  v7 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v81 - v12;
  v14 = type metadata accessor for URL(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = a3;
  if ((v7 - 2) >= 9)
  {
    v91 = a4;
    v18 = objc_msgSend(a1, "content");
    v19 = objc_opt_self(MOSuggestionAssetWorkout);
    v20 = (void *)swift_dynamicCastObjCClass(v18, v19);
    if (v20)
    {
      v21 = v20;
      v22 = objc_msgSend(v20, "icon");
      if (v22)
      {
        v23 = v22;
        v89 = v17;
        v24 = objc_msgSend(a1, "identifier");
        v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
        v90 = v23;
        v26 = v25;
        v28 = v27;

        v29 = v26;
        v30 = v90;
        UIImage.temporaryCacheURL(assetIdentifier:)(v29, v28, (uint64_t)v13);
        v31 = swift_bridgeObjectRelease(v28);
        v32 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v15 + 48);
        if (((unsigned int (*)(char *, uint64_t, uint64_t, __n128))v32)(v13, 1, v14, v31) == 1)
        {
          outlined destroy of URL?((uint64_t)v13);
          if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
            swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
          v33 = type metadata accessor for Logger(0);
          __swift_project_value_buffer(v33, (uint64_t)static MOAngelLogger.assets);
          v34 = a1;
          v35 = Logger.logObject.getter(v34);
          v36 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v35, v36))
          {
            v88 = v18;
            v37 = (uint8_t *)swift_slowAlloc(12, -1);
            v38 = swift_slowAlloc(32, -1);
            v94 = v38;
            *(_DWORD *)v37 = 136315138;
            v39 = objc_msgSend(v34, "identifier");
            v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
            v42 = v41;

            v30 = v90;
            v93 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v40, v42, &v94);
            v18 = v88;
            v43 = v92;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v37 + 4);

            swift_bridgeObjectRelease(v42);
            _os_log_impl((void *)&_mh_execute_header, v35, v36, "[MOSuggestionAssetCacheManager.wrapWorkoutAssetssetInURLIfNecessary] Failed to wrap image identifier=%s", v37, 0xCu);
            swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v38, -1, -1);
            swift_slowDealloc(v37, -1, -1);

          }
          else
          {

            v43 = v92;
          }
          v43(0);
          swift_unknownObjectRelease(v18);

        }
        else
        {
          v55 = v89;
          (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v89, v13, v14);
          if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
            swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
          v56 = type metadata accessor for Logger(0);
          __swift_project_value_buffer(v56, (uint64_t)static MOAngelLogger.assets);
          v57 = a1;
          v58 = Logger.logObject.getter(v57);
          v59 = static os_log_type_t.default.getter();
          v86 = v59;
          v60 = os_log_type_enabled(v58, v59);
          v87 = v57;
          v88 = v18;
          if (v60)
          {
            v61 = (uint8_t *)swift_slowAlloc(12, -1);
            v84 = swift_slowAlloc(32, -1);
            v94 = v84;
            v85 = v32;
            *(_DWORD *)v61 = 136315138;
            v82 = v61 + 4;
            v83 = v61;
            v62 = objc_msgSend(v57, "identifier");
            v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(v62);
            v65 = v64;

            v55 = v89;
            v93 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v63, v65, &v94);
            v32 = v85;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v82);

            swift_bridgeObjectRelease(v65);
            v66 = v83;
            _os_log_impl((void *)&_mh_execute_header, v58, (os_log_type_t)v86, "[MOSuggestionAssetCacheManager.wrapWorkoutAssetssetInURLIfNecessary] Wrapping image identifier=%s", v83, 0xCu);
            v67 = v84;
            swift_arrayDestroy(v84, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v67, -1, -1);
            swift_slowDealloc(v66, -1, -1);

          }
          else
          {

          }
          v68 = objc_msgSend(v21, "route");
          (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v11, v55, v14);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
          if (v32(v11, 1, v14) == 1)
          {
            v70 = 0;
          }
          else
          {
            URL._bridgeToObjectiveC()(v69);
            v70 = v71;
            (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v14);
          }
          v72 = objc_msgSend(objc_allocWithZone((Class)MOSuggestionAssetWorkout), "init:route:iconURL:", 0, v68, v70);

          v73 = v72;
          v74 = v87;
          v75 = objc_msgSend(v87, "assetType");
          type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetWorkout, MOSuggestionAssetWorkout_ptr);
          v76 = objc_msgSend(objc_allocWithZone((Class)MOSuggestionAsset), "init:type:contentClassType:", v73, v75, swift_getObjCClassFromMetadata());

          v77 = objc_msgSend(v74, "metadata");
          v78 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v77, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

          isa = Dictionary._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v76, "addMetadata:", isa, swift_bridgeObjectRelease(v78).n128_f64[0]);

          v80 = v76;
          v92(v76);

          swift_unknownObjectRelease(v88);
          (*(void (**)(char *, uint64_t))(v15 + 8))(v89, v14);
        }
        return;
      }
    }
    swift_unknownObjectRelease(v18);
    a3 = v92;
  }
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v44 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v44, (uint64_t)static MOAngelLogger.assets);
  v45 = a1;
  v46 = Logger.logObject.getter(v45);
  v47 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v46, v47))
  {
    v48 = (uint8_t *)swift_slowAlloc(12, -1);
    v49 = swift_slowAlloc(32, -1);
    v94 = v49;
    *(_DWORD *)v48 = 136315138;
    v91 = v48 + 4;
    v50 = objc_msgSend(v45, "identifier");
    v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
    v53 = v52;

    v93 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v51, v53, &v94);
    v54 = (void (*)(id))v92;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v91);

    swift_bridgeObjectRelease(v53);
    _os_log_impl((void *)&_mh_execute_header, v46, v47, "[MOSuggestionAssetCacheManager.wrapWorkoutAssetssetInURLIfNecessary] Pass through without wrapping identifier=%s", v48, 0xCu);
    swift_arrayDestroy(v49, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v49, -1, -1);
    swift_slowDealloc(v48, -1, -1);

    v54(v45);
  }
  else
  {

    a3(v45);
  }
}

{
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  id v30;
  __n128 v31;
  unsigned int (*v32)(_QWORD, _QWORD, _QWORD);
  uint64_t v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  void (*v43)(_QWORD);
  uint64_t v44;
  id v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  void (*v54)(id);
  char *v55;
  uint64_t v56;
  id v57;
  NSObject *v58;
  os_log_type_t v59;
  _BOOL4 v60;
  uint8_t *v61;
  id v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint8_t *v66;
  uint64_t v67;
  id v68;
  NSURL *v69;
  void *v70;
  void *v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  uint64_t v78;
  Class isa;
  id v80;
  uint64_t v81;
  uint8_t *v82;
  uint8_t *v83;
  uint64_t v84;
  unsigned int (*v85)(_QWORD, _QWORD, _QWORD);
  int v86;
  id v87;
  id v88;
  char *v89;
  id v90;
  uint8_t *v91;
  void (*v92)(_QWORD);
  uint64_t v93;
  uint64_t v94;

  v7 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v81 - v12;
  v14 = type metadata accessor for URL(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = a3;
  if ((v7 - 2) >= 9)
  {
    v91 = a4;
    v18 = objc_msgSend(a1, "content");
    v19 = objc_opt_self(MOSuggestionAssetWorkout);
    v20 = (void *)swift_dynamicCastObjCClass(v18, v19);
    if (v20)
    {
      v21 = v20;
      v22 = objc_msgSend(v20, "icon");
      if (v22)
      {
        v23 = v22;
        v89 = v17;
        v24 = objc_msgSend(a1, "identifier");
        v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
        v90 = v23;
        v26 = v25;
        v28 = v27;

        v29 = v26;
        v30 = v90;
        UIImage.temporaryCacheURL(assetIdentifier:)(v29, v28, (uint64_t)v13);
        v31 = swift_bridgeObjectRelease(v28);
        v32 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v15 + 48);
        if (((unsigned int (*)(char *, uint64_t, uint64_t, __n128))v32)(v13, 1, v14, v31) == 1)
        {
          outlined destroy of URL?((uint64_t)v13);
          if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
            swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
          v33 = type metadata accessor for Logger(0);
          __swift_project_value_buffer(v33, (uint64_t)static MOAngelLogger.assets);
          v34 = a1;
          v35 = Logger.logObject.getter(v34);
          v36 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v35, v36))
          {
            v88 = v18;
            v37 = (uint8_t *)swift_slowAlloc(12, -1);
            v38 = swift_slowAlloc(32, -1);
            v94 = v38;
            *(_DWORD *)v37 = 136315138;
            v39 = objc_msgSend(v34, "identifier");
            v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
            v42 = v41;

            v30 = v90;
            v93 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v40, v42, &v94);
            v18 = v88;
            v43 = v92;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v37 + 4);

            swift_bridgeObjectRelease(v42);
            _os_log_impl((void *)&_mh_execute_header, v35, v36, "[MOSuggestionAssetCacheManager.wrapWorkoutAssetssetInURLIfNecessary] Failed to wrap image identifier=%s", v37, 0xCu);
            swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v38, -1, -1);
            swift_slowDealloc(v37, -1, -1);

          }
          else
          {

            v43 = v92;
          }
          v43(0);
          swift_unknownObjectRelease(v18);

        }
        else
        {
          v55 = v89;
          (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v89, v13, v14);
          if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
            swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
          v56 = type metadata accessor for Logger(0);
          __swift_project_value_buffer(v56, (uint64_t)static MOAngelLogger.assets);
          v57 = a1;
          v58 = Logger.logObject.getter(v57);
          v59 = static os_log_type_t.default.getter();
          v86 = v59;
          v60 = os_log_type_enabled(v58, v59);
          v87 = v57;
          v88 = v18;
          if (v60)
          {
            v61 = (uint8_t *)swift_slowAlloc(12, -1);
            v84 = swift_slowAlloc(32, -1);
            v94 = v84;
            v85 = v32;
            *(_DWORD *)v61 = 136315138;
            v82 = v61 + 4;
            v83 = v61;
            v62 = objc_msgSend(v57, "identifier");
            v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(v62);
            v65 = v64;

            v55 = v89;
            v93 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v63, v65, &v94);
            v32 = v85;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v82);

            swift_bridgeObjectRelease(v65);
            v66 = v83;
            _os_log_impl((void *)&_mh_execute_header, v58, (os_log_type_t)v86, "[MOSuggestionAssetCacheManager.wrapWorkoutAssetssetInURLIfNecessary] Wrapping image identifier=%s", v83, 0xCu);
            v67 = v84;
            swift_arrayDestroy(v84, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v67, -1, -1);
            swift_slowDealloc(v66, -1, -1);

          }
          else
          {

          }
          v68 = objc_msgSend(v21, "route");
          (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v11, v55, v14);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
          if (v32(v11, 1, v14) == 1)
          {
            v70 = 0;
          }
          else
          {
            URL._bridgeToObjectiveC()(v69);
            v70 = v71;
            (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v14);
          }
          v72 = objc_msgSend(objc_allocWithZone((Class)MOSuggestionAssetWorkout), "init:route:iconURL:", 0, v68, v70);

          v73 = v72;
          v74 = v87;
          v75 = objc_msgSend(v87, "assetType");
          type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetWorkout, MOSuggestionAssetWorkout_ptr);
          v76 = objc_msgSend(objc_allocWithZone((Class)MOSuggestionAsset), "init:type:contentClassType:", v73, v75, swift_getObjCClassFromMetadata());

          v77 = objc_msgSend(v74, "metadata");
          v78 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v77, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

          isa = Dictionary._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v76, "addMetadata:", isa, swift_bridgeObjectRelease(v78).n128_f64[0]);

          v80 = v76;
          v92(v76);

          swift_unknownObjectRelease(v88);
          (*(void (**)(char *, uint64_t))(v15 + 8))(v89, v14);
        }
        return;
      }
    }
    swift_unknownObjectRelease(v18);
    a3 = v92;
  }
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v44 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v44, (uint64_t)static MOAngelLogger.assets);
  v45 = a1;
  v46 = Logger.logObject.getter(v45);
  v47 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v46, v47))
  {
    v48 = (uint8_t *)swift_slowAlloc(12, -1);
    v49 = swift_slowAlloc(32, -1);
    v94 = v49;
    *(_DWORD *)v48 = 136315138;
    v91 = v48 + 4;
    v50 = objc_msgSend(v45, "identifier");
    v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
    v53 = v52;

    v93 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v51, v53, &v94);
    v54 = (void (*)(id))v92;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v91);

    swift_bridgeObjectRelease(v53);
    _os_log_impl((void *)&_mh_execute_header, v46, v47, "[MOSuggestionAssetCacheManager.wrapWorkoutAssetssetInURLIfNecessary] Pass through without wrapping identifier=%s", v48, 0xCu);
    swift_arrayDestroy(v49, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v49, -1, -1);
    swift_slowDealloc(v48, -1, -1);

    v54(v45);
  }
  else
  {

    a3(v45);
  }
}

uint64_t specialized static MOSuggestionAssetCacheManager.wrapImageAssetInURLIfNecessary(asset:cacheType:completion:)(void *a1, unsigned __int8 a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(double *, __n128), uint64_t a10)
{
  int v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  int v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  id v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint8_t *v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint8_t *v59;
  void (*v60)(double *, __n128);
  uint64_t v61;
  uint64_t v62;
  int v63;
  __n128 v64;
  __n128 v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  __n128 v69;
  __n128 v70;
  __n128 v71;
  __n128 v72;
  uint64_t v74;
  id v75;
  NSObject *v76;
  os_log_type_t v77;
  int v78;
  uint64_t v79;
  uint8_t *v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  NSURL *v86;
  void (*v87)(double *, __n128);
  uint64_t v88;
  int v89;
  void *v90;
  void *v91;
  id v92;
  id v93;
  id v94;
  uint64_t v95;
  Class isa;
  id v97;
  __n128 v98;
  uint8_t *v99;
  int v100;
  uint64_t v101;
  id v102;
  uint8_t *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  int v107;
  uint64_t v108;
  void (*v109)(double *, __n128);
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;

  v107 = a4;
  v108 = a6;
  v109 = a9;
  v15 = a2;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v16);
  v18 = (char *)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for URL(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v106 = (char *)&v99 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain_n(a3);
  swift_retain_n(a5);
  swift_retain_n(a7);
  swift_bridgeObjectRetain_n(a8, 3);
  v110 = a10;
  swift_retain_n(a10);
  if ((v15 - 2) < 9)
    goto LABEL_9;
  v22 = objc_msgSend(a1, "content");
  v23 = objc_opt_self(UIImage);
  if (!swift_dynamicCastObjCClass(v22, v23))
  {
    swift_unknownObjectRelease(v22);
LABEL_9:
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
      swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    v44 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v44, (uint64_t)static MOAngelLogger.assets);
    v45 = a1;
    v46 = Logger.logObject.getter(v45);
    v47 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = swift_slowAlloc(12, -1);
      v105 = a8;
      v49 = (uint8_t *)v48;
      v104 = swift_slowAlloc(32, -1);
      v112 = v104;
      *(_DWORD *)v49 = 136315138;
      v103 = v49 + 4;
      v50 = a7;
      v51 = objc_msgSend(v45, "identifier");
      v52 = a5;
      v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
      v106 = (char *)a3;
      v55 = v54;

      a7 = v50;
      v56 = v53;
      a5 = v52;
      v111 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v56, v55, &v112);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v111, &v112, v103);

      v57 = v55;
      a3 = (uint64_t)v106;
      swift_bridgeObjectRelease(v57);
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "[MOSuggestionAssetCacheManager.wrapImageAssetInURL] Pass through without wrapping identifier=%s", v49, 0xCu);
      v58 = v104;
      swift_arrayDestroy(v104, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v58, -1, -1);
      v59 = v49;
      a8 = v105;
      swift_slowDealloc(v59, -1, -1);

    }
    else
    {

    }
    v60 = v109;
    v61 = v110;
    v62 = v108;
    v63 = v107;
    swift_retain(a3);
    swift_retain(a5);
    swift_retain(a7);
    swift_bridgeObjectRetain(a8);
    swift_retain(v61);
    closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(v45, a3, v63, a5, v62, a7, a8, v60);
    goto LABEL_15;
  }
  v102 = v22;
  v103 = (uint8_t *)a7;
  v105 = a8;
  v24 = objc_msgSend(a1, "identifier");
  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v104 = v19;
  v26 = v25;
  v28 = v27;

  v29 = v26;
  v30 = v104;
  UIImage.temporaryCacheURL(assetIdentifier:)(v29, v28, (uint64_t)v18);
  v31 = swift_bridgeObjectRelease(v28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v20 + 48))(v18, 1, v30, v31) == 1)
  {
    outlined destroy of URL?((uint64_t)v18);
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
      swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    v32 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v32, (uint64_t)static MOAngelLogger.assets);
    v33 = a1;
    v34 = Logger.logObject.getter(v33);
    v35 = static os_log_type_t.error.getter();
    v36 = v35;
    if (os_log_type_enabled(v34, v35))
    {
      v37 = swift_slowAlloc(12, -1);
      LODWORD(v106) = v36;
      v38 = (uint8_t *)v37;
      v39 = swift_slowAlloc(32, -1);
      v112 = v39;
      *(_DWORD *)v38 = 136315138;
      v104 = (uint64_t)(v38 + 4);
      v40 = objc_msgSend(v33, "identifier");
      v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
      v43 = v42;

      v111 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v41, v43, &v112);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v111, &v112, v104);

      swift_bridgeObjectRelease(v43);
      _os_log_impl((void *)&_mh_execute_header, v34, (os_log_type_t)v106, "[MOSuggestionAssetCacheManager.wrapImageAssetInURL] Failed to wrap image identifier=%s", v38, 0xCu);
      swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v39, -1, -1);
      swift_slowDealloc(v38, -1, -1);

    }
    else
    {

    }
    a8 = v105;
    v87 = v109;
    v61 = v110;
    v88 = v108;
    v89 = v107;
    swift_retain(a3);
    swift_retain(a5);
    a7 = (uint64_t)v103;
    swift_retain(v103);
    swift_bridgeObjectRetain(a8);
    swift_retain(v61);
    closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, a3, v89, a5, v88, a7, a8, v87);
    swift_unknownObjectRelease(v102);
LABEL_15:
    swift_release_n(a3, v64);
    swift_release_n(a5, v65);
    swift_release_n(a7, v66);
    swift_bridgeObjectRelease_n(a8, 2);
    v67 = v61;
    v68 = v61;
    goto LABEL_16;
  }
  v101 = a5;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v106, v18, v30);
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v74 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v74, (uint64_t)static MOAngelLogger.assets);
  v75 = a1;
  v76 = Logger.logObject.getter(v75);
  v77 = static os_log_type_t.default.getter();
  v78 = v77;
  if (os_log_type_enabled(v76, v77))
  {
    v79 = swift_slowAlloc(12, -1);
    v100 = v78;
    v80 = (uint8_t *)v79;
    v81 = swift_slowAlloc(32, -1);
    v112 = v81;
    *(_DWORD *)v80 = 136315138;
    v99 = v80 + 4;
    v82 = objc_msgSend(v75, "identifier");
    v83 = static String._unconditionallyBridgeFromObjectiveC(_:)(v82);
    v85 = v84;

    v111 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v83, v85, &v112);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v111, &v112, v99);

    swift_bridgeObjectRelease(v85);
    _os_log_impl((void *)&_mh_execute_header, v76, (os_log_type_t)v100, "[MOSuggestionAssetCacheManager.wrapImageAssetInURL] Wrapping image identifier=%s", v80, 0xCu);
    swift_arrayDestroy(v81, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v81, -1, -1);
    swift_slowDealloc(v80, -1, -1);

  }
  else
  {

  }
  URL._bridgeToObjectiveC()(v86);
  v91 = v90;
  v92 = objc_msgSend(v75, "assetType");
  type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for NSURL, NSURL_ptr);
  v93 = objc_msgSend(objc_allocWithZone((Class)MOSuggestionAsset), "init:type:contentClassType:", v91, v92, swift_getObjCClassFromMetadata());

  v94 = objc_msgSend(v75, "metadata");
  v95 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v94, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v93, "addMetadata:", isa, swift_bridgeObjectRelease(v95).n128_f64[0]);

  swift_retain(a3);
  a5 = v101;
  swift_retain(v101);
  a7 = (uint64_t)v103;
  swift_retain(v103);
  a8 = v105;
  swift_bridgeObjectRetain(v105);
  v61 = v110;
  swift_retain(v110);
  v97 = v93;
  closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(v93, a3, v107, a5, v108, a7, a8, v109);
  swift_unknownObjectRelease(v102);

  swift_release(a3);
  swift_release(a5);
  swift_release(a7);
  swift_bridgeObjectRelease(a8);
  v98 = swift_release(v61);
  (*(void (**)(char *, uint64_t, __n128))(v20 + 8))(v106, v104, v98);
  swift_release(v61);
  swift_bridgeObjectRelease(a8);
  swift_release(a7);
  v67 = a5;
  v68 = a3;
LABEL_16:
  swift_release(v67);
  v69 = swift_release(v68);
  swift_release_n(v61, v69);
  swift_bridgeObjectRelease_n(a8, 2);
  swift_release_n(a7, v70);
  swift_release_n(a5, v71);
  return swift_release_n(a3, v72);
}

uint64_t specialized static MOSuggestionAssetCacheManager.wrapImageAssetInURLIfNecessary(asset:cacheType:completion:)(void *a1, unsigned __int8 a2, void (*a3)(_QWORD), uint8_t *a4)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __n128 v21;
  uint64_t v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char *v43;
  uint64_t v44;
  id v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  id v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  NSURL *v55;
  id v56;
  void *v57;
  void *v58;
  id v59;
  id v60;
  id v61;
  uint64_t v62;
  Class isa;
  id v64;
  uint8_t *v65;
  uint64_t v66;
  char *v67;
  id v68;
  uint8_t *v69;
  void (*v70)(_QWORD);
  uint64_t v71;
  uint64_t v72;

  v7 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v8);
  v10 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v7 - 2) >= 9)
  {
    v15 = objc_msgSend(a1, "content");
    v16 = objc_opt_self(UIImage);
    if (swift_dynamicCastObjCClass(v15, v16))
    {
      v67 = v14;
      v68 = v15;
      v69 = a4;
      v17 = objc_msgSend(a1, "identifier");
      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
      v20 = v19;

      UIImage.temporaryCacheURL(assetIdentifier:)(v18, v20, (uint64_t)v10);
      v21 = swift_bridgeObjectRelease(v20);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v12 + 48))(v10, 1, v11, v21) == 1)
      {
        outlined destroy of URL?((uint64_t)v10);
        if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
          swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
        v22 = type metadata accessor for Logger(0);
        __swift_project_value_buffer(v22, (uint64_t)static MOAngelLogger.assets);
        v23 = a1;
        v24 = Logger.logObject.getter(v23);
        v25 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v24, v25))
        {
          v70 = a3;
          v26 = (uint8_t *)swift_slowAlloc(12, -1);
          v27 = swift_slowAlloc(32, -1);
          v72 = v27;
          *(_DWORD *)v26 = 136315138;
          v28 = objc_msgSend(v23, "identifier");
          v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
          v31 = v30;

          v71 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v31, &v72);
          a3 = v70;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, &v72, v26 + 4);

          swift_bridgeObjectRelease(v31);
          _os_log_impl((void *)&_mh_execute_header, v24, v25, "[MOSuggestionAssetCacheManager.wrapImageAssetInURL] Failed to wrap image identifier=%s", v26, 0xCu);
          swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v27, -1, -1);
          swift_slowDealloc(v26, -1, -1);

        }
        else
        {

        }
        v56 = v68;
        a3(0);
        return swift_unknownObjectRelease(v56);
      }
      else
      {
        v43 = v67;
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v67, v10, v11);
        if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
          swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
        v70 = a3;
        v44 = type metadata accessor for Logger(0);
        __swift_project_value_buffer(v44, (uint64_t)static MOAngelLogger.assets);
        v45 = a1;
        v46 = Logger.logObject.getter(v45);
        v47 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v46, v47))
        {
          v48 = (uint8_t *)swift_slowAlloc(12, -1);
          v66 = swift_slowAlloc(32, -1);
          v72 = v66;
          *(_DWORD *)v48 = 136315138;
          v65 = v48 + 4;
          v49 = objc_msgSend(v45, "identifier");
          v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
          v52 = v51;

          v71 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v50, v52, &v72);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, &v72, v65);

          v53 = v52;
          v43 = v67;
          swift_bridgeObjectRelease(v53);
          _os_log_impl((void *)&_mh_execute_header, v46, v47, "[MOSuggestionAssetCacheManager.wrapImageAssetInURL] Wrapping image identifier=%s", v48, 0xCu);
          v54 = v66;
          swift_arrayDestroy(v66, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v54, -1, -1);
          swift_slowDealloc(v48, -1, -1);

        }
        else
        {

        }
        URL._bridgeToObjectiveC()(v55);
        v58 = v57;
        v59 = objc_msgSend(v45, "assetType");
        type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for NSURL, NSURL_ptr);
        v60 = objc_msgSend(objc_allocWithZone((Class)MOSuggestionAsset), "init:type:contentClassType:", v58, v59, swift_getObjCClassFromMetadata());

        v61 = objc_msgSend(v45, "metadata");
        v62 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v61, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

        isa = Dictionary._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v60, "addMetadata:", isa, swift_bridgeObjectRelease(v62).n128_f64[0]);

        v64 = v60;
        v70(v60);
        swift_unknownObjectRelease(v68);

        return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v43, v11);
      }
    }
    swift_unknownObjectRelease(v15);
  }
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v32 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v32, (uint64_t)static MOAngelLogger.assets);
  v33 = a1;
  v34 = Logger.logObject.getter(v33);
  v35 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v34, v35))
  {
    v70 = a3;
    v36 = (uint8_t *)swift_slowAlloc(12, -1);
    v37 = swift_slowAlloc(32, -1);
    v72 = v37;
    *(_DWORD *)v36 = 136315138;
    v69 = v36 + 4;
    v38 = objc_msgSend(v33, "identifier");
    v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
    v41 = v40;

    v71 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v39, v41, &v72);
    a3 = v70;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, &v72, v69);

    swift_bridgeObjectRelease(v41);
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "[MOSuggestionAssetCacheManager.wrapImageAssetInURL] Pass through without wrapping identifier=%s", v36, 0xCu);
    swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1, -1);
    swift_slowDealloc(v36, -1, -1);

  }
  else
  {

  }
  return ((uint64_t (*)(id))a3)(v33);
}

uint64_t specialized static MOSuggestionAssetCacheManager.wrapImageAssetInURLPairIfNecessary(asset:cacheType:completion:)(void *a1, unsigned __int8 a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(double *, __n128), uint64_t a10)
{
  uint64_t v13;
  uint64_t v15;
  unsigned int v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  NSString v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  Class isa;
  id v33;
  __n128 v34;
  uint64_t v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  __n128 v47;
  __n128 v48;
  __n128 v49;
  __n128 v50;
  __n128 v51;
  uint64_t v53;
  id v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  id v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  _DWORD *v62;
  uint8_t *v63;
  os_log_type_t type;
  uint8_t *buf;
  os_log_t log;
  NSObject *loga;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v74;
  void *v75;

  v13 = a3;
  v15 = a10;
  v16 = a2 - 2;
  swift_retain_n(a3);
  swift_retain_n(a5);
  swift_retain_n(a7);
  swift_bridgeObjectRetain_n(a8, 3);
  swift_retain_n(a10);
  if (v16 >= 9)
  {
    v17 = objc_msgSend(a1, "content");
    v18 = objc_opt_self(UIImage);
    v19 = swift_dynamicCastObjCClass(v17, v18);
    if (v19)
    {
      v20 = v19;
      v68 = a5;
      swift_unknownObjectRetain();
      v21 = objc_msgSend(a1, "identifier");
      static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      v23 = v22;

      v24 = objc_allocWithZone((Class)MOSuggestionAssetImageURLPair);
      v25 = String._bridgeToObjectiveC()();
      v26 = objc_msgSend(v24, "init:urlAppendix:", v20, v25, swift_bridgeObjectRelease(v23).n128_f64[0]);

      v70 = v17;
      swift_unknownObjectRelease(v17);
      if (v26)
      {
        v27 = v26;
        v28 = objc_msgSend(a1, "assetType");
        type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MOSuggestionAssetImageURLPair, MOSuggestionAssetImageURLPair_ptr);
        v29 = objc_msgSend(objc_allocWithZone((Class)MOSuggestionAsset), "init:type:contentClassType:", v27, v28, swift_getObjCClassFromMetadata());

        v30 = objc_msgSend(a1, "metadata");
        v31 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v30, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

        isa = Dictionary._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v29, "addMetadata:", isa, swift_bridgeObjectRelease(v31).n128_f64[0]);

        swift_retain(v13);
        a5 = v68;
        swift_retain(v68);
        swift_retain(a7);
        swift_bridgeObjectRetain(a8);
        swift_retain(a10);
        v33 = v29;
        closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(v29, v13, a4, v68, a6, a7, a8, a9);
        swift_unknownObjectRelease(v70);

      }
      else
      {
        if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
          swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
        v53 = type metadata accessor for Logger(0);
        __swift_project_value_buffer(v53, (uint64_t)static MOAngelLogger.assets);
        v54 = a1;
        v55 = Logger.logObject.getter(v54);
        v56 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v55, v56))
        {
          loga = v55;
          type = v56;
          v57 = (uint8_t *)swift_slowAlloc(12, -1);
          buf = (uint8_t *)swift_slowAlloc(32, -1);
          v75 = buf;
          *(_DWORD *)v57 = 136315138;
          v62 = v57 + 4;
          v63 = v57;
          v58 = objc_msgSend(v54, "identifier");
          v59 = static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
          v61 = v60;

          v74 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v59, v61, (uint64_t *)&v75);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v74, &v75, v62);

          swift_bridgeObjectRelease(v61);
          _os_log_impl((void *)&_mh_execute_header, loga, type, "[MOSuggestionAssetCacheManager.wrapImageAssetInURLPairIfNecessary] Failed to wrap image identifier=%s", v63, 0xCu);
          swift_arrayDestroy(buf, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(buf, -1, -1);
          swift_slowDealloc(v63, -1, -1);

        }
        else
        {

        }
        a5 = v68;
        swift_retain(v13);
        swift_retain(v68);
        swift_retain(a7);
        swift_bridgeObjectRetain(a8);
        swift_retain(a10);
        closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, v13, a4, v68, a6, a7, a8, a9);
        swift_unknownObjectRelease(v17);
      }
      goto LABEL_12;
    }
    swift_unknownObjectRelease(v17);
  }
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v35 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v35, (uint64_t)static MOAngelLogger.assets);
  v36 = a1;
  v37 = Logger.logObject.getter(v36);
  v38 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v37, v38))
  {
    v71 = a7;
    v39 = (uint8_t *)swift_slowAlloc(12, -1);
    log = (os_log_t)swift_slowAlloc(32, -1);
    v75 = log;
    *(_DWORD *)v39 = 136315138;
    v40 = a8;
    v41 = objc_msgSend(v36, "identifier");
    v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
    v69 = v13;
    v44 = v43;

    a8 = v40;
    v45 = v42;
    v15 = a10;
    v74 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v45, v44, (uint64_t *)&v75);
    a7 = v71;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v74, &v75, v39 + 4);

    v46 = v44;
    v13 = v69;
    swift_bridgeObjectRelease(v46);
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "[MOSuggestionAssetCacheManager.wrapImageAssetInURLPairIfNecessary] Pass through without wrapping identifier=%s", v39, 0xCu);
    swift_arrayDestroy(log, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(log, -1, -1);
    swift_slowDealloc(v39, -1, -1);

  }
  else
  {

  }
  swift_retain(v13);
  swift_retain(a5);
  swift_retain(a7);
  swift_bridgeObjectRetain(a8);
  swift_retain(v15);
  closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(v36, v13, a4, a5, a6, a7, a8, a9);
LABEL_12:
  swift_release_n(v13, v34);
  swift_release_n(a5, v47);
  swift_release(a7);
  swift_bridgeObjectRelease(a8);
  v48 = swift_release(v15);
  swift_release_n(a5, v48);
  swift_release_n(v13, v49);
  swift_release_n(v15, v50);
  swift_bridgeObjectRelease_n(a8, 3);
  return swift_release_n(a7, v51);
}

void specialized static MOSuggestionAssetCacheManager.wrapImageAssetInURLPairIfNecessary(asset:cacheType:completion:)(id a1, unsigned __int8 a2, void (*a3)(id))
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSString v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  Class isa;
  uint64_t v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  void (*v30)(id);
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  _DWORD *v42;
  uint8_t *buf;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;

  if (a2 - 2 >= 9)
  {
    v5 = objc_msgSend(a1, "content");
    v6 = objc_opt_self(UIImage);
    v7 = swift_dynamicCastObjCClass(v5, v6);
    if (v7)
    {
      v8 = v7;
      swift_unknownObjectRetain();
      v9 = objc_msgSend(a1, "identifier");
      static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
      v11 = v10;

      v12 = objc_allocWithZone((Class)MOSuggestionAssetImageURLPair);
      v13 = String._bridgeToObjectiveC()();
      v14 = objc_msgSend(v12, "init:urlAppendix:", v8, v13, swift_bridgeObjectRelease(v11).n128_f64[0]);

      swift_unknownObjectRelease(v5);
      if (v14)
      {
        v15 = v14;
        v16 = objc_msgSend(a1, "assetType");
        v17 = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MOSuggestionAssetImageURLPair, MOSuggestionAssetImageURLPair_ptr);
        v18 = objc_msgSend(objc_allocWithZone((Class)MOSuggestionAsset), "init:type:contentClassType:", v15, v16, swift_getObjCClassFromMetadata(v17));

        v19 = objc_msgSend(a1, "metadata");
        v20 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v19, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

        isa = Dictionary._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v18, "addMetadata:", isa, swift_bridgeObjectRelease(v20).n128_f64[0]);

        v45 = v18;
        a3(v18);
        swift_unknownObjectRelease(v5);

      }
      else
      {
        if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
          swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
        v33 = type metadata accessor for Logger(0);
        __swift_project_value_buffer(v33, (uint64_t)static MOAngelLogger.assets);
        v34 = a1;
        v35 = Logger.logObject.getter(v34);
        v36 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v35, v36))
        {
          v37 = (uint8_t *)swift_slowAlloc(12, -1);
          v44 = swift_slowAlloc(32, -1);
          v47 = v44;
          *(_DWORD *)v37 = 136315138;
          v42 = v37 + 4;
          buf = v37;
          v38 = objc_msgSend(v34, "identifier");
          v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
          v41 = v40;

          v46 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v39, v41, &v47);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47, v42);

          swift_bridgeObjectRelease(v41);
          _os_log_impl((void *)&_mh_execute_header, v35, v36, "[MOSuggestionAssetCacheManager.wrapImageAssetInURLPairIfNecessary] Failed to wrap image identifier=%s", buf, 0xCu);
          swift_arrayDestroy(v44, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v44, -1, -1);
          swift_slowDealloc(buf, -1, -1);

        }
        else
        {

        }
        a3(0);
        swift_unknownObjectRelease(v5);
      }
      return;
    }
    swift_unknownObjectRelease(v5);
  }
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v22 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v22, (uint64_t)static MOAngelLogger.assets);
  v23 = a1;
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc(12, -1);
    v27 = swift_slowAlloc(32, -1);
    v47 = v27;
    *(_DWORD *)v26 = 136315138;
    v28 = objc_msgSend(v23, "identifier");
    v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
    v30 = a3;
    v32 = v31;

    v46 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v32, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47, v26 + 4);

    swift_bridgeObjectRelease(v32);
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "[MOSuggestionAssetCacheManager.wrapImageAssetInURLPairIfNecessary] Pass through without wrapping identifier=%s", v26, 0xCu);
    swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v26, -1, -1);

    v30(v23);
  }
  else
  {

    a3(v23);
  }
}

void specialized static MOSuggestionAssetCacheManager.wrapMediaItemAssetInURLIfNecessary(asset:cacheType:completion:)(void *a1, unsigned __int8 a2, void (*a3)(id), uint8_t *a4)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  id v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  id v55;
  NSObject *v56;
  os_log_type_t v57;
  int v58;
  uint8_t *v59;
  void *v60;
  uint8_t *v61;
  id v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  os_log_t v66;
  uint64_t v67;
  uint8_t *v68;
  id v69;
  id v70;
  NSObject *v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  void *v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t, uint64_t, uint64_t);
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  uint64_t v96;
  Class isa;
  id v98;
  uint64_t v99;
  uint64_t v100;
  _DWORD *v101;
  uint64_t v102;
  uint64_t v103;
  os_log_t v104;
  id v105;
  id v106;
  char *v107;
  uint64_t v108;
  uint8_t *v109;
  void (*v110)(id);
  uint64_t v111;
  uint64_t v112;

  v7 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v99 - v13;
  __chkstk_darwin(v12);
  v16 = (char *)&v99 - v15;
  v17 = type metadata accessor for URL(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v99 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v7 - 2) >= 9)
  {
    v109 = a4;
    v21 = objc_msgSend(a1, "content");
    v22 = objc_opt_self(MOSuggestionAssetMediaItem);
    v23 = (void *)swift_dynamicCastObjCClass(v21, v22);
    if (v23)
    {
      v24 = v23;
      v25 = objc_msgSend(v23, "albumArt");
      if (v25)
      {
        v106 = v21;
        v107 = v20;
        v110 = a3;
        v26 = v25;
        v27 = objc_msgSend(a1, "identifier");
        v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
        v108 = v18;
        v30 = v29;

        v105 = v26;
        UIImage.temporaryCacheURL(assetIdentifier:)(v28, v30, (uint64_t)v16);
        v31 = v30;
        v32 = v108;
        v33 = swift_bridgeObjectRelease(v31);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v32 + 48))(v16, 1, v17, v33) == 1)
        {
          outlined destroy of URL?((uint64_t)v16);
          if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
            swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
          v34 = type metadata accessor for Logger(0);
          __swift_project_value_buffer(v34, (uint64_t)static MOAngelLogger.assets);
          v35 = a1;
          v36 = Logger.logObject.getter(v35);
          v37 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v36, v37))
          {
            v38 = (uint8_t *)swift_slowAlloc(12, -1);
            v39 = swift_slowAlloc(32, -1);
            v112 = v39;
            *(_DWORD *)v38 = 136315138;
            v40 = objc_msgSend(v35, "identifier");
            v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
            v43 = v42;

            v111 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v41, v43, &v112);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v111, &v112, v38 + 4);

            swift_bridgeObjectRelease(v43);
            _os_log_impl((void *)&_mh_execute_header, v36, v37, "[MOSuggestionAssetCacheManager.wrapMediaItemAssetInURLIfNecessary] Failed to wrap image identifier=%s", v38, 0xCu);
            swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v39, -1, -1);
            swift_slowDealloc(v38, -1, -1);

          }
          else
          {

          }
          v69 = v106;
          v110(0);
          swift_unknownObjectRelease(v69);

        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v107, v16, v17);
          if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
            swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
          v54 = type metadata accessor for Logger(0);
          __swift_project_value_buffer(v54, (uint64_t)static MOAngelLogger.assets);
          v55 = a1;
          v56 = Logger.logObject.getter(v55);
          v57 = static os_log_type_t.default.getter();
          v58 = v57;
          if (os_log_type_enabled(v56, v57))
          {
            v104 = v56;
            v59 = (uint8_t *)swift_slowAlloc(12, -1);
            v103 = swift_slowAlloc(32, -1);
            v112 = v103;
            LODWORD(v102) = v58;
            v60 = v55;
            v61 = v59;
            *(_DWORD *)v59 = 136315138;
            v101 = v59 + 4;
            v62 = objc_msgSend(v60, "identifier");
            v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(v62);
            v65 = v64;

            v111 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v63, v65, &v112);
            v32 = v108;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v111, &v112, v101);

            swift_bridgeObjectRelease(v65);
            v66 = v104;
            _os_log_impl((void *)&_mh_execute_header, v104, (os_log_type_t)v102, "[MOSuggestionAssetCacheManager.wrapMediaItemAssetInURLIfNecessary] Wrapping image identifier=%s", v61, 0xCu);
            v67 = v103;
            swift_arrayDestroy(v103, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v67, -1, -1);
            v68 = v61;
            v55 = v60;
            swift_slowDealloc(v68, -1, -1);

          }
          else
          {

          }
          v70 = objc_msgSend(v24, "title");
          v71 = static String._unconditionallyBridgeFromObjectiveC(_:)(v70);
          v103 = v72;
          v104 = v71;

          v73 = objc_msgSend(v24, "albumTitle");
          v74 = static String._unconditionallyBridgeFromObjectiveC(_:)(v73);
          v101 = (_DWORD *)v75;
          v102 = v74;

          v76 = objc_msgSend(v24, "artistName");
          v77 = static String._unconditionallyBridgeFromObjectiveC(_:)(v76);
          v99 = v78;
          v100 = v77;

          v79 = objc_msgSend(v24, "trackIdentifier");
          if (v79)
          {
            v80 = v79;
            v81 = static String._unconditionallyBridgeFromObjectiveC(_:)(v79);
            v83 = v82;

          }
          else
          {
            v81 = 0;
            v83 = 0;
          }
          v84 = objc_msgSend(v24, "previewURL");
          if (v84)
          {
            v85 = v84;
            static URL._unconditionallyBridgeFromObjectiveC(_:)(v84);

            v86 = v32;
            v87 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56);
            v87(v14, 0, 1, v17);
          }
          else
          {
            v86 = v32;
            v87 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56);
            v87(v14, 1, 1, v17);
          }
          v88 = objc_msgSend(v24, "mediaType");
          (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v11, v107, v17);
          v87(v11, 0, 1, v17);
          v89 = objc_msgSend(v24, "bgColor");
          v90 = objc_msgSend(v24, "bgColorVariant");
          v91 = objc_allocWithZone((Class)MOSuggestionAssetMediaItem);
          v92 = @nonobjc MOSuggestionAssetMediaItem.init(title:albumTitle:artistName:albumArt:trackIdentifier:previewURL:mediaType:imageURL:bgColor:bgColorVariant:)((uint64_t)v104, v103, v102, (uint64_t)v101, v100, v99, 0, v81, v83, (uint64_t)v14, (uint64_t)v88, (uint64_t)v11, v89, (uint64_t)v90);
          v93 = objc_msgSend(v55, "assetType");
          type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MOSuggestionAssetMediaItem, MOSuggestionAssetMediaItem_ptr);
          v94 = objc_msgSend(objc_allocWithZone((Class)MOSuggestionAsset), "init:type:contentClassType:", v92, v93, swift_getObjCClassFromMetadata());

          v95 = objc_msgSend(v55, "metadata");
          v96 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v95, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

          isa = Dictionary._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v94, "addMetadata:", isa, swift_bridgeObjectRelease(v96).n128_f64[0]);

          v98 = v94;
          v110(v94);

          swift_unknownObjectRelease(v106);
          (*(void (**)(char *, uint64_t))(v108 + 8))(v107, v17);
        }
        return;
      }
    }
    swift_unknownObjectRelease(v21);
  }
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v44 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v44, (uint64_t)static MOAngelLogger.assets);
  v45 = a1;
  v46 = Logger.logObject.getter(v45);
  v47 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v46, v47))
  {
    v110 = a3;
    v48 = (uint8_t *)swift_slowAlloc(12, -1);
    v49 = swift_slowAlloc(32, -1);
    v112 = v49;
    *(_DWORD *)v48 = 136315138;
    v109 = v48 + 4;
    v50 = objc_msgSend(v45, "identifier");
    v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
    v53 = v52;

    v111 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v51, v53, &v112);
    a3 = v110;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v111, &v112, v109);

    swift_bridgeObjectRelease(v53);
    _os_log_impl((void *)&_mh_execute_header, v46, v47, "[MOSuggestionAssetCacheManager.wrapMediaItemAssetInURLIfNecessary] Pass through without wrapping identifier=%s", v48, 0xCu);
    swift_arrayDestroy(v49, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v49, -1, -1);
    swift_slowDealloc(v48, -1, -1);

  }
  else
  {

  }
  a3(v45);
}

uint64_t outlined destroy of URL?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t MOSuggestionTipCoordinator.delegate.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 16, v2, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v0 + 16);
}

uint64_t MOSuggestionTipCoordinator.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE v6[24];

  swift_beginAccess(v2 + 16, v6, 1, 0);
  *(_QWORD *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign(v2 + 16, a1);
  return swift_unknownObjectRelease(a1);
}

void (*MOSuggestionTipCoordinator.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t Strong;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess(v1 + 16, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v3[3] = Strong;
  v3[4] = v5;
  return MOSuggestionTipCoordinator.delegate.modify;
}

void MOSuggestionTipCoordinator.delegate.modify(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  *(_QWORD *)(v5 + 24) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign(v5 + 16, v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
  }
  free(v3);
}

uint64_t MOSuggestionTipCoordinator.onboardingTip.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 32, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t MOSuggestionTipCoordinator.onboardingTip.setter(char a1)
{
  uint64_t v1;
  uint64_t result;
  _BYTE v4[24];

  result = swift_beginAccess(v1 + 32, v4, 1, 0);
  *(_BYTE *)(v1 + 32) = a1;
  return result;
}

uint64_t MOSuggestionTipCoordinator.privacyTip.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t result;
  _BYTE v9[24];

  swift_beginAccess(v1 + 40, v9, 0, 0);
  v3 = *(_QWORD *)(v1 + 40);
  v4 = *(_QWORD *)(v1 + 48);
  v5 = *(_QWORD *)(v1 + 56);
  v6 = *(_QWORD *)(v1 + 64);
  v7 = *(_BYTE *)(v1 + 72);
  result = outlined copy of MOSuggestionPrivacyTip?(v3, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return result;
}

uint64_t MOSuggestionTipCoordinator.privacyTip.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  swift_beginAccess(v1 + 5, v8, 1, 0);
  v3 = v1[5];
  v4 = v1[6];
  v5 = v1[7];
  v6 = v1[8];
  outlined init with take of Date?(a1, (uint64_t)(v1 + 5), &demangling cache variable for type metadata for MOSuggestionPrivacyTip?);
  outlined retain of MOSuggestionPrivacyTip?(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of MOSuggestionPrivacyTip?);
  outlined consume of MOSuggestionPrivacyTip?(v3, v4, v5, v6);
  return outlined retain of MOSuggestionPrivacyTip?(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of MOSuggestionPrivacyTip?);
}

uint64_t MOSuggestionTipCoordinator.stateOfMindTip.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 73, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 73);
}

uint64_t MOSuggestionTipCoordinator.stateOfMindTip.setter(char a1)
{
  uint64_t v1;
  uint64_t result;
  _BYTE v4[24];

  result = swift_beginAccess(v1 + 73, v4, 1, 0);
  *(_BYTE *)(v1 + 73) = a1;
  return result;
}

uint64_t (*MOSuggestionTipCoordinator.stateOfMindTip.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + 73, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionTipCoordinator.privacyTipWasShownAndInvalidated.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 74, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 74);
}

uint64_t MOSuggestionTipCoordinator.privacyTipWasShownAndInvalidated.setter(char a1)
{
  uint64_t v1;
  uint64_t result;
  _BYTE v4[24];

  result = swift_beginAccess(v1 + 74, v4, 1, 0);
  *(_BYTE *)(v1 + 74) = a1;
  return result;
}

uint64_t (*MOSuggestionTipCoordinator.privacyTipWasShownAndInvalidated.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + 74, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionTipCoordinator.__allocating_init(clientId:clientName:isPublicUI:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v11;

  v11 = swift_allocObject(v5, 75, 7);
  MOSuggestionTipCoordinator.init(clientId:clientName:isPublicUI:)(a1, a2, a3, a4, a5);
  return v11;
}

uint64_t MOSuggestionTipCoordinator.init(clientId:clientName:isPublicUI:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  _BYTE v24[24];
  _BYTE v25[24];
  _BYTE v26[24];
  __int128 v27;
  __int128 v28;
  unint64_t v29;

  *(_QWORD *)(v5 + 24) = 0;
  swift_unknownObjectWeakInit(v5 + 16);
  *(_BYTE *)(v5 + 32) = 0;
  *(_OWORD *)(v5 + 40) = 0u;
  *(_OWORD *)(v5 + 56) = 0u;
  *(_DWORD *)(v5 + 71) = 0;
  swift_beginAccess(v5 + 32, v26, 0, 0);
  v11 = *(_BYTE *)(v5 + 32);
  *((_QWORD *)&v28 + 1) = &type metadata for MOSuggestionOnboardingTip;
  v29 = lazy protocol witness table accessor for type MOSuggestionOnboardingTip and conformance MOSuggestionOnboardingTip();
  LOBYTE(v27) = v11;
  MOSuggestionTipCoordinator.observeTipStatusUpdates(tip:)((uint64_t)&v27);
  outlined destroy of Any?((uint64_t)&v27, &demangling cache variable for type metadata for Tip?);
  if (a2)
  {
    swift_beginAccess(v5 + 40, v24, 1, 0);
    v12 = *(_QWORD *)(v5 + 40);
    v13 = *(_QWORD *)(v5 + 48);
    v14 = *(_QWORD *)(v5 + 56);
    v15 = *(_QWORD *)(v5 + 64);
    *(_QWORD *)(v5 + 40) = a1;
    *(_QWORD *)(v5 + 48) = a2;
    *(_QWORD *)(v5 + 56) = a3;
    *(_QWORD *)(v5 + 64) = a4;
    *(_BYTE *)(v5 + 72) = 0;
    outlined consume of MOSuggestionPrivacyTip?(v12, v13, v14, v15);
    v17 = *(_QWORD *)(v5 + 40);
    v16 = *(_QWORD *)(v5 + 48);
    v18 = *(_QWORD *)(v5 + 56);
    v19 = *(_QWORD *)(v5 + 64);
    v20 = *(_BYTE *)(v5 + 72);
    if (v16)
    {
      *((_QWORD *)&v28 + 1) = &type metadata for MOSuggestionPrivacyTip;
      v29 = lazy protocol witness table accessor for type MOSuggestionPrivacyTip and conformance MOSuggestionPrivacyTip();
      v21 = swift_allocObject(&unk_1001E84A8, 49, 7);
      *(_QWORD *)&v27 = v21;
      *(_QWORD *)(v21 + 16) = v17;
      *(_QWORD *)(v21 + 24) = v16;
      *(_QWORD *)(v21 + 32) = v18;
      *(_QWORD *)(v21 + 40) = v19;
      *(_BYTE *)(v21 + 48) = v20 & 1;
    }
    else
    {
      v29 = 0;
      v27 = 0u;
      v28 = 0u;
    }
    outlined copy of MOSuggestionPrivacyTip?(v17, v16, v18, v19);
    MOSuggestionTipCoordinator.observeTipStatusUpdates(tip:)((uint64_t)&v27);
    outlined destroy of Any?((uint64_t)&v27, &demangling cache variable for type metadata for Tip?);
  }
  else
  {
    swift_bridgeObjectRelease(a4);
  }
  swift_beginAccess(v5 + 73, v25, 1, 0);
  v22 = *(_BYTE *)(v5 + 73);
  *((_QWORD *)&v28 + 1) = &type metadata for MOSuggestionStateOfMindTip;
  v29 = lazy protocol witness table accessor for type MOSuggestionStateOfMindTip and conformance MOSuggestionStateOfMindTip();
  LOBYTE(v27) = v22;
  MOSuggestionTipCoordinator.observeTipStatusUpdates(tip:)((uint64_t)&v27);
  outlined destroy of Any?((uint64_t)&v27, &demangling cache variable for type metadata for Tip?);
  *(_BYTE *)(v5 + 73) = a5 & 1;
  return v5;
}

uint64_t MOSuggestionTipCoordinator.observeTipStatusUpdates(tip:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __int128 v10;
  uint64_t v11;
  _QWORD v12[5];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  __chkstk_darwin(v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Date?(a1, (uint64_t)&v10, &demangling cache variable for type metadata for Tip?);
  if (!v11)
    return outlined destroy of Any?((uint64_t)&v10, &demangling cache variable for type metadata for Tip?);
  outlined init with take of Tip(&v10, (uint64_t)v12);
  v5 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = swift_allocObject(&unk_1001E85B0, 24, 7);
  swift_weakInit(v6 + 16);
  outlined init with copy of MOProtectedAppsManagerDelegate((uint64_t)v12, (uint64_t)&v10);
  v7 = (_QWORD *)swift_allocObject(&unk_1001E85D8, 80, 7);
  v7[2] = 0;
  v7[3] = 0;
  outlined init with take of Tip(&v10, (uint64_t)(v7 + 4));
  v7[9] = v6;
  v8 = _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5((uint64_t)v4, (uint64_t)&async function pointer to partial apply for closure #1 in MOSuggestionTipCoordinator.observeTipStatusUpdates(tip:), (uint64_t)v7);
  swift_release(v8);
  return __swift_destroy_boxed_opaque_existential_1(v12);
}

unint64_t lazy protocol witness table accessor for type MOSuggestionStateOfMindTip and conformance MOSuggestionStateOfMindTip()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MOSuggestionStateOfMindTip and conformance MOSuggestionStateOfMindTip;
  if (!lazy protocol witness table cache variable for type MOSuggestionStateOfMindTip and conformance MOSuggestionStateOfMindTip)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MOSuggestionStateOfMindTip, &type metadata for MOSuggestionStateOfMindTip);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionStateOfMindTip and conformance MOSuggestionStateOfMindTip);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MOSuggestionStateOfMindTip and conformance MOSuggestionStateOfMindTip;
  if (!lazy protocol witness table cache variable for type MOSuggestionStateOfMindTip and conformance MOSuggestionStateOfMindTip)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MOSuggestionStateOfMindTip, &type metadata for MOSuggestionStateOfMindTip);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionStateOfMindTip and conformance MOSuggestionStateOfMindTip);
  }
  return result;
}

uint64_t sub_1000AD810()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 49, 7);
}

uint64_t closure #1 in MOSuggestionTipCoordinator.observeTipStatusUpdates(tip:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5[37] = a4;
  v5[38] = a5;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v5[39] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[40] = v7;
  v5[41] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v5[42] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[43] = v9;
  v5[44] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Tips.Status(0);
  v5[45] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v5[46] = v11;
  v12 = *(_QWORD *)(v11 + 64);
  v5[47] = v12;
  v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[48] = swift_task_alloc(v13);
  v5[49] = swift_task_alloc(v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Tips.Status?);
  v5[50] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<Tips.Status>);
  v5[51] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v5[52] = v16;
  v5[53] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<Tips.Status>.Iterator);
  v5[54] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v5[55] = v18;
  v5[56] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(closure #1 in MOSuggestionTipCoordinator.observeTipStatusUpdates(tip:), 0, 0);
}

uint64_t closure #1 in MOSuggestionTipCoordinator.observeTipStatusUpdates(tip:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v2 = v0[52];
  v1 = v0[53];
  v3 = v0[51];
  v4 = (_QWORD *)v0[37];
  v5 = v0[38] + 16;
  v6 = v4[3];
  v7 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v6);
  Tip.statusUpdates.getter(v6, v7);
  AsyncStream.makeAsyncIterator()(v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess(v5, v0 + 33, 0, 0);
  v8 = (_QWORD *)swift_task_alloc(async function pointer to AsyncStream.Iterator.next(isolation:)[1]);
  v0[57] = v8;
  *v8 = v0;
  v8[1] = closure #1 in MOSuggestionTipCoordinator.observeTipStatusUpdates(tip:);
  return AsyncStream.Iterator.next(isolation:)(v0[50], 0, 0, v0[54]);
}

{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 456));
  return swift_task_switch(closure #1 in MOSuggestionTipCoordinator.observeTipStatusUpdates(tip:), 0, 0);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t Strong;
  __n128 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 *v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;

  v1 = *(_QWORD *)(v0 + 400);
  v2 = *(_QWORD *)(v0 + 360);
  v3 = *(_QWORD *)(v0 + 368);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = *(_QWORD *)(v0 + 448);
    v5 = *(_QWORD *)(v0 + 424);
    v7 = *(_QWORD *)(v0 + 384);
    v6 = *(_QWORD *)(v0 + 392);
    v8 = *(_QWORD *)(v0 + 352);
    v9 = *(_QWORD *)(v0 + 328);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 440) + 8))(v4, *(_QWORD *)(v0 + 432));
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    swift_task_dealloc(v1);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v11 = *(_QWORD *)(v0 + 304) + 16;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
  v12(*(_QWORD *)(v0 + 392), v1, v2);
  Strong = swift_weakLoadStrong(v11);
  if (Strong)
  {
    v47 = v12;
    v48 = Strong;
    v46 = (__int128 *)(v0 + 184);
    outlined init with copy of MOProtectedAppsManagerDelegate(*(_QWORD *)(v0 + 296), v0 + 64);
    outlined init with copy of Date?(v0 + 64, v0 + 104, &demangling cache variable for type metadata for Tip?);
    if (*(_QWORD *)(v0 + 128))
    {
      outlined init with copy of Date?(v0 + 104, v0 + 144, &demangling cache variable for type metadata for Tip?);
      v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Tip);
      if (swift_dynamicCast(v0 + 257, v0 + 144, v15, &type metadata for MOSuggestionOnboardingTip, 0))
      {
        __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 144));
        v39 = 0;
LABEL_14:
        v19 = *(_QWORD *)(v0 + 384);
        v20 = *(_QWORD *)(v0 + 392);
        v22 = *(_QWORD *)(v0 + 368);
        v21 = *(_QWORD *)(v0 + 376);
        v23 = *(_QWORD *)(v0 + 360);
        v44 = *(_QWORD *)(v0 + 344);
        v45 = *(_QWORD *)(v0 + 336);
        v40 = *(_QWORD *)(v0 + 352);
        v41 = *(_QWORD *)(v0 + 328);
        v24 = *(_QWORD *)(v0 + 312);
        v43 = *(_QWORD *)(v0 + 320);
        v25 = *(_QWORD *)(v0 + 296);
        outlined destroy of Any?(v0 + 104, &demangling cache variable for type metadata for Tip?);
        outlined destroy of Any?(v0 + 64, &demangling cache variable for type metadata for Tip?);
        type metadata accessor for OS_dispatch_queue();
        v42 = (void *)static OS_dispatch_queue.main.getter(v26);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v19, v20, v23);
        outlined init with copy of MOProtectedAppsManagerDelegate(v25, (uint64_t)v46);
        v27 = *(unsigned __int8 *)(v22 + 80);
        v28 = (v27 + 16) & ~v27;
        v29 = (v28 + v21 + 23) & 0xFFFFFFFFFFFFFFF8;
        v30 = swift_allocObject(&unk_1001E8628, v29 + 40, v27 | 7);
        v47(v30 + v28, v19, v23);
        v31 = v30 + ((v28 + v21 + 7) & 0xFFFFFFFFFFFFFFF8);
        *(_QWORD *)v31 = v48;
        *(_BYTE *)(v31 + 8) = v39;
        outlined init with take of Tip(v46, v30 + v29);
        *(_QWORD *)(v0 + 48) = partial apply for closure #1 in MOSuggestionTipCoordinator.statusDidChange(status:for:);
        *(_QWORD *)(v0 + 56) = v30;
        *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
        *(_QWORD *)(v0 + 24) = 1107296256;
        *(_QWORD *)(v0 + 32) = thunk for @escaping @callee_guaranteed () -> ();
        *(_QWORD *)(v0 + 40) = &block_descriptor_18;
        v32 = _Block_copy((const void *)(v0 + 16));
        v33 = *(_QWORD *)(v0 + 56);
        swift_retain(v48);
        swift_release(v33);
        static DispatchQoS.unspecified.getter(v34);
        *(_QWORD *)(v0 + 288) = _swiftEmptyArrayStorage;
        v35 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
        v37 = lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
        dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 288, v36, v37, v24, v35);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v40, v41, v32);
        _Block_release(v32);

        (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v24);
        (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v40, v45);
        v14 = swift_release(v48);
        goto LABEL_15;
      }
      if ((swift_dynamicCast(v0 + 224, v0 + 144, v15, &type metadata for MOSuggestionPrivacyTip, 0) & 1) != 0)
      {
        v17 = *(_QWORD *)(v0 + 248);
        swift_bridgeObjectRelease(*(_QWORD *)(v0 + 232));
        swift_bridgeObjectRelease(v17);
        __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 144));
        v16 = 1;
      }
      else
      {
        v18 = swift_dynamicCast(v0 + 258, v0 + 144, v15, &type metadata for MOSuggestionStateOfMindTip, 0);
        __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 144));
        if (v18)
          v16 = 2;
        else
          v16 = 3;
      }
    }
    else
    {
      v16 = 3;
    }
    v39 = v16;
    goto LABEL_14;
  }
LABEL_15:
  (*(void (**)(_QWORD, _QWORD, __n128))(*(_QWORD *)(v0 + 368) + 8))(*(_QWORD *)(v0 + 392), *(_QWORD *)(v0 + 360), v14);
  v38 = (_QWORD *)swift_task_alloc(async function pointer to AsyncStream.Iterator.next(isolation:)[1]);
  *(_QWORD *)(v0 + 456) = v38;
  *v38 = v0;
  v38[1] = closure #1 in MOSuggestionTipCoordinator.observeTipStatusUpdates(tip:);
  return AsyncStream.Iterator.next(isolation:)(*(_QWORD *)(v0 + 400), 0, 0, *(_QWORD *)(v0 + 432));
}

uint64_t _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD v19[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    outlined destroy of Any?(a1, &demangling cache variable for type metadata for TaskPriority?);
    v8 = 7168;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
    {
LABEL_3:
      v10 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v9);
      swift_unknownObjectRetain();
      v12 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v10);
      v14 = v13;
      swift_unknownObjectRelease(v9);
      goto LABEL_6;
    }
  }
  else
  {
    v15 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v8 = v15 | 0x1C00;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
      goto LABEL_3;
  }
  v12 = 0;
  v14 = 0;
LABEL_6:
  v16 = swift_allocObject(&unk_1001E8600, 32, 7);
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = a3;
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    v17 = v19;
    v19[2] = v12;
    v19[3] = v14;
  }
  else
  {
    v17 = 0;
  }
  return swift_task_create(v8, v17, (char *)&type metadata for () + 8, &_sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5TATu, v16);
}

void closure #1 in MOSuggestionTipCoordinator.statusDidChange(status:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, _QWORD, uint64_t);
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t *, _QWORD);
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, _QWORD, uint64_t);
  uint64_t v71;
  uint64_t (*v72)(char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75[3];
  uint64_t v76;
  uint64_t v77;
  _QWORD v78[5];
  _OWORD v79[2];
  char v80;
  __int128 v81;
  __int128 v82;
  char v83;
  __int128 v84;
  _BYTE v85[12];

  v8 = type metadata accessor for Tips.Status(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = enum case for Tips.InvalidationReason.tipClosed(_:);
  v13 = type metadata accessor for Tips.InvalidationReason(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
  v14 = *(void (**)(char *, _QWORD, uint64_t))(v9 + 104);
  v14(v11, enum case for Tips.Status.invalidated(_:), v8);
  LOBYTE(v12) = static Tips.Status.== infix(_:_:)(a1, v11);
  v72 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
  v15 = v72(v11, v8);
  v16 = &unk_100206000;
  if ((v12 & 1) != 0)
  {
    v71 = a1;
    v17 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 120))(v15);
    if (v17)
    {
      v19 = v17;
      v20 = v18;
      ObjectType = swift_getObjectType(v17);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(a3, ObjectType, v20);
      v17 = swift_unknownObjectRelease(v19);
    }
    v70 = v14;
    if (a3 == 1)
    {
      (*(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)a2 + 168))(v78, v17);
      v22 = v78[1];
      v23 = v78[3];
      outlined init with take of Date?((uint64_t)v78, (uint64_t)v75, &demangling cache variable for type metadata for MOSuggestionPrivacyTip?);
      outlined init with take of Date?((uint64_t)v78, (uint64_t)v79, &demangling cache variable for type metadata for MOSuggestionPrivacyTip?);
      if (*((_QWORD *)&v79[0] + 1))
      {
        v81 = v79[0];
        v82 = v79[1];
        v83 = v80;
        v84 = v79[0];
        swift_bridgeObjectRetain(v23);
        swift_bridgeObjectRetain(v22);
        outlined release of String((uint64_t)&v84);
        outlined init with take of Date?((uint64_t)&v82, (uint64_t)v85, &demangling cache variable for type metadata for String?);
        outlined release of String((uint64_t)v85);
        v24 = v77;
        outlined consume of MOSuggestionPrivacyTip?(v75[0], v75[1], v75[2], v76);
      }
      else
      {
        v24 = 0;
      }
      (*(void (**)(uint64_t))(*(_QWORD *)a2 + 224))(v24);
      v25 = objc_msgSend((id)objc_opt_self(MOOnboardingManager), "sharedInstance");
      objc_msgSend(v25, "setOnboardingFlowCompletionStatus:", 3);

    }
    if (serverManager._clientConnections != (NSMutableDictionary *)-1)
      swift_once(&serverManager._clientConnections, one-time initialization function for shared);
    v26 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v26, (uint64_t)static MOAngelLogger.shared);
    v27 = outlined init with copy of MOProtectedAppsManagerDelegate(a4, (uint64_t)v75);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.default.getter();
    v30 = v29;
    if (os_log_type_enabled(v28, v29))
    {
      v31 = swift_slowAlloc(22, -1);
      v68 = swift_slowAlloc(64, -1);
      v74 = v68;
      *(_DWORD *)v31 = 136315394;
      LOBYTE(v73) = a3;
      v32 = String.init<A>(describing:)(&v73, &type metadata for MOSuggestionTipType);
      v67 = v30;
      v34 = v33;
      v73 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v32, v33, &v74);
      v69 = a4;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, &v74, v31 + 4);
      swift_bridgeObjectRelease(v34);
      *(_WORD *)(v31 + 12) = 2080;
      v66 = v31 + 14;
      v35 = v76;
      v36 = a3;
      v37 = v77;
      __swift_project_boxed_opaque_existential_1(v75, v76);
      v38 = v37;
      a3 = v36;
      v39 = dispatch thunk of Tip.id.getter(v35, v38);
      v41 = v40;
      v73 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v39, v40, &v74);
      a4 = v69;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, &v74, v66);
      swift_bridgeObjectRelease(v41);
      __swift_destroy_boxed_opaque_existential_1(v75);
      _os_log_impl((void *)&_mh_execute_header, v28, (os_log_type_t)v67, "[Tip] invalidated tipType: %s, for tipID: %s", (uint8_t *)v31, 0x16u);
      v42 = v68;
      swift_arrayDestroy(v68, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v42, -1, -1);
      v43 = v31;
      v16 = (_QWORD *)&unk_100206000;
      swift_slowDealloc(v43, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1(v75);
    }

    a1 = v71;
    v14 = v70;
  }
  v14(v11, enum case for Tips.Status.available(_:), v8);
  v44 = static Tips.Status.== infix(_:_:)(a1, v11);
  v72(v11, v8);
  if ((v44 & 1) != 0)
  {
    if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 272))(a3) & 1) != 0)
    {
      v45 = (*(uint64_t (**)(void))(*(_QWORD *)a2 + 120))();
      if (v45)
      {
        v47 = v45;
        v48 = v46;
        v49 = swift_getObjectType(v45);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 8))(a3, v49, v48);
        swift_unknownObjectRelease(v47);
      }
      v51 = (void (*)(uint64_t *, _QWORD))(*(uint64_t (**)(uint64_t *))(*(_QWORD *)a2 + 184))(v75);
      if (*(_QWORD *)(v50 + 8))
        *(_BYTE *)(v50 + 32) = a3 == 1;
      v51(v75, 0);
    }
    if (v16[385] != -1)
      swift_once(&serverManager._clientConnections, one-time initialization function for shared);
    v52 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v52, (uint64_t)static MOAngelLogger.shared);
    v53 = outlined init with copy of MOProtectedAppsManagerDelegate(a4, (uint64_t)v75);
    v54 = Logger.logObject.getter(v53);
    v55 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v54, v55))
    {
      v56 = swift_slowAlloc(22, -1);
      v57 = swift_slowAlloc(64, -1);
      v74 = v57;
      *(_DWORD *)v56 = 136315394;
      LOBYTE(v73) = a3;
      v58 = String.init<A>(describing:)(&v73, &type metadata for MOSuggestionTipType);
      v60 = v59;
      v73 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v58, v59, &v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, &v74, v56 + 4);
      swift_bridgeObjectRelease(v60);
      *(_WORD *)(v56 + 12) = 2080;
      v61 = v76;
      v62 = v77;
      __swift_project_boxed_opaque_existential_1(v75, v76);
      v63 = dispatch thunk of Tip.id.getter(v61, v62);
      v65 = v64;
      v73 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v63, v64, &v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, &v74, v56 + 14);
      swift_bridgeObjectRelease(v65);
      __swift_destroy_boxed_opaque_existential_1(v75);
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "[Tip] available tipType: %s, for tipID: %s", (uint8_t *)v56, 0x16u);
      swift_arrayDestroy(v57, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v57, -1, -1);
      swift_slowDealloc(v56, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1(v75);
    }

  }
}

Swift::Bool __swiftcall MOSuggestionTipCoordinator.tipShouldShow(tipType:)(MomentsUIService::MOSuggestionTipType tipType)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  Swift::Bool result;
  _QWORD v24[8];
  uint64_t v25;
  uint64_t v26;

  v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Tips.Status?, Tips.Status?));
  v2 = __chkstk_darwin(v25);
  v24[4] = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v24[3] = (char *)v24 - v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Tips.Status?);
  v6 = __chkstk_darwin(v5);
  v24[2] = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v9 = __chkstk_darwin(v8);
  v24[5] = (char *)v24 - v10;
  v11 = __chkstk_darwin(v9);
  v24[1] = (char *)v24 - v12;
  v13 = __chkstk_darwin(v11);
  __chkstk_darwin(v13);
  v14 = type metadata accessor for Tips.Status(0);
  v26 = *(_QWORD *)(v14 - 8);
  v15 = __chkstk_darwin(v14);
  v24[6] = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v24[7] = (char *)v24 - v17;
  v18 = (void *)objc_opt_self(MOOnboardingManager);
  v19 = objc_msgSend(v18, "sharedInstance");
  v20 = objc_msgSend(v19, "onboardingFlowCompletionStatus");

  if (v20 != (id)1)
  {
    v21 = objc_msgSend(v18, "sharedInstance");
    objc_msgSend(v21, "onboardingFlowCompletionStatus");

  }
  v22 = objc_msgSend(v18, "sharedInstance");
  objc_msgSend(v22, "isOnboarded");

  __asm { BR              X11 }
  return result;
}

uint64_t sub_1000AEA6C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  char v11;

  if (v1)
  {
    *(_BYTE *)(v2 - 176) = (*(uint64_t (**)(void))(**(_QWORD **)(v2 - 312) + 144))() & 1;
    v3 = lazy protocol witness table accessor for type MOSuggestionOnboardingTip and conformance MOSuggestionOnboardingTip();
    v4 = *(_QWORD *)(v2 - 328);
    ((void (*)(ValueMetadata *, unint64_t))Tip.status.getter)(&type metadata for MOSuggestionOnboardingTip, v3);
    v5 = enum case for Tips.InvalidationReason.tipClosed(_:);
    v6 = ((uint64_t (*)(_QWORD))type metadata accessor for Tips.InvalidationReason)(0);
    v7 = *(_QWORD *)(v2 - 336);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v7, v5, v6);
    v8 = *(_QWORD *)(v2 - 304);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 104))(v7, enum case for Tips.Status.invalidated(_:), v0);
    v9 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes(&lazy protocol witness table cache variable for type Tips.Status and conformance Tips.Status, (uint64_t (*)(uint64_t))&type metadata accessor for Tips.Status, (uint64_t)&protocol conformance descriptor for Tips.Status);
    LOBYTE(v5) = dispatch thunk of static Equatable.== infix(_:_:)(v4, v7, v0, v9);
    v10 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v10(v7, v0);
    v10(v4, v0);
    v11 = v5 ^ 1;
  }
  else
  {
    v11 = 0;
  }
  return v11 & 1;
}

uint64_t *MOSuggestionTipCoordinator.deinit()
{
  uint64_t *v0;

  outlined destroy of weak MOSuggestionSheetInterstitialGridInteractionsDelegate?((uint64_t)(v0 + 2));
  outlined consume of MOSuggestionPrivacyTip?(v0[5], v0[6], v0[7], v0[8]);
  return v0;
}

double MOSuggestionTipCoordinator.__deallocating_deinit()
{
  uint64_t *v0;
  double result;

  outlined destroy of weak MOSuggestionSheetInterstitialGridInteractionsDelegate?((uint64_t)(v0 + 2));
  outlined consume of MOSuggestionPrivacyTip?(v0[5], v0[6], v0[7], v0[8]);
  *(_QWORD *)&result = swift_deallocClassInstance(v0, 75, 7).n128_u64[0];
  return result;
}

uint64_t outlined release of String(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return a1;
}

unint64_t lazy protocol witness table accessor for type MOSuggestionTipType and conformance MOSuggestionTipType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MOSuggestionTipType and conformance MOSuggestionTipType;
  if (!lazy protocol witness table cache variable for type MOSuggestionTipType and conformance MOSuggestionTipType)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MOSuggestionTipType, &type metadata for MOSuggestionTipType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionTipType and conformance MOSuggestionTipType);
  }
  return result;
}

uint64_t sub_1000AF3F4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 120))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1000AF424(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 128);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t sub_1000AF464@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 144))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1000AF498(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 152))(*a1);
}

uint64_t sub_1000AF4C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD v4[5];

  (*(void (**)(_QWORD *__return_ptr))(**(_QWORD **)a1 + 168))(v4);
  return outlined init with take of Date?((uint64_t)v4, a2, &demangling cache variable for type metadata for MOSuggestionPrivacyTip?);
}

uint64_t sub_1000AF510(uint64_t a1, uint64_t a2)
{
  uint64_t (*v3)(_BYTE *);
  _BYTE v5[40];

  outlined init with take of Date?(a1, (uint64_t)v5, &demangling cache variable for type metadata for MOSuggestionPrivacyTip?);
  v3 = *(uint64_t (**)(_BYTE *))(**(_QWORD **)a2 + 176);
  outlined retain of MOSuggestionPrivacyTip?((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of MOSuggestionPrivacyTip?);
  return v3(v5);
}

uint64_t sub_1000AF568@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 192))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1000AF59C(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 200))(*a1);
}

uint64_t sub_1000AF5C8@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 216))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1000AF5FC(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 224))(*a1);
}

uint64_t storeEnumTagSinglePayload for MOSuggestionTipType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1000AF674 + 4 * byte_1001A1355[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1000AF6A8 + 4 * asc_1001A1350[v4]))();
}

uint64_t sub_1000AF6A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000AF6B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000AF6B8);
  return result;
}

uint64_t sub_1000AF6C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000AF6CCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1000AF6D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000AF6D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MOSuggestionTipType()
{
  return &type metadata for MOSuggestionTipType;
}

uint64_t type metadata accessor for MOSuggestionTipCoordinator()
{
  return objc_opt_self(_TtC16MomentsUIService26MOSuggestionTipCoordinator);
}

uint64_t outlined init with take of Tip(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1000AF72C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000AF750()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  __swift_destroy_boxed_opaque_existential_1(v0 + 4);
  swift_release(v0[9]);
  return swift_deallocObject(v0, 80, 7);
}

uint64_t partial apply for closure #1 in MOSuggestionTipCoordinator.observeTipStatusUpdates(tip:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (uint64_t)(v1 + 4);
  v7 = v1[9];
  v8 = (_QWORD *)swift_task_alloc(dword_10020A19C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = partial apply for closure #1 in MOSuggestionTipCoordinator.observeTipStatusUpdates(tip:);
  return closure #1 in MOSuggestionTipCoordinator.observeTipStatusUpdates(tip:)(a1, v4, v5, v6, v7);
}

uint64_t partial apply for closure #1 in MOSuggestionTipCoordinator.observeTipStatusUpdates(tip:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v0;
  v1 = *(_QWORD *)(v4 + 16);
  v2 = *v0;
  v4 = v2;
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5TQ0_;
  return v6(a1);
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5TQ0_()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1000AF8F8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5TA(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_10020A1AC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = partial apply for closure #1 in MOSuggestionTipCoordinator.observeTipStatusUpdates(tip:);
  return ((uint64_t (*)(uint64_t, int *))((char *)&_sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5Tu
                                                 + _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5Tu))(a1, v4);
}

uint64_t sub_1000AF98C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v1 = type metadata accessor for Tips.Status(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = (v5 + 7) & 0xFFFFFFFFFFFFF8;
  v8 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v7));
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + v8));
  return swift_deallocObject(v0, v8 + 40, v6);
}

void partial apply for closure #1 in MOSuggestionTipCoordinator.statusDidChange(status:for:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for Tips.Status(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  closure #1 in MOSuggestionTipCoordinator.statusDidChange(status:for:)(v0 + v2, *(_QWORD *)(v0 + ((v2 + *(_QWORD *)(v1 + 64) + 7) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v0 + ((v2 + *(_QWORD *)(v1 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8), v0 + ((v2 + *(_QWORD *)(v1 + 64) + 23) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_18(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t MOEventBundle.annotationState.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  id v19;
  _QWORD *v20;
  id v21;
  id v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  os_log_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t inited;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  NSString v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  NSString v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  void *v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  id v62;
  NSString v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  NSString v68;
  id v69;
  os_log_t v70;
  int v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE v76[48];
  _BYTE v77[56];

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(v0, "suggestionEngagementEvents");
  if (!v5)
    return 1;
  v6 = v5;
  if ((uint64_t)objc_msgSend(v5, "count") < 1)
  {

    return 1;
  }
  if (serverManager._clientConnections != (NSMutableDictionary *)-1)
    swift_once(&serverManager._clientConnections, one-time initialization function for shared);
  v7 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v7, (uint64_t)static MOAngelLogger.shared);
  v8 = v6;
  v9 = v0;
  v10 = v8;
  v11 = v9;
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.debug.getter();
  v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    v15 = swift_slowAlloc(22, -1);
    v16 = swift_slowAlloc(8, -1);
    v69 = v11;
    v17 = (_QWORD *)v16;
    v72 = swift_slowAlloc(32, -1);
    v74 = (uint64_t)v10;
    v75 = v72;
    *(_DWORD *)v15 = 138412546;
    v70 = v12;
    v71 = v14;
    v18 = v10;
    *(_QWORD *)&v73 = v10;
    v19 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v74, &v75, v15 + 4);
    *v17 = v6;
    v20 = v17;

    *(_WORD *)(v15 + 12) = 2080;
    v21 = v69;
    v22 = objc_msgSend(v69, "bundleIdentifier");
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v22);

    v23 = lazy protocol witness table accessor for type UUID and conformance UUID();
    v24 = dispatch thunk of CustomStringConvertible.description.getter(v1, v23);
    v26 = v25;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v74 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v26, &v75);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v74, &v75, v15 + 14);

    v27 = v26;
    v10 = (id)v73;
    swift_bridgeObjectRelease(v27);
    v28 = v70;
    _os_log_impl((void *)&_mh_execute_header, v70, (os_log_type_t)v71, "[AnnotationState] Engagement events=%@ id=%s", (uint8_t *)v15, 0x16u);
    v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy(v20, 1, v29);
    swift_slowDealloc(v20, -1, -1);
    v30 = v72;
    swift_arrayDestroy(v72, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1, -1);
    swift_slowDealloc(v15, -1, -1);

  }
  else
  {

  }
  v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MOSuggestionEngagementEvent>);
  inited = swift_initStackObject(v32, v77);
  v73 = xmmword_10019EEE0;
  *(_OWORD *)(inited + 16) = xmmword_10019EEE0;
  v34 = (void *)MOSuggestionEngagementEventHidden;
  *(_QWORD *)(inited + 32) = MOSuggestionEngagementEventHidden;
  v35 = inited + 32;
  v36 = (void *)MOSuggestionEngagementEventDeleted;
  *(_QWORD *)(inited + 40) = MOSuggestionEngagementEventDeleted;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
  v38 = v37;
  v39 = v34;
  v40 = v36;
  v41 = v39;
  v42 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRetain(inited);
  LODWORD(v38) = objc_msgSend(v10, "containsObject:", v42, swift_bridgeObjectRelease(v38).n128_f64[0]);

  if ((_DWORD)v38)
  {
    swift_bridgeObjectRelease(inited);
LABEL_13:
    swift_setDeallocating(inited);
    v48 = *(_QWORD *)(inited + 16);
    type metadata accessor for MOSuggestionEngagementEvent(0);
    swift_arrayDestroy(v35, v48, v49);

    return 0;
  }
  v43 = *(void **)(inited + 40);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
  v45 = v44;
  v46 = v43;
  v47 = String._bridgeToObjectiveC()();
  LOBYTE(v45) = objc_msgSend(v10, "containsObject:", v47, swift_bridgeObjectRelease(v45).n128_f64[0]);
  swift_bridgeObjectRelease(inited);

  if ((v45 & 1) != 0)
    goto LABEL_13;
  swift_setDeallocating(inited);
  v50 = *(_QWORD *)(inited + 16);
  type metadata accessor for MOSuggestionEngagementEvent(0);
  v52 = v51;
  swift_arrayDestroy(v35, v50, v51);
  v53 = swift_initStackObject(v32, v76);
  *(_OWORD *)(v53 + 16) = v73;
  v54 = (void *)MOSuggestionEngagementEventSelected;
  *(_QWORD *)(v53 + 32) = MOSuggestionEngagementEventSelected;
  v55 = v53 + 32;
  v56 = v10;
  v57 = (void *)MOSuggestionEngagementEventQuickAddEntry;
  *(_QWORD *)(v53 + 40) = MOSuggestionEngagementEventQuickAddEntry;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
  v59 = v58;
  v60 = v54;
  v61 = v57;
  v62 = v60;
  v63 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRetain(v53);
  LOBYTE(v59) = objc_msgSend(v56, "containsObject:", v63, swift_bridgeObjectRelease(v59).n128_f64[0]);

  if ((v59 & 1) == 0)
  {
    v64 = *(void **)(v53 + 40);
    static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
    v66 = v65;
    v67 = v64;
    v68 = String._bridgeToObjectiveC()();
    LOBYTE(v66) = objc_msgSend(v56, "containsObject:", v68, swift_bridgeObjectRelease(v66).n128_f64[0]);

    swift_bridgeObjectRelease(v53);
    if ((v66 & 1) != 0)
      goto LABEL_17;
    swift_setDeallocating(v53);
    swift_arrayDestroy(v55, *(_QWORD *)(v53 + 16), v52);
    return 1;
  }

  swift_bridgeObjectRelease(v53);
LABEL_17:
  swift_setDeallocating(v53);
  swift_arrayDestroy(v55, *(_QWORD *)(v53 + 16), v52);
  return 2;
}

Swift::Bool __swiftcall NSMutableSet.containsAnyOf(_:)(Swift::OpaquePointer a1)
{
  void *v1;
  char *v2;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSString v9;

  v2 = (char *)*((_QWORD *)a1._rawValue + 2);
  if (v2)
  {
    swift_bridgeObjectRetain(a1._rawValue);
    v4 = 0;
    v5 = v2 - 1;
    do
    {
      v2 = (char *)*((_QWORD *)a1._rawValue + (_QWORD)v4 + 4);
      static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
      v7 = v6;
      v8 = v2;
      v9 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v7);
      LOBYTE(v2) = objc_msgSend(v1, "containsObject:", v9);

      if ((v2 & 1) != 0)
        break;
    }
    while (v5 != v4++);
    swift_bridgeObjectRelease(a1._rawValue);
  }
  return (char)v2;
}

unint64_t lazy protocol witness table accessor for type UUID and conformance UUID()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type UUID and conformance UUID;
  if (!lazy protocol witness table cache variable for type UUID and conformance UUID)
  {
    v1 = type metadata accessor for UUID(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for UUID, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID);
  }
  return result;
}

{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type UUID and conformance UUID;
  if (!lazy protocol witness table cache variable for type UUID and conformance UUID)
  {
    v1 = type metadata accessor for UUID(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for UUID, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type MOEventBundleAnnotationState and conformance MOEventBundleAnnotationState()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MOEventBundleAnnotationState and conformance MOEventBundleAnnotationState;
  if (!lazy protocol witness table cache variable for type MOEventBundleAnnotationState and conformance MOEventBundleAnnotationState)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MOEventBundleAnnotationState, &type metadata for MOEventBundleAnnotationState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MOEventBundleAnnotationState and conformance MOEventBundleAnnotationState);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MOEventBundleAnnotationState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1000B0208 + 4 * byte_1001A1465[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1000B023C + 4 * asc_1001A1460[v4]))();
}

uint64_t sub_1000B023C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000B0244(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000B024CLL);
  return result;
}

uint64_t sub_1000B0258(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000B0260);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1000B0264(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000B026C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MOEventBundleAnnotationState()
{
  return &type metadata for MOEventBundleAnnotationState;
}

uint64_t specialized _bridgeAnythingToObjectiveC<A>(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a1;
  v3[1] = a2;
  swift_bridgeObjectRetain(a2);
  return _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(v3, &type metadata for String);
}

uint64_t MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:)(Swift::Bool a1, Swift::Int a2, MomentsUIService::SuggestionCellStyle a3, Swift::Bool a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, _QWORD, id, uint64_t, void (*)(uint64_t), uint64_t);
  id v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v48;
  uint64_t v49;

  v6 = (unint64_t)MOSuggestionCollectionViewCellViewModel.prioritizedAssetReferences(previewOnly:previewMax:style:typeSorted:)(a1, a2, a3, a4);
  if (!v6)
    return 0;
  v7 = v6;
  v8 = (unint64_t)v6 >> 62;
  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v38 = v6;
    else
      v38 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v9 = _CocoaArrayWrapper.endIndex.getter(v38);
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    v9 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  specialized MOSuggestionCollectionViewCellViewModel.assetSizes(style:assetCount:)(a3);
  if (!v10)
  {
    swift_bridgeObjectRelease(v7);
    return 0;
  }
  v11 = v10;
  v43 = swift_allocObject(&unk_1001E8778, 17, 7);
  *(_BYTE *)(v43 + 16) = 0;
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v12 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v12, (uint64_t)static MOAngelLogger.assets);
  swift_bridgeObjectRetain_n(v11, 2);
  v13 = swift_bridgeObjectRetain(v7);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.debug.getter();
  v44 = v11;
  if (os_log_type_enabled(v14, v15))
  {
    v16 = v9;
    v17 = swift_slowAlloc(32, -1);
    v18 = swift_slowAlloc(32, -1);
    *(_DWORD *)v17 = 134218498;
    v48 = a3;
    v49 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49, v17 + 4);
    *(_WORD *)(v17 + 12) = 2048;
    v48 = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49, v17 + 14);
    swift_bridgeObjectRelease(v7);
    *(_WORD *)(v17 + 22) = 2080;
    v19 = Array.debugDescription.getter(v11, &type metadata for MOSuggestionAssetTileSize);
    v21 = v20;
    v48 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v20, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49, v17 + 24);
    swift_bridgeObjectRelease_n(v11, 2);
    swift_bridgeObjectRelease(v21);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "[MOSuggestionCollectionViewCellViewModel] style: %ld, assetReferencesCount: %ld, assetSizes: %s", (uint8_t *)v17, 0x20u);
    swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    v22 = v17;
    v9 = v16;
    swift_slowDealloc(v22, -1, -1);

    if (v8)
      goto LABEL_9;
LABEL_28:
    v25 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(v7);
    if (v25)
      goto LABEL_13;
    goto LABEL_29;
  }

  swift_bridgeObjectRelease_n(v11, 2);
  swift_bridgeObjectRelease(v7);
  if (!v8)
    goto LABEL_28;
LABEL_9:
  if (v7 < 0)
    v23 = v7;
  else
    v23 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  result = _CocoaArrayWrapper.endIndex.getter(v23);
  v25 = result;
  if (!result)
  {
LABEL_29:
    swift_release(v43);
    swift_bridgeObjectRelease(v11);
    swift_bridgeObjectRelease_n(v7, 2);
    return v9;
  }
LABEL_13:
  if (v25 < 1)
  {
    __break(1u);
  }
  else if ((unint64_t)(v25 - 1) < *(_QWORD *)(v11 + 16))
  {
    v39 = v9;
    v26 = 0;
    v40 = v7 & 0xC000000000000001;
    v41 = v25;
    v42 = v7;
    do
    {
      if (v40)
      {
        v27 = specialized _ArrayBuffer._getElementSlowPath(_:)(v26, v7);
      }
      else
      {
        v27 = *(_QWORD *)(v7 + 8 * v26 + 32);
        swift_retain(v27);
      }
      if (one-time initialization token for shared != -1)
        swift_once(&one-time initialization token for shared, one-time initialization function for shared);
      v28 = static MOSuggestionAssetCacheManager.shared;
      v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      v30 = swift_allocObject(v29, 40, 7);
      *(_OWORD *)(v30 + 16) = xmmword_10019EDA0;
      *(_QWORD *)(v30 + 32) = v27;
      v49 = v30;
      specialized Array._endMutation()(v30);
      v31 = v49;
      v32 = *(unsigned __int8 *)(v11 + v26 + 32);
      v33 = swift_allocObject(&unk_1001E87A0, 24, 7);
      swift_weakInit(v33 + 16);
      v34 = swift_allocObject(&unk_1001E87C8, 72, 7);
      *(_QWORD *)(v34 + 16) = v33;
      *(_QWORD *)(v34 + 24) = v26;
      *(_QWORD *)(v34 + 32) = a5;
      *(_QWORD *)(v34 + 40) = a6;
      *(_BYTE *)(v34 + 48) = a3;
      *(_QWORD *)(v34 + 56) = v7;
      *(_QWORD *)(v34 + 64) = v43;
      v35 = one-time initialization token for defaultQueue;
      swift_bridgeObjectRetain(v7);
      swift_retain(v27);
      swift_retain(v33);
      swift_retain(a6);
      swift_retain(v43);
      if (v35 != -1)
        swift_once(&one-time initialization token for defaultQueue, one-time initialization function for defaultQueue);
      ++v26;
      v36 = *(void (**)(uint64_t, _QWORD, id, uint64_t, void (*)(uint64_t), uint64_t))(*(_QWORD *)v28 + 232);
      v37 = (id)static MOSuggestionAssetCacheManager.defaultQueue;
      v36(v31, 0, v37, v32, partial apply for closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:), v34);
      swift_release(v33);
      swift_release(v34);

      swift_bridgeObjectRelease(v31);
      swift_release(v27);
      v7 = v42;
      v11 = v44;
    }
    while (v41 != v26);
    swift_release(v43);
    swift_bridgeObjectRelease(v44);
    swift_bridgeObjectRelease_n(v42, 2);
    return v39;
  }
  __break(1u);
  return result;
}

Swift::OpaquePointer_optional __swiftcall MOSuggestionCollectionViewCellViewModel.prioritizedAssetReferences(previewOnly:previewMax:style:typeSorted:)(Swift::Bool previewOnly, Swift::Int previewMax, MomentsUIService::SuggestionCellStyle style, Swift::Bool typeSorted)
{
  uint64_t rawValue;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t (*v12)(__n128);
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t (*v38)(__n128);
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  char v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  char v59;
  MomentsUIService::SuggestionCellStyle v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  uint8_t *v73;
  const char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  MomentsUIService::SuggestionCellStyle v82;
  uint64_t v83;
  void *v84;
  Swift::OpaquePointer_optional result;

  if (previewOnly)
  {
    result = MOEventBundle.orderedAssetReferencesForPreview(max:)(previewMax);
    rawValue = (uint64_t)result.value._rawValue;
    goto LABEL_8;
  }
  result = MOEventBundle.orderedAssetReferencesForPreview(max:)(13);
  rawValue = (uint64_t)result.value._rawValue;
  if (!typeSorted)
  {
LABEL_8:
    if (rawValue)
      goto LABEL_9;
LABEL_21:
    result.value._rawValue = 0;
    return result;
  }
  if (!result.value._rawValue)
    goto LABEL_21;
  if ((unint64_t)result.value._rawValue >> 62)
  {
    v81 = swift_bridgeObjectRetain(result.value._rawValue);
    v7 = specialized _copyCollectionToContiguousArray<A>(_:)(v81);
    swift_bridgeObjectRelease(rawValue);
  }
  else
  {
    v7 = (void *)((uint64_t)result.value._rawValue & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(result.value._rawValue);
  }
  v84 = v7;
  specialized MutableCollection<>.sort(by:)((uint64_t *)&v84);
  swift_bridgeObjectRelease(rawValue);
  rawValue = (uint64_t)v84;
LABEL_9:
  v84 = (void *)rawValue;
  v8 = (unint64_t)rawValue >> 62;
  if ((unint64_t)rawValue >> 62)
  {
    if (rawValue < 0)
      v80 = rawValue;
    else
      v80 = rawValue & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(rawValue, 2);
    v9 = _CocoaArrayWrapper.endIndex.getter(v80);
    if (!v9)
      goto LABEL_34;
  }
  else
  {
    v9 = *(_QWORD *)((rawValue & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(rawValue, 2);
    if (!v9)
      goto LABEL_34;
  }
  if ((rawValue & 0xC000000000000001) != 0)
  {
    v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, rawValue);
  }
  else
  {
    v10 = *(_QWORD *)(rawValue + 32);
    v11 = swift_retain(v10);
  }
  v12 = *(uint64_t (**)(__n128))(*(_QWORD *)v10 + 120);
  v13 = (void *)v12(v11);
  v14 = MOSuggestionAssetsTypeMultiPinMap;
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v17 = v16;
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  if (v15 == v18 && v17 == v19)
  {

    swift_bridgeObjectRelease_n(v17, 2);
  }
  else
  {
    v21 = v19;
    v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, v18, v19, 0);

    swift_bridgeObjectRelease(v17);
    v23 = swift_bridgeObjectRelease(v21);
    if ((v22 & 1) == 0)
    {
      v24 = (void *)((uint64_t (*)(uint64_t))v12)(v23);
      v25 = MOSuggestionAssetsTypeGenericMap;
      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
      v28 = v27;
      v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      v31 = v29;
      if (v26 == v30 && v28 == v29)
      {
        swift_release(v10);

        swift_bridgeObjectRelease_n(v28, 2);
        goto LABEL_28;
      }
      v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v28, v30, v29, 0);
      swift_release(v10);

      swift_bridgeObjectRelease(v28);
      swift_bridgeObjectRelease(v31);
      if ((v34 & 1) != 0)
      {
LABEL_28:
        swift_bridgeObjectRelease(rawValue);
        if (style != MomentsUIService_SuggestionCellStyle_halfWidth)
        {
          if (style)
            goto LABEL_30;
LABEL_25:
          v32 = 0;
          if (!v8)
          {
LABEL_26:
            v33 = *(_QWORD *)((rawValue & 0xFFFFFFFFFFFFF8) + 0x10);
            goto LABEL_63;
          }
LABEL_59:
          if (rawValue < 0)
            v61 = rawValue;
          else
            v61 = rawValue & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(rawValue);
          v33 = _CocoaArrayWrapper.endIndex.getter(v61);
          swift_bridgeObjectRelease(rawValue);
LABEL_63:
          swift_bridgeObjectRelease(rawValue);
          if (v33 >= 5 && v32 <= 4)
          {
            if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
LABEL_104:
              swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
            v62 = type metadata accessor for Logger(0);
            v63 = __swift_project_value_buffer(v62, (uint64_t)static MOAngelLogger.assets);
            v64 = Logger.logObject.getter(v63);
            v65 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v64, v65))
            {
              v66 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v66 = 0;
              _os_log_impl((void *)&_mh_execute_header, v64, v65, "[MOEventBundle] (Asset Prioritization Special Case) Adjusting map position to fix in top right (small), FULLWIDTH", v66, 2u);
              swift_slowDealloc(v66, -1, -1);
            }

            v67 = v32;
            v68 = 2;
            goto LABEL_94;
          }
          if (v33 == 4)
          {
            if (v32 > 2)
              goto LABEL_95;
            if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
              swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
            v75 = type metadata accessor for Logger(0);
            v76 = __swift_project_value_buffer(v75, (uint64_t)static MOAngelLogger.assets);
            v71 = Logger.logObject.getter(v76);
            v72 = static os_log_type_t.default.getter();
            if (!os_log_type_enabled(v71, v72))
              goto LABEL_93;
            v73 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v73 = 0;
            v74 = "[MOEventBundle] (Asset Prioritization Special Case) Adjusting map position to fix in top right (medium"
                  "Horiziontal), FULLWIDTH";
          }
          else
          {
            if (v33 != 3 || v32 == 2)
              goto LABEL_95;
            if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
              swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
            v69 = type metadata accessor for Logger(0);
            v70 = __swift_project_value_buffer(v69, (uint64_t)static MOAngelLogger.assets);
            v71 = Logger.logObject.getter(v70);
            v72 = static os_log_type_t.default.getter();
            if (!os_log_type_enabled(v71, v72))
              goto LABEL_93;
            v73 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v73 = 0;
            v74 = "[MOEventBundle] (Asset Prioritization Special Case) Adjusting map position to fix in top right (medium"
                  "Horiziontal top), FULLWIDTH";
          }
          goto LABEL_92;
        }
LABEL_31:
        v32 = 0;
        if (!v8)
        {
LABEL_32:
          v35 = *(_QWORD *)((rawValue & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_86:
          swift_bridgeObjectRelease(rawValue);
          if (v35 < 4 || v32 > 3)
            goto LABEL_95;
          if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
            swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
          v78 = type metadata accessor for Logger(0);
          v79 = __swift_project_value_buffer(v78, (uint64_t)static MOAngelLogger.assets);
          v71 = Logger.logObject.getter(v79);
          v72 = static os_log_type_t.default.getter();
          if (!os_log_type_enabled(v71, v72))
            goto LABEL_93;
          v73 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v73 = 0;
          v74 = "[MOEventBundle] (Asset Prioritization Special Case) Adjusting map position to fix in top right (small), HALFWIDTH";
LABEL_92:
          _os_log_impl((void *)&_mh_execute_header, v71, v72, v74, v73, 2u);
          swift_slowDealloc(v73, -1, -1);
LABEL_93:

          v67 = v32;
          v68 = 1;
LABEL_94:
          specialized MutableCollection.swapAt(_:_:)(v67, v68);
          goto LABEL_95;
        }
LABEL_82:
        if (rawValue < 0)
          v77 = rawValue;
        else
          v77 = rawValue & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(rawValue);
        v35 = _CocoaArrayWrapper.endIndex.getter(v77);
        swift_bridgeObjectRelease(rawValue);
        goto LABEL_86;
      }
      if (v9 != 1)
      {
        v32 = 5;
        v82 = style;
        while (1)
        {
          v83 = v32 - 4;
          if ((rawValue & 0xC000000000000001) != 0)
          {
            v36 = specialized _ArrayBuffer._getElementSlowPath(_:)(v32 - 4, rawValue);
          }
          else
          {
            v36 = *(_QWORD *)(rawValue + 8 * v32);
            v37 = swift_retain(v36);
          }
          v38 = *(uint64_t (**)(__n128))(*(_QWORD *)v36 + 120);
          v39 = (void *)v38(v37);
          v40 = MOSuggestionAssetsTypeMultiPinMap;
          v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
          v43 = v42;
          v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
          if (v41 == v44 && v43 == v45)
          {

            swift_bridgeObjectRelease_n(v43, 2);
LABEL_53:
            swift_bridgeObjectRelease(rawValue);
            swift_release(v36);
            v32 -= 4;
            v60 = v82;
            goto LABEL_56;
          }
          v47 = v45;
          v48 = _stringCompareWithSmolCheck(_:_:expecting:)(v41, v43, v44, v45, 0);

          swift_bridgeObjectRelease(v43);
          v49 = swift_bridgeObjectRelease(v47);
          if ((v48 & 1) != 0)
            goto LABEL_53;
          v50 = (void *)((uint64_t (*)(uint64_t))v38)(v49);
          v51 = MOSuggestionAssetsTypeGenericMap;
          v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
          v54 = v53;
          v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
          if (v52 == v55 && v54 == v56)
            break;
          v58 = v56;
          v59 = _stringCompareWithSmolCheck(_:_:expecting:)(v52, v54, v55, v56, 0);
          swift_release(v36);

          swift_bridgeObjectRelease(v54);
          swift_bridgeObjectRelease(v58);
          v60 = v82;
          if ((v59 & 1) != 0)
            goto LABEL_55;
          if (__OFADD__(v83, 1))
          {
            __break(1u);
            goto LABEL_104;
          }
          ++v32;
          if (v83 + 1 == v9)
            goto LABEL_34;
        }
        swift_release(v36);

        swift_bridgeObjectRelease_n(v54, 2);
        v60 = v82;
LABEL_55:
        swift_bridgeObjectRelease(rawValue);
        v32 -= 4;
LABEL_56:
        if (v60 != MomentsUIService_SuggestionCellStyle_halfWidth)
        {
          if (v60)
            goto LABEL_30;
          if (!v8)
            goto LABEL_26;
          goto LABEL_59;
        }
        if (!v8)
          goto LABEL_32;
        goto LABEL_82;
      }
LABEL_34:
      swift_bridgeObjectRelease_n(rawValue, 2);
      goto LABEL_95;
    }
  }
  swift_bridgeObjectRelease(rawValue);
  swift_release(v10);
  if (style == MomentsUIService_SuggestionCellStyle_halfWidth)
    goto LABEL_31;
  if (style == MomentsUIService_SuggestionCellStyle_fullWidth)
    goto LABEL_25;
LABEL_30:
  swift_bridgeObjectRelease(rawValue);
LABEL_95:
  result.value._rawValue = v84;
  return result;
}

uint64_t specialized Array.append<A>(contentsOf:)(uint64_t a1)
{
  return specialized Array.append<A>(contentsOf:)(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))specialized Array._copyContents(initializing:));
}

{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v4 < 0)
    v17 = *v1;
  else
    v17 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v1);
  v5 = _CocoaArrayWrapper.endIndex.getter(v17);
  swift_bridgeObjectRelease(v4);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_29;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if ((unint64_t)v4 >> 62)
    goto LABEL_31;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain(v4);
    v4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v5, v9, 1, v4);
    swift_bridgeObjectRelease(*v1);
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = specialized Array._copyContents(initializing:)(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v4 < 0)
      v18 = v4;
    else
      v18 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v9 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v4);
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v15);
  }
  __break(1u);
  return result;
}

{
  return specialized Array.append<A>(contentsOf:)(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))specialized Array._copyContents(initializing:));
}

uint64_t specialized Array.append<A>(contentsOf:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;

  v9 = a4 >> 1;
  v10 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_11;
  v6 = a3;
  v7 = a2;
  v4 = a1;
  v8 = *v5;
  if ((unint64_t)*v5 >> 62)
    goto LABEL_12;
  v11 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  v12 = v11 + v10;
  if (!__OFADD__(v11, v10))
    goto LABEL_4;
LABEL_17:
  __break(1u);
LABEL_18:
  v14 = 1;
LABEL_19:
  if ((unint64_t)v8 >> 62)
  {
    if (v8 < 0)
      v27 = v8;
    else
      v27 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v18 = _CocoaArrayWrapper.endIndex.getter(v27);
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    v18 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v18 <= v12)
    v18 = v12;
  swift_bridgeObjectRetain(v8);
  v8 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v14, v18, 1, v8);
  swift_bridgeObjectRelease(*v5);
  *v5 = v8;
  v15 = v8 & 0xFFFFFFFFFFFFFF8;
  if (v9 == v6)
  {
    while (v10 > 0)
    {
      __break(1u);
LABEL_11:
      __break(1u);
LABEL_12:
      if (v8 < 0)
        v16 = v8;
      else
        v16 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v8);
      v17 = _CocoaArrayWrapper.endIndex.getter(v16);
      swift_bridgeObjectRelease(v8);
      v12 = v17 + v10;
      if (__OFADD__(v17, v10))
        goto LABEL_17;
LABEL_4:
      v8 = *v5;
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v5);
      *v5 = v8;
      v14 = 0;
      if (!isUniquelyReferenced_nonNull_bridgeObject || v8 < 0 || (v8 & 0x4000000000000000) != 0)
        goto LABEL_19;
      v15 = v8 & 0xFFFFFFFFFFFFFF8;
      if (v12 > *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        goto LABEL_18;
      if (v9 != v6)
        goto LABEL_24;
    }
    goto LABEL_31;
  }
LABEL_24:
  v19 = *(_QWORD *)(v15 + 16);
  if ((*(_QWORD *)(v15 + 24) >> 1) - v19 < v10)
  {
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if ((v10 & 0x8000000000000000) == 0)
  {
    v20 = v15 + 8 * v19 + 32;
    v21 = v7 + 8 * v6;
    if (v21 < v20 + 8 * v10 && v20 < v21 + 8 * v10)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
      goto LABEL_40;
    }
    type metadata accessor for MOSuggestionCollectionViewCellViewModel();
    swift_arrayInitWithCopy(v20);
    if (!v10)
    {
LABEL_31:
      v25 = swift_unknownObjectRelease(v4);
      return specialized Array._endMutation()(v25);
    }
    v22 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v23 = __OFADD__(v22, v10);
    v24 = v22 + v10;
    if (!v23)
    {
      *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v24;
      goto LABEL_31;
    }
    goto LABEL_37;
  }
LABEL_38:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t specialized Array.append<A>(contentsOf:)(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, uint64_t))
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v18 = a1;
    else
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v6 < 0)
    v19 = *v2;
  else
    v19 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v2);
  v7 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease(v6);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_29;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v2);
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if ((unint64_t)v6 >> 62)
    goto LABEL_31;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain(v6);
    v6 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v7, v11, 1, v6);
    swift_bridgeObjectRelease(*v2);
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v6 < 0)
      v20 = v6;
    else
      v20 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v11 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease(v6);
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    v17 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v17);
  }
  __break(1u);
  return result;
}

void specialized Array.append<A>(contentsOf:)(uint64_t a1)
{
  double **v1;
  uint64_t v2;
  double *v3;
  int64_t v4;
  int64_t v5;
  double *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *((_QWORD *)*v1 + 2);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (double *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= *((_QWORD *)v3 + 3) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *((_QWORD *)v3 + 2);
  if ((*((_QWORD *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[14 * v8 + 4];
  if (a1 + 32 < v9 + 112 * v2 && v9 < a1 + 32 + 112 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v11 = *((_QWORD *)v3 + 2);
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    *((_QWORD *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

uint64_t key path getter for MOSuggestionCollectionViewModel.reloadCollectionViewHandler : MOSuggestionCollectionViewModel@<X0>(uint64_t a1@<X0>, uint64_t (**a2)(unsigned __int8 *a1, unsigned __int8 *a2)@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(unsigned __int8 *, unsigned __int8 *);

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 328))();
  if (result)
  {
    v5 = result;
    v6 = v4;
    result = swift_allocObject(&unk_1001E8C68, 32, 7);
    *(_QWORD *)(result + 16) = v5;
    *(_QWORD *)(result + 24) = v6;
    v7 = partial apply for thunk for @escaping @callee_guaranteed (@unowned Bool, @unowned Bool) -> ();
  }
  else
  {
    v7 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(unsigned __int8 *, unsigned __int8 *))result;
  return result;
}

uint64_t key path setter for MOSuggestionCollectionViewModel.reloadCollectionViewHandler : MOSuggestionCollectionViewModel(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(char, char);
  uint64_t (*v7)(_QWORD, uint64_t);

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject(&unk_1001E8C40, 32, 7);
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Bool, @in_guaranteed Bool) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)a2 + 336);
  outlined copy of (@escaping @callee_guaranteed () -> ())?(v3, v4);
  return v7(v6, v5);
}

uint64_t MOSuggestionCollectionViewModel.reloadCollectionViewHandler.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 80, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 80);
  outlined copy of (@escaping @callee_guaranteed () -> ())?(v1, *(_QWORD *)(v0 + 88));
  return v1;
}

uint64_t MOSuggestionCollectionViewModel.reloadCollectionViewHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  swift_beginAccess(v2 + 80, v8, 1, 0);
  v5 = *(_QWORD *)(v2 + 80);
  v6 = *(_QWORD *)(v2 + 88);
  *(_QWORD *)(v2 + 80) = a1;
  *(_QWORD *)(v2 + 88) = a2;
  return outlined consume of (@escaping @callee_guaranteed () -> ())?(v5, v6);
}

uint64_t (*MOSuggestionSheetAssetViewModel.evergreenData.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + 80, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t key path getter for MOSuggestionCollectionViewModel.reloadCollectionViewIndexHandler : MOSuggestionCollectionViewModel@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 352))();
  if (result)
  {
    v5 = result;
    v6 = v4;
    result = swift_allocObject(&unk_1001E8C18, 32, 7);
    *(_QWORD *)(result + 16) = v5;
    *(_QWORD *)(result + 24) = v6;
    v7 = partial apply for thunk for @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> ();
  }
  else
  {
    v7 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())result;
  return result;
}

uint64_t key path setter for MOSuggestionCollectionViewModel.reloadCollectionViewIndexHandler : MOSuggestionCollectionViewModel(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t (*v7)(uint64_t (*)(), uint64_t);

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject(&unk_1001E8BF0, 32, 7);
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> ();
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(uint64_t (**)(uint64_t (*)(), uint64_t))(**(_QWORD **)a2 + 360);
  outlined copy of (@escaping @callee_guaranteed () -> ())?(v3, v4);
  return v7(v6, v5);
}

uint64_t MOSuggestionCollectionViewModel.reloadCollectionViewIndexHandler.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 96, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 96);
  outlined copy of (@escaping @callee_guaranteed () -> ())?(v1, *(_QWORD *)(v0 + 104));
  return v1;
}

uint64_t MOSuggestionCollectionViewModel.reloadCollectionViewIndexHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  swift_beginAccess(v2 + 96, v8, 1, 0);
  v5 = *(_QWORD *)(v2 + 96);
  v6 = *(_QWORD *)(v2 + 104);
  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = a2;
  return outlined consume of (@escaping @callee_guaranteed () -> ())?(v5, v6);
}

uint64_t (*MOSuggestionSheetAssetViewModel.mediaAssetID.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + 96, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t key path getter for MOSuggestionCollectionViewModel.bundleLoadingChangedHandler : MOSuggestionCollectionViewModel@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 376))();
  if (result)
  {
    v5 = result;
    v6 = v4;
    result = swift_allocObject(&unk_1001E8BC8, 32, 7);
    *(_QWORD *)(result + 16) = v5;
    *(_QWORD *)(result + 24) = v6;
    v7 = partial apply for thunk for @escaping @callee_guaranteed () -> (@out ());
  }
  else
  {
    v7 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())result;
  return result;
}

uint64_t key path setter for MOSuggestionCollectionViewModel.bundleLoadingChangedHandler : MOSuggestionCollectionViewModel(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t (*v7)(uint64_t (*)(), uint64_t);

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject(&unk_1001E8BA0, 32, 7);
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed () -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(uint64_t (**)(uint64_t (*)(), uint64_t))(**(_QWORD **)a2 + 384);
  outlined copy of (@escaping @callee_guaranteed () -> ())?(v3, v4);
  return v7(v6, v5);
}

uint64_t MOSuggestionCollectionViewModel.bundleLoadingChangedHandler.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 112, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 112);
  outlined copy of (@escaping @callee_guaranteed () -> ())?(v1, *(_QWORD *)(v0 + 120));
  return v1;
}

uint64_t MOSuggestionCollectionViewModel.bundleLoadingChangedHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  swift_beginAccess(v2 + 112, v8, 1, 0);
  v5 = *(_QWORD *)(v2 + 112);
  v6 = *(_QWORD *)(v2 + 120);
  *(_QWORD *)(v2 + 112) = a1;
  *(_QWORD *)(v2 + 120) = a2;
  return outlined consume of (@escaping @callee_guaranteed () -> ())?(v5, v6);
}

uint64_t (*MOSuggestionCollectionViewModel.bundleLoadingChangedHandler.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + 112, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionCollectionViewModel.collectionViewDelegate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + 128;
  swift_beginAccess(v3, v5, 0, 0);
  return outlined init with copy of Date?(v3, a1, &demangling cache variable for type metadata for MOSuggestionCollectionViewDelegate?);
}

uint64_t MOSuggestionCollectionViewModel.collectionViewDelegate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + 128;
  swift_beginAccess(v3, v5, 33, 0);
  outlined assign with take of Date?(a1, v3, &demangling cache variable for type metadata for MOSuggestionCollectionViewDelegate?);
  return swift_endAccess(v5);
}

uint64_t (*MOSuggestionCollectionViewModel.collectionViewDelegate.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + 128, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionCollectionViewModel.currentSegment.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 168, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 168);
}

uint64_t MOSuggestionCollectionViewModel.currentSegment.setter(char a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;
  _BYTE v4[24];

  v2 = a1 & 1;
  result = swift_beginAccess(v1 + 168, v4, 1, 0);
  *(_BYTE *)(v1 + 168) = v2;
  return result;
}

uint64_t (*MOSuggestionCollectionViewModel.currentSegment.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + 168, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void *MOSuggestionCollectionViewModel.options.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  _BYTE v4[24];

  swift_beginAccess(v0 + 176, v4, 0, 0);
  v1 = *(void **)(v0 + 176);
  v2 = v1;
  return v1;
}

void MOSuggestionCollectionViewModel.options.setter(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  _BYTE v4[24];

  swift_beginAccess(v1 + 176, v4, 1, 0);
  v3 = *(void **)(v1 + 176);
  *(_QWORD *)(v1 + 176) = a1;

}

uint64_t (*MOSuggestionCollectionViewModel.options.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + 176, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionCollectionViewModel.hasDismissedATip.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 192, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 192);
}

uint64_t MOSuggestionCollectionViewModel.hasDismissedATip.setter(char a1)
{
  uint64_t v1;
  uint64_t result;
  _BYTE v4[24];

  result = swift_beginAccess(v1 + 192, v4, 1, 0);
  *(_BYTE *)(v1 + 192) = a1;
  return result;
}

uint64_t (*MOSuggestionCollectionViewModel.hasDismissedATip.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + 192, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id MOSuggestionCollectionViewModel.protectedAppsManager.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 200);
}

uint64_t MOSuggestionCollectionViewModel.targetProtectedApps.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 208, v2, 0, 0);
  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 208));
}

uint64_t MOSuggestionCollectionViewModel.targetProtectedApps.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  swift_beginAccess(v1 + 208, v5, 1, 0);
  v3 = *(_QWORD *)(v1 + 208);
  *(_QWORD *)(v1 + 208) = a1;
  return swift_bridgeObjectRelease(v3);
}

uint64_t (*MOSuggestionCollectionViewModel.targetProtectedApps.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + 208, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionCollectionViewModel.isCurrentlyPresentingProtectedShield.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 216, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 216);
}

uint64_t MOSuggestionCollectionViewModel.isCurrentlyPresentingProtectedShield.setter(char a1)
{
  uint64_t v1;
  uint64_t result;
  _BYTE v4[24];

  result = swift_beginAccess(v1 + 216, v4, 1, 0);
  *(_BYTE *)(v1 + 216) = a1;
  return result;
}

uint64_t (*MOSuggestionCollectionViewModel.isCurrentlyPresentingProtectedShield.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + 216, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t one-time initialization function for viewmodelQueue()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  _QWORD *v15;

  v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue, OS_dispatch_queue_ptr);
  static DispatchQoS.utility.getter();
  v15 = _swiftEmptyArrayStorage;
  v10 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  v12 = lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A], &demangling cache variable for type metadata for [OS_dispatch_queue.Attributes], (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v15, v11, v12, v4, v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000020, 0x80000001001AA960, v9, v6, v3, 0);
  static MOSuggestionCollectionViewModel.viewmodelQueue = result;
  return result;
}

uint64_t *MOSuggestionCollectionViewModel.viewmodelQueue.unsafeMutableAddressor()
{
  if (one-time initialization token for viewmodelQueue != -1)
    swift_once(&one-time initialization token for viewmodelQueue, one-time initialization function for viewmodelQueue);
  return &static MOSuggestionCollectionViewModel.viewmodelQueue;
}

id static MOSuggestionCollectionViewModel.viewmodelQueue.getter()
{
  if (one-time initialization token for viewmodelQueue != -1)
    swift_once(&one-time initialization token for viewmodelQueue, one-time initialization function for viewmodelQueue);
  return (id)static MOSuggestionCollectionViewModel.viewmodelQueue;
}

uint64_t MOSuggestionCollectionViewModel.__allocating_init(clientDetails:clientId:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = swift_allocObject(v4, 219, 7);
  MOSuggestionCollectionViewModel.init(clientDetails:clientId:)(a1, a2, a3, a4);
  return v9;
}

uint64_t MOSuggestionCollectionViewModel.init(clientDetails:clientId:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  _QWORD *v11;
  void (*v12)(_QWORD *, __n128);
  __n128 v13;
  _QWORD v15[5];
  _BYTE v16[24];

  v5 = v4;
  *(_QWORD *)(v5 + 48) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v5 + 56) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v5 + 64) = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)(v5 + 72) = specialized Dictionary.init(dictionaryLiteral:)((uint64_t)_swiftEmptyArrayStorage);
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 153) = 0u;
  *(_OWORD *)(v5 + 176) = xmmword_1001A1510;
  *(_BYTE *)(v5 + 192) = 0;
  *(_QWORD *)(v5 + 200) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MOProtectedAppsManager()), "init");
  if (one-time initialization token for allFixedApps != -1)
    swift_once(&one-time initialization token for allFixedApps, one-time initialization function for allFixedApps);
  swift_beginAccess(&static MOProtectedAppSource.allFixedApps, v16, 0, 0);
  v10 = static MOProtectedAppSource.allFixedApps;
  *(_QWORD *)(v5 + 208) = static MOProtectedAppSource.allFixedApps;
  *(_WORD *)(v5 + 216) = 0;
  *(_BYTE *)(v5 + 218) = 0;
  *(_BYTE *)(v5 + 16) = a1 & 1;
  *(_QWORD *)(v5 + 24) = a2;
  *(_QWORD *)(v5 + 32) = a3;
  *(_QWORD *)(v5 + 40) = a4;
  v11 = *(_QWORD **)(v5 + 200);
  v15[3] = type metadata accessor for MOSuggestionCollectionViewModel();
  v15[4] = &protocol witness table for MOSuggestionCollectionViewModel;
  v15[0] = v5;
  v12 = *(void (**)(_QWORD *, __n128))((swift_isaMask & *v11) + 0x70);
  swift_bridgeObjectRetain(v10);
  v13 = swift_retain(v5);
  v12(v15, v13);
  return v5;
}

id MOSuggestionCollectionViewModel.showNewEntryHeader.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  v1 = (void *)(*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
  if (!v1)
    return 0;
  v2 = v1;
  v3 = objc_msgSend(v1, "showBlankEntryButton");

  return v3;
}

BOOL MOSuggestionCollectionViewModel.hasLoadedViewModels.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 56, v2, 0, 0);
  return *(_QWORD *)(*(_QWORD *)(v0 + 56) + 16) != 0;
}

uint64_t MOSuggestionCollectionViewModel.recentsTabSectionIndexOffset.getter()
{
  uint64_t v0;

  if (((*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))() & 1) != 0)
    return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 552))() & 1;
  else
    return 0;
}

uint64_t MOSuggestionCollectionViewModel.isLoadingBundles.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 217, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 217);
}

void (*MOSuggestionCollectionViewModel.isLoadingBundles.setter(char a1))(void)
{
  _BYTE *v1;
  __n128 v3;
  void (*result)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v3 = swift_beginAccess(v1 + 217, v8, 1, 0);
  v1[217] = a1;
  result = (void (*)(void))(*(uint64_t (**)(__n128))(*(_QWORD *)v1 + 376))(v3);
  if (result)
  {
    v6 = (uint64_t)result;
    v7 = v5;
    result();
    return (void (*)(void))outlined consume of (@escaping @callee_guaranteed () -> ())?(v6, v7);
  }
  return result;
}

uint64_t (*MOSuggestionCollectionViewModel.isLoadingBundles.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + 217, a1, 33, 0);
  return MOSuggestionCollectionViewModel.isLoadingBundles.modify;
}

Swift::Int __swiftcall MOSuggestionCollectionViewModel.bundleCount(section:)(Swift::Int section)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  Swift::Int v8;
  Swift::Int v10;
  _BYTE v11[24];

  if (((*(uint64_t (**)(void))(*v1 + 424))() & 1) != 0
    && ((*(uint64_t (**)(void))(*v1 + 552))() & 1) != 0
    && !section)
  {
    return 0;
  }
  swift_beginAccess(v1 + 7, v11, 0, 0);
  v3 = v1[7];
  v4 = *(uint64_t (**)(uint64_t))(*v1 + 568);
  v5 = swift_bridgeObjectRetain(v3);
  v6 = v4(v5);
  v7 = section - v6;
  if (__OFSUB__(section, v6))
  {
    __break(1u);
  }
  else
  {
    if (v7 < 0 || v7 >= *(_QWORD *)(v3 + 16))
    {
      swift_bridgeObjectRelease(v3);
      return 0;
    }
    section = *(_QWORD *)(v3 + 8 * v7 + 32);
    swift_bridgeObjectRetain(section);
    swift_bridgeObjectRelease(v3);
    if (!((unint64_t)section >> 62))
    {
      v8 = *(_QWORD *)((section & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease(section);
      return v8;
    }
  }
  if (section < 0)
    v10 = section;
  else
    v10 = section & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(section);
  v8 = _CocoaArrayWrapper.endIndex.getter(v10);
  swift_bridgeObjectRelease_n(section, 2);
  return v8;
}

uint64_t MOSuggestionCollectionViewModel.sectionCount.getter()
{
  _QWORD *v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  _BYTE v6[24];

  if (((*(uint64_t (**)(void))(*v0 + 576))() & 1) != 0)
    return 1;
  v2 = swift_beginAccess(v0 + 7, v6, 0, 0);
  v3 = *(_QWORD *)(v0[7] + 16);
  v4 = (*(uint64_t (**)(uint64_t))(*v0 + 568))(v2);
  v5 = __OFADD__(v3, v4);
  result = v3 + v4;
  if (v5)
    __break(1u);
  return result;
}

void MOSuggestionCollectionViewModel.date(section:)(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  __n128 v20;
  id v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v27[24];

  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  v10 = __chkstk_darwin(v9);
  v12 = &v27[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 568))(v10);
  v14 = __OFSUB__(a1, v13);
  v15 = a1 - v13;
  if (v14)
  {
    __break(1u);
    goto LABEL_12;
  }
  swift_beginAccess(v2 + 56, v27, 0, 0);
  if ((v15 & 0x8000000000000000) != 0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v16 = *(_QWORD *)(v2 + 56);
  if (v15 >= *(_QWORD *)(v16 + 16))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v2 = *(_QWORD *)(v16 + 8 * v15 + 32);
  if (!((unint64_t)v2 >> 62))
  {
    v17 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v2);
    if (v17)
      goto LABEL_6;
LABEL_18:
    v20 = swift_bridgeObjectRelease(v2);
    goto LABEL_19;
  }
LABEL_14:
  if (v2 < 0)
    v24 = v2;
  else
    v24 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  if (!_CocoaArrayWrapper.endIndex.getter(v24))
    goto LABEL_18;
LABEL_6:
  if ((v2 & 0xC000000000000001) != 0)
  {
    v25 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v2);
    swift_bridgeObjectRelease(v2);
    v19 = *(id *)(v25 + 16);
    swift_unknownObjectRelease(v25);
    if (v19)
    {
LABEL_9:
      v21 = objc_msgSend(v19, "displayStartDate", v20.n128_f64[0]);
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      v22 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v22(v12, v8, v5);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v12, 0, 1, v5);
      v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v12, 1, v5);
      if ((_DWORD)v23 != 1)
      {

        v22(a2, v12, v5);
        return;
      }
      goto LABEL_20;
    }
LABEL_19:
    v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v6 + 56))(v12, 1, 1, v5, v20);
    v19 = 0;
LABEL_20:
    static Date.now.getter(v23);

    outlined destroy of Any?((uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for Date?);
    return;
  }
  if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v18 = *(_QWORD *)(v2 + 32);
    swift_retain(v18);
    swift_bridgeObjectRelease(v2);
    v19 = *(id *)(v18 + 16);
    v20 = swift_release(v18);
    if (v19)
      goto LABEL_9;
    goto LABEL_19;
  }
  __break(1u);
}

uint64_t MOSuggestionCollectionViewModel.shouldShowDateHeader.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))() & 1;
}

uint64_t MOSuggestionCollectionViewModel.shouldShowSupportingTextBelowIndicator.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 218, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 218);
}

void (*MOSuggestionCollectionViewModel.shouldShowSupportingTextBelowIndicator.setter(char a1))(void)
{
  _BYTE *v1;
  __n128 v3;
  void (*result)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v3 = swift_beginAccess(v1 + 218, v8, 1, 0);
  v1[218] = a1;
  result = (void (*)(void))(*(uint64_t (**)(__n128))(*(_QWORD *)v1 + 376))(v3);
  if (result)
  {
    v6 = (uint64_t)result;
    v7 = v5;
    result();
    return (void (*)(void))outlined consume of (@escaping @callee_guaranteed () -> ())?(v6, v7);
  }
  return result;
}

uint64_t (*MOSuggestionCollectionViewModel.shouldShowSupportingTextBelowIndicator.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + 218, a1, 33, 0);
  return MOSuggestionCollectionViewModel.isLoadingBundles.modify;
}

void (*MOSuggestionCollectionViewModel.isLoadingBundles.modify(uint64_t a1, char a2))(void)
{
  void (*result)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = (void (*)(void))swift_endAccess(a1);
  if ((a2 & 1) == 0)
  {
    result = (void (*)(void))(*(uint64_t (**)(void (*)(void)))(**(_QWORD **)(a1 + 24) + 376))(result);
    if (result)
    {
      v6 = (uint64_t)result;
      v7 = v5;
      result();
      return (void (*)(void))outlined consume of (@escaping @callee_guaranteed () -> ())?(v6, v7);
    }
  }
  return result;
}

Swift::Bool __swiftcall MOSuggestionCollectionViewModel.shouldShowShowMoreFooterFor(section:)(Swift::Int section)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t (*v4)(__n128);
  __n128 v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  char v9;
  char v10;
  _BYTE v12[24];

  if (((*(uint64_t (**)(void))(*v1 + 424))() & 1) == 0)
    goto LABEL_7;
  swift_beginAccess(v1 + 8, v12, 0, 0);
  v3 = v1[8];
  v4 = *(uint64_t (**)(__n128))(*v1 + 568);
  v5 = swift_bridgeObjectRetain(v3);
  v6 = v4(v5);
  v7 = __OFSUB__(section, v6);
  v8 = section - v6;
  if (v7)
  {
    __break(1u);
    return v8;
  }
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_bridgeObjectRelease(v3);
    goto LABEL_7;
  }
  specialized __RawDictionaryStorage.find<A>(_:)(v8);
  v10 = v9;
  swift_bridgeObjectRelease(v3);
  if ((v10 & 1) == 0)
  {
LABEL_7:
    LOBYTE(v8) = 0;
    return v8;
  }
  LOBYTE(v8) = 1;
  return v8;
}

uint64_t specialized Sequence<>.contains(_:)(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  _BOOL8 v5;
  BOOL v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_QWORD *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 5; ; ++i)
  {
    v4 = i - 3;
    if (__OFADD__(i - 4, 1))
      break;
    v6 = *(_QWORD *)(a2 + 8 * i) == result;
    v5 = v6;
    v6 = v6 || v4 == v2;
    if (v6)
      return v5;
  }
  __break(1u);
  return result;
}

uint64_t specialized Sequence<>.contains(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  char v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  id v15;
  char v16;
  uint64_t v17;

  if ((unint64_t)a2 >> 62)
    goto LABEL_20;
  v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a2);
  for (; v3; v3 = _CocoaArrayWrapper.endIndex.getter(v17))
  {
    v4 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      v5 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
LABEL_5:
      v6 = v5;
      type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MOEventBundle, MOEventBundle_ptr);
      v7 = static NSObject.== infix(_:_:)(v6);

      if ((v7 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease(a2);
        return 1;
      }
      if (v3 == 1)
        goto LABEL_18;
      if (v4)
        break;
      v4 = 5;
      while (1)
      {
        v14 = v4 - 3;
        if (__OFADD__(v4 - 4, 1))
          break;
        v15 = *(id *)(a2 + 8 * v4);
        v16 = static NSObject.== infix(_:_:)(v15);

        if ((v16 & 1) != 0)
          goto LABEL_6;
        ++v4;
        if (v14 == v3)
          goto LABEL_18;
      }
      __break(1u);
    }
    v9 = 1;
    while (1)
    {
      v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, a2);
      v11 = v9 + 1;
      if (__OFADD__(v9, 1))
        break;
      v12 = v10;
      v13 = static NSObject.== infix(_:_:)(v10);
      swift_unknownObjectRelease(v12);
      if ((v13 & 1) != 0)
        goto LABEL_6;
      ++v9;
      if (v11 == v3)
        goto LABEL_18;
    }
    __break(1u);
LABEL_20:
    if (a2 < 0)
      v17 = a2;
    else
      v17 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
  }
LABEL_18:
  swift_bridgeObjectRelease(a2);
  return 0;
}

{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(a2 + 32));
  v7 = v6;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v5 == v8 && v7 == v9)
  {
LABEL_20:
    swift_bridgeObjectRelease_n(v7, 2);
    return 1;
  }
  v11 = v9;
  v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRelease(v7);
  result = swift_bridgeObjectRelease(v11);
  if ((v12 & 1) != 0)
  {
LABEL_7:
    swift_bridgeObjectRelease(a2);
    return 1;
  }
  if (v2 == 1)
  {
LABEL_17:
    swift_bridgeObjectRelease(a2);
    return 0;
  }
  v14 = 5;
  while (1)
  {
    v15 = v14 - 3;
    if (__OFADD__(v14 - 4, 1))
      break;
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(a2 + 8 * v14));
    v7 = v17;
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v16 == v18 && v7 == v19)
    {
      swift_bridgeObjectRelease(a2);
      goto LABEL_20;
    }
    v21 = v19;
    v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v7, v18, v19, 0);
    swift_bridgeObjectRelease(v7);
    result = swift_bridgeObjectRelease(v21);
    if ((v22 & 1) != 0)
      goto LABEL_7;
    ++v14;
    if (v15 == v2)
      goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t MOSuggestionCollectionViewModel._sectionedSuggestionCellViewModelsIndexPath(suggestionID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  _BYTE v27[24];

  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(v2 + 56, v27, 0, 0);
  v9 = *(_QWORD *)(v2 + 56);
  v22 = *(_QWORD *)(v9 + 16);
  if (v22)
  {
    v25 = v9 + 32;
    result = swift_bridgeObjectRetain(v9);
    v11 = 0;
    v23 = result;
    v24 = a2;
    while (v11 < *(_QWORD *)(result + 16))
    {
      v26 = v11;
      v12 = *(_QWORD *)(v25 + 8 * v11);
      if ((unint64_t)v12 >> 62)
      {
        if (v12 < 0)
          v18 = *(_QWORD *)(v25 + 8 * v11);
        else
          v18 = v12 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n(v12, 2);
        v13 = _CocoaArrayWrapper.endIndex.getter(v18);
        swift_bridgeObjectRelease(v12);
        if (v13)
        {
LABEL_7:
          v14 = 0;
          while (1)
          {
            if ((v12 & 0xC000000000000001) != 0)
            {
              v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v12);
            }
            else
            {
              v15 = *(_QWORD *)(v12 + 8 * v14 + 32);
              swift_retain(v15);
            }
            v16 = objc_msgSend(*(id *)(v15 + 16), "suggestionID", v22);
            static UUID._unconditionallyBridgeFromObjectiveC(_:)();

            LOBYTE(v16) = static UUID.== infix(_:_:)(v8, a1);
            (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
            result = swift_release(v15);
            if ((v16 & 1) != 0)
            {
              swift_bridgeObjectRelease(v23);
              swift_bridgeObjectRelease(v12);
              v19 = v24;
              IndexPath.init(row:section:)(v14, v26);
              v20 = type metadata accessor for IndexPath(0);
              return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 0, 1, v20);
            }
            v17 = v14 + 1;
            if (__OFADD__(v14, 1))
              break;
            ++v14;
            if (v17 == v13)
              goto LABEL_3;
          }
          __break(1u);
          break;
        }
      }
      else
      {
        v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(*(_QWORD *)(v25 + 8 * v11));
        if (v13)
          goto LABEL_7;
      }
LABEL_3:
      v11 = v26 + 1;
      swift_bridgeObjectRelease(v12);
      result = v23;
      a2 = v24;
      if (v11 == v22)
      {
        swift_bridgeObjectRelease(v23);
        goto LABEL_22;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_22:
    v21 = type metadata accessor for IndexPath(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a2, 1, 1, v21);
  }
  return result;
}

uint64_t MOSuggestionCollectionViewModel.cellViewModelIndexPath(suggestionID:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  __n128 v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  __n128 v66;
  char *v67;
  uint64_t v68;
  uint64_t v70;
  char *v71;
  char *v72;
  void (*v73)(char *, char *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v76 = a2;
  v75 = type metadata accessor for UUID(0);
  v77 = *(_QWORD *)(v75 - 8);
  v4 = __chkstk_darwin(v75);
  v72 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v71 = (char *)&v70 - v7;
  __chkstk_darwin(v6);
  v9 = (char *)&v70 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IndexPath?);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v70 - v14;
  v16 = type metadata accessor for IndexPath(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v73 = (void (*)(char *, char *, uint64_t))((char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v18);
  v21 = (char *)&v70 - v20;
  MOSuggestionCollectionViewModel._sectionedSuggestionCellViewModelsIndexPath(suggestionID:)(a1, (uint64_t)v15);
  v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v22(v15, 1, v16) != 1)
  {
    v73 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v73(v21, v15, v16);
    v24 = v16;
    if (serverManager._clientConnections != (NSMutableDictionary *)-1)
      swift_once(&serverManager._clientConnections, one-time initialization function for shared);
    v39 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v39, (uint64_t)static MOAngelLogger.shared);
    v40 = v77;
    v41 = v75;
    v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v77 + 16))(v9, a1, v75);
    v43 = Logger.logObject.getter(v42);
    v44 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc(12, -1);
      v46 = swift_slowAlloc(32, -1);
      v79 = v46;
      v70 = v24;
      *(_DWORD *)v45 = 136315138;
      v74 = v17;
      v47 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v48 = dispatch thunk of CustomStringConvertible.description.getter(v41, v47);
      v50 = v49;
      v78 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v48, v49, &v79);
      v17 = v74;
      v24 = v70;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, &v79, v45 + 4);
      v51 = swift_bridgeObjectRelease(v50);
      (*(void (**)(char *, uint64_t, __n128))(v77 + 8))(v9, v41, v51);
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "[HandleReviewSuggestion] Found suggestionID=%s in Recommended", v45, 0xCu);
      swift_arrayDestroy(v46, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v46, -1, -1);
      swift_slowDealloc(v45, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v9, v41);
    }

    v67 = v76;
    v73(v76, v21, v24);
    goto LABEL_21;
  }
  v74 = v17;
  outlined destroy of Any?((uint64_t)v15, &demangling cache variable for type metadata for IndexPath?);
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2 + 736);
  v23(1, 1, 1);
  MOSuggestionCollectionViewModel._sectionedSuggestionCellViewModelsIndexPath(suggestionID:)(a1, (uint64_t)v13);
  v24 = v16;
  if (v22(v13, 1, v16) != 1)
  {
    v17 = v74;
    v52 = *(void (**)(char *, char *, uint64_t))(v74 + 32);
    v52((char *)v73, v13, v16);
    v53 = v75;
    if (serverManager._clientConnections != (NSMutableDictionary *)-1)
      swift_once(&serverManager._clientConnections, one-time initialization function for shared);
    v54 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v54, (uint64_t)static MOAngelLogger.shared);
    v55 = v77;
    v56 = v71;
    v57 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v77 + 16))(v71, a1, v53);
    v58 = Logger.logObject.getter(v57);
    v59 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v58, v59))
    {
      v60 = (uint8_t *)swift_slowAlloc(12, -1);
      v61 = swift_slowAlloc(32, -1);
      v79 = v61;
      v70 = v24;
      *(_DWORD *)v60 = 136315138;
      v62 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v63 = dispatch thunk of CustomStringConvertible.description.getter(v53, v62);
      v65 = v64;
      v78 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v63, v64, &v79);
      v24 = v70;
      v17 = v74;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, &v79, v60 + 4);
      v66 = swift_bridgeObjectRelease(v65);
      (*(void (**)(char *, uint64_t, __n128))(v77 + 8))(v56, v53, v66);
      _os_log_impl((void *)&_mh_execute_header, v58, v59, "[HandleReviewSuggestion] Found suggestionID=%s in Recents", v60, 0xCu);
      swift_arrayDestroy(v61, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v61, -1, -1);
      swift_slowDealloc(v60, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v53);
    }

    v67 = v76;
    v52(v76, (char *)v73, v24);
LABEL_21:
    v68 = 0;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v67, v68, 1, v24);
  }
  outlined destroy of Any?((uint64_t)v13, &demangling cache variable for type metadata for IndexPath?);
  v25 = v75;
  if (serverManager._clientConnections != (NSMutableDictionary *)-1)
    swift_once(&serverManager._clientConnections, one-time initialization function for shared);
  v26 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v26, (uint64_t)static MOAngelLogger.shared);
  v27 = v77;
  v28 = v72;
  v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v77 + 16))(v72, a1, v25);
  v30 = Logger.logObject.getter(v29);
  v31 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = (uint8_t *)swift_slowAlloc(12, -1);
    v33 = swift_slowAlloc(32, -1);
    v79 = v33;
    v70 = v24;
    *(_DWORD *)v32 = 136315138;
    v73 = (void (*)(char *, char *, uint64_t))(v32 + 4);
    v34 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v35 = dispatch thunk of CustomStringConvertible.description.getter(v25, v34);
    v37 = v36;
    v78 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v36, &v79);
    v24 = v70;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, &v79, v73);
    v38 = swift_bridgeObjectRelease(v37);
    (*(void (**)(char *, uint64_t, __n128))(v77 + 8))(v28, v25, v38);
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "[HandleReviewSuggestion] Did not find suggestionID=%s anywhere, fallbacking to recommended", v32, 0xCu);
    swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1, -1);
    swift_slowDealloc(v32, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v25);
  }

  v17 = v74;
  v68 = 1;
  v23(0, 1, 1);
  v67 = v76;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v67, v68, 1, v24);
}

uint64_t MOSuggestionCollectionViewModel.cellViewModelFor(indexPath:)()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13[24];

  v1 = v0;
  swift_beginAccess(v0 + 56, v13, 0, 0);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = swift_bridgeObjectRetain(v2);
  v4 = IndexPath.section.getter(v3);
  v5 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 568))();
  v6 = v4 - v5;
  if (__OFSUB__(v4, v5))
  {
    __break(1u);
  }
  else
  {
    if (v6 < 0 || v6 >= *(_QWORD *)(v2 + 16))
    {
      v11 = v2;
LABEL_14:
      swift_bridgeObjectRelease(v11);
      return 0;
    }
    v1 = *(_QWORD *)(v2 + 8 * v6 + 32);
    swift_bridgeObjectRetain(v1);
    v7 = swift_bridgeObjectRelease(v2);
    result = IndexPath.row.getter(v7);
    v0 = result;
    if (!((unint64_t)v1 >> 62))
    {
      v9 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_6;
    }
  }
  if (v1 < 0)
    v12 = v1;
  else
    v12 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v1);
  v9 = _CocoaArrayWrapper.endIndex.getter(v12);
  result = swift_bridgeObjectRelease(v1);
  if ((v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
LABEL_6:
  if ((v0 & 0x8000000000000000) != 0 || v0 >= v9)
  {
    v11 = v1;
    goto LABEL_14;
  }
  if ((v1 & 0xC000000000000001) != 0)
  {
LABEL_22:
    v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v0, v1);
    goto LABEL_11;
  }
  if (v0 < *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v10 = *(_QWORD *)(v1 + 8 * v0 + 32);
    swift_retain(v10);
LABEL_11:
    swift_bridgeObjectRelease(v1);
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t MOSuggestionCollectionViewModel.cellViewModelForWithoutOffset(indexPath:)()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[24];

  swift_beginAccess(v0 + 56, v12, 0, 0);
  v1 = *(_QWORD *)(v0 + 56);
  v2 = swift_bridgeObjectRetain(v1);
  v3 = IndexPath.section.getter(v2);
  if (v3 < 0 || v3 >= *(_QWORD *)(v1 + 16))
  {
    v9 = v1;
LABEL_20:
    swift_bridgeObjectRelease(v9);
    return 0;
  }
  v4 = *(_QWORD *)(v1 + 8 * v3 + 32);
  swift_bridgeObjectRetain(v4);
  v5 = swift_bridgeObjectRelease(v1);
  v6 = IndexPath.row.getter(v5);
  if (!((unint64_t)v4 >> 62))
  {
    v7 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if ((v6 & 0x8000000000000000) == 0)
    {
      while (v6 < v7)
      {
        if ((v4 & 0xC000000000000001) != 0)
          goto LABEL_16;
        if (v6 < *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v8 = *(_QWORD *)(v4 + 8 * v6 + 32);
          swift_retain(v8);
          goto LABEL_9;
        }
        __break(1u);
LABEL_18:
        v6 = v1;
        if ((v1 & 0x8000000000000000) != 0)
          break;
      }
    }
    v9 = v4;
    goto LABEL_20;
  }
  v1 = v6;
  if (v4 < 0)
    v10 = v4;
  else
    v10 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v4);
  v7 = _CocoaArrayWrapper.endIndex.getter(v10);
  v6 = swift_bridgeObjectRelease(v4);
  if ((v7 & 0x8000000000000000) == 0)
    goto LABEL_18;
  __break(1u);
LABEL_16:
  v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v4);
LABEL_9:
  swift_bridgeObjectRelease(v4);
  return v8;
}

void MOSuggestionCollectionViewModel.setCheckmarkVisibilityFor(indexPath:visibility:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  __n128 v20;
  __n128 v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  __n128 v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43[24];

  v3 = v2;
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = IndexPath.section.getter(v8);
  v12 = (*(uint64_t (**)(void))(*v2 + 568))();
  v13 = v11 - v12;
  if (!__OFSUB__(v11, v12))
  {
    v14 = IndexPath.row.getter(v12);
    v15 = v3 + 7;
    swift_beginAccess(v3 + 7, v43, 0, 0);
    v16 = v3[7];
    if (v13 >= *(_QWORD *)(v16 + 16))
      goto LABEL_14;
    if (v13 < 0)
    {
      __break(1u);
    }
    else
    {
      v40 = a1;
      a1 = v7;
      LOBYTE(v7) = a2;
      a2 = v6;
      v6 = *(_QWORD *)(v16 + 8 * v13 + 32);
      if (!((unint64_t)v6 >> 62))
      {
        v17 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_6;
      }
    }
    if (v6 < 0)
      v39 = v6;
    else
      v39 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v17 = _CocoaArrayWrapper.endIndex.getter(v39);
    swift_bridgeObjectRelease(v6);
LABEL_6:
    v6 = a2;
    v18 = v7;
    v7 = a1;
    a1 = v40;
    if (v14 < v17)
    {
      if ((unint64_t)v13 >= *(_QWORD *)(*v15 + 16))
      {
        __break(1u);
      }
      else
      {
        v7 = *(_QWORD *)(*v15 + 8 * v13 + 32);
        if ((v7 & 0xC000000000000001) == 0)
        {
          if (v14 < 0)
          {
            __break(1u);
          }
          else if ((unint64_t)v14 < *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v19 = *(_QWORD *)(v7 + 8 * v14 + 32);
            v20 = swift_retain(v19);
            goto LABEL_12;
          }
          __break(1u);
          return;
        }
      }
      swift_bridgeObjectRetain(v7);
      v19 = specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v7);
      v20 = swift_bridgeObjectRelease(v7);
LABEL_12:
      (*(void (**)(_QWORD, __n128))(*(_QWORD *)v19 + 232))(v18 & 1, v20);
      v21 = swift_release(v19);
      v22 = (void (*)(uint64_t))(*(uint64_t (**)(__n128))(*v3 + 352))(v21);
      if (v22)
      {
        v24 = (uint64_t)v22;
        v25 = v23;
        v22(a1);
        outlined consume of (@escaping @callee_guaranteed () -> ())?(v24, v25);
      }
      return;
    }
LABEL_14:
    if (serverManager._clientConnections == (NSMutableDictionary *)-1)
      goto LABEL_15;
    goto LABEL_20;
  }
  __break(1u);
LABEL_20:
  swift_once(&serverManager._clientConnections, one-time initialization function for shared);
LABEL_15:
  v26 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v26, (uint64_t)static MOAngelLogger.shared);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a1, v6);
  v27 = swift_retain_n(v3, 2);
  v28 = Logger.logObject.getter(v27);
  v29 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = swift_slowAlloc(22, -1);
    v31 = swift_slowAlloc(32, -1);
    v40 = v6;
    v32 = v31;
    v42 = v31;
    *(_DWORD *)v30 = 136315394;
    v33 = IndexPath.debugDescription.getter();
    v35 = v34;
    v41 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v34, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v30 + 4);
    v36 = swift_bridgeObjectRelease(v35);
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v10, v40, v36);
    *(_WORD *)(v30 + 12) = 2048;
    v37 = *(_QWORD *)(v3[7] + 16);
    swift_release(v3);
    v41 = v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v30 + 14);
    swift_release(v3);
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "[MOSuggestionCollectionViewModel] attempt to setCheckmarkVisibilityFor for invalid indexPath=%s, sectionedSuggestionCellViewModels.count=%ld", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v32, -1, -1);
    swift_slowDealloc(v30, -1, -1);

  }
  else
  {
    v38 = swift_release(v3);
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v10, v6, v38);

    swift_release(v3);
  }
}

void MOSuggestionCollectionViewModel.setInteractionStateFor(indexPath:interaction:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  __n128 v20;
  uint64_t v21;
  __n128 v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  __n128 v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46[24];

  v4 = (_QWORD *)v2;
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = IndexPath.section.getter(v9);
  v13 = (*(uint64_t (**)(void))(*(_QWORD *)v2 + 568))();
  v14 = v12 - v13;
  if (__OFSUB__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    v15 = IndexPath.row.getter(v13);
    if ((v14 & 0x8000000000000000) != 0)
      goto LABEL_24;
    v2 = v15;
    if (v15 < 0)
      goto LABEL_24;
    v12 = (uint64_t)(v4 + 7);
    swift_beginAccess(v4 + 7, v46, 0, 0);
    v16 = v4[7];
    if (v14 >= *(_QWORD *)(v16 + 16))
      goto LABEL_24;
    v3 = *(_QWORD *)(v16 + 8 * v14 + 32);
    if (!((unint64_t)v3 >> 62))
    {
      if (v2 < *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_7;
      goto LABEL_24;
    }
  }
  v27 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0)
    v27 = v3;
  v41 = v27;
  swift_bridgeObjectRetain(v3);
  v41 = _CocoaArrayWrapper.endIndex.getter(v41);
  swift_bridgeObjectRelease(v3);
  if (v2 < v41)
  {
LABEL_7:
    v17 = *(_QWORD *)v12;
    v18 = *(_QWORD *)(*(_QWORD *)v12 + 16);
    if ((a2 & 1) == 0)
    {
      if (v14 >= v18)
      {
        __break(1u);
      }
      else
      {
        v7 = *(_QWORD *)(v17 + 8 * v14 + 32);
        if ((v7 & 0xC000000000000001) == 0)
        {
          if ((unint64_t)v2 < *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v19 = *(_QWORD **)(v7 + 8 * v2 + 32);
            v20 = swift_retain(v19);
LABEL_12:
            v21 = 29;
            goto LABEL_18;
          }
          __break(1u);
          goto LABEL_33;
        }
      }
      swift_bridgeObjectRetain(v7);
      v19 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v2, v7);
      v20 = swift_bridgeObjectRelease(v7);
      goto LABEL_12;
    }
    if (v14 < v18)
    {
      v7 = *(_QWORD *)(v17 + 8 * v14 + 32);
      if ((v7 & 0xC000000000000001) == 0)
      {
        if ((unint64_t)v2 >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        v19 = *(_QWORD **)(v7 + 8 * v2 + 32);
        v20 = swift_retain(v19);
        goto LABEL_17;
      }
LABEL_34:
      swift_bridgeObjectRetain(v7);
      v19 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v2, v7);
      v20 = swift_bridgeObjectRelease(v7);
LABEL_17:
      v21 = 32;
LABEL_18:
      (*(void (**)(uint64_t, __n128))(*v19 + 8 * v21))(1, v20);
      v22 = swift_release(v19);
      v23 = (void (*)(uint64_t))(*(uint64_t (**)(__n128))(*v4 + 352))(v22);
      if (v23)
      {
        v25 = (uint64_t)v23;
        v26 = v24;
        v23(a1);
        outlined consume of (@escaping @callee_guaranteed () -> ())?(v25, v26);
      }
      return;
    }
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
LABEL_24:
  if (serverManager._clientConnections != (NSMutableDictionary *)-1)
    swift_once(&serverManager._clientConnections, one-time initialization function for shared);
  v28 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v28, (uint64_t)static MOAngelLogger.shared);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
  v29 = swift_retain_n(v4, 2);
  v30 = Logger.logObject.getter(v29);
  v31 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = swift_slowAlloc(22, -1);
    v33 = swift_slowAlloc(32, -1);
    v45 = v33;
    *(_DWORD *)v32 = 136315394;
    v34 = IndexPath.debugDescription.getter();
    v36 = v35;
    v43 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v35, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v32 + 4);
    v37 = swift_bridgeObjectRelease(v36);
    (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v11, v7, v37);
    *(_WORD *)(v32 + 12) = 2048;
    swift_beginAccess(v4 + 7, &v43, 0, 0);
    v38 = *(_QWORD *)(v4[7] + 16);
    swift_release(v4);
    v42 = v38;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v32 + 14);
    swift_release(v4);
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "[MOSuggestionCollectionViewModel] attempt to setInteractionStateFor for invalid indexPath=%s, sectionedSuggestionCellViewModels.count=%ld", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1, -1);
    swift_slowDealloc(v32, -1, -1);

  }
  else
  {
    v39 = swift_release(v4);
    (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v11, v7, v39);

    swift_release(v4);
  }
}

Swift::Void __swiftcall MOSuggestionCollectionViewModel.createSuggestionCellViewModels()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void);
  uint64_t v22;
  char v23;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  char v35;
  _QWORD *v36;
  _BYTE *v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  __n128 v55;
  unint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  __objc2_ivar_list **p_ivars;
  id v64;
  void *v65;
  id v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  char v72;
  void (*v73)(char *, uint64_t, __n128);
  id v74;
  __n128 v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  char v79;
  __n128 v80;
  char v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  id v86;
  void *v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  id v98;
  _QWORD *v99;
  _QWORD *v100;
  uint64_t v101;
  __n128 v102;
  char v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  _QWORD *v110;
  _QWORD *v111;
  char v112;
  unint64_t v113;
  unint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  unint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t (*v125)(__n128);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD v131[2];
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char v138[24];
  char v139[24];
  uint64_t v140;
  uint64_t v141;
  uint64_t v142[3];
  unint64_t v143;
  char v144[32];

  v1 = type metadata accessor for UUID(0);
  v126 = *(_QWORD *)(v1 - 8);
  v127 = v1;
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v115 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v2);
  v122 = (char *)&v115 - v6;
  __chkstk_darwin(v5);
  v8 = (char *)&v115 - v7;
  v115 = (_QWORD *)(v0 + 56);
  swift_beginAccess(v0 + 56, v144, 1, 0);
  v9 = *(_QWORD *)(v0 + 56);
  v118 = *(_QWORD *)(v9 + 16);
  v119 = v0;
  v121 = v4;
  if (!v118)
  {
LABEL_35:
    if (serverManager._clientConnections != (NSMutableDictionary *)-1)
      goto LABEL_79;
    goto LABEL_36;
  }
  v10 = (uint64_t *)(v0 + 72);
  v117 = v9 + 32;
  swift_bridgeObjectRetain(v9);
  v12 = 0;
  v116 = v11;
  while (1)
  {
    if (v12 >= *(_QWORD *)(v11 + 16))
      goto LABEL_78;
    v120 = v12;
    v13 = *(_QWORD *)(v117 + 8 * v12);
    if (!((unint64_t)v13 >> 62))
    {
      v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v13);
      if (v14)
        break;
      goto LABEL_3;
    }
    v41 = v13 < 0 ? *(_QWORD *)(v117 + 8 * v12) : v13 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v13, 2);
    v14 = _CocoaArrayWrapper.endIndex.getter(v41);
    swift_bridgeObjectRelease(v13);
    if (v14)
      break;
LABEL_3:
    v12 = v120 + 1;
    swift_bridgeObjectRelease(v13);
    v4 = v121;
    v11 = v116;
    if (v12 == v118)
    {
      swift_bridgeObjectRelease(v116);
      goto LABEL_35;
    }
  }
  v124 = (_QWORD *)v13;
  v125 = (uint64_t (*)(__n128))(v13 & 0xC000000000000001);
  v15 = 4;
  v123 = v14;
  while (1)
  {
    v20 = v15 - 4;
    if (!v125)
      break;
    v4 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v15 - 4, v13);
    v19 = v15 - 3;
    if (__OFADD__(v20, 1))
      goto LABEL_75;
LABEL_16:
    v21 = *(uint64_t (**)(void))(*(_QWORD *)v4 + 224);
    if ((v21() & 1) == 0 && ((*(uint64_t (**)(void))(*(_QWORD *)v4 + 248))() & 1) == 0)
      goto LABEL_10;
    v128 = v19;
    v22 = (*(uint64_t (**)(void))(*(_QWORD *)v4 + 344))();
    LODWORD(v129) = ((uint64_t (*)(uint64_t))v21)(v22);
    v23 = (*(uint64_t (**)(void))(*(_QWORD *)v4 + 248))();
    swift_beginAccess(v10, v142, 33, 0);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v10);
    v140 = *v10;
    v25 = v140;
    v26 = v10;
    *v10 = 0x8000000000000000;
    v27 = (uint64_t)v8;
    v29 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v8);
    v30 = *(_QWORD *)(v25 + 16);
    v31 = (v28 & 1) == 0;
    v32 = v30 + v31;
    if (__OFADD__(v30, v31))
      goto LABEL_76;
    v33 = v28;
    if (*(_QWORD *)(v25 + 24) >= v32)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v36 = (_QWORD *)v140;
        if ((v28 & 1) == 0)
          goto LABEL_25;
      }
      else
      {
        specialized _NativeDictionary.copy()();
        v36 = (_QWORD *)v140;
        if ((v33 & 1) == 0)
          goto LABEL_25;
      }
    }
    else
    {
      specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v32, isUniquelyReferenced_nonNull_native);
      v34 = specialized __RawDictionaryStorage.find<A>(_:)(v27);
      if ((v33 & 1) != (v35 & 1))
        goto LABEL_91;
      v29 = v34;
      v36 = (_QWORD *)v140;
      if ((v33 & 1) == 0)
      {
LABEL_25:
        v36[(v29 >> 6) + 8] |= 1 << v29;
        v8 = (char *)v27;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v126 + 16))(v36[6] + *(_QWORD *)(v126 + 72) * v29, v27, v127);
        v37 = (_BYTE *)(v36[7] + 2 * v29);
        *v37 = v129 & 1;
        v37[1] = v23 & 1;
        v38 = v36[2];
        v39 = __OFADD__(v38, 1);
        v40 = v38 + 1;
        if (v39)
          goto LABEL_77;
        v36[2] = v40;
        goto LABEL_9;
      }
    }
    v16 = (_BYTE *)(v36[7] + 2 * v29);
    *v16 = v129 & 1;
    v16[1] = v23 & 1;
    v8 = (char *)v27;
LABEL_9:
    v10 = v26;
    v17 = *v26;
    *v26 = (uint64_t)v36;
    v18 = swift_bridgeObjectRelease(v17);
    (*(void (**)(char *, uint64_t, __n128))(v126 + 8))(v8, v127, v18);
    swift_endAccess(v142);
    v14 = v123;
    v13 = (uint64_t)v124;
    v19 = v128;
LABEL_10:
    swift_release(v4);
    ++v15;
    if (v19 == v14)
      goto LABEL_3;
  }
  v4 = *(char **)(v13 + 8 * v15);
  swift_retain(v4);
  v19 = v15 - 3;
  if (!__OFADD__(v20, 1))
    goto LABEL_16;
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  swift_once(&serverManager._clientConnections, one-time initialization function for shared);
LABEL_36:
  v42 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v42, (uint64_t)static MOAngelLogger.shared);
  v43 = (_QWORD *)v119;
  v44 = swift_retain_n(v119, 2);
  v45 = Logger.logObject.getter(v44);
  v46 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v45, v46))
  {
    v47 = (uint8_t *)swift_slowAlloc(12, -1);
    v48 = swift_slowAlloc(32, -1);
    v142[0] = v48;
    *(_DWORD *)v47 = 136315138;
    v129 = (uint64_t)(v47 + 4);
    swift_beginAccess(v43 + 9, &v130, 0, 0);
    v49 = v43[9];
    swift_bridgeObjectRetain(v49);
    v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Bool, Bool));
    v51 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v52 = Dictionary.debugDescription.getter(v49, v127, v50, v51);
    v54 = v53;
    swift_bridgeObjectRelease(v49);
    v140 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v52, v54, v142);
    v55 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v140, &v141, v129);
    swift_release_n(v43, 2, v55);
    v56 = v54;
    v4 = v121;
    swift_bridgeObjectRelease(v56);
    _os_log_impl((void *)&_mh_execute_header, v45, v46, "[MOSuggestionCollectionViewModel] stateBackup=%s", v47, 0xCu);
    swift_arrayDestroy(v48, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v48, -1, -1);
    swift_slowDealloc(v47, -1, -1);

  }
  else
  {

    swift_release_n(v43, 2, v57);
  }
  v58 = v43[7];
  v43[7] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v58);
  v143 = (unint64_t)_swiftEmptyArrayStorage;
  swift_beginAccess(v43 + 6, v142, 0, 0);
  v59 = v43[6];
  if ((unint64_t)v59 >> 62)
  {
    if (v59 < 0)
      v109 = v43[6];
    else
      v109 = v59 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v43[6]);
    v60 = _CocoaArrayWrapper.endIndex.getter(v109);
    if (!v60)
      goto LABEL_84;
LABEL_41:
    if (v60 < 1)
    {
      __break(1u);
LABEL_91:
      KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v127);
      __break(1u);
      return;
    }
    v125 = *(uint64_t (**)(__n128))(*(_QWORD *)v119 + 424);
    v61 = (_QWORD *)(v119 + 72);
    v123 = *(_QWORD *)(v119 + 24);
    LODWORD(v120) = *(unsigned __int8 *)(v119 + 16);
    v118 = v59 & 0xC000000000000001;
    swift_beginAccess(v119 + 72, &v140, 0, 0);
    v62 = 0;
    p_ivars = &MOSuggestionCollectionViewCellConstants.ivars;
    v128 = v60;
    v129 = v59;
    v124 = v61;
    while (1)
    {
      if (v118)
        v64 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v62, v59);
      else
        v64 = *(id *)(v59 + 8 * v62 + 32);
      v65 = v64;
      v66 = objc_msgSend(v64, (SEL)p_ivars[262]);
      v67 = (uint64_t)v122;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v66);

      v69 = *v61;
      if (*(_QWORD *)(*v61 + 16))
      {
        swift_bridgeObjectRetain(*v61);
        v70 = specialized __RawDictionaryStorage.find<A>(_:)(v67);
        if ((v71 & 1) != 0)
        {
          v72 = *(_BYTE *)(*(_QWORD *)(v69 + 56) + 2 * v70);
          v68 = swift_bridgeObjectRelease(v69);
          goto LABEL_51;
        }
        v68 = swift_bridgeObjectRelease(v69);
      }
      v72 = 2;
LABEL_51:
      v73 = *(void (**)(char *, uint64_t, __n128))(v126 + 8);
      v73(v122, v127, v68);
      v74 = objc_msgSend(v65, (SEL)p_ivars[262]);
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v74);

      v76 = *v61;
      if (*(_QWORD *)(*v61 + 16))
      {
        swift_bridgeObjectRetain(*v61);
        v77 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v4);
        if ((v78 & 1) != 0)
        {
          v79 = *(_BYTE *)(*(_QWORD *)(v76 + 56) + 2 * v77 + 1);
          v80 = swift_bridgeObjectRelease(v76);
          LOBYTE(v134) = v79;
          v73(v4, v127, v80);
          v81 = v134;
          goto LABEL_56;
        }
        v75 = swift_bridgeObjectRelease(v76);
      }
      LOBYTE(v134) = 0;
      v73(v4, v127, v75);
      v81 = 0;
LABEL_56:
      v82 = v72 & 1;
      v83 = type metadata accessor for MOSuggestionCollectionViewCellViewModel();
      v84 = swift_allocObject(v83, 96, 7);
      *(_BYTE *)(v84 + 24) = 0;
      *(_QWORD *)(v84 + 32) = 0;
      *(_QWORD *)(v84 + 40) = 0xE000000000000000;
      *(_QWORD *)(v84 + 48) = 0;
      *(_QWORD *)(v84 + 56) = 0xE000000000000000;
      *(_WORD *)(v84 + 64) = 0;
      *(_BYTE *)(v84 + 66) = 0;
      *(_QWORD *)(v84 + 72) = 0;
      *(_QWORD *)(v84 + 16) = v65;
      swift_beginAccess(v84 + 64, v139, 1, 0);
      *(_BYTE *)(v84 + 64) = v82;
      swift_beginAccess(v84 + 65, v138, 1, 0);
      *(_BYTE *)(v84 + 65) = v81;
      *(_BYTE *)(v84 + 80) = v120;
      *(_QWORD *)(v84 + 88) = v123;
      v85 = v65;
      if (objc_msgSend(v85, "interfaceType") == (id)10)
      {
        if (objc_msgSend(v85, "interfaceType") != (id)10)
        {
          v94 = 0;
LABEL_66:
          v96 = 0xE000000000000000;
          v4 = v121;
          goto LABEL_71;
        }
        v86 = objc_msgSend(v85, "labels");
        v4 = v121;
        if (!v86)
          goto LABEL_70;
        v87 = v86;
        v88 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v86, &type metadata for String);

        if (!v88[2])
          goto LABEL_68;
        v89 = v88[4];
        v90 = v88[5];
        swift_bridgeObjectRetain(v90);
        swift_bridgeObjectRelease(v88);
        v134 = v89;
        v135 = v90;
        v132 = 10;
        v133 = 0xE100000000000000;
        v91 = lazy protocol witness table accessor for type String and conformance String();
        v88 = (_QWORD *)StringProtocol.components<A>(separatedBy:)(&v132, &type metadata for String, &type metadata for String, v91, v91);
        swift_bridgeObjectRelease(v90);
        if (!v88[2])
        {
LABEL_68:
          v100 = v88;
          goto LABEL_69;
        }
        v92 = v88[4];
        v93 = v88[5];
        swift_bridgeObjectRetain(v93);
        swift_bridgeObjectRelease(v88);
        v134 = v92;
        v135 = v93;
        v132 = 8224;
        v133 = 0xE200000000000000;
        v131[0] = 32;
        v131[1] = 0xE100000000000000;
        v94 = (void *)StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(&v132, v131, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v91, v91, v91);
        v96 = v95;
        v97 = v93;
        v4 = v121;
        swift_bridgeObjectRelease(v97);
      }
      else
      {
        v98 = objc_msgSend(v85, "labels");
        v94 = v98;
        if (!v98)
          goto LABEL_66;
        v99 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v98, &type metadata for String);

        v4 = v121;
        if (!v99[2])
        {
          v100 = v99;
LABEL_69:
          swift_bridgeObjectRelease(v100);
LABEL_70:
          v94 = 0;
          v96 = 0xE000000000000000;
          goto LABEL_71;
        }
        v94 = (void *)v99[4];
        v96 = v99[5];
        swift_bridgeObjectRetain(v96);
        swift_bridgeObjectRelease(v99);
      }
LABEL_71:
      swift_beginAccess(v84 + 32, &v137, 1, 0);
      v101 = *(_QWORD *)(v84 + 40);
      *(_QWORD *)(v84 + 32) = v94;
      *(_QWORD *)(v84 + 40) = v96;
      v102 = swift_bridgeObjectRelease(v101);
      v103 = v125(v102) & 1;
      swift_beginAccess(v84 + 66, &v136, 1, 0);
      *(_BYTE *)(v84 + 66) = v103;
      swift_retain(v84);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v104);
      v106 = *(_QWORD *)((v143 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v105 = *(_QWORD *)((v143 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v106 >= v105 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v105 > 1, v106 + 1, 1);
      ++v62;
      v107 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v106, v84);
      specialized Array._endMutation()(v107);
      swift_release(v84);

      v59 = v129;
      v61 = v124;
      p_ivars = (__objc2_ivar_list **)(&MOSuggestionCollectionViewCellConstants + 48);
      if (v128 == v62)
      {
        swift_bridgeObjectRelease(v129);
        v108 = (_QWORD *)v143;
        goto LABEL_85;
      }
    }
  }
  v60 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v43[6]);
  if (v60)
    goto LABEL_41;
LABEL_84:
  swift_bridgeObjectRelease(v59);
  v108 = _swiftEmptyArrayStorage;
LABEL_85:
  v110 = v115;
  swift_beginAccess(v115, &v134, 33, 0);
  v111 = (_QWORD *)*v110;
  v112 = swift_isUniquelyReferenced_nonNull_native(*v110);
  *v110 = v111;
  if ((v112 & 1) == 0)
  {
    v111 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v111[2] + 1, 1, v111);
    *v115 = v111;
  }
  v114 = v111[2];
  v113 = v111[3];
  if (v114 >= v113 >> 1)
  {
    v111 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((_QWORD *)(v113 > 1), v114 + 1, 1, v111);
    *v115 = v111;
  }
  v111[2] = v114 + 1;
  v111[v114 + 4] = v108;
  swift_endAccess(&v134);
}

uint64_t MOSuggestionCollectionViewCellViewModel.__allocating_init(_:clientDetails:showAdded:showSaved:)(void *a1, char a2, uint64_t a3, char a4, char a5)
{
  uint64_t v5;
  uint64_t v11;

  v11 = swift_allocObject(v5, 96, 7);
  MOSuggestionCollectionViewCellViewModel.init(_:clientDetails:showAdded:showSaved:)(a1, a2, a3, a4, a5);
  return v11;
}

Swift::Void __swiftcall MOSuggestionCollectionViewModel.fetchCollectionViewBundles()()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)v0 + 584))(1);
  (*(void (**)(void))(*(_QWORD *)v0 + 728))();
}

Swift::Void __swiftcall MOSuggestionCollectionViewModel.fetchBundles()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double (*v8)(uint64_t, uint64_t, id, uint64_t (*)(char), uint64_t, double (*)(uint64_t, uint64_t), uint64_t);
  __n128 v9;
  __n128 v10;
  id v11;

  v1 = v0;
  if (one-time initialization token for shared != -1)
    swift_once(&one-time initialization token for shared, one-time initialization function for shared);
  v2 = static MOEventBundleStore.shared;
  v3 = *(unsigned __int8 *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = swift_allocObject(&unk_1001E87F0, 24, 7);
  swift_weakInit(v5 + 16);
  v6 = swift_allocObject(&unk_1001E87F0, 24, 7);
  swift_weakInit(v6 + 16);
  v7 = one-time initialization token for defaultQueue;
  swift_retain(v5);
  swift_retain(v6);
  if (v7 != -1)
    swift_once(&one-time initialization token for defaultQueue, one-time initialization function for defaultQueue);
  v8 = *(double (**)(uint64_t, uint64_t, id, uint64_t (*)(char), uint64_t, double (*)(uint64_t, uint64_t), uint64_t))(*(_QWORD *)v2 + 560);
  v11 = (id)static MOEventBundleStore.defaultQueue;
  v9.n128_f64[0] = v8(v3, v4, v11, partial apply for closure #1 in MOSuggestionCollectionViewModel.fetchBundles(), v5, partial apply for closure #2 in MOSuggestionCollectionViewModel.fetchBundles(), v6);
  swift_release_n(v5, 2, v9);
  swift_release_n(v6, 2, v10);

}

uint64_t closure #1 in MOSuggestionCollectionViewModel.fetchBundles()(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  _BYTE v6[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    (*(void (**)(_QWORD))(*(_QWORD *)result + 640))(a1 & 1);
    return swift_release(v5);
  }
  return result;
}

double closure #2 in MOSuggestionCollectionViewModel.fetchBundles()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t Strong;
  double result;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  v6 = a3 + 16;
  swift_beginAccess(a3 + 16, v11, 0, 0);
  Strong = swift_weakLoadStrong(v6);
  if (Strong)
  {
    v9 = Strong;
    v10 = swift_allocObject(&unk_1001E8D80, 32, 7);
    *(_QWORD *)(v10 + 16) = a3;
    *(_QWORD *)(v10 + 24) = a1;
    swift_retain(a3);
    swift_bridgeObjectRetain(a1);
    MOSuggestionCollectionViewModel.validateConditions(additionalBundleIds:completion:)(a2, (uint64_t)partial apply for closure #1 in closure #2 in MOSuggestionCollectionViewModel.fetchBundles(), v10);
    swift_release(v9);
    *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  }
  return result;
}

void closure #1 in closure #2 in MOSuggestionCollectionViewModel.fetchBundles()(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, _QWORD, __n128);
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[24];
  _BYTE v27[24];
  _BYTE v28[24];
  _BYTE v29[24];
  _BYTE v30[24];
  _BYTE v31[24];
  _BYTE v32[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v32, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    swift_beginAccess(Strong + 48, v31, 1, 0);
    v6 = *(_QWORD *)(v5 + 48);
    *(_QWORD *)(v5 + 48) = a2;
    swift_bridgeObjectRetain(a2);
    swift_release(v5);
    swift_bridgeObjectRelease(v6);
  }
  swift_beginAccess(v3, v30, 0, 0);
  v7 = swift_weakLoadStrong(v3);
  if (v7)
  {
    v8 = v7;
    v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 424))(v7);
    swift_release(v8);
    if ((v9 & 1) == 0)
    {
      swift_beginAccess(v3, v29, 0, 0);
      v10 = swift_weakLoadStrong(v3);
      if (!v10)
        goto LABEL_14;
      v11 = v10;
      MOSuggestionCollectionViewModel.groupViewModelsByRecommended()();
LABEL_13:
      swift_release(v11);
      goto LABEL_14;
    }
  }
  swift_beginAccess(v3, v29, 0, 0);
  v12 = swift_weakLoadStrong(v3);
  if (v12)
  {
    v13 = v12;
    v14 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v12 + 424))(v12);
    swift_release(v13);
    if ((v14 & 1) != 0)
    {
      if (!((unint64_t)a2 >> 62))
      {
        if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_14;
        goto LABEL_11;
      }
      if (a2 < 0)
        v24 = a2;
      else
        v24 = a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      v25 = _CocoaArrayWrapper.endIndex.getter(v24);
      swift_bridgeObjectRelease(a2);
      if (v25)
      {
LABEL_11:
        swift_beginAccess(v3, v26, 0, 0);
        v15 = swift_weakLoadStrong(v3);
        if (!v15)
          goto LABEL_14;
        v11 = v15;
        MOSuggestionCollectionViewModel.groupViewModelsBundlesByDate()();
        goto LABEL_13;
      }
    }
  }
LABEL_14:
  swift_beginAccess(v3, v28, 0, 0);
  v16 = swift_weakLoadStrong(v3);
  if (v16)
  {
    v17 = v16;
    (*(void (**)(_QWORD))(*(_QWORD *)v16 + 584))(0);
    swift_release(v17);
  }
  swift_beginAccess(v3, v27, 0, 0);
  v18 = swift_weakLoadStrong(v3);
  if (v18)
  {
    v19 = v18;
    v20 = (void (*)(uint64_t, _QWORD, __n128))(*(uint64_t (**)(void))(*(_QWORD *)v18 + 328))();
    v22 = v21;
    v23 = swift_release(v19);
    if (v20)
    {
      v20(1, 0, v23);
      outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)v20, v22);
    }
  }
}

Swift::Void __swiftcall MOSuggestionCollectionViewModel.sortBundles(with:scrollToTop:scrollToHeaderOffset:)(MomentsUIService::SegmentType with, Swift::Bool scrollToTop, Swift::Bool scrollToHeaderOffset)
{
  uint64_t v3;
  uint64_t v6;
  __n128 v7;
  void (*v8)(Swift::Bool, Swift::Bool);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)v3 + 432))(with & 1);
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 424))(v6) & 1) != 0)
    MOSuggestionCollectionViewModel.groupViewModelsBundlesByDate()();
  else
    v7.n128_f64[0] = MOSuggestionCollectionViewModel.groupViewModelsByRecommended()();
  v8 = (void (*)(Swift::Bool, Swift::Bool))(*(uint64_t (**)(__n128))(*(_QWORD *)v3 + 328))(v7);
  if (v8)
  {
    v10 = (uint64_t)v8;
    v11 = v9;
    v8(scrollToTop, scrollToHeaderOffset);
    outlined consume of (@escaping @callee_guaranteed () -> ())?(v10, v11);
  }
}

double MOSuggestionCollectionViewModel.groupViewModelsByRecommended()()
{
  _QWORD *v0;
  uint64_t v1;
  __n128 v2;
  char **v3;
  NSMutableDictionary *clientConnections;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  __n128 v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double result;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  char **v45;
  char **v46;
  char *v47;
  _QWORD v48[2];
  uint64_t v49;
  _BYTE v50[32];
  __int128 v51;
  __int128 v52;
  _QWORD *v53;
  char v54[32];
  char v55[32];

  swift_beginAccess(v0 + 6, v55, 1, 0);
  v49 = v0[6];
  swift_bridgeObjectRetain(v49);
  specialized MutableCollection<>.sort(by:)(&v49, specialized _ArrayBuffer._consumeAndCreateNew(), (uint64_t (*)(_QWORD *))specialized UnsafeMutableBufferPointer._stableSortImpl(by:));
  v1 = v0[6];
  v0[6] = v49;
  v2 = swift_bridgeObjectRelease(v1);
  (*(void (**)(__n128))(*v0 + 712))(v2);
  swift_beginAccess(v0 + 7, v54, 1, 0);
  v43 = v0;
  v3 = (char **)v0[7];
  clientConnections = serverManager._clientConnections;
  swift_bridgeObjectRetain(v3);
  if (clientConnections == (NSMutableDictionary *)-1)
    goto LABEL_2;
LABEL_46:
  swift_once(&serverManager._clientConnections, one-time initialization function for shared);
LABEL_2:
  v5 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v5, (uint64_t)static MOAngelLogger.shared);
  v6 = swift_bridgeObjectRetain_n(v3, 2);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v9 = 134217984;
    swift_bridgeObjectRetain(v3);
    v11 = specialized FlattenSequence<>.startIndex.getter(v10);
    v14 = specialized FlattenSequence<>.distance(from:to:)(v11, v13, v12 & 1, (uint64_t)v3[2], 0, 1, (uint64_t)v3);
    swift_bridgeObjectRelease_n(v3, 2);
    v49 = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, v50, v9 + 4);
    swift_bridgeObjectRelease(v3);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "[Bundles] Begin Filtering suggestions by recommended eligibility, bundle count before filter:%ld", v9, 0xCu);
    swift_slowDealloc(v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v3, 2);
  }
  v15 = 0;
  v47 = 0;
  v53 = _swiftEmptyArrayStorage;
  v45 = v3 + 4;
  v46 = v3;
  v3 = &selRef_genericAvatarFor_pointSize_completion_;
  while (1)
  {
    v28 = v46[2];
    if (v47 == v28)
      break;
    if (v47 >= v28)
      goto LABEL_45;
    v29 = (uint64_t)v45[(_QWORD)v47];
    swift_bridgeObjectRetain(v29);
    swift_bridgeObjectRelease(v15);
    v15 = v29;
    ++v47;
    if (v29)
    {
      v16 = 0;
      if (v29 >= 0)
        v17 = v29 & 0xFFFFFFFFFFFFFF8;
      else
        v17 = v29;
      v44 = v17;
      if ((unint64_t)v29 >> 62)
      {
LABEL_10:
        swift_bridgeObjectRetain(v15);
        v18 = _CocoaArrayWrapper.endIndex.getter(v44);
        swift_bridgeObjectRelease(v15);
        if (v16 != v18)
          goto LABEL_17;
      }
      else
      {
        while (2)
        {
          if (v16 != *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_17:
            if ((v15 & 0xC000000000000001) != 0)
            {
              v19 = specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v15);
              if (__OFADD__(v16, 1))
                goto LABEL_44;
            }
            else
            {
              if (v16 >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
LABEL_44:
                __break(1u);
LABEL_45:
                __break(1u);
                goto LABEL_46;
              }
              v19 = *(_QWORD *)(v15 + 8 * v16 + 32);
              swift_retain(v19);
              if (__OFADD__(v16, 1))
                goto LABEL_44;
            }
            v20 = objc_msgSend(*(id *)(v19 + 16), "rankingDictionary");
            if (!v20)
            {
              v51 = 0u;
              v52 = 0u;
LABEL_13:
              outlined destroy of Any?((uint64_t)&v51, &demangling cache variable for type metadata for Any?);
              goto LABEL_14;
            }
            v21 = v20;
            v22 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v20, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

            v48[0] = 0xD000000000000017;
            v48[1] = 0x80000001001AA940;
            AnyHashable.init<A>(_:)(&v49, v48, &type metadata for String, &protocol witness table for String);
            if (*(_QWORD *)(v22 + 16)
              && (v23 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&v49), (v24 & 1) != 0))
            {
              outlined init with copy of Any(*(_QWORD *)(v22 + 56) + 32 * v23, (uint64_t)&v51);
            }
            else
            {
              v51 = 0u;
              v52 = 0u;
            }
            outlined destroy of AnyHashable((uint64_t)&v49);
            swift_bridgeObjectRelease(v22);
            if (!*((_QWORD *)&v52 + 1))
              goto LABEL_13;
            v25 = swift_dynamicCast(&v49, &v51, (char *)&type metadata for Any + 8, &type metadata for UInt, 6);
            if ((_DWORD)v25 && (unint64_t)(v49 - 1) < 2)
            {
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v25);
              v26 = v53[2];
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v26);
              v27 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v26, v19);
              specialized ContiguousArray._endMutation()(v27);
              goto LABEL_15;
            }
LABEL_14:
            swift_release(v19);
LABEL_15:
            ++v16;
            if (!(v15 >> 62))
              continue;
            goto LABEL_10;
          }
          break;
        }
      }
    }
  }
  swift_bridgeObjectRelease(v46);
  swift_bridgeObjectRelease(v15);
  v30 = (uint64_t)v53;
  v31 = swift_retain_n(v53, 2);
  v32 = Logger.logObject.getter(v31);
  v33 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v34 = 134217984;
    if (v30 < 0 || (v30 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain(v30);
      v35 = _CocoaArrayWrapper.endIndex.getter(v42);
      swift_release(v30);
    }
    else
    {
      v35 = *(_QWORD *)(v30 + 16);
    }
    swift_release(v30);
    v49 = v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, v50, v34 + 4);
    swift_release(v30);
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "[Bundles] Filtering suggestions by recommended eligibility, bundle count after filter:%ld", v34, 0xCu);
    swift_slowDealloc(v34, -1, -1);

  }
  else
  {

    swift_release_n(v30, 2, v36);
  }
  v37 = MOSuggestionCollectionViewModel.reorderEvergreenBundles(recommendedViewModels:)(v30);
  swift_release(v30);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<[MOSuggestionCollectionViewCellViewModel]>);
  v39 = swift_allocObject(v38, 40, 7);
  *(_OWORD *)(v39 + 16) = xmmword_10019ED20;
  *(_QWORD *)(v39 + 32) = v37;
  v40 = v43[7];
  v43[7] = v39;
  *(_QWORD *)&result = swift_bridgeObjectRelease(v40).n128_u64[0];
  return result;
}

uint64_t Array<A>.sortedByRankingScore.getter(uint64_t result)
{
  Array<A>.sortedByRankingScore.getter(result, (uint64_t (*)(_QWORD *))specialized UnsafeMutableBufferPointer._stableSortImpl(by:));
  return result;
}

unint64_t MOSuggestionCollectionViewModel.reorderEvergreenBundles(recommendedViewModels:)(uint64_t a1)
{
  uint64_t i;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  unint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  id v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(__n128);
  uint64_t v36;
  __n128 v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  __n128 v44;
  char v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  int v68;
  uint64_t v69;
  void (*v70)(void);
  unint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t *v82;
  __n128 v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  __n128 v89;
  __n128 v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  __n128 v95;
  os_log_t v96;
  uint64_t v97;
  uint64_t v98;
  __n128 v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __n128 v103;
  __n128 v104;
  char v105;
  void (*v106)(uint64_t);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  os_log_type_t v114;
  int v115;
  uint64_t v116;
  void (*v117)(void);
  unint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t *v129;
  __n128 v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  __n128 v136;
  __n128 v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  unint64_t v141;
  __n128 v142;
  NSObject *v143;
  os_log_type_t v144;
  const char *v145;
  unint64_t v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  unint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  os_log_type_t v159;
  int v160;
  void (*v161)(void);
  unint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  unint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t *v173;
  __n128 v174;
  unint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  unint64_t v179;
  __n128 v180;
  __n128 v181;
  uint64_t v182;
  uint64_t v183;
  unint64_t v184;
  unint64_t v185;
  __n128 v186;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  uint64_t v190;
  __n128 v191;
  char v192;
  void (*v193)(uint64_t);
  uint64_t v194;
  uint64_t v195;
  __n128 v196;
  uint64_t v197;
  uint64_t v198;
  int v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  Swift::Int v205;
  Swift::Int v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  unint64_t v212;
  __n128 v213;
  uint64_t v214;
  uint64_t v215;
  unint64_t v216;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  char *v226;
  uint64_t v227;
  uint64_t *v228;
  unint64_t v229;
  int v230;
  uint64_t v231;
  NSObject *v232;
  os_log_t v233;
  uint64_t v234;
  uint64_t v235;
  unint64_t v236;
  __n128 v237;
  uint64_t *v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  unint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  unint64_t v248;
  char v249[24];
  double v250;
  uint64_t v251;
  uint64_t v252;
  _QWORD *v253;
  char v254[8];
  unint64_t v255;
  unint64_t v256;

  v6 = type metadata accessor for UUID(0);
  v242 = *(_QWORD *)(v6 - 8);
  v243 = v6;
  __chkstk_darwin(v6);
  v241 = (char *)&v225 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (serverManager._clientConnections != (NSMutableDictionary *)-1)
    swift_once(&serverManager._clientConnections, one-time initialization function for shared);
  v8 = type metadata accessor for Logger(0);
  v247 = __swift_project_value_buffer(v8, (uint64_t)static MOAngelLogger.shared);
  v9 = Logger.logObject.getter(v247);
  v10 = static os_log_type_t.default.getter();
  v11 = v10;
  if (os_log_type_enabled(v9, v10))
  {
    v12 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, (os_log_type_t)v11, "[Bundles] Constructing reordered recommended suggestions", v12, 2u);
    swift_slowDealloc(v12, -1, -1);
  }

  v13 = (uint64_t)_swiftEmptyArrayStorage;
  v253 = _swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v26 = a1;
    else
      v26 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v14 = _CocoaArrayWrapper.endIndex.getter(v26);
    if (v14)
      goto LABEL_7;
LABEL_29:
    swift_bridgeObjectRelease(a1);
    v25 = _swiftEmptyArrayStorage;
    v4 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_30;
  }
  v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v14)
    goto LABEL_29;
LABEL_7:
  if (v14 < 1)
    goto LABEL_285;
  v15 = 0;
  v16 = a1 & 0xC000000000000001;
  do
  {
    if (v16)
    {
      v19 = specialized _ArrayBuffer._getElementSlowPath(_:)(v15, a1);
    }
    else
    {
      v19 = *(_QWORD *)(a1 + 8 * v15 + 32);
      *(_QWORD *)&v20 = swift_retain(v19).n128_u64[0];
    }
    if (objc_msgSend(*(id *)(v19 + 16), "interfaceType", v20) == (id)11)
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(11);
      v17 = v253[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v17);
      v18 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v19);
      specialized ContiguousArray._endMutation()(v18);
    }
    else
    {
      swift_release(v19);
    }
    ++v15;
  }
  while (v14 != v15);
  swift_bridgeObjectRelease(a1);
  v11 = (unint64_t)v253;
  v253 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain(a1);
  for (i = 0; i != v14; ++i)
  {
    if (v16)
    {
      v22 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
    }
    else
    {
      v22 = *(_QWORD *)(a1 + 8 * i + 32);
      *(_QWORD *)&v23 = swift_retain(v22).n128_u64[0];
    }
    v24 = objc_msgSend(*(id *)(v22 + 16), "interfaceType", v23);
    if (v24 == (id)11)
    {
      swift_release(v22);
    }
    else
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v24);
      v2 = v253[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v2);
      v21 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v2, v22);
      specialized ContiguousArray._endMutation()(v21);
    }
  }
  swift_bridgeObjectRelease(a1);
  v25 = v253;
  v4 = v11;
LABEL_30:
  v256 = (unint64_t)v25;
  v27 = swift_retain_n(v4, 2);
  v28 = Logger.logObject.getter(v27);
  LOBYTE(v29) = static os_log_type_t.default.getter();
  if (!os_log_type_enabled((os_log_t)v28, (os_log_type_t)v29))
  {

    swift_release_n(v4, 2, v32);
    goto LABEL_38;
  }
  v14 = swift_slowAlloc(22, -1);
  *(_DWORD *)v14 = 134218240;
  if ((v4 & 0x8000000000000000) != 0 || (v4 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain(v4);
    v30 = _CocoaArrayWrapper.endIndex.getter(v221);
    swift_release(v4);
  }
  else
  {
    v30 = *(_QWORD *)(v4 + 16);
  }
  swift_release(v4);
  v253 = (_QWORD *)v30;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v253, v254, v14 + 4);
  swift_release(v4);
  *(_WORD *)(v14 + 12) = 2048;
  swift_beginAccess(&v256, v249, 0, 0);
  i = v256;
  if (v256 >> 62)
    goto LABEL_291;
  v31 = *(_QWORD *)((v256 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v253 = (_QWORD *)v31;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v253, v254, v14 + 14);
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v28, (os_log_type_t)v29, "[Bundles] Constructing reordered recommended suggestions - Evergreen Count:%ld, Recommended Count:%ld", (uint8_t *)v14, 0x16u);
    swift_slowDealloc(v14, -1, -1);

LABEL_38:
    v255 = v13;
    swift_beginAccess(&v256, &v253, 0, 0);
    v14 = v256;
    v3 = v256 >> 62;
    if (v256 >> 62)
    {
LABEL_234:
      if (v14 < 0)
        v200 = v14;
      else
        v200 = v14 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v14);
      v28 = _CocoaArrayWrapper.endIndex.getter(v200);
      if (!v28)
        goto LABEL_90;
    }
    else
    {
      v28 = *(_QWORD *)((v256 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v256);
      if (!v28)
        goto LABEL_90;
    }
    v11 = v14 & 0xC000000000000001;
    if ((v14 & 0xC000000000000001) != 0)
      goto LABEL_286;
    if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
      break;
    __break(1u);
LABEL_288:
    __break(1u);
LABEL_289:
    __break(1u);
LABEL_290:
    __break(1u);
LABEL_291:
    if (i < 0)
      v220 = i;
    else
      v220 = i & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(i);
    v31 = _CocoaArrayWrapper.endIndex.getter(v220);
    swift_bridgeObjectRelease(i);
  }
  v28 = *(_QWORD *)(v14 + 32);
  swift_retain(v28);
  while (1)
  {
    swift_bridgeObjectRelease(v14);
    v29 = (uint64_t)*(id *)(v28 + 16);
    v33 = (unint64_t)MOEventBundle._orderedAssetReferences()();
    if (!v33)
    {
      swift_release(v28);

      goto LABEL_100;
    }
    i = v33;
    v34 = v33 & 0xFFFFFFFFFFFFFF8;
    if (v33 >> 62)
      goto LABEL_302;
    v35 = *(uint64_t (**)(__n128))((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_46:

    swift_bridgeObjectRelease(i);
    if (v35 != (uint64_t (*)(__n128))1)
      goto LABEL_98;
    if (v3)
    {
      if (v14 < 0)
        v29 = v14;
      else
        v29 = v14 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v14);
      i = _CocoaArrayWrapper.endIndex.getter(v29);
      swift_bridgeObjectRelease(v14);
      if (i < 3)
        goto LABEL_98;
      swift_bridgeObjectRetain(v14);
      i = _CocoaArrayWrapper.endIndex.getter(v29);
      swift_bridgeObjectRelease(v14);
      if (i < 1)
        goto LABEL_316;
      swift_bridgeObjectRetain(v14);
      v29 = _CocoaArrayWrapper.endIndex.getter(v29);
      swift_bridgeObjectRelease(v14);
      if (v29 < 3)
      {
        __break(1u);
LABEL_315:
        __break(1u);
LABEL_316:
        __break(1u);
LABEL_317:
        if (v29 < 0)
          v224 = v29;
        else
          v224 = v29 & 0xFFFFFFFFFFFFFF8;
        swift_retain(v35);
        swift_bridgeObjectRetain(v29);
        v14 = _CocoaArrayWrapper.endIndex.getter(v224);
        swift_bridgeObjectRelease(v29);
        if (v14 < 0)
        {
          __break(1u);
          goto LABEL_322;
        }
LABEL_96:
        v29 = (uint64_t)&v256;
        specialized Array.replaceSubrange<A>(_:with:)(0, 0, (uint64_t)v35);
        swift_endAccess(&v251);
        swift_release(v28);
        v49 = (uint64_t)v35;
        goto LABEL_99;
      }
    }
    else if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10) <= 2uLL)
    {
      goto LABEL_98;
    }
    if (v11)
    {
      type metadata accessor for MOSuggestionCollectionViewCellViewModel();
      _ArrayBuffer._typeCheckSlowPath(_:)(1);
      _ArrayBuffer._typeCheckSlowPath(_:)(2);
    }
    if (!v3)
    {
      v246 = v14 & 0xFFFFFFFFFFFFFF8;
      v13 = (v14 & 0xFFFFFFFFFFFFFF8) + 32;
      swift_bridgeObjectRetain(v14);
      v248 = 3;
      v2 = 1;
      goto LABEL_61;
    }
    if (v14 < 0)
      v39 = v14;
    else
      v39 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v14);
    i = _CocoaArrayWrapper.subscript.getter(1, 3, v39);
    v13 = v40;
    v2 = v41;
    v43 = v42;
    swift_bridgeObjectRelease(v14);
    v248 = v43 >> 1;
    if (v2 == v43 >> 1)
    {
      swift_unknownObjectRelease(i);
      i = 1;
LABEL_81:
      if (v14 < 0)
        v46 = v14;
      else
        v46 = v14 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v14);
      v29 = _CocoaArrayWrapper.endIndex.getter(v46);
      if (v29 < 0)
        goto LABEL_315;
LABEL_85:
      if (i < 0 || i >= (unint64_t)v29)
      {
        swift_release(v28);
LABEL_90:
        swift_bridgeObjectRelease(v14);
      }
      else
      {
        if (v11)
        {
          v35 = (uint64_t (*)(__n128))specialized _ArrayBuffer._getElementSlowPath(_:)(i, v14);
        }
        else
        {
          if ((unint64_t)i >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_322:
            __break(1u);
            goto LABEL_323;
          }
          v35 = *(uint64_t (**)(__n128))(v14 + 8 * i + 32);
          swift_retain(v35);
        }
        v47 = swift_bridgeObjectRelease(v14);
        LOBYTE(v29) = v235;
        if (((*(uint64_t (**)(uint64_t (*)(__n128), __n128))(*(_QWORD *)v235 + 792))(v35, v47) & 1) != 0)
        {
          swift_beginAccess(&v256, &v251, 33, 0);
          v48 = specialized Array.remove(at:)(i, specialized _ArrayBuffer._consumeAndCreateNew());
          swift_release(v48);
          v29 = v256;
          if (v256 >> 62)
            goto LABEL_317;
          swift_retain(v35);
          goto LABEL_96;
        }
        swift_release(v35);
LABEL_98:
        v49 = v28;
LABEL_99:
        swift_release(v49);
      }
LABEL_100:
      v3 = v256;
      if (v256 >> 62)
      {
        if ((v256 & 0x8000000000000000) != 0)
          v201 = v256;
        else
          v201 = v256 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v256);
        v28 = _CocoaArrayWrapper.endIndex.getter(v201);
        if (v28)
          goto LABEL_102;
      }
      else
      {
        v28 = *(_QWORD *)((v256 & 0xFFFFFFFFFFFFF8) + 0x10);
        v50 = swift_bridgeObjectRetain(v256);
        if (v28)
        {
LABEL_102:
          v51 = v4;
          v4 = 0;
          v245 = 0;
          v227 = 0;
          v13 = 0;
          LODWORD(v246) = 0;
          v244 = v3 & 0xC000000000000001;
          v231 = v3 & 0xFFFFFFFFFFFFFF8;
          v238 = &v251;
          v52 = ((unint64_t)v51 >> 62) & 1;
          if (v51 < 0)
            LODWORD(v52) = 1;
          v230 = v52;
          v229 = v51 & 0xC000000000000001;
          v236 = v51;
          v228 = (uint64_t *)(v51 + 32);
          v14 = 1;
          v50.n128_u64[0] = 136315906;
          v237 = v50;
          v226 = (char *)&type metadata for Any + 8;
          v240 = v3;
          v239 = v28;
          while (1)
          {
            if (v244)
            {
              i = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v3);
              v11 = v4 + 1;
              if (__OFADD__(v4, 1))
                goto LABEL_222;
            }
            else
            {
              if (v4 >= *(_QWORD *)(v231 + 16))
                goto LABEL_223;
              i = *(_QWORD *)(v3 + 8 * v4 + 32);
              swift_retain(i);
              v11 = v4 + 1;
              if (__OFADD__(v4, 1))
              {
LABEL_222:
                __break(1u);
LABEL_223:
                __break(1u);
LABEL_224:
                __break(1u);
LABEL_225:
                __break(1u);
LABEL_226:
                __break(1u);
LABEL_227:
                __break(1u);
LABEL_228:
                __break(1u);
LABEL_229:
                __break(1u);
LABEL_230:
                __break(1u);
LABEL_231:
                __break(1u);
LABEL_232:
                __break(1u);
LABEL_233:
                __break(1u);
                goto LABEL_234;
              }
            }
            if (v14 > 2)
            {
              if (v14 != 3 && (((_BYTE)v14 + 1) & 3) != 0)
                goto LABEL_177;
              if (v230)
              {
                v146 = v11;
                v147 = v236;
                swift_retain(v236);
                v149 = _CocoaArrayWrapper.endIndex.getter(v148);
                v150 = v147;
                v11 = v146;
                swift_release(v150);
                if (!v149)
                  goto LABEL_177;
                v151 = v236;
                swift_bridgeObjectRetain(v236);
                v29 = _CocoaArrayWrapper.endIndex.getter(v152);
                v153 = v151;
                v11 = v146;
                swift_release(v153);
LABEL_118:
                if (v13 >= v29)
                {
                  if (v229)
                  {
                    v60 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v236);
                  }
                  else
                  {
                    if (!*(_QWORD *)(v236 + 16))
                      goto LABEL_228;
                    v60 = *v228;
                    v61 = swift_retain(*v228);
                  }
                  v62 = (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)v60 + 160))(3, v61);
                  v29 = (uint64_t)&v255;
                  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v62);
                  v2 = *(_QWORD *)((v255 & 0xFFFFFFFFFFFFFF8) + 0x10);
                  v63 = *(_QWORD *)((v255 & 0xFFFFFFFFFFFFFF8) + 0x18);
                  if (v2 >= v63 >> 1)
                    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v63 > 1, v2 + 1, 1);
                  v64 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v2, v60);
                  specialized Array._endMutation()(v64);
                  v59 = __OFADD__(v14++, 1);
                  if (v59)
                    goto LABEL_227;
                  v227 = 1;
                  v13 = 1;
                }
                else
                {
                  if (v229)
                  {
                    v54 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v236);
                  }
                  else
                  {
                    if (v13 < 0)
                      goto LABEL_229;
                    if ((unint64_t)v13 >= *(_QWORD *)(v236 + 16))
                      goto LABEL_231;
                    v54 = v228[v13];
                    v55 = swift_retain(v54);
                  }
                  v56 = (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)v54 + 160))(3, v55);
                  v29 = (uint64_t)&v255;
                  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v56);
                  v2 = *(_QWORD *)((v255 & 0xFFFFFFFFFFFFFF8) + 0x10);
                  v57 = *(_QWORD *)((v255 & 0xFFFFFFFFFFFFFF8) + 0x18);
                  if (v2 >= v57 >> 1)
                    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v57 > 1, v2 + 1, 1);
                  v58 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v2, v54);
                  specialized Array._endMutation()(v58);
                  v59 = __OFADD__(v14++, 1);
                  if (v59)
                    goto LABEL_230;
                  ++v13;
                }
                v65 = swift_retain_n(i, 8);
                v66 = Logger.logObject.getter(v65);
                v67 = static os_log_type_t.default.getter();
                v68 = v67;
                if (os_log_type_enabled(v66, v67))
                {
                  v69 = swift_slowAlloc(42, -1);
                  v245 = swift_slowAlloc(96, -1);
                  v251 = v245;
                  *(_DWORD *)v69 = v237.n128_u32[0];
                  v248 = v11;
                  v70 = *(void (**)(void))(*(_QWORD *)i + 344);
                  LODWORD(v234) = v68;
                  v71 = v4;
                  v72 = v13;
                  v73 = v241;
                  v233 = v66;
                  v70();
                  v74 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
                  v75 = v243;
                  v76 = dispatch thunk of CustomStringConvertible.description.getter(v243, v74);
                  v77 = v14;
                  v79 = v78;
                  v80 = v73;
                  v13 = v72;
                  v4 = v71;
                  v81 = v75;
                  v28 = v239;
                  (*(void (**)(char *, uint64_t))(v242 + 8))(v80, v81);
                  v250 = COERCE_DOUBLE(getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v76, v79, &v251));
                  v82 = v238;
                  v83 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v250, v238, v69 + 4);
                  swift_release_n(i, 2, v83);
                  v84 = v79;
                  v14 = v77;
                  swift_bridgeObjectRelease(v84);
                  v2 = 2080;
                  *(_WORD *)(v69 + 12) = 2080;
                  v250 = COERCE_DOUBLE(MOEventBundle.visibilityCategory.getter());
                  type metadata accessor for MOVisibilityCategoryForUI(0);
                  v86 = String.init<A>(describing:)(&v250, v85);
                  v88 = v87;
                  v250 = COERCE_DOUBLE(getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v86, v87, &v251));
                  v89 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v250, v82, v69 + 14);
                  swift_release_n(i, 2, v89);
                  swift_bridgeObjectRelease(v88);
                  *(_WORD *)(v69 + 22) = 2048;
                  v250 = MOEventBundle.bundleRankingScore.getter();
                  v90 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v250, v82, v69 + 24);
                  v91 = swift_release_n(i, 2, v90);
                  *(_WORD *)(v69 + 32) = 2080;
                  LOBYTE(v250) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)i + 152))(v91);
                  v92 = String.init<A>(describing:)(&v250, &type metadata for SuggestionCellStyle);
                  v94 = v93;
                  v250 = COERCE_DOUBLE(getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v92, v93, &v251));
                  v11 = v248;
                  v95 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v250, v82, v69 + 34);
                  swift_release_n(i, 2, v95);
                  swift_bridgeObjectRelease(v94);
                  v96 = v233;
                  _os_log_impl((void *)&_mh_execute_header, v233, (os_log_type_t)v234, "[Bundles] inserted evergreen suggestion: %s into Recommended with ranking category: %s, ranking score: %f, with cell style: %s", (uint8_t *)v69, 0x2Au);
                  v97 = v245;
                  swift_arrayDestroy(v245, 3, v226);
                  swift_slowDealloc(v97, -1, -1);
                  v98 = v69;
                  v3 = v240;
                  swift_slowDealloc(v98, -1, -1);

                  if ((v246 & 1) != 0)
                    goto LABEL_178;
                }
                else
                {

                  swift_release_n(i, 8, v99);
                  if ((v246 & 1) != 0)
                    goto LABEL_178;
                }
                v245 = 0;
              }
              else
              {
                v29 = *(_QWORD *)(v236 + 16);
                if (v29)
                  goto LABEL_118;
LABEL_177:
                if ((v246 & 1) != 0)
                {
LABEL_178:
                  LOBYTE(v29) = i;
                  (*(void (**)(uint64_t))(*(_QWORD *)i + 160))(1);
                  v59 = __OFADD__(v14++, 1);
                  if (v59)
                    goto LABEL_224;
                  v245 = 0;
                  goto LABEL_185;
                }
              }
              v2 = v14;
              if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v235 + 784))(i) & 1) != 0 && v245 < 2
                || (v14 = *(_QWORD *)(*(_QWORD *)v235 + 760), (((uint64_t (*)(uint64_t))v14)(i) & 1) != 0))
              {
                LOBYTE(v29) = i;
                (*(void (**)(_QWORD))(*(_QWORD *)i + 160))(0);
                v14 = v2 + 1;
                if (__OFADD__(v2, 1))
                  goto LABEL_225;
                v59 = __OFADD__(v245++, 1);
                if (v59)
                  goto LABEL_226;
LABEL_185:
                LODWORD(v246) = 0;
LABEL_186:
                swift_retain(i);
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v154);
                v156 = *(_QWORD *)((v255 & 0xFFFFFFFFFFFFFF8) + 0x10);
                v155 = *(_QWORD *)((v255 & 0xFFFFFFFFFFFFFF8) + 0x18);
                if (v156 >= v155 >> 1)
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v155 > 1, v156 + 1, 1);
                v157 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v156, i);
                specialized Array._endMutation()(v157);
                v158 = swift_retain_n(i, 8);
                v29 = Logger.logObject.getter(v158);
                v159 = static os_log_type_t.default.getter();
                v160 = v159;
                if (os_log_type_enabled((os_log_t)v29, v159))
                {
                  v116 = swift_slowAlloc(42, -1);
                  v234 = swift_slowAlloc(96, -1);
                  v251 = v234;
                  *(_DWORD *)v116 = v237.n128_u32[0];
                  v248 = v11;
                  v161 = *(void (**)(void))(*(_QWORD *)i + 344);
                  LODWORD(v233) = v160;
                  v162 = v4;
                  v163 = v13;
                  v164 = v241;
                  v232 = v29;
                  v161();
                  v165 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
                  v166 = v243;
                  v167 = dispatch thunk of CustomStringConvertible.description.getter(v243, v165);
                  v168 = v14;
                  v170 = v169;
                  v171 = v164;
                  v13 = v163;
                  v4 = v162;
                  v172 = v166;
                  v28 = v239;
                  (*(void (**)(char *, uint64_t))(v242 + 8))(v171, v172);
                  v250 = COERCE_DOUBLE(getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v167, v170, &v251));
                  v173 = v238;
                  v174 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v250, v238, v116 + 4);
                  swift_release_n(i, 2, v174);
                  v175 = v170;
                  v14 = v168;
                  swift_bridgeObjectRelease(v175);
                  v2 = 2080;
                  *(_WORD *)(v116 + 12) = 2080;
                  v250 = COERCE_DOUBLE(MOEventBundle.visibilityCategory.getter());
                  type metadata accessor for MOVisibilityCategoryForUI(0);
                  v177 = String.init<A>(describing:)(&v250, v176);
                  v179 = v178;
                  v250 = COERCE_DOUBLE(getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v177, v178, &v251));
                  v180 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v250, v173, v116 + 14);
                  swift_release_n(i, 2, v180);
                  swift_bridgeObjectRelease(v179);
                  *(_WORD *)(v116 + 22) = 2048;
                  v250 = MOEventBundle.bundleRankingScore.getter();
                  v181 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v250, v173, v116 + 24);
                  v182 = swift_release_n(i, 2, v181);
                  *(_WORD *)(v116 + 32) = 2080;
                  LOBYTE(v250) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)i + 152))(v182);
                  v183 = String.init<A>(describing:)(&v250, &type metadata for SuggestionCellStyle);
                  v185 = v184;
                  v250 = COERCE_DOUBLE(getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v183, v184, &v251));
                  v11 = v248;
                  v186 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v250, v173, v116 + 34);
                  swift_release_n(i, 2, v186);
                  swift_bridgeObjectRelease(v185);
                  v29 = (uint64_t)v232;
                  v143 = v232;
                  v144 = v233;
                  v145 = "[Bundles] inserted suggestion: %s into Recommended with ranking category: %s, ranking score: %f"
                         ", with cell style: %s";
                  goto LABEL_190;
                }
                goto LABEL_105;
              }
              v29 = v256;
              if (v256 >> 62)
              {
                if ((v256 & 0x8000000000000000) != 0)
                  v194 = v256;
                else
                  v194 = v256 & 0xFFFFFFFFFFFFFF8;
                swift_bridgeObjectRetain(v256);
                v195 = _CocoaArrayWrapper.endIndex.getter(v194);
                if (v195 < 0)
                  goto LABEL_233;
                v189 = v195;
                if ((v11 & 0x8000000000000000) == 0)
                  goto LABEL_193;
              }
              else
              {
                v189 = *(_QWORD *)((v256 & 0xFFFFFFFFFFFFF8) + 0x10);
                swift_bridgeObjectRetain(v256);
                if ((v11 & 0x8000000000000000) == 0)
                {
LABEL_193:
                  if (v11 < v189)
                  {
                    if ((v29 & 0xC000000000000001) != 0)
                    {
                      v190 = specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v29);
                    }
                    else
                    {
                      if (v11 >= *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10))
                        goto LABEL_289;
                      v190 = *(_QWORD *)(v29 + 8 * v11 + 32);
                      swift_retain(v190);
                    }
                    v191 = swift_bridgeObjectRelease(v29);
                    v192 = ((uint64_t (*)(uint64_t, __n128))v14)(v190, v191);
                    v193 = *(void (**)(uint64_t))(*(_QWORD *)i + 160);
                    if ((v192 & 1) != 0)
                    {
                      v193(0);
                      swift_release(v190);
                      v14 = v2 + 1;
                      if (__OFADD__(v2, 1))
                        goto LABEL_309;
                      v59 = __OFADD__(v245++, 1);
                      if (v59)
                        goto LABEL_310;
                      goto LABEL_185;
                    }
                    LODWORD(v246) = 1;
                    v193(1);
                    swift_release(v190);
                    v14 = v2;
                    goto LABEL_186;
                  }
                }
              }
              v196 = swift_bridgeObjectRelease(v29);
              LOBYTE(v29) = i;
              (*(void (**)(_QWORD, __n128))(*(_QWORD *)i + 160))(0, v196);
              v14 = v2 + 1;
              if (__OFADD__(v2, 1))
                goto LABEL_288;
              v59 = __OFADD__(v245++, 1);
              if (v59)
                goto LABEL_290;
              goto LABEL_185;
            }
            v248 = v11;
            v29 = v256;
            v11 = v256 >> 62;
            if (v256 >> 62)
            {
              if ((v256 & 0x8000000000000000) != 0)
                v107 = v256;
              else
                v107 = v256 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(v256);
              v108 = _CocoaArrayWrapper.endIndex.getter(v107);
              swift_bridgeObjectRelease(v29);
              if (v108 < 3)
              {
LABEL_168:
                (*(void (**)(_QWORD))(*(_QWORD *)i + 160))(0);
LABEL_169:
                ++v14;
LABEL_170:
                v11 = v248;
                goto LABEL_171;
              }
            }
            else if (*(uint64_t *)((v256 & 0xFFFFFFFFFFFFF8) + 0x10) < 3)
            {
              goto LABEL_168;
            }
            if (v14 == 1)
            {
              (*(void (**)(_QWORD))(*(_QWORD *)i + 160))(0);
              v14 = 2;
              goto LABEL_170;
            }
            if ((v246 & 1) != 0)
            {
              (*(void (**)(uint64_t))(*(_QWORD *)i + 160))(1);
              LODWORD(v246) = 0;
              goto LABEL_169;
            }
            if (v11)
            {
              if (v29 < 0)
                v101 = v29;
              else
                v101 = v29 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(v29);
              v100 = _CocoaArrayWrapper.endIndex.getter(v101);
              if ((v100 & 0x8000000000000000) != 0)
                goto LABEL_232;
            }
            else
            {
              v100 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain(v29);
            }
            v11 = v248;
            if ((v248 & 0x8000000000000000) != 0 || v248 >= v100)
            {
              v104 = swift_bridgeObjectRelease(v29);
            }
            else
            {
              if ((v29 & 0xC000000000000001) != 0)
              {
                v102 = specialized _ArrayBuffer._getElementSlowPath(_:)(v248, v29);
              }
              else
              {
                if (v248 >= *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10))
                {
                  __break(1u);
                  goto LABEL_297;
                }
                v102 = *(_QWORD *)(v29 + 8 * v248 + 32);
                swift_retain(v102);
              }
              v103 = swift_bridgeObjectRelease(v29);
              if (((*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)v235 + 760))(v102, v103) & 1) != 0)
              {
                (*(void (**)(_QWORD))(*(_QWORD *)i + 160))(0);
                swift_release(v102);
LABEL_161:
                LODWORD(v246) = 0;
                ++v14;
                goto LABEL_171;
              }
              v104 = swift_release(v102);
            }
            v105 = (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)v235 + 760))(i, v104);
            v106 = *(void (**)(uint64_t))(*(_QWORD *)i + 160);
            if ((v105 & 1) != 0)
            {
              v106(0);
              goto LABEL_161;
            }
            LODWORD(v246) = 1;
            v106(1);
LABEL_171:
            swift_retain(i);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v109);
            v111 = *(_QWORD *)((v255 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v110 = *(_QWORD *)((v255 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v111 >= v110 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v110 > 1, v111 + 1, 1);
            v112 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v111, i);
            specialized Array._endMutation()(v112);
            v113 = swift_retain_n(i, 8);
            v29 = Logger.logObject.getter(v113);
            v114 = static os_log_type_t.default.getter();
            v115 = v114;
            if (os_log_type_enabled((os_log_t)v29, v114))
            {
              v116 = swift_slowAlloc(42, -1);
              v234 = swift_slowAlloc(96, -1);
              v251 = v234;
              *(_DWORD *)v116 = v237.n128_u32[0];
              v117 = *(void (**)(void))(*(_QWORD *)i + 344);
              LODWORD(v233) = v115;
              v118 = v4;
              v119 = v13;
              v120 = v241;
              v232 = v29;
              v117();
              v121 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
              v122 = v243;
              v123 = dispatch thunk of CustomStringConvertible.description.getter(v243, v121);
              v124 = v14;
              v126 = v125;
              v127 = v120;
              v13 = v119;
              v4 = v118;
              v128 = v122;
              v28 = v239;
              (*(void (**)(char *, uint64_t))(v242 + 8))(v127, v128);
              v250 = COERCE_DOUBLE(getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v123, v126, &v251));
              v129 = v238;
              v130 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v250, v238, v116 + 4);
              swift_release_n(i, 2, v130);
              v131 = v126;
              v14 = v124;
              swift_bridgeObjectRelease(v131);
              v2 = 2080;
              *(_WORD *)(v116 + 12) = 2080;
              v250 = COERCE_DOUBLE(MOEventBundle.visibilityCategory.getter());
              type metadata accessor for MOVisibilityCategoryForUI(0);
              v133 = String.init<A>(describing:)(&v250, v132);
              v135 = v134;
              v250 = COERCE_DOUBLE(getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v133, v134, &v251));
              v136 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v250, v129, v116 + 14);
              swift_release_n(i, 2, v136);
              swift_bridgeObjectRelease(v135);
              *(_WORD *)(v116 + 22) = 2048;
              v250 = MOEventBundle.bundleRankingScore.getter();
              v137 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v250, v129, v116 + 24);
              v138 = swift_release_n(i, 2, v137);
              *(_WORD *)(v116 + 32) = 2080;
              LOBYTE(v250) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)i + 152))(v138);
              v139 = String.init<A>(describing:)(&v250, &type metadata for SuggestionCellStyle);
              v141 = v140;
              v250 = COERCE_DOUBLE(getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v139, v140, &v251));
              v11 = v248;
              v142 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v250, v129, v116 + 34);
              swift_release_n(i, 2, v142);
              swift_bridgeObjectRelease(v141);
              v29 = (uint64_t)v232;
              v143 = v232;
              v144 = v233;
              v145 = "[Bundles] inserted suggestion: %s into Top Lockup Recommended with ranking category: %s, ranking sc"
                     "ore: %f, with cell style: %s";
LABEL_190:
              _os_log_impl((void *)&_mh_execute_header, v143, v144, v145, (uint8_t *)v116, 0x2Au);
              v187 = v234;
              swift_arrayDestroy(v234, 3, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v187, -1, -1);
              v188 = v116;
              v3 = v240;
              swift_slowDealloc(v188, -1, -1);
              swift_release(i);

              goto LABEL_106;
            }
LABEL_105:

            swift_release_n(i, 9, v53);
LABEL_106:
            ++v4;
            if (v11 == v28)
            {
              swift_bridgeObjectRelease(v3);
              if ((v227 & 1) != 0)
              {
                swift_release(v236);
                goto LABEL_272;
              }
              v4 = v236;
              if (!v230)
              {
                v197 = *(_QWORD *)(v236 + 16);
                if (v197)
                  goto LABEL_246;
                if (v13 <= 0)
                {
                  v198 = 0;
                  v28 = 0;
                  v199 = 0;
                  goto LABEL_256;
                }
                goto LABEL_311;
              }
LABEL_278:
              swift_retain(v4);
              v219 = _CocoaArrayWrapper.endIndex.getter(v218);
              if (v219)
              {
                v28 = v219;
                if (v219 < 1)
                {
                  __break(1u);
LABEL_281:
                  __break(1u);
                  goto LABEL_282;
                }
                v11 = 1;
LABEL_247:
                v14 = 0;
                i = v4 & 0xC000000000000001;
                do
                {
                  if (i)
                  {
                    v29 = specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v4);
                  }
                  else
                  {
                    v29 = *(_QWORD *)(v4 + 8 * v14 + 32);
                    swift_retain(v29);
                  }
                  ++v14;
                  (*(void (**)(uint64_t))(*(_QWORD *)v29 + 160))(3);
                  swift_release(v29);
                }
                while (v28 != v14);
                swift_release(v4);
                if (v28 >= v13)
                {
                  if ((v11 & 1) != 0)
                    goto LABEL_254;
                  v199 = 0;
                  v198 = *(_QWORD *)(v4 + 16);
                  goto LABEL_256;
                }
                __break(1u);
LABEL_302:
                if (i >= 0)
                  v223 = v34;
                else
                  v223 = i;
                v35 = (uint64_t (*)(__n128))_CocoaArrayWrapper.endIndex.getter(v223);
                goto LABEL_46;
              }
              goto LABEL_312;
            }
          }
        }
      }
      swift_bridgeObjectRelease(v3);
      v13 = 0;
      if ((v4 & 0x8000000000000000) != 0 || (v4 & 0x4000000000000000) != 0)
        goto LABEL_278;
      v13 = 0;
      v28 = 0;
      v197 = *(_QWORD *)(v4 + 16);
      if (v197)
      {
LABEL_246:
        swift_retain(v4);
        v11 = 0;
        v28 = v197;
        goto LABEL_247;
      }
      goto LABEL_260;
    }
    if (v2 >= (uint64_t)(v43 >> 1))
    {
      __break(1u);
LABEL_78:
      i = v240;
LABEL_79:
      swift_unknownObjectRelease(v246);
      v4 = v236;
      v11 = v244;
      v28 = v245;
      if (v3)
        goto LABEL_81;
LABEL_80:
      v29 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v14);
      goto LABEL_85;
    }
    while (1)
    {
      v246 = i;
LABEL_61:
      v35 = *(uint64_t (**)(__n128))(*(_QWORD *)v235 + 792);
      v36 = *(_QWORD *)(v13 + 8 * v2);
      v37 = swift_retain(v36);
      v38 = v35(v37);
      swift_release(v36);
      if ((v38 & 1) != 0)
      {
        swift_unknownObjectRelease(v246);
        i = 1;
        if (v3)
          goto LABEL_81;
        goto LABEL_80;
      }
      v244 = v11;
      v245 = v28;
      v236 = v4;
      i = v248 - v2;
      v240 = v248 - v2 + 1;
      v11 = v13 + 8 * v2;
      v4 = 1;
      while (1)
      {
        v28 = v4 + 1;
        if (__OFADD__(v4, 1))
          break;
        if (i == v4)
          goto LABEL_78;
        if ((uint64_t)(v2 + v4) < v2 || (uint64_t)(v2 + v4) >= (uint64_t)v248)
          goto LABEL_307;
        v13 = *(_QWORD *)(v11 + 8 * v4);
        v44 = swift_retain(v13);
        v45 = v35(v44);
        swift_release(v13);
        ++v4;
        if ((v45 & 1) != 0)
        {
          i = v28;
          goto LABEL_79;
        }
      }
      __break(1u);
LABEL_307:
      __break(1u);
LABEL_308:
      __break(1u);
LABEL_309:
      __break(1u);
LABEL_310:
      __break(1u);
LABEL_311:
      __break(1u);
LABEL_312:
      swift_release(v4);
      if (v13 <= 0)
        break;
LABEL_323:
      __break(1u);
    }
    v28 = 0;
LABEL_254:
    swift_bridgeObjectRetain(v4);
    v198 = _CocoaArrayWrapper.endIndex.getter(v202);
    swift_release(v4);
    v199 = 1;
LABEL_256:
    if (v198 < v13)
      goto LABEL_281;
    if ((v13 & 0x8000000000000000) == 0)
      break;
LABEL_282:
    __break(1u);
LABEL_283:
    __break(1u);
LABEL_284:
    __break(1u);
LABEL_285:
    __break(1u);
LABEL_286:
    v28 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v14);
  }
  if (v199)
  {
    swift_bridgeObjectRetain(v4);
    v204 = _CocoaArrayWrapper.endIndex.getter(v203);
    swift_release(v4);
    v11 = 1;
    goto LABEL_261;
  }
LABEL_260:
  v11 = 0;
  v204 = *(_QWORD *)(v4 + 16);
LABEL_261:
  if (v204 < v28)
    goto LABEL_283;
  if (v28 < 0)
    goto LABEL_284;
  if ((v4 & 0xC000000000000001) == 0 || v13 == v28)
    goto LABEL_268;
  if (v13 >= (unint64_t)v28)
    goto LABEL_308;
  type metadata accessor for MOSuggestionCollectionViewCellViewModel();
  v205 = v13;
  do
  {
    v206 = v205 + 1;
    _ArrayBuffer._typeCheckSlowPath(_:)(v205);
    v205 = v206;
  }
  while (v28 != v206);
LABEL_268:
  if ((_DWORD)v11)
  {
    swift_bridgeObjectRetain(v4);
    v207 = _CocoaArrayWrapper.subscript.getter(v13, v28, v4);
    v209 = v208;
    v13 = v210;
    v212 = v211;
    swift_release_n(v4, 2, v213);
    v4 = v207;
  }
  else
  {
    v209 = v4 + 32;
    v212 = (2 * v28) | 1;
  }
  specialized Array.append<A>(contentsOf:)(v4, v209, v13, v212);
LABEL_272:
  v11 = v255;
  v214 = swift_bridgeObjectRetain_n(v255, 2);
  v28 = Logger.logObject.getter(v214);
  LOBYTE(v29) = static os_log_type_t.default.getter();
  if (os_log_type_enabled((os_log_t)v28, (os_log_type_t)v29))
  {
    v14 = swift_slowAlloc(12, -1);
    *(_DWORD *)v14 = 134217984;
    if (!(v11 >> 62))
    {
      v215 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_275;
    }
LABEL_297:
    if ((v11 & 0x8000000000000000) != 0)
      v222 = v11;
    else
      v222 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v11);
    v215 = _CocoaArrayWrapper.endIndex.getter(v222);
    swift_bridgeObjectRelease(v11);
LABEL_275:
    swift_bridgeObjectRelease(v11);
    v251 = v215;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v251, &v252, v14 + 4);
    swift_bridgeObjectRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v28, (os_log_type_t)v29, "[Bundles] reordered recommended suggestions: %ld into Recommended", (uint8_t *)v14, 0xCu);
    swift_slowDealloc(v14, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v11, 2);
  }
  swift_beginAccess(&v255, &v251, 0, 0);
  v216 = v255;
  swift_bridgeObjectRelease(v256);
  return v216;
}

uint64_t specialized Array.remove(at:)(unint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t *v2;
  uint64_t v5;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t result;
  char v15;

  v5 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v2);
  *v2 = v5;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v5 < 0 || (v5 & 0x4000000000000000) != 0)
  {
    v5 = a2(v5);
    *v2 = v5;
  }
  v7 = v5 & 0xFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(v7 + 16);
  if (v8 <= a1)
  {
    __break(1u);
  }
  else
  {
    v9 = v8 - 1;
    v10 = v8 - 1 - a1;
    if (v10 >= 0)
    {
      v11 = v7 + 8 * a1;
      v12 = *(_QWORD *)(v11 + 32);
      v13 = memmove((void *)(v11 + 32), (const void *)(v11 + 40), 8 * v10);
      *(_QWORD *)(v7 + 16) = v9;
      specialized Array._endMutation()(v13);
      return v12;
    }
  }
  v15 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v15, 1046, 0);
  __break(1u);
  return result;
}

uint64_t specialized Array.remove(at:)(unint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;
  char v10;

  v3 = (_QWORD *)*v1;
  if ((swift_isUniquelyReferenced_nonNull_native(*v1) & 1) == 0)
    v3 = specialized _ArrayBuffer._consumeAndCreateNew()(v3);
  v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      v7 = &v3[a1];
      v8 = v7[4];
      memmove(v7 + 4, v7 + 5, 8 * v6);
      v3[2] = v5;
      *v1 = v3;
      return v8;
    }
  }
  v10 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v10, 1046, 0);
  __break(1u);
  return result;
}

BOOL MOSuggestionCollectionViewModel.shouldForceFullWidth(cellViewModel:)(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 16), "interfaceType") == (id)10;
}

uint64_t MOSuggestionCollectionViewModel.cellStyleFor(indexPath:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 680))();
  if (!v1)
    return 6;
  v2 = v1;
  v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 152))(v1);
  swift_release(v2);
  return v3;
}

void MOSuggestionCollectionViewModel.groupViewModelsBundlesByDate()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  id v54;
  id v55;
  unint64_t v56;
  char v57;
  void (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __n128 v62;
  void (*isa)(uint64_t, uint64_t);
  _QWORD *v64;
  __n128 v65;
  unint64_t v66;
  uint64_t v67;
  __n128 v68;
  __n128 v69;
  uint64_t v70;
  BOOL v71;
  char *v72;
  char *v73;
  id *v74;
  id v75;
  char *v76;
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  NSObject *v83;
  os_log_type_t v84;
  int v85;
  void (*v86)(void);
  void (*v87)(char *, uint64_t);
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  char *v95;
  __n128 v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  __n128 v102;
  __n128 v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  id v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  __n128 v114;
  uint64_t v115;
  uint64_t v116;
  id v117;
  char *v118;
  __n128 v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  NSObject *v128;
  os_log_type_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  __n128 v135;
  __n128 v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  __n128 v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  Swift::Int v156;
  Swift::Int v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  int64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  _QWORD *v166;
  uint64_t v167;
  uint64_t v168;
  _QWORD *v169;
  uint64_t v170;
  uint64_t v171;
  Swift::Int v172;
  Swift::Int v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  _QWORD *v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t i;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  unint64_t v202;
  unint64_t v203;
  _QWORD *v204;
  uint64_t v205;
  uint64_t v206;
  _QWORD *v207;
  uint64_t v208;
  _QWORD *v209;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v211;
  _QWORD *v212;
  unint64_t v213;
  _QWORD *v214;
  uint64_t v215;
  NSObject *v216;
  os_log_type_t v217;
  int v218;
  void (*v219)(void);
  char *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  unint64_t v224;
  unint64_t v225;
  char *v226;
  uint64_t *v227;
  __n128 v228;
  unint64_t v229;
  uint64_t v230;
  uint64_t v231;
  unint64_t v232;
  unint64_t v233;
  __n128 v234;
  __n128 v235;
  unint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  BOOL v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t *v246;
  char *v247;
  _QWORD *v248;
  uint64_t v249;
  __n128 v250;
  uint64_t *v251;
  char *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  _QWORD *v258;
  uint64_t v259;
  unint64_t v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  id *v264;
  void (*v265)(char *, uint64_t);
  uint64_t v266;
  char *v267;
  uint64_t v268;
  __n128 v269;
  uint64_t v270;
  unint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  unint64_t v275;
  uint64_t v276;
  unint64_t v277;
  uint64_t v278;
  _BYTE v279[32];
  __int128 v280;
  __int128 v281;
  uint64_t v282;
  uint64_t v283;
  double v284;
  uint64_t v285[3];
  _QWORD v286[3];
  uint64_t v287;
  uint64_t v288;
  unint64_t v289;
  char v290[24];
  char v291[32];
  char v292[32];

  v1 = v0;
  v2 = type metadata accessor for UUID(0);
  v253 = *(_QWORD *)(v2 - 8);
  v254 = v2;
  __chkstk_darwin(v2);
  v252 = (char *)&v246 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v262 = type metadata accessor for Calendar(0);
  v255 = *(_QWORD *)(v262 - 8);
  __chkstk_darwin(v262);
  v261 = (char *)&v246 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v268 = type metadata accessor for Date(0);
  v263 = *(_QWORD *)(v268 - 8);
  v5 = __chkstk_darwin(v268);
  v267 = (char *)&v246 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v271 = (unint64_t)&v246 - v8;
  __chkstk_darwin(v7);
  v10 = (uint64_t)&v246 - v9;
  if (serverManager._clientConnections == (NSMutableDictionary *)-1)
    goto LABEL_2;
LABEL_297:
  swift_once(&serverManager._clientConnections, one-time initialization function for shared);
LABEL_2:
  v11 = type metadata accessor for Logger(0);
  v276 = __swift_project_value_buffer(v11, (uint64_t)static MOAngelLogger.shared);
  v12 = Logger.logObject.getter(v276);
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "[Bundles] Constructing recents suggestions by date", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  swift_beginAccess(v1 + 48, v292, 1, 0);
  v278 = *(_QWORD *)(v1 + 48);
  swift_bridgeObjectRetain(v278);
  specialized MutableCollection<>.sort(by:)(&v278, specialized _ArrayBuffer._consumeAndCreateNew(), (uint64_t (*)(_QWORD *))specialized UnsafeMutableBufferPointer._stableSortImpl(by:));
  v259 = 0;
  v15 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 48) = v278;
  v16 = swift_bridgeObjectRelease(v15);
  (*(void (**)(__n128))(*(_QWORD *)v1 + 712))(v16);
  v246 = (uint64_t *)(v1 + 56);
  swift_beginAccess(v1 + 56, v291, 1, 0);
  v17 = *(_QWORD *)(v1 + 56);
  v248 = (_QWORD *)(v1 + 64);
  swift_beginAccess(v1 + 64, v290, 1, 0);
  v18 = *(_QWORD *)(v1 + 64);
  *(_QWORD *)(v1 + 64) = &_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRetain_n(v17, 3);
  swift_bridgeObjectRelease(v18);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.default.getter();
  v22 = os_log_type_enabled(v20, v21);
  v272 = v10;
  if (v22)
  {
    v23 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v23 = 134217984;
    v10 = (uint64_t)(v23 + 4);
    swift_bridgeObjectRetain(v17);
    v25 = specialized FlattenSequence<>.startIndex.getter(v24);
    v28 = specialized FlattenSequence<>.distance(from:to:)(v25, v27, v26 & 1, *(_QWORD *)(v17 + 16), 0, 1, v17);
    swift_bridgeObjectRelease_n(v17, 2);
    v278 = v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v278, v279, v23 + 4);
    swift_bridgeObjectRelease(v17);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "[Bundles] Begin Filtering suggestions by recents eligibility, bundle count before filter:%ld", v23, 0xCu);
    swift_slowDealloc(v23, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v17, 2);
  }
  v29 = 0;
  v277 = 0;
  v285[0] = (uint64_t)_swiftEmptyArrayStorage;
  v274 = v17 + 32;
  v275 = v17;
  v1 = 0x80000001001AA940;
  while (1)
  {
    v42 = *(_QWORD *)(v275 + 16);
    if (v277 == v42)
      break;
    if (v277 >= v42)
      goto LABEL_272;
    v43 = v277 + 1;
    v44 = *(_QWORD *)(v274 + 8 * v277);
    swift_bridgeObjectRetain(v44);
    swift_bridgeObjectRelease(v29);
    v29 = v44;
    v277 = v43;
    if (v44)
    {
      v30 = 0;
      v10 = v44 & 0xFFFFFFFFFFFFFF8;
      if (v44 >= 0)
        v31 = v44 & 0xFFFFFFFFFFFFFF8;
      else
        v31 = v44;
      v273 = v31;
      if ((unint64_t)v44 >> 62)
      {
LABEL_12:
        swift_bridgeObjectRetain(v29);
        v32 = _CocoaArrayWrapper.endIndex.getter(v273);
        swift_bridgeObjectRelease(v29);
        if (v30 != v32)
          goto LABEL_19;
      }
      else
      {
        while (2)
        {
          if (v30 != *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_19:
            if ((v29 & 0xC000000000000001) != 0)
            {
              v33 = specialized _ArrayBuffer._getElementSlowPath(_:)(v30, v29);
              if (__OFADD__(v30, 1))
                goto LABEL_267;
            }
            else
            {
              if (v30 >= *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_268;
              v33 = *(_QWORD *)(v29 + 8 * v30 + 32);
              swift_retain(v33);
              if (__OFADD__(v30, 1))
              {
LABEL_267:
                __break(1u);
LABEL_268:
                __break(1u);
LABEL_269:
                __break(1u);
LABEL_270:
                __break(1u);
LABEL_271:
                __break(1u);
LABEL_272:
                __break(1u);
LABEL_273:
                __break(1u);
LABEL_274:
                __break(1u);
LABEL_275:
                __break(1u);
LABEL_276:
                __break(1u);
LABEL_277:
                __break(1u);
LABEL_278:
                __break(1u);
LABEL_279:
                __break(1u);
LABEL_280:
                __break(1u);
LABEL_281:
                __break(1u);
LABEL_282:
                __break(1u);
LABEL_283:
                __break(1u);
LABEL_284:
                __break(1u);
LABEL_285:
                __break(1u);
LABEL_286:
                __break(1u);
LABEL_287:
                __break(1u);
LABEL_288:
                __break(1u);
LABEL_289:
                __break(1u);
LABEL_290:
                __break(1u);
LABEL_291:
                __break(1u);
LABEL_292:
                __break(1u);
LABEL_293:
                __break(1u);
LABEL_294:
                __break(1u);
LABEL_295:
                __break(1u);
LABEL_296:
                __break(1u);
                goto LABEL_297;
              }
            }
            v34 = objc_msgSend(*(id *)(v33 + 16), "rankingDictionary");
            if (!v34)
            {
              v280 = 0u;
              v281 = 0u;
LABEL_15:
              outlined destroy of Any?((uint64_t)&v280, &demangling cache variable for type metadata for Any?);
              goto LABEL_16;
            }
            v35 = v34;
            v36 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v34, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

            v286[0] = 0xD000000000000017;
            v286[1] = 0x80000001001AA940;
            AnyHashable.init<A>(_:)(&v278, v286, &type metadata for String, &protocol witness table for String);
            if (*(_QWORD *)(v36 + 16)
              && (v37 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&v278), (v38 & 1) != 0))
            {
              outlined init with copy of Any(*(_QWORD *)(v36 + 56) + 32 * v37, (uint64_t)&v280);
            }
            else
            {
              v280 = 0u;
              v281 = 0u;
            }
            outlined destroy of AnyHashable((uint64_t)&v278);
            swift_bridgeObjectRelease(v36);
            if (!*((_QWORD *)&v281 + 1))
              goto LABEL_15;
            v39 = swift_dynamicCast(&v278, &v280, (char *)&type metadata for Any + 8, &type metadata for UInt, 6);
            if ((_DWORD)v39 && (v278 | 2) == 3)
            {
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v39);
              v40 = *(_QWORD *)(v285[0] + 16);
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v40);
              v41 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v40, v33);
              specialized ContiguousArray._endMutation()(v41);
              goto LABEL_17;
            }
LABEL_16:
            swift_release(v33);
LABEL_17:
            ++v30;
            if (!(v29 >> 62))
              continue;
            goto LABEL_12;
          }
          break;
        }
      }
    }
  }
  swift_bridgeObjectRelease(v275);
  swift_bridgeObjectRelease(v29);
  v45 = v285[0];
  v46 = swift_retain_n(v285[0], 2);
  v47 = Logger.logObject.getter(v46);
  v48 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v47, v48))
  {
    v1 = swift_slowAlloc(12, -1);
    *(_DWORD *)v1 = 134217984;
    v49 = v272;
    if ((v45 & 0x8000000000000000) == 0 && (v45 & 0x4000000000000000) == 0)
    {
      v50 = *(_QWORD *)(v45 + 16);
      goto LABEL_42;
    }
LABEL_303:
    swift_bridgeObjectRetain(v45);
    v50 = _CocoaArrayWrapper.endIndex.getter(v245);
    swift_release(v45);
LABEL_42:
    swift_release(v45);
    v278 = v50;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v278, v279, v1 + 4);
    swift_release(v45);
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "[Bundles] Filtering suggestions by recommended eligibility, bundle count after filter:%ld", (uint8_t *)v1, 0xCu);
    swift_slowDealloc(v1, -1, -1);

  }
  else
  {

    v51 = swift_release_n(v45, 2, v52);
    v49 = v272;
  }
  Date.init()(v51);
  v288 = 0;
  v289 = (unint64_t)_swiftEmptyArrayStorage;
  v287 = 0;
  if (v45 < 0)
    v1 = 1;
  else
    v1 = ((unint64_t)v45 >> 62) & 1;
  v47 = v263;
  if ((_DWORD)v1 == 1)
  {
    swift_bridgeObjectRetain(v45);
    v242 = _CocoaArrayWrapper.endIndex.getter(v241);
    swift_release(v45);
    v243 = v242 <= 0;
    v47 = v263;
    if (v243)
      goto LABEL_58;
    swift_retain(v45);
    if (_CocoaArrayWrapper.endIndex.getter(v244))
    {
LABEL_50:
      if ((v45 & 0xC000000000000001) == 0)
      {
        if (!*(_QWORD *)(v45 + 16))
        {
          __break(1u);
          goto LABEL_303;
        }
        v53 = *(_QWORD *)(v45 + 32);
        swift_retain(v53);
LABEL_53:
        swift_release(v45);
        v54 = *(id *)(v53 + 16);
        v55 = objc_msgSend(v54, "displayStartDate", swift_release(v53).n128_f64[0]);

        v56 = v271;
        static Date._unconditionallyBridgeFromObjectiveC(_:)(v55);

        v57 = static Date.< infix(_:_:)(v49, v56);
        v47 = v263;
        v58 = *(void (**)(uint64_t, uint64_t))(v263 + 8);
        if ((v57 & 1) != 0)
        {
          v59 = v268;
          v58(v49, v268);
          v60 = v59;
          v47 = v263;
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v263 + 32))(v49, v56, v60);
          if ((v1 & 1) == 0)
            goto LABEL_60;
        }
        else
        {
          v58(v56, v268);
          if ((v1 & 1) == 0)
          {
LABEL_60:
            v270 = *(_QWORD *)(v45 + 16);
            goto LABEL_61;
          }
        }
LABEL_58:
        swift_retain(v45);
        v270 = _CocoaArrayWrapper.endIndex.getter(v61);
        if (!v270)
          goto LABEL_59;
        goto LABEL_62;
      }
    }
    else
    {
      swift_release(v45);
      __break(1u);
    }
    v53 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v45);
    goto LABEL_53;
  }
  if (*(_QWORD *)(v45 + 16))
  {
    swift_retain(v45);
    goto LABEL_50;
  }
  v270 = 0;
LABEL_61:
  v62 = swift_retain(v45);
  if (!v270)
  {
LABEL_59:
    swift_release_n(v45, 2, v62);
    isa = (void (*)(uint64_t, uint64_t))v47[1].isa;
    v64 = _swiftEmptyArrayStorage;
    isa(v49, v268);
LABEL_266:
    v240 = *v246;
    *v246 = (uint64_t)v64;
    swift_bridgeObjectRelease(v240);
    swift_bridgeObjectRelease(v289);
    return;
  }
LABEL_62:
  v260 = v45 & 0xC000000000000001;
  swift_beginAccess(&v289, &v278, 0, 0);
  swift_beginAccess(&v288, &v280, 1, 0);
  v65 = swift_beginAccess(&v287, v286, 1, 0);
  v66 = 0;
  v67 = 0;
  v256 = 0;
  v249 = v45 + 32;
  v251 = v285;
  v65.n128_u64[0] = 136315650;
  v250 = v65;
  v247 = (char *)&type metadata for Any + 8;
  v65.n128_u64[0] = 136316162;
  v269 = v65;
  v257 = v45;
  v258 = _swiftEmptyArrayStorage;
  while (1)
  {
    if (v260)
    {
      v70 = specialized _ArrayBuffer._getElementSlowPath(_:)(v66, v45);
      v71 = __OFADD__(v66, 1);
      v72 = (char *)(v66 + 1);
      if (v71)
        goto LABEL_276;
    }
    else
    {
      if (v66 >= *(_QWORD *)(v45 + 16))
        goto LABEL_282;
      swift_retain(*(_QWORD *)(v249 + 8 * v66));
      v71 = __OFADD__(v66, 1);
      v72 = (char *)(v66 + 1);
      if (v71)
        goto LABEL_276;
    }
    v10 = v45;
    v271 = (unint64_t)v72;
    v73 = v261;
    v74 = (id *)v70;
    static Calendar.current.getter(v70);
    v1 = (uint64_t)v47;
    v75 = objc_msgSend(v74[2], "displayStartDate");
    v76 = v267;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v75);

    LOBYTE(v75) = Calendar.isDate(_:inSameDayAs:)(v49, v76);
    v265 = *(void (**)(char *, uint64_t))(v1 + 8);
    v265(v76, v268);
    v77 = *(void (**)(char *, uint64_t))(v255 + 8);
    v77(v73, v262);
    v264 = v74;
    if ((v75 & 1) == 0)
      break;
    swift_beginAccess(&v289, v285, 33, 0);
    swift_retain(v74);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v78);
    v80 = *(_QWORD *)((v289 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v79 = *(_QWORD *)((v289 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v80 >= v79 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v79 > 1, v80 + 1, 1);
    v81 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v80, v74);
    specialized Array._endMutation()(v81);
    swift_endAccess(v285);
    v82 = swift_retain_n(v74, 6);
    v83 = Logger.logObject.getter(v82);
    v84 = static os_log_type_t.default.getter();
    v85 = v84;
    if (os_log_type_enabled(v83, v84))
    {
      v1 = swift_slowAlloc(32, -1);
      v277 = swift_slowAlloc(64, -1);
      v285[0] = v277;
      *(_DWORD *)v1 = v250.n128_u32[0];
      v274 = v1 + 4;
      v86 = (void (*)(void))*((_QWORD *)*v74 + 43);
      v87 = v77;
      v88 = v67;
      v89 = v252;
      LODWORD(v275) = v85;
      v86();
      v90 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v91 = v254;
      v92 = dispatch thunk of CustomStringConvertible.description.getter(v254, v90);
      v94 = v93;
      v95 = v89;
      v67 = v88;
      v77 = v87;
      (*(void (**)(char *, uint64_t))(v253 + 8))(v95, v91);
      v284 = COERCE_DOUBLE(getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v92, v94, v285));
      v10 = (uint64_t)v251;
      v96 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v284, v251, v274);
      swift_release_n(v74, 2, v96);
      v97 = v94;
      v49 = v272;
      swift_bridgeObjectRelease(v97);
      *(_WORD *)(v1 + 12) = 2080;
      v284 = COERCE_DOUBLE(MOEventBundle.visibilityCategory.getter());
      type metadata accessor for MOVisibilityCategoryForUI(0);
      v99 = String.init<A>(describing:)(&v284, v98);
      v101 = v100;
      v284 = COERCE_DOUBLE(getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v99, v100, v285));
      v102 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v284, v10, v1 + 14);
      swift_release_n(v74, 2, v102);
      swift_bridgeObjectRelease(v101);
      *(_WORD *)(v1 + 22) = 2048;
      v284 = MOEventBundle.baseScore.getter();
      v103 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v284, v10, v1 + 24);
      swift_release_n(v74, 2, v103);
      _os_log_impl((void *)&_mh_execute_header, v83, (os_log_type_t)v275, "[Bundles] inserted suggestion: %s into Recents with ranking category: %s, bundle goodness score: %f", (uint8_t *)v1, 0x20u);
      v104 = v277;
      swift_arrayDestroy(v277, 2, v247);
      v45 = v257;
      swift_slowDealloc(v104, -1, -1);
      swift_slowDealloc(v1, -1, -1);

    }
    else
    {

      swift_release_n(v74, 6, v114);
      v45 = v10;
    }
    v113 = v271;
    if (v270 < 0)
      goto LABEL_277;
    if ((v271 & 0x8000000000000000) != 0)
      goto LABEL_92;
LABEL_85:
    if (v113 >= v270)
      goto LABEL_92;
    if (v260)
    {
      v115 = specialized _ArrayBuffer._getElementSlowPath(_:)(v113, v45);
      v116 = v115;
    }
    else
    {
      if ((unint64_t)v113 >= *(_QWORD *)(v45 + 16))
        goto LABEL_289;
      v116 = *(_QWORD *)(v249 + 8 * v113);
      swift_retain(v116);
    }
    v1 = (uint64_t)v261;
    static Calendar.current.getter(v115);
    v117 = objc_msgSend(*(id *)(v116 + 16), "displayStartDate");
    v118 = v267;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v117);

    LOBYTE(v117) = Calendar.isDate(_:inSameDayAs:)(v49, v118);
    v119 = swift_release(v116);
    ((void (*)(char *, uint64_t, __n128))v265)(v118, v268, v119);
    v77((char *)v1, v262);
    v66 = v271;
    if ((v117 & 1) == 0)
      goto LABEL_92;
    v69 = swift_release(v264);
    v120 = v67;
    v47 = v263;
LABEL_65:
    v67 = v120;
    if (v66 == v270)
    {
      swift_release_n(v45, 2, v69);
      v64 = v258;
      v265((char *)v49, v268);
      goto LABEL_266;
    }
  }
  swift_beginAccess(&v289, v285, 33, 0);
  v105 = v289;
  v289 = (unint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v105);
  swift_retain(v74);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v106);
  v108 = *(_QWORD *)((v289 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v107 = *(_QWORD *)((v289 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v108 >= v107 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v107 > 1, v108 + 1, 1);
  v109 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v108, v74);
  specialized Array._endMutation()(v109);
  swift_endAccess(v285);
  v110 = objc_msgSend(v74[2], "displayStartDate");
  v111 = v267;
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v110);

  v112 = v268;
  v265((char *)v49, v268);
  (*(void (**)(uint64_t, char *, uint64_t))(v263 + 32))(v49, v111, v112);
  if (v270 < 0)
    goto LABEL_278;
  v113 = v271;
  v45 = v10;
  if ((v271 & 0x8000000000000000) == 0)
    goto LABEL_85;
LABEL_92:
  v121 = v289;
  if (!(v289 >> 62))
  {
    if (*(uint64_t *)((v289 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
      goto LABEL_94;
LABEL_149:
    v120 = v67;
    v10 = (uint64_t)v264;
LABEL_250:
    v287 = 0;
    v288 = 0;
    v215 = swift_retain_n(v10, 6);
    v216 = Logger.logObject.getter(v215);
    v217 = static os_log_type_t.default.getter();
    v218 = v217;
    if (os_log_type_enabled(v216, v217))
    {
      v1 = swift_slowAlloc(32, -1);
      v277 = swift_slowAlloc(64, -1);
      v285[0] = v277;
      *(_DWORD *)v1 = v250.n128_u32[0];
      v219 = *(void (**)(void))(*(_QWORD *)v10 + 344);
      v220 = v252;
      LODWORD(v275) = v218;
      v219();
      v221 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v222 = v254;
      v223 = dispatch thunk of CustomStringConvertible.description.getter(v254, v221);
      v225 = v224;
      v226 = v220;
      v45 = v257;
      (*(void (**)(char *, uint64_t))(v253 + 8))(v226, v222);
      v284 = COERCE_DOUBLE(getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v223, v225, v285));
      v227 = v251;
      v228 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v284, v251, v1 + 4);
      swift_release_n(v10, 2, v228);
      v229 = v225;
      v49 = v272;
      swift_bridgeObjectRelease(v229);
      *(_WORD *)(v1 + 12) = 2080;
      v284 = COERCE_DOUBLE(MOEventBundle.visibilityCategory.getter());
      type metadata accessor for MOVisibilityCategoryForUI(0);
      v231 = String.init<A>(describing:)(&v284, v230);
      v233 = v232;
      v284 = COERCE_DOUBLE(getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v231, v232, v285));
      v234 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v284, v227, v1 + 14);
      swift_release_n(v10, 2, v234);
      swift_bridgeObjectRelease(v233);
      *(_WORD *)(v1 + 22) = 2048;
      v284 = MOEventBundle.baseScore.getter();
      v235 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v284, v227, v1 + 24);
      swift_release_n(v10, 2, v235);
      _os_log_impl((void *)&_mh_execute_header, v216, (os_log_type_t)v275, "[Bundles] inserted suggestion: %s into Recents with ranking category: %s, bundle goodness score: %f", (uint8_t *)v1, 0x20u);
      v236 = v277;
      swift_arrayDestroy(v277, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v236, -1, -1);
      swift_slowDealloc(v1, -1, -1);
      swift_release(v10);

    }
    else
    {

      swift_release_n(v10, 7, v68);
    }
    v47 = v263;
    v66 = v271;
    goto LABEL_65;
  }
  if ((v289 & 0x8000000000000000) != 0)
    v150 = v289;
  else
    v150 = v289 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v289);
  v151 = _CocoaArrayWrapper.endIndex.getter(v150);
  swift_bridgeObjectRelease(v121);
  if (v151 < 1)
    goto LABEL_149;
LABEL_94:
  swift_beginAccess(&v289, v285, 33, 0);
  v122 = v259;
  specialized MutableCollection<>.sort(by:)((uint64_t *)&v289, specialized _ArrayBuffer._consumeAndCreateNew(), (uint64_t (*)(_QWORD *))specialized UnsafeMutableBufferPointer._stableSortImpl(by:));
  v259 = v122;
  swift_endAccess(v285);
  v123 = v289;
  if (v289 >> 62)
  {
    if ((v289 & 0x8000000000000000) != 0)
      v152 = v289;
    else
      v152 = v289 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v289);
    v124 = _CocoaArrayWrapper.endIndex.getter(v152);
    if (!v124)
      goto LABEL_154;
LABEL_96:
    v275 = v123 & 0xC000000000000001;
    swift_beginAccess(&v287, &v283, 1, 0);
    v125 = 0;
    v266 = v123 & 0xFFFFFFFFFFFFFF8;
    v273 = v124;
    v274 = v123;
    while (1)
    {
      LODWORD(v277) = v67;
      if (v275)
      {
        v126 = specialized _ArrayBuffer._getElementSlowPath(_:)(v125, v123);
        v10 = v125 + 1;
        if (__OFADD__(v125, 1))
          goto LABEL_269;
      }
      else
      {
        if (v125 >= *(_QWORD *)(v266 + 16))
          goto LABEL_273;
        v126 = *(_QWORD *)(v123 + 8 * v125 + 32);
        swift_retain(v126);
        v10 = v125 + 1;
        if (__OFADD__(v125, 1))
          goto LABEL_269;
      }
      v127 = swift_retain_n(v126, 4);
      v128 = Logger.logObject.getter(v127);
      v129 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v128, v129))
      {
        v130 = swift_slowAlloc(48, -1);
        v131 = swift_slowAlloc(32, -1);
        v285[0] = v131;
        *(_DWORD *)v130 = v269.n128_u32[0];
        v132 = (*(uint64_t (**)(void))(*(_QWORD *)v126 + 448))();
        v134 = v133;
        *(_QWORD *)(v130 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v132, v133, v285);
        swift_release_n(v126, 2, v135);
        v136 = swift_bridgeObjectRelease(v134);
        *(_WORD *)(v130 + 12) = 1024;
        LOBYTE(v134) = (*(uint64_t (**)(__n128))(*(_QWORD *)v126 + 408))(v136);
        swift_release(v126);
        *(_DWORD *)(v130 + 14) = v134 & 1;
        swift_release(v126);
        *(_WORD *)(v130 + 18) = 2048;
        *(_QWORD *)(v130 + 20) = v287;
        *(_WORD *)(v130 + 28) = 2048;
        v137 = v289;
        *(_QWORD *)(v130 + 30) = v288;
        *(_WORD *)(v130 + 38) = 2048;
        if ((unint64_t)v137 >> 62)
        {
          if (v137 < 0)
            v144 = v137;
          else
            v144 = v137 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v137);
          v138 = _CocoaArrayWrapper.endIndex.getter(v144);
          swift_bridgeObjectRelease(v137);
        }
        else
        {
          v138 = *(_QWORD *)((v137 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        *(_QWORD *)(v130 + 40) = v138;
        _os_log_impl((void *)&_mh_execute_header, v128, v129, "[RecentTabLayout] Date: %s, isFullWidthEligible: %{BOOL}d, rowCount: %ld, topLockCount: %ld, count: %ld", (uint8_t *)v130, 0x30u);
        swift_arrayDestroy(v131, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v131, -1, -1);
        swift_slowDealloc(v130, -1, -1);

        v49 = v272;
      }
      else
      {

        v139 = swift_release_n(v126, 4, v140);
      }
      v1 = v287;
      if (v287 > 1)
      {
        swift_release(v126);
        v120 = v277;
        v123 = v274;
        goto LABEL_155;
      }
      v141 = *(_QWORD *)v126;
      if ((v277 & 1) != 0)
        break;
      if (((*(uint64_t (**)(uint64_t))(v141 + 408))(v139) & 1) != 0)
        goto LABEL_117;
      v143 = v289;
      if (v289 >> 62)
      {
        if ((v289 & 0x8000000000000000) != 0)
          v145 = v289;
        else
          v145 = v289 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v289);
        v146 = _CocoaArrayWrapper.endIndex.getter(v145);
        swift_bridgeObjectRelease(v143);
        if (v146 == 1)
        {
LABEL_117:
          (*(void (**)(_QWORD))(*(_QWORD *)v126 + 160))(0);
          swift_release(v126);
          if (__OFADD__(v287, 1))
            goto LABEL_274;
          ++v287;
          v142 = v288 + 1;
          if (__OFADD__(v288, 1))
            goto LABEL_275;
          goto LABEL_119;
        }
      }
      else if (*(_QWORD *)((v289 & 0xFFFFFFFFFFFFF8) + 0x10) == 1)
      {
        goto LABEL_117;
      }
      if (v1 == 1)
      {
        v1 = v288 + 1;
        if (__OFADD__(v288, 1))
          goto LABEL_283;
        v147 = v289;
        if (v289 >> 62)
        {
          if ((v289 & 0x8000000000000000) != 0)
            v148 = v289;
          else
            v148 = v289 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v289);
          v149 = _CocoaArrayWrapper.endIndex.getter(v148);
          swift_bridgeObjectRelease(v147);
          if (v1 == v149)
          {
LABEL_134:
            (*(void (**)(_QWORD))(*(_QWORD *)v126 + 160))(0);
            swift_release(v126);
            if (__OFADD__(v287, 1))
              goto LABEL_291;
            ++v287;
            v142 = v288 + 1;
            if (__OFADD__(v288, 1))
              goto LABEL_292;
            goto LABEL_119;
          }
        }
        else if (v1 == *(_QWORD *)((v289 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_134;
        }
      }
      (*(void (**)(uint64_t))(*(_QWORD *)v126 + 160))(1);
      swift_release(v126);
      if (__OFADD__(v288, 1))
        goto LABEL_281;
      ++v288;
      LODWORD(v67) = 1;
      v120 = 1;
LABEL_120:
      v123 = v274;
      if (v10 == v273)
        goto LABEL_155;
      ++v125;
    }
    (*(void (**)(uint64_t))(v141 + 160))(1);
    swift_release(v126);
    if (__OFADD__(v287, 1))
      goto LABEL_270;
    ++v287;
    v142 = v288 + 1;
    if (__OFADD__(v288, 1))
      goto LABEL_271;
LABEL_119:
    v288 = v142;
    LODWORD(v67) = 0;
    v120 = 0;
    goto LABEL_120;
  }
  v124 = *(_QWORD *)((v289 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v289);
  if (v124)
    goto LABEL_96;
LABEL_154:
  v120 = v67;
LABEL_155:
  swift_bridgeObjectRelease(v123);
  v153 = v289;
  if (v289 >> 62)
  {
    if ((v289 & 0x8000000000000000) != 0)
      v190 = v289;
    else
      v190 = v289 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v289);
    v154 = _CocoaArrayWrapper.endIndex.getter(v190);
    swift_bridgeObjectRelease(v153);
  }
  else
  {
    v154 = *(_QWORD *)((v289 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v10 = v288;
  if (v288 >= v154)
  {
    v161 = v289;
    v284 = *(double *)&v289;
    swift_bridgeObjectRetain(v289);
    goto LABEL_231;
  }
  swift_beginAccess(&v289, v285, 32, 0);
  if (v10 < 0)
    goto LABEL_284;
  v155 = v289;
  if (!(v289 >> 62))
  {
    if (*(_QWORD *)((v289 & 0xFFFFFFFFFFFFF8) + 0x10) < v10)
      goto LABEL_285;
    goto LABEL_161;
  }
  if ((v289 & 0x8000000000000000) != 0)
    v191 = v289;
  else
    v191 = v289 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v289);
  v1 = _CocoaArrayWrapper.endIndex.getter(v191);
  swift_bridgeObjectRelease(v155);
  if ((v1 & 0x8000000000000000) == 0)
  {
    swift_bridgeObjectRetain(v155);
    v192 = _CocoaArrayWrapper.endIndex.getter(v191);
    swift_bridgeObjectRelease(v155);
    if (v192 < v10)
      goto LABEL_285;
LABEL_161:
    if (v10 && (v155 & 0xC000000000000001) != 0)
    {
      type metadata accessor for MOSuggestionCollectionViewCellViewModel();
      v156 = 0;
      do
      {
        v157 = v156 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v156);
        v156 = v157;
      }
      while (v10 != v157);
    }
    if ((unint64_t)v155 >> 62)
    {
      if (v155 < 0)
        v162 = v155;
      else
        v162 = v155 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v155);
      v158 = _CocoaArrayWrapper.subscript.getter(0, v10, v162);
      v1 = v163;
      v160 = v164;
      v159 = v165;
      swift_bridgeObjectRelease(v155);
    }
    else
    {
      v158 = v155 & 0xFFFFFFFFFFFFFF8;
      v1 = (v155 & 0xFFFFFFFFFFFFFF8) + 32;
      v159 = (2 * v10) | 1;
      swift_bridgeObjectRetain(v155);
      v160 = 0;
    }
    swift_endAccess(v285);
    if ((v159 & 1) != 0)
    {
      v167 = type metadata accessor for __ContiguousArrayStorageBase(0);
      v168 = swift_unknownObjectRetain_n(v158, 2);
      v169 = (_QWORD *)swift_dynamicCastClass(v168, v167);
      if (!v169)
      {
        swift_unknownObjectRelease(v158);
        v169 = _swiftEmptyArrayStorage;
      }
      v170 = v169[2];
      swift_release(v169);
      if (__OFSUB__(v159 >> 1, v160))
        goto LABEL_293;
      if (v170 != (v159 >> 1) - v160)
      {
        swift_unknownObjectRelease(v158);
        goto LABEL_173;
      }
      v166 = (_QWORD *)swift_dynamicCastClass(v158, v167);
      if (!v166)
      {
        swift_unknownObjectRelease(v158);
        v166 = _swiftEmptyArrayStorage;
      }
    }
    else
    {
LABEL_173:
      v166 = specialized _copyCollectionToContiguousArray<A>(_:)(v158, v1, v160, v159);
    }
    swift_unknownObjectRelease(v158);
    swift_beginAccess(&v289, v285, 32, 0);
    v171 = v289;
    if (v289 >> 62)
    {
      if ((v289 & 0x8000000000000000) != 0)
        v193 = v289;
      else
        v193 = v289 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v289);
      v1 = _CocoaArrayWrapper.endIndex.getter(v193);
      swift_bridgeObjectRelease(v171);
      if (v1 < v10)
        goto LABEL_305;
      swift_bridgeObjectRetain(v171);
      v194 = _CocoaArrayWrapper.endIndex.getter(v193);
      swift_bridgeObjectRelease(v171);
      if (v194 < v10)
        goto LABEL_306;
      swift_bridgeObjectRetain(v171);
      v195 = _CocoaArrayWrapper.endIndex.getter(v193);
      swift_bridgeObjectRelease(v171);
      if (v195 < v1)
        goto LABEL_287;
    }
    else
    {
      v1 = *(_QWORD *)((v289 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v1 < v10)
        goto LABEL_286;
    }
    if ((v171 & 0xC000000000000001) != 0 && v10 != v1)
    {
      if (v10 >= v1)
        goto LABEL_295;
      type metadata accessor for MOSuggestionCollectionViewCellViewModel();
      v172 = v10;
      do
      {
        v173 = v172 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v172);
        v172 = v173;
      }
      while (v1 != v173);
    }
    if ((unint64_t)v171 >> 62)
    {
      if (v171 < 0)
        v177 = v171;
      else
        v177 = v171 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v171);
      v174 = _CocoaArrayWrapper.subscript.getter(v10, v1, v177);
      v175 = v178;
      v176 = v179;
      v1 = v180;
      swift_bridgeObjectRelease(v171);
    }
    else
    {
      v174 = v171 & 0xFFFFFFFFFFFFFF8;
      v175 = (v171 & 0xFFFFFFFFFFFFFF8) + 32;
      v1 = (2 * v1) | 1;
      swift_bridgeObjectRetain(v171);
      v176 = v10;
    }
    swift_endAccess(v285);
    if ((v1 & 1) != 0)
    {
      v182 = type metadata accessor for __ContiguousArrayStorageBase(0);
      v183 = swift_unknownObjectRetain_n(v174, 2);
      v184 = (_QWORD *)swift_dynamicCastClass(v183, v182);
      if (!v184)
      {
        swift_unknownObjectRelease(v174);
        v184 = _swiftEmptyArrayStorage;
      }
      v185 = v184[2];
      swift_release(v184);
      if (__OFSUB__((unint64_t)v1 >> 1, v176))
        goto LABEL_296;
      if (v185 != ((unint64_t)v1 >> 1) - v176)
      {
        swift_unknownObjectRelease(v174);
        goto LABEL_194;
      }
      v181 = (_QWORD *)swift_dynamicCastClass(v174, v182);
      if (!v181)
      {
        swift_unknownObjectRelease(v174);
        v181 = _swiftEmptyArrayStorage;
      }
    }
    else
    {
LABEL_194:
      v181 = specialized _copyCollectionToContiguousArray<A>(_:)(v174, v175, v176, v1);
    }
    swift_unknownObjectRelease(v174);
    v285[0] = (uint64_t)v181;
    v186 = v259;
    specialized MutableCollection<>.sort(by:)(v285, specialized _ArrayBuffer._consumeAndCreateNew(), (uint64_t (*)(_QWORD *))specialized UnsafeMutableBufferPointer._stableSortImpl(by:));
    v259 = v186;
    v187 = v285[0];
    if ((unint64_t)v285[0] >> 62)
    {
      if (v285[0] < 0)
        v196 = v285[0];
      else
        v196 = v285[0] & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v285[0]);
      v1 = _CocoaArrayWrapper.endIndex.getter(v196);
      if (v1)
      {
LABEL_203:
        if (v1 < 1)
          goto LABEL_290;
        for (i = 0; i != v1; ++i)
        {
          if ((v187 & 0xC000000000000001) != 0)
          {
            v189 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v187);
          }
          else
          {
            v189 = *(_QWORD *)(v187 + 8 * i + 32);
            swift_retain(v189);
          }
          (*(void (**)(uint64_t))(*(_QWORD *)v189 + 160))(2);
          swift_release(v189);
        }
      }
    }
    else
    {
      v1 = *(_QWORD *)((v285[0] & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v285[0]);
      if (v1)
        goto LABEL_203;
    }
    swift_bridgeObjectRelease(v187);
    v284 = *(double *)&v166;
    specialized Array.append<A>(contentsOf:)(v187);
    v161 = *(_QWORD *)&v284;
    v49 = v272;
LABEL_231:
    v45 = v257;
    v197 = v10 + 3;
    if (__OFADD__(v10, 3))
      goto LABEL_279;
    if (!((unint64_t)v161 >> 62))
    {
      if (v197 < *(_QWORD *)((v161 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_234;
LABEL_245:
      v212 = v258;
      if ((swift_isUniquelyReferenced_nonNull_native(v258) & 1) == 0)
        v212 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v212[2] + 1, 1, v212);
      v1 = v212[2];
      v213 = v212[3];
      v258 = v212;
      v10 = (uint64_t)v264;
      if (v1 >= v213 >> 1)
        v258 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((_QWORD *)(v213 > 1), v1 + 1, 1, v258);
      v214 = v258;
      v258[2] = v1 + 1;
      v214[v1 + 4] = v161;
      v71 = __OFADD__(v256++, 1);
      if (v71)
        goto LABEL_280;
      goto LABEL_250;
    }
    if (v161 < 0)
      v237 = v161;
    else
      v237 = v161 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v161);
    v238 = _CocoaArrayWrapper.endIndex.getter(v237);
    swift_bridgeObjectRelease(v161);
    if (v197 >= v238)
      goto LABEL_245;
LABEL_234:
    swift_bridgeObjectRetain(v161);
    specialized Collection.dropFirst(_:)(v10 + 3, v161);
    v1 = v198;
    v200 = v199;
    v10 = v201;
    v203 = v202;
    swift_bridgeObjectRelease(v161);
    if ((v203 & 1) != 0)
    {
      v277 = v200;
      v205 = type metadata accessor for __ContiguousArrayStorageBase(0);
      v206 = swift_unknownObjectRetain_n(v1, 2);
      v207 = (_QWORD *)swift_dynamicCastClass(v206, v205);
      if (!v207)
      {
        swift_unknownObjectRelease(v1);
        v207 = _swiftEmptyArrayStorage;
      }
      v208 = v207[2];
      swift_release(v207);
      if (__OFSUB__(v203 >> 1, v10))
        goto LABEL_294;
      if (v208 != (v203 >> 1) - v10)
      {
        swift_unknownObjectRelease(v1);
        v45 = v257;
        v200 = v277;
        goto LABEL_235;
      }
      v204 = (_QWORD *)swift_dynamicCastClass(v1, v205);
      v45 = v257;
      if (!v204)
      {
        swift_unknownObjectRelease(v1);
        v204 = _swiftEmptyArrayStorage;
      }
    }
    else
    {
LABEL_235:
      v204 = specialized _copyCollectionToContiguousArray<A>(_:)(v1, v200, v10, v203);
    }
    swift_unknownObjectRelease(v1);
    v49 = v272;
    if ((unint64_t)v161 >> 62)
    {
      if (v161 < 0)
        v239 = v161;
      else
        v239 = v161 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v161);
      v1 = _CocoaArrayWrapper.endIndex.getter(v239);
      swift_bridgeObjectRelease(v161);
      if (v1 < v197)
        goto LABEL_288;
    }
    else
    {
      v1 = *(_QWORD *)((v161 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v1 < v197)
        goto LABEL_288;
    }
    specialized Array.replaceSubrange<A>(_:with:)(v197, v1);
    v209 = v248;
    swift_beginAccess(v248, v285, 33, 0);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v209);
    v282 = *v209;
    *v209 = 0x8000000000000000;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)v204, v256, isUniquelyReferenced_nonNull_native);
    v211 = *v209;
    *v209 = v282;
    swift_bridgeObjectRelease(v211);
    swift_endAccess(v285);
    v161 = *(_QWORD *)&v284;
    goto LABEL_245;
  }
  __break(1u);
LABEL_305:
  __break(1u);
LABEL_306:
  __break(1u);
}

uint64_t Array<A>.sortedByStartDate.getter(uint64_t result)
{
  Array<A>.sortedByRankingScore.getter(result, (uint64_t (*)(_QWORD *))specialized UnsafeMutableBufferPointer._stableSortImpl(by:));
  return result;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Array<A>.sortedByRankingScore.getter(uint64_t a1, uint64_t (*a2)(_QWORD *))
{
  uint64_t v3;

  swift_bridgeObjectRetain(a1);
  specialized MutableCollection<>.sort(by:)(&v3, specialized _ArrayBuffer._consumeAndCreateNew(), a2);
}

BOOL MOSuggestionCollectionViewModel.isFullWidthEligible(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 400))(a1) & 1) != 0)
    return 0;
  v2 = (uint64_t)MOEventBundle._orderedAssetReferences()();
  if (!v2)
    return 1;
  v3 = v2;
  if ((unint64_t)v2 >> 62)
  {
    if (v2 >= 0)
      v2 &= 0xFFFFFFFFFFFFFF8uLL;
    v4 = _CocoaArrayWrapper.endIndex.getter(v2);
  }
  else
  {
    v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v3);
  return v4 != 1;
}

BOOL MOSuggestionCollectionViewModel.isEligibleToBeUpranked(_:)(uint64_t a1)
{
  uint64_t v1;

  return ((*(uint64_t (**)(void))(*(_QWORD *)v1 + 784))() & 1) != 0
      && objc_msgSend(*(id *)(a1 + 16), "interfaceType") != (id)10;
}

void MOSuggestionCollectionViewModel.removeBundle(_:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  char v11;
  void *v12;
  char v13;
  _BYTE v14[24];
  _BYTE v15[24];

  v2 = v1;
  v4 = v1 + 6;
  swift_beginAccess(v4, v15, 0, 0);
  v5 = v2[6];
  swift_bridgeObjectRetain(v5);
  v6 = specialized Sequence<>.contains(_:)(a1, v5);
  swift_bridgeObjectRelease(v5);
  if ((v6 & 1) != 0)
  {
    v7 = *v4;
    swift_bridgeObjectRetain(*v4);
    specialized Collection<>.firstIndex(of:)(a1, v7);
    v9 = v8;
    v11 = v10;
    swift_bridgeObjectRelease(v7);
    if ((v11 & 1) == 0)
    {
      swift_beginAccess(v4, v14, 33, 0);
      v12 = (void *)specialized Array.remove(at:)(v9, specialized _ArrayBuffer._consumeAndCreateNew());
      swift_endAccess(v14);

      v13 = (*(uint64_t (**)(void))(*v2 + 424))();
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*v2 + 736))(v13 & 1, 0, 0);
    }
  }
}

void specialized Collection<>.firstIndex(of:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  void *v5;
  char v6;
  uint64_t i;
  id v8;
  void *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;

  if ((unint64_t)a2 >> 62)
    goto LABEL_20;
  v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
      }
      else
      {
        if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        v4 = *(id *)(a2 + 32);
      }
      v5 = v4;
      type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MOEventBundle, MOEventBundle_ptr);
      v6 = static NSObject.== infix(_:_:)(v5);

      if ((v6 & 1) == 0)
      {
        for (i = 0; ; ++i)
        {
          v11 = i + 1;
          if (__OFADD__(i, 1))
            break;
          if (v11 == v3)
            return;
          if ((a2 & 0xC000000000000001) != 0)
          {
            v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i + 1, a2);
          }
          else
          {
            if ((v11 & 0x8000000000000000) != 0)
              goto LABEL_18;
            if (v11 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_19;
            v8 = *(id *)(a2 + 32 + 8 * v11);
          }
          v9 = v8;
          v10 = static NSObject.== infix(_:_:)(v8);

          if ((v10 & 1) != 0)
            return;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        v12 = a2 < 0 ? a2 : a2 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a2);
        v3 = _CocoaArrayWrapper.endIndex.getter(v12);
        swift_bridgeObjectRelease(a2);
        if (v3)
          continue;
      }
      return;
    }
  }
}

uint64_t specialized Collection<>.firstIndex(of:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(a2 + 32));
  v7 = v6;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v5 == v8 && v7 == v9)
  {
    v13 = 0;
LABEL_17:
    swift_bridgeObjectRelease_n(v7, 2);
    return v13;
  }
  v11 = v9;
  v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v11);
  v13 = 0;
  if ((v12 & 1) == 0)
  {
    v14 = v2 - 1;
    while (1)
    {
      if (v14 == v13)
        return 0;
      v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(a2 + 40 + 8 * v13));
      v7 = v16;
      v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
      if (v15 == v17 && v7 == v18)
        break;
      v20 = v18;
      v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v7, v17, v18, 0);
      swift_bridgeObjectRelease(v7);
      swift_bridgeObjectRelease(v20);
      ++v13;
      if ((v21 & 1) != 0)
        return v13;
    }
    ++v13;
    goto LABEL_17;
  }
  return v13;
}

Swift::Void __swiftcall MOSuggestionCollectionViewModel.showMoreForDaySection(section:)(Swift::Int section)
{
  _QWORD *v1;
  uint64_t v3;
  BOOL v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[24];
  char v19[24];
  char v20[24];
  uint64_t v21;

  v3 = (*(uint64_t (**)(void))(*v1 + 568))();
  v4 = __OFSUB__(section, v3);
  v5 = section - v3;
  if (v4)
  {
    __break(1u);
    goto LABEL_10;
  }
  v6 = v1 + 7;
  swift_beginAccess(v1 + 7, v20, 0, 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    v7 = v1[7];
    if ((int64_t)v5 < *(_QWORD *)(v7 + 16))
    {
      v8 = *(_QWORD *)(v7 + 8 * v5 + 32);
      v21 = v8;
      v9 = v1 + 8;
      swift_beginAccess(v1 + 8, v19, 0, 0);
      v10 = v1[8];
      if (*(_QWORD *)(v10 + 16))
      {
        v11 = specialized __RawDictionaryStorage.find<A>(_:)(v5);
        if ((v12 & 1) != 0)
        {
          v13 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v11);
          swift_bridgeObjectRetain(v8);
          swift_bridgeObjectRetain(v13);
          specialized Array.append<A>(contentsOf:)(v14);
          swift_beginAccess(v6, v18, 33, 0);
          v15 = specialized Array.remove(at:)(v5);
          swift_endAccess(v18);
          swift_bridgeObjectRelease(v15);
          v16 = v21;
          swift_beginAccess(v6, v18, 33, 0);
          if (*(_QWORD *)(*v6 + 16) >= v5)
          {
            specialized Array.replaceSubrange<A>(_:with:)(v5, v5, v16);
            swift_endAccess(v18);
            swift_beginAccess(v9, v18, 33, 0);
            v17 = specialized Dictionary._Variant.removeValue(forKey:)(v5);
            swift_endAccess(v18);
            swift_bridgeObjectRelease(v17);
            return;
          }
LABEL_10:
          __break(1u);
        }
      }
    }
  }
}

uint64_t MOSuggestionCollectionViewModel.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  outlined consume of (@escaping @callee_guaranteed () -> ())?(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
  outlined consume of (@escaping @callee_guaranteed () -> ())?(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
  outlined consume of (@escaping @callee_guaranteed () -> ())?(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
  outlined destroy of Any?(v0 + 128, &demangling cache variable for type metadata for MOSuggestionCollectionViewDelegate?);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 208));
  return v0;
}

double MOSuggestionCollectionViewModel.__deallocating_deinit()
{
  uint64_t v0;
  double result;

  MOSuggestionCollectionViewModel.deinit();
  *(_QWORD *)&result = swift_deallocClassInstance(v0, 219, 7).n128_u64[0];
  return result;
}

id MOSuggestionCollectionViewCellViewModel.bundle.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t MOSuggestionCollectionViewCellViewModel.cellStyle.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 24, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t MOSuggestionCollectionViewCellViewModel.cellStyle.setter(char a1)
{
  uint64_t v1;
  uint64_t result;
  _BYTE v4[24];

  result = swift_beginAccess(v1 + 24, v4, 1, 0);
  *(_BYTE *)(v1 + 24) = a1;
  return result;
}

uint64_t MOSuggestionAssetReference.appendices.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 32, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 40));
  return v1;
}

uint64_t MOSuggestionAssetReference.appendices.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE v7[24];

  swift_beginAccess(v2 + 32, v7, 1, 0);
  v5 = *(_QWORD *)(v2 + 40);
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return swift_bridgeObjectRelease(v5);
}

uint64_t (*MOSuggestionSheetAssetViewModel.image.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + 32, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionCollectionViewCellViewModel.sourcesText.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 48, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 56));
  return v1;
}

uint64_t MOSuggestionCollectionViewCellViewModel.sourcesText.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE v7[24];

  swift_beginAccess(v2 + 48, v7, 1, 0);
  v5 = *(_QWORD *)(v2 + 56);
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return swift_bridgeObjectRelease(v5);
}

uint64_t MOSuggestionCollectionViewCellViewModel.showSaved.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 65, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 65);
}

uint64_t MOSuggestionCollectionViewCellViewModel.showSaved.setter(char a1)
{
  uint64_t v1;
  uint64_t result;
  _BYTE v4[24];

  result = swift_beginAccess(v1 + 65, v4, 1, 0);
  *(_BYTE *)(v1 + 65) = a1;
  return result;
}

uint64_t (*MOSuggestionCollectionViewCellViewModel.showSaved.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + 65, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionCollectionViewCellViewModel.segmentType.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 66, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 66);
}

uint64_t MOSuggestionCollectionViewCellViewModel.segmentType.setter(char a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;
  _BYTE v4[24];

  v2 = a1 & 1;
  result = swift_beginAccess(v1 + 66, v4, 1, 0);
  *(_BYTE *)(v1 + 66) = v2;
  return result;
}

uint64_t (*MOSuggestionCollectionViewCellViewModel.segmentType.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + 66, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionCollectionViewCellViewModel.assetViewModels.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 72, v2, 0, 0);
  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 72));
}

uint64_t MOSuggestionCollectionViewCellViewModel.assetViewModels.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  swift_beginAccess(v1 + 72, v5, 1, 0);
  v3 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v1 + 72) = a1;
  return swift_bridgeObjectRelease(v3);
}

uint64_t (*MOSuggestionCollectionViewCellViewModel.assetViewModels.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + 72, a1, 33, 0);
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

uint64_t MOSuggestionCollectionViewCellViewModel.clientDetails.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 80);
}

BOOL MOSuggestionCollectionViewCellViewModel.isPhotoMemory.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "interfaceType") == (id)10;
}

BOOL MOSuggestionCollectionViewCellViewModel.isThirdPartyMedia.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "interfaceType") == (id)5;
}

uint64_t MOSuggestionCollectionViewCellViewModel.init(_:clientDetails:showAdded:showSaved:)(void *a1, char a2, uint64_t a3, char a4, char a5)
{
  uint64_t v5;
  uint64_t (*v11)(void);
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[24];
  _BYTE v19[24];
  _BYTE v20[24];

  *(_QWORD *)(v5 + 32) = 0;
  *(_BYTE *)(v5 + 24) = 0;
  *(_QWORD *)(v5 + 40) = 0xE000000000000000;
  *(_QWORD *)(v5 + 48) = 0;
  *(_QWORD *)(v5 + 56) = 0xE000000000000000;
  *(_WORD *)(v5 + 64) = 0;
  *(_BYTE *)(v5 + 66) = 0;
  *(_QWORD *)(v5 + 72) = 0;
  *(_QWORD *)(v5 + 16) = a1;
  swift_beginAccess(v5 + 64, v20, 1, 0);
  *(_BYTE *)(v5 + 64) = a4;
  swift_beginAccess(v5 + 65, v19, 1, 0);
  *(_BYTE *)(v5 + 65) = a5;
  *(_BYTE *)(v5 + 80) = a2;
  *(_QWORD *)(v5 + 88) = a3;
  v11 = *(uint64_t (**)(void))(*(_QWORD *)v5 + 352);
  v12 = a1;
  v13 = v11();
  v15 = v14;

  swift_beginAccess(v5 + 32, v18, 1, 0);
  v16 = *(_QWORD *)(v5 + 40);
  *(_QWORD *)(v5 + 32) = v13;
  *(_QWORD *)(v5 + 40) = v15;
  swift_bridgeObjectRelease(v16);
  return v5;
}

uint64_t MOSuggestionCollectionViewCellViewModel.deinit()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 72, v3, 33, 0);
  v1 = *(_QWORD *)(v0 + 72);
  if (v1)
  {
    *(_QWORD *)(v0 + 72) = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v1);
  }
  swift_endAccess(v3);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  return v0;
}

uint64_t MOSuggestionCollectionViewCellViewModel.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 72, v3, 33, 0);
  v1 = *(_QWORD *)(v0 + 72);
  if (v1)
  {
    *(_QWORD *)(v0 + 72) = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v1);
  }
  swift_endAccess(v3);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  return swift_deallocClassInstance(v0, 96, 7);
}

void MOSuggestionCollectionViewCellViewModel.bundleIdentifier()()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(*(id *)(v0 + 16), "bundleIdentifier");
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

}

uint64_t MOSuggestionCollectionViewCellViewModel.bundleTitle.getter()
{
  id *v0;
  void *v1;
  id v2;
  _QWORD *v3;

  if (((*((uint64_t (**)(void))*v0 + 40))() & 1) != 0)
    return (*((uint64_t (**)(void))*v0 + 45))();
  v2 = objc_msgSend(v0[2], "labels");
  v1 = v2;
  if (v2)
  {
    v3 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for String);

    if (v3[2])
    {
      v1 = (void *)v3[4];
      swift_bridgeObjectRetain(v3[5]);
      swift_bridgeObjectRelease(v3);
    }
    else
    {
      swift_bridgeObjectRelease(v3);
      return 0;
    }
  }
  return (uint64_t)v1;
}

uint64_t MOSuggestionCollectionViewCellViewModel.photoMemoryTitle.getter()
{
  id *v0;
  id v1;
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD v13[2];
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (((*((uint64_t (**)(void))*v0 + 40))() & 1) == 0)
    return 0;
  v1 = objc_msgSend(v0[2], "labels");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for String);

  if (!v3[2])
  {
    v11 = v3;
LABEL_8:
    swift_bridgeObjectRelease(v11);
    return 0;
  }
  v4 = v3[4];
  v5 = v3[5];
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRelease(v3);
  v16 = v4;
  v17 = v5;
  v14 = 10;
  v15 = 0xE100000000000000;
  v6 = lazy protocol witness table accessor for type String and conformance String();
  v7 = (_QWORD *)StringProtocol.components<A>(separatedBy:)(&v14, &type metadata for String, &type metadata for String, v6, v6);
  swift_bridgeObjectRelease(v5);
  if (!v7[2])
  {
    v11 = v7;
    goto LABEL_8;
  }
  v9 = v7[4];
  v8 = v7[5];
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v7);
  v16 = v9;
  v17 = v8;
  v14 = 8224;
  v15 = 0xE200000000000000;
  v13[0] = 32;
  v13[1] = 0xE100000000000000;
  v10 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(&v14, v13, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v6, v6, v6);
  swift_bridgeObjectRelease(v8);
  return v10;
}

uint64_t MOSuggestionCollectionViewCellViewModel.photoMemorySubtitle.getter()
{
  id *v0;
  id v1;
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD v13[4];

  if (((*((uint64_t (**)(void))*v0 + 40))() & 1) == 0)
    return 0;
  v1 = objc_msgSend(v0[2], "labels");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for String);

  if (!v3[2])
  {
    v11 = v3;
LABEL_8:
    swift_bridgeObjectRelease(v11);
    return 0;
  }
  v4 = v3[4];
  v5 = v3[5];
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRelease(v3);
  v13[2] = v4;
  v13[3] = v5;
  v13[0] = 10;
  v13[1] = 0xE100000000000000;
  v6 = lazy protocol witness table accessor for type String and conformance String();
  v7 = StringProtocol.components<A>(separatedBy:)(v13, &type metadata for String, &type metadata for String, v6, v6);
  swift_bridgeObjectRelease(v5);
  v8 = *(_QWORD *)(v7 + 16);
  if (!v8)
  {
    v11 = (_QWORD *)v7;
    goto LABEL_8;
  }
  v9 = v7 + 16 * v8;
  v10 = *(_QWORD *)(v9 + 16);
  swift_bridgeObjectRetain(*(_QWORD *)(v9 + 24));
  swift_bridgeObjectRelease(v7);
  return v10;
}

Swift::String __swiftcall MOSuggestionCollectionViewCellViewModel.subtitle()()
{
  uint64_t *v0;
  uint64_t (*v1)(void);
  char v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v5;
  void *v6;
  Swift::String result;

  v1 = *(uint64_t (**)(void))(*v0 + 272);
  if ((v1() & 1) == 0)
  {
    v2 = (*(uint64_t (**)(void))(*v0 + 320))();
    v3 = *v0;
    if ((v2 & 1) != 0)
      v4 = *(uint64_t (**)(void))(v3 + 368);
    else
      v4 = *(uint64_t (**)(void))(v3 + 464);
    goto LABEL_9;
  }
  if ((v1() & 1) != 0 && ((*(uint64_t (**)(void))(*v0 + 416))() & 1) != 0)
  {
    v4 = *(uint64_t (**)(void))(*v0 + 472);
LABEL_9:
    v5 = v4();
    goto LABEL_10;
  }
  v5 = 0;
  v6 = (void *)0xE000000000000000;
LABEL_10:
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

void MOSuggestionCollectionViewCellViewModel.contactNames.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  __n128 v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  v0 = (unint64_t)MOEventBundle.orderedAssetReferencesForPreview(max:)(13);
  v1 = v0;
  if (!v0)
    return;
  if ((unint64_t)v0 >> 62)
  {
    if (v0 >= 0)
      v0 &= 0xFFFFFFFFFFFFFF8uLL;
    v2 = _CocoaArrayWrapper.endIndex.getter(v0);
    if (v2)
      goto LABEL_4;
LABEL_24:
    swift_bridgeObjectRelease(v1);
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
      goto LABEL_40;
LABEL_25:
    if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) != 0)
      goto LABEL_40;
    v19 = _swiftEmptyArrayStorage[2];
    v20 = swift_retain(_swiftEmptyArrayStorage);
    if (v19)
      goto LABEL_27;
LABEL_41:
    v22 = _swiftEmptyArrayStorage;
LABEL_42:
    swift_release_n(_swiftEmptyArrayStorage, 2, v20);
    if (one-time initialization token for COMMA_SEPARATOR != -1)
      swift_once(&one-time initialization token for COMMA_SEPARATOR, one-time initialization function for COMMA_SEPARATOR);
    v34 = static MOSuggestionInterstitialListAssetViewModel.COMMA_SEPARATOR;
    v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
    v36 = lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [String], (uint64_t)&protocol conformance descriptor for [A]);
    BidirectionalCollection<>.joined(separator:)(v34, *((_QWORD *)&v34 + 1), v35, v36);
    swift_bridgeObjectRelease(v22);
    return;
  }
  v2 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    goto LABEL_24;
LABEL_4:
  if (v2 < 1)
  {
    __break(1u);
    goto LABEL_46;
  }
  for (i = 0; i != v2; ++i)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v1);
    }
    else
    {
      v7 = *(_QWORD *)(v1 + 8 * i + 32);
      v8 = swift_retain(v7);
    }
    v9 = (void *)(*(uint64_t (**)(__n128))(*(_QWORD *)v7 + 120))(v8);
    v10 = MOSuggestionAssetsTypeContactPhoto;
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v13 = v12;
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    if (v11 == v14 && v13 == v15)
    {

      v4 = swift_bridgeObjectRelease_n(v13, 2);
LABEL_7:
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v4);
      v5 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v5);
      v6 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v5, v7);
      specialized ContiguousArray._endMutation()(v6);
      continue;
    }
    v17 = v15;
    v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v14, v15, 0);

    swift_bridgeObjectRelease(v13);
    swift_bridgeObjectRelease(v17);
    if ((v18 & 1) != 0)
      goto LABEL_7;
    swift_release(v7);
  }
  swift_bridgeObjectRelease(v1);
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) == 0)
    goto LABEL_25;
LABEL_40:
  swift_retain(_swiftEmptyArrayStorage);
  v19 = _CocoaArrayWrapper.endIndex.getter(v33);
  if (!v19)
    goto LABEL_41;
LABEL_27:
  if (v19 >= 1)
  {
    v21 = 0;
    v22 = _swiftEmptyArrayStorage;
    do
    {
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0)
      {
        v23 = specialized _ArrayBuffer._getElementSlowPath(_:)(v21, _swiftEmptyArrayStorage);
      }
      else
      {
        v23 = _swiftEmptyArrayStorage[v21 + 4];
        v24 = swift_retain(v23);
      }
      v25 = (void *)(*(uint64_t (**)(__n128))(*(_QWORD *)v23 + 216))(v24);
      v26 = objc_msgSend(v25, "personName");

      if (v26)
      {
        v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
        v29 = v28;
        swift_release(v23);

        if ((swift_isUniquelyReferenced_nonNull_native(v22) & 1) == 0)
          v22 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v22[2] + 1, 1, v22);
        v31 = v22[2];
        v30 = v22[3];
        if (v31 >= v30 >> 1)
          v22 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((_QWORD *)(v30 > 1), v31 + 1, 1, v22);
        v22[2] = v31 + 1;
        v32 = &v22[2 * v31];
        v32[4] = v27;
        v32[5] = v29;
      }
      else
      {
        v20 = swift_release(v23);
      }
      ++v21;
    }
    while (v19 != v21);
    goto LABEL_42;
  }
LABEL_46:
  __break(1u);
}

uint64_t MOSuggestionCollectionViewCellViewModel.assetCount.getter()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8[2];
  _QWORD *v9;

  result = (unint64_t)MOEventBundle.orderedAssetReferencesForPreview(max:)(13);
  v1 = result;
  if (!result)
    return v1;
  v9 = &_swiftEmptySetSingleton;
  if (!((unint64_t)result >> 62))
  {
    v2 = *(_QWORD *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_4;
LABEL_14:
    swift_bridgeObjectRelease(v1);
    v7 = &_swiftEmptySetSingleton;
LABEL_15:
    v1 = v7[2];
    swift_bridgeObjectRelease(v7);
    return v1;
  }
  if (result >= 0)
    result &= 0xFFFFFFFFFFFFFF8uLL;
  result = _CocoaArrayWrapper.endIndex.getter(result);
  v2 = result;
  if (!result)
    goto LABEL_14;
LABEL_4:
  if (v2 >= 1)
  {
    v3 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
      {
        v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v1);
      }
      else
      {
        v4 = *(_QWORD *)(v1 + 8 * v3 + 32);
        swift_retain(v4);
      }
      ++v3;
      v5 = (*(uint64_t (**)(void))(*(_QWORD *)v4 + 304))();
      specialized Set._Variant.insert(_:)(v8, v5, v6);
      swift_release(v4);
      swift_bridgeObjectRelease(v8[1]);
    }
    while (v2 != v3);
    swift_bridgeObjectRelease(v1);
    v7 = v9;
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

void MOSuggestionCollectionViewCellViewModel.isCondensedHeight.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  id v50;
  double v51;
  uint64_t v52;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (unint64_t)MOEventBundle.orderedAssetReferencesForPreview(max:)(13);
  if (!v3)
    return;
  v4 = v3;
  v5 = (_QWORD *)((unint64_t)v3 >> 62);
  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v26 = v3;
    else
      v26 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v7 = (uint64_t)&selRef_genericAvatarFor_pointSize_completion_;
    if (_CocoaArrayWrapper.endIndex.getter(v26))
      goto LABEL_4;
LABEL_35:
    objc_msgSend((id)v2, "interfaceType", swift_bridgeObjectRelease(v4).n128_f64[0]);
    goto LABEL_36;
  }
  v6 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v3);
  v7 = (uint64_t)&selRef_genericAvatarFor_pointSize_completion_;
  if (!v6)
    goto LABEL_35;
LABEL_4:
  v1 = v4 & 0xC000000000000001;
  if ((v4 & 0xC000000000000001) != 0)
    goto LABEL_79;
  if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_81;
  }
  v8 = *(_QWORD *)(v4 + 32);
  swift_retain(v8);
  while (1)
  {
    v9 = swift_bridgeObjectRelease(v4);
    (*(void (**)(__n128))(*(_QWORD *)v8 + 272))(v9);
    if (objc_msgSend((id)v2, *(SEL *)(v7 + 3280), swift_release(v8).n128_f64[0]) == (id)5)
    {
      if (v1)
        goto LABEL_82;
      if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v10 = *(_QWORD *)(v4 + 32);
        v11 = swift_retain(v10);
        goto LABEL_11;
      }
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
      return;
    }
LABEL_36:
    if (!v5)
    {
LABEL_37:
      v27 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v27)
        goto LABEL_51;
      goto LABEL_38;
    }
    while (1)
    {
      v34 = v4 < 0 ? v4 : v4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v4);
      v27 = _CocoaArrayWrapper.endIndex.getter(v34);
      swift_bridgeObjectRelease(v4);
      if (!v27)
        break;
LABEL_38:
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v27 & ~(v27 >> 63), 0);
      if ((v27 & 0x8000000000000000) == 0)
      {
        v52 = v2;
        v28 = 0;
        v5 = _swiftEmptyArrayStorage;
        do
        {
          if ((v4 & 0xC000000000000001) != 0)
          {
            v29 = specialized _ArrayBuffer._getElementSlowPath(_:)(v28, v4);
          }
          else
          {
            v29 = *(_QWORD *)(v4 + 8 * v28 + 32);
            v30 = swift_retain(v29);
          }
          v31 = (*(uint64_t (**)(__n128))(*(_QWORD *)v29 + 120))(v30);
          swift_release(v29);
          v33 = _swiftEmptyArrayStorage[2];
          v32 = _swiftEmptyArrayStorage[3];
          v1 = v33 + 1;
          if (v33 >= v32 >> 1)
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1);
          ++v28;
          _swiftEmptyArrayStorage[2] = v1;
          _swiftEmptyArrayStorage[v33 + 4] = v31;
        }
        while (v27 != v28);
        goto LABEL_53;
      }
LABEL_81:
      __break(1u);
LABEL_82:
      swift_bridgeObjectRetain(v4);
      v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
      v11 = swift_bridgeObjectRelease(v4);
LABEL_11:
      v12 = (*(uint64_t (**)(__n128))(*(_QWORD *)v10 + 272))(v11);
      v14 = v13;
      swift_release(v10);
      if ((v14 & 1) != 0 || v12 != 6)
      {
        if (v1)
        {
          swift_bridgeObjectRetain(v4);
          v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
          v16 = swift_bridgeObjectRelease(v4);
        }
        else
        {
          if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_84;
          v15 = *(_QWORD *)(v4 + 32);
          v16 = swift_retain(v15);
        }
        v17 = (*(uint64_t (**)(__n128))(*(_QWORD *)v15 + 272))(v16);
        v19 = v18;
        swift_release(v15);
        if ((v19 & 1) != 0 || v17 != 7)
        {
          if (v1)
          {
            swift_bridgeObjectRetain(v4);
            v20 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
            v21 = swift_bridgeObjectRelease(v4);
          }
          else
          {
            if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_85;
            v20 = *(_QWORD *)(v4 + 32);
            v21 = swift_retain(v20);
          }
          v22 = (*(uint64_t (**)(__n128))(*(_QWORD *)v20 + 272))(v21);
          v24 = v23;
          swift_release(v20);
          if ((v24 & 1) != 0 || v22 != 8)
            goto LABEL_36;
        }
      }
      if (!v5)
        goto LABEL_37;
      if (v4 < 0)
        v25 = v4;
      else
        v25 = v4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v4);
      _CocoaArrayWrapper.endIndex.getter(v25);
      swift_bridgeObjectRelease(v4);
    }
LABEL_51:
    v5 = _swiftEmptyArrayStorage;
    v1 = _swiftEmptyArrayStorage[2];
    if (!v1)
      goto LABEL_71;
    v52 = v2;
LABEL_53:
    v35 = MOSuggestionAssetsTypeWorkout;
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(_swiftEmptyArrayStorage[4]);
    v37 = v36;
    v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    if (v7 != v38 || v37 != v39)
      break;
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease_n(v37, 2);
    if (v1 == 1)
      goto LABEL_70;
LABEL_61:
    v2 = 5;
    while (1)
    {
      v42 = v2 - 3;
      if (__OFADD__(v2 - 4, 1))
        break;
      v43 = MOSuggestionAssetsTypeWorkout;
      v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(_swiftEmptyArrayStorage[v2]);
      v45 = v44;
      v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
      if (v7 == v46 && v45 == v47)
      {
        swift_bridgeObjectRelease_n(v45, 2);
      }
      else
      {
        v49 = v47;
        v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v45, v46, v47, 0);
        swift_bridgeObjectRelease(v45);
        swift_bridgeObjectRelease(v49);
        if ((v7 & 1) == 0)
          goto LABEL_70;
      }
      ++v2;
      if (v42 == v1)
        goto LABEL_70;
    }
    __break(1u);
LABEL_79:
    v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
  }
  v41 = v39;
  v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v37, v38, v39, 0);
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease(v37);
  swift_bridgeObjectRelease(v41);
  if ((v7 & 1) != 0 && v1 != 1)
    goto LABEL_61;
LABEL_70:
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  v2 = v52;
  v7 = (uint64_t)&selRef_genericAvatarFor_pointSize_completion_;
LABEL_71:
  v50 = objc_msgSend((id)v2, *(SEL *)(v7 + 3280), swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_f64[0]);
  *(_QWORD *)&v51 = swift_bridgeObjectRelease(v4).n128_u64[0];
  if (v50 == (id)12)
  {
    if (v27 != 1)
      return;
LABEL_75:
    specialized Sequence<>.contains(_:)((uint64_t)objc_msgSend((id)v2, *(SEL *)(v7 + 3280), v51), (uint64_t)&outlined read-only object #0 of MOSuggestionCollectionViewCellViewModel.isCondensedHeight.getter);
    return;
  }
  if (v27 == 1)
    goto LABEL_75;
}

BOOL MOSuggestionCollectionViewCellViewModel.isFullWidthEligible.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = (uint64_t)MOEventBundle._orderedAssetReferences()();
  if (!v0)
    return 1;
  v1 = v0;
  if ((unint64_t)v0 >> 62)
  {
    if (v0 >= 0)
      v0 &= 0xFFFFFFFFFFFFFF8uLL;
    v2 = _CocoaArrayWrapper.endIndex.getter(v0);
  }
  else
  {
    v2 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v1);
  return v2 != 1;
}

BOOL MOSuggestionCollectionViewCellViewModel.shouldIncludeRecentsSubtitle.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "interfaceType") != (id)4;
}

BOOL MOSuggestionCollectionViewCellViewModel.shouldShowInterstitial.getter()
{
  id *v0;
  id v1;

  v1 = objc_msgSend(v0[2], "interfaceType");
  if (v1 == (id)11)
    (*((void (**)(void))*v0 + 55))();
  return v1 != (id)11;
}

BOOL MOSuggestionCollectionViewCellViewModel.isEvergreen.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "interfaceType") == (id)11;
}

Swift::Void __swiftcall MOSuggestionCollectionViewCellViewModel.markEvergreenEligible()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (((*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))() & 1) == 0)
    return;
  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
  if (!v1)
    return;
  v2 = v1;
  v3 = v1 & 0xFFFFFFFFFFFFFF8;
  if ((unint64_t)v1 >> 62)
  {
    if (v1 >= 0)
      v1 &= 0xFFFFFFFFFFFFFF8uLL;
    if (_CocoaArrayWrapper.endIndex.getter(v1))
      goto LABEL_5;
LABEL_15:
    v10 = v2;
LABEL_16:
    swift_bridgeObjectRelease(v10);
    return;
  }
  if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_15;
LABEL_5:
  if ((v2 & 0xC000000000000001) != 0)
  {
    v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v2);
    goto LABEL_8;
  }
  if (*(_QWORD *)(v3 + 16))
  {
    v4 = *(_QWORD *)(v2 + 32);
    swift_retain(v4);
LABEL_8:
    swift_bridgeObjectRelease(v2);
    if (one-time initialization token for shared != -1)
      swift_once(&one-time initialization token for shared, one-time initialization function for shared);
    v5 = static MOSuggestionAssetCacheManager.shared;
    v6 = (*(uint64_t (**)(void))(*(_QWORD *)v4 + 512))();
    v8 = v7;
    v9 = (*(uint64_t (**)(void))(*(_QWORD *)v4 + 704))();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v5 + 272))(v6, v8, v9);
    swift_release(v4);
    v10 = v8;
    goto LABEL_16;
  }
  __break(1u);
}

Swift::String __swiftcall MOSuggestionCollectionViewCellViewModel.dateString()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  Class isa;
  id v15;
  void *v16;
  Swift::String result;
  uint64_t v18;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (void *)v0[2];
  if (((unint64_t)objc_msgSend(v5, "interfaceType") & 0xFFFFFFFFFFFFFFFELL) == 0xA)
  {
    v6 = (*(uint64_t (**)(void))(*v0 + 368))();
LABEL_4:
    v8 = v6;
    v9 = v7;
    goto LABEL_5;
  }
  v6 = MOSuggestionCollectionViewCellViewModel.timeRangeString.getter();
  if (v7)
    goto LABEL_4;
  v12 = objc_msgSend(v5, "displayStartDate");
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v12);

  if (one-time initialization token for fullDateFormatter != -1)
    swift_once(&one-time initialization token for fullDateFormatter, one-time initialization function for fullDateFormatter);
  v13 = (void *)static MODateFormatter.fullDateFormatter;
  isa = Date._bridgeToObjectiveC()().super.isa;
  v15 = objc_msgSend(v13, "stringFromDate:", isa);

  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v9 = v16;

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
LABEL_5:
  v10 = v8;
  v11 = v9;
  result._object = v11;
  result._countAndFlagsBits = v10;
  return result;
}

uint64_t MOSuggestionCollectionViewCellViewModel.timeRangeString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  id v10;
  double v11;
  void (*v12)(char *, uint64_t);
  double v13;
  id v14;
  void *v15;
  Class isa;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  Class v30;
  id v31;
  uint64_t v32;
  void *v33;
  void *v34;
  Swift::String v35;
  uint64_t v37;
  uint64_t v38;
  Swift::String v39;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v37 - v6;
  v8 = *(void **)(v0 + 16);
  v9 = objc_msgSend(v8, "displayEndDate");
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v9);

  v10 = objc_msgSend(v8, "displayStartDate");
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v10);

  v11 = Date.timeIntervalSince(_:)(v5);
  v12 = *(void (**)(char *, uint64_t))(v2 + 8);
  v12(v5, v1);
  v12(v7, v1);
  v13 = fabs(v11);
  if (one-time initialization token for ONE_DAY != -1)
    swift_once(&one-time initialization token for ONE_DAY, one-time initialization function for ONE_DAY);
  if (*(double *)&static MOSuggestionCollectionViewCellConstants.ONE_DAY >= v13)
    return 0;
  v14 = objc_msgSend(v8, "displayStartDate", *(double *)&static MOSuggestionCollectionViewCellConstants.ONE_DAY);
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v14);

  if (one-time initialization token for fullDateFormatter != -1)
    swift_once(&one-time initialization token for fullDateFormatter, one-time initialization function for fullDateFormatter);
  v15 = (void *)static MODateFormatter.fullDateFormatter;
  isa = Date._bridgeToObjectiveC()().super.isa;
  v17 = objc_msgSend(v15, "stringFromDate:", isa);

  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v20 = v19;

  v12(v7, v1);
  v21 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v39._object = (void *)0x80000001001A9250;
  v22._countAndFlagsBits = 2108704;
  v22._object = (void *)0xE300000000000000;
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  v39._countAndFlagsBits = 0xD000000000000034;
  v24 = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, (Swift::String_optional)0, (NSBundle)v21, v23, v39);

  v37 = v18;
  v38 = v20;
  swift_bridgeObjectRetain(v20);
  String.append(_:)(v24);
  swift_bridgeObjectRelease(v20);
  *(_QWORD *)&v25 = swift_bridgeObjectRelease(v24._object).n128_u64[0];
  v27 = v37;
  v26 = v38;
  v28 = objc_msgSend(v8, "displayEndDate", v25);
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v28);

  v29 = (void *)static MODateFormatter.fullDateFormatter;
  v30 = Date._bridgeToObjectiveC()().super.isa;
  v31 = objc_msgSend(v29, "stringFromDate:", v30);

  v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
  v34 = v33;

  v12(v7, v1);
  v37 = v27;
  v38 = v26;
  swift_bridgeObjectRetain(v26);
  v35._countAndFlagsBits = v32;
  v35._object = v34;
  String.append(_:)(v35);
  swift_bridgeObjectRelease(v26);
  swift_bridgeObjectRelease(v34);
  return v37;
}

Swift::String __swiftcall MOSuggestionCollectionViewCellViewModel.relativeDateString()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t countAndFlagsBits;
  void *object;
  id v9;
  Swift::String v10;
  uint64_t v11;
  void *v12;
  Swift::String result;
  uint64_t v14;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MOSuggestionCollectionViewCellViewModel.timeRangeString.getter();
  if (v6)
  {
    countAndFlagsBits = v5;
    object = v6;
  }
  else
  {
    v9 = objc_msgSend(*(id *)(v0 + 16), "displayStartDate");
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v9);

    v10 = Date.getRelativeDate()();
    countAndFlagsBits = v10._countAndFlagsBits;
    object = v10._object;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  v11 = countAndFlagsBits;
  v12 = object;
  result._object = v12;
  result._countAndFlagsBits = v11;
  return result;
}

Swift::String __swiftcall MOSuggestionCollectionViewCellViewModel.categoryString()()
{
  unint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  _QWORD *v8;
  Class isa;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  _QWORD *v21;
  uint64_t (*v22)(void);
  uint64_t v23;
  void *v24;
  uint64_t v25;
  char v26;
  char v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  void *v62;
  Swift::String result;
  unint64_t v64;
  uint64_t v65;
  _QWORD v66[3];
  ValueMetadata *v67;

  v0 = (unint64_t)MOEventBundle.orderedAssetReferencesForPreview(max:)(13);
  if (v0)
  {
    v1 = v0;
    v2 = objc_msgSend(objc_allocWithZone((Class)NSCountedSet), "init");
    v3 = v1 & 0xFFFFFFFFFFFFFF8;
    if ((unint64_t)v1 >> 62)
      goto LABEL_58;
    v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v1);
    while (v4)
    {
      v5 = 0;
      v6 = v1 & 0xC000000000000001;
      v65 = v1 + 32;
      v7 = (char *)&type metadata for Any + 8;
      v64 = v1 & 0xC000000000000001;
      while (1)
      {
        if (v6)
        {
          v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v1);
          v11 = __OFADD__(v5++, 1);
          if (v11)
            break;
          goto LABEL_11;
        }
        v10 = *(_QWORD *)(v65 + 8 * v5);
        swift_retain(v10);
        v11 = __OFADD__(v5++, 1);
        if (v11)
          break;
LABEL_11:
        v12 = type metadata accessor for MOMultiMapAssetReference(0);
        v13 = swift_dynamicCastClass(v10, v12);
        if (v13)
        {
          v14 = (*(uint64_t (**)(void))(*(_QWORD *)v13 + 360))();
          v15 = v14;
          if (!((unint64_t)v14 >> 62))
          {
            v16 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRelease(v14);
            LOBYTE(v17) = 15;
LABEL_14:
            v67 = &type metadata for MOSuggestionAssetVisualSubType;
            LOBYTE(v66[0]) = v17;
            goto LABEL_15;
          }
          if (v14 >= 0)
            v14 &= 0xFFFFFFFFFFFFFF8uLL;
          v16 = _CocoaArrayWrapper.endIndex.getter(v14);
          swift_bridgeObjectRelease(v15);
          v67 = &type metadata for MOSuggestionAssetVisualSubType;
          LOBYTE(v66[0]) = 15;
          if (v16 < 0)
          {
            v61 = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
            __break(1u);
            goto LABEL_66;
          }
LABEL_15:
          if (v16)
            goto LABEL_44;
          v8 = _swiftEmptyArrayStorage;
LABEL_5:
          __swift_destroy_boxed_opaque_existential_1(v66);
          isa = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v2, "addObjectsFromArray:", isa, swift_bridgeObjectRelease(v8).n128_f64[0]);
          swift_release(v10);

          if (v5 == v4)
            goto LABEL_62;
        }
        else
        {
          v18 = v1;
          v19 = v7;
          v20 = v2;
          if (one-time initialization token for assetTypeDirectMapping != -1)
            swift_once(&one-time initialization token for assetTypeDirectMapping, one-time initialization function for assetTypeDirectMapping);
          v21 = static MOSuggestionAssetReference.assetTypeDirectMapping;
          v22 = *(uint64_t (**)(void))(*(_QWORD *)v10 + 120);
          v23 = v22();
          v24 = (void *)v23;
          if (v21[2])
          {
            v25 = specialized __RawDictionaryStorage.find<A>(_:)(v23);
            if ((v26 & 1) != 0)
            {
              v27 = *(_BYTE *)(v21[7] + v25);

LABEL_40:
              if (v27 == 13)
                v48 = 12;
              else
                v48 = v27;
              v67 = &type metadata for MOSuggestionAssetVisualSubType;
              LOBYTE(v66[0]) = v48;
              v16 = 1;
              v2 = v20;
              v7 = v19;
              v1 = v18;
              v6 = v64;
LABEL_44:
              v8 = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(v16, (char *)&type metadata for Any + 8);
              v8[2] = v16;
              v49 = (uint64_t)(v8 + 4);
              do
              {
                outlined init with copy of Any((uint64_t)v66, v49);
                v49 += 32;
                --v16;
              }
              while (v16);
              goto LABEL_5;
            }
          }

          v28 = (void *)v22();
          v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeMediaCoverArt);
          v31 = v30;
          v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
          if (v29 == v32 && v31 == v33)
          {
            swift_bridgeObjectRelease_n(v31, 2);
          }
          else
          {
            v35 = v33;
            v36 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v31, v32, v33, 0);
            swift_bridgeObjectRelease(v31);
            swift_bridgeObjectRelease(v35);
            if ((v36 & 1) == 0)
            {
              v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeMotionActivity);
              v39 = v38;
              v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
              v42 = v40;
              if (v37 == v41 && v39 == v40)
              {
                swift_bridgeObjectRelease_n(v39, 2);
                goto LABEL_36;
              }
              v46 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v39, v41, v40, 0);
              swift_bridgeObjectRelease(v39);
              swift_bridgeObjectRelease(v42);
              if ((v46 & 1) != 0)
              {
LABEL_36:

                v47 = MOSuggestionAssetReference.motionActivitySubType.getter();
              }
              else
              {
                v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeGenericMap);
                v52 = v51;
                v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
                v55 = v53;
                if (v50 == v54 && v52 == v53)
                {

                  swift_bridgeObjectRelease_n(v52, 2);
                }
                else
                {
                  v56 = _stringCompareWithSmolCheck(_:_:expecting:)(v50, v52, v54, v53, 0);

                  swift_bridgeObjectRelease(v52);
                  swift_bridgeObjectRelease(v55);
                  if ((v56 & 1) == 0)
                    goto LABEL_38;
                }
                v47 = MOSuggestionAssetReference.genericMapSubType.getter();
              }
              v27 = v47;
              if (v47 != 26)
                goto LABEL_40;
              goto LABEL_38;
            }
          }

          v43 = (*(uint64_t (**)(void))(*(_QWORD *)v10 + 272))();
          if ((v44 & 1) == 0)
          {
            v45 = v43 - 1;
            if ((unint64_t)(v43 - 1) < 8 && ((0xEBu >> v45) & 1) != 0)
            {
              v17 = 0x605040001000200uLL >> (8 * v45);
              v16 = 1;
              v2 = v20;
              v7 = v19;
              v1 = v18;
              v6 = v64;
              goto LABEL_14;
            }
          }
LABEL_38:
          swift_release(v10);
          v2 = v20;
          v7 = v19;
          v1 = v18;
          v6 = v64;
          if (v5 == v4)
            goto LABEL_62;
        }
      }
      __break(1u);
LABEL_58:
      if (v1 >= 0)
        v59 = v3;
      else
        v59 = v1;
      swift_bridgeObjectRetain(v1);
      v4 = _CocoaArrayWrapper.endIndex.getter(v59);
    }
LABEL_62:
    swift_bridgeObjectRelease_n(v1, 2);
    if (one-time initialization token for COMMA_SEPARATOR != -1)
      swift_once(&one-time initialization token for COMMA_SEPARATOR, one-time initialization function for COMMA_SEPARATOR);
    v57 = specialized static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)(v2, 0, static MOSuggestionInterstitialListAssetViewModel.COMMA_SEPARATOR, *((uint64_t *)&static MOSuggestionInterstitialListAssetViewModel.COMMA_SEPARATOR + 1));
    v58 = v60;

  }
  else
  {
    v57 = 0;
    v58 = 0xE000000000000000;
  }
  v61 = v57;
  v62 = (void *)v58;
LABEL_66:
  result._object = v62;
  result._countAndFlagsBits = v61;
  return result;
}

Swift::String __swiftcall MOSuggestionCollectionViewCellViewModel.promptString()()
{
  uint64_t v0;
  id v1;
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  Swift::String result;
  _QWORD v13[2];
  _QWORD v14[4];

  v1 = objc_msgSend(*(id *)(v0 + 16), "promptLanguages");
  if (!v1)
    goto LABEL_5;
  v2 = v1;
  v3 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for String);

  if (!v3[2])
  {
    swift_bridgeObjectRelease(v3);
LABEL_5:
    v7 = 0;
    v9 = 0xE000000000000000;
    goto LABEL_6;
  }
  v5 = v3[4];
  v4 = v3[5];
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v3);
  v14[2] = v5;
  v14[3] = v4;
  v14[0] = 0xD000000000000021;
  v14[1] = 0x80000001001AA600;
  v13[0] = 0;
  v13[1] = 0xE000000000000000;
  v6 = lazy protocol witness table accessor for type String and conformance String();
  v7 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(v14, v13, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v6, v6, v6);
  v9 = v8;
  swift_bridgeObjectRelease(v4);
LABEL_6:
  v10 = v7;
  v11 = (void *)v9;
  result._object = v11;
  result._countAndFlagsBits = v10;
  return result;
}

_QWORD *MOSuggestionCollectionViewCellViewModel.createAssetViewModel(for:cellStyle:totalCount:index:hasSetAutoplay:bundleInterfaceType:)(void *a1, char a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  _QWORD *v62;
  char v63;
  void *v64;
  char *v65;
  uint64_t v66;
  void *v67;
  void *v68;
  id v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  unint64_t v73;
  id v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char v86;
  id v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id *v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  id v104;
  unint64_t v105;
  id v106;
  uint64_t v107;
  id v108;
  unint64_t v109;
  id v110;
  uint64_t v111;
  id v112;
  char *v113;
  id v114;
  uint64_t v115;
  id v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  void *v122;
  id v123;
  char *v124;
  void *v125;
  uint64_t v126;
  uint64_t v127;
  int v128;
  id v129;
  __n128 v130;
  uint64_t v131;
  uint64_t v132;
  id v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  id v143;
  void *v144;
  char *v145;
  char *v146;
  void *v147;
  uint64_t v148;
  uint64_t v149;
  int v150;
  id v151;
  __n128 v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  void *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  _QWORD *v165;
  char *v166;
  char v167;
  void *v168;
  char *v169;
  uint64_t v170;
  char *v171;
  id v172;
  uint64_t v173;
  id v174;
  char *v175;
  void *v176;
  id v177;
  id v178;
  char v179;
  void *v180;
  id v181;
  uint64_t v182;
  id v183;
  __int128 v184;
  id v185;
  uint64_t v186;
  id v187;
  uint64_t v188;
  void *v189;
  id v190;
  uint64_t v191;
  char *v192;
  id v193;
  uint64_t v194;
  id v195;
  id v196;
  uint64_t v197;
  id v198;
  uint64_t v199;
  id v200;
  uint64_t v201;
  id v202;
  int v203;
  uint64_t v204;
  uint64_t v205;
  unint64_t v206;
  uint64_t v207;
  Swift::String v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  Swift::String v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  id v217;
  void *v218;
  uint64_t v219;
  uint64_t v220;
  id v221;
  uint64_t v222;
  uint64_t v223;
  int v224;
  uint64_t v225;
  void *v226;
  id v227;
  id v228;
  char v229;
  uint64_t v230;
  uint64_t v231;
  void *v232;
  uint64_t v233;
  uint64_t v234;
  id v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  uint64_t v243;
  char *v244;
  uint64_t v245;
  char v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  _QWORD *v256;
  id v257;
  __n128 v258;
  char *v259;
  uint64_t v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  id *v273;
  char *v274;
  char *v275;
  void *v276;
  void *v278;
  id v279;
  id v280;
  char v281;
  uint64_t v282;
  void *v283;
  uint64_t v284;
  uint64_t v285;
  id v286;
  char *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  char *v293;
  uint64_t v294;
  char *v295;
  uint64_t v296;
  char v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  void *v307;
  id v308;
  id v309;
  char v310;
  void *v311;
  char *v312;
  uint64_t v313;
  uint64_t v314;
  id v315;
  void *v316;
  uint64_t v317;
  id v318;
  void *v319;
  id v320;
  id v321;
  char v322;
  void *v323;
  id v324;
  uint64_t v325;
  char *v326;
  id v327;
  uint64_t v328;
  id v329;
  id v330;
  uint64_t v331;
  id v332;
  id v333;
  char *v334;
  uint64_t v335;
  int v336;
  char *v337;
  uint64_t v338;
  char *v339;
  char *v340;
  void *v341;
  id v342;
  id v343;
  char v344;
  void *v345;
  id v346;
  uint64_t v347;
  char *v348;
  id v349;
  uint64_t v350;
  char *v351;
  id v352;
  uint64_t v353;
  id v354;
  char v355;
  uint64_t v356;
  void *v357;
  id v358;
  id v359;
  char v360;
  int v361;
  uint64_t v362;
  void *v363;
  id v364;
  id v365;
  char v366;
  void *v367;
  id v368;
  id v369;
  char v370;
  void *v371;
  id v372;
  uint64_t v373;
  void *v374;
  void *v375;
  id v376;
  id v377;
  char v378;
  id v379;
  uint64_t v380;
  void *v381;
  uint64_t v382;
  uint64_t v383;
  int v384;
  uint64_t v385;
  char *v386;
  id v387;
  char *v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  char *v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  char v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  void *v408;
  id v409;
  id v410;
  char v411;
  void *v412;
  id v413;
  uint64_t v414;
  void *v415;
  int v416;
  id v417;
  __n128 v418;
  char *v419;
  uint64_t v420;
  char *v421;
  uint64_t v422;
  id v423;
  uint64_t v424;
  uint64_t v425;
  char v426;
  void *v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  int v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  int v444;
  id v445;
  uint64_t v446;
  void *v447;
  uint64_t v448;
  uint64_t v449;
  id v450;
  uint64_t v451;
  id v452;
  uint64_t v453;
  void *v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  char v463;
  id v464;
  uint64_t v465;
  id v466;
  uint64_t v467;
  void *v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  char v477;
  id v478;
  uint64_t v479;
  id v480;
  uint64_t v481;
  id v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  char v491;
  char *v492;
  uint64_t v493;
  uint64_t v494;
  char *v495;
  char *v496;
  char *v497;
  uint64_t v498;
  char v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  id *v507;
  uint64_t *v508;
  __n128 v509;
  uint64_t v510;
  char *v511;
  uint64_t v512;
  char *v513;
  uint64_t v514;
  char v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  id *v523;
  void *v524;
  id v525;
  id v526;
  char v527;
  void *v528;
  char *v529;
  uint64_t v530;
  id v531;
  uint64_t v532;
  id v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  void *v538;
  id v539;
  int v540;
  uint64_t v541;
  char *v542;
  id v543;
  char *v544;
  void *v545;
  uint64_t v546;
  uint64_t v547;
  id v548;
  uint64_t v549;
  id v550;
  uint64_t v551;
  void *v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  char v561;
  id v562;
  uint64_t v563;
  id v564;
  uint64_t v565;
  void *v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  uint64_t v574;
  char v575;
  id v576;
  uint64_t v577;
  id v578;
  uint64_t v579;
  char v580;
  uint64_t v581;
  id v582;
  uint64_t v583;
  uint64_t v584;
  uint64_t v585;
  uint64_t v586;
  uint64_t v587;
  uint64_t v588;
  uint64_t v589;
  uint64_t v590;
  char v591;
  int v592;
  __n128 v593;
  uint64_t v594;
  uint64_t v595;
  uint64_t v596;
  char *v597;
  uint64_t v598;
  char *v599;
  uint64_t v600;
  char v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  uint64_t v607;
  uint64_t v608;
  uint64_t v609;
  id *v610;
  void *v611;
  id v612;
  id v613;
  char v614;
  id v615;
  uint64_t v616;
  id v617;
  uint64_t v618;
  uint64_t v619;
  uint64_t v620;
  id v621;
  uint64_t v622;
  void *v623;
  char *v624;
  id v625;
  char v626;
  int v627;
  id v628;
  uint64_t v629;
  void *v630;
  id v631;
  char *v632;
  void *v633;
  uint64_t v634;
  uint64_t v635;
  id v636;
  uint64_t v637;
  id v638;
  int v639;
  uint64_t v640;
  int v641;
  void *v642;
  id v643;
  id v644;
  char v645;
  char *v646;
  uint64_t v647;
  void *v648;
  id v649;
  char *v650;
  uint64_t v651;
  uint64_t v652;
  uint64_t v653;
  uint64_t v654;
  char *v655;
  char *v656;
  uint64_t v657;
  uint64_t v658;
  uint64_t v659;
  char v660;
  uint64_t v661;
  uint64_t v662;
  uint64_t v663;
  uint64_t v664;
  uint64_t v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  uint64_t v669;
  void *v670;
  id v671;
  char *v672;
  void *v673;
  uint64_t v674;
  uint64_t v675;
  id v676;
  uint64_t v677;
  id v678;
  uint64_t v679;
  void *v680;
  uint64_t v681;
  uint64_t v682;
  uint64_t v683;
  uint64_t v684;
  uint64_t v685;
  uint64_t v686;
  uint64_t v687;
  uint64_t v688;
  char v689;
  id v690;
  uint64_t v691;
  id v692;
  uint64_t v693;
  void *v694;
  uint64_t v695;
  uint64_t v696;
  uint64_t v697;
  uint64_t v698;
  uint64_t v699;
  uint64_t v700;
  uint64_t v701;
  uint64_t v702;
  char v703;
  id v704;
  uint64_t v705;
  id v706;
  uint64_t v707;
  id v708;
  uint64_t v709;
  uint64_t v710;
  uint64_t v711;
  uint64_t v712;
  uint64_t v713;
  uint64_t v714;
  uint64_t v715;
  uint64_t v716;
  char v717;
  uint64_t v718;
  __n128 v719;
  uint64_t v720;
  uint64_t v721;
  char *v722;
  char *v723;
  uint64_t v724;
  uint64_t v725;
  uint64_t v726;
  char v727;
  void *v728;
  uint64_t v729;
  uint64_t v730;
  uint64_t v731;
  uint64_t v732;
  uint64_t v733;
  uint64_t v734;
  uint64_t v735;
  id *v736;
  double v737;
  void *v738;
  id v739;
  id v740;
  char v741;
  uint64_t v742;
  void *v743;
  id v744;
  char *v745;
  uint64_t v746;
  uint64_t v747;
  uint64_t v748;
  uint64_t v749;
  uint64_t v750;
  char *v751;
  uint64_t v752;
  char *v753;
  uint64_t v754;
  char v755;
  void *v756;
  uint64_t v757;
  uint64_t v758;
  uint64_t v759;
  uint64_t v760;
  uint64_t v761;
  uint64_t v762;
  uint64_t v763;
  uint64_t v764;
  uint64_t *v765;
  void *v766;
  id v767;
  uint64_t v768;
  uint64_t v769;
  uint64_t v770;
  char *v771;
  uint64_t v772;
  uint64_t v773;
  char *v774;
  char *v775;
  uint64_t v776;
  uint64_t v777;
  char v778;
  uint64_t v779;
  void *v780;
  uint64_t v781;
  uint64_t v782;
  uint64_t v783;
  uint64_t v784;
  uint64_t v785;
  uint64_t v786;
  uint64_t v787;
  id v788;
  uint64_t v789;
  id v790;
  uint64_t v791;
  void *v792;
  uint64_t v793;
  uint64_t v794;
  uint64_t v795;
  uint64_t v796;
  uint64_t v797;
  uint64_t v798;
  uint64_t v799;
  uint64_t v800;
  char v801;
  id v802;
  uint64_t v803;
  id v804;
  uint64_t v805;
  void *v806;
  uint64_t v807;
  uint64_t v808;
  uint64_t v809;
  uint64_t v810;
  uint64_t v811;
  uint64_t v812;
  uint64_t v813;
  uint64_t v814;
  char v815;
  id v816;
  uint64_t v817;
  id v818;
  uint64_t v819;
  id v820;
  uint64_t v821;
  uint64_t v822;
  uint64_t v823;
  uint64_t v824;
  uint64_t v825;
  uint64_t v826;
  uint64_t v827;
  uint64_t v828;
  char v829;
  __n128 v830;
  uint64_t v831;
  char *v832;
  char *v833;
  uint64_t v834;
  char *v835;
  uint64_t v836;
  uint64_t v837;
  void *v838;
  uint64_t v839;
  uint64_t v840;
  uint64_t v841;
  uint64_t v842;
  uint64_t v843;
  uint64_t v844;
  uint64_t v845;
  id *v846;
  void *v847;
  id v848;
  id v849;
  char v850;
  char *v851;
  uint64_t v852;
  void *v853;
  void *v854;
  id v855;
  uint64_t v856;
  id v857;
  uint64_t v858;
  int v859;
  uint64_t v860;
  id v861;
  char v862;
  uint64_t v863;
  id v864;
  uint64_t v865;
  id v866;
  uint64_t v867;
  id v868;
  uint64_t v869;
  id v870;
  id v871;
  uint64_t v872;
  id v873;
  uint64_t v874;
  int v875;
  uint64_t v876;
  void (*v877)(char *, _QWORD, uint64_t, uint64_t);
  id v878;
  uint64_t v879;
  id v880;
  unint64_t v881;
  id v882;
  int v883;
  uint64_t v884;
  uint64_t v885;
  id v886;
  uint64_t v887;
  id v888;
  int v889;
  uint64_t v890;
  char *v891;
  char *v892;
  unint64_t v893;
  uint64_t v894;
  unint64_t v895;
  char v896;
  char *v897;
  char *v898;
  id v899;
  void *v900;
  uint64_t v901;
  uint64_t v902;
  char *v903;
  uint64_t v904;
  uint64_t v905;
  char *v906;
  char *v907;
  uint64_t v908;
  uint64_t v909;
  char v910;
  uint64_t v911;
  uint64_t v912;
  uint64_t v913;
  uint64_t v914;
  uint64_t v915;
  uint64_t v916;
  uint64_t v917;
  uint64_t v918;
  id *v919;
  void *v920;
  char *v921;
  id v922;
  char v923;
  void *v924;
  id v925;
  char *v926;
  uint64_t v927;
  uint64_t v928;
  __n128 v929;
  char *v930;
  uint64_t v931;
  char *v932;
  uint64_t v933;
  id v934;
  void *v935;
  void *v936;
  char v937;
  uint64_t v938;
  uint64_t v939;
  uint64_t v940;
  uint64_t v941;
  uint64_t v942;
  uint64_t v943;
  uint64_t v944;
  uint64_t v945;
  uint64_t v946;
  void *v947;
  char *v948;
  id v949;
  char v950;
  void *v951;
  id v952;
  uint64_t v953;
  uint64_t v954;
  uint64_t v955;
  __n128 v956;
  uint64_t v957;
  uint64_t v958;
  char *v959;
  uint64_t v960;
  uint64_t v961;
  uint64_t v962;
  id v963;
  char v964;
  void *v965;
  uint64_t v966;
  uint64_t v967;
  uint64_t v968;
  uint64_t v969;
  uint64_t v970;
  uint64_t v971;
  uint64_t v972;
  uint64_t v973;
  uint64_t v974;
  id v975;
  uint64_t v976;
  uint64_t v977;
  uint64_t v978;
  id v979;
  uint64_t v980;
  uint64_t v981;
  uint64_t v982;
  id v983;
  id *v984;
  char *v985;
  char *v986;
  char *v987;
  id v988;
  uint64_t v989;
  uint64_t v990;
  uint64_t v991;
  id v992;
  uint64_t v993;
  uint64_t v994;
  uint64_t v995;
  id v996;
  uint64_t (*v997)(char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, id);
  uint64_t v998;
  double v999;
  void *v1000;
  id v1001;
  uint64_t v1002;
  id v1003;
  void *v1004;
  uint64_t v1005;
  id v1006;
  void *v1007;
  char *v1008;
  uint64_t v1009;
  uint64_t v1010;
  uint64_t v1011;
  __n128 v1012;
  uint64_t v1013;
  uint64_t v1014;
  char *v1015;
  uint64_t v1016;
  uint64_t v1017;
  void *v1018;
  uint64_t v1019;
  char v1020;
  uint64_t v1021;
  uint64_t v1022;
  uint64_t v1023;
  uint64_t v1024;
  uint64_t v1025;
  uint64_t v1026;
  uint64_t v1027;
  uint64_t v1028;
  uint64_t v1029;
  id *v1030;
  id v1031;
  uint64_t v1032;
  id v1033;
  uint64_t v1034;
  id v1035;
  uint64_t v1036;
  id v1037;
  unint64_t v1038;
  id v1039;
  uint64_t v1040;
  id v1041;
  char *v1042;
  id v1043;
  uint64_t v1044;
  id v1045;
  unint64_t v1046;
  id v1047;
  uint64_t v1048;
  id v1049;
  unint64_t v1050;
  void *v1051;
  id v1052;
  uint64_t v1053;
  uint64_t v1054;
  uint64_t v1055;
  __n128 v1056;
  char *v1057;
  uint64_t v1058;
  uint64_t v1059;
  void *v1060;
  void *v1061;
  uint64_t v1062;
  uint64_t v1063;
  uint64_t v1064;
  uint64_t v1065;
  char v1066;
  uint64_t v1067;
  uint64_t v1068;
  uint64_t v1069;
  uint64_t v1070;
  uint64_t v1071;
  uint64_t v1072;
  char v1073;
  uint64_t v1074;
  char v1075;
  void *v1076;
  uint64_t v1077;
  __int128 v1078;
  uint64_t v1079;
  uint64_t v1080;
  char v1081;
  char *v1082;
  uint64_t v1083;
  uint64_t v1084;
  uint64_t v1085;
  uint64_t v1086;
  uint64_t v1087;
  __int128 v1088;
  char *v1089;
  char *v1090;
  uint64_t v1091;
  uint64_t v1092;
  uint64_t v1093;
  __int128 v1094;
  __int128 v1095;
  uint64_t v1096;
  uint64_t v1097;
  uint64_t v1098;
  uint64_t v1099;
  uint64_t v1100;
  uint64_t v1101;
  char v1102;
  uint64_t v1103;
  uint64_t v1104;
  uint64_t v1105;
  uint64_t v1106;
  char v1107;
  __int128 *v1108;
  __int128 *v1109;
  char v1110;
  __int128 v1111;
  __int128 v1112;
  __int16 v1113;
  char *v1114;
  uint64_t v1115;
  uint64_t v1116;
  uint64_t v1117;
  uint64_t v1118;
  uint64_t v1119;
  uint64_t v1120;
  uint64_t v1121;
  uint64_t v1122;
  uint64_t v1123;
  uint64_t v1124;
  uint64_t v1125;
  uint64_t v1126;
  uint64_t v1127;
  uint64_t v1128;
  uint64_t v1129;
  uint64_t v1130;
  uint64_t v1131;
  void *v1132;
  uint64_t v1133;
  uint64_t v1134;
  uint64_t v1135;
  uint64_t v1136;
  uint64_t v1137;
  void *v1138;
  uint64_t v1139;
  id v1140;
  uint64_t v1141;
  uint64_t v1142;
  id v1143;
  uint64_t v1144;
  uint64_t v1145;
  uint64_t v1146;
  char *v1147;
  char *v1148;
  uint64_t v1149;
  uint64_t v1150;
  char *v1151;
  char *v1152;
  char *v1153;
  __int128 v1154;
  uint64_t v1155;
  __int128 v1156;
  char *v1157;
  char *v1158;
  char *v1159;
  uint64_t v1160;
  uint64_t v1161;
  id v1162;
  uint64_t v1163;
  uint64_t v1164;
  id *v1165;
  char *v1166;
  char *v1167;
  char *v1168;
  id v1169;
  __int128 v1170;
  uint64_t v1171;
  __int128 v1172;
  __int128 v1173;
  char v1174;
  __int128 v1175;
  uint64_t v1176;
  uint64_t v1177;
  char v1178;
  __int128 v1179;
  __int128 v1180;
  char v1181;
  char v1182;
  uint64_t v1183;
  uint64_t v1184;
  uint64_t v1185;

  v1153 = a5;
  v1164 = a4;
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v1151 = (char *)&v1121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Locale(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v1121 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v1121 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v1121 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v1121 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v1168 = (char *)&v1121 - v23;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>?);
  v25 = __chkstk_darwin(v24);
  *(_QWORD *)&v1156 = (char *)&v1121 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v25);
  *((_QWORD *)&v1154 + 1) = (char *)&v1121 - v28;
  v29 = __chkstk_darwin(v27);
  v1157 = (char *)&v1121 - v30;
  v31 = __chkstk_darwin(v29);
  v1159 = (char *)&v1121 - v32;
  __chkstk_darwin(v31);
  v1167 = (char *)&v1121 - v33;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v35 = __chkstk_darwin(v34);
  v1152 = (char *)&v1121 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __chkstk_darwin(v35);
  v1155 = (uint64_t)&v1121 - v38;
  v39 = __chkstk_darwin(v37);
  *(_QWORD *)&v1154 = (char *)&v1121 - v40;
  v41 = __chkstk_darwin(v39);
  *((_QWORD *)&v1156 + 1) = (char *)&v1121 - v42;
  v43 = __chkstk_darwin(v41);
  v1158 = (char *)&v1121 - v44;
  v45 = __chkstk_darwin(v43);
  v47 = (char *)&v1121 - v46;
  __chkstk_darwin(v45);
  v1166 = (char *)&v1121 - v48;
  specialized MOSuggestionCollectionViewCellViewModel.assetSizes(style:assetCount:)(a2);
  if (!v49)
  {
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
      swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    v57 = type metadata accessor for Logger(0);
    v58 = __swift_project_value_buffer(v57, (uint64_t)static MOAngelLogger.assets);
    v59 = Logger.logObject.getter(v58);
    v60 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v59, v60))
    {
      v61 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v61 = 0;
      _os_log_impl((void *)&_mh_execute_header, v59, v60, "[MOSuggestionCollectionViewCellViewModel] Unable to convert asset view models, returning nil", v61, 2u);
      specialized UnsafeMutablePointer.deallocate()((uint64_t)v61);
    }

    return 0;
  }
  v1163 = v49;
  v1160 = v8;
  v1161 = v7;
  v1162 = a1;
  v50 = objc_msgSend(a1, "assetType");
  v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeWorkout);
  v53 = v52;
  v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
  v56 = v54;
  if (v51 == v55 && v53 == v54)
  {
    swift_bridgeObjectRelease_n(v53, 2);
    goto LABEL_12;
  }
  v63 = _stringCompareWithSmolCheck(_:_:expecting:)(v51, v53, v55, v54, 0);
  swift_bridgeObjectRelease(v53);
  swift_bridgeObjectRelease(v56);
  if ((v63 & 1) != 0)
  {
LABEL_12:

    v64 = v1162;
    v65 = (char *)objc_msgSend(v1162, "content");
    v66 = objc_opt_self(MOSuggestionAssetWorkout);
    v67 = (void *)swift_dynamicCastObjCClass(v65, v66);
    if (!v67)
    {
      swift_bridgeObjectRelease(v1163);
      swift_unknownObjectRelease(v65);
      v74 = objc_msgSend(v64, "identifier");
      v1164 = static String._unconditionallyBridgeFromObjectiveC(_:)(v74);
      v1163 = v75;

      v76 = (void *)MOSuggestionAssetsTypeSystemImage;
      v77 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56))(v1166, 1, 1, v77);
      v78 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v1167, 1, 1, v78);
      v1172 = 0u;
      v1173 = 0u;
      v1174 = 1;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1160 + 56))(v1168, 1, 1, v1161);
      v1162 = (id)variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      v1161 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      LODWORD(v1160) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      v1159 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1158 = v79;
      v1157 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      *((_QWORD *)&v1156 + 1) = v80;
      *(_QWORD *)&v1156 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1155 = v81;
      *((_QWORD *)&v1154 + 1) = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      *(_QWORD *)&v1154 = v82;
      v1153 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1152 = v83;
      v1151 = (char *)variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      v1150 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1149 = v84;
      v1148 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1147 = v85;
      v1146 = default argument 27 of MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)();
      LODWORD(v1145) = v86 & 1;
      v1144 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1143 = v87;
      v1139 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1138 = v88;
      LODWORD(v1142) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      LODWORD(v1140) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      v1137 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1136 = v89;
      v1135 = default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
      v1134 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v91 = v90;
      v92 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      v93 = type metadata accessor for MOSuggestionSheetAssetViewModel(0);
      v1141 = swift_allocObject(v93, *(unsigned int *)(v93 + 48), *(unsigned __int16 *)(v93 + 52));
      v94 = v1165;
      swift_retain(v1165);
      v95 = v76;
      return MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(v1164, v1163, (uint64_t)v94, 0, 0, 0, 0, v76, 26, 0, (uint64_t)v1162, 0, 0, (uint64_t)v1166, v1161, v1160 & 1, (uint64_t)v1159, (uint64_t)v1158, (uint64_t)v1157,
               *((uint64_t *)&v1156 + 1),
               v1156,
               v1155,
               0,
               0,
               *((uint64_t *)&v1154 + 1),
               v1154,
               (uint64_t)v1153,
               (uint64_t)v1152,
               (uint64_t)v1151,
               0,
               0,
               0,
               0,
               v1150,
               v1149,
               (uint64_t)v1167,
               (uint64_t)v1148,
               (uint64_t)v1147,
               v1146,
               v1145,
               v1144,
               (uint64_t)v1143,
               v1139,
               (uint64_t)v1138,
               v1142 & 1,
               (uint64_t)&v1172,
               (uint64_t)&v1172,
               (uint64_t)&v1172,
               11,
               0,
               0,
               0,
               0,
               0,
               1,
               v1140 & 1,
               0,
               v1137,
               v1136,
               v1135,
               v1134,
               v91,
               v92);
    }
    v68 = v67;
    v1158 = (char *)objc_msgSend(v67, "icon");
    v69 = objc_msgSend(v64, "metadata");
    v70 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v69, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    v71 = MOSuggestionAssetMetadataKeyWorkoutType;
    specialized _convertToAnyHashable<A>(_:)(v71, &v1172);

    specialized Dictionary.subscript.getter((uint64_t)&v1172, v70, &v1179);
    swift_bridgeObjectRelease(v70);
    outlined destroy of AnyHashable((uint64_t)&v1172);
    v72 = v1160;
    if (*((_QWORD *)&v1180 + 1))
    {
      if (swift_dynamicCast(&v1175, &v1179, (char *)&type metadata for Any + 8, &type metadata for String, 6))
      {
        v73 = *((_QWORD *)&v1175 + 1);
        v1157 = (char *)v1175;
        goto LABEL_22;
      }
    }
    else
    {
      outlined destroy of Any?((uint64_t)&v1179, &demangling cache variable for type metadata for Any?);
    }
    v1157 = 0;
    v73 = 0xE000000000000000;
LABEL_22:
    *((_QWORD *)&v1156 + 1) = v73;
    v102 = objc_msgSend(v64, "metadata");
    v103 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v102, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    v104 = MOSuggestionAssetMetadataKeyWorkoutCaloriesBurntWithUnit;
    specialized _convertToAnyHashable<A>(_:)(v104, &v1172);

    specialized Dictionary.subscript.getter((uint64_t)&v1172, v103, &v1179);
    swift_bridgeObjectRelease(v103);
    outlined destroy of AnyHashable((uint64_t)&v1172);
    if (*((_QWORD *)&v1180 + 1))
    {
      if (swift_dynamicCast(&v1175, &v1179, (char *)&type metadata for Any + 8, &type metadata for String, 6))
      {
        v105 = *((_QWORD *)&v1175 + 1);
        *(_QWORD *)&v1156 = v1175;
        goto LABEL_27;
      }
    }
    else
    {
      outlined destroy of Any?((uint64_t)&v1179, &demangling cache variable for type metadata for Any?);
    }
    *(_QWORD *)&v1156 = 0;
    v105 = 0xE000000000000000;
LABEL_27:
    v1155 = v105;
    v106 = objc_msgSend(v64, "metadata");
    v107 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v106, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    v108 = MOSuggestionAssetMetadataKeyWorkoutTotalDistanceWithUnit;
    specialized _convertToAnyHashable<A>(_:)(v108, &v1172);

    specialized Dictionary.subscript.getter((uint64_t)&v1172, v107, &v1179);
    swift_bridgeObjectRelease(v107);
    outlined destroy of AnyHashable((uint64_t)&v1172);
    if (*((_QWORD *)&v1180 + 1))
    {
      if (swift_dynamicCast(&v1175, &v1179, (char *)&type metadata for Any + 8, &type metadata for String, 6))
      {
        v109 = *((_QWORD *)&v1175 + 1);
        *((_QWORD *)&v1154 + 1) = v1175;
        goto LABEL_32;
      }
    }
    else
    {
      outlined destroy of Any?((uint64_t)&v1179, &demangling cache variable for type metadata for Any?);
    }
    *((_QWORD *)&v1154 + 1) = 0;
    v109 = 0xE000000000000000;
LABEL_32:
    *(_QWORD *)&v1154 = v109;
    v110 = objc_msgSend(v64, "metadata");
    v111 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v110, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    v112 = MOSuggestionAssetMetadataKeyWorkoutAverageHeartRateWithUnit;
    specialized _convertToAnyHashable<A>(_:)(v112, &v1172);

    specialized Dictionary.subscript.getter((uint64_t)&v1172, v111, &v1179);
    swift_bridgeObjectRelease(v111);
    outlined destroy of AnyHashable((uint64_t)&v1172);
    if (*((_QWORD *)&v1180 + 1))
    {
      if (swift_dynamicCast(&v1175, &v1179, (char *)&type metadata for Any + 8, &type metadata for String, 6))
      {
        v113 = (char *)*((_QWORD *)&v1175 + 1);
        v1153 = (char *)v1175;
LABEL_37:
        v1152 = v113;
        v114 = objc_msgSend(v64, "metadata");
        v115 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v114, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

        v116 = MOSuggestionAssetMetadataKeyWorkoutDuration;
        specialized _convertToAnyHashable<A>(_:)(v116, &v1172);

        specialized Dictionary.subscript.getter((uint64_t)&v1172, v115, &v1179);
        swift_bridgeObjectRelease(v115);
        outlined destroy of AnyHashable((uint64_t)&v1172);
        if (*((_QWORD *)&v1180 + 1))
        {
          v117 = swift_dynamicCast(&v1175, &v1179, (char *)&type metadata for Any + 8, &type metadata for Double, 6);
          v118 = v1161;
          v119 = v1163;
          if (v117)
            v120 = v1175;
          else
            v120 = 0;
        }
        else
        {
          outlined destroy of Any?((uint64_t)&v1179, &demangling cache variable for type metadata for Any?);
          v120 = 0;
          v118 = v1161;
          v119 = v1163;
        }
        v121 = objc_msgSend(v68, "renderedRouteMap");
        v1159 = v65;
        v1163 = v120;
        if (v121)
        {
          v122 = v121;
          v123 = objc_msgSend(v64, "identifier");
          v1162 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(v123);
          v1151 = v124;

          v125 = (void *)MOSuggestionAssetsTypeRoutePreview;
          v126 = type metadata accessor for URL(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v126 - 8) + 56))(v1166, 1, 1, v126);
          v127 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v127 - 8) + 56))(v1167, 1, 1, v127);
          v1172 = 0u;
          v1173 = 0u;
          v1174 = 1;
          v128 = 11;
          if ((v1164 & 0x8000000000000000) == 0 && *(_QWORD *)(v119 + 16) > v1164)
            v128 = *(unsigned __int8 *)(v119 + v1164 + 32);
          LODWORD(v1146) = v128;
          swift_retain(v1165);
          v1164 = v122;
          v129 = v125;
          v130 = swift_bridgeObjectRelease(v119);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v72 + 56))(v1168, 1, 1, v118, v130);
          v1161 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
          v1160 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
          LODWORD(v1150) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
          v1149 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1148 = (char *)v131;
          v1147 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1145 = v132;
          v1144 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1143 = v133;
          v1142 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1141 = v134;
          v1139 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
          v1137 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1136 = v135;
          LODWORD(v1135) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
          LODWORD(v1134) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
          v1133 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1132 = v136;
          v137 = default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
          v138 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v140 = v139;
          v141 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1140 = v125;
          static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1138 = v122;
          static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
          v142 = type metadata accessor for MOSuggestionSheetAssetViewModel(0);
          swift_allocObject(v142, *(unsigned int *)(v142 + 48), *(unsigned __int16 *)(v142 + 52));
          v62 = MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)((uint64_t)v1162, (uint64_t)v1151, (uint64_t)v1165, 0, 0, v1138, 0, v1140, 9, 0, v1161, 0, 0, (uint64_t)v1166, v1160, v1150 & 1, v1149, (uint64_t)v1148, (uint64_t)v1147,
                  v1145,
                  (uint64_t)v1157,
                  *((uint64_t *)&v1156 + 1),
                  0,
                  0,
                  v1144,
                  (uint64_t)v1143,
                  v1142,
                  v1141,
                  v1139,
                  0,
                  0,
                  0,
                  0,
                  v1137,
                  v1136,
                  (uint64_t)v1167,
                  v1156,
                  v1155,
                  v1163,
                  0,
                  *((uint64_t *)&v1154 + 1),
                  v1154,
                  (uint64_t)v1153,
                  (uint64_t)v1152,
                  v1135 & 1,
                  (uint64_t)&v1172,
                  (uint64_t)&v1172,
                  (uint64_t)&v1172,
                  v1146,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  v1134 & 1,
                  0,
                  v1133,
                  (uint64_t)v1132,
                  v137,
                  v138,
                  v140,
                  v141);
          swift_unknownObjectRelease(v1159);

          return v62;
        }
        v143 = objc_msgSend(v64, "identifier");
        v144 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v143);
        v146 = v145;

        v147 = (void *)MOSuggestionAssetsTypeSystemImage;
        v148 = type metadata accessor for URL(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v148 - 8) + 56))(v1166, 1, 1, v148);
        v149 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v149 - 8) + 56))(v1167, 1, 1, v149);
        v1172 = 0u;
        v1173 = 0u;
        v1174 = 1;
        v150 = 11;
        v1162 = v144;
        v1151 = v146;
        if ((v1164 & 0x8000000000000000) == 0 && *(_QWORD *)(v119 + 16) > v1164)
          v150 = *(unsigned __int8 *)(v119 + v1164 + 32);
        LODWORD(v1146) = v150;
        swift_retain(v1165);
        v151 = v147;
        v152 = swift_bridgeObjectRelease(v119);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v72 + 56))(v1168, 1, 1, v118, v152);
        v1164 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
        v1161 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
        LODWORD(v1160) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
        v1150 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1149 = v153;
        v1148 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1147 = v154;
        v1145 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1144 = v155;
        v1143 = (id)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1142 = v156;
        v1141 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
        v1139 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1138 = v157;
        LODWORD(v1137) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
        LODWORD(v1136) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
        v1135 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1134 = v158;
        v159 = default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
        v160 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v162 = v161;
        v163 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1140 = v147;
        static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
        v164 = type metadata accessor for MOSuggestionSheetAssetViewModel(0);
        swift_allocObject(v164, *(unsigned int *)(v164 + 48), *(unsigned __int16 *)(v164 + 52));
        v165 = MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)((uint64_t)v1162, (uint64_t)v1151, (uint64_t)v1165, v1158, 0, 0, 0, v1140, 7, 0, v1164, 0, 0, (uint64_t)v1166, v1161, v1160 & 1, v1150, v1149, (uint64_t)v1148,
                 (uint64_t)v1147,
                 (uint64_t)v1157,
                 *((uint64_t *)&v1156 + 1),
                 0,
                 0,
                 v1145,
                 v1144,
                 (uint64_t)v1143,
                 v1142,
                 v1141,
                 0,
                 0,
                 0,
                 0,
                 v1139,
                 (uint64_t)v1138,
                 (uint64_t)v1167,
                 v1156,
                 v1155,
                 v1163,
                 0,
                 *((uint64_t *)&v1154 + 1),
                 v1154,
                 (uint64_t)v1153,
                 (uint64_t)v1152,
                 v1137 & 1,
                 (uint64_t)&v1172,
                 (uint64_t)&v1172,
                 (uint64_t)&v1172,
                 v1146,
                 0,
                 0,
                 0,
                 0,
                 0,
                 1,
                 v1136 & 1,
                 0,
                 v1135,
                 v1134,
                 v159,
                 v160,
                 v162,
                 v163);
        goto LABEL_51;
      }
    }
    else
    {
      outlined destroy of Any?((uint64_t)&v1179, &demangling cache variable for type metadata for Any?);
    }
    v1153 = 0;
    v113 = (char *)0xE000000000000000;
    goto LABEL_37;
  }
  v96 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeWorkoutGroup);
  v98 = v97;
  v100 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
  v101 = v99;
  if (v96 == v100 && v98 == v99)
  {
    swift_bridgeObjectRelease_n(v98, 2);
LABEL_54:

    v168 = v1162;
    v169 = (char *)objc_msgSend(v1162, "content");
    v170 = objc_opt_self(UIView);
    v171 = (char *)swift_dynamicCastObjCClass(v169, v170);
    if (v171)
    {
      v1159 = v171;
      v172 = objc_msgSend(v168, "metadata");
      v173 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v172, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      v174 = MOSuggestionAssetMetadataKeyWorkoutGroupTotalCaloriesWithUnit;
      specialized _convertToAnyHashable<A>(_:)(v174, &v1172);

      specialized Dictionary.subscript.getter((uint64_t)&v1172, v173, &v1179);
      swift_bridgeObjectRelease(v173);
      outlined destroy of AnyHashable((uint64_t)&v1172);
      if (*((_QWORD *)&v1180 + 1))
      {
        if (swift_dynamicCast(&v1175, &v1179, (char *)&type metadata for Any + 8, &type metadata for String, 6))
        {
          v175 = (char *)*((_QWORD *)&v1175 + 1);
          v1158 = (char *)v1175;
          goto LABEL_69;
        }
      }
      else
      {
        outlined destroy of Any?((uint64_t)&v1179, &demangling cache variable for type metadata for Any?);
      }
      v1158 = 0;
      v175 = (char *)0xE000000000000000;
LABEL_69:
      v1157 = v175;
      v193 = objc_msgSend(v168, "metadata");
      v194 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v193, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      v195 = MOSuggestionAssetMetadataKeyWorkoutGroupTotalTime;
      specialized _convertToAnyHashable<A>(_:)(v195, &v1172);

      specialized Dictionary.subscript.getter((uint64_t)&v1172, v194, &v1179);
      swift_bridgeObjectRelease(v194);
      outlined destroy of AnyHashable((uint64_t)&v1172);
      if (*((_QWORD *)&v1180 + 1))
      {
        if (swift_dynamicCast(&v1175, &v1179, (char *)&type metadata for Any + 8, &type metadata for Double, 6))
        {
          *((_QWORD *)&v1156 + 1) = v1175;
          goto LABEL_74;
        }
      }
      else
      {
        outlined destroy of Any?((uint64_t)&v1179, &demangling cache variable for type metadata for Any?);
      }
      *((_QWORD *)&v1156 + 1) = 0;
LABEL_74:
      v196 = objc_msgSend(v168, "metadata");
      v197 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v196, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      v198 = MOSuggestionAssetMetadataKeyWorkoutGroupCount;
      specialized _convertToAnyHashable<A>(_:)(v198, &v1172);

      specialized Dictionary.subscript.getter((uint64_t)&v1172, v197, &v1179);
      swift_bridgeObjectRelease(v197);
      outlined destroy of AnyHashable((uint64_t)&v1172);
      if (*((_QWORD *)&v1180 + 1))
      {
        if (swift_dynamicCast(&v1175, &v1179, (char *)&type metadata for Any + 8, &type metadata for Int, 6))
        {
          v199 = v1175;
          goto LABEL_79;
        }
      }
      else
      {
        outlined destroy of Any?((uint64_t)&v1179, &demangling cache variable for type metadata for Any?);
      }
      v199 = 0;
LABEL_79:
      v200 = objc_msgSend(v168, "metadata");
      v201 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v200, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      v202 = MOSuggestionAssetMetadataKeyWorkoutAverageHeartRateWithUnit;
      specialized _convertToAnyHashable<A>(_:)(v202, &v1172);

      specialized Dictionary.subscript.getter((uint64_t)&v1172, v201, &v1179);
      swift_bridgeObjectRelease(v201);
      outlined destroy of AnyHashable((uint64_t)&v1172);
      if (*((_QWORD *)&v1180 + 1))
      {
        v203 = swift_dynamicCast(&v1175, &v1179, (char *)&type metadata for Any + 8, &type metadata for String, 6);
        v204 = v1161;
        v205 = v1160;
        if (v203)
        {
          v206 = *((_QWORD *)&v1175 + 1);
          v207 = v1175;
LABEL_84:
          *(_QWORD *)&v1156 = v206;
          String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(9, 1);
          v208._countAndFlagsBits = 0;
          v208._object = (void *)0xE000000000000000;
          String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v208);
          *(_QWORD *)&v1172 = v199;
          v209 = specialized formatSpecifier<A>(_:)();
          v211 = v210;
          String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v1172, v209, v210, &type metadata for Int, &protocol witness table for Int);
          swift_bridgeObjectRelease(v211);
          v212._countAndFlagsBits = 0x74756F6B726F5720;
          v212._object = (void *)0xE900000000000073;
          String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v212);
          v213 = String.LocalizationValue.init(stringInterpolation:)(v18);
          default argument 3 of String.init(localized:table:bundle:locale:comment:)(v213);
          v214 = String.init(localized:table:bundle:locale:comment:)(v15, 0xD000000000000012, 0x80000001001A90C0, 0, v12, "number of workouts", 18, 2);
          v216 = v215;
          v217 = objc_msgSend(v168, "identifier");
          v218 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v217);
          v220 = v219;

          v221 = (id)MOSuggestionAssetsTypeWorkoutGroup;
          v222 = type metadata accessor for URL(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v222 - 8) + 56))(v1166, 1, 1, v222);
          v223 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v223 - 8) + 56))(v1167, 1, 1, v223);
          v1172 = 0u;
          v1173 = 0u;
          v1174 = 1;
          v224 = 11;
          v1160 = v207;
          v1155 = v214;
          v1162 = v218;
          *((_QWORD *)&v1154 + 1) = v220;
          *(_QWORD *)&v1154 = v216;
          if (v1164 < 0)
          {
            v225 = v1163;
          }
          else
          {
            v225 = v1163;
            if (*(_QWORD *)(v1163 + 16) > v1164)
              v224 = *(unsigned __int8 *)(v1163 + v1164 + 32);
          }
          LODWORD(v1149) = v224;
          swift_retain(v1165);
          v257 = v221;
          v258 = swift_bridgeObjectRelease(v225);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v205 + 56))(v1168, 1, 1, v204, v258);
          v1164 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
          v1163 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
          LODWORD(v1161) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
          v1153 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1152 = v259;
          v1151 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1150 = v260;
          v1148 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1147 = v261;
          v1145 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1144 = v262;
          v1143 = (id)variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
          v1142 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1141 = v263;
          LODWORD(v1140) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
          LODWORD(v1139) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
          v1138 = (void *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1137 = v264;
          v265 = default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
          v266 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1146 = (uint64_t)v221;
          v268 = v267;
          v269 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
          v270 = type metadata accessor for MOSuggestionSheetAssetViewModel(0);
          swift_allocObject(v270, *(unsigned int *)(v270 + 48), *(unsigned __int16 *)(v270 + 52));
          v1120 = v269;
          v1118 = v266;
          v1119 = v268;
          v1117 = v265;
          v1116 = v1137;
          v1115 = (uint64_t)v1138;
          v1114 = v1159;
          LOBYTE(v1113) = 1;
          v1110 = v1149;
          v1106 = v1156;
          v1105 = v1160;
          HIBYTE(v1113) = v1139 & 1;
          v1109 = &v1172;
          v1108 = &v1172;
          v1107 = v1140 & 1;
          v1103 = 0;
          v1104 = 0xE000000000000000;
          v1102 = 0;
          v1101 = *((_QWORD *)&v1156 + 1);
          v1100 = (uint64_t)v1157;
          v1099 = (uint64_t)v1158;
          v1098 = (uint64_t)v1167;
          v1097 = v1141;
          v1096 = v1142;
          v1095 = 0u;
          v1094 = 0u;
          v1093 = (uint64_t)v1143;
          v1092 = v1144;
          v1091 = v1145;
          v1090 = v1147;
          v1089 = v1148;
          v1088 = 0u;
          v1087 = v1154;
          v1086 = v1155;
          v1085 = v1150;
          v1084 = (uint64_t)v1151;
          v1083 = (uint64_t)v1152;
          v1082 = v1153;
          v1081 = v1161 & 1;
          v1080 = v1163;
          v1079 = (uint64_t)v1166;
          v1078 = 0u;
          v1076 = 0;
          v1077 = v1164;
          v1075 = 10;
          v1112 = 0u;
          v1111 = 0u;
          v271 = (uint64_t)v1162;
          v272 = *((_QWORD *)&v1154 + 1);
          v273 = v1165;
          v274 = 0;
          v275 = (char *)&v1172 + 8;
          goto LABEL_92;
        }
      }
      else
      {
        outlined destroy of Any?((uint64_t)&v1179, &demangling cache variable for type metadata for Any?);
        v204 = v1161;
        v205 = v1160;
      }
      v207 = 0;
      v206 = 0xE000000000000000;
      goto LABEL_84;
    }
    swift_bridgeObjectRelease(v1163);
    goto LABEL_59;
  }
  v167 = _stringCompareWithSmolCheck(_:_:expecting:)(v96, v98, v100, v99, 0);
  swift_bridgeObjectRelease(v98);
  swift_bridgeObjectRelease(v101);
  if ((v167 & 1) != 0)
    goto LABEL_54;
  v176 = (void *)MOSuggestionAssetsTypeMotionActivity;
  v177 = v50;
  v178 = v176;
  v179 = specialized == infix<A>(_:_:)();

  if ((v179 & 1) == 0)
  {
    v226 = (void *)MOSuggestionAssetsTypeActivityRings;
    v227 = v177;
    v228 = v226;
    v229 = specialized == infix<A>(_:_:)();

    v230 = v1161;
    v231 = v1160;
    if ((v229 & 1) != 0)
    {
      swift_bridgeObjectRelease(v1163);

      v232 = v1162;
      v169 = (char *)objc_msgSend(v1162, "content");
      v233 = objc_opt_self(HKActivitySummary);
      v234 = swift_dynamicCastObjCClass(v169, v233);
      if (v234)
      {
        v1164 = v234;
        v235 = objc_msgSend(v232, "identifier");
        v1163 = static String._unconditionallyBridgeFromObjectiveC(_:)(v235);
        v1159 = v236;

        swift_retain(v1165);
        swift_unknownObjectRetain();
        v1162 = objc_msgSend(v232, "assetType");
        v237 = type metadata accessor for URL(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v237 - 8) + 56))(v1166, 1, 1, v237);
        v238 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v238 - 8) + 56))(v1167, 1, 1, v238);
        v1172 = 0u;
        v1173 = 0u;
        v1174 = 1;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v231 + 56))(v1168, 1, 1, v230);
        v1161 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
        v1160 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
        LODWORD(v1158) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
        v1157 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        *((_QWORD *)&v1156 + 1) = v239;
        *(_QWORD *)&v1156 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1155 = v240;
        *((_QWORD *)&v1154 + 1) = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        *(_QWORD *)&v1154 = v241;
        v1153 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1152 = v242;
        v1151 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1150 = v243;
        v1149 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
        v1148 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1147 = v244;
        v1145 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1144 = v245;
        v1143 = (id)default argument 27 of MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)();
        LODWORD(v1142) = v246 & 1;
        v1140 = (id)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1139 = v247;
        v1137 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1136 = v248;
        LODWORD(v1141) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
        LODWORD(v1138) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
        v1135 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1134 = v249;
        v250 = default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
        v251 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v253 = v252;
        v254 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1146 = (uint64_t)v169;
        static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
        v255 = type metadata accessor for MOSuggestionSheetAssetViewModel(0);
        swift_allocObject(v255, *(unsigned int *)(v255 + 48), *(unsigned __int16 *)(v255 + 52));
        v256 = MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(v1163, (uint64_t)v1159, (uint64_t)v1165, 0, (void *)v1164, 0, 0, v1162, 26, 0, v1161, 0, 0, (uint64_t)v1166, v1160, v1158 & 1, (uint64_t)v1157, *((uint64_t *)&v1156 + 1), v1156,
                 v1155,
                 *((uint64_t *)&v1154 + 1),
                 v1154,
                 0,
                 0,
                 (uint64_t)v1153,
                 (uint64_t)v1152,
                 (uint64_t)v1151,
                 v1150,
                 v1149,
                 0,
                 0,
                 0,
                 0,
                 (uint64_t)v1148,
                 (uint64_t)v1147,
                 (uint64_t)v1167,
                 v1145,
                 v1144,
                 (uint64_t)v1143,
                 v1142,
                 (uint64_t)v1140,
                 v1139,
                 v1137,
                 v1136,
                 v1141 & 1,
                 (uint64_t)&v1172,
                 (uint64_t)&v1172,
                 (uint64_t)&v1172,
                 11,
                 0,
                 0,
                 0,
                 0,
                 0,
                 1,
                 v1138 & 1,
                 0,
                 v1135,
                 v1134,
                 v250,
                 v251,
                 v253,
                 v254);
LABEL_98:
        v62 = v256;
        v166 = (char *)&v1172 + 8;
        goto LABEL_52;
      }
      goto LABEL_59;
    }
    v278 = (void *)MOSuggestionAssetsTypeAppIcon;
    v279 = v227;
    v280 = v278;
    v281 = specialized == infix<A>(_:_:)();

    v282 = v1163;
    if ((v281 & 1) != 0)
    {
      swift_bridgeObjectRelease(v1163);

      v283 = v1162;
      v169 = (char *)objc_msgSend(v1162, "content");
      v284 = objc_opt_self(UIImage);
      v285 = swift_dynamicCastObjCClass(v169, v284);
      if (v285)
      {
        v1164 = v285;
        v286 = objc_msgSend(v283, "identifier");
        v1163 = static String._unconditionallyBridgeFromObjectiveC(_:)(v286);
        v1159 = v287;

        swift_retain(v1165);
        swift_unknownObjectRetain();
        v1162 = objc_msgSend(v283, "assetType");
        v288 = type metadata accessor for URL(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v288 - 8) + 56))(v1166, 1, 1, v288);
        v289 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v289 - 8) + 56))(v1167, 1, 1, v289);
        v1172 = 0u;
        v1173 = 0u;
        v1174 = 1;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v231 + 56))(v1168, 1, 1, v230);
        v1161 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
        v1160 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
        LODWORD(v1158) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
        v1157 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        *((_QWORD *)&v1156 + 1) = v290;
        *(_QWORD *)&v1156 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1155 = v291;
        *((_QWORD *)&v1154 + 1) = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        *(_QWORD *)&v1154 = v292;
        v1153 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1152 = v293;
        v1151 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1150 = v294;
        v1149 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
        v1148 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1147 = v295;
        v1145 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1144 = v296;
        v1143 = (id)default argument 27 of MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)();
        LODWORD(v1142) = v297 & 1;
        v1140 = (id)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1139 = v298;
        v1137 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1136 = v299;
        LODWORD(v1141) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
        LODWORD(v1138) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
        v1135 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1134 = v300;
        v301 = default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
        v302 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v304 = v303;
        v305 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1146 = (uint64_t)v169;
        static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
        v306 = type metadata accessor for MOSuggestionSheetAssetViewModel(0);
        swift_allocObject(v306, *(unsigned int *)(v306 + 48), *(unsigned __int16 *)(v306 + 52));
        v256 = MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(v1163, (uint64_t)v1159, (uint64_t)v1165, (void *)v1164, 0, 0, 0, v1162, 26, 0, v1161, 0, 0, (uint64_t)v1166, v1160, v1158 & 1, (uint64_t)v1157, *((uint64_t *)&v1156 + 1), v1156,
                 v1155,
                 *((uint64_t *)&v1154 + 1),
                 v1154,
                 0,
                 0,
                 (uint64_t)v1153,
                 (uint64_t)v1152,
                 (uint64_t)v1151,
                 v1150,
                 v1149,
                 0,
                 0,
                 0,
                 0,
                 (uint64_t)v1148,
                 (uint64_t)v1147,
                 (uint64_t)v1167,
                 v1145,
                 v1144,
                 (uint64_t)v1143,
                 v1142,
                 (uint64_t)v1140,
                 v1139,
                 v1137,
                 v1136,
                 v1141 & 1,
                 (uint64_t)&v1172,
                 (uint64_t)&v1172,
                 (uint64_t)&v1172,
                 11,
                 0,
                 0,
                 0,
                 0,
                 0,
                 1,
                 v1138 & 1,
                 0,
                 v1135,
                 v1134,
                 v301,
                 v302,
                 v304,
                 v305);
        goto LABEL_98;
      }
LABEL_59:
      swift_unknownObjectRelease(v169);
      return 0;
    }
    v307 = (void *)MOSuggestionAssetsTypeSystemImage;
    v308 = v279;
    v309 = v307;
    v310 = specialized == infix<A>(_:_:)();

    if ((v310 & 1) != 0)
    {
      swift_bridgeObjectRelease(v282);

      v311 = v1162;
      v312 = (char *)objc_msgSend(v1162, "content");
      v313 = objc_opt_self(UIImage);
      v314 = swift_dynamicCastObjCClass(v312, v313);
      if (!v314)
      {
        swift_unknownObjectRelease(v312);
        return 0;
      }
      v1164 = v314;
      v315 = objc_msgSend(v1165[2], "metaData");
      if (v315)
      {
        v316 = v315;
        v317 = specialized _bridgeAnythingToObjectiveC<A>(_:)(0x6E6F69746361, 0xE600000000000000);
        v318 = objc_msgSend(v316, "__swift_objectForKeyedSubscript:", v317);
        swift_unknownObjectRelease(v317);

        if (v318)
        {
          _bridgeAnyObjectToAny(_:)(&v1179, v318);
          swift_unknownObjectRelease(v318);
        }
        else
        {
          v1180 = 0u;
          v1179 = 0u;
        }
        outlined init with take of Date?((uint64_t)&v1179, (uint64_t)&v1172, &demangling cache variable for type metadata for Any?);
        if (*((_QWORD *)&v1173 + 1))
        {
          if (swift_dynamicCast(&v1179, &v1172, (char *)&type metadata for Any + 8, &type metadata for String, 6))
          {
            v386 = (char *)*((_QWORD *)&v1179 + 1);
            v1163 = v1179;
LABEL_155:
            v1159 = v386;
            v387 = objc_msgSend(v311, "identifier");
            v1158 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v387);
            v1157 = v388;

            swift_retain(v1165);
            swift_unknownObjectRetain();
            v1162 = objc_msgSend(v311, "assetType");
            v389 = type metadata accessor for URL(0);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v389 - 8) + 56))(v1166, 1, 1, v389);
            v390 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v390 - 8) + 56))(v1167, 1, 1, v390);
            v1172 = 0u;
            v1173 = 0u;
            v1174 = 1;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v231 + 56))(v1168, 1, 1, v230);
            v1161 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
            v1160 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
            DWORD2(v1156) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
            *(_QWORD *)&v1156 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            v1155 = v391;
            *((_QWORD *)&v1154 + 1) = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            *(_QWORD *)&v1154 = v392;
            v1153 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            v1152 = v393;
            v1151 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            v1150 = v394;
            v1149 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
            v1147 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            v1146 = v395;
            v1145 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            v1144 = v396;
            v1143 = (id)default argument 27 of MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)();
            LODWORD(v1142) = v397 & 1;
            v1140 = (id)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            v1139 = v398;
            v1137 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            v1136 = v399;
            LODWORD(v1141) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
            LODWORD(v1138) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
            v1135 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            v1134 = v400;
            v401 = default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
            v402 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            v1148 = v312;
            v403 = v402;
            v405 = v404;
            v406 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
            v407 = type metadata accessor for MOSuggestionSheetAssetViewModel(0);
            swift_allocObject(v407, *(unsigned int *)(v407 + 48), *(unsigned __int16 *)(v407 + 52));
            v62 = MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)((uint64_t)v1158, (uint64_t)v1157, (uint64_t)v1165, (void *)v1164, 0, 0, 0, v1162, 26, 0, v1161, 0, 0, (uint64_t)v1166, v1160, BYTE8(v1156) & 1, v1156, v1155, *((uint64_t *)&v1154 + 1),
                    v1154,
                    v1163,
                    (uint64_t)v1159,
                    0,
                    0,
                    (uint64_t)v1153,
                    (uint64_t)v1152,
                    (uint64_t)v1151,
                    v1150,
                    v1149,
                    0,
                    0,
                    0,
                    0,
                    (uint64_t)v1147,
                    v1146,
                    (uint64_t)v1167,
                    v1145,
                    v1144,
                    (uint64_t)v1143,
                    v1142,
                    (uint64_t)v1140,
                    v1139,
                    v1137,
                    v1136,
                    v1141 & 1,
                    (uint64_t)&v1172,
                    (uint64_t)&v1172,
                    (uint64_t)&v1172,
                    11,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    v1138 & 1,
                    0,
                    v1135,
                    v1134,
                    v401,
                    v403,
                    v405,
                    v406);
            v166 = (char *)&v1173 + 8;
            goto LABEL_52;
          }
LABEL_154:
          v1163 = 0;
          v386 = (char *)0xE000000000000000;
          goto LABEL_155;
        }
      }
      else
      {
        v1172 = 0u;
        v1173 = 0u;
      }
      outlined destroy of Any?((uint64_t)&v1172, &demangling cache variable for type metadata for Any?);
      goto LABEL_154;
    }
    v319 = (void *)MOSuggestionAssetsTypeContactPhoto;
    v320 = v308;
    v321 = v319;
    v322 = specialized == infix<A>(_:_:)();

    if ((v322 & 1) != 0)
    {

      v323 = v1162;
      v324 = objc_msgSend(v1162, "content");
      v325 = objc_opt_self(UIImage);
      v326 = (char *)swift_dynamicCastObjCClass(v324, v325);
      if (v326)
      {
        v1166 = v326;
        v327 = objc_msgSend(v323, "metadata");
        v328 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v327, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

        v329 = MOSuggestionAssetMetadataKeyContactName;
        specialized _convertToAnyHashable<A>(_:)(v329, &v1172);

        specialized Dictionary.subscript.getter((uint64_t)&v1172, v328, &v1179);
        swift_bridgeObjectRelease(v328);
        outlined destroy of AnyHashable((uint64_t)&v1172);
        v330 = objc_msgSend(v323, "metadata");
        v331 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v330, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

        v332 = MOSuggestionAssetMetadataKeyContactFirstName;
        specialized _convertToAnyHashable<A>(_:)(v332, &v1172);

        specialized Dictionary.subscript.getter((uint64_t)&v1172, v331, &v1175);
        swift_bridgeObjectRelease(v331);
        outlined destroy of AnyHashable((uint64_t)&v1172);
        v333 = objc_msgSend(v323, "identifier");
        v1159 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v333);
        v1158 = v334;

        v1162 = objc_msgSend(v323, "assetType");
        v335 = type metadata accessor for URL(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v335 - 8) + 56))(v47, 1, 1, v335);
        outlined init with copy of Date?((uint64_t)&v1179, (uint64_t)&v1172, &demangling cache variable for type metadata for Any?);
        if (*((_QWORD *)&v1173 + 1))
        {
          v336 = swift_dynamicCast(&v1170, &v1172, (char *)&type metadata for Any + 8, &type metadata for String, 6);
          v337 = (char *)v1170;
          if (!v336)
            v337 = 0;
          v1157 = v337;
          if (v336)
            v338 = *((_QWORD *)&v1170 + 1);
          else
            v338 = 0;
          *((_QWORD *)&v1156 + 1) = v338;
        }
        else
        {
          outlined destroy of Any?((uint64_t)&v1172, &demangling cache variable for type metadata for Any?);
          v1157 = 0;
          *((_QWORD *)&v1156 + 1) = 0;
        }
        v437 = v1161;
        outlined init with copy of Date?((uint64_t)&v1175, (uint64_t)&v1172, &demangling cache variable for type metadata for Any?);
        v438 = v1163;
        if (*((_QWORD *)&v1173 + 1))
        {
          v439 = swift_dynamicCast(&v1170, &v1172, (char *)&type metadata for Any + 8, &type metadata for String, 6);
          v440 = v1170;
          if (!v439)
            v440 = 0;
          *(_QWORD *)&v1156 = v440;
          if (v439)
            v441 = *((_QWORD *)&v1170 + 1);
          else
            v441 = 0;
          v1155 = v441;
        }
        else
        {
          outlined destroy of Any?((uint64_t)&v1172, &demangling cache variable for type metadata for Any?);
          *(_QWORD *)&v1156 = 0;
          v1155 = 0;
        }
        v442 = v1160;
        v443 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v443 - 8) + 56))(v1167, 1, 1, v443);
        v1172 = 0u;
        v1173 = 0u;
        v1174 = 1;
        if (v1164 < 0)
        {
          v444 = 11;
        }
        else
        {
          v444 = 11;
          if (*(_QWORD *)(v438 + 16) > v1164)
            v444 = *(unsigned __int8 *)(v438 + v1164 + 32);
        }
        LODWORD(v1151) = v444;
        v509 = swift_bridgeObjectRelease(v438);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v442 + 56))(v1168, 1, 1, v437, v509);
        v1164 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
        v1163 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
        LODWORD(v1161) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
        v1160 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        *((_QWORD *)&v1154 + 1) = v510;
        *(_QWORD *)&v1154 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1153 = v511;
        v1152 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1150 = v512;
        v1149 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
        v1148 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1147 = v513;
        v1146 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1145 = v514;
        v1144 = default argument 27 of MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)();
        LODWORD(v1143) = v515 & 1;
        v1140 = (id)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1139 = v516;
        v1138 = (void *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1136 = v517;
        LODWORD(v1142) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
        LODWORD(v1137) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
        v1135 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1134 = v518;
        v1133 = default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
        v1132 = (void *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v520 = v519;
        v521 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
        v522 = type metadata accessor for MOSuggestionSheetAssetViewModel(0);
        v1141 = swift_allocObject(v522, *(unsigned int *)(v522 + 48), *(unsigned __int16 *)(v522 + 52));
        v523 = v1165;
        swift_retain(v1165);
        v62 = MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)((uint64_t)v1159, (uint64_t)v1158, (uint64_t)v523, v1166, 0, 0, 0, v1162, 11, 0, v1164, 0, 0, (uint64_t)v47, v1163, v1161 & 1, (uint64_t)v1157, *((uint64_t *)&v1156 + 1), v1156,
                v1155,
                v1160,
                *((uint64_t *)&v1154 + 1),
                0,
                0,
                v1154,
                (uint64_t)v1153,
                (uint64_t)v1152,
                v1150,
                v1149,
                0,
                0,
                0,
                0,
                (uint64_t)v1148,
                (uint64_t)v1147,
                (uint64_t)v1167,
                v1146,
                v1145,
                v1144,
                (char)v1143,
                (uint64_t)v1140,
                v1139,
                (uint64_t)v1138,
                v1136,
                v1142 & 1,
                (uint64_t)&v1172,
                (uint64_t)&v1172,
                (uint64_t)&v1172,
                (char)v1151,
                0,
                0,
                0,
                0,
                0,
                1,
                v1137 & 1,
                0,
                v1135,
                v1134,
                v1133,
                (uint64_t)v1132,
                v520,
                v521);
        outlined destroy of Any?((uint64_t)&v1175, &demangling cache variable for type metadata for Any?);
        outlined destroy of Any?((uint64_t)&v1179, &demangling cache variable for type metadata for Any?);
        return v62;
      }
      swift_bridgeObjectRelease(v282);
LABEL_148:
      swift_unknownObjectRelease(v324);
      return 0;
    }
    v341 = (void *)MOSuggestionAssetsTypePhoto;
    v342 = v320;
    v343 = v341;
    v344 = specialized == infix<A>(_:_:)();

    if ((v344 & 1) != 0)
    {
      swift_bridgeObjectRelease(v282);

      v345 = v1162;
      v346 = objc_msgSend(v1162, "content");
      v347 = objc_opt_self(UIImage);
      v348 = (char *)swift_dynamicCastObjCClass(v346, v347);
      if (v348)
      {
        v1167 = v348;
      }
      else
      {
        swift_unknownObjectRelease(v346);
        v1167 = 0;
      }
      v445 = objc_msgSend(v345, "identifier");
      v1166 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v445);
      v1164 = v446;

      v447 = (void *)MOSuggestionAssetsTypePhoto;
      v448 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v448 - 8) + 56))(v1158, 1, 1, v448);
      v449 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v449 - 8) + 56))(v1159, 1, 1, v449);
      v1163 = v447;
      v450 = objc_msgSend(v345, "metadata");
      v451 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v450, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      v452 = MOSuggestionAssetMetadataKeyPhotoBestSquareCropRect;
      specialized _convertToAnyHashable<A>(_:)(v452, &v1172);

      specialized Dictionary.subscript.getter((uint64_t)&v1172, v451, &v1179);
      swift_bridgeObjectRelease(v451);
      outlined destroy of AnyHashable((uint64_t)&v1172);
      if (*((_QWORD *)&v1180 + 1))
      {
        v453 = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetPhotoCropRect, MOSuggestionAssetPhotoCropRect_ptr);
        if ((swift_dynamicCast(&v1175, &v1179, (char *)&type metadata for Any + 8, v453, 6) & 1) != 0)
        {
          v454 = (void *)v1175;
          objc_msgSend((id)v1175, "cgRect");
          v456 = v455;
          v458 = v457;
          v460 = v459;
          v462 = v461;

          v463 = 0;
          goto LABEL_183;
        }
      }
      else
      {
        outlined destroy of Any?((uint64_t)&v1179, &demangling cache variable for type metadata for Any?);
      }
      v463 = 1;
      v456 = 0;
      v458 = 0;
      v460 = 0;
      v462 = 0;
LABEL_183:
      *(_QWORD *)&v1175 = v456;
      *((_QWORD *)&v1175 + 1) = v458;
      v1176 = v460;
      v1177 = v462;
      v1178 = v463;
      v464 = objc_msgSend(v345, "metadata");
      v465 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v464, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      v466 = MOSuggestionAssetMetadataKeyPhotoBestLandscapeCropRect;
      specialized _convertToAnyHashable<A>(_:)(v466, &v1172);

      specialized Dictionary.subscript.getter((uint64_t)&v1172, v465, &v1179);
      swift_bridgeObjectRelease(v465);
      outlined destroy of AnyHashable((uint64_t)&v1172);
      if (*((_QWORD *)&v1180 + 1))
      {
        v467 = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetPhotoCropRect, MOSuggestionAssetPhotoCropRect_ptr);
        if ((swift_dynamicCast(&v1170, &v1179, (char *)&type metadata for Any + 8, v467, 6) & 1) != 0)
        {
          v468 = (void *)v1170;
          objc_msgSend((id)v1170, "cgRect");
          v470 = v469;
          v472 = v471;
          v474 = v473;
          v476 = v475;

          v477 = 0;
          goto LABEL_188;
        }
      }
      else
      {
        outlined destroy of Any?((uint64_t)&v1179, &demangling cache variable for type metadata for Any?);
      }
      v477 = 1;
      v470 = 0;
      v472 = 0;
      v474 = 0;
      v476 = 0;
LABEL_188:
      *(_QWORD *)&v1179 = v470;
      *((_QWORD *)&v1179 + 1) = v472;
      *(_QWORD *)&v1180 = v474;
      *((_QWORD *)&v1180 + 1) = v476;
      v1181 = v477;
      v478 = objc_msgSend(v345, "metadata");
      v479 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v478, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      v480 = MOSuggestionAssetMetadataKeyPhotoBestPortraitCropRect;
      specialized _convertToAnyHashable<A>(_:)(v480, &v1172);

      specialized Dictionary.subscript.getter((uint64_t)&v1172, v479, &v1170);
      swift_bridgeObjectRelease(v479);
      outlined destroy of AnyHashable((uint64_t)&v1172);
      if (v1171)
      {
        v481 = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetPhotoCropRect, MOSuggestionAssetPhotoCropRect_ptr);
        if ((swift_dynamicCast(&v1169, &v1170, (char *)&type metadata for Any + 8, v481, 6) & 1) != 0)
        {
          v482 = v1169;
          objc_msgSend(v1169, "cgRect");
          v484 = v483;
          v486 = v485;
          v488 = v487;
          v490 = v489;

          v491 = 0;
LABEL_193:
          *(_QWORD *)&v1172 = v484;
          *((_QWORD *)&v1172 + 1) = v486;
          *(_QWORD *)&v1173 = v488;
          *((_QWORD *)&v1173 + 1) = v490;
          v1174 = v491;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v231 + 56))(v1168, 1, 1, v230);
          v1150 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
          v1162 = (id)variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
          LODWORD(v1161) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
          v1160 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1157 = v492;
          *((_QWORD *)&v1156 + 1) = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          *(_QWORD *)&v1156 = v493;
          v1155 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          *((_QWORD *)&v1154 + 1) = v494;
          *(_QWORD *)&v1154 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1153 = v495;
          v1152 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1151 = v496;
          v1149 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
          v1148 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1147 = v497;
          v1146 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1145 = v498;
          v1144 = default argument 27 of MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)();
          LODWORD(v1143) = v499 & 1;
          v1140 = (id)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1139 = v500;
          v1137 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1136 = v501;
          LODWORD(v1142) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
          LODWORD(v1138) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
          v1135 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1134 = v502;
          v1133 = default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
          v1132 = (void *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v504 = v503;
          v505 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
          v506 = type metadata accessor for MOSuggestionSheetAssetViewModel(0);
          v1141 = swift_allocObject(v506, *(unsigned int *)(v506 + 48), *(unsigned __int16 *)(v506 + 52));
          v507 = v1165;
          swift_retain(v1165);
          v1120 = v505;
          v1119 = v504;
          v1118 = (uint64_t)v1132;
          v1117 = v1133;
          v1116 = v1134;
          v1115 = v1135;
          LOBYTE(v1113) = 1;
          v1106 = v1136;
          v1105 = v1137;
          v1104 = v1139;
          v1103 = (uint64_t)v1140;
          v1114 = 0;
          HIBYTE(v1113) = v1138 & 1;
          v1110 = 11;
          v1108 = &v1175;
          v1109 = &v1179;
          v1107 = v1142 & 1;
          v1102 = (char)v1143;
          v1101 = v1144;
          v1100 = v1145;
          v1099 = v1146;
          v1098 = (uint64_t)v1159;
          v1097 = (uint64_t)v1147;
          v1096 = (uint64_t)v1148;
          v1095 = 0u;
          v1094 = 0u;
          v1093 = v1149;
          v1092 = (uint64_t)v1151;
          v1091 = (uint64_t)v1152;
          v1090 = v1153;
          v1089 = (char *)v1154;
          v1088 = 0u;
          v1087 = *((_QWORD *)&v1154 + 1);
          v1086 = v1155;
          v1084 = *((_QWORD *)&v1156 + 1);
          v1085 = v1156;
          v1083 = (uint64_t)v1157;
          v1082 = (char *)v1160;
          v1081 = v1161 & 1;
          v1080 = (uint64_t)v1162;
          v1079 = (uint64_t)v1158;
          v1078 = 0u;
          v1076 = 0;
          v1077 = v1150;
          v1075 = 12;
          v1112 = 0u;
          v1111 = 0u;
          v271 = (uint64_t)v1166;
          v272 = v1164;
          v273 = v507;
          v274 = v1167;
          v508 = &v1184;
LABEL_228:
          v276 = (void *)*(v508 - 32);
          return MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(v271, v272, (uint64_t)v273, v274, 0, 0, 0, v276, v1075, v1076, v1077, v1078, *((uint64_t *)&v1078 + 1), v1079, v1080, v1081, (uint64_t)v1082, v1083, v1084,
                   v1085,
                   v1086,
                   v1087,
                   (void *)v1088,
                   *((void **)&v1088 + 1),
                   (uint64_t)v1089,
                   (uint64_t)v1090,
                   v1091,
                   v1092,
                   v1093,
                   v1094,
                   *((uint64_t *)&v1094 + 1),
                   v1095,
                   *((uint64_t *)&v1095 + 1),
                   v1096,
                   v1097,
                   v1098,
                   v1099,
                   v1100,
                   v1101,
                   v1102,
                   v1103,
                   v1104,
                   v1105,
                   v1106,
                   v1107,
                   (uint64_t)v1108,
                   (uint64_t)v1109,
                   (uint64_t)&v1172,
                   v1110,
                   v1111,
                   *((uint64_t *)&v1111 + 1),
                   v1112,
                   *((uint64_t *)&v1112 + 1),
                   0,
                   v1113,
                   SHIBYTE(v1113),
                   v1114,
                   v1115,
                   v1116,
                   v1117,
                   v1118,
                   v1119,
                   v1120);
        }
      }
      else
      {
        outlined destroy of Any?((uint64_t)&v1170, &demangling cache variable for type metadata for Any?);
      }
      v491 = 1;
      v484 = 0;
      v486 = 0;
      v488 = 0;
      v490 = 0;
      goto LABEL_193;
    }
    v367 = (void *)MOSuggestionAssetsTypeLivePhoto;
    v368 = v342;
    v369 = v367;
    v370 = specialized == infix<A>(_:_:)();

    if ((v370 & 1) != 0)
    {

      v371 = v1162;
      v372 = objc_msgSend(v1162, "content");
      v373 = objc_opt_self(PHLivePhoto);
      v374 = (void *)swift_dynamicCastObjCClass(v372, v373);
      if (v374)
      {
        v1132 = v374;
      }
      else
      {
        swift_unknownObjectRelease(v372);
        v1132 = 0;
      }
      v543 = objc_msgSend(v371, "identifier");
      v1167 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v543);
      v1166 = v544;

      v545 = (void *)MOSuggestionAssetsTypeLivePhoto;
      v546 = type metadata accessor for URL(0);
      (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v546 - 8) + 56))(*((_QWORD *)&v1156 + 1), 1, 1, v546);
      v547 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v547 - 8) + 56))(v1157, 1, 1, v547);
      v1159 = v545;
      v548 = objc_msgSend(v371, "metadata");
      v549 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v548, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      v550 = MOSuggestionAssetMetadataKeyPhotoBestSquareCropRect;
      specialized _convertToAnyHashable<A>(_:)(v550, &v1172);

      specialized Dictionary.subscript.getter((uint64_t)&v1172, v549, &v1179);
      swift_bridgeObjectRelease(v549);
      outlined destroy of AnyHashable((uint64_t)&v1172);
      if (*((_QWORD *)&v1180 + 1))
      {
        v551 = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetPhotoCropRect, MOSuggestionAssetPhotoCropRect_ptr);
        if ((swift_dynamicCast(&v1175, &v1179, (char *)&type metadata for Any + 8, v551, 6) & 1) != 0)
        {
          v552 = (void *)v1175;
          objc_msgSend((id)v1175, "cgRect");
          v554 = v553;
          v556 = v555;
          v558 = v557;
          v560 = v559;

          v561 = 0;
          goto LABEL_214;
        }
      }
      else
      {
        outlined destroy of Any?((uint64_t)&v1179, &demangling cache variable for type metadata for Any?);
      }
      v561 = 1;
      v554 = 0;
      v556 = 0;
      v558 = 0;
      v560 = 0;
LABEL_214:
      *(_QWORD *)&v1175 = v554;
      *((_QWORD *)&v1175 + 1) = v556;
      v1176 = v558;
      v1177 = v560;
      v1178 = v561;
      v562 = objc_msgSend(v371, "metadata");
      v563 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v562, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      v564 = MOSuggestionAssetMetadataKeyPhotoBestLandscapeCropRect;
      specialized _convertToAnyHashable<A>(_:)(v564, &v1172);

      specialized Dictionary.subscript.getter((uint64_t)&v1172, v563, &v1179);
      swift_bridgeObjectRelease(v563);
      outlined destroy of AnyHashable((uint64_t)&v1172);
      if (*((_QWORD *)&v1180 + 1))
      {
        v565 = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetPhotoCropRect, MOSuggestionAssetPhotoCropRect_ptr);
        if ((swift_dynamicCast(&v1170, &v1179, (char *)&type metadata for Any + 8, v565, 6) & 1) != 0)
        {
          v566 = (void *)v1170;
          objc_msgSend((id)v1170, "cgRect");
          v568 = v567;
          v570 = v569;
          v572 = v571;
          v574 = v573;

          v575 = 0;
          goto LABEL_219;
        }
      }
      else
      {
        outlined destroy of Any?((uint64_t)&v1179, &demangling cache variable for type metadata for Any?);
      }
      v575 = 1;
      v568 = 0;
      v570 = 0;
      v572 = 0;
      v574 = 0;
LABEL_219:
      *(_QWORD *)&v1179 = v568;
      *((_QWORD *)&v1179 + 1) = v570;
      *(_QWORD *)&v1180 = v572;
      *((_QWORD *)&v1180 + 1) = v574;
      v1181 = v575;
      v576 = objc_msgSend(v371, "metadata");
      v577 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v576, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      v578 = MOSuggestionAssetMetadataKeyPhotoBestPortraitCropRect;
      specialized _convertToAnyHashable<A>(_:)(v578, &v1172);

      specialized Dictionary.subscript.getter((uint64_t)&v1172, v577, &v1170);
      swift_bridgeObjectRelease(v577);
      outlined destroy of AnyHashable((uint64_t)&v1172);
      if (v1171)
      {
        v579 = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetPhotoCropRect, MOSuggestionAssetPhotoCropRect_ptr);
        v580 = swift_dynamicCast(&v1169, &v1170, (char *)&type metadata for Any + 8, v579, 6);
        v581 = v1163;
        if ((v580 & 1) != 0)
        {
          v582 = v1169;
          objc_msgSend(v1169, "cgRect");
          v584 = v583;
          v586 = v585;
          v588 = v587;
          v590 = v589;

          v591 = 0;
          goto LABEL_224;
        }
      }
      else
      {
        outlined destroy of Any?((uint64_t)&v1170, &demangling cache variable for type metadata for Any?);
        v581 = v1163;
      }
      v591 = 1;
      v584 = 0;
      v586 = 0;
      v588 = 0;
      v590 = 0;
LABEL_224:
      *(_QWORD *)&v1172 = v584;
      *((_QWORD *)&v1172 + 1) = v586;
      *(_QWORD *)&v1173 = v588;
      *((_QWORD *)&v1173 + 1) = v590;
      v592 = 11;
      v1174 = v591;
      if ((v1164 & 0x8000000000000000) == 0 && *(_QWORD *)(v581 + 16) > v1164)
        v592 = *(unsigned __int8 *)(v581 + v1164 + 32);
      LODWORD(v1154) = v592;
      v593 = swift_bridgeObjectRelease(v581);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v231 + 56))(v1168, 1, 1, v230, v593);
      v1164 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      v1163 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      LODWORD(v1162) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      v1161 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1160 = v594;
      v1158 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      *(_QWORD *)&v1156 = v595;
      v1155 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      *((_QWORD *)&v1154 + 1) = v596;
      v1153 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1152 = v597;
      v1151 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1150 = v598;
      v1149 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      v1148 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1147 = v599;
      v1146 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1145 = v600;
      v1144 = default argument 27 of MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)();
      LODWORD(v1143) = v601 & 1;
      v1140 = (id)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1139 = v602;
      v1137 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1136 = v603;
      LODWORD(v1142) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      LODWORD(v1138) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      v1135 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1134 = v604;
      v1133 = default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
      v605 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v607 = v606;
      v608 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      v609 = type metadata accessor for MOSuggestionSheetAssetViewModel(0);
      v1141 = swift_allocObject(v609, *(unsigned int *)(v609 + 48), *(unsigned __int16 *)(v609 + 52));
      v610 = v1165;
      swift_retain(v1165);
      v1120 = v608;
      v1118 = v605;
      v1119 = v607;
      v1117 = v1133;
      v1116 = v1134;
      v1115 = v1135;
      LOBYTE(v1113) = 1;
      v1110 = v1154;
      v1106 = v1136;
      v1105 = v1137;
      v1104 = v1139;
      v1103 = (uint64_t)v1140;
      v1114 = 0;
      HIBYTE(v1113) = v1138 & 1;
      v1108 = &v1175;
      v1109 = &v1179;
      v1107 = v1142 & 1;
      v1102 = (char)v1143;
      v1101 = v1144;
      v1100 = v1145;
      v1099 = v1146;
      v1098 = (uint64_t)v1157;
      v1097 = (uint64_t)v1147;
      v1096 = (uint64_t)v1148;
      v1095 = 0u;
      v1094 = 0u;
      v1093 = v1149;
      v1092 = v1150;
      v1091 = (uint64_t)v1151;
      v1090 = v1152;
      v1089 = v1153;
      v1088 = (unint64_t)v1132;
      v1087 = *((_QWORD *)&v1154 + 1);
      v1086 = v1155;
      v1085 = v1156;
      v1084 = (uint64_t)v1158;
      v1083 = v1160;
      v1082 = (char *)v1161;
      v1081 = v1162 & 1;
      v1080 = v1163;
      v1079 = *((_QWORD *)&v1156 + 1);
      v1078 = 0u;
      v1076 = 0;
      v1077 = v1164;
      v1075 = 13;
      v1112 = 0u;
      v1111 = 0u;
      v271 = (uint64_t)v1167;
      v272 = (uint64_t)v1166;
      v273 = v610;
      v274 = 0;
      v508 = (uint64_t *)&v1182;
      goto LABEL_228;
    }
    v408 = (void *)MOSuggestionAssetsTypeVideo;
    v409 = v368;
    v410 = v408;
    v411 = specialized == infix<A>(_:_:)();

    if ((v411 & 1) != 0)
    {

      v412 = v1162;
      v413 = objc_msgSend(v1162, "content");
      v414 = objc_opt_self(NSURL);
      v415 = (void *)swift_dynamicCastObjCClass(v413, v414);
      if (v415)
      {
        v1132 = v415;
LABEL_159:
        LODWORD(v1166) = 0;
        if ((v1164 & 0x8000000000000000) == 0 && *(_QWORD *)(v1163 + 16) > v1164)
        {
          v416 = *(unsigned __int8 *)(v1163 + v1164 + 32);
          if (v416 == 11
            || !specialized static MOSuggestionAssetTileSize.__derived_enum_equals(_:_:)(*(_BYTE *)(v1163 + v1164 + 32), 8u)&& ((*v1153 & 1) != 0 || (v416 - 2) < 9 && ((0x1BFu >> (v416 - 2)) & 1) != 0))
          {
            LODWORD(v1166) = 0;
          }
          else
          {
            LODWORD(v1166) = 1;
            *v1153 = 1;
          }
        }
        v670 = v1162;
        v671 = objc_msgSend(v1162, "identifier");
        v1159 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v671);
        v1158 = v672;

        v673 = (void *)MOSuggestionAssetsTypeVideo;
        v674 = type metadata accessor for URL(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v674 - 8) + 56))(v1155, 1, 1, v674);
        v675 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
        (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v675 - 8) + 56))(v1156, 1, 1, v675);
        v1157 = v673;
        v676 = objc_msgSend(v670, "metadata");
        v677 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v676, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

        v678 = MOSuggestionAssetMetadataKeyPhotoBestSquareCropRect;
        specialized _convertToAnyHashable<A>(_:)(v678, &v1172);

        specialized Dictionary.subscript.getter((uint64_t)&v1172, v677, &v1179);
        swift_bridgeObjectRelease(v677);
        outlined destroy of AnyHashable((uint64_t)&v1172);
        if (*((_QWORD *)&v1180 + 1))
        {
          v679 = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetPhotoCropRect, MOSuggestionAssetPhotoCropRect_ptr);
          if ((swift_dynamicCast(&v1175, &v1179, (char *)&type metadata for Any + 8, v679, 6) & 1) != 0)
          {
            v680 = (void *)v1175;
            objc_msgSend((id)v1175, "cgRect");
            v682 = v681;
            v684 = v683;
            v686 = v685;
            v688 = v687;

            v689 = 0;
            goto LABEL_251;
          }
        }
        else
        {
          outlined destroy of Any?((uint64_t)&v1179, &demangling cache variable for type metadata for Any?);
        }
        v689 = 1;
        v682 = 0;
        v684 = 0;
        v686 = 0;
        v688 = 0;
LABEL_251:
        *(_QWORD *)&v1175 = v682;
        *((_QWORD *)&v1175 + 1) = v684;
        v1176 = v686;
        v1177 = v688;
        v1178 = v689;
        v690 = objc_msgSend(v1162, "metadata");
        v691 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v690, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

        v692 = MOSuggestionAssetMetadataKeyPhotoBestLandscapeCropRect;
        specialized _convertToAnyHashable<A>(_:)(v692, &v1172);

        specialized Dictionary.subscript.getter((uint64_t)&v1172, v691, &v1179);
        swift_bridgeObjectRelease(v691);
        outlined destroy of AnyHashable((uint64_t)&v1172);
        if (*((_QWORD *)&v1180 + 1))
        {
          v693 = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetPhotoCropRect, MOSuggestionAssetPhotoCropRect_ptr);
          if ((swift_dynamicCast(&v1170, &v1179, (char *)&type metadata for Any + 8, v693, 6) & 1) != 0)
          {
            v694 = (void *)v1170;
            objc_msgSend((id)v1170, "cgRect");
            v696 = v695;
            v698 = v697;
            v700 = v699;
            v702 = v701;

            v703 = 0;
            goto LABEL_256;
          }
        }
        else
        {
          outlined destroy of Any?((uint64_t)&v1179, &demangling cache variable for type metadata for Any?);
        }
        v703 = 1;
        v696 = 0;
        v698 = 0;
        v700 = 0;
        v702 = 0;
LABEL_256:
        *(_QWORD *)&v1179 = v696;
        *((_QWORD *)&v1179 + 1) = v698;
        *(_QWORD *)&v1180 = v700;
        *((_QWORD *)&v1180 + 1) = v702;
        v1181 = v703;
        v704 = objc_msgSend(v1162, "metadata");
        v705 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v704, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

        v706 = MOSuggestionAssetMetadataKeyPhotoBestPortraitCropRect;
        specialized _convertToAnyHashable<A>(_:)(v706, &v1172);

        specialized Dictionary.subscript.getter((uint64_t)&v1172, v705, &v1170);
        swift_bridgeObjectRelease(v705);
        outlined destroy of AnyHashable((uint64_t)&v1172);
        if (v1171)
        {
          v707 = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetPhotoCropRect, MOSuggestionAssetPhotoCropRect_ptr);
          if ((swift_dynamicCast(&v1169, &v1170, (char *)&type metadata for Any + 8, v707, 6) & 1) != 0)
          {
            v708 = v1169;
            objc_msgSend(v1169, "cgRect");
            v710 = v709;
            v712 = v711;
            v714 = v713;
            v716 = v715;

            v717 = 0;
LABEL_261:
            *(_QWORD *)&v1172 = v710;
            *((_QWORD *)&v1172 + 1) = v712;
            *(_QWORD *)&v1173 = v714;
            *((_QWORD *)&v1173 + 1) = v716;
            LODWORD(v1167) = 11;
            v1174 = v717;
            if (v1164 < 0)
            {
              v718 = v1163;
            }
            else
            {
              v718 = v1163;
              if (*(_QWORD *)(v1163 + 16) > v1164)
                LODWORD(v1167) = *(unsigned __int8 *)(v1163 + v1164 + 32);
            }
            v719 = swift_bridgeObjectRelease(v718);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v1160 + 56))(v1168, 1, 1, v1161, v719);
            v1164 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
            v1163 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
            LODWORD(v1162) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
            v1161 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            v1160 = v720;
            *((_QWORD *)&v1156 + 1) = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            *((_QWORD *)&v1154 + 1) = v721;
            *(_QWORD *)&v1154 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            v1153 = v722;
            v1152 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            v1151 = v723;
            v1150 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            v1149 = v724;
            v1148 = (char *)variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
            v1147 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            v1146 = v725;
            v1145 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            v1144 = v726;
            v1143 = (id)default argument 27 of MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)();
            LODWORD(v1142) = v727 & 1;
            v1141 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            v1140 = v728;
            v1137 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            v1136 = v729;
            LODWORD(v1138) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
            v1135 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            v1134 = v730;
            v1133 = default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
            v731 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            v733 = v732;
            v734 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
            v735 = type metadata accessor for MOSuggestionSheetAssetViewModel(0);
            v1139 = swift_allocObject(v735, *(unsigned int *)(v735 + 48), *(unsigned __int16 *)(v735 + 52));
            v736 = v1165;
            swift_retain(v1165);
            return MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)((uint64_t)v1159, (uint64_t)v1158, (uint64_t)v736, 0, 0, 0, 0, v1157, 14, 0, v1164, 0, 0, v1155, v1163, v1162 & 1, v1161, v1160, *((uint64_t *)&v1156 + 1),
                     *((uint64_t *)&v1154 + 1),
                     v1154,
                     (uint64_t)v1153,
                     0,
                     v1132,
                     (uint64_t)v1152,
                     (uint64_t)v1151,
                     v1150,
                     v1149,
                     (uint64_t)v1148,
                     0,
                     0,
                     0,
                     0,
                     (uint64_t)v1147,
                     v1146,
                     v1156,
                     v1145,
                     v1144,
                     (uint64_t)v1143,
                     v1142,
                     v1141,
                     (uint64_t)v1140,
                     v1137,
                     v1136,
                     (char)v1166,
                     (uint64_t)&v1175,
                     (uint64_t)&v1179,
                     (uint64_t)&v1172,
                     (char)v1167,
                     0,
                     0,
                     0,
                     0,
                     0,
                     1,
                     v1138 & 1,
                     0,
                     v1135,
                     v1134,
                     v1133,
                     v731,
                     v733,
                     v734);
          }
        }
        else
        {
          outlined destroy of Any?((uint64_t)&v1170, &demangling cache variable for type metadata for Any?);
        }
        v717 = 1;
        v710 = 0;
        v712 = 0;
        v714 = 0;
        v716 = 0;
        goto LABEL_261;
      }
      swift_unknownObjectRelease(v413);
      v628 = objc_msgSend(v412, "content");
      v629 = objc_opt_self(UIImage);
      v1167 = (char *)swift_dynamicCastObjCClass(v628, v629);
      if (!v1167)
      {
        swift_unknownObjectRelease(v628);
        v1132 = 0;
        goto LABEL_159;
      }
      v630 = v1162;
      v631 = objc_msgSend(v1162, "identifier");
      v1159 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v631);
      v1158 = v632;

      v633 = (void *)MOSuggestionAssetsTypeVideo;
      v634 = type metadata accessor for URL(0);
      (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v634 - 8) + 56))(v1154, 1, 1, v634);
      v635 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
      (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v635 - 8) + 56))(*((_QWORD *)&v1154 + 1), 1, 1, v635);
      v1157 = v633;
      v636 = objc_msgSend(v630, "metadata");
      v637 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v636, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      v638 = MOSuggestionAssetMetadataKeyVideoDuration;
      specialized _convertToAnyHashable<A>(_:)(v638, &v1172);

      specialized Dictionary.subscript.getter((uint64_t)&v1172, v637, &v1179);
      swift_bridgeObjectRelease(v637);
      outlined destroy of AnyHashable((uint64_t)&v1172);
      if (*((_QWORD *)&v1180 + 1))
      {
        v639 = swift_dynamicCast(&v1175, &v1179, (char *)&type metadata for Any + 8, &type metadata for Double, 6);
        v640 = v1175;
        if (!v639)
          v640 = 0;
        *((_QWORD *)&v1156 + 1) = v640;
        v641 = v639 ^ 1;
      }
      else
      {
        outlined destroy of Any?((uint64_t)&v1179, &demangling cache variable for type metadata for Any?);
        *((_QWORD *)&v1156 + 1) = 0;
        v641 = 1;
      }
      LODWORD(v1156) = v641;
      v788 = objc_msgSend(v1162, "metadata");
      v789 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v788, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      v790 = MOSuggestionAssetMetadataKeyPhotoBestSquareCropRect;
      specialized _convertToAnyHashable<A>(_:)(v790, &v1172);

      specialized Dictionary.subscript.getter((uint64_t)&v1172, v789, &v1179);
      swift_bridgeObjectRelease(v789);
      outlined destroy of AnyHashable((uint64_t)&v1172);
      if (*((_QWORD *)&v1180 + 1))
      {
        v791 = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetPhotoCropRect, MOSuggestionAssetPhotoCropRect_ptr);
        if ((swift_dynamicCast(&v1175, &v1179, (char *)&type metadata for Any + 8, v791, 6) & 1) != 0)
        {
          v792 = (void *)v1175;
          objc_msgSend((id)v1175, "cgRect");
          v794 = v793;
          v796 = v795;
          v798 = v797;
          v800 = v799;

          v801 = 0;
          goto LABEL_285;
        }
      }
      else
      {
        outlined destroy of Any?((uint64_t)&v1179, &demangling cache variable for type metadata for Any?);
      }
      v801 = 1;
      v794 = 0;
      v796 = 0;
      v798 = 0;
      v800 = 0;
LABEL_285:
      *(_QWORD *)&v1175 = v794;
      *((_QWORD *)&v1175 + 1) = v796;
      v1176 = v798;
      v1177 = v800;
      v1178 = v801;
      v802 = objc_msgSend(v1162, "metadata");
      v803 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v802, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      v804 = MOSuggestionAssetMetadataKeyPhotoBestLandscapeCropRect;
      specialized _convertToAnyHashable<A>(_:)(v804, &v1172);

      specialized Dictionary.subscript.getter((uint64_t)&v1172, v803, &v1179);
      swift_bridgeObjectRelease(v803);
      outlined destroy of AnyHashable((uint64_t)&v1172);
      if (*((_QWORD *)&v1180 + 1))
      {
        v805 = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetPhotoCropRect, MOSuggestionAssetPhotoCropRect_ptr);
        if ((swift_dynamicCast(&v1170, &v1179, (char *)&type metadata for Any + 8, v805, 6) & 1) != 0)
        {
          v806 = (void *)v1170;
          objc_msgSend((id)v1170, "cgRect");
          v808 = v807;
          v810 = v809;
          v812 = v811;
          v814 = v813;

          v815 = 0;
          goto LABEL_290;
        }
      }
      else
      {
        outlined destroy of Any?((uint64_t)&v1179, &demangling cache variable for type metadata for Any?);
      }
      v815 = 1;
      v808 = 0;
      v810 = 0;
      v812 = 0;
      v814 = 0;
LABEL_290:
      *(_QWORD *)&v1179 = v808;
      *((_QWORD *)&v1179 + 1) = v810;
      *(_QWORD *)&v1180 = v812;
      *((_QWORD *)&v1180 + 1) = v814;
      v1181 = v815;
      v816 = objc_msgSend(v1162, "metadata");
      v817 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v816, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      v818 = MOSuggestionAssetMetadataKeyPhotoBestPortraitCropRect;
      specialized _convertToAnyHashable<A>(_:)(v818, &v1172);

      specialized Dictionary.subscript.getter((uint64_t)&v1172, v817, &v1170);
      swift_bridgeObjectRelease(v817);
      outlined destroy of AnyHashable((uint64_t)&v1172);
      if (v1171)
      {
        v819 = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetPhotoCropRect, MOSuggestionAssetPhotoCropRect_ptr);
        if ((swift_dynamicCast(&v1169, &v1170, (char *)&type metadata for Any + 8, v819, 6) & 1) != 0)
        {
          v820 = v1169;
          objc_msgSend(v1169, "cgRect");
          v822 = v821;
          v824 = v823;
          v826 = v825;
          v828 = v827;

          v829 = 0;
          goto LABEL_295;
        }
      }
      else
      {
        outlined destroy of Any?((uint64_t)&v1170, &demangling cache variable for type metadata for Any?);
      }
      v829 = 1;
      v822 = 0;
      v824 = 0;
      v826 = 0;
      v828 = 0;
LABEL_295:
      *(_QWORD *)&v1172 = v822;
      *((_QWORD *)&v1172 + 1) = v824;
      *(_QWORD *)&v1173 = v826;
      *((_QWORD *)&v1173 + 1) = v828;
      LODWORD(v1166) = 11;
      v1174 = v829;
      if ((v1164 & 0x8000000000000000) == 0 && *(_QWORD *)(v1163 + 16) > v1164)
        LODWORD(v1166) = *(unsigned __int8 *)(v1163 + v1164 + 32);
      v830 = swift_bridgeObjectRelease(v1163);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v1160 + 56))(v1168, 1, 1, v1161, v830);
      v1164 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      v1163 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      LODWORD(v1162) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      v1161 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1160 = v831;
      v1155 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1153 = v832;
      v1152 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1151 = v833;
      v1150 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1149 = v834;
      v1148 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1147 = v835;
      v1146 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      v1145 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1144 = v836;
      v1143 = (id)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1142 = v837;
      v1139 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1138 = v838;
      v1136 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1135 = v839;
      LODWORD(v1141) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      LODWORD(v1137) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      v1134 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1133 = v840;
      v1132 = (void *)default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
      v841 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v843 = v842;
      v844 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      v845 = type metadata accessor for MOSuggestionSheetAssetViewModel(0);
      v1140 = (id)swift_allocObject(v845, *(unsigned int *)(v845 + 48), *(unsigned __int16 *)(v845 + 52));
      v846 = v1165;
      swift_retain(v1165);
      return MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)((uint64_t)v1159, (uint64_t)v1158, (uint64_t)v846, v1167, 0, 0, 0, v1157, 14, 0, v1164, 0, 0, v1154, v1163, v1162 & 1, v1161, v1160, v1155,
               (uint64_t)v1153,
               (uint64_t)v1152,
               (uint64_t)v1151,
               0,
               0,
               v1150,
               v1149,
               (uint64_t)v1148,
               (uint64_t)v1147,
               v1146,
               0,
               0,
               0,
               0,
               v1145,
               v1144,
               *((uint64_t *)&v1154 + 1),
               (uint64_t)v1143,
               v1142,
               *((uint64_t *)&v1156 + 1),
               v1156,
               v1139,
               (uint64_t)v1138,
               v1136,
               v1135,
               v1141 & 1,
               (uint64_t)&v1175,
               (uint64_t)&v1179,
               (uint64_t)&v1172,
               (char)v1166,
               0,
               0,
               0,
               0,
               0,
               1,
               v1137 & 1,
               0,
               v1134,
               v1133,
               (uint64_t)v1132,
               v841,
               v843,
               v844);
    }
    v524 = (void *)MOSuggestionAssetsTypeMultiPinMap;
    v525 = v409;
    v526 = v524;
    v527 = specialized == infix<A>(_:_:)();

    if ((v527 & 1) != 0)
    {

      v528 = v1162;
      v529 = (char *)objc_msgSend(v1162, "content");
      v530 = objc_opt_self(UIImage);
      v1159 = v529;
      v1158 = (char *)swift_dynamicCastObjCClass(v529, v530);
      if (v1158)
      {
        v531 = objc_msgSend(v528, "metadata");
        v532 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v531, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

        v533 = MOSuggestionAssetMetadataKeyMultiPinMapLocations;
        specialized _convertToAnyHashable<A>(_:)(v533, &v1172);

        specialized Dictionary.subscript.getter((uint64_t)&v1172, v532, &v1179);
        swift_bridgeObjectRelease(v532);
        outlined destroy of AnyHashable((uint64_t)&v1172);
        if (*((_QWORD *)&v1180 + 1))
        {
          v534 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [[MOSuggestionAssetMetadataKey : Any]]);
          if ((swift_dynamicCast(&v1175, &v1179, (char *)&type metadata for Any + 8, v534, 6) & 1) != 0)
          {
            v535 = v1175;
            v536 = specialized Collection.first.getter(v1175);
            if (v536)
            {
              v537 = v536;
              v538 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewPlaceName;
              swift_bridgeObjectRetain(v536);
              v539 = v538;
              specialized Dictionary.subscript.getter((uint64_t)v539, v537, &v1172);

              swift_bridgeObjectRelease(v537);
              if (*((_QWORD *)&v1173 + 1))
              {
                v540 = swift_dynamicCast(&v1179, &v1172, (char *)&type metadata for Any + 8, &type metadata for String, 6);
                v541 = v1179;
                if (!v540)
                  v541 = 0;
                *(_QWORD *)&v1156 = v541;
                if (v540)
                  v542 = (char *)*((_QWORD *)&v1179 + 1);
                else
                  v542 = 0;
                v1157 = v542;
              }
              else
              {
                outlined destroy of Any?((uint64_t)&v1172, &demangling cache variable for type metadata for Any?);
                v1157 = 0;
                *(_QWORD *)&v1156 = 0;
              }
              v882 = MOSuggestionAssetMetadataKeyLocationPreviewCityName;
              specialized Dictionary.subscript.getter((uint64_t)v882, v537, &v1172);

              swift_bridgeObjectRelease(v537);
              if (*((_QWORD *)&v1173 + 1))
              {
                v883 = swift_dynamicCast(&v1179, &v1172, (char *)&type metadata for Any + 8, &type metadata for String, 6);
                v884 = v1179;
                if (!v883)
                  v884 = 0;
                v1155 = v884;
                if (v883)
                  v885 = *((_QWORD *)&v1179 + 1);
                else
                  v885 = 0;
                *((_QWORD *)&v1156 + 1) = v885;
LABEL_329:
                v886 = objc_msgSend(v1162, "metadata");
                v887 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v886, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

                v888 = MOSuggestionAssetMetadataKeyMultiPinMapRepresentativeArea;
                specialized _convertToAnyHashable<A>(_:)(v888, &v1172);

                specialized Dictionary.subscript.getter((uint64_t)&v1172, v887, &v1179);
                swift_bridgeObjectRelease(v887);
                outlined destroy of AnyHashable((uint64_t)&v1172);
                if (*((_QWORD *)&v1180 + 1))
                {
                  v889 = swift_dynamicCast(&v1175, &v1179, (char *)&type metadata for Any + 8, &type metadata for String, 6);
                  if (v889)
                    v890 = v1175;
                  else
                    v890 = 0;
                  if (v889)
                    v891 = (char *)*((_QWORD *)&v1175 + 1);
                  else
                    v891 = 0;
                }
                else
                {
                  outlined destroy of Any?((uint64_t)&v1179, &demangling cache variable for type metadata for Any?);
                  v890 = 0;
                  v891 = 0;
                }
                *((_QWORD *)&v1154 + 1) = specialized Array.count.getter(v535);
                if (*((uint64_t *)&v1154 + 1) >= 2)
                {
                  if (v1157)
                  {
                    if (*((_QWORD *)&v1156 + 1))
                    {
                      v892 = v1157;
                      v1157 = v891;
LABEL_344:
                      *(_QWORD *)&v1172 = v1156;
                      *((_QWORD *)&v1172 + 1) = v892;
                      *(_QWORD *)&v1179 = v1155;
                      *((_QWORD *)&v1179 + 1) = *((_QWORD *)&v1156 + 1);
                      v895 = lazy protocol witness table accessor for type String and conformance String();
                      v896 = StringProtocol.contains<A>(_:)(&v1179, &type metadata for String, &type metadata for String, v895, v895);
                      v893 = swift_bridgeObjectRelease(v892).n128_u64[0];
                      if (*((uint64_t *)&v1154 + 1) > 1 || (v896 & 1) != 0)
                      {
                        v893 = swift_bridgeObjectRelease(*((_QWORD *)&v1156 + 1)).n128_u64[0];
                        v1155 = 0;
                        *((_QWORD *)&v1156 + 1) = 0;
                      }
                      goto LABEL_355;
                    }
                    v897 = &v1181;
                  }
                  else
                  {
                    v897 = (char *)&v1180 + 8;
                  }
                  v893 = swift_bridgeObjectRelease(*((_QWORD *)v897 - 32)).n128_u64[0];
                  v1155 = 0;
                  *((_QWORD *)&v1156 + 1) = 0;
                  v1157 = v891;
LABEL_355:
                  *(_QWORD *)&v1156 = v890;
                  goto LABEL_358;
                }
                swift_bridgeObjectRelease(v891);
                v893 = swift_bridgeObjectRetain(v1157).n128_u64[0];
                if (v894)
                {
                  if (*((_QWORD *)&v1156 + 1))
                  {
                    v892 = v1157;
                    v890 = v1156;
                    goto LABEL_344;
                  }
                  v893 = swift_bridgeObjectRelease(v1157).n128_u64[0];
                  v898 = (char *)&v1180 + 8;
                }
                else
                {
                  v898 = &v1181;
                }
                *((_QWORD *)v898 - 32) = 0;
LABEL_358:
                v924 = v1162;
                v925 = objc_msgSend(v1162, "identifier", *(double *)&v893);
                *(_QWORD *)&v1154 = static String._unconditionallyBridgeFromObjectiveC(_:)(v925);
                v1153 = v926;

                swift_retain(v1165);
                swift_unknownObjectRetain();
                v1152 = (char *)objc_msgSend(v924, "assetType");
                v927 = type metadata accessor for URL(0);
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v927 - 8) + 56))(v1166, 1, 1, v927);
                v928 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v928 - 8) + 56))(v1167, 1, 1, v928);
                v1172 = 0u;
                v1173 = 0u;
                v1174 = 1;
                LODWORD(v1162) = 11;
                if ((v1164 & 0x8000000000000000) == 0 && *(_QWORD *)(v1163 + 16) > v1164)
                  LODWORD(v1162) = *(unsigned __int8 *)(v1163 + v1164 + 32);
                swift_bridgeObjectRelease(v535);
                v929 = swift_bridgeObjectRelease(v1163);
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v1160 + 56))(v1168, 1, 1, v1161, v929);
                v1164 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
                v1163 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
                LODWORD(v1161) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
                v1160 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
                v1151 = v930;
                v1150 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
                v1149 = v931;
                v1148 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
                v1147 = v932;
                v1146 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
                v1145 = v933;
                v1144 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
                v1143 = v934;
                v1142 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
                v1141 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
                v1140 = v935;
                v1139 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
                v1138 = v936;
                v1137 = default argument 27 of MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)();
                LODWORD(v1136) = v937 & 1;
                v1134 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
                v1133 = v938;
                v1132 = (void *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
                v1130 = v939;
                LODWORD(v1135) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
                LODWORD(v1131) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
                v1129 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
                v1128 = v940;
                v941 = default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
                v942 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
                v944 = v943;
                v945 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
                static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
                static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
                variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
                v946 = type metadata accessor for MOSuggestionSheetAssetViewModel(0);
                swift_allocObject(v946, *(unsigned int *)(v946 + 48), *(unsigned __int16 *)(v946 + 52));
                v165 = MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(v1154, (uint64_t)v1153, (uint64_t)v1165, v1158, 0, 0, 0, v1152, 15, 0, v1164, 0, 0, (uint64_t)v1166, v1163, v1161 & 1, v1160, (uint64_t)v1151, v1150,
                         v1149,
                         (uint64_t)v1148,
                         (uint64_t)v1147,
                         0,
                         0,
                         v1146,
                         v1145,
                         v1144,
                         (uint64_t)v1143,
                         v1142,
                         0,
                         0,
                         0,
                         0,
                         v1141,
                         (uint64_t)v1140,
                         (uint64_t)v1167,
                         v1139,
                         (uint64_t)v1138,
                         v1137,
                         v1136,
                         v1134,
                         v1133,
                         (uint64_t)v1132,
                         v1130,
                         v1135 & 1,
                         (uint64_t)&v1172,
                         (uint64_t)&v1172,
                         (uint64_t)&v1172,
                         (char)v1162,
                         v1156,
                         (uint64_t)v1157,
                         v1155,
                         *((uint64_t *)&v1156 + 1),
                         *((uint64_t *)&v1154 + 1),
                         0,
                         v1131 & 1,
                         0,
                         v1129,
                         v1128,
                         v941,
                         v942,
                         v944,
                         v945);
                goto LABEL_51;
              }
            }
            else
            {
              v1172 = 0u;
              v1173 = 0u;
              outlined destroy of Any?((uint64_t)&v1172, &demangling cache variable for type metadata for Any?);
              v1157 = 0;
              *(_QWORD *)&v1156 = 0;
              v1172 = 0u;
              v1173 = 0u;
            }
            outlined destroy of Any?((uint64_t)&v1172, &demangling cache variable for type metadata for Any?);
            v1155 = 0;
            *((_QWORD *)&v1156 + 1) = 0;
            goto LABEL_329;
          }
          swift_unknownObjectRelease(v1159);
          *(_QWORD *)&v737 = swift_bridgeObjectRelease(v1163).n128_u64[0];
        }
        else
        {
          swift_unknownObjectRelease(v1159);
          swift_bridgeObjectRelease(v1163);
          outlined destroy of Any?((uint64_t)&v1179, &demangling cache variable for type metadata for Any?);
        }
      }
      else
      {
        swift_bridgeObjectRelease(v1163);
        swift_unknownObjectRelease(v1159);
      }
      v766 = v1162;
      v767 = objc_msgSend(v1162, "identifier", v737);
      v1164 = static String._unconditionallyBridgeFromObjectiveC(_:)(v767);
      v1163 = v768;

      v1162 = objc_msgSend(v766, "assetType", swift_retain(v1165).n128_f64[0]);
      v769 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v769 - 8) + 56))(v1166, 1, 1, v769);
      v770 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v770 - 8) + 56))(v1167, 1, 1, v770);
      v1172 = 0u;
      v1173 = 0u;
      v1174 = 1;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1160 + 56))(v1168, 1, 1, v1161);
      v1161 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      v1160 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      LODWORD(v1159) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      v1158 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1157 = v771;
      *((_QWORD *)&v1156 + 1) = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      *(_QWORD *)&v1156 = v772;
      v1155 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      *((_QWORD *)&v1154 + 1) = v773;
      *(_QWORD *)&v1154 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1153 = v774;
      v1152 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1151 = v775;
      v1150 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      v1149 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1148 = (char *)v776;
      v1147 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1146 = v777;
      v1145 = default argument 27 of MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)();
      LODWORD(v1144) = v778 & 1;
      v1143 = (id)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1142 = v779;
      v1139 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1138 = v780;
      LODWORD(v1141) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      LODWORD(v1140) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      v1137 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1136 = v781;
      v782 = default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
      v783 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v785 = v784;
      v786 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      v787 = type metadata accessor for MOSuggestionSheetAssetViewModel(0);
      swift_allocObject(v787, *(unsigned int *)(v787 + 48), *(unsigned __int16 *)(v787 + 52));
      v1120 = v786;
      v1118 = v783;
      v1119 = v785;
      v1117 = v782;
      v1116 = v1136;
      v1115 = v1137;
      LOBYTE(v1113) = 1;
      v1106 = (uint64_t)v1138;
      v1105 = v1139;
      v1114 = 0;
      HIBYTE(v1113) = v1140 & 1;
      v1110 = 11;
      v1109 = &v1172;
      v1108 = &v1172;
      v1107 = v1141 & 1;
      v1104 = v1142;
      v1103 = (uint64_t)v1143;
      v1102 = v1144;
      v1101 = v1145;
      v1100 = v1146;
      v1099 = (uint64_t)v1147;
      v1098 = (uint64_t)v1167;
      v1097 = (uint64_t)v1148;
      v1096 = v1149;
      v1095 = 0u;
      v1094 = 0u;
      v1093 = v1150;
      v1092 = (uint64_t)v1151;
      v1091 = (uint64_t)v1152;
      v1090 = v1153;
      v1089 = (char *)v1154;
      v1088 = 0u;
      v1087 = *((_QWORD *)&v1154 + 1);
      v1086 = v1155;
      v1084 = *((_QWORD *)&v1156 + 1);
      v1085 = v1156;
      v1083 = (uint64_t)v1157;
      v1082 = v1158;
      v1081 = v1159 & 1;
      v1080 = v1160;
      v1079 = (uint64_t)v1166;
      v1078 = 0u;
      v1076 = 0;
      v1077 = v1161;
      v1075 = 26;
      v1112 = 0u;
      v1111 = 0u;
      v271 = v1164;
      v765 = &v1184;
LABEL_274:
      v272 = *(v765 - 32);
      v273 = v1165;
      v274 = 0;
      v275 = (char *)&v1183;
LABEL_92:
      v276 = (void *)*((_QWORD *)v275 - 32);
      return MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(v271, v272, (uint64_t)v273, v274, 0, 0, 0, v276, v1075, v1076, v1077, v1078, *((uint64_t *)&v1078 + 1), v1079, v1080, v1081, (uint64_t)v1082, v1083, v1084,
               v1085,
               v1086,
               v1087,
               (void *)v1088,
               *((void **)&v1088 + 1),
               (uint64_t)v1089,
               (uint64_t)v1090,
               v1091,
               v1092,
               v1093,
               v1094,
               *((uint64_t *)&v1094 + 1),
               v1095,
               *((uint64_t *)&v1095 + 1),
               v1096,
               v1097,
               v1098,
               v1099,
               v1100,
               v1101,
               v1102,
               v1103,
               v1104,
               v1105,
               v1106,
               v1107,
               (uint64_t)v1108,
               (uint64_t)v1109,
               (uint64_t)&v1172,
               v1110,
               v1111,
               *((uint64_t *)&v1111 + 1),
               v1112,
               *((uint64_t *)&v1112 + 1),
               0,
               v1113,
               SHIBYTE(v1113),
               v1114,
               v1115,
               v1116,
               v1117,
               v1118,
               v1119,
               v1120);
    }
    v611 = (void *)MOSuggestionAssetsTypeGenericMap;
    v612 = v525;
    v613 = v611;
    v614 = specialized == infix<A>(_:_:)();

    if ((v614 & 1) != 0)
    {

      v615 = objc_msgSend(v1162, "content");
      v616 = objc_opt_self(UIImage);
      v62 = (_QWORD *)swift_dynamicCastObjCClass(v615, v616);
      if (v62)
      {
        v617 = objc_msgSend(v1162, "metadata");
        v618 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v617, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

        specialized _dictionaryDownCastConditional<A, B, C, D>(_:)(v618);
        v620 = v619;
        swift_bridgeObjectRelease(v618);
        if (v620)
        {
          v621 = MOSuggestionAssetMetadataKeyMotionActivityTypeEnum;
          specialized Dictionary.subscript.getter((uint64_t)v621, v620, &v1172);

          swift_bridgeObjectRelease(v620);
          if (!*((_QWORD *)&v1173 + 1))
          {
            swift_unknownObjectRelease(v615);
            swift_bridgeObjectRelease(v1163);
            outlined destroy of Any?((uint64_t)&v1172, &demangling cache variable for type metadata for Any?);
            return 0;
          }
          type metadata accessor for MOSuggestionAssetMotionActivityType(0);
          if ((swift_dynamicCast(&v1179, &v1172, (char *)&type metadata for Any + 8, v622, 6) & 1) != 0)
          {
            v623 = (void *)MOSuggestionAssetMotionActivityTypeRunning;
            v624 = (char *)(id)v1179;
            v625 = v623;
            v626 = specialized == infix<A>(_:_:)();
            v1159 = v624;

            if ((v626 & 1) != 0)
            {
              v627 = 21;
            }
            else
            {
              v920 = (void *)MOSuggestionAssetMotionActivityTypeWalking;
              v921 = v1159;
              v922 = v920;
              v923 = specialized == infix<A>(_:_:)();

              if ((v923 & 1) != 0)
              {
                v627 = 20;
              }
              else
              {
                v947 = (void *)MOSuggestionAssetMotionActivityTypeRunningWalking;
                v948 = v921;
                v949 = v947;
                v950 = specialized == infix<A>(_:_:)();

                if ((v950 & 1) != 0)
                  v627 = 22;
                else
                  v627 = 26;
              }
            }
            LODWORD(v1158) = v627;
            v951 = v1162;
            v952 = objc_msgSend(v1162, "identifier");
            v1157 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v952);
            *((_QWORD *)&v1156 + 1) = v953;

            swift_retain(v1165);
            swift_unknownObjectRetain();
            *(_QWORD *)&v1156 = objc_msgSend(v951, "assetType");
            v954 = type metadata accessor for URL(0);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v954 - 8) + 56))(v1166, 1, 1, v954);
            v955 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v955 - 8) + 56))(v1167, 1, 1, v955);
            v1172 = 0u;
            v1173 = 0u;
            v1174 = 1;
            LODWORD(v1162) = 11;
            if ((v1164 & 0x8000000000000000) == 0 && *(_QWORD *)(v1163 + 16) > v1164)
              LODWORD(v1162) = *(unsigned __int8 *)(v1163 + v1164 + 32);
            v956 = swift_bridgeObjectRelease(v1163);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v1160 + 56))(v1168, 1, 1, v1161, v956);
            v1164 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
            v1163 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
            LODWORD(v1161) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
            v1160 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            v1155 = v957;
            *((_QWORD *)&v1154 + 1) = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            *(_QWORD *)&v1154 = v958;
            v1153 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            v1152 = v959;
            v1151 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            v1150 = v960;
            v1149 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            v1148 = (char *)v961;
            v1147 = (char *)variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
            v1146 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            v1145 = v962;
            v1144 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            v1143 = v963;
            v1142 = default argument 27 of MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)();
            LODWORD(v1141) = v964 & 1;
            v1139 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            v1138 = v965;
            v1137 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            v1135 = v966;
            LODWORD(v1140) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
            LODWORD(v1136) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
            v1134 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            v1133 = v967;
            v1132 = (void *)default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
            v1131 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            v969 = v968;
            v970 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
            v971 = type metadata accessor for MOSuggestionSheetAssetViewModel(0);
            swift_allocObject(v971, *(unsigned int *)(v971 + 48), *(unsigned __int16 *)(v971 + 52));
            v62 = MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)((uint64_t)v1157, *((uint64_t *)&v1156 + 1), (uint64_t)v1165, v62, 0, 0, 0, (void *)v1156, (char)v1158, 0, v1164, 0, 0, (uint64_t)v1166, v1163, v1161 & 1, v1160, v1155, *((uint64_t *)&v1154 + 1),
                    v1154,
                    (uint64_t)v1153,
                    (uint64_t)v1152,
                    0,
                    0,
                    (uint64_t)v1151,
                    v1150,
                    v1149,
                    (uint64_t)v1148,
                    (uint64_t)v1147,
                    0,
                    0,
                    0,
                    0,
                    v1146,
                    v1145,
                    (uint64_t)v1167,
                    v1144,
                    (uint64_t)v1143,
                    v1142,
                    v1141,
                    v1139,
                    (uint64_t)v1138,
                    v1137,
                    v1135,
                    v1140 & 1,
                    (uint64_t)&v1172,
                    (uint64_t)&v1172,
                    (uint64_t)&v1172,
                    (char)v1162,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    v1136 & 1,
                    0,
                    v1134,
                    v1133,
                    (uint64_t)v1132,
                    v1131,
                    v969,
                    v970);

            goto LABEL_369;
          }
        }
LABEL_319:
        swift_unknownObjectRelease(v615);
        goto LABEL_118;
      }
LABEL_318:
      swift_bridgeObjectRelease(v1163);
LABEL_369:
      swift_unknownObjectRelease(v615);
      return v62;
    }
    v642 = (void *)MOSuggestionAssetsTypeLinkPreview;
    v643 = v612;
    v644 = v642;
    v645 = specialized == infix<A>(_:_:)();

    if ((v645 & 1) != 0)
    {
      swift_bridgeObjectRelease(v1163);

      v646 = (char *)objc_msgSend(v1162, "content");
      v647 = objc_opt_self(LPLinkMetadata);
      v169 = v646;
      v1164 = swift_dynamicCastObjCClass(v646, v647);
      if (!v1164)
        goto LABEL_59;
      v648 = v1162;
      v649 = objc_msgSend(v1162, "identifier");
      v1163 = static String._unconditionallyBridgeFromObjectiveC(_:)(v649);
      v1158 = v650;

      swift_retain(v1165);
      v1159 = v169;
      swift_unknownObjectRetain();
      v1162 = objc_msgSend(v648, "assetType");
      v651 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v651 - 8) + 56))(v1166, 1, 1, v651);
      v652 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v652 - 8) + 56))(v1167, 1, 1, v652);
      v1172 = 0u;
      v1173 = 0u;
      v1174 = 1;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1160 + 56))(v1168, 1, 1, v1161);
      v1161 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      v1160 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      LODWORD(v1157) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      *((_QWORD *)&v1156 + 1) = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      *(_QWORD *)&v1156 = v653;
      v1155 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      *((_QWORD *)&v1154 + 1) = v654;
      *(_QWORD *)&v1154 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1153 = v655;
      v1152 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1151 = v656;
      v1150 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1149 = v657;
      v1148 = (char *)variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      v1147 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1146 = v658;
      v1145 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1144 = v659;
      v1143 = (id)default argument 27 of MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)();
      LODWORD(v1142) = v660 & 1;
      v1140 = (id)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1139 = v661;
      v1137 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1136 = v662;
      LODWORD(v1141) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      LODWORD(v1138) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      v1135 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1134 = v663;
      v664 = default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
      v665 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v667 = v666;
      v668 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      v669 = type metadata accessor for MOSuggestionSheetAssetViewModel(0);
      swift_allocObject(v669, *(unsigned int *)(v669 + 48), *(unsigned __int16 *)(v669 + 52));
      v165 = MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(v1163, (uint64_t)v1158, (uint64_t)v1165, 0, 0, 0, (void *)v1164, v1162, 26, 0, v1161, 0, 0, (uint64_t)v1166, v1160, v1157 & 1, *((uint64_t *)&v1156 + 1), v1156, v1155,
               *((uint64_t *)&v1154 + 1),
               v1154,
               (uint64_t)v1153,
               0,
               0,
               (uint64_t)v1152,
               (uint64_t)v1151,
               v1150,
               v1149,
               (uint64_t)v1148,
               0,
               0,
               0,
               0,
               (uint64_t)v1147,
               v1146,
               (uint64_t)v1167,
               v1145,
               v1144,
               (uint64_t)v1143,
               v1142,
               (uint64_t)v1140,
               v1139,
               v1137,
               v1136,
               v1141 & 1,
               (uint64_t)&v1172,
               (uint64_t)&v1172,
               (uint64_t)&v1172,
               11,
               0,
               0,
               0,
               0,
               0,
               1,
               v1138 & 1,
               0,
               v1135,
               v1134,
               v664,
               v665,
               v667,
               v668);
LABEL_51:
      v62 = v165;
      v166 = &v1182;
LABEL_52:
      swift_unknownObjectRelease(*((_QWORD *)v166 - 32));
      return v62;
    }
    v738 = (void *)MOSuggestionAssetsTypeReflectionPrompt;
    v739 = v643;
    v740 = v738;
    v741 = specialized == infix<A>(_:_:)();

    if ((v741 & 1) != 0)
    {
      swift_bridgeObjectRelease(v1163);

      v324 = objc_msgSend(v1162, "content");
      v742 = objc_opt_self(MOSuggestionAssetReflectionPrompt);
      v1164 = swift_dynamicCastObjCClass(v324, v742);
      if (!v1164)
        goto LABEL_148;
      v743 = v1162;
      v744 = objc_msgSend(v1162, "identifier");
      v1163 = static String._unconditionallyBridgeFromObjectiveC(_:)(v744);
      v1159 = v745;

      v1162 = objc_msgSend(v743, "assetType", swift_retain(v1165).n128_f64[0]);
      v746 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v746 - 8) + 56))(v1166, 1, 1, v746);
      v747 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v747 - 8) + 56))(v1167, 1, 1, v747);
      v1172 = 0u;
      v1173 = 0u;
      v1174 = 1;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1160 + 56))(v1168, 1, 1, v1161);
      v1161 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      v1160 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      LODWORD(v1158) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      v1157 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      *((_QWORD *)&v1156 + 1) = v748;
      *(_QWORD *)&v1156 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1155 = v749;
      *((_QWORD *)&v1154 + 1) = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      *(_QWORD *)&v1154 = v750;
      v1153 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1152 = v751;
      v1151 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1150 = v752;
      v1149 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      v1148 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1147 = v753;
      v1146 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1145 = v754;
      v1144 = default argument 27 of MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)();
      LODWORD(v1143) = v755 & 1;
      v1141 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1140 = v756;
      v1138 = (void *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1137 = v757;
      LODWORD(v1142) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      LODWORD(v1139) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      v1136 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1135 = v758;
      v759 = default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
      v760 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v762 = v761;
      v763 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      v764 = type metadata accessor for MOSuggestionSheetAssetViewModel(0);
      swift_allocObject(v764, *(unsigned int *)(v764 + 48), *(unsigned __int16 *)(v764 + 52));
      v1120 = v763;
      v1118 = v760;
      v1119 = v762;
      v1117 = v759;
      v1116 = v1135;
      v1115 = v1136;
      LOBYTE(v1113) = 1;
      v1106 = v1137;
      v1105 = (uint64_t)v1138;
      v1104 = (uint64_t)v1140;
      v1103 = v1141;
      v1114 = 0;
      HIBYTE(v1113) = v1139 & 1;
      v1110 = 11;
      v1109 = &v1172;
      v1108 = &v1172;
      v1107 = v1142 & 1;
      v1102 = (char)v1143;
      v1101 = v1144;
      v1100 = v1145;
      v1099 = v1146;
      v1098 = (uint64_t)v1167;
      v1097 = (uint64_t)v1147;
      v1096 = (uint64_t)v1148;
      v1095 = 0u;
      v1094 = 0u;
      v1093 = v1149;
      v1092 = v1150;
      v1091 = (uint64_t)v1151;
      v1090 = v1152;
      v1089 = v1153;
      v1088 = 0u;
      v1086 = *((_QWORD *)&v1154 + 1);
      v1087 = v1154;
      v1085 = v1155;
      v1083 = *((_QWORD *)&v1156 + 1);
      v1084 = v1156;
      v1082 = v1157;
      v1081 = v1158 & 1;
      v1080 = v1160;
      v1079 = (uint64_t)v1166;
      v1078 = 0u;
      v1077 = v1161;
      v1076 = (void *)v1164;
      v1075 = 26;
      v1112 = 0u;
      v1111 = 0u;
      v271 = v1163;
      v765 = (uint64_t *)&v1182;
      goto LABEL_274;
    }
    v847 = (void *)MOSuggestionAssetsTypeMediaCoverArt;
    v848 = v739;
    v849 = v847;
    v850 = specialized == infix<A>(_:_:)();

    if ((v850 & 1) != 0)
    {

      v851 = (char *)objc_msgSend(v1162, "content");
      v852 = objc_opt_self(MOSuggestionAssetMediaItem);
      v1166 = v851;
      v853 = (void *)swift_dynamicCastObjCClass(v851, v852);
      if (v853)
      {
        v854 = v853;
        v1159 = (char *)objc_msgSend(v853, "albumArt");
        v855 = objc_msgSend(v1162, "metadata");
        v856 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v855, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

        v857 = MOSuggestionAssetMetadataKeyMediaThirdPartyAppAssociatedColors;
        specialized _convertToAnyHashable<A>(_:)(v857, &v1172);

        specialized Dictionary.subscript.getter((uint64_t)&v1172, v856, &v1179);
        swift_bridgeObjectRelease(v856);
        outlined destroy of AnyHashable((uint64_t)&v1172);
        if (*((_QWORD *)&v1180 + 1))
        {
          v858 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [UIColor]);
          v859 = swift_dynamicCast(&v1175, &v1179, (char *)&type metadata for Any + 8, v858, 6);
          v860 = v1175;
          if (!v859)
            v860 = 0;
          v1124 = v860;
        }
        else
        {
          outlined destroy of Any?((uint64_t)&v1179, &demangling cache variable for type metadata for Any?);
          v1124 = 0;
        }
        v972 = MOSuggestionAssetMediaItem.primaryTitle.getter();
        v974 = v973;
        v975 = objc_msgSend(v854, "albumTitle");
        v976 = static String._unconditionallyBridgeFromObjectiveC(_:)(v975);
        v978 = v977;

        v979 = objc_msgSend(v854, "artistName");
        v980 = static String._unconditionallyBridgeFromObjectiveC(_:)(v979);
        v982 = v981;

        v983 = objc_msgSend(v854, "mediaType");
        v984 = v1165;
        v985 = (char *)(*((uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, id))*v1165 + 63))(v972, v974, v976, v978, v980, v982, v983);
        v987 = v986;
        swift_bridgeObjectRelease(v974);
        swift_bridgeObjectRelease(v978);
        v988 = objc_msgSend(v854, "albumTitle", swift_bridgeObjectRelease(v982).n128_f64[0]);
        v989 = static String._unconditionallyBridgeFromObjectiveC(_:)(v988);
        v991 = v990;

        v992 = objc_msgSend(v854, "artistName");
        v993 = static String._unconditionallyBridgeFromObjectiveC(_:)(v992);
        v995 = v994;

        v996 = objc_msgSend(v854, "mediaType");
        v997 = (uint64_t (*)(char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, id))*((_QWORD *)*v984 + 64);
        v1158 = v985;
        v1157 = v987;
        v1155 = v997(v985, v987, v989, v991, v993, v995, v996);
        *((_QWORD *)&v1154 + 1) = v998;
        swift_bridgeObjectRelease(v991);
        *(_QWORD *)&v999 = swift_bridgeObjectRelease(v995).n128_u64[0];
        v1000 = v1162;
        v1001 = objc_msgSend(v1162, "identifier", v999);
        *((_QWORD *)&v1156 + 1) = static String._unconditionallyBridgeFromObjectiveC(_:)(v1001);
        *(_QWORD *)&v1156 = v1002;

        *(_QWORD *)&v1154 = objc_msgSend(v1000, "assetType");
        LODWORD(v1153) = specialized MOSuggestionAssetVisualSubType.init(assetType:mediaType:motionActivityType:)(objc_msgSend(v1000, "assetType"), (uint64_t)objc_msgSend(v854, "mediaType"), 0, 0);
        v1003 = objc_msgSend(v854, "trackIdentifier");
        if (v1003)
        {
          v1004 = v1003;
          v1123 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1003);
          v1122 = v1005;

        }
        else
        {
          v1123 = 0;
          v1122 = 0;
        }
        v1006 = objc_msgSend(v854, "previewURL");
        if (v1006)
        {
          v1007 = v1006;
          v1008 = v1152;
          static URL._unconditionallyBridgeFromObjectiveC(_:)(v1006);

          v1009 = type metadata accessor for URL(0);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v1009 - 8) + 56))(v1008, 0, 1, v1009);
        }
        else
        {
          v1010 = type metadata accessor for URL(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1010 - 8) + 56))(v1152, 1, 1, v1010);
        }
        v1151 = (char *)objc_msgSend(v854, "mediaType");
        v1011 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1011 - 8) + 56))(v1167, 1, 1, v1011);
        v1172 = 0u;
        v1173 = 0u;
        v1174 = 1;
        LODWORD(v1162) = 11;
        if ((v1164 & 0x8000000000000000) == 0 && *(_QWORD *)(v1163 + 16) > v1164)
          LODWORD(v1162) = *(unsigned __int8 *)(v1163 + v1164 + 32);
        v1012 = swift_bridgeObjectRelease(v1163);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v1160 + 56))(v1168, 1, 1, v1161, v1012);
        v1143 = objc_msgSend(v854, "bgColor");
        v1140 = objc_msgSend(v854, "bgColorVariant");
        v1164 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
        LODWORD(v1163) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
        v1161 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1160 = v1013;
        v1150 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1149 = v1014;
        v1148 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1147 = v1015;
        v1146 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1145 = v1016;
        v1144 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1142 = v1017;
        v1141 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
        v1139 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1138 = v1018;
        v1137 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1136 = v1019;
        v1135 = default argument 27 of MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)();
        LODWORD(v1134) = v1020 & 1;
        v1132 = (void *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1131 = v1021;
        v1129 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1128 = v1022;
        LODWORD(v1130) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
        LODWORD(v1127) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
        v1126 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1125 = v1023;
        v1024 = default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
        v1025 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1027 = v1026;
        v1028 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1029 = type metadata accessor for MOSuggestionSheetAssetViewModel(0);
        v1133 = swift_allocObject(v1029, *(unsigned int *)(v1029 + 48), *(unsigned __int16 *)(v1029 + 52));
        v1030 = v1165;
        swift_retain(v1165);
        v62 = MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(*((uint64_t *)&v1156 + 1), v1156, (uint64_t)v1030, v1159, 0, 0, 0, (void *)v1154, (char)v1153, 0, v1164, v1123, v1122, (uint64_t)v1152, (uint64_t)v1151, v1163 & 1, v1161, v1160, v1150,
                v1149,
                (uint64_t)v1148,
                (uint64_t)v1147,
                0,
                0,
                v1146,
                v1145,
                v1144,
                v1142,
                v1141,
                (uint64_t)v1158,
                (uint64_t)v1157,
                v1155,
                *((uint64_t *)&v1154 + 1),
                v1139,
                (uint64_t)v1138,
                (uint64_t)v1167,
                v1137,
                v1136,
                v1135,
                v1134,
                (uint64_t)v1132,
                v1131,
                v1129,
                v1128,
                v1130 & 1,
                (uint64_t)&v1172,
                (uint64_t)&v1172,
                (uint64_t)&v1172,
                (char)v1162,
                0,
                0,
                0,
                0,
                0,
                1,
                v1127 & 1,
                0,
                v1126,
                v1125,
                v1024,
                v1025,
                v1027,
                v1028);
        v166 = (char *)&v1185;
        goto LABEL_52;
      }
      swift_bridgeObjectRelease(v1163);
      swift_unknownObjectRelease(v1166);
      return 0;
    }
    v861 = MOSuggestionAssetsTypeStateOfMindAsset;
    v862 = specialized == infix<A>(_:_:)();

    if ((v862 & 1) == 0)
    {
      swift_bridgeObjectRelease(v1163);
      type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIImage, UIImage_ptr);
      v1164 = (uint64_t)@nonobjc UIImage.__allocating_init(named:)(0xD00000000000001BLL, 0x80000001001A8180);
      v899 = objc_msgSend(v1162, "identifier");
      v1163 = static String._unconditionallyBridgeFromObjectiveC(_:)(v899);
      v1162 = v900;

      v901 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v901 - 8) + 56))(v1166, 1, 1, v901);
      v902 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v902 - 8) + 56))(v1167, 1, 1, v902);
      v1172 = 0u;
      v1173 = 0u;
      v1174 = 1;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1160 + 56))(v1168, 1, 1, v1161);
      v1161 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      v1160 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      LODWORD(v1159) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      v1158 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1157 = v903;
      *((_QWORD *)&v1156 + 1) = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      *(_QWORD *)&v1156 = v904;
      v1155 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      *((_QWORD *)&v1154 + 1) = v905;
      *(_QWORD *)&v1154 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1153 = v906;
      v1152 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1151 = v907;
      v1150 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      v1149 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1148 = (char *)v908;
      v1147 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1146 = v909;
      v1145 = default argument 27 of MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)();
      LODWORD(v1144) = v910 & 1;
      v1143 = (id)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1142 = v911;
      v1138 = (void *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1137 = v912;
      LODWORD(v1141) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      LODWORD(v1139) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      v1136 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1135 = v913;
      v1134 = default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
      v914 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v916 = v915;
      v917 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      v918 = type metadata accessor for MOSuggestionSheetAssetViewModel(0);
      v1140 = (id)swift_allocObject(v918, *(unsigned int *)(v918 + 48), *(unsigned __int16 *)(v918 + 52));
      v919 = v1165;
      swift_retain(v1165);
      return MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(v1163, (uint64_t)v1162, (uint64_t)v919, (void *)v1164, 0, 0, 0, 0, 26, 0, v1161, 0, 0, (uint64_t)v1166, v1160, v1159 & 1, (uint64_t)v1158, (uint64_t)v1157, *((uint64_t *)&v1156 + 1),
               v1156,
               v1155,
               *((uint64_t *)&v1154 + 1),
               0,
               0,
               v1154,
               (uint64_t)v1153,
               (uint64_t)v1152,
               (uint64_t)v1151,
               v1150,
               0,
               0,
               0,
               0,
               v1149,
               (uint64_t)v1148,
               (uint64_t)v1167,
               (uint64_t)v1147,
               v1146,
               v1145,
               v1144,
               (uint64_t)v1143,
               v1142,
               (uint64_t)v1138,
               v1137,
               v1141 & 1,
               (uint64_t)&v1172,
               (uint64_t)&v1172,
               (uint64_t)&v1172,
               11,
               0,
               0,
               0,
               0,
               0,
               1,
               v1139 & 1,
               0,
               v1136,
               v1135,
               v1134,
               v914,
               v916,
               v917);
    }
    v615 = objc_msgSend(v1162, "content");
    v863 = objc_opt_self(UIImage);
    v62 = (_QWORD *)swift_dynamicCastObjCClass(v615, v863);
    if (!v62)
      goto LABEL_318;
    v864 = objc_msgSend(v1162, "metadata");
    v865 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v864, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    v866 = MOSuggestionAssetMetadataKeyStateOfMindAssociatedColorsLight;
    specialized _convertToAnyHashable<A>(_:)(v866, &v1172);

    specialized Dictionary.subscript.getter((uint64_t)&v1172, v865, &v1179);
    swift_bridgeObjectRelease(v865);
    outlined destroy of AnyHashable((uint64_t)&v1172);
    if (!*((_QWORD *)&v1180 + 1))
    {
      swift_unknownObjectRelease(v615);
      goto LABEL_115;
    }
    v867 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [UIColor]);
    if ((swift_dynamicCast(&v1175, &v1179, (char *)&type metadata for Any + 8, v867, 6) & 1) == 0)
      goto LABEL_319;
    v1159 = (char *)v1175;
    v868 = objc_msgSend(v1162, "metadata");
    v869 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v868, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    v870 = MOSuggestionAssetMetadataKeyStateOfMindAssociatedColorsDark;
    specialized _convertToAnyHashable<A>(_:)(v870, &v1172);

    specialized Dictionary.subscript.getter((uint64_t)&v1172, v869, &v1179);
    swift_bridgeObjectRelease(v869);
    outlined destroy of AnyHashable((uint64_t)&v1172);
    if (!*((_QWORD *)&v1180 + 1))
    {
      swift_unknownObjectRelease(v615);
      v339 = v1159;
      goto LABEL_114;
    }
    if ((swift_dynamicCast(&v1175, &v1179, (char *)&type metadata for Any + 8, v867, 6) & 1) == 0)
    {
      swift_unknownObjectRelease(v615);
      v340 = v1159;
      goto LABEL_117;
    }
    v1158 = (char *)v1175;
    v871 = objc_msgSend(v1162, "metadata");
    v872 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v871, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    v873 = MOSuggestionAssetMetadataKeyStateOfMindStartDate;
    specialized _convertToAnyHashable<A>(_:)(v873, &v1172);

    specialized Dictionary.subscript.getter((uint64_t)&v1172, v872, &v1179);
    swift_bridgeObjectRelease(v872);
    outlined destroy of AnyHashable((uint64_t)&v1172);
    if (*((_QWORD *)&v1180 + 1))
    {
      v874 = v1161;
      v875 = swift_dynamicCast(v22, &v1179, (char *)&type metadata for Any + 8, v1161, 6);
      v876 = v1160;
      v877 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1160 + 56);
      v877(v22, v875 ^ 1u, 1, v874);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v876 + 48))(v22, 1, v874) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v1160 + 32))(v1151, v22, v1161);
        v878 = objc_msgSend(v1162, "metadata");
        v879 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v878, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

        v880 = MOSuggestionAssetMetadataKeyStateOfMindValenceClassificationAndReflectiveIntervalLocalized;
        specialized _convertToAnyHashable<A>(_:)(v880, &v1172);

        specialized Dictionary.subscript.getter((uint64_t)&v1172, v879, &v1179);
        swift_bridgeObjectRelease(v879);
        outlined destroy of AnyHashable((uint64_t)&v1172);
        if (*((_QWORD *)&v1180 + 1))
        {
          if (swift_dynamicCast(&v1175, &v1179, (char *)&type metadata for Any + 8, &type metadata for String, 6))
          {
            v881 = *((_QWORD *)&v1175 + 1);
            v1157 = (char *)v1175;
            goto LABEL_388;
          }
        }
        else
        {
          outlined destroy of Any?((uint64_t)&v1179, &demangling cache variable for type metadata for Any?);
        }
        v1157 = 0;
        v881 = 0xE000000000000000;
LABEL_388:
        *((_QWORD *)&v1156 + 1) = v881;
        v1031 = objc_msgSend(v1162, "metadata");
        v1032 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1031, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

        v1033 = MOSuggestionAssetMetadataKeyStateOfMindReflectiveInterval;
        specialized _convertToAnyHashable<A>(_:)(v1033, &v1172);

        specialized Dictionary.subscript.getter((uint64_t)&v1172, v1032, &v1179);
        swift_bridgeObjectRelease(v1032);
        outlined destroy of AnyHashable((uint64_t)&v1172);
        if (*((_QWORD *)&v1180 + 1))
        {
          if (swift_dynamicCast(&v1175, &v1179, (char *)&type metadata for Any + 8, &type metadata for Int, 6))
          {
            v1034 = v1175;
            goto LABEL_393;
          }
        }
        else
        {
          outlined destroy of Any?((uint64_t)&v1179, &demangling cache variable for type metadata for Any?);
        }
        v1034 = 1;
LABEL_393:
        *(_QWORD *)&v1156 = v1034;
        v1035 = objc_msgSend(v1162, "metadata");
        v1036 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1035, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

        v1037 = MOSuggestionAssetMetadataKeyStateOfMindLabelsLocalized;
        specialized _convertToAnyHashable<A>(_:)(v1037, &v1172);

        specialized Dictionary.subscript.getter((uint64_t)&v1172, v1036, &v1179);
        swift_bridgeObjectRelease(v1036);
        outlined destroy of AnyHashable((uint64_t)&v1172);
        if (*((_QWORD *)&v1180 + 1))
        {
          if (swift_dynamicCast(&v1175, &v1179, (char *)&type metadata for Any + 8, &type metadata for String, 6))
          {
            v1038 = *((_QWORD *)&v1175 + 1);
            v1155 = v1175;
            goto LABEL_398;
          }
        }
        else
        {
          outlined destroy of Any?((uint64_t)&v1179, &demangling cache variable for type metadata for Any?);
        }
        v1155 = 0;
        v1038 = 0xE000000000000000;
LABEL_398:
        *((_QWORD *)&v1154 + 1) = v1038;
        v1039 = objc_msgSend(v1162, "metadata");
        v1040 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1039, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

        v1041 = MOSuggestionAssetMetadataKeyStateOfMindLabelsLocalizedShortened;
        specialized _convertToAnyHashable<A>(_:)(v1041, &v1172);

        specialized Dictionary.subscript.getter((uint64_t)&v1172, v1040, &v1179);
        swift_bridgeObjectRelease(v1040);
        outlined destroy of AnyHashable((uint64_t)&v1172);
        if (*((_QWORD *)&v1180 + 1))
        {
          if (swift_dynamicCast(&v1175, &v1179, (char *)&type metadata for Any + 8, &type metadata for String, 6))
          {
            v1042 = (char *)*((_QWORD *)&v1175 + 1);
            *(_QWORD *)&v1154 = v1175;
            goto LABEL_403;
          }
        }
        else
        {
          outlined destroy of Any?((uint64_t)&v1179, &demangling cache variable for type metadata for Any?);
        }
        *(_QWORD *)&v1154 = 0;
        v1042 = (char *)0xE000000000000000;
LABEL_403:
        v1153 = v1042;
        v1043 = objc_msgSend(v1162, "metadata");
        v1044 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1043, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

        v1045 = MOSuggestionAssetMetadataKeyStateOfMindDomainsLocalized;
        specialized _convertToAnyHashable<A>(_:)(v1045, &v1172);

        specialized Dictionary.subscript.getter((uint64_t)&v1172, v1044, &v1179);
        swift_bridgeObjectRelease(v1044);
        outlined destroy of AnyHashable((uint64_t)&v1172);
        if (*((_QWORD *)&v1180 + 1))
        {
          if (swift_dynamicCast(&v1175, &v1179, (char *)&type metadata for Any + 8, &type metadata for String, 6))
          {
            v1046 = *((_QWORD *)&v1175 + 1);
            v1152 = (char *)v1175;
            goto LABEL_408;
          }
        }
        else
        {
          outlined destroy of Any?((uint64_t)&v1179, &demangling cache variable for type metadata for Any?);
        }
        v1152 = 0;
        v1046 = 0xE000000000000000;
LABEL_408:
        v1150 = v1046;
        v1047 = objc_msgSend(v1162, "metadata");
        v1048 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1047, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

        v1049 = MOSuggestionAssetMetadataKeyStateOfMindDomainsLocalizedShortened;
        specialized _convertToAnyHashable<A>(_:)(v1049, &v1172);

        specialized Dictionary.subscript.getter((uint64_t)&v1172, v1048, &v1179);
        swift_bridgeObjectRelease(v1048);
        outlined destroy of AnyHashable((uint64_t)&v1172);
        if (*((_QWORD *)&v1180 + 1))
        {
          if (swift_dynamicCast(&v1175, &v1179, (char *)&type metadata for Any + 8, &type metadata for String, 6))
          {
            v1050 = *((_QWORD *)&v1175 + 1);
            v1146 = v1175;
            goto LABEL_413;
          }
        }
        else
        {
          outlined destroy of Any?((uint64_t)&v1179, &demangling cache variable for type metadata for Any?);
        }
        v1146 = 0;
        v1050 = 0xE000000000000000;
LABEL_413:
        v1145 = v1050;
        v1051 = v1162;
        v1052 = objc_msgSend(v1162, "identifier");
        v1149 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1052);
        v1148 = (char *)v1053;

        swift_retain(v1165);
        swift_unknownObjectRetain();
        v1147 = (char *)objc_msgSend(v1051, "assetType");
        v1054 = type metadata accessor for URL(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1054 - 8) + 56))(v1166, 1, 1, v1054);
        v1055 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1055 - 8) + 56))(v1167, 1, 1, v1055);
        v1172 = 0u;
        v1173 = 0u;
        v1174 = 1;
        LODWORD(v1162) = 11;
        if ((v1164 & 0x8000000000000000) == 0 && *(_QWORD *)(v1163 + 16) > v1164)
          LODWORD(v1162) = *(unsigned __int8 *)(v1163 + v1164 + 32);
        v1056 = swift_bridgeObjectRelease(v1163);
        v1057 = v1168;
        v1058 = v1161;
        (*(void (**)(char *, char *, uint64_t, __n128))(v1160 + 16))(v1168, v1151, v1161, v1056);
        v877(v1057, 0, 1, v1058);
        v1164 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
        v1163 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
        LODWORD(v1144) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
        v1143 = (id)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1142 = v1059;
        v1141 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1140 = v1060;
        v1139 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1138 = v1061;
        v1137 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1136 = v1062;
        v1135 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1134 = v1063;
        v1133 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
        v1132 = (void *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1131 = v1064;
        v1130 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1129 = v1065;
        v1128 = default argument 27 of MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)();
        LODWORD(v1127) = v1066 & 1;
        v1067 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1069 = v1068;
        v1070 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1072 = v1071;
        v1073 = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
        LOBYTE(v1058) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
        variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
        v1074 = type metadata accessor for MOSuggestionSheetAssetViewModel(0);
        swift_allocObject(v1074, *(unsigned int *)(v1074 + 48), *(unsigned __int16 *)(v1074 + 52));
        v62 = MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(v1149, (uint64_t)v1148, (uint64_t)v1165, v62, 0, 0, 0, v1147, 25, 0, v1164, 0, 0, (uint64_t)v1166, v1163, v1144 & 1, (uint64_t)v1143, v1142, v1141,
                (uint64_t)v1140,
                v1139,
                (uint64_t)v1138,
                0,
                0,
                v1137,
                v1136,
                v1135,
                v1134,
                v1133,
                0,
                0,
                0,
                0,
                (uint64_t)v1132,
                v1131,
                (uint64_t)v1167,
                v1130,
                v1129,
                v1128,
                v1127,
                v1067,
                v1069,
                v1070,
                v1072,
                v1073 & 1,
                (uint64_t)&v1172,
                (uint64_t)&v1172,
                (uint64_t)&v1172,
                (char)v1162,
                0,
                0,
                0,
                0,
                0,
                1,
                v1058 & 1,
                0,
                (uint64_t)v1157,
                *((uint64_t *)&v1156 + 1),
                v1156,
                v1155,
                *((uint64_t *)&v1154 + 1),
                v1154);
        swift_unknownObjectRelease(v615);
        (*(void (**)(char *, uint64_t))(v1160 + 8))(v1151, v1161);
        return v62;
      }
    }
    else
    {
      outlined destroy of Any?((uint64_t)&v1179, &demangling cache variable for type metadata for Any?);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1160 + 56))(v22, 1, 1, v1161);
    }
    swift_bridgeObjectRelease(v1158);
    swift_bridgeObjectRelease(v1159);
    swift_bridgeObjectRelease(v1163);
    swift_unknownObjectRelease(v615);
    outlined destroy of Any?((uint64_t)v22, (uint64_t *)&demangling cache variable for type metadata for Date?);
    return 0;
  }

  v180 = v1162;
  v181 = objc_msgSend(v1162, "metadata");
  v182 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v181, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v183 = MOSuggestionAssetMetadataKeyMotionActivityType;
  specialized _convertToAnyHashable<A>(_:)(v183, &v1172);

  specialized Dictionary.subscript.getter((uint64_t)&v1172, v182, &v1179);
  swift_bridgeObjectRelease(v182);
  outlined destroy of AnyHashable((uint64_t)&v1172);
  if (!*((_QWORD *)&v1180 + 1))
  {
LABEL_115:
    swift_bridgeObjectRelease(v1163);
    outlined destroy of Any?((uint64_t)&v1179, &demangling cache variable for type metadata for Any?);
    return 0;
  }
  if ((swift_dynamicCast(&v1175, &v1179, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {
LABEL_118:
    swift_bridgeObjectRelease(v1163);
    return 0;
  }
  v184 = v1175;
  v185 = objc_msgSend(v180, "metadata");
  v186 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v185, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v187 = MOSuggestionAssetMetadataKeyMotionActivityTypeEnum;
  specialized _convertToAnyHashable<A>(_:)(v187, &v1172);

  specialized Dictionary.subscript.getter((uint64_t)&v1172, v186, &v1179);
  swift_bridgeObjectRelease(v186);
  outlined destroy of AnyHashable((uint64_t)&v1172);
  if (!*((_QWORD *)&v1180 + 1))
  {
    v339 = (char *)*((_QWORD *)&v184 + 1);
LABEL_114:
    swift_bridgeObjectRelease(v339);
    goto LABEL_115;
  }
  type metadata accessor for MOSuggestionAssetMotionActivityType(0);
  if ((swift_dynamicCast(&v1175, &v1179, (char *)&type metadata for Any + 8, v188, 6) & 1) == 0)
  {
    v340 = (char *)*((_QWORD *)&v184 + 1);
LABEL_117:
    swift_bridgeObjectRelease(v340);
    goto LABEL_118;
  }
  v1157 = (char *)v184;
  v189 = (void *)v1175;
  v190 = objc_msgSend(v180, "content");
  v191 = objc_opt_self(UIImage);
  v192 = (char *)swift_dynamicCastObjCClass(v190, v191);
  if (v192)
  {
    v1159 = v192;
  }
  else
  {
    swift_unknownObjectRelease(v190);
    v1159 = 0;
  }
  v349 = objc_msgSend(v180, "content");
  v350 = objc_opt_self(UIView);
  v351 = (char *)swift_dynamicCastObjCClass(v349, v350);
  if (v351)
  {
    v1158 = v351;
  }
  else
  {
    swift_unknownObjectRelease(v349);
    v1158 = 0;
  }
  v352 = objc_msgSend(v180, "metadata");
  v353 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v352, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v354 = MOSuggestionAssetMetadataKeyMotionActivityStepCountLocalized;
  specialized _convertToAnyHashable<A>(_:)(v354, &v1172);

  specialized Dictionary.subscript.getter((uint64_t)&v1172, v353, &v1179);
  swift_bridgeObjectRelease(v353);
  outlined destroy of AnyHashable((uint64_t)&v1172);
  if (*((_QWORD *)&v1180 + 1))
  {
    v355 = swift_dynamicCast(&v1175, &v1179, (char *)&type metadata for Any + 8, &type metadata for String, 6);
    v356 = v1161;
    if ((v355 & 1) == 0)
      v1175 = 0uLL;
  }
  else
  {
    outlined destroy of Any?((uint64_t)&v1179, &demangling cache variable for type metadata for Any?);
    v1175 = 0uLL;
    v356 = v1161;
  }
  v357 = (void *)MOSuggestionAssetMotionActivityTypeWalking;
  v358 = v189;
  v359 = v357;
  v360 = specialized == infix<A>(_:_:)();

  if ((v360 & 1) != 0)
  {
    v361 = 17;
    v362 = v1160;
  }
  else
  {
    v363 = (void *)MOSuggestionAssetMotionActivityTypeRunning;
    v364 = v358;
    v365 = v363;
    v366 = specialized == infix<A>(_:_:)();

    v362 = v1160;
    if ((v366 & 1) != 0)
    {
      v361 = 18;
    }
    else
    {
      v375 = (void *)MOSuggestionAssetMotionActivityTypeRunningWalking;
      v376 = v364;
      v377 = v375;
      v378 = specialized == infix<A>(_:_:)();

      if ((v378 & 1) != 0)
        v361 = 19;
      else
        v361 = 26;
    }
  }
  if (!*((_QWORD *)&v1175 + 1))
  {
    swift_bridgeObjectRelease(*((_QWORD *)&v184 + 1));
    swift_bridgeObjectRelease(v1163);

    swift_bridgeObjectRelease(*((_QWORD *)&v1175 + 1));
    return 0;
  }
  LODWORD(v1160) = v361;
  v1154 = v1175;
  v379 = objc_msgSend(v180, "identifier", swift_bridgeObjectRetain(*((_QWORD *)&v1175 + 1)).n128_f64[0]);
  v1162 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(v379);
  v1155 = v380;

  v381 = (void *)MOSuggestionAssetsTypeMotionActivity;
  v382 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v382 - 8) + 56))(v1166, 1, 1, v382);
  v383 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v383 - 8) + 56))(v1167, 1, 1, v383);
  v1172 = 0u;
  v1173 = 0u;
  v1174 = 1;
  v384 = 11;
  v1156 = v184;
  if (v1164 < 0)
  {
    v385 = v1163;
  }
  else
  {
    v385 = v1163;
    if (*(_QWORD *)(v1163 + 16) > v1164)
      v384 = *(unsigned __int8 *)(v1163 + v1164 + 32);
  }
  LODWORD(v1149) = v384;
  swift_retain(v1165);
  v417 = v381;
  v418 = swift_bridgeObjectRelease(v385);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v362 + 56))(v1168, 1, 1, v356, v418);
  v1164 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
  v1163 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
  LODWORD(v1161) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
  v1153 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
  v1152 = v419;
  v1151 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
  v1150 = v420;
  v1148 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
  v1147 = v421;
  v1146 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
  v1145 = v422;
  v1144 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
  v1143 = v423;
  v1142 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
  v1141 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
  v1139 = v424;
  v1138 = (void *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
  v1137 = v425;
  v1136 = default argument 27 of MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)();
  LODWORD(v1134) = v426 & 1;
  v1133 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
  v1132 = v427;
  v1130 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
  v1129 = v428;
  LODWORD(v1135) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
  LODWORD(v1131) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
  v1128 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
  v1127 = v429;
  v430 = default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
  v1140 = v381;
  v431 = v430;
  v432 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
  v434 = v433;
  v435 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
  static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
  static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
  variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
  v436 = type metadata accessor for MOSuggestionSheetAssetViewModel(0);
  swift_allocObject(v436, *(unsigned int *)(v436 + 48), *(unsigned __int16 *)(v436 + 52));
  v62 = MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)((uint64_t)v1162, v1155, (uint64_t)v1165, v1159, 0, 0, 0, v1140, v1160, 0, v1164, 0, 0, (uint64_t)v1166, v1163, v1161 & 1, (uint64_t)v1153, (uint64_t)v1152, (uint64_t)v1151,
          v1150,
          (uint64_t)v1148,
          (uint64_t)v1147,
          0,
          0,
          v1146,
          v1145,
          v1144,
          (uint64_t)v1143,
          v1142,
          (uint64_t)v1157,
          *((uint64_t *)&v1156 + 1),
          v1154,
          *((uint64_t *)&v1154 + 1),
          v1141,
          v1139,
          (uint64_t)v1167,
          (uint64_t)v1138,
          v1137,
          v1136,
          v1134,
          v1133,
          (uint64_t)v1132,
          v1130,
          v1129,
          v1135 & 1,
          (uint64_t)&v1172,
          (uint64_t)&v1172,
          (uint64_t)&v1172,
          v1149,
          0,
          0,
          0,
          0,
          0,
          1,
          v1131 & 1,
          v1158,
          v1128,
          v1127,
          v431,
          v432,
          v434,
          v435);

  swift_bridgeObjectRelease(*((_QWORD *)&v1175 + 1));
  return v62;
}

uint64_t MOSuggestionCollectionViewCellViewModel.getTitle(title:album:artist:mediaType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a7 != 4)
  {
    if (a7 == 5)
      return 0;
    if (a7 != 7)
    {
      a4 = a2;
      a3 = a1;
    }
  }
  swift_bridgeObjectRetain(a4);
  return a3;
}

uint64_t MOSuggestionCollectionViewCellViewModel.getSubTitle(titleForDisplay:album:artist:mediaType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if ((a7 & 0xFFFFFFFFFFFFFFFELL) == 6)
  {
    if (!a5 && a6 == 0xE000000000000000
      || (_stringCompareWithSmolCheck(_:_:expecting:)(a5, a6, 0, 0xE000000000000000, 0) & 1) != 0)
    {
      if (a3 == a1 && a4 == a2 || (_stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, a1, a2, 0) & 1) != 0)
        return 0;
    }
    else
    {
      if (a5 == a1 && a6 == a2)
        return 0;
      a4 = a6;
      a3 = a5;
      if ((_stringCompareWithSmolCheck(_:_:expecting:)(a5, a6, a1, a2, 0) & 1) != 0)
        return 0;
    }
  }
  else
  {
    a4 = a6;
    a3 = a5;
  }
  swift_bridgeObjectRetain(a4);
  return a3;
}

_QWORD *MOSuggestionCollectionViewCellViewModel.createAssetViewModels(for:cellStyle:bundleInterfaceType:)(uint64_t a1, unsigned int a2, uint64_t a3)
{
  _QWORD *result;
  uint64_t v5;
  uint64_t (*v6)(id, _QWORD, uint64_t, uint64_t, char *, uint64_t);
  uint64_t v7;
  uint64_t i;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  char v22;
  unint64_t v23;

  result = _swiftEmptyArrayStorage;
  v23 = (unint64_t)_swiftEmptyArrayStorage;
  if (!a1)
    return result;
  if (!((unint64_t)a1 >> 62))
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v5)
      return result;
    v22 = 0;
    v6 = *(uint64_t (**)(id, _QWORD, uint64_t, uint64_t, char *, uint64_t))(*(_QWORD *)v21 + 496);
    swift_bridgeObjectRetain(a1);
    v7 = v5;
    goto LABEL_5;
  }
  if (a1 >= 0)
    v17 = a1 & 0xFFFFFFFFFFFFFF8;
  else
    v17 = a1;
  swift_bridgeObjectRetain(a1);
  v5 = _CocoaArrayWrapper.endIndex.getter(v17);
  swift_bridgeObjectRelease(a1);
  if (v5 <= 0)
    return _swiftEmptyArrayStorage;
  v22 = 0;
  swift_bridgeObjectRetain(a1);
  v18 = _CocoaArrayWrapper.endIndex.getter(v17);
  if (!v18)
  {
LABEL_24:
    swift_bridgeObjectRelease(a1);
    return _swiftEmptyArrayStorage;
  }
  v7 = v18;
  if (v18 < 1)
  {
    __break(1u);
    goto LABEL_24;
  }
  v6 = *(uint64_t (**)(id, _QWORD, uint64_t, uint64_t, char *, uint64_t))(*(_QWORD *)v21 + 496);
LABEL_5:
  for (i = 0; i != v7; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
      v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
    else
      v9 = *(id *)(a1 + 8 * i + 32);
    v10 = v9;
    v11 = v6(v9, a2, v5, i, &v22, a3);
    if (v11)
    {
      v12 = v11;
      v13 = swift_retain(v11);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
      v15 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v14 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v15 >= v14 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
      v16 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v12);
      specialized Array._endMutation()(v16);

      swift_release(v12);
    }
    else
    {

    }
  }
  swift_bridgeObjectRelease(a1);
  return (_QWORD *)v23;
}

uint64_t MOSuggestionCollectionViewCellViewModel.handleSuggestionCollectionViewCellSelect(at:modifiedTitle:isPromptElligibleForTransfer:controller:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;

  v10 = v5[2];
  v11 = (*(uint64_t (**)(void))(*v5 + 272))();
  if ((v11 & 1) != 0)
    v12 = 0x746E65636552;
  else
    v12 = 0x6E656D6D6F636552;
  if ((v11 & 1) != 0)
    v13 = 0xE600000000000000;
  else
    v13 = 0xEB00000000646564;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))((swift_isaMask & *a5) + 0x168))(v10, a2, a3, a4, v12, v13);
  return swift_bridgeObjectRelease(v13);
}

uint64_t MOSuggestionCollectionViewCellViewModel.handleSuggestionCollectionViewCellFeedback(at:controller:)(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  char v5;
  objc_class *v6;
  uint64_t v7;
  unint64_t v8;
  NSBundle v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  Swift::String v13;
  unint64_t v15;

  v4 = v2[2];
  v5 = (*(uint64_t (**)(void))(*v2 + 272))();
  v6 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  if ((v5 & 1) != 0)
  {
    v15 = 0xE600000000000000;
    v7 = 0x746E65636552;
    v8 = 0xE600000000000000;
    v9.super.isa = v6;
    v10 = 0;
    v11 = 0xE000000000000000;
    v12 = 0x746E65636552;
  }
  else
  {
    v15 = 0xEB00000000646564;
    v7 = 0x6E656D6D6F636552;
    v8 = 0xEB00000000646564;
    v9.super.isa = v6;
    v10 = 0;
    v11 = 0xE000000000000000;
    v12 = 0x6E656D6D6F636552;
  }
  v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v7, (Swift::String_optional)0, v9, *(Swift::String *)&v10, *(Swift::String *)&v12);

  (*(void (**)(uint64_t, uint64_t, void *))((swift_isaMask & *a2) + 0x190))(v4, v13._countAndFlagsBits, v13._object);
  return swift_bridgeObjectRelease(v13._object);
}

uint64_t MOSuggestionCollectionViewCellViewModel.handleSuggestionCollectionViewCellRemove(at:controller:)(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;

  v4 = v2[2];
  v5 = (*(uint64_t (**)(void))(*v2 + 272))();
  if ((v5 & 1) != 0)
    v6 = 0x746E65636552;
  else
    v6 = 0x6E656D6D6F636552;
  if ((v5 & 1) != 0)
    v7 = 0xE600000000000000;
  else
    v7 = 0xEB00000000646564;
  (*(void (**)(uint64_t, uint64_t, unint64_t))((swift_isaMask & *a2) + 0x180))(v4, v6, v7);
  return swift_bridgeObjectRelease(v7);
}

uint64_t MOSuggestionCollectionViewCellViewModel.handleSuggestionCollectionViewQuickAdd(at:modifiedTitle:isPromptElligibleForTransfer:controller:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;

  v10 = v5[2];
  v11 = (*(uint64_t (**)(void))(*v5 + 272))();
  if ((v11 & 1) != 0)
    v12 = 0x746E65636552;
  else
    v12 = 0x6E656D6D6F636552;
  if ((v11 & 1) != 0)
    v13 = 0xE600000000000000;
  else
    v13 = 0xEB00000000646564;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))((swift_isaMask & *a5) + 0x170))(v10, a2, a3, a4, v12, v13);
  return swift_bridgeObjectRelease(v13);
}

void MOSuggestionCollectionViewCellViewModel.resetAssetViewModel(uuid:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void (*v18)(_BYTE *, _QWORD);
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  unint64_t v39;
  void (*v40)(_BYTE *, _QWORD);
  _BYTE v41[32];
  _OWORD v42[2];
  char v43;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v4);
  v38 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>?);
  __chkstk_darwin(v6);
  v37 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v9 = __chkstk_darwin(v8);
  v36 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 296))(v9);
  if (v11)
  {
    v12 = v11;
    v13 = v11 & 0xFFFFFFFFFFFFFF8;
    if (v11 >> 62)
      goto LABEL_23;
    v14 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v14)
    {
LABEL_27:
      swift_bridgeObjectRelease(v12);
      return;
    }
LABEL_4:
    if (v14 >= 1)
    {
      v15 = 0;
      v16 = v12 & 0xC000000000000001;
      v33 = a1;
      v34 = v14;
      v35 = v12;
      v39 = v12 & 0xC000000000000001;
      while (1)
      {
        if (v16)
        {
          v17 = specialized _ArrayBuffer._getElementSlowPath(_:)(v15, v12);
        }
        else
        {
          v17 = *(_QWORD *)(v12 + 8 * v15 + 32);
          swift_retain(v17);
        }
        if ((static UUID.== infix(_:_:)(v17 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_uuid, a1) & 1) != 0)
        {
          v18 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))(*(_QWORD *)v2 + 312))(v41);
          if (*v19)
          {
            v20 = v19;
            v40 = v18;
            v21 = type metadata accessor for URL(0);
            v22 = (uint64_t)v36;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v36, 1, 1, v21);
            v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
            v24 = (uint64_t)v37;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v37, 1, 1, v23);
            memset(v42, 0, sizeof(v42));
            v43 = 1;
            v25 = type metadata accessor for Date(0);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v38, 1, 1, v25);
            v26 = type metadata accessor for MOSuggestionSheetAssetViewModel(0);
            swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
            swift_retain(v2);
            v27 = MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(0x6C6F686563616C70, 0xEB00000000726564, v2, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, v22, 0, 0, 0, 0xE000000000000000, 0,
                    0xE000000000000000,
                    0,
                    0xE000000000000000,
                    0,
                    0,
                    0,
                    0xE000000000000000,
                    0,
                    0xE000000000000000,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0xE000000000000000,
                    v24,
                    0,
                    0xE000000000000000,
                    0,
                    0,
                    0,
                    0xE000000000000000,
                    0,
                    0xE000000000000000,
                    0,
                    (uint64_t)v42,
                    (uint64_t)v42,
                    (uint64_t)v42,
                    11,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    1,
                    0,
                    0,
                    0xE000000000000000,
                    1,
                    0,
                    0xE000000000000000,
                    0);
            a1 = *v20;
            isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v20);
            *v20 = a1;
            if (!isUniquelyReferenced_nonNull_bridgeObject || a1 < 0 || (a1 & 0x4000000000000000) != 0)
            {
              a1 = specialized _ArrayBuffer._consumeAndCreateNew()(a1);
              *v20 = a1;
            }
            v13 = a1 & 0xFFFFFFFFFFFFFF8;
            v14 = v34;
            v12 = v35;
            if (v15 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
LABEL_23:
              if (v12 >= 0)
                v32 = v13;
              else
                v32 = v12;
              v14 = _CocoaArrayWrapper.endIndex.getter(v32);
              if (!v14)
                goto LABEL_27;
              goto LABEL_4;
            }
            v29 = v13 + 8 * v15;
            v30 = *(_QWORD *)(v29 + 32);
            *(_QWORD *)(v29 + 32) = v27;
            swift_release(v30);
            specialized Array._endMutation()(v31);
            v40(v41, 0);
            a1 = v33;
          }
          else
          {
            v18(v41, 0);
          }
          v16 = v39;
        }
        ++v15;
        swift_release(v17);
        if (v14 == v15)
        {
          swift_bridgeObjectRelease(v12);
          return;
        }
      }
    }
    __break(1u);
  }
}

_UNKNOWN **static SuggestionCellStyle.allCases.getter()
{
  return &outlined read-only object #0 of static SuggestionCellStyle.allCases.getter;
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance SuggestionCellStyle@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = specialized SuggestionCellStyle.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for static CaseIterable.allCases.getter in conformance SuggestionCellStyle(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static SuggestionCellStyle.allCases.getter;
}

uint64_t MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult.assetViewModels.getter()
{
  _QWORD *v0;

  return swift_bridgeObjectRetain(*v0);
}

uint64_t MOEventBundleStore.ResourceValidationResult.failedIndices.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*v1);
  *v1 = a1;
  return result;
}

uint64_t MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  return MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult.uuid.getter(type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult, a1);
}

uint64_t MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult.uuid.setter(uint64_t a1)
{
  return MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult.uuid.setter(a1, type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult);
}

void (__swiftcall *MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult.uuid.modify())()
{
  type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(0);
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

uint64_t MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult.init(assetViewModels:updateIndex:uuid:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult.init(assetViewModels:updateIndex:uuid:)(a1, a2, a3, a4, type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult, a5);
}

uint64_t MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  return MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult.uuid.getter(type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult, a1);
}

uint64_t MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult.uuid.getter@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = a1(0);
  return outlined init with copy of Date?(v2 + *(int *)(v4 + 24), a2, &demangling cache variable for type metadata for UUID?);
}

uint64_t MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult.uuid.setter(uint64_t a1)
{
  return MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult.uuid.setter(a1, type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult);
}

uint64_t MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult.uuid.setter(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;

  v4 = a2(0);
  return outlined assign with take of Date?(a1, v2 + *(int *)(v4 + 24), &demangling cache variable for type metadata for UUID?);
}

void (__swiftcall *MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult.uuid.modify())()
{
  type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(0);
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

uint64_t MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  v1 = a1
     + *(int *)(type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(0)
              + 24);
  v2 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult.init(assetViewModel:updateIndex:uuid:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult.init(assetViewModels:updateIndex:uuid:)(a1, a2, a3, a4, type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult, a5);
}

uint64_t MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult.init(assetViewModels:updateIndex:uuid:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t (*a5)(_QWORD)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;

  *(_QWORD *)a6 = a1;
  *(_QWORD *)(a6 + 8) = a2;
  *(_BYTE *)(a6 + 16) = a3 & 1;
  v8 = a5(0);
  return outlined init with take of Date?(a4, a6 + *(int *)(v8 + 24), &demangling cache variable for type metadata for UUID?);
}

Swift::OpaquePointer_optional __swiftcall MOSuggestionCollectionViewCellViewModel.targetReferences(previewOnly:previewMax:style:typeSorted:)(Swift::Bool previewOnly, Swift::Int previewMax, MomentsUIService::SuggestionCellStyle style, Swift::Bool typeSorted)
{
  void *rawValue;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  Swift::OpaquePointer_optional result;

  if (previewOnly)
    return MOEventBundle.orderedAssetReferencesForPreview(max:)(previewMax);
  result = MOEventBundle.orderedAssetReferencesForPreview(max:)(13);
  rawValue = result.value._rawValue;
  if (typeSorted && result.value._rawValue)
  {
    if ((unint64_t)result.value._rawValue >> 62)
    {
      swift_bridgeObjectRetain(result.value._rawValue);
      v6 = (uint64_t)specialized _copyCollectionToContiguousArray<A>(_:)(v7);
      swift_bridgeObjectRelease(rawValue);
    }
    else
    {
      v6 = (uint64_t)result.value._rawValue & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(result.value._rawValue);
    }
    v8 = (void *)v6;
    specialized MutableCollection<>.sort(by:)((uint64_t *)&v8);
    swift_bridgeObjectRelease(rawValue);
    rawValue = v8;
  }
  result.value._rawValue = rawValue;
  return result;
}

uint64_t MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolder(previewOnly:previewMax:style:typeSorted:completionHandler:)(char a1, Swift::Int a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  _BOOL4 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, _QWORD, id, _QWORD, void (*)(uint64_t), uint64_t);
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  __int128 v65;
  char *v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _OWORD v79[2];
  char v80;

  v71 = a5;
  v72 = a6;
  v74 = a3;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v10);
  v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>?);
  __chkstk_darwin(v13);
  v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v16);
  v18 = (uint64_t *)((char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v73 = v6;
  if ((a1 & 1) != 0)
  {
    v19 = (unint64_t)MOEventBundle.orderedAssetReferencesForPreview(max:)(a2);
  }
  else
  {
    v20 = (unint64_t)MOEventBundle.orderedAssetReferencesForPreview(max:)(13);
    v19 = v20;
    if ((a4 & 1) != 0)
    {
      if (v20)
      {
        if (v20 >> 62)
          goto LABEL_43;
        v21 = v20 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v20);
        goto LABEL_7;
      }
      return 0;
    }
  }
  if (!v19)
    return 0;
  while (1)
  {
    v22 = (unint64_t)v19 >> 62;
    if ((unint64_t)v19 >> 62)
    {
      if (v19 < 0)
        v61 = v19;
      else
        v61 = v19 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v19);
      v23 = _CocoaArrayWrapper.endIndex.getter(v61);
      swift_bridgeObjectRelease(v19);
    }
    else
    {
      v23 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    specialized MOSuggestionCollectionViewCellViewModel.assetSizes(style:assetCount:)(v74);
    if (!v24)
    {
      swift_bridgeObjectRelease(v19);
      return 0;
    }
    v64 = v24;
    v25 = swift_allocObject(&unk_1001E8818, 24, 7);
    v26 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v18, 1, 1, v26);
    v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v15, 1, 1, v27);
    memset(v79, 0, sizeof(v79));
    v80 = 1;
    v28 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v12, 1, 1, v28);
    v29 = type metadata accessor for MOSuggestionSheetAssetViewModel(0);
    swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
    v30 = v73;
    swift_retain(v73);
    v31 = MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(0x6C6F686563616C70, 0xEB00000000726564, v30, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, (uint64_t)v18, 0, 0, 0, 0xE000000000000000, 0,
            0xE000000000000000,
            0,
            0xE000000000000000,
            0,
            0,
            0,
            0xE000000000000000,
            0,
            0xE000000000000000,
            0,
            0,
            0,
            0,
            0,
            0,
            0xE000000000000000,
            (uint64_t)v15,
            0,
            0xE000000000000000,
            0,
            0,
            0,
            0xE000000000000000,
            0,
            0xE000000000000000,
            0,
            (uint64_t)v79,
            (uint64_t)v79,
            (uint64_t)v79,
            11,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0xE000000000000000,
            1,
            0,
            0xE000000000000000,
            0);
    v32 = specialized Array.init(repeating:count:)((uint64_t)v31, v23);
    v70 = v25;
    *(_QWORD *)(v25 + 16) = v32;
    v69 = swift_allocObject(&unk_1001E8778, 17, 7);
    *(_BYTE *)(v69 + 16) = 0;
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
      swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    v33 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v33, (uint64_t)static MOAngelLogger.assets);
    v12 = v64;
    swift_bridgeObjectRetain_n(v64, 2);
    swift_bridgeObjectRetain(v19);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.debug.getter();
    v37 = os_log_type_enabled(v35, v36);
    v63 = v23;
    if (v37)
    {
      v38 = swift_slowAlloc(32, -1);
      v39 = swift_slowAlloc(32, -1);
      *(_DWORD *)v38 = 134218498;
      v77 = v74;
      v78 = v39;
      v18 = &v78;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, &v78, v38 + 4);
      *(_WORD *)(v38 + 12) = 2048;
      v77 = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, &v78, v38 + 14);
      swift_bridgeObjectRelease(v19);
      *(_WORD *)(v38 + 22) = 2080;
      v40 = Array.debugDescription.getter(v12, &type metadata for MOSuggestionAssetTileSize);
      v15 = (char *)v41;
      v77 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v40, v41, &v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, &v78, v38 + 24);
      swift_bridgeObjectRelease_n(v12, 2);
      swift_bridgeObjectRelease(v15);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "[MOSuggestionCollectionViewCellViewModel] style: %ld, assetReferencesCount: %ld, assetSizes: %s", (uint8_t *)v38, 0x20u);
      swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v39, -1, -1);
      swift_slowDealloc(v38, -1, -1);

      if (!v22)
        goto LABEL_24;
    }
    else
    {

      swift_bridgeObjectRelease_n(v12, 2);
      swift_bridgeObjectRelease(v19);
      if (!v22)
      {
LABEL_24:
        v43 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v19);
        if (!v43)
          goto LABEL_36;
        goto LABEL_25;
      }
    }
    if (v19 < 0)
      v42 = v19;
    else
      v42 = v19 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v19);
    v43 = _CocoaArrayWrapper.endIndex.getter(v42);
    if (!v43)
      goto LABEL_36;
LABEL_25:
    if (v43 >= 1)
      break;
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    swift_bridgeObjectRetain(v19);
    v21 = (uint64_t)specialized _copyCollectionToContiguousArray<A>(_:)(v62);
    swift_bridgeObjectRelease(v19);
LABEL_7:
    *(_QWORD *)&v79[0] = v21;
    specialized MutableCollection<>.sort(by:)((uint64_t *)v79);
    swift_bridgeObjectRelease(v19);
    v19 = *(_QWORD *)&v79[0];
  }
  if ((unint64_t)(v43 - 1) >= *((_QWORD *)v64 + 2))
    goto LABEL_42;
  v45 = 0;
  v66 = v64 + 32;
  v67 = v19 & 0xC000000000000001;
  v65 = xmmword_10019EDA0;
  v76 = v19;
  v68 = v43;
  do
  {
    if (v67)
    {
      v46 = specialized _ArrayBuffer._getElementSlowPath(_:)(v45, v19);
    }
    else
    {
      v46 = *(_QWORD *)(v19 + 8 * v45 + 32);
      swift_retain(v46);
    }
    if (one-time initialization token for shared != -1)
      swift_once(&one-time initialization token for shared, one-time initialization function for shared);
    v47 = static MOSuggestionAssetCacheManager.shared;
    v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v49 = swift_allocObject(v48, 40, 7);
    *(_OWORD *)(v49 + 16) = v65;
    *(_QWORD *)(v49 + 32) = v46;
    v78 = v49;
    specialized Array._endMutation()(v49);
    v50 = v78;
    v75 = v66[v45];
    v51 = swift_allocObject(&unk_1001E87A0, 24, 7);
    swift_weakInit(v51 + 16);
    v52 = swift_allocObject(&unk_1001E8840, 80, 7);
    v54 = v70;
    v53 = v71;
    *(_QWORD *)(v52 + 16) = v51;
    *(_QWORD *)(v52 + 24) = v54;
    v55 = v72;
    *(_QWORD *)(v52 + 32) = v53;
    *(_QWORD *)(v52 + 40) = v55;
    *(_BYTE *)(v52 + 48) = v74;
    v56 = v76;
    *(_QWORD *)(v52 + 56) = v76;
    *(_QWORD *)(v52 + 64) = v45;
    v57 = v69;
    *(_QWORD *)(v52 + 72) = v69;
    v58 = one-time initialization token for defaultQueue;
    swift_bridgeObjectRetain(v56);
    swift_retain(v46);
    swift_retain(v51);
    swift_retain(v54);
    swift_retain(v55);
    swift_retain(v57);
    if (v58 != -1)
      swift_once(&one-time initialization token for defaultQueue, one-time initialization function for defaultQueue);
    ++v45;
    v59 = *(void (**)(uint64_t, _QWORD, id, _QWORD, void (*)(uint64_t), uint64_t))(*(_QWORD *)v47 + 232);
    v60 = (id)static MOSuggestionAssetCacheManager.defaultQueue;
    v59(v50, 0, v60, v75, partial apply for closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolder(previewOnly:previewMax:style:typeSorted:completionHandler:), v52);
    swift_release(v51);
    swift_release(v52);

    swift_bridgeObjectRelease(v50);
    swift_release(v46);
    v19 = v76;
  }
  while (v68 != v45);
LABEL_36:
  swift_bridgeObjectRelease(v64);
  swift_bridgeObjectRelease_n(v19, 2);
  swift_release(v70);
  swift_release(v69);
  return v63;
}

void closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolder(previewOnly:previewMax:style:typeSorted:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint8_t *a4, uint8_t *a5, unsigned int a6, unint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t Strong;
  id *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  id v27;
  double v28;
  uint64_t v29;
  id v30;
  __n128 v31;
  id v32;
  NSObject *v33;
  uint64_t v34;
  uint64_t *v35;
  void **p_isa;
  char isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  void *v41;
  _QWORD *v42;
  void *v43;
  _QWORD *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  _QWORD *v53;
  void *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  void *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  uint8_t *v79;
  uint64_t v80;
  unint64_t v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void **aBlock;
  uint64_t v87;
  uint64_t (*v88)(uint64_t);
  void *v89;
  uint64_t (*v90)();
  _QWORD *v91;
  char v92[32];

  v83 = a8;
  v81 = a7;
  v82 = a6;
  v14 = type metadata accessor for DispatchWorkItemFlags(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for DispatchQoS(0);
  v18 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v20 = (unint64_t)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v92, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (!Strong)
  {
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue, OS_dispatch_queue_ptr);
    v83 = static OS_dispatch_queue.main.getter(v52);
    v53 = (_QWORD *)swift_allocObject(&unk_1001E8CE0, 40, 7);
    v53[2] = a3;
    v53[3] = a4;
    v53[4] = a5;
    v90 = partial apply for closure #1 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolder(previewOnly:previewMax:style:typeSorted:completionHandler:);
    v91 = v53;
    aBlock = _NSConcreteStackBlock;
    v87 = 1107296256;
    v88 = thunk for @escaping @callee_guaranteed () -> ();
    v89 = &block_descriptor_91;
    v54 = _Block_copy(&aBlock);
    v55 = v91;
    swift_retain(a3);
    swift_retain(a5);
    swift_release(v55);
    static DispatchQoS.unspecified.getter(v56);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v57 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v58 = v15;
    v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    v60 = lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags], (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v59, v60, v14, v57);
    v61 = (void *)v83;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v20, v17, v54);
    _Block_release(v54);

    (*(void (**)(char *, uint64_t))(v58 + 8))(v17, v14);
    (*(void (**)(unint64_t, uint64_t))(v18 + 8))(v20, v84);
    return;
  }
  v22 = (id *)Strong;
  v79 = a4;
  v80 = a3;
  v78 = v18;
  v23 = a1;
  if (!a1)
    goto LABEL_25;
  v76 = v15;
  if (!((unint64_t)a1 >> 62))
  {
    v24 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    v25 = v14;
    if (v24)
      goto LABEL_5;
LABEL_24:
    swift_bridgeObjectRelease(a1);
    goto LABEL_25;
  }
  if (a1 >= 0)
    v62 = a1 & 0xFFFFFFFFFFFFFF8;
  else
    v62 = a1;
  swift_bridgeObjectRetain(a1);
  v24 = _CocoaArrayWrapper.endIndex.getter(v62);
  v25 = v14;
  if (!v24)
    goto LABEL_24;
LABEL_5:
  v26 = v17;
  v74 = v25;
  v75 = v20;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_39;
    }
    v27 = *(id *)(a1 + 32);
  }
  v77 = v27;
  v24 = a9 + 16;
  *(_QWORD *)&v28 = swift_bridgeObjectRelease(a1).n128_u64[0];
  a1 = v81;
  v20 = v83;
  if (v81 >> 62)
  {
LABEL_39:
    if (a1 < 0)
      v70 = a1;
    else
      v70 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v29 = _CocoaArrayWrapper.endIndex.getter(v70);
    *(_QWORD *)&v28 = swift_bridgeObjectRelease(a1).n128_u64[0];
    goto LABEL_10;
  }
  v29 = *(_QWORD *)((v81 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_10:
  v30 = objc_msgSend(v22[2], "interfaceType", v28, v74);
  v31 = swift_beginAccess(v24, &aBlock, 33, 0);
  v32 = v77;
  v33 = (*((uint64_t (**)(id, _QWORD, uint64_t, unint64_t, uint64_t, id, __n128))*v22 + 62))(v77, v82, v29, v20, v24, v30, v31);
  swift_endAccess(&aBlock);
  if (v33)
  {
    v34 = v80;
    v35 = (uint64_t *)(v80 + 16);
    swift_beginAccess(v80 + 16, &aBlock, 33, 0);
    v23 = *v35;
    p_isa = (void **)&v33->isa;
    swift_retain(v33);
    isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v23);
    *v35 = v23;
    if ((isUniquelyReferenced_nonNull_bridgeObject & 1) == 0 || v23 < 0 || (v23 & 0x4000000000000000) != 0)
    {
      v23 = specialized _ArrayBuffer._consumeAndCreateNew()(v23);
      *v35 = v23;
    }
    if ((v20 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v24 = (uint64_t)a5;
      a5 = v79;
      if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) > v20)
      {
        v38 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 8 * v20 + 0x20);
        *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 8 * v20 + 0x20) = v33;
        swift_release(v38);
        specialized Array._endMutation()(v39);
        swift_endAccess(&aBlock);
        type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue, OS_dispatch_queue_ptr);
        v41 = (void *)static OS_dispatch_queue.main.getter(v40);
        v42 = (_QWORD *)swift_allocObject(&unk_1001E8D30, 56, 7);
        v42[2] = v34;
        v42[3] = v20;
        v42[4] = v22;
        v42[5] = a5;
        v42[6] = v24;
        v90 = partial apply for closure #2 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolder(previewOnly:previewMax:style:typeSorted:completionHandler:);
        v91 = v42;
        aBlock = _NSConcreteStackBlock;
        v87 = 1107296256;
        v88 = thunk for @escaping @callee_guaranteed () -> ();
        v89 = &block_descriptor_97;
        v43 = _Block_copy(&aBlock);
        v44 = v91;
        swift_retain(v34);
        swift_retain(v24);
        swift_retain(v22);
        swift_release(v44);
        v45 = v75;
        static DispatchQoS.unspecified.getter(v46);
        aBlock = (void **)_swiftEmptyArrayStorage;
        v47 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
        v49 = lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags], (uint64_t)&protocol conformance descriptor for [A]);
        v50 = v48;
        v51 = v74;
        dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v50, v49, v74, v47);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v45, v26, v43);

        _Block_release(v43);
        swift_release(v33);
        swift_release(v22);

        (*(void (**)(char *, uint64_t))(v76 + 8))(v26, v51);
        (*(void (**)(unint64_t, uint64_t))(v78 + 8))(v45, v84);
        return;
      }
    }
    __break(1u);
    goto LABEL_45;
  }

LABEL_25:
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v63 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v63, (uint64_t)static MOAngelLogger.assets);
  v64 = swift_bridgeObjectRetain_n(v23, 2);
  v33 = Logger.logObject.getter(v64);
  LOBYTE(v26) = static os_log_type_t.debug.getter();
  if (!os_log_type_enabled(v33, (os_log_type_t)v26))
  {

    swift_bridgeObjectRelease_n(v23, 2);
    swift_release(v22);
    return;
  }
  a5 = (uint8_t *)swift_slowAlloc(12, -1);
  p_isa = (void **)swift_slowAlloc(32, -1);
  aBlock = p_isa;
  *(_DWORD *)a5 = 136315138;
  if (!v23)
  {
    v68 = 0xE300000000000000;
    v69 = 7104878;
LABEL_51:
    v85 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v69, v68, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, &aBlock, a5 + 4);
    swift_bridgeObjectRelease_n(v23, 2);
    swift_bridgeObjectRelease(v68);
    _os_log_impl((void *)&_mh_execute_header, v33, (os_log_type_t)v26, "[MOSuggestionCollectionViewCellViewModel] failed to generate view model, asset=%s", a5, 0xCu);
    swift_arrayDestroy(p_isa, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(p_isa, -1, -1);
    swift_slowDealloc(a5, -1, -1);
    swift_release(v22);

    return;
  }
  v24 = v23 & 0xFFFFFFFFFFFFFF8;
  if ((unint64_t)v23 >> 62)
  {
LABEL_45:
    if (v23 >= 0)
      v71 = v24;
    else
      v71 = v23;
    swift_bridgeObjectRetain(v23);
    if (!_CocoaArrayWrapper.endIndex.getter(v71))
      goto LABEL_49;
    goto LABEL_31;
  }
  v65 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v23);
  if (!v65)
  {
LABEL_49:
    swift_bridgeObjectRelease(v23);
    v67 = 0;
    goto LABEL_50;
  }
LABEL_31:
  if ((v23 & 0xC000000000000001) != 0)
  {
    v66 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v23);
    goto LABEL_34;
  }
  if (*(_QWORD *)(v24 + 16))
  {
    v66 = *(id *)(v23 + 32);
LABEL_34:
    v67 = v66;
    swift_bridgeObjectRelease(v23);
LABEL_50:
    v85 = (uint64_t)v67;
    v72 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset?);
    v69 = Optional.debugDescription.getter(v72);
    v68 = v73;

    goto LABEL_51;
  }
  __break(1u);
}

uint64_t closure #1 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolder(previewOnly:previewMax:style:typeSorted:completionHandler:)(uint64_t a1, void (*a2)(char *, __n128))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  _BYTE v13[24];

  v4 = type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  swift_beginAccess(a1 + 16, v13, 0, 0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = &v6[*(int *)(v4 + 24)];
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(_QWORD *)v6 = v7;
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 1;
  v10 = swift_bridgeObjectRetain(v7);
  a2(v6, v10);
  return outlined destroy of MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult((uint64_t)v6, type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult);
}

uint64_t closure #2 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolder(previewOnly:previewMax:style:typeSorted:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(__n128);
  __n128 v14;
  uint64_t v15;
  _BYTE v18[24];

  v8 = type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(0);
  __chkstk_darwin(v8);
  v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  swift_beginAccess(a1 + 16, v18, 0, 0);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = &v10[*(int *)(v8 + 24)];
  v13 = *(void (**)(__n128))(*(_QWORD *)a3 + 344);
  v14 = swift_bridgeObjectRetain(v11);
  v13(v14);
  v15 = type metadata accessor for UUID(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v12, 0, 1, v15);
  *(_QWORD *)v10 = v11;
  *((_QWORD *)v10 + 1) = a2;
  v10[16] = 0;
  a4(v10);
  return outlined destroy of MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult((uint64_t)v10, type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult);
}

unint64_t specialized MutableCollection.swapAt(_:_:)(unint64_t result, unint64_t a2)
{
  uint64_t *v2;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (result != a2)
  {
    v4 = result;
    v5 = *v2;
    if ((*v2 & 0xC000000000000001) == 0)
    {
      if ((result & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) > result)
      {
        v6 = *(_QWORD *)(v5 + 8 * result + 32);
        result = swift_retain(v6);
        if ((v5 & 0xC000000000000001) == 0)
          goto LABEL_6;
        goto LABEL_21;
      }
      __break(1u);
      goto LABEL_24;
    }
    result = specialized _ArrayBuffer._getElementSlowPath(_:)(result, *v2);
    v6 = result;
    v5 = *v2;
    if ((*v2 & 0xC000000000000001) == 0)
    {
LABEL_6:
      if ((a2 & 0x8000000000000000) == 0)
      {
        if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
        {
          v7 = *(_QWORD *)(v5 + 8 * a2 + 32);
          swift_retain(v7);
LABEL_9:
          isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v5);
          *v2 = v5;
          if (!isUniquelyReferenced_nonNull_bridgeObject || v5 < 0 || (v5 & 0x4000000000000000) != 0)
          {
            v5 = specialized _ArrayBuffer._consumeAndCreateNew()(v5);
            *v2 = v5;
          }
          v9 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20);
          *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20) = v7;
          v10 = swift_release(v9);
          specialized Array._endMutation()(v10);
          v11 = *v2;
          result = swift_isUniquelyReferenced_nonNull_bridgeObject(*v2);
          *v2 = v11;
          if (!(_DWORD)result || (v11 & 0x8000000000000000) != 0 || (v11 & 0x4000000000000000) != 0)
          {
            result = specialized _ArrayBuffer._consumeAndCreateNew()(v11);
            v11 = result;
            *v2 = result;
          }
          if ((a2 & 0x8000000000000000) == 0)
          {
            if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
            {
              v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 8 * a2 + 0x20);
              *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 8 * a2 + 0x20) = v6;
              v13 = swift_release(v12);
              return specialized Array._endMutation()(v13);
            }
            goto LABEL_27;
          }
LABEL_26:
          __break(1u);
LABEL_27:
          __break(1u);
          return result;
        }
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
LABEL_21:
    v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, v5);
    v5 = *v2;
    goto LABEL_9;
  }
  return result;
}

void closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, int a6, unint64_t a7, uint64_t a8)
{
  uint64_t v15;
  void *v16;

  v15 = a8 + 16;
  v16 = objc_autoreleasePoolPush();
  closure #1 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:)(a2, a3, a4, a5, a1, a6, a7, v15);
  objc_autoreleasePoolPop(v16);
}

uint64_t closure #1 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, int a6, unint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t Strong;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  __n128 v34;
  uint64_t (*v35)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, id, __n128);
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  void *v39;
  void *v40;
  _QWORD *v41;
  uint64_t v42;
  void *v43;
  _QWORD *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  __n128 v54;
  _QWORD *v55;
  void *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  const void *v63;
  id *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  __n128 v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  void *v79;
  _QWORD *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  id v91;
  uint64_t v92;
  char *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  id *v104;
  uint64_t v105;
  void **aBlock;
  uint64_t v107;
  uint64_t (*v108)(uint64_t);
  void *v109;
  uint64_t (*v110)();
  _QWORD *v111;
  char v112[32];
  void *v113;

  v92 = a8;
  v90 = a7;
  LODWORD(v91) = a6;
  v103 = a5;
  v105 = a4;
  v113 = a3;
  v10 = type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(0);
  v11 = *(_QWORD *)(v10 - 8);
  v98 = v10;
  v99 = v11;
  v12 = __chkstk_darwin(v10);
  v100 = v13;
  v101 = (uint64_t)&v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v102 = (char *)&v89 - v14;
  v15 = (_QWORD *)type metadata accessor for DispatchWorkItemFlags(0);
  v16 = *(v15 - 1);
  __chkstk_darwin(v15);
  v18 = (char *)&v89 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for DispatchQoS(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v89 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(a1 + 16, v112, 0, 0);
  Strong = swift_weakLoadStrong(a1 + 16);
  if (!Strong)
  {
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue, OS_dispatch_queue_ptr);
    v104 = (id *)static OS_dispatch_queue.main.getter(v54);
    v55 = (_QWORD *)swift_allocObject(&unk_1001E8DA8, 40, 7);
    v56 = v113;
    v55[2] = a2;
    v55[3] = v56;
    v57 = v105;
    v55[4] = v105;
    v110 = partial apply for closure #1 in closure #1 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:);
    v111 = v55;
    aBlock = _NSConcreteStackBlock;
    v107 = 1107296256;
    v108 = thunk for @escaping @callee_guaranteed () -> ();
    v109 = &block_descriptor_106;
    v113 = _Block_copy(&aBlock);
    v58 = v111;
    swift_retain(v57);
    swift_release(v58);
    static DispatchQoS.unspecified.getter(v59);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v60 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v61 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    v62 = lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags], (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v61, v62, v15, v60);
    v63 = v113;
    v64 = v104;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v22, v18, v113);
    _Block_release(v63);

    (*(void (**)(char *, _QWORD *))(v16 + 8))(v18, v15);
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  }
  v104 = (id *)Strong;
  v93 = v22;
  v95 = v20;
  v96 = v16;
  v97 = v19;
  v94 = v15;
  v24 = v113;
  v25 = v103;
  if (v103)
  {
    v26 = v103;
    if ((unint64_t)v103 >> 62)
    {
      if (v103 >= 0)
        v65 = v103 & 0xFFFFFFFFFFFFFF8;
      else
        v65 = v103;
      swift_bridgeObjectRetain(v103);
      if (_CocoaArrayWrapper.endIndex.getter(v65))
      {
LABEL_5:
        if ((v25 & 0xC000000000000001) != 0)
        {
          v28 = v26;
          v29 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v25);
        }
        else
        {
          if (!*(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_23;
          }
          v28 = v26;
          v29 = *(id *)(v26 + 32);
        }
        v15 = v29;
        swift_bridgeObjectRelease(v28);
        v19 = v90;
        if (!(v90 >> 62))
        {
          v30 = *(_QWORD *)((v90 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_10:
          v31 = (uint64_t)v104;
          v32 = objc_msgSend(v104[2], "interfaceType");
          v33 = v92;
          v34 = swift_beginAccess(v92, &aBlock, 33, 0);
          v35 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, id, __n128))(*(_QWORD *)v31 + 496);
          v36 = v91;
          v91 = v15;
          v37 = v35(v15, v36, v30, a2, v33, v32, v34);
          swift_endAccess(&aBlock);
          if (v37)
          {
            type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue, OS_dispatch_queue_ptr);
            v39 = v24;
            v40 = (void *)static OS_dispatch_queue.main.getter(v38);
            v41 = (_QWORD *)swift_allocObject(&unk_1001E8E48, 56, 7);
            v41[2] = v37;
            v41[3] = a2;
            v41[4] = v31;
            v41[5] = v39;
            v42 = v105;
            v41[6] = v105;
            v110 = partial apply for closure #2 in closure #1 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:);
            v111 = v41;
            aBlock = _NSConcreteStackBlock;
            v107 = 1107296256;
            v108 = thunk for @escaping @callee_guaranteed () -> ();
            v109 = &block_descriptor_118;
            v43 = _Block_copy(&aBlock);
            v44 = v111;
            swift_retain(v42);
            swift_retain(v37);
            swift_retain(v31);
            swift_release(v44);
            v45 = v93;
            static DispatchQoS.unspecified.getter(v46);
            aBlock = (void **)_swiftEmptyArrayStorage;
            v47 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
            v48 = v37;
            v49 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
            v50 = lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags], (uint64_t)&protocol conformance descriptor for [A]);
            v51 = v49;
            v52 = v94;
            dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v51, v50, v94, v47);
            OS_dispatch_queue.async(group:qos:flags:execute:)(0, v45, v18, v43);

            _Block_release(v43);
            swift_release(v48);
            swift_release(v31);

            (*(void (**)(char *, _QWORD *))(v96 + 8))(v18, v52);
            return (*(uint64_t (**)(char *, uint64_t))(v95 + 8))(v45, v97);
          }

          goto LABEL_19;
        }
LABEL_23:
        if (v19 < 0)
          v88 = v19;
        else
          v88 = v19 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v19);
        v30 = _CocoaArrayWrapper.endIndex.getter(v88);
        swift_bridgeObjectRelease(v19);
        goto LABEL_10;
      }
    }
    else
    {
      v27 = *(_QWORD *)((v103 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v103);
      if (v27)
        goto LABEL_5;
    }
    swift_bridgeObjectRelease(v25);
LABEL_19:
    v25 = v26;
  }
  v66 = (uint64_t)v104;
  v67 = specialized static MOSuggestionSheetAssetViewModel.PLACEHOLDER_VIEW_MODEL(parent:)((uint64_t)v104);
  v68 = *(int *)(v98 + 24);
  v103 = (uint64_t)v18;
  v69 = (uint64_t)v102;
  v70 = &v102[v68];
  (*(void (**)(void))(*(_QWORD *)v66 + 344))();
  v71 = type metadata accessor for UUID(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v70, 0, 1, v71);
  *(_QWORD *)v69 = v67;
  *(_QWORD *)(v69 + 8) = a2;
  *(_BYTE *)(v69 + 16) = 0;
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue, OS_dispatch_queue_ptr);
  v73 = (void *)static OS_dispatch_queue.main.getter(v72);
  v74 = v101;
  outlined init with copy of MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(v69, v101);
  v75 = *(unsigned __int8 *)(v99 + 80);
  v76 = (v75 + 40) & ~v75;
  v77 = (_QWORD *)swift_allocObject(&unk_1001E8DF8, v76 + v100, v75 | 7);
  v77[2] = v25;
  v77[3] = v24;
  v78 = v105;
  v77[4] = v105;
  outlined init with take of MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(v74, (uint64_t)v77 + v76);
  v110 = partial apply for closure #3 in closure #1 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:);
  v111 = v77;
  aBlock = _NSConcreteStackBlock;
  v107 = 1107296256;
  v108 = thunk for @escaping @callee_guaranteed () -> ();
  v109 = &block_descriptor_112;
  v79 = _Block_copy(&aBlock);
  v80 = v111;
  swift_retain(v78);
  swift_bridgeObjectRetain(v25);
  swift_release(v80);
  v81 = v93;
  static DispatchQoS.unspecified.getter(v82);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v83 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v84 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  v85 = lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags], (uint64_t)&protocol conformance descriptor for [A]);
  v86 = v103;
  v87 = v94;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v84, v85, v94, v83);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v81, v86, v79);
  _Block_release(v79);
  swift_release(v104);

  (*(void (**)(uint64_t, _QWORD *))(v96 + 8))(v86, v87);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v81, v97);
  return outlined destroy of MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(v69, type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult);
}

uint64_t closure #1 in closure #1 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:)(uint64_t a1, void (*a2)(char *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v4 = type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = &v7[*(int *)(v5 + 24)];
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = a1;
  v7[16] = 0;
  a2(v7);
  return outlined destroy of MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult((uint64_t)v7, type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult);
}

uint64_t closure #2 in closure #1 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *, __n128))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v16;

  v8 = type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = &v11[*(int *)(v9 + 24)];
  (*(void (**)(void))(*(_QWORD *)a3 + 344))();
  v13 = type metadata accessor for UUID(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 0, 1, v13);
  *(_QWORD *)v11 = a1;
  *((_QWORD *)v11 + 1) = a2;
  v11[16] = 0;
  v14 = swift_retain(a1);
  a4(v11, v14);
  return outlined destroy of MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult((uint64_t)v11, type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult);
}

uint64_t closure #3 in closure #1 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:)(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  id v15;
  void *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;

  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v7 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v7, (uint64_t)static MOAngelLogger.assets);
  v8 = swift_bridgeObjectRetain_n(a1, 2);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.debug.getter();
  if (!os_log_type_enabled(v9, v10))
  {

    swift_bridgeObjectRelease_n(a1, 2);
    return a2(a4);
  }
  v11 = (uint8_t *)swift_slowAlloc(12, -1);
  v12 = swift_slowAlloc(32, -1);
  v24 = v12;
  *(_DWORD *)v11 = 136315138;
  v22 = a2;
  if (!a1)
  {
    v17 = 0xE300000000000000;
    v18 = 7104878;
LABEL_19:
    v23 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v17, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v11 + 4);
    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v17);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "[MOSuggestionCollectionViewCellViewModel] failed to generate view model, asset=%s", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    a2 = v22;
    return a2(a4);
  }
  if (!((unint64_t)a1 >> 62))
  {
    v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(a1);
    if (v13)
      goto LABEL_7;
LABEL_17:
    swift_bridgeObjectRelease(a1);
    v16 = 0;
    goto LABEL_18;
  }
  if (a1 >= 0)
    v19 = a1 & 0xFFFFFFFFFFFFFF8;
  else
    v19 = a1;
  swift_bridgeObjectRetain(a1);
  result = _CocoaArrayWrapper.endIndex.getter(v19);
  if (!result)
    goto LABEL_17;
LABEL_7:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    goto LABEL_10;
  }
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v15 = *(id *)(a1 + 32);
LABEL_10:
    v16 = v15;
    swift_bridgeObjectRelease(a1);
LABEL_18:
    v23 = (uint64_t)v16;
    v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset?);
    v18 = Optional.debugDescription.getter(v20);
    v17 = v21;

    goto LABEL_19;
  }
  __break(1u);
  return result;
}

void MOSuggestionCollectionViewCellViewModel.fetchAssetsForBundle(previewOnly:previewMax:style:completionHandler:)(char a1, Swift::Int a2, unsigned __int8 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  void (*v33)(uint64_t, _QWORD, id, _QWORD, double (*)(uint64_t), _QWORD *);
  id v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  if ((a1 & 1) == 0)
    a2 = 13;
  v7 = (unint64_t)MOEventBundle.orderedAssetReferencesForPreview(max:)(a2);
  if (v7)
  {
    v8 = v7;
    v9 = (unint64_t)v7 >> 62;
    if ((unint64_t)v7 >> 62)
    {
      if (v7 < 0)
        v35 = v7;
      else
        v35 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v7);
      v10 = _CocoaArrayWrapper.endIndex.getter(v35);
      swift_bridgeObjectRelease(v8);
    }
    else
    {
      v10 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    specialized MOSuggestionCollectionViewCellViewModel.assetSizes(style:assetCount:)(a3);
    if (!v11)
    {
      swift_bridgeObjectRelease(v8);
      return;
    }
    v12 = v11;
    v39 = swift_allocObject(&unk_1001E8868, 24, 7);
    *(_QWORD *)(v39 + 16) = 0;
    v38 = swift_allocObject(&unk_1001E8890, 24, 7);
    *(_QWORD *)(v38 + 16) = _swiftEmptyArrayStorage;
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
      swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    v13 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v13, (uint64_t)static MOAngelLogger.assets);
    swift_bridgeObjectRetain_n(v12, 2);
    swift_bridgeObjectRetain(v8);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc(32, -1);
      v18 = swift_slowAlloc(32, -1);
      v45 = v18;
      *(_DWORD *)v17 = 134218498;
      v44 = a3;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45, v17 + 4);
      *(_WORD *)(v17 + 12) = 2048;
      v44 = v10;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45, v17 + 14);
      swift_bridgeObjectRelease(v8);
      *(_WORD *)(v17 + 22) = 2080;
      v19 = Array.debugDescription.getter(v12, &type metadata for MOSuggestionAssetTileSize);
      v21 = v20;
      v44 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v20, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45, v17 + 24);
      swift_bridgeObjectRelease_n(v12, 2);
      swift_bridgeObjectRelease(v21);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "[MOSuggestionCollectionViewCellViewModel] style: %ld, assetReferencesCount: %ld, assetSizes: %s", (uint8_t *)v17, 0x20u);
      swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v18, -1, -1);
      swift_slowDealloc(v17, -1, -1);

      if (v9)
        goto LABEL_12;
    }
    else
    {

      swift_bridgeObjectRelease_n(v12, 2);
      swift_bridgeObjectRelease(v8);
      if (v9)
      {
LABEL_12:
        if (v8 < 0)
          v22 = v8;
        else
          v22 = v8 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v8);
        v23 = _CocoaArrayWrapper.endIndex.getter(v22);
        if (!v23)
          goto LABEL_31;
        goto LABEL_20;
      }
    }
    v23 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v8);
    if (!v23)
    {
LABEL_31:
      swift_release(v39);
      swift_release(v38);
      swift_bridgeObjectRelease(v12);
      swift_bridgeObjectRelease_n(v8, 2);
      return;
    }
LABEL_20:
    if (v23 < 1)
    {
      __break(1u);
    }
    else if ((unint64_t)(v23 - 1) < *(_QWORD *)(v12 + 16))
    {
      v24 = 0;
      v36 = v8 & 0xC000000000000001;
      v37 = v12;
      v43 = v8;
      do
      {
        if (v36)
        {
          v25 = specialized _ArrayBuffer._getElementSlowPath(_:)(v24, v8);
        }
        else
        {
          v25 = *(_QWORD *)(v8 + 8 * v24 + 32);
          swift_retain(v25);
        }
        if (one-time initialization token for shared != -1)
          swift_once(&one-time initialization token for shared, one-time initialization function for shared);
        v26 = static MOSuggestionAssetCacheManager.shared;
        v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
        v28 = swift_allocObject(v27, 40, 7);
        *(_OWORD *)(v28 + 16) = xmmword_10019EDA0;
        *(_QWORD *)(v28 + 32) = v25;
        v45 = v28;
        specialized Array._endMutation()(v28);
        v29 = v45;
        v42 = *(unsigned __int8 *)(v12 + v24 + 32);
        v30 = swift_allocObject(&unk_1001E87A0, 24, 7);
        swift_weakInit(v30 + 16);
        v31 = (_QWORD *)swift_allocObject(&unk_1001E88B8, 72, 7);
        v31[2] = v30;
        v31[3] = a4;
        v31[4] = a5;
        v31[5] = v38;
        v31[6] = v24;
        v31[7] = v39;
        v31[8] = v43;
        v32 = one-time initialization token for defaultQueue;
        swift_bridgeObjectRetain(v43);
        swift_retain(v25);
        swift_retain(v30);
        swift_retain(a5);
        swift_retain(v38);
        swift_retain(v39);
        if (v32 != -1)
          swift_once(&one-time initialization token for defaultQueue, one-time initialization function for defaultQueue);
        ++v24;
        v33 = *(void (**)(uint64_t, _QWORD, id, _QWORD, double (*)(uint64_t), _QWORD *))(*(_QWORD *)v26 + 232);
        v34 = (id)static MOSuggestionAssetCacheManager.defaultQueue;
        v33(v29, 0, v34, v42, partial apply for closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsForBundle(previewOnly:previewMax:style:completionHandler:), v31);
        swift_release(v30);
        swift_release(v31);

        swift_bridgeObjectRelease(v29);
        swift_release(v25);
        v12 = v37;
        v8 = v43;
      }
      while (v23 != v24);
      goto LABEL_31;
    }
    __break(1u);
  }
}

double closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsForBundle(previewOnly:previewMax:style:completionHandler:)(uint64_t a1, uint64_t a2, void (*a3)(_QWORD, char *), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t Strong;
  uint64_t v23;
  _QWORD **v24;
  _QWORD *v25;
  id v26;
  void *v27;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  double result;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  void *v41;
  _QWORD *v42;
  void *v43;
  _QWORD *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD aBlock[5];
  _QWORD *v64;
  char v65[24];
  char v66[32];

  v62 = a7;
  v55 = a6;
  v59 = type metadata accessor for DispatchWorkItemFlags(0);
  v14 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v58 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for DispatchQoS(0);
  v60 = *(_QWORD *)(v16 - 8);
  v61 = v16;
  __chkstk_darwin(v16);
  v57 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for UUID(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v66, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (!Strong)
  {
    UUID.init()(0);
    a3(0, v21);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    return result;
  }
  v23 = Strong;
  v56 = a5;
  v24 = (_QWORD **)(a5 + 16);
  if (a1)
  {
    if ((unint64_t)a1 >> 62)
    {
      if (a1 >= 0)
        v34 = a1 & 0xFFFFFFFFFFFFFF8;
      else
        v34 = a1;
      swift_bridgeObjectRetain(a1);
      v25 = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v34);
      if (v25)
      {
LABEL_5:
        if ((a1 & 0xC000000000000001) != 0)
        {
          v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
        }
        else
        {
          if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_31;
          }
          v26 = *(id *)(a1 + 32);
        }
        v27 = v26;
        swift_bridgeObjectRelease(a1);
        swift_beginAccess(a5 + 16, aBlock, 33, 0);
        v25 = *v24;
        a1 = v27;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v25);
        *v24 = v25;
        v54 = v14;
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
LABEL_9:
          v30 = v25[2];
          v29 = v25[3];
          if (v30 >= v29 >> 1)
          {
            v25 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((_QWORD *)(v29 > 1), v30 + 1, 1, v25);
            *v24 = v25;
          }
          v25[2] = v30 + 1;
          v31 = &v25[2 * v30];
          v32 = v55;
          v31[4] = a1;
          v31[5] = v32;
          swift_endAccess(aBlock);

          v14 = v54;
          goto LABEL_18;
        }
LABEL_31:
        v25 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v25[2] + 1, 1, v25);
        *v24 = v25;
        goto LABEL_9;
      }
    }
    else
    {
      v25 = *(_QWORD **)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a1);
      if (v25)
        goto LABEL_5;
    }
    swift_bridgeObjectRelease(a1);
  }
LABEL_18:
  v35 = (uint64_t *)(v62 + 16);
  swift_beginAccess(v62 + 16, v65, 1, 0);
  v36 = *v35 + 1;
  if (__OFADD__(*v35, 1))
  {
    __break(1u);
    goto LABEL_25;
  }
  *v35 = v36;
  if ((unint64_t)a8 >> 62)
  {
LABEL_25:
    if (a8 < 0)
      v52 = a8;
    else
      v52 = a8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a8);
    v37 = _CocoaArrayWrapper.endIndex.getter(v52);
    swift_bridgeObjectRelease(a8);
    goto LABEL_21;
  }
  v37 = *(_QWORD *)((a8 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_21:
  v38 = a4;
  v39 = v56;
  if (v36 == v37)
  {
    swift_beginAccess(a5 + 16, aBlock, 33, 0);
    specialized MutableCollection<>.sort(by:)((_QWORD *)(a5 + 16));
    swift_endAccess(aBlock);
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue, OS_dispatch_queue_ptr);
    v41 = (void *)static OS_dispatch_queue.main.getter(v40);
    v42 = (_QWORD *)swift_allocObject(&unk_1001E8C90, 48, 7);
    v42[2] = a3;
    v42[3] = a4;
    v42[4] = v39;
    v42[5] = v23;
    aBlock[4] = partial apply for closure #2 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsForBundle(previewOnly:previewMax:style:completionHandler:);
    v64 = v42;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = &block_descriptor_19;
    v43 = _Block_copy(aBlock);
    v44 = v64;
    swift_retain(v38);
    swift_retain(v39);
    swift_retain(v23);
    swift_release(v44);
    v45 = v57;
    static DispatchQoS.unspecified.getter(v46);
    aBlock[0] = _swiftEmptyArrayStorage;
    v47 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    v49 = lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags], (uint64_t)&protocol conformance descriptor for [A]);
    v51 = v58;
    v50 = v59;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v48, v49, v59, v47);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v45, v51, v43);
    _Block_release(v43);
    swift_release(v23);

    (*(void (**)(char *, uint64_t))(v14 + 8))(v51, v50);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v45, v61);
  }
  else
  {
    *(_QWORD *)&result = swift_release(v23).n128_u64[0];
  }
  return result;
}

uint64_t closure #2 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsForBundle(previewOnly:previewMax:style:completionHandler:)(void (*a1)(_QWORD, _QWORD), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v21;
  void (*v22)(_QWORD, _QWORD);
  _QWORD *v23;
  _BYTE v24[24];

  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(a3 + 16, v24, 0, 0);
  v12 = *(_QWORD *)(a3 + 16);
  v13 = *(_QWORD *)(v12 + 16);
  v14 = _swiftEmptyArrayStorage;
  if (v13)
  {
    v21 = a2;
    v22 = a1;
    v23 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v12);
    specialized ContiguousArray.reserveCapacity(_:)(v13);
    v15 = 32;
    do
    {
      v16 = *(id *)(v12 + v15);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v16);
      v17 = v23[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v17);
      v18 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v16);
      specialized ContiguousArray._endMutation()(v18);
      v15 += 16;
      --v13;
    }
    while (v13);
    v14 = v23;
    swift_bridgeObjectRelease(v12);
    a1 = v22;
  }
  v19 = objc_msgSend(*(id *)(a4 + 16), "bundleIdentifier");
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  a1(v14, v11);
  swift_bridgeObjectRelease(v14);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void MOSuggestionAssetCacheManager.MOSuggestionAssetCompletionResultHolder.asset.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t MOAssetAndMediaType.mediaType.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

void *MOAssetAndMediaType.consolidatedMediaType.getter(void *a1)
{
  id v2;

  v2 = a1;
  return a1;
}

uint64_t static MOAssetAndMediaType.consolidatedSuggestionAssetMediaItemType(_:)(uint64_t result, char a2)
{
  int v2;

  v2 = a2 & 1;
  if (result == 7 && v2 == 0)
    return 7;
  return result;
}

void MOAssetAndMediaType.hash(into:)(uint64_t a1, void *a2, Swift::UInt a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v10 = v9;
  v11 = a2;
  String.hash(into:)(a1, v8, v10);

  swift_bridgeObjectRelease(v10);
  if ((a4 & 1) != 0)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    Hasher._combine(_:)(a3);
  }
}

uint64_t static MOAssetAndMediaType.== infix(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  return specialized static MOAssetAndMediaType.== infix(_:_:)(a1, a2, a3 & 1, a4, a5, a6 & 1);
}

Swift::Int MOAssetAndMediaType.hashValue.getter(void *a1, Swift::UInt a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  _QWORD v11[9];

  Hasher.init(_seed:)(v11, 0);
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v8 = v7;
  v9 = a1;
  String.hash(into:)(v11, v6, v8);

  swift_bridgeObjectRelease(v8);
  if ((a3 & 1) != 0)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    Hasher._combine(_:)(a2);
  }
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance MOAssetAndMediaType()
{
  uint64_t v0;
  Swift::UInt v1;
  void *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  _QWORD v9[9];

  v2 = *(void **)v0;
  v1 = *(_QWORD *)(v0 + 8);
  v3 = *(unsigned __int8 *)(v0 + 16);
  Hasher.init(_seed:)(v9, 0);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v6 = v5;
  v7 = v2;
  String.hash(into:)(v9, v4, v6);

  swift_bridgeObjectRelease(v6);
  if (v3 == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    Hasher._combine(_:)(v1);
  }
  return Hasher._finalize()();
}

void protocol witness for Hashable.hash(into:) in conformance MOAssetAndMediaType(uint64_t a1)
{
  uint64_t v1;
  Swift::UInt v3;
  void *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v4 = *(void **)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v5 = *(unsigned __int8 *)(v1 + 16);
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)v1);
  v8 = v7;
  v9 = v4;
  String.hash(into:)(a1, v6, v8);

  swift_bridgeObjectRelease(v8);
  if (v5 == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    Hasher._combine(_:)(v3);
  }
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance MOAssetAndMediaType(uint64_t a1)
{
  uint64_t v1;
  Swift::UInt v2;
  void *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD v10[9];

  v3 = *(void **)v1;
  v2 = *(_QWORD *)(v1 + 8);
  v4 = *(unsigned __int8 *)(v1 + 16);
  Hasher.init(_seed:)(v10, a1);
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v7 = v6;
  v8 = v3;
  String.hash(into:)(v10, v5, v7);

  swift_bridgeObjectRelease(v7);
  if (v4 == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    Hasher._combine(_:)(v2);
  }
  return Hasher._finalize()();
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance MOAssetAndMediaType(uint64_t a1, uint64_t a2)
{
  return specialized static MOAssetAndMediaType.== infix(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

uint64_t getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  void *ObjectType;

  v6 = specialized _StringGuts._deconstructUTF8<A>(scratch:)(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = (void *)swift_getObjectType(v6);
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      outlined init with copy of Any((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      outlined init with copy of Any((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain(a2);
  }
  __swift_destroy_boxed_opaque_existential_1(v12);
  return v7;
}

uint64_t specialized _StringGuts._deconstructUTF8<A>(scratch:)(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v12 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v12)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v12] || (char *)__src + v12 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter(0, HIBYTE(a6) & 0xF, __dst, a3);
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = _StringGuts._allocateForDeconstruct()(a5, a6);
    *a1 = v13;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = _StringObject.sharedUTF8.getter(a5, a6);
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while unwrapping an Optional value", 57, 2, "Swift/StringTesting.swift", 25, 2, 151, 0);
    __break(1u);
LABEL_17:
    LOBYTE(v14) = 2;
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableRawPointer.initializeMemory overlapping range", 58, 2, "Swift/UnsafeRawPointer.swift", 28, v14, 1173, 0);
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t _StringGuts._allocateForDeconstruct()(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = (uint64_t)specialized _copyCollectionToContiguousArray<A>(_:)(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
    v2 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

_QWORD *specialized _copyCollectionToContiguousArray<A>(_:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  _QWORD *result;
  int v10;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    while (1)
    {
      v5 = specialized _ContiguousArrayBuffer.init(_uninitializedCount:minimumCapacity:)(v4, 0);
      if (v4 < 0)
        break;
      v6 = v5;
      v7 = _StringGuts.copyUTF8(into:)(v5 + 4, v4, a1, a2);
      if ((v8 & 1) != 0)
        goto LABEL_14;
      if (v7 == v4)
        return v6;
      LOBYTE(v10) = 2;
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "invalid Collection: less than 'count' elements in collection", 60, 2, "Swift/ContiguousArrayBuffer.swift", 33, v10, 1122, 0);
      __break(1u);
LABEL_10:
      v4 = String.UTF8View._foreignCount()();
      if (!v4)
        return _swiftEmptyArrayStorage;
    }
    LOBYTE(v10) = 2;
    _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableBufferPointer with negative count", 46, 2, "Swift/UnsafeBufferPointer.swift", 31, v10, 71, 0);
    __break(1u);
LABEL_14:
    LOBYTE(v10) = 2;
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Insufficient space allocated to copy string contents", 52, 2, "Swift/StringUTF8View.swift", 26, v10, 430, 0);
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

_QWORD *specialized _ContiguousArrayBuffer.init(_uninitializedCount:minimumCapacity:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  size_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return _swiftEmptyArrayStorage;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UInt8>);
  v5 = (_QWORD *)swift_allocObject(v4, v2 + 32, 7);
  v6 = _swift_stdlib_malloc_size_0(v5);
  v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

uint64_t _StringGuts._slowEnsureMatchingEncoding(_:)(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;

  v5 = a1;
  v6 = a1 >> 16;
  v7 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v13 = String.UTF16View.index(_:offsetBy:)(15, v6, a2);
    v14 = v13 + (v7 << 16);
    v15 = v13 & 0xFFFFFFFFFFFFFFFCLL | v5 & 3;
    v16 = v14 & 0xFFFFFFFFFFFF0000;
    if (!v7)
      v16 = v15;
    return v16 | 4;
  }
  else
  {
    v8 = String.UTF8View._foreignIndex(_:offsetBy:)(15, v6);
    v9 = v8 + (v7 << 16);
    v10 = v8 & 0xFFFFFFFFFFFFFFFCLL | v5 & 3;
    v11 = v9 & 0xFFFFFFFFFFFF0000;
    if (!v7)
      v11 = v10;
    return v11 | 8;
  }
}

uint64_t specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UInt8>);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v8] || v13 >= &v14[v8])
  {
    memcpy(v13, v14, v8);
LABEL_28:
    swift_bridgeObjectRelease(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t specialized _merge<A>(low:mid:high:buffer:by:)(void **__src, id *a2, unint64_t a3, void **__dst)
{
  void **v4;
  id *v6;
  void **v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void **v14;
  void **v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  double v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  double v30;
  id *v31;
  void **v32;
  id *v33;
  id *v34;
  void **v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  double v40;
  void *v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  id v45;
  void *v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  unint64_t v50;
  double v51;
  id *v52;
  uint64_t result;
  void **v54;
  unint64_t v55;
  _QWORD v56[2];
  _QWORD v57[5];
  __int128 v58;
  __int128 v59;
  void **v60;
  void **v61;
  id *v62;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v62 = __src;
  v61 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 < -7)
      goto LABEL_83;
    if (__dst != a2 || &a2[v13] <= __dst)
      memmove(__dst, a2, 8 * v13);
    v32 = &v4[v13];
    v60 = v32;
    v62 = v6;
    if (v11 < 8 || v7 >= v6)
    {
LABEL_82:
      specialized $defer #1 <A>() in _merge<A>(low:mid:high:buffer:by:)(&v62, &v61, &v60);
      return 1;
    }
    v33 = (id *)(a3 - 8);
    v54 = v4;
    v34 = v6;
    while (1)
    {
      v55 = (unint64_t)v32;
      v35 = v32 - 1;
      v36 = *--v34;
      v37 = *(v32 - 1);
      v38 = v36;
      v39 = objc_msgSend(v37, "rankingDictionary");
      v40 = 0.0;
      if (v39)
      {
        v41 = v39;
        v42 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v39, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

        strcpy((char *)v56, "rankingScore");
        BYTE5(v56[1]) = 0;
        HIWORD(v56[1]) = -5120;
        AnyHashable.init<A>(_:)(v57, v56, &type metadata for String, &protocol witness table for String);
        if (*(_QWORD *)(v42 + 16)
          && (v43 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v57), (v44 & 1) != 0))
        {
          outlined init with copy of Any(*(_QWORD *)(v42 + 56) + 32 * v43, (uint64_t)&v58);
        }
        else
        {
          v58 = 0u;
          v59 = 0u;
        }
        swift_bridgeObjectRelease(v42);
        outlined destroy of AnyHashable((uint64_t)v57);
        if (*((_QWORD *)&v59 + 1))
        {
          if ((swift_dynamicCast(v56, &v58, (char *)&type metadata for Any + 8, &type metadata for Double, 6) & 1) != 0)
            v40 = *(double *)v56;
        }
        else
        {
          outlined destroy of Any?((uint64_t)&v58, &demangling cache variable for type metadata for Any?);
        }
      }
      v45 = objc_msgSend(v38, "rankingDictionary");
      if (v45)
      {
        v46 = v45;
        v47 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v45, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

        strcpy((char *)v56, "rankingScore");
        BYTE5(v56[1]) = 0;
        HIWORD(v56[1]) = -5120;
        AnyHashable.init<A>(_:)(v57, v56, &type metadata for String, &protocol witness table for String);
        if (*(_QWORD *)(v47 + 16)
          && (v48 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v57), (v49 & 1) != 0))
        {
          outlined init with copy of Any(*(_QWORD *)(v47 + 56) + 32 * v48, (uint64_t)&v58);
        }
        else
        {
          v58 = 0u;
          v59 = 0u;
        }
        v50 = (unint64_t)v54;
        swift_bridgeObjectRelease(v47);
        outlined destroy of AnyHashable((uint64_t)v57);
        if (*((_QWORD *)&v59 + 1))
        {
          if ((swift_dynamicCast(v56, &v58, (char *)&type metadata for Any + 8, &type metadata for Double, 6) & 1) != 0)
          {
            v51 = *(double *)v56;

            goto LABEL_70;
          }
        }
        else
        {
          outlined destroy of Any?((uint64_t)&v58, &demangling cache variable for type metadata for Any?);
        }

        v51 = 0.0;
      }
      else
      {

        v51 = 0.0;
        v50 = (unint64_t)v54;
      }
LABEL_70:
      v52 = v33 + 1;
      v32 = (void **)v55;
      if (v51 >= v40)
      {
        v60 = v35;
        if ((unint64_t)v52 < v55 || (unint64_t)v33 >= v55 || v52 != (id *)v55)
          *v33 = *v35;
        v34 = v6;
        v32 = v35;
        if ((unint64_t)v35 <= v50)
          goto LABEL_82;
      }
      else
      {
        if (v52 != v6 || v33 >= v6)
          *v33 = *v34;
        v62 = v34;
        if (v55 <= v50)
          goto LABEL_82;
      }
      --v33;
      v6 = v34;
      if (v34 <= v7)
        goto LABEL_82;
    }
  }
  if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[v10];
    v60 = v14;
    if (v8 >= 8 && (unint64_t)v6 < a3)
    {
      while (1)
      {
        v15 = v4;
        v16 = *v4;
        v17 = *v6;
        v18 = v16;
        v19 = objc_msgSend(v17, "rankingDictionary");
        v20 = 0.0;
        if (v19)
        {
          v21 = v19;
          v22 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v19, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

          strcpy((char *)v56, "rankingScore");
          BYTE5(v56[1]) = 0;
          HIWORD(v56[1]) = -5120;
          AnyHashable.init<A>(_:)(v57, v56, &type metadata for String, &protocol witness table for String);
          if (*(_QWORD *)(v22 + 16)
            && (v23 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v57), (v24 & 1) != 0))
          {
            outlined init with copy of Any(*(_QWORD *)(v22 + 56) + 32 * v23, (uint64_t)&v58);
          }
          else
          {
            v58 = 0u;
            v59 = 0u;
          }
          swift_bridgeObjectRelease(v22);
          outlined destroy of AnyHashable((uint64_t)v57);
          if (*((_QWORD *)&v59 + 1))
          {
            if ((swift_dynamicCast(v56, &v58, (char *)&type metadata for Any + 8, &type metadata for Double, 6) & 1) != 0)
              v20 = *(double *)v56;
          }
          else
          {
            outlined destroy of Any?((uint64_t)&v58, &demangling cache variable for type metadata for Any?);
          }
        }
        v25 = objc_msgSend(v18, "rankingDictionary");
        if (v25)
        {
          v26 = v25;
          v27 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v25, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

          strcpy((char *)v56, "rankingScore");
          BYTE5(v56[1]) = 0;
          HIWORD(v56[1]) = -5120;
          AnyHashable.init<A>(_:)(v57, v56, &type metadata for String, &protocol witness table for String);
          if (*(_QWORD *)(v27 + 16)
            && (v28 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v57), (v29 & 1) != 0))
          {
            outlined init with copy of Any(*(_QWORD *)(v27 + 56) + 32 * v28, (uint64_t)&v58);
          }
          else
          {
            v58 = 0u;
            v59 = 0u;
          }
          v4 = v15;
          swift_bridgeObjectRelease(v27);
          outlined destroy of AnyHashable((uint64_t)v57);
          if (*((_QWORD *)&v59 + 1))
          {
            if ((swift_dynamicCast(v56, &v58, (char *)&type metadata for Any + 8, &type metadata for Double, 6) & 1) != 0)
            {
              v30 = *(double *)v56;

              if (v30 >= v20)
                goto LABEL_31;
              goto LABEL_36;
            }
          }
          else
          {
            outlined destroy of Any?((uint64_t)&v58, &demangling cache variable for type metadata for Any?);
          }

          if (v20 <= 0.0)
          {
LABEL_31:
            if (v7 != v4)
              *v7 = *v4;
            v61 = ++v4;
            v31 = v6;
            goto LABEL_40;
          }
        }
        else
        {

          v4 = v15;
          if (v20 <= 0.0)
            goto LABEL_31;
        }
LABEL_36:
        v31 = v6 + 1;
        if (v7 < v6 || v7 >= v31 || v7 != v6)
          *v7 = *v6;
LABEL_40:
        v62 = ++v7;
        if (v4 < v14)
        {
          v6 = v31;
          if ((unint64_t)v31 < a3)
            continue;
        }
        goto LABEL_82;
      }
    }
    goto LABEL_82;
  }
LABEL_83:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t specialized _merge<A>(low:mid:high:buffer:by:)(void **a1, id *a2, id *a3, id *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void **v17;
  char *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  char *v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  id *v28;
  id *v29;
  unint64_t v30;
  id *v31;
  id *v32;
  unint64_t v33;
  id *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  char *v39;
  id v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  uint64_t v44;
  id *v45;
  uint64_t result;
  uint64_t v47;
  void **v48;
  id *v49;
  unint64_t v50;
  void **v51;
  id *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  void **v58;
  id *v59;

  v8 = type metadata accessor for Date(0);
  v55 = *(_QWORD *)(v8 - 8);
  v56 = v8;
  v9 = __chkstk_darwin(v8);
  v54 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v52 = a3;
  v53 = (char *)&v47 - v11;
  v12 = (char *)a2 - (char *)a1;
  v13 = (char *)a2 - (char *)a1 + 7;
  if ((char *)a2 - (char *)a1 >= 0)
    v13 = (char *)a2 - (char *)a1;
  v14 = v13 >> 3;
  v15 = (char *)a3 - (char *)a2;
  v16 = v15 / 8;
  v59 = a1;
  v49 = a4;
  v58 = a4;
  if (v13 >> 3 >= v15 / 8)
  {
    if (v15 < -7)
      goto LABEL_43;
    v29 = v49;
    if (v49 != a2 || &a2[v16] <= v49)
      memmove(v49, a2, 8 * v16);
    v30 = (unint64_t)&v29[v16];
    v57 = (_QWORD *)v30;
    v59 = a2;
    if (v15 < 8 || a1 >= a2)
      goto LABEL_42;
    v31 = v52 - 1;
    v32 = a2;
    v48 = a1;
    while (1)
    {
      v52 = a2;
      v50 = v30;
      v51 = v31 + 1;
      v34 = (id *)(v30 - 8);
      v35 = *--v32;
      v36 = *(id *)(v30 - 8);
      v37 = v35;
      v38 = objc_msgSend(v36, "startDate");
      v39 = v53;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      v40 = objc_msgSend(v37, "startDate");
      v41 = v54;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      LOBYTE(v40) = static Date.> infix(_:_:)(v39, v41);
      v42 = *(void (**)(char *, uint64_t))(v55 + 8);
      v43 = v41;
      v44 = v56;
      v42(v43, v56);
      v42(v39, v44);

      if ((v40 & 1) != 0)
        break;
      v57 = v34;
      v32 = v52;
      if ((unint64_t)v51 < v50 || (unint64_t)v31 >= v50)
      {
        *v31 = *v34;
        v30 = (unint64_t)v34;
        goto LABEL_30;
      }
      v33 = (unint64_t)v48;
      v45 = v49;
      if (v51 != (void **)v50)
        *v31 = *v34;
      v30 = (unint64_t)v34;
      if (v34 <= v45)
        goto LABEL_42;
LABEL_31:
      --v31;
      a2 = v32;
      if ((unint64_t)v32 <= v33)
        goto LABEL_42;
    }
    v30 = v50;
    if (v51 != v52 || v31 >= v52)
      *v31 = *v32;
    v59 = v32;
LABEL_30:
    v33 = (unint64_t)v48;
    if (v30 <= (unint64_t)v49)
      goto LABEL_42;
    goto LABEL_31;
  }
  if (v12 >= -7)
  {
    v17 = v49;
    if (v49 != a1 || &a1[v14] <= v49)
      memmove(v49, a1, 8 * v14);
    v51 = &v17[v14];
    v57 = v51;
    if (v12 >= 8 && a2 < v52)
    {
      v18 = v53;
      do
      {
        v19 = *v17;
        v20 = *a2;
        v21 = v19;
        v22 = objc_msgSend(v20, "startDate");
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        v23 = objc_msgSend(v21, "startDate");
        v24 = v54;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        LOBYTE(v23) = static Date.> infix(_:_:)(v18, v24);
        v25 = *(void (**)(char *, uint64_t))(v55 + 8);
        v26 = v24;
        v27 = v56;
        v25(v26, v56);
        v25(v18, v27);

        if ((v23 & 1) != 0)
        {
          v28 = a2 + 1;
          if (a1 < a2 || a1 >= v28 || a1 != a2)
            *a1 = *a2;
        }
        else
        {
          if (a1 != v17)
            *a1 = *v17;
          v58 = ++v17;
          v28 = a2;
        }
        v59 = ++a1;
        if (v17 >= v51)
          break;
        a2 = v28;
      }
      while (v28 < v52);
    }
LABEL_42:
    specialized $defer #1 <A>() in _merge<A>(low:mid:high:buffer:by:)(&v59, &v58, &v57);
    return 1;
  }
LABEL_43:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t specialized _merge<A>(low:mid:high:buffer:by:)(char *a1, char *a2, char *a3, char *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  char *v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  unint64_t v30;
  char *v31;
  char *v32;
  unint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  char *v39;
  id v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t result;
  uint64_t v47;
  char *v48;
  char *v49;
  unint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  char *v58;
  char *v59;

  v8 = type metadata accessor for Date(0);
  v55 = *(_QWORD *)(v8 - 8);
  v56 = v8;
  v9 = __chkstk_darwin(v8);
  v54 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v52 = a3;
  v53 = (char *)&v47 - v11;
  v12 = a2 - a1;
  v13 = a2 - a1 + 7;
  if (a2 - a1 >= 0)
    v13 = a2 - a1;
  v14 = v13 >> 3;
  v15 = a3 - a2;
  v16 = v15 / 8;
  v59 = a1;
  v49 = a4;
  v58 = a4;
  if (v13 >> 3 >= v15 / 8)
  {
    if (v15 < -7)
      goto LABEL_43;
    v29 = v49;
    if (v49 != a2 || &a2[8 * v16] <= v49)
      memmove(v49, a2, 8 * v16);
    v30 = (unint64_t)&v29[8 * v16];
    v57 = (_QWORD *)v30;
    v59 = a2;
    if (v15 < 8 || a1 >= a2)
      goto LABEL_42;
    v31 = v52 - 8;
    v32 = a2;
    v48 = a1;
    while (1)
    {
      v52 = a2;
      v50 = v30;
      v51 = v31 + 8;
      v34 = (char *)(v30 - 8);
      v35 = *(_QWORD *)(v30 - 8);
      v36 = *((_QWORD *)v32 - 1);
      v32 -= 8;
      v37 = *(void **)(v35 + 16);
      swift_retain(v35);
      swift_retain(v36);
      v38 = objc_msgSend(v37, "displayStartDate");
      v39 = v53;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      v40 = objc_msgSend(*(id *)(v36 + 16), "displayStartDate");
      v41 = v54;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      LOBYTE(v40) = static Date.< infix(_:_:)(v39, v41);
      v42 = *(void (**)(char *, uint64_t))(v55 + 8);
      v43 = v41;
      v44 = v56;
      v42(v43, v56);
      v42(v39, v44);
      swift_release(v35);
      swift_release(v36);
      if ((v40 & 1) != 0)
        break;
      v57 = v34;
      v32 = v52;
      if ((unint64_t)v51 < v50 || (unint64_t)v31 >= v50)
      {
        *(_QWORD *)v31 = *(_QWORD *)v34;
        v30 = (unint64_t)v34;
        goto LABEL_30;
      }
      v33 = (unint64_t)v48;
      v45 = v49;
      if (v51 != (char *)v50)
        *(_QWORD *)v31 = *(_QWORD *)v34;
      v30 = (unint64_t)v34;
      if (v34 <= v45)
        goto LABEL_42;
LABEL_31:
      v31 -= 8;
      a2 = v32;
      if ((unint64_t)v32 <= v33)
        goto LABEL_42;
    }
    v30 = v50;
    if (v51 != v52 || v31 >= v52)
      *(_QWORD *)v31 = *(_QWORD *)v32;
    v59 = v32;
LABEL_30:
    v33 = (unint64_t)v48;
    if (v30 <= (unint64_t)v49)
      goto LABEL_42;
    goto LABEL_31;
  }
  if (v12 >= -7)
  {
    v17 = v49;
    if (v49 != a1 || &a1[8 * v14] <= v49)
      memmove(v49, a1, 8 * v14);
    v51 = &v17[8 * v14];
    v57 = v51;
    if (v12 >= 8 && a2 < v52)
    {
      v18 = v53;
      do
      {
        v19 = *(_QWORD *)a2;
        v20 = *(_QWORD *)v17;
        v21 = *(void **)(*(_QWORD *)a2 + 16);
        swift_retain(*(_QWORD *)a2);
        swift_retain(v20);
        v22 = objc_msgSend(v21, "displayStartDate");
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        v23 = objc_msgSend(*(id *)(v20 + 16), "displayStartDate");
        v24 = v54;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        LOBYTE(v23) = static Date.< infix(_:_:)(v18, v24);
        v25 = *(void (**)(char *, uint64_t))(v55 + 8);
        v26 = v24;
        v27 = v56;
        v25(v26, v56);
        v25(v18, v27);
        swift_release(v19);
        swift_release(v20);
        if ((v23 & 1) != 0)
        {
          v28 = a2 + 8;
          if (a1 < a2 || a1 >= v28 || a1 != a2)
            *(_QWORD *)a1 = *(_QWORD *)a2;
        }
        else
        {
          if (a1 != v17)
            *(_QWORD *)a1 = *(_QWORD *)v17;
          v17 += 8;
          v58 = v17;
          v28 = a2;
        }
        a1 += 8;
        v59 = a1;
        if (v17 >= v51)
          break;
        a2 = v28;
      }
      while (v28 < v52);
    }
LABEL_42:
    specialized $defer #1 <A>() in _merge<A>(low:mid:high:buffer:by:)(&v59, &v58, &v57);
    return 1;
  }
LABEL_43:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t specialized _merge<A>(low:mid:high:buffer:by:)(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  id v19;
  double v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  double v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  double v41;
  void *v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  id v46;
  void *v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  unint64_t v51;
  double v52;
  char *v53;
  uint64_t result;
  char *v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  _QWORD v59[5];
  __int128 v60;
  __int128 v61;
  char *v62;
  char *v63;
  char *v64;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v64 = __src;
  v63 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 < -7)
      goto LABEL_83;
    if (__dst != a2 || &a2[8 * v13] <= __dst)
      memmove(__dst, a2, 8 * v13);
    v32 = &v4[8 * v13];
    v62 = v32;
    v64 = v6;
    if (v11 < 8 || v7 >= v6)
    {
LABEL_82:
      specialized $defer #1 <A>() in _merge<A>(low:mid:high:buffer:by:)(&v64, &v63, &v62);
      return 1;
    }
    v33 = (char *)(a3 - 8);
    v55 = v4;
    v34 = v6;
    while (1)
    {
      v56 = (unint64_t)v32;
      v35 = v32 - 8;
      v36 = *((_QWORD *)v32 - 1);
      v38 = *((_QWORD *)v34 - 1);
      v34 -= 8;
      v37 = v38;
      v39 = *(void **)(v36 + 16);
      swift_retain(v36);
      v40 = objc_msgSend(v39, "rankingDictionary", swift_retain(v38).n128_f64[0]);
      v41 = 0.0;
      if (v40)
      {
        v42 = v40;
        v43 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v40, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

        v57 = 0x726F635365736162;
        v58 = 0xE900000000000065;
        AnyHashable.init<A>(_:)(v59, &v57, &type metadata for String, &protocol witness table for String);
        if (*(_QWORD *)(v43 + 16)
          && (v44 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v59), (v45 & 1) != 0))
        {
          outlined init with copy of Any(*(_QWORD *)(v43 + 56) + 32 * v44, (uint64_t)&v60);
        }
        else
        {
          v60 = 0u;
          v61 = 0u;
        }
        swift_bridgeObjectRelease(v43);
        outlined destroy of AnyHashable((uint64_t)v59);
        if (*((_QWORD *)&v61 + 1))
        {
          if ((swift_dynamicCast(&v57, &v60, (char *)&type metadata for Any + 8, &type metadata for Double, 6) & 1) != 0)
            v41 = *(double *)&v57;
        }
        else
        {
          outlined destroy of Any?((uint64_t)&v60, &demangling cache variable for type metadata for Any?);
        }
      }
      v46 = objc_msgSend(*(id *)(v37 + 16), "rankingDictionary");
      if (v46)
      {
        v47 = v46;
        v48 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v46, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

        v57 = 0x726F635365736162;
        v58 = 0xE900000000000065;
        AnyHashable.init<A>(_:)(v59, &v57, &type metadata for String, &protocol witness table for String);
        if (*(_QWORD *)(v48 + 16)
          && (v49 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v59), (v50 & 1) != 0))
        {
          outlined init with copy of Any(*(_QWORD *)(v48 + 56) + 32 * v49, (uint64_t)&v60);
        }
        else
        {
          v60 = 0u;
          v61 = 0u;
        }
        v51 = (unint64_t)v55;
        swift_bridgeObjectRelease(v48);
        outlined destroy of AnyHashable((uint64_t)v59);
        if (*((_QWORD *)&v61 + 1))
        {
          if ((swift_dynamicCast(&v57, &v60, (char *)&type metadata for Any + 8, &type metadata for Double, 6) & 1) != 0)
          {
            v52 = *(double *)&v57;
            swift_release(v36);
            swift_release(v37);
            goto LABEL_70;
          }
        }
        else
        {
          outlined destroy of Any?((uint64_t)&v60, &demangling cache variable for type metadata for Any?);
        }
        swift_release(v36);
        swift_release(v37);
        v52 = 0.0;
      }
      else
      {
        swift_release(v36);
        swift_release(v37);
        v52 = 0.0;
        v51 = (unint64_t)v55;
      }
LABEL_70:
      v53 = v33 + 8;
      v32 = (char *)v56;
      if (v52 >= v41)
      {
        v62 = v35;
        if ((unint64_t)v53 < v56 || (unint64_t)v33 >= v56 || v53 != (char *)v56)
          *(_QWORD *)v33 = *(_QWORD *)v35;
        v34 = v6;
        v32 = v35;
        if ((unint64_t)v35 <= v51)
          goto LABEL_82;
      }
      else
      {
        if (v53 != v6 || v33 >= v6)
          *(_QWORD *)v33 = *(_QWORD *)v34;
        v64 = v34;
        if (v56 <= v51)
          goto LABEL_82;
      }
      v33 -= 8;
      v6 = v34;
      if (v34 <= v7)
        goto LABEL_82;
    }
  }
  if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[8 * v10];
    v62 = v14;
    if (v8 >= 8 && (unint64_t)v6 < a3)
    {
      while (1)
      {
        v15 = *(_QWORD *)v6;
        v16 = v4;
        v17 = *(_QWORD *)v4;
        v18 = *(void **)(*(_QWORD *)v6 + 16);
        swift_retain(*(_QWORD *)v6);
        v19 = objc_msgSend(v18, "rankingDictionary", swift_retain(v17).n128_f64[0]);
        v20 = 0.0;
        if (v19)
        {
          v21 = v19;
          v22 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v19, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

          v57 = 0x726F635365736162;
          v58 = 0xE900000000000065;
          AnyHashable.init<A>(_:)(v59, &v57, &type metadata for String, &protocol witness table for String);
          if (*(_QWORD *)(v22 + 16)
            && (v23 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v59), (v24 & 1) != 0))
          {
            outlined init with copy of Any(*(_QWORD *)(v22 + 56) + 32 * v23, (uint64_t)&v60);
          }
          else
          {
            v60 = 0u;
            v61 = 0u;
          }
          swift_bridgeObjectRelease(v22);
          outlined destroy of AnyHashable((uint64_t)v59);
          if (*((_QWORD *)&v61 + 1))
          {
            if ((swift_dynamicCast(&v57, &v60, (char *)&type metadata for Any + 8, &type metadata for Double, 6) & 1) != 0)
              v20 = *(double *)&v57;
          }
          else
          {
            outlined destroy of Any?((uint64_t)&v60, &demangling cache variable for type metadata for Any?);
          }
        }
        v25 = objc_msgSend(*(id *)(v17 + 16), "rankingDictionary");
        if (v25)
        {
          v26 = v25;
          v27 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v25, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

          v57 = 0x726F635365736162;
          v58 = 0xE900000000000065;
          AnyHashable.init<A>(_:)(v59, &v57, &type metadata for String, &protocol witness table for String);
          if (*(_QWORD *)(v27 + 16)
            && (v28 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v59), (v29 & 1) != 0))
          {
            outlined init with copy of Any(*(_QWORD *)(v27 + 56) + 32 * v28, (uint64_t)&v60);
          }
          else
          {
            v60 = 0u;
            v61 = 0u;
          }
          v4 = v16;
          swift_bridgeObjectRelease(v27);
          outlined destroy of AnyHashable((uint64_t)v59);
          if (*((_QWORD *)&v61 + 1))
          {
            if ((swift_dynamicCast(&v57, &v60, (char *)&type metadata for Any + 8, &type metadata for Double, 6) & 1) != 0)
            {
              v30 = *(double *)&v57;
              swift_release(v15);
              swift_release(v17);
              if (v30 >= v20)
                goto LABEL_31;
              goto LABEL_36;
            }
          }
          else
          {
            outlined destroy of Any?((uint64_t)&v60, &demangling cache variable for type metadata for Any?);
          }
          swift_release(v15);
          swift_release(v17);
          if (v20 <= 0.0)
          {
LABEL_31:
            if (v7 != v4)
              *(_QWORD *)v7 = *(_QWORD *)v4;
            v4 += 8;
            v63 = v4;
            v31 = v6;
            goto LABEL_40;
          }
        }
        else
        {
          swift_release(v15);
          swift_release(v17);
          v4 = v16;
          if (v20 <= 0.0)
            goto LABEL_31;
        }
LABEL_36:
        v31 = v6 + 8;
        if (v7 < v6 || v7 >= v31 || v7 != v6)
          *(_QWORD *)v7 = *(_QWORD *)v6;
LABEL_40:
        v7 += 8;
        v64 = v7;
        if (v4 < v14)
        {
          v6 = v31;
          if ((unint64_t)v31 < a3)
            continue;
        }
        goto LABEL_82;
      }
    }
    goto LABEL_82;
  }
LABEL_83:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t result;
  char *v23;
  char *v24;
  char *v25;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v25 = __src;
  v24 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v18 = &v4[16 * v13];
      v23 = v18;
      v25 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v19 = (char *)(a3 - 16);
        do
        {
          v20 = v19 + 16;
          if (*((_QWORD *)v18 - 1) >= *((_QWORD *)v6 - 1))
          {
            v23 = v18 - 16;
            if (v20 < v18 || v19 >= v18 || v20 != v18)
              *(_OWORD *)v19 = *((_OWORD *)v18 - 1);
            v21 = v6;
            v18 -= 16;
            if (v6 <= v7)
              break;
          }
          else
          {
            v21 = v6 - 16;
            if (v20 != v6 || v19 >= v6)
              *(_OWORD *)v19 = *(_OWORD *)v21;
            v25 = v6 - 16;
            if (v21 <= v7)
              break;
          }
          v19 -= 16;
          v6 = v21;
        }
        while (v18 > v4);
      }
LABEL_44:
      specialized $defer #1 <A>() in _merge<A>(low:mid:high:buffer:by:)(&v25, &v24, &v23);
      return 1;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v23 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      v15 = v4;
      while (1)
      {
        if (*((_QWORD *)v6 + 1) >= *((_QWORD *)v15 + 1))
        {
          v4 = v15 + 16;
          v17 = v15;
          v16 = v6;
          if (v7 == v15)
          {
            v15 += 16;
            if (v7 < v4)
              goto LABEL_22;
          }
          else
          {
            v15 += 16;
          }
        }
        else
        {
          v16 = v6 + 16;
          v17 = v6;
          if (v7 == v6 && v7 < v16)
            goto LABEL_22;
        }
        *(_OWORD *)v7 = *(_OWORD *)v17;
LABEL_22:
        v7 += 16;
        if (v15 < v14)
        {
          v6 = v16;
          if ((unint64_t)v16 < a3)
            continue;
        }
        v24 = v4;
        v25 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t result;
  char *v23;
  const void *v24;
  char *v25;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v25 = __src;
  v24 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v18 = &v4[16 * v13];
      v23 = v18;
      v25 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v19 = (char *)(a3 - 16);
        do
        {
          v20 = v19 + 16;
          if (*((_QWORD *)v18 - 1) >= *((_QWORD *)v6 - 1))
          {
            v23 = v18 - 16;
            if (v20 < v18 || v19 >= v18 || v20 != v18)
              *(_OWORD *)v19 = *((_OWORD *)v18 - 1);
            v21 = v6;
            v18 -= 16;
            if (v6 <= v7)
              break;
          }
          else
          {
            v21 = v6 - 16;
            if (v20 != v6 || v19 >= v6)
              *(_OWORD *)v19 = *(_OWORD *)v21;
            v25 = v6 - 16;
            if (v21 <= v7)
              break;
          }
          v19 -= 16;
          v6 = v21;
        }
        while (v18 > v4);
      }
LABEL_44:
      specialized $defer #1 <A>() in _merge<A>(low:mid:high:buffer:by:)((void **)&v25, &v24, &v23);
      return 1;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v23 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      v15 = v4;
      while (1)
      {
        if (*((_QWORD *)v6 + 1) >= *((_QWORD *)v15 + 1))
        {
          v4 = v15 + 16;
          v17 = v15;
          v16 = v6;
          if (v7 == v15)
          {
            v15 += 16;
            if (v7 < v4)
              goto LABEL_22;
          }
          else
          {
            v15 += 16;
          }
        }
        else
        {
          v16 = v6 + 16;
          v17 = v6;
          if (v7 == v6 && v7 < v16)
            goto LABEL_22;
        }
        *(_OWORD *)v7 = *(_OWORD *)v17;
LABEL_22:
        v7 += 16;
        if (v15 < v14)
        {
          v6 = v16;
          if ((unint64_t)v16 < a3)
            continue;
        }
        v24 = v4;
        v25 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t specialized Array._copyContents(initializing:)(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return specialized Array._copyContents(initializing:)(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for MOSuggestionInterstitialListAssetViewModel, &lazy protocol witness table cache variable for type [MOSuggestionInterstitialListAssetViewModel] and conformance [A], &demangling cache variable for type metadata for [MOSuggestionInterstitialListAssetViewModel], (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))specialized protocol witness for Collection.subscript.read in conformance [A]);
}

{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  uint64_t (*v13)();
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type [MOResource] and conformance [A], &demangling cache variable for type metadata for [MOResource], (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [MOResource]);
          v13 = specialized protocol witness for Collection.subscript.read in conformance [A](v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MOResource, MOResource_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

{
  return specialized Array._copyContents(initializing:)(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for MOSuggestionAssetReference, &lazy protocol witness table cache variable for type [MOSuggestionAssetReference] and conformance [A], &demangling cache variable for type metadata for [MOSuggestionAssetReference], (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))specialized protocol witness for Collection.subscript.read in conformance [A]);
}

{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  uint64_t (*v13)();
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type [MOSuggestionAsset<Swift.AnyObject>] and conformance [A], &demangling cache variable for type metadata for [MOSuggestionAsset], (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [MOSuggestionAsset]);
          v13 = specialized protocol witness for Collection.subscript.read in conformance [A](v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  uint64_t (*v13)();
  _QWORD *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t result;
  uint64_t *v19[4];

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v17 = a3;
    else
      v17 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type [MOSuggestionCollectionViewCellViewModel] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [MOSuggestionCollectionViewCellViewModel], (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [MOSuggestionCollectionViewCellViewModel]);
          v13 = specialized protocol witness for Collection.subscript.read in conformance [A](v19, i, a3);
          v15 = *v14;
          v16 = swift_retain(*v14);
          ((void (*)(uint64_t **, _QWORD, __n128))v13)(v19, 0, v16);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for MOSuggestionCollectionViewCellViewModel();
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  uint64_t (*v13)();
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type [CLLocation] and conformance [A], &demangling cache variable for type metadata for [CLLocation], (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [CLLocation]);
          v13 = specialized protocol witness for Collection.subscript.read in conformance [A](v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for CLLocation, CLLocation_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t specialized Array._copyContents(initializing:)(unint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  uint64_t v22;
  void (*v23)(_BYTE *, _QWORD, __n128);
  _QWORD *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t result;
  _BYTE v29[32];

  v14 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v27 = a3;
    else
      v27 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v15 = _CocoaArrayWrapper.endIndex.getter(v27);
    swift_bridgeObjectRelease(a3);
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    if (a3 < 0)
      v18 = a3;
    else
      v18 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v19 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a3);
    if (v19 <= a2)
    {
      if (v15 >= 1)
      {
        v20 = lazy protocol witness table accessor for type [String] and conformance [A](a5, a6, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v15; ++i)
        {
          v22 = __swift_instantiateConcreteTypeFromMangledName(a6);
          v23 = (void (*)(_BYTE *, _QWORD, __n128))a7(v29, i, a3, v22, v20);
          v25 = *v24;
          v26 = swift_retain(*v24);
          v23(v29, 0, v26);
          *(_QWORD *)(a1 + 8 * i) = v25;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v17 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t specialized FlattenSequence<>.startIndex.getter(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(result + 16);
  if (!v1)
    return v1;
  v2 = result;
  v3 = *(_QWORD *)(result + 32);
  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v4 = *(_QWORD *)(result + 32);
    else
      v4 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(result + 32));
    v5 = _CocoaArrayWrapper.endIndex.getter(v4);
    result = swift_bridgeObjectRelease(v3);
    if (v5)
      return 0;
  }
  else if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    return 0;
  }
  v6 = v1 - 1;
  if (v1 == 1)
    return v1;
  v7 = 0;
  v8 = v2 + 40;
  while (v6 != v7)
  {
    v9 = *(_QWORD *)(v8 + 8 * v7);
    if ((unint64_t)v9 >> 62)
    {
      if (v9 < 0)
        v11 = *(_QWORD *)(v8 + 8 * v7);
      else
        v11 = v9 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(v8 + 8 * v7));
      v10 = _CocoaArrayWrapper.endIndex.getter(v11);
      result = swift_bridgeObjectRelease(v9);
    }
    else
    {
      v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (v10)
      return v7 + 1;
    if (v6 == ++v7)
      return v1;
  }
  __break(1u);
  return result;
}

uint64_t specialized FlattenSequence<>.distance(from:to:)(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;

  if (a4 != result)
  {
    v8 = result;
    if (a4 < result)
    {
      v7 = a3 & 1;
      v12 = result;
      v11 = a4;
      v10 = a5;
      a5 = a2;
      if ((a6 & 1) != 0)
        goto LABEL_20;
      goto LABEL_7;
    }
LABEL_19:
    v7 = a6 & 1;
    v12 = a4;
    v11 = v8;
    v10 = a2;
    if ((a3 & 1) != 0)
    {
LABEL_20:
      v16 = 0;
      v9 = 0;
      if ((uint64_t)v11 < v12)
        goto LABEL_21;
LABEL_36:
      if ((v7 & 1) == 0)
      {
        if ((v11 & 0x8000000000000000) != 0)
        {
LABEL_55:
          __break(1u);
          goto LABEL_56;
        }
        if (v11 >= *(_QWORD *)(a7 + 16))
        {
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
          goto LABEL_58;
        }
        v20 = __OFADD__(v9, a5);
        v9 += a5;
        if (v20)
        {
LABEL_58:
          __break(1u);
          goto LABEL_59;
        }
      }
      if (a4 >= v8)
        return v9;
      v20 = __OFSUB__(0, v9);
      v9 = -v9;
      if (!v20)
        return v9;
      goto LABEL_57;
    }
LABEL_7:
    if ((v11 & 0x8000000000000000) != 0)
      goto LABEL_45;
    if (v11 >= *(_QWORD *)(a7 + 16))
      goto LABEL_47;
    v9 = *(_QWORD *)(a7 + 8 * v11 + 32);
    if ((unint64_t)v9 >> 62)
      goto LABEL_49;
    v15 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    v16 = v15 - v10;
    if (!__OFSUB__(v15, v10))
      goto LABEL_11;
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  if ((a6 & 1) != 0)
  {
    if ((a3 & 1) != 0)
      return 0;
    while (1)
    {
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      v22 = v9 < 0 ? v9 : v9 & 0xFFFFFFFFFFFFFF8;
      v23 = a5;
      v24 = v7;
      swift_bridgeObjectRetain(v9);
      v25 = _CocoaArrayWrapper.endIndex.getter(v22);
      result = swift_bridgeObjectRelease(v9);
      v7 = v24;
      a5 = v23;
      v16 = v25 - v10;
      if (__OFSUB__(v25, v10))
        goto LABEL_54;
LABEL_11:
      ++v11;
      v9 = v16;
      if ((uint64_t)v11 >= v12)
        goto LABEL_36;
LABEL_21:
      if (v11 <= *(_QWORD *)(a7 + 16))
        v18 = *(_QWORD *)(a7 + 16);
      else
        v18 = v11;
      v9 = v16;
      while (v18 != v11)
      {
        v17 = a7 + 32;
        v19 = *(_QWORD *)(a7 + 32 + 8 * v11);
        if ((unint64_t)v19 >> 62)
        {
          if (v19 < 0)
            v21 = *(_QWORD *)(v17 + 8 * v11);
          else
            v21 = v19 & 0xFFFFFFFFFFFFFF8;
          v27 = a5;
          v26 = v7;
          swift_bridgeObjectRetain(*(_QWORD *)(v17 + 8 * v11));
          v10 = _CocoaArrayWrapper.endIndex.getter(v21);
          result = swift_bridgeObjectRelease(v19);
          v7 = v26;
          a5 = v27;
          v20 = __OFADD__(v9, v10);
          v9 += v10;
          if (v20)
          {
LABEL_35:
            __break(1u);
            goto LABEL_36;
          }
        }
        else
        {
          v10 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
          v20 = __OFADD__(v9, v10);
          v9 += v10;
          if (v20)
            goto LABEL_35;
        }
        if ((uint64_t)++v11 >= v12)
          goto LABEL_36;
      }
      __break(1u);
    }
  }
  if ((a3 & 1) == 0)
  {
    if (a4 < 0)
      goto LABEL_46;
    if (*(_QWORD *)(a7 + 16) <= (unint64_t)a4)
      goto LABEL_48;
    v9 = a5 - a2;
    if (!__OFSUB__(a5, a2))
      return v9;
    __break(1u);
    goto LABEL_19;
  }
LABEL_59:
  __break(1u);
  return result;
}

uint64_t specialized static MOAssetAndMediaType.== infix(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;

  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v13 = v12;
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v16 = v14;
  if (v11 == v15 && v13 == v14)
  {
    swift_bridgeObjectRelease_n(v13, 2);
    if ((a3 & 1) != 0)
    {
      v17 = a6 & 1;
      return v17 & 1;
    }
  }
  else
  {
    v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v15, v14, 0);
    swift_bridgeObjectRelease(v13);
    swift_bridgeObjectRelease(v16);
    v17 = v18 & a6;
    if ((v18 & 1) == 0 || (a3 & 1) != 0)
      return v17 & 1;
  }
  v17 = (a6 & 1) == 0 && a2 == a5;
  return v17 & 1;
}

void specialized MOSuggestionCollectionViewCellViewModel.assetSizes(style:assetCount:)(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1000D20F0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  _BYTE v12[64];

  if (one-time initialization token for tileSizesByCount != -1)
    swift_once(&one-time initialization token for tileSizesByCount, one-time initialization function for tileSizesByCount);
  v1 = static MOSuggestionLayoutEngine.FullWidth.tileSizesByCount;
  if (*(_QWORD *)(static MOSuggestionLayoutEngine.FullWidth.tileSizesByCount + 16)
    && (v2 = specialized __RawDictionaryStorage.find<A>(_:)(v0), (v3 & 1) != 0))
  {
    v9 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v2);
    swift_bridgeObjectRetain(v9);
  }
  else
  {
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
      swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    v4 = type metadata accessor for Logger(0);
    v5 = __swift_project_value_buffer(v4, (uint64_t)static MOAngelLogger.assets);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc(22, -1);
      *(_DWORD *)v8 = 134218240;
      v11 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, v12, v8 + 4);
      *(_WORD *)(v8 + 12) = 2048;
      v11 = v0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, v12, v8 + 14);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "[MOSuggestionCollectionViewCellViewModel] Cannot resolve asset sizes for %ld and count: %ld", (uint8_t *)v8, 0x16u);
      swift_slowDealloc(v8, -1, -1);
    }

    return 0;
  }
  return v9;
}

uint64_t sub_1000D23F8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000D2408()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000D242C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[5]);
  swift_bridgeObjectRelease(v0[7]);
  swift_release(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

void partial apply for closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:)(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t type metadata accessor for MOSuggestionCollectionViewModel()
{
  return objc_opt_self(_TtC16MomentsUIService31MOSuggestionCollectionViewModel);
}

uint64_t type metadata accessor for MOSuggestionCollectionViewCellViewModel()
{
  return objc_opt_self(_TtC16MomentsUIService39MOSuggestionCollectionViewCellViewModel);
}

uint64_t partial apply for closure #1 in MOSuggestionCollectionViewModel.fetchBundles()(char a1)
{
  uint64_t v1;

  return closure #1 in MOSuggestionCollectionViewModel.fetchBundles()(a1, v1);
}

double partial apply for closure #2 in MOSuggestionCollectionViewModel.fetchBundles()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return closure #2 in MOSuggestionCollectionViewModel.fetchBundles()(a1, a2, v2);
}

unint64_t specialized SuggestionCellStyle.init(rawValue:)(unint64_t result)
{
  if (result >= 6)
    return 6;
  return result;
}

uint64_t type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(uint64_t a1)
{
  return type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(a1, (uint64_t *)&type metadata singleton initialization cache for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult, (uint64_t)&nominal type descriptor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult);
}

uint64_t type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(uint64_t a1)
{
  return type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(a1, (uint64_t *)&type metadata singleton initialization cache for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult, (uint64_t)&nominal type descriptor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult);
}

uint64_t type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata(a1, a3);
  return result;
}

uint64_t sub_1000D2538()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000D255C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_bridgeObjectRelease(v0[7]);
  swift_release(v0[9]);
  return swift_deallocObject(v0, 80, 7);
}

void partial apply for closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolder(previewOnly:previewMax:style:typeSorted:completionHandler:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolder(previewOnly:previewMax:style:typeSorted:completionHandler:)(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(uint8_t **)(v1 + 32), *(uint8_t **)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t sub_1000D25D4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000D25E4()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_bridgeObjectRelease(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

double partial apply for closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsForBundle(previewOnly:previewMax:style:completionHandler:)(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsForBundle(previewOnly:previewMax:style:completionHandler:)(a1, *(_QWORD *)(v1 + 16), *(void (**)(_QWORD, char *))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

unint64_t lazy protocol witness table accessor for type MOSuggestionCollectionViewInteractionState and conformance MOSuggestionCollectionViewInteractionState()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MOSuggestionCollectionViewInteractionState and conformance MOSuggestionCollectionViewInteractionState;
  if (!lazy protocol witness table cache variable for type MOSuggestionCollectionViewInteractionState and conformance MOSuggestionCollectionViewInteractionState)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MOSuggestionCollectionViewInteractionState, &type metadata for MOSuggestionCollectionViewInteractionState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionCollectionViewInteractionState and conformance MOSuggestionCollectionViewInteractionState);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type SuggestionCellStyle and conformance SuggestionCellStyle()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SuggestionCellStyle and conformance SuggestionCellStyle;
  if (!lazy protocol witness table cache variable for type SuggestionCellStyle and conformance SuggestionCellStyle)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SuggestionCellStyle, &type metadata for SuggestionCellStyle);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SuggestionCellStyle and conformance SuggestionCellStyle);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in SuggestionCellStyle()
{
  return lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type [SuggestionCellStyle] and conformance [A], &demangling cache variable for type metadata for [SuggestionCellStyle], (uint64_t)&protocol conformance descriptor for [A]);
}

unint64_t lazy protocol witness table accessor for type MOAssetAndMediaType and conformance MOAssetAndMediaType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MOAssetAndMediaType and conformance MOAssetAndMediaType;
  if (!lazy protocol witness table cache variable for type MOAssetAndMediaType and conformance MOAssetAndMediaType)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MOAssetAndMediaType, &type metadata for MOAssetAndMediaType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MOAssetAndMediaType and conformance MOAssetAndMediaType);
  }
  return result;
}

uint64_t sub_1000D2758(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 400))();
}

uint64_t sub_1000D2780(uint64_t a1, uint64_t a2)
{
  _BYTE v4[40];

  outlined init with copy of Date?(a1, (uint64_t)v4, &demangling cache variable for type metadata for MOSuggestionCollectionViewDelegate?);
  return (*(uint64_t (**)(_BYTE *))(**(_QWORD **)a2 + 408))(v4);
}

uint64_t sub_1000D27C8@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 424))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1000D27FC(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 432))(*a1);
}

uint64_t sub_1000D2828@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 448))();
  *a2 = result;
  return result;
}

uint64_t sub_1000D2858(id *a1, uint64_t a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))(**(_QWORD **)a2 + 456);
  v4 = *a1;
  return v3(v2);
}

uint64_t sub_1000D2894@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 472))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1000D28C8(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 480))(*a1);
}

uint64_t sub_1000D28F4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 496))();
  *a2 = result;
  return result;
}

uint64_t sub_1000D2924(_QWORD *a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 504);
  v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

uint64_t sub_1000D2954@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 520))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1000D2988(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 528))(*a1);
}

uint64_t sub_1000D29B4@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 576))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1000D29E8(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 584))(*a1);
}

uint64_t sub_1000D2A14@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 632))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1000D2A48(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 640))(*a1);
}

uint64_t sub_1000D2A74@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 152))();
  *a2 = result;
  return result;
}

uint64_t sub_1000D2AA4(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 160))(*a1);
}

uint64_t sub_1000D2AD0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 176))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1000D2B00(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 184);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t sub_1000D2B44@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 200))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1000D2B74(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 208);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t sub_1000D2BB8@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 224))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1000D2BEC(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 232))(*a1);
}

uint64_t sub_1000D2C18@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 248))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1000D2C4C(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 256))(*a1);
}

uint64_t sub_1000D2C78@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 272))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1000D2CAC(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 280))(*a1);
}

uint64_t sub_1000D2CD8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 296))();
  *a2 = result;
  return result;
}

uint64_t sub_1000D2D08(_QWORD *a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 304);
  v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

uint64_t storeEnumTagSinglePayload for MOSuggestionCollectionViewInteractionState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1000D2D84 + 4 * byte_1001A152B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1000D2DB8 + 4 * byte_1001A1526[v4]))();
}

uint64_t sub_1000D2DB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000D2DC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000D2DC8);
  return result;
}

uint64_t sub_1000D2DD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000D2DDCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1000D2DE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000D2DE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MOSuggestionCollectionViewInteractionState()
{
  return &type metadata for MOSuggestionCollectionViewInteractionState;
}

uint64_t storeEnumTagSinglePayload for SuggestionCellStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1000D2E50 + 4 * byte_1001A1535[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1000D2E84 + 4 * byte_1001A1530[v4]))();
}

uint64_t sub_1000D2E84(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000D2E8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000D2E94);
  return result;
}

uint64_t sub_1000D2EA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000D2EA8);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1000D2EAC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000D2EB4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SuggestionCellStyle()
{
  return &type metadata for SuggestionCellStyle;
}

uint64_t initializeBufferWithCopyOfBuffer for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain(v4);
  }
  else
  {
    v5 = a1;
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v6 = *(int *)(a3 + 24);
    v7 = (void *)(a1 + v6);
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for UUID(0);
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v10 + 48);
    v12 = swift_bridgeObjectRetain(v4);
    if (v11(v8, 1, v9, v12))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v5;
}

uint64_t destroy for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(_QWORD *a1, uint64_t a2)
{
  return destroy for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(a1, a2, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t initializeWithCopy for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;

  v5 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v10 + 48);
  v12 = swift_bridgeObjectRetain(v5);
  if (v11(v8, 1, v9, v12))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

uint64_t *assignWithCopy for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a2[1];
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  a1[1] = v8;
  v9 = *(int *)(a3 + 24);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for UUID(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t *assignWithTake for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  a1[1] = a2[1];
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000D331C);
}

uint64_t sub_1000D331C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000D33A8);
}

char *sub_1000D33A8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

void type metadata completion function for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata completion function for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(a1, a2, a3, (uint64_t)&value witness table for Builtin.BridgeObject + 64);
}

uint64_t destroy for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(_QWORD *a1, uint64_t a2)
{
  return destroy for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(a1, a2, (void (*)(_QWORD))&_swift_release);
}

uint64_t destroy for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(_QWORD *a1, uint64_t a2, void (*a3)(_QWORD))
{
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  a3(*a1);
  v5 = (char *)a1 + *(int *)(a2 + 24);
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  return result;
}

uint64_t *assignWithCopy for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;

  v6 = *a1;
  v7 = *a2;
  *a1 = *a2;
  swift_retain(v7);
  swift_release(v6);
  v8 = a2[1];
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  a1[1] = v8;
  v9 = *(int *)(a3 + 24);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for UUID(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t *assignWithTake for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  a1[1] = a2[1];
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000D371C);
}

uint64_t sub_1000D371C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000D37B4);
}

char *sub_1000D37B4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)result = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

void type metadata completion function for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata completion function for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(a1, a2, a3, (uint64_t)"\b");
}

void type metadata completion function for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  unint64_t v6;
  _QWORD v7[3];

  v7[0] = a4;
  v7[1] = "\t";
  type metadata accessor for UUID?(319);
  if (v6 <= 0x3F)
  {
    v7[2] = *(_QWORD *)(v5 - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v7, a1 + 16);
  }
}

uint64_t initializeBufferWithCopyOfBuffer for MOAssetAndMediaType(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = v3;
  return a1;
}

uint64_t assignWithCopy for MOAssetAndMediaType(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v7;
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for MOAssetAndMediaType(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for MOAssetAndMediaType(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MOAssetAndMediaType(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MOAssetAndMediaType()
{
  return &type metadata for MOAssetAndMediaType;
}

uint64_t sub_1000D3A20()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Bool, @in_guaranteed Bool) -> (@out ())(char a1, char a2)
{
  uint64_t v2;
  uint64_t (*v3)(char *, char *);
  char v5;
  char v6;

  v3 = *(uint64_t (**)(char *, char *))(v2 + 16);
  v6 = a1;
  v5 = a2;
  return v3(&v6, &v5);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@unowned Bool, @unowned Bool) -> ()(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 16))(*a1, *a2);
}

uint64_t sub_1000D3AA4()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t partial apply for closure #2 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsForBundle(previewOnly:previewMax:style:completionHandler:)()
{
  uint64_t v0;

  return closure #2 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsForBundle(previewOnly:previewMax:style:completionHandler:)(*(void (**)(_QWORD, _QWORD))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_19(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000D3AFC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t partial apply for closure #1 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolder(previewOnly:previewMax:style:typeSorted:completionHandler:)()
{
  uint64_t v0;

  return closure #1 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolder(previewOnly:previewMax:style:typeSorted:completionHandler:)(*(_QWORD *)(v0 + 16), *(void (**)(char *, __n128))(v0 + 24));
}

uint64_t partial apply for closure #2 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolder(previewOnly:previewMax:style:typeSorted:completionHandler:)()
{
  return partial apply for closure #1 in static MOProtectedAppsManager.requiresChallenge(appSources:completion:)((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))closure #2 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolder(previewOnly:previewMax:style:typeSorted:completionHandler:));
}

uint64_t sub_1000D3B44()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void partial apply for closure #1 in closure #2 in MOSuggestionCollectionViewModel.fetchBundles()()
{
  uint64_t v0;

  closure #1 in closure #2 in MOSuggestionCollectionViewModel.fetchBundles()(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1000D3B7C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:)()
{
  uint64_t v0;

  return closure #1 in closure #1 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:)(*(_QWORD *)(v0 + 16), *(void (**)(char *))(v0 + 24));
}

uint64_t outlined init with copy of MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000D3BF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + v4));
  v6 = v0 + v4 + *(int *)(v1 + 24);
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t outlined init with take of MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #3 in closure #1 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(0)
                                      - 8)
                          + 80);
  return closure #3 in closure #1 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:)(*(_QWORD *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24), *(_QWORD *)(v0 + 32), v0 + ((v1 + 40) & ~v1));
}

uint64_t outlined destroy of MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t partial apply for closure #2 in closure #1 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:)()
{
  return partial apply for closure #1 in static MOProtectedAppsManager.requiresChallenge(appSources:completion:)((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))closure #2 in closure #1 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:));
}

id MOSuggestionInterstitialCarouselView.__allocating_init(controller:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return MOSuggestionInterstitialCarouselView.init(controller:)(a1);
}

Swift::Void __swiftcall MOSuggestionInterstitialCarouselView.updateLayout()()
{
  _QWORD *v0;
  BOOL v1;
  uint64_t v2;
  void *v3;
  Class isa;
  id v5;
  double v6;
  Class v7;
  uint64_t (*v8)(void);
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;

  MOSuggestionInterstitialCarouselView.setPageControlVisibility()();
  v1 = specialized static MOAngelRootViewController.isLandscape.getter();
  v2 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xC8))();
  v3 = (void *)v2;
  if (v1)
  {
    if (v2)
    {
      isa = MOSuggestionInterstitialCarouselView.generateLandscapeLayout()().super.isa;
      objc_msgSend(v3, "setCollectionViewLayout:animated:", isa, 0);

    }
    v5 = *(id *)((char *)v0
               + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_containerViewBottomConstraint);
    if (v5)
    {
      v6 = 0.0;
LABEL_10:
      v5 = objc_msgSend(v5, "setConstant:", v6);
    }
  }
  else
  {
    if (v2)
    {
      v7 = MOSuggestionInterstitialCarouselView.generateLayout()().super.isa;
      objc_msgSend(v3, "setCollectionViewLayout:animated:", v7, 0);

    }
    v5 = *(id *)((char *)v0
               + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_containerViewBottomConstraint);
    if (v5)
    {
      v6 = 100.0;
      goto LABEL_10;
    }
  }
  v8 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0xC8);
  v9 = (void *)((uint64_t (*)(id))v8)(v5);
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v9, "collectionViewLayout");

    objc_msgSend(v11, "invalidateLayout");
  }
  v12 = (void *)v8();
  if (v12)
  {
    v13 = v12;
    objc_msgSend(v12, "layoutIfNeeded");

  }
}

uint64_t MOSuggestionInterstitialCarouselView.assetTypeSummary.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  void *v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  Class isa;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  id v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD v45[4];
  _QWORD v46[2];

  v40 = objc_msgSend(objc_allocWithZone((Class)NSCountedSet), "init");
  v43 = v0;
  v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xE0))();
  if ((unint64_t)v1 >> 62)
    goto LABEL_30;
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
  {
LABEL_34:
    swift_bridgeObjectRelease(v1);
    if (one-time initialization token for COMMA_SEPARATOR != -1)
      swift_once(&one-time initialization token for COMMA_SEPARATOR, one-time initialization function for COMMA_SEPARATOR);
    v38 = specialized static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)(v40, 1, static MOSuggestionInterstitialListAssetViewModel.COMMA_SEPARATOR, *((uint64_t *)&static MOSuggestionInterstitialListAssetViewModel.COMMA_SEPARATOR + 1));

    return v38;
  }
LABEL_3:
  if (v2 >= 1)
  {
    v3 = 0;
    v4 = v1 & 0xC000000000000001;
    v44 = v1 + 32;
    v41 = v1 & 0xC000000000000001;
    v42 = v2;
    while (1)
    {
      if (v4)
      {
        v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v1);
      }
      else
      {
        v5 = *(_QWORD *)(v44 + 8 * v3);
        v6 = swift_retain(v5);
      }
      v7 = (*(uint64_t (**)(__n128))(*(_QWORD *)v5 + 632))(v6);
      if (!v7)
        goto LABEL_6;
      v8 = (void *)v7;
      v9 = (*(uint64_t (**)(void))(*(_QWORD *)v5 + 656))();
      if (v9 == 26)
        break;
      v10 = v9;
      v11 = (*(uint64_t (**)(void))((swift_isaMask & *v43) + 0x110))();
      v12 = (*(uint64_t (**)(void))(*(_QWORD *)v5 + 512))();
      v14 = v13;
      v45[0] = v12;
      v45[1] = v13;
      v46[0] = 35;
      v46[1] = 0xE100000000000000;
      v15 = lazy protocol witness table accessor for type String and conformance String();
      v16 = (_QWORD *)StringProtocol.components<A>(separatedBy:)(v46, &type metadata for String, &type metadata for String, v15, v15);
      if (!v16[2])
      {
        __break(1u);
LABEL_30:
        if (v1 < 0)
          v37 = v1;
        else
          v37 = v1 & 0xFFFFFFFFFFFFFF8;
        v2 = _CocoaArrayWrapper.endIndex.getter(v37);
        if (!v2)
          goto LABEL_34;
        goto LABEL_3;
      }
      v17 = v16;
      v18 = v1;
      v19 = v16[4];
      v20 = v16[5];
      swift_bridgeObjectRetain(v20);
      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease(v17);
      LOBYTE(v17) = specialized Set.contains(_:)(v19, v20, v11);
      swift_bridgeObjectRelease(v20);
      swift_bridgeObjectRelease(v11);
      if ((v17 & 1) == 0)
        goto LABEL_26;
      v21 = MOSuggestionAssetsTypeMultiPinMap;
      v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
      v24 = v23;
      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      v27 = v25;
      if (v22 == v26 && v24 == v25)
      {
        v28 = swift_bridgeObjectRelease_n(v24, 2);
      }
      else
      {
        v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v26, v25, 0);
        swift_bridgeObjectRelease(v24);
        v28 = swift_bridgeObjectRelease(v27);
        if ((v29 & 1) == 0)
          goto LABEL_25;
      }
      v30 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 1400))(v28);
      if ((v31 & 1) != 0)
      {
LABEL_25:
        LOBYTE(v45[0]) = v10;
        v35 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(v45, &type metadata for MOSuggestionAssetVisualSubType);
        objc_msgSend(v40, "addObject:", v35);
        swift_unknownObjectRelease(v35);
LABEL_26:
        swift_release(v5);

        v1 = v18;
        v4 = v41;
        v2 = v42;
        goto LABEL_7;
      }
      v32 = v30;
      v45[3] = &type metadata for MOSuggestionAssetVisualSubType;
      LOBYTE(v45[0]) = v10;
      if (v30 < 0)
        goto LABEL_38;
      v1 = v18;
      if (v30)
      {
        v33 = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(v30, (char *)&type metadata for Any + 8);
        v33[2] = v32;
        v34 = (uint64_t)(v33 + 4);
        v4 = v41;
        v2 = v42;
        do
        {
          outlined init with copy of Any((uint64_t)v45, v34);
          v34 += 32;
          --v32;
        }
        while (v32);
      }
      else
      {
        v33 = _swiftEmptyArrayStorage;
        v4 = v41;
        v2 = v42;
      }
      __swift_destroy_boxed_opaque_existential_1(v45);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v33);
      objc_msgSend(v40, "addObjectsFromArray:", isa);

      swift_release(v5);
LABEL_7:
      if (++v3 == v2)
        goto LABEL_34;
    }

LABEL_6:
    swift_release(v5);
    goto LABEL_7;
  }
  __break(1u);
LABEL_38:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
  return result;
}

void MOSuggestionInterstitialCarouselView.reloadCell(_:index:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t *, __n128);
  __n128 v11;
  uint64_t (*v12)(uint64_t *, _QWORD);
  unint64_t *v13;
  unint64_t *v14;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t *, _QWORD);
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD v46[3];

  v3 = v2;
  v6 = *(_QWORD *)((swift_isaMask & *v2) + 0xE0);
  v7 = ((uint64_t (*)(void))v6)();
  v8 = v7;
  if ((unint64_t)v7 >> 62)
  {
    if (v7 >= 0)
      v7 &= 0xFFFFFFFFFFFFFF8uLL;
    v9 = _CocoaArrayWrapper.endIndex.getter(v7);
  }
  else
  {
    v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v8);
  if (v9 <= a2)
  {
    if (serverManager._clientConnections == (NSMutableDictionary *)-1)
      goto LABEL_14;
    goto LABEL_28;
  }
  v10 = *(uint64_t (**)(uint64_t *, __n128))((swift_isaMask & *v3) + 0xF0);
  v11 = swift_retain(a1);
  v12 = (uint64_t (*)(uint64_t *, _QWORD))v10(&v45, v11);
  v14 = v13;
  v6 = *v13;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v13);
  *v14 = v6;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v6 & 0x8000000000000000) != 0
    || (v6 & 0x4000000000000000) != 0)
  {
    v6 = specialized _ArrayBuffer._consumeAndCreateNew()(v6);
    *v14 = v6;
  }
  if (a2 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) <= (unint64_t)a2)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    swift_once(&serverManager._clientConnections, one-time initialization function for shared);
LABEL_14:
    v23 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v23, (uint64_t)static MOAngelLogger.shared);
    v42 = v3;
    v24 = Logger.logObject.getter(v42);
    v25 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc(22, -1);
      *(_DWORD *)v26 = 134218240;
      v45 = a2;
      v27 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, v46, v26 + 4);
      *(_WORD *)(v26 + 12) = 2048;
      v28 = ((uint64_t (*)(uint64_t))v6)(v27);
      v29 = v28;
      if ((unint64_t)v28 >> 62)
      {
        if (v28 >= 0)
          v28 &= 0xFFFFFFFFFFFFFF8uLL;
        v30 = _CocoaArrayWrapper.endIndex.getter(v28);
      }
      else
      {
        v30 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
      }

      swift_bridgeObjectRelease(v29);
      v45 = v30;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, v46, v26 + 14);

      _os_log_impl((void *)&_mh_execute_header, v24, v25, "[MOSuggestionInterstitialCarouselView] reloadCell index out of bounds=%ld, size=%ld", (uint8_t *)v26, 0x16u);
      swift_slowDealloc(v26, -1, -1);

    }
    else
    {

    }
    return;
  }
  v16 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 8 * a2 + 0x20);
  *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 8 * a2 + 0x20) = a1;
  swift_release(v16);
  specialized Array._endMutation()(v17);
  v18 = v12(&v45, 0);
  v19 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 512);
  v20 = v19(v18);
  v22 = v21;
  if (v20 == 0x6C6F686563616C70 && v21 == 0xEB00000000726564)
  {
    swift_bridgeObjectRelease(0xEB00000000726564);
LABEL_22:
    MOSuggestionInterstitialCarouselView.reloadAll()();
    return;
  }
  v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v21, 0x6C6F686563616C70, 0xEB00000000726564, 0);
  v32 = swift_bridgeObjectRelease(v22);
  if ((v31 & 1) != 0)
    goto LABEL_22;
  v33 = v19(v32);
  v35 = v34;
  v45 = v33;
  v46[0] = v34;
  v43 = 35;
  v44 = 0xE100000000000000;
  v36 = lazy protocol witness table accessor for type String and conformance String();
  v37 = (_QWORD *)StringProtocol.components<A>(separatedBy:)(&v43, &type metadata for String, &type metadata for String, v36, v36);
  if (v37[2])
  {
    v38 = v37;
    v39 = v37[4];
    v40 = v37[5];
    swift_bridgeObjectRetain(v40);
    swift_bridgeObjectRelease(v35);
    swift_bridgeObjectRelease(v38);
    v41 = (void (*)(uint64_t *, _QWORD))(*(uint64_t (**)(uint64_t *))((swift_isaMask & *v3) + 0x120))(&v45);
    specialized Set._Variant.insert(_:)(&v43, v39, v40);
    swift_bridgeObjectRelease(v44);
    v41(&v45, 0);
    goto LABEL_22;
  }
  __break(1u);
}

Swift::Void __swiftcall MOSuggestionInterstitialCarouselView.reloadAll()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD aBlock[5];
  uint64_t v17;

  v0 = type metadata accessor for DispatchWorkItemFlags(0);
  v15 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DispatchQoS(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MOSuggestionInterstitialCarouselView.configurePageControl()();
  MOSuggestionInterstitialCarouselView.refreshCheckmarksState()();
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue, OS_dispatch_queue_ptr);
  v7 = (void *)static OS_dispatch_queue.main.getter();
  v8 = swift_allocObject(&unk_1001E8F10, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16);
  aBlock[4] = partial apply for closure #1 in MOSuggestionInterstitialCarouselView.reloadAll();
  v17 = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_20;
  v9 = _Block_copy(aBlock);
  swift_release(v17);
  static DispatchQoS.unspecified.getter(v10);
  aBlock[0] = _swiftEmptyArrayStorage;
  v11 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  v13 = lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v12, v13, v0, v11);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v6, v2, v9);
  _Block_release(v9);

  (*(void (**)(char *, uint64_t))(v15 + 8))(v2, v0);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t MOSuggestionInterstitialCarouselView.updateSelectedAssets(_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t);

  v4 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x118);
  v2 = swift_bridgeObjectRetain(a1);
  return v4(v2);
}

Swift::Void __swiftcall MOSuggestionInterstitialCarouselView.refreshCheckmarksState()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  __n128 v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  NSString v28;
  Class isa;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];
  uint64_t (*v35)(uint64_t);
  uint64_t (*v36)(uint64_t);
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD v41[4];

  v1 = type metadata accessor for IndexPath(0);
  v38 = *(_QWORD *)(v1 - 8);
  v39 = v1;
  v2 = __chkstk_darwin(v1);
  v4 = (char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0xE0);
  v40 = v0;
  v6 = v5(v2);
  if ((unint64_t)v6 >> 62)
    goto LABEL_18;
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (v7 >= 1)
    {
      v8 = 0;
      v9 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v40) + 0x110);
      v35 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v40) + 0xC8);
      v36 = v9;
      v37 = v6 & 0xC000000000000001;
      v34[1] = 0x80000001001AAB70;
      while (1)
      {
        if (v37)
        {
          v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v6);
        }
        else
        {
          v11 = *(_QWORD *)(v6 + 8 * v8 + 32);
          v12 = swift_retain(v11);
        }
        v13 = (*(uint64_t (**)(__n128))(*(_QWORD *)v11 + 512))(v12);
        v15 = v14;
        v41[2] = v13;
        v41[3] = v14;
        v41[0] = 35;
        v41[1] = 0xE100000000000000;
        v16 = lazy protocol witness table accessor for type String and conformance String();
        v17 = (_QWORD *)StringProtocol.components<A>(separatedBy:)(v41, &type metadata for String, &type metadata for String, v16, v16);
        if (!v17[2])
          break;
        v18 = v17;
        v19 = v7;
        v20 = v17[4];
        v21 = v17[5];
        swift_bridgeObjectRetain(v21);
        swift_bridgeObjectRelease(v15);
        swift_bridgeObjectRelease(v18);
        v22 = IndexPath.init(row:section:)(0, v8);
        v23 = v36(v22);
        v24 = specialized Set.contains(_:)(v20, v21, v23);
        swift_bridgeObjectRelease(v21);
        v25 = swift_bridgeObjectRelease(v23);
        v26 = v35(v25);
        if (v26
          && (v27 = (void *)v26,
              v28 = String._bridgeToObjectiveC()(),
              isa = IndexPath._bridgeToObjectiveC()().super.isa,
              v30 = objc_msgSend(v27, "supplementaryViewForElementKind:atIndexPath:", v28, isa),
              v27,
              v28,
              isa,
              v30))
        {
          v31 = type metadata accessor for MOSuggestionInterstitialSupplementaryCheckmarkView();
          v32 = swift_dynamicCastClass(v30, v31);
          v7 = v19;
          if (v32)
            (*(void (**)(_QWORD))((swift_isaMask & **(_QWORD **)(v32
                                                                          + OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_checkmarkView))
                                           + 0xA0))(v24 & 1);
          swift_release(v11);

        }
        else
        {
          v10 = swift_release(v11);
          v7 = v19;
        }
        ++v8;
        (*(void (**)(char *, uint64_t, __n128))(v38 + 8))(v4, v39, v10);
        if (v7 == v8)
          goto LABEL_22;
      }
      __break(1u);
LABEL_18:
      if (v6 < 0)
        v33 = v6;
      else
        v33 = v6 & 0xFFFFFFFFFFFFFF8;
      v7 = _CocoaArrayWrapper.endIndex.getter(v33);
      if (!v7)
        goto LABEL_22;
    }
    __break(1u);
  }
  else
  {
LABEL_22:
    swift_bridgeObjectRelease(v6);
  }
}

void *MOSuggestionInterstitialCarouselViewConstants.CAROUSEL_CELL_CORNER_RADIUS.unsafeMutableAddressor()
{
  return &static MOSuggestionInterstitialCarouselViewConstants.CAROUSEL_CELL_CORNER_RADIUS;
}

void *MOSuggestionInterstitialCarouselViewConstants.INTERITEM_SPACING.unsafeMutableAddressor()
{
  return &static MOSuggestionInterstitialCarouselViewConstants.INTERITEM_SPACING;
}

double static MOSuggestionInterstitialAlertContentViewController.Constants.MARGIN.getter()
{
  return 10.0;
}

void *MOSuggestionInterstitialCarouselViewConstants.SIDE_VIEW_MARGIN.unsafeMutableAddressor()
{
  return &static MOSuggestionInterstitialCarouselViewConstants.SIDE_VIEW_MARGIN;
}

double static MOSuggestionInterstitialCarouselViewConstants.PAGE_CONTROL_HEIGHT.getter()
{
  return 50.0;
}

void *MOSuggestionInterstitialCarouselViewConstants.SECTION_INSET.unsafeMutableAddressor()
{
  return &static MOSuggestionInterstitialCarouselViewConstants.SECTION_INSET;
}

double static MOSuggestionInterstitialCarouselViewConstants.SECTION_INSET.getter()
{
  return 60.0;
}

void *MOSuggestionInterstitialCarouselViewConstants.TRAILING_MARGIN.unsafeMutableAddressor()
{
  return &static MOSuggestionInterstitialCarouselViewConstants.TRAILING_MARGIN;
}

void *MOSuggestionInterstitialCarouselViewConstants.PAGE_CONTROL_HEIGHT.unsafeMutableAddressor()
{
  return &static MOSuggestionInterstitialCarouselViewConstants.PAGE_CONTROL_HEIGHT;
}

void *MOSuggestionInterstitialCarouselViewConstants.SCROLL_VELOCITY_UPPERBOUND.unsafeMutableAddressor()
{
  return &static MOSuggestionInterstitialCarouselViewConstants.SCROLL_VELOCITY_UPPERBOUND;
}

double static MOSuggestionInterstitialCarouselViewConstants.SCROLL_VELOCITY_UPPERBOUND.getter()
{
  return 0.15;
}

void *MOSuggestionInterstitialCarouselViewConstants.SCROLL_VELOCITY_LOWERBOUND.unsafeMutableAddressor()
{
  return &static MOSuggestionInterstitialCarouselViewConstants.SCROLL_VELOCITY_LOWERBOUND;
}

double static MOSuggestionInterstitialCarouselViewConstants.SCROLL_VELOCITY_LOWERBOUND.getter()
{
  return 0.01;
}

void *MOSuggestionInterstitialCarouselViewConstants.SCROLL_VELOCITY_RANGE.unsafeMutableAddressor()
{
  return &static MOSuggestionInterstitialCarouselViewConstants.SCROLL_VELOCITY_RANGE;
}

double static MOSuggestionInterstitialCarouselViewConstants.SCROLL_VELOCITY_RANGE.getter()
{
  return 0.14;
}

void *MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_MARGIN.unsafeMutableAddressor()
{
  return &static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_MARGIN;
}

__n128 one-time initialization function for CHECK_PLATTER_VIEW_SIZE()
{
  __n128 result;

  __asm { FMOV            V0.2D, #23.0 }
  static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE = (__int128)result;
  return result;
}

__int128 *MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE.unsafeMutableAddressor()
{
  if (one-time initialization token for CHECK_PLATTER_VIEW_SIZE != -1)
    swift_once(&one-time initialization token for CHECK_PLATTER_VIEW_SIZE, one-time initialization function for CHECK_PLATTER_VIEW_SIZE);
  return &static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE;
}

double static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE.getter()
{
  return static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE.getter(&one-time initialization token for CHECK_PLATTER_VIEW_SIZE, (uint64_t)&static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE);
}

float64x2_t one-time initialization function for CHECK_PLATTER_VIEW_SIZE_WITH_MARGIN()
{
  float64x2_t result;

  if (one-time initialization token for CHECK_PLATTER_VIEW_SIZE != -1)
    swift_once(&one-time initialization token for CHECK_PLATTER_VIEW_SIZE, one-time initialization function for CHECK_PLATTER_VIEW_SIZE);
  __asm { FMOV            V1.2D, #16.0 }
  result = vaddq_f64((float64x2_t)static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE, _Q1);
  static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE_WITH_MARGIN = (__int128)result;
  return result;
}

__int128 *MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE_WITH_MARGIN.unsafeMutableAddressor()
{
  if (one-time initialization token for CHECK_PLATTER_VIEW_SIZE_WITH_MARGIN != -1)
    swift_once(&one-time initialization token for CHECK_PLATTER_VIEW_SIZE_WITH_MARGIN, one-time initialization function for CHECK_PLATTER_VIEW_SIZE_WITH_MARGIN);
  return &static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE_WITH_MARGIN;
}

double static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE_WITH_MARGIN.getter()
{
  return static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE.getter(&one-time initialization token for CHECK_PLATTER_VIEW_SIZE_WITH_MARGIN, (uint64_t)&static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE_WITH_MARGIN);
}

double static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE.getter(_QWORD *a1, uint64_t a2)
{
  if (*a1 != -1)
    swift_once();
  return *(double *)a2;
}

void *MOSuggestionInterstitialCarouselView.dataSource.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_dataSource);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_dataSource, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void MOSuggestionInterstitialCarouselView.dataSource.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_dataSource);
}

uint64_t (*MOSuggestionInterstitialCarouselView.dataSource.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_dataSource, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void *MOSuggestionInterstitialCarouselView.collectionView.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_collectionView);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_collectionView, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void MOSuggestionInterstitialCarouselView.collectionView.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_collectionView);
}

uint64_t (*MOSuggestionInterstitialCarouselView.collectionView.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_collectionView, a1, 33, 0);
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

uint64_t MOSuggestionInterstitialCarouselView.assetViewModels.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter(&OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_assetViewModels);
}

uint64_t MOSuggestionInterstitialCarouselView.assetViewModels.setter(uint64_t a1)
{
  return MOSuggestionAssetMapsClusterer.skipRows.setter(a1, &OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_assetViewModels);
}

uint64_t (*MOSuggestionInterstitialCarouselView.assetViewModels.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_assetViewModels, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionInterstitialCarouselView.denySelectionList.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter(&OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_denySelectionList);
}

uint64_t MOSuggestionInterstitialCarouselView.denySelectionList.setter(uint64_t a1)
{
  return MOSuggestionAssetMapsClusterer.skipRows.setter(a1, &OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_denySelectionList);
}

uint64_t (*MOSuggestionInterstitialCarouselView.denySelectionList.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_denySelectionList, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionInterstitialCarouselView.selectedAssetIdentifiers.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter(&OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_selectedAssetIdentifiers);
}

uint64_t MOSuggestionInterstitialCarouselView.selectedAssetIdentifiers.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  _BYTE v11[24];

  v3 = (_QWORD *)((char *)v1
                + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_selectedAssetIdentifiers);
  swift_beginAccess((char *)v1 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_selectedAssetIdentifiers, v11, 1, 0);
  v4 = *v3;
  *v3 = a1;
  v5 = swift_bridgeObjectRelease(v4);
  result = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x190))(v5);
  if (result)
  {
    v8 = result;
    v9 = v7;
    ObjectType = swift_getObjectType(result);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(ObjectType, v9);
    return swift_unknownObjectRelease(v8);
  }
  return result;
}

uint64_t (*MOSuggestionInterstitialCarouselView.selectedAssetIdentifiers.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_selectedAssetIdentifiers, a1, 33, 0);
  return MOSuggestionInterstitialCarouselView.selectedAssetIdentifiers.modify;
}

uint64_t MOSuggestionInterstitialCarouselView.selectedAssetIdentifiers.modify(uint64_t a1, char a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  result = swift_endAccess(a1);
  if ((a2 & 1) == 0)
  {
    result = (*(uint64_t (**)(uint64_t))((swift_isaMask & **(_QWORD **)(a1 + 24)) + 0x190))(result);
    if (result)
    {
      v6 = result;
      v7 = v5;
      ObjectType = swift_getObjectType(result);
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(ObjectType, v7);
      return swift_unknownObjectRelease(v6);
    }
  }
  return result;
}

uint64_t MOSuggestionInterstitialCarouselView.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_delegate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_delegate, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

uint64_t MOSuggestionInterstitialCarouselView.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE v7[24];

  v5 = v2 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_delegate;
  swift_beginAccess(v5, v7, 1, 0);
  *(_QWORD *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign(v5, a1);
  return swift_unknownObjectRelease(a1);
}

void (*MOSuggestionInterstitialCarouselView.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return MOSuggestionSheetAssetGridView.delegate.modify;
}

uint64_t MOSuggestionInterstitialCarouselView.controller.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_controller;
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_controller, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

void MOSuggestionInterstitialCarouselView.controller.setter(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v4[24];

  v3 = v1 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_controller;
  swift_beginAccess(v3, v4, 1, 0);
  swift_unknownObjectWeakAssign(v3, a1);

}

void (*MOSuggestionInterstitialCarouselView.controller.modify(_QWORD *a1))(id **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_controller;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  v3[3] = swift_unknownObjectWeakLoadStrong(v5);
  return MOSuggestionSheetInterstitialView.controller.modify;
}

id MOSuggestionInterstitialCarouselView.init(controller:)(void *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  objc_class *v23;
  id v24;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  objc_super v31;
  _QWORD v32[3];

  v30 = a1;
  v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v28 = *(_QWORD *)(v2 - 8);
  v29 = v2;
  __chkstk_darwin(v2);
  v27 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_dataSource] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_collectionView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_assetViewModels] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_denySelectionList] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_selectedAssetIdentifiers] = &_swiftEmptySetSingleton;
  v10 = OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_containerView;
  v11 = objc_allocWithZone((Class)UIView);
  v12 = v1;
  *(_QWORD *)&v1[v10] = objc_msgSend(v11, "init");
  *(_QWORD *)&v12[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_containerViewBottomConstraint] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_pageControlConstraints] = _swiftEmptyArrayStorage;
  v13 = OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_pageControl;
  *(_QWORD *)&v12[v13] = objc_msgSend(objc_allocWithZone((Class)UIPageControl), "init");
  v14 = &v12[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_delegate];
  *((_QWORD *)v14 + 1) = 0;
  swift_unknownObjectWeakInit(v14);
  v15 = &v12[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_controller];
  swift_unknownObjectWeakInit(&v12[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_controller]);
  v16 = OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_queue;
  v17 = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v17);
  v32[0] = _swiftEmptyArrayStorage;
  v18 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  v20 = lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A], &demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  dispatch thunk of SetAlgebra.init<A>(_:)(v32, v19, v20, v4, v18);
  v21 = v27;
  (*(void (**)(char *, _QWORD, uint64_t))(v28 + 104))(v27, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v29);
  *(_QWORD *)&v12[v16] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000002FLL, 0x80000001001A6140, v9, v6, v21, 0);
  swift_beginAccess(v15, v32, 1, 0);
  v22 = v30;
  swift_unknownObjectWeakAssign(v15, v30);

  v23 = (objc_class *)type metadata accessor for MOSuggestionInterstitialCarouselView();
  v31.receiver = v12;
  v31.super_class = v23;
  v24 = objc_msgSendSuper2(&v31, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  MOSuggestionInterstitialCarouselView.configureViewsAndLayouts()();
  MOSuggestionInterstitialCarouselView.configureDataSource()();

  return v24;
}

Swift::Void __swiftcall MOSuggestionInterstitialCarouselView.configureViewsAndLayouts()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  double v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  char **v29;
  void *v30;
  UICollectionViewLayout v31;
  Class isa;
  double v33;
  double v34;
  double v35;
  double v36;
  id v37;
  void (*v38)(id);
  id v39;
  uint64_t v40;
  uint64_t ObjCClassFromMetadata;
  NSString v42;
  NSString v43;
  uint64_t v44;
  id v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v1 = v0;
  v2 = OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_containerView;
  objc_msgSend(v0, "addSubview:", *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_containerView));
  objc_msgSend(*(id *)((char *)v0 + v2), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = *(id *)((char *)v0 + v2);
  v4 = objc_msgSend(v3, "superview");
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v6 = objc_msgSend(v3, "leadingAnchor");
    v7 = objc_msgSend(v5, "leadingAnchor");
    v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

    objc_msgSend(v8, "setConstant:", 0.0);
    if (v8)
    {
      v8 = v8;
      objc_msgSend(v8, "setActive:", 1);

      v3 = v8;
    }

  }
  else
  {
    v8 = 0;
    v5 = v3;
  }

  v9 = *(id *)((char *)v1 + v2);
  v10 = objc_msgSend(v9, "superview");
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v12 = objc_msgSend(v9, "trailingAnchor");
    v13 = objc_msgSend(v11, "trailingAnchor");
    v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

    objc_msgSend(v14, "setConstant:", 0.0);
    if (v14)
    {
      v14 = v14;
      objc_msgSend(v14, "setActive:", 1);

      v9 = v14;
    }

  }
  else
  {
    v14 = 0;
    v11 = v9;
  }

  v15 = *(id *)((char *)v1 + v2);
  v16 = objc_msgSend(v15, "superview");
  if (v16)
  {
    v17 = v16;
    objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v18 = objc_msgSend(v15, "topAnchor");
    v19 = objc_msgSend(v17, "topAnchor");
    v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

    objc_msgSend(v20, "setConstant:", 0.0);
    if (v20)
    {
      v20 = v20;
      objc_msgSend(v20, "setActive:", 1);

      v15 = v20;
    }

  }
  else
  {
    v20 = 0;
    v17 = v15;
  }

  if (specialized static MOAngelRootViewController.isLandscape.getter())
    v21 = 0.0;
  else
    v21 = 100.0;
  v22 = *(id *)((char *)v1 + v2);
  v23 = objc_msgSend(v22, "superview");
  if (v23)
  {
    v24 = v23;
    objc_msgSend(v22, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v25 = objc_msgSend(v22, "bottomAnchor");
    v26 = objc_msgSend(v24, "bottomAnchor");
    v27 = objc_msgSend(v25, "constraintEqualToAnchor:", v26);

    if (v27)
    {
      objc_msgSend(v27, "setConstant:", -v21);
      v28 = v27;
      objc_msgSend(v28, "setActive:", 1);

      v22 = v28;
    }
    v29 = &selRef_genericAvatarFor_pointSize_completion_;

  }
  else
  {
    v27 = 0;
    v24 = v22;
    v29 = &selRef_genericAvatarFor_pointSize_completion_;
  }

  v30 = *(void **)((char *)v1
                 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_containerViewBottomConstraint);
  *(_QWORD *)((char *)v1
            + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_containerViewBottomConstraint) = v27;

  if (specialized static MOAngelRootViewController.isLandscape.getter())
    v31.super.isa = MOSuggestionInterstitialCarouselView.generateLandscapeLayout()().super.isa;
  else
    v31.super.isa = MOSuggestionInterstitialCarouselView.generateLayout()().super.isa;
  isa = v31.super.isa;
  objc_msgSend(*(id *)((char *)v1 + v2), "bounds");
  v37 = objc_msgSend(objc_allocWithZone((Class)UICollectionView), "initWithFrame:collectionViewLayout:", isa, v33, v34, v35, v36);
  objc_msgSend(*(id *)((char *)v1 + v2), v29[118], v37);
  v38 = *(void (**)(id))((swift_isaMask & *v1) + 0xD0);
  v39 = v37;
  v38(v37);
  objc_msgSend(v39, "setClipsToBounds:", 0);
  objc_msgSend(v39, "setAutoresizingMask:", 18);
  objc_msgSend(v39, "setDelegate:", v1);
  objc_msgSend(v39, "setAllowsSelection:", 1);
  objc_msgSend(v39, "setAllowsMultipleSelection:", 1);
  objc_msgSend(v39, "setShowsHorizontalScrollIndicator:", 0);
  objc_msgSend(v39, "setDecelerationRate:", UIScrollViewDecelerationRateFast);
  objc_msgSend(v39, "setPagingEnabled:", 0);
  objc_msgSend(v39, "setBouncesHorizontally:", 1);
  objc_msgSend(v39, "setContentInset:", 0.0, 50.0, 0.0, 10.0);
  v40 = type metadata accessor for MOSuggestionInterstitialSupplementaryCheckmarkView();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v40);
  v42 = String._bridgeToObjectiveC()();
  v43 = String._bridgeToObjectiveC()();
  objc_msgSend(v39, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:", ObjCClassFromMetadata, v42, v43);

  if (serverManager._clientConnections != (NSMutableDictionary *)-1)
    swift_once(&serverManager._clientConnections, one-time initialization function for shared);
  v44 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v44, (uint64_t)static MOAngelLogger.shared);
  v45 = v39;
  v46 = Logger.logObject.getter(v45);
  v47 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v46, v47))
  {
    v48 = (uint8_t *)swift_slowAlloc(12, -1);
    v49 = swift_slowAlloc(32, -1);
    v54 = v49;
    *(_DWORD *)v48 = 136315138;
    v50 = CGPoint.debugDescription.getter(objc_msgSend(v45, "contentOffset"));
    v52 = v51;
    v53 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v50, v51, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54, v48 + 4);

    swift_bridgeObjectRelease(v52);
    _os_log_impl((void *)&_mh_execute_header, v46, v47, "[MOSuggestionInterstitialCarouselView] currentOffset=%s", v48, 0xCu);
    swift_arrayDestroy(v49, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v49, -1, -1);
    swift_slowDealloc(v48, -1, -1);

  }
  else
  {

  }
  objc_msgSend(*(id *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_pageControl), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v45, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  MOSuggestionInterstitialCarouselView.setPageControlVisibility()();
  MOSuggestionInterstitialCarouselView.configurePageControl()();

}

Swift::Void __swiftcall MOSuggestionInterstitialCarouselView.configureDataSource()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<MOSuggestionInterstitialSupplementaryCheckmarkView>);
  v42 = *(_QWORD *)(v1 - 8);
  v43 = v1;
  v2 = __chkstk_darwin(v1);
  v38 = v3;
  v39 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v5 = (char *)&v38 - v4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<MOSuggestionInterstitialCarouselViewCell, MOSuggestionSheetAssetViewModel>);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = __chkstk_darwin(v6);
  v40 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v38 - v10;
  v12 = swift_allocObject(&unk_1001E8F60, 24, 7);
  *(_QWORD *)(v12 + 16) = v0;
  v13 = type metadata accessor for MOSuggestionInterstitialCarouselViewCell();
  v14 = type metadata accessor for MOSuggestionSheetAssetViewModel(0);
  v15 = v0;
  UICollectionView.CellRegistration.init(handler:)(partial apply for closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource(), v12, v13, v14);
  v16 = swift_allocObject(&unk_1001E8F10, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16);
  v17 = type metadata accessor for MOSuggestionInterstitialSupplementaryCheckmarkView();
  v41 = v5;
  v18 = v6;
  v19 = UICollectionView.SupplementaryRegistration.init(elementKind:handler:)(0xD000000000000032, 0x80000001001AAB70, partial apply for closure #2 in MOSuggestionInterstitialCarouselView.configureDataSource(), v16, v17);
  v20 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v15) + 0xC8))(v19);
  if (v20)
  {
    v21 = (void *)v20;
    v22 = v40;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v40, v11, v18);
    v23 = *(unsigned __int8 *)(v7 + 80);
    v24 = (v23 + 16) & ~v23;
    v25 = swift_allocObject(&unk_1001E8F88, v24 + v8, v23 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v25 + v24, v22, v18);
    v26 = swift_allocObject(&unk_1001E8FB0, 32, 7);
    *(_QWORD *)(v26 + 16) = partial apply for closure #3 in MOSuggestionInterstitialCarouselView.configureDataSource();
    *(_QWORD *)(v26 + 24) = v25;
    objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionViewDiffableDataSource<InterstitialSection, MOSuggestionSheetAssetViewModel>));
    v27 = v21;
    v28 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
    v29 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v15) + 0xB8))(v28);
    v30 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v15) + 0xB0))(v29);
    if (v30)
    {
      v31 = (void *)v30;
      v32 = v42;
      v33 = v39;
      v34 = v43;
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v41, v43);
      v35 = *(unsigned __int8 *)(v32 + 80);
      v36 = (v35 + 16) & ~v35;
      v37 = swift_allocObject(&unk_1001E8FD8, v36 + v38, v35 | 7);
      (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v37 + v36, v33, v34);
      dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter(partial apply for closure #4 in MOSuggestionInterstitialCarouselView.configureDataSource(), v37);

      v27 = v31;
    }

  }
  (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v43);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v18);
}

void MOSuggestionInterstitialCarouselView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MomentsUIService.MOSuggestionInterstitialCarouselView", 53, "init(frame:)", 12, 0);
  __break(1u);
}

id MOSuggestionInterstitialCarouselView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionInterstitialCarouselView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

UICollectionViewLayout __swiftcall MOSuggestionInterstitialCarouselView.generateLayout()()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  _QWORD v6[5];
  uint64_t v7;

  v0 = swift_allocObject(&unk_1001E8F10, 24, 7);
  swift_unknownObjectWeakInit(v0 + 16);
  v1 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewCompositionalLayoutConfiguration), "init");
  objc_msgSend(v1, "setInterSectionSpacing:", 10.0);
  objc_msgSend(v1, "setScrollDirection:", 1);
  v2 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  v6[4] = partial apply for closure #1 in MOSuggestionInterstitialCarouselView.generateLayout();
  v7 = v0;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = thunk for @escaping @callee_guaranteed (@unowned Int, @guaranteed NSCollectionLayoutEnvironment) -> (@owned NSCollectionLayoutSection?);
  v6[3] = &block_descriptor_17;
  v3 = _Block_copy(v6);
  v4 = objc_msgSend(v2, "initWithSectionProvider:configuration:", v3, v1);

  _Block_release(v3);
  swift_release(v7);
  return (UICollectionViewLayout)v4;
}

id closure #1 in MOSuggestionInterstitialCarouselView.generateLayout()(char *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *Strong;
  void *v7;
  uint64_t v8;
  void *v9;
  char *v10;
  double v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  char *v17;
  NSString v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  double v25;
  double v26;
  double v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  Class isa;
  id v36;
  id v37;
  uint64_t v38;
  id v39;
  Class v40;
  void *v42;
  void *v43;
  void *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char v49[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v49, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v5);
  if (!Strong)
    return 0;
  v7 = Strong;
  v8 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0xE0))();
  v9 = (void *)v8;
  if ((unint64_t)v8 >> 62)
  {
    if (v8 >= 0)
      v8 &= 0xFFFFFFFFFFFFFF8uLL;
    v10 = (char *)_CocoaArrayWrapper.endIndex.getter(v8);
  }
  else
  {
    v10 = *(char **)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v9);
  if (__OFSUB__(v10, 1))
  {
    __break(1u);
LABEL_18:
    swift_once(&one-time initialization token for CHECK_PLATTER_VIEW_SIZE_WITH_MARGIN, one-time initialization function for CHECK_PLATTER_VIEW_SIZE_WITH_MARGIN);
    goto LABEL_9;
  }
  v43 = a2;
  v46 = v10 - 1;
  if (v10 - 1 == a1)
    v11 = -40.0;
  else
    v11 = 0.0;
  v10 = (char *)objc_msgSend((id)objc_opt_self(NSCollectionLayoutAnchor), "layoutAnchorWithEdges:absoluteOffset:", 12, v11, 0.0);
  v9 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v45 = a1;
  if (one-time initialization token for CHECK_PLATTER_VIEW_SIZE_WITH_MARGIN != -1)
    goto LABEL_18;
LABEL_9:
  v12 = objc_msgSend(v9, "absoluteDimension:", *(double *)&static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE_WITH_MARGIN);
  v13 = objc_msgSend(v9, "absoluteDimension:", *((double *)&static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE_WITH_MARGIN + 1));
  v14 = (void *)objc_opt_self(NSCollectionLayoutSize);
  v15 = objc_msgSend(v14, "sizeWithWidthDimension:heightDimension:", v12, v13);

  v16 = v15;
  v17 = v10;
  v18 = String._bridgeToObjectiveC()();
  v19 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "supplementaryItemWithLayoutSize:elementKind:containerAnchor:", v16, v18, v17);

  v44 = v16;
  objc_msgSend(v19, "setPinToVisibleBounds:", 1);
  v20 = objc_msgSend(v9, "fractionalWidthDimension:", 1.0);
  v21 = objc_msgSend(v9, "fractionalWidthDimension:", 1.0);
  v22 = objc_msgSend(v14, "sizeWithWidthDimension:heightDimension:", v20, v21);

  v42 = v22;
  v23 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutItem), "itemWithLayoutSize:", v22);
  v24 = objc_msgSend(v43, "container");
  objc_msgSend(v24, "contentSize");
  v26 = v25;
  swift_unknownObjectRelease(v24);
  v27 = v26 + -100.0;
  v28 = objc_msgSend(v9, "absoluteDimension:", v27);
  v29 = objc_msgSend(v9, "absoluteDimension:", v27);
  v30 = objc_msgSend(v14, "sizeWithWidthDimension:heightDimension:", v28, v29);

  v31 = (void *)objc_opt_self(NSCollectionLayoutGroup);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v33 = swift_allocObject(v32, 40, 7);
  *(_OWORD *)(v33 + 16) = xmmword_10019EDA0;
  *(_QWORD *)(v33 + 32) = v23;
  v47 = v33;
  specialized Array._endMutation()(v33);
  type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for NSCollectionLayoutItem, NSCollectionLayoutItem_ptr);
  v34 = v23;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v47);
  v36 = objc_msgSend(v31, "horizontalGroupWithLayoutSize:subitems:", v30, isa);

  v37 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSection), "sectionWithGroup:", v36);
  v38 = swift_allocObject(v32, 40, 7);
  *(_OWORD *)(v38 + 16) = xmmword_10019EDA0;
  *(_QWORD *)(v38 + 32) = v19;
  v48 = v38;
  specialized Array._endMutation()(v38);
  type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for NSCollectionLayoutBoundarySupplementaryItem, NSCollectionLayoutBoundarySupplementaryItem_ptr);
  v39 = v19;
  v40 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v48);
  objc_msgSend(v37, "setBoundarySupplementaryItems:", v40);

  if (v46 == v45)
    objc_msgSend(v37, "setContentInsets:", 0.0, 0.0, 0.0, 40.0);

  return v37;
}

UICollectionViewLayout __swiftcall MOSuggestionInterstitialCarouselView.generateLandscapeLayout()()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  _QWORD v6[5];
  uint64_t v7;

  v0 = swift_allocObject(&unk_1001E8F10, 24, 7);
  swift_unknownObjectWeakInit(v0 + 16);
  v1 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewCompositionalLayoutConfiguration), "init");
  objc_msgSend(v1, "setInterSectionSpacing:", 10.0);
  objc_msgSend(v1, "setScrollDirection:", 1);
  v2 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  v6[4] = partial apply for closure #1 in MOSuggestionInterstitialCarouselView.generateLandscapeLayout();
  v7 = v0;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = thunk for @escaping @callee_guaranteed (@unowned Int, @guaranteed NSCollectionLayoutEnvironment) -> (@owned NSCollectionLayoutSection?);
  v6[3] = &block_descriptor_21_1;
  v3 = _Block_copy(v6);
  v4 = objc_msgSend(v2, "initWithSectionProvider:configuration:", v3, v1);

  _Block_release(v3);
  swift_release(v7);
  return (UICollectionViewLayout)v4;
}

uint64_t closure #1 in MOSuggestionInterstitialCarouselView.generateLandscapeLayout()(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *Strong;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  double v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  NSString v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  double v31;
  double v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  Class isa;
  id v41;
  id v42;
  uint64_t v43;
  id v44;
  Class v45;
  id v46;
  double v47;
  double v48;
  uint64_t result;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  id v57;
  void *v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE v63[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v63, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v5);
  if (!Strong)
    return 0;
  v7 = Strong;
  v8 = *(_QWORD *)((swift_isaMask & *Strong) + 0xE0);
  v9 = ((uint64_t (*)(void))v8)();
  v10 = v9;
  if ((unint64_t)v9 >> 62)
  {
    if (v9 >= 0)
      v9 &= 0xFFFFFFFFFFFFFF8uLL;
    v11 = _CocoaArrayWrapper.endIndex.getter(v9);
  }
  else
  {
    v11 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v12 = swift_bridgeObjectRelease(v10);
  if (__OFSUB__(v11, 1))
  {
    __break(1u);
  }
  else
  {
    if (a1)
      v13 = v11 - 1 == a1;
    else
      v13 = 0;
    LODWORD(v11) = v13;
    v8 = ((uint64_t (*)(uint64_t))v8)(v12);
    if (!((unint64_t)v8 >> 62))
    {
      v14 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_13;
    }
  }
  if (v8 < 0)
    v54 = v8;
  else
    v54 = v8 & 0xFFFFFFFFFFFFFF8;
  v14 = _CocoaArrayWrapper.endIndex.getter(v54);
LABEL_13:
  v60 = v14;
  v56 = a1;
  v58 = v7;
  swift_bridgeObjectRelease(v8);
  v59 = v11;
  if ((v11 & (v14 > 3)) != 0)
    v15 = -40.0;
  else
    v15 = 0.0;
  v16 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutAnchor), "layoutAnchorWithEdges:absoluteOffset:", 12, v15, 0.0);
  v17 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  if (one-time initialization token for CHECK_PLATTER_VIEW_SIZE_WITH_MARGIN != -1)
    swift_once(&one-time initialization token for CHECK_PLATTER_VIEW_SIZE_WITH_MARGIN, one-time initialization function for CHECK_PLATTER_VIEW_SIZE_WITH_MARGIN);
  v18 = objc_msgSend(v17, "absoluteDimension:", *(double *)&static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE_WITH_MARGIN);
  v19 = objc_msgSend(v17, "absoluteDimension:", *((double *)&static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE_WITH_MARGIN + 1));
  v20 = (void *)objc_opt_self(NSCollectionLayoutSize);
  v21 = objc_msgSend(v20, "sizeWithWidthDimension:heightDimension:", v18, v19);

  v22 = v21;
  v23 = v16;
  v24 = String._bridgeToObjectiveC()();
  v25 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "supplementaryItemWithLayoutSize:elementKind:containerAnchor:", v22, v24, v23);

  objc_msgSend(v25, "setPinToVisibleBounds:", 1);
  v26 = objc_msgSend(v17, "fractionalWidthDimension:", 1.0);
  v27 = objc_msgSend(v17, "fractionalWidthDimension:", 1.0);
  v28 = objc_msgSend(v20, "sizeWithWidthDimension:heightDimension:", v26, v27);

  v29 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutItem), "itemWithLayoutSize:", v28);
  v55 = a2;
  v30 = objc_msgSend(a2, "container");
  objc_msgSend(v30, "contentSize");
  v32 = v31;
  swift_unknownObjectRelease(v30);
  v33 = objc_msgSend(v17, "absoluteDimension:", v32);
  v34 = objc_msgSend(v17, "absoluteDimension:", v32);
  v35 = objc_msgSend(v20, "sizeWithWidthDimension:heightDimension:", v33, v34);

  v36 = (void *)objc_opt_self(NSCollectionLayoutGroup);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v38 = swift_allocObject(v37, 40, 7);
  *(_OWORD *)(v38 + 16) = xmmword_10019EDA0;
  *(_QWORD *)(v38 + 32) = v29;
  v61 = v38;
  specialized Array._endMutation()(v38);
  type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for NSCollectionLayoutItem, NSCollectionLayoutItem_ptr);
  v39 = v29;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v61);
  v57 = v35;
  v41 = objc_msgSend(v36, "horizontalGroupWithLayoutSize:subitems:", v35, isa);

  v42 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSection), "sectionWithGroup:", v41);
  v43 = swift_allocObject(v37, 40, 7);
  *(_OWORD *)(v43 + 16) = xmmword_10019EDA0;
  *(_QWORD *)(v43 + 32) = v25;
  v62 = v43;
  specialized Array._endMutation()(v43);
  type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for NSCollectionLayoutBoundarySupplementaryItem, NSCollectionLayoutBoundarySupplementaryItem_ptr);
  v44 = v25;
  v45 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v62);
  objc_msgSend(v42, "setBoundarySupplementaryItems:", v45);

  if (v60 > 3 || v56)
    goto LABEL_22;
  v46 = objc_msgSend(v55, "container");
  objc_msgSend(v46, "contentSize");
  v48 = v47;
  result = swift_unknownObjectRelease(v46);
  if (!__OFSUB__(v60, 1))
  {
    objc_msgSend(v42, "setContentInsets:", 0.0, (v48 - ((double)(v60 - 1) * 10.0 + v32 * (double)v60)) * 0.5 + -50.0, 0.0, 0.0);
LABEL_22:
    if (v59 && v60 >= 4)
    {
      objc_msgSend(v42, "setContentInsets:", 0.0, 0.0, 0.0, 40.0);
      v51 = v57;
      v50 = v58;
      v52 = v44;
      v53 = v41;
    }
    else
    {
      v50 = v22;
      v51 = v23;
      v52 = v28;
      v53 = v39;
      v39 = v41;
      v28 = v44;
      v22 = v57;
      v23 = v58;
    }

    return (uint64_t)v42;
  }
  __break(1u);
  return result;
}

void MOSuggestionInterstitialCarouselView.setPageControlVisibility()()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  Class isa;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  Class v25;

  v1 = v0;
  if (specialized static MOAngelRootViewController.isLandscape.getter())
  {
    v2 = (void *)objc_opt_self(NSLayoutConstraint);
    v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_pageControlConstraints];
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint, NSLayoutConstraint_ptr);
    swift_bridgeObjectRetain(v3);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v3);
    objc_msgSend(v2, "deactivateConstraints:", isa);

    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_pageControl], "removeFromSuperview");
  }
  else
  {
    v5 = OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_pageControl;
    objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_pageControl]);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v7 = swift_allocObject(v6, 64, 7);
    *(_OWORD *)(v7 + 16) = xmmword_10019ED40;
    v8 = objc_msgSend(*(id *)&v1[v5], "topAnchor");
    v9 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_containerView], "bottomAnchor");
    v10 = objc_msgSend(v8, "constraintEqualToAnchor:", v9);

    *(_QWORD *)(v7 + 32) = v10;
    v11 = objc_msgSend(*(id *)&v1[v5], "trailingAnchor");
    v12 = objc_msgSend(v1, "trailingAnchor");
    v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

    *(_QWORD *)(v7 + 40) = v13;
    v14 = objc_msgSend(*(id *)&v1[v5], "leadingAnchor");
    v15 = objc_msgSend(v1, "leadingAnchor");
    v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

    *(_QWORD *)(v7 + 48) = v16;
    v17 = objc_msgSend(*(id *)&v1[v5], "bottomAnchor");
    v18 = objc_msgSend(v1, "bottomAnchor");
    v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

    *(_QWORD *)(v7 + 56) = v19;
    specialized Array._endMutation()(v20);
    v21 = OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_pageControlConstraints;
    v22 = *(_QWORD *)&v1[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_pageControlConstraints];
    *(_QWORD *)&v1[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_pageControlConstraints] = v7;
    swift_bridgeObjectRelease(v22);
    v23 = (void *)objc_opt_self(NSLayoutConstraint);
    v24 = *(_QWORD *)&v1[v21];
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint, NSLayoutConstraint_ptr);
    swift_bridgeObjectRetain(v24);
    v25 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v24);
    objc_msgSend(v23, "activateConstraints:", v25);

  }
}

id MOSuggestionInterstitialCarouselView.configurePageControl()()
{
  _QWORD *v0;
  uint64_t (*v1)(void);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;

  v1 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0xE0);
  v2 = v1();
  v3 = v2;
  if ((unint64_t)v2 >> 62)
  {
    if (v2 >= 0)
      v2 &= 0xFFFFFFFFFFFFFF8uLL;
    v4 = _CocoaArrayWrapper.endIndex.getter(v2);
  }
  else
  {
    v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v3);
  v5 = OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_pageControl;
  v6 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_pageControl);
  v7 = "setHidden:";
  if (v4 < 2)
  {
    v21 = 1;
  }
  else
  {
    objc_msgSend(v6, "setHidden:", 0);
    v8 = *(id *)((char *)v0 + v5);
    v9 = v1();
    v10 = v9;
    if ((unint64_t)v9 >> 62)
    {
      if (v9 >= 0)
        v9 &= 0xFFFFFFFFFFFFFF8uLL;
      v11 = _CocoaArrayWrapper.endIndex.getter(v9);
    }
    else
    {
      v11 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v10);
    objc_msgSend(v8, "setNumberOfPages:", v11);

    v12 = *(void **)((char *)v0 + v5);
    v13 = (void *)objc_opt_self(UIColor);
    v14 = v12;
    v15 = objc_msgSend(v13, "labelColor");
    objc_msgSend(v14, "setCurrentPageIndicatorTintColor:", v15);

    v16 = *(id *)((char *)v0 + v5);
    v17 = objc_msgSend(v13, "grayColor");
    v18 = objc_msgSend(v17, "colorWithAlphaComponent:", 0.5);

    objc_msgSend(v16, "setPageIndicatorTintColor:", v18);
    objc_msgSend(*(id *)((char *)v0 + v5), "setAccessibilityContainerType:", 4);
    v19 = *(id *)((char *)v0 + v5);
    v20 = objc_msgSend(v13, "clearColor");
    objc_msgSend(v19, "setBackgroundColor:", v20);

    objc_msgSend(*(id *)((char *)v0 + v5), "setUserInteractionEnabled:", 0);
    v6 = *(void **)((char *)v0 + v5);
    v7 = "setDirection:";
    v21 = 0;
  }
  return objc_msgSend(v6, v7, v21);
}

uint64_t closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource()(_QWORD *a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(__n128);
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;

  v25 = a2;
  v26 = a4;
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void (**)(__n128))((swift_isaMask & *a1) + 0xA8);
  v12 = swift_retain(*a3);
  v11(v12);
  v13 = swift_allocObject(&unk_1001E8F10, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v24(v10, a2, v7);
  v14 = *(unsigned __int8 *)(v8 + 80);
  v15 = (v14 + 24) & ~v14;
  v16 = v15 + v9;
  v17 = v14 | 7;
  v18 = swift_allocObject(&unk_1001E9130, v16, v14 | 7);
  *(_QWORD *)(v18 + 16) = v13;
  v19 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
  v19(v18 + v15, v10, v7);
  (*(void (**)(uint64_t (*)(), uint64_t))((swift_isaMask & *a1) + 0x78))(partial apply for closure #1 in closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource(), v18);
  v20 = swift_allocObject(&unk_1001E8F10, 24, 7);
  swift_unknownObjectWeakInit(v20 + 16);
  v24(v10, v25, v7);
  v21 = swift_allocObject(&unk_1001E9158, v16, v17);
  *(_QWORD *)(v21 + 16) = v20;
  v19(v21 + v15, v10, v7);
  return (*(uint64_t (**)(uint64_t (*)(), uint64_t))((swift_isaMask & *a1) + 0x90))(partial apply for closure #2 in closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource(), v21);
}

void closure #1 in closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource()(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;
  uint64_t v4;
  void (*v5)(_BYTE *, _QWORD);
  _BYTE v6[32];
  uint64_t v7;
  _BYTE v8[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (_QWORD *)Strong;
    v4 = IndexPath.section.getter(Strong);
    v5 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))((swift_isaMask & *v3) + 0x108))(v6);
    specialized Set._Variant.insert(_:)(&v7, v4);
    v5(v6, 0);

  }
}

double closure #2 in closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource()(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t Strong;
  double result;
  void *v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD aBlock[5];
  uint64_t v43;
  char v44[32];

  v35 = a2;
  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v39 = *(_QWORD *)(v3 - 8);
  v40 = v3;
  __chkstk_darwin(v3);
  v36 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v37 = *(_QWORD *)(v5 - 8);
  v38 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = type metadata accessor for DispatchTime(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v32 - v16;
  a1 += 16;
  swift_beginAccess(a1, v44, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v20 = (void *)Strong;
    v32 = *(_QWORD *)(Strong + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_queue);
    static DispatchTime.now()(Strong);
    + infix(_:_:)(v15, 0.1);
    v21 = *(void (**)(char *, uint64_t))(v12 + 8);
    v33 = v11;
    v34 = v21;
    v21(v15, v11);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v35, v8);
    v22 = *(unsigned __int8 *)(v9 + 80);
    v23 = (v22 + 24) & ~v22;
    v24 = swift_allocObject(&unk_1001E9180, v23 + v10, v22 | 7);
    *(_QWORD *)(v24 + 16) = v20;
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v24 + v23, (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
    aBlock[4] = partial apply for closure #1 in closure #2 in closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource();
    v43 = v24;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = &block_descriptor_53;
    v25 = _Block_copy(aBlock);
    v26 = v20;
    static DispatchQoS.unspecified.getter(v26);
    v41 = _swiftEmptyArrayStorage;
    v27 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    v29 = lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    v30 = v36;
    v31 = v40;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v41, v28, v29, v40, v27);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v17, v7, v30, v25);
    _Block_release(v25);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v30, v31);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v7, v38);
    v34(v17, v33);

    *(_QWORD *)&result = swift_release(v43).n128_u64[0];
  }
  return result;
}

uint64_t closure #1 in closure #2 in closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource()(_QWORD *a1)
{
  uint64_t v2;
  uint64_t (*v3)(_BYTE *, _QWORD);
  _BYTE v5[32];

  v2 = IndexPath.section.getter(a1);
  v3 = (uint64_t (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))((swift_isaMask & *a1) + 0x108))(v5);
  specialized Set._Variant.remove(_:)(v2);
  return v3(v5, 0);
}

void closure #2 in MOSuggestionInterstitialCarouselView.configureDataSource()(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  _QWORD *Strong;
  void *v8;
  _QWORD *v9;
  _QWORD *v10;
  char v11;
  void *v12;
  char **v13;
  id v14;
  _BYTE v15[24];

  v6 = a5 + 16;
  swift_beginAccess(a5 + 16, v15, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = Strong;
    v9 = (_QWORD *)(*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x1A8))();
    if (v9)
    {
      v10 = v9;
      v11 = (*(uint64_t (**)(void))((swift_isaMask & *v9) + 0x1B0))();
      v12 = (void *)objc_opt_self(UIColor);
      v13 = &selRef_systemBlueColor;
      if ((v11 & 1) == 0)
        v13 = &selRef_systemIndigoColor;
      v14 = objc_msgSend(v12, *v13);
      (*(void (**)(id))((swift_isaMask & *a1) + 0x68))(v14);

      v8 = v10;
    }

  }
}

uint64_t closure #3 in MOSuggestionInterstitialCarouselView.configureDataSource()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v12;

  v12 = a3;
  v7 = type metadata accessor for MOSuggestionInterstitialCarouselViewCell();
  v8 = type metadata accessor for MOSuggestionSheetAssetViewModel(0);
  v9 = swift_retain(a3);
  v10 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(a4, a2, &v12, v7, v8, v9);
  swift_release(a3);
  return v10;
}

unint64_t MOSuggestionInterstitialCarouselView.updatedSnapshot(_:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  _QWORD v23[3];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSDiffableDataSourceSectionSnapshot<MOSuggestionSheetAssetViewModel>);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v23[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MOSuggestionSheetAssetViewModel(0);
  v10 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionSheetAssetViewModel and conformance MOSuggestionSheetAssetViewModel, type metadata accessor for MOSuggestionSheetAssetViewModel, (uint64_t)&protocol conformance descriptor for MOSuggestionSheetAssetViewModel);
  v11 = NSDiffableDataSourceSectionSnapshot.init()(v9, v10);
  v12 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0xE0))(v11);
  v13 = v12;
  if ((unint64_t)v12 >> 62)
  {
    if (v12 >= 0)
      v12 &= 0xFFFFFFFFFFFFFF8uLL;
    result = _CocoaArrayWrapper.endIndex.getter(v12);
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_15:
      v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v13);
      goto LABEL_8;
    }
  }
  else
  {
    result = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if ((a1 & 0x8000000000000000) != 0 || result <= a1)
  {
    v20 = v13;
    goto LABEL_10;
  }
  if ((v13 & 0xC000000000000001) != 0)
    goto LABEL_15;
  if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10) > a1)
  {
    v15 = *(_QWORD *)(v13 + 8 * a1 + 32);
    swift_retain(v15);
LABEL_8:
    swift_bridgeObjectRelease(v13);
    v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v17 = swift_allocObject(v16, 40, 7);
    *(_OWORD *)(v17 + 16) = xmmword_10019EDA0;
    *(_QWORD *)(v17 + 32) = v15;
    v23[0] = v17;
    specialized Array._endMutation()(v17);
    v18 = v23[0];
    v22 = 0;
    swift_beginAccess(v8, v23, 33, 0);
    v19 = swift_retain(v15);
    NSDiffableDataSourceSectionSnapshot.append(_:to:)(v18, &v22, v5, v19);
    swift_endAccess(v23);
    swift_release(v15);
    v20 = v18;
LABEL_10:
    swift_bridgeObjectRelease(v20);
    v21 = swift_beginAccess(v8, v23, 0, 0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t, __n128))(v6 + 32))(a2, v8, v5, v21);
  }
  __break(1u);
  return result;
}

void closure #1 in MOSuggestionInterstitialCarouselView.reloadAll()(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  _QWORD *Strong;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  __n128 v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t (*v31)(void);
  _QWORD v32[3];
  uint64_t v33;
  _BYTE v34[24];
  _BYTE v35[24];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSDiffableDataSourceSectionSnapshot<MOSuggestionSheetAssetViewModel>);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v29 - v7;
  a1 += 16;
  swift_beginAccess(a1, v35, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v10 = Strong;
    v31 = *(uint64_t (**)(void))((swift_isaMask & *Strong) + 0xE0);
    v11 = v31();
    v12 = v11;
    if (v11 >> 62)
      goto LABEL_27;
    v13 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    v14 = swift_bridgeObjectRelease(v11);
    while (1)
    {
      if (!v13)
      {
LABEL_23:
        MOSuggestionInterstitialCarouselView.printViewModels()();

        return;
      }
      v15 = 0;
      v29 = xmmword_10019EDA0;
      v30 = v3;
      while (1)
      {
        if (v15 >= 0xD)
          goto LABEL_8;
        v14 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v10) + 0xB0))(v14);
        if (!v14)
          goto LABEL_8;
        v17 = (void *)v14;
        v18 = type metadata accessor for MOSuggestionSheetAssetViewModel(0);
        v19 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionSheetAssetViewModel and conformance MOSuggestionSheetAssetViewModel, type metadata accessor for MOSuggestionSheetAssetViewModel, (uint64_t)&protocol conformance descriptor for MOSuggestionSheetAssetViewModel);
        v20 = NSDiffableDataSourceSectionSnapshot.init()(v18, v19);
        v21 = ((uint64_t (*)(uint64_t))v31)(v20);
        v12 = v21;
        if ((unint64_t)v21 >> 62)
          break;
        v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_13:
        if (v15 >= v22)
        {
          swift_bridgeObjectRelease(v12);
        }
        else
        {
          if ((v12 & 0xC000000000000001) != 0)
          {
            v23 = specialized _ArrayBuffer._getElementSlowPath(_:)(v15, v12);
          }
          else
          {
            if (v15 >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_26;
            v23 = *(_QWORD *)(v12 + 8 * v15 + 32);
            swift_retain(v23);
          }
          swift_bridgeObjectRelease(v12);
          v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
          v25 = swift_allocObject(v24, 40, 7);
          *(_OWORD *)(v25 + 16) = v29;
          *(_QWORD *)(v25 + 32) = v23;
          v32[0] = v25;
          specialized Array._endMutation()(v25);
          v26 = v32[0];
          v33 = 0;
          swift_beginAccess(v6, v32, 33, 0);
          v27 = swift_retain(v23);
          NSDiffableDataSourceSectionSnapshot.append(_:to:)(v26, &v33, v2, v27);
          swift_endAccess(v32);
          swift_release(v23);
          swift_bridgeObjectRelease(v26);
          v3 = v30;
        }
        v16 = swift_beginAccess(v6, v34, 0, 0);
        (*(void (**)(char *, char *, uint64_t, __n128))(v3 + 32))(v8, v6, v2, v16);
        LOBYTE(v32[0]) = v15;
        UICollectionViewDiffableDataSource.apply(_:to:animatingDifferences:completion:)(v8, v32, 1, 0, 0);

        v14 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
LABEL_8:
        if (v13 == ++v15)
          goto LABEL_23;
      }
      if (v21 >= 0)
        v21 &= 0xFFFFFFFFFFFFFF8uLL;
      v22 = _CocoaArrayWrapper.endIndex.getter(v21);
      if ((v22 & 0x8000000000000000) == 0)
        goto LABEL_13;
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      if (v12 < 0)
        v28 = v12;
      else
        v28 = v12 & 0xFFFFFFFFFFFFFF8;
      v13 = _CocoaArrayWrapper.endIndex.getter(v28);
      v14 = swift_bridgeObjectRelease(v12);
      if (v13 < 0)
      {
        __break(1u);
        return;
      }
    }
  }
}

Swift::Void __swiftcall MOSuggestionInterstitialCarouselView.printViewModels()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  __n128 v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xE0))();
  v2 = v1;
  if ((unint64_t)v1 >> 62)
  {
    if (v1 >= 0)
      v1 &= 0xFFFFFFFFFFFFFF8uLL;
    v3 = _CocoaArrayWrapper.endIndex.getter(v1);
    if (!v3)
      goto LABEL_17;
  }
  else
  {
    v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v3)
    {
LABEL_17:
      swift_bridgeObjectRelease(v2);
      return;
    }
  }
  if (v3 >= 1)
  {
    v4 = 0;
    v5 = v2 & 0xC000000000000001;
    v6 = &unk_100206000;
    v29 = v3;
    v30 = v2;
    do
    {
      if (v5)
      {
        v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
      }
      else
      {
        v8 = *(_QWORD *)(v2 + 8 * v4 + 32);
        swift_retain(v8);
      }
      if (v6[386] != -1)
        swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
      v9 = type metadata accessor for Logger(0);
      __swift_project_value_buffer(v9, (uint64_t)static MOAngelLogger.assets);
      v10 = swift_retain_n(v8, 4);
      v11 = Logger.logObject.getter(v10);
      v12 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = swift_slowAlloc(22, -1);
        v14 = v5;
        v15 = swift_slowAlloc(64, -1);
        v31 = v15;
        *(_DWORD *)v13 = 136315394;
        v16 = (*(uint64_t (**)(void))(*(_QWORD *)v8 + 512))();
        v18 = v17;
        *(_QWORD *)(v13 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v17, &v31);
        swift_release_n(v8, 2, v19);
        swift_bridgeObjectRelease(v18);
        *(_WORD *)(v13 + 12) = 2080;
        v20 = v6;
        v21 = type metadata accessor for UUID(0);
        v22 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v23 = v21;
        v6 = v20;
        v24 = dispatch thunk of CustomStringConvertible.description.getter(v23, v22);
        v26 = v25;
        *(_QWORD *)(v13 + 14) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v25, &v31);
        swift_release_n(v8, 2, v27);
        swift_bridgeObjectRelease(v26);
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "assetViewModel id=%s, uuid=%s", (uint8_t *)v13, 0x16u);
        swift_arrayDestroy(v15, 2, (char *)&type metadata for Any + 8);
        v28 = v15;
        v5 = v14;
        v3 = v29;
        v2 = v30;
        swift_slowDealloc(v28, -1, -1);
        swift_slowDealloc(v13, -1, -1);
        swift_release(v8);

      }
      else
      {

        swift_release_n(v8, 5, v7);
      }
      ++v4;
    }
    while (v3 != v4);
    goto LABEL_17;
  }
  __break(1u);
}

uint64_t MOSuggestionInterstitialCarouselView.scrollToIndex(index:shouldScroll:velocity:)(uint64_t a1, char a2, double a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Class isa;
  id v19;
  double v20;
  double v21;
  double v22;
  double v23;
  BOOL v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  os_log_type_t v42;
  uint8_t *v43;
  void **aBlock;
  _QWORD v45[4];
  uint64_t v46;
  CGRect v47;

  v4 = v3;
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v45[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0xC8))(v10);
  if (!v13)
    goto LABEL_20;
  v14 = (void *)v13;
  if (a1 < 0)
    goto LABEL_19;
  v15 = (*(uint64_t (**)(void))((swift_isaMask & *v3) + 0xE0))();
  v16 = v15;
  if ((unint64_t)v15 >> 62)
  {
    if (v15 >= 0)
      v15 &= 0xFFFFFFFFFFFFFF8uLL;
    v17 = _CocoaArrayWrapper.endIndex.getter(v15);
  }
  else
  {
    v17 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v16);
  if (v17 <= a1)
  {
LABEL_19:

LABEL_20:
    if (serverManager._clientConnections != (NSMutableDictionary *)-1)
      swift_once(&serverManager._clientConnections, one-time initialization function for shared);
    v35 = type metadata accessor for Logger(0);
    v36 = __swift_project_value_buffer(v35, (uint64_t)static MOAngelLogger.shared);
    v37 = Logger.logObject.getter(v36);
    v38 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v39 = 134217984;
      aBlock = (void **)a1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v45, v39 + 4);
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "[MOSuggestionInterstitialCarouselView] index out of bounds=%ld", v39, 0xCu);
      swift_slowDealloc(v39, -1, -1);
    }
    goto LABEL_24;
  }
  IndexPath.init(row:section:)(0, a1);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  v19 = objc_msgSend(v14, "layoutAttributesForItemAtIndexPath:", isa);

  if (!v19)
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1)
      swift_once(&serverManager._clientConnections, one-time initialization function for shared);
    v40 = type metadata accessor for Logger(0);
    v41 = __swift_project_value_buffer(v40, (uint64_t)static MOAngelLogger.shared);
    v37 = Logger.logObject.getter(v41);
    v42 = static os_log_type_t.info.getter();
    if (!os_log_type_enabled(v37, v42))
    {

      return 0;
    }
    v43 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v43 = 134217984;
    aBlock = (void **)a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v45, v43 + 4);
    _os_log_impl((void *)&_mh_execute_header, v37, v42, "[MOSuggestionInterstitialCarouselView] layout nil for index=%ld", v43, 0xCu);
    swift_slowDealloc(v43, -1, -1);

LABEL_24:
    return 0;
  }
  objc_msgSend(v19, "center");
  v21 = v20;
  objc_msgSend(v14, "frame");
  v22 = v21 + CGRectGetWidth(v47) * -0.5;
  if (v22 > 0.0)
    v23 = v22;
  else
    v23 = 0.0;
  if (a1)
    v24 = v22 > 0.0;
  else
    v24 = 0;
  if (v24)
    v25 = v23;
  else
    v25 = -50.0;
  objc_msgSend(v14, "contentOffset");
  v27 = v26;
  if ((a2 & 1) != 0)
  {
    v28 = (void *)objc_opt_self(UIView);
    v29 = swift_allocObject(&unk_1001E9050, 40, 7);
    *(_QWORD *)(v29 + 16) = v14;
    *(double *)(v29 + 24) = v25;
    *(_QWORD *)(v29 + 32) = v27;
    v45[3] = partial apply for closure #1 in MOSuggestionInterstitialCarouselView.scrollToIndex(index:shouldScroll:velocity:);
    v46 = v29;
    aBlock = _NSConcreteStackBlock;
    v45[0] = 1107296256;
    v45[1] = thunk for @escaping @callee_guaranteed () -> ();
    v45[2] = &block_descriptor_27_0;
    v30 = _Block_copy(&aBlock);
    v31 = v46;
    v32 = v14;
    swift_release(v31);
    objc_msgSend(v28, "animateWithDuration:animations:", v30, a3);
    _Block_release(v30);
  }
  v33 = objc_retain(*(id *)((char *)v4
                          + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_pageControl));
  objc_msgSend(v33, "setCurrentPage:", a1);

  return *(_QWORD *)&v25;
}

Swift::Void __swiftcall MOSuggestionInterstitialCarouselView.scrollViewWillBeginDragging(_:)(UIScrollView a1)
{

}

Swift::Void __swiftcall MOSuggestionInterstitialCarouselView.scrollViewDidEndDragging(_:willDecelerate:)(UIScrollView _, Swift::Bool willDecelerate)
{

}

void MOSuggestionInterstitialCarouselView.scrollViewWillEndDragging(_:withVelocity:targetContentOffset:)(void *a1, uint64_t *a2, double a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  const char *v29;
  float v30;
  float v31;
  float v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  double v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  double v43;
  uint64_t v44;
  CGRect v45;

  v4 = v3;
  if (serverManager._clientConnections != (NSMutableDictionary *)-1)
    swift_once(&serverManager._clientConnections, one-time initialization function for shared);
  v8 = type metadata accessor for Logger(0);
  v9 = __swift_project_value_buffer(v8, (uint64_t)static MOAngelLogger.shared);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc(22, -1);
    *(_DWORD *)v12 = 134218240;
    v43 = a3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v12 + 4);
    *(_WORD *)(v12 + 12) = 2048;
    v43 = *(double *)a2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v12 + 14);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "[MOSuggestionInterstitialCarouselView] velocity=%f, userTarget=%f", (uint8_t *)v12, 0x16u);
    swift_slowDealloc(v12, -1, -1);
  }

  if (((*(uint64_t (**)(void))((swift_isaMask & *v4) + 0x128))() & 1) == 0)
  {
    objc_msgSend(a1, "frame");
    v13 = CGRectGetWidth(v45) + -100.0;
    objc_msgSend(a1, "contentOffset");
    v15 = v14;
    v16 = v13 * 1.5;
    if (v14 >= v16 + v16)
    {
      objc_msgSend(a1, "contentSize");
      if (v18 - v16 >= v15)
        goto LABEL_11;
      v17 = -50.0;
    }
    else
    {
      v17 = 50.0;
    }
    v15 = v15 + v17;
LABEL_11:
    v19 = v15 / v13;
    v20 = round(v15 / v13);
    if ((~*(_QWORD *)&v20 & 0x7FF0000000000000) != 0)
    {
      if (v20 > -9.22337204e18)
      {
        if (v20 < 9.22337204e18)
        {
          v21 = *(double *)a2;
          v22 = objc_msgSend(a1, "setDecelerationRate:", UIScrollViewDecelerationRateFast);
          if (fabs(a3) < 0.7)
          {
            v23 = Logger.logObject.getter(v22);
            v24 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v23, v24))
            {
              v25 = (uint8_t *)swift_slowAlloc(12, -1);
              *(_DWORD *)v25 = 134217984;
              v43 = a3;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v25 + 4);
              _os_log_impl((void *)&_mh_execute_header, v23, v24, "[MOSuggestionInterstitialCarouselView] Rejecting scroll due to small velocity =%f", v25, 0xCu);
              swift_slowDealloc(v25, -1, -1);
            }

            v22 = objc_msgSend(a1, "setDecelerationRate:", 10.0);
          }
          if (v21 >= v15)
          {
            if (a3 < 0.0)
            {
              v26 = Logger.logObject.getter(v22);
              v27 = static os_log_type_t.debug.getter();
              if (os_log_type_enabled(v26, v27))
              {
                v28 = (uint8_t *)swift_slowAlloc(12, -1);
                *(_DWORD *)v28 = 134217984;
                v43 = a3;
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v28 + 4);
                v29 = "[MOSuggestionInterstitialCarouselView] Rejecting scroll due to invalid velocity (+) direction =%f";
                goto LABEL_25;
              }
LABEL_26:

              objc_msgSend(a1, "setDecelerationRate:", 2.0);
              return;
            }
            goto LABEL_31;
          }
          if (a3 > 0.0)
          {
            v26 = Logger.logObject.getter(v22);
            v27 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v26, v27))
            {
              v28 = (uint8_t *)swift_slowAlloc(12, -1);
              *(_DWORD *)v28 = 134217984;
              v43 = a3;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v28 + 4);
              v29 = "[MOSuggestionInterstitialCarouselView] Rejecting scroll due to invalid velocity (-) direction =%f";
LABEL_25:
              _os_log_impl((void *)&_mh_execute_header, v26, v27, v29, v28, 0xCu);
              swift_slowDealloc(v28, -1, -1);
              goto LABEL_26;
            }
            goto LABEL_26;
          }
          v30 = v19;
          v31 = floorf(v30);
          if ((~LODWORD(v31) & 0x7F800000) != 0)
          {
            if (v31 > -9.2234e18)
            {
              if (v31 < 9.2234e18)
                goto LABEL_34;
              __break(1u);
LABEL_31:
              v32 = v19;
              v31 = ceilf(v32);
              if ((~LODWORD(v31) & 0x7F800000) != 0)
              {
                if (v31 > -9.2234e18)
                {
                  if (v31 < 9.2234e18)
                  {
LABEL_34:
                    v33 = (uint64_t)v31;
                    v34 = MOSuggestionInterstitialCarouselView.scrollToIndex(index:shouldScroll:velocity:)((uint64_t)v31, 0, 0.2);
                    if ((v35 & 1) != 0)
                    {
                      v40 = Logger.logObject.getter(v34);
                      v41 = static os_log_type_t.debug.getter();
                      if (os_log_type_enabled(v40, v41))
                      {
                        v42 = (uint8_t *)swift_slowAlloc(12, -1);
                        *(_DWORD *)v42 = 134217984;
                        v43 = v21;
                        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v42 + 4);
                        _os_log_impl((void *)&_mh_execute_header, v40, v41, "[MOSuggestionInterstitialCarouselView] fall back to currentTargetOffset=%f", v42, 0xCu);
                        swift_slowDealloc(v42, -1, -1);
                      }

                      *(double *)a2 = v21;
                    }
                    else
                    {
                      v36 = *(double *)&v34;
                      *a2 = v34;
                      v37 = Logger.logObject.getter(v34);
                      v38 = static os_log_type_t.debug.getter();
                      if (os_log_type_enabled(v37, v38))
                      {
                        v39 = swift_slowAlloc(32, -1);
                        *(_DWORD *)v39 = 134218496;
                        v43 = *(double *)&v33;
                        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v39 + 4);
                        *(_WORD *)(v39 + 12) = 2048;
                        v43 = v15;
                        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v39 + 14);
                        *(_WORD *)(v39 + 22) = 2048;
                        v43 = v36;
                        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v39 + 24);
                        _os_log_impl((void *)&_mh_execute_header, v37, v38, "[MOSuggestionInterstitialCarouselView] scrolling to index=%ld, currentTargetOffset=%f, newPoint=%f", (uint8_t *)v39, 0x20u);
                        swift_slowDealloc(v39, -1, -1);
                      }

                    }
                    return;
                  }
LABEL_49:
                  __break(1u);
                  return;
                }
LABEL_48:
                __break(1u);
                goto LABEL_49;
              }
LABEL_47:
              __break(1u);
              goto LABEL_48;
            }
LABEL_46:
            __break(1u);
            goto LABEL_47;
          }
LABEL_45:
          __break(1u);
          goto LABEL_46;
        }
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_44;
  }
}

void MOSuggestionInterstitialCarouselView.toggleSelectionState(_:view:indexPath:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  void (*v30)(uint64_t *, _QWORD, __n128);
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  void (*v42)(uint64_t *, _QWORD, __n128);
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;

  v3 = v2;
  v5 = *(uint64_t (**)(void))(*(_QWORD *)a1 + 512);
  v6 = v5();
  if (v6 == 0x6C6F686563616C70 && v7 == 0xEB00000000726564)
  {
    swift_bridgeObjectRelease(0xEB00000000726564);
    return;
  }
  v9 = v7;
  v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, 0x6C6F686563616C70, 0xEB00000000726564, 0);
  v11 = swift_bridgeObjectRelease(v9);
  if ((v10 & 1) == 0)
  {
    v12 = (*(uint64_t (**)(__n128))((swift_isaMask & *v3) + 0x110))(v11);
    v13 = v5();
    v15 = v14;
    v44 = v13;
    v45 = v14;
    v46 = 35;
    v47 = 0xE100000000000000;
    v16 = lazy protocol witness table accessor for type String and conformance String();
    v17 = (_QWORD *)StringProtocol.components<A>(separatedBy:)(&v46, &type metadata for String, &type metadata for String, v16, v16);
    if (!v17[2])
    {
      __break(1u);
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
    v18 = v17;
    v19 = v17[4];
    v20 = v17[5];
    swift_bridgeObjectRetain(v20);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(v18);
    LOBYTE(v18) = specialized Set.contains(_:)(v19, v20, v12);
    swift_bridgeObjectRelease(v20);
    v21 = swift_bridgeObjectRelease(v12);
    if ((v18 & 1) != 0)
    {
      v22 = ((uint64_t (*)(__n128))v5)(v21);
      v24 = v23;
      v44 = v22;
      v45 = v23;
      v46 = 35;
      v47 = 0xE100000000000000;
      v25 = (_QWORD *)StringProtocol.components<A>(separatedBy:)(&v46, &type metadata for String, &type metadata for String, v16, v16);
      if (v25[2])
      {
        v26 = v25;
        v27 = v25[4];
        v28 = v25[5];
        swift_bridgeObjectRetain(v28);
        swift_bridgeObjectRelease(v24);
        v29 = swift_bridgeObjectRelease(v26);
        v30 = (void (*)(uint64_t *, _QWORD, __n128))(*(uint64_t (**)(uint64_t *, __n128))((swift_isaMask & *v3) + 0x120))(&v44, v29);
        specialized Set._Variant.remove(_:)(v27, v28);
        v32 = v31;
        swift_bridgeObjectRelease(v28);
        v33 = swift_bridgeObjectRelease(v32);
        v30(&v44, 0, v33);
        (*(void (**)(_QWORD))((swift_isaMask & **(_QWORD **)(a2
                                                                      + OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_checkmarkView))
                                       + 0xA0))(0);
        return;
      }
      goto LABEL_15;
    }
    v34 = ((uint64_t (*)(__n128))v5)(v21);
    v36 = v35;
    v44 = v34;
    v45 = v35;
    v46 = 35;
    v47 = 0xE100000000000000;
    v37 = (_QWORD *)StringProtocol.components<A>(separatedBy:)(&v46, &type metadata for String, &type metadata for String, v16, v16);
    if (!v37[2])
    {
LABEL_16:
      __break(1u);
      return;
    }
    v38 = v37;
    v39 = v37[4];
    v40 = v37[5];
    swift_bridgeObjectRetain(v40);
    swift_bridgeObjectRelease(v36);
    v41 = swift_bridgeObjectRelease(v38);
    v42 = (void (*)(uint64_t *, _QWORD, __n128))(*(uint64_t (**)(uint64_t *, __n128))((swift_isaMask & *v3) + 0x120))(&v44, v41);
    specialized Set._Variant.insert(_:)(&v46, v39, v40);
    v43 = swift_bridgeObjectRelease(v47);
    v42(&v44, 0, v43);
    (*(void (**)(uint64_t))((swift_isaMask & **(_QWORD **)(a2
                                                                   + OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_checkmarkView))
                                    + 0xA0))(1);
  }
}

double MOSuggestionInterstitialCarouselView.toggleSelectionState(indexPath:)(unint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  double result;
  void *v6;
  NSString v7;
  Class isa;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;

  v2 = v1;
  v4 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xC8))();
  if (v4)
  {
    v6 = (void *)v4;
    v7 = String._bridgeToObjectiveC()();
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v18 = objc_msgSend(v6, "supplementaryViewForElementKind:atIndexPath:", v7, isa);

    if (v18)
    {
      v9 = type metadata accessor for MOSuggestionInterstitialSupplementaryCheckmarkView();
      v10 = swift_dynamicCastClass(v18, v9);
      if (v10)
      {
        v11 = v10;
        v12 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0xE0))();
        v13 = a1;
        v14 = IndexPath.section.getter(v12);
        if ((unint64_t)v12 >> 62)
        {
          a1 = v14;
          if (v12 < 0)
            v17 = v12;
          else
            v17 = v12 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v12);
          v13 = _CocoaArrayWrapper.endIndex.getter(v17);
          swift_bridgeObjectRelease(v12);
          if ((v13 & 0x8000000000000000) == 0)
            goto LABEL_20;
          __break(1u);
LABEL_18:
          v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v12);
LABEL_10:
          swift_bridgeObjectRelease(v12);
          MOSuggestionInterstitialCarouselView.toggleSelectionState(_:view:indexPath:)(v16, v11);

          *(_QWORD *)&result = swift_release(v16).n128_u64[0];
        }
        else
        {
          v15 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
          if ((v14 & 0x8000000000000000) == 0)
          {
            while (v14 < v15)
            {
              if ((v12 & 0xC000000000000001) != 0)
                goto LABEL_18;
              if (v14 < *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
                v16 = *(_QWORD *)(v12 + 8 * v14 + 32);
                swift_retain(v16);
                goto LABEL_10;
              }
              __break(1u);
LABEL_20:
              v15 = v13;
              v14 = a1;
              if ((a1 & 0x8000000000000000) != 0)
                break;
            }
          }

          *(_QWORD *)&result = swift_bridgeObjectRelease(v12).n128_u64[0];
        }
      }
      else
      {

      }
    }
  }
  return result;
}

void MOSuggestionInterstitialCarouselView.forceCheckmark(indexPath:selected:)(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v4;
  void *v5;
  NSString v6;
  Class isa;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v4 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0xC8))();
  if (v4)
  {
    v5 = (void *)v4;
    v6 = String._bridgeToObjectiveC()();
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v10 = objc_msgSend(v5, "supplementaryViewForElementKind:atIndexPath:", v6, isa);

    if (v10)
    {
      v8 = type metadata accessor for MOSuggestionInterstitialSupplementaryCheckmarkView();
      v9 = swift_dynamicCastClass(v10, v8);
      if (v9)
        (*(void (**)(_QWORD))((swift_isaMask & **(_QWORD **)(v9
                                                                      + OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_checkmarkView))
                                       + 0xA0))(a2 & 1);

    }
  }
}

void MOSuggestionInterstitialCarouselView.updateCheckmarkVisibity(indexPath:hidden:)(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v4;
  void *v5;
  NSString v6;
  Class isa;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v4 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0xC8))();
  if (v4)
  {
    v5 = (void *)v4;
    v6 = String._bridgeToObjectiveC()();
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v10 = objc_msgSend(v5, "supplementaryViewForElementKind:atIndexPath:", v6, isa);

    if (v10)
    {
      v8 = type metadata accessor for MOSuggestionInterstitialSupplementaryCheckmarkView();
      v9 = swift_dynamicCastClass(v10, v8);
      if (v9)
        objc_msgSend(*(id *)(v9+ OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_checkmarkView), "setHidden:", a2 & 1);

    }
  }
}

double MOSuggestionInterstitialCarouselView.collectionView(_:didSelectItemAt:)(uint64_t a1, unint64_t a2)
{
  return MOSuggestionInterstitialCarouselView.toggleSelectionState(indexPath:)(a2);
}

uint64_t @objc MOSuggestionInterstitialCarouselView.collectionView(_:didSelectItemAt:)(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  uint64_t v14;

  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v11 = a3;
  v12 = a1;
  MOSuggestionInterstitialCarouselView.toggleSelectionState(indexPath:)((unint64_t)v10);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

BOOL MOSuggestionInterstitialCarouselView.collectionView(_:shouldSelectItemAt:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;

  v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xF8))();
  v2 = IndexPath.section.getter(v1);
  v3 = specialized Set.contains(_:)(v2, v1);
  swift_bridgeObjectRelease(v1);
  return !v3;
}

BOOL @objc MOSuggestionInterstitialCarouselView.collectionView(_:shouldSelectItemAt:)(_QWORD *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(void);
  id v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v18;

  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v11 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0xF8);
  v12 = a3;
  v13 = a1;
  v14 = v11();
  v15 = IndexPath.section.getter(v14);
  LOBYTE(a4) = specialized Set.contains(_:)(v15, v14);

  v16 = swift_bridgeObjectRelease(v14);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v16);
  return (a4 & 1) == 0;
}

void MOSuggestionInterstitialCarouselView.collectionView(_:willDisplaySupplementaryView:forElementKind:at:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  specialized MOSuggestionInterstitialCarouselView.collectionView(_:willDisplaySupplementaryView:forElementKind:at:)(a2, a3, a4, a5);
}

id thunk for @escaping @callee_guaranteed (@unowned Int, @guaranteed NSCollectionLayoutEnvironment) -> (@owned NSCollectionLayoutSection?)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  void *v7;

  v6 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  swift_unknownObjectRetain();
  v7 = (void *)v6(a2, a3);
  swift_release(v5);
  swift_unknownObjectRelease(a3);
  return v7;
}

uint64_t sub_1000D9EFC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void partial apply for closure #1 in MOSuggestionInterstitialCarouselView.reloadAll()()
{
  uint64_t v0;

  closure #1 in MOSuggestionInterstitialCarouselView.reloadAll()(v0);
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_20(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t type metadata accessor for MOSuggestionInterstitialCarouselView()
{
  return objc_opt_self(_TtC16MomentsUIService36MOSuggestionInterstitialCarouselView);
}

uint64_t sub_1000D9F60()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t partial apply for closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource()(_QWORD *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;

  return closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource()(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

void partial apply for closure #2 in MOSuggestionInterstitialCarouselView.configureDataSource()(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  closure #2 in MOSuggestionInterstitialCarouselView.configureDataSource()(a1, a2, a3, a4, v4);
}

uint64_t sub_1000D9F94()
{
  return objectdestroy_6Tm(&demangling cache variable for type metadata for UICollectionView.CellRegistration<MOSuggestionInterstitialCarouselViewCell, MOSuggestionSheetAssetViewModel>);
}

uint64_t partial apply for closure #3 in MOSuggestionInterstitialCarouselView.configureDataSource()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<MOSuggestionInterstitialCarouselViewCell, MOSuggestionSheetAssetViewModel>)
                                      - 8)
                          + 80);
  return closure #3 in MOSuggestionInterstitialCarouselView.configureDataSource()(a1, a2, a3, v3 + ((v7 + 16) & ~v7));
}

uint64_t sub_1000D9FF8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@guaranteed UICollectionView, @in_guaranteed IndexPath, @guaranteed MOSuggestionSheetAssetViewModel) -> (@owned MOSuggestionInterstitialCarouselViewCell?)(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v3 + 16))(a1, a2, *a3);
}

uint64_t sub_1000DA040()
{
  return objectdestroy_6Tm(&demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<MOSuggestionInterstitialSupplementaryCheckmarkView>);
}

uint64_t objectdestroy_6Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 16) & ~v4;
  v6 = v5 + *(_QWORD *)(v3 + 64);
  v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return swift_deallocObject(v1, v6, v7);
}

uint64_t partial apply for closure #4 in MOSuggestionInterstitialCarouselView.configureDataSource()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<MOSuggestionInterstitialSupplementaryCheckmarkView>)
                                      - 8)
                          + 80);
  v7 = v4 + ((v6 + 16) & ~v6);
  v8 = type metadata accessor for MOSuggestionInterstitialSupplementaryCheckmarkView();
  return UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)(v7, a4, v8);
}

void specialized MOSuggestionInterstitialCarouselView.init(coder:)()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;

  v1 = v0;
  v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v20 = *(_QWORD *)(v2 - 8);
  v21 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_dataSource] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_collectionView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_assetViewModels] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_denySelectionList] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_selectedAssetIdentifiers] = &_swiftEmptySetSingleton;
  v11 = OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_containerView;
  *(_QWORD *)&v1[v11] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_containerViewBottomConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_pageControlConstraints] = _swiftEmptyArrayStorage;
  v12 = OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_pageControl;
  *(_QWORD *)&v1[v12] = objc_msgSend(objc_allocWithZone((Class)UIPageControl), "init");
  v13 = &v1[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_delegate];
  *((_QWORD *)v13 + 1) = 0;
  swift_unknownObjectWeakInit(v13);
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_controller]);
  v14 = OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_queue;
  v15 = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v15);
  v22 = _swiftEmptyArrayStorage;
  v16 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  v18 = lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A], &demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v22, v17, v18, v5, v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v20 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v21);
  *(_QWORD *)&v1[v14] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000002FLL, 0x80000001001A6140, v10, v7, v4, 0);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionInterstitialCarouselView.swift", 59, 2, 59, 0);
  __break(1u);
}

id partial apply for closure #1 in MOSuggestionInterstitialCarouselView.generateLayout()(char *a1, void *a2)
{
  uint64_t v2;

  return closure #1 in MOSuggestionInterstitialCarouselView.generateLayout()(a1, a2, v2);
}

uint64_t partial apply for closure #1 in MOSuggestionInterstitialCarouselView.generateLandscapeLayout()(uint64_t a1, void *a2)
{
  uint64_t v2;

  return closure #1 in MOSuggestionInterstitialCarouselView.generateLandscapeLayout()(a1, a2, v2);
}

uint64_t sub_1000DA3FC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

id partial apply for closure #1 in MOSuggestionInterstitialCarouselView.scrollToIndex(index:shouldScroll:velocity:)()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setContentOffset:animated:", 0, *(double *)(v0 + 24), *(double *)(v0 + 32));
}

void specialized MOSuggestionInterstitialCarouselView.collectionView(_:willDisplaySupplementaryView:forElementKind:at:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void);
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  __n128 v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(void);
  uint64_t v52;
  id v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56[2];

  v5 = v4;
  v10 = type metadata accessor for IndexPath(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 == 0xD000000000000032 && a3 == 0x80000001001AAB70
    || (_stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, 0xD000000000000032, 0x80000001001AAB70, 0) & 1) != 0)
  {
    v14 = type metadata accessor for MOSuggestionInterstitialSupplementaryCheckmarkView();
    v15 = swift_dynamicCastClass(a1, v14);
    if (v15)
    {
      v16 = v15;
      v17 = *(uint64_t (**)(void))((swift_isaMask & *v5) + 0xE0);
      v18 = a1;
      v19 = v17();
      v20 = IndexPath.section.getter(v19);
      if ((unint64_t)v19 >> 62)
      {
        if (v19 < 0)
          v49 = v19;
        else
          v49 = v19 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v19);
        v21 = _CocoaArrayWrapper.endIndex.getter(v49);
        swift_bridgeObjectRelease(v19);
        if ((v21 & 0x8000000000000000) != 0)
        {
          __break(1u);
          goto LABEL_24;
        }
      }
      else
      {
        v21 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      if ((v20 & 0x8000000000000000) != 0 || v20 >= v21)
      {

        swift_bridgeObjectRelease(v19);
        return;
      }
      if ((v19 & 0xC000000000000001) == 0)
      {
        if (v20 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_26;
        }
        v21 = *(_QWORD *)(v19 + 8 * v20 + 32);
        swift_retain(v21);
LABEL_12:
        v52 = a4;
        v53 = v18;
        v22 = swift_bridgeObjectRelease(v19);
        v23 = (*(uint64_t (**)(__n128))((swift_isaMask & *v5) + 0x110))(v22);
        v51 = *(uint64_t (**)(void))(*(_QWORD *)v21 + 512);
        v24 = v51();
        v5 = (_QWORD *)v25;
        v56[0] = v24;
        v56[1] = v25;
        v54 = 35;
        v55 = 0xE100000000000000;
        v26 = lazy protocol witness table accessor for type String and conformance String();
        v27 = (_QWORD *)StringProtocol.components<A>(separatedBy:)(&v54, &type metadata for String, &type metadata for String, v26, v26);
        if (v27[2])
        {
          v28 = v27;
          v30 = v27[4];
          v29 = v27[5];
          swift_bridgeObjectRetain(v29);
          swift_bridgeObjectRelease(v5);
          swift_bridgeObjectRelease(v28);
          LODWORD(v5) = specialized Set.contains(_:)(v30, v29, v23);
          swift_bridgeObjectRelease(v29);
          v31 = swift_bridgeObjectRelease(v23);
          (*(void (**)(_QWORD, __n128))((swift_isaMask & **(_QWORD **)(v16
                                                                                + OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_checkmarkView))
                                                 + 0xA0))(v5 & 1, v31);
          if (serverManager._clientConnections == (NSMutableDictionary *)-1)
            goto LABEL_14;
          goto LABEL_27;
        }
LABEL_26:
        __break(1u);
LABEL_27:
        swift_once(&serverManager._clientConnections, one-time initialization function for shared);
LABEL_14:
        v32 = type metadata accessor for Logger(0);
        __swift_project_value_buffer(v32, (uint64_t)static MOAngelLogger.shared);
        (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v52, v10);
        v33 = swift_retain_n(v21, 2);
        v34 = Logger.logObject.getter(v33);
        v35 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v34, v35))
        {
          v36 = swift_slowAlloc(28, -1);
          v52 = swift_slowAlloc(64, -1);
          v56[0] = v52;
          *(_DWORD *)v36 = 136315650;
          v37 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes(&lazy protocol witness table cache variable for type IndexPath and conformance IndexPath, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
          v38 = dispatch thunk of CustomStringConvertible.description.getter(v10, v37);
          v40 = v39;
          v54 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v38, v39, v56);
          HIDWORD(v50) = (_DWORD)v5;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55, v36 + 4);
          v41 = swift_bridgeObjectRelease(v40);
          v42 = (*(uint64_t (**)(char *, uint64_t, __n128))(v11 + 8))(v13, v10, v41);
          *(_WORD *)(v36 + 12) = 2080;
          v43 = ((uint64_t (*)(uint64_t))v51)(v42);
          v45 = v44;
          v54 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v43, v44, v56);
          v46 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55, v36 + 14);
          swift_release_n(v21, 2, v46);
          swift_bridgeObjectRelease(v45);
          *(_WORD *)(v36 + 22) = 1024;
          LODWORD(v54) = BYTE4(v50) & 1;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, (char *)&v54 + 4, v36 + 24);
          _os_log_impl((void *)&_mh_execute_header, v34, v35, "[MOSuggestionInterstitialCarouselView] will display supplementary view at %s, id=%s, shouldBeSelected=%{BOOL}d", (uint8_t *)v36, 0x1Cu);
          v47 = v52;
          swift_arrayDestroy(v52, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v47, -1, -1);
          swift_slowDealloc(v36, -1, -1);
          swift_release(v21);

        }
        else
        {
          swift_release(v21);

          (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
          swift_release_n(v21, 2, v48);
        }
        return;
      }
LABEL_24:
      v21 = specialized _ArrayBuffer._getElementSlowPath(_:)(v20, v19);
      goto LABEL_12;
    }
  }
}

uint64_t sub_1000DA960@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xB0))();
  *a2 = result;
  return result;
}

uint64_t sub_1000DA9A0(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0xB8);
  v4 = *a1;
  return v3(v2);
}

uint64_t sub_1000DA9EC@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xC8))();
  *a2 = result;
  return result;
}

uint64_t sub_1000DAA2C(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0xD0);
  v4 = *a1;
  return v3(v2);
}

uint64_t sub_1000DAA78@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xE0))();
  *a2 = result;
  return result;
}

uint64_t sub_1000DAAB8(_QWORD *a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0xE8);
  v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

uint64_t sub_1000DAAF8@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xF8))();
  *a2 = result;
  return result;
}

uint64_t sub_1000DAB38(_QWORD *a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0x100);
  v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

uint64_t sub_1000DAB78@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x110))();
  *a2 = result;
  return result;
}

uint64_t sub_1000DABB8(_QWORD *a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0x118);
  v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

uint64_t sub_1000DABF8@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x190))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1000DAC38(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **a2) + 0x198);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t sub_1000DAC88@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x1A8))();
  *a2 = result;
  return result;
}

uint64_t sub_1000DACC8(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0x1B0);
  v4 = *a1;
  return v3(v2);
}

ValueMetadata *type metadata accessor for MOSuggestionInterstitialCarouselViewConstants()
{
  return &type metadata for MOSuggestionInterstitialCarouselViewConstants;
}

uint64_t partial apply for closure #1 in closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource()()
{
  return partial apply for closure #1 in closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource()((uint64_t (*)(_QWORD, uint64_t))closure #1 in closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource());
}

uint64_t objectdestroy_42Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t partial apply for closure #2 in closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource()()
{
  return partial apply for closure #1 in closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource()((uint64_t (*)(_QWORD, uint64_t))closure #2 in closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource());
}

uint64_t sub_1000DADB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t partial apply for closure #1 in closure #2 in closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource()()
{
  return partial apply for closure #1 in closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource()((uint64_t (*)(_QWORD, uint64_t))closure #1 in closure #2 in closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource());
}

uint64_t partial apply for closure #1 in closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource()(uint64_t (*a1)(_QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  return a1(*(_QWORD *)(v1 + 16), v1 + ((v2 + 24) & ~v2));
}

_QWORD *MOSuggestionStateOfMindAssetView.__allocating_init(image:assignedTileSize:frame:valenceClassificationAndReflectiveInterval:reflectiveInterval:labels:labelsShortened:domains:domainsShortened:associatedColorsLight:associatedColorsDark:startDate:)(void *a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, __int128 a13, __int128 a14, __int128 a15, uint64_t a16, uint64_t a17)
{
  objc_class *v17;
  id v29;
  _QWORD *v30;

  v29 = objc_allocWithZone(v17);
  v30 = specialized MOSuggestionStateOfMindAssetView.init(image:assignedTileSize:frame:valenceClassificationAndReflectiveInterval:reflectiveInterval:labels:labelsShortened:domains:domainsShortened:associatedColorsLight:associatedColorsDark:startDate:)((uint64_t)a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, *((uint64_t *)&a13 + 1), a14, *((uint64_t *)&a14 + 1), a15, *((uint64_t *)&a15 + 1), a16,
          a17);

  return v30;
}

id closure #1 in variable initialization expression of MOSuggestionStateOfMindAssetView.primaryLabel()
{
  id v0;
  id v1;
  Class isa;
  id v3;
  id v4;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v1 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  isa = UIFont.withWeight(_:)(UIFontWeightSemibold).super.isa;

  objc_msgSend(v0, "setFont:", isa);
  objc_msgSend(v0, "setOverrideUserInterfaceStyle:", 1);
  v3 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  v4 = objc_msgSend(v3, "colorWithAlphaComponent:", 0.6);

  objc_msgSend(v0, "setTextColor:", v4);
  objc_msgSend(v0, "setPreferredVibrancy:", 1);
  objc_msgSend(v0, "setTextAlignment:", 4);
  objc_msgSend(v0, "setLineBreakMode:", 4);
  objc_msgSend(v0, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v0, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityMedium);
  objc_msgSend(v0, "setNumberOfLines:", 2);
  return v0;
}

id MOSuggestionStateOfMindAssetView.primaryLabel.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_primaryLabel);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_primaryLabel, v3, 0, 0);
  return *v1;
}

void MOSuggestionStateOfMindAssetView.primaryLabel.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_primaryLabel);
}

uint64_t (*MOSuggestionStateOfMindAssetView.primaryLabel.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_primaryLabel, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id closure #1 in variable initialization expression of MOSuggestionStateOfMindAssetView.secondaryLabel()
{
  return closure #1 in variable initialization expression of MOSuggestionStateOfMindAssetView.secondaryLabel((SEL *)&selRef_secondaryLabelColor);
}

id MOSuggestionStateOfMindAssetView.secondaryLabel.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_secondaryLabel);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_secondaryLabel, v3, 0, 0);
  return *v1;
}

void MOSuggestionStateOfMindAssetView.secondaryLabel.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_secondaryLabel);
}

uint64_t (*MOSuggestionStateOfMindAssetView.secondaryLabel.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_secondaryLabel, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id closure #1 in variable initialization expression of MOSuggestionStateOfMindAssetView.typeLabel()
{
  return closure #1 in variable initialization expression of MOSuggestionStateOfMindAssetView.secondaryLabel((SEL *)&selRef_tertiaryLabelColor);
}

id closure #1 in variable initialization expression of MOSuggestionStateOfMindAssetView.secondaryLabel(SEL *a1)
{
  id v2;
  id v3;
  id v4;

  v2 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v3 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  objc_msgSend(v2, "setFont:", v3);

  objc_msgSend(v2, "setOverrideUserInterfaceStyle:", 1);
  v4 = objc_msgSend((id)objc_opt_self(UIColor), *a1);
  objc_msgSend(v2, "setTextColor:", v4);

  objc_msgSend(v2, "setLineBreakMode:", 4);
  objc_msgSend(v2, "setTextAlignment:", 4);
  objc_msgSend(v2, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v2, "setNumberOfLines:", 2);
  objc_msgSend(v2, "setPreferredVibrancy:", 1);
  objc_msgSend(v2, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityMedium);
  return v2;
}

id MOSuggestionStateOfMindAssetView.typeLabel.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_typeLabel);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_typeLabel, v3, 0, 0);
  return *v1;
}

void MOSuggestionStateOfMindAssetView.typeLabel.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_typeLabel);
}

uint64_t (*MOSuggestionStateOfMindAssetView.typeLabel.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_typeLabel, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id MOSuggestionStateOfMindAssetView.labelStack.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_labelStack);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_labelStack, v3, 0, 0);
  return *v1;
}

void MOSuggestionStateOfMindAssetView.labelStack.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_labelStack);
}

uint64_t (*MOSuggestionStateOfMindAssetView.labelStack.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_labelStack, a1, 33, 0);
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

_QWORD *MOSuggestionStateOfMindAssetView.init(image:assignedTileSize:frame:valenceClassificationAndReflectiveInterval:reflectiveInterval:labels:labelsShortened:domains:domainsShortened:associatedColorsLight:associatedColorsDark:startDate:)(void *a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, unint64_t a13, uint64_t a14, unint64_t a15, uint64_t a16, unint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  _QWORD *v21;

  v21 = specialized MOSuggestionStateOfMindAssetView.init(image:assignedTileSize:frame:valenceClassificationAndReflectiveInterval:reflectiveInterval:labels:labelsShortened:domains:domainsShortened:associatedColorsLight:associatedColorsDark:startDate:)((uint64_t)a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
          a20);

  return v21;
}

Swift::Void __swiftcall MOSuggestionStateOfMindAssetView.handleTraitChange()()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  __n128 v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  id v41;
  void *v42;
  uint64_t v43;
  Class isa;

  v1 = objc_msgSend((id)v0, "traitCollection");
  v2 = objc_msgSend(v1, "userInterfaceStyle");

  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_associatedColors);
  if (v2 == (id)1)
  {
    v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_associatedColorsLight);
    *(_QWORD *)(v0 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_associatedColors) = v4;
    swift_bridgeObjectRetain(v4);
    v5 = swift_bridgeObjectRelease(v3);
    v6 = (void *)(*(uint64_t (**)(__n128))((swift_isaMask & *(_QWORD *)v0) + 0x128))(v5);
    v7 = (void *)objc_opt_self(UIColor);
    v8 = objc_msgSend(v7, "labelColor");
    v9 = objc_msgSend(v8, "colorWithAlphaComponent:", 0.6);

    objc_msgSend(v6, "setTextColor:", v9);
    v10 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)v0) + 0x140))();
    v11 = objc_msgSend(v7, "secondaryLabelColor");
    objc_msgSend(v10, "setTextColor:", v11);

    v12 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)v0) + 0x158))();
    v13 = objc_msgSend(v7, "tertiaryLabelColor");
  }
  else
  {
    v14 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_associatedColorsDark);
    *(_QWORD *)(v0 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_associatedColors) = v14;
    swift_bridgeObjectRetain(v14);
    v15 = swift_bridgeObjectRelease(v3);
    v16 = (void *)(*(uint64_t (**)(__n128))((swift_isaMask & *(_QWORD *)v0) + 0x128))(v15);
    v17 = (void *)objc_opt_self(UIColor);
    v18 = objc_msgSend(v17, "whiteColor");
    v19 = objc_msgSend(v18, "colorWithAlphaComponent:", 0.6);

    objc_msgSend(v16, "setTextColor:", v19);
    v20 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)v0) + 0x140))();
    v21 = objc_msgSend(v17, "whiteColor");
    v22 = objc_msgSend(v21, "colorWithAlphaComponent:", 0.6);

    objc_msgSend(v20, "setTextColor:", v22);
    v12 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)v0) + 0x158))();
    v23 = objc_msgSend(v17, "whiteColor");
    v13 = objc_msgSend(v23, "colorWithAlphaComponent:", 0.6);

  }
  objc_msgSend(v12, "setTextColor:", v13);

  v24 = *(void **)(v0 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_gradient);
  if (!v24)
    return;
  v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Any>);
  v26 = swift_allocObject(v25, 96, 7);
  *(_OWORD *)(v26 + 16) = xmmword_10019EEE0;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CGColorRef?);
  v28 = v27;
  *(_QWORD *)(v26 + 56) = v27;
  v29 = OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_associatedColors;
  v30 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_associatedColors);
  if (!v30)
  {
    *(_QWORD *)(v26 + 32) = 0;
    *(_QWORD *)(v26 + 88) = v27;
    v36 = v24;
LABEL_35:
    v0 = 0;
    goto LABEL_36;
  }
  if ((unint64_t)v30 >> 62)
  {
    if (v30 >= 0)
      v37 = v30 & 0xFFFFFFFFFFFFFF8;
    else
      v37 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_associatedColors);
    v38 = v24;
    swift_bridgeObjectRetain(v30);
    if (_CocoaArrayWrapper.endIndex.getter(v37))
      goto LABEL_8;
LABEL_18:
    swift_bridgeObjectRelease(v30);
    v35 = 0;
    goto LABEL_19;
  }
  v31 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v32 = v24;
  swift_bridgeObjectRetain(v30);
  if (!v31)
    goto LABEL_18;
LABEL_8:
  if ((v30 & 0xC000000000000001) != 0)
  {
    v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v30);
  }
  else
  {
    if (!*(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_30;
    }
    v33 = *(id *)(v30 + 32);
  }
  v34 = v33;
  v35 = objc_msgSend(v33, "CGColor", swift_bridgeObjectRelease(v30).n128_f64[0]);

LABEL_19:
  v0 = *(_QWORD *)(v0 + v29);
  *(_QWORD *)(v26 + 32) = v35;
  *(_QWORD *)(v26 + 88) = v28;
  if (!v0)
  {
LABEL_36:
    *(_QWORD *)(v26 + 64) = v0;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v24, "setColors:", isa, swift_bridgeObjectRelease(v26).n128_f64[0]);

    return;
  }
  v30 = v0 & 0xFFFFFFFFFFFFFF8;
  if (!((unint64_t)v0 >> 62))
  {
    v39 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v0);
    if (v39)
      goto LABEL_22;
    goto LABEL_34;
  }
LABEL_30:
  if (v0 >= 0)
    v43 = v30;
  else
    v43 = v0;
  swift_bridgeObjectRetain(v0);
  v39 = _CocoaArrayWrapper.endIndex.getter(v43);
  if (!v39)
  {
LABEL_34:
    swift_bridgeObjectRelease(v0);
    goto LABEL_35;
  }
LABEL_22:
  v40 = v39 - 1;
  if (__OFSUB__(v39, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if ((v0 & 0xC000000000000001) != 0)
  {
LABEL_38:
    v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v40, v0);
    goto LABEL_27;
  }
  if ((v40 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v40 < *(_QWORD *)(v30 + 16))
  {
    v41 = *(id *)(v0 + 8 * v40 + 32);
LABEL_27:
    v42 = v41;
    v0 = (uint64_t)objc_msgSend(v41, "CGColor", swift_bridgeObjectRelease(v0).n128_f64[0]);

    goto LABEL_36;
  }
  __break(1u);
}

Swift::Void __swiftcall MOSuggestionStateOfMindAssetView.layoutSubviews()()
{
  char *v0;
  void *v1;
  id v2;
  objc_super v3;

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for MOSuggestionStateOfMindAssetView();
  objc_msgSendSuper2(&v3, "layoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_gradient];
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v0, "frame");
    objc_msgSend(v2, "setFrame:");

  }
}

Swift::Void __swiftcall MOSuggestionStateOfMindAssetView.makeUIView(image:)(UIImage image)
{
  _QWORD *v1;
  _QWORD *v2;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  int v29;
  NSString v30;
  void *v31;
  NSString v32;
  void *v33;
  NSString v34;
  void *v35;
  uint64_t (*v36)(void);
  void *v37;
  uint64_t v38;
  uint64_t v39;
  NSString v40;
  uint64_t (*v41)(void);
  void *v42;
  void *v43;
  id v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  double v59;
  double v60;
  id v61;
  id v62;
  id v63;
  void *v64;
  id v65;
  id v66;
  id v67;
  id v68;
  uint64_t (*v69)(void);
  void *v70;
  void *v71;
  _QWORD *v72;
  uint64_t v73;
  _QWORD *v74;
  id v75;
  void *v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  void *v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  double v90;
  double v91;
  id v92;
  id v93;
  id v94;
  void *v95;
  id v96;
  id v97;
  id v98;
  id v99;
  uint64_t (*v100)(void);
  void *v101;
  void *v102;
  void *v103;
  void *v104;
  void *v105;
  void *v106;
  void *v107;
  id v108;
  id v109;
  id v110;
  char **v111;
  void *v112;
  id v113;
  void *v114;
  id v115;
  id v116;
  id v117;
  void *v118;
  void *v119;
  void *v120;
  id v121;
  void *v122;
  char **v123;
  id v124;
  id v125;
  id v126;
  void *v127;
  void *v128;
  void *v129;
  void *v130;
  id v131;
  id v132;
  id v133;
  id v134;
  void *v135;
  id v136;
  id v137;
  id v138;
  id v139;
  void *v140;
  id v141;
  void *v142;
  id v143;
  id v144;
  id v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  void *v150;
  void *v151;
  void *v152;
  id v153;
  id v154;
  id v155;
  void *v156;
  id v157;
  void *v158;
  id v159;
  id v160;
  id v161;
  void *v162;
  void *v163;
  id v164;
  id v165;
  id v166;
  id v167;
  char **v168;
  void *v169;
  id v170;
  void *v171;
  id v172;
  id v173;
  id v174;
  void *v175;
  id v176;
  void *v177;
  id v178;
  id v179;
  id v180;
  void *v181;
  void *v182;
  id v183;
  void *v184;
  id v185;
  id v186;
  id v187;
  void *v188;
  id v189;
  void *v190;
  id v191;
  id v192;
  id v193;
  void *v194;
  id v195;
  void *v196;
  id v197;
  id v198;
  id v199;
  char **v200;
  void *v201;
  id v202;
  void *v203;
  id v204;
  id v205;
  id v206;
  void *v207;
  id v208;
  void *v209;
  id v210;
  id v211;
  id v212;
  void *v213;
  void *v214;
  id v215;
  void *v216;
  id v217;
  id v218;
  id v219;
  void *v220;
  id v221;
  void *v222;
  id v223;
  id v224;
  id v225;
  void *v226;
  id v227;
  void *v228;
  id v229;
  id v230;
  id v231;
  char **v232;
  id v233;
  id v234;
  id v235;
  id v236;
  void *v237;
  void *v238;
  id v239;
  void *v240;
  id v241;
  id v242;
  id v243;
  id v244;
  void *v245;
  id v246;
  id v247;
  id v248;
  void *v249;
  id v250;
  id v251;
  id v252;
  void *v253;
  id v254;
  void *v255;
  id v256;
  id v257;
  id v258;
  id v259;
  void *v260;
  id v261;
  id v262;
  id v263;
  id v264;
  id v265;
  id v266;
  uint64_t (*v267)(void);
  void *v268;
  uint64_t (*v269)(void);
  id v270;
  id v271;

  v2 = v1;
  v4 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v2, "setBackgroundColor:", v4);

  v5 = type metadata accessor for MOSuggestionRoundView();
  v6 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v5)), "init");
  v7 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", image.super.isa);
  v271 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v8 = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
  v9 = objc_msgSend(v271, "layer");
  objc_msgSend(v9, "addSublayer:", v8);

  v10 = *(void **)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_gradient);
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_gradient) = v8;
  v266 = v8;

  objc_msgSend(v2, "addSubview:", v271);
  objc_msgSend(v7, "setContentMode:", 1);
  objc_msgSend(v6, "addSubview:", v7);
  objc_msgSend(v2, "addSubview:", v6);
  v11 = objc_msgSend(v7, "heightAnchor");
  v12 = objc_msgSend(v6, "heightAnchor");
  v13 = objc_msgSend(v11, "constraintEqualToAnchor:multiplier:", v12, 0.99);

  objc_msgSend(v13, "setActive:", 1);
  v14 = objc_msgSend(v7, "widthAnchor");
  v15 = objc_msgSend(v6, "widthAnchor");
  v16 = objc_msgSend(v14, "constraintEqualToAnchor:multiplier:", v15, 0.99);

  objc_msgSend(v16, "setActive:", 1);
  v17 = objc_msgSend(v7, "superview");
  if (v17)
  {
    v18 = v17;
    objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v19 = objc_msgSend(v7, "centerYAnchor");
    v20 = objc_msgSend(v18, "centerYAnchor");
    v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

    objc_msgSend(v21, "setConstant:", 0.0);
    v22 = v21;
    objc_msgSend(v22, "setActive:", 1);

  }
  v23 = objc_msgSend(v7, "superview");
  v268 = v7;
  if (v23)
  {
    v24 = v23;
    objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v25 = objc_msgSend(v7, "centerXAnchor");
    v26 = objc_msgSend(v24, "centerXAnchor");
    v27 = objc_msgSend(v25, "constraintEqualToAnchor:", v26);

    objc_msgSend(v27, "setConstant:", 0.0);
    if (v27)
    {
      v28 = v27;
      objc_msgSend(v28, "setActive:", 1);

    }
  }
  v29 = *((unsigned __int8 *)v2 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_assignedTileSize);
  if (v29 == 8
    || (v30 = *(NSString *)((char *)v2
                          + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_primaryLabelTextShortened
                          + 8)) != 0
    && (!*(_QWORD *)((char *)v2
                   + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_primaryLabelTextShortened)
     && v30 == (NSString)0xE000000000000000
     || (_stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)((char *)v2+ OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_primaryLabelTextShortened), *(_QWORD *)((char *)v2+ OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_primaryLabelTextShortened+ 8), 0, 0xE000000000000000, 0) & 1) != 0))
  {
    v31 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x128))();
    if (*(_QWORD *)((char *)v2
                   + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_primaryLabelText
                   + 8))
      v32 = String._bridgeToObjectiveC()();
    else
      v32 = 0;
    objc_msgSend(v31, "setText:", v32);

    if (v29 == 8)
      goto LABEL_24;
  }
  else
  {
    v33 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x128))();
    if (v30)
      v30 = String._bridgeToObjectiveC()();
    objc_msgSend(v33, "setText:", v30);

  }
  v34 = *(NSString *)((char *)v2
                    + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_secondaryLabelTextShortened
                    + 8);
  if (!v34
    || (*(_QWORD *)((char *)v2
                  + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_secondaryLabelTextShortened)
     || v34 != (NSString)0xE000000000000000)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)((char *)v2+ OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_secondaryLabelTextShortened), *(_QWORD *)((char *)v2+ OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_secondaryLabelTextShortened+ 8), 0, 0xE000000000000000, 0) & 1) == 0)
  {
    v35 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x140))();
    if (!v34)
      goto LABEL_29;
    goto LABEL_27;
  }
LABEL_24:
  v35 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x140))();
  if (*(_QWORD *)((char *)v2
                 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_secondaryLabelText
                 + 8))
  {
LABEL_27:
    v34 = String._bridgeToObjectiveC()();
    goto LABEL_29;
  }
  v34 = 0;
LABEL_29:
  objc_msgSend(v35, "setText:", v34);

  v36 = *(uint64_t (**)(void))((swift_isaMask & *v2) + 0x158);
  v37 = (void *)v36();
  v38 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_typeLabelText);
  v39 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_typeLabelText + 8);
  if (v39)
    v40 = String._bridgeToObjectiveC()();
  else
    v40 = 0;
  objc_msgSend(v37, "setText:", v40);

  v41 = *(uint64_t (**)(void))((swift_isaMask & *v2) + 0x128);
  v42 = (void *)v41();
  UILabel.setLineSpacing(lineSpacing:lineHeightMultiple:baselineOffset:font:)(0, 0.0, 0.95, 0.0);

  v269 = *(uint64_t (**)(void))((swift_isaMask & *v2) + 0x140);
  v43 = (void *)v269();
  UILabel.setLineSpacing(lineSpacing:lineHeightMultiple:baselineOffset:font:)(0, 0.0, 0.95, 0.0);

  v267 = v41;
  switch(v29)
  {
    case 2:
    case 3:
      v74 = UIView.fillSuper(margin:)(8.0);

      swift_bridgeObjectRelease(v74);
      return;
    case 4:
      v75 = objc_msgSend(v6, "superview");
      if (v75)
      {
        v76 = v75;
        objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v77 = objc_msgSend(v6, "leadingAnchor");
        v78 = objc_msgSend(v76, "leadingAnchor");
        v79 = objc_msgSend(v77, "constraintEqualToAnchor:", v78);

        objc_msgSend(v79, "setConstant:", 8.0);
        v80 = v79;
        objc_msgSend(v80, "setActive:", 1);

      }
      v81 = objc_msgSend(v6, "superview");
      if (v81)
      {
        v82 = v81;
        objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v83 = objc_msgSend(v6, "topAnchor");
        v84 = objc_msgSend(v82, "topAnchor");
        v85 = objc_msgSend(v83, "constraintEqualToAnchor:", v84);

        objc_msgSend(v85, "setConstant:", 8.0);
        v86 = v85;
        objc_msgSend(v86, "setActive:", 1);

      }
      v87 = objc_msgSend(v6, "widthAnchor");
      v88 = objc_msgSend(v6, "heightAnchor");
      v89 = objc_msgSend(v87, "constraintEqualToAnchor:", v88);

      objc_msgSend(v89, "setActive:", 1);
      objc_msgSend(v2, "frame");
      v91 = v90 + -16.0;
      objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v92 = objc_msgSend(v6, "widthAnchor");
      v93 = objc_msgSend(v92, "constraintEqualToConstant:", v91);

      objc_msgSend(v93, "setActive:", 1);
      v94 = objc_msgSend(v6, "superview");
      if (v94)
      {
        v95 = v94;
        objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v96 = objc_msgSend(v6, "bottomAnchor");
        v97 = objc_msgSend(v95, "bottomAnchor");
        v98 = objc_msgSend(v96, "constraintEqualToAnchor:", v97);

        if (v98)
        {
          objc_msgSend(v98, "setConstant:", -8.0);
          v99 = v98;
          objc_msgSend(v99, "setActive:", 1);

        }
      }
      v100 = *(uint64_t (**)(void))((swift_isaMask & *v2) + 0x170);
      v101 = (void *)v100();
      v102 = (void *)v267();
      objc_msgSend(v101, "addArrangedSubview:", v102);

      v103 = (void *)v100();
      v104 = (void *)v269();
      objc_msgSend(v103, "addArrangedSubview:", v104);

      v105 = (void *)v100();
      objc_msgSend(v105, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

      v106 = (void *)v100();
      objc_msgSend(v2, "addSubview:", v106);

      v107 = (void *)v100();
      objc_msgSend(v107, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v108 = objc_msgSend(v107, "leadingAnchor");
      v109 = objc_msgSend(v6, "trailingAnchor");
      v110 = objc_msgSend(v108, "constraintEqualToAnchor:", v109);

      objc_msgSend(v110, "setConstant:", 8.0);
      v111 = &selRef_genericAvatarFor_pointSize_completion_;
      objc_msgSend(v110, "setActive:", 1);

      v112 = (void *)v100();
      v113 = objc_msgSend(v112, "superview");
      if (v113)
      {
        v114 = v113;
        objc_msgSend(v112, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v115 = objc_msgSend(v112, "centerYAnchor");
        v116 = objc_msgSend(v114, "centerYAnchor");
        v117 = objc_msgSend(v115, "constraintEqualToAnchor:", v116);

        objc_msgSend(v117, "setConstant:", 0.0);
        if (v117)
        {
          v117 = v117;
          v111 = &selRef_genericAvatarFor_pointSize_completion_;
          objc_msgSend(v117, "setActive:", 1);

          v112 = v117;
        }
        else
        {
          v111 = &selRef_genericAvatarFor_pointSize_completion_;
        }
        v162 = v268;

        v168 = &selRef_genericAvatarFor_pointSize_completion_;
      }
      else
      {
        v117 = 0;
        v114 = v112;
        v168 = &selRef_genericAvatarFor_pointSize_completion_;
        v162 = v268;
      }

      v163 = (void *)v100();
      v233 = objc_msgSend(v163, "superview");
      if (!v233)
        goto LABEL_138;
      v270 = v233;
      objc_msgSend(v163, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v234 = objc_msgSend(v163, "trailingAnchor");
      v235 = objc_msgSend(v270, "trailingAnchor");
      v167 = objc_msgSend(v234, v168[101], v235);

      objc_msgSend(v167, "setConstant:", -5.0);
      goto LABEL_137;
    case 5:
      v118 = (void *)v41();
      objc_msgSend(v2, "addSubview:", v118);

      v119 = (void *)v269();
      objc_msgSend(v2, "addSubview:", v119);

      v120 = (void *)v41();
      v121 = objc_msgSend(v120, "superview");
      if (v121)
      {
        v122 = v121;
        v123 = &selRef_genericAvatarFor_pointSize_completion_;
        objc_msgSend(v120, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v124 = objc_msgSend(v120, "topAnchor");
        v125 = objc_msgSend(v122, "topAnchor");
        v126 = objc_msgSend(v124, "constraintEqualToAnchor:", v125);

        objc_msgSend(v126, "setConstant:", 12.0);
        if (v126)
        {
          v126 = v126;
          objc_msgSend(v126, "setActive:", 1);

          v120 = v126;
        }

        v41 = v267;
      }
      else
      {
        v126 = 0;
        v122 = v120;
        v123 = &selRef_genericAvatarFor_pointSize_completion_;
      }

      v169 = (void *)v41();
      v170 = objc_msgSend(v169, "superview");
      if (v170)
      {
        v171 = v170;
        objc_msgSend(v169, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v172 = objc_msgSend(v169, "leadingAnchor");
        v173 = objc_msgSend(v171, "leadingAnchor");
        v174 = objc_msgSend(v172, "constraintEqualToAnchor:", v173);

        objc_msgSend(v174, "setConstant:", 12.0);
        if (v174)
        {
          v174 = v174;
          objc_msgSend(v174, "setActive:", 1);

          v169 = v174;
        }

        v41 = v267;
      }
      else
      {
        v174 = 0;
        v171 = v169;
      }

      v175 = (void *)v41();
      v176 = objc_msgSend(v175, "superview");
      if (v176)
      {
        v177 = v176;
        objc_msgSend(v175, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v178 = objc_msgSend(v175, "trailingAnchor");
        v179 = objc_msgSend(v177, "trailingAnchor");
        v180 = objc_msgSend(v178, "constraintEqualToAnchor:", v179);

        objc_msgSend(v180, "setConstant:", -12.0);
        if (v180)
        {
          v180 = v180;
          objc_msgSend(v180, "setActive:", 1);

          v175 = v180;
        }

        v41 = v267;
      }
      else
      {
        v180 = 0;
        v177 = v175;
      }

      v181 = (void *)v41();
      objc_msgSend(v181, "setTextAlignment:", 1);

      v182 = (void *)v269();
      v183 = objc_msgSend(v182, "superview");
      if (v183)
      {
        v184 = v183;
        objc_msgSend(v182, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v185 = objc_msgSend(v182, "bottomAnchor");
        v186 = objc_msgSend(v184, "bottomAnchor");
        v187 = objc_msgSend(v185, "constraintEqualToAnchor:", v186);

        if (v187)
        {
          objc_msgSend(v187, "setConstant:", -12.0);
          v187 = v187;
          objc_msgSend(v187, "setActive:", 1);

          v182 = v187;
        }

        v123 = &selRef_genericAvatarFor_pointSize_completion_;
      }
      else
      {
        v187 = 0;
        v184 = v182;
      }

      v188 = (void *)v269();
      v189 = objc_msgSend(v188, "superview");
      if (v189)
      {
        v190 = v189;
        objc_msgSend(v188, v123[47], 0);
        v191 = objc_msgSend(v188, "leadingAnchor");
        v192 = objc_msgSend(v190, "leadingAnchor");
        v193 = objc_msgSend(v191, "constraintEqualToAnchor:", v192);

        objc_msgSend(v193, "setConstant:", 12.0);
        if (v193)
        {
          v193 = v193;
          objc_msgSend(v193, "setActive:", 1);

          v188 = v193;
        }

        v123 = &selRef_genericAvatarFor_pointSize_completion_;
      }
      else
      {
        v193 = 0;
        v190 = v188;
      }

      v194 = (void *)v269();
      v195 = objc_msgSend(v194, "superview");
      if (v195)
      {
        v196 = v195;
        objc_msgSend(v194, v123[47], 0);
        v197 = objc_msgSend(v194, "trailingAnchor");
        v198 = objc_msgSend(v196, "trailingAnchor");
        v199 = objc_msgSend(v197, "constraintEqualToAnchor:", v198);

        objc_msgSend(v199, "setConstant:", -12.0);
        if (v199)
        {
          v199 = v199;
          v200 = &selRef_genericAvatarFor_pointSize_completion_;
          objc_msgSend(v199, "setActive:", 1);

          v194 = v199;
        }
        else
        {
          v200 = &selRef_genericAvatarFor_pointSize_completion_;
        }

        v123 = &selRef_genericAvatarFor_pointSize_completion_;
      }
      else
      {
        v199 = 0;
        v196 = v194;
        v200 = &selRef_genericAvatarFor_pointSize_completion_;
      }

      v238 = (void *)v269();
      objc_msgSend(v238, "setTextAlignment:", 1);

      v239 = objc_msgSend(v6, "superview");
      if (v239)
      {
        v240 = v239;
        objc_msgSend(v6, v123[47], 0);
        v241 = objc_msgSend(v6, "centerXAnchor");
        v242 = objc_msgSend(v240, "centerXAnchor");
        v243 = objc_msgSend(v241, "constraintEqualToAnchor:", v242);

        objc_msgSend(v243, "setConstant:", 0.0);
        v244 = v243;
        objc_msgSend(v244, v200[93], 1);

      }
      v245 = (void *)v267();
      objc_msgSend(v6, v123[47], 0);
      v246 = objc_msgSend(v6, "topAnchor");
      v247 = objc_msgSend(v245, "bottomAnchor");
      v248 = objc_msgSend(v246, "constraintEqualToAnchor:", v247);

      objc_msgSend(v248, "setConstant:", 5.0);
      objc_msgSend(v248, v200[93], 1);

      v249 = (void *)v269();
      objc_msgSend(v6, v123[47], 0);
      v250 = objc_msgSend(v6, "bottomAnchor");
      v251 = objc_msgSend(v249, "topAnchor");
      v252 = objc_msgSend(v250, "constraintEqualToAnchor:", v251);

      objc_msgSend(v252, "setConstant:", -5.0);
      objc_msgSend(v252, v200[93], 1);
      goto LABEL_149;
    case 6:
    case 7:
      v44 = objc_msgSend(v6, "superview");
      if (v44)
      {
        v45 = v44;
        objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v46 = objc_msgSend(v6, "leadingAnchor");
        v47 = objc_msgSend(v45, "leadingAnchor");
        v48 = objc_msgSend(v46, "constraintEqualToAnchor:", v47);

        objc_msgSend(v48, "setConstant:", 8.0);
        v49 = v48;
        objc_msgSend(v49, "setActive:", 1);

      }
      v50 = objc_msgSend(v6, "superview");
      if (v50)
      {
        v51 = v50;
        objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v52 = objc_msgSend(v6, "topAnchor");
        v53 = objc_msgSend(v51, "topAnchor");
        v54 = objc_msgSend(v52, "constraintEqualToAnchor:", v53);

        objc_msgSend(v54, "setConstant:", 8.0);
        v55 = v54;
        objc_msgSend(v55, "setActive:", 1);

      }
      v56 = objc_msgSend(v6, "widthAnchor");
      v57 = objc_msgSend(v6, "heightAnchor");
      v58 = objc_msgSend(v56, "constraintEqualToAnchor:", v57);

      objc_msgSend(v58, "setActive:", 1);
      objc_msgSend(v2, "frame");
      v60 = v59 + -16.0;
      objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v61 = objc_msgSend(v6, "widthAnchor");
      v62 = objc_msgSend(v61, "constraintEqualToConstant:", v60);

      objc_msgSend(v62, "setActive:", 1);
      v63 = objc_msgSend(v6, "superview");
      if (v63)
      {
        v64 = v63;
        objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v65 = objc_msgSend(v6, "bottomAnchor");
        v66 = objc_msgSend(v64, "bottomAnchor");
        v67 = objc_msgSend(v65, "constraintEqualToAnchor:", v66);

        if (v67)
        {
          objc_msgSend(v67, "setConstant:", -8.0);
          v68 = v67;
          objc_msgSend(v68, "setActive:", 1);

        }
      }
      v69 = *(uint64_t (**)(void))((swift_isaMask & *v2) + 0x170);
      v70 = (void *)v69();
      v71 = (void *)v267();
      objc_msgSend(v70, "addArrangedSubview:", v71);

      v72 = (_QWORD *)((char *)v2
                     + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_secondaryLabelText);
      v73 = *(_QWORD *)((char *)v2
                      + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_secondaryLabelText
                      + 8);
      if (!v39)
      {
        if (!v73)
          goto LABEL_74;
        goto LABEL_73;
      }
      if (!v73
        || (v38 != *v72 || v39 != v73)
        && (_stringCompareWithSmolCheck(_:_:expecting:)(v38, v39, *v72, v73, 0) & 1) == 0)
      {
LABEL_73:
        v146 = (void *)v69();
        v147 = (void *)v269();
        objc_msgSend(v146, "addArrangedSubview:", v147);

      }
LABEL_74:
      v148 = (void *)v69();
      v149 = (void *)v36();
      objc_msgSend(v148, "addArrangedSubview:", v149);

      v150 = (void *)v69();
      objc_msgSend(v150, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

      v151 = (void *)v69();
      objc_msgSend(v2, "addSubview:", v151);

      v152 = (void *)v69();
      objc_msgSend(v152, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v153 = objc_msgSend(v152, "leadingAnchor");
      v154 = objc_msgSend(v6, "trailingAnchor");
      v155 = objc_msgSend(v153, "constraintEqualToAnchor:", v154);

      objc_msgSend(v155, "setConstant:", 8.0);
      v111 = &selRef_genericAvatarFor_pointSize_completion_;
      objc_msgSend(v155, "setActive:", 1);

      v156 = (void *)v69();
      v157 = objc_msgSend(v156, "superview");
      if (v157)
      {
        v158 = v157;
        objc_msgSend(v156, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v159 = objc_msgSend(v156, "centerYAnchor");
        v160 = objc_msgSend(v158, "centerYAnchor");
        v161 = objc_msgSend(v159, "constraintEqualToAnchor:", v160);

        objc_msgSend(v161, "setConstant:", 0.0);
        if (v161)
        {
          v161 = v161;
          v111 = &selRef_genericAvatarFor_pointSize_completion_;
          objc_msgSend(v161, "setActive:", 1);

          v156 = v161;
        }
        else
        {
          v111 = &selRef_genericAvatarFor_pointSize_completion_;
        }
        v162 = v268;

      }
      else
      {
        v161 = 0;
        v158 = v156;
        v162 = v268;
      }

      v163 = (void *)v69();
      v164 = objc_msgSend(v163, "superview");
      if (!v164)
      {
LABEL_138:

LABEL_151:
        v237 = v271;
        goto LABEL_152;
      }
      v270 = v164;
      objc_msgSend(v163, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v165 = objc_msgSend(v163, "trailingAnchor");
      v166 = objc_msgSend(v270, "trailingAnchor");
      v167 = objc_msgSend(v165, "constraintEqualToAnchor:", v166);

      objc_msgSend(v167, "setConstant:", -8.0);
LABEL_137:
      v236 = v167;
      objc_msgSend(v236, v111[93], 1);

      v237 = v270;
LABEL_152:

      return;
    case 8:
      v127 = (void *)v41();
      objc_msgSend(v2, "addSubview:", v127);

      v128 = (void *)v269();
      objc_msgSend(v2, "addSubview:", v128);

      if (!specialized static MOSuggestionAssetTileSize.__derived_enum_equals(_:_:)(8u, 8u))
        goto LABEL_68;
      v129 = (void *)v41();
      v130 = (void *)objc_opt_self(UIFont);
      v131 = objc_msgSend(v130, "preferredFontForTextStyle:", UIFontTextStyleBody);
      v132 = objc_msgSend(v131, "fontDescriptor");
      v133 = objc_msgSend(v132, "fontDescriptorWithSymbolicTraits:", 2);

      if (v133)
      {
        v134 = objc_msgSend(v130, "fontWithDescriptor:size:", v133, 0.0);

        objc_msgSend(v129, "setFont:", v134);
        v135 = (void *)v269();
        v136 = objc_msgSend(v130, "preferredFontForTextStyle:", UIFontTextStyleBody);
        v137 = objc_msgSend(v136, "fontDescriptor");
        v138 = objc_msgSend(v137, "fontDescriptorWithSymbolicTraits:", 2);

        if (v138)
        {
          v139 = objc_msgSend(v130, "fontWithDescriptor:size:", v138, 0.0);

          objc_msgSend(v135, "setFont:", v139);
          v41 = v267;
LABEL_68:
          v140 = (void *)v41();
          v141 = objc_msgSend(v140, "superview");
          if (v141)
          {
            v142 = v141;
            objc_msgSend(v140, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
            v143 = objc_msgSend(v140, "topAnchor");
            v144 = objc_msgSend(v142, "topAnchor");
            v145 = objc_msgSend(v143, "constraintEqualToAnchor:", v144);

            objc_msgSend(v145, "setConstant:", 12.0);
            if (v145)
            {
              v145 = v145;
              objc_msgSend(v145, "setActive:", 1);

              v140 = v145;
            }

            v41 = v267;
          }
          else
          {
            v145 = 0;
            v142 = v140;
          }

          v201 = (void *)v41();
          v202 = objc_msgSend(v201, "superview");
          if (v202)
          {
            v203 = v202;
            objc_msgSend(v201, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
            v204 = objc_msgSend(v201, "leadingAnchor");
            v205 = objc_msgSend(v203, "leadingAnchor");
            v206 = objc_msgSend(v204, "constraintEqualToAnchor:", v205);

            objc_msgSend(v206, "setConstant:", 12.0);
            if (v206)
            {
              v206 = v206;
              objc_msgSend(v206, "setActive:", 1);

              v201 = v206;
            }

            v41 = v267;
          }
          else
          {
            v206 = 0;
            v203 = v201;
          }

          v207 = (void *)v41();
          v208 = objc_msgSend(v207, "superview");
          if (v208)
          {
            v209 = v208;
            objc_msgSend(v207, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
            v210 = objc_msgSend(v207, "trailingAnchor");
            v211 = objc_msgSend(v209, "trailingAnchor");
            v212 = objc_msgSend(v210, "constraintEqualToAnchor:", v211);

            objc_msgSend(v212, "setConstant:", -12.0);
            if (v212)
            {
              v212 = v212;
              objc_msgSend(v212, "setActive:", 1);

              v207 = v212;
            }

            v41 = v267;
          }
          else
          {
            v212 = 0;
            v209 = v207;
          }

          v213 = (void *)v41();
          objc_msgSend(v213, "setTextAlignment:", 1);

          v214 = (void *)v269();
          v215 = objc_msgSend(v214, "superview");
          if (v215)
          {
            v216 = v215;
            objc_msgSend(v214, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
            v217 = objc_msgSend(v214, "bottomAnchor");
            v218 = objc_msgSend(v216, "bottomAnchor");
            v219 = objc_msgSend(v217, "constraintEqualToAnchor:", v218);

            if (v219)
            {
              objc_msgSend(v219, "setConstant:", -12.0);
              v219 = v219;
              objc_msgSend(v219, "setActive:", 1);

              v214 = v219;
            }

          }
          else
          {
            v219 = 0;
            v216 = v214;
          }

          v220 = (void *)v269();
          v221 = objc_msgSend(v220, "superview");
          if (v221)
          {
            v222 = v221;
            objc_msgSend(v220, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
            v223 = objc_msgSend(v220, "leadingAnchor");
            v224 = objc_msgSend(v222, "leadingAnchor");
            v225 = objc_msgSend(v223, "constraintEqualToAnchor:", v224);

            objc_msgSend(v225, "setConstant:", 12.0);
            if (v225)
            {
              v225 = v225;
              objc_msgSend(v225, "setActive:", 1);

              v220 = v225;
            }

          }
          else
          {
            v225 = 0;
            v222 = v220;
          }

          v226 = (void *)v269();
          v227 = objc_msgSend(v226, "superview");
          if (v227)
          {
            v228 = v227;
            objc_msgSend(v226, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
            v229 = objc_msgSend(v226, "trailingAnchor");
            v230 = objc_msgSend(v228, "trailingAnchor");
            v231 = objc_msgSend(v229, "constraintEqualToAnchor:", v230);

            objc_msgSend(v231, "setConstant:", -12.0);
            if (v231)
            {
              v231 = v231;
              v232 = &selRef_genericAvatarFor_pointSize_completion_;
              objc_msgSend(v231, "setActive:", 1);

              v226 = v231;
            }
            else
            {
              v232 = &selRef_genericAvatarFor_pointSize_completion_;
            }

          }
          else
          {
            v231 = 0;
            v228 = v226;
            v232 = &selRef_genericAvatarFor_pointSize_completion_;
          }

          v253 = (void *)v269();
          objc_msgSend(v253, "setTextAlignment:", 1);

          v254 = objc_msgSend(v6, "superview");
          if (v254)
          {
            v255 = v254;
            objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
            v256 = objc_msgSend(v6, "centerXAnchor");
            v257 = objc_msgSend(v255, "centerXAnchor");
            v258 = objc_msgSend(v256, "constraintEqualToAnchor:", v257);

            objc_msgSend(v258, "setConstant:", 0.0);
            v259 = v258;
            objc_msgSend(v259, v232[93], 1);

          }
          v260 = (void *)v267();
          objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
          v261 = objc_msgSend(v6, "topAnchor");
          v262 = objc_msgSend(v260, "bottomAnchor");
          v263 = objc_msgSend(v261, "constraintEqualToAnchor:", v262);

          objc_msgSend(v263, "setConstant:", 5.0);
          objc_msgSend(v263, v232[93], 1);

          v249 = (void *)v269();
          objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
          v264 = objc_msgSend(v6, "bottomAnchor");
          v265 = objc_msgSend(v249, "topAnchor");
          v252 = objc_msgSend(v264, "constraintEqualToAnchor:", v265);

          objc_msgSend(v252, "setConstant:", -5.0);
          objc_msgSend(v252, v232[93], 1);
LABEL_149:

LABEL_150:
          goto LABEL_151;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      JUMPOUT(0x1000DE29CLL);
    default:

      goto LABEL_150;
  }
}

void MOSuggestionStateOfMindAssetView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MomentsUIService.MOSuggestionStateOfMindAssetView", 49, "init(frame:)", 12, 0);
  __break(1u);
}

id MOSuggestionStateOfMindAssetView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionStateOfMindAssetView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

_QWORD *specialized MOSuggestionStateOfMindAssetView.init(image:assignedTileSize:frame:valenceClassificationAndReflectiveInterval:reflectiveInterval:labels:labelsShortened:domains:domainsShortened:associatedColorsLight:associatedColorsDark:startDate:)(uint64_t a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, unint64_t a13, uint64_t a14, unint64_t a15, uint64_t a16, unint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  char *v20;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  char *v35;
  void *v36;
  id v37;
  Swift::String v38;
  Swift::String v39;
  Swift::String v40;
  void *v41;
  Class isa;
  id v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t *v63;
  char *v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  _QWORD *v72;
  id v73;
  Swift::String v74;
  Swift::String v75;
  void *object;
  NSString v77;
  uint64_t v78;
  uint64_t v81;
  id v84;
  objc_super v86;
  Swift::String v87;
  Swift::String v88;

  *(_QWORD *)&v20[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_associatedColors] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_gradient] = 0;
  v29 = OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_primaryLabel;
  v30 = v20;
  *(_QWORD *)&v20[v29] = closure #1 in variable initialization expression of MOSuggestionStateOfMindAssetView.primaryLabel();
  v31 = OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_secondaryLabel;
  *(_QWORD *)&v30[v31] = closure #1 in variable initialization expression of MOSuggestionStateOfMindAssetView.secondaryLabel((SEL *)&selRef_secondaryLabelColor);
  v32 = OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_typeLabel;
  *(_QWORD *)&v30[v32] = closure #1 in variable initialization expression of MOSuggestionStateOfMindAssetView.secondaryLabel((SEL *)&selRef_tertiaryLabelColor);
  v33 = OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_labelStack;
  v34 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v34, "setAxis:", 1);
  objc_msgSend(v34, "setSpacing:", 1.0);
  objc_msgSend(v34, "setAlignment:", 1);
  *(_QWORD *)&v30[v33] = v34;
  v30[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_assignedTileSize] = a2;
  v35 = &v30[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_valenceClassificationAndReflectiveInterval];
  v81 = a3;
  *(_QWORD *)v35 = a3;
  *((_QWORD *)v35 + 1) = a4;
  *(_QWORD *)&v30[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_associatedColorsLight] = a18;
  *(_QWORD *)&v30[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_associatedColorsDark] = a19;
  v36 = (void *)objc_opt_self(NSBundle);
  swift_bridgeObjectRetain(a4);
  v84 = v36;
  v37 = objc_msgSend(v36, "mainBundle");
  v87._countAndFlagsBits = 0xD000000000000046;
  v87._object = (void *)0x80000001001AB070;
  v38._object = (void *)0x80000001001AB050;
  v38._countAndFlagsBits = 0x1000000000000011;
  v39._countAndFlagsBits = 0x206E6F69746F6D45;
  v39._object = (void *)0xAD0000402520B7C2;
  v40 = NSLocalizedString(_:tableName:bundle:value:comment:)(v38, (Swift::String_optional)0, (NSBundle)v37, v39, v87);

  if (one-time initialization token for shortTimeFormatter != -1)
    swift_once(&one-time initialization token for shortTimeFormatter, one-time initialization function for shortTimeFormatter);
  v41 = (void *)static MODateFormatter.shortTimeFormatter;
  isa = Date._bridgeToObjectiveC()().super.isa;
  v43 = objc_msgSend(v41, "stringForObjectValue:", isa);

  if (v43)
  {
    v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
    v46 = v45;

  }
  else
  {
    v44 = 0;
    v46 = 0xE000000000000000;
  }
  v47 = a15;
  v48 = a13;
  v49 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v50 = swift_allocObject(v49, 72, 7);
  *(_OWORD *)(v50 + 16) = xmmword_10019ED20;
  *(_QWORD *)(v50 + 56) = &type metadata for String;
  *(_QWORD *)(v50 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v50 + 32) = v44;
  *(_QWORD *)(v50 + 40) = v46;
  v51 = static String.localizedStringWithFormat(_:_:)(v40._countAndFlagsBits, v40._object, v50);
  v53 = v52;
  swift_bridgeObjectRelease(v50);
  swift_bridgeObjectRelease(v40._object);
  if (a5 == 2)
  {
    swift_bridgeObjectRelease(v53);
    v51 = 0;
    v53 = 0xE000000000000000;
  }
  v54 = a17;
  v55 = (uint64_t *)&v30[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_typeLabelText];
  *v55 = v51;
  v55[1] = v53;
  if (a7)
  {
    v56 = HIBYTE(a7) & 0xF;
    if ((a7 & 0x2000000000000000) == 0)
      v56 = a6 & 0xFFFFFFFFFFFFLL;
    if (v56)
    {
      swift_bridgeObjectRetain(v53);
      swift_bridgeObjectRelease(a4);
      v57 = a6;
      v58 = a8;
      goto LABEL_16;
    }
    swift_bridgeObjectRetain(v53);
    swift_bridgeObjectRelease(a7);
  }
  else
  {
    swift_bridgeObjectRetain(v53);
  }
  swift_bridgeObjectRelease(a13);
  v58 = 0;
  v48 = 0xE000000000000000;
  a7 = a4;
  v57 = v81;
LABEL_16:
  v59 = &v30[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_primaryLabelText];
  *(_QWORD *)v59 = v57;
  *((_QWORD *)v59 + 1) = a7;
  v60 = &v30[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_primaryLabelTextShortened];
  *(_QWORD *)v60 = v58;
  *((_QWORD *)v60 + 1) = v48;
  if (!a15)
  {
LABEL_22:
    a16 = 0;
    v47 = v53;
    v53 = a17;
    v54 = 0xE000000000000000;
    goto LABEL_23;
  }
  v61 = HIBYTE(a15) & 0xF;
  if ((a15 & 0x2000000000000000) == 0)
    v61 = a14 & 0xFFFFFFFFFFFFLL;
  if (!v61)
  {
    swift_bridgeObjectRelease(a15);
    goto LABEL_22;
  }
  v51 = a14;
LABEL_23:
  swift_bridgeObjectRelease(v53);
  v63 = (uint64_t *)&v30[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_secondaryLabelText];
  *v63 = v51;
  v63[1] = v47;
  v64 = &v30[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_secondaryLabelTextShortened];
  *(_QWORD *)v64 = a16;
  *((_QWORD *)v64 + 1) = v54;

  v86.receiver = v30;
  v86.super_class = (Class)type metadata accessor for MOSuggestionStateOfMindAssetView();
  v65 = objc_msgSendSuper2(&v86, "initWithFrame:", a9, a10, a11, a12);
  objc_msgSend(v65, "setContentMode:", 1);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UITraitDefinition.Type>);
  v67 = swift_allocObject(v66, 48, 7);
  *(_OWORD *)(v67 + 16) = xmmword_10019ED20;
  *(_QWORD *)(v67 + 32) = type metadata accessor for UITraitUserInterfaceStyle(0);
  *(_QWORD *)(v67 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  v68 = v65;
  v69 = UIView.registerForTraitChanges(_:action:)(v67, "handleTraitChange");
  swift_unknownObjectRelease(v69);

  v70 = swift_bridgeObjectRelease(v67);
  v71 = (*(uint64_t (**)(uint64_t, __n128))((swift_isaMask & *v68) + 0x198))(a1, v70);
  (*(void (**)(uint64_t))((swift_isaMask & *v68) + 0x190))(v71);
  objc_msgSend(v68, "setIsAccessibilityElement:", 1);
  v72 = v68;
  v73 = objc_msgSend(v84, "mainBundle");
  v88._object = (void *)0x80000001001AB0C0;
  v74._countAndFlagsBits = 0x666F206574617453;
  v74._object = (void *)0xED0000646E696D20;
  v75._countAndFlagsBits = 0;
  v75._object = (void *)0xE000000000000000;
  v88._countAndFlagsBits = 0xD00000000000002CLL;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v74, (Swift::String_optional)0, (NSBundle)v73, v75, v88)._object;

  v77 = String._bridgeToObjectiveC()();
  objc_msgSend(v72, "setAccessibilityLabel:", v77, swift_bridgeObjectRelease(object).n128_f64[0]);

  v78 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 8))(a20, v78);
  return v72;
}

void specialized MOSuggestionStateOfMindAssetView.init(coder:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_associatedColors] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_gradient] = 0;
  v1 = OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_primaryLabel;
  *(_QWORD *)&v0[v1] = closure #1 in variable initialization expression of MOSuggestionStateOfMindAssetView.primaryLabel();
  v2 = OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_secondaryLabel;
  *(_QWORD *)&v0[v2] = closure #1 in variable initialization expression of MOSuggestionStateOfMindAssetView.secondaryLabel((SEL *)&selRef_secondaryLabelColor);
  v3 = OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_typeLabel;
  *(_QWORD *)&v0[v3] = closure #1 in variable initialization expression of MOSuggestionStateOfMindAssetView.secondaryLabel((SEL *)&selRef_tertiaryLabelColor);
  v4 = OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_labelStack;
  v5 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v5, "setAxis:", 1);
  objc_msgSend(v5, "setSpacing:", 1.0);
  objc_msgSend(v5, "setAlignment:", 1);
  *(_QWORD *)&v0[v4] = v5;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionStateOfMindAssetView.swift", 55, 2, 128, 0);
  __break(1u);
}

uint64_t type metadata accessor for MOSuggestionStateOfMindAssetView()
{
  return objc_opt_self(_TtC16MomentsUIService32MOSuggestionStateOfMindAssetView);
}

uint64_t sub_1000DEBA0@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x128))();
  *a2 = result;
  return result;
}

uint64_t sub_1000DEBE0(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x130))(*a1);
}

uint64_t sub_1000DEC20@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x140))();
  *a2 = result;
  return result;
}

uint64_t sub_1000DEC60(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x148))(*a1);
}

uint64_t sub_1000DECA0@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x158))();
  *a2 = result;
  return result;
}

uint64_t sub_1000DECE0(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x160))(*a1);
}

uint64_t sub_1000DED20@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x170))();
  *a2 = result;
  return result;
}

uint64_t sub_1000DED60(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x178))(*a1);
}

uint64_t MOSuggestionAssetPhotoMomentMetadata.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t MOSuggestionAssetPhotoMomentMetadata.date.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

id MOSuggestionAssetPhotoMomentMetadata.location.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(int *)(type metadata accessor for MOSuggestionAssetPhotoMomentMetadata(0) + 20));
}

uint64_t type metadata accessor for MOSuggestionAssetPhotoMomentMetadata(uint64_t a1)
{
  uint64_t result;

  result = type metadata singleton initialization cache for MOSuggestionAssetPhotoMomentMetadata;
  if (!type metadata singleton initialization cache for MOSuggestionAssetPhotoMomentMetadata)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MOSuggestionAssetPhotoMomentMetadata);
  return result;
}

void MOSuggestionAssetPhotoMomentMetadata.location.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(type metadata accessor for MOSuggestionAssetPhotoMomentMetadata(0) + 20);

  *(_QWORD *)(v1 + v3) = a1;
}

void (__swiftcall *MOSuggestionAssetPhotoMomentMetadata.location.modify())()
{
  type metadata accessor for MOSuggestionAssetPhotoMomentMetadata(0);
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

double MOSuggestionAssetPhotoMomentMetadata.resolution.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for MOSuggestionAssetPhotoMomentMetadata(0) + 24));
}

uint64_t MOSuggestionAssetPhotoMomentMetadata.resolution.setter(double a1, double a2)
{
  uint64_t v2;
  uint64_t result;
  double *v6;

  result = type metadata accessor for MOSuggestionAssetPhotoMomentMetadata(0);
  v6 = (double *)(v2 + *(int *)(result + 24));
  *v6 = a1;
  v6[1] = a2;
  return result;
}

void (__swiftcall *MOSuggestionAssetPhotoMomentMetadata.resolution.modify())()
{
  type metadata accessor for MOSuggestionAssetPhotoMomentMetadata(0);
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

unint64_t MOSuggestionAssetPhotoMomentMetadata.packedDictionary()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  void *v3;
  uint64_t v4;
  _QWORD *boxed_opaque_existential_1;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  _BYTE v17[152];

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(MOSuggestionAssetMetadataKey, Any)>);
  inited = swift_initStackObject(v1, v17);
  *(_OWORD *)(inited + 16) = xmmword_10019F2D0;
  v3 = (void *)MOSuggestionAssetMetadataKeyPhotoMomentDate;
  *(_QWORD *)(inited + 32) = MOSuggestionAssetMetadataKeyPhotoMomentDate;
  v4 = type metadata accessor for Date(0);
  *(_QWORD *)(inited + 64) = v4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((_QWORD *)(inited + 40));
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(boxed_opaque_existential_1, v0, v4);
  v6 = (void *)MOSuggestionAssetMetadataKeyPhotoMomentLocation;
  *(_QWORD *)(inited + 72) = MOSuggestionAssetMetadataKeyPhotoMomentLocation;
  v7 = type metadata accessor for MOSuggestionAssetPhotoMomentMetadata(0);
  v8 = *(void **)(v0 + *(int *)(v7 + 20));
  v9 = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for CLLocation, CLLocation_ptr);
  *(_QWORD *)(inited + 80) = v8;
  v10 = (void *)MOSuggestionAssetMetadataKeyPhotoMomentResolution;
  *(_QWORD *)(inited + 104) = v9;
  *(_QWORD *)(inited + 112) = v10;
  v11 = *(_QWORD *)(v0 + *(int *)(v7 + 24) + 8);
  *(_QWORD *)(inited + 144) = &type metadata for Double;
  *(_QWORD *)(inited + 120) = v11;
  v12 = v3;
  v13 = v6;
  v14 = v8;
  v15 = v10;
  return specialized Dictionary.init(dictionaryLiteral:)(inited);
}

uint64_t MOSuggestionAssetPhotoMomentMetadata.init(date:location:resolution:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v10;
  uint64_t result;
  double *v12;

  v10 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a3, a1, v10);
  result = type metadata accessor for MOSuggestionAssetPhotoMomentMetadata(0);
  *(_QWORD *)(a3 + *(int *)(result + 20)) = a2;
  v12 = (double *)(a3 + *(int *)(result + 24));
  *v12 = a4;
  v12[1] = a5;
  return result;
}

id one-time initialization function for shared()
{
  uint64_t v0;
  uint64_t v1;
  id result;

  v0 = type metadata accessor for MOAssetPhotoMomentProvider();
  v1 = swift_allocObject(v0, 24, 7);
  result = objc_msgSend((id)objc_opt_self(PHImageManager), "defaultManager");
  *(_QWORD *)(v1 + 16) = result;
  static MOAssetPhotoMomentProvider.shared = v1;
  return result;
}

{
  uint64_t v0;
  uint64_t v1;
  id v2;
  double v3;
  double v4;
  id result;

  v0 = type metadata accessor for MOSuggestionAssetAppIconProvider();
  v1 = swift_allocObject(v0, 24, 7);
  v2 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v2, "scale");
  v4 = v3;

  result = objc_msgSend(objc_allocWithZone((Class)ISImageDescriptor), "initWithSize:scale:", 350.0, 350.0, v4);
  *(_QWORD *)(v1 + 16) = result;
  static MOSuggestionAssetAppIconProvider.shared = v1;
  return result;
}

{
  uint64_t v0;
  _QWORD *v1;
  id v2;
  uint64_t v3;
  id result;

  v0 = type metadata accessor for MOSuggestionAssetCacheManager();
  v1 = (_QWORD *)swift_allocObject(v0, 56, 7);
  v2 = objc_msgSend(objc_allocWithZone((Class)NSCache), "init");
  v1[2] = v2;
  v1[3] = &_swiftEmptySetSingleton;
  v1[4] = &_swiftEmptyDictionarySingleton;
  v1[5] = 0;
  v3 = type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider();
  swift_allocObject(v3, 48, 7);
  v1[6] = MOSuggestionAssetPhotoLivePhotoVideosProvider.init()();
  objc_msgSend(v2, "setCountLimit:", 30);
  result = objc_msgSend(v2, "setTotalCostLimit:", 80);
  static MOSuggestionAssetCacheManager.shared = (uint64_t)v1;
  return result;
}

uint64_t MOAssetPhotoMomentProvider.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_allocObject(v0, 24, 7);
  *(_QWORD *)(v1 + 16) = objc_msgSend((id)objc_opt_self(PHImageManager), "defaultManager");
  return v1;
}

uint64_t *MOAssetPhotoMomentProvider.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1)
    swift_once(&one-time initialization token for shared, one-time initialization function for shared);
  return &static MOAssetPhotoMomentProvider.shared;
}

double static MOAssetPhotoMomentProvider.shared.getter()
{
  double result;

  if (one-time initialization token for shared != -1)
    swift_once(&one-time initialization token for shared, one-time initialization function for shared);
  *(_QWORD *)&result = swift_retain(static MOAssetPhotoMomentProvider.shared).n128_u64[0];
  return result;
}

int64x2_t one-time initialization function for defaultImageSize()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4072C00000000000uLL);
  static MOAssetPhotoMomentProvider.defaultImageSize = (__int128)result;
  return result;
}

__int128 *MOAssetPhotoMomentProvider.defaultImageSize.unsafeMutableAddressor()
{
  if (one-time initialization token for defaultImageSize != -1)
    swift_once(&one-time initialization token for defaultImageSize, one-time initialization function for defaultImageSize);
  return &static MOAssetPhotoMomentProvider.defaultImageSize;
}

double static MOAssetPhotoMomentProvider.defaultImageSize.getter()
{
  return static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE.getter(&one-time initialization token for defaultImageSize, (uint64_t)&static MOAssetPhotoMomentProvider.defaultImageSize);
}

__int128 *MOAssetPhotoMomentProvider.highQualityImageSize.unsafeMutableAddressor()
{
  if (one-time initialization token for highQualityImageSize != -1)
    swift_once(&one-time initialization token for highQualityImageSize, one-time initialization function for highQualityImageSize);
  return &static MOAssetPhotoMomentProvider.highQualityImageSize;
}

double static MOAssetPhotoMomentProvider.highQualityImageSize.getter()
{
  return static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE.getter(&one-time initialization token for highQualityImageSize, (uint64_t)&static MOAssetPhotoMomentProvider.highQualityImageSize);
}

Swift::OpaquePointer_optional __swiftcall MOAssetPhotoMomentProvider.fetchAssetsByIdentifiers(for:)(Swift::OpaquePointer a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  NSObject *v8;
  void *v9;
  Class isa;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  Swift::Bool v23;
  void *v24;
  id v25;
  uint64_t v26;
  Swift::OpaquePointer_optional result;

  if (serverManager._clientConnections != (NSMutableDictionary *)-1)
    swift_once(&serverManager._clientConnections, one-time initialization function for shared);
  v2 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v2, (uint64_t)static MOAngelLogger.shared);
  swift_bridgeObjectRetain(a1._rawValue);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.debug.getter();
  if (!os_log_type_enabled(v4, v5))
  {

    swift_bridgeObjectRelease(a1._rawValue);
    if (*((_QWORD *)a1._rawValue + 2))
      goto LABEL_5;
LABEL_10:
    v8 = Logger.logObject.getter(v7);
    v21 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v8, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v21, "[Assets] No localIdentifier", v22, 2u);
      swift_slowDealloc(v22, -1, -1);
    }
    goto LABEL_13;
  }
  v6 = (uint8_t *)swift_slowAlloc(12, -1);
  *(_DWORD *)v6 = 134217984;
  v25 = (id)*((_QWORD *)a1._rawValue + 2);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v6 + 4);
  swift_bridgeObjectRelease(a1._rawValue);
  _os_log_impl((void *)&_mh_execute_header, v4, v5, "[Assets] fetching photos identifierCount=%ld", v6, 0xCu);
  swift_slowDealloc(v6, -1, -1);

  if (!*((_QWORD *)a1._rawValue + 2))
    goto LABEL_10;
LABEL_5:
  v8 = objc_msgSend(objc_allocWithZone((Class)PHFetchOptions), "init");
  -[NSObject setIncludeGuestAssets:](v8, "setIncludeGuestAssets:", 1);
  v9 = (void *)objc_opt_self(PHAsset);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v11 = objc_msgSend(v9, "fetchAssetsWithLocalIdentifiers:options:", isa, v8);

  if ((uint64_t)objc_msgSend(v11, "count") < 1
    || (v12 = objc_msgSend(v11, "fetchedObjects")) == 0)
  {

LABEL_13:
    v15 = 0;
    goto LABEL_16;
  }
  v13 = v12;
  v14 = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for PHAsset, PHAsset_ptr);
  v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v14);

  v16 = v11;
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v19 = 134217984;
    v25 = -[NSObject count](v16, "count");
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v19 + 4);

    _os_log_impl((void *)&_mh_execute_header, v17, v18, "[Assets] Fetched PHAsset count=%ld", v19, 0xCu);
    swift_slowDealloc(v19, -1, -1);
    v20 = v8;
  }
  else
  {

    v20 = v16;
    v17 = v8;
  }

LABEL_16:
  v24 = (void *)v15;
  result.value._rawValue = v24;
  result.is_nil = v23;
  return result;
}

uint64_t MOAssetPhotoMomentProvider.getMetadata(from:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  void (*v16)(char *, char *, uint64_t);
  id v17;
  id v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v23 - v12;
  v14 = objc_msgSend(a1, "creationDate");
  if (!v14)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    goto LABEL_8;
  }
  v15 = v14;
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v14);

  v16 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v16(v6, v11, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
LABEL_8:
    outlined destroy of Any?((uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for Date?);
LABEL_9:
    v22 = type metadata accessor for MOSuggestionAssetPhotoMomentMetadata(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a2, 1, 1, v22);
  }
  v16(v13, v6, v7);
  v17 = objc_msgSend(a1, "location");
  if (!v17)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    goto LABEL_9;
  }
  v18 = v17;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  if (one-time initialization token for defaultImageSize != -1)
    swift_once(&one-time initialization token for defaultImageSize, one-time initialization function for defaultImageSize);
  v19 = static MOAssetPhotoMomentProvider.defaultImageSize;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  v16(a2, v11, v7);
  v20 = type metadata accessor for MOSuggestionAssetPhotoMomentMetadata(0);
  *(_QWORD *)&a2[*(int *)(v20 + 20)] = v18;
  *(_OWORD *)&a2[*(int *)(v20 + 24)] = v19;
  return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a2, 0, 1, v20);
}

void MOAssetPhotoMomentProvider.getImages(from:previewOnly:completion:)(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *, _QWORD *), uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  void *v27;
  _QWORD *v28;
  void *v29;
  _QWORD *v30;
  NSObject *v31;
  id v32;
  NSObject *v33;
  NSObject *v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  NSObject *v40;
  uint64_t v41;
  unint64_t *v42;
  unint64_t v43;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  NSObject *v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  __n128 v64;
  void (*v65)(_QWORD *, _QWORD *);
  unint64_t *v66;
  uint64_t v67;
  _QWORD *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  _QWORD *v79;
  uint64_t aBlock[5];
  _QWORD *v81;
  char v82[32];

  v74 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAssetPhotoMomentMetadata?);
  __chkstk_darwin(v6);
  v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for MOSuggestionAssetPhotoMomentMetadata(0);
  v77 = *(_QWORD *)(v72 - 8);
  v9 = __chkstk_darwin(v72);
  v71 = (uint64_t)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v70 = (uint64_t)&v62 - v11;
  if (one-time initialization token for defaultImageSize != -1)
LABEL_33:
    swift_once(&one-time initialization token for defaultImageSize, one-time initialization function for defaultImageSize);
  v12 = static MOAssetPhotoMomentProvider.defaultImageSize;
  v76 = swift_allocObject(&unk_1001E9210, 24, 7);
  *(_QWORD *)(v76 + 16) = _swiftEmptyArrayStorage;
  v13 = swift_allocObject(&unk_1001E9238, 24, 7);
  v75 = v13;
  *(_QWORD *)(v13 + 16) = _swiftEmptyArrayStorage;
  v66 = (unint64_t *)(v13 + 16);
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v59 = a1;
    else
      v59 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v60 = _CocoaArrayWrapper.endIndex.getter(v59);
    swift_bridgeObjectRelease(a1);
    if (v60 >= 1)
    {
      v61 = swift_allocObject(&unk_1001E9260, 24, 7);
      v73 = v61;
      *(_QWORD *)(v61 + 16) = v60;
      v16 = (_QWORD *)(v61 + 16);
      swift_bridgeObjectRetain(a1);
      v17 = _CocoaArrayWrapper.endIndex.getter(v59);
      if (v17)
        goto LABEL_5;
LABEL_39:
      swift_release(v73);
      swift_bridgeObjectRelease(a1);
      swift_release(v76);
      swift_release(v75);
      return;
    }
LABEL_40:
    a3(_swiftEmptyArrayStorage, _swiftEmptyArrayStorage);
    swift_release(v76);
    swift_release(v75);
    return;
  }
  v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v14)
    goto LABEL_40;
  v15 = swift_allocObject(&unk_1001E9260, 24, 7);
  v73 = v15;
  *(_QWORD *)(v15 + 16) = v14;
  v16 = (_QWORD *)(v15 + 16);
  v17 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v17)
    goto LABEL_39;
LABEL_5:
  if (v17 >= 1)
  {
    v78 = a1 & 0xC000000000000001;
    v18 = swift_beginAccess(v16, v82, 1, 0);
    v19 = 0;
    v18.n128_u64[0] = 136315138;
    v64 = v18;
    v63 = (char *)&type metadata for Any + 8;
    v69 = v8;
    v65 = a3;
    v68 = v16;
    v67 = v17;
    while (1)
    {
      if (v78)
        v33 = specialized _ArrayBuffer._getElementSlowPath(_:)(v19, a1);
      else
        v33 = *(id *)(a1 + 8 * v19 + 32);
      v34 = v33;
      if ((-[NSObject mediaSubtypes](v33, "mediaSubtypes") & 4) != 0)
      {
        if (serverManager._clientConnections != (NSMutableDictionary *)-1)
          swift_once(&serverManager._clientConnections, one-time initialization function for shared);
        v35 = type metadata accessor for Logger(0);
        v36 = __swift_project_value_buffer(v35, (uint64_t)static MOAngelLogger.shared);
        v37 = Logger.logObject.getter(v36);
        v38 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v37, v38))
        {
          v39 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v39 = 0;
          _os_log_impl((void *)&_mh_execute_header, v37, v38, "[Assets] Skipping screenshot", v39, 2u);
          swift_slowDealloc(v39, -1, -1);
          v40 = v34;
        }
        else
        {
          v40 = v37;
          v37 = v34;
        }

        if (__OFSUB__(*v16, 1))
        {
          __break(1u);
          goto LABEL_33;
        }
        --*v16;
      }
      else
      {
        (*(void (**))(*v79 + 96))(v34);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v8, 1, v72) == 1)
        {
          outlined destroy of Any?((uint64_t)v8, &demangling cache variable for type metadata for MOSuggestionAssetPhotoMomentMetadata?);
        }
        else
        {
          v41 = v70;
          outlined init with take of MOSuggestionAssetPhotoMomentMetadata((uint64_t)v8, v70);
          outlined init with copy of MOSuggestionAssetPhotoMomentMetadata(v41, v71);
          v42 = v66;
          swift_beginAccess(v66, aBlock, 33, 0);
          v43 = *v42;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v42);
          *v42 = v43;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v43 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v43 + 16) + 1, 1, v43);
            *v66 = v43;
          }
          v46 = *(_QWORD *)(v43 + 16);
          v45 = *(_QWORD *)(v43 + 24);
          if (v46 >= v45 >> 1)
          {
            v43 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v45 > 1, v46 + 1, 1, v43);
            *v66 = v43;
          }
          *(_QWORD *)(v43 + 16) = v46 + 1;
          outlined init with take of MOSuggestionAssetPhotoMomentMetadata(v71, v43+ ((*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80))+ *(_QWORD *)(v77 + 72) * v46);
          swift_endAccess(aBlock);
          outlined destroy of MOSuggestionAssetPhotoMomentMetadata(v70);
        }
        if (serverManager._clientConnections != (NSMutableDictionary *)-1)
          swift_once(&serverManager._clientConnections, one-time initialization function for shared);
        v47 = type metadata accessor for Logger(0);
        __swift_project_value_buffer(v47, (uint64_t)static MOAngelLogger.shared);
        v48 = v34;
        v49 = Logger.logObject.getter(v48);
        v50 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v49, v50))
        {
          v51 = swift_slowAlloc(12, -1);
          v52 = a1;
          v53 = swift_slowAlloc(32, -1);
          aBlock[0] = v53;
          *(_DWORD *)v51 = v64.n128_u32[0];
          v54 = -[NSObject localIdentifier](v48, "localIdentifier");
          v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
          v57 = v56;

          *(_QWORD *)(v51 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v55, v57, aBlock);
          swift_bridgeObjectRelease(v57);
          _os_log_impl((void *)&_mh_execute_header, v49, v50, "[Assets] imageRequested=%s", (uint8_t *)v51, 0xCu);
          swift_arrayDestroy(v53, 1, v63);
          v58 = v53;
          a1 = v52;
          a3 = v65;
          swift_slowDealloc(v58, -1, -1);
          swift_slowDealloc(v51, -1, -1);

        }
        else
        {

        }
        v20 = (_QWORD *)swift_allocObject(&unk_1001E9288, 56, 7);
        v22 = v75;
        v21 = v76;
        v24 = v73;
        v23 = v74;
        v20[2] = v76;
        v20[3] = v24;
        v20[4] = a3;
        v20[5] = v23;
        v20[6] = v22;
        v25 = objc_allocWithZone((Class)PHImageRequestOptions);
        swift_retain(v21);
        swift_retain(v24);
        swift_retain(v23);
        v26 = objc_msgSend(v25, "init", swift_retain(v22).n128_f64[0]);
        objc_msgSend(v26, "setDeliveryMode:", 1);
        v27 = (void *)v79[2];
        v28 = (_QWORD *)swift_allocObject(&unk_1001E92B0, 40, 7);
        v28[2] = v48;
        v28[3] = partial apply for closure #1 in MOAssetPhotoMomentProvider.getImages(from:previewOnly:completion:);
        v28[4] = v20;
        aBlock[4] = (uint64_t)partial apply for closure #1 in MOAssetPhotoMomentProvider.fetchImage(for:targetSize:contentMode:onComplete:);
        v81 = v28;
        aBlock[0] = (uint64_t)_NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed UIImage?, @guaranteed [AnyHashable : Any]?) -> ();
        aBlock[3] = (uint64_t)&block_descriptor_21;
        v29 = _Block_copy(aBlock);
        v30 = v81;
        v31 = v48;
        v32 = v26;
        swift_retain(v20);
        swift_release(v30);
        objc_msgSend(v27, "requestImageForAsset:targetSize:contentMode:options:resultHandler:", v31, 1, v32, v29, v12);
        _Block_release(v29);

        swift_release(v20);
        v8 = v69;
        v16 = v68;
        v17 = v67;
      }
      if (v17 == ++v19)
        goto LABEL_39;
    }
  }
  __break(1u);
}

uint64_t closure #1 in MOAssetPhotoMomentProvider.getImages(from:previewOnly:completion:)(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[24];
  _BYTE v27[24];
  _BYTE v28[24];

  v11 = (uint64_t *)(a2 + 16);
  swift_beginAccess(a2 + 16, v28, 33, 0);
  v12 = a1;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
  v13 = *(_QWORD *)(a2 + 16) & 0xFFFFFFFFFFFFFF8;
  v15 = *(_QWORD *)(v13 + 0x10);
  v14 = *(_QWORD *)(v13 + 24);
  if (v15 >= v14 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
  v16 = (uint64_t *)(a3 + 16);
  v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v12);
  specialized Array._endMutation()(v17);
  swift_endAccess(v28);
  swift_beginAccess(v11, v28, 0, 0);
  v18 = *v11;
  if ((unint64_t)*v11 >> 62)
  {
    if (v18 < 0)
      v24 = *v11;
    else
      v24 = v18 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v11);
    v19 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(v18);
  }
  else
  {
    v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  result = swift_beginAccess(v16, v27, 0, 0);
  if (v19 >= *v16)
  {
    v21 = (uint64_t *)(a6 + 16);
    swift_beginAccess(v11, v26, 0, 0);
    v22 = *v11;
    swift_beginAccess(v21, &v25, 0, 0);
    v23 = *v21;
    swift_bridgeObjectRetain(v22);
    swift_bridgeObjectRetain(v23);
    a4(v22, v23);
    swift_bridgeObjectRelease(v22);
    return swift_bridgeObjectRelease(v23);
  }
  return result;
}

void closure #1 in MOAssetPhotoMomentProvider.fetchImage(for:targetSize:contentMode:onComplete:)(void *a1, uint64_t a2, void *a3, void (*a4)(id))
{
  NSMutableDictionary *clientConnections;
  id v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;

  if (a1)
  {
    clientConnections = serverManager._clientConnections;
    v7 = a1;
    if (clientConnections != (NSMutableDictionary *)-1)
      swift_once(&serverManager._clientConnections, one-time initialization function for shared);
    v8 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v8, (uint64_t)static MOAngelLogger.shared);
    v9 = a3;
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v19 = v7;
      v13 = swift_slowAlloc(32, -1);
      v21 = v13;
      *(_DWORD *)v12 = 136315138;
      v14 = objc_msgSend(v9, "localIdentifier");
      v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
      v17 = v16;

      v20 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v17, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21, v12 + 4);

      swift_bridgeObjectRelease(v17);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "[Assets] imageFetched=%s", v12, 0xCu);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      v18 = v13;
      v7 = v19;
      swift_slowDealloc(v18, -1, -1);
      swift_slowDealloc(v12, -1, -1);

    }
    else
    {

    }
    a4(v7);

  }
}

uint64_t MOAssetPhotoMomentProvider.init()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = objc_msgSend((id)objc_opt_self(PHImageManager), "defaultManager");
  return v0;
}

uint64_t sub_1000E04FC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000E0520()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000E0530()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t partial apply for closure #1 in MOAssetPhotoMomentProvider.getImages(from:previewOnly:completion:)(void *a1)
{
  uint64_t v1;

  return closure #1 in MOAssetPhotoMomentProvider.getImages(from:previewOnly:completion:)(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(uint64_t, uint64_t))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_1000E057C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void partial apply for closure #1 in MOAssetPhotoMomentProvider.fetchImage(for:targetSize:contentMode:onComplete:)(void *a1, uint64_t a2)
{
  uint64_t v2;

  closure #1 in MOAssetPhotoMomentProvider.fetchImage(for:targetSize:contentMode:onComplete:)(a1, a2, *(void **)(v2 + 16), *(void (**)(id))(v2 + 24));
}

uint64_t block_copy_helper_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_21(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t outlined init with take of MOSuggestionAssetPhotoMomentMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MOSuggestionAssetPhotoMomentMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with copy of MOSuggestionAssetPhotoMomentMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MOSuggestionAssetPhotoMomentMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of MOSuggestionAssetPhotoMomentMetadata(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MOSuggestionAssetPhotoMomentMetadata(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for MOSuggestionAssetPhotoMomentMetadata(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v10;
    *(_OWORD *)((char *)a1 + v9) = *(_OWORD *)((char *)a2 + v9);
    v11 = v10;
  }
  return a1;
}

void destroy for MOSuggestionAssetPhotoMomentMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

}

uint64_t initializeWithCopy for MOSuggestionAssetPhotoMomentMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v10 = v9;
  return a1;
}

uint64_t assignWithCopy for MOSuggestionAssetPhotoMomentMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  return a1;
}

uint64_t initializeWithTake for MOSuggestionAssetPhotoMomentMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for MOSuggestionAssetPhotoMomentMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for MOSuggestionAssetPhotoMomentMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000E0934);
}

uint64_t sub_1000E0934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for MOSuggestionAssetPhotoMomentMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000E09BC);
}

uint64_t sub_1000E09BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata completion function for MOSuggestionAssetPhotoMomentMetadata(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = &unk_1001A1AB8;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for MOAssetPhotoMomentProvider()
{
  return objc_opt_self(_TtC16MomentsUIService26MOAssetPhotoMomentProvider);
}

void *MOSuggestionAssetMediaAnalytics.Events.mediaSuggestion.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetMediaAnalytics.Events.mediaSuggestion;
}

unint64_t static MOSuggestionAssetMediaAnalytics.Events.mediaSuggestion.getter()
{
  return 0xD000000000000021;
}

uint64_t MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields.rawValue.getter(char a1)
{
  if (!a1)
    return 0x4449656C646E7562;
  if (a1 == 1)
    return 0xD000000000000012;
  return 0xD000000000000016;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields(_BYTE *a1, _BYTE *a2)
{
  unint64_t v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;

  v2 = 0xD000000000000012;
  v3 = *a1;
  v4 = 0x80000001001A6000;
  if (v3 == 1)
    v5 = 0xD000000000000012;
  else
    v5 = 0xD000000000000016;
  if (v3 == 1)
    v6 = 0x80000001001A6000;
  else
    v6 = 0x80000001001A6020;
  if (*a1)
    v7 = v5;
  else
    v7 = 0x4449656C646E7562;
  if (v3)
    v8 = v6;
  else
    v8 = 0xE800000000000000;
  if (*a2 != 1)
  {
    v2 = 0xD000000000000016;
    v4 = 0x80000001001A6020;
  }
  if (*a2)
    v9 = v2;
  else
    v9 = 0x4449656C646E7562;
  if (*a2)
    v10 = v4;
  else
    v10 = 0xE800000000000000;
  if (v7 == v9 && v8 == v10)
  {
    v11 = 1;
    v10 = v8;
  }
  else
  {
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, v9, v10, 0);
  }
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v10);
  return v11 & 1;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7, 0);
  v2 = 0x80000001001A6000;
  v3 = 0xD000000000000012;
  if (v1 != 1)
  {
    v3 = 0xD000000000000016;
    v2 = 0x80000001001A6020;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x4449656C646E7562;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE800000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0x80000001001A6000;
  v3 = 0xD000000000000012;
  if (*v1 != 1)
  {
    v3 = 0xD000000000000016;
    v2 = 0x80000001001A6020;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 0x4449656C646E7562;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xE800000000000000;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[9];

  v2 = *v1;
  Hasher.init(_seed:)(v8, a1);
  v3 = 0x80000001001A6000;
  v4 = 0xD000000000000012;
  if (v2 != 1)
  {
    v4 = 0xD000000000000016;
    v3 = 0x80000001001A6020;
  }
  if (v2)
    v5 = v4;
  else
    v5 = 0x4449656C646E7562;
  if (v2)
    v6 = v3;
  else
    v6 = 0xE800000000000000;
  String.hash(into:)(v8, v5, v6);
  swift_bridgeObjectRelease(v6);
  return Hasher._finalize()();
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = specialized MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE800000000000000;
  v4 = 0x80000001001A6000;
  v5 = 0xD000000000000012;
  if (v2 != 1)
  {
    v5 = 0xD000000000000016;
    v4 = 0x80000001001A6020;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x4449656C646E7562;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.isAppIconUnchanged.getter(uint64_t a1, uint64_t a2, char a3)
{
  return a3 & 1;
}

uint64_t MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.isAppIconUnchanged.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.isPredefinedPopularApp.getter(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return (a3 >> 8) & 1;
}

uint64_t MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.isPredefinedPopularApp.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 17) = result;
  return result;
}

void (__swiftcall *MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.isPredefinedPopularApp.modify())()
{
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

MomentsUIService::MOSuggestionAssetMediaAnalytics::MediaEngagementEvent __swiftcall MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.init(bundleId:isAppIconUnchanged:isPredefinedPopularApp:)(Swift::String_optional bundleId, Swift::Bool isAppIconUnchanged, Swift::Bool isPredefinedPopularApp)
{
  __int16 v3;
  __int16 v4;
  MomentsUIService::MOSuggestionAssetMediaAnalytics::MediaEngagementEvent result;

  if (isPredefinedPopularApp)
    v3 = 256;
  else
    v3 = 0;
  v4 = v3 & 0xFFFE | isAppIconUnchanged;
  result.bundleId = bundleId;
  result.isAppIconUnchanged = v4;
  result.isPredefinedPopularApp = HIBYTE(v4);
  return result;
}

Swift::Void __swiftcall MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.send()()
{
  unint64_t v0;
  unsigned int v1;
  char v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  unint64_t v7;
  uint64_t v8;
  id v9;
  NSString v10;
  id v11;
  NSString v12;
  void *v13;
  uint64_t v14;
  __n128 v15;
  _QWORD aBlock[5];
  uint64_t v17;
  char v18[104];

  v2 = v1;
  v3 = v0;
  v4 = (v1 >> 8) & 1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, NSObject)>);
  inited = swift_initStackObject(v5, v18);
  *(_OWORD *)(inited + 16) = xmmword_10019F2D0;
  *(_QWORD *)(inited + 32) = 0x4449656C646E7562;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  if (v3)
    v7 = v3;
  else
    v7 = 0xE000000000000000;
  v8 = swift_allocObject(&unk_1001E9310, 24, 7);
  v9 = objc_allocWithZone((Class)NSString);
  swift_bridgeObjectRetain(v3);
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v9, "initWithString:", v10, swift_bridgeObjectRelease(v7).n128_f64[0]);

  *(_QWORD *)(inited + 48) = v11;
  *(_QWORD *)(inited + 56) = 0xD000000000000012;
  *(_QWORD *)(inited + 64) = 0x80000001001A6000;
  *(_QWORD *)(inited + 72) = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", v2 & 1);
  *(_QWORD *)(inited + 80) = 0xD000000000000016;
  *(_QWORD *)(inited + 88) = 0x80000001001A6020;
  *(_QWORD *)(inited + 96) = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", v4);
  *(_QWORD *)(v8 + 16) = specialized Dictionary.init(dictionaryLiteral:)(inited);
  v12 = String._bridgeToObjectiveC()();
  aBlock[4] = partial apply for closure #1 in MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.send();
  v17 = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> (@owned [String : NSObject]?);
  aBlock[3] = &block_descriptor_22;
  v13 = _Block_copy(aBlock);
  v14 = v17;
  swift_retain(v8);
  v15 = swift_release(v14);
  AnalyticsSendEventLazy(v12, v13, v15);
  _Block_release(v13);
  swift_release(v8);

}

unint64_t specialized MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields.init(rawValue:)(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields.init(rawValue:), v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

uint64_t sub_1000E112C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

double partial apply for closure #1 in MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.send()()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v1 = specialized closure #1 in MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.send()(v0);
  *(_QWORD *)&result = swift_bridgeObjectRetain(v1).n128_u64[0];
  return result;
}

uint64_t block_copy_helper_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_22(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t lazy protocol witness table accessor for type MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields and conformance MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields and conformance MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields;
  if (!lazy protocol witness table cache variable for type MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields and conformance MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields, &type metadata for MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields and conformance MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields);
  }
  return result;
}

uint64_t type metadata accessor for MOSuggestionAssetMediaAnalytics()
{
  return objc_opt_self(_TtC16MomentsUIService31MOSuggestionAssetMediaAnalytics);
}

ValueMetadata *type metadata accessor for MOSuggestionAssetMediaAnalytics.Events()
{
  return &type metadata for MOSuggestionAssetMediaAnalytics.Events;
}

uint64_t initializeBufferWithCopyOfBuffer for MOSuggestionAssetMediaAnalytics.MediaEngagementEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for MOSuggestionAssetMediaAnalytics.MediaEngagementEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for MOSuggestionAssetMediaAnalytics.MediaEngagementEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for MOSuggestionAssetMediaAnalytics.MediaEngagementEvent(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 18))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MOSuggestionAssetMediaAnalytics.MediaEngagementEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 18) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MOSuggestionAssetMediaAnalytics.MediaEngagementEvent()
{
  return &type metadata for MOSuggestionAssetMediaAnalytics.MediaEngagementEvent;
}

uint64_t storeEnumTagSinglePayload for MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1000E13F0 + 4 * byte_1001A1B05[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1000E1424 + 4 * asc_1001A1B00[v4]))();
}

uint64_t sub_1000E1424(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000E142C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000E1434);
  return result;
}

uint64_t sub_1000E1440(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000E1448);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1000E144C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000E1454(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields()
{
  return &type metadata for MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields;
}

uint64_t specialized closure #1 in MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.send()(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  __n128 v14;
  __n128 v15;
  uint64_t v17;
  _BYTE v18[24];
  uint64_t v19[3];

  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v2 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v2, (uint64_t)static MOAngelLogger.assets);
  v3 = swift_retain_n(a1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v19[0] = v7;
    *(_DWORD *)v6 = 136315138;
    swift_beginAccess(a1 + 16, v18, 0, 0);
    v8 = *(_QWORD *)(a1 + 16);
    v9 = type metadata accessor for NSObject();
    swift_bridgeObjectRetain(v8);
    v11 = Dictionary.debugDescription.getter(v10, &type metadata for String, v9, &protocol witness table for String);
    v13 = v12;
    swift_bridgeObjectRelease(v8);
    v17 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v13, v19);
    v14 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, v18, v6 + 4);
    swift_release_n(a1, v14);
    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "[Media Suggestion Analytics] result=%s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {

    swift_release_n(a1, v15);
  }
  swift_beginAccess(a1 + 16, v19, 0, 0);
  return *(_QWORD *)(a1 + 16);
}

_QWORD *MOSuggestionActivityRingsAssetView.__allocating_init(activitySummary:currentSizeType:frame:)(void *a1, char a2, double a3, double a4, double a5, double a6)
{
  objc_class *v6;
  id v13;

  v13 = objc_allocWithZone(v6);
  return MOSuggestionActivityRingsAssetView.init(activitySummary:currentSizeType:frame:)(a1, a2, a3, a4, a5, a6);
}

void closure #1 in variable initialization expression of MOSuggestionActivityRingsAssetView.energyLabel()
{
  closure #1 in variable initialization expression of MOSuggestionActivityRingsAssetView.energyLabel(0x6B6E695065766F6DLL, 0xE800000000000000, (SEL *)&selRef_systemPinkColor);
}

id MOSuggestionActivityRingsAssetView.energyLabel.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_energyLabel);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_energyLabel, v3, 0, 0);
  return *v1;
}

void MOSuggestionActivityRingsAssetView.energyLabel.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_energyLabel);
}

uint64_t (*MOSuggestionActivityRingsAssetView.energyLabel.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_energyLabel, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void closure #1 in variable initialization expression of MOSuggestionActivityRingsAssetView.exerciseMinuteLabel()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v1 = (void *)objc_opt_self(UIFont);
  v2 = objc_msgSend(v1, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  v3 = objc_msgSend(v2, "fontDescriptor");
  v4 = objc_msgSend(v3, "fontDescriptorWithSymbolicTraits:", 2);

  if (v4)
  {
    v5 = objc_msgSend(v1, "fontWithDescriptor:size:", v4, 0.0);

    objc_msgSend(v0, "setFont:", v5);
    if (one-time initialization token for exerciseGreen != -1)
      swift_once(&one-time initialization token for exerciseGreen, one-time initialization function for exerciseGreen);
    objc_msgSend(v0, "setTextColor:", static MOSuggestionTheme.Colors.exerciseGreen);
    objc_msgSend(v0, "setTextAlignment:", 0);
  }
  else
  {
    __break(1u);
  }
}

id MOSuggestionActivityRingsAssetView.exerciseMinuteLabel.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_exerciseMinuteLabel);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_exerciseMinuteLabel, v3, 0, 0);
  return *v1;
}

void MOSuggestionActivityRingsAssetView.exerciseMinuteLabel.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_exerciseMinuteLabel);
}

uint64_t (*MOSuggestionActivityRingsAssetView.exerciseMinuteLabel.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_exerciseMinuteLabel, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void closure #1 in variable initialization expression of MOSuggestionActivityRingsAssetView.standLabel()
{
  closure #1 in variable initialization expression of MOSuggestionActivityRingsAssetView.energyLabel(0x65636E6174736964, 0xEC00000065756C42, (SEL *)&selRef_systemBlueColor);
}

void closure #1 in variable initialization expression of MOSuggestionActivityRingsAssetView.energyLabel(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  NSString v10;
  void *v11;
  id v12;

  v4 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v5 = (void *)objc_opt_self(UIFont);
  v6 = objc_msgSend(v5, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  v7 = objc_msgSend(v6, "fontDescriptor");
  v8 = objc_msgSend(v7, "fontDescriptorWithSymbolicTraits:", 2);

  if (v8)
  {
    v9 = objc_msgSend(v5, "fontWithDescriptor:size:", v8, 0.0);

    objc_msgSend(v4, "setFont:", v9);
    v10 = String._bridgeToObjectiveC()();
    v11 = (void *)objc_opt_self(UIColor);
    v12 = objc_msgSend(v11, "colorNamed:", v10);

    if (!v12)
      v12 = objc_msgSend(v11, *a3);
    objc_msgSend(v4, "setTextColor:", v12);

    objc_msgSend(v4, "setTextAlignment:", 0);
  }
  else
  {
    __break(1u);
  }
}

id MOSuggestionActivityRingsAssetView.standLabel.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_standLabel);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_standLabel, v3, 0, 0);
  return *v1;
}

void MOSuggestionActivityRingsAssetView.standLabel.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_standLabel);
}

uint64_t (*MOSuggestionActivityRingsAssetView.standLabel.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_standLabel, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id MOSuggestionActivityRingsAssetView.labelStackView.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_labelStackView);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_labelStackView, v3, 0, 0);
  return *v1;
}

void MOSuggestionActivityRingsAssetView.labelStackView.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_labelStackView);
}

uint64_t (*MOSuggestionActivityRingsAssetView.labelStackView.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_labelStackView, a1, 33, 0);
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

_QWORD *MOSuggestionActivityRingsAssetView.init(activitySummary:currentSizeType:frame:)(void *a1, char a2, double a3, double a4, double a5, double a6)
{
  char *v6;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  _QWORD *v23;
  id v24;
  objc_super v26;

  v13 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_energyLabel;
  v14 = v6;
  closure #1 in variable initialization expression of MOSuggestionActivityRingsAssetView.energyLabel(0x6B6E695065766F6DLL, 0xE800000000000000, (SEL *)&selRef_systemPinkColor);
  *(_QWORD *)&v6[v13] = v15;
  v16 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_exerciseMinuteLabel;
  closure #1 in variable initialization expression of MOSuggestionActivityRingsAssetView.exerciseMinuteLabel();
  *(_QWORD *)&v14[v16] = v17;
  v18 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_standLabel;
  closure #1 in variable initialization expression of MOSuggestionActivityRingsAssetView.energyLabel(0x65636E6174736964, 0xEC00000065756C42, (SEL *)&selRef_systemBlueColor);
  *(_QWORD *)&v14[v18] = v19;
  v20 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_labelStackView;
  v21 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v21, "setAxis:", 1);
  objc_msgSend(v21, "setSpacing:", 2.0);
  objc_msgSend(v21, "setAlignment:", 1);
  objc_msgSend(v21, "setDistribution:", 3);
  *(_QWORD *)&v14[v20] = v21;
  *(_QWORD *)&v14[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_activitySummary] = a1;
  v14[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_currentSizeType] = a2;
  v22 = a1;

  v26.receiver = v14;
  v26.super_class = (Class)type metadata accessor for MOSuggestionActivityRingsAssetView();
  v23 = objc_msgSendSuper2(&v26, "initWithFrame:", a3, a4, a5, a6);
  v24 = objc_msgSend(v23, "setContentMode:", 1);
  (*(void (**)(id))((swift_isaMask & *v23) + 0xE8))(v24);

  return v23;
}

uint64_t type metadata accessor for MOSuggestionActivityRingsAssetView()
{
  return objc_opt_self(_TtC16MomentsUIService34MOSuggestionActivityRingsAssetView);
}

Swift::Void __swiftcall MOSuggestionActivityRingsAssetView.makeUIView()()
{
  _QWORD *v0;
  _QWORD *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t (*v17)(void);
  void *v18;
  id v19;
  void *v20;
  id v21;
  double v22;
  double v23;
  void *v24;
  Swift::String v25;
  id v26;
  id v27;
  double v28;
  double v29;
  double v30;
  Swift::String v31;
  void *object;
  Swift::String v33;
  void *v34;
  id v35;
  Swift::String v36;
  void *v37;
  NSString v38;
  id v39;
  void *v40;
  double v41;
  double v42;
  void *v43;
  id v44;
  double v45;
  double v46;
  void *v47;
  Swift::String v48;
  Swift::String v49;
  void *v50;
  Swift::String v51;
  id v52;
  Swift::String v53;
  void *v54;
  NSString v55;
  id v56;
  void *v57;
  double v58;
  double v59;
  void *v60;
  id v61;
  double v62;
  double v63;
  void *v64;
  Swift::String v65;
  Swift::String v66;
  void *v67;
  Swift::String v68;
  id v69;
  Swift::String v70;
  void *v71;
  NSString v72;
  int v73;
  id v74;
  void *v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  void *v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  uint64_t (*v87)(void);
  void *v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;
  void *v94;
  id v95;
  void *v96;
  id v97;
  id v98;
  id v99;
  id v100;
  void *v101;
  id v102;
  id v103;
  id v104;
  void *v105;
  id v106;
  void *v107;
  id v108;
  id v109;
  id v110;
  void *v111;
  uint64_t (*v112)(void);
  void *v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  double v120;
  double v121;
  id v122;
  id v123;
  double v124;
  double v125;
  id v126;
  id v127;
  void *v128;
  id v129;
  id v130;
  id v131;
  uint64_t (*v132)(void);
  void *v133;
  id v134;
  void *v135;
  id v136;
  id v137;
  id v138;
  char **v139;
  void *v140;
  id v141;
  void *v142;
  id v143;
  id v144;
  id v145;
  id v146;
  void *v147;
  id v148;
  void *v149;
  id v150;
  id v151;
  id v152;
  id v153;
  id v154;
  id v155;
  id v156;
  char v157;
  uint64_t v158;
  id v159;
  id v160;
  uint64_t (*v161)(void);
  void *v162;
  Swift::String v163;
  Swift::String v164;
  Swift::String v165;
  Swift::String v166;
  Swift::String v167;
  Swift::String v168;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  objc_msgSend(v0, "setBackgroundColor:", v2);

  v3 = objc_msgSend(objc_allocWithZone((Class)HKActivityRingView), "init");
  v4 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_activitySummary);
  objc_msgSend(v3, "setActivitySummary:animated:", v4, 1);
  objc_msgSend(v0, "addSubview:", v3);
  v5 = objc_msgSend(v3, "superview");
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v7 = objc_msgSend(v3, "leadingAnchor");
    v8 = objc_msgSend(v6, "leadingAnchor");
    v9 = objc_msgSend(v7, "constraintEqualToAnchor:", v8);

    objc_msgSend(v9, "setConstant:", 8.0);
    v10 = v9;
    objc_msgSend(v10, "setActive:", 1);

  }
  v11 = objc_msgSend(v3, "superview");
  if (v11)
  {
    v12 = v11;
    objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v13 = objc_msgSend(v3, "topAnchor");
    v14 = objc_msgSend(v12, "topAnchor");
    v15 = objc_msgSend(v13, "constraintEqualToAnchor:", v14);

    objc_msgSend(v15, "setConstant:", 8.0);
    v16 = v15;
    objc_msgSend(v16, "setActive:", 1);

  }
  v17 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0x80);
  v18 = (void *)v17();
  v19 = objc_msgSend(v4, "activeEnergyBurned");
  v20 = (void *)objc_opt_self(HKUnit);
  v21 = objc_msgSend(v20, "largeCalorieUnit");
  objc_msgSend(v19, "doubleValueForUnit:", v21);
  v23 = v22;

  if ((~*(_QWORD *)&v23 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_74;
  }
  if (v23 <= -9.22337204e18)
  {
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  if (v23 >= 9.22337204e18)
  {
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  v163._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v163._object = v24;
  v25._countAndFlagsBits = 47;
  v25._object = (void *)0xE100000000000000;
  String.append(_:)(v25);
  v26 = objc_msgSend(v4, "activeEnergyBurnedGoal");
  v27 = objc_msgSend(v20, "largeCalorieUnit");
  objc_msgSend(v26, "doubleValueForUnit:", v27);
  v29 = v28;

  v30 = round(v29);
  if ((~*(_QWORD *)&v30 & 0x7FF0000000000000) == 0)
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  if (v30 <= -9.22337204e18)
  {
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  if (v30 >= 9.22337204e18)
  {
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  v161 = v17;
  v31._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v31._object;
  String.append(_:)(v31);
  swift_bridgeObjectRelease(object);
  v33._countAndFlagsBits = 4997443;
  v33._object = (void *)0xE300000000000000;
  String.append(_:)(v33);
  v34 = (void *)objc_opt_self(NSBundle);
  v35 = objc_msgSend(v34, "mainBundle");
  v166._object = (void *)0x80000001001AB1A0;
  v36._countAndFlagsBits = 0;
  v36._object = (void *)0xE000000000000000;
  v166._countAndFlagsBits = 0xD000000000000018;
  v37 = NSLocalizedString(_:tableName:bundle:value:comment:)(v163, (Swift::String_optional)0, (NSBundle)v35, v36, v166)._object;
  swift_bridgeObjectRelease(v163._object);

  v38 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v37);
  objc_msgSend(v18, "setText:", v38);

  v39 = objc_msgSend(v4, "exerciseTimeGoal");
  if (!v39)
    goto LABEL_19;
  v40 = v39;
  objc_msgSend(v39, "_value");
  v42 = v41;

  v43 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x98))();
  v44 = objc_msgSend(v4, "appleExerciseTime");
  objc_msgSend(v44, "_value");
  v46 = v45;

  if ((~*(_QWORD *)&v46 & 0x7FF0000000000000) == 0)
    goto LABEL_79;
  if (v46 <= -9.22337204e18)
  {
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  if (v46 >= 9.22337204e18)
  {
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  v164._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v164._object = v47;
  v48._countAndFlagsBits = 47;
  v48._object = (void *)0xE100000000000000;
  String.append(_:)(v48);
  if ((~*(_QWORD *)&v42 & 0x7FF0000000000000) == 0)
  {
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  if (v42 <= -9.22337204e18)
  {
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
  if (v42 >= 9.22337204e18)
  {
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
    goto LABEL_86;
  }
  v49._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v50 = v49._object;
  String.append(_:)(v49);
  swift_bridgeObjectRelease(v50);
  v51._countAndFlagsBits = 5130573;
  v51._object = (void *)0xE300000000000000;
  String.append(_:)(v51);
  v52 = objc_msgSend(v34, "mainBundle");
  v167._object = (void *)0x80000001001AB1C0;
  v53._countAndFlagsBits = 0;
  v53._object = (void *)0xE000000000000000;
  v167._countAndFlagsBits = 0xD000000000000018;
  v54 = NSLocalizedString(_:tableName:bundle:value:comment:)(v164, (Swift::String_optional)0, (NSBundle)v52, v53, v167)._object;
  swift_bridgeObjectRelease(v164._object);

  v55 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v54);
  objc_msgSend(v43, "setText:", v55);

LABEL_19:
  v56 = objc_msgSend(v4, "standHoursGoal");
  if (!v56)
    goto LABEL_27;
  v57 = v56;
  objc_msgSend(v56, "_value");
  v59 = v58;

  v60 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xB0))();
  v61 = objc_msgSend(v4, "appleStandHours");
  objc_msgSend(v61, "_value");
  v63 = v62;

  if ((~*(_QWORD *)&v63 & 0x7FF0000000000000) == 0)
    goto LABEL_85;
  if (v63 <= -9.22337204e18)
  {
LABEL_86:
    __break(1u);
    goto LABEL_87;
  }
  if (v63 >= 9.22337204e18)
  {
LABEL_87:
    __break(1u);
    goto LABEL_88;
  }
  v165._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v165._object = v64;
  v65._countAndFlagsBits = 47;
  v65._object = (void *)0xE100000000000000;
  String.append(_:)(v65);
  if ((~*(_QWORD *)&v59 & 0x7FF0000000000000) == 0)
  {
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
  if (v59 <= -9.22337204e18)
  {
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  if (v59 < 9.22337204e18)
  {
    v66._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v67 = v66._object;
    String.append(_:)(v66);
    swift_bridgeObjectRelease(v67);
    v68._countAndFlagsBits = 1397901344;
    v68._object = (void *)0xE400000000000000;
    String.append(_:)(v68);
    v69 = objc_msgSend(v34, "mainBundle");
    v168._countAndFlagsBits = 0xD000000000000013;
    v168._object = (void *)0x80000001001AB1E0;
    v70._countAndFlagsBits = 0;
    v70._object = (void *)0xE000000000000000;
    v71 = NSLocalizedString(_:tableName:bundle:value:comment:)(v165, (Swift::String_optional)0, (NSBundle)v69, v70, v168)._object;
    swift_bridgeObjectRelease(v165._object);

    v72 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v71);
    objc_msgSend(v60, "setText:", v72);

LABEL_27:
    v73 = *((unsigned __int8 *)v1
          + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_currentSizeType);
    if (((1 << v73) & 6) != 0)
    {
      v87 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0xC8);
      v88 = (void *)v87();
      v89 = (void *)v161();
      objc_msgSend(v88, "addArrangedSubview:", v89);

      v90 = (void *)v87();
      v91 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xB0))();
      objc_msgSend(v90, "addArrangedSubview:", v91);

      v92 = (void *)v87();
      v93 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x98))();
      objc_msgSend(v92, "addArrangedSubview:", v93);

      v94 = (void *)v87();
      objc_msgSend(v1, "addSubview:", v94);

      v95 = objc_msgSend(v3, "superview");
      if (v95)
      {
        v96 = v95;
        objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v97 = objc_msgSend(v3, "bottomAnchor");
        v98 = objc_msgSend(v96, "bottomAnchor");
        v99 = objc_msgSend(v97, "constraintEqualToAnchor:", v98);

        if (v99)
        {
          objc_msgSend(v99, "setConstant:", -8.0);
          v100 = v99;
          objc_msgSend(v100, "setActive:", 1);

        }
      }
      v101 = (void *)v87();
      objc_msgSend(v101, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v102 = objc_msgSend(v101, "leadingAnchor");
      v103 = objc_msgSend(v3, "trailingAnchor");
      v104 = objc_msgSend(v102, "constraintEqualToAnchor:", v103);

      objc_msgSend(v104, "setConstant:", 8.0);
      objc_msgSend(v104, "setActive:", 1);

      v105 = (void *)v87();
      v106 = objc_msgSend(v105, "superview");
      if (v106)
      {
        v107 = v106;
        objc_msgSend(v105, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v108 = objc_msgSend(v105, "topAnchor");
        v109 = objc_msgSend(v107, "topAnchor");
        v110 = objc_msgSend(v108, "constraintEqualToAnchor:", v109);

        objc_msgSend(v110, "setConstant:", 8.0);
        if (v110)
        {
          v110 = v110;
          objc_msgSend(v110, "setActive:", 1);

          v105 = v110;
        }

      }
      else
      {
        v110 = 0;
        v107 = v105;
      }

      v140 = (void *)v87();
      v141 = objc_msgSend(v140, "superview");
      if (v141)
      {
        v142 = v141;
        objc_msgSend(v140, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v143 = objc_msgSend(v140, "bottomAnchor");
        v144 = objc_msgSend(v142, "bottomAnchor");
        v145 = objc_msgSend(v143, "constraintEqualToAnchor:", v144);

        if (v145)
        {
          objc_msgSend(v145, "setConstant:", -8.0);
          v146 = v145;
          objc_msgSend(v146, "setActive:", 1);

        }
        else
        {

        }
      }
      else
      {
        v142 = v140;
      }

      if (v73 == 2)
      {
        v157 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6D756964656DLL, 0xE600000000000000, 0x69576D756964656DLL, 0xEA00000000006564, 0);
        v158 = swift_bridgeObjectRelease(0xE600000000000000);
        if ((v157 & 1) == 0)
          goto LABEL_72;
      }
      else
      {
        v158 = swift_bridgeObjectRelease(0xEA00000000006564);
      }
      v86 = (id)((uint64_t (*)(uint64_t))v87)(v158);
      objc_msgSend(v86, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v159 = objc_msgSend(v86, "leadingAnchor");
      v160 = objc_msgSend(v3, "trailingAnchor");
      v85 = objc_msgSend(v159, "constraintEqualToAnchor:", v160);

      objc_msgSend(v85, "setConstant:", 12.0);
      objc_msgSend(v85, "setActive:", 1);
    }
    else
    {
      if (((1 << v73) & 0x18) != 0)
      {
        v74 = objc_msgSend(v3, "superview");
        if (v74)
        {
          v75 = v74;
          objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
          v76 = objc_msgSend(v3, "bottomAnchor");
          v77 = objc_msgSend(v75, "bottomAnchor");
          v78 = objc_msgSend(v76, "constraintEqualToAnchor:", v77);

          if (v78)
          {
            objc_msgSend(v78, "setConstant:", -8.0);
            v79 = v78;
            objc_msgSend(v79, "setActive:", 1);

          }
        }
        v80 = objc_msgSend(v3, "superview");
        if (!v80)
          goto LABEL_72;
        v81 = v80;
        objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v82 = objc_msgSend(v3, "trailingAnchor");
        v83 = objc_msgSend(v81, "trailingAnchor");
        v84 = objc_msgSend(v82, "constraintEqualToAnchor:", v83);

        objc_msgSend(v84, "setConstant:", -8.0);
        v85 = v84;
        objc_msgSend(v85, "setActive:", 1);

        v86 = v85;
      }
      else
      {
        v111 = v3;
        v112 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0xC8);
        v113 = (void *)v112();
        v114 = (void *)v161();
        objc_msgSend(v113, "addArrangedSubview:", v114);

        v115 = (void *)v112();
        v116 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x98))();
        objc_msgSend(v115, "addArrangedSubview:", v116);

        v117 = (void *)v112();
        v118 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xB0))();
        objc_msgSend(v117, "addArrangedSubview:", v118);

        v119 = (void *)v112();
        objc_msgSend(v1, "addSubview:", v119);

        objc_msgSend(v1, "frame");
        v121 = v120 * 0.5;
        objc_msgSend(v111, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v122 = objc_msgSend(v111, "widthAnchor");
        v123 = objc_msgSend(v122, "constraintEqualToConstant:", v121);

        objc_msgSend(v123, "setActive:", 1);
        objc_msgSend(v1, "frame");
        v125 = v124 * 0.5;
        objc_msgSend(v111, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v126 = objc_msgSend(v111, "heightAnchor");
        v127 = objc_msgSend(v126, "constraintEqualToConstant:", v125);

        objc_msgSend(v127, "setActive:", 1);
        v128 = (void *)v112();
        objc_msgSend(v128, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v129 = objc_msgSend(v128, "topAnchor");
        v162 = v111;
        v130 = objc_msgSend(v111, "bottomAnchor");
        v131 = objc_msgSend(v129, "constraintEqualToAnchor:", v130);

        objc_msgSend(v131, "setConstant:", 8.0);
        v132 = v112;
        objc_msgSend(v131, "setActive:", 1);

        v133 = (void *)v112();
        v134 = objc_msgSend(v133, "superview");
        if (v134)
        {
          v135 = v134;
          objc_msgSend(v133, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
          v136 = objc_msgSend(v133, "leadingAnchor");
          v137 = objc_msgSend(v135, "leadingAnchor");
          v138 = objc_msgSend(v136, "constraintEqualToAnchor:", v137);

          objc_msgSend(v138, "setConstant:", 12.0);
          if (v138)
          {
            v138 = v138;
            v139 = &selRef_genericAvatarFor_pointSize_completion_;
            objc_msgSend(v138, "setActive:", 1);

            v133 = v138;
          }
          else
          {
            v139 = &selRef_genericAvatarFor_pointSize_completion_;
          }
          v3 = v162;

        }
        else
        {
          v138 = 0;
          v135 = v133;
          v139 = &selRef_genericAvatarFor_pointSize_completion_;
          v3 = v162;
        }

        v147 = (void *)v132();
        v148 = objc_msgSend(v147, "superview");
        if (v148)
        {
          v149 = v148;
          objc_msgSend(v147, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
          v150 = objc_msgSend(v147, "trailingAnchor");
          v151 = objc_msgSend(v149, "trailingAnchor");
          v152 = objc_msgSend(v150, "constraintEqualToAnchor:", v151);

          objc_msgSend(v152, "setConstant:", -12.0);
          if (v152)
          {
            v152 = v152;
            objc_msgSend(v152, v139[93], 1);

            v147 = v152;
          }

        }
        else
        {
          v152 = 0;
          v149 = v147;
        }

        v85 = (id)v132();
        v153 = objc_msgSend(v85, "superview");
        if (!v153)
          goto LABEL_71;
        v81 = v153;
        objc_msgSend(v85, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v154 = objc_msgSend(v85, "bottomAnchor");
        v155 = objc_msgSend(v81, "bottomAnchor");
        v156 = objc_msgSend(v154, "constraintEqualToAnchor:", v155);

        if (v156)
        {
          objc_msgSend(v156, "setConstant:", -12.0);
          v86 = v156;
          objc_msgSend(v86, v139[93], 1);

          v85 = v86;
        }
        else
        {
          v86 = v3;
        }
      }
      v3 = v81;
    }

    v85 = v86;
LABEL_71:

LABEL_72:
    return;
  }
LABEL_90:
  __break(1u);
}

void MOSuggestionActivityRingsAssetView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MomentsUIService.MOSuggestionActivityRingsAssetView", 51, "init(frame:)", 12, 0);
  __break(1u);
}

id MOSuggestionActivityRingsAssetView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionActivityRingsAssetView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void specialized MOSuggestionActivityRingsAssetView.init(coder:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v1 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_energyLabel;
  closure #1 in variable initialization expression of MOSuggestionActivityRingsAssetView.energyLabel(0x6B6E695065766F6DLL, 0xE800000000000000, (SEL *)&selRef_systemPinkColor);
  *(_QWORD *)&v0[v1] = v2;
  v3 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_exerciseMinuteLabel;
  closure #1 in variable initialization expression of MOSuggestionActivityRingsAssetView.exerciseMinuteLabel();
  *(_QWORD *)&v0[v3] = v4;
  v5 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_standLabel;
  closure #1 in variable initialization expression of MOSuggestionActivityRingsAssetView.energyLabel(0x65636E6174736964, 0xEC00000065756C42, (SEL *)&selRef_systemBlueColor);
  *(_QWORD *)&v0[v5] = v6;
  v7 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_labelStackView;
  v8 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v8, "setAxis:", 1);
  objc_msgSend(v8, "setSpacing:", 2.0);
  objc_msgSend(v8, "setAlignment:", 1);
  objc_msgSend(v8, "setDistribution:", 3);
  *(_QWORD *)&v0[v7] = v8;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionActivityRingsAssetView.swift", 57, 2, 56, 0);
  __break(1u);
}

uint64_t sub_1000E360C@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x80))();
  *a2 = result;
  return result;
}

uint64_t sub_1000E364C(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x88))(*a1);
}

uint64_t sub_1000E368C@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x98))();
  *a2 = result;
  return result;
}

uint64_t sub_1000E36CC(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0xA0))(*a1);
}

uint64_t sub_1000E370C@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xB0))();
  *a2 = result;
  return result;
}

uint64_t sub_1000E374C(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0xB8))(*a1);
}

uint64_t sub_1000E378C@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xC8))();
  *a2 = result;
  return result;
}

uint64_t sub_1000E37CC(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0xD0))(*a1);
}

BOOL static MOAngelRootViewController.getPreferredContentSizeUsing(_:)()
{
  return specialized static MOAngelRootViewController.isLandscape.getter();
}

void MOAngelRootViewController.init(coder:)()
{
  char *v0;

  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_angelWrapper], 0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_presentedSheetController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_currentlyPresentedOptions] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x80000001001AB340, "MomentsUIService/MOSuggestionSheetViewController.swift", 54, 2, 23, 0);
  __break(1u);
}

char *MOAngelRootViewController.__allocating_init(_:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return MOAngelRootViewController.init(_:)(a1);
}

char *MOAngelRootViewController.init(_:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t (*v4)(void);
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  objc_class *v11;
  char *v12;
  _QWORD *Strong;
  void *v14;
  void (*v15)(_QWORD *);
  char *v16;
  char *v17;
  char *result;
  char *v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double Width;
  char *v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  double v34;
  CGFloat v35;
  double v36;
  CGFloat v37;
  double Height;
  char *v39;
  uint64_t v40;
  void *v41;
  id v42;
  _QWORD *v43;
  _QWORD v44[5];
  objc_super v45;
  CGRect v46;
  CGRect v47;

  v3 = swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_angelWrapper]);
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_presentedSheetController] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_currentlyPresentedOptions] = 0;
  swift_unknownObjectWeakAssign(v3, a1);
  v4 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0x1D0);
  v5 = v1;
  v6 = v4();
  if (v7)
    v8 = v6;
  else
    v8 = 0;
  if (v7)
    v9 = v7;
  else
    v9 = 0xE000000000000000;
  v10 = objc_allocWithZone((Class)type metadata accessor for MOSuggestionSheetPrivacyOverlayView());
  *(_QWORD *)&v5[OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_privacyBlur] = MOSuggestionSheetPrivacyOverlayView.init(frame:clientIdentifier:)(v8, v9, 0.0, 0.0, 0.0, 0.0);

  v11 = (objc_class *)type metadata accessor for MOAngelRootViewController();
  v45.receiver = v5;
  v45.super_class = v11;
  v12 = (char *)objc_msgSendSuper2(&v45, "initWithNibName:bundle:", 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(&v12[OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_angelWrapper]);
  if (Strong)
  {
    v14 = Strong;
    v44[3] = v11;
    v44[4] = &protocol witness table for MOAngelRootViewController;
    v44[0] = v12;
    v15 = *(void (**)(_QWORD *))((swift_isaMask & *Strong) + 0xE0);
    v16 = v12;
    v15(v44);

  }
  else
  {
    v17 = v12;
  }
  result = (char *)objc_msgSend(v12, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }
  v19 = result;
  objc_msgSend(result, "frame");
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v27 = v26;

  v46.origin.x = v21;
  v46.origin.y = v23;
  v46.size.width = v25;
  v46.size.height = v27;
  Width = CGRectGetWidth(v46);
  result = (char *)objc_msgSend(v12, "view");
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v29 = result;
  objc_msgSend(result, "frame");
  v31 = v30;
  v33 = v32;
  v35 = v34;
  v37 = v36;

  v47.origin.x = v31;
  v47.origin.y = v33;
  v47.size.width = v35;
  v47.size.height = v37;
  Height = CGRectGetHeight(v47);
  if (Width > Height)
    Height = Width;
  *(double *)&static MOAngelRootViewController.LANDSCAPE_WIDTH = Height * 0.5;
  result = (char *)objc_msgSend(v12, "view");
  if (result)
  {
    v39 = result;
    v40 = OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_privacyBlur;
    objc_msgSend(result, "addSubview:", *(_QWORD *)&v12[OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_privacyBlur]);

    v41 = *(void **)&v12[v40];
    objc_msgSend(v41, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v42 = v41;
    v43 = UIView.fillSuper(margin:)(0.0);

    swift_bridgeObjectRelease(v43);
    return v12;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t static MOAngelRootViewController.currentInterfaceOrientation()()
{
  id v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;

  v0 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v1 = objc_msgSend(v0, "connectedScenes");

  v2 = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIScene, UIScene_ptr);
  v3 = lazy protocol witness table accessor for type UIScene and conformance NSObject();
  v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v1, v2, v3);

  v5 = (void *)specialized Collection.first.getter(v4);
  swift_bridgeObjectRelease(v4);
  if (!v5)
    return 1;
  v6 = objc_opt_self(UIWindowScene);
  v7 = (void *)swift_dynamicCastObjCClass(v5, v6);
  if (v7)
    v8 = (uint64_t)objc_msgSend(v7, "interfaceOrientation");
  else
    v8 = 1;

  return v8;
}

void MOAngelRootViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MOAngelRootViewController.init(nibName:bundle:)(a1, a2, a3, (uint64_t)"MomentsUIService.MOAngelRootViewController", 42);
}

id MOAngelRootViewController.__deallocating_deinit()
{
  return MOSuggestionRoundView.__deallocating_deinit(type metadata accessor for MOAngelRootViewController);
}

Swift::Void __swiftcall MOAngelRootViewController.shouldClearPresentedOptions()()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_currentlyPresentedOptions);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_currentlyPresentedOptions) = 0;

}

id one-time initialization function for full()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UISheetPresentationControllerDetent), "largeDetent");
  static SuggestionSheetDetents.full = (uint64_t)result;
  return result;
}

Swift::Void __swiftcall MOAngelRootViewController.sheetPresentationControllerDidChangeSelectedDetentIdentifier(_:)(UISheetPresentationController a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t Strong;
  char *v16;
  uint64_t v17;
  id v18;

  v2 = v1;
  v18 = -[objc_class selectedDetentIdentifier](a1.super.super.isa, "selectedDetentIdentifier");
  if (v18)
  {
    if (one-time initialization token for full != -1)
      swift_once(&one-time initialization token for full, one-time initialization function for full);
    v3 = objc_msgSend((id)static SuggestionSheetDetents.full, "identifier");
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v6 = v5;
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    if (v4 == v7 && v6 == v8)
    {

      v14 = 2;
      swift_bridgeObjectRelease_n(v6, 2);
      v13 = 21;
    }
    else
    {
      v10 = v8;
      v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v7, v8, 0);

      swift_bridgeObjectRelease(v6);
      v12 = swift_bridgeObjectRelease(v10);
      v13 = 20;
      if ((v11 & 1) != 0)
      {
        v13 = 21;
        v14 = 2;
      }
      else
      {
        v14 = 1;
      }
    }
    (*(void (**)(uint64_t, __n128))((swift_isaMask & **(_QWORD **)(v2
                                                                           + OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_privacyBlur))
                                            + 8 * v13))(1, v12);
    Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_angelWrapper);
    if (Strong)
    {
      v16 = (char *)Strong;
      v17 = OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_currentViewState;
      if (v14 != *(_QWORD *)(Strong + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_currentViewState))
      {
        objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager), "sendSuggestionSheetStateUpdate:sender:", v14, Strong);
        *(_QWORD *)&v16[v17] = v14;
      }

    }
  }
}

Swift::Void __swiftcall MOAngelRootViewController.refreshData()()
{
  uint64_t v0;
  _QWORD *v1;
  void (*v2)(void);
  _QWORD *v3;

  v1 = *(_QWORD **)(v0 + OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_presentedSheetController);
  if (v1)
  {
    v2 = *(void (**)(void))((swift_isaMask & *v1) + 0x180);
    v3 = v1;
    v2();

  }
}

void MOAngelRootViewController.present(with:)(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t Strong;
  id v14;
  void *v15;
  id v16;
  _QWORD *v17;
  id v18;
  id v19;
  char *v20;
  void *v21;
  char *v22;
  void *v23;
  id v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSString v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  Class isa;
  _QWORD *v54;
  void *v55;
  void (*v56)(char *, _UNKNOWN **);
  _QWORD *v57;
  id v58;
  char *v59;
  id v60;
  uint64_t v61;
  _QWORD *v62;
  void *v63;
  _QWORD *v64;
  _QWORD *v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  NSObject *v70;
  _QWORD aBlock[5];
  _QWORD *v72;

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(v1, "presentedViewController");

  if (!v8)
  {
    Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_angelWrapper]);
    if (Strong)
    {
      v14 = (id)Strong;
      v70 = OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_currentlyPresentedOptions;
      v15 = *(void **)&v1[OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_currentlyPresentedOptions];
      if (!v15 || (objc_msgSend(v15, "isEqual:", a1) & 1) == 0)
      {
        v16 = objc_allocWithZone((Class)type metadata accessor for MOSuggestionSheetViewController());
        v17 = v14;
        v18 = v14;
        v19 = a1;
        v20 = MOSuggestionSheetViewController.init(controller:options:)(v17, v19);
        objc_msgSend(v20, "setModalInPresentation:", 1);
        v21 = *(void **)&v2[OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_presentedSheetController];
        *(_QWORD *)&v2[OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_presentedSheetController] = v20;
        v22 = v20;

        v23 = *(Class *)((char *)&v70->isa + (_QWORD)v2);
        *(Class *)((char *)&v70->isa + (_QWORD)v2) = (Class)v19;
        v24 = v19;
        v14 = v18;

      }
      v25 = OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_presentedSheetController;
      v26 = *(void **)&v2[OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_presentedSheetController];
      if (v26)
      {
        v27 = objc_msgSend(v26, "sheetPresentationController");
        v28 = v27;
        v69 = v14;
        if (v27)
        {
          aBlock[0] = _swiftEmptyArrayStorage;
          v29 = one-time initialization token for full;
          v30 = v27;
          if (v29 != -1)
            swift_once(&one-time initialization token for full, one-time initialization function for full);
          v31 = objc_msgSend((id)static SuggestionSheetDetents.full, "identifier");
          objc_msgSend(v30, "setSelectedDetentIdentifier:", v31);

          objc_msgSend(v30, "_setShouldScaleDownBehindDescendantSheets:", 0);
          v32 = objc_msgSend(a1, "peekDetentRatio");
          if (v33 >= 0.2 && v33 <= 0.8)
          {
            v68 = v25;
            v34 = UUID.init()(v32);
            UUID.uuidString.getter(v34);
            v36 = v35;
            (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
            v37 = String._bridgeToObjectiveC()();
            objc_msgSend(a1, "peekDetentRatio", swift_bridgeObjectRelease(v36).n128_f64[0]);
            v39 = v38;
            type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UISheetPresentationControllerDetent, UISheetPresentationControllerDetent_ptr);
            v40 = swift_allocObject(&unk_1001E95A8, 24, 7);
            *(_QWORD *)(v40 + 16) = v39;
            v41 = (void *)static UISheetPresentationControllerDetent.custom(identifier:resolver:)(v37, partial apply for closure #1 in static SuggestionSheetDetents.peek(identifier:fraction:), v40);

            if ((objc_msgSend(a1, "presentFullScreen", swift_release(v40).n128_f64[0]) & 1) == 0)
            {
              v42 = objc_msgSend(v41, "identifier");
              objc_msgSend(v30, "setSelectedDetentIdentifier:", v42);

            }
            v43 = v41;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v43);
            v45 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
            v44 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v45 >= v44 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v44 > 1, v45 + 1, 1);
            v46 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v45, v43);
            specialized Array._endMutation()(v46);
            objc_msgSend(v30, "setPrefersGrabberVisible:", 1);
            v47 = objc_msgSend(v43, "identifier");
            objc_msgSend(v30, "setLargestUndimmedDetentIdentifier:", v47);

            v25 = v68;
          }
          objc_msgSend(v30, "setPrefersEdgeAttachedInCompactHeight:", 1);
          objc_msgSend(v30, "setWidthFollowsPreferredContentSizeWhenEdgeAttached:", 1);
          objc_msgSend(v30, "setPrefersPageSizing:", 0);
          v48 = (id)static SuggestionSheetDetents.full;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v48);
          v50 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
          v49 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v50 >= v49 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v49 > 1, v50 + 1, 1);
          v51 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v50, v48);
          specialized Array._endMutation()(v51);
          v52 = aBlock[0];
          type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UISheetPresentationControllerDetent, UISheetPresentationControllerDetent_ptr);
          isa = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v30, "setDetents:", isa, swift_bridgeObjectRelease(v52).n128_f64[0]);

          objc_msgSend(v30, "setDelegate:", v2);
          v14 = v69;
        }
        v54 = *(_QWORD **)&v2[v25];
        if (v54)
        {
          v55 = *(Class *)((char *)&v70->isa + (_QWORD)v2);
          if (v55)
          {
            v56 = *(void (**)(char *, _UNKNOWN **))((swift_isaMask & *v54) + 0x150);
            v57 = v54;
            v58 = v55;
            v59 = v2;
            v56(v2, &protocol witness table for MOAngelRootViewController);
            v60 = objc_msgSend(a1, "presentationIsAnimated");
            v61 = swift_allocObject(&unk_1001E9530, 24, 7);
            swift_unknownObjectWeakInit(v61 + 16);
            v62 = (_QWORD *)swift_allocObject(&unk_1001E9558, 40, 7);
            v62[2] = v57;
            v62[3] = v61;
            v62[4] = v58;
            aBlock[4] = partial apply for closure #1 in MOAngelRootViewController.present(with:);
            v72 = v62;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
            aBlock[3] = &block_descriptor_23;
            v63 = _Block_copy(aBlock);
            v64 = v72;
            v65 = v57;
            v66 = v58;
            objc_msgSend(v59, "presentViewController:animated:completion:", v65, v60, v63, swift_release(v64).n128_f64[0]);
            _Block_release(v63);
            if ((objc_msgSend(v66, "presentFullScreen") & 1) != 0)
              (*(void (**)(uint64_t))((swift_isaMask & **(_QWORD **)&v59[OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_privacyBlur])
                                              + 0xA8))(1);

            return;
          }
        }
      }
      else
      {
        v28 = 0;
      }

      return;
    }
  }
  if (serverManager._clientConnections != (NSMutableDictionary *)-1)
    swift_once(&serverManager._clientConnections, one-time initialization function for shared);
  v9 = type metadata accessor for Logger(0);
  v10 = __swift_project_value_buffer(v9, (uint64_t)static MOAngelLogger.shared);
  v70 = Logger.logObject.getter(v10);
  v11 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v70, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v70, v11, "MOAngelRootViewController - Received an update request something is already presented. Ignoring.", v12, 2u);
    swift_slowDealloc(v12, -1, -1);
  }

}

char *MOSuggestionSheetViewController.__allocating_init(controller:options:)(_QWORD *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return MOSuggestionSheetViewController.init(controller:options:)(a1, a2);
}

void closure #1 in MOAngelRootViewController.present(with:)(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  id v6;
  void *v7;
  NSString v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  NSString v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  uint64_t Strong;
  void *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;

  v5 = a2 + 16;
  v6 = objc_msgSend(a1, "sheetPresentationController");
  if (!v6)
  {
    v26 = 0u;
    v27 = 0u;
LABEL_17:
    outlined destroy of Any?((uint64_t)&v26, &demangling cache variable for type metadata for Any?);
    goto LABEL_18;
  }
  v7 = v6;
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(v7, "valueForKey:", v8);

  if (v9)
  {
    _bridgeAnyObjectToAny(_:)(&v24, v9);
    swift_unknownObjectRelease(v9);
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  outlined init with take of Any?((uint64_t)&v24, (uint64_t)&v26);
  if (!*((_QWORD *)&v27 + 1))
    goto LABEL_17;
  v10 = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIView, UIView_ptr);
  if ((swift_dynamicCast(&v24, &v26, (char *)&type metadata for Any + 8, v10, 6) & 1) == 0)
    goto LABEL_18;
  v11 = (void *)v24;
  v12 = objc_msgSend(a1, "sheetPresentationController");
  if (!v12)
  {
    v26 = 0u;
    v27 = 0u;
LABEL_16:

    goto LABEL_17;
  }
  v13 = v12;
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v13, "valueForKey:", v14);

  if (v15)
  {
    _bridgeAnyObjectToAny(_:)(&v24, v15);
    swift_unknownObjectRelease(v15);
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  outlined init with take of Any?((uint64_t)&v24, (uint64_t)&v26);
  if (!*((_QWORD *)&v27 + 1))
    goto LABEL_16;
  if ((swift_dynamicCast(&v24, &v26, (char *)&type metadata for Any + 8, v10, 6) & 1) != 0)
  {
    v16 = (void *)v24;
    v17 = objc_msgSend(v11, "layer");
    objc_msgSend(v17, "setHitTestsAsOpaque:", 0);

    v18 = objc_msgSend(v16, "layer");
    objc_msgSend(v18, "setHitTestsAsOpaque:", 0);

  }
  else
  {

  }
LABEL_18:
  swift_beginAccess(v5, &v26, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v20 = (void *)Strong;
    v21 = (char *)swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_angelWrapper);

    if (v21)
    {
      if (objc_msgSend(a3, "presentFullScreen"))
        v22 = 2;
      else
        v22 = 1;
      v23 = OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_currentViewState;
      if (v22 != *(_QWORD *)&v21[OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_currentViewState])
      {
        objc_msgSend(*(id *)&v21[OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager], "sendSuggestionSheetStateUpdate:sender:", v22, v21);
        *(_QWORD *)&v21[v23] = v22;
      }

    }
  }
}

void MOAngelRootViewController.update(with:animated:)(id a1, char a2)
{
  char *v2;
  void *v3;
  char *v4;
  uint64_t v5;
  id v7;
  void *v8;
  id v9;
  double v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id i;
  void *v16;
  id v17;
  char v18;
  id v19;
  uint64_t v20;
  id v21;
  char v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  os_log_type_t v26;
  uint8_t *v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  char v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  id (*v50)();
  void *v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  __n128 v57;
  uint64_t Strong;
  char *v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  void *v64;
  char v65;
  NSObject *v66;
  void **aBlock;
  uint64_t v68;
  void *v69;
  void *v70;
  void *v71;
  uint64_t v72;
  id v73;

  v3 = *(void **)&v2[OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_presentedSheetController];
  if (!v3)
    goto LABEL_24;
  v4 = v2;
  LOBYTE(v5) = a2;
  v66 = v3;
  v7 = -[NSObject sheetPresentationController](v66, "sheetPresentationController");
  if (!v7)
  {

LABEL_24:
    if (serverManager._clientConnections != (NSMutableDictionary *)-1)
      swift_once(&serverManager._clientConnections, one-time initialization function for shared);
    v24 = type metadata accessor for Logger(0);
    v25 = __swift_project_value_buffer(v24, (uint64_t)static MOAngelLogger.shared);
    v66 = Logger.logObject.getter(v25);
    v26 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v66, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v66, v26, "MOAngelRootViewController - Received an update request while no sheet is currently presented. Rejecting!", v27, 2u);
      swift_slowDealloc(v27, -1, -1);
    }
    goto LABEL_33;
  }
  v8 = v7;
  if (!a1)
  {
    (*(void (**)(uint64_t))((swift_isaMask & **(_QWORD **)&v2[OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_privacyBlur])
                                    + 0xA0))(v5 & 1);
    v28 = objc_msgSend(v2, "view");
    if (!v28)
    {
LABEL_65:
      __break(1u);
      return;
    }
    v29 = v28;
    v30 = objc_msgSend(v28, "window");

    if (v30)
    {
      v31 = objc_msgSend(v30, "rootViewController");

      if (v31)
      {
        v32 = swift_allocObject(&unk_1001E9530, 24, 7);
        swift_unknownObjectWeakInit(v32 + 16);
        v33 = swift_allocObject(&unk_1001E9698, 32, 7);
        *(_QWORD *)(v33 + 16) = v32;
        *(_QWORD *)(v33 + 24) = 0;
        v71 = partial apply for closure #1 in MOAngelRootViewController.update(with:animated:);
        v72 = v33;
        aBlock = _NSConcreteStackBlock;
        v68 = 1107296256;
        v69 = thunk for @escaping @callee_guaranteed () -> ();
        v70 = &block_descriptor_29;
        v34 = _Block_copy(&aBlock);
        objc_msgSend(v31, "dismissViewControllerAnimated:completion:", v5 & 1, v34, swift_release(v72).n128_f64[0]);

        _Block_release(v34);
        return;
      }
    }

LABEL_33:
    return;
  }
  if (one-time initialization token for full != -1)
LABEL_38:
    swift_once(&one-time initialization token for full, one-time initialization function for full);
  v9 = objc_msgSend((id)static SuggestionSheetDetents.full, "identifier");
  v73 = v9;
  if (a1 != (id)2)
  {
    v11 = objc_msgSend(v8, "detents");
    v12 = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UISheetPresentationControllerDetent, UISheetPresentationControllerDetent_ptr);
    v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

    if ((unint64_t)v13 >> 62)
    {
      if (v13 < 0)
        v36 = v13;
      else
        v36 = v13 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v13);
      v14 = _CocoaArrayWrapper.endIndex.getter(v36);
      swift_bridgeObjectRelease(v13);
      if (v14)
        goto LABEL_8;
    }
    else
    {
      v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v14)
      {
LABEL_8:
        v64 = v8;
        if ((v13 & 0xC000000000000001) != 0)
          goto LABEL_62;
        if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          for (i = *(id *)(v13 + 32); ; i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v13))
          {
            v16 = i;
            v17 = (id)static SuggestionSheetDetents.full;
            v18 = static NSObject.== infix(_:_:)(v16);

            if ((v18 & 1) == 0)
            {
              v8 = v64;
LABEL_36:
              v35 = objc_msgSend(v16, "identifier", swift_bridgeObjectRelease(v13).n128_f64[0]);

              v73 = v35;
              v9 = v35;
              goto LABEL_44;
            }
            v63 = a1;
            v65 = v5;

            if (v14 == 1)
            {
LABEL_22:
              *(_QWORD *)&v10 = swift_bridgeObjectRelease(v13).n128_u64[0];
              v8 = v64;
              LOBYTE(v5) = v65;
              a1 = v63;
              goto LABEL_44;
            }
            v5 = 5;
            a1 = v9;
            while (1)
            {
              v8 = (void *)(v5 - 4);
              if ((v13 & 0xC000000000000001) != 0)
              {
                v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, v13);
                goto LABEL_18;
              }
              if ((unint64_t)v8 >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
                break;
              v19 = *(id *)(v13 + 8 * v5);
LABEL_18:
              v16 = v19;
              v20 = v5 - 3;
              if (__OFADD__(v8, 1))
              {
                __break(1u);
                goto LABEL_38;
              }
              v21 = (id)static SuggestionSheetDetents.full;
              v22 = static NSObject.== infix(_:_:)(v16);

              if ((v22 & 1) == 0)
              {
                v8 = v64;
                LOBYTE(v5) = v65;
                v9 = a1;
                a1 = v63;
                goto LABEL_36;
              }

              ++v5;
              v23 = v20 == v14;
              v9 = a1;
              if (v23)
                goto LABEL_22;
            }
            __break(1u);
LABEL_62:
            ;
          }
        }
        __break(1u);
        goto LABEL_64;
      }
    }
    *(_QWORD *)&v10 = swift_bridgeObjectRelease(v13).n128_u64[0];
  }
LABEL_44:
  v37 = objc_msgSend(v8, "selectedDetentIdentifier", v10);
  if (v37)
  {
    v38 = v37;
    v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
    v41 = v40;
    v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v44 = v42;
    if (v39 == v43 && v41 == v42)
    {
      v45 = v9;

      swift_bridgeObjectRelease_n(v41, 2);
LABEL_49:

      return;
    }
    v46 = _stringCompareWithSmolCheck(_:_:expecting:)(v39, v41, v43, v42, 0);
    v47 = v9;

    swift_bridgeObjectRelease(v41);
    swift_bridgeObjectRelease(v44);
    if ((v46 & 1) != 0)
      goto LABEL_49;
  }
  if ((v5 & 1) != 0)
  {
    v48 = swift_allocObject(&unk_1001E95D0, 32, 7);
    *(_QWORD *)(v48 + 16) = v8;
    *(_QWORD *)(v48 + 24) = &v73;
    v49 = swift_allocObject(&unk_1001E95F8, 32, 7);
    v50 = partial apply for closure #2 in MOAngelRootViewController.update(with:animated:);
    *(_QWORD *)(v49 + 16) = partial apply for closure #2 in MOAngelRootViewController.update(with:animated:);
    *(_QWORD *)(v49 + 24) = v48;
    v71 = partial apply for thunk for @escaping @callee_guaranteed () -> (@out ());
    v72 = v49;
    aBlock = _NSConcreteStackBlock;
    v68 = 1107296256;
    v69 = thunk for @escaping @callee_guaranteed () -> ();
    v70 = &block_descriptor_15_1;
    v51 = _Block_copy(&aBlock);
    v52 = v72;
    v53 = v8;
    swift_retain(v49);
    swift_release(v52);
    v54 = swift_allocObject(&unk_1001E9530, 24, 7);
    swift_unknownObjectWeakInit(v54 + 16);
    v55 = swift_allocObject(&unk_1001E9648, 32, 7);
    *(_QWORD *)(v55 + 16) = v54;
    *(_QWORD *)(v55 + 24) = a1;
    v71 = partial apply for closure #3 in MOAngelRootViewController.update(with:animated:);
    v72 = v55;
    aBlock = _NSConcreteStackBlock;
    v68 = 1107296256;
    v69 = thunk for @escaping @callee_guaranteed (@unowned UIViewAnimatingPosition) -> ();
    v70 = &block_descriptor_22_0;
    v56 = _Block_copy(&aBlock);
    objc_msgSend(v53, "_animateChanges:completion:", v51, v56, swift_release(v72).n128_f64[0]);
    _Block_release(v56);
    _Block_release(v51);
    LOBYTE(v56) = swift_isEscapingClosureAtFileLocation(v49, "", 106, 218, 42, 1);
    v57 = swift_release(v49);
    if ((v56 & 1) != 0)
    {
LABEL_64:
      __break(1u);
      goto LABEL_65;
    }
  }
  else
  {
    objc_msgSend(v8, "setSelectedDetentIdentifier:", v9);
    Strong = swift_unknownObjectWeakLoadStrong(&v4[OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_angelWrapper]);
    if (Strong)
    {
      v59 = (char *)Strong;
      v60 = v5;
      v61 = OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_currentViewState;
      if (*(id *)(Strong + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_currentViewState) != a1)
      {
        objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager), "sendSuggestionSheetStateUpdate:sender:", a1, Strong);
        *(_QWORD *)&v59[v61] = a1;
      }

      v50 = 0;
      v48 = 0;
      LOBYTE(v5) = v60;
    }
    else
    {
      v50 = 0;
      v48 = 0;
    }
  }
  v62 = 160;
  if (a1 == (id)2)
    v62 = 168;
  (*(void (**)(uint64_t, __n128))((swift_isaMask & **(_QWORD **)&v4[OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_privacyBlur])
                                          + v62))(v5 & 1, v57);

  outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)v50, v48);
}

void closure #1 in MOAngelRootViewController.update(with:animated:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _QWORD *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  char v18[24];
  char v19[24];
  char v20[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v20, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = (char *)swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_angelWrapper);

    if (v6)
    {
      v7 = OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_currentViewState;
      if (*(_QWORD *)&v6[OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_currentViewState] != a2)
      {
        objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager], "sendSuggestionSheetStateUpdate:sender:", a2, v6);
        *(_QWORD *)&v6[v7] = a2;
      }

    }
  }
  swift_beginAccess(v3, v19, 0, 0);
  v8 = swift_unknownObjectWeakLoadStrong(v3);
  if (v8)
  {
    v9 = (void *)v8;
    v10 = (_QWORD *)swift_unknownObjectWeakLoadStrong(v8 + OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_angelWrapper);

    if (v10)
    {
      if (((*(uint64_t (**)(void))((swift_isaMask & *v10) + 0x1B0))() & 1) != 0)
      {
        swift_beginAccess(v3, v18, 0, 0);
        v11 = (void *)swift_unknownObjectWeakLoadStrong(v3);
        if (v11)
        {
          v12 = v11;
          v13 = objc_msgSend(v11, "view");

          if (!v13)
          {
            __break(1u);
            return;
          }
          v14 = objc_msgSend(v13, "window");

          if (v14)
          {
            v15 = objc_msgSend(v14, "windowScene");

            if (v15)
            {
              v16 = objc_msgSend(v15, "session");

              if (v16)
              {
                v17 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
                objc_msgSend(v17, "requestSceneSessionDestruction:options:errorHandler:", v16, 0, 0);

                v10 = v17;
              }
            }
          }
        }
      }

    }
  }
}

void closure #3 in MOAngelRootViewController.update(with:animated:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  char *v7;
  uint64_t v8;
  char v9[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = (char *)swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_angelWrapper);

    if (v7)
    {
      v8 = OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_currentViewState;
      if (*(_QWORD *)&v7[OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_currentViewState] != a3)
      {
        objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager], "sendSuggestionSheetStateUpdate:sender:", a3, v7);
        *(_QWORD *)&v7[v8] = a3;
      }

    }
  }
}

uint64_t thunk for @escaping @callee_guaranteed (@unowned UIViewAnimatingPosition) -> ()(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v4(a2);
  return swift_release(v3);
}

void protocol witness for MOAngelControllerWrapperDelegate.refreshData() in conformance MOAngelRootViewController()
{
  _QWORD *v0;
  _QWORD *v1;
  void (*v2)(void);
  _QWORD *v3;

  v1 = *(_QWORD **)(*v0 + OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_presentedSheetController);
  if (v1)
  {
    v2 = *(void (**)(void))((swift_isaMask & *v1) + 0x180);
    v3 = v1;
    v2();

  }
}

void protocol witness for MOAngelControllerWrapperDelegate.present(with:) in conformance MOAngelRootViewController(void *a1)
{
  MOAngelRootViewController.present(with:)(a1);
}

void protocol witness for MOAngelControllerWrapperDelegate.update(with:animated:) in conformance MOAngelRootViewController(void *a1, char a2)
{
  MOAngelRootViewController.update(with:animated:)(a1, a2);
}

void protocol witness for MOAngelControllerWrapperDelegate.shouldClearPresentedOptions() in conformance MOAngelRootViewController()
{
  _QWORD *v0;
  void *v1;

  v1 = *(void **)(*v0 + OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_currentlyPresentedOptions);
  *(_QWORD *)(*v0 + OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_currentlyPresentedOptions) = 0;

}

Swift::Void __swiftcall MOSuggestionSheetViewController.updateSheetIfOnboardingRefreshComplete()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  void **v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint8_t *v24;
  id v25;
  void *v26;
  uint8_t *v27;
  __n128 v28;
  void *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void **v49;
  void **aBlock;
  _QWORD v51[4];
  uint64_t v52;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v47 = *(_QWORD *)(v6 - 8);
  v48 = v6;
  __chkstk_darwin(v6);
  v46 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for DispatchTime(0);
  v43 = *(_QWORD *)(v45 - 8);
  v8 = __chkstk_darwin(v45);
  v42 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v44 = (char *)&v42 - v10;
  v11 = (void *)objc_opt_self(MOOnboardingManager);
  v12 = objc_msgSend(v11, "sharedInstance");
  v13 = (void **)objc_msgSend(v12, "onboardingFlowCompletionStatus");

  v14 = objc_msgSend(v11, "sharedInstance");
  v49 = (void **)objc_msgSend(v14, "onboardingFlowRefreshCompletionStatus");

  if (one-time initialization token for sheetController != -1)
    swift_once(&one-time initialization token for sheetController, one-time initialization function for sheetController);
  v15 = type metadata accessor for Logger(0);
  v16 = __swift_project_value_buffer(v15, (uint64_t)static MOAngelLogger.sheetController);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc(22, -1);
    *(_DWORD *)v19 = 134218240;
    aBlock = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v51, v19 + 4);
    *(_WORD *)(v19 + 12) = 2048;
    aBlock = v49;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v51, v19 + 14);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "checking onboarding&refresh status onboardingFlowCompletionStatus=%lu onboardingFlowRefreshCompletionStatus=%lu", (uint8_t *)v19, 0x16u);
    swift_slowDealloc(v19, -1, -1);
  }

  if (v13 == (void **)1)
  {
    objc_msgSend(v1, "dismissViewControllerAnimated:completion:", 1, 0);
  }
  else
  {
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.default.getter();
    v23 = os_log_type_enabled(v21, v22);
    if (v13 == v49)
    {
      if (v23)
      {
        v24 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v24 = 0;
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "dismissing and updating sheet", v24, 2u);
        swift_slowDealloc(v24, -1, -1);
      }

      v25 = objc_msgSend(v1, "dismissViewControllerAnimated:completion:", 1, 0);
      (*(void (**)(id))((swift_isaMask & *v1) + 0x180))(v25);
    }
    else
    {
      v26 = v1;
      if (v23)
      {
        v27 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v27 = 0;
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "scheduling new onboarding&refresh status check", v27, 2u);
        swift_slowDealloc(v27, -1, -1);
      }

      type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue, OS_dispatch_queue_ptr);
      v29 = (void *)static OS_dispatch_queue.main.getter(v28);
      v30 = v42;
      static DispatchTime.now()(v29);
      v31 = v44;
      + infix(_:_:)(v30, 0.25);
      v49 = *(void ***)(v43 + 8);
      v32 = v45;
      ((void (*)(char *, uint64_t))v49)(v30, v45);
      v33 = swift_allocObject(&unk_1001E96E8, 24, 7);
      *(_QWORD *)(v33 + 16) = v26;
      v51[3] = partial apply for closure #1 in MOSuggestionSheetViewController.updateSheetIfOnboardingRefreshComplete();
      v52 = v33;
      aBlock = _NSConcreteStackBlock;
      v51[0] = 1107296256;
      v51[1] = thunk for @escaping @callee_guaranteed () -> ();
      v51[2] = &block_descriptor_35;
      v34 = _Block_copy(&aBlock);
      v35 = v52;
      v36 = v26;
      swift_release(v35);
      v37 = v46;
      static DispatchQoS.unspecified.getter(v38);
      aBlock = (void **)_swiftEmptyArrayStorage;
      v39 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
      v41 = lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v40, v41, v2, v39);
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v31, v37, v5, v34);
      _Block_release(v34);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v37, v48);
      ((void (*)(char *, uint64_t))v49)(v31, v32);
    }
  }
}

Swift::Void __swiftcall MOSuggestionSheetViewController.shouldDismissOnboarding()()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  unsigned __int8 v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t (*v15)(void);
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t (*v19)(void);
  _QWORD *v20;
  void *v21;
  id v22;
  _BYTE v23[31];
  BOOL v24;

  v1 = v0;
  v2 = (void *)objc_opt_self(MOOnboardingManager);
  v3 = objc_msgSend(v2, "sharedInstance");
  v4 = objc_msgSend(v3, "onboardingFlowCompletionStatus");

  if (one-time initialization token for $showSuggestionsOnboarding != -1)
    swift_once(&one-time initialization token for $showSuggestionsOnboarding, one-time initialization function for $showSuggestionsOnboarding);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Tips.Parameter<Bool>);
  v6 = __swift_project_value_buffer(v5, (uint64_t)static MOSuggestionOnboardingTip.$showSuggestionsOnboarding);
  v24 = (unint64_t)v4 < 2;
  swift_beginAccess(v6, v23, 33, 0);
  Tips.Parameter.wrappedValue.setter(&v24, v5);
  swift_endAccess(v23);
  v7 = objc_msgSend(v2, "sharedInstance");
  v8 = objc_msgSend(v7, "isOnboarded");

  if (one-time initialization token for $showPrivacyOnboarding != -1)
    swift_once(&one-time initialization token for $showPrivacyOnboarding, one-time initialization function for $showPrivacyOnboarding);
  v9 = __swift_project_value_buffer(v5, (uint64_t)static MOSuggestionPrivacyTip.$showPrivacyOnboarding);
  v24 = v8;
  swift_beginAccess(v9, v23, 33, 0);
  Tips.Parameter.wrappedValue.setter(&v24, v5);
  swift_endAccess(v23);
  v10 = MOSuggestionSheetViewController.suggestionSegmentedControl.getter();
  v11 = objc_msgSend(v10, "selectedSegmentIndex");

  if (v11)
  {
    if (v11 != (id)1)
      goto LABEL_15;
    v12 = 1;
  }
  else
  {
    v12 = 0;
  }
  v13 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_suggestionCollectionView;
  v14 = *(_QWORD **)((char *)v1
                   + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_suggestionCollectionView);
  if (v14)
  {
    v15 = *(uint64_t (**)(void))((swift_isaMask & *v14) + 0xF8);
    v16 = v14;
    v17 = v15();

    if (v17)
    {
      (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)v17 + 736))(v12, 1, 0);
      swift_release(v17);
    }
    v18 = *(_QWORD **)((char *)v1 + v13);
    if (v18)
    {
      v19 = *(uint64_t (**)(void))((swift_isaMask & *v18) + 0xE0);
      v20 = v18;
      v21 = (void *)v19();

      if (v21)
      {
        v22 = objc_msgSend(v21, "collectionViewLayout");

        objc_msgSend(v22, "invalidateLayout");
      }
    }
  }
LABEL_15:
  (*(void (**)(void))((swift_isaMask & *v1) + 0x90))();
}

id MOSuggestionSheetViewController.suggestionSegmentedControl.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController____lazy_storage___suggestionSegmentedControl;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController____lazy_storage___suggestionSegmentedControl);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController____lazy_storage___suggestionSegmentedControl);
  }
  else
  {
    v4 = closure #1 in MOSuggestionSheetViewController.suggestionSegmentedControl.getter();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id closure #1 in MOSuggestionSheetViewController.suggestionSegmentedControl.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  id v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  id v11;
  Class isa;
  id v13;
  void *v14;
  id v15;
  id v16;
  Swift::String v18;
  Swift::String v19;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Any>);
  v1 = swift_allocObject(v0, 96, 7);
  *(_OWORD *)(v1 + 16) = xmmword_10019EEE0;
  v2 = (void *)objc_opt_self(NSBundle);
  v3 = objc_msgSend(v2, "mainBundle");
  v18._object = (void *)0xEB00000000646564;
  v4._countAndFlagsBits = 0x6E656D6D6F636552;
  v4._object = (void *)0xEB00000000646564;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v18._countAndFlagsBits = 0x6E656D6D6F636552;
  v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v18);

  *(_QWORD *)(v1 + 56) = &type metadata for String;
  *(Swift::String *)(v1 + 32) = v6;
  v7 = objc_msgSend(v2, "mainBundle");
  v19._object = (void *)0xE600000000000000;
  v8._countAndFlagsBits = 0x746E65636552;
  v8._object = (void *)0xE600000000000000;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v19._countAndFlagsBits = 0x746E65636552;
  v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v19);

  *(_QWORD *)(v1 + 88) = &type metadata for String;
  *(Swift::String *)(v1 + 64) = v10;
  v11 = objc_allocWithZone((Class)UISegmentedControl);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v13 = objc_msgSend(v11, "initWithItems:", isa, swift_bridgeObjectRelease(v1).n128_f64[0]);

  objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v14 = (void *)objc_opt_self(UIColor);
  v15 = v13;
  v16 = objc_msgSend(v14, "secondarySystemBackgroundColor");
  objc_msgSend(v15, "setBackgroundColor:", v16);

  objc_msgSend(v15, "setSelectedSegmentIndex:", 0);
  return v15;
}

void *MOSuggestionSheetViewController.suggestedSegmentIndex.unsafeMutableAddressor()
{
  return &static MOSuggestionSheetViewController.suggestedSegmentIndex;
}

void *MOSuggestionSheetViewController.recentSegmentIndex.unsafeMutableAddressor()
{
  return &static MOSuggestionSheetViewController.recentSegmentIndex;
}

uint64_t MOSuggestionSheetViewController.presentationDelegate.getter()
{
  return MOSuggestionSheetViewController.presentationDelegate.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_presentationDelegate);
}

uint64_t MOSuggestionSheetViewController.presentationDelegate.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionSheetViewController.presentationDelegate.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_presentationDelegate);
}

uint64_t (*MOSuggestionSheetViewController.presentationDelegate.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_presentationDelegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return MOSuggestionSheetViewController.presentationDelegate.modify;
}

uint64_t MOSuggestionSheetViewController.rootControllerDelegate.getter()
{
  return MOSuggestionSheetViewController.presentationDelegate.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_rootControllerDelegate);
}

uint64_t MOSuggestionSheetViewController.presentationDelegate.getter(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v2 = v1 + *a1;
  swift_beginAccess(v2, v4, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v2);
}

uint64_t MOSuggestionSheetViewController.rootControllerDelegate.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionSheetViewController.presentationDelegate.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_rootControllerDelegate);
}

uint64_t MOSuggestionSheetViewController.presentationDelegate.setter(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  _BYTE v8[24];

  v6 = v3 + *a3;
  swift_beginAccess(v6, v8, 1, 0);
  *(_QWORD *)(v6 + 8) = a2;
  swift_unknownObjectWeakAssign(v6, a1);
  return swift_unknownObjectRelease(a1);
}

uint64_t (*MOSuggestionSheetViewController.rootControllerDelegate.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_rootControllerDelegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return MOSuggestionSheetViewController.presentationDelegate.modify;
}

char *MOSuggestionSheetViewController.init(controller:options:)(_QWORD *a1, void *a2)
{
  char *v2;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  id v10;
  char *v11;
  char *result;
  char *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  BOOL v18;
  double v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  char *v30;
  id v31;
  id v32;
  char v33;
  char **v34;
  id v35;
  id v36;
  NSString v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  Class isa;
  char *v45;
  char *v46;
  id v47;
  char *v48;
  char *v49;
  uint64_t Strong;
  char *v51;
  uint64_t v52;
  id v53;
  id v54;
  id v55;
  id v56;
  char *v57;
  id v58;
  id v59;
  id v60;
  char *v61;
  id v62;
  id v63;
  id v64;
  char *v65;
  id v66;
  id v67;
  id v68;
  char *v69;
  id v70;
  id v71;
  id v72;
  char *v73;
  id v74;
  id v75;
  id v76;
  unsigned int v77;
  double v78;
  id v79;
  id v80;
  char *v81;
  void *v82;
  id v83;
  id v84;
  uint64_t v85;
  Class v86;
  void *v87;
  uint64_t v88;
  _UNKNOWN **v89;
  char *v90;
  _QWORD *v91;
  uint64_t v92;
  id v93;
  void *v94;
  objc_super v95;

  v5 = &v2[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_controller];
  swift_unknownObjectWeakInit(&v2[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_controller]);
  v6 = &v2[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_segmentedDelegate];
  *((_QWORD *)v6 + 1) = 0;
  swift_unknownObjectWeakInit(v6);
  v7 = &v2[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_segmentedVisibilityDelegate];
  *((_QWORD *)v7 + 1) = 0;
  swift_unknownObjectWeakInit(v7);
  *(_QWORD *)&v2[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_suggestionCollectionView] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController____lazy_storage___suggestionSegmentedControl] = 0;
  v8 = &v2[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_presentationDelegate];
  *((_QWORD *)v8 + 1) = 0;
  swift_unknownObjectWeakInit(v8);
  v9 = &v2[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_rootControllerDelegate];
  *((_QWORD *)v9 + 1) = 0;
  swift_unknownObjectWeakInit(v9);
  swift_unknownObjectWeakAssign(v5, a1);
  *(_QWORD *)&v2[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_options] = a2;
  v95.receiver = v2;
  v95.super_class = (Class)type metadata accessor for MOSuggestionSheetViewController();
  v10 = a2;
  v11 = (char *)objc_msgSendSuper2(&v95, "initWithNibName:bundle:", 0, 0);
  result = (char *)objc_msgSend(v11, "view");
  if (!result)
  {
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v13 = result;
  objc_msgSend(result, "bounds");
  v15 = v14;
  v17 = v16;

  v18 = specialized static MOAngelRootViewController.isLandscape.getter();
  v19 = *(double *)&static MOAngelRootViewController.LANDSCAPE_WIDTH;
  if (!v18)
    v19 = v15;
  objc_msgSend(v11, "setPreferredContentSize:", v19, v17);
  v20 = objc_msgSend(objc_allocWithZone((Class)UINavigationBar), "init");
  v21 = (void *)objc_opt_self(UIColor);
  v22 = objc_msgSend(v21, "systemBackgroundColor");
  objc_msgSend(v20, "setBarTintColor:", v22);

  v23 = v20;
  v24 = objc_msgSend(v21, "systemBackgroundColor");
  objc_msgSend(v23, "setBackgroundColor:", v24);

  objc_msgSend(v23, "setTranslucent:", 0);
  v25 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  objc_msgSend(v23, "setShadowImage:", v25);

  v26 = objc_msgSend(v11, "navigationItem");
  v27 = MOSuggestionSheetViewController.suggestionSegmentedControl.getter();
  objc_msgSend(v26, "setTitleView:", v27);

  v28 = MOSuggestionSheetViewController.suggestionSegmentedControl.getter();
  objc_msgSend(v28, "setHidden:", objc_msgSend(v10, "showBlankEntryButton"));

  if ((objc_msgSend(v10, "showBlankEntryButton") & 1) == 0
    && (objc_msgSend(v10, "presentFullScreen") & 1) == 0)
  {
    objc_msgSend(v23, "setTitleVerticalPositionAdjustment:forBarMetrics:", 0, 8.0);
  }
  v29 = MOSuggestionSheetViewController.suggestionSegmentedControl.getter();
  objc_msgSend(v29, "addTarget:action:forControlEvents:", v11, "pressedSegmentControl", 4096);

  result = (char *)objc_msgSend(v11, "view");
  if (!result)
    goto LABEL_32;
  v30 = result;
  objc_msgSend(result, "addSubview:", v23);

  v31 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v31, "addObserver:selector:name:object:", v11, "handleContentSizeChanged", UIContentSizeCategoryDidChangeNotification, 0);

  v32 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 1, 0, "cancelSheet");
  v33 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x1B0))();
  v34 = &selRef_systemBlueColor;
  if ((v33 & 1) == 0)
    v34 = &selRef_systemIndigoColor;
  v35 = objc_msgSend(v21, *v34);
  v94 = v32;
  objc_msgSend(v32, "setTintColor:", v35);

  if (objc_msgSend(v10, "showCancelButton"))
  {
    v36 = objc_msgSend(v11, "navigationItem");
    objc_msgSend(v36, "setLeftBarButtonItem:", v32);

  }
  if (one-time initialization token for uiInternalOS != -1)
    swift_once(&one-time initialization token for uiInternalOS, one-time initialization function for uiInternalOS);
  if (static MOAngelControllerWrapper.uiInternalOS == 1)
  {
    v37 = String._bridgeToObjectiveC()();
    v38 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v37);

    v39 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithImage:style:target:action:", v38, 2, 0, "showMomentsValidator");
    v40 = objc_msgSend(v11, "navigationItem");
    objc_msgSend(v40, "setRightBarButtonItem:", v39);

  }
  v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v42 = swift_allocObject(v41, 40, 7);
  *(_OWORD *)(v42 + 16) = xmmword_10019EDA0;
  v43 = objc_msgSend(v11, "navigationItem");
  *(_QWORD *)(v42 + 32) = v43;
  specialized Array._endMutation()(v43);
  type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for UINavigationItem, UINavigationItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v23, "setItems:animated:", isa, 0, swift_bridgeObjectRelease(v42).n128_f64[0]);

  if (*(_QWORD *)&v11[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_suggestionCollectionView])
  {

    return v11;
  }
  v92 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_suggestionCollectionView;
  v45 = (char *)objc_allocWithZone((Class)type metadata accessor for MOSuggestionCollectionView());
  v46 = v11;
  v47 = v10;
  v48 = v46;
  v91 = a1;
  v93 = v47;
  v49 = specialized MOSuggestionCollectionView.init(controller:presentationDelegate:dialogDelegate:segmentedVisibilityDelegate:options:)(v91, v48, v48, v48, v47, v45);
  Strong = swift_unknownObjectWeakLoadStrong(&v48[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_controller]);
  (*(void (**)(uint64_t))((swift_isaMask & *(_QWORD *)v49) + 0x118))(Strong);
  result = (char *)objc_msgSend(v48, "view");
  if (!result)
    goto LABEL_33;
  v51 = result;
  objc_msgSend(result, "insertSubview:atIndex:", v49, 0);

  objc_msgSend(v49, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v23, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v52 = swift_allocObject(v41, 96, 7);
  *(_OWORD *)(v52 + 16) = xmmword_10019F0A0;
  v53 = objc_msgSend(v49, "topAnchor");
  v54 = objc_msgSend(v23, "bottomAnchor");
  v55 = objc_msgSend(v53, "constraintEqualToAnchor:", v54);

  *(_QWORD *)(v52 + 32) = v55;
  v56 = objc_msgSend(v49, "bottomAnchor");
  result = (char *)objc_msgSend(v48, "view");
  if (!result)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v57 = result;
  v58 = objc_msgSend(result, "bottomAnchor");

  v59 = objc_msgSend(v56, "constraintEqualToAnchor:", v58);
  *(_QWORD *)(v52 + 40) = v59;
  v60 = objc_msgSend(v49, "leadingAnchor");
  result = (char *)objc_msgSend(v48, "view");
  if (!result)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v61 = result;
  v62 = objc_msgSend(result, "leadingAnchor");

  v63 = objc_msgSend(v60, "constraintEqualToAnchor:", v62);
  *(_QWORD *)(v52 + 48) = v63;
  v64 = objc_msgSend(v49, "trailingAnchor");
  result = (char *)objc_msgSend(v48, "view");
  if (!result)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v65 = result;
  v66 = objc_msgSend(result, "trailingAnchor");

  v67 = objc_msgSend(v64, "constraintEqualToAnchor:", v66);
  *(_QWORD *)(v52 + 56) = v67;
  v68 = objc_msgSend(v23, "leadingAnchor");
  result = (char *)objc_msgSend(v48, "view");
  if (!result)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v69 = result;
  v70 = objc_msgSend(result, "leadingAnchor");

  v71 = objc_msgSend(v68, "constraintEqualToAnchor:", v70);
  *(_QWORD *)(v52 + 64) = v71;
  v72 = objc_msgSend(v23, "trailingAnchor");
  result = (char *)objc_msgSend(v48, "view");
  if (!result)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v73 = result;
  v74 = objc_msgSend(result, "trailingAnchor");

  v75 = objc_msgSend(v72, "constraintEqualToAnchor:", v74);
  *(_QWORD *)(v52 + 72) = v75;
  v76 = objc_msgSend(v23, "heightAnchor");
  v77 = objc_msgSend(v93, "showBlankEntryButton");
  v78 = 60.0;
  if (v77)
    v78 = 55.0;
  v79 = objc_msgSend(v76, "constraintEqualToConstant:", v78);

  *(_QWORD *)(v52 + 80) = v79;
  v80 = objc_msgSend(v23, "topAnchor");
  result = (char *)objc_msgSend(v48, "view");
  if (result)
  {
    v81 = result;
    v82 = (void *)objc_opt_self(NSLayoutConstraint);
    v83 = objc_msgSend(v81, "topAnchor");

    v84 = objc_msgSend(v80, "constraintEqualToAnchor:", v83);
    *(_QWORD *)(v52 + 88) = v84;
    specialized Array._endMutation()(v85);
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint, NSLayoutConstraint_ptr);
    v86 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v82, "activateConstraints:", v86, swift_bridgeObjectRelease(v52).n128_f64[0]);

    v87 = *(void **)&v11[v92];
    *(_QWORD *)&v11[v92] = v49;

    v88 = *(_QWORD *)&v11[v92];
    v89 = &protocol witness table for MOSuggestionCollectionView;
    if (!v88)
      v89 = 0;
    v90 = &v48[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_segmentedDelegate];
    *((_QWORD *)v90 + 1) = v89;
    swift_unknownObjectWeakAssign(v90, v88);
    return v11;
  }
LABEL_39:
  __break(1u);
  return result;
}

void MOSuggestionSheetViewController.viewWillTransition(to:with:)(void *a1, double a2, double a3)
{
  void *v3;
  BOOL v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  void *v14;
  _QWORD v15[5];
  uint64_t v16;
  objc_super v17;

  v7 = specialized static MOAngelRootViewController.isLandscape.getter();
  v8 = *(double *)&static MOAngelRootViewController.LANDSCAPE_WIDTH;
  if (!v7)
    v8 = a2;
  objc_msgSend(v3, "setPreferredContentSize:", v8, a3);
  objc_msgSend(v3, "preferredContentSize");
  v10 = v9;
  v12 = v11;
  v17.receiver = v3;
  v17.super_class = (Class)type metadata accessor for MOSuggestionSheetViewController();
  objc_msgSendSuper2(&v17, "viewWillTransitionToSize:withTransitionCoordinator:", a1, v10, v12);
  v13 = swift_allocObject(&unk_1001E9738, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16);
  v15[4] = partial apply for closure #1 in MOSuggestionSheetViewController.viewWillTransition(to:with:);
  v16 = v13;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = thunk for @escaping @callee_guaranteed (@guaranteed UIViewControllerTransitionCoordinatorContext) -> ();
  v15[3] = &block_descriptor_41;
  v14 = _Block_copy(v15);
  objc_msgSend(a1, "animateAlongsideTransition:completion:", 0, v14, swift_release(v16).n128_f64[0]);
  _Block_release(v14);
}

void closure #1 in MOSuggestionSheetViewController.viewWillTransition(to:with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _QWORD *v5;
  uint64_t (*v6)(void);
  _QWORD *v7;
  void *v8;
  id v9;
  _BYTE v10[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(_QWORD **)(Strong
                    + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_suggestionCollectionView);
    if (v5)
    {
      v6 = *(uint64_t (**)(void))((swift_isaMask & *v5) + 0xE0);
      v7 = v5;
      v8 = (void *)v6();

      if (v8)
      {
        v9 = objc_msgSend(v8, "collectionViewLayout");

        objc_msgSend(v9, "invalidateLayout");
      }
    }

  }
}

Swift::Void __swiftcall MOSuggestionSheetViewController.handleContentSizeChanged()()
{
  char *v0;
  void *v1;
  _QWORD *v2;
  id v3;
  id v4;

  v1 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_suggestionCollectionView];
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v0, "traitCollection");
    v4 = objc_msgSend(v3, "preferredContentSizeCategory");

    (*(void (**)(id))((swift_isaMask & *v2) + 0x250))(v4);
  }
}

Swift::Void __swiftcall MOSuggestionSheetViewController.cancelSheet()()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *Strong;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  v1 = v0;
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong((char *)v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_controller);
  if (Strong)
  {
    v3 = Strong;
    (*(void (**)(void))((swift_isaMask & *Strong) + 0x158))();

  }
  v4 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x148))();
  v6 = v4;
  if (v4)
  {
    v7 = v5;
    ObjectType = swift_getObjectType(v4);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(ObjectType, v7);
    swift_unknownObjectRelease(v6);
  }
}

Swift::Void __swiftcall MOSuggestionSheetViewController.updateSheet()()
{
  uint64_t v0;
  _QWORD *v1;
  void (*v2)(void);
  _QWORD *v3;

  v1 = *(_QWORD **)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_suggestionCollectionView);
  if (v1)
  {
    v2 = *(void (**)(void))((swift_isaMask & *v1) + 0x238);
    v3 = v1;
    v2();

  }
}

Swift::Void __swiftcall MOSuggestionSheetViewController.viewDidLoad()()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  objc_super v4;

  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for MOSuggestionSheetViewController();
  objc_msgSendSuper2(&v4, "viewDidLoad");
  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
    objc_msgSend(v2, "setBackgroundColor:", v3);

  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall MOSuggestionSheetViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  void *v1;
  void *v2;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v11;
  objc_super v12;

  v2 = v1;
  v12.receiver = v2;
  v12.super_class = (Class)type metadata accessor for MOSuggestionSheetViewController();
  objc_msgSendSuper2(&v12, "viewDidAppear:", a1);
  v4 = objc_msgSend((id)objc_opt_self(MOOnboardingManager), "sharedInstance");
  v5 = objc_msgSend(v4, "onboardingFlowCompletionStatus");

  if (serverManager._clientConnections != (NSMutableDictionary *)-1)
    swift_once(&serverManager._clientConnections, one-time initialization function for shared);
  v6 = type metadata accessor for Logger(0);
  v7 = __swift_project_value_buffer(v6, (uint64_t)static MOAngelLogger.shared);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v10 = 134217984;
    v11 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12, v10 + 4);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Sheet view controller state, onboarding state = %lu", v10, 0xCu);
    swift_slowDealloc(v10, -1, -1);
  }

  if (!v5)
    MOSuggestionSheetViewController.presentOnboardingController()();
}

Swift::Void __swiftcall MOSuggestionSheetViewController.presentOnboardingController()()
{
  void *v0;
  id v1;
  id v2;
  void (*v3)();
  _QWORD *v4;

  v1 = objc_allocWithZone((Class)type metadata accessor for MOOnboardingNavigationController(0));
  v2 = v0;
  v4 = (_QWORD *)((uint64_t (*)())MOOnboardingNavigationController.init(onboardingDelegate:))();
  objc_msgSend(v4, "setModalInPresentation:", 1);
  v3 = *(void (**)())((swift_isaMask & *v4) + 0x60);
  swift_unknownObjectRetain();
  v3();
  objc_msgSend(v4, "setModalPresentationStyle:", 2);
  objc_msgSend(v2, "presentViewController:animated:completion:", v4, 1, 0);
  UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0);

}

Swift::Void __swiftcall MOSuggestionSheetViewController.pressedSegmentControl()()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  v1 = MOSuggestionSheetViewController.suggestionSegmentedControl.getter();
  v2 = objc_msgSend(v1, "selectedSegmentIndex");

  if ((unint64_t)v2 <= 1)
  {
    v3 = v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_segmentedDelegate;
    Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_segmentedDelegate);
    if (Strong)
    {
      v5 = Strong;
      v6 = *(_QWORD *)(v3 + 8);
      ObjectType = swift_getObjectType(Strong);
      (*(void (**)(id, _QWORD, id, uint64_t, uint64_t))(v6 + 8))(v2, objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_options), "showBlankEntryButton") ^ 1, objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_options), "showBlankEntryButton"), ObjectType, v6);
      swift_unknownObjectRelease(v5);
    }
  }
}

void MOSuggestionSheetViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MOAngelRootViewController.init(nibName:bundle:)(a1, a2, a3, (uint64_t)"MomentsUIService.MOSuggestionSheetViewController", 48);
}

void MOAngelRootViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _swift_stdlib_reportUnimplementedInitializer(a4, a5, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

void @objc MOAngelRootViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  id v8;

  v8 = a4;
  _swift_stdlib_reportUnimplementedInitializer(a5, a6, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id MOSuggestionSheetViewController.__deallocating_deinit()
{
  return MOSuggestionRoundView.__deallocating_deinit(type metadata accessor for MOSuggestionSheetViewController);
}

Swift::Void __swiftcall MOSuggestionSheetViewController.prepareViewControllerForPresentation(_:)(UIViewController a1)
{
  void *v1;
  id v3;
  id v4;

  objc_msgSend(v1, "preferredContentSize");
  -[objc_class setPreferredContentSize:](a1.super.super.isa, "setPreferredContentSize:");
  v3 = -[objc_class sheetPresentationController](a1.super.super.isa, "sheetPresentationController");
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, "setPrefersEdgeAttachedInCompactHeight:", 1);
    objc_msgSend(v4, "setWidthFollowsPreferredContentSizeWhenEdgeAttached:", 0);
    objc_msgSend(v4, "setPrefersPageSizing:", 0);

  }
}

void MOSuggestionSheetViewController.presentInterstitialView(interstitial:completion:)(void *a1, void *a2, uint64_t a3)
{
  void *v3;
  id v7;
  double v8;
  void *v9;
  uint64_t v10;
  _QWORD v11[5];
  uint64_t v12;

  objc_msgSend(v3, "preferredContentSize");
  objc_msgSend(a1, "setPreferredContentSize:");
  v7 = objc_msgSend(a1, "sheetPresentationController");
  if (v7)
  {
    v9 = v7;
    objc_msgSend(v7, "setPrefersEdgeAttachedInCompactHeight:", 1);
    objc_msgSend(v9, "setWidthFollowsPreferredContentSizeWhenEdgeAttached:", 0);
    objc_msgSend(v9, "setPrefersPageSizing:", 0);

  }
  if (a2)
  {
    v11[4] = a2;
    v12 = a3;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    v11[2] = thunk for @escaping @callee_guaranteed () -> ();
    v11[3] = &block_descriptor_44;
    a2 = _Block_copy(v11);
    v10 = v12;
    swift_retain(a3);
    *(_QWORD *)&v8 = swift_release(v10).n128_u64[0];
  }
  objc_msgSend(v3, "presentViewController:animated:completion:", a1, 1, a2, v8);
  _Block_release(a2);
}

Swift::Void __swiftcall MOSuggestionSheetViewController.dismissInterstitialView()()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, "navigationController");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "dismissViewControllerAnimated:completion:", 1, 0);

  }
}

Swift::Void __swiftcall MOSuggestionSheetViewController.presentPrivacyController()()
{
  char *v0;
  uint64_t Strong;
  void *v2;
  id v3;
  id v4;

  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_controller]);
  if (Strong)
  {
    v2 = (void *)Strong;
    v3 = objc_allocWithZone((Class)type metadata accessor for PrivacyViewController());
    v4 = specialized PrivacyViewController.init(clientName:)();
    objc_msgSend(v4, "setModalInPresentation:", 1);
    objc_msgSend(v0, "presentViewController:animated:completion:", v4, 1, 0);

  }
}

Swift::Void __swiftcall MOSuggestionSheetViewController.shouldUpdateCancelButtonToClose()()
{
  char *v0;
  char *v1;
  uint64_t Strong;
  _QWORD *v3;
  id v4;
  Swift::String v5;
  Swift::String v6;
  void *object;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  char **v16;
  id v17;
  id v18;
  void *v19;
  __int128 v20;
  __int128 v21;
  Swift::String v22;

  v1 = v0;
  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_controller]);
  if (Strong)
  {
    v3 = (_QWORD *)Strong;
    v4 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v22._object = (void *)0x80000001001AB3E0;
    v5._countAndFlagsBits = 0x65736F6C63;
    v5._object = (void *)0xE500000000000000;
    v6._countAndFlagsBits = 0;
    v6._object = (void *)0xE000000000000000;
    v22._countAndFlagsBits = 0xD000000000000021;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v22)._object;

    v8 = lazy protocol witness table accessor for type String and conformance String();
    StringProtocol.localizedCapitalized.getter(&type metadata for String, v8);
    v10 = v9;
    swift_bridgeObjectRelease(object);
    v20 = 0u;
    v21 = 0u;
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v10);
    v12 = objc_allocWithZone((Class)UIBarButtonItem);
    v13 = objc_msgSend(v12, "initWithTitle:style:target:action:", v11, 2, 0, "cancelSheet", v20, (_QWORD)v21);

    v14 = swift_unknownObjectRelease(0);
    LOBYTE(v11) = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0x1B0))(v14);
    v15 = (void *)objc_opt_self(UIColor);
    v16 = &selRef_systemBlueColor;
    if ((v11 & 1) == 0)
      v16 = &selRef_systemIndigoColor;
    v17 = objc_msgSend(v15, *v16);
    objc_msgSend(v13, "setTintColor:", v17);

    if (objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_options], "showCancelButton"))
    {
      v18 = objc_msgSend(v1, "navigationItem");
      objc_msgSend(v18, "setLeftBarButtonItem:", v13);

      v19 = v13;
    }
    else
    {
      v19 = v3;
      v3 = v13;
    }

  }
}

Swift::Void __swiftcall MOSuggestionSheetViewController.presentDialogAlert(dialogAlert:)(UIAlertController dialogAlert)
{
  void *v1;

  objc_msgSend(v1, "presentViewController:animated:completion:", dialogAlert.super.super.super.isa, 1, 0);
}

Swift::Void __swiftcall MOSuggestionSheetViewController.showSegmentedController()()
{
  MOSuggestionSheetViewController.showSegmentedController()((uint64_t)partial apply for closure #1 in MOSuggestionSheetViewController.showSegmentedController(), (uint64_t)&block_descriptor_48);
}

Swift::Void __swiftcall MOSuggestionSheetViewController.showSegmentedController(withSegment:)(MomentsUIService::SegmentType withSegment)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  _QWORD v7[5];
  uint64_t v8;

  v2 = MOSuggestionSheetViewController.suggestionSegmentedControl.getter();
  objc_msgSend(v2, "setSelectedSegmentIndex:", withSegment & 1);

  v3 = (void *)objc_opt_self(UIView);
  v4 = MOSuggestionSheetViewController.suggestionSegmentedControl.getter();
  v5 = swift_allocObject(&unk_1001E9738, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16);
  v7[4] = partial apply for closure #1 in MOSuggestionSheetViewController.showSegmentedController();
  v8 = v5;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = thunk for @escaping @callee_guaranteed () -> ();
  v7[3] = &block_descriptor_53_0;
  v6 = _Block_copy(v7);
  swift_release(v8);
  objc_msgSend(v3, "transitionWithView:duration:options:animations:completion:", v4, 5242880, v6, 0, 0.5);
  _Block_release(v6);

}

Swift::Void __swiftcall MOSuggestionSheetViewController.hideSegmentedController()()
{
  MOSuggestionSheetViewController.showSegmentedController()((uint64_t)partial apply for closure #1 in MOSuggestionSheetViewController.hideSegmentedController(), (uint64_t)&block_descriptor_57);
}

void MOSuggestionSheetViewController.showSegmentedController()(uint64_t a1, uint64_t a2)
{
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  _QWORD v8[5];
  uint64_t v9;

  v4 = (void *)objc_opt_self(UIView);
  v5 = MOSuggestionSheetViewController.suggestionSegmentedControl.getter();
  v6 = swift_allocObject(&unk_1001E9738, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16);
  v8[4] = a1;
  v9 = v6;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = thunk for @escaping @callee_guaranteed () -> ();
  v8[3] = a2;
  v7 = _Block_copy(v8);
  swift_release(v9);
  objc_msgSend(v4, "transitionWithView:duration:options:animations:completion:", v5, 5242880, v7, 0, 0.5);
  _Block_release(v7);

}

void closure #1 in MOSuggestionSheetViewController.showSegmentedController()(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  id v6;
  _BYTE v7[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = MOSuggestionSheetViewController.suggestionSegmentedControl.getter();

    objc_msgSend(v6, "setHidden:", a2 & 1);
  }
}

void protocol witness for MOSuggestionSegmentedControlVisibilityDelegate.showSegmentedController(withSegment:) in conformance MOSuggestionSheetViewController(char a1)
{
  MOSuggestionSheetViewController.showSegmentedController(withSegment:)((MomentsUIService::SegmentType)(a1 & 1));
}

char *specialized MOSuggestionCollectionView.init(controller:presentationDelegate:dialogDelegate:segmentedVisibilityDelegate:options:)(_QWORD *a1, void *a2, void *a3, void *a4, void *a5, char *a6)
{
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  double y;
  double width;
  double height;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, _UNKNOWN **, __n128);
  char *v41;
  __n128 v42;
  double v43;
  char *v44;
  uint64_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  Class isa;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  Class v80;
  id v83;
  void *v84;
  objc_super v87;
  char v88[24];
  char v89[24];
  char v90[24];
  char v91[32];

  *(_QWORD *)&a6[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_suggestionCollectionView] = 0;
  v9 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_onboardingManager;
  v10 = (void *)objc_opt_self(MOOnboardingManager);
  v11 = a6;
  *(_QWORD *)&a6[v9] = objc_msgSend(v10, "sharedInstance");
  *(_QWORD *)&v11[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_viewModel] = 0;
  v12 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_engagementWriter;
  *(_QWORD *)&v11[v12] = objc_msgSend((id)objc_opt_self(MOEngagementHistoryWriter), "sharedInstance");
  v13 = &v11[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_controller];
  swift_unknownObjectWeakInit(&v11[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_controller]);
  v14 = &v11[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_presentationDelegate];
  *((_QWORD *)v14 + 1) = 0;
  swift_unknownObjectWeakInit(v14);
  v15 = &v11[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_dialogDelegate];
  *((_QWORD *)v15 + 1) = 0;
  swift_unknownObjectWeakInit(v15);
  v16 = &v11[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_segmentedVisibilityDelegate];
  *((_QWORD *)v16 + 1) = 0;
  swift_unknownObjectWeakInit(v16);
  v17 = &v11[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_newEntryHeaderDelegate];
  *((_QWORD *)v17 + 1) = 0;
  swift_unknownObjectWeakInit(v17);
  v18 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_privacyBadge;
  y = CGRectZero.origin.y;
  width = CGRectZero.size.width;
  height = CGRectZero.size.height;
  *(_QWORD *)&v11[v18] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MOSuggestionPickerPrivacyBadge()), "initWithFrame:", CGRectZero.origin.x, y, width, height);
  *(_QWORD *)&v11[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_headerOffsetHeight] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_currentBadgeOffset] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_privacyBadgeTopConstraint] = 0;
  v22 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_tipCoordinator;
  *(_QWORD *)&v11[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_tipCoordinator] = 0;
  v23 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_activityIndicator;
  v24 = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "init");
  objc_msgSend(v24, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v11[v23] = v24;
  *(_QWORD *)&v11[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_protectedContentShield] = 0;
  v25 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_supportingLoadingTextLabel;
  closure #1 in variable initialization expression of MOSuggestionCollectionView.supportingLoadingTextLabel();
  *(_QWORD *)&v11[v25] = v26;
  swift_beginAccess(v13, v91, 1, 0);
  swift_unknownObjectWeakAssign(v13, a1);
  swift_beginAccess(v14, v90, 1, 0);
  *((_QWORD *)v14 + 1) = &protocol witness table for MOSuggestionSheetViewController;
  v84 = a2;
  swift_unknownObjectWeakAssign(v14, a2);
  swift_beginAccess(v15, v89, 1, 0);
  *((_QWORD *)v15 + 1) = &protocol witness table for MOSuggestionSheetViewController;
  swift_unknownObjectWeakAssign(v15, a3);
  swift_beginAccess(v16, v88, 1, 0);
  *((_QWORD *)v16 + 1) = &protocol witness table for MOSuggestionSheetViewController;
  swift_unknownObjectWeakAssign(v16, a4);
  *(_QWORD *)&v11[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_options] = a5;
  v27 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0x1D0);
  v83 = a5;
  v28 = v27();
  v30 = v29;
  v31 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x1C8))();
  v33 = v32;
  LOBYTE(a2) = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x1B0))();
  v34 = type metadata accessor for MOSuggestionTipCoordinator();
  swift_allocObject(v34, 75, 7);
  v35 = MOSuggestionTipCoordinator.init(clientId:clientName:isPublicUI:)(v28, v30, v31, v33, a2 & 1);
  v36 = *(_QWORD *)&v11[v22];
  *(_QWORD *)&v11[v22] = v35;

  swift_release(v36);
  v87.receiver = v11;
  v87.super_class = (Class)type metadata accessor for MOSuggestionCollectionView();
  v37 = (char *)objc_msgSendSuper2(&v87, "initWithFrame:", CGRectZero.origin.x, y, width, height);
  v38 = v37;
  v39 = *(_QWORD *)&v37[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_tipCoordinator];
  if (v39)
  {
    v40 = *(void (**)(char *, _UNKNOWN **, __n128))(*(_QWORD *)v39 + 128);
    v41 = v37;
    v42 = swift_retain(v39);
    v40(v38, &protocol witness table for MOSuggestionCollectionView, v42);
    *(_QWORD *)&v43 = swift_release(v39).n128_u64[0];
  }
  else
  {
    v44 = v37;
  }
  v45 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_activityIndicator;
  v46 = *(void **)&v38[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_activityIndicator];
  objc_msgSend(v38, "addSubview:", v46, v43);
  v47 = (void *)objc_opt_self(NSLayoutConstraint);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v49 = swift_allocObject(v48, 64, 7);
  *(_OWORD *)(v49 + 16) = xmmword_10019ED40;
  v50 = objc_msgSend(v46, "centerYAnchor");
  v51 = objc_msgSend(v38, "centerYAnchor");
  v52 = objc_msgSend(v50, "constraintEqualToAnchor:", v51);

  *(_QWORD *)(v49 + 32) = v52;
  v53 = objc_msgSend(*(id *)&v38[v45], "centerXAnchor");
  v54 = objc_msgSend(v38, "centerXAnchor");
  v55 = objc_msgSend(v53, "constraintEqualToAnchor:", v54);

  *(_QWORD *)(v49 + 40) = v55;
  v56 = objc_msgSend(*(id *)&v38[v45], "heightAnchor");
  v57 = objc_msgSend(v56, "constraintEqualToConstant:", 50.0);

  *(_QWORD *)(v49 + 48) = v57;
  v58 = objc_msgSend(*(id *)&v38[v45], "widthAnchor");
  v59 = objc_msgSend(v58, "constraintEqualToConstant:", 50.0);

  *(_QWORD *)(v49 + 56) = v59;
  specialized Array._endMutation()(v60);
  v61 = v49;
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v47, "activateConstraints:", isa, swift_bridgeObjectRelease(v61).n128_f64[0]);

  v63 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_supportingLoadingTextLabel;
  v64 = *(void **)&v38[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_supportingLoadingTextLabel];
  objc_msgSend(v38, "addSubview:", v64);
  v65 = swift_allocObject(v48, 64, 7);
  *(_OWORD *)(v65 + 16) = xmmword_10019ED40;
  v66 = objc_msgSend(v64, "topAnchor");
  v67 = objc_msgSend(*(id *)&v38[v45], "bottomAnchor");
  v68 = objc_msgSend(v66, "constraintEqualToAnchor:constant:", v67, 2.0);

  *(_QWORD *)(v65 + 32) = v68;
  v69 = objc_msgSend(*(id *)&v38[v63], "centerXAnchor");
  v70 = objc_msgSend(v38, "centerXAnchor");
  v71 = objc_msgSend(v69, "constraintEqualToAnchor:", v70);

  *(_QWORD *)(v65 + 40) = v71;
  v72 = objc_msgSend(*(id *)&v38[v63], "leadingAnchor");
  v73 = objc_msgSend(v38, "leadingAnchor");
  v74 = objc_msgSend(v72, "constraintEqualToAnchor:constant:", v73, 20.0);

  *(_QWORD *)(v65 + 48) = v74;
  v75 = objc_msgSend(*(id *)&v38[v63], "trailingAnchor");
  v76 = objc_msgSend(v38, "trailingAnchor");
  v77 = objc_msgSend(v75, "constraintEqualToAnchor:constant:", v76, -20.0);

  *(_QWORD *)(v65 + 56) = v77;
  specialized Array._endMutation()(v78);
  v79 = v65;
  v80 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v47, "activateConstraints:", v80, swift_bridgeObjectRelease(v79).n128_f64[0]);

  return v38;
}

BOOL specialized static MOAngelRootViewController.isLandscape.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;

  v0 = (void *)objc_opt_self(UIApplication);
  v1 = objc_msgSend(v0, "sharedApplication");
  v2 = objc_msgSend(v1, "connectedScenes");

  v3 = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIScene, UIScene_ptr);
  v4 = lazy protocol witness table accessor for type UIScene and conformance NSObject();
  v5 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v2, v3, v4);

  v6 = (void *)specialized Collection.first.getter(v5);
  swift_bridgeObjectRelease(v5);
  if (v6)
  {
    v7 = objc_opt_self(UIWindowScene);
    v8 = (void *)swift_dynamicCastObjCClass(v6, v7);
    if (v8)
    {
      v9 = objc_msgSend(v8, "interfaceOrientation");

      if (v9 == (id)4)
        return 1;
    }
    else
    {

    }
  }
  v11 = objc_msgSend(v0, "sharedApplication");
  v12 = objc_msgSend(v11, "connectedScenes");

  v13 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v12, v3, v4);
  v14 = (void *)specialized Collection.first.getter(v13);
  swift_bridgeObjectRelease(v13);
  if (v14)
  {
    v15 = objc_opt_self(UIWindowScene);
    v16 = (void *)swift_dynamicCastObjCClass(v14, v15);
    if (v16)
    {
      v17 = objc_msgSend(v16, "interfaceOrientation");

      return v17 == (id)3;
    }

  }
  return 0;
}

uint64_t type metadata accessor for MOAngelRootViewController()
{
  return objc_opt_self(_TtC16MomentsUIService25MOAngelRootViewController);
}

unint64_t lazy protocol witness table accessor for type UIScene and conformance NSObject()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type UIScene and conformance NSObject;
  if (!lazy protocol witness table cache variable for type UIScene and conformance NSObject)
  {
    v1 = type metadata accessor for UIApplication(255, (unint64_t *)&lazy cache variable for type metadata for UIScene, UIScene_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UIScene and conformance NSObject);
  }
  return result;
}

uint64_t type metadata accessor for MOSuggestionSheetViewController()
{
  return objc_opt_self(_TtC16MomentsUIService31MOSuggestionSheetViewController);
}

uint64_t sub_1000E8E10()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000E8E34()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

void partial apply for closure #1 in MOAngelRootViewController.present(with:)()
{
  uint64_t v0;

  closure #1 in MOAngelRootViewController.present(with:)(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t block_copy_helper_23(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_23(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000E8E8C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double partial apply for closure #1 in static SuggestionSheetDetents.peek(identifier:fraction:)(void *a1)
{
  uint64_t v1;
  double v2;
  double v3;

  v2 = *(double *)(v1 + 16);
  objc_msgSend(a1, "maximumDetentValue");
  return v2 * v3;
}

uint64_t sub_1000E8ED0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id partial apply for closure #2 in MOAngelRootViewController.update(with:animated:)()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setSelectedDetentIdentifier:", **(_QWORD **)(v0 + 24));
}

uint64_t sub_1000E8F08()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000E8F18()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void partial apply for closure #3 in MOAngelRootViewController.update(with:animated:)(uint64_t a1)
{
  uint64_t v1;

  closure #3 in MOAngelRootViewController.update(with:animated:)(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void partial apply for closure #1 in MOAngelRootViewController.update(with:animated:)()
{
  uint64_t v0;

  closure #1 in MOAngelRootViewController.update(with:animated:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1000E8F4C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t partial apply for closure #1 in MOSuggestionSheetViewController.updateSheetIfOnboardingRefreshComplete()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))((swift_isaMask & **(_QWORD **)(v0 + 16)) + 0x90))();
}

void partial apply for closure #1 in MOSuggestionSheetViewController.viewWillTransition(to:with:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in MOSuggestionSheetViewController.viewWillTransition(to:with:)(a1, v1);
}

void specialized MOSuggestionSheetViewController.init(coder:)()
{
  char *v0;
  char *v1;
  char *v2;
  char *v3;
  char *v4;

  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_controller], 0);
  v1 = &v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_segmentedDelegate];
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit(v1, 0);
  v2 = &v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_segmentedVisibilityDelegate];
  *((_QWORD *)v2 + 1) = 0;
  swift_unknownObjectWeakInit(v2, 0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_suggestionCollectionView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController____lazy_storage___suggestionSegmentedControl] = 0;
  v3 = &v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_presentationDelegate];
  *((_QWORD *)v3 + 1) = 0;
  swift_unknownObjectWeakInit(v3, 0);
  v4 = &v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_rootControllerDelegate];
  *((_QWORD *)v4 + 1) = 0;
  swift_unknownObjectWeakInit(v4, 0);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionSheetViewController.swift", 54, 2, 379, 0);
  __break(1u);
}

uint64_t specialized MOSuggestionSheetViewController.showMomentsValidator()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v8;
  NSURL *v9;
  void *v10;
  void *v11;
  unint64_t v12;
  Class isa;
  uint64_t v14;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v0);
  v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)(0x746164696C61766DLL, 0xED00002F2F3A726FLL);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
    return outlined destroy of Any?((uint64_t)v2, &demangling cache variable for type metadata for URL?);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  v8 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  URL._bridgeToObjectiveC()(v9);
  v11 = v10;
  v12 = specialized Dictionary.init(dictionaryLiteral:)((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for UIApplicationOpenExternalURLOptionsKey(0);
  lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes(&lazy protocol witness table cache variable for type UIApplicationOpenExternalURLOptionsKey and conformance UIApplicationOpenExternalURLOptionsKey, (uint64_t (*)(uint64_t))type metadata accessor for UIApplicationOpenExternalURLOptionsKey, (uint64_t)&protocol conformance descriptor for UIApplicationOpenExternalURLOptionsKey);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v8, "openURL:options:completionHandler:", v11, isa, 0, swift_bridgeObjectRelease(v12).n128_f64[0]);

  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void partial apply for closure #1 in MOSuggestionSheetViewController.showSegmentedController()()
{
  uint64_t v0;

  closure #1 in MOSuggestionSheetViewController.showSegmentedController()(v0, 0);
}

void partial apply for closure #1 in MOSuggestionSheetViewController.hideSegmentedController()()
{
  uint64_t v0;

  closure #1 in MOSuggestionSheetViewController.showSegmentedController()(v0, 1);
}

uint64_t sub_1000E92A4@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x130))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1000E92E4(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **a2) + 0x138);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t sub_1000E9334@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x148))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1000E9374(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **a2) + 0x150);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t static MOReachability.isInternetAvailable()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v1 = type metadata accessor for NWPath.Status(0);
  v0[3] = v1;
  v2 = *(_QWORD *)(v1 - 8);
  v0[4] = v2;
  v0[5] = swift_task_alloc((*(_QWORD *)(v2 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (NWPath.Status?, NWPath.Status?));
  v0[6] = v3;
  v0[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for NWPath(0);
  v0[8] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v0[9] = v5;
  v0[10] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for NWPathMonitor.Iterator(0);
  v0[11] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v0[12] = v7;
  v0[13] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NWPath?)
                              - 8)
                  + 64)
      + 15) & 0xFFFFFFFFFFFFFFF0;
  v0[14] = swift_task_alloc(v8);
  v0[15] = swift_task_alloc(v8);
  v9 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NWPath.Status?)
                              - 8)
                  + 64)
      + 15) & 0xFFFFFFFFFFFFFFF0;
  v0[16] = swift_task_alloc(v9);
  v0[17] = swift_task_alloc(v9);
  v0[18] = swift_task_alloc(v9);
  return swift_task_switch(static MOReachability.isInternetAvailable(), 0, 0);
}

{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = type metadata accessor for NWPathMonitor(0);
  swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  v2 = NWPathMonitor.init()();
  v0[19] = v2;
  v0[2] = v2;
  v3 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes(&lazy protocol witness table cache variable for type NWPathMonitor and conformance NWPathMonitor, (uint64_t (*)(uint64_t))&type metadata accessor for NWPathMonitor, (uint64_t)&protocol conformance descriptor for NWPathMonitor);
  v4 = swift_retain(v2);
  dispatch thunk of AsyncSequence.makeAsyncIterator()(v1, v3, v4);
  v5 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes(&lazy protocol witness table cache variable for type NWPathMonitor.Iterator and conformance NWPathMonitor.Iterator, (uint64_t (*)(uint64_t))&type metadata accessor for NWPathMonitor.Iterator, (uint64_t)&protocol conformance descriptor for NWPathMonitor.Iterator);
  v6 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[20] = v6;
  *v6 = v0;
  v6[1] = static MOReachability.isInternetAvailable();
  return dispatch thunk of AsyncIteratorProtocol.next()(v0[14], v0[11], v5);
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 160));
  if (v0)
    return (*(uint64_t (**)(_QWORD, _QWORD))(v2[12] + 8))(v2[13], v2[11]);
  else
    return swift_task_switch(static MOReachability.isInternetAvailable(), 0, 0);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v4(v1, 1, v2) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
    v5 = 1;
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 120);
    v8 = *(_QWORD *)(v0 + 96);
    v7 = *(_QWORD *)(v0 + 104);
    v10 = *(_QWORD *)(v0 + 80);
    v9 = *(_QWORD *)(v0 + 88);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
    v11(v10, v1, v2);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    v11(v6, v10, v2);
    v5 = 0;
  }
  v12 = *(_QWORD *)(v0 + 152);
  v13 = *(_QWORD *)(v0 + 120);
  v14 = *(_QWORD *)(v0 + 64);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 72) + 56))(v13, v5, 1, v14);
  v15 = swift_release(v12);
  v16 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))v4)(v13, 1, v14, v15);
  v17 = *(_QWORD *)(v0 + 144);
  v18 = *(_QWORD *)(v0 + 120);
  if (v16 == 1)
  {
    v19 = *(_QWORD *)(v0 + 24);
    v20 = *(_QWORD *)(v0 + 32);
    outlined destroy of Any?(*(_QWORD *)(v0 + 120), &demangling cache variable for type metadata for NWPath?);
    v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    v21(v17, 1, 1, v19);
  }
  else
  {
    v22 = *(_QWORD *)(v0 + 64);
    v23 = *(_QWORD *)(v0 + 72);
    v24 = *(_QWORD *)(v0 + 24);
    v25 = *(_QWORD *)(v0 + 32);
    NWPath.status.getter();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v18, v22);
    v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56);
    v21(v17, 0, 1, v24);
  }
  v27 = *(_QWORD *)(v0 + 136);
  v26 = *(_QWORD *)(v0 + 144);
  v29 = *(_QWORD *)(v0 + 48);
  v28 = *(_QWORD *)(v0 + 56);
  v30 = *(_QWORD *)(v0 + 24);
  v31 = *(_QWORD *)(v0 + 32);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v31 + 104))(v27, enum case for NWPath.Status.unsatisfied(_:), v30);
  v21(v27, 0, 1, v30);
  v32 = v28 + *(int *)(v29 + 48);
  outlined init with copy of NWPath.Status?(v26, v28);
  outlined init with copy of NWPath.Status?(v27, v32);
  v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 48);
  if (v33(v28, 1, v30) != 1)
  {
    v37 = *(_QWORD *)(v0 + 24);
    outlined init with copy of NWPath.Status?(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 128));
    v38 = v33(v32, 1, v37);
    v40 = *(_QWORD *)(v0 + 136);
    v39 = *(_QWORD *)(v0 + 144);
    v41 = *(_QWORD *)(v0 + 128);
    if (v38 != 1)
    {
      v44 = *(_QWORD *)(v0 + 56);
      v46 = *(_QWORD *)(v0 + 32);
      v45 = *(_QWORD *)(v0 + 40);
      v47 = *(_QWORD *)(v0 + 24);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 32))(v45, v32, v47);
      v48 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes(&lazy protocol witness table cache variable for type NWPath.Status and conformance NWPath.Status, (uint64_t (*)(uint64_t))&type metadata accessor for NWPath.Status, (uint64_t)&protocol conformance descriptor for NWPath.Status);
      v49 = dispatch thunk of static Equatable.== infix(_:_:)(v41, v45, v47, v48);
      v50 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
      v50(v45, v47);
      outlined destroy of Any?(v40, &demangling cache variable for type metadata for NWPath.Status?);
      outlined destroy of Any?(v39, &demangling cache variable for type metadata for NWPath.Status?);
      v50(v41, v47);
      outlined destroy of Any?(v44, &demangling cache variable for type metadata for NWPath.Status?);
      v36 = v49 ^ 1;
      goto LABEL_14;
    }
    v42 = *(_QWORD *)(v0 + 24);
    v43 = *(_QWORD *)(v0 + 32);
    outlined destroy of Any?(*(_QWORD *)(v0 + 136), &demangling cache variable for type metadata for NWPath.Status?);
    outlined destroy of Any?(v39, &demangling cache variable for type metadata for NWPath.Status?);
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
    goto LABEL_12;
  }
  v34 = *(_QWORD *)(v0 + 144);
  v35 = *(_QWORD *)(v0 + 24);
  outlined destroy of Any?(*(_QWORD *)(v0 + 136), &demangling cache variable for type metadata for NWPath.Status?);
  outlined destroy of Any?(v34, &demangling cache variable for type metadata for NWPath.Status?);
  if (v33(v32, 1, v35) != 1)
  {
LABEL_12:
    outlined destroy of Any?(*(_QWORD *)(v0 + 56), &demangling cache variable for type metadata for (NWPath.Status?, NWPath.Status?));
    v36 = 1;
    goto LABEL_14;
  }
  outlined destroy of Any?(*(_QWORD *)(v0 + 56), &demangling cache variable for type metadata for NWPath.Status?);
  v36 = 0;
LABEL_14:
  v51 = *(_QWORD *)(v0 + 136);
  v53 = *(_QWORD *)(v0 + 120);
  v52 = *(_QWORD *)(v0 + 128);
  v55 = *(_QWORD *)(v0 + 104);
  v54 = *(_QWORD *)(v0 + 112);
  v56 = *(_QWORD *)(v0 + 80);
  v57 = *(_QWORD *)(v0 + 56);
  v58 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v36 & 1);
}

uint64_t outlined init with copy of NWPath.Status?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NWPath.Status?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

const __SCNetworkReachability *static MOReachability.isInternetAvailable()()
{
  const __SCNetworkReachability *result;
  const __SCNetworkReachability *v1;
  int v2;
  SCNetworkReachabilityFlags flags;
  sockaddr address;

  *(_QWORD *)&address.sa_data[6] = 0;
  *(_QWORD *)address.sa_data = 0;
  *(_WORD *)&address.sa_len = 528;
  result = SCNetworkReachabilityCreateWithAddress(0, &address);
  if (result)
  {
    v1 = result;
    flags = 0;
    v2 = SCNetworkReachabilityGetFlags(result, &flags);

    if (v2)
      return (const __SCNetworkReachability *)((flags & 6) == 2);
    else
      return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for MOReachability()
{
  return &type metadata for MOReachability;
}

uint64_t MOSuggestionSheetImage.__allocating_init(image:associatedTintColor:associatedBackgroundColor:tileBackgroundColor:shouldBeRounded:squareCrop:extraMargin:)(uint64_t a1, uint64_t a2, void *a3, void *a4, char a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v8;
  char v16;
  uint64_t v17;

  v16 = a8 & 1;
  v17 = swift_allocObject(v8, 105, 7);
  MOSuggestionSheetImage.init(image:associatedTintColor:associatedBackgroundColor:tileBackgroundColor:shouldBeRounded:squareCrop:extraMargin:)(a1, a2, a3, a4, a5, a6, a7, v16);
  return v17;
}

id MOSuggestionAssetReference.assetType.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 16, v2, 0, 0);
  return *(id *)(v0 + 16);
}

void MOSuggestionAssetReference.assetType.setter(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  _BYTE v4[24];

  swift_beginAccess(v1 + 16, v4, 1, 0);
  v3 = *(void **)(v1 + 16);
  *(_QWORD *)(v1 + 16) = a1;

}

void *MOSuggestionSheetImage.associatedTintColor.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  _BYTE v4[24];

  swift_beginAccess(v0 + 24, v4, 0, 0);
  v1 = *(void **)(v0 + 24);
  v2 = v1;
  return v1;
}

void *MOSuggestionSheetAssetViewModel.image.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  _BYTE v4[24];

  swift_beginAccess(v0 + 32, v4, 0, 0);
  v1 = *(void **)(v0 + 32);
  v2 = v1;
  return v1;
}

void MOSuggestionSheetAssetViewModel.image.setter(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  _BYTE v4[24];

  swift_beginAccess(v1 + 32, v4, 1, 0);
  v3 = *(void **)(v1 + 32);
  *(_QWORD *)(v1 + 32) = a1;

}

void *MOSuggestionSheetAssetViewModel.activitySummary.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  _BYTE v4[24];

  swift_beginAccess(v0 + 40, v4, 0, 0);
  v1 = *(void **)(v0 + 40);
  v2 = v1;
  return v1;
}

void MOSuggestionSheetAssetViewModel.activitySummary.setter(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  _BYTE v4[24];

  swift_beginAccess(v1 + 40, v4, 1, 0);
  v3 = *(void **)(v1 + 40);
  *(_QWORD *)(v1 + 40) = a1;

}

uint64_t MOSuggestionSheetImage.shouldBeRounded.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 48, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t MOSuggestionSheetImage.shouldBeRounded.setter(char a1)
{
  uint64_t v1;
  uint64_t result;
  _BYTE v4[24];

  result = swift_beginAccess(v1 + 48, v4, 1, 0);
  *(_BYTE *)(v1 + 48) = a1;
  return result;
}

__n128 MOSuggestionSheetImage.squareCrop.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v3;
  __n128 result;
  __int128 v5;
  _BYTE v6[24];

  swift_beginAccess(v1 + 56, v6, 0, 0);
  v3 = *(_BYTE *)(v1 + 88);
  result = *(__n128 *)(v1 + 56);
  v5 = *(_OWORD *)(v1 + 72);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 32) = v3;
  return result;
}

uint64_t MOSuggestionSheetImage.squareCrop.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + 56;
  swift_beginAccess(v3, v5, 1, 0);
  return outlined init with take of CGRect?(a1, v3);
}

uint64_t (*MOSuggestionSheetImage.squareCrop.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + 56, a1, 33, 0);
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

uint64_t MOSuggestionSheetImage.extraMargin.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 96, v2, 0, 0);
  return *(_QWORD *)(v0 + 96);
}

uint64_t MOSuggestionSheetImage.extraMargin.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  _BYTE v6[24];

  result = swift_beginAccess(v2 + 96, v6, 1, 0);
  *(_QWORD *)(v2 + 96) = a1;
  *(_BYTE *)(v2 + 104) = a2 & 1;
  return result;
}

uint64_t MOSuggestionSheetImage.init(image:associatedTintColor:associatedBackgroundColor:tileBackgroundColor:shouldBeRounded:squareCrop:extraMargin:)(uint64_t a1, uint64_t a2, void *a3, void *a4, char a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v8;
  uint64_t v9;
  void **v14;
  void **v15;
  void *v16;
  void *v17;
  void *v18;
  _BYTE v23[24];
  _BYTE v24[24];
  _BYTE v25[24];
  _BYTE v26[24];
  _BYTE v27[24];

  v9 = v8;
  *(_QWORD *)(v8 + 40) = 0;
  v14 = (void **)(v8 + 40);
  *(_OWORD *)(v8 + 72) = 0u;
  *(_BYTE *)(v8 + 88) = 1;
  *(_BYTE *)(v8 + 104) = 1;
  *(_QWORD *)(v8 + 32) = 0;
  v15 = (void **)(v8 + 32);
  *(_QWORD *)(v9 + 24) = 0;
  *(_OWORD *)(v9 + 56) = 0u;
  *(_QWORD *)(v9 + 96) = 0;
  *(_QWORD *)(v9 + 16) = a1;
  swift_beginAccess(v9 + 24, v27, 1, 0);
  v16 = *(void **)(v9 + 24);
  *(_QWORD *)(v9 + 24) = a2;

  swift_beginAccess(v15, v26, 1, 0);
  v17 = *v15;
  *v15 = a3;

  swift_beginAccess(v14, v25, 1, 0);
  v18 = *v14;
  *v14 = a4;

  *(_BYTE *)(v9 + 48) = a5;
  swift_beginAccess(v9 + 56, v24, 1, 0);
  outlined init with take of CGRect?(a6, v9 + 56);
  swift_beginAccess(v9 + 96, v23, 1, 0);
  *(_QWORD *)(v9 + 96) = a7;
  *(_BYTE *)(v9 + 104) = a8 & 1;
  return v9;
}

id *MOSuggestionSheetImage.deinit()
{
  id *v0;

  return v0;
}

uint64_t MOSuggestionSheetImage.__deallocating_deinit()
{
  id *v0;

  return swift_deallocClassInstance(v0, 105, 7);
}

uint64_t sub_1000EA144@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 136))();
  *a2 = result;
  return result;
}

uint64_t sub_1000EA174(id *a1, uint64_t a2)
{
  return (*(uint64_t (**)(id))(**(_QWORD **)a2 + 144))(*a1);
}

uint64_t sub_1000EA1A4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 160))();
  *a2 = result;
  return result;
}

uint64_t sub_1000EA1D4(id *a1, uint64_t a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))(**(_QWORD **)a2 + 168);
  v4 = *a1;
  return v3(v2);
}

uint64_t sub_1000EA210@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 184))();
  *a2 = result;
  return result;
}

uint64_t sub_1000EA240(id *a1, uint64_t a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))(**(_QWORD **)a2 + 192);
  v4 = *a1;
  return v3(v2);
}

uint64_t sub_1000EA27C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 208))();
  *a2 = result;
  return result;
}

uint64_t sub_1000EA2AC(id *a1, uint64_t a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))(**(_QWORD **)a2 + 216);
  v4 = *a1;
  return v3(v2);
}

uint64_t sub_1000EA2E8@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 232))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1000EA31C(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 240))(*a1);
}

uint64_t sub_1000EA348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD v4[5];

  (*(void (**)(_QWORD *__return_ptr))(**(_QWORD **)a1 + 256))(v4);
  return outlined init with take of CGRect?((uint64_t)v4, a2);
}

uint64_t sub_1000EA38C(uint64_t a1, uint64_t a2)
{
  _BYTE v4[40];

  outlined init with take of CGRect?(a1, (uint64_t)v4);
  return (*(uint64_t (**)(_BYTE *))(**(_QWORD **)a2 + 264))(v4);
}

uint64_t sub_1000EA3CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 280))();
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_1000EA404(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(**(_QWORD **)a2 + 288))(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t type metadata accessor for MOSuggestionSheetImage()
{
  return objc_opt_self(_TtC16MomentsUIService22MOSuggestionSheetImage);
}

void thunk for @escaping @callee_guaranteed (@guaranteed UIAlertAction) -> ()(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void);
  id v5;

  v4 = *(void (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4();
  swift_release(v3);

}

uint64_t MOSuggestionCollectionView.__allocating_init(controller:presentationDelegate:dialogDelegate:segmentedVisibilityDelegate:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return MOSuggestionCollectionView.__allocating_init(controller:presentationDelegate:dialogDelegate:segmentedVisibilityDelegate:options:)(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))specialized MOSuggestionCollectionView.__allocating_init(controller:presentationDelegate:dialogDelegate:segmentedVisibilityDelegate:options:));
}

void *MOSuggestionCollectionView.suggestionCollectionView.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_suggestionCollectionView);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_suggestionCollectionView, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void MOSuggestionCollectionView.suggestionCollectionView.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_suggestionCollectionView);
}

uint64_t (*MOSuggestionCollectionView.suggestionCollectionView.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_suggestionCollectionView, a1, 33, 0);
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

id MOSuggestionCollectionView.onboardingManager.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_onboardingManager);
}

uint64_t MOSuggestionCollectionView.viewModel.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_viewModel);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_viewModel, v3, 0, 0);
  return swift_retain(*v1);
}

uint64_t MOSuggestionCollectionView.viewModel.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_viewModel);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_release(v4);
}

uint64_t (*MOSuggestionCollectionView.viewModel.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_viewModel, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionCollectionView.controller.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_controller;
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_controller, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

void MOSuggestionCollectionView.controller.setter(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v4[24];

  v3 = v1 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_controller;
  swift_beginAccess(v3, v4, 1, 0);
  swift_unknownObjectWeakAssign(v3, a1);

}

void (*MOSuggestionCollectionView.controller.modify(_QWORD *a1))(id **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_controller;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  v3[3] = swift_unknownObjectWeakLoadStrong(v5);
  return MOSuggestionSheetInterstitialView.controller.modify;
}

uint64_t MOSuggestionCollectionView.presentationDelegate.getter()
{
  return MOSuggestionSheetViewController.presentationDelegate.getter(&OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_presentationDelegate);
}

uint64_t MOSuggestionCollectionView.presentationDelegate.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionSheetViewController.presentationDelegate.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_presentationDelegate);
}

uint64_t (*MOSuggestionCollectionView.presentationDelegate.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_presentationDelegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return MOSuggestionSheetViewController.presentationDelegate.modify;
}

uint64_t MOSuggestionCollectionView.dialogDelegate.getter()
{
  return MOSuggestionSheetViewController.presentationDelegate.getter(&OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_dialogDelegate);
}

uint64_t MOSuggestionCollectionView.dialogDelegate.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionSheetViewController.presentationDelegate.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_dialogDelegate);
}

uint64_t (*MOSuggestionCollectionView.dialogDelegate.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_dialogDelegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return MOSuggestionSheetViewController.presentationDelegate.modify;
}

uint64_t MOSuggestionCollectionView.segmentedVisibilityDelegate.getter()
{
  return MOSuggestionSheetViewController.presentationDelegate.getter(&OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_segmentedVisibilityDelegate);
}

uint64_t MOSuggestionCollectionView.segmentedVisibilityDelegate.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionSheetViewController.presentationDelegate.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_segmentedVisibilityDelegate);
}

uint64_t (*MOSuggestionCollectionView.segmentedVisibilityDelegate.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_segmentedVisibilityDelegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return MOSuggestionSheetViewController.presentationDelegate.modify;
}

uint64_t MOSuggestionCollectionView.newEntryHeaderDelegate.getter()
{
  return MOSuggestionSheetViewController.presentationDelegate.getter(&OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_newEntryHeaderDelegate);
}

uint64_t MOSuggestionCollectionView.newEntryHeaderDelegate.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionSheetViewController.presentationDelegate.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_newEntryHeaderDelegate);
}

uint64_t (*MOSuggestionCollectionView.newEntryHeaderDelegate.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_newEntryHeaderDelegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return MOSuggestionSheetViewController.presentationDelegate.modify;
}

void *MOSuggestionCollectionView.protectedContentShield.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_protectedContentShield);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_protectedContentShield, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void MOSuggestionCollectionView.protectedContentShield.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_protectedContentShield);
}

uint64_t (*MOSuggestionCollectionView.protectedContentShield.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_protectedContentShield, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void MOSuggestionCollectionView.newEntryHeaderHeight(isPublicUI:)()
{
  void *v0;
  void *v1;
  double Width;
  NSString v3;
  uint64_t v4;
  uint64_t inited;
  void *v6;
  NSString *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  unint64_t v12;
  Class isa;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double Height;
  id v23;
  id v24;
  id v25;
  id v26;
  double v27;
  double v28;
  double v29;
  id v30;
  double v31;
  id v32;
  id v33;
  id v34;
  id v35;
  double v36;
  double v37;
  _BYTE v38[72];
  CGRect v39;
  CGRect v40;
  CGRect v41;

  v1 = v0;
  if (one-time initialization token for HEADER_LABEL != -1)
    swift_once(&one-time initialization token for HEADER_LABEL, one-time initialization function for HEADER_LABEL);
  objc_msgSend(v0, "bounds");
  Width = CGRectGetWidth(v39);
  v3 = String._bridgeToObjectiveC()();
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(NSAttributedStringKey, Any)>);
  inited = swift_initStackObject(v4, v38);
  *(_OWORD *)(inited + 16) = xmmword_10019ED20;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v6 = (void *)objc_opt_self(UIFont);
  v7 = NSFontAttributeName;
  v8 = objc_msgSend(v6, "preferredFontForTextStyle:", UIFontTextStyleTitle3);
  v9 = objc_msgSend(v8, "fontDescriptor");
  v10 = objc_msgSend(v9, "fontDescriptorWithSymbolicTraits:", 2);

  if (!v10)
    goto LABEL_13;
  v11 = objc_msgSend(v6, "fontWithDescriptor:size:", v10, 0.0);

  *(_QWORD *)(inited + 64) = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIFont, UIFont_ptr);
  *(_QWORD *)(inited + 40) = v11;
  v12 = specialized Dictionary.init(dictionaryLiteral:)(inited);
  type metadata accessor for NSAttributedStringKey(0);
  lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey, (uint64_t (*)(uint64_t))type metadata accessor for NSAttributedStringKey, (uint64_t)&protocol conformance descriptor for NSAttributedStringKey);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v12);
  objc_msgSend(v3, "boundingRectWithSize:options:attributes:context:", 1, isa, 0, Width + -30.0, 3.40282347e38);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v21 = v20;

  v40.origin.x = v15;
  v40.origin.y = v17;
  v40.size.width = v19;
  v40.size.height = v21;
  Height = CGRectGetHeight(v40);
  v23 = objc_msgSend(v6, "preferredFontForTextStyle:", UIFontTextStyleTitle3);
  v24 = objc_msgSend(v23, "fontDescriptor");
  v25 = objc_msgSend(v24, "fontDescriptorWithSymbolicTraits:", 2);

  if (!v25)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v26 = objc_msgSend(v6, "fontWithDescriptor:size:", v25, 0.0);

  objc_msgSend(v26, "lineHeight");
  v28 = v27;

  v29 = ceil(Height / v28);
  if ((~*(_QWORD *)&v29 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v29 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v29 >= 9.22337204e18)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v30 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v1, "frame");
  v31 = CGRectGetWidth(v41);
  v32 = objc_msgSend(v6, "preferredFontForTextStyle:", UIFontTextStyleTitle3);
  v33 = objc_msgSend(v32, "fontDescriptor");
  v34 = objc_msgSend(v33, "fontDescriptorWithSymbolicTraits:", 2);

  if (v34)
  {
    v35 = objc_msgSend(v6, "fontWithDescriptor:size:", v34, 0.0);

    objc_msgSend(v35, "pointSize");
    v37 = v36;

    specialized UILabel.estimatedHeight(forWidth:text:ofSize:weight:)(0, 0xE000000000000000, v31, v37, UIFontWeightBold);
    return;
  }
LABEL_15:
  __break(1u);
}

uint64_t MOSuggestionCollectionView.init(controller:presentationDelegate:dialogDelegate:segmentedVisibilityDelegate:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return MOSuggestionCollectionView.__allocating_init(controller:presentationDelegate:dialogDelegate:segmentedVisibilityDelegate:options:)(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))specialized MOSuggestionCollectionView.init(controller:presentationDelegate:dialogDelegate:segmentedVisibilityDelegate:options:));
}

uint64_t MOSuggestionCollectionView.__allocating_init(controller:presentationDelegate:dialogDelegate:segmentedVisibilityDelegate:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;

  ObjectType = swift_getObjectType(a2);
  v17 = swift_getObjectType(a4);
  v18 = swift_getObjectType(a6);
  return a9(a1, a2, a4, a6, a8, v21, v17, ObjectType, v18, a5, a3, a7);
}

void closure #1 in variable initialization expression of MOSuggestionCollectionView.supportingLoadingTextLabel()
{
  id v0;
  id v1;
  Swift::String v2;
  Swift::String v3;
  void *object;
  NSString v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  Swift::String v11;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v1 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v11._countAndFlagsBits = 0xD000000000000037;
  v11._object = (void *)0x80000001001ABD20;
  v2._object = (void *)0x80000001001ABCF0;
  v2._countAndFlagsBits = 0xD000000000000028;
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v1, v3, v11)._object;

  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v0, "setText:", v5);

  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v6 = (void *)objc_opt_self(UIFont);
  v7 = objc_msgSend(v6, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  v8 = objc_msgSend(v7, "fontDescriptor");
  v9 = objc_msgSend(v8, "fontDescriptorWithSymbolicTraits:", 2);

  if (v9)
  {
    v10 = objc_msgSend(v6, "fontWithDescriptor:size:", v9, 0.0);

    objc_msgSend(v0, "setFont:", v10);
    objc_msgSend(v0, "setHidden:", 1);
    objc_msgSend(v0, "setNumberOfLines:", 0);
    objc_msgSend(v0, "setLineBreakMode:", 0);
    objc_msgSend(v0, "setTextAlignment:", 1);
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall MOSuggestionCollectionView.layoutSubviews()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_class *v9;
  id v10;
  uint64_t (*v11)(void);
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  id v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(__n128);
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  void *v31;
  void (*v32)(void *);
  id v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  void (*v37)(_QWORD *);
  _QWORD *v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t (*)(char, char), uint64_t, __n128);
  __n128 v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t (*)(uint64_t), uint64_t, __n128);
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t (*)(), uint64_t, __n128);
  __n128 v55;
  double y;
  double width;
  double height;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  id v64;
  double v65;
  void *v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  Class isa;
  uint64_t v80;
  uint64_t ObjCClassFromMetadata;
  NSString v82;
  uint64_t v83;
  uint64_t v84;
  NSString v85;
  uint64_t v86;
  uint64_t v87;
  NSString v88;
  uint64_t v89;
  uint64_t v90;
  NSString v91;
  uint64_t v92;
  uint64_t v93;
  NSString *v94;
  NSString v95;
  uint64_t v96;
  uint64_t v97;
  NSString *v98;
  NSString v99;
  uint64_t v100;
  uint64_t v101;
  NSString *v102;
  NSString v103;
  uint64_t v104;
  uint64_t v105;
  NSString *v106;
  NSString v107;
  uint64_t v108;
  uint64_t v109;
  NSString *v110;
  NSString v111;
  uint64_t v112;
  uint64_t v113;
  NSString *v114;
  NSString v115;
  uint64_t v116;
  uint64_t v117;
  NSString *v118;
  NSString v119;
  void (*v120)(id);
  id v121;
  void *v122;
  void *v123;
  uint64_t v124;
  char *v125;
  void *v126;
  id v127;
  id v128;
  __n128 v129;
  void *v130;
  uint64_t v131;
  void *v132;
  uint64_t v133;
  _QWORD *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  id v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  id v148;
  char *v149;
  _QWORD aBlock[3];
  objc_class *v151;
  uint64_t (*v152)();
  uint64_t v153;
  objc_super v154;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v141 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v149 = (char *)&v141 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (objc_class *)type metadata accessor for MOSuggestionCollectionView();
  v154.receiver = v0;
  v154.super_class = v9;
  v10 = objc_msgSendSuper2(&v154, "layoutSubviews");
  v11 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0xE0);
  v12 = (void *)((uint64_t (*)(id))v11)(v10);

  if (!v12)
  {
    v13 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x110))();
    if (v13)
    {
      v14 = (_QWORD *)v13;
      v143 = v7;
      v144 = v6;
      v145 = v5;
      v146 = v3;
      v147 = v2;
      v15 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewFlowLayout), "init");
      objc_msgSend(v15, "setScrollDirection:", 0);
      objc_msgSend(v15, "setMinimumLineSpacing:", 6.0);
      objc_msgSend(v15, "setMinimumInteritemSpacing:", 4.0);
      objc_msgSend(v1, "safeAreaInsets");
      v148 = v15;
      v16 = objc_msgSend(v15, "setSectionInset:", 0.0, 13.0);
      v17 = (*(uint64_t (**)(id))((swift_isaMask & *v14) + 0x1B8))(v16);
      v19 = v18;
      v20 = *(uint64_t (**)(void))((swift_isaMask & *v14) + 0x1D0);
      v142 = v14;
      v21 = v20();
      v23 = v22;
      v24 = type metadata accessor for MOSuggestionCollectionViewModel();
      swift_allocObject(v24, 219, 7);
      v25 = MOSuggestionCollectionViewModel.init(clientDetails:clientId:)(v17 & 1, v19, v21, v23);
      v26 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x100))(v25);
      v27 = *(uint64_t (**)(__n128))((swift_isaMask & *v1) + 0xF8);
      v28 = ((uint64_t (*)(uint64_t))v27)(v26);
      if (v28)
      {
        v30 = v28;
        v31 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_options);
        v32 = *(void (**)(void *))(*(_QWORD *)v28 + 456);
        v33 = v31;
        v32(v31);
        v29 = swift_release(v30);
      }
      v34 = v27(v29);
      if (v34)
      {
        v36 = v34;
        v151 = v9;
        v152 = (uint64_t (*)())&protocol witness table for MOSuggestionCollectionView;
        aBlock[0] = v1;
        v37 = *(void (**)(_QWORD *))(*(_QWORD *)v34 + 408);
        v38 = v1;
        v37(aBlock);
        v35 = swift_release(v36);
      }
      v39 = v27(v35);
      if (v39)
      {
        v41 = v39;
        v42 = swift_allocObject(&unk_1001E9978, 24, 7);
        swift_unknownObjectWeakInit(v42 + 16);
        v43 = *(void (**)(uint64_t (*)(char, char), uint64_t, __n128))(*(_QWORD *)v41 + 336);
        v44 = swift_retain(v42);
        v43(partial apply for closure #1 in MOSuggestionCollectionView.layoutSubviews(), v42, v44);
        swift_release(v41);
        v40 = swift_release(v42);
      }
      v45 = v27(v40);
      if (v45)
      {
        v47 = v45;
        v48 = swift_allocObject(&unk_1001E9978, 24, 7);
        swift_unknownObjectWeakInit(v48 + 16);
        v49 = *(void (**)(uint64_t (*)(uint64_t), uint64_t, __n128))(*(_QWORD *)v47 + 360);
        v50 = swift_retain(v48);
        v49(partial apply for closure #2 in MOSuggestionCollectionView.layoutSubviews(), v48, v50);
        swift_release(v47);
        v46 = swift_release(v48);
      }
      v51 = v27(v46);
      if (v51)
      {
        v52 = v51;
        v53 = swift_allocObject(&unk_1001E9978, 24, 7);
        swift_unknownObjectWeakInit(v53 + 16);
        v54 = *(void (**)(uint64_t (*)(), uint64_t, __n128))(*(_QWORD *)v52 + 384);
        v55 = swift_retain(v53);
        v54(partial apply for closure #3 in MOSuggestionCollectionView.layoutSubviews(), v53, v55);
        swift_release(v52);
        swift_release(v53);
      }
      y = CGRectZero.origin.y;
      width = CGRectZero.size.width;
      height = CGRectZero.size.height;
      v59 = objc_allocWithZone((Class)UICollectionView);
      v60 = objc_msgSend(v59, "initWithFrame:collectionViewLayout:", v148, CGRectZero.origin.x, y, width, height);
      objc_msgSend(v60, "setDelegate:", v1);
      objc_msgSend(v60, "setDataSource:", v1);
      objc_msgSend(v60, "setShowsVerticalScrollIndicator:", 0);
      objc_msgSend(v1, "addSubview:", v60);
      objc_msgSend(v60, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v61 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      v62 = swift_allocObject(v61, 64, 7);
      *(_OWORD *)(v62 + 16) = xmmword_10019ED40;
      v63 = objc_msgSend(v60, "topAnchor");
      v64 = objc_msgSend(v1, "topAnchor");
      if (objc_msgSend(*(id *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_options), "showBlankEntryButton"))v65 = 0.0;
      else
        v65 = 10.0;
      v66 = (void *)objc_opt_self(NSLayoutConstraint);
      v67 = objc_msgSend(v63, "constraintEqualToAnchor:constant:", v64, v65);

      *(_QWORD *)(v62 + 32) = v67;
      v68 = objc_msgSend(v60, "bottomAnchor");
      v69 = objc_msgSend(v1, "bottomAnchor");
      v70 = objc_msgSend(v68, "constraintEqualToAnchor:", v69);

      *(_QWORD *)(v62 + 40) = v70;
      v71 = objc_msgSend(v60, "leadingAnchor");
      v72 = objc_msgSend(v1, "leadingAnchor");
      v73 = objc_msgSend(v71, "constraintEqualToAnchor:", v72);

      *(_QWORD *)(v62 + 48) = v73;
      v74 = objc_msgSend(v60, "trailingAnchor");
      v75 = objc_msgSend(v1, "trailingAnchor");
      v76 = objc_msgSend(v74, "constraintEqualToAnchor:", v75);

      *(_QWORD *)(v62 + 56) = v76;
      aBlock[0] = v62;
      specialized Array._endMutation()(v77);
      v78 = aBlock[0];
      type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint, NSLayoutConstraint_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v66, "activateConstraints:", isa, swift_bridgeObjectRelease(v78).n128_f64[0]);

      v80 = type metadata accessor for MOSuggestionCollectionViewCell();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v80);
      v82 = String._bridgeToObjectiveC()();
      objc_msgSend(v60, "registerClass:forCellWithReuseIdentifier:", ObjCClassFromMetadata, v82);

      v83 = type metadata accessor for MOSuggestionCollectionViewSingleAssetCell();
      v84 = swift_getObjCClassFromMetadata(v83);
      v85 = String._bridgeToObjectiveC()();
      objc_msgSend(v60, "registerClass:forCellWithReuseIdentifier:", v84, v85);

      v86 = type metadata accessor for MOSuggestionCollectionViewListCell();
      v87 = swift_getObjCClassFromMetadata(v86);
      v88 = String._bridgeToObjectiveC()();
      objc_msgSend(v60, "registerClass:forCellWithReuseIdentifier:", v87, v88);

      v89 = type metadata accessor for MOSuggestionEvergreenCollectionViewCell();
      v90 = swift_getObjCClassFromMetadata(v89);
      v91 = String._bridgeToObjectiveC()();
      objc_msgSend(v60, "registerClass:forCellWithReuseIdentifier:", v90, v91);

      v92 = type metadata accessor for MOSuggestionCollectionViewDateSectionHeaderView(0);
      v93 = swift_getObjCClassFromMetadata(v92);
      v94 = UICollectionElementKindSectionHeader;
      v95 = String._bridgeToObjectiveC()();
      objc_msgSend(v60, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:", v93, v94, v95);

      v96 = type metadata accessor for MOSuggestionPrivacyTipCell();
      v97 = swift_getObjCClassFromMetadata(v96);
      v98 = v94;
      v99 = String._bridgeToObjectiveC()();
      objc_msgSend(v60, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:", v97, v98, v99);

      v100 = type metadata accessor for MOSuggestionSheetOnboardingTipCell();
      v101 = swift_getObjCClassFromMetadata(v100);
      v102 = v98;
      v103 = String._bridgeToObjectiveC()();
      objc_msgSend(v60, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:", v101, v102, v103);

      v104 = type metadata accessor for MOSuggestionSheetStateOfMindTipCell();
      v105 = swift_getObjCClassFromMetadata(v104);
      v106 = v102;
      v107 = String._bridgeToObjectiveC()();
      objc_msgSend(v60, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:", v105, v106, v107);

      v108 = type metadata accessor for MOSuggestionCollectionViewBlankEntrySectionHeaderView();
      v109 = swift_getObjCClassFromMetadata(v108);
      v110 = v106;
      v111 = String._bridgeToObjectiveC()();
      objc_msgSend(v60, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:", v109, v110, v111);

      v112 = type metadata accessor for MOSuggestionCollectionViewOnboardingSectionHeaderView();
      v113 = swift_getObjCClassFromMetadata(v112);
      v114 = v110;
      v115 = String._bridgeToObjectiveC()();
      objc_msgSend(v60, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:", v113, v114, v115);

      v116 = type metadata accessor for MOSuggestionShowMoreFooterView();
      v117 = swift_getObjCClassFromMetadata(v116);
      v118 = UICollectionElementKindSectionFooter;
      v119 = String._bridgeToObjectiveC()();
      objc_msgSend(v60, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:", v117, v118, v119);

      v120 = *(void (**)(id))((swift_isaMask & *v1) + 0xE8);
      v121 = v60;
      v120(v60);
      MOSuggestionCollectionView.setupProtectedContentBanner()();
      v122 = (void *)v11();
      if (v122)
      {
        v123 = v122;
        objc_msgSend(v122, "setClipsToBounds:", 0);

      }
      v124 = ((uint64_t (*)(id))v11)(objc_msgSend(v1, "setClipsToBounds:", 0));
      v125 = v145;
      if (v124)
      {
        v126 = (void *)v124;
        v127 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
        objc_msgSend(v126, "setBackgroundColor:", v127);

      }
      v128 = v148;
      objc_msgSend(v148, "invalidateLayout");
      type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue, OS_dispatch_queue_ptr);
      v130 = (void *)static OS_dispatch_queue.main.getter(v129);
      v131 = swift_allocObject(&unk_1001E99A0, 24, 7);
      *(_QWORD *)(v131 + 16) = v1;
      v152 = partial apply for closure #4 in MOSuggestionCollectionView.layoutSubviews();
      v153 = v131;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
      v151 = (objc_class *)&block_descriptor_24;
      v132 = _Block_copy(aBlock);
      v133 = v153;
      v134 = v1;
      swift_release(v133);
      v135 = v149;
      static DispatchQoS.unspecified.getter(v136);
      aBlock[0] = _swiftEmptyArrayStorage;
      v137 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v138 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
      v139 = lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
      v140 = v147;
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v138, v139, v147, v137);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v135, v125, v132);
      _Block_release(v132);

      (*(void (**)(char *, uint64_t))(v146 + 8))(v125, v140);
      (*(void (**)(char *, uint64_t))(v143 + 8))(v135, v144);
    }
  }
}

uint64_t closure #1 in MOSuggestionCollectionView.layoutSubviews()(char a1, char a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[5];
  uint64_t v25;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v23 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue, OS_dispatch_queue_ptr);
  v13 = (void *)static OS_dispatch_queue.main.getter(v12);
  v14 = swift_allocObject(&unk_1001E9E90, 26, 7);
  *(_QWORD *)(v14 + 16) = a3;
  *(_BYTE *)(v14 + 24) = a1;
  *(_BYTE *)(v14 + 25) = a2;
  aBlock[4] = partial apply for closure #1 in closure #1 in MOSuggestionCollectionView.layoutSubviews();
  v25 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_106_0;
  v15 = _Block_copy(aBlock);
  v16 = v25;
  swift_retain(a3);
  swift_release(v16);
  static DispatchQoS.unspecified.getter(v17);
  aBlock[0] = _swiftEmptyArrayStorage;
  v18 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  v20 = lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v6, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v22);
}

void closure #1 in closure #1 in MOSuggestionCollectionView.layoutSubviews()(uint64_t a1, char a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *Strong;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  void *v30;
  void *v31;
  _QWORD *v32;
  void *v33;
  uint64_t v34;
  char v35;
  id v36;
  unsigned int v37;
  _QWORD *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t ObjectType;
  _QWORD *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  void *v54;
  _QWORD *v55;
  void *v56;
  char *v57;
  double v58;
  _QWORD *v59;
  void *v60;
  uint64_t v61;
  void *v62;
  id v63;
  id v64;
  void *v65;
  void (*v66)(char *, char *, uint64_t);
  char *v67;
  uint64_t v68;
  char *v69;
  id v70;
  void *v71;
  _QWORD *v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  NSObject *v90;
  os_log_type_t v91;
  uint8_t *v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  __n128 v97;
  void (*v98)(char *, uint64_t, __n128);
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  NSObject *v103;
  os_log_type_t v104;
  uint8_t *v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  __n128 v110;
  void (*v111)(char *, uint64_t, __n128);
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  uint64_t v124;
  char v125;
  uint64_t v126;
  id v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  _BYTE v141[24];
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _BYTE v145[24];
  uint64_t v146;
  uint64_t v147;
  char v148[24];
  char v149[24];
  char v150[24];
  char v151[24];
  uint64_t v152;
  char v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IndexPath?);
  __chkstk_darwin(v6);
  v134 = (char *)&v126 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  v135 = v8;
  v136 = v9;
  __chkstk_darwin(v8);
  v132 = (uint64_t)&v126 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
  __chkstk_darwin(v11);
  v13 = (char *)&v126 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for UUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v133 = (char *)&v126 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v130 = (char *)&v126 - v19;
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v126 - v21;
  __chkstk_darwin(v20);
  v137 = (char *)&v126 - v23;
  v24 = a1 + 16;
  swift_beginAccess(a1 + 16, v151, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(a1 + 16);
  if (!Strong)
    return;
  v26 = Strong;
  v27 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x158))();
  v128 = v28;

  v131 = v27;
  if (!v27)
    return;
  v129 = v14;
  swift_beginAccess(v24, v150, 0, 0);
  v29 = (_QWORD *)swift_unknownObjectWeakLoadStrong(v24);
  if (v29)
  {
    v30 = v29;
    v31 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v29) + 0xE0))();

    objc_msgSend(v31, "reloadData");
  }
  swift_beginAccess(v24, v149, 0, 0);
  v32 = (_QWORD *)swift_unknownObjectWeakLoadStrong(v24);
  if (v32)
  {
    v33 = v32;
    v34 = (*(uint64_t (**)(void))((swift_isaMask & *v32) + 0xF8))();

    if (v34)
    {
      v35 = (*(uint64_t (**)(void))(*(_QWORD *)v34 + 520))();
      swift_release(v34);
      if ((v35 & 1) == 0)
      {
        v36 = objc_msgSend((id)objc_opt_self(MOOnboardingManager), "sharedInstance");
        v37 = objc_msgSend(v36, "isOnboarded");

        if (v37)
        {
          swift_beginAccess(v24, &v139, 0, 0);
          v38 = (_QWORD *)swift_unknownObjectWeakLoadStrong(v24);
          if (v38)
          {
            v39 = v38;
            v40 = (*(uint64_t (**)(void))((swift_isaMask & *v38) + 0x158))();
            v42 = v41;

            if (v40)
            {
              ObjectType = swift_getObjectType(v40);
              (*(void (**)(uint64_t, uint64_t))(v42 + 16))(ObjectType, v42);
              swift_unknownObjectRelease(v40);
            }
          }
          swift_beginAccess(v24, &v138, 0, 0);
          v44 = (_QWORD *)swift_unknownObjectWeakLoadStrong(v24);
          if (v44)
          {
            v45 = v44;
            v46 = (*(uint64_t (**)(void))((swift_isaMask & *v44) + 0x170))();
            v48 = v47;

            if (v46)
            {
              v49 = swift_getObjectType(v46);
              (*(void (**)(_QWORD, uint64_t, uint64_t))(v48 + 8))(0, v49, v48);
              swift_unknownObjectRelease(v46);
            }
          }
        }
      }
    }
  }
  if ((a2 & 1) != 0)
  {
    swift_beginAccess(v24, v141, 0, 0);
    v50 = (_QWORD *)swift_unknownObjectWeakLoadStrong(v24);
    v51 = v129;
    v52 = v15;
    if (v50)
    {
      v53 = v50;
      v54 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v50) + 0xE0))();

      if (v54)
      {
        objc_msgSend(v54, "setContentOffset:animated:", 0, 0.0, 0.0);
LABEL_26:

      }
    }
  }
  else
  {
    v51 = v129;
    v52 = v15;
    if ((a3 & 1) != 0)
    {
      swift_beginAccess(v24, v141, 0, 0);
      v55 = (_QWORD *)swift_unknownObjectWeakLoadStrong(v24);
      if (v55)
      {
        v56 = v55;
        v54 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v55) + 0xE0))();

        if (v54)
        {
          swift_beginAccess(v24, &v140, 0, 0);
          v57 = (char *)swift_unknownObjectWeakLoadStrong(v24);
          if (v57)
          {
            v58 = *(double *)&v57[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_headerOffsetHeight];

          }
          else
          {
            v58 = 0.0;
          }
          objc_msgSend(v54, "setContentOffset:animated:", 0, 0.0, v58);
          goto LABEL_26;
        }
      }
    }
  }
  swift_beginAccess(v24, v148, 0, 0);
  v59 = (_QWORD *)swift_unknownObjectWeakLoadStrong(v24);
  if (v59)
  {
    v60 = v59;
    (*(void (**)(void))((swift_isaMask & *v59) + 0x240))();

  }
  swift_beginAccess(v24, &v147, 0, 0);
  v61 = swift_unknownObjectWeakLoadStrong(v24);
  if (!v61)
  {
    swift_unknownObjectRelease(v131);
    return;
  }
  v62 = (void *)v61;
  v63 = *(id *)(v61 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_options);

  v64 = objc_msgSend(v63, "selectedSuggestionId");
  if (!v64)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56))(v13, 1, 1, v51);
    goto LABEL_48;
  }
  v65 = v64;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v64);

  v66 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
  v66(v13, v22, v51);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v13, 0, 1, v51);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v13, 1, v51) == 1)
  {
LABEL_48:
    swift_unknownObjectRelease(v131);

    outlined destroy of Any?((uint64_t)v13, &demangling cache variable for type metadata for UUID?);
    return;
  }
  v67 = v137;
  v66(v137, v13, v51);
  swift_beginAccess(v24, &v146, 0, 0);
  v68 = swift_unknownObjectWeakLoadStrong(v24);
  if (v68)
  {
    v69 = (char *)v68;
    v70 = MOSuggestionSheetOptions.copyWithoutSuggestionID.getter();
    v71 = *(void **)&v69[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_options];
    *(_QWORD *)&v69[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_options] = v70;

  }
  swift_beginAccess(v24, v145, 0, 0);
  v72 = (_QWORD *)swift_unknownObjectWeakLoadStrong(v24);
  v73 = v136;
  v127 = v63;
  if (!v72 || (v74 = v72, v75 = (*(uint64_t (**)(void))((swift_isaMask & *v72) + 0xF8))(), v74, !v75))
  {
    v76 = (uint64_t)v134;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v73 + 56))(v134, 1, 1, v135);
    goto LABEL_50;
  }
  v76 = (uint64_t)v134;
  (*(void (**)(char *))(*(_QWORD *)v75 + 672))(v67);
  v77 = swift_release(v75);
  v78 = v135;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v73 + 48))(v76, 1, v135, v77) == 1)
  {
LABEL_50:
    outlined destroy of Any?(v76, &demangling cache variable for type metadata for IndexPath?);
    goto LABEL_51;
  }
  v79 = v132;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 32))(v132, v76, v78);
  swift_beginAccess(v24, &v143, 0, 0);
  v80 = (_QWORD *)swift_unknownObjectWeakLoadStrong(v24);
  if (v80
    && (v81 = v80, v82 = (*(uint64_t (**)(void))((swift_isaMask & *v80) + 0xF8))(), v81, v82)
    && (v83 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v82 + 688))(v79), swift_release(v82), v83))
  {
    swift_beginAccess(v24, &v142, 0, 0);
    v84 = (_QWORD *)swift_unknownObjectWeakLoadStrong(v24);
    if (v84)
    {
      v85 = v84;
      v86 = (*(uint64_t (**)(void))((swift_isaMask & *v84) + 0xF8))();

      if (v86)
      {
        if (serverManager._clientConnections != (NSMutableDictionary *)-1)
          swift_once(&serverManager._clientConnections, one-time initialization function for shared);
        v87 = type metadata accessor for Logger(0);
        __swift_project_value_buffer(v87, (uint64_t)static MOAngelLogger.shared);
        v88 = v130;
        v89 = (*(uint64_t (**)(char *, char *, uint64_t))(v52 + 16))(v130, v67, v51);
        v90 = Logger.logObject.getter(v89);
        v91 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v90, v91))
        {
          v92 = (uint8_t *)swift_slowAlloc(12, -1);
          v93 = swift_slowAlloc(32, -1);
          v134 = (char *)v93;
          v152 = v93;
          *(_DWORD *)v92 = 136315138;
          v133 = (char *)(v92 + 4);
          v94 = UUID.uuidString.getter(v93);
          v96 = v95;
          v144 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v94, v95, &v152);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v144, v145, v133);
          v97 = swift_bridgeObjectRelease(v96);
          v98 = *(void (**)(char *, uint64_t, __n128))(v52 + 8);
          v98(v130, v129, v97);
          _os_log_impl((void *)&_mh_execute_header, v90, v91, "[HandleReviewSuggestion] Found suggestionID=%s, presenting Interstitial", v92, 0xCu);
          v99 = v134;
          swift_arrayDestroy(v134, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v99, -1, -1);
          swift_slowDealloc(v92, -1, -1);
        }
        else
        {
          v118 = v51;
          v98 = *(void (**)(char *, uint64_t, __n128))(v52 + 8);
          ((void (*)(char *, uint64_t))v98)(v88, v118);
        }

        swift_beginAccess(v24, &v152, 0, 0);
        v119 = swift_unknownObjectWeakLoadStrong(v24);
        v120 = v137;
        v121 = v132;
        if (v119)
        {
          v122 = (void *)v119;
          MOSuggestionCollectionView.presentInterstitialFor(cellViewModel:indexPath:fromNotification:)(v83, v132, 1);

        }
        v123 = v131;
        v124 = swift_getObjectType(v131);
        v125 = (*(uint64_t (**)(void))(*(_QWORD *)v86 + 424))();
        (*(void (**)(_QWORD, uint64_t))(v128 + 8))(v125 & 1, v124);
        swift_unknownObjectRelease(v123);
        swift_release(v86);
        swift_release(v83);

        (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v121, v135);
        ((void (*)(char *, uint64_t))v98)(v120, v129);
        return;
      }
    }
    swift_release(v83);
    (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v79, v78);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v79, v78);
  }
LABEL_51:
  v100 = v133;
  if (serverManager._clientConnections != (NSMutableDictionary *)-1)
    swift_once(&serverManager._clientConnections, one-time initialization function for shared);
  v101 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v101, (uint64_t)static MOAngelLogger.shared);
  v102 = (*(uint64_t (**)(char *, char *, uint64_t))(v52 + 16))(v100, v67, v51);
  v103 = Logger.logObject.getter(v102);
  v104 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v103, v104))
  {
    v105 = (uint8_t *)swift_slowAlloc(12, -1);
    v106 = swift_slowAlloc(32, -1);
    v152 = v106;
    *(_DWORD *)v105 = 136315138;
    v107 = UUID.uuidString.getter(v106);
    v109 = v108;
    v144 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v107, v108, &v152);
    v51 = v129;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v144, v145, v105 + 4);
    v110 = swift_bridgeObjectRelease(v109);
    v111 = *(void (**)(char *, uint64_t, __n128))(v52 + 8);
    v111(v100, v51, v110);
    _os_log_impl((void *)&_mh_execute_header, v103, v104, "[HandleReviewSuggestion] Did not find suggestionID=%s, not presenting interstitial", v105, 0xCu);
    swift_arrayDestroy(v106, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v106, -1, -1);
    swift_slowDealloc(v105, -1, -1);
  }
  else
  {
    v111 = *(void (**)(char *, uint64_t, __n128))(v52 + 8);
    ((void (*)(char *, uint64_t))v111)(v100, v51);
  }

  v112 = v131;
  v113 = v137;
  v115 = UUID.uuidString.getter(v114);
  v117 = v116;
  v152 = 6;
  v153 = 0;
  v154 = 0;
  v155 = v115;
  v156 = v116;
  MONotificationAnalytics.NotificationEngagementEvent.send()();
  swift_unknownObjectRelease(v112);
  swift_bridgeObjectRelease(v117);

  ((void (*)(char *, uint64_t))v111)(v113, v51);
}

id MOSuggestionSheetOptions.copyWithoutSuggestionID.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  double v7;
  double v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  Class isa;
  id v16;
  uint64_t v18;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
  __chkstk_darwin(v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(v1, "showCancelButton");
  v6 = objc_msgSend(v1, "showBlankEntryButton");
  objc_msgSend(v1, "peekDetentRatio");
  v8 = v7;
  v9 = objc_msgSend(v1, "presentFullScreen");
  v10 = objc_msgSend(v1, "presentationIsAnimated");
  v11 = objc_msgSend(v1, "selectedTabIsRecommended");
  v12 = type metadata accessor for UUID(0);
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v4, 1, 1, v12);
  v14 = objc_msgSend(v1, "contentOptions");
  isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v4, 1, v12) != 1)
  {
    isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v12);
  }
  v16 = objc_msgSend(objc_allocWithZone((Class)MOSuggestionSheetOptions), "initWithShowCancelButton:showBlankEntryButton:peekDetentRatio:presentFullScreen:presentationIsAnimated:selectedTabIsRecommended:selectedSuggestionId:contentOptions:", v5, v6, v9, v10, v11, isa, v8, v14);

  return v16;
}

void MOSuggestionCollectionView.presentInterstitialFor(cellViewModel:indexPath:fromNotification:)(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  id v23;
  void *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  BOOL v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  Swift::String v37;
  void *object;
  __n128 v39;
  unint64_t v40;
  uint64_t ObjectType;
  uint64_t v42[2];
  uint64_t v43;
  unint64_t v44;

  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0x128))(v9);
  if (v12)
  {
    v14 = v12;
    v42[0] = v13;
    v15 = (*(uint64_t (**)(void))((swift_isaMask & *v3) + 0x110))();
    if (v15)
    {
      v16 = (void *)v15;
      v17 = swift_allocObject(&unk_1001E99F0, 24, 7);
      *(_QWORD *)(v17 + 16) = v3;
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a2, v7);
      objc_allocWithZone((Class)type metadata accessor for MOSuggestionSheetInterstitialView(0));
      swift_retain(a1);
      v18 = v3;
      v19 = v16;
      swift_unknownObjectRetain();
      v20 = v42[0];
      v21 = specialized MOSuggestionSheetInterstitialView.init(controller:cellViewModel:presentationDelegate:selectedSuggestion:indexPath:fromNotification:)(v19, a1, v14, v42[0], (uint64_t)partial apply for implicit closure #2 in implicit closure #1 in MOSuggestionCollectionView.presentInterstitialFor(cellViewModel:indexPath:fromNotification:), v17, (uint64_t)v11, a3 & 1);

      swift_release(a1);
      swift_unknownObjectRelease(v14);
      swift_release(v17);
      v22 = v21;
      v23 = objc_msgSend(v22, "view");
      if (v23)
      {
        v24 = v23;
        objc_msgSend(v23, "bounds");
        v26 = v25;
        v28 = v27;

        v29 = specialized static MOAngelRootViewController.isLandscape.getter();
        v30 = *(double *)&static MOAngelRootViewController.LANDSCAPE_WIDTH;
        if (!v29)
          v30 = v26;
        objc_msgSend(v22, "setPreferredContentSize:", v30, v28);

        v31 = (*(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)v22) + 0x320))();
        v32 = *(_QWORD *)(a1 + 16);
        v43 = 0;
        v44 = 0xE000000000000000;
        v33 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v18) + 0xF8))(v31);
        if (v33)
        {
          v34 = v33;
          v35 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v33 + 424))(v33);
          swift_release(v34);
          v36 = v35 & 1;
        }
        else
        {
          v36 = -1;
        }
        v42[1] = v36;
        v37._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
        object = v37._object;
        String.append(_:)(v37);
        v39 = swift_bridgeObjectRelease(object);
        v40 = v44;
        (*(void (**)(uint64_t, uint64_t, unint64_t, __n128))((swift_isaMask & *v19) + 0x178))(v32, v43, v44, v39);
        swift_bridgeObjectRelease(v40);
        ObjectType = swift_getObjectType(v14);
        (*(void (**)(char *, _QWORD, _QWORD, uint64_t, uint64_t))(v20 + 8))(v22, 0, 0, ObjectType, v20);
        swift_unknownObjectRelease(v14);

      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      swift_unknownObjectRelease(v14);
    }
  }
}

uint64_t closure #2 in MOSuggestionCollectionView.layoutSubviews()(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __n128 v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[5];
  uint64_t v31;

  v26 = a2;
  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v29 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v27 = *(_QWORD *)(v6 - 8);
  v28 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue, OS_dispatch_queue_ptr);
  v14 = (void *)static OS_dispatch_queue.main.getter(v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  v15 = *(unsigned __int8 *)(v10 + 80);
  v16 = (v15 + 24) & ~v15;
  v17 = swift_allocObject(&unk_1001E9E40, v16 + v11, v15 | 7);
  v18 = v26;
  *(_QWORD *)(v17 + 16) = v26;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v17 + v16, v12, v9);
  aBlock[4] = partial apply for closure #1 in closure #2 in MOSuggestionCollectionView.layoutSubviews();
  v31 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_100;
  v19 = _Block_copy(aBlock);
  v20 = v31;
  swift_retain(v18);
  swift_release(v20);
  static DispatchQoS.unspecified.getter(v21);
  aBlock[0] = _swiftEmptyArrayStorage;
  v22 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  v24 = lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v23, v24, v3, v22);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v5, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v8, v28);
}

void closure #1 in closure #2 in MOSuggestionCollectionView.layoutSubviews()(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *Strong;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Class isa;
  _BYTE v14[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v14, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0xE0))();

    if (v6)
    {
      v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<IndexPath>);
      v8 = type metadata accessor for IndexPath(0);
      v9 = *(_QWORD *)(v8 - 8);
      v10 = *(unsigned __int8 *)(v9 + 80);
      v11 = (v10 + 32) & ~v10;
      v12 = swift_allocObject(v7, v11 + *(_QWORD *)(v9 + 72), v10 | 7);
      *(_OWORD *)(v12 + 16) = xmmword_10019ED20;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v12 + v11, a2, v8);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v6, "reconfigureItemsAtIndexPaths:", isa, swift_bridgeObjectRelease(v12).n128_f64[0]);

    }
  }
}

uint64_t closure #3 in MOSuggestionCollectionView.layoutSubviews()(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __n128 v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v19 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue, OS_dispatch_queue_ptr);
  v10 = (void *)static OS_dispatch_queue.main.getter(v9);
  aBlock[4] = partial apply for closure #1 in closure #3 in MOSuggestionCollectionView.layoutSubviews();
  v21 = a1;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_94;
  v11 = _Block_copy(aBlock);
  v12 = v21;
  swift_retain(a1);
  swift_release(v12);
  static DispatchQoS.unspecified.getter(v13);
  aBlock[0] = _swiftEmptyArrayStorage;
  v14 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  v16 = lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v15, v16, v2, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v11);
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void closure #1 in closure #3 in MOSuggestionCollectionView.layoutSubviews()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *Strong;
  void *v3;
  uint64_t v4;
  char v5;
  _QWORD *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  _QWORD *v24;
  void *v25;
  uint64_t v26;
  char v27;
  char v28;
  _QWORD *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  void *v42;
  id v43;
  _QWORD *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t ObjectType;
  uint64_t v49;
  _BYTE v50[24];
  _BYTE v51[24];
  _BYTE v52[24];
  _BYTE v53[24];
  _BYTE v54[24];
  _BYTE v55[24];
  _BYTE v56[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v56, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong
    && (v3 = Strong, v4 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0xF8))(), v3, v4)
    && (v5 = (*(uint64_t (**)(void))(*(_QWORD *)v4 + 576))(), swift_release(v4), (v5 & 1) == 0))
  {
    swift_beginAccess(v1, v55, 0, 0);
    v35 = swift_unknownObjectWeakLoadStrong(v1);
    if (v35)
    {
      v36 = (void *)v35;
      v37 = *(id *)(v35 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_activityIndicator);

      objc_msgSend(v37, "stopAnimating");
    }
    swift_beginAccess(v1, v54, 0, 0);
    v38 = swift_unknownObjectWeakLoadStrong(v1);
    if (v38)
    {
      v39 = (void *)v38;
      v40 = *(id *)(v38 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_activityIndicator);

      objc_msgSend(v40, "setHidden:", 1);
    }
    swift_beginAccess(v1, v53, 0, 0);
    v41 = swift_unknownObjectWeakLoadStrong(v1);
    if (v41)
    {
      v42 = (void *)v41;
      v43 = objc_retain(*(id *)(v41
                              + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_supportingLoadingTextLabel));

      objc_msgSend(v43, "setHidden:", 1);
    }
    swift_beginAccess(v1, v52, 0, 0);
    v44 = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1);
    if (v44)
    {
      v45 = v44;
      v31 = (*(uint64_t (**)(void))((swift_isaMask & *v44) + 0x170))();
      v47 = v46;

      if (v31)
      {
        ObjectType = swift_getObjectType(v31);
        (*(void (**)(_QWORD, uint64_t, uint64_t))(v47 + 8))(0, ObjectType, v47);
        goto LABEL_31;
      }
    }
  }
  else
  {
    swift_beginAccess(v1, v55, 0, 0);
    v6 = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1);
    if (v6)
    {
      v7 = v6;
      v8 = (*(uint64_t (**)(void))((swift_isaMask & *v6) + 0x158))();
      v10 = v9;

      if (v8)
      {
        v11 = swift_getObjectType(v8);
        (*(void (**)(uint64_t, uint64_t))(v10 + 24))(v11, v10);
        swift_unknownObjectRelease(v8);
      }
    }
    swift_beginAccess(v1, v54, 0, 0);
    v12 = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1);
    if (v12)
    {
      v13 = v12;
      v14 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v12) + 0xE0))();

      objc_msgSend(v14, "reloadData");
    }
    swift_beginAccess(v1, v53, 0, 0);
    v15 = swift_unknownObjectWeakLoadStrong(v1);
    if (v15)
    {
      v16 = (void *)v15;
      v17 = *(id *)(v15 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_activityIndicator);

      objc_msgSend(v17, "startAnimating");
    }
    swift_beginAccess(v1, v52, 0, 0);
    v18 = swift_unknownObjectWeakLoadStrong(v1);
    if (v18)
    {
      v19 = (void *)v18;
      v20 = *(id *)(v18 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_activityIndicator);

      objc_msgSend(v20, "setHidden:", 0);
    }
    swift_beginAccess(v1, v51, 0, 0);
    v21 = swift_unknownObjectWeakLoadStrong(v1);
    if (v21)
    {
      v22 = (void *)v21;
      v23 = objc_retain(*(id *)(v21
                              + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_supportingLoadingTextLabel));

      swift_beginAccess(v1, v50, 0, 0);
      v24 = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1);
      if (v24 && (v25 = v24, v26 = (*(uint64_t (**)(void))((swift_isaMask & *v24) + 0xF8))(), v25, v26))
      {
        v27 = (*(uint64_t (**)(void))(*(_QWORD *)v26 + 632))();
        swift_release(v26);
        v28 = v27 ^ 1;
      }
      else
      {
        v28 = 1;
      }
      objc_msgSend(v23, "setHidden:", v28 & 1);

    }
    swift_beginAccess(v1, &v49, 0, 0);
    v29 = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1);
    if (v29)
    {
      v30 = v29;
      v31 = (*(uint64_t (**)(void))((swift_isaMask & *v29) + 0x170))();
      v33 = v32;

      if (v31)
      {
        v34 = swift_getObjectType(v31);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 8))(1, v34, v33);
LABEL_31:
        swift_unknownObjectRelease(v31);
      }
    }
  }
}

uint64_t closure #4 in MOSuggestionCollectionView.layoutSubviews()(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;

  result = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xF8))();
  if (result)
  {
    v2 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 720))(result);
    return swift_release(v2);
  }
  return result;
}

Swift::Void __swiftcall MOSuggestionCollectionView.didChangeSegmentedControlValue(segmentType:scrollToTop:scrollToHeaderOffset:)(MomentsUIService::SegmentType segmentType, Swift::Bool scrollToTop, Swift::Bool scrollToHeaderOffset)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  objc_class *v14;
  uint64_t v15;
  unint64_t v16;
  NSBundle v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = v3;
  v7 = segmentType & 1;
  if (serverManager._clientConnections != (NSMutableDictionary *)-1)
    swift_once(&serverManager._clientConnections, one-time initialization function for shared);
  v8 = type metadata accessor for Logger(0);
  v9 = __swift_project_value_buffer(v8, (uint64_t)static MOAngelLogger.shared);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v28 = v13;
    *(_DWORD *)v12 = 136315138;
    v14 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    if ((_DWORD)v7)
    {
      v26 = 0xE600000000000000;
      v15 = 0x746E65636552;
      v16 = 0xE600000000000000;
      v17.super.isa = v14;
      v18 = 0;
      v19 = 0xE000000000000000;
      v20 = 0x746E65636552;
    }
    else
    {
      v26 = 0xEB00000000646564;
      v15 = 0x6E656D6D6F636552;
      v16 = 0xEB00000000646564;
      v17.super.isa = v14;
      v18 = 0;
      v19 = 0xE000000000000000;
      v20 = 0x6E656D6D6F636552;
    }
    v21 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v15, (Swift::String_optional)0, v17, *(Swift::String *)&v18, *(Swift::String *)&v20);

    v27 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21._countAndFlagsBits, (unint64_t)v21._object, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v12 + 4);
    swift_bridgeObjectRelease(v21._object);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "[Bundles] Tab Changed to:%s", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {

  }
  if (one-time initialization token for shared != -1)
    swift_once(&one-time initialization token for shared, one-time initialization function for shared);
  v22 = (*(uint64_t (**)(void))(*(_QWORD *)static MOSuggestionAssetCacheManager.shared + 296))();
  v23 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v4) + 0xF8))(v22);
  if (v23)
  {
    v25 = v23;
    (*(void (**)(uint64_t, Swift::Bool, Swift::Bool))(*(_QWORD *)v23 + 736))(v7, scrollToTop, scrollToHeaderOffset);
    *(_QWORD *)&v24 = swift_release(v25).n128_u64[0];
  }
  if ((_DWORD)v7)
    objc_msgSend(*(id *)((char *)v4 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_privacyBadge), "setHidden:", 1, v24);
}

Swift::Void __swiftcall MOSuggestionCollectionView.didPressNewEntryButton()()
{
  _QWORD *v0;
  _QWORD *v1;
  id v2;

  v1 = (_QWORD *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x110))();
  if (v1)
  {
    v2 = v1;
    (*(void (**)(void))((swift_isaMask & *v1) + 0x160))();

  }
}

Swift::Void __swiftcall MOSuggestionCollectionView.refreshCollectionViewSheetBundles()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xF8))();
  if (v1)
  {
    v2 = v1;
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 720))(v1);
    swift_release(v2);
  }
}

Swift::Void __swiftcall MOSuggestionCollectionView.showPrivacyBadge()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(__n128);
  __n128 v12;
  id v13;
  unsigned __int8 v14;
  _QWORD *v15;
  double v16;
  char v17;
  uint64_t v18;
  double v19;
  id v20;
  id v21;
  Class isa;
  double v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  Class v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  void *v39;
  id v40;
  _QWORD *v41;
  uint64_t v42;

  v1 = v0;
  v2 = type metadata accessor for IndexPath(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (_QWORD *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x110))(v4);
  if (!v7)
    return;
  v41 = v7;
  v8 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xF8))();
  if (!v8)
  {
LABEL_17:

    return;
  }
  v9 = v8;
  v10 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_tipCoordinator);
  if (!v10)
  {

    v24 = v9;
    goto LABEL_15;
  }
  v11 = *(uint64_t (**)(__n128))(*(_QWORD *)v8 + 560);
  v12 = swift_retain(*(_QWORD *)((char *)v0
                               + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_tipCoordinator));
  if ((v11(v12) & 1) == 0 || ((*(uint64_t (**)(void))(*(_QWORD *)v9 + 424))() & 1) != 0)
  {

    swift_release(v9);
    v24 = v10;
LABEL_15:
    swift_release(v24);
    return;
  }
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 272))(1) & 1) != 0
    || (v13 = objc_msgSend((id)objc_opt_self(MOOnboardingManager), "sharedInstance"),
        v14 = objc_msgSend(v13, "isOnboarded"),
        v13,
        (v14 & 1) == 0))
  {
    swift_release(v10);
    swift_release(v9);
    goto LABEL_17;
  }
  v15 = *(_QWORD **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_privacyBadge);
  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v15, "removeFromSuperview");
  v16 = 26.0;
  if (((*(uint64_t (**)(id))(*(_QWORD *)v9 + 552))(objc_msgSend(v1, "addSubview:", v15)) & 1) != 0)
  {
    v17 = (*(uint64_t (**)(void))((swift_isaMask & *v41) + 0x1B0))();
    v16 = (*(double (**)(_QWORD))((swift_isaMask & *v1) + 0x218))(v17 & 1) + 16.0;
  }
  IndexPath.init(row:section:)(0, 0);
  v18 = (*(uint64_t (**)(char *))(*(_QWORD *)v9 + 680))(v6);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  v19 = 0.0;
  if (v18)
  {
    if (objc_msgSend(*(id *)(v18 + 16), "interfaceType") == (id)10)
    {
      v20 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
      v21 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleFootnote);
      isa = UIFont.withWeight(_:)(UIFontWeightSemibold).super.isa;

      v23 = specialized UILabel.estimatedHeight(forWidth:text:ofFont:)(0, 0xE000000000000000, isa, 100.0);
      swift_release(v18);

      v19 = v23 + 12.0;
    }
    else
    {
      swift_release(v18);
    }
  }
  v25 = (void *)objc_opt_self(NSLayoutConstraint);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v27 = swift_allocObject(v26, 40, 7);
  *(_OWORD *)(v27 + 16) = xmmword_10019EDA0;
  v28 = objc_msgSend(v15, "leadingAnchor");
  v29 = objc_msgSend(v1, "leadingAnchor");
  v30 = objc_msgSend(v28, "constraintEqualToAnchor:constant:", v29, 30.0);

  *(_QWORD *)(v27 + 32) = v30;
  v42 = v27;
  specialized Array._endMutation()(v31);
  v32 = v42;
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint, NSLayoutConstraint_ptr);
  v33 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v25, "activateConstraints:", v33, swift_bridgeObjectRelease(v32).n128_f64[0]);

  v34 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_currentBadgeOffset;
  *(double *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_currentBadgeOffset) = v16 + v19;
  v35 = objc_msgSend(v15, "topAnchor");
  v36 = objc_msgSend(v1, "topAnchor");
  v37 = objc_msgSend(v35, "constraintEqualToAnchor:constant:", v36, *(double *)((char *)v1 + v34));

  v38 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_privacyBadgeTopConstraint;
  v39 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_privacyBadgeTopConstraint);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_privacyBadgeTopConstraint) = v37;

  v40 = *(id *)((char *)v1 + v38);
  if (v40)
    v40 = objc_msgSend(v40, "setActive:", 1);
  (*(void (**)(id))((swift_isaMask & *v15) + 0x90))(v40);
  swift_release(v10);
  swift_release(v9);

}

Swift::Void __swiftcall MOSuggestionCollectionView.dismissPrivacyBadge()()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_privacyBadge), "setHidden:", 1);
}

Swift::Void __swiftcall MOSuggestionCollectionView.handleContentSizeChanged(contentSize:)(UIContentSizeCategory contentSize)
{
  _QWORD *v1;
  uint64_t (*v2)(void);
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v2 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0xE0);
  v3 = (void *)((uint64_t (*)(UIContentSizeCategory))v2)(contentSize);
  objc_msgSend(v3, "reloadData");

  v4 = (void *)v2();
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, "collectionViewLayout");

    objc_msgSend(v6, "invalidateLayout");
  }
}

Swift::Void __swiftcall MOSuggestionCollectionView.displayTip(tipType:)(MomentsUIService::MOSuggestionTipType tipType)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void *v9;
  void *v10;
  id v11;

  v2 = v1;
  v3 = tipType;
  v4 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x170))();
  if (v4)
  {
    v6 = v4;
    v7 = v5;
    ObjectType = swift_getObjectType(v4);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v3, ObjectType, v7);
    v4 = swift_unknownObjectRelease(v6);
  }
  v9 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0xE0))(v4);
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v9, "collectionViewLayout");

    objc_msgSend(v11, "invalidateLayout");
  }
}

Swift::Void __swiftcall MOSuggestionCollectionView.removeTip(tipType:)(MomentsUIService::MOSuggestionTipType tipType)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void *v9;
  void *v10;
  id v11;

  v2 = v1;
  v3 = tipType;
  v4 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x170))();
  if (v4)
  {
    v6 = v4;
    v7 = v5;
    ObjectType = swift_getObjectType(v4);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(v3, ObjectType, v7);
    v4 = swift_unknownObjectRelease(v6);
  }
  v9 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0xE0))(v4);
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v9, "collectionViewLayout");

    objc_msgSend(v11, "invalidateLayout");
  }
}

void MOSuggestionCollectionView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MomentsUIService.MOSuggestionCollectionView", 43, "init(frame:)", 12, 0);
  __break(1u);
}

id MOSuggestionCollectionView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionCollectionView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t protocol witness for MOSuggestionSheetSegmentedControlDelegate.didChangeSegmentedControlValue(segmentType:scrollToTop:scrollToHeaderOffset:) in conformance MOSuggestionCollectionView(char a1)
{
  _QWORD *v1;

  return (*(uint64_t (**)(_QWORD))((swift_isaMask & *v1) + 0x228))(a1 & 1);
}

uint64_t protocol witness for MOSuggestionSheetNewEntryButtonDelegate.didPressNewEntryButton() in conformance MOSuggestionCollectionView()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x230))();
}

uint64_t protocol witness for MOSuggestionTipCoordinatorDelegate.displayTip(tipType:) in conformance MOSuggestionCollectionView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x258))();
}

uint64_t protocol witness for MOSuggestionTipCoordinatorDelegate.removeTip(tipType:) in conformance MOSuggestionCollectionView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x260))();
}

Swift::Int __swiftcall MOSuggestionCollectionView.collectionView(_:numberOfItemsInSection:)(UICollectionView _, Swift::Int numberOfItemsInSection)
{
  _QWORD *v2;
  Swift::Int result;
  Swift::Int v5;
  Swift::Int v6;

  result = (*(uint64_t (**)(Class))((swift_isaMask & *v2) + 0xF8))(_.super.super.super.super.isa);
  if (result)
  {
    v5 = result;
    v6 = (*(uint64_t (**)(Swift::Int))(*(_QWORD *)result + 600))(numberOfItemsInSection);
    swift_release(v5);
    return v6;
  }
  return result;
}

id MOSuggestionCollectionView.collectionView(_:cellForItemAt:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  char *v18;
  _QWORD v20[15];
  uint64_t v21;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v4);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>?);
  __chkstk_darwin(v7);
  v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v10);
  v21 = type metadata accessor for IndexPath(0);
  v20[13] = *(_QWORD *)(v21 - 8);
  v11 = __chkstk_darwin(v21);
  v20[14] = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0xF8))(v11);
  if (v13)
  {
    v14 = v13;
    v20[12] = v6;
    v15 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x110))();
    if (v15)
    {
      v16 = (void *)v15;
      v20[10] = v9;
      v17 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v14 + 680))(a2);
      if (v17)
      {
        v20[11] = v16;
        v18 = (char *)&loc_1000EEC98 + dword_1000EFCB4[(*(unsigned __int8 (**)(void))(*(_QWORD *)v17 + 152))()];
        __asm { BR              X10 }
      }
      swift_release(v14);

    }
    else
    {
      swift_release(v14);
    }
  }
  return objc_msgSend(objc_allocWithZone((Class)UICollectionViewCell), "init");
}

void sub_1000EF1A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  NSString v7;
  Class isa;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  void (*v14)(__n128);
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  void *v27;
  void (*v28)(uint64_t (*)(), uint64_t, __n128);
  id v29;
  _QWORD *v30;
  uint64_t v31;
  id v32;
  __n128 v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;

  *(_QWORD *)(v6 - 192) = v4;
  *(_QWORD *)(v6 - 216) = v3;
  v7 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v9 = objc_msgSend(v5, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v7, isa);

  v10 = type metadata accessor for MOSuggestionCollectionViewSingleAssetCell();
  v11 = (_QWORD *)swift_dynamicCastClass(v9, v10);
  if (v11)
  {
    v12 = v2;
    *(_QWORD *)(v6 - 208) = v9;
    *(_QWORD *)(v6 - 184) = v0;
    v13 = v11;
    v14 = *(void (**)(__n128))((swift_isaMask & *v11) + 0xA8);
    v15 = *(_QWORD *)(v6 - 216);
    v16 = swift_retain(v15);
    v14(v16);
    v17 = swift_allocObject(&unk_1001E9978, 24, 7);
    swift_unknownObjectWeakInit(v17 + 16);
    v18 = *(_QWORD *)(v6 - 152);
    v19 = *(_QWORD *)(v6 - 144);
    v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
    v21 = *(_QWORD *)(v6 - 136);
    *(_QWORD *)(v6 - 224) = v20;
    v20(v19, v1, v21);
    v22 = *(unsigned __int8 *)(v18 + 80);
    v23 = (v22 + 32) & ~v22;
    *(_QWORD *)(v6 - 200) = v12;
    v24 = (v12 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)(v6 - 240) = v22;
    *(_QWORD *)(v6 - 232) = v22 | 7;
    v25 = swift_allocObject(&unk_1001E9A90, v24 + 8, v22 | 7);
    *(_QWORD *)(v25 + 16) = v17;
    *(_QWORD *)(v25 + 24) = v15;
    v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32);
    v26(v25 + v23, v19, v21);
    v27 = *(void **)(v6 - 168);
    *(_QWORD *)(v25 + v24) = v27;
    v28 = *(void (**)(uint64_t (*)(), uint64_t, __n128))((swift_isaMask & *v13) + 0x90);
    swift_retain(v15);
    v29 = v27;
    v30 = v13;
    v31 = v1;
    v32 = v29;
    v33 = swift_retain(v17);
    v28(partial apply for closure #5 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:), v25, v33);
    v34 = swift_release(v17);
    v35 = (*(uint64_t (**)(__n128))((swift_isaMask & *v13) + 0xA0))(v34);
    if (v35)
    {
      v36 = v35;
      v37 = *(_QWORD *)(v6 - 240);
      v39 = *(_QWORD *)(v6 - 144);
      v38 = *(_QWORD *)(v6 - 136);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 - 224))(v39, v31, v38);
      v40 = (v37 + 40) & ~v37;
      v41 = (_QWORD *)swift_allocObject(&unk_1001E9AB8, v40 + *(_QWORD *)(v6 - 200), *(_QWORD *)(v6 - 232));
      v41[2] = v30;
      v41[3] = v32;
      v42 = *(_QWORD *)(v6 - 184);
      v41[4] = v42;
      v26((uint64_t)v41 + v40, v39, v38);
      v43 = v32;
      swift_retain(v42);
      v44 = *(id *)(v6 - 208);
      v45 = MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:)(1, 4, MomentsUIService_SuggestionCellStyle_halfWidth, 0, (uint64_t)partial apply for closure #4 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:), (uint64_t)v41);
      swift_release(v41);
      swift_release(v36);
      v46 = type metadata accessor for URL(0);
      v47 = *(_QWORD *)(v6 - 192);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v47, 1, 1, v46);
      v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
      v49 = *(_QWORD *)(v6 - 176);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v49, 1, 1, v48);
      *(_OWORD *)(v6 - 128) = 0u;
      *(_OWORD *)(v6 - 112) = 0u;
      *(_BYTE *)(v6 - 96) = 1;
      v50 = type metadata accessor for Date(0);
      (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(*(_QWORD *)(v6 - 160), 1, 1, v50);
      v51 = type metadata accessor for MOSuggestionSheetAssetViewModel(0);
      swift_allocObject(v51, *(unsigned int *)(v51 + 48), *(unsigned __int16 *)(v51 + 52));
      v52 = *(_QWORD *)(v6 - 216);
      swift_retain(v52);
      v53 = MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(0x6C6F686563616C70, 0xEB00000000726564, v52, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, v47, 0, 0, 0, 0xE000000000000000, 0,
              0xE000000000000000,
              0,
              0xE000000000000000,
              0,
              0,
              0,
              0xE000000000000000,
              0,
              0xE000000000000000,
              0,
              0,
              0,
              0,
              0,
              0,
              0xE000000000000000,
              v49,
              0,
              0xE000000000000000,
              0,
              0,
              0,
              0xE000000000000000,
              0,
              0xE000000000000000,
              0,
              v6 - 128,
              v6 - 128,
              v6 - 128,
              11,
              0,
              0,
              0,
              0,
              0,
              1,
              1,
              0,
              0,
              0xE000000000000000,
              1,
              0,
              0xE000000000000000,
              0);
      v54 = specialized Array.init(repeating:count:)((uint64_t)v53, v45);
      (*(void (**)(void))((swift_isaMask & *v30) + 0xF0))();
      swift_bridgeObjectRelease(v54);
      swift_release(v52);

      JUMPOUT(0x1000EFC78);
    }
    JUMPOUT(0x1000EFC6CLL);
  }
  JUMPOUT(0x1000EFC28);
}

void sub_1000EF600()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  NSString v8;
  Class isa;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  void (*v13)(__n128);
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  void *v26;
  void (*v27)(uint64_t (*)(), uint64_t, __n128);
  uint64_t v28;
  id v29;
  __n128 v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  __n128 v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  id v52;
  id v53;

  *(_QWORD *)(v7 - 192) = v4;
  *(_QWORD *)(v7 - 216) = v3;
  v8 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v10 = objc_msgSend(v6, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v8, isa);

  v11 = type metadata accessor for MOSuggestionCollectionViewListCell();
  v12 = (_QWORD *)swift_dynamicCastClass(v10, v11);
  if (v12)
  {
    *(_QWORD *)(v7 - 224) = v5;
    *(_QWORD *)(v7 - 208) = v10;
    *(_QWORD *)(v7 - 200) = v12;
    *(_QWORD *)(v7 - 184) = v0;
    v13 = *(void (**)(__n128))((swift_isaMask & *v12) + 0x110);
    v14 = *(_QWORD *)(v7 - 216);
    v15 = swift_retain(v14);
    v13(v15);
    v16 = swift_allocObject(&unk_1001E9978, 24, 7);
    swift_unknownObjectWeakInit(v16 + 16);
    v18 = *(_QWORD *)(v7 - 152);
    v17 = *(_QWORD *)(v7 - 144);
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
    v20 = *(_QWORD *)(v7 - 136);
    *(_QWORD *)(v7 - 232) = v19;
    v19(v17, v1, v20);
    v21 = *(unsigned __int8 *)(v18 + 80);
    v22 = (v21 + 32) & ~v21;
    v23 = (v2 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)(v7 - 248) = v21;
    *(_QWORD *)(v7 - 240) = v21 | 7;
    v24 = swift_allocObject(&unk_1001E9A40, v23 + 8, v21 | 7);
    *(_QWORD *)(v24 + 16) = v16;
    *(_QWORD *)(v24 + 24) = v14;
    v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32);
    *(_QWORD *)(v7 - 152) = v25;
    v25(v24 + v22, v17, v20);
    v26 = *(void **)(v7 - 168);
    *(_QWORD *)(v24 + v23) = v26;
    v27 = *(void (**)(uint64_t (*)(), uint64_t, __n128))((swift_isaMask & **(_QWORD **)(v7 - 200))
                                                                           + 0xF0);
    swift_retain(v14);
    v28 = v1;
    v29 = v26;
    v30 = swift_retain(v16);
    v27(partial apply for closure #5 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:), v24, v30);
    v31 = swift_release(v16);
    (*(void (**)(_QWORD, __n128))(*(_QWORD *)v14 + 304))(0, v31);
    v32 = type metadata accessor for URL(0);
    v33 = *(_QWORD *)(v7 - 192);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v33, 1, 1, v32);
    v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
    v35 = *(_QWORD *)(v7 - 176);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v35, 1, 1, v34);
    *(_OWORD *)(v7 - 128) = 0u;
    *(_OWORD *)(v7 - 112) = 0u;
    *(_BYTE *)(v7 - 96) = 1;
    v36 = type metadata accessor for Date(0);
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(*(_QWORD *)(v7 - 160), 1, 1, v36);
    v37 = type metadata accessor for MOSuggestionSheetAssetViewModel(0);
    swift_allocObject(v37, *(unsigned int *)(v37 + 48), *(unsigned __int16 *)(v37 + 52));
    swift_retain(v14);
    v38 = v14;
    v39 = MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(0x6C6F686563616C70, 0xEB00000000726564, v14, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, v33, 0, 0, 0, 0xE000000000000000, 0,
            0xE000000000000000,
            0,
            0xE000000000000000,
            0,
            0,
            0,
            0xE000000000000000,
            0,
            0xE000000000000000,
            0,
            0,
            0,
            0,
            0,
            0,
            0xE000000000000000,
            v35,
            0,
            0xE000000000000000,
            0,
            0,
            0,
            0xE000000000000000,
            0,
            0xE000000000000000,
            0,
            v7 - 128,
            v7 - 128,
            v7 - 128,
            11,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0xE000000000000000,
            1,
            0,
            0xE000000000000000,
            0);
    (*(void (**)(void))((swift_isaMask & **(_QWORD **)(v7 - 200)) + 0x170))();
    v40 = swift_release(v39);
    v41 = *(_QWORD **)(v7 - 200);
    v42 = (*(uint64_t (**)(__n128))((swift_isaMask & *v41) + 0x108))(v40);
    if (v42)
    {
      v43 = v42;
      v44 = *(_QWORD *)(v7 - 248);
      v45 = (*(uint64_t (**)(void))(v7 - 224))();
      v46 = v28;
      v47 = *(_QWORD *)(v7 - 144);
      v48 = *(_QWORD *)(v7 - 136);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 - 232))(v47, v46, v48);
      v49 = (v44 + 48) & ~v44;
      v50 = (char *)swift_allocObject(&unk_1001E9A68, v49 + v2, *(_QWORD *)(v7 - 240));
      *((_QWORD *)v50 + 2) = v41;
      *((_QWORD *)v50 + 3) = v38;
      v51 = *(_QWORD *)(v7 - 184);
      *((_QWORD *)v50 + 4) = v29;
      *((_QWORD *)v50 + 5) = v51;
      (*(void (**)(char *, uint64_t, uint64_t))(v7 - 152))(&v50[v49], v47, v48);
      swift_retain(v38);
      v52 = v29;
      swift_retain(v51);
      v53 = *(id *)(v7 - 208);
      MOSuggestionCollectionViewCellViewModel.fetchAssetsForBundle(previewOnly:previewMax:style:completionHandler:)(1, 1, v45, (uint64_t)partial apply for closure #6 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:), (uint64_t)v50);
      swift_release(v50);
      swift_release(v43);
      swift_release(v38);

      JUMPOUT(0x1000EFC78);
    }
    JUMPOUT(0x1000EFC6CLL);
  }
  JUMPOUT(0x1000EFC28);
}

void sub_1000EFA8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  NSString v6;
  Class isa;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t (*v12)(__n128);
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void *v25;
  uint64_t v26;
  id v27;
  id v28;
  void *v29;

  v6 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v8 = objc_msgSend(v4, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v6, isa);

  v9 = type metadata accessor for MOSuggestionEvergreenCollectionViewCell();
  v10 = (_QWORD *)swift_dynamicCastClass(v8, v9);
  if (v10)
  {
    v11 = v10;
    *(_QWORD *)(v5 - 184) = v0;
    v12 = *(uint64_t (**)(__n128))((swift_isaMask & *v10) + 0xA0);
    v13 = swift_retain(v2);
    v14 = v12(v13);
    v15 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v11) + 0x98))(v14);
    if (v15)
    {
      v16 = v15;
      v17 = *(_QWORD *)(v5 - 152);
      v18 = v1;
      v19 = *(_QWORD *)(v5 - 144);
      v20 = v11;
      v21 = *(_QWORD *)(v5 - 136);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v19, v18, v21);
      v22 = *(unsigned __int8 *)(v17 + 80);
      v23 = (v22 + 48) & ~v22;
      v24 = (char *)swift_allocObject(&unk_1001E9A18, v23 + v3, v22 | 7);
      *((_QWORD *)v24 + 2) = v20;
      *((_QWORD *)v24 + 3) = v2;
      v25 = *(void **)(v5 - 168);
      v26 = *(_QWORD *)(v5 - 184);
      *((_QWORD *)v24 + 4) = v25;
      *((_QWORD *)v24 + 5) = v26;
      (*(void (**)(char *, uint64_t, uint64_t))(v17 + 32))(&v24[v23], v19, v21);
      swift_retain(v2);
      v27 = v25;
      swift_retain(*(_QWORD *)(v5 - 184));
      v28 = v8;
      MOSuggestionCollectionViewCellViewModel.fetchAssetsForBundle(previewOnly:previewMax:style:completionHandler:)(1, 5, 1u, (uint64_t)partial apply for closure #7 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:), (uint64_t)v24);
      swift_release(v24);
      swift_release(v16);
      swift_release(v2);

      JUMPOUT(0x1000EFC78);
    }
    swift_release(v2);

    JUMPOUT(0x1000EFC74);
  }
  v29 = *(void **)(v5 - 168);

  objc_msgSend(objc_allocWithZone((Class)UICollectionViewCell), "init");
  swift_release(v0);

  swift_release(v2);
  JUMPOUT(0x1000EFC80);
}

uint64_t MOSuggestionCollectionView.collectionViewHandleSuggestionSelection(indexPath:interactionState:)(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;

  result = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x128))();
  if (result)
  {
    v7 = result;
    v8 = a2 & 1;
    if ((_DWORD)v8)
    {
      v9 = v6;
      ObjectType = swift_getObjectType(result);
      (*(void (**)(uint64_t, uint64_t))(v9 + 40))(ObjectType, v9);
    }
    v11 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0xF8))();
    if (v11)
    {
      v12 = v11;
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v11 + 704))(a1, v8);
      swift_release(v12);
    }
    return swift_unknownObjectRelease(v7);
  }
  return result;
}

void closure #4 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:)(uint64_t a1, _QWORD *a2, NSObject *a3, uint64_t a4, void *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(__n128);
  __n128 v28;
  uint64_t v29;
  char v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t (*v33)(void);
  id v34;
  char v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, id, uint64_t);
  id v41;
  uint64_t v42;
  _QWORD *v43;
  NSObject *v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  void (*v61)(char *, uint64_t, __n128);
  void (*v62)(char *, uint64_t);
  __n128 v63;
  id v64;
  os_log_t v65;
  uint64_t v66;
  __n128 v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(__n128);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  os_log_t v77;
  id v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;

  v77 = a3;
  v78 = a5;
  v76 = a4;
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v79 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = (char *)&v68 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
  __chkstk_darwin(v13);
  v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for UUID(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v75 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v68 - v21;
  __chkstk_darwin(v20);
  v24 = (char *)&v68 - v23;
  v25 = type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(0);
  outlined init with copy of UUID?(a1 + *(int *)(v25 + 24), (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    outlined destroy of Any?((uint64_t)v15, &demangling cache variable for type metadata for UUID?);
    return;
  }
  v74 = v7;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v24, v15, v16);
  v26 = *(_QWORD *)a1;
  if (!*(_QWORD *)a1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v24, v16);
    return;
  }
  v72 = v8;
  v27 = *(uint64_t (**)(__n128))((swift_isaMask & *a2) + 0xA0);
  v28 = swift_retain(v26);
  v71 = v27;
  v29 = v27(v28);
  if (!v29)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v24, v16);
LABEL_11:
    v32 = v26;
    goto LABEL_12;
  }
  v73 = v26;
  v26 = v29;
  (*(void (**)(void))(*(_QWORD *)v29 + 344))();
  v30 = static UUID.== infix(_:_:)(v24, v22);
  v31 = *(void (**)(char *, uint64_t))(v17 + 8);
  v31(v22, v16);
  if ((v30 & 1) == 0)
  {
    v31(v24, v16);
    swift_release(v73);
    goto LABEL_11;
  }
  v70 = v26;
  if (*(_BYTE *)(a1 + 16) == 1)
  {
    v31(v24, v16);
    swift_release(v73);
    v32 = v70;
LABEL_12:
    swift_release(v32);
    return;
  }
  (*(void (**)(uint64_t, _QWORD))((swift_isaMask & *a2) + 0x100))(v73, *(_QWORD *)(a1 + 8));
  v33 = *(uint64_t (**)(void))(*(_QWORD *)v76 + 424);
  v34 = *(id *)(v70 + 16);
  v35 = v33();
  if ((v35 & 1) != 0)
    v36 = 0x746E65636552;
  else
    v36 = 0x6E656D6D6F636552;
  if ((v35 & 1) != 0)
    v37 = 0xE600000000000000;
  else
    v37 = 0xEB00000000646564;
  (*(void (**)(id, uint64_t, unint64_t))((swift_isaMask & (uint64_t)v77->isa) + 0x188))(v34, v36, v37);

  swift_bridgeObjectRelease(v37);
  if (serverManager._connectionListener != (BSServiceConnectionListener *)-1)
    swift_once(&serverManager._connectionListener, one-time initialization function for ranking);
  v38 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v38, (uint64_t)static MOAngelLogger.ranking);
  v39 = v72;
  v40 = *(void (**)(char *, id, uint64_t))(v72 + 16);
  v41 = v78;
  v42 = v74;
  v40(v12, v78, v74);
  v40(v79, v41, v42);
  v43 = a2;
  v44 = Logger.logObject.getter(v43);
  v45 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v44, (os_log_type_t)v45))
  {
    LODWORD(v76) = v45;
    v77 = v44;
    v68 = v31;
    v46 = swift_slowAlloc(32, -1);
    v47 = swift_slowAlloc(32, -1);
    v69 = v47;
    v81 = v47;
    *(_DWORD *)v46 = 134218498;
    v78 = v43;
    v48 = v79;
    v49 = IndexPath.row.getter(v47);
    v50 = *(void (**)(char *, uint64_t))(v39 + 8);
    v50(v12, v42);
    v80 = v49;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v80, &v81, v46 + 4);
    *(_WORD *)(v46 + 12) = 2048;
    v52 = IndexPath.section.getter(v51);
    v50(v48, v42);
    v80 = v52;
    v53 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v80, &v81, v46 + 14);
    *(_WORD *)(v46 + 22) = 2080;
    v54 = v71(v53);
    if (v54)
    {
      v55 = v54;
      v56 = v75;
      (*(void (**)(uint64_t))(*(_QWORD *)v54 + 344))(v54);
      swift_release(v55);
      v58 = UUID.uuidString.getter(v57);
      v60 = v59;
      v61 = (void (*)(char *, uint64_t, __n128))v68;
      v68(v56, v16);
    }
    else
    {
      v60 = 0xE300000000000000;
      v58 = 7104878;
      v61 = (void (*)(char *, uint64_t, __n128))v68;
    }
    v80 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v58, v60, &v81);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v80, &v81, v46 + 24);
    v64 = v78;

    swift_bridgeObjectRelease(v60);
    v65 = v77;
    _os_log_impl((void *)&_mh_execute_header, v77, (os_log_type_t)v76, "(collectionView) layout cell %ld, %ld, bundleId=%s", (uint8_t *)v46, 0x20u);
    v66 = v69;
    swift_arrayDestroy(v69, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v66, -1, -1);
    swift_slowDealloc(v46, -1, -1);
    swift_release(v70);

    v67 = swift_release(v73);
    v61(v24, v16, v67);
  }
  else
  {
    v62 = *(void (**)(char *, uint64_t))(v39 + 8);
    v62(v79, v42);
    v62(v12, v42);

    swift_release(v70);
    v63 = swift_release(v73);
    ((void (*)(char *, uint64_t, __n128))v31)(v24, v16, v63);
  }
}

double closure #6 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:)(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  double result;
  uint64_t v30;
  _BYTE *v31;
  uint64_t (*v32)(uint64_t);
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  __n128 v36;
  void (*v37)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v38;
  unsigned int (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  void (*v42)(_BYTE *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  __n128 v53;
  uint64_t (*v54)(uint64_t, __n128);
  uint64_t v55;
  char v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  void (*v60)(_BYTE *, uint64_t, uint64_t);
  uint64_t v61;
  _BYTE *v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  void (*v71)(_BYTE *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  __n128 v79;
  uint64_t v80;
  void (*v81)(_BYTE *, uint64_t);
  uint64_t v82;
  uint64_t v83;
  _BYTE v84[4];
  int v85;
  void (*v86)(_BYTE *, uint64_t, uint64_t);
  _QWORD *v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  _BYTE *v91;
  uint64_t v92;
  _BYTE *v93;
  uint64_t v94;
  _BYTE *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  v89 = a5;
  v90 = a7;
  v88 = a6;
  v96 = a4;
  v98 = a2;
  v94 = type metadata accessor for IndexPath(0);
  v92 = *(_QWORD *)(v94 - 8);
  v9 = __chkstk_darwin(v94);
  v93 = &v84[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v91 = &v84[-v11];
  v12 = type metadata accessor for UUID(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v95 = &v84[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  v17 = &v84[-v16];
  v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UUID?, UUID?));
  __chkstk_darwin(v18);
  v20 = &v84[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
  v22 = __chkstk_darwin(v21);
  v24 = &v84[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v25 = __chkstk_darwin(v22);
  v27 = &v84[-v26];
  v28 = __chkstk_darwin(v25);
  v31 = &v84[-v30];
  v97 = a1;
  if (!a1)
    return result;
  v32 = *(uint64_t (**)(uint64_t))((swift_isaMask & *a3) + 0x108);
  v87 = a3;
  v33 = v32(v28);
  if (v33)
  {
    v35 = v33;
    (*(void (**)(uint64_t))(*(_QWORD *)v33 + 344))(v33);
    v36 = swift_release(v35);
    v37 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128))(v13 + 56);
    v37(v31, 0, 1, v12, v36);
  }
  else
  {
    v37 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128))(v13 + 56);
    v37(v31, 1, 1, v12, v34);
  }
  v86 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16);
  v86(v27, v98, v12);
  ((void (*)(_BYTE *, _QWORD, uint64_t, uint64_t))v37)(v27, 0, 1, v12);
  v38 = (uint64_t)&v20[*(int *)(v18 + 48)];
  outlined init with copy of UUID?((uint64_t)v31, (uint64_t)v20);
  outlined init with copy of UUID?((uint64_t)v27, v38);
  v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (v39((uint64_t)v20, 1, v12) == 1)
  {
    outlined destroy of Any?((uint64_t)v27, &demangling cache variable for type metadata for UUID?);
    outlined destroy of Any?((uint64_t)v31, &demangling cache variable for type metadata for UUID?);
    if (v39(v38, 1, v12) == 1)
    {
      v40 = outlined destroy of Any?((uint64_t)v20, &demangling cache variable for type metadata for UUID?);
      goto LABEL_12;
    }
LABEL_10:
    outlined destroy of Any?((uint64_t)v20, &demangling cache variable for type metadata for (UUID?, UUID?));
    return result;
  }
  outlined init with copy of UUID?((uint64_t)v20, (uint64_t)v24);
  if (v39(v38, 1, v12) == 1)
  {
    outlined destroy of Any?((uint64_t)v27, &demangling cache variable for type metadata for UUID?);
    outlined destroy of Any?((uint64_t)v31, &demangling cache variable for type metadata for UUID?);
    (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v24, v12);
    goto LABEL_10;
  }
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 32))(v17, v38, v12);
  v41 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes(&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v85 = dispatch thunk of static Equatable.== infix(_:_:)(v24, v17, v12, v41);
  v42 = *(void (**)(_BYTE *, uint64_t))(v13 + 8);
  v42(v17, v12);
  outlined destroy of Any?((uint64_t)v27, &demangling cache variable for type metadata for UUID?);
  outlined destroy of Any?((uint64_t)v31, &demangling cache variable for type metadata for UUID?);
  v42(v24, v12);
  v40 = outlined destroy of Any?((uint64_t)v20, &demangling cache variable for type metadata for UUID?);
  if ((v85 & 1) == 0)
    return result;
LABEL_12:
  v43 = v32(v40);
  if (!v43)
    return result;
  v44 = v43;
  v45 = *(void **)(v96 + 16);
  v46 = objc_msgSend(v45, "interfaceType");
  v47 = (*(uint64_t (**)(uint64_t, uint64_t, id))(*(_QWORD *)v44 + 520))(v97, 2, v46);
  swift_release(v44);
  if (!((unint64_t)v47 >> 62))
  {
    if (*(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_15;
LABEL_33:
    *(_QWORD *)&result = swift_bridgeObjectRelease(v47).n128_u64[0];
    return result;
  }
  if (v47 < 0)
    v82 = v47;
  else
    v82 = v47 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v47);
  v83 = _CocoaArrayWrapper.endIndex.getter(v82);
  swift_bridgeObjectRelease(v47);
  if (!v83)
    goto LABEL_33;
LABEL_15:
  if ((v47 & 0xC000000000000001) != 0)
  {
    v52 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v47);
    v49 = v93;
    v48 = v94;
    v51 = v91;
    v50 = v92;
LABEL_18:
    v53 = swift_bridgeObjectRelease(v47);
    v54 = *(uint64_t (**)(uint64_t, __n128))((swift_isaMask & *v87) + 0x170);
    v97 = v52;
    v55 = v54(v52, v53);
    v56 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v88 + 424))(v55);
    if ((v56 & 1) != 0)
      v57 = 0x746E65636552;
    else
      v57 = 0x6E656D6D6F636552;
    if ((v56 & 1) != 0)
      v58 = 0xE600000000000000;
    else
      v58 = 0xEB00000000646564;
    (*(void (**)(void *, uint64_t, unint64_t))((swift_isaMask & *v89) + 0x188))(v45, v57, v58);
    swift_bridgeObjectRelease(v58);
    if (serverManager._connectionListener == (BSServiceConnectionListener *)-1)
      goto LABEL_25;
    goto LABEL_37;
  }
  v49 = v93;
  v48 = v94;
  v51 = v91;
  v50 = v92;
  if (*(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v52 = *(_QWORD *)(v47 + 32);
    swift_retain(v52);
    goto LABEL_18;
  }
  __break(1u);
LABEL_37:
  swift_once(&serverManager._connectionListener, one-time initialization function for ranking);
LABEL_25:
  v59 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v59, (uint64_t)static MOAngelLogger.ranking);
  v60 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v50 + 16);
  v61 = v90;
  v60(v51, v90, v48);
  v60(v49, v61, v48);
  v62 = v95;
  v63 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v86)(v95, v98, v12);
  v64 = Logger.logObject.getter(v63);
  v65 = static os_log_type_t.debug.getter();
  v66 = v65;
  if (os_log_type_enabled(v64, v65))
  {
    v67 = swift_slowAlloc(32, -1);
    v68 = swift_slowAlloc(32, -1);
    v98 = v68;
    v100 = v68;
    *(_DWORD *)v67 = 134218498;
    LODWORD(v96) = v66;
    v69 = IndexPath.row.getter(v68);
    v70 = v51;
    v71 = *(void (**)(_BYTE *, uint64_t))(v50 + 8);
    v71(v70, v48);
    v99 = v69;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v99, &v100, v67 + 4);
    *(_WORD *)(v67 + 12) = 2048;
    v73 = IndexPath.section.getter(v72);
    v71(v49, v48);
    v99 = v73;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v99, &v100, v67 + 14);
    *(_WORD *)(v67 + 22) = 2080;
    v74 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v75 = v95;
    v76 = dispatch thunk of CustomStringConvertible.description.getter(v12, v74);
    v78 = v77;
    v99 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v76, v77, &v100);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v99, &v100, v67 + 24);
    v79 = swift_bridgeObjectRelease(v78);
    (*(void (**)(_BYTE *, uint64_t, __n128))(v13 + 8))(v75, v12, v79);
    _os_log_impl((void *)&_mh_execute_header, v64, (os_log_type_t)v96, "(collectionView) layout cell %ld, %ld, bundleId=%s", (uint8_t *)v67, 0x20u);
    v80 = v98;
    swift_arrayDestroy(v98, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v80, -1, -1);
    swift_slowDealloc(v67, -1, -1);
  }
  else
  {
    v81 = *(void (**)(_BYTE *, uint64_t))(v50 + 8);
    v81(v49, v48);
    v81(v51, v48);
    (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v62, v12);
  }

  *(_QWORD *)&result = swift_release(v97).n128_u64[0];
  return result;
}

uint64_t closure #7 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:)(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t result;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  __n128 v34;
  void (*v35)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v36;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  void (*v39)(_BYTE *, uint64_t);
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  void (*v52)(_BYTE *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  _BYTE *v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  void (*v65)(_BYTE *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE *v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  __n128 v73;
  uint64_t v74;
  void (*v75)(_BYTE *, uint64_t);
  _BYTE v76[4];
  int v77;
  void (*v78)(_BYTE *, uint64_t, uint64_t);
  uint64_t (*v79)(uint64_t);
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  _BYTE *v84;
  uint64_t v85;
  _BYTE *v86;
  uint64_t v87;
  _BYTE *v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;

  v82 = a5;
  v83 = a7;
  v81 = a6;
  v89 = a4;
  v90 = a2;
  v87 = type metadata accessor for IndexPath(0);
  v85 = *(_QWORD *)(v87 - 8);
  v9 = __chkstk_darwin(v87);
  v86 = &v76[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v84 = &v76[-v11];
  v12 = type metadata accessor for UUID(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v88 = &v76[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  v17 = &v76[-v16];
  v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UUID?, UUID?));
  __chkstk_darwin(v18);
  v20 = &v76[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
  v22 = __chkstk_darwin(v21);
  v24 = &v76[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v25 = __chkstk_darwin(v22);
  v27 = &v76[-v26];
  result = __chkstk_darwin(v25);
  v30 = &v76[-v29];
  v80 = a1;
  if (!a1)
    return result;
  v79 = *(uint64_t (**)(uint64_t))((swift_isaMask & *a3) + 0x98);
  v31 = v79(result);
  if (v31)
  {
    v33 = v31;
    (*(void (**)(uint64_t))(*(_QWORD *)v31 + 344))(v31);
    v34 = swift_release(v33);
    v35 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128))(v13 + 56);
    v35(v30, 0, 1, v12, v34);
  }
  else
  {
    v35 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128))(v13 + 56);
    v35(v30, 1, 1, v12, v32);
  }
  v78 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16);
  v78(v27, v90, v12);
  ((void (*)(_BYTE *, _QWORD, uint64_t, uint64_t))v35)(v27, 0, 1, v12);
  v36 = (uint64_t)&v20[*(int *)(v18 + 48)];
  outlined init with copy of UUID?((uint64_t)v30, (uint64_t)v20);
  outlined init with copy of UUID?((uint64_t)v27, v36);
  v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (v37((uint64_t)v20, 1, v12) != 1)
  {
    outlined init with copy of UUID?((uint64_t)v20, (uint64_t)v24);
    if (v37(v36, 1, v12) != 1)
    {
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 32))(v17, v36, v12);
      v38 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes(&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v77 = dispatch thunk of static Equatable.== infix(_:_:)(v24, v17, v12, v38);
      v39 = *(void (**)(_BYTE *, uint64_t))(v13 + 8);
      v39(v17, v12);
      outlined destroy of Any?((uint64_t)v27, &demangling cache variable for type metadata for UUID?);
      outlined destroy of Any?((uint64_t)v30, &demangling cache variable for type metadata for UUID?);
      v39(v24, v12);
      result = outlined destroy of Any?((uint64_t)v20, &demangling cache variable for type metadata for UUID?);
      if ((v77 & 1) == 0)
        return result;
      goto LABEL_12;
    }
    outlined destroy of Any?((uint64_t)v27, &demangling cache variable for type metadata for UUID?);
    outlined destroy of Any?((uint64_t)v30, &demangling cache variable for type metadata for UUID?);
    (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v24, v12);
    return outlined destroy of Any?((uint64_t)v20, &demangling cache variable for type metadata for (UUID?, UUID?));
  }
  outlined destroy of Any?((uint64_t)v27, &demangling cache variable for type metadata for UUID?);
  outlined destroy of Any?((uint64_t)v30, &demangling cache variable for type metadata for UUID?);
  if (v37(v36, 1, v12) != 1)
    return outlined destroy of Any?((uint64_t)v20, &demangling cache variable for type metadata for (UUID?, UUID?));
  result = outlined destroy of Any?((uint64_t)v20, &demangling cache variable for type metadata for UUID?);
LABEL_12:
  result = v79(result);
  if (result)
  {
    v40 = result;
    v41 = (void *)v89[2];
    v42 = objc_msgSend(v41, "interfaceType");
    v43 = (*(uint64_t (**)(uint64_t, uint64_t, id))(*(_QWORD *)v40 + 520))(v80, 3, v42);
    v44 = swift_release(v40);
    v45 = (*(uint64_t (**)(uint64_t, __n128))((swift_isaMask & *a3) + 0xC8))(v43, v44);
    v46 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v81 + 424))(v45);
    if ((v46 & 1) != 0)
      v47 = 0x746E65636552;
    else
      v47 = 0x6E656D6D6F636552;
    if ((v46 & 1) != 0)
      v48 = 0xE600000000000000;
    else
      v48 = 0xEB00000000646564;
    (*(void (**)(void *, uint64_t, unint64_t))((swift_isaMask & *v82) + 0x188))(v41, v47, v48);
    swift_bridgeObjectRelease(v48);
    if (serverManager._connectionListener != (BSServiceConnectionListener *)-1)
      swift_once(&serverManager._connectionListener, one-time initialization function for ranking);
    v49 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v49, (uint64_t)static MOAngelLogger.ranking);
    v51 = v84;
    v50 = v85;
    v52 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v85 + 16);
    v53 = v83;
    v54 = v87;
    v52(v84, v83, v87);
    v55 = v86;
    v52(v86, v53, v54);
    v56 = v88;
    v57 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v78)(v88, v90, v12);
    v58 = Logger.logObject.getter(v57);
    v59 = static os_log_type_t.debug.getter();
    v60 = v59;
    if (os_log_type_enabled(v58, v59))
    {
      v61 = swift_slowAlloc(32, -1);
      v62 = swift_slowAlloc(32, -1);
      v83 = v62;
      v92 = v62;
      *(_DWORD *)v61 = 134218498;
      v90 = v43;
      LODWORD(v82) = v60;
      v63 = IndexPath.row.getter(v62);
      v64 = v51;
      v65 = *(void (**)(_BYTE *, uint64_t))(v50 + 8);
      v65(v64, v54);
      v91 = v63;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, &v92, v61 + 4);
      *(_WORD *)(v61 + 12) = 2048;
      v67 = IndexPath.section.getter(v66);
      v65(v55, v54);
      v91 = v67;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, &v92, v61 + 14);
      *(_WORD *)(v61 + 22) = 2080;
      v68 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v69 = v88;
      v70 = dispatch thunk of CustomStringConvertible.description.getter(v12, v68);
      v72 = v71;
      v91 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v70, v71, &v92);
      v43 = v90;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, &v92, v61 + 24);
      v73 = swift_bridgeObjectRelease(v72);
      (*(void (**)(_BYTE *, uint64_t, __n128))(v13 + 8))(v69, v12, v73);
      _os_log_impl((void *)&_mh_execute_header, v58, (os_log_type_t)v82, "(collectionView) layout cell %ld, %ld, bundleId=%s", (uint8_t *)v61, 0x20u);
      v74 = v83;
      swift_arrayDestroy(v83, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v74, -1, -1);
      swift_slowDealloc(v61, -1, -1);
    }
    else
    {
      v75 = *(void (**)(_BYTE *, uint64_t))(v50 + 8);
      v75(v55, v54);
      v75(v51, v54);
      (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v56, v12);
    }

    return (*(uint64_t (**)(uint64_t))(*v89 + 304))(v43);
  }
  return result;
}

void closure #3 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:)(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];

  v7 = a1 + 16;
  swift_beginAccess(a1 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (void *)Strong;
    if (one-time initialization token for shared != -1)
      swift_once(&one-time initialization token for shared, one-time initialization function for shared);
    v10 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)static MOSuggestionAssetCacheManager.shared + 280))(a2[2]);
    v11 = IndexPath.row.getter(v10);
    (*(void (**)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(*a2 + 528))(v11, 0, 0, 1, a4);
    MOSuggestionCollectionView.collectionViewHandleSuggestionSelection(indexPath:interactionState:)(a3, 0);

  }
}

void closure #2 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:)(uint64_t a1, _QWORD *a2, NSObject *a3, uint64_t a4, void *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(__n128);
  __n128 v28;
  uint64_t v29;
  char v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t (*v33)(void);
  id v34;
  char v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, id, uint64_t);
  id v41;
  uint64_t v42;
  _QWORD *v43;
  NSObject *v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  void (*v61)(char *, uint64_t, __n128);
  void (*v62)(char *, uint64_t);
  __n128 v63;
  id v64;
  os_log_t v65;
  uint64_t v66;
  __n128 v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(__n128);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  os_log_t v77;
  id v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;

  v77 = a3;
  v78 = a5;
  v76 = a4;
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v79 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = (char *)&v68 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
  __chkstk_darwin(v13);
  v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for UUID(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v75 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v68 - v21;
  __chkstk_darwin(v20);
  v24 = (char *)&v68 - v23;
  v25 = type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(0);
  outlined init with copy of UUID?(a1 + *(int *)(v25 + 24), (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    outlined destroy of Any?((uint64_t)v15, &demangling cache variable for type metadata for UUID?);
    return;
  }
  v74 = v7;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v24, v15, v16);
  v26 = *(_QWORD *)a1;
  if (!*(_QWORD *)a1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v24, v16);
    return;
  }
  v72 = v8;
  v27 = *(uint64_t (**)(__n128))((swift_isaMask & *a2) + 0xF8);
  v28 = swift_retain(v26);
  v71 = v27;
  v29 = v27(v28);
  if (!v29)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v24, v16);
LABEL_11:
    v32 = v26;
    goto LABEL_12;
  }
  v73 = v26;
  v26 = v29;
  (*(void (**)(void))(*(_QWORD *)v29 + 344))();
  v30 = static UUID.== infix(_:_:)(v24, v22);
  v31 = *(void (**)(char *, uint64_t))(v17 + 8);
  v31(v22, v16);
  if ((v30 & 1) == 0)
  {
    v31(v24, v16);
    swift_release(v73);
    goto LABEL_11;
  }
  v70 = v26;
  if (*(_BYTE *)(a1 + 16) == 1)
  {
    v31(v24, v16);
    swift_release(v73);
    v32 = v70;
LABEL_12:
    swift_release(v32);
    return;
  }
  (*(void (**)(uint64_t, _QWORD))((swift_isaMask & *a2) + 0x180))(v73, *(_QWORD *)(a1 + 8));
  v33 = *(uint64_t (**)(void))(*(_QWORD *)v76 + 424);
  v34 = *(id *)(v70 + 16);
  v35 = v33();
  if ((v35 & 1) != 0)
    v36 = 0x746E65636552;
  else
    v36 = 0x6E656D6D6F636552;
  if ((v35 & 1) != 0)
    v37 = 0xE600000000000000;
  else
    v37 = 0xEB00000000646564;
  (*(void (**)(id, uint64_t, unint64_t))((swift_isaMask & (uint64_t)v77->isa) + 0x188))(v34, v36, v37);

  swift_bridgeObjectRelease(v37);
  if (serverManager._connectionListener != (BSServiceConnectionListener *)-1)
    swift_once(&serverManager._connectionListener, one-time initialization function for ranking);
  v38 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v38, (uint64_t)static MOAngelLogger.ranking);
  v39 = v72;
  v40 = *(void (**)(char *, id, uint64_t))(v72 + 16);
  v41 = v78;
  v42 = v74;
  v40(v12, v78, v74);
  v40(v79, v41, v42);
  v43 = a2;
  v44 = Logger.logObject.getter(v43);
  v45 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v44, (os_log_type_t)v45))
  {
    LODWORD(v76) = v45;
    v77 = v44;
    v68 = v31;
    v46 = swift_slowAlloc(32, -1);
    v47 = swift_slowAlloc(32, -1);
    v69 = v47;
    v81 = v47;
    *(_DWORD *)v46 = 134218498;
    v78 = v43;
    v48 = v79;
    v49 = IndexPath.row.getter(v47);
    v50 = *(void (**)(char *, uint64_t))(v39 + 8);
    v50(v12, v42);
    v80 = v49;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v80, &v81, v46 + 4);
    *(_WORD *)(v46 + 12) = 2048;
    v52 = IndexPath.section.getter(v51);
    v50(v48, v42);
    v80 = v52;
    v53 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v80, &v81, v46 + 14);
    *(_WORD *)(v46 + 22) = 2080;
    v54 = v71(v53);
    if (v54)
    {
      v55 = v54;
      v56 = v75;
      (*(void (**)(uint64_t))(*(_QWORD *)v54 + 344))(v54);
      swift_release(v55);
      v58 = UUID.uuidString.getter(v57);
      v60 = v59;
      v61 = (void (*)(char *, uint64_t, __n128))v68;
      v68(v56, v16);
    }
    else
    {
      v60 = 0xE300000000000000;
      v58 = 7104878;
      v61 = (void (*)(char *, uint64_t, __n128))v68;
    }
    v80 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v58, v60, &v81);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v80, &v81, v46 + 24);
    v64 = v78;

    swift_bridgeObjectRelease(v60);
    v65 = v77;
    _os_log_impl((void *)&_mh_execute_header, v77, (os_log_type_t)v76, "(collectionView) layout cell %ld, %ld, bundleId=%s", (uint8_t *)v46, 0x20u);
    v66 = v69;
    swift_arrayDestroy(v69, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v66, -1, -1);
    swift_slowDealloc(v46, -1, -1);
    swift_release(v70);

    v67 = swift_release(v73);
    v61(v24, v16, v67);
  }
  else
  {
    v62 = *(void (**)(char *, uint64_t))(v39 + 8);
    v62(v79, v42);
    v62(v12, v42);

    swift_release(v70);
    v63 = swift_release(v73);
    ((void (*)(char *, uint64_t, __n128))v31)(v24, v16, v63);
  }
}

Swift::Int __swiftcall MOSuggestionCollectionView.numberOfSections(in:)(UICollectionView in)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  Swift::Int v4;

  v2 = (*(uint64_t (**)(Class))((swift_isaMask & *v1) + 0xF8))(in.super.super.super.super.isa);
  if (!v2)
    return 1;
  v3 = v2;
  v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 608))(v2);
  swift_release(v3);
  return v4;
}

_QWORD *MOSuggestionCollectionView.collectionView(_:viewForSupplementaryElementOfKind:at:)(void *a1, uint64_t (*a2)(void), void *a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  _QWORD *v17;
  uint64_t (*v18)(void);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t (*v23)(__n128);
  __n128 v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  id v28;
  void *v29;
  __n128 v30;
  void *v31;
  char v33;
  id v34;
  id v35;
  unsigned __int8 v36;
  uint64_t v37;
  NSString v38;
  NSString v39;
  Class v40;
  id v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(_QWORD *__return_ptr, __n128);
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  void (*v68)(__n128);
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  void *v73;
  NSString v74;
  NSString v75;
  Class isa;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t (*v80)(_QWORD *);
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t (*v84)(uint64_t);
  char v85;
  uint64_t (*v86)(_QWORD *, _UNKNOWN **);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(uint64_t);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(__n128);
  __n128 v97;
  id v98;
  _QWORD *v99;
  char v100;
  NSString v101;
  NSString v102;
  uint64_t v103;
  Class v104;
  id v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  id v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  void (*v115)(void (*)(), uint64_t);
  _QWORD *v116;
  id v117;
  NSString v118;
  NSString v119;
  Class v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t (*v124)(_QWORD *, _UNKNOWN **);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t ObjectType;
  char v131;
  _QWORD *v132;
  uint64_t (*v133)(void);
  char v134;
  uint64_t v135;
  uint64_t v136;
  char v137;
  void (*v138)(uint64_t, _UNKNOWN **);
  uint64_t v139;
  uint64_t (*v140)(_QWORD *);
  _QWORD *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  __n128 v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char v149;
  uint64_t v150;
  char v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  void (*v158)(_QWORD *__return_ptr, uint64_t);
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  void (*v168)(__n128);
  __n128 v169;
  uint64_t v170;
  char v171;
  char v172;
  uint64_t v173;
  uint64_t v174;
  void (*v175)(__n128);
  __n128 v176;
  uint64_t (*v177)(uint64_t);
  id v178;
  uint64_t v179;
  char v180;
  void *v181;
  id v182;
  id v183;
  _QWORD *v184;
  NSString v185;
  NSString v186;
  Class v187;
  id v188;
  uint64_t v189;
  uint64_t v190;
  _QWORD *v191;
  char v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t (*v195)(uint64_t);
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char v199;
  void (*v200)(__n128);
  __n128 v201;
  id v202;
  id v203;
  NSString v204;
  NSString v205;
  Class v206;
  id v207;
  uint64_t v208;
  uint64_t v209;
  _QWORD *v210;
  char v211;
  uint64_t v212;
  char v213;
  uint64_t v214;
  uint64_t v215;
  void (*v216)(__n128);
  __n128 v217;
  id v218;
  char v219;
  uint64_t v220;
  void *v221;
  NSString v222;
  NSString v223;
  Class v224;
  uint64_t v225;
  uint64_t v226;
  id v227;
  uint64_t v228;
  id v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  id v237;
  uint64_t (*v238)(void);
  _QWORD *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  id v244;
  id v245;
  _QWORD *v246;
  uint64_t v247;
  uint64_t (*v248)(void);
  id v249;
  _QWORD v250[3];
  uint64_t v251;
  _UNKNOWN **v252;
  char v253[24];
  _BYTE v254[24];
  _BYTE v255[32];

  v5 = v4;
  v247 = a4;
  v248 = a2;
  v249 = a3;
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = (char *)&v233 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v233 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v4) + 0xF8))(v12);
  if (!v15)
    return objc_msgSend(objc_allocWithZone((Class)UICollectionReusableView), "init");
  v16 = (void *)v15;
  v17 = (_QWORD *)(*(uint64_t (**)(void))((swift_isaMask & *v4) + 0x110))();
  if (!v17)
  {
    v31 = v16;
LABEL_10:
    swift_release(v31);
    return objc_msgSend(objc_allocWithZone((Class)UICollectionReusableView), "init");
  }
  v246 = v17;
  v18 = *(uint64_t (**)(void))((swift_isaMask & *v4) + 0x128);
  v19 = v18();
  if (!v19)
  {
    swift_release(v16);

    return objc_msgSend(objc_allocWithZone((Class)UICollectionReusableView), "init");
  }
  v21 = v19;
  v245 = a1;
  v22 = *(void **)((char *)v5 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_tipCoordinator);
  if (!v22)
  {
    swift_release(v16);

    swift_unknownObjectRelease(v21);
    return objc_msgSend(objc_allocWithZone((Class)UICollectionReusableView), "init");
  }
  v240 = v20;
  v243 = v19;
  v244 = v16;
  v23 = *(uint64_t (**)(__n128))((swift_isaMask & *v5) + 0x158);
  v24 = swift_retain(v22);
  v25 = v23(v24);
  if (!v25)
  {
    swift_release(v244);

    swift_unknownObjectRelease(v243);
    v31 = v22;
    goto LABEL_10;
  }
  v239 = v26;
  v241 = v25;
  v242 = (uint64_t)v22;
  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  v29 = v28;
  if ((uint64_t (*)(void))v27 == v248 && v28 == v249)
  {
    v30 = swift_bridgeObjectRelease(v249);
LABEL_16:
    v34 = v244;
    if (((*(uint64_t (**)(__n128))(*(_QWORD *)v244 + 552))(v30) & 1) != 0)
    {
      v35 = objc_msgSend((id)objc_opt_self(MOOnboardingManager), "sharedInstance");
      v36 = objc_msgSend(v35, "isOnboarded");

      if ((v36 & 1) == 0)
      {
        v74 = String._bridgeToObjectiveC()();
        v75 = String._bridgeToObjectiveC()();
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        v67 = objc_msgSend(v245, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:", v74, v75, isa);

        v77 = type metadata accessor for MOSuggestionCollectionViewOnboardingSectionHeaderView();
        v78 = swift_dynamicCastClass(v67, v77);
        if (v78)
        {
          v79 = (_QWORD *)v78;
          v251 = type metadata accessor for MOSuggestionCollectionView();
          v252 = &protocol witness table for MOSuggestionCollectionView;
          v250[0] = v5;
          v80 = *(uint64_t (**)(_QWORD *))((swift_isaMask & *v79) + 0x80);
          v81 = v67;
          v82 = v5;
          v83 = v80(v250);
          v84 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v246) + 0x1B0);
          v85 = v84(v83);
          (*(void (**)(_QWORD))((swift_isaMask & *v79) + 0xF0))(v85 & 1);
          v86 = *(uint64_t (**)(_QWORD *, _UNKNOWN **))((swift_isaMask & *v82) + 0x178);
          v239 = v81;
          v87 = v86(v79, &protocol witness table for MOSuggestionCollectionViewOnboardingSectionHeaderView);
          LOBYTE(v82) = v84(v87);
          v88 = swift_allocObject(&unk_1001E9BA8, 32, 7);
          v89 = v243;
          v90 = v240;
          *(_QWORD *)(v88 + 16) = v243;
          *(_QWORD *)(v88 + 24) = v90;
          v91 = v242;
          v92 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v242 + 144);
          v93 = swift_unknownObjectRetain();
          LOBYTE(v92) = v92(v93) & 1;
          v94 = type metadata accessor for MOSuggestionSheetOnboardingTipCellModel();
          v95 = swift_allocObject(v94, 34, 7);
          *(_BYTE *)(v95 + 33) = 2;
          *(_BYTE *)(v95 + 32) = v82 & 1;
          *(_QWORD *)(v95 + 16) = partial apply for implicit closure #8 in implicit closure #7 in MOSuggestionCollectionView.collectionView(_:viewForSupplementaryElementOfKind:at:);
          *(_QWORD *)(v95 + 24) = v88;
          swift_beginAccess(v95 + 33, v250, 1, 0);
          *(_BYTE *)(v95 + 33) = (_BYTE)v92;
          v96 = *(void (**)(__n128))((swift_isaMask & *v79) + 0xE0);
          v97 = swift_retain(v95);
          v96(v97);
          if (((*(uint64_t (**)(_QWORD))(*(_QWORD *)v91 + 272))(0) & 1) != 0)
          {
            (*(void (**)(void))((swift_isaMask & *v79) + 0x108))();
            v98 = objc_msgSend(v245, "collectionViewLayout");
            objc_msgSend(v98, "invalidateLayout");

          }
          swift_unknownObjectRelease(v241);
          swift_release(v95);
          v99 = v239;

          swift_release(v91);
          swift_unknownObjectRelease(v89);

          swift_release(v34);
          return v99;
        }
        else
        {
          swift_release(v34);

          swift_unknownObjectRelease(v243);
          swift_release(v242);
          swift_unknownObjectRelease(v241);
        }
        return v67;
      }
      if (!IndexPath.section.getter(v37))
      {
        v118 = String._bridgeToObjectiveC()();
        v119 = String._bridgeToObjectiveC()();
        v120 = IndexPath._bridgeToObjectiveC()().super.isa;
        v121 = objc_msgSend(v245, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:", v118, v119, v120);

        v122 = type metadata accessor for MOSuggestionCollectionViewBlankEntrySectionHeaderView();
        v123 = swift_dynamicCastClass(v121, v122);
        if (v123)
        {
          v67 = (_QWORD *)v123;
          v124 = *(uint64_t (**)(_QWORD *, _UNKNOWN **))((swift_isaMask & *v5) + 0x178);
          v249 = v121;
          v125 = v124(v67, &protocol witness table for MOSuggestionCollectionViewBlankEntrySectionHeaderView);
          v126 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v5) + 0x170))(v125);
          if (v126)
          {
            v128 = v126;
            v129 = v127;
            ObjectType = swift_getObjectType(v126);
            v131 = (*(uint64_t (**)(void))(*(_QWORD *)v34 + 576))();
            (*(void (**)(_QWORD, uint64_t, uint64_t))(v129 + 8))(v131 & 1, ObjectType, v129);
            v126 = swift_unknownObjectRelease(v128);
          }
          v132 = v246;
          v133 = *(uint64_t (**)(void))((swift_isaMask & *v246) + 0x1B0);
          v134 = ((uint64_t (*)(uint64_t))v133)(v126);
          (*(void (**)(_QWORD))((swift_isaMask & *v67) + 0x1B0))(v134 & 1);
          v135 = swift_getObjectType(v241);
          v136 = ((uint64_t (*)(uint64_t))v239[3])(v135);
          v137 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v34 + 424))(v136);
          (*(void (**)(_QWORD))((swift_isaMask & *v67) + 0x1C8))(v137 & 1);
          v138 = *(void (**)(uint64_t, _UNKNOWN **))((swift_isaMask & *v67) + 0xC8);
          v139 = swift_unknownObjectRetain();
          v138(v139, &protocol witness table for MOSuggestionCollectionView);
          v251 = type metadata accessor for MOSuggestionCollectionView();
          v252 = &protocol witness table for MOSuggestionCollectionView;
          v250[0] = v5;
          v140 = *(uint64_t (**)(_QWORD *))((swift_isaMask & *v67) + 0xE0);
          v141 = v5;
          v142 = v140(v250);
          v143 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v132) + 0x1D0))(v142);
          v146 = v242;
          if (v144)
          {
            v147 = v143;
            v148 = v144;
            v149 = v133();
            v248 = v133;
            v150 = v146;
            v151 = v149;
            v152 = (*(uint64_t (**)(void))((swift_isaMask & *v132) + 0x1C8))();
            v239 = v67;
            v153 = v152;
            v155 = v154;
            v156 = swift_allocObject(&unk_1001E9BD0, 32, 7);
            v157 = v240;
            *(_QWORD *)(v156 + 16) = v243;
            *(_QWORD *)(v156 + 24) = v157;
            v158 = *(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)v150 + 168);
            v159 = swift_unknownObjectRetain();
            v158(v250, v159);
            v160 = type metadata accessor for MOSuggestionPrivacyTipCellModel();
            v161 = swift_allocObject(v160, 105, 7);
            *(_OWORD *)(v161 + 88) = 0u;
            *(_BYTE *)(v161 + 104) = 0;
            *(_OWORD *)(v161 + 72) = 0u;
            *(_BYTE *)(v161 + 32) = v151 & 1;
            *(_QWORD *)(v161 + 40) = v147;
            *(_QWORD *)(v161 + 48) = v148;
            *(_QWORD *)(v161 + 56) = v153;
            *(_QWORD *)(v161 + 64) = v155;
            *(_QWORD *)(v161 + 16) = partial apply for implicit closure #6 in implicit closure #5 in MOSuggestionCollectionView.collectionView(_:viewForSupplementaryElementOfKind:at:);
            *(_QWORD *)(v161 + 24) = v156;
            swift_beginAccess(v161 + 72, v254, 1, 0);
            v162 = *(_QWORD *)(v161 + 72);
            v163 = *(_QWORD *)(v161 + 80);
            v164 = *(_QWORD *)(v161 + 88);
            v165 = *(_QWORD *)(v161 + 96);
            outlined init with take of MOSuggestionPrivacyTip?((uint64_t)v250, v161 + 72);
            v166 = v164;
            v146 = v150;
            v133 = v248;
            v167 = v165;
            v67 = v239;
            outlined consume of MOSuggestionPrivacyTip?(v162, v163, v166, v167);
            v168 = *(void (**)(__n128))((swift_isaMask & *v67) + 0x158);
            v169 = swift_retain(v161);
            v168(v169);
            v170 = v161;
            v34 = v244;
            v145 = swift_release(v170);
          }
          v171 = ((uint64_t (*)(uint64_t, __n128))v133)(v143, v145);
          v172 = (*(uint64_t (**)(void))(*(_QWORD *)v146 + 192))() & 1;
          v173 = type metadata accessor for MOSuggestionSheetStateOfMindTipCellModel();
          v174 = swift_allocObject(v173, 18, 7);
          *(_BYTE *)(v174 + 17) = 2;
          *(_BYTE *)(v174 + 16) = v171 & 1;
          swift_beginAccess(v174 + 17, v255, 1, 0);
          *(_BYTE *)(v174 + 17) = v172;
          v175 = *(void (**)(__n128))((swift_isaMask & *v67) + 0x188);
          v176 = swift_retain(v174);
          v175(v176);
          v177 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v146 + 272);
          if ((v177(1) & 1) != 0)
          {
            (*(void (**)(void))((swift_isaMask & *v67) + 0x1C0))();
            v178 = objc_msgSend(v245, "collectionViewLayout");
            objc_msgSend(v178, "invalidateLayout");

          }
          v179 = v242;
          v180 = v177(2);
          v181 = v249;
          if ((v180 & 1) != 0)
          {
            (*(void (**)(void))((swift_isaMask & *v67) + 0x1B8))();
            v182 = objc_msgSend(v245, "collectionViewLayout");
            objc_msgSend(v182, "invalidateLayout");

          }
          swift_unknownObjectRelease(v241);
          swift_release(v174);

          swift_release(v179);
          swift_unknownObjectRelease(v243);

          goto LABEL_68;
        }
LABEL_65:
        swift_release(v34);

        swift_unknownObjectRelease(v243);
        swift_release(v242);
        swift_unknownObjectRelease(v241);
        return v121;
      }
    }
    v238 = *(uint64_t (**)(void))(*(_QWORD *)v34 + 424);
    if ((v238() & 1) != 0)
    {
LABEL_62:
      v222 = String._bridgeToObjectiveC()();
      v223 = String._bridgeToObjectiveC()();
      v224 = IndexPath._bridgeToObjectiveC()().super.isa;
      v121 = objc_msgSend(v245, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:", v222, v223, v224);

      v225 = type metadata accessor for MOSuggestionCollectionViewDateSectionHeaderView(0);
      v226 = swift_dynamicCastClass(v121, v225);
      if (v226)
      {
        v67 = (_QWORD *)v226;
        v227 = v121;
        v228 = v238();
        v229 = v246;
        if ((v228 & 1) != 0)
        {
          v231 = IndexPath.section.getter(v228);
          (*(void (**)(uint64_t))(*(_QWORD *)v34 + 616))(v231);
          v232 = type metadata accessor for Date(0);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v232 - 8) + 56))(v14, 0, 1, v232);
        }
        else
        {
          v230 = type metadata accessor for Date(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v230 - 8) + 56))(v14, 1, 1, v230);
        }
        (*(void (**)(char *))((swift_isaMask & *v67) + 0x68))(v14);
        swift_unknownObjectRelease(v241);

        swift_release(v242);
        swift_unknownObjectRelease(v243);

        goto LABEL_68;
      }
      goto LABEL_65;
    }
    v38 = String._bridgeToObjectiveC()();
    v39 = String._bridgeToObjectiveC()();
    v40 = IndexPath._bridgeToObjectiveC()().super.isa;
    v41 = objc_msgSend(v245, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:", v38, v39, v40);

    v42 = type metadata accessor for MOSuggestionPrivacyTipCell();
    v43 = (_QWORD *)swift_dynamicCastClass(v41, v42);
    if (v43 && (v239 = v43, v44 = (*(uint64_t (**)(void))((swift_isaMask & *v246) + 0x1D0))(), v45))
    {
      v46 = v44;
      v47 = v45;
      v237 = v41;
      v48 = v18();
      if (v48)
      {
        v50 = v48;
        v51 = v49;
        v52 = swift_allocObject(&unk_1001E9B80, 32, 7);
        v236 = v46;
        v53 = v52;
        *(_QWORD *)(v52 + 16) = v50;
        *(_QWORD *)(v52 + 24) = v51;
        v54 = v246;
        v55 = (*(uint64_t (**)(void))((swift_isaMask & *v246) + 0x1B0))();
        v235 = (*(uint64_t (**)(void))((swift_isaMask & *v54) + 0x1C8))();
        v234 = v56;
        v57 = v242;
        v58 = *(void (**)(_QWORD *__return_ptr, __n128))(*(_QWORD *)v242 + 168);
        v59 = swift_retain(v53);
        v58(v250, v59);
        v60 = type metadata accessor for MOSuggestionPrivacyTipCellModel();
        v61 = swift_allocObject(v60, 105, 7);
        *(_OWORD *)(v61 + 88) = 0u;
        *(_BYTE *)(v61 + 104) = 0;
        *(_OWORD *)(v61 + 72) = 0u;
        *(_BYTE *)(v61 + 32) = v55 & 1;
        *(_QWORD *)(v61 + 40) = v236;
        *(_QWORD *)(v61 + 48) = v47;
        v62 = v234;
        *(_QWORD *)(v61 + 56) = v235;
        *(_QWORD *)(v61 + 64) = v62;
        *(_QWORD *)(v61 + 16) = partial apply for implicit closure #6 in implicit closure #5 in MOSuggestionCollectionView.collectionView(_:viewForSupplementaryElementOfKind:at:);
        *(_QWORD *)(v61 + 24) = v53;
        v235 = v53;
        swift_beginAccess(v61 + 72, v253, 1, 0);
        v63 = *(_QWORD *)(v61 + 72);
        v65 = *(_QWORD *)(v61 + 80);
        v64 = *(_QWORD *)(v61 + 88);
        v66 = *(_QWORD *)(v61 + 96);
        LODWORD(v236) = *(unsigned __int8 *)(v61 + 104);
        outlined init with take of MOSuggestionPrivacyTip?((uint64_t)v250, v61 + 72);
        outlined consume of MOSuggestionPrivacyTip?(v63, v65, v64, v66);
        v67 = v239;
        v68 = *(void (**)(__n128))((swift_isaMask & *v239) + 0x88);
        v69 = swift_retain(v61);
        v68(v69);
        if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v57 + 272))(1) & 1) != 0)
        {
          swift_unknownObjectRelease(v241);
          swift_release(v61);
          v70 = v235;
LABEL_54:
          swift_release(v70);
          swift_release(v57);
          swift_unknownObjectRelease(v243);

          v203 = v244;
LABEL_69:
          swift_release(v203);
          return v67;
        }
        objc_msgSend(v67, "removeFromSuperview");
        swift_release(v235);
        swift_release(v61);

        v184 = v246;
        goto LABEL_51;
      }

      swift_bridgeObjectRelease(v47);
    }
    else
    {

    }
    v184 = v246;
LABEL_51:
    v185 = String._bridgeToObjectiveC()();
    v186 = String._bridgeToObjectiveC()();
    v187 = IndexPath._bridgeToObjectiveC()().super.isa;
    v188 = objc_msgSend(v245, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:", v185, v186, v187);

    v189 = type metadata accessor for MOSuggestionSheetOnboardingTipCell();
    v190 = swift_dynamicCastClass(v188, v189);
    if (v190)
    {
      v191 = (_QWORD *)v190;
      v192 = (*(uint64_t (**)(void))((swift_isaMask & *v184) + 0x1B0))();
      v193 = swift_allocObject(&unk_1001E9B58, 32, 7);
      v194 = v240;
      *(_QWORD *)(v193 + 16) = v243;
      *(_QWORD *)(v193 + 24) = v194;
      v57 = v242;
      v195 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v242 + 144);
      v196 = swift_unknownObjectRetain();
      LOBYTE(v195) = v195(v196) & 1;
      v197 = type metadata accessor for MOSuggestionSheetOnboardingTipCellModel();
      v198 = swift_allocObject(v197, 34, 7);
      *(_BYTE *)(v198 + 33) = 2;
      v199 = v192 & 1;
      v67 = v191;
      *(_BYTE *)(v198 + 32) = v199;
      *(_QWORD *)(v198 + 16) = partial apply for implicit closure #8 in implicit closure #7 in MOSuggestionCollectionView.collectionView(_:viewForSupplementaryElementOfKind:at:);
      *(_QWORD *)(v198 + 24) = v193;
      swift_beginAccess(v198 + 33, v254, 1, 0);
      *(_BYTE *)(v198 + 33) = (_BYTE)v195;
      v200 = *(void (**)(__n128))((swift_isaMask & *v191) + 0x60);
      v201 = swift_retain(v198);
      v200(v201);
      if (((*(uint64_t (**)(_QWORD))(*(_QWORD *)v57 + 272))(0) & 1) != 0)
      {
        v202 = objc_msgSend(v245, "collectionViewLayout");
        objc_msgSend(v202, "invalidateLayout");

        swift_unknownObjectRelease(v241);
        v70 = v198;
        goto LABEL_54;
      }

      swift_release(v198);
      v34 = v244;
      v184 = v246;
    }
    else
    {

      v34 = v244;
    }
    v204 = String._bridgeToObjectiveC()();
    v205 = String._bridgeToObjectiveC()();
    v206 = IndexPath._bridgeToObjectiveC()().super.isa;
    v207 = objc_msgSend(v245, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:", v204, v205, v206);

    v208 = type metadata accessor for MOSuggestionSheetStateOfMindTipCell();
    v244 = v207;
    v209 = swift_dynamicCastClass(v207, v208);
    if (v209)
    {
      v210 = (_QWORD *)v209;
      v211 = (*(uint64_t (**)(void))((swift_isaMask & *v184) + 0x1B0))();
      v212 = v242;
      v213 = (*(uint64_t (**)(void))(*(_QWORD *)v242 + 192))() & 1;
      v214 = type metadata accessor for MOSuggestionSheetStateOfMindTipCellModel();
      v215 = swift_allocObject(v214, 18, 7);
      *(_BYTE *)(v215 + 17) = 2;
      *(_BYTE *)(v215 + 16) = v211 & 1;
      swift_beginAccess(v215 + 17, v255, 1, 0);
      *(_BYTE *)(v215 + 17) = v213;
      v216 = *(void (**)(__n128))((swift_isaMask & *v210) + 0x80);
      v217 = swift_retain(v215);
      v216(v217);
      v218 = v246;
      v219 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v212 + 272))(2);
      v220 = v215;
      v67 = v210;
      swift_release(v220);
      if ((v219 & 1) != 0)
      {
        swift_unknownObjectRelease(v241);
        swift_release(v242);
        swift_unknownObjectRelease(v243);

LABEL_68:
        v203 = v34;
        goto LABEL_69;
      }
    }

    v221 = *(void **)((char *)v5
                    + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_privacyBadgeTopConstraint);
    if (v221)
      objc_msgSend(v221, "setConstant:", *(double *)((char *)v5 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_currentBadgeOffset));
    goto LABEL_62;
  }
  v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v28, v248, v249, 0);
  v30 = swift_bridgeObjectRelease(v29);
  if ((v33 & 1) != 0)
    goto LABEL_16;
  v71 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionFooter);
  v73 = v72;
  if ((uint64_t (*)(void))v71 == v248 && v72 == v249)
  {
    swift_bridgeObjectRelease(v249);
  }
  else
  {
    v100 = _stringCompareWithSmolCheck(_:_:expecting:)(v71, v72, v248, v249, 0);
    swift_bridgeObjectRelease(v73);
    if ((v100 & 1) == 0)
    {
      v183 = objc_msgSend(objc_allocWithZone((Class)UICollectionReusableView), "init");
      swift_release(v244);

      swift_unknownObjectRelease(v243);
      swift_release(v242);
      swift_unknownObjectRelease(v241);
      return v183;
    }
  }
  v101 = String._bridgeToObjectiveC()();
  v102 = String._bridgeToObjectiveC()();
  v103 = v247;
  v104 = IndexPath._bridgeToObjectiveC()().super.isa;
  v105 = v245;
  v106 = objc_msgSend(v245, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:", v101, v102, v104);

  v107 = type metadata accessor for MOSuggestionShowMoreFooterView();
  v239 = v106;
  v108 = swift_dynamicCastClass(v106, v107);
  v109 = v244;
  if (v108)
  {
    v110 = (_QWORD *)v108;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v233 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v103, v7);
    v111 = *(unsigned __int8 *)(v8 + 80);
    v112 = (v111 + 24) & ~v111;
    v113 = (v9 + v112 + 7) & 0xFFFFFFFFFFFFFFF8;
    v114 = swift_allocObject(&unk_1001E9B30, v113 + 8, v111 | 7);
    *(_QWORD *)(v114 + 16) = v109;
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v114 + v112, v10, v7);
    *(_QWORD *)(v114 + v113) = v105;
    v115 = *(void (**)(void (*)(), uint64_t))((swift_isaMask & *v110) + 0x68);
    v116 = v239;
    swift_retain(v109);
    v117 = v105;
    v115(partial apply for closure #2 in MOSuggestionCollectionView.collectionView(_:viewForSupplementaryElementOfKind:at:), v114);
    swift_unknownObjectRelease(v241);

    swift_release(v242);
    swift_unknownObjectRelease(v243);

    swift_release(v109);
    return v110;
  }
  else
  {
    swift_release(v244);

    swift_unknownObjectRelease(v243);
    swift_release(v242);
    swift_unknownObjectRelease(v241);
    return v239;
  }
}

void closure #2 in MOSuggestionCollectionView.collectionView(_:viewForSupplementaryElementOfKind:at:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSIndexSet *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = type metadata accessor for IndexSet(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = IndexPath.section.getter(v7);
  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 808))(v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Int>);
  v12 = swift_allocObject(v11, 40, 7);
  *(_OWORD *)(v12 + 16) = xmmword_10019ED20;
  *(_QWORD *)(v12 + 32) = IndexPath.section.getter(v12);
  v20 = v12;
  v13 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes(&lazy protocol witness table cache variable for type IndexSet and conformance IndexSet, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Int]);
  v15 = lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](&lazy protocol witness table cache variable for type [Int] and conformance [A], &demangling cache variable for type metadata for [Int]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v20, v14, v15, v5, v13);
  IndexSet._bridgeToObjectiveC()(v16);
  v18 = v17;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  objc_msgSend(a3, "reloadSections:", v18);

}

double MOSuggestionCollectionView.collectionView(_:didSelectItemAt:)(uint64_t a1, uint64_t a2)
{
  return specialized MOSuggestionCollectionView.collectionView(_:didSelectItemAt:)(a2);
}

CGFloat MOSuggestionCollectionView.collectionView(_:layout:sizeForItemAt:)(uint64_t a1, void *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  char *v14;

  v6 = (*(uint64_t (**)(void))((swift_isaMask & *v3) + 0xF8))();
  if (v6)
  {
    v7 = v6;
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 680))(a3);
    if (v8)
    {
      v9 = v8;
      v10 = objc_opt_self(UICollectionViewFlowLayout);
      v11 = (id)swift_dynamicCastObjCClass(a2, v10);
      v12 = v11;
      if (v11)
      {
        v13 = a2;
        objc_msgSend(v12, "minimumInteritemSpacing");
        objc_msgSend(v12, "sectionInset");
        v11 = objc_msgSend(v12, "sectionInset");
      }
      v14 = (char *)&loc_1000F34E8
          + dword_1000F36F4[(*(unsigned __int8 (**)(id))(*(_QWORD *)v9 + 152))(v11)];
      __asm { BR              X10 }
    }
    swift_release(v7);
  }
  return CGSizeZero.width;
}

double MOSuggestionCollectionView.collectionView(_:layout:referenceSizeForHeaderInSection:)(void *a1, uint64_t a2, uint64_t a3)
{
  return specialized MOSuggestionCollectionView.collectionView(_:layout:referenceSizeForHeaderInSection:)(a1, a3);
}

double calculateHeaderSize #1 (reuseIdentifier:padding:) in MOSuggestionCollectionView.collectionView(_:layout:referenceSizeForHeaderInSection:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSString *v10;
  NSString v11;
  Class isa;
  id v13;
  CGFloat Width;
  double v15;
  double v16;
  double v17;
  double v18;
  uint64_t v20;
  CGRect v21;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  IndexPath.init(row:section:)(0, a3);
  v10 = UICollectionElementKindSectionHeader;
  v11 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v13 = objc_msgSend(a4, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:", v10, v11, isa);

  objc_msgSend(a4, "frame");
  Width = CGRectGetWidth(v21);
  LODWORD(v15) = 1148846080;
  LODWORD(v16) = 1112014848;
  objc_msgSend(v13, "systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:", Width, UILayoutFittingExpandedSize.height, v15, v16);
  v18 = v17;

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v18;
}

double MOSuggestionCollectionView.collectionView(_:layout:referenceSizeForFooterInSection:)(void *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double width;

  v6 = (*(uint64_t (**)(void))((swift_isaMask & *v3) + 0xF8))();
  if (!v6)
    return CGSizeZero.width;
  v7 = v6;
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 656))(a3) & 1) != 0)
  {
    objc_msgSend(a1, "frame");
    width = v8;
  }
  else
  {
    width = CGSizeZero.width;
  }
  swift_release(v7);
  return width;
}

UIEdgeInsets __swiftcall MOSuggestionCollectionView.collectionView(_:layout:insetForSectionAt:)(UICollectionView _, UICollectionViewLayout layout, Swift::Int insetForSectionAt)
{
  double v3;
  double v4;
  double v5;
  double v6;
  UIEdgeInsets result;

  v3 = specialized MOSuggestionCollectionView.collectionView(_:layout:insetForSectionAt:)(layout.super.isa, insetForSectionAt);
  result.right = v6;
  result.bottom = v5;
  result.left = v4;
  result.top = v3;
  return result;
}

void MOSuggestionCollectionView.collectionView(_:didEndDisplayingSupplementaryView:forElementOfKind:at:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  specialized MOSuggestionCollectionView.collectionView(_:didEndDisplayingSupplementaryView:forElementOfKind:at:)(a2, a3, a4);
}

id MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(uint64_t a1, uint64_t a2)
{
  return specialized MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(a2);
}

Class closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *Strong;
  void *v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  id v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  Class isa;
  id v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;
  NSString v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  Swift::String v41;
  Swift::String v42;
  Swift::String v43;
  NSString v44;
  id v45;
  id v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  Swift::String v55;
  Swift::String v56;
  Swift::String v57;
  NSString v58;
  id v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  void (*v64)(uint64_t, char *, uint64_t);
  id v65;
  id v66;
  Swift::String v67;
  Swift::String v68;
  Swift::String v69;
  NSString v70;
  id v71;
  uint64_t v72;
  void *v73;
  void *v74;
  _QWORD *v75;
  id v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  UIMenuElementSize v80;
  id v81;
  Swift::String v82;
  UIMenu v83;
  char v84;
  void *v85;
  uint64_t v86;
  UIMenuElementSize v87;
  objc_class *v88;
  uint64_t v89;
  id v90;
  objc_class *v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  uint64_t (*v95)(void);
  id v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  __n128 v101;
  uint64_t v102;
  id v103;
  objc_class *v104;
  objc_class *v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  Swift::String v109;
  Swift::OpaquePointer v111;
  UIMenu v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(char *, uint64_t, uint64_t);
  id v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t (*v123)(void);
  id object;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  id v128;
  id countAndFlagsBits;
  void (*v130)(uint64_t, char *, uint64_t);
  __int128 v131;
  id v132;
  uint64_t v133;
  UIMenuElementSize v134;
  UIMenuElementSize v135;
  char v136[24];
  char v137[32];
  UIImage_optional v138;
  UIImage_optional v139;
  Swift::String v140;
  Swift::String v141;
  Swift::String v142;
  Swift::String v143;
  Swift::String v144;

  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = (char *)&v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a2 + 16;
  swift_beginAccess(a2 + 16, v137, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(a2 + 16);
  if (!Strong)
    return 0;
  v13 = Strong;
  v125 = a4;
  v14 = (_QWORD *)(*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x110))();
  if (v14)
  {
    v15 = v14;
    v132 = (id)(*(uint64_t (**)(void))((swift_isaMask & *v14) + 0x1C8))();
    v17 = v16;
    v123 = *(uint64_t (**)(void))((swift_isaMask & *v15) + 0x1B0);
    v18 = v123();
    v133 = a3;
    if ((v18 & 1) != 0)
    {
      if (v17)
      {
        v19 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v140._countAndFlagsBits = 0xD000000000000011;
        v140._object = (void *)0x80000001001A7340;
        v20._countAndFlagsBits = 0xE2206F7420646441;
        v20._object = (void *)0xAF9D80E240259C80;
        v21._countAndFlagsBits = 0;
        v21._object = (void *)0xE000000000000000;
        v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, (Swift::String_optional)0, (NSBundle)v19, v21, v140);
        *(_QWORD *)&v131 = v22._countAndFlagsBits;

        v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        v24 = swift_allocObject(v23, 72, 7);
        *(_OWORD *)(v24 + 16) = xmmword_10019ED20;
        *(_QWORD *)(v24 + 56) = &type metadata for String;
        *(_QWORD *)(v24 + 64) = lazy protocol witness table accessor for type String and conformance String();
        *(_QWORD *)(v24 + 32) = v132;
        *(_QWORD *)(v24 + 40) = v17;
        countAndFlagsBits = (id)static String.localizedStringWithFormat(_:_:)(v131, v22._object, v24);
        object = v25;
        swift_bridgeObjectRelease(v22._object);
        v26 = v24;
        a3 = v133;
        swift_bridgeObjectRelease(v26);
        goto LABEL_10;
      }
    }
    else
    {
      swift_bridgeObjectRelease(v17);
    }
    v28 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v29._object = (void *)0x80000001001ABBB0;
    v141._object = (void *)0x80000001001ABBB0;
    v29._countAndFlagsBits = 0xD000000000000010;
    v30._countAndFlagsBits = 0;
    v30._object = (void *)0xE000000000000000;
    v141._countAndFlagsBits = 0xD000000000000010;
    v31 = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, (Swift::String_optional)0, (NSBundle)v28, v30, v141);
    countAndFlagsBits = (id)v31._countAndFlagsBits;
    object = v31._object;

LABEL_10:
    v126 = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIAction, UIAction_ptr);
    v32 = String._bridgeToObjectiveC()();
    v128 = (id)objc_opt_self(UIImage);
    v33 = objc_msgSend(v128, "systemImageNamed:", v32);

    swift_beginAccess(v11, v136, 0, 0);
    v34 = (void *)swift_unknownObjectWeakLoadStrong(v11);
    v119 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v119((char *)&v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v7);
    v35 = *(unsigned __int8 *)(v8 + 80);
    v122 = ((v35 + 24) & ~v35) + v9;
    v36 = (v35 + 24) & ~v35;
    v118 = v36;
    v127 = v35 | 7;
    v132 = (id)(((v122 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    v37 = (v122 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)&v131 = v37;
    v38 = swift_allocObject(&unk_1001E9D00, v132, v35 | 7);
    *(_QWORD *)(v38 + 16) = v13;
    v130 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
    v130(v38 + v36, v10, v7);
    *(_QWORD *)(v38 + v37) = v15;
    v39 = v13;
    v121 = v15;
    v114 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(countAndFlagsBits, object, 0, 0, v33, 0, 0, 0, 0, 0, 0, partial apply for closure #1 in closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:), v38);

    countAndFlagsBits = (id)objc_opt_self(NSBundle);
    v40 = objc_msgSend(countAndFlagsBits, "mainBundle");
    v41._countAndFlagsBits = 0xD000000000000014;
    v41._object = (void *)0x80000001001A7240;
    v142._object = (void *)0x80000001001A7240;
    v42._countAndFlagsBits = 0;
    v42._object = (void *)0xE000000000000000;
    v142._countAndFlagsBits = 0xD000000000000014;
    v43 = NSLocalizedString(_:tableName:bundle:value:comment:)(v41, (Swift::String_optional)0, (NSBundle)v40, v42, v142);
    object = (id)v43._countAndFlagsBits;
    v115 = v43._object;

    v44 = String._bridgeToObjectiveC()();
    v45 = v128;
    v46 = objc_msgSend(v128, "systemImageNamed:", v44);

    v47 = v133;
    v48 = v119;
    v119(v10, v133, v7);
    v49 = v127;
    v50 = swift_allocObject(&unk_1001E9D28, v132, v127);
    *(_QWORD *)(v50 + 16) = v39;
    v116 = v10;
    v51 = v7;
    v117 = v7;
    v52 = v118;
    v130(v50 + v118, v10, v51);
    v53 = v121;
    *(_QWORD *)(v50 + v131) = v121;
    v120 = v39;
    v121 = v53;
    object = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(object, v115, 0, 0, v46, 0, 0, 0, 0, 0, 0, partial apply for closure #2 in closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:), v50);
    v54 = objc_msgSend(countAndFlagsBits, "mainBundle");
    v143._object = (void *)0xED0000746E656D6FLL;
    v55._countAndFlagsBits = 0x65766F6D6552;
    v55._object = (void *)0xE600000000000000;
    v56._countAndFlagsBits = 0;
    v56._object = (void *)0xE000000000000000;
    v143._countAndFlagsBits = 0x4D2065766F6D6552;
    v57 = NSLocalizedString(_:tableName:bundle:value:comment:)(v55, (Swift::String_optional)0, (NSBundle)v54, v56, v143);
    v115 = v57._object;

    v58 = String._bridgeToObjectiveC()();
    v59 = objc_msgSend(v45, "systemImageNamed:", v58);

    v60 = v116;
    v61 = v117;
    v48(v116, v47, v117);
    v62 = swift_allocObject(&unk_1001E9D50, v122, v49);
    v63 = (void *)v125;
    *(_QWORD *)(v62 + 16) = v125;
    v64 = v130;
    v130(v62 + v52, v60, v61);
    v65 = v63;
    v125 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v57._countAndFlagsBits, v115, 0, 0, v59, 0, 0, 0, 0, 2, 0, partial apply for closure #3 in closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:), v62);
    v66 = objc_msgSend(countAndFlagsBits, "mainBundle");
    v144._object = (void *)0xE800000000000000;
    v67._countAndFlagsBits = 0x6B63616264656546;
    v67._object = (void *)0xE800000000000000;
    v68._countAndFlagsBits = 0;
    v68._object = (void *)0xE000000000000000;
    v144._countAndFlagsBits = 0x6B63616264656546;
    v69 = NSLocalizedString(_:tableName:bundle:value:comment:)(v67, (Swift::String_optional)0, (NSBundle)v66, v68, v144);

    v70 = String._bridgeToObjectiveC()();
    v71 = objc_msgSend(v128, "systemImageNamed:", v70);

    v48(v60, v133, v61);
    v72 = swift_allocObject(&unk_1001E9D78, v132, v127);
    v73 = v120;
    *(_QWORD *)(v72 + 16) = v120;
    v64(v72 + v52, v60, v61);
    v74 = v121;
    *(_QWORD *)(v72 + v131) = v121;
    v75 = v73;
    v76 = v74;
    v77 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v69._countAndFlagsBits, v69._object, 0, 0, v71, 0, 0, 0, 0, 0, 0, partial apply for closure #4 in closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:), v72);
    type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for UIMenu, UIMenu_ptr);
    v78 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v79 = swift_allocObject(v78, 40, 7);
    v131 = xmmword_10019EDA0;
    *(_OWORD *)(v79 + 16) = xmmword_10019EDA0;
    *(_QWORD *)(v79 + 32) = v77;
    v135 = v79;
    specialized Array._endMutation()(v79);
    v80 = v135;
    v81 = v77;
    v82._countAndFlagsBits = 0;
    v82._object = (void *)0xE000000000000000;
    v138.value.super.isa = 0;
    v138.is_nil = 0;
    v83.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v82, (Swift::String_optional)0, v138, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v80, v111).super.super.isa;
    v84 = v123();
    v132 = v81;
    if ((v84 & 1) != 0)
    {
      if (one-time initialization token for uiInternalOS != -1)
        swift_once(&one-time initialization token for uiInternalOS, one-time initialization function for uiInternalOS);
      v85 = (void *)v114;
      if (static MOAngelControllerWrapper.uiInternalOS == 1)
      {
        v86 = swift_allocObject(v78, 48, 7);
        *(_OWORD *)(v86 + 16) = xmmword_10019F870;
        *(_QWORD *)(v86 + 32) = v85;
        *(UIMenu *)(v86 + 40) = v83;
        v135 = v86;
        specialized Array._endMutation()(v86);
        v87 = v135;
        v88 = v83.super.super.isa;
      }
      else
      {
        v92 = swift_allocObject(v78, 40, 7);
        *(_OWORD *)(v92 + 16) = v131;
        *(_QWORD *)(v92 + 32) = v85;
        v135 = v92;
        specialized Array._endMutation()(v92);
        v87 = v135;
      }
    }
    else
    {
      if (one-time initialization token for uiInternalOS != -1)
        swift_once(&one-time initialization token for uiInternalOS, one-time initialization function for uiInternalOS);
      v85 = (void *)v114;
      if (static MOAngelControllerWrapper.uiInternalOS == 1)
      {
        v89 = swift_allocObject(v78, 56, 7);
        *(_OWORD *)(v89 + 16) = xmmword_1001A1E50;
        v90 = object;
        *(_QWORD *)(v89 + 32) = v85;
        *(_QWORD *)(v89 + 40) = v90;
        *(UIMenu *)(v89 + 48) = v83;
        v135 = v89;
        specialized Array._endMutation()(v89);
        v87 = v135;
        v91 = v83.super.super.isa;
      }
      else
      {
        v93 = swift_allocObject(v78, 48, 7);
        *(_OWORD *)(v93 + 16) = xmmword_10019F870;
        v90 = object;
        *(_QWORD *)(v93 + 32) = v85;
        *(_QWORD *)(v93 + 40) = v90;
        v135 = v93;
        specialized Array._endMutation()(v93);
        v87 = v135;
      }
      v94 = v90;
    }
    v135 = v87;
    v95 = *(uint64_t (**)(void))((swift_isaMask & *v75) + 0xF8);
    v96 = v85;
    v97 = v95();
    v98 = (void *)v125;
    if (!v97)
      goto LABEL_35;
    v99 = v97;
    v100 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v97 + 680))(v133);
    v101 = swift_release(v99);
    if (!v100)
      goto LABEL_35;
    if (((*(uint64_t (**)(__n128))(*(_QWORD *)v100 + 432))(v101) & 1) != 0)
    {
      swift_bridgeObjectRelease(v87);
      v102 = swift_allocObject(v78, 40, 7);
      *(_OWORD *)(v102 + 16) = v131;
      *(_QWORD *)(v102 + 32) = v96;
      v134 = v102;
      specialized Array._endMutation()(v102);
      v135 = v134;
      v103 = v96;
      if ((((uint64_t (*)(id))v123)(v103) & 1) != 0)
        goto LABEL_34;
      if (one-time initialization token for uiInternalOS != -1)
        swift_once(&one-time initialization token for uiInternalOS, one-time initialization function for uiInternalOS);
      if (static MOAngelControllerWrapper.uiInternalOS != 1)
        goto LABEL_34;
      v104 = v83.super.super.isa;
    }
    else
    {
      v104 = v98;
    }
    v105 = v104;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v104);
    v107 = *(_QWORD *)((v135 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v106 = *(_QWORD *)((v135 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v107 >= v106 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v106 > 1, v107 + 1, 1);
    v108 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v107, v105);
    specialized Array._endMutation()(v108);
LABEL_34:
    swift_release(v100);
LABEL_35:
    v109._countAndFlagsBits = 0;
    v109._object = (void *)0xE000000000000000;
    v139.value.super.isa = 0;
    v139.is_nil = 0;
    isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v109, (Swift::String_optional)0, v139, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v135, (Swift::OpaquePointer)v112.super.super.isa).super.super.isa;

    return isa;
  }

  return 0;
}

double closure #1 in closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  double result;
  uint64_t v8;
  id *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void);
  id v14;

  v6 = (*(uint64_t (**)(void))((swift_isaMask & *a2) + 0xF8))();
  if (v6)
  {
    v8 = v6;
    v9 = (id *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 680))(a3);
    *(_QWORD *)&result = swift_release(v8).n128_u64[0];
    if (v9)
    {
      v11 = IndexPath.row.getter(v10);
      v12 = (*((uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))*v9 + 66))(v11, 0, 0, 1, a4);
      (*((void (**)(uint64_t))*v9 + 55))(v12);
      if (one-time initialization token for shared != -1)
        swift_once(&one-time initialization token for shared, one-time initialization function for shared);
      v13 = *(void (**)(void))(*(_QWORD *)static MOSuggestionAssetCacheManager.shared + 280);
      v14 = v9[2];
      v13();

      MOSuggestionCollectionView.collectionViewHandleSuggestionSelection(indexPath:interactionState:)(a3, 0);
      *(_QWORD *)&result = swift_release(v9).n128_u64[0];
    }
  }
  return result;
}

double closure #2 in closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  double result;
  uint64_t v8;
  id *v9;
  void (*v10)(void);
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = (*(uint64_t (**)(void))((swift_isaMask & *a2) + 0xF8))();
  if (v6)
  {
    v8 = v6;
    v9 = (id *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 680))(a3);
    *(_QWORD *)&result = swift_release(v8).n128_u64[0];
    if (v9)
    {
      if (one-time initialization token for shared != -1)
        swift_once(&one-time initialization token for shared, one-time initialization function for shared);
      v10 = *(void (**)(void))(*(_QWORD *)static MOSuggestionAssetCacheManager.shared + 280);
      v11 = v9[2];
      v10();

      v13 = IndexPath.row.getter(v12);
      v14 = (*((uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))*v9 + 69))(v13, 0, 0, 1, a4);
      (*((void (**)(uint64_t))*v9 + 55))(v14);
      MOSuggestionCollectionView.collectionViewHandleSuggestionSelection(indexPath:interactionState:)(a3, 1);
      *(_QWORD *)&result = swift_release(v9).n128_u64[0];
    }
  }
  return result;
}

void confirmRemove #1 () in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  NSString v20;
  id v21;
  Swift::String v22;
  Swift::String v23;
  void *object;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  NSString v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  Swift::String v37;
  Swift::String v38;
  void *v39;
  NSString v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t ObjectType;
  uint64_t v46;
  id v47;
  void *v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  void **aBlock;
  uint64_t v53;
  void (*v54)(uint64_t, void *);
  void *v55;
  void *v56;
  uint64_t v57;
  Swift::String v58;
  Swift::String v59;
  Swift::String v60;

  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = __chkstk_darwin(v4);
  v8 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0x140))(v7);
  if (v9)
  {
    v11 = v9;
    v12 = v10;
    v13 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x110))();
    if (v13)
    {
      v48 = (void *)v13;
      v14 = (void *)objc_opt_self(NSBundle);
      v49 = a2;
      v15 = v14;
      v47 = v14;
      v16 = objc_msgSend(v14, "mainBundle");
      v58._countAndFlagsBits = 0xD00000000000002FLL;
      v17._countAndFlagsBits = 0xD000000000000049;
      v58._object = (void *)0x80000001001ABC40;
      v17._object = (void *)0x80000001001ABBF0;
      v18._countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      v19 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, (Swift::String_optional)0, (NSBundle)v16, v18, v58);
      v51 = v12;

      v20 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v19._object);
      v50 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", 0, v20, 0);

      v21 = objc_msgSend(v15, "mainBundle");
      v59._countAndFlagsBits = 0xD00000000000001ELL;
      v59._object = (void *)0x80000001001ABC70;
      v22._countAndFlagsBits = 0x4D2065766F6D6552;
      v22._object = (void *)0xED0000746E656D6FLL;
      v23._countAndFlagsBits = 0;
      v23._object = (void *)0xE000000000000000;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, (Swift::String_optional)0, (NSBundle)v21, v23, v59)._object;

      v25 = swift_allocObject(&unk_1001E9978, 24, 7);
      swift_unknownObjectWeakInit(v25 + 16);
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v49, v4);
      v26 = *(unsigned __int8 *)(v5 + 80);
      v49 = v11;
      v27 = (v26 + 24) & ~v26;
      v28 = (v6 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
      v29 = swift_allocObject(&unk_1001E9DA0, v28 + 8, v26 | 7);
      *(_QWORD *)(v29 + 16) = v25;
      (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v29 + v27, v8, v4);
      v30 = v48;
      *(_QWORD *)(v29 + v28) = v48;
      swift_retain(v25);
      v31 = v30;
      v32 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(object);
      v56 = partial apply for closure #1 in confirmRemove #1 () in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:);
      v57 = v29;
      aBlock = _NSConcreteStackBlock;
      v53 = 1107296256;
      v54 = thunk for @escaping @callee_guaranteed (@guaranteed UIAlertAction) -> ();
      v55 = &block_descriptor_88;
      v33 = _Block_copy(&aBlock);
      swift_release(v57);
      v34 = (void *)objc_opt_self(UIAlertAction);
      v35 = objc_msgSend(v34, "actionWithTitle:style:handler:", v32, 2, v33);
      _Block_release(v33);
      swift_release(v25);

      v36 = objc_msgSend(v47, "mainBundle");
      v60._object = (void *)0x80000001001ABC90;
      v37._countAndFlagsBits = 0x6C65636E6143;
      v37._object = (void *)0xE600000000000000;
      v38._countAndFlagsBits = 0;
      v38._object = (void *)0xE000000000000000;
      v60._countAndFlagsBits = 0xD000000000000013;
      v39 = NSLocalizedString(_:tableName:bundle:value:comment:)(v37, (Swift::String_optional)0, (NSBundle)v36, v38, v60)._object;

      v40 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v39);
      v56 = MOSuggestionInterstitialExpandableListViewCellConstants.init();
      v57 = 0;
      aBlock = _NSConcreteStackBlock;
      v53 = 1107296256;
      v54 = thunk for @escaping @callee_guaranteed (@guaranteed UIAlertAction) -> ();
      v55 = &block_descriptor_91_0;
      v41 = _Block_copy(&aBlock);
      v42 = objc_msgSend(v34, "actionWithTitle:style:handler:", v40, 1, v41, swift_release(v57).n128_f64[0]);
      _Block_release(v41);

      v43 = v50;
      objc_msgSend(v50, "addAction:", v35);
      objc_msgSend(v43, "addAction:", v42);
      v44 = v49;
      ObjectType = swift_getObjectType(v49);
      (*(void (**)(id, uint64_t))(v51 + 8))(v43, ObjectType);
      swift_unknownObjectRelease(v44);

    }
    else
    {
      swift_unknownObjectRelease(v11);
    }
  }
}

uint64_t closure #4 in closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = (*(uint64_t (**)(void))((swift_isaMask & *a2) + 0xF8))();
  if (result)
  {
    v7 = result;
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 680))(a3);
    result = swift_release(v7);
    if (v8)
    {
      v9 = IndexPath.row.getter(result);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v8 + 536))(v9, a4);
      return swift_release(v8);
    }
  }
  return result;
}

void closure #1 in confirmRemove #1 () in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  _QWORD *Strong;
  void *v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  id *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(void);
  id v19;
  _BYTE v20[24];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v20, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = Strong;
    v9 = *(uint64_t (**)(void))((swift_isaMask & *Strong) + 0xF8);
    v10 = v9();
    if (v10)
    {
      v11 = v10;
      v12 = (id *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 680))(a3);
      v13 = swift_release(v11);
      if (v12)
      {
        v14 = IndexPath.row.getter(v13);
        v15 = (*((uint64_t (**)(uint64_t, uint64_t))*v12 + 68))(v14, a4);
        v16 = ((uint64_t (*)(uint64_t))v9)(v15);
        if (v16)
        {
          v17 = v16;
          v18 = *(void (**)(void))(*(_QWORD *)v16 + 800);
          v19 = v12[2];
          v18();
          swift_release(v17);

        }
        swift_release(v12);
      }
    }

  }
}

double MOSuggestionCollectionView.collectionView(_:didEndDisplaying:forItemAt:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return specialized MOSuggestionCollectionView.collectionView(_:didEndDisplaying:forItemAt:)(a3);
}

Swift::Void __swiftcall MOSuggestionCollectionView.scrollViewWillBeginDragging(_:)(UIScrollView a1)
{
  _QWORD *v1;

  (*(void (**)(void))((swift_isaMask & *v1) + 0x248))();
}

uint64_t implicit closure #2 in implicit closure #1 in MOSuggestionCollectionView.presentInterstitialFor(cellViewModel:indexPath:fromNotification:)(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;

  result = (*(uint64_t (**)(void))((swift_isaMask & *a3) + 0x128))();
  if (result)
  {
    v8 = result;
    v9 = a2 & 1;
    if ((_DWORD)v9)
    {
      v10 = v7;
      ObjectType = swift_getObjectType(result);
      (*(void (**)(uint64_t, uint64_t))(v10 + 40))(ObjectType, v10);
    }
    v12 = (*(uint64_t (**)(void))((swift_isaMask & *a3) + 0xF8))();
    if (v12)
    {
      v13 = v12;
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v12 + 704))(a1, v9);
      swift_release(v13);
    }
    return swift_unknownObjectRelease(v8);
  }
  return result;
}

id thunk for @escaping @callee_guaranteed (@guaranteed [UIMenuElement]) -> (@owned UIMenu?)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, __n128);
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  void *v8;

  v4 = *(uint64_t (**)(uint64_t, __n128))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for UIMenuElement, UIMenuElement_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v5);
  v7 = swift_retain(v3);
  v8 = (void *)v4(v6, v7);
  swift_release(v3);
  swift_bridgeObjectRelease(v6);
  return v8;
}

char *specialized MOSuggestionCollectionView.__allocating_init(controller:presentationDelegate:dialogDelegate:segmentedVisibilityDelegate:options:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  char *v18;

  v18 = (char *)objc_allocWithZone((Class)type metadata accessor for MOSuggestionCollectionView());
  return specialized MOSuggestionCollectionView.init(controller:presentationDelegate:dialogDelegate:segmentedVisibilityDelegate:options:)(a1, a2, a3, a4, a5, v18, a7, a8, a9, a10, a11, a12);
}

char *specialized MOSuggestionCollectionView.init(controller:presentationDelegate:dialogDelegate:segmentedVisibilityDelegate:options:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v15;
  void *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  double y;
  double width;
  double height;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(void);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, _UNKNOWN **, __n128);
  char *v47;
  __n128 v48;
  double v49;
  char *v50;
  uint64_t v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  Class isa;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  Class v86;
  id v89;
  uint64_t v90;
  objc_super v93;
  char v94[24];
  char v95[24];
  char v96[24];
  char v97[32];

  *(_QWORD *)&a6[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_suggestionCollectionView] = 0;
  v15 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_onboardingManager;
  v16 = (void *)objc_opt_self(MOOnboardingManager);
  v17 = a6;
  *(_QWORD *)&a6[v15] = objc_msgSend(v16, "sharedInstance");
  *(_QWORD *)&v17[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_viewModel] = 0;
  v18 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_engagementWriter;
  *(_QWORD *)&v17[v18] = objc_msgSend((id)objc_opt_self(MOEngagementHistoryWriter), "sharedInstance");
  v19 = &v17[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_controller];
  swift_unknownObjectWeakInit(&v17[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_controller]);
  v20 = &v17[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_presentationDelegate];
  *((_QWORD *)v20 + 1) = 0;
  swift_unknownObjectWeakInit(v20);
  v21 = &v17[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_dialogDelegate];
  *((_QWORD *)v21 + 1) = 0;
  swift_unknownObjectWeakInit(v21);
  v22 = &v17[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_segmentedVisibilityDelegate];
  *((_QWORD *)v22 + 1) = 0;
  swift_unknownObjectWeakInit(v22);
  v23 = &v17[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_newEntryHeaderDelegate];
  *((_QWORD *)v23 + 1) = 0;
  swift_unknownObjectWeakInit(v23);
  v24 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_privacyBadge;
  y = CGRectZero.origin.y;
  width = CGRectZero.size.width;
  height = CGRectZero.size.height;
  *(_QWORD *)&v17[v24] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MOSuggestionPickerPrivacyBadge()), "initWithFrame:", CGRectZero.origin.x, y, width, height);
  *(_QWORD *)&v17[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_headerOffsetHeight] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_currentBadgeOffset] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_privacyBadgeTopConstraint] = 0;
  v28 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_tipCoordinator;
  *(_QWORD *)&v17[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_tipCoordinator] = 0;
  v29 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_activityIndicator;
  v30 = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "init");
  objc_msgSend(v30, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v17[v29] = v30;
  *(_QWORD *)&v17[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_protectedContentShield] = 0;
  v31 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_supportingLoadingTextLabel;
  closure #1 in variable initialization expression of MOSuggestionCollectionView.supportingLoadingTextLabel();
  *(_QWORD *)&v17[v31] = v32;
  swift_beginAccess(v19, v97, 1, 0);
  swift_unknownObjectWeakAssign(v19, a1);
  swift_beginAccess(v20, v96, 1, 0);
  *((_QWORD *)v20 + 1) = a11;
  v90 = a2;
  swift_unknownObjectWeakAssign(v20, a2);
  swift_beginAccess(v21, v95, 1, 0);
  *((_QWORD *)v21 + 1) = a10;
  swift_unknownObjectWeakAssign(v21, a3);
  swift_beginAccess(v22, v94, 1, 0);
  *((_QWORD *)v22 + 1) = a12;
  swift_unknownObjectWeakAssign(v22, a4);
  *(_QWORD *)&v17[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_options] = a5;
  v33 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0x1D0);
  v89 = a5;
  v34 = v33();
  v36 = v35;
  v37 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x1C8))();
  v39 = v38;
  LOBYTE(a2) = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x1B0))();
  v40 = type metadata accessor for MOSuggestionTipCoordinator();
  swift_allocObject(v40, 75, 7);
  v41 = MOSuggestionTipCoordinator.init(clientId:clientName:isPublicUI:)(v34, v36, v37, v39, a2 & 1);
  v42 = *(_QWORD *)&v17[v28];
  *(_QWORD *)&v17[v28] = v41;

  swift_release(v42);
  v93.receiver = v17;
  v93.super_class = (Class)type metadata accessor for MOSuggestionCollectionView();
  v43 = (char *)objc_msgSendSuper2(&v93, "initWithFrame:", CGRectZero.origin.x, y, width, height);
  v44 = v43;
  v45 = *(_QWORD *)&v43[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_tipCoordinator];
  if (v45)
  {
    v46 = *(void (**)(char *, _UNKNOWN **, __n128))(*(_QWORD *)v45 + 128);
    v47 = v43;
    v48 = swift_retain(v45);
    v46(v44, &protocol witness table for MOSuggestionCollectionView, v48);
    *(_QWORD *)&v49 = swift_release(v45).n128_u64[0];
  }
  else
  {
    v50 = v43;
  }
  v51 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_activityIndicator;
  v52 = *(void **)&v44[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_activityIndicator];
  objc_msgSend(v44, "addSubview:", v52, v49, a10);
  v53 = (void *)objc_opt_self(NSLayoutConstraint);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v55 = swift_allocObject(v54, 64, 7);
  *(_OWORD *)(v55 + 16) = xmmword_10019ED40;
  v56 = objc_msgSend(v52, "centerYAnchor");
  v57 = objc_msgSend(v44, "centerYAnchor");
  v58 = objc_msgSend(v56, "constraintEqualToAnchor:", v57);

  *(_QWORD *)(v55 + 32) = v58;
  v59 = objc_msgSend(*(id *)&v44[v51], "centerXAnchor");
  v60 = objc_msgSend(v44, "centerXAnchor");
  v61 = objc_msgSend(v59, "constraintEqualToAnchor:", v60);

  *(_QWORD *)(v55 + 40) = v61;
  v62 = objc_msgSend(*(id *)&v44[v51], "heightAnchor");
  v63 = objc_msgSend(v62, "constraintEqualToConstant:", 50.0);

  *(_QWORD *)(v55 + 48) = v63;
  v64 = objc_msgSend(*(id *)&v44[v51], "widthAnchor");
  v65 = objc_msgSend(v64, "constraintEqualToConstant:", 50.0);

  *(_QWORD *)(v55 + 56) = v65;
  specialized Array._endMutation()(v66);
  v67 = v55;
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v53, "activateConstraints:", isa, swift_bridgeObjectRelease(v67).n128_f64[0]);

  v69 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_supportingLoadingTextLabel;
  v70 = *(void **)&v44[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_supportingLoadingTextLabel];
  objc_msgSend(v44, "addSubview:", v70);
  v71 = swift_allocObject(v54, 64, 7);
  *(_OWORD *)(v71 + 16) = xmmword_10019ED40;
  v72 = objc_msgSend(v70, "topAnchor");
  v73 = objc_msgSend(*(id *)&v44[v51], "bottomAnchor");
  v74 = objc_msgSend(v72, "constraintEqualToAnchor:constant:", v73, 2.0);

  *(_QWORD *)(v71 + 32) = v74;
  v75 = objc_msgSend(*(id *)&v44[v69], "centerXAnchor");
  v76 = objc_msgSend(v44, "centerXAnchor");
  v77 = objc_msgSend(v75, "constraintEqualToAnchor:", v76);

  *(_QWORD *)(v71 + 40) = v77;
  v78 = objc_msgSend(*(id *)&v44[v69], "leadingAnchor");
  v79 = objc_msgSend(v44, "leadingAnchor");
  v80 = objc_msgSend(v78, "constraintEqualToAnchor:constant:", v79, 20.0);

  *(_QWORD *)(v71 + 48) = v80;
  v81 = objc_msgSend(*(id *)&v44[v69], "trailingAnchor");
  v82 = objc_msgSend(v44, "trailingAnchor");
  v83 = objc_msgSend(v81, "constraintEqualToAnchor:constant:", v82, -20.0);

  *(_QWORD *)(v71 + 56) = v83;
  specialized Array._endMutation()(v84);
  v85 = v71;
  v86 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v53, "activateConstraints:", v86, swift_bridgeObjectRelease(v85).n128_f64[0]);

  swift_unknownObjectRelease(v90);
  swift_unknownObjectRelease(a3);
  swift_unknownObjectRelease(a4);

  return v44;
}

void specialized MOSuggestionCollectionView.init(coder:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_suggestionCollectionView] = 0;
  v1 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_onboardingManager;
  *(_QWORD *)&v0[v1] = objc_msgSend((id)objc_opt_self(MOOnboardingManager), "sharedInstance");
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_viewModel] = 0;
  v2 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_engagementWriter;
  *(_QWORD *)&v0[v2] = objc_msgSend((id)objc_opt_self(MOEngagementHistoryWriter), "sharedInstance");
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_controller]);
  v3 = &v0[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_presentationDelegate];
  *((_QWORD *)v3 + 1) = 0;
  swift_unknownObjectWeakInit(v3);
  v4 = &v0[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_dialogDelegate];
  *((_QWORD *)v4 + 1) = 0;
  swift_unknownObjectWeakInit(v4);
  v5 = &v0[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_segmentedVisibilityDelegate];
  *((_QWORD *)v5 + 1) = 0;
  swift_unknownObjectWeakInit(v5);
  v6 = &v0[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_newEntryHeaderDelegate];
  *((_QWORD *)v6 + 1) = 0;
  swift_unknownObjectWeakInit(v6);
  v7 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_privacyBadge;
  *(_QWORD *)&v0[v7] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MOSuggestionPickerPrivacyBadge()), "initWithFrame:", CGRectZero.origin.x, CGRectZero.origin.y, CGRectZero.size.width, CGRectZero.size.height);
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_headerOffsetHeight] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_currentBadgeOffset] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_privacyBadgeTopConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_tipCoordinator] = 0;
  v8 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_activityIndicator;
  v9 = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "init");
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v8] = v9;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_protectedContentShield] = 0;
  v10 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_supportingLoadingTextLabel;
  closure #1 in variable initialization expression of MOSuggestionCollectionView.supportingLoadingTextLabel();
  *(_QWORD *)&v0[v10] = v11;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionCollectionView.swift", 49, 2, 83, 0);
  __break(1u);
}

uint64_t type metadata accessor for MOSuggestionCollectionView()
{
  return objc_opt_self(_TtC16MomentsUIService26MOSuggestionCollectionView);
}

uint64_t sub_1000F60D0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t partial apply for closure #1 in MOSuggestionCollectionView.layoutSubviews()(char a1, char a2)
{
  uint64_t v2;

  return closure #1 in MOSuggestionCollectionView.layoutSubviews()(a1, a2, v2);
}

uint64_t partial apply for closure #2 in MOSuggestionCollectionView.layoutSubviews()(uint64_t a1)
{
  uint64_t v1;

  return closure #2 in MOSuggestionCollectionView.layoutSubviews()(a1, v1);
}

uint64_t partial apply for closure #3 in MOSuggestionCollectionView.layoutSubviews()()
{
  uint64_t v0;

  return closure #3 in MOSuggestionCollectionView.layoutSubviews()(v0);
}

uint64_t sub_1000F610C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t partial apply for closure #4 in MOSuggestionCollectionView.layoutSubviews()()
{
  uint64_t v0;

  return closure #4 in MOSuggestionCollectionView.layoutSubviews()(*(_QWORD **)(v0 + 16));
}

uint64_t block_copy_helper_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_24(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t partial apply for implicit closure #2 in implicit closure #1 in MOSuggestionCollectionView.presentInterstitialFor(cellViewModel:indexPath:fromNotification:)(uint64_t a1, char a2)
{
  uint64_t v2;

  return implicit closure #2 in implicit closure #1 in MOSuggestionCollectionView.presentInterstitialFor(cellViewModel:indexPath:fromNotification:)(a1, a2 & 1, *(_QWORD **)(v2 + 16));
}

uint64_t partial apply for closure #7 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:)(uint64_t a1, uint64_t a2)
{
  return partial apply for closure #7 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:)(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, char *))closure #7 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:));
}

uint64_t objectdestroy_10Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t partial apply for closure #6 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:)(uint64_t a1, uint64_t a2)
{
  return partial apply for closure #7 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:)(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, char *))closure #6 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:));
}

uint64_t partial apply for closure #7 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, char *))
{
  char *v3;
  uint64_t v6;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  return a3(a1, a2, *((_QWORD *)v3 + 2), *((_QWORD *)v3 + 3), *((_QWORD *)v3 + 4), *((_QWORD *)v3 + 5), &v3[(v6 + 48) & ~v6]);
}

void partial apply for closure #5 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  closure #3 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:)(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t partial apply for closure #4 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:)(uint64_t a1)
{
  return partial apply for closure #4 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:)(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, char *))closure #4 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:));
}

uint64_t objectdestroy_14Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t objectdestroy_24Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t partial apply for closure #2 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:)(uint64_t a1)
{
  return partial apply for closure #4 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:)(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, char *))closure #2 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:));
}

uint64_t partial apply for closure #4 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:)(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, char *))
{
  char *v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  return a2(a1, *((_QWORD *)v2 + 2), *((_QWORD *)v2 + 3), *((_QWORD *)v2 + 4), &v2[(v4 + 40) & ~v4]);
}

void partial apply for closure #2 in MOSuggestionCollectionView.collectionView(_:viewForSupplementaryElementOfKind:at:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  closure #2 in MOSuggestionCollectionView.collectionView(_:viewForSupplementaryElementOfKind:at:)(*(_QWORD *)(v0 + 16), v0 + v2, *(void **)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1000F649C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t partial apply for implicit closure #8 in implicit closure #7 in MOSuggestionCollectionView.collectionView(_:viewForSupplementaryElementOfKind:at:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  v1 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType(*(_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 32))(ObjectType, v1);
}

uint64_t partial apply for implicit closure #6 in implicit closure #5 in MOSuggestionCollectionView.collectionView(_:viewForSupplementaryElementOfKind:at:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  v1 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType(*(_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 24))(ObjectType, v1);
}

double specialized MOSuggestionCollectionView.collectionView(_:didSelectItemAt:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  v4 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xF8))();
  if (v4)
  {
    v6 = v4;
    v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 680))(a1);
    v5 = swift_release(v6);
    if (v7)
    {
      v8 = (*(uint64_t (**)(__n128))((swift_isaMask & *v2) + 0x110))(v5);
      if (v8)
      {
        v9 = (void *)v8;
        v10 = (*(uint64_t (**)(void))(*(_QWORD *)v7 + 424))();
        if ((v10 & 1) != 0)
        {
          MOSuggestionCollectionView.presentInterstitialFor(cellViewModel:indexPath:fromNotification:)(v7, a1, 0);
        }
        else
        {
          v11 = IndexPath.row.getter(v10);
          (*(void (**)(uint64_t, _QWORD, _QWORD, uint64_t, void *))(*(_QWORD *)v7 + 528))(v11, 0, 0, 1, v9);
        }

      }
      v5.n128_u64[0] = swift_release(v7).n128_u64[0];
    }
  }
  return v5.n128_f64[0];
}

double specialized MOSuggestionCollectionView.collectionView(_:layout:referenceSizeForHeaderInSection:)(void *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t (*v19)(__n128);
  __n128 v20;
  id v21;
  unsigned __int8 v22;
  double v23;
  id v24;
  double Width;
  id v26;
  Class isa;
  double v28;
  double v29;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  void (*v40)(char *, uint64_t);
  void *v41;
  double v42;
  double v43;
  id v44;
  double v45;
  void *v46;
  double v47;
  id v48;
  double v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t);
  void *v52;
  double v53;
  double v54;
  id v55;
  double v56;
  id v57;
  char v58;
  void *v59;
  double v60;
  id v61;
  double v62;
  char v63;
  void *v64;
  double v65;
  id v66;
  id v67;
  double v68;
  id v69;
  char v70;
  void *v71;
  _QWORD *v72;
  uint64_t v73;
  char v74;
  CGRect v75;

  v3 = v2;
  v6 = type metadata accessor for Tips.Status(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v71 - v12;
  v14 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0xF8))(v11);
  if (!v14)
    return CGSizeZero.width;
  v15 = v14;
  v16 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x110))();
  if (!v16)
  {
    swift_release(v15);
    return CGSizeZero.width;
  }
  v17 = (void *)v16;
  v18 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_tipCoordinator);
  if (!v18)
  {
    swift_release(v15);

    return CGSizeZero.width;
  }
  v71 = a1;
  v72 = v17;
  v19 = *(uint64_t (**)(__n128))(*(_QWORD *)v15 + 552);
  v73 = v18;
  v20 = swift_retain(v18);
  if ((v19(v20) & 1) != 0)
  {
    v21 = objc_msgSend((id)objc_opt_self(MOOnboardingManager), "sharedInstance");
    v22 = objc_msgSend(v21, "isOnboarded");

    if ((v22 & 1) != 0)
    {
      if (a2)
        goto LABEL_7;
      v50 = v73;
      v51 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v73 + 272);
      if ((v51(1) & 1) != 0)
      {
        v52 = v71;
        calculateHeaderSize #1 (reuseIdentifier:padding:) in MOSuggestionCollectionView.collectionView(_:layout:referenceSizeForHeaderInSection:)(0xD00000000000001ALL, 0x80000001001AB790, 0, v71);
        if (v53 >= 100.0)
          v54 = v53;
        else
          v54 = 200.0;
        v55 = objc_msgSend(v52, "frame");
        v23 = v56;
        v57 = v72;
        v58 = (*(uint64_t (**)(id))((swift_isaMask & *v72) + 0x1B0))(v55);
        *(double *)((char *)v3 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_headerOffsetHeight) = v54 + (*(double (**)(_QWORD))((swift_isaMask & *v3) + 0x218))(v58 & 1) + 1.0;
LABEL_39:
        v64 = *(void **)((char *)v3
                       + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_privacyBadgeTopConstraint);
        if (v64)
        {
          v65 = v54
              + *(double *)((char *)v3
                          + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_currentBadgeOffset);
          v66 = v64;
          objc_msgSend(v66, "setConstant:", v65);

        }
        swift_release(v73);

        goto LABEL_22;
      }
      if ((v51(2) & 1) != 0)
      {
        v59 = v71;
        calculateHeaderSize #1 (reuseIdentifier:padding:) in MOSuggestionCollectionView.collectionView(_:layout:referenceSizeForHeaderInSection:)(0xD000000000000023, 0x80000001001AB7E0, 0, v71);
        if (v60 >= 100.0)
          v54 = v60;
        else
          v54 = 200.0;
        v61 = objc_msgSend(v59, "frame");
        v23 = v62;
        v57 = v72;
        v63 = (*(uint64_t (**)(id))((swift_isaMask & *v72) + 0x1B0))(v61);
        *(double *)((char *)v3 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_headerOffsetHeight) = v54 + (*(double (**)(_QWORD))((swift_isaMask & *v3) + 0x218))(v63 & 1);
        goto LABEL_39;
      }
      v67 = objc_msgSend(v71, "frame");
      v23 = v68;
      v69 = v72;
      v70 = (*(uint64_t (**)(id))((swift_isaMask & *v72) + 0x1B0))(v67);
      v43 = (*(double (**)(_QWORD))((swift_isaMask & *v3) + 0x218))(v70 & 1);
      swift_release(v50);

      swift_release(v15);
    }
    else
    {
      v35 = v73;
      v74 = (*(uint64_t (**)(void))(*(_QWORD *)v73 + 144))() & 1;
      v36 = lazy protocol witness table accessor for type MOSuggestionOnboardingTip and conformance MOSuggestionOnboardingTip();
      Tip.status.getter(&type metadata for MOSuggestionOnboardingTip, v36);
      v37 = enum case for Tips.InvalidationReason.tipClosed(_:);
      v38 = type metadata accessor for Tips.InvalidationReason(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 104))(v10, v37, v38);
      (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v10, enum case for Tips.Status.invalidated(_:), v6);
      v39 = static Tips.Status.== infix(_:_:)(v13, v10);
      v40 = *(void (**)(char *, uint64_t))(v7 + 8);
      v40(v10, v6);
      v40(v13, v6);
      if (((*(uint64_t (**)(_QWORD))(*(_QWORD *)v35 + 272))(0) & 1) != 0)
      {
        v41 = v71;
        calculateHeaderSize #1 (reuseIdentifier:padding:) in MOSuggestionCollectionView.collectionView(_:layout:referenceSizeForHeaderInSection:)(0xD000000000000022, 0x80000001001AB7B0, a2, v71);
        v43 = v42 + 68.0;
      }
      else
      {
        v43 = 68.0;
        v41 = v71;
      }
      v44 = v72;
      objc_msgSend(v41, "frame");
      v23 = v49;
      swift_release(v73);

      swift_release(v15);
      if ((v39 & 1) != 0)
        v43 = 68.0;
    }
    *(double *)((char *)v3 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_headerOffsetHeight) = v43;
    return v23;
  }
LABEL_7:
  if (((*(uint64_t (**)(void))(*(_QWORD *)v15 + 624))() & 1) != 0)
  {
    v23 = calculateHeaderSize #1 (reuseIdentifier:padding:) in MOSuggestionCollectionView.collectionView(_:layout:referenceSizeForHeaderInSection:)(0xD00000000000002FLL, 0x80000001001AB760, a2, v71);
    v24 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
    objc_msgSend(v3, "frame");
    Width = CGRectGetWidth(v75);
    v26 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleTitle3);
    isa = UIFont.withWeight(_:)(UIFontWeightRegular).super.isa;

    -[objc_class pointSize](isa, "pointSize");
    v29 = v28;

    specialized UILabel.estimatedHeight(forWidth:text:ofSize:weight:)(0, 0xE000000000000000, Width, v29, UIFontWeightBold);
LABEL_21:
    swift_release(v73);

LABEL_22:
    swift_release(v15);
    return v23;
  }
  v31 = v73;
  v32 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v73 + 272);
  if ((v32(1) & 1) != 0)
  {
    v33 = 0x80000001001AB790;
    v34 = 0xD00000000000001ALL;
    goto LABEL_19;
  }
  if ((v32(2) & 1) != 0)
  {
    v34 = 0xD000000000000023;
    v33 = 0x80000001001AB7E0;
LABEL_19:
    v23 = calculateHeaderSize #1 (reuseIdentifier:padding:) in MOSuggestionCollectionView.collectionView(_:layout:referenceSizeForHeaderInSection:)(v34, v33, a2, v71);
    v46 = *(void **)((char *)v3
                   + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_privacyBadgeTopConstraint);
    if (v46)
    {
      v47 = v45
          + *(double *)((char *)v3 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_currentBadgeOffset);
      v48 = v46;
      objc_msgSend(v48, "setConstant:", v47);

    }
    goto LABEL_21;
  }
  if ((v32(0) & 1) != 0)
    v23 = calculateHeaderSize #1 (reuseIdentifier:padding:) in MOSuggestionCollectionView.collectionView(_:layout:referenceSizeForHeaderInSection:)(0xD000000000000022, 0x80000001001AB7B0, a2, v71);
  else
    v23 = CGSizeZero.width;
  swift_release(v15);

  swift_release(v31);
  return v23;
}

double specialized MOSuggestionCollectionView.collectionView(_:layout:insetForSectionAt:)(void *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t (*v10)(void);
  double top;
  id v12;
  double v13;
  double v14;

  v5 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0xF8))();
  if (!v5)
    return UIEdgeInsetsZero.top;
  v6 = v5;
  v7 = objc_opt_self(UICollectionViewFlowLayout);
  v8 = (id)swift_dynamicCastObjCClass(a1, v7);
  v9 = v8;
  if (v8)
    v8 = a1;
  v10 = *(uint64_t (**)(void))(*(_QWORD *)v6 + 424);
  if ((((uint64_t (*)(id))v10)(v8) & 1) != 0
    && ((*(uint64_t (**)(void))(*(_QWORD *)v6 + 552))() & 1) != 0
    && !a2)
  {
    swift_release(v6);

    return 0.0;
  }
  else if (v9)
  {
    v12 = v9;
    if ((v10() & 1) != 0)
    {
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 656))(a2);
      objc_msgSend(v12, "sectionInset");
      top = v14;
      objc_msgSend(v12, "sectionInset");
      objc_msgSend(v12, "sectionInset");

      swift_release(v6);
    }
    else
    {
      objc_msgSend(v12, "sectionInset");
      top = v13;
      swift_release(v6);

    }
  }
  else
  {
    top = UIEdgeInsetsZero.top;
    swift_release(v6);
  }
  return top;
}

void specialized MOSuggestionCollectionView.collectionView(_:didEndDisplayingSupplementaryView:forElementOfKind:at:)(void *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;
  __n128 v18;
  uint64_t v19;
  uint64_t (*v20)(void);
  id v21;
  uint64_t ObjectType;
  char v23;

  v7 = (*(uint64_t (**)(void))((swift_isaMask & *v3) + 0xF8))();
  if (v7)
  {
    v8 = v7;
    v9 = (*(uint64_t (**)(void))((swift_isaMask & *v3) + 0x158))();
    if (!v9)
    {
LABEL_17:
      swift_release(v8);
      return;
    }
    v11 = v9;
    v12 = v10;
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
    if (v13 == a2 && v14 == a3)
    {
      v18 = swift_bridgeObjectRelease(a3);
    }
    else
    {
      v16 = v14;
      v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v14, a2, a3, 0);
      v18 = swift_bridgeObjectRelease(v16);
      if ((v17 & 1) == 0)
        goto LABEL_16;
    }
    if (((*(uint64_t (**)(__n128))(*(_QWORD *)v8 + 552))(v18) & 1) == 0)
    {
LABEL_16:
      swift_unknownObjectRelease(v11);
      goto LABEL_17;
    }
    v19 = type metadata accessor for MOSuggestionCollectionViewBlankEntrySectionHeaderView();
    if (swift_dynamicCastClass(a1, v19))
    {
      v20 = *(uint64_t (**)(void))(*(_QWORD *)v8 + 576);
      v21 = a1;
      if ((v20() & 1) == 0)
      {
        ObjectType = swift_getObjectType(v11);
        v23 = (*(uint64_t (**)(void))(*(_QWORD *)v8 + 424))();
        (*(void (**)(_QWORD, uint64_t, uint64_t))(v12 + 8))(v23 & 1, ObjectType, v12);
      }
      swift_unknownObjectRelease(v11);

      goto LABEL_17;
    }
    swift_release(v8);
    swift_unknownObjectRelease(v11);
  }
}

id specialized MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  _QWORD aBlock[5];
  uint64_t v19;

  v3 = type metadata accessor for IndexPath(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = swift_allocObject(&unk_1001E9978, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  v8 = *(unsigned __int8 *)(v4 + 80);
  v9 = (v8 + 24) & ~v8;
  v10 = (v5 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = swift_allocObject(&unk_1001E9CB0, v10 + 8, v8 | 7);
  *(_QWORD *)(v11 + 16) = v7;
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v11 + v9, v6, v3);
  *(_QWORD *)(v11 + v10) = v1;
  v12 = (void *)objc_opt_self(UIContextMenuConfiguration);
  aBlock[4] = partial apply for closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:);
  v19 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed [UIMenuElement]) -> (@owned UIMenu?);
  aBlock[3] = &block_descriptor_69;
  v13 = _Block_copy(aBlock);
  v14 = v19;
  swift_retain(v7);
  v15 = v1;
  swift_retain(v11);
  v16 = objc_msgSend(v12, "configurationWithIdentifier:previewProvider:actionProvider:", 0, 0, v13, swift_release(v14).n128_f64[0]);
  swift_release(v11);
  _Block_release(v13);
  swift_release(v7);
  return v16;
}

double specialized MOSuggestionCollectionView.collectionView(_:didEndDisplaying:forItemAt:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _DWORD *v16;
  _DWORD *v17;
  _DWORD *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  _DWORD *v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;

  v2 = v1;
  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v30 - v9;
  if (serverManager._displayMonitor != (FBSDisplayLayoutMonitor *)-1)
    swift_once(&serverManager._displayMonitor, one-time initialization function for memory);
  v11 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v11, (uint64_t)static MOAngelLogger.memory);
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v12(v10, a1, v4);
  v13 = ((uint64_t (*)(char *, uint64_t, uint64_t))v12)(v8, a1, v4);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (_DWORD *)swift_slowAlloc(22, -1);
    v30 = v1;
    v17 = v16;
    *v16 = 134218240;
    v18 = v16 + 1;
    v19 = IndexPath.section.getter(v16);
    v20 = *(void (**)(char *, uint64_t))(v5 + 8);
    v20(v10, v4);
    v31 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v18);
    *((_WORD *)v17 + 6) = 2048;
    v22 = IndexPath.row.getter(v21);
    v20(v8, v4);
    v31 = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, (char *)v17 + 14);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "[CollectionView] Claning up indexPath=%ld, %ld", (uint8_t *)v17, 0x16u);
    v23 = v17;
    v2 = v30;
    swift_slowDealloc(v23, -1, -1);
  }
  else
  {
    v24 = *(void (**)(char *, uint64_t))(v5 + 8);
    v24(v8, v4);
    v24(v10, v4);
  }

  v25 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0xF8))();
  if (v25)
  {
    v27 = v25;
    v28 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v25 + 680))(a1);
    v26 = swift_release(v27);
    if (v28)
    {
      (*(void (**)(_QWORD, __n128))(*(_QWORD *)v28 + 304))(0, v26);
      v26.n128_u64[0] = swift_release(v28).n128_u64[0];
    }
  }
  return v26.n128_f64[0];
}

uint64_t sub_1000F7520@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xE0))();
  *a2 = result;
  return result;
}

uint64_t sub_1000F7560(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0xE8);
  v4 = *a1;
  return v3(v2);
}

uint64_t sub_1000F75AC@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xF8))();
  *a2 = result;
  return result;
}

uint64_t sub_1000F75EC(_QWORD *a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0x100);
  v3 = swift_retain(*a1);
  return v2(v3);
}

uint64_t sub_1000F762C@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x110))();
  *a2 = result;
  return result;
}

uint64_t sub_1000F766C(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0x118);
  v4 = *a1;
  return v3(v2);
}

uint64_t sub_1000F76B8@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x128))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1000F76F8(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **a2) + 0x130);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t sub_1000F7748@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x140))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1000F7788(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **a2) + 0x148);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t sub_1000F77D8@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x158))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1000F7818(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **a2) + 0x160);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t sub_1000F7868@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x170))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1000F78A8(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **a2) + 0x178);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t sub_1000F78F8@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x200))();
  *a2 = result;
  return result;
}

uint64_t sub_1000F7938(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0x208);
  v4 = *a1;
  return v3(v2);
}

Class partial apply for closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(a1, *(_QWORD *)(v1 + 16), v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t partial apply for closure #1 in closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(uint64_t a1)
{
  return partial apply for closure #1 in closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t, _QWORD))closure #1 in closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:));
}

uint64_t partial apply for closure #2 in closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(uint64_t a1)
{
  return partial apply for closure #1 in closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t, _QWORD))closure #2 in closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:));
}

uint64_t sub_1000F7A1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void partial apply for closure #3 in closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  confirmRemove #1 () in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(*(_QWORD **)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t objectdestroy_71Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t partial apply for closure #4 in closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(uint64_t a1)
{
  return partial apply for closure #1 in closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t, _QWORD))closure #4 in closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:));
}

uint64_t objectdestroy_34Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t partial apply for closure #1 in confirmRemove #1 () in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(uint64_t a1)
{
  return partial apply for closure #1 in closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t, _QWORD))closure #1 in confirmRemove #1 () in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:));
}

uint64_t partial apply for closure #1 in closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, unint64_t, _QWORD))
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return a2(a1, *(_QWORD *)(v2 + 16), v2 + v5, *(_QWORD *)(v2 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8)));
}

void partial apply for closure #1 in closure #3 in MOSuggestionCollectionView.layoutSubviews()()
{
  uint64_t v0;

  closure #1 in closure #3 in MOSuggestionCollectionView.layoutSubviews()(v0);
}

uint64_t sub_1000F7C6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void partial apply for closure #1 in closure #2 in MOSuggestionCollectionView.layoutSubviews()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  closure #1 in closure #2 in MOSuggestionCollectionView.layoutSubviews()(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_1000F7D10()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 26, 7);
}

void partial apply for closure #1 in closure #1 in MOSuggestionCollectionView.layoutSubviews()()
{
  uint64_t v0;

  closure #1 in closure #1 in MOSuggestionCollectionView.layoutSubviews()(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_BYTE *)(v0 + 25));
}

id one-time initialization function for sharedFetcher()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)MOSuggestionAssetContactProfilePictureProviderAvatar), "init");
  static MOSuggestionAssetContactProfilePictureProvider.sharedFetcher = (uint64_t)result;
  return result;
}

uint64_t *MOSuggestionAssetContactProfilePictureProvider.sharedFetcher.unsafeMutableAddressor()
{
  if (one-time initialization token for sharedFetcher != -1)
    swift_once(&one-time initialization token for sharedFetcher, one-time initialization function for sharedFetcher);
  return &static MOSuggestionAssetContactProfilePictureProvider.sharedFetcher;
}

id static MOSuggestionAssetContactProfilePictureProvider.sharedFetcher.getter()
{
  if (one-time initialization token for sharedFetcher != -1)
    swift_once(&one-time initialization token for sharedFetcher, one-time initialization function for sharedFetcher);
  return (id)static MOSuggestionAssetContactProfilePictureProvider.sharedFetcher;
}

void static MOSuggestionAssetContactProfilePictureProvider.getAssetFor(idInput:cacheType:completion:)(uint64_t a1, uint64_t a2, char a3, void (*a4)(void))
{
  id v6;
  NSString v7;
  Class isa;
  id v9;
  id v10;
  double v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  id v21;

  v6 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), "init");
  v7 = String._bridgeToObjectiveC()();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v21 = 0;
  v9 = objc_msgSend(v6, "unifiedContactWithIdentifier:keysToFetch:error:", v7, isa, &v21);

  v10 = v21;
  if (v9)
  {
    if ((a3 - 2) > 8u)
      v11 = 300.0;
    else
      v11 = dbl_1001A1F18[(char)(a3 - 2)];
    v14 = one-time initialization token for sharedFetcher;
    v15 = v21;
    if (v14 != -1)
      swift_once(&one-time initialization token for sharedFetcher, one-time initialization function for sharedFetcher);
    v16 = objc_msgSend((id)static MOSuggestionAssetContactProfilePictureProvider.sharedFetcher, "avatarForContact:size:", v9, v11, v11);
    if (v16)
    {
      v17 = v16;
      v18 = MOSuggestionAssetsTypeContactPhoto;
      v19 = type metadata accessor for UIImage();
      v20 = objc_msgSend(objc_allocWithZone((Class)MOSuggestionAsset), "init:type:contentClassType:", v17, v18, swift_getObjCClassFromMetadata(v19));
      a4();

    }
    else
    {
      a4();
    }

  }
  else
  {
    v12 = v21;
    v13 = _convertNSErrorToError(_:)(v10);

    swift_willThrow();
    swift_errorRelease(v13);
    ((void (*)(_QWORD))a4)(0);
    v9 = v6;
  }

}

double *specialized _arrayForceCast<A, B>(_:)(uint64_t a1)
{
  uint64_t v2;
  double *result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];
  uint64_t v12;
  double *v13;

  v2 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    v13 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *v4;
      v11[0] = *(v4 - 1);
      v11[1] = v5;
      swift_bridgeObjectRetain_n(v5, 2);
      v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
      swift_dynamicCast(&v12, v11, &type metadata for String, v6, 7);
      v7 = v12;
      swift_bridgeObjectRelease(v5);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v8);
      v9 = *((_QWORD *)v13 + 2);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v9);
      v10 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v7);
      specialized ContiguousArray._endMutation()(v10);
      v4 += 2;
      --v2;
    }
    while (v2);
    return v13;
  }
  return result;
}

id static MOSuggestionAssetContactProfilePictureProvider.getContact(withIdentifier:)()
{
  id v0;
  NSString v1;
  Class isa;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v8;

  v0 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), "init");
  v1 = String._bridgeToObjectiveC()();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v8 = 0;
  v3 = objc_msgSend(v0, "unifiedContactWithIdentifier:keysToFetch:error:", v1, isa, &v8);

  v4 = v8;
  if (v3)
  {

  }
  else
  {
    v5 = v4;
    v6 = _convertNSErrorToError(_:)(v4);

    swift_willThrow();
    swift_errorRelease(v6);
    return 0;
  }
  return v3;
}

uint64_t specialized static MOSuggestionAssetContactProfilePictureProvider.getFirstNameFor(idInput:)()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  id v4;
  NSString v5;
  double *v6;
  Class isa;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  double v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v22;
  _BYTE v23[64];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  inited = swift_initStackObject(v0, v23);
  *(_OWORD *)(inited + 16) = xmmword_10019EEE0;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(CNContactGivenNameKey);
  *(_QWORD *)(inited + 40) = v2;
  *(_QWORD *)(inited + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(CNContactIdentifierKey);
  *(_QWORD *)(inited + 56) = v3;
  v4 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), "init");
  v5 = String._bridgeToObjectiveC()();
  v6 = specialized _arrayForceCast<A, B>(_:)(inited);
  swift_bridgeObjectRelease(inited);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v22 = 0;
  v8 = objc_msgSend(v4, "unifiedContactWithIdentifier:keysToFetch:error:", v5, isa, &v22, swift_bridgeObjectRelease(v6).n128_f64[0]);

  v9 = v22;
  if (!v8)
  {
    v19 = v22;
    v20 = _convertNSErrorToError(_:)(v9);

    swift_willThrow();
    swift_errorRelease(v20);

    return 0;
  }
  v10 = v22;
  v11 = objc_msgSend(v8, "givenName");
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v14 = v13;

  *(_QWORD *)&v15 = swift_bridgeObjectRelease(v14).n128_u64[0];
  v16 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0)
    v16 = v12 & 0xFFFFFFFFFFFFLL;
  if (!v16)
  {

    return 0;
  }
  v17 = objc_msgSend(v8, "givenName", v15);
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);

  return v18;
}

uint64_t type metadata accessor for MOSuggestionAssetContactProfilePictureProvider()
{
  return objc_opt_self(_TtC16MomentsUIService46MOSuggestionAssetContactProfilePictureProvider);
}

uint64_t key path setter for MOSuggestionCapsuleButton.buttonTapped : MOSuggestionCapsuleButton(uint64_t *a1, _QWORD **a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t (*)(), uint64_t, __n128);
  __n128 v7;

  v3 = *a1;
  v4 = a1[1];
  v5 = swift_allocObject(&unk_1001E9F30, 32, 7);
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = v4;
  v6 = *(uint64_t (**)(uint64_t (*)(), uint64_t, __n128))((swift_isaMask & **a2) + 0x60);
  v7 = swift_retain(v4);
  return v6(partial apply for thunk for @escaping @callee_guaranteed () -> (@out ()), v5, v7);
}

uint64_t MOSuggestionCapsuleButton.buttonTapped.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC16MomentsUIService25MOSuggestionCapsuleButton_buttonTapped);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService25MOSuggestionCapsuleButton_buttonTapped, v4, 0, 0);
  v2 = *v1;
  swift_retain(v1[1]);
  return v2;
}

uint64_t MOSuggestionCapsuleButton.buttonTapped.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[24];

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC16MomentsUIService25MOSuggestionCapsuleButton_buttonTapped);
  swift_beginAccess(v5, v8, 1, 0);
  v6 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return swift_release(v6);
}

uint64_t (*MOSuggestionCapsuleButton.buttonTapped.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService25MOSuggestionCapsuleButton_buttonTapped, a1, 33, 0);
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

id MOSuggestionCapsuleButton.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (__swiftcall **v23)();
  objc_class *v24;
  id v25;
  void *v26;
  id v27;
  Swift::String v28;
  Swift::String v29;
  void *object;
  NSString v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v37;
  uint64_t v38;
  objc_super v39;
  Swift::String v40;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  __chkstk_darwin(v9);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UIButton.Configuration.CornerStyle(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for UIButton.Configuration.Size(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for UIButton.Configuration(0);
  v37 = *(_QWORD *)(v20 - 8);
  v38 = v20;
  __chkstk_darwin(v20);
  v22 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = (void (__swiftcall **)())&v4[OBJC_IVAR____TtC16MomentsUIService25MOSuggestionCapsuleButton_buttonTapped];
  *v23 = MOSuggestionInterstitialExpandableListViewCellConstants.init();
  v23[1] = 0;
  v24 = (objc_class *)type metadata accessor for MOSuggestionCapsuleButton();
  v39.receiver = v4;
  v39.super_class = v24;
  v25 = objc_msgSendSuper2(&v39, "initWithFrame:", a1, a2, a3, a4);
  static UIButton.Configuration.filled()(v25);
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, enum case for UIButton.Configuration.Size.medium(_:), v16);
  UIButton.Configuration.buttonSize.setter(v19);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v12);
  UIButton.Configuration.cornerStyle.setter(v15);
  v26 = (void *)objc_opt_self(UIColor);
  UIButton.Configuration.baseBackgroundColor.setter(objc_msgSend(v26, "tertiarySystemFillColor"));
  UIButton.Configuration.baseForegroundColor.setter(objc_msgSend(v26, "secondaryLabelColor"));
  v27 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v40._object = (void *)0x80000001001A8000;
  v28._countAndFlagsBits = 0x726F4D20776F6853;
  v28._object = (void *)0xE900000000000065;
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  v40._countAndFlagsBits = 0xD00000000000004ALL;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, (Swift::String_optional)0, (NSBundle)v27, v29, v40)._object;

  v31 = String._bridgeToObjectiveC()();
  objc_msgSend(v25, "setAccessibilityLabel:", v31, swift_bridgeObjectRelease(object).n128_f64[0]);

  v33 = v37;
  v32 = v38;
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v11, v22, v38);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v11, 0, 1, v32);
  UIButton.configuration.setter(v11);
  type metadata accessor for UIAction();
  v34 = swift_allocObject(&unk_1001E9EF8, 24, 7);
  swift_unknownObjectWeakInit(v34 + 16);
  v35 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, partial apply for closure #1 in MOSuggestionCapsuleButton.sharedInit(), v34);
  objc_msgSend(v25, "addAction:forControlEvents:", v35, 64);

  (*(void (**)(char *, uint64_t))(v33 + 8))(v22, v32);
  return v25;
}

uint64_t type metadata accessor for MOSuggestionCapsuleButton()
{
  return objc_opt_self(_TtC16MomentsUIService25MOSuggestionCapsuleButton);
}

uint64_t sub_1000F89F4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

id MOSuggestionCapsuleButton.init(coder:)(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (__swiftcall **v16)();
  objc_class *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  Swift::String v24;
  Swift::String v25;
  void *object;
  NSString v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  objc_super v38;
  Swift::String v39;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  __chkstk_darwin(v3);
  v35 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UIButton.Configuration.CornerStyle(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UIButton.Configuration.Size(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UIButton.Configuration(0);
  v36 = *(_QWORD *)(v13 - 8);
  v37 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (void (__swiftcall **)())&v1[OBJC_IVAR____TtC16MomentsUIService25MOSuggestionCapsuleButton_buttonTapped];
  *v16 = MOSuggestionInterstitialExpandableListViewCellConstants.init();
  v16[1] = 0;
  v17 = (objc_class *)type metadata accessor for MOSuggestionCapsuleButton();
  v38.receiver = v1;
  v38.super_class = v17;
  v18 = objc_msgSendSuper2(&v38, "initWithCoder:", a1);
  v19 = v18;
  if (v18)
  {
    v20 = v18;
    v34 = a1;
    v21 = v20;
    static UIButton.Configuration.filled()(v20);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for UIButton.Configuration.Size.medium(_:), v9);
    UIButton.Configuration.buttonSize.setter(v12);
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v5);
    UIButton.Configuration.cornerStyle.setter(v8);
    v22 = (void *)objc_opt_self(UIColor);
    UIButton.Configuration.baseBackgroundColor.setter(objc_msgSend(v22, "tertiarySystemFillColor"));
    UIButton.Configuration.baseForegroundColor.setter(objc_msgSend(v22, "secondaryLabelColor"));
    v23 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v39._object = (void *)0x80000001001A8000;
    v24._countAndFlagsBits = 0x726F4D20776F6853;
    v24._object = (void *)0xE900000000000065;
    v25._countAndFlagsBits = 0;
    v25._object = (void *)0xE000000000000000;
    v39._countAndFlagsBits = 0xD00000000000004ALL;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, (Swift::String_optional)0, (NSBundle)v23, v25, v39)._object;

    v27 = String._bridgeToObjectiveC()();
    objc_msgSend(v21, "setAccessibilityLabel:", v27, swift_bridgeObjectRelease(object).n128_f64[0]);

    v28 = v35;
    v29 = v36;
    v30 = v37;
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v35, v15, v37);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v28, 0, 1, v30);
    UIButton.configuration.setter(v28);
    type metadata accessor for UIAction();
    v31 = swift_allocObject(&unk_1001E9EF8, 24, 7);
    swift_unknownObjectWeakInit(v31 + 16);
    v32 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, partial apply for closure #1 in MOSuggestionCapsuleButton.sharedInit(), v31);
    objc_msgSend(v21, "addAction:forControlEvents:", v32, 64);

    (*(void (**)(char *, uint64_t))(v29 + 8))(v15, v30);
    a1 = v34;
  }

  return v19;
}

_QWORD *closure #1 in MOSuggestionCapsuleButton.sharedInit()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *result;
  void *v4;
  void (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  result = (_QWORD *)swift_unknownObjectWeakLoadStrong(v2);
  if (result)
  {
    v4 = result;
    v5 = (void (*)(void))(*(uint64_t (**)(void))((swift_isaMask & *result) + 0x58))();
    v7 = v6;

    v5();
    return (_QWORD *)swift_release(v7);
  }
  return result;
}

_QWORD *partial apply for closure #1 in MOSuggestionCapsuleButton.sharedInit()(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in MOSuggestionCapsuleButton.sharedInit()(a1, v1);
}

id MOSuggestionCapsuleButton.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionCapsuleButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000F8EC0@<X0>(_QWORD **a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x58))();
  v5 = v4;
  result = swift_allocObject(&unk_1001E9F58, 32, 7);
  *(_QWORD *)(result + 16) = v3;
  *(_QWORD *)(result + 24) = v5;
  *a2 = partial apply for thunk for @escaping @callee_guaranteed () -> (@out ());
  a2[1] = (uint64_t (*)())result;
  return result;
}

uint64_t sub_1000F8F48()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void *MOSuggestionInterstitialAlertContentViewController.Constants.MARGIN.unsafeMutableAddressor()
{
  return &static MOSuggestionInterstitialAlertContentViewController.Constants.MARGIN;
}

id MOSuggestionInterstitialAlertContentViewController.textView.getter()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialAlertContentViewController_textView));
}

char *MOSuggestionInterstitialAlertContentViewController.init()()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  char *v4;
  char *result;
  char *v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  objc_super v17;

  v1 = OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialAlertContentViewController_textView;
  v2 = objc_allocWithZone((Class)UITextView);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, "init");

  v17.receiver = v3;
  v17.super_class = (Class)type metadata accessor for MOSuggestionInterstitialAlertContentViewController();
  v4 = (char *)objc_msgSendSuper2(&v17, "initWithNibName:bundle:", 0, 0);
  result = (char *)objc_msgSend(v4, "view");
  if (result)
  {
    v6 = result;
    v7 = OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialAlertContentViewController_textView;
    objc_msgSend(result, "addSubview:", *(_QWORD *)&v4[OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialAlertContentViewController_textView]);

    v8 = *(id *)&v4[v7];
    v9 = UIView.fillSuper(margin:)(10.0);

    swift_bridgeObjectRelease(v9);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UITraitDefinition.Type>);
    v11 = swift_allocObject(v10, 48, 7);
    *(_OWORD *)(v11 + 16) = xmmword_10019ED20;
    *(_QWORD *)(v11 + 32) = type metadata accessor for UITraitUserInterfaceStyle(0);
    *(_QWORD *)(v11 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
    v12 = v4;
    v13 = UIViewController.registerForTraitChanges(_:action:)(v11, "handleTraitChange");
    swift_unknownObjectRelease(v13);

    swift_bridgeObjectRelease(v11);
    v14 = *(void **)&v4[v7];
    objc_msgSend(v14, "_setCornerRadius:", 8.0);
    v15 = objc_msgSend(v14, "layer");
    objc_msgSend(v15, "setBorderWidth:", 1.0);

    v16 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleCallout);
    objc_msgSend(v14, "setFont:", v16);

    (*(void (**)(void))((swift_isaMask & *(_QWORD *)v12) + 0x60))();
    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for MOSuggestionInterstitialAlertContentViewController()
{
  return objc_opt_self(_TtC16MomentsUIService50MOSuggestionInterstitialAlertContentViewController);
}

Swift::Void __swiftcall MOSuggestionInterstitialAlertContentViewController.handleTraitChange()()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialAlertContentViewController_textView), "layer");
  v2 = objc_msgSend((id)objc_opt_self(UIColor), "separatorColor");
  v3 = objc_msgSend(v2, "CGColor");

  objc_msgSend(v1, "setBorderColor:", v3);
}

void MOSuggestionInterstitialAlertContentViewController.init(coder:)()
{
  char *v0;
  uint64_t v1;

  v1 = OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialAlertContentViewController_textView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UITextView), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionInterstitialAlertController.swift", 62, 2, 42, 0);
  __break(1u);
}

void MOSuggestionInterstitialAlertContentViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MomentsUIService.MOSuggestionInterstitialAlertContentViewController", 67, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id MOSuggestionInterstitialAlertContentViewController.__deallocating_deinit()
{
  return MOSuggestionRoundView.__deallocating_deinit(type metadata accessor for MOSuggestionInterstitialAlertContentViewController);
}

Swift::Void __swiftcall MOSuggestionInterstitialAlertController.addTextView(with:)(Swift::String with)
{
  char *v1;
  uint64_t v2;
  id v3;
  NSString v4;

  v2 = *(_QWORD *)&v1[OBJC_IVAR____TtC16MomentsUIService39MOSuggestionInterstitialAlertController_textViewContentController];
  v3 = objc_retain(*(id *)(v2
                         + OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialAlertContentViewController_textView));
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "setText:", v4);

  objc_msgSend(v1, "setContentViewController:", v2);
}

id MOSuggestionInterstitialAlertController.currentText.getter()
{
  uint64_t v0;
  id result;
  void *v2;
  uint64_t v3;

  result = objc_msgSend(*(id *)(*(_QWORD *)(v0+ OBJC_IVAR____TtC16MomentsUIService39MOSuggestionInterstitialAlertController_textViewContentController)+ OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialAlertContentViewController_textView), "text");
  if (result)
  {
    v2 = result;
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);

    return (id)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id MOSuggestionInterstitialAlertController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  uint64_t v6;
  id v7;
  char *v8;
  NSString v9;
  id v10;
  objc_super v12;

  v6 = OBJC_IVAR____TtC16MomentsUIService39MOSuggestionInterstitialAlertController_textViewContentController;
  v7 = objc_allocWithZone((Class)type metadata accessor for MOSuggestionInterstitialAlertContentViewController());
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, "init");

  if (a2)
  {
    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v9 = 0;
  }
  v12.receiver = v8;
  v12.super_class = (Class)type metadata accessor for MOSuggestionInterstitialAlertController();
  v10 = objc_msgSendSuper2(&v12, "initWithNibName:bundle:", v9, a3);

  return v10;
}

uint64_t type metadata accessor for MOSuggestionInterstitialAlertController()
{
  return objc_opt_self(_TtC16MomentsUIService39MOSuggestionInterstitialAlertController);
}

id MOSuggestionInterstitialAlertController.init(coder:)(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  id v6;
  objc_super v8;

  v3 = OBJC_IVAR____TtC16MomentsUIService39MOSuggestionInterstitialAlertController_textViewContentController;
  v4 = objc_allocWithZone((Class)type metadata accessor for MOSuggestionInterstitialAlertContentViewController());
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for MOSuggestionInterstitialAlertController();
  v6 = objc_msgSendSuper2(&v8, "initWithCoder:", a1);

  return v6;
}

id MOSuggestionInterstitialAlertController.__deallocating_deinit()
{
  return MOSuggestionRoundView.__deallocating_deinit(type metadata accessor for MOSuggestionInterstitialAlertController);
}

ValueMetadata *type metadata accessor for MOSuggestionInterstitialAlertContentViewController.Constants()
{
  return &type metadata for MOSuggestionInterstitialAlertContentViewController.Constants;
}

unint64_t MOSuggestionAssetsBundle.availableAssets(bundleInterfaceType:)(uint64_t a1)
{
  uint64_t v1;
  char **v2;
  unint64_t result;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  unint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  double v70;
  id v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  unint64_t v76;
  id v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  void *v89;
  uint64_t v90;
  id v91;
  void *v92;
  id v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  double v107;
  id v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  unint64_t v113;
  id v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  id v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  NSObject *v127;
  os_log_type_t v128;
  uint8_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136[3];
  unint64_t v137;

  result = 0;
  v137 = (unint64_t)_swiftEmptyArrayStorage;
  v5 = v1;
  switch(a1)
  {
    case 1:
    case 12:
    case 13:
      v6 = MOSuggestionAssetsTypePhoto;
      v2 = &selRef_setContentOffset_animated_;
      if (objc_msgSend((id)v5, "hasAssetType:", MOSuggestionAssetsTypePhoto))
      {
        v7 = objc_msgSend((id)v5, "assetsForType:", v6);
        if (v7)
        {
          v8 = v7;
          v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
          v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

          specialized Array.append<A>(contentsOf:)(v10);
        }
      }
      v11 = MOSuggestionAssetsTypeWorkout;
      if (objc_msgSend((id)v5, "hasAssetType:", MOSuggestionAssetsTypeWorkout))
      {
        v12 = objc_msgSend((id)v5, "assetsForType:", v11);
        if (v12)
        {
          v13 = v12;
          v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
          v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v14);

          specialized Array.append<A>(contentsOf:)(v15);
        }
      }
      v16 = MOSuggestionAssetsTypeMapSnapshot;
      if (objc_msgSend((id)v5, "hasAssetType:", MOSuggestionAssetsTypeMapSnapshot))
      {
        v17 = objc_msgSend((id)v5, "assetsForType:", v16);
        if (v17)
        {
          v18 = v17;
          v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
          v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v18, v19);

          specialized Array.append<A>(contentsOf:)(v20);
        }
      }
      v21 = MOSuggestionAssetsTypeMotionActivity;
      if (objc_msgSend((id)v5, "hasAssetType:", MOSuggestionAssetsTypeMotionActivity))
      {
        v22 = objc_msgSend((id)v5, "assetsForType:", v21);
        if (v22)
        {
          v23 = v22;
          v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
          v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v23, v24);

          specialized Array.append<A>(contentsOf:)(v25);
        }
      }
      v26 = MOSuggestionAssetsTypeAppIcon;
      if (!objc_msgSend((id)v5, "hasAssetType:", MOSuggestionAssetsTypeAppIcon))
        goto LABEL_150;
      v27 = objc_msgSend((id)v5, "assetsForType:", v26);
      if (!v27)
        goto LABEL_150;
      v28 = v27;
      v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
      v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v28, v29);

      if ((unint64_t)v5 >> 62)
        goto LABEL_78;
      if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_141;
      goto LABEL_18;
    case 2:
    case 3:
    case 10:
      goto LABEL_21;
    case 4:
      v46 = MOSuggestionAssetsTypeContactPhoto;
      if (objc_msgSend((id)v5, "hasAssetType:", MOSuggestionAssetsTypeContactPhoto))
        goto LABEL_148;
      goto LABEL_150;
    case 5:
      v47 = MOSuggestionAssetsTypeMediaCoverArt;
      if (objc_msgSend((id)v5, "hasAssetType:", MOSuggestionAssetsTypeMediaCoverArt))
      {
        v48 = objc_msgSend((id)v5, "assetsForType:", v47);
        if (v48)
        {
          v49 = v48;
          v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
          v51 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v49, v50);

          specialized Array.append<A>(contentsOf:)(v51);
        }
      }
      v52 = MOSuggestionAssetsTypeAppIcon;
      if (!objc_msgSend((id)v5, "hasAssetType:", MOSuggestionAssetsTypeAppIcon))
        goto LABEL_150;
      v53 = objc_msgSend((id)v5, "assetsForType:", v52);
      if (!v53)
        goto LABEL_150;
      v54 = v53;
      v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
      v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v54, v55);

      if ((unint64_t)v5 >> 62)
        goto LABEL_108;
      if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_42;
      goto LABEL_141;
    case 6:
      goto LABEL_45;
    case 7:
      goto LABEL_52;
    case 9:
      goto LABEL_62;
    case 11:
      v80 = MOSuggestionAssetsTypeReflectionPrompt;
      if (!objc_msgSend((id)v5, "hasAssetType:", MOSuggestionAssetsTypeReflectionPrompt))
        goto LABEL_150;
      v81 = objc_msgSend((id)v5, "assetsForType:", v80);
      if (!v81)
        goto LABEL_150;
      v82 = v81;
      v83 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
      v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v82, v83);

      if ((unint64_t)v5 >> 62)
      {
        if (v5 < 0)
          v117 = v5;
        else
          v117 = v5 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v5);
        v118 = _CocoaArrayWrapper.endIndex.getter(v117);
        swift_bridgeObjectRelease(v5);
        if (!v118)
          goto LABEL_141;
      }
      else if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_141;
      }
      if ((v5 & 0xC000000000000001) != 0)
        goto LABEL_98;
      if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_94;
      __break(1u);
LABEL_78:
      if (v5 < 0)
        v84 = v5;
      else
        v84 = v5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v5);
      v85 = _CocoaArrayWrapper.endIndex.getter(v84);
      swift_bridgeObjectRelease(v5);
      if (!v85)
        goto LABEL_141;
LABEL_18:
      if ((v5 & 0xC000000000000001) != 0)
        goto LABEL_98;
      if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_94;
      __break(1u);
LABEL_21:
      v30 = MOSuggestionAssetsTypePhoto;
      if (objc_msgSend((id)v5, "hasAssetType:", MOSuggestionAssetsTypePhoto))
      {
        v31 = objc_msgSend((id)v5, "assetsForType:", v30);
        if (v31)
        {
          v32 = v31;
          v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
          v34 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v32, v33);

          specialized Array.append<A>(contentsOf:)(v34);
        }
      }
      v35 = MOSuggestionAssetsTypeMapSnapshot;
      if (!objc_msgSend((id)v5, "hasAssetType:", MOSuggestionAssetsTypeMapSnapshot))
        goto LABEL_88;
      v37 = objc_msgSend((id)v5, "assetsForType:", v35);
      if (!v37)
        goto LABEL_88;
      v38 = v37;
      v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
      v40 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v38, v39);

      if ((unint64_t)v40 >> 62)
      {
        if (v40 < 0)
          v86 = v40;
        else
          v86 = v40 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v40);
        v41 = (id)_CocoaArrayWrapper.endIndex.getter(v86);
        swift_bridgeObjectRelease(v40);
        if (v41)
        {
LABEL_28:
          if ((v40 & 0xC000000000000001) != 0)
          {
            v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v40);
          }
          else
          {
            v42 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (!v42)
            {
              __break(1u);
              goto LABEL_106;
            }
            v43 = *(id *)(v40 + 32);
          }
          v44 = v43;
          swift_bridgeObjectRelease(v40);
          v41 = v44;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v41);
          v2 = *(char ***)((v137 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v42 = *(_QWORD *)((v137 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if ((unint64_t)v2 < v42 >> 1)
          {
LABEL_32:
            v45 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v2, v41);
            specialized Array._endMutation()(v45);

            goto LABEL_88;
          }
LABEL_106:
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v42 > 1, (char *)v2 + 1, 1);
          goto LABEL_32;
        }
      }
      else
      {
        v41 = *(id *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v41)
          goto LABEL_28;
      }
      *(_QWORD *)&v36 = swift_bridgeObjectRelease(v40).n128_u64[0];
LABEL_88:
      v87 = MOSuggestionAssetsTypeActivityRings;
      if (!objc_msgSend((id)v5, "hasAssetType:", MOSuggestionAssetsTypeActivityRings, v36))
        goto LABEL_150;
      v88 = objc_msgSend((id)v5, "assetsForType:", v87);
      if (!v88)
        goto LABEL_150;
      v89 = v88;
      v90 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
      v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v89, v90);

      if ((unint64_t)v5 >> 62)
      {
        if (v5 < 0)
          v97 = v5;
        else
          v97 = v5 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v5);
        v98 = _CocoaArrayWrapper.endIndex.getter(v97);
        swift_bridgeObjectRelease(v5);
        if (!v98)
          goto LABEL_141;
      }
      else if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_141;
      }
      if ((v5 & 0xC000000000000001) != 0)
        goto LABEL_98;
      if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_94;
      __break(1u);
LABEL_108:
      if (v5 < 0)
        v99 = v5;
      else
        v99 = v5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v5);
      v100 = _CocoaArrayWrapper.endIndex.getter(v99);
      swift_bridgeObjectRelease(v5);
      if (!v100)
        goto LABEL_141;
LABEL_42:
      if ((v5 & 0xC000000000000001) != 0)
        goto LABEL_98;
      if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_94;
      __break(1u);
LABEL_45:
      v56 = MOSuggestionAssetsTypeLinkPreview;
      if (!objc_msgSend((id)v5, "hasAssetType:", MOSuggestionAssetsTypeLinkPreview))
        goto LABEL_150;
      v57 = objc_msgSend((id)v5, "assetsForType:", v56);
      if (!v57)
        goto LABEL_150;
      v58 = v57;
      v59 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
      v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v58, v59);

      if ((unint64_t)v5 >> 62)
      {
        if (v5 < 0)
          v101 = v5;
        else
          v101 = v5 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v5);
        v102 = _CocoaArrayWrapper.endIndex.getter(v101);
        swift_bridgeObjectRelease(v5);
        if (!v102)
          goto LABEL_141;
      }
      else if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_141;
      }
      if ((v5 & 0xC000000000000001) != 0)
      {
LABEL_98:
        v91 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v5);
        goto LABEL_95;
      }
      if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_94:
        v91 = *(id *)(v5 + 32);
LABEL_95:
        v92 = v91;
        swift_bridgeObjectRelease(v5);
        v93 = v92;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v93);
        v95 = *(_QWORD *)((v137 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v94 = *(_QWORD *)((v137 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v95 >= v94 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v94 > 1, v95 + 1, 1);
        v96 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v95, v93);
        specialized Array._endMutation()(v96);

        goto LABEL_150;
      }
      __break(1u);
LABEL_52:
      v60 = MOSuggestionAssetsTypePhoto;
      v2 = &selRef_setContentOffset_animated_;
      if (objc_msgSend((id)v5, "hasAssetType:", MOSuggestionAssetsTypePhoto))
      {
        v61 = objc_msgSend((id)v5, "assetsForType:", v60);
        if (v61)
        {
          v62 = v61;
          v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
          v64 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v62, v63);

          specialized Array.append<A>(contentsOf:)(v64);
        }
      }
      v65 = MOSuggestionAssetsTypeMapSnapshot;
      if (!objc_msgSend((id)v5, "hasAssetType:", MOSuggestionAssetsTypeMapSnapshot))
        goto LABEL_150;
      v66 = objc_msgSend((id)v5, "assetsForType:", v65);
      if (!v66)
        goto LABEL_150;
      v67 = v66;
      v68 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
      v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v67, v68);

      if (!((unint64_t)v5 >> 62))
      {
        if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_59;
LABEL_141:
        swift_bridgeObjectRelease(v5);
        goto LABEL_150;
      }
      if (v5 < 0)
        v103 = v5;
      else
        v103 = v5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v5);
      v104 = _CocoaArrayWrapper.endIndex.getter(v103);
      swift_bridgeObjectRelease(v5);
      if (!v104)
        goto LABEL_141;
LABEL_59:
      if ((v5 & 0xC000000000000001) != 0)
        goto LABEL_98;
      if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_94;
      __break(1u);
LABEL_62:
      v69 = MOSuggestionAssetsTypeSystemImage;
      if (objc_msgSend((id)v5, "hasAssetType:", MOSuggestionAssetsTypeSystemImage))
      {
        v71 = objc_msgSend((id)v5, "assetsForType:", v69);
        if (v71)
        {
          v72 = v71;
          v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
          v74 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v72, v73);

          if ((unint64_t)v74 >> 62)
          {
            if (v74 < 0)
              v105 = v74;
            else
              v105 = v74 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v74);
            v75 = (id)_CocoaArrayWrapper.endIndex.getter(v105);
            swift_bridgeObjectRelease(v74);
            if (v75)
            {
LABEL_66:
              if ((v74 & 0xC000000000000001) != 0)
              {
                v77 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v74);
              }
              else
              {
                v76 = *(_QWORD *)((v74 & 0xFFFFFFFFFFFFF8) + 0x10);
                if (!v76)
                {
                  __break(1u);
                  goto LABEL_158;
                }
                v77 = *(id *)(v74 + 32);
              }
              v78 = v77;
              swift_bridgeObjectRelease(v74);
              v75 = v78;
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v75);
              v2 = *(char ***)((v137 & 0xFFFFFFFFFFFFFF8) + 0x10);
              v76 = *(_QWORD *)((v137 & 0xFFFFFFFFFFFFFF8) + 0x18);
              if ((unint64_t)v2 < v76 >> 1)
              {
LABEL_70:
                v79 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v2, v75);
                specialized Array._endMutation()(v79);

                goto LABEL_128;
              }
LABEL_158:
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v76 > 1, (char *)v2 + 1, 1);
              goto LABEL_70;
            }
          }
          else
          {
            v75 = *(id *)((v74 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (v75)
              goto LABEL_66;
          }
          *(_QWORD *)&v70 = swift_bridgeObjectRelease(v74).n128_u64[0];
        }
      }
LABEL_128:
      v106 = MOSuggestionAssetsTypeContactPhoto;
      if (objc_msgSend((id)v5, "hasAssetType:", MOSuggestionAssetsTypeContactPhoto, v70))
      {
        v108 = objc_msgSend((id)v5, "assetsForType:", v106);
        if (v108)
        {
          v109 = v108;
          v110 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
          v111 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v109, v110);

          if ((unint64_t)v111 >> 62)
          {
            if (v111 < 0)
              v119 = v111;
            else
              v119 = v111 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v111);
            v112 = (id)_CocoaArrayWrapper.endIndex.getter(v119);
            swift_bridgeObjectRelease(v111);
            if (v112)
            {
LABEL_132:
              if ((v111 & 0xC000000000000001) != 0)
              {
                v114 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v111);
              }
              else
              {
                v113 = *(_QWORD *)((v111 & 0xFFFFFFFFFFFFF8) + 0x10);
                if (!v113)
                {
                  __break(1u);
                  goto LABEL_161;
                }
                v114 = *(id *)(v111 + 32);
              }
              v115 = v114;
              swift_bridgeObjectRelease(v111);
              v112 = v115;
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v112);
              v2 = *(char ***)((v137 & 0xFFFFFFFFFFFFFF8) + 0x10);
              v113 = *(_QWORD *)((v137 & 0xFFFFFFFFFFFFFF8) + 0x18);
              if ((unint64_t)v2 < v113 >> 1)
              {
LABEL_136:
                v116 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v2, v112);
                specialized Array._endMutation()(v116);

                goto LABEL_147;
              }
LABEL_161:
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v113 > 1, (char *)v2 + 1, 1);
              goto LABEL_136;
            }
          }
          else
          {
            v112 = *(id *)((v111 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (v112)
              goto LABEL_132;
          }
          *(_QWORD *)&v107 = swift_bridgeObjectRelease(v111).n128_u64[0];
        }
      }
LABEL_147:
      v46 = MOSuggestionAssetsTypeWorkout;
      if (objc_msgSend((id)v5, "hasAssetType:", MOSuggestionAssetsTypeWorkout, v107))
      {
LABEL_148:
        v120 = objc_msgSend((id)v5, "assetsForType:", v46);
        if (v120)
        {
          v121 = v120;
          v122 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
          v123 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v121, v122);

          specialized Array.append<A>(contentsOf:)(v123);
        }
      }
LABEL_150:
      if (serverManager._clientConnections != (NSMutableDictionary *)-1)
        swift_once(&serverManager._clientConnections, one-time initialization function for shared);
      v124 = type metadata accessor for Logger(0);
      __swift_project_value_buffer(v124, (uint64_t)static MOAngelLogger.shared);
      v125 = v137;
      v126 = swift_bridgeObjectRetain_n(v137, 2);
      v127 = Logger.logObject.getter(v126);
      v128 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v127, v128))
      {
        v129 = (uint8_t *)swift_slowAlloc(12, -1);
        v130 = swift_slowAlloc(32, -1);
        v136[0] = v130;
        *(_DWORD *)v129 = 136315138;
        v131 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
        v132 = Array.debugDescription.getter(v125, v131);
        v134 = v133;
        v135 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v132, v133, v136);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, v136, v129 + 4);
        swift_bridgeObjectRelease_n(v125, 2);
        swift_bridgeObjectRelease(v134);
        _os_log_impl((void *)&_mh_execute_header, v127, v128, "[Assets] Preparing assets in order %s", v129, 0xCu);
        swift_arrayDestroy(v130, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v130, -1, -1);
        swift_slowDealloc(v129, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v137, 2);
      }
      swift_beginAccess(&v137, v136, 0, 0);
      return v137;
    default:
      return result;
  }
}

id MOSuggestionLinkShareView.__allocating_init(linkMetadata:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return MOSuggestionLinkShareView.init(linkMetadata:)(a1);
}

id MOSuggestionLinkShareView.init(linkMetadata:)(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double y;
  double width;
  double height;
  objc_class *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  NSURL *v21;
  void *v22;
  void *v23;
  id v24;
  objc_super v26;

  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  y = CGRectZero.origin.y;
  width = CGRectZero.size.width;
  height = CGRectZero.size.height;
  v13 = (objc_class *)type metadata accessor for MOSuggestionLinkShareView();
  v26.receiver = v1;
  v26.super_class = v13;
  v14 = objc_msgSendSuper2(&v26, "initWithFrame:", CGRectZero.origin.x, y, width, height);
  v15 = objc_allocWithZone((Class)LPLinkMetadata);
  v16 = v14;
  v17 = objc_msgSend(v15, "init");
  v18 = objc_msgSend(a1, "title");
  objc_msgSend(v17, "setTitle:", v18);

  v19 = objc_msgSend(a1, "URL");
  if (v19)
  {
    v20 = v19;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v19);

    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v6, v3);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v9, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
    {
      v22 = 0;
    }
    else
    {
      URL._bridgeToObjectiveC()(v21);
      v22 = v23;
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v9, 1, 1, v3);
    v22 = 0;
  }
  objc_msgSend(v17, "setURL:", v22);

  v24 = objc_msgSend(a1, "image");
  objc_msgSend(v17, "setImage:", v24);

  objc_msgSend(v16, "setUserInteractionEnabled:", 0);
  objc_msgSend(v16, "setMetadata:", v17);
  objc_msgSend(v16, "_setPreferredSizeClass:", 5);

  return v16;
}

uint64_t type metadata accessor for MOSuggestionLinkShareView()
{
  return objc_opt_self(_TtC16MomentsUIService25MOSuggestionLinkShareView);
}

id MOSuggestionLinkShareView.__allocating_init(url:)(uint64_t a1)
{
  return MOSuggestionLinkShareView.__allocating_init(url:)(a1, (uint64_t (*)(void))&URL._bridgeToObjectiveC(), (SEL *)&selRef_initWithURL_, (uint64_t (*)(_QWORD))&type metadata accessor for URL);
}

void MOSuggestionLinkShareView.init(url:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MomentsUIService.MOSuggestionLinkShareView", 42, "init(url:)", 10, 0);
  __break(1u);
}

id MOSuggestionLinkShareView.__allocating_init(metadata:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithMetadata:", a1);

  return v3;
}

void MOSuggestionLinkShareView.init(metadata:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MomentsUIService.MOSuggestionLinkShareView", 42, "init(metadata:)", 15, 0);
  __break(1u);
}

void MOSuggestionLinkShareView.init(frame:)()
{
  MOSuggestionCutoutView.init(frame:)((uint64_t)"MomentsUIService.MOSuggestionLinkShareView", 42);
}

id MOSuggestionLinkShareView.__allocating_init(presentationProperties:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithPresentationProperties:", a1);
  swift_unknownObjectRelease(a1);
  return v3;
}

void MOSuggestionLinkShareView.init(presentationProperties:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MomentsUIService.MOSuggestionLinkShareView", 42, "init(presentationProperties:)", 29, 0);
  __break(1u);
}

id MOSuggestionLinkShareView.__allocating_init(presentationProperties:url:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  objc_class *v3;
  uint64_t v6;
  uint64_t v7;
  NSURL *v8;
  void *v9;
  void *v10;
  id v11;

  v3 = v2;
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v9 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6) != 1)
  {
    URL._bridgeToObjectiveC()(v8);
    v9 = v10;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
  }
  v11 = objc_msgSend(objc_allocWithZone(v3), "initWithPresentationProperties:URL:", a1, v9);

  swift_unknownObjectRelease(a1);
  return v11;
}

void MOSuggestionLinkShareView.init(presentationProperties:url:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MomentsUIService.MOSuggestionLinkShareView", 42, "init(presentationProperties:url:)", 33, 0);
  __break(1u);
}

id MOSuggestionLinkShareView.__allocating_init(metadataLoadedFrom:)(uint64_t a1)
{
  return MOSuggestionLinkShareView.__allocating_init(url:)(a1, (uint64_t (*)(void))&URL._bridgeToObjectiveC(), (SEL *)&selRef_initWithMetadataLoadedFromURL_, (uint64_t (*)(_QWORD))&type metadata accessor for URL);
}

{
  return MOSuggestionLinkShareView.__allocating_init(url:)(a1, (uint64_t (*)(void))&URLRequest._bridgeToObjectiveC(), (SEL *)&selRef_initWithMetadataLoadedFromRequest_, (uint64_t (*)(_QWORD))&type metadata accessor for URLRequest);
}

id MOSuggestionLinkShareView.__allocating_init(url:)(uint64_t a1, uint64_t (*a2)(void), SEL *a3, uint64_t (*a4)(_QWORD))
{
  objc_class *v4;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;

  v9 = objc_allocWithZone(v4);
  v10 = (void *)a2();
  v11 = objc_msgSend(v9, *a3, v10);

  v12 = a4(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1, v12);
  return v11;
}

void MOSuggestionLinkShareView.init(metadataLoadedFrom:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MomentsUIService.MOSuggestionLinkShareView", 42, "init(metadataLoadedFrom:)", 25, 0);
  __break(1u);
}

{
  MOSuggestionLinkShareView.init(metadataLoadedFrom:)();
}

void @objc MOSuggestionLinkShareView.init(url:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), void (*a5)(uint64_t), uint64_t a6, uint64_t a7)
{
  uint64_t v11;

  v11 = a4(0);
  __chkstk_darwin(v11);
  a5(a3);
  _swift_stdlib_reportUnimplementedInitializer("MomentsUIService.MOSuggestionLinkShareView", 42, a6, a7, 0);
  __break(1u);
}

id MOSuggestionLinkShareView.__deallocating_deinit()
{
  return MOSuggestionRoundView.__deallocating_deinit(type metadata accessor for MOSuggestionLinkShareView);
}

uint64_t mapImageView.__allocating_init(image:weatherString:weatherTemperature:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  id v9;

  v9 = objc_allocWithZone(v4);
  return mapImageView.init(image:weatherString:weatherTemperature:)(a1, a2, a3, a4);
}

uint64_t mapImageView.init(image:weatherString:weatherTemperature:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  double y;
  double width;
  double height;
  objc_class *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  _QWORD *v22;
  id v23;
  id v24;
  id v25;
  NSString v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(uint64_t, uint64_t, uint64_t);
  id v46;
  id v47;
  id v48;
  double v49;
  uint64_t (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  id v56;
  uint64_t v57;
  void *v58;
  void *v59;
  Swift::String v60;
  uint64_t v61;
  NSString v62;
  id v63;
  id v64;
  id v65;
  void *v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  void *v72;
  id v73;
  id v74;
  id v75;
  id v76;
  void *v77;
  id v78;
  void *v79;
  uint64_t result;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  objc_super v87;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>?);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v81 - v12;
  y = CGRectZero.origin.y;
  width = CGRectZero.size.width;
  height = CGRectZero.size.height;
  v17 = (objc_class *)type metadata accessor for mapImageView();
  v87.receiver = v4;
  v87.super_class = v17;
  v18 = objc_msgSendSuper2(&v87, "initWithFrame:", CGRectZero.origin.x, y, width, height);
  v19 = objc_allocWithZone((Class)UIImageView);
  v20 = v18;
  v83 = a1;
  v21 = objc_msgSend(v19, "initWithImage:", a1);
  objc_msgSend(v21, "setContentMode:", 2);
  v84 = v20;
  objc_msgSend(v20, "addSubview:", v21);
  v22 = UIView.fillSuper(margin:)(0.0);
  swift_bridgeObjectRelease(v22);
  if (a3)
  {
    v82 = a4;
    v23 = objc_msgSend((id)objc_opt_self(UIFont), "boldSystemFontOfSize:", 20.0);
    v24 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:", v23);

    v25 = v24;
    v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
    v27 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v26, v25);

    v28 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v27);
    v29 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlackColor");
    v30 = objc_msgSend(v29, "colorWithAlphaComponent:", 0.7);

    objc_msgSend(v28, "setTintColor:", v30);
    objc_msgSend(v21, "addSubview:", v28);
    v31 = objc_msgSend(v28, "superview");
    if (v31)
    {
      v32 = v31;
      objc_msgSend(v28, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v33 = objc_msgSend(v28, "trailingAnchor");
      v34 = objc_msgSend(v32, "trailingAnchor");
      v35 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

      objc_msgSend(v35, "setConstant:", -66.0);
      if (v35)
      {
        v36 = v35;
        objc_msgSend(v36, "setActive:", 1);

      }
    }
    v37 = objc_msgSend(v28, "superview");
    if (v37)
    {
      v38 = v37;
      objc_msgSend(v28, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v39 = objc_msgSend(v28, "bottomAnchor");
      v40 = objc_msgSend(v38, "bottomAnchor");
      v41 = objc_msgSend(v39, "constraintEqualToAnchor:", v40);

      if (v41)
      {
        objc_msgSend(v41, "setConstant:", -1.0);
        v42 = v41;
        objc_msgSend(v42, "setActive:", 1);

        v27 = v28;
        v28 = v42;
        v25 = v38;
      }
      else
      {
        v42 = v38;
      }

      v27 = v28;
      v28 = v42;
    }
    a4 = v82;

  }
  v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
  v44 = *(_QWORD *)(v43 - 8);
  v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48);
  if (v45(a4, 1, v43) == 1)
  {
    v46 = v83;
    v47 = v84;
    v48 = v84;
LABEL_27:

    outlined destroy of Measurement<NSUnitTemperature>?(a4);
    return (uint64_t)v47;
  }
  outlined init with copy of Measurement<NSUnitTemperature>?(a4, (uint64_t)v13);
  if (v45((uint64_t)v13, 1, v43) == 1)
  {
    outlined destroy of Measurement<NSUnitTemperature>?((uint64_t)v13);
    __break(1u);
  }
  else
  {
    v49 = Measurement.value.getter(v43);
    v50 = *(uint64_t (**)(char *, uint64_t))(v44 + 8);
    v51 = v50(v13, v43);
    v52 = Double.description.getter(v51, round(v49 * 10.0) / 10.0);
    v54 = v53;
    outlined init with copy of Measurement<NSUnitTemperature>?(a4, (uint64_t)v11);
    if (v45((uint64_t)v11, 1, v43) != 1)
    {
      v55 = (void *)Measurement.unit.getter(v43);
      v50(v11, v43);
      v56 = objc_msgSend(v55, "symbol");

      v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
      v59 = v58;

      v85 = v52;
      v86 = v54;
      swift_bridgeObjectRetain(v54);
      v60._countAndFlagsBits = v57;
      v60._object = v59;
      String.append(_:)(v60);
      swift_bridgeObjectRelease(v54);
      swift_bridgeObjectRelease(v59);
      v61 = v86;
      v46 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
      v62 = String._bridgeToObjectiveC()();
      objc_msgSend(v46, "setText:", v62, swift_bridgeObjectRelease(v61).n128_f64[0]);

      v63 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlackColor");
      objc_msgSend(v46, "setTextColor:", v63);

      v64 = objc_msgSend((id)objc_opt_self(UIFont), "boldSystemFontOfSize:", 18.0);
      objc_msgSend(v46, "setFont:", v64);

      v47 = v84;
      objc_msgSend(v84, "addSubview:", v46);
      v65 = objc_msgSend(v46, "superview");
      if (v65)
      {
        v66 = v65;
        objc_msgSend(v46, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v67 = objc_msgSend(v46, "trailingAnchor");
        v68 = objc_msgSend(v66, "trailingAnchor");
        v69 = objc_msgSend(v67, "constraintEqualToAnchor:", v68);

        objc_msgSend(v69, "setConstant:", -5.0);
        if (v69)
        {
          v70 = v69;
          objc_msgSend(v70, "setActive:", 1);

        }
      }
      v71 = objc_msgSend(v46, "superview");
      if (v71)
      {
        v72 = v71;
        objc_msgSend(v46, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v73 = objc_msgSend(v46, "bottomAnchor");
        v74 = objc_msgSend(v72, "bottomAnchor");
        v75 = objc_msgSend(v73, "constraintEqualToAnchor:", v74);

        if (v75)
        {
          objc_msgSend(v75, "setConstant:", -1.0);
          v76 = v75;
          objc_msgSend(v76, "setActive:", 1);

          v21 = v76;
          v46 = v72;
        }
        else
        {
          v76 = v72;
        }
        v79 = v83;

        v77 = v79;
        v78 = v76;
      }
      else
      {
        v77 = v47;
        v78 = v83;
      }
      v48 = v21;

      v21 = v78;
      goto LABEL_27;
    }
  }
  result = outlined destroy of Measurement<NSUnitTemperature>?((uint64_t)v11);
  __break(1u);
  return result;
}

uint64_t type metadata accessor for mapImageView()
{
  return objc_opt_self(_TtC16MomentsUIService12mapImageView);
}

uint64_t outlined destroy of Measurement<NSUnitTemperature>?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined init with copy of Measurement<NSUnitTemperature>?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void mapImageView.init(coder:)()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionSheetAssetViews.swift", 50, 2, 62, 0);
  __break(1u);
}

void mapImageView.init(frame:)()
{
  MOSuggestionCutoutView.init(frame:)((uint64_t)"MomentsUIService.mapImageView", 29);
}

id mapImageView.__deallocating_deinit()
{
  return MOSuggestionRoundView.__deallocating_deinit(type metadata accessor for mapImageView);
}

uint64_t CMTime.durationText.getter(CMTimeValue a1, uint64_t a2, CMTimeEpoch a3)
{
  double Seconds;
  id v4;
  void *v5;
  char **v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  CMTime time;

  time.value = a1;
  *(_QWORD *)&time.timescale = a2;
  time.epoch = a3;
  Seconds = CMTimeGetSeconds(&time);
  v4 = objc_msgSend(objc_allocWithZone((Class)NSDateComponentsFormatter), "init");
  v5 = v4;
  if (Seconds >= 60.0)
  {
    if (Seconds <= 3600.0)
      goto LABEL_6;
    v6 = &selRef_setAllowedUnits_;
    v7 = 224;
  }
  else
  {
    objc_msgSend(v4, "setAllowedUnits:", 192);
    v6 = &selRef_setZeroFormattingBehavior_;
    v7 = 0x10000;
  }
  objc_msgSend(v5, *v6, v7);
LABEL_6:
  v8 = objc_msgSend(v5, "stringFromTimeInterval:", Seconds);
  if (v8)
  {
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v12 = v11;

  }
  else
  {
    v10 = 0;
    v12 = 0xE000000000000000;
  }
  if (Seconds < 60.0)
  {
    v13 = specialized Collection.dropFirst(_:)(1uLL, v10, v12);
    v15 = v14;
    v17 = v16;
    v19 = v18;
    v20 = swift_bridgeObjectRelease(v12);
    v10 = static String._fromSubstring(_:)(v13, v15, v17, v19, v20);
    swift_bridgeObjectRelease(v19);
  }

  return v10;
}

unint64_t specialized Collection.dropFirst(_:)(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v4 = 11;
    v5 = v4 | (v3 << 16);
    result = String.index(_:offsetBy:limitedBy:)(15, result, v5, a2, a3);
    if ((v6 & 1) != 0)
      result = v5;
    if (4 * v3 >= result >> 14)
      return String.subscript.getter();
  }
  __break(1u);
  return result;
}

void specialized Collection.dropFirst(_:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v14;
  uint64_t v15;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v3 = a1;
    v4 = a2 >> 62;
    if (!(a2 >> 62))
    {
      v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  if (v2 < 0)
    v15 = v2;
  else
    v15 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v5 = _CocoaArrayWrapper.endIndex.getter(v15);
  swift_bridgeObjectRelease(v2);
LABEL_4:
  if (v5 >= v3)
    v6 = v3;
  else
    v6 = v5;
  if (v5 < 0)
    v6 = v3;
  if (v3)
    v7 = v6;
  else
    v7 = 0;
  if (v5 < v7)
  {
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if (v4)
  {
    if (v2 < 0)
      v9 = v2;
    else
      v9 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v8 = _CocoaArrayWrapper.endIndex.getter(v9);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v8 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 < v7)
    goto LABEL_45;
  if (v7 < 0)
  {
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  if (v4)
  {
    if (v2 < 0)
      v11 = v2;
    else
      v11 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v10 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v10 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v10 < v5)
    goto LABEL_47;
  if ((v2 & 0xC000000000000001) != 0 && v7 != v5)
  {
    if (v7 < (unint64_t)v5)
    {
      type metadata accessor for MOSuggestionCollectionViewCellViewModel();
      v12 = v7;
      do
      {
        v13 = v12 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v12);
        v12 = v13;
      }
      while (v5 != v13);
      goto LABEL_33;
    }
LABEL_48:
    __break(1u);
    return;
  }
LABEL_33:
  if (v4)
  {
    if (v2 < 0)
      v14 = v2;
    else
      v14 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    _CocoaArrayWrapper.subscript.getter(v7, v5, v14);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    swift_bridgeObjectRetain(v2);
  }
}

uint64_t MOSuggestionSheetAssetViewModel.id.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 16, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 24));
  return v1;
}

uint64_t MOSuggestionSheetAssetViewModel.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE v7[24];

  swift_beginAccess(v2 + 16, v7, 1, 0);
  v5 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease(v5);
}

uint64_t MOSuggestionGenericFallBackInfo.__allocating_init(bundleInfo:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  v5 = swift_allocObject(v2, 32, 7);
  *(_QWORD *)(v5 + 24) = 0;
  *(_QWORD *)(v5 + 16) = 0;
  swift_beginAccess(v5 + 16, v8, 1, 0);
  v6 = *(_QWORD *)(v5 + 24);
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  swift_bridgeObjectRelease(v6);
  MOSuggestionGenericFallBackInfo.description()();
  return v5;
}

_QWORD *MOSuggestionGenericFallBackInfo.init(bundleInfo:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  v2[3] = 0;
  v2[2] = 0;
  swift_beginAccess(v2 + 2, v8, 1, 0);
  v5 = v2[3];
  v2[2] = a1;
  v2[3] = a2;
  v6 = swift_bridgeObjectRelease(v5);
  (*(void (**)(uint64_t))(*v2 + 120))(v6);
  return v2;
}

Swift::Void __swiftcall MOSuggestionGenericFallBackInfo.description()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  __n128 v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;

  v1 = v0;
  if (serverManager._clientConnections != (NSMutableDictionary *)-1)
    swift_once(&serverManager._clientConnections, one-time initialization function for shared);
  v2 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v2, (uint64_t)static MOAngelLogger.shared);
  v3 = swift_retain_n(v0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v14 = v7;
    *(_DWORD *)v6 = 136315138;
    v8 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
    if (v9)
    {
      v10 = v9;
    }
    else
    {
      v8 = 0;
      v10 = 0xE000000000000000;
    }
    v13 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v10, &v14);
    v11 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v6 + 4);
    swift_release_n(v1, v11);
    swift_bridgeObjectRelease(v10);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "[MOSuggestionGenericFallBackInfo] Using fallback image for: %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {

    swift_release_n(v0, v12);
  }
}

void MOSuggestionGenericFallBackInfo.__allocating_init(coder:)()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionGenericFallBackInfo.swift", 54, 2, 23, 0);
  __break(1u);
}

void MOSuggestionGenericFallBackInfo.init(coder:)()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionGenericFallBackInfo.swift", 54, 2, 23, 0);
  __break(1u);
}

uint64_t MOSuggestionGenericFallBackInfo.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return v0;
}

uint64_t MOSuggestionGenericFallBackInfo.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t sub_1000FC298@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 88))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1000FC2C8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 96);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t type metadata accessor for MOSuggestionGenericFallBackInfo()
{
  return objc_opt_self(_TtC16MomentsUIService31MOSuggestionGenericFallBackInfo);
}

id UIView.alignBottomToSuper(margin:equivalency:)(char a1, double a2)
{
  void *v2;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;

  v5 = objc_msgSend(v2, "superview");
  if (!v5)
    return 0;
  v6 = v5;
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  if (a1)
  {
    v7 = objc_msgSend(v2, "bottomAnchor");
    if (a1 == 1)
    {
      v8 = objc_msgSend(v6, "bottomAnchor");
      v9 = objc_msgSend(v7, "constraintGreaterThanOrEqualToAnchor:", v8);
    }
    else
    {
      v8 = objc_msgSend(v6, "bottomAnchor");
      v9 = objc_msgSend(v7, "constraintLessThanOrEqualToAnchor:", v8);
    }
  }
  else
  {
    v7 = objc_msgSend(v2, "bottomAnchor");
    v8 = objc_msgSend(v6, "bottomAnchor");
    v9 = objc_msgSend(v7, "constraintEqualToAnchor:", v8);
  }
  v10 = v9;

  if (v10)
  {
    objc_msgSend(v10, "setConstant:", -a2);
    v11 = v10;
    objc_msgSend(v11, "setActive:", 1);

  }
  return v10;
}

id UIView.alignCenterHorizontallyToSuper(margin:equivalency:)(char a1, double a2)
{
  return UIView.alignCenterHorizontallyToSuper(margin:equivalency:)(a1, (SEL *)&selRef_centerXAnchor, a2);
}

void UIView.alignLeadingTo(view:margin:)(void *a1, double a2)
{
  UIView.alignLeadingTo(view:margin:)(a1, (SEL *)&selRef_leadingAnchor, a2);
}

void UIView.alignTrailingTo(view:margin:)(void *a1, double a2)
{
  UIView.alignLeadingTo(view:margin:)(a1, (SEL *)&selRef_trailingAnchor, a2);
}

void UIView.alignTopTo(view:margin:)(void *a1, double a2)
{
  UIView.alignLeadingTo(view:margin:)(a1, (SEL *)&selRef_topAnchor, a2);
}

void UIView.alignBottomTo(view:margin:)(void *a1, double a2)
{
  UIView.alignLeadingTo(view:margin:)(a1, (SEL *)&selRef_bottomAnchor, a2);
}

void UIView.alignLeadingTo(view:margin:)(void *a1, SEL *a2, double a3)
{
  void *v3;
  id v7;
  id v8;
  id v9;

  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v7 = objc_msgSend(v3, *a2);
  v8 = objc_msgSend(a1, *a2);
  v9 = objc_msgSend(v7, "constraintEqualToAnchor:constant:", v8, a3);

  objc_msgSend(v9, "setActive:", 1);
}

_QWORD *UIView.fillSuper(margin:)(double a1)
{
  void *v1;
  void *v2;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;

  v2 = v1;
  v4 = objc_msgSend(v1, "superview");
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v6 = objc_msgSend(v1, "leadingAnchor");
    v7 = objc_msgSend(v5, "leadingAnchor");
    v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

    objc_msgSend(v8, "setConstant:", a1);
    if (v8)
    {
      v9 = v8;
      objc_msgSend(v9, "setActive:", 1);

      v5 = v9;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v5);
      v11 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v10 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v11 >= v10 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v10 > 1, v11 + 1, 1);
      v12 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v5);
      specialized Array._endMutation()(v12);
    }

  }
  v13 = objc_msgSend(v2, "superview");
  if (v13)
  {
    v14 = v13;
    objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v15 = objc_msgSend(v2, "trailingAnchor");
    v16 = objc_msgSend(v14, "trailingAnchor");
    v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

    objc_msgSend(v17, "setConstant:", -a1);
    if (v17)
    {
      v18 = v17;
      objc_msgSend(v18, "setActive:", 1);

      v14 = v18;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
      v20 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v19 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v20 >= v19 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1);
      v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v14);
      specialized Array._endMutation()(v21);
    }

  }
  v22 = objc_msgSend(v2, "superview");
  if (v22)
  {
    v23 = v22;
    objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v24 = objc_msgSend(v2, "topAnchor");
    v25 = objc_msgSend(v23, "topAnchor");
    v26 = objc_msgSend(v24, "constraintEqualToAnchor:", v25);

    objc_msgSend(v26, "setConstant:", a1);
    if (v26)
    {
      v27 = v26;
      objc_msgSend(v27, "setActive:", 1);

      v23 = v27;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v23);
      v29 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v28 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v29 >= v28 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1);
      v30 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v23);
      specialized Array._endMutation()(v30);
    }

  }
  v31 = objc_msgSend(v2, "superview");
  if (v31)
  {
    v32 = v31;
    objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v33 = objc_msgSend(v2, "bottomAnchor");
    v34 = objc_msgSend(v32, "bottomAnchor");
    v35 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

    if (v35)
    {
      objc_msgSend(v35, "setConstant:", -a1);
      v36 = v35;
      objc_msgSend(v36, "setActive:", 1);

      v32 = v36;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v32);
      v38 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v37 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v38 >= v37 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v37 > 1, v38 + 1, 1);
      v39 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v38, v32);
      specialized Array._endMutation()(v39);
    }

  }
  return _swiftEmptyArrayStorage;
}

id UIView.alignTopToSuper(margin:equivalency:)(char a1, double a2)
{
  return UIView.alignCenterHorizontallyToSuper(margin:equivalency:)(a1, (SEL *)&selRef_topAnchor, a2);
}

id UIView.alignLeadingToSuper(margin:equivalency:)(char a1, double a2)
{
  return UIView.alignCenterHorizontallyToSuper(margin:equivalency:)(a1, (SEL *)&selRef_leadingAnchor, a2);
}

id UIView.alignTrailingToSuper(margin:equivalency:)(char a1, double a2)
{
  return UIView.alignCenterHorizontallyToSuper(margin:equivalency:)(a1, (SEL *)&selRef_trailingAnchor, a2);
}

id UIView.alignCenterVerticallyToSuper(margin:equivalency:)(char a1, double a2)
{
  return UIView.alignCenterHorizontallyToSuper(margin:equivalency:)(a1, (SEL *)&selRef_centerYAnchor, a2);
}

id UIView.alignCenterHorizontallyToSuper(margin:equivalency:)(char a1, SEL *a2, double a3)
{
  void *v3;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;

  v7 = objc_msgSend(v3, "superview");
  if (!v7)
    return 0;
  v8 = v7;
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  if (a1)
  {
    v9 = objc_msgSend(v3, *a2);
    v10 = objc_msgSend(v8, *a2);
    if (a1 == 1)
      v11 = objc_msgSend(v9, "constraintGreaterThanOrEqualToAnchor:", v10);
    else
      v11 = objc_msgSend(v9, "constraintLessThanOrEqualToAnchor:", v10);
  }
  else
  {
    v9 = objc_msgSend(v3, *a2);
    v10 = objc_msgSend(v8, *a2);
    v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);
  }
  v12 = v11;

  objc_msgSend(v12, "setConstant:", a3);
  if (v12)
  {
    v13 = v12;
    objc_msgSend(v13, "setActive:", 1);

  }
  return v12;
}

id UIView.setFixedHeight(height:)(double a1)
{
  return UIView.setFixedHeight(height:)((SEL *)&selRef_heightAnchor, a1);
}

Swift::Void __swiftcall UIView.removeAllSubviews()()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;

  v1 = objc_msgSend(v0, "subviews");
  v2 = type metadata accessor for UIView();
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if (!((unint64_t)v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v3);
    return;
  }
  if (v3 < 0)
    v8 = v3;
  else
    v8 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  v4 = _CocoaArrayWrapper.endIndex.getter(v8);
  swift_bridgeObjectRelease(v3);
  if (!v4)
    goto LABEL_13;
LABEL_3:
  if (v4 >= 1)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
      else
        v6 = *(id *)(v3 + 8 * i + 32);
      v7 = v6;
      objc_msgSend(v6, "removeFromSuperview");

    }
    goto LABEL_13;
  }
  __break(1u);
}

unint64_t type metadata accessor for UIView()
{
  unint64_t result;
  uint64_t v1;

  result = lazy cache variable for type metadata for UIView;
  if (!lazy cache variable for type metadata for UIView)
  {
    v1 = objc_opt_self(UIView);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for UIView);
  }
  return result;
}

id UIView.alignRightOf(view:margin:)(void *a1, double a2)
{
  return UIView.alignRightOf(view:margin:)(a1, (SEL *)&selRef_leadingAnchor, (SEL *)&selRef_trailingAnchor, a2);
}

id UIView.setFixedWidth(width:)(double a1)
{
  return UIView.setFixedHeight(height:)((SEL *)&selRef_widthAnchor, a1);
}

id UIView.setFixedHeight(height:)(SEL *a1, double a2)
{
  void *v2;
  id v5;
  id v6;

  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v5 = objc_msgSend(v2, *a1);
  v6 = objc_msgSend(v5, "constraintEqualToConstant:", a2);

  objc_msgSend(v6, "setActive:", 1);
  return v6;
}

id UIView.alignBelow(view:margin:)(void *a1, double a2)
{
  return UIView.alignRightOf(view:margin:)(a1, (SEL *)&selRef_topAnchor, (SEL *)&selRef_bottomAnchor, a2);
}

id UIView.alignAbove(view:margin:)(void *a1, double a2)
{
  return UIView.alignRightOf(view:margin:)(a1, (SEL *)&selRef_bottomAnchor, (SEL *)&selRef_topAnchor, a2);
}

id UIView.alignRightOf(view:margin:)(void *a1, SEL *a2, SEL *a3, double a4)
{
  void *v4;
  id v9;
  id v10;
  id v11;

  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v9 = objc_msgSend(v4, *a2);
  v10 = objc_msgSend(a1, *a3);
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

  objc_msgSend(v11, "setConstant:", a4);
  objc_msgSend(v11, "setActive:", 1);
  return v11;
}

id UIView.setWidthAnchor(view:multiplier:)(void *a1, double a2)
{
  void *v2;
  id v5;
  id v6;
  id v7;

  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v5 = objc_msgSend(v2, "widthAnchor");
  v6 = objc_msgSend(a1, "widthAnchor");
  v7 = objc_msgSend(v5, "constraintEqualToAnchor:multiplier:", v6, a2);

  objc_msgSend(v7, "setActive:", 1);
  return v7;
}

id UIView.alignLeftOf(view:margin:)(void *a1, double a2)
{
  void *v2;
  id v5;
  id v6;
  id v7;

  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v5 = objc_msgSend(v2, "trailingAnchor");
  v6 = objc_msgSend(a1, "leadingAnchor");
  v7 = objc_msgSend(v5, "constraintEqualToAnchor:", v6);

  objc_msgSend(v7, "setConstant:", -a2);
  objc_msgSend(v7, "setActive:", 1);
  return v7;
}

NSLayoutConstraint_optional __swiftcall UIView.alignCenterVerticallyBetweenTopAndBottomAnchor(topAnchor:bottomAnchor:)(NSLayoutYAxisAnchor topAnchor, NSLayoutYAxisAnchor bottomAnchor)
{
  void *v2;
  void *v3;
  id v6;
  Swift::Bool v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  objc_class *v13;
  objc_class *v14;
  objc_class *v15;
  objc_class *v16;
  NSLayoutConstraint_optional result;

  v3 = v2;
  v6 = objc_msgSend(v3, "superview");
  if (v6)
  {
    v8 = v6;
    objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v9 = objc_msgSend(v3, "centerYAnchor");
    v10 = -[objc_class anchorWithOffsetToAnchor:](topAnchor.super.super.isa, "anchorWithOffsetToAnchor:", v9);

    v11 = objc_msgSend(v3, "centerYAnchor");
    v12 = objc_msgSend(v11, "anchorWithOffsetToAnchor:", bottomAnchor.super.super.isa);

    v13 = (objc_class *)objc_msgSend(v10, "constraintEqualToAnchor:", v12);
    v14 = v13;
    if (v13)
    {
      v15 = v13;
      -[objc_class setActive:](v15, "setActive:", 1);

    }
  }
  else
  {
    v14 = 0;
  }
  v16 = v14;
  result.value.super.isa = v16;
  result.is_nil = v7;
  return result;
}

unint64_t lazy protocol witness table accessor for type UIView.AutolayoutEquivalency and conformance UIView.AutolayoutEquivalency()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type UIView.AutolayoutEquivalency and conformance UIView.AutolayoutEquivalency;
  if (!lazy protocol witness table cache variable for type UIView.AutolayoutEquivalency and conformance UIView.AutolayoutEquivalency)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for UIView.AutolayoutEquivalency, &type metadata for UIView.AutolayoutEquivalency);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UIView.AutolayoutEquivalency and conformance UIView.AutolayoutEquivalency);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for UIView.AutolayoutEquivalency(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1000FD278 + 4 * byte_1001A2075[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1000FD2AC + 4 * asc_1001A2070[v4]))();
}

uint64_t sub_1000FD2AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000FD2B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000FD2BCLL);
  return result;
}

uint64_t sub_1000FD2C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000FD2D0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1000FD2D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000FD2DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UIView.AutolayoutEquivalency()
{
  return &type metadata for UIView.AutolayoutEquivalency;
}

uint64_t static MOPOIAnnotationViewConfiguration.hasPOIIconImage(_:)(void *a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t result;
  void *v13;
  id v14;
  void *v15;
  id v16;
  double v17;
  double v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  double v24;
  double v25;
  id v26;

  v2 = objc_msgSend(a1, "_poiCategory");
  if (v2)
  {
    v3 = v2;
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(GEOPOICategoryReligiousSite);
    v6 = v5;
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    if (v4 == v7 && v6 == v8)
    {

      swift_bridgeObjectRelease_n(v6, 2);
      return 0;
    }
    v10 = v8;
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v7, v8, 0);

    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v10);
    result = 0;
    if ((v11 & 1) != 0)
      return result;
  }
  v13 = (void *)objc_opt_self(MKIconManager);
  v14 = objc_msgSend(a1, "_styleAttributes");
  v15 = (void *)objc_opt_self(UIScreen);
  v16 = objc_msgSend(v15, "mainScreen");
  objc_msgSend(v16, "scale");
  v18 = v17;

  v19 = objc_msgSend(v13, "newFillColorForStyleAttributes:forScale:", v14, v18);
  v20 = v13;
  if (v19)
  {
    v21 = v20;
    v22 = objc_msgSend(a1, "_styleAttributes");
    v23 = objc_msgSend(v15, "mainScreen");
    objc_msgSend(v23, "scale");
    v25 = v24;

    v26 = objc_msgSend(v21, "imageForStyle:size:forScale:format:", v22, 3, 0, v25);
    if (v26)
    {

      return 1;
    }
  }
  return 0;
}

uint64_t *MOPOIAnnotationView.cityStyleAttributes.unsafeMutableAddressor()
{
  if (one-time initialization token for cityStyleAttributes != -1)
    swift_once(&one-time initialization token for cityStyleAttributes, one-time initialization function for cityStyleAttributes);
  return &static MOPOIAnnotationView.cityStyleAttributes;
}

uint64_t MOPOIAnnotationViewConfiguration.init(geoMapItem:tileSize:isWork:numLocations:forceCircle:isMediumToHighConfidence:isScaledDownPOI:shouldUseCityIcon:)@<X0>(uint64_t result@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>)
{
  *(_QWORD *)a9 = result;
  *(_BYTE *)(a9 + 8) = a2;
  *(_BYTE *)(a9 + 9) = a3;
  *(_QWORD *)(a9 + 16) = a4;
  *(_BYTE *)(a9 + 24) = a5;
  *(_BYTE *)(a9 + 25) = a6;
  *(_BYTE *)(a9 + 26) = a7;
  *(_BYTE *)(a9 + 27) = a8;
  *(_QWORD *)(a9 + 32) = 0x4000000000000000;
  return result;
}

id MOPOIAnnotationView.__allocating_init(annotation:configuration:)(uint64_t a1, _QWORD *a2)
{
  objc_class *v2;
  id v5;
  id v6;

  v5 = objc_allocWithZone(v2);
  v6 = specialized MOPOIAnnotationView.init(annotation:configuration:)(a1, (uint64_t)a2);
  outlined release of MOPOIAnnotationViewConfiguration(a2);
  swift_unknownObjectRelease(a1);
  return v6;
}

uint64_t MOPOIAnnotationViewConfiguration.geoMapItem.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t MOPOIAnnotationViewConfiguration.geoMapItem.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_unknownObjectRelease(*v1);
  *v1 = a1;
  return result;
}

uint64_t MOPOIAnnotationViewConfiguration.isWork.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t MOPOIAnnotationViewConfiguration.isWork.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 9) = result;
  return result;
}

void (__swiftcall *MOPOIAnnotationViewConfiguration.isWork.modify())()
{
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

uint64_t MOPOIAnnotationViewConfiguration.forceCircle.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t MOPOIAnnotationViewConfiguration.forceCircle.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 24) = result;
  return result;
}

uint64_t MOPOIAnnotationViewConfiguration.isMediumToHighConfidence.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 25);
}

uint64_t MOPOIAnnotationViewConfiguration.isMediumToHighConfidence.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 25) = result;
  return result;
}

void (__swiftcall *MOPOIAnnotationViewConfiguration.isMediumToHighConfidence.modify())()
{
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

uint64_t MOPOIAnnotationViewConfiguration.isScaledDownPOI.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 26);
}

uint64_t MOPOIAnnotationViewConfiguration.isScaledDownPOI.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 26) = result;
  return result;
}

void (__swiftcall *MOPOIAnnotationViewConfiguration.isScaledDownPOI.modify())()
{
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

uint64_t MOPOIAnnotationViewConfiguration.shouldUseCityIcon.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 27);
}

uint64_t MOPOIAnnotationViewConfiguration.shouldUseCityIcon.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 27) = result;
  return result;
}

void (__swiftcall *MOPOIAnnotationViewConfiguration.shouldUseCityIcon.modify())()
{
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

void *one-time initialization function for singlePinCanvasSize()
{
  void *result;

  result = (void *)specialized Dictionary.init(dictionaryLiteral:)((uint64_t)&outlined read-only object #0 of one-time initialization function for singlePinCanvasSize);
  static MOPOIAnnotationViewConfiguration.singlePinCanvasSize = result;
  return result;
}

void *one-time initialization function for multiPinCanvasSize()
{
  void *result;

  result = (void *)specialized Dictionary.init(dictionaryLiteral:)((uint64_t)&outlined read-only object #0 of one-time initialization function for multiPinCanvasSize);
  static MOPOIAnnotationViewConfiguration.multiPinCanvasSize = result;
  return result;
}

BOOL MOPOIAnnotationViewConfiguration.shouldAddWhiteCircularBorder.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16) > 1;
}

uint64_t MOPOIAnnotationViewConfiguration.pinSize.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  char v4;
  uint64_t result;
  double v6;
  double v7;
  char v8;

  v1 = v0;
  if (*(uint64_t *)(v0 + 16) > 1 || (*(_BYTE *)(v0 + 24) & 1) != 0)
  {
    if (one-time initialization token for multiPinCanvasSize != -1)
      swift_once(&one-time initialization token for multiPinCanvasSize, one-time initialization function for multiPinCanvasSize);
    v2 = static MOPOIAnnotationViewConfiguration.multiPinCanvasSize;
    if (!*((_QWORD *)static MOPOIAnnotationViewConfiguration.multiPinCanvasSize + 2))
      goto LABEL_13;
  }
  else
  {
    if (one-time initialization token for singlePinCanvasSize != -1)
      swift_once(&one-time initialization token for singlePinCanvasSize, one-time initialization function for singlePinCanvasSize);
    v2 = static MOPOIAnnotationViewConfiguration.singlePinCanvasSize;
    if (!*((_QWORD *)static MOPOIAnnotationViewConfiguration.singlePinCanvasSize + 2))
      goto LABEL_13;
  }
  v3 = specialized __RawDictionaryStorage.find<A>(_:)(*(_BYTE *)(v1 + 8));
  if ((v4 & 1) == 0)
  {
LABEL_13:
    *(double *)&result = 0.0;
    return result;
  }
  result = *(uint64_t *)(v2[7] + 8 * v3);
  if ((*(_BYTE *)(v1 + 26) & 1) != 0)
  {
    v6 = *(double *)&result;
    v7 = COERCE_DOUBLE(specialized static MOAngelDefaultsManager.doubleValueFor(_:)());
    if ((v8 & 1) != 0)
      v7 = 0.5;
    *(double *)&result = v7 * v6;
  }
  return result;
}

uint64_t MOPOIAnnotationViewConfiguration.shouldAddPointedArrow.getter()
{
  uint64_t v0;

  if (*(uint64_t *)(v0 + 16) > 1 || (*(_BYTE *)(v0 + 24) & 1) != 0)
    return 0;
  if ((*(_BYTE *)(v0 + 27) & 1) != 0)
    return *(unsigned __int8 *)(v0 + 9);
  return 1;
}

void MOPOIAnnotationViewConfiguration.clusterCountLabelFrame.getter()
{
  uint64_t v0;
  char v1;
  char v2;
  char v3;

  MOPOIAnnotationViewConfiguration.pinSize.getter();
  if ((v1 & 1) == 0)
  {
    outlined init with take of MOSuggestionAssetTileSize((_BYTE *)(v0 + 8), &v2);
    outlined init with take of MOSuggestionAssetTileSize(&v2, &v3);
    MOSuggestionInterstitialExpandableListViewCellConstants.init()();
  }
}

void MOPOIAnnotationViewConfiguration.downArrowFrame.getter()
{
  char v0;

  MOPOIAnnotationViewConfiguration.pinSize.getter();
  if ((v0 & 1) == 0)
    MOSuggestionInterstitialExpandableListViewCellConstants.init()();
}

void MOPOIAnnotationViewConfiguration.downArrowListTileFrame.getter()
{
  char v0;

  MOPOIAnnotationViewConfiguration.pinSize.getter();
  if ((v0 & 1) == 0)
    MOSuggestionInterstitialExpandableListViewCellConstants.init()();
}

void MOPOIAnnotationViewConfiguration.whiteCircularBorderFrame.getter()
{
  MOPOIAnnotationViewConfiguration.clusterCountLabelFrame.getter();
  MOPOIAnnotationViewConfiguration.clusterCountLabelFrame.getter();
  MOPOIAnnotationViewConfiguration.clusterCountLabelFrame.getter();
  MOSuggestionInterstitialExpandableListViewCellConstants.init()();
}

void MOPOIAnnotationViewConfiguration.whiteCircularBorderCLusterFrame.getter()
{
  MOPOIAnnotationViewConfiguration.clusterCountLabelFrame.getter();
  MOPOIAnnotationViewConfiguration.clusterCountLabelFrame.getter();
  MOPOIAnnotationViewConfiguration.clusterCountLabelFrame.getter();
  MOSuggestionInterstitialExpandableListViewCellConstants.init()();
}

void MOPOIAnnotationViewConfiguration.containerViewFrame.getter()
{
  char v0;

  MOPOIAnnotationViewConfiguration.pinSize.getter();
  if ((v0 & 1) == 0)
    MOSuggestionInterstitialExpandableListViewCellConstants.init()();
}

_BYTE *MOPOIAnnotationViewConfiguration.clusterFontSize.getter()
{
  uint64_t v0;
  _BYTE *result;
  char v2;
  char v3;
  char v4;

  result = (_BYTE *)MOPOIAnnotationViewConfiguration.pinSize.getter();
  if ((v2 & 1) == 0)
  {
    outlined init with take of MOSuggestionAssetTileSize((_BYTE *)(v0 + 8), &v3);
    return outlined init with take of MOSuggestionAssetTileSize(&v3, &v4);
  }
  return result;
}

uint64_t static MOPOIAnnotationViewConfiguration.filterGenericRed(category:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  char v9;

  if (!a1)
    return 0;
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(GEOPOICategoryReligiousSite);
  v4 = v3;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v2 == v5 && v4 == v6)
  {
    swift_bridgeObjectRelease_n(v4, 2);
  }
  else
  {
    v8 = v6;
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, v4, v5, v6, 0);
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(v8);
    if ((v9 & 1) == 0)
      return 0;
  }
  return 1;
}

void one-time initialization function for cityStyleAttributes()
{
  id v0;
  id v1;

  v0 = objc_msgSend(objc_allocWithZone((Class)GEOPlace), "initWithLatitude:longitude:placeType:", 4, 0.0, 0.0);
  v1 = objc_msgSend((id)objc_opt_self(GEOFeatureStyleAttributes), "styleAttributesForPlace:", v0);

  static MOPOIAnnotationView.cityStyleAttributes = (uint64_t)v1;
}

uint64_t static MOPOIAnnotationView.cityStyleAttributes.getter()
{
  uint64_t v0;
  id v1;

  if (one-time initialization token for cityStyleAttributes != -1)
    swift_once(&one-time initialization token for cityStyleAttributes, one-time initialization function for cityStyleAttributes);
  v0 = static MOPOIAnnotationView.cityStyleAttributes;
  v1 = (id)static MOPOIAnnotationView.cityStyleAttributes;
  return v0;
}

id MOPOIAnnotationView.init(annotation:configuration:)(uint64_t a1, _QWORD *a2)
{
  id v4;

  v4 = specialized MOPOIAnnotationView.init(annotation:configuration:)(a1, (uint64_t)a2);
  outlined release of MOPOIAnnotationViewConfiguration(a2);
  swift_unknownObjectRelease(a1);
  return v4;
}

void closure #1 in MOPOIAnnotationView.init(annotation:configuration:)(uint64_t a1)
{
  uint64_t v1;
  char *Strong;
  char *v3;
  __int128 v4;
  char *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  char v10;
  char *v11;
  void *v12;
  __int128 v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  double v21;
  id v22;
  id v23;
  char v24[24];
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v24, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = &Strong[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_configuration];
    v4 = *(_OWORD *)&Strong[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_configuration + 16];
    v28 = *(_OWORD *)&Strong[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_configuration];
    v29 = v4;
    v30 = *(_QWORD *)&Strong[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_configuration + 32];
    v5 = Strong;
    MOPOIAnnotationViewConfiguration.pinSize.getter();
    v6 = 0.0;
    v7 = 0.0;
    v8 = 0.0;
    v9 = 0.0;
    if ((v10 & 1) == 0)
      MOSuggestionInterstitialExpandableListViewCellConstants.init()();
    objc_msgSend(v5, "setFrame:", v6, v7, v8, v9);

    v11 = &v5[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_basePOICircleView];
    v12 = *(void **)&v5[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_basePOICircleView];
    v13 = *((_OWORD *)v3 + 1);
    v25 = *(_OWORD *)v3;
    v26 = v13;
    v27 = *((_QWORD *)v3 + 4);
    v14 = v12;
    MOPOIAnnotationViewConfiguration.clusterCountLabelFrame.getter();
    objc_msgSend(v14, "setFrame:");

    MOPOIAnnotationView.setupPOIAndColors()();
    if (*((uint64_t *)v3 + 2) < 2)
    {
      if ((v3[24] & 1) != 0)
      {
        specialized MOPOIAnnotationView.setupBorderBackground(cluster:)();
        v15 = OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_borderBackgroundView;
      }
      else
      {
        if (v3[27] == 1 && !v3[9])
          goto LABEL_12;
        MOPOIAnnotationView.setupDownArrow()();
        v15 = OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_downArrowView;
      }
      objc_msgSend(v5, "addSubview:", *(_QWORD *)&v5[v15]);
    }
    else
    {
      specialized MOPOIAnnotationView.setupBorderBackground(cluster:)();
      MOPOIAnnotationView.setupClusterlabel()();
      objc_msgSend(v5, "addSubview:", *(_QWORD *)&v5[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_borderBackgroundView]);
      v11 = &v5[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_clusterCountLabel];
    }
LABEL_12:
    objc_msgSend(v5, "addSubview:", *(_QWORD *)v11);
    v16 = OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_borderBackgroundView;
    v17 = objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_borderBackgroundView], "layer");
    v18 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemBackgroundColor");
    v19 = objc_msgSend(v18, "CGColor");

    objc_msgSend(v17, "setShadowColor:", v19);
    v20 = objc_msgSend(*(id *)&v5[v16], "layer");
    LODWORD(v21) = 0.5;
    objc_msgSend(v20, "setShadowOpacity:", v21);

    v22 = objc_msgSend(*(id *)&v5[v16], "layer");
    objc_msgSend(v22, "setShadowRadius:", 5.0);

    v23 = objc_msgSend(*(id *)&v5[v16], "layer");
    objc_msgSend(v23, "setShadowPathIsBounds:", 1);

  }
}

void MOPOIAnnotationView.setupDownArrow()()
{
  uint64_t v0;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  char v8;
  char v9;
  NSString v10;
  id v11;

  if (*(uint64_t *)(v0 + OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_configuration + 16) <= 1
    && *(_BYTE *)(v0 + OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_configuration + 24) == 0
    && (*(unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_configuration + 27) ^ 1 | *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_configuration + 9)) != 0)
  {
    v3 = *(void **)(v0 + OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_downArrowView);
    if (*(_BYTE *)(v0 + OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_configuration + 8) == 3)
    {
      MOPOIAnnotationViewConfiguration.pinSize.getter();
      v4 = 0.0;
      v5 = 0.0;
      v6 = 0.0;
      v7 = 0.0;
      if ((v8 & 1) == 0)
        goto LABEL_14;
    }
    else
    {
      MOPOIAnnotationViewConfiguration.pinSize.getter();
      v4 = 0.0;
      v5 = 0.0;
      v6 = 0.0;
      v7 = 0.0;
      if ((v9 & 1) == 0)
LABEL_14:
        MOSuggestionInterstitialExpandableListViewCellConstants.init()();
    }
    objc_msgSend(v3, "setFrame:", v4, v5, v6, v7);
    v10 = String._bridgeToObjectiveC()();
    v11 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v10);

    objc_msgSend(v3, "setImage:", v11);
    objc_msgSend(v3, "setContentMode:", 2);
  }
}

void MOPOIAnnotationView.setupClusterlabel()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  id v8;
  double v9;
  double v10;
  char v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  CGRect v20;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_configuration);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_configuration + 16);
  if (v2 >= 2)
  {
    v3 = *(void **)(v0 + OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_clusterCountLabel);
    v4 = *((unsigned __int8 *)v1 + 8);
    v15 = *v1;
    LOWORD(v16) = *((_WORD *)v1 + 4);
    v17 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_configuration + 16);
    LOWORD(v18) = *((_WORD *)v1 + 12);
    BYTE2(v18) = *((_BYTE *)v1 + 26);
    BYTE3(v18) = *((_BYTE *)v1 + 27);
    v19 = v1[4];
    MOPOIAnnotationViewConfiguration.clusterCountLabelFrame.getter();
    objc_msgSend(v3, "setFrame:");
    v14 = v2;
    dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v6 = v5;
    v7 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "setText:", v7, swift_bridgeObjectRelease(v6).n128_f64[0], v14, v15, v16, v17, v18, v19);

    objc_msgSend(v3, "setTextAlignment:", 1);
    v8 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
    objc_msgSend(v3, "setTextColor:", v8);

    v9 = COERCE_DOUBLE(MOPOIAnnotationViewConfiguration.pinSize.getter());
    v10 = 15.0;
    if ((v11 & 1) == 0)
    {
      if (v4 == 3)
        v10 = v9 * 0.5;
      else
        v10 = v9 / 6.0;
    }
    v12 = objc_msgSend((id)objc_opt_self(UIFont), "boldSystemFontOfSize:", v10);
    objc_msgSend(v3, "setFont:", v12);

    objc_msgSend(v3, "setAdjustsFontSizeToFitWidth:", 1);
    objc_msgSend(v3, "setClipsToBounds:", 1);
    v13 = objc_msgSend(v3, "layer");
    objc_msgSend(v3, "frame");
    objc_msgSend(v13, "setCornerRadius:", CGRectGetWidth(v20) * 0.5);

  }
}

void MOPOIAnnotationView.setupPOIAndColors()()
{
  char *v0;
  char *v1;
  char *v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  double v18;
  double v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  double v25;
  double v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  double v42;
  double v43;
  id v44;
  id v45;
  id v46;
  double v47;
  double v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  void *v56;
  uint64_t v57;
  void *v58;
  id v59;
  double v60;
  double v61;
  id v62;
  id v63;
  void *v64;
  uint64_t v65;
  id v66;
  double v67;
  double v68;
  id v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint8_t *v75;
  uint64_t v76;
  char *v77;
  NSObject *v78;
  os_log_type_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  void *v94;
  double v95;
  double v96;
  double v97;
  double v98;
  id v99;
  NSString v100;
  id v101;
  void *v102;
  id v103;
  id v104;
  void *v105;
  id v106;
  void *v107;
  id v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  id v117;
  uint64_t v118;
  char *v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  CGRect v124;
  CGRect v125;
  CGRect v126;
  CGRect v127;
  CGRect v128;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_configuration];
  v3 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_configuration];
  if (v3)
  {
    v4 = objc_msgSend((id)swift_unknownObjectRetain(), "_poiCategory");
    if (v4)
    {
      v5 = v4;
      v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(GEOPOICategoryReligiousSite);
      v8 = v7;
      v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
      if (v6 == v9 && v8 == v10)
      {

        swift_bridgeObjectRelease_n(v8, 2);
      }
      else
      {
        v12 = v10;
        v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v9, v10, 0);

        swift_bridgeObjectRelease(v8);
        swift_bridgeObjectRelease(v12);
        if ((v13 & 1) == 0)
          goto LABEL_8;
      }
LABEL_16:
      swift_unknownObjectRelease(v3);
      goto LABEL_17;
    }
LABEL_8:
    v14 = (void *)objc_opt_self(MKIconManager);
    v15 = objc_msgSend(v3, "_styleAttributes");
    v16 = (void *)objc_opt_self(UIScreen);
    v17 = objc_msgSend(v16, "mainScreen");
    objc_msgSend(v17, "scale");
    v19 = v18;

    v20 = objc_msgSend(v14, "newFillColorForStyleAttributes:forScale:", v15, v19);
    v21 = v14;
    if (v20)
    {
      v22 = v21;
      v23 = objc_msgSend(v3, "_styleAttributes");
      v24 = objc_msgSend(v16, "mainScreen");
      objc_msgSend(v24, "scale");
      v26 = v25;

      v27 = objc_msgSend(v22, "imageForStyle:size:forScale:format:", v23, 3, 0, v26);
      if (v27)
      {
        if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
          swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
        v28 = type metadata accessor for Logger(0);
        __swift_project_value_buffer(v28, (uint64_t)static MOAngelLogger.assets);
        v29 = swift_unknownObjectRetain_n(v3, 4);
        v30 = Logger.logObject.getter(v29);
        v31 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v30, v31))
        {
          v119 = v1;
          v32 = swift_slowAlloc(22, -1);
          v118 = swift_slowAlloc(32, -1);
          v123 = v118;
          *(_DWORD *)v32 = 134218242;
          v33 = objc_msgSend(v3, "name");
          if (v33)
          {
            v34 = v33;
            static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
            v36 = v35;

          }
          else
          {
            v36 = 0;
          }
          v122 = v36;
          v110 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
          v111 = Optional<A>.hashValue.getter(v110, &protocol witness table for String);
          swift_unknownObjectRelease(v3);
          swift_bridgeObjectRelease(v36);
          v121 = v111;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, &v122, v32 + 4);
          swift_unknownObjectRelease(v3);
          *(_WORD *)(v32 + 12) = 2080;
          v112 = objc_msgSend(v3, "_poiCategory");
          v121 = (uint64_t)v112;
          v113 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for GEOPOICategory?);
          v114 = Optional.debugDescription.getter(v113);
          v116 = v115;

          v121 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v114, v116, &v123);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, &v122, v32 + 14);
          swift_unknownObjectRelease_n(v3, 2);
          swift_bridgeObjectRelease(v116);
          _os_log_impl((void *)&_mh_execute_header, v30, v31, "[POIClustering] [RENDERING] POI mapItemName=%ld, mapItemPOICategory=%s", (uint8_t *)v32, 0x16u);
          swift_arrayDestroy(v118, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v118, -1, -1);
          swift_slowDealloc(v32, -1, -1);

          v1 = v119;
        }
        else
        {

          swift_unknownObjectRelease_n(v3, 4);
        }
        objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_basePOICircleView], "setImage:", v27);
        v117 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithCGColor:", v20);

        objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_downArrowView], "setTintColor:", v117);
        objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_clusterCountLabel], "setBackgroundColor:", v117);
        swift_unknownObjectRelease(v3);

        return;
      }
    }
    goto LABEL_16;
  }
LABEL_17:
  if (v2[9] == 1)
  {
    v37 = (void *)objc_opt_self(MKIconManager);
    v38 = (void *)objc_opt_self(GEOFeatureStyleAttributes);
    v39 = objc_msgSend(v38, "workStyleAttributes");
    v40 = (void *)objc_opt_self(UIScreen);
    v41 = objc_msgSend(v40, "mainScreen");
    objc_msgSend(v41, "scale");
    v43 = v42;

    v44 = objc_msgSend(v37, "imageForStyle:size:forScale:format:", v39, 3, 0, v43);
    if (v44)
    {
      v45 = objc_msgSend(v38, "workStyleAttributes");
      v46 = objc_msgSend(v40, "mainScreen");
      objc_msgSend(v46, "scale");
      v48 = v47;

      v49 = objc_msgSend(v37, "newFillColorForStyleAttributes:forScale:", v45, v48);
      v50 = v37;
      if (v49)
      {
        if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
          swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
        v51 = type metadata accessor for Logger(0);
        v52 = __swift_project_value_buffer(v51, (uint64_t)static MOAngelLogger.assets);
        v53 = Logger.logObject.getter(v52);
        v54 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v53, v54))
        {
          v55 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v55 = 0;
          _os_log_impl((void *)&_mh_execute_header, v53, v54, "[POIClustering] [RENDERING] Work", v55, 2u);
          swift_slowDealloc(v55, -1, -1);
        }

        objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_basePOICircleView], "setImage:", v44);
        v120 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithCGColor:", v49);

        objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_downArrowView], "setTintColor:", v120);
        objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_clusterCountLabel], "setBackgroundColor:", v120);

LABEL_37:
        return;
      }

    }
  }
  if ((v2[25] & 1) == 0 && v2[27] == 1)
  {
    v56 = (void *)objc_opt_self(MKIconManager);
    if (one-time initialization token for cityStyleAttributes != -1)
      swift_once(&one-time initialization token for cityStyleAttributes, one-time initialization function for cityStyleAttributes);
    v57 = static MOPOIAnnotationView.cityStyleAttributes;
    v58 = (void *)objc_opt_self(UIScreen);
    v59 = objc_msgSend(v58, "mainScreen");
    objc_msgSend(v59, "scale");
    v61 = v60;

    v62 = objc_msgSend(v56, "newFillColorForStyleAttributes:forScale:", v57, v61);
    v63 = v56;
    if (v62)
    {
      v64 = v63;
      v65 = static MOPOIAnnotationView.cityStyleAttributes;
      v66 = objc_msgSend(v58, "mainScreen");
      objc_msgSend(v66, "scale");
      v68 = v67;

      v69 = objc_msgSend(v64, "imageForStyle:size:forScale:format:", v65, 3, 0, v68);
      if (v69)
      {
        v70 = v69;
        if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
          swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
        v71 = type metadata accessor for Logger(0);
        v72 = __swift_project_value_buffer(v71, (uint64_t)static MOAngelLogger.assets);
        v73 = Logger.logObject.getter(v72);
        v74 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v73, v74))
        {
          v75 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v75 = 0;
          _os_log_impl((void *)&_mh_execute_header, v73, v74, "[POIClustering] [RENDERING] City", v75, 2u);
          swift_slowDealloc(v75, -1, -1);
        }

        objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_basePOICircleView], "setImage:", v70);
        v120 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithCGColor:", v62);

        objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_clusterCountLabel], "setBackgroundColor:", v120);
        goto LABEL_37;
      }
    }
  }
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v76 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v76, (uint64_t)static MOAngelLogger.assets);
  v77 = v1;
  v78 = Logger.logObject.getter(v77);
  v79 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v78, v79))
  {
    v80 = swift_slowAlloc(22, -1);
    v81 = swift_slowAlloc(32, -1);
    v123 = v81;
    *(_DWORD *)v80 = 134218242;
    if (v3)
    {
      v82 = objc_msgSend(v3, "name");
      if (v82)
      {
        v83 = v82;
        v84 = static String._unconditionallyBridgeFromObjectiveC(_:)(v82);
        v86 = v85;

      }
      else
      {
        v84 = 0;
        v86 = 0;
      }
      v121 = v84;
      v122 = v86;
      v88 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
      v87 = Optional<A>.hashValue.getter(v88, &protocol witness table for String);

      swift_bridgeObjectRelease(v86);
    }
    else
    {

      v87 = 0;
    }
    v121 = v87;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, &v122, v80 + 4);

    *(_WORD *)(v80 + 12) = 2080;
    if (v3)
    {
      v89 = objc_msgSend(v3, "_poiCategory");
      v121 = (uint64_t)v89;
      v90 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for GEOPOICategory?);
      v91 = Optional.debugDescription.getter(v90);
      v93 = v92;

    }
    else
    {
      v93 = 0xE300000000000000;
      v91 = 7104878;
    }
    v121 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v91, v93, &v123);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, &v122, v80 + 14);

    swift_bridgeObjectRelease(v93);
    _os_log_impl((void *)&_mh_execute_header, v78, v79, "[POIClustering] [RENDERING] Fallback, geoMapItem.name=%ld, geoMapItem.poiCategory=%s", (uint8_t *)v80, 0x16u);
    swift_arrayDestroy(v81, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v81, -1, -1);
    swift_slowDealloc(v80, -1, -1);

  }
  else
  {

  }
  v94 = *(void **)&v77[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_basePOICircleView];
  objc_msgSend(v94, "frame");
  CGRectGetWidth(v124);
  objc_msgSend(v94, "frame");
  CGRectGetHeight(v125);
  objc_msgSend(v94, "frame");
  CGRectGetWidth(v126);
  objc_msgSend(v94, "frame");
  CGRectGetHeight(v127);
  MOSuggestionInterstitialExpandableListViewCellConstants.init()();
  v99 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", v95, v96, v97, v98);
  v100 = String._bridgeToObjectiveC()();
  v101 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v100);

  objc_msgSend(v99, "setImage:", v101);
  v102 = (void *)objc_opt_self(UIColor);
  v103 = objc_msgSend(v102, "systemWhiteColor");
  objc_msgSend(v99, "setTintColor:", v103);

  v104 = objc_msgSend(v102, "systemIndigoColor");
  objc_msgSend(v94, "setBackgroundColor:", v104);

  v105 = *(void **)&v77[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_downArrowView];
  v106 = objc_msgSend(v102, "systemIndigoColor");
  objc_msgSend(v105, "setTintColor:", v106);

  v107 = *(void **)&v77[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_clusterCountLabel];
  v108 = objc_msgSend(v102, "systemIndigoColor");
  objc_msgSend(v107, "setBackgroundColor:", v108);

  v109 = objc_msgSend(v94, "layer");
  objc_msgSend(v94, "frame");
  objc_msgSend(v109, "setCornerRadius:", CGRectGetHeight(v128) * 0.5);

  objc_msgSend(v94, "addSubview:", v99);
}

void MOPOIAnnotationView.init(annotation:reuseIdentifier:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MomentsUIService.MOPOIAnnotationView", 36, "init(annotation:reuseIdentifier:)", 33, 0);
  __break(1u);
}

id MOPOIAnnotationView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOPOIAnnotationView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id specialized MOPOIAnnotationView.init(annotation:configuration:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  objc_class *v19;
  id v20;
  id v21;
  __n128 v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[5];
  uint64_t v36;
  objc_super v37;

  v31 = a1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v34 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v32 = *(_QWORD *)(v7 - 8);
  v33 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_basePOICircleView;
  v11 = objc_allocWithZone((Class)UIImageView);
  v12 = v2;
  *(_QWORD *)&v2[v10] = objc_msgSend(v11, "init");
  v13 = OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_downArrowView;
  *(_QWORD *)&v12[v13] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v14 = OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_clusterCountLabel;
  *(_QWORD *)&v12[v14] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v15 = OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_borderBackgroundView;
  *(_QWORD *)&v12[v15] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v16 = &v12[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_configuration];
  v17 = *(_OWORD *)a2;
  v18 = *(_OWORD *)(a2 + 16);
  *((_QWORD *)v16 + 4) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)v16 = v17;
  *((_OWORD *)v16 + 1) = v18;
  outlined retain of MOPOIAnnotationViewConfiguration(a2);

  v19 = (objc_class *)type metadata accessor for MOPOIAnnotationView();
  v37.receiver = v12;
  v37.super_class = v19;
  v20 = objc_msgSendSuper2(&v37, "initWithAnnotation:reuseIdentifier:", v31, 0);
  type metadata accessor for OS_dispatch_queue();
  v21 = v20;
  v23 = (void *)static OS_dispatch_queue.main.getter(v22);
  v24 = swift_allocObject(&unk_1001EA118, 24, 7);
  swift_unknownObjectWeakInit(v24 + 16);
  aBlock[4] = partial apply for closure #1 in MOPOIAnnotationView.init(annotation:configuration:);
  v36 = v24;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_25;
  v25 = _Block_copy(aBlock);
  swift_release(v36);
  static DispatchQoS.unspecified.getter(v26);
  aBlock[0] = _swiftEmptyArrayStorage;
  v27 = lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  v29 = lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v28, v29, v4, v27);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v6, v25);

  _Block_release(v25);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v33);
  return v21;
}

_QWORD *outlined release of MOPOIAnnotationViewConfiguration(_QWORD *a1)
{
  swift_unknownObjectRelease(*a1);
  return a1;
}

_BYTE *outlined init with take of MOSuggestionAssetTileSize(_BYTE *a1, _BYTE *a2)
{
  __swift_memcpy1_1(a2, a1);
  return a2;
}

void specialized MOPOIAnnotationView.setupBorderBackground(cluster:)()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  CGRect v6;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_borderBackgroundView);
  MOPOIAnnotationViewConfiguration.clusterCountLabelFrame.getter();
  MOPOIAnnotationViewConfiguration.clusterCountLabelFrame.getter();
  MOPOIAnnotationViewConfiguration.clusterCountLabelFrame.getter();
  MOSuggestionInterstitialExpandableListViewCellConstants.init()();
  objc_msgSend(v1, "setFrame:");
  v2 = objc_msgSend(v1, "layer");
  v3 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  v4 = objc_msgSend(v3, "CGColor");

  objc_msgSend(v2, "setBackgroundColor:", v4);
  objc_msgSend(v1, "setClipsToBounds:", 1);
  v5 = objc_msgSend(v1, "layer");
  objc_msgSend(v1, "frame");
  objc_msgSend(v5, "setCornerRadius:", CGRectGetWidth(v6) * 0.5);

}

void specialized MOPOIAnnotationView.init(coder:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_basePOICircleView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v2 = OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_downArrowView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v3 = OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_clusterCountLabel;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v4 = OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_borderBackgroundView;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionMapSnapshotAnnotationView.swift", 60, 2, 343, 0);
  __break(1u);
}

uint64_t type metadata accessor for MOPOIAnnotationView()
{
  return objc_opt_self(_TtC16MomentsUIService19MOPOIAnnotationView);
}

uint64_t initializeWithCopy for MOPOIAnnotationViewConfiguration(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for MOPOIAnnotationViewConfiguration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease(v4);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
  a1[2] = a2[2];
  *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
  *((_BYTE *)a1 + 25) = *((_BYTE *)a2 + 25);
  *((_BYTE *)a1 + 26) = *((_BYTE *)a2 + 26);
  *((_BYTE *)a1 + 27) = *((_BYTE *)a2 + 27);
  a1[4] = a2[4];
  return a1;
}

uint64_t *assignWithTake for MOPOIAnnotationViewConfiguration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_unknownObjectRelease(v4);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
  a1[2] = a2[2];
  *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
  *((_BYTE *)a1 + 25) = *((_BYTE *)a2 + 25);
  *((_BYTE *)a1 + 26) = *((_BYTE *)a2 + 26);
  *((_BYTE *)a1 + 27) = *((_BYTE *)a2 + 27);
  a1[4] = a2[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for MOPOIAnnotationViewConfiguration(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 40))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MOPOIAnnotationViewConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MOPOIAnnotationViewConfiguration()
{
  return &type metadata for MOPOIAnnotationViewConfiguration;
}

uint64_t outlined retain of MOPOIAnnotationViewConfiguration(uint64_t a1)
{
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_1000FFB18()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void partial apply for closure #1 in MOPOIAnnotationView.init(annotation:configuration:)()
{
  uint64_t v0;

  closure #1 in MOPOIAnnotationView.init(annotation:configuration:)(v0);
}

uint64_t block_copy_helper_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_25(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id MOAngelControllerWrapper.didTransitionTo(_:)(id result)
{
  uint64_t v1;
  uint64_t v2;
  id v3;

  v2 = OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_currentViewState;
  if (*(id *)(v1 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_currentViewState) != result)
  {
    v3 = result;
    result = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager), "sendSuggestionSheetStateUpdate:sender:", result, v1);
    *(_QWORD *)(v1 + v2) = v3;
  }
  return result;
}

char *MOAngelControllerWrapper.uiInternalOS.unsafeMutableAddressor()
{
  if (one-time initialization token for uiInternalOS != -1)
    swift_once(&one-time initialization token for uiInternalOS, one-time initialization function for uiInternalOS);
  return &static MOAngelControllerWrapper.uiInternalOS;
}

uint64_t MOMusicPlaybackCoordinator.delegates.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 24, v2, 0, 0);
  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 24));
}

uint64_t MOMusicPlaybackCoordinator.delegates.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  swift_beginAccess(v1 + 24, v5, 1, 0);
  v3 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v1 + 24) = a1;
  return swift_bridgeObjectRelease(v3);
}

_QWORD *MOEventBundleWithAsset.__allocating_init(bundle:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *result;

  result = (_QWORD *)swift_allocObject(v1, 40, 7);
  result[3] = 0;
  result[4] = 0;
  result[2] = a1;
  return result;
}

_QWORD *MOEventBundleWithAsset.init(bundle:)(uint64_t a1)
{
  _QWORD *v1;

  v1[3] = 0;
  v1[4] = 0;
  v1[2] = a1;
  return v1;
}

uint64_t MOSuggestionAssetWorkoutRouteProvider.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return v0;
}

uint64_t MOSuggestionAssetWorkoutRouteProvider.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t MOAngelControllerWrapper.delegate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_delegate;
  swift_beginAccess(v3, v5, 0, 0);
  return outlined init with copy of MOAngelControllerWrapperDelegate?(v3, a1);
}

uint64_t MOAngelControllerWrapper.delegate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_delegate;
  swift_beginAccess(v3, v5, 33, 0);
  outlined assign with take of MOAngelControllerWrapperDelegate?(a1, v3);
  return swift_endAccess(v5);
}

uint64_t (*MOAngelControllerWrapper.delegate.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_delegate, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id one-time initialization function for uiInternalOS()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(MOPlatformInfo), "isInternalBuild");
  static MOAngelControllerWrapper.uiInternalOS = (char)result;
  return result;
}

uint64_t static MOAngelControllerWrapper.uiInternalOS.getter()
{
  if (one-time initialization token for uiInternalOS != -1)
    swift_once(&one-time initialization token for uiInternalOS, one-time initialization function for uiInternalOS);
  return static MOAngelControllerWrapper.uiInternalOS;
}

uint64_t key path getter for MOAngelControllerWrapper.isVisible : MOAngelControllerWrapper@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xF0))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for MOAngelControllerWrapper.isVisible : MOAngelControllerWrapper(unsigned __int8 *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(_QWORD))((swift_isaMask & **a2) + 0xF8))(*a1);
}

uint64_t MOAngelControllerWrapper.isVisible.getter()
{
  return MOAngelControllerWrapper.isVisible.getter((uint64_t)&unk_1001A2190, (uint64_t)&unk_1001A21B8);
}

uint64_t MOAngelControllerWrapper.isVisible.setter(char a1)
{
  return MOAngelControllerWrapper.isVisible.setter(a1, (uint64_t)&unk_1001A2190, (uint64_t)&unk_1001A21B8);
}

uint64_t (*MOAngelControllerWrapper.isVisible.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_1001A2190);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_1001A21B8);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return MOAngelControllerWrapper.isVisible.modify;
}

uint64_t key path setter for MOAngelControllerWrapper.$isVisible : MOAngelControllerWrapper(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  __chkstk_darwin(v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))((swift_isaMask & **a2) + 0x110))(v6);
}

uint64_t MOAngelControllerWrapper.$isVisible.getter()
{
  return MOAngelControllerWrapper.$isVisible.getter(&OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper__isVisible);
}

uint64_t MOAngelControllerWrapper.$isVisible.setter(uint64_t a1)
{
  return MOAngelControllerWrapper.$isVisible.setter(a1, &OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper__isVisible);
}

uint64_t (*MOAngelControllerWrapper.$isVisible.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper__isVisible;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return MOAngelControllerWrapper.$isVisible.modify;
}

uint64_t property wrapper backing initializer of MOAngelControllerWrapper.isExpanded(char a1)
{
  char v2;

  v2 = a1;
  return Published.init(initialValue:)(&v2, &type metadata for Bool);
}

uint64_t key path getter for MOAngelControllerWrapper.isExpanded : MOAngelControllerWrapper@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x120))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for MOAngelControllerWrapper.isExpanded : MOAngelControllerWrapper(unsigned __int8 *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(_QWORD))((swift_isaMask & **a2) + 0x128))(*a1);
}

uint64_t MOAngelControllerWrapper.isExpanded.getter()
{
  return MOAngelControllerWrapper.isVisible.getter((uint64_t)&unk_1001A21D8, (uint64_t)&unk_1001A2200);
}

uint64_t MOAngelControllerWrapper.isVisible.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v5 = swift_getKeyPath(a2);
  static Published.subscript.getter(&v7, v2, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  return v7;
}

uint64_t MOAngelControllerWrapper.isExpanded.setter(char a1)
{
  return MOAngelControllerWrapper.isVisible.setter(a1, (uint64_t)&unk_1001A21D8, (uint64_t)&unk_1001A2200);
}

uint64_t MOAngelControllerWrapper.isVisible.setter(char a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t KeyPath;
  uint64_t v7;
  char v9;

  KeyPath = swift_getKeyPath(a2);
  v7 = swift_getKeyPath(a3);
  v9 = a1;
  return static Published.subscript.setter(&v9, v3, KeyPath, v7);
}

uint64_t (*MOAngelControllerWrapper.isExpanded.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_1001A21D8);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_1001A2200);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return MOAngelControllerWrapper.isVisible.modify;
}

void MOAngelControllerWrapper.isVisible.modify(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (void *)*a1;
  v2 = *(_QWORD *)(*a1 + 40);
  v3 = *(_QWORD *)(*a1 + 32);
  (*(void (**)(_QWORD, _QWORD))(*a1 + 48))(*a1, 0);
  swift_release(v2);
  swift_release(v3);
  free(v1);
}

uint64_t key path setter for MOAngelControllerWrapper.$isExpanded : MOAngelControllerWrapper(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  __chkstk_darwin(v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))((swift_isaMask & **a2) + 0x140))(v6);
}

uint64_t MOAngelControllerWrapper.$isExpanded.getter()
{
  return MOAngelControllerWrapper.$isVisible.getter(&OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper__isExpanded);
}

uint64_t MOAngelControllerWrapper.$isVisible.getter(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  swift_beginAccess(v1 + *a1, v4, 33, 0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.getter(v2);
  return swift_endAccess(v4);
}

uint64_t MOAngelControllerWrapper.$isExpanded.setter(uint64_t a1)
{
  return MOAngelControllerWrapper.$isVisible.setter(a1, &OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper__isExpanded);
}

uint64_t MOAngelControllerWrapper.$isVisible.setter(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v12[24];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  swift_beginAccess(v2 + *a2, v12, 33, 0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.setter(v8, v9);
  swift_endAccess(v12);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
}

uint64_t (*MOAngelControllerWrapper.$isExpanded.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper__isExpanded;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return MOAngelControllerWrapper.$isVisible.modify;
}

void MOAngelControllerWrapper.$isVisible.modify(uint64_t a1, char a2)
{
  _QWORD *v3;
  void (*v4)(_QWORD, _QWORD, _QWORD);
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(void *, uint64_t);

  v3 = *(_QWORD **)a1;
  v4 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)a1 + 88) + 16);
  v4(*(_QWORD *)(*(_QWORD *)a1 + 104), v3[14], v3[10]);
  v5 = v3[15];
  v6 = v3[16];
  v7 = (void *)v3[13];
  v8 = (void *)v3[14];
  v10 = v3[11];
  v9 = (void *)v3[12];
  v11 = v3[9];
  v12 = v3[10];
  v13 = v11 + v5;
  if ((a2 & 1) != 0)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess(v13, v3 + 3, 33, 0);
    Published.projectedValue.setter(v9, v6);
    swift_endAccess(v3 + 3);
    v14 = *(void (**)(void *, uint64_t))(v10 + 8);
    v14(v7, v12);
  }
  else
  {
    swift_beginAccess(v11 + v5, v3 + 6, 33, 0);
    Published.projectedValue.setter(v7, v6);
    swift_endAccess(v3 + 6);
    v14 = *(void (**)(void *, uint64_t))(v10 + 8);
  }
  v14(v8, v12);
  free(v8);
  free(v7);
  free(v9);
  free(v3);
}

id MOAngelControllerWrapper.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  void (*v11)(char *, char *, uint64_t);
  char *v12;
  objc_class *v13;
  uint64_t v15;
  objc_super v16;
  char v17;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager;
  v6 = (void *)objc_opt_self(MOSuggestionsUIServerManager);
  v7 = v0;
  *(_QWORD *)&v0[v5] = objc_msgSend(v6, "sharedInstance");
  v8 = OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_engagementWriter;
  *(_QWORD *)&v7[v8] = objc_msgSend((id)objc_opt_self(MOEngagementHistoryWriter), "sharedInstance");
  *(_QWORD *)&v7[OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_currentViewState] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_initialPresentRequestState] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_contentOptions] = 0;
  v9 = &v7[OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_delegate];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  v10 = &v7[OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper__isVisible];
  v17 = 0;
  Published.init(initialValue:)(&v17, &type metadata for Bool);
  v11 = *(void (**)(char *, char *, uint64_t))(v2 + 32);
  v11(v10, v4, v1);
  v12 = &v7[OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper__isExpanded];
  v17 = 1;
  Published.init(initialValue:)(&v17, &type metadata for Bool);
  v11(v12, v4, v1);

  v13 = (objc_class *)type metadata accessor for MOAngelControllerWrapper(0);
  v16.receiver = v7;
  v16.super_class = v13;
  return objc_msgSendSuper2(&v16, "init");
}

Swift::Void __swiftcall MOAngelControllerWrapper.cancelSheetSelected()()
{
  MOAngelControllerWrapper.cancelSheetSelected()(0xD00000000000003CLL, 0x80000001001AC2A0, (SEL *)&selRef_cancelSheet_);
}

void wrapperDebugLog(_:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (serverManager._clientConnections != (NSMutableDictionary *)-1)
    swift_once(&serverManager._clientConnections, one-time initialization function for shared);
  v4 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v4, (uint64_t)static MOAngelLogger.shared);
  v5 = swift_bridgeObjectRetain_n(a2, 2);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v11 = v9;
    *(_DWORD *)v8 = 136315138;
    swift_bridgeObjectRetain(a2);
    v10 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v10, &v11, v8 + 4);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "MOAngelControllerWrapper: %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
}

Swift::Void __swiftcall MOAngelControllerWrapper.showBlankEntrySelected()()
{
  MOAngelControllerWrapper.cancelSheetSelected()(0xD00000000000004BLL, 0x80000001001AC2E0, (SEL *)&selRef_showBlankComposeView_);
}

id MOAngelControllerWrapper.cancelSheetSelected()(uint64_t a1, unint64_t a2, SEL *a3)
{
  uint64_t v3;

  wrapperDebugLog(_:)(a1, a2);
  return objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager), *a3, v3);
}

uint64_t MOAngelControllerWrapper.selectedBundle(_:modifiedTitle:isPromptElligibleForTransfer:forContainer:)(void *a1, uint64_t a2, unint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  NSString v22;
  NSArray v23;
  id v24;
  Swift::String v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  Swift::String v33;
  Swift::String v34;
  unint64_t v35;
  double v36;
  void *v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  Class isa;
  NSString v46;
  Class v47;
  uint64_t v48;
  Class v49;
  double v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[3];
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;

  v7 = v6;
  v59 = a5;
  v60 = a6;
  v58 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_msgSend(a1, "labels");
  if (v14)
  {
    v15 = v14;
    v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, &type metadata for String);

    if (*(_QWORD *)(v16 + 16))
    {
      v17 = *(_QWORD *)(v16 + 40);
      swift_bridgeObjectRetain(v17);
    }
    else
    {
      v17 = 0xE000000000000000;
    }
    swift_bridgeObjectRelease(v16);
    if (a3)
      goto LABEL_8;
  }
  else
  {
    v17 = 0xE000000000000000;
    if (a3)
    {
LABEL_8:
      swift_bridgeObjectRetain(a3);
      swift_bridgeObjectRelease(v17);
      v17 = a3;
    }
  }
  if (one-time initialization token for shared != -1)
    swift_once(&one-time initialization token for shared, one-time initialization function for shared);
  v18 = static MOSuggestionAssetCacheManager.shared;
  v19 = (unint64_t)MOEventBundle.orderedAssetReferencesForPreview(max:)(13);
  v20 = (*(uint64_t (**)(void))(*(_QWORD *)v18 + 240))();
  swift_bridgeObjectRelease(v19);
  v21 = a1;
  v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v17);
  if (v20)
  {
    type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MOSuggestionAssetPrototype, MOSuggestionAssetPrototype_ptr);
    v23.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v20);
  }
  else
  {
    v23.super.isa = 0;
  }
  v24 = objc_msgSend(objc_allocWithZone((Class)MOSuggestion), "initWithBundle:modifiedTitle:isPromptElligibleForTransfer:assetPrototypes:", v21, v22, a4 & 1, v23.super.isa);

  v64 = 0;
  v65 = 0xE000000000000000;
  _StringGuts.grow(_:)(58);
  v25._object = (void *)0x80000001001AC330;
  v25._countAndFlagsBits = 0xD000000000000037;
  String.append(_:)(v25);
  v26 = objc_msgSend(v24, "baseBundle");
  v27 = objc_msgSend(v26, "bundleIdentifier");

  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v29 = UUID.uuidString.getter(v28);
  v31 = v30;
  v32 = v58;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v58);
  v33._countAndFlagsBits = v29;
  v33._object = v31;
  String.append(_:)(v33);
  swift_bridgeObjectRelease(v31);
  v34._countAndFlagsBits = 46;
  v34._object = (void *)0xE100000000000000;
  String.append(_:)(v34);
  v35 = v65;
  wrapperDebugLog(_:)(v64, v65);
  *(_QWORD *)&v36 = swift_bridgeObjectRelease(v35).n128_u64[0];
  v37 = *(void **)((char *)v7 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager);
  v57 = v24;
  objc_msgSend(v37, "performTask:suggestion:sender:", 1, v24, v7, v36);
  v56 = *(id *)((char *)v7 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_engagementWriter);
  v38 = MOSuggestionEngagementEventSelected;
  v39 = objc_msgSend(v37, "getClientBundleIdentifierFor:", v7);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UUID>);
  v41 = *(unsigned __int8 *)(v11 + 80);
  v42 = (v41 + 32) & ~v41;
  v43 = swift_allocObject(v40, v42 + *(_QWORD *)(v11 + 72), v41 | 7);
  *(_OWORD *)(v43 + 16) = xmmword_10019ED20;
  v44 = objc_msgSend(v21, "bundleIdentifier");
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v44);

  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v43 + v42, v13, v32);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v43);
  v46 = String._bridgeToObjectiveC()();
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber, NSNumber_ptr);
  v47 = NSNumber.init(integerLiteral:)(0).super.super.isa;
  v48 = specialized MOAngelControllerWrapper.getBundleRankingContext(_:)(v21);
  type metadata accessor for MOUsageContextType(0);
  lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes(&lazy protocol witness table cache variable for type MOUsageContextType and conformance MOUsageContextType, (uint64_t (*)(uint64_t))type metadata accessor for MOUsageContextType, (uint64_t)&protocol conformance descriptor for MOUsageContextType);
  v49 = Dictionary._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v50 = swift_bridgeObjectRelease(v48).n128_u64[0];
  objc_msgSend(v56, "logSuggestionEngagementEvent:clientIdentifier:forBundles:uiContainer:containerVisibleTime:otherContext:", v38, v39, isa, v46, v47, v49, v50);

  v51 = objc_msgSend(v21, "setSuggestionEngagementEvent:", v38);
  (*(void (**)(uint64_t *__return_ptr, id))((swift_isaMask & *v7) + 0xD8))(&v64, v51);
  if (v66)
  {
    outlined init with copy of MOProtectedAppsManagerDelegate((uint64_t)&v64, (uint64_t)v61);
    outlined destroy of Any?((uint64_t)&v64, &demangling cache variable for type metadata for MOAngelControllerWrapperDelegate?);
    v52 = v62;
    v53 = v63;
    __swift_project_boxed_opaque_existential_1(v61, v62);
    (*(void (**)(uint64_t, uint64_t))(v53 + 32))(v52, v53);

    return __swift_destroy_boxed_opaque_existential_1(v61);
  }
  else
  {

    return outlined destroy of Any?((uint64_t)&v64, &demangling cache variable for type metadata for MOAngelControllerWrapperDelegate?);
  }
}

uint64_t MOAngelControllerWrapper.quickAddBundle(_:modifiedTitle:isPromptElligibleForTransfer:forContainer:)(void *a1, uint64_t a2, unint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  Swift::String v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void (*v21)(char *, uint64_t);
  Swift::String v22;
  Swift::String v23;
  unint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  __objc2_ivar_list **p_ivars;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  NSString v33;
  NSArray v34;
  id v35;
  id v36;
  void *v37;
  void *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  Class isa;
  NSString v47;
  Class v48;
  uint64_t v49;
  Class v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v55[2];
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[3];
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;

  v7 = v6;
  v58 = a5;
  v59 = a6;
  LODWORD(v56) = a4;
  v55[1] = a2;
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = 0xE000000000000000;
  v63 = 0;
  v64 = 0xE000000000000000;
  _StringGuts.grow(_:)(57);
  v15._object = (void *)0x80000001001AC370;
  v15._countAndFlagsBits = 0xD000000000000036;
  String.append(_:)(v15);
  v16 = objc_msgSend(a1, "bundleIdentifier");
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v16);

  v18 = UUID.uuidString.getter(v17);
  v20 = v19;
  v21 = *(void (**)(char *, uint64_t))(v11 + 8);
  v57 = v10;
  v21(v13, v10);
  v22._countAndFlagsBits = v18;
  v22._object = v20;
  String.append(_:)(v22);
  swift_bridgeObjectRelease(v20);
  v23._countAndFlagsBits = 46;
  v23._object = (void *)0xE100000000000000;
  String.append(_:)(v23);
  v24 = v64;
  wrapperDebugLog(_:)(v63, v64);
  v25 = objc_msgSend(a1, "labels", swift_bridgeObjectRelease(v24).n128_f64[0]);
  v26 = v25;
  if (v25)
  {
    v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, &type metadata for String);

    if (*(_QWORD *)(v27 + 16))
    {
      v14 = *(_QWORD *)(v27 + 40);
      swift_bridgeObjectRetain(v14);
    }
    p_ivars = &MOSuggestionCollectionViewCellConstants.ivars;
    swift_bridgeObjectRelease(v27);
    if (a3)
      goto LABEL_7;
  }
  else
  {
    p_ivars = (__objc2_ivar_list **)(&MOSuggestionCollectionViewCellConstants + 48);
    if (a3)
    {
LABEL_7:
      swift_bridgeObjectRetain(a3);
      swift_bridgeObjectRelease(v14);
      v14 = a3;
    }
  }
  if (one-time initialization token for shared != -1)
    swift_once(&one-time initialization token for shared, one-time initialization function for shared);
  v29 = static MOSuggestionAssetCacheManager.shared;
  v30 = (unint64_t)MOEventBundle.orderedAssetReferencesForPreview(max:)(13);
  v31 = (*(uint64_t (**)(void))(*(_QWORD *)v29 + 240))();
  swift_bridgeObjectRelease(v30);
  v32 = a1;
  v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14);
  if (v31)
  {
    type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MOSuggestionAssetPrototype, MOSuggestionAssetPrototype_ptr);
    v34.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v31);
  }
  else
  {
    v34.super.isa = 0;
  }
  v35 = objc_allocWithZone((Class)MOSuggestion);
  v36 = objc_msgSend(v35, "initWithBundle:modifiedTitle:isPromptElligibleForTransfer:assetPrototypes:", v32, v33, v56 & 1, v34.super.isa);

  v37 = *(void **)((char *)v7 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager);
  v56 = v36;
  objc_msgSend(v37, "performTask:suggestion:sender:", 2, v36, v7);
  v38 = *(void **)((char *)v7 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_engagementWriter);
  v39 = MOSuggestionEngagementEventQuickAddEntry;
  v40 = objc_msgSend(v37, "getClientBundleIdentifierFor:", v7);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UUID>);
  v42 = *(unsigned __int8 *)(v11 + 80);
  v43 = (v42 + 32) & ~v42;
  v44 = swift_allocObject(v41, v43 + *(_QWORD *)(v11 + 72), v42 | 7);
  *(_OWORD *)(v44 + 16) = xmmword_10019ED20;
  v45 = objc_msgSend(v32, (SEL)p_ivars[262]);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v45);

  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v44 + v43, v13, v57);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v44);
  v47 = String._bridgeToObjectiveC()();
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber, NSNumber_ptr);
  v48 = NSNumber.init(integerLiteral:)(0).super.super.isa;
  v49 = specialized MOAngelControllerWrapper.getBundleRankingContext(_:)(v32);
  type metadata accessor for MOUsageContextType(0);
  lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes(&lazy protocol witness table cache variable for type MOUsageContextType and conformance MOUsageContextType, (uint64_t (*)(uint64_t))type metadata accessor for MOUsageContextType, (uint64_t)&protocol conformance descriptor for MOUsageContextType);
  v50 = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v38, "logSuggestionEngagementEvent:clientIdentifier:forBundles:uiContainer:containerVisibleTime:otherContext:", v39, v40, isa, v47, v48, v50, swift_bridgeObjectRelease(v49).n128_f64[0]);

  v51 = objc_msgSend(v32, "setSuggestionEngagementEvent:", v39);
  (*(void (**)(uint64_t *__return_ptr, id))((swift_isaMask & *v7) + 0xD8))(&v63, v51);
  if (v65)
  {
    outlined init with copy of MOProtectedAppsManagerDelegate((uint64_t)&v63, (uint64_t)v60);
    outlined destroy of Any?((uint64_t)&v63, &demangling cache variable for type metadata for MOAngelControllerWrapperDelegate?);
    v52 = v61;
    v53 = v62;
    __swift_project_boxed_opaque_existential_1(v60, v61);
    (*(void (**)(uint64_t, uint64_t))(v53 + 32))(v52, v53);

    return __swift_destroy_boxed_opaque_existential_1(v60);
  }
  else
  {

    return outlined destroy of Any?((uint64_t)&v63, &demangling cache variable for type metadata for MOAngelControllerWrapperDelegate?);
  }
}

void MOAngelControllerWrapper.logInterstitialTap(_:forContainer:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::String v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  Swift::String v16;
  Swift::String v17;
  unint64_t v18;
  double v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  Class isa;
  NSString v29;
  Class v30;
  uint64_t v31;
  Class v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;

  v4 = v3;
  v33 = a2;
  v34 = a3;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = 0;
  v36 = 0xE000000000000000;
  _StringGuts.grow(_:)(81);
  v10._object = (void *)0x80000001001AC3B0;
  v10._countAndFlagsBits = 0xD00000000000004ELL;
  String.append(_:)(v10);
  v11 = objc_msgSend(a1, "bundleIdentifier", v33, v34);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v11);

  v13 = UUID.uuidString.getter(v12);
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v16._countAndFlagsBits = v13;
  v16._object = v15;
  String.append(_:)(v16);
  swift_bridgeObjectRelease(v15);
  v17._countAndFlagsBits = 46;
  v17._object = (void *)0xE100000000000000;
  String.append(_:)(v17);
  v18 = v36;
  wrapperDebugLog(_:)(v35, v36);
  *(_QWORD *)&v19 = swift_bridgeObjectRelease(v18).n128_u64[0];
  v20 = *(void **)(v4 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_engagementWriter);
  v21 = MOSuggestionEngagementEventThumbsUp;
  v22 = objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager), "getClientBundleIdentifierFor:", v4, v19);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UUID>);
  v24 = *(unsigned __int8 *)(v7 + 80);
  v25 = (v24 + 32) & ~v24;
  v26 = swift_allocObject(v23, v25 + *(_QWORD *)(v7 + 72), v24 | 7);
  *(_OWORD *)(v26 + 16) = xmmword_10019ED20;
  v27 = objc_msgSend(a1, "bundleIdentifier");
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v27);

  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v26 + v25, v9, v6);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v26);
  v29 = String._bridgeToObjectiveC()();
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber, NSNumber_ptr);
  v30 = NSNumber.init(integerLiteral:)(0).super.super.isa;
  v31 = specialized MOAngelControllerWrapper.getBundleRankingContext(_:)(a1);
  type metadata accessor for MOUsageContextType(0);
  lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes(&lazy protocol witness table cache variable for type MOUsageContextType and conformance MOUsageContextType, (uint64_t (*)(uint64_t))type metadata accessor for MOUsageContextType, (uint64_t)&protocol conformance descriptor for MOUsageContextType);
  v32 = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v20, "logSuggestionEngagementEvent:clientIdentifier:forBundles:uiContainer:containerVisibleTime:otherContext:", v21, v22, isa, v29, v30, v32, swift_bridgeObjectRelease(v31).n128_f64[0]);

}

id MOAngelControllerWrapper.removeBundle(_:forContainer:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::String v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  Swift::String v16;
  Swift::String v17;
  unint64_t v18;
  double v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  Class isa;
  NSString v29;
  Class v30;
  uint64_t v31;
  Class v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;

  v4 = v3;
  v34 = a2;
  v35 = a3;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = 0;
  v37 = 0xE000000000000000;
  _StringGuts.grow(_:)(59);
  v10._object = (void *)0x80000001001AC400;
  v10._countAndFlagsBits = 0xD000000000000038;
  String.append(_:)(v10);
  v11 = objc_msgSend(a1, "bundleIdentifier", v34, v35);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v11);

  v13 = UUID.uuidString.getter(v12);
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v16._countAndFlagsBits = v13;
  v16._object = v15;
  String.append(_:)(v16);
  swift_bridgeObjectRelease(v15);
  v17._countAndFlagsBits = 46;
  v17._object = (void *)0xE100000000000000;
  String.append(_:)(v17);
  v18 = v37;
  wrapperDebugLog(_:)(v36, v37);
  *(_QWORD *)&v19 = swift_bridgeObjectRelease(v18).n128_u64[0];
  v20 = *(void **)(v4 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_engagementWriter);
  v21 = MOSuggestionEngagementEventDeleted;
  v22 = objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager), "getClientBundleIdentifierFor:", v4, v19);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UUID>);
  v24 = *(unsigned __int8 *)(v7 + 80);
  v25 = (v24 + 32) & ~v24;
  v26 = swift_allocObject(v23, v25 + *(_QWORD *)(v7 + 72), v24 | 7);
  *(_OWORD *)(v26 + 16) = xmmword_10019ED20;
  v27 = objc_msgSend(a1, "bundleIdentifier");
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v27);

  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v26 + v25, v9, v6);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v26);
  v29 = String._bridgeToObjectiveC()();
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber, NSNumber_ptr);
  v30 = NSNumber.init(integerLiteral:)(0).super.super.isa;
  v31 = specialized MOAngelControllerWrapper.getBundleRankingContext(_:)(a1);
  type metadata accessor for MOUsageContextType(0);
  lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes(&lazy protocol witness table cache variable for type MOUsageContextType and conformance MOUsageContextType, (uint64_t (*)(uint64_t))type metadata accessor for MOUsageContextType, (uint64_t)&protocol conformance descriptor for MOUsageContextType);
  v32 = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v20, "logSuggestionEngagementEvent:clientIdentifier:forBundles:uiContainer:containerVisibleTime:otherContext:", v21, v22, isa, v29, v30, v32, swift_bridgeObjectRelease(v31).n128_f64[0]);

  return objc_msgSend(a1, "setSuggestionEngagementEvent:", v21);
}

void MOAngelControllerWrapper.logViewedBundle(_:forContainer:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  Class isa;
  NSString v15;
  Class v16;
  uint64_t v17;
  Class v18;
  double v19;
  uint64_t v20;
  id v21;

  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(id *)(v1 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_engagementWriter);
  v20 = MOSuggestionEngagementEventViewed;
  v7 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager), "getClientBundleIdentifierFor:", v1);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UUID>);
  v9 = *(unsigned __int8 *)(v4 + 80);
  v10 = (v9 + 32) & ~v9;
  v11 = swift_allocObject(v8, v10 + *(_QWORD *)(v4 + 72), v9 | 7);
  *(_OWORD *)(v11 + 16) = xmmword_10019ED20;
  v12 = v11 + v10;
  v13 = objc_msgSend(a1, "bundleIdentifier");
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v13);

  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v12, v6, v3);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v11);
  v15 = String._bridgeToObjectiveC()();
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber, NSNumber_ptr);
  v16 = NSNumber.init(integerLiteral:)(0).super.super.isa;
  v17 = specialized MOAngelControllerWrapper.getBundleRankingContext(_:)(a1);
  type metadata accessor for MOUsageContextType(0);
  lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes(&lazy protocol witness table cache variable for type MOUsageContextType and conformance MOUsageContextType, (uint64_t (*)(uint64_t))type metadata accessor for MOUsageContextType, (uint64_t)&protocol conformance descriptor for MOUsageContextType);
  v18 = Dictionary._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v19 = swift_bridgeObjectRelease(v17).n128_u64[0];
  objc_msgSend(v21, "logSuggestionEngagementEvent:clientIdentifier:forBundles:uiContainer:containerVisibleTime:otherContext:", v20, v7, isa, v15, v16, v18, v19);

}

uint64_t MOAngelControllerWrapper.selectedBundleFeedback(_:forContainer:)(void *a1, uint64_t a2, char *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  Swift::String v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  Swift::String v20;
  Swift::String v21;
  unint64_t v22;
  double v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  Class isa;
  NSString v32;
  Class v33;
  uint64_t v34;
  Class v35;
  double v36;
  double v37;
  void *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  Swift::String v47;
  unint64_t v48;
  uint64_t v49;
  __n128 v50;
  char *v52;
  id v53;
  NSURL *v54;
  void *v55;
  void *v56;
  unint64_t v57;
  Class v58;
  char *v59;
  id v60;
  uint64_t v61;
  char *v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  unint64_t v68;

  v61 = a2;
  v62 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v5);
  v66 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  v64 = v7;
  v65 = v8;
  __chkstk_darwin(v7);
  v59 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = 0;
  v68 = 0xE000000000000000;
  _StringGuts.grow(_:)(74);
  v14._countAndFlagsBits = 0xD000000000000047;
  v14._object = (void *)0x80000001001AC440;
  String.append(_:)(v14);
  v15 = objc_msgSend(a1, "bundleIdentifier");
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v15);

  v17 = UUID.uuidString.getter(v16);
  v19 = v18;
  v63 = *(void (**)(char *, uint64_t))(v11 + 8);
  v63(v13, v10);
  v20._countAndFlagsBits = v17;
  v20._object = v19;
  String.append(_:)(v20);
  swift_bridgeObjectRelease(v19);
  v21._countAndFlagsBits = 46;
  v21._object = (void *)0xE100000000000000;
  String.append(_:)(v21);
  v22 = v68;
  wrapperDebugLog(_:)(v67, v68);
  *(_QWORD *)&v23 = swift_bridgeObjectRelease(v22).n128_u64[0];
  v60 = *(id *)(v3 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_engagementWriter);
  v24 = MOSuggestionEngagementEventAnnotated;
  v25 = objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager), "getClientBundleIdentifierFor:", v3, v23);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UUID>);
  v27 = *(unsigned __int8 *)(v11 + 80);
  v28 = (v27 + 32) & ~v27;
  v29 = swift_allocObject(v26, v28 + *(_QWORD *)(v11 + 72), v27 | 7);
  *(_OWORD *)(v29 + 16) = xmmword_10019ED20;
  v30 = objc_msgSend(a1, "bundleIdentifier");
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v30);

  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v29 + v28, v13, v10);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v29);
  v32 = String._bridgeToObjectiveC()();
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber, NSNumber_ptr);
  v33 = NSNumber.init(integerLiteral:)(0).super.super.isa;
  v34 = specialized MOAngelControllerWrapper.getBundleRankingContext(_:)(a1);
  type metadata accessor for MOUsageContextType(0);
  lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes(&lazy protocol witness table cache variable for type MOUsageContextType and conformance MOUsageContextType, (uint64_t (*)(uint64_t))type metadata accessor for MOUsageContextType, (uint64_t)&protocol conformance descriptor for MOUsageContextType);
  v62 = (char *)&type metadata for Any + 8;
  v35 = Dictionary._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v36 = swift_bridgeObjectRelease(v34).n128_u64[0];
  objc_msgSend(v60, "logSuggestionEngagementEvent:clientIdentifier:forBundles:uiContainer:containerVisibleTime:otherContext:", v24, v25, isa, v32, v33, v35, v36);

  objc_msgSend(a1, "setSuggestionEngagementEvent:", v24);
  v67 = 0;
  v68 = 0xE000000000000000;
  _StringGuts.grow(_:)(33);
  *(_QWORD *)&v37 = swift_bridgeObjectRelease(v68).n128_u64[0];
  v67 = 0xD00000000000001FLL;
  v68 = 0x80000001001AC490;
  v38 = a1;
  v39 = v64;
  v40 = objc_msgSend(v38, "bundleIdentifier", v37);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v40);

  v42 = UUID.uuidString.getter(v41);
  v44 = v43;
  v45 = v10;
  v46 = v65;
  v63(v13, v45);
  v47._countAndFlagsBits = v42;
  v47._object = v44;
  String.append(_:)(v47);
  swift_bridgeObjectRelease(v44);
  v48 = v68;
  v49 = (uint64_t)v66;
  URL.init(string:)(v67, v68);
  v50 = swift_bridgeObjectRelease(v48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v46 + 48))(v49, 1, v39, v50) == 1)
    return outlined destroy of Any?(v49, &demangling cache variable for type metadata for URL?);
  v52 = v59;
  (*(void (**)(char *, uint64_t, uint64_t))(v46 + 32))(v59, v49, v39);
  v53 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  URL._bridgeToObjectiveC()(v54);
  v56 = v55;
  v57 = specialized Dictionary.init(dictionaryLiteral:)((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for UIApplicationOpenExternalURLOptionsKey(0);
  lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes(&lazy protocol witness table cache variable for type UIApplicationOpenExternalURLOptionsKey and conformance UIApplicationOpenExternalURLOptionsKey, (uint64_t (*)(uint64_t))type metadata accessor for UIApplicationOpenExternalURLOptionsKey, (uint64_t)&protocol conformance descriptor for UIApplicationOpenExternalURLOptionsKey);
  v58 = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v53, "openURL:options:completionHandler:", v56, v58, 0, swift_bridgeObjectRelease(v57).n128_f64[0]);

  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v52, v39);
}

Swift::Void __swiftcall MOAngelControllerWrapper.expandedChanged(_:)(Swift::Bool a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _BOOL8 v4;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  void *object;
  Swift::String v9;
  double v10;
  uint64_t v11;

  v2 = v1;
  v4 = a1;
  if (((*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x120))() & 1) != v4)
    (*(void (**)(_BOOL8))((swift_isaMask & *v1) + 0x128))(v4);
  if (a1)
    v5 = 2;
  else
    v5 = 1;
  _StringGuts.grow(_:)(53);
  v6._object = (void *)0x80000001001AC4B0;
  v6._countAndFlagsBits = 0xD000000000000032;
  String.append(_:)(v6);
  v7._countAndFlagsBits = MOSuggestionSheetViewState.toString.getter(v5);
  object = v7._object;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(object);
  v9._countAndFlagsBits = 46;
  v9._object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  wrapperDebugLog(_:)(0, 0xE000000000000000);
  *(_QWORD *)&v10 = swift_bridgeObjectRelease(0xE000000000000000).n128_u64[0];
  v11 = OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_currentViewState;
  if (v5 != *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_currentViewState))
  {
    objc_msgSend(*(id *)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager), "sendSuggestionSheetStateUpdate:sender:", v5, v2, v10);
    *(_QWORD *)((char *)v2 + v11) = v5;
  }
}

uint64_t MOSuggestionSheetViewState.toString.getter(uint64_t a1)
{
  Swift::String v2;
  void *object;

  switch(a1)
  {
    case 0:
      return 0x455353494D534944;
    case 2:
      return 0x455243534C4C5546;
    case 1:
      return 1262830928;
  }
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease(0xE000000000000000);
  v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt, &protocol witness table for UInt);
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  return 0xD000000000000011;
}

Swift::Void __swiftcall MOAngelControllerWrapper.visibilityChanged(_:)(Swift::Bool a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  void *object;
  Swift::String v7;
  double v8;
  uint64_t v9;

  v2 = v1;
  if (a1)
  {
    if (((*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x120))() & 1) != 0)
      v3 = 2;
    else
      v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  _StringGuts.grow(_:)(55);
  v4._object = (void *)0x80000001001AC4F0;
  v4._countAndFlagsBits = 0xD000000000000034;
  String.append(_:)(v4);
  v5._countAndFlagsBits = MOSuggestionSheetViewState.toString.getter(v3);
  object = v5._object;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(object);
  v7._countAndFlagsBits = 46;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  wrapperDebugLog(_:)(0, 0xE000000000000000);
  *(_QWORD *)&v8 = swift_bridgeObjectRelease(0xE000000000000000).n128_u64[0];
  v9 = OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_currentViewState;
  if (v3 != *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_currentViewState))
  {
    objc_msgSend(*(id *)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager), "sendSuggestionSheetStateUpdate:sender:", v3, v2, v8);
    *(_QWORD *)((char *)v2 + v9) = v3;
  }
}

uint64_t MOAngelControllerWrapper.performFeedbackOnBundle(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  Swift::String v11;
  uint64_t (*v12)(void);
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void (*v19)(char *, uint64_t);
  Swift::String v20;
  Swift::String v21;
  unint64_t v22;
  __n128 v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  Swift::String v31;
  unint64_t v32;
  __n128 v33;
  char *v35;
  id v36;
  NSURL *v37;
  void *v38;
  void *v39;
  unint64_t v40;
  Class isa;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v2);
  v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v43 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v42 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = 0;
  v45 = 0xE000000000000000;
  _StringGuts.grow(_:)(74);
  v11._countAndFlagsBits = 0xD000000000000047;
  v11._object = (void *)0x80000001001AC440;
  String.append(_:)(v11);
  v12 = *(uint64_t (**)(void))(*(_QWORD *)a1 + 104);
  v13 = (void *)v12();
  v14 = objc_msgSend(v13, "bundleIdentifier");

  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v16 = UUID.uuidString.getter(v15);
  v18 = v17;
  v19 = *(void (**)(char *, uint64_t))(v8 + 8);
  v19(v10, v7);
  v20._countAndFlagsBits = v16;
  v20._object = v18;
  String.append(_:)(v20);
  swift_bridgeObjectRelease(v18);
  v21._countAndFlagsBits = 46;
  v21._object = (void *)0xE100000000000000;
  String.append(_:)(v21);
  v22 = v45;
  wrapperDebugLog(_:)(v44, v45);
  swift_bridgeObjectRelease(v22);
  v44 = 0;
  v45 = 0xE000000000000000;
  _StringGuts.grow(_:)(33);
  v23 = swift_bridgeObjectRelease(v45);
  v44 = 0xD00000000000001FLL;
  v45 = 0x80000001001AC490;
  v24 = (void *)((uint64_t (*)(__n128))v12)(v23);
  v25 = objc_msgSend(v24, "bundleIdentifier");

  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v25);
  v27 = UUID.uuidString.getter(v26);
  v29 = v28;
  v19(v10, v7);
  v30 = v43;
  v31._countAndFlagsBits = v27;
  v31._object = v29;
  String.append(_:)(v31);
  swift_bridgeObjectRelease(v29);
  v32 = v45;
  URL.init(string:)(v44, v45);
  v33 = swift_bridgeObjectRelease(v32);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v30 + 48))(v4, 1, v5, v33) == 1)
    return outlined destroy of Any?((uint64_t)v4, &demangling cache variable for type metadata for URL?);
  v35 = v42;
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v42, v4, v5);
  v36 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  URL._bridgeToObjectiveC()(v37);
  v39 = v38;
  v40 = specialized Dictionary.init(dictionaryLiteral:)((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for UIApplicationOpenExternalURLOptionsKey(0);
  lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes(&lazy protocol witness table cache variable for type UIApplicationOpenExternalURLOptionsKey and conformance UIApplicationOpenExternalURLOptionsKey, (uint64_t (*)(uint64_t))type metadata accessor for UIApplicationOpenExternalURLOptionsKey, (uint64_t)&protocol conformance descriptor for UIApplicationOpenExternalURLOptionsKey);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v36, "openURL:options:completionHandler:", v39, isa, 0, swift_bridgeObjectRelease(v40).n128_f64[0]);

  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v35, v5);
}

Swift::Bool __swiftcall MOAngelControllerWrapper.isPublicUI()()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager), "getClientBundleIdentifierFor:", v0);
  if (v1)
  {
    v2 = v1;
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
    v5 = v4;

    if (v3 != 0xD000000000000011 || v5 != 0x80000001001AC530)
    {
      v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, 0xD000000000000011, 0x80000001001AC530, 0);
      swift_bridgeObjectRelease(v5);
      v6 = v7 ^ 1;
      return v6 & 1;
    }
    swift_bridgeObjectRelease(0x80000001001AC530);
  }
  v6 = 0;
  return v6 & 1;
}

MomentsUIService::MOClientPresentationDetails __swiftcall MOAngelControllerWrapper.getClientPresentationDetails()()
{
  _QWORD *v0;
  char v1;
  Swift::Int v2;
  Swift::Bool v3;
  MomentsUIService::MOClientPresentationDetails result;

  v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x1B0))();
  v2 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_contentOptions);
  v3 = v1 & 1;
  result.content.rawValue = v2;
  result.isPublicUI = v3;
  return result;
}

Swift::Bool __swiftcall MOAngelControllerWrapper.isSourceJournalComposer()()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_initialPresentRequestState) == 1;
}

Swift::String_optional __swiftcall MOAngelControllerWrapper.clientName()()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  Swift::String v8;
  Swift::String v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  Swift::String v14;
  Swift::String v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  void *v23;
  Swift::String_optional result;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager), "getClientBundleIdentifierFor:", v0);
  if (!v1)
    goto LABEL_5;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v5 = v4;

  v6 = objc_allocWithZone((Class)LSApplicationRecord);
  swift_bridgeObjectRetain(v5);
  v7 = @nonobjc LSApplicationRecord.init(bundleIdentifier:allowPlaceholder:)(v3, (uint64_t)v5, 1);
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease(0xE000000000000000);
  v8._countAndFlagsBits = v3;
  v8._object = v5;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(v5);
  v9._countAndFlagsBits = 572538144;
  v9._object = (void *)0xE400000000000000;
  String.append(_:)(v9);
  if (!v7)
  {
    v20._countAndFlagsBits = 0;
    v20._object = (void *)0xE000000000000000;
    String.append(_:)(v20);
    swift_bridgeObjectRelease(0xE000000000000000);
    v21._countAndFlagsBits = 34;
    v21._object = (void *)0xE100000000000000;
    String.append(_:)(v21);
    wrapperDebugLog(_:)(0x614E746E65696C63, 0xEF20726F6620656DLL);
    swift_bridgeObjectRelease(0xEF20726F6620656DLL);
LABEL_5:
    v17 = 0;
    v19 = 0;
    goto LABEL_6;
  }
  v10 = objc_msgSend(v7, "localizedName");
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  v14._countAndFlagsBits = v11;
  v14._object = v13;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(v13);
  v15._countAndFlagsBits = 34;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  wrapperDebugLog(_:)(0x614E746E65696C63, 0xEF20726F6620656DLL);
  v16 = objc_msgSend(v7, "localizedName", swift_bridgeObjectRelease(0xEF20726F6620656DLL).n128_f64[0]);
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

LABEL_6:
  v22 = v17;
  v23 = v19;
  result.value._object = v23;
  result.value._countAndFlagsBits = v22;
  return result;
}

Swift::String_optional __swiftcall MOAngelControllerWrapper.clientBundleIdentifier()()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  Swift::String_optional result;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager), "getClientBundleIdentifierFor:", v0);
  if (v1)
  {
    v2 = v1;
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
    v5 = v4;

  }
  else
  {
    v3 = 0;
    v5 = 0;
  }
  v6 = v3;
  v7 = v5;
  result.value._object = v7;
  result.value._countAndFlagsBits = v6;
  return result;
}

id MOAngelControllerWrapper.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOAngelControllerWrapper(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t protocol witness for ObservableObject.objectWillChange.getter in conformance MOAngelControllerWrapper@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for MOAngelControllerWrapper(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

id MOAngelControllerWrapper.isClientVisible.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager), "isClientVisibleFor:", v0);
}

Swift::Void __swiftcall MOAngelControllerWrapper.shouldRefreshEvents()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[3];
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[5];

  if (objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager), "isClientVisibleFor:", v0))
  {
    (*(void (**)(_QWORD *__return_ptr))((swift_isaMask & *v0) + 0xD8))(v6);
    if (v6[3])
    {
      outlined init with copy of MOProtectedAppsManagerDelegate((uint64_t)v6, (uint64_t)v3);
      outlined destroy of Any?((uint64_t)v6, &demangling cache variable for type metadata for MOAngelControllerWrapperDelegate?);
      v1 = v4;
      v2 = v5;
      __swift_project_boxed_opaque_existential_1(v3, v4);
      (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
      __swift_destroy_boxed_opaque_existential_1(v3);
    }
    else
    {
      outlined destroy of Any?((uint64_t)v6, &demangling cache variable for type metadata for MOAngelControllerWrapperDelegate?);
    }
    wrapperDebugLog(_:)(0xD000000000000027, 0x80000001001AC590);
  }
  else
  {
    wrapperDebugLog(_:)(0xD00000000000003BLL, 0x80000001001AC550);
  }
}

uint64_t MOAngelControllerWrapper.willReturnAssets(for:withTypes:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch(MOAngelControllerWrapper.willReturnAssets(for:withTypes:), 0, 0);
}

{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch(MOAngelControllerWrapper.willReturnAssets(for:withTypes:), 0, 0);
}

uint64_t MOAngelControllerWrapper.willReturnAssets(for:withTypes:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 40) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  v2 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 48) = v2;
  *(_QWORD *)(v2 + 16) = partial apply for closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:);
  *(_QWORD *)(v2 + 24) = v1;
  v3 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 56) = v3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAssetsBundle?);
  *v3 = v0;
  v3[1] = MOAngelControllerWrapper.willReturnAssets(for:withTypes:);
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD00000000000001CLL, 0x80000001001AC5C0, partial apply for specialized closure #1 in MOAngelControllerWrapper.continuationWrapper<A>(action:), v2, v4);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 40) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  v2 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 48) = v2;
  *(_QWORD *)(v2 + 16) = partial apply for closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:);
  *(_QWORD *)(v2 + 24) = v1;
  v3 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 56) = v3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [MOSuggestionAsset]?);
  *v3 = v0;
  v3[1] = MOAngelControllerWrapper.willReturnAssets(for:withTypes:);
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD00000000000001CLL, 0x80000001001AC5C0, partial apply for thunk for @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> (), v2, v4);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  v3 = *(_QWORD *)(*v0 + 40);
  v6 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 56));
  swift_task_dealloc(v2);
  v4 = *(_QWORD *)(v1 + 16);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(uint64_t))(v6 + 8))(v4);
}

void closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)(uint64_t a1, void *a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(unint64_t, _QWORD, id, uint64_t, uint64_t (*)(uint64_t), uint64_t);
  id v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CheckedContinuation<MOSuggestionAssetsBundle?, Never>);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(a2, "baseBundle");
  v11 = (unint64_t)MOEventBundle.orderedAssetReferencesForPreview(max:)(13);

  if (v11)
  {
    if (one-time initialization token for shared != -1)
      swift_once(&one-time initialization token for shared, one-time initialization function for shared);
    v12 = static MOSuggestionAssetCacheManager.shared;
    v13 = (*(uint64_t (**)(void))((swift_isaMask & *a3) + 0x1B0))() & 1;
    v14 = swift_allocObject(&unk_1001EA3A0, 24, 7);
    swift_unknownObjectWeakInit(v14 + 16);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
    v15 = *(unsigned __int8 *)(v7 + 80);
    v16 = (v15 + 16) & ~v15;
    v17 = (v8 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
    v18 = swift_allocObject(&unk_1001EA440, v17 + 8, v15 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v18 + v16, v9, v6);
    *(_QWORD *)(v18 + v17) = v14;
    v19 = one-time initialization token for defaultQueue;
    swift_retain(v14);
    if (v19 != -1)
      swift_once(&one-time initialization token for defaultQueue, one-time initialization function for defaultQueue);
    v20 = *(void (**)(unint64_t, _QWORD, id, uint64_t, uint64_t (*)(uint64_t), uint64_t))(*(_QWORD *)v12 + 232);
    v21 = (id)static MOSuggestionAssetCacheManager.defaultQueue;
    v20(v11, 0, v21, v13, partial apply for closure #1 in closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:), v18);
    swift_release(v14);
    swift_release(v18);

    swift_bridgeObjectRelease(v11);
  }
  else
  {
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
      swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    v22 = type metadata accessor for Logger(0);
    v23 = __swift_project_value_buffer(v22, (uint64_t)static MOAngelLogger.assets);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "(Legacy Support) No assets to pack as expected", v26, 2u);
      swift_slowDealloc(v26, -1, -1);
    }

    v28 = 0;
    CheckedContinuation.resume(returning:)(&v28, v6);
  }
}

uint64_t closure #1 in closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  unint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t Strong;
  void *v26;
  uint64_t v27;
  char v28;
  char v29;
  id v30;
  _QWORD *v31;
  uint64_t (*v32)();
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v43;
  uint64_t v44;
  _BOOL8 v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  id v55;
  _BYTE *v56;
  uint64_t v57;
  int64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t *v62;
  char **v63;
  Class isa;
  unint64_t v65;
  unint64_t v66;
  int64_t v67;
  unint64_t v68;
  int64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  id v73;
  NSObject *v74;
  os_log_type_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t result;
  uint64_t v85;
  uint64_t v86;
  _BYTE *v87;
  uint64_t v88;
  unint64_t v89;
  char *v90;
  unint64_t v91;
  int64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  char v96[24];
  _QWORD *v97;

  if (!a1)
  {
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
      goto LABEL_85;
    goto LABEL_8;
  }
  v4 = a1;
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    goto LABEL_45;
  while (1)
  {
    v5 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v5, (uint64_t)static MOAngelLogger.assets);
    v6 = swift_bridgeObjectRetain_n(v4, 2);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.default.getter();
    v9 = (unint64_t)v4 >> 62;
    if (os_log_type_enabled(v7, v8))
    {
      v10 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v10 = 134217984;
      if (v9)
      {
        if (v4 >= 0)
          v85 = v4 & 0xFFFFFFFFFFFFFF8;
        else
          v85 = v4;
        swift_bridgeObjectRetain(v4);
        v11 = _CocoaArrayWrapper.endIndex.getter(v85);
        swift_bridgeObjectRelease(v4);
      }
      else
      {
        v11 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease(v4);
      v94 = (_QWORD *)v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v94, &v95, v10 + 4);
      swift_bridgeObjectRelease(v4);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "(Legacy Support) Assets to send n=%ld", v10, 0xCu);
      swift_slowDealloc(v10, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v4, 2);
    }
    v97 = &_swiftEmptyDictionarySingleton;
    v93 = objc_msgSend(objc_allocWithZone((Class)MOSuggestionAssetsBundle), "init");
    if (!v9)
    {
      v18 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v4);
      if (!v18)
        break;
      goto LABEL_14;
    }
    v57 = v4 >= 0 ? v4 & 0xFFFFFFFFFFFFFF8 : v4;
    swift_bridgeObjectRetain(v4);
    v18 = _CocoaArrayWrapper.endIndex.getter(v57);
    if (!v18)
      break;
LABEL_14:
    if (v18 < 1)
      goto LABEL_84;
    v89 = v4 & 0xC000000000000001;
    v91 = a3 + 16;
    swift_beginAccess(a3 + 16, v96, 0, 0);
    v19 = 0;
    v88 = v4;
    while (1)
    {
      if (v89)
        v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v19, v4);
      else
        v21 = *(id *)(v4 + 8 * v19 + 32);
      v22 = v21;
      v23 = objc_msgSend(v21, "assetType");
      v24 = (id)specialized static MOSuggestionAssetReference.consolidatedGroupType(_:)((uint64_t)v23);

      Strong = swift_unknownObjectWeakLoadStrong(v91);
      if (Strong)
      {
        v26 = (void *)Strong;
        MOAngelControllerWrapper.grantAccessToAssets(_:)(v4);

      }
      v27 = (uint64_t)v97;
      if (v97[2])
      {
        swift_bridgeObjectRetain(v97);
        specialized __RawDictionaryStorage.find<A>(_:)(v24);
        v29 = v28;
        swift_bridgeObjectRelease(v27);
        if ((v29 & 1) != 0)
        {
          v30 = v24;
          v32 = specialized Dictionary.subscript.modify(&v94, v30);
          if (*v31)
          {
            v33 = v31;
            v22 = v22;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v22);
            v35 = *(_QWORD *)((*v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v34 = *(_QWORD *)((*v33 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v35 >= v34 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1);
            v36 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v22);
            specialized Array._endMutation()(v36);
          }
          ((void (*)(_QWORD **, _QWORD))v32)(&v94, 0);

          goto LABEL_18;
        }
      }
      v4 = v18;
      v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      v38 = swift_allocObject(v37, 40, 7);
      *(_OWORD *)(v38 + 16) = xmmword_10019EDA0;
      *(_QWORD *)(v38 + 32) = v22;
      v94 = (_QWORD *)v38;
      specialized Array._endMutation()(v38);
      v39 = (uint64_t)v94;
      v40 = v24;
      v41 = v22;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v27);
      v94 = (_QWORD *)v27;
      v97 = (_QWORD *)0x8000000000000000;
      a3 = specialized __RawDictionaryStorage.find<A>(_:)(v40);
      v44 = *(_QWORD *)(v27 + 16);
      v45 = (v43 & 1) == 0;
      v46 = v44 + v45;
      if (__OFADD__(v44, v45))
        break;
      v47 = v43;
      if (*(_QWORD *)(v27 + 24) >= v46)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v50 = v94;
          if ((v43 & 1) == 0)
            goto LABEL_38;
        }
        else
        {
          specialized _NativeDictionary.copy()();
          v50 = v94;
          if ((v47 & 1) == 0)
            goto LABEL_38;
        }
      }
      else
      {
        specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v46, isUniquelyReferenced_nonNull_native);
        v48 = specialized __RawDictionaryStorage.find<A>(_:)(v40);
        if ((v47 & 1) != (v49 & 1))
        {
          type metadata accessor for MOSuggestionAssetsType(0);
          result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v86);
          __break(1u);
          return result;
        }
        a3 = v48;
        v50 = v94;
        if ((v47 & 1) == 0)
        {
LABEL_38:
          v50[(a3 >> 6) + 8] |= 1 << a3;
          v51 = 8 * a3;
          *(_QWORD *)(v50[6] + v51) = v40;
          *(_QWORD *)(v50[7] + v51) = v39;
          v52 = v50[2];
          v53 = __OFADD__(v52, 1);
          v54 = v52 + 1;
          if (v53)
            goto LABEL_44;
          v50[2] = v54;
          v55 = v40;
          goto LABEL_17;
        }
      }
      v20 = v50[7];
      swift_bridgeObjectRelease(*(_QWORD *)(v20 + 8 * a3));
      *(_QWORD *)(v20 + 8 * a3) = v39;
LABEL_17:
      v97 = v50;

      swift_bridgeObjectRelease(0x8000000000000000);
      v18 = v4;
      v4 = v88;
LABEL_18:
      if (v18 == ++v19)
      {
        swift_bridgeObjectRelease(v4);
        v56 = v97;
        goto LABEL_51;
      }
    }
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  }
  swift_bridgeObjectRelease(v4);
  v56 = &_swiftEmptyDictionarySingleton;
LABEL_51:
  v58 = 0;
  v90 = v56 + 64;
  v59 = 1 << v56[32];
  v60 = -1;
  if (v59 < 64)
    v60 = ~(-1 << v59);
  v61 = v60 & *((_QWORD *)v56 + 8);
  v92 = (unint64_t)(v59 + 63) >> 6;
  v87 = v56;
  v62 = &demangling cache variable for type metadata for MOSuggestionAsset;
  v63 = &selRef_setContentOffset_animated_;
  while (2)
  {
    if (v61)
    {
      v65 = __clz(__rbit64(v61));
      v61 &= v61 - 1;
      v66 = v65 | (v58 << 6);
LABEL_72:
      v70 = 8 * v66;
      v71 = *(_QWORD *)(*((_QWORD *)v56 + 7) + v70);
      v72 = *(id *)(*((_QWORD *)v56 + 6) + v70);
      swift_bridgeObjectRetain_n(v71, 3);
      v73 = v72;
      v74 = Logger.logObject.getter(v73);
      v75 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v74, v75))
      {
        v76 = v62;
        v77 = swift_slowAlloc(22, -1);
        v78 = swift_slowAlloc(32, -1);
        v94 = (_QWORD *)v78;
        *(_DWORD *)v77 = 136315394;
        v79 = static String._unconditionallyBridgeFromObjectiveC(_:)(v73);
        v81 = v80;
        *(_QWORD *)(v77 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v79, v80, (uint64_t *)&v94);

        swift_bridgeObjectRelease(v81);
        *(_WORD *)(v77 + 12) = 2048;
        if ((unint64_t)v71 >> 62)
        {
          if (v71 < 0)
            v83 = v71;
          else
            v83 = v71 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v71);
          v82 = _CocoaArrayWrapper.endIndex.getter(v83);
          swift_bridgeObjectRelease(v71);
        }
        else
        {
          v82 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease(v71);
        *(_QWORD *)(v77 + 14) = v82;
        swift_bridgeObjectRelease(v71);
        _os_log_impl((void *)&_mh_execute_header, v74, v75, "(Legacy Support) Packing AssetBundle for type %s with count n=%ld", (uint8_t *)v77, 0x16u);
        swift_arrayDestroy(v78, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v78, -1, -1);
        swift_slowDealloc(v77, -1, -1);

        v62 = v76;
        v56 = v87;
        v63 = &selRef_setContentOffset_animated_;
      }
      else
      {

        swift_bridgeObjectRelease_n(v71, 2);
      }
      __swift_instantiateConcreteTypeFromMangledName(v62);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v93, v63[122], isa, v73, swift_bridgeObjectRelease(v71).n128_f64[0]);

      continue;
    }
    break;
  }
  v67 = v58 + 1;
  if (__OFADD__(v58, 1))
  {
    __break(1u);
    goto LABEL_83;
  }
  if (v67 >= v92)
    goto LABEL_80;
  v68 = *(_QWORD *)&v90[8 * v67];
  ++v58;
  if (v68)
    goto LABEL_71;
  v58 = v67 + 1;
  if (v67 + 1 >= v92)
    goto LABEL_80;
  v68 = *(_QWORD *)&v90[8 * v58];
  if (v68)
    goto LABEL_71;
  v58 = v67 + 2;
  if (v67 + 2 >= v92)
    goto LABEL_80;
  v68 = *(_QWORD *)&v90[8 * v58];
  if (v68)
  {
LABEL_71:
    v61 = (v68 - 1) & v68;
    v66 = __clz(__rbit64(v68)) + (v58 << 6);
    goto LABEL_72;
  }
  v69 = v67 + 3;
  if (v69 >= v92)
  {
LABEL_80:
    swift_release(v56);
    v94 = v93;
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CheckedContinuation<MOSuggestionAssetsBundle?, Never>);
    return CheckedContinuation.resume(returning:)(&v94, v17);
  }
  v68 = *(_QWORD *)&v90[8 * v69];
  if (v68)
  {
    v58 = v69;
    goto LABEL_71;
  }
  while (1)
  {
    v58 = v69 + 1;
    if (__OFADD__(v69, 1))
      break;
    if (v58 >= v92)
      goto LABEL_80;
    v68 = *(_QWORD *)&v90[8 * v58];
    ++v69;
    if (v68)
      goto LABEL_71;
  }
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
LABEL_8:
  v12 = type metadata accessor for Logger(0);
  v13 = __swift_project_value_buffer(v12, (uint64_t)static MOAngelLogger.assets);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "(Legacy Support) No assets to pack", v16, 2u);
    swift_slowDealloc(v16, -1, -1);
  }

  v94 = 0;
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CheckedContinuation<MOSuggestionAssetsBundle?, Never>);
  return CheckedContinuation.resume(returning:)(&v94, v17);
}

void MOAngelControllerWrapper.grantAccessToAssets(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char **v35;
  unint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  int v40;
  void (*v41)(char *, uint64_t, uint64_t, uint64_t);
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  id v48;
  uint64_t v49;
  void *v50;
  id v51;
  void *v52;
  char *v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  char *v56;
  char *v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  id v61;
  uint64_t v62;
  void *v63;
  id v64;
  void *v65;
  char *v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  char *v69;
  char *v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  id v75;
  uint64_t v76;
  void *v77;
  void *v78;
  id v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  void (*v86)(unint64_t, char *, uint64_t);
  unint64_t v87;
  id v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  __n128 v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  void (*v97)(char *, char *, uint64_t, __n128);
  char *v98;
  void (*v99)(char *, uint64_t, uint64_t, uint64_t);
  id v100;
  NSURL *v101;
  void *v102;
  void *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  unint64_t v121;
  char *v122;
  _QWORD *v123;
  id v124[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v104 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v3);
  v8 = (char *)&v104 - v7;
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v104 - v10;
  __chkstk_darwin(v9);
  v13 = (char *)&v104 - v12;
  v14 = type metadata accessor for URL(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v116 = (char *)&v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v115 = (char *)&v104 - v19;
  v20 = __chkstk_darwin(v18);
  v106 = (char *)&v104 - v21;
  v22 = __chkstk_darwin(v20);
  v105 = (char *)&v104 - v23;
  v24 = __chkstk_darwin(v22);
  v109 = (char *)&v104 - v25;
  v26 = __chkstk_darwin(v24);
  v122 = (char *)&v104 - v27;
  v28 = __chkstk_darwin(v26);
  v108 = (char *)&v104 - v29;
  v30 = __chkstk_darwin(v28);
  v114 = (char *)&v104 - v31;
  __chkstk_darwin(v30);
  v113 = (char *)&v104 - v32;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v94 = a1;
    else
      v94 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v33 = _CocoaArrayWrapper.endIndex.getter(v94);
    if (v33)
      goto LABEL_3;
LABEL_59:
    v92 = swift_bridgeObjectRelease(a1);
    v93 = _swiftEmptyArrayStorage;
LABEL_60:
    v95 = v93[2];
    v123 = v93;
    if (v95)
    {
      v96 = (char *)v93 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
      v121 = *(_QWORD *)(v15 + 72);
      v97 = *(void (**)(char *, char *, uint64_t, __n128))(v15 + 16);
      v98 = v122;
      while (1)
      {
        v97(v5, v96, v14, v92);
        v99 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
        v99(v5, 0, 1, v14);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v5, 1, v14) == 1)
          break;
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v98, v5, v14);
        v100 = objc_msgSend((id)objc_opt_self(MOSuggestionsUIServerManager), "sharedInstance");
        URL._bridgeToObjectiveC()(v101);
        v103 = v102;
        objc_msgSend(v100, "grantSandboxAccessFor:sender:", v102, v112);

        (*(void (**)(char *, uint64_t))(v15 + 8))(v98, v14);
        v96 += v121;
        if (!--v95)
          goto LABEL_66;
      }
    }
    else
    {
      v99 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
LABEL_66:
      v99(v5, 1, 1, v14);
    }
    swift_bridgeObjectRelease(v123);
    return;
  }
  v33 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v33)
    goto LABEL_59;
LABEL_3:
  if (v33 >= 1)
  {
    v110 = v8;
    v111 = v11;
    v34 = 0;
    v121 = a1 & 0xC000000000000001;
    v123 = _swiftEmptyArrayStorage;
    v35 = &selRef_genericAvatarFor_pointSize_completion_;
    v119 = v13;
    v120 = (char *)&type metadata for Swift.AnyObject + 8;
    v107 = v5;
    v117 = a1;
    v118 = v33;
    while (1)
    {
      if (v121)
        v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v34, a1);
      else
        v38 = *(id *)(a1 + 8 * v34 + 32);
      v39 = v38;
      v124[0] = objc_msgSend(v38, v35[127]);
      v40 = swift_dynamicCast(v13, v124, v120, v14, 6);
      v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
      if (v40)
      {
        v41(v13, 0, 1, v14);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
        {
          v42 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
          v43 = v113;
          v42(v113, v13, v14);
          (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v114, v43, v14);
          if ((swift_isUniquelyReferenced_nonNull_native(v123) & 1) != 0)
            v44 = (unint64_t)v123;
          else
            v44 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v123[2] + 1, 1, (unint64_t)v123);
          v37 = v118;
          v46 = *(_QWORD *)(v44 + 16);
          v45 = *(_QWORD *)(v44 + 24);
          if (v46 >= v45 >> 1)
            v44 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v45 > 1, v46 + 1, 1, v44);
          *(_QWORD *)(v44 + 16) = v46 + 1;
          v47 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
          v123 = (_QWORD *)v44;
          v42((char *)(v44 + v47 + *(_QWORD *)(v15 + 72) * v46), v114, v14);

          (*(void (**)(char *, uint64_t))(v15 + 8))(v113, v14);
          v13 = v119;
          goto LABEL_7;
        }
      }
      else
      {
        v41(v13, 1, 1, v14);
      }
      outlined destroy of Any?((uint64_t)v13, &demangling cache variable for type metadata for URL?);
      v48 = objc_msgSend(v39, v35[127]);
      v49 = objc_opt_self(MOSuggestionAssetWorkout);
      v50 = (void *)swift_dynamicCastObjCClass(v48, v49);
      if (v50)
      {
        v51 = objc_msgSend(v50, "iconURL");
        if (v51)
        {
          v52 = v51;
          v53 = v122;
          static URL._unconditionallyBridgeFromObjectiveC(_:)(v51);

          v54 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
          v55 = (uint64_t)v111;
          v56 = v53;
          a1 = v117;
          v54(v111, v56, v14);
          v41((char *)v55, 0, 1, v14);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v55, 1, v14) != 1)
          {
            v57 = v108;
            v54(v108, (char *)v55, v14);
            (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v109, v57, v14);
            if ((swift_isUniquelyReferenced_nonNull_native(v123) & 1) != 0)
              v58 = (unint64_t)v123;
            else
              v58 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v123[2] + 1, 1, (unint64_t)v123);
            v60 = *(_QWORD *)(v58 + 16);
            v59 = *(_QWORD *)(v58 + 24);
            if (v60 >= v59 >> 1)
              v58 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v59 > 1, v60 + 1, 1, v58);
            *(_QWORD *)(v58 + 16) = v60 + 1;
            v36 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
            v123 = (_QWORD *)v58;
            v54((char *)(v58 + v36 + *(_QWORD *)(v15 + 72) * v60), v109, v14);
            swift_unknownObjectRelease(v48);

            (*(void (**)(char *, uint64_t))(v15 + 8))(v108, v14);
            goto LABEL_6;
          }
        }
        else
        {
          v55 = (uint64_t)v111;
          v41(v111, 1, 1, v14);
        }
        swift_unknownObjectRelease(v48);
        outlined destroy of Any?(v55, &demangling cache variable for type metadata for URL?);
        v35 = &selRef_genericAvatarFor_pointSize_completion_;
      }
      else
      {
        swift_unknownObjectRelease(v48);
      }
      v61 = objc_msgSend(v39, v35[127]);
      v62 = objc_opt_self(MOSuggestionAssetMediaItem);
      v63 = (void *)swift_dynamicCastObjCClass(v61, v62);
      if (!v63)
      {
        swift_unknownObjectRelease(v61);
        goto LABEL_41;
      }
      v64 = objc_msgSend(v63, "imageURL");
      if (!v64)
      {
        v68 = (uint64_t)v110;
        v41(v110, 1, 1, v14);
LABEL_40:
        swift_unknownObjectRelease(v61);
        outlined destroy of Any?(v68, &demangling cache variable for type metadata for URL?);
        v35 = &selRef_genericAvatarFor_pointSize_completion_;
LABEL_41:
        v75 = objc_msgSend(v39, v35[127]);
        v76 = objc_opt_self(MOSuggestionAssetImageURLPair);
        v77 = (void *)swift_dynamicCastObjCClass(v75, v76);
        if (!v77)
        {

          swift_unknownObjectRelease(v75);
          v37 = v118;
          v13 = v119;
          goto LABEL_8;
        }
        v78 = v77;
        v79 = objc_msgSend(v77, "lightURL");
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v79);

        if ((swift_isUniquelyReferenced_nonNull_native(v123) & 1) != 0)
          v80 = (unint64_t)v123;
        else
          v80 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v123[2] + 1, 1, (unint64_t)v123);
        v82 = *(_QWORD *)(v80 + 16);
        v81 = *(_QWORD *)(v80 + 24);
        if (v82 >= v81 >> 1)
          v80 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v81 > 1, v82 + 1, 1, v80);
        *(_QWORD *)(v80 + 16) = v82 + 1;
        v83 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
        v84 = *(_QWORD *)(v15 + 72);
        v85 = v80 + v83 + v84 * v82;
        v86 = *(void (**)(unint64_t, char *, uint64_t))(v15 + 32);
        v87 = v80;
        v86(v85, v115, v14);
        v88 = objc_msgSend(v78, "darkURL");
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v88);

        v89 = v87;
        v90 = *(_QWORD *)(v87 + 16);
        v91 = *(_QWORD *)(v89 + 24);
        if (v90 >= v91 >> 1)
          v89 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v91 > 1, v90 + 1, 1, v89);
        *(_QWORD *)(v89 + 16) = v90 + 1;
        v123 = (_QWORD *)v89;
        v86(v89 + v83 + v90 * v84, v116, v14);

        swift_unknownObjectRelease(v75);
        v5 = v107;
        a1 = v117;
        goto LABEL_6;
      }
      v65 = v64;
      v66 = v122;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v64);

      v67 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
      v68 = (uint64_t)v110;
      v69 = v66;
      a1 = v117;
      v67(v110, v69, v14);
      v41((char *)v68, 0, 1, v14);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v68, 1, v14) == 1)
        goto LABEL_40;
      v70 = v105;
      v67(v105, (char *)v68, v14);
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v106, v70, v14);
      if ((swift_isUniquelyReferenced_nonNull_native(v123) & 1) != 0)
        v71 = (unint64_t)v123;
      else
        v71 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v123[2] + 1, 1, (unint64_t)v123);
      v73 = *(_QWORD *)(v71 + 16);
      v72 = *(_QWORD *)(v71 + 24);
      if (v73 >= v72 >> 1)
        v71 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v72 > 1, v73 + 1, 1, v71);
      *(_QWORD *)(v71 + 16) = v73 + 1;
      v74 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      v123 = (_QWORD *)v71;
      v67((char *)(v71 + v74 + *(_QWORD *)(v15 + 72) * v73), v106, v14);
      swift_unknownObjectRelease(v61);

      (*(void (**)(char *, uint64_t))(v15 + 8))(v105, v14);
LABEL_6:
      v37 = v118;
      v13 = v119;
LABEL_7:
      v35 = &selRef_genericAvatarFor_pointSize_completion_;
LABEL_8:
      if (v37 == ++v34)
      {
        v92 = swift_bridgeObjectRelease(a1);
        v93 = v123;
        goto LABEL_60;
      }
    }
  }
  __break(1u);
}

uint64_t @objc closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)(void *a1, uint64_t a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;

  v4[3] = a1;
  v4[4] = a4;
  v4[5] = _Block_copy(aBlock);
  v8 = 0;
  if (a2)
  {
    type metadata accessor for MOSuggestionAssetsType(0);
    v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v9);
  }
  v4[6] = v8;
  v10 = a1;
  v11 = a4;
  return swift_task_switch(@objc closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:), 0, 0);
}

{
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;

  v4[3] = a1;
  v4[4] = a4;
  v4[5] = _Block_copy(aBlock);
  v8 = 0;
  if (a2)
  {
    type metadata accessor for MOSuggestionAssetsType(0);
    v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v9);
  }
  v4[6] = v8;
  v10 = a1;
  v11 = a4;
  return swift_task_switch(@objc closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:), 0, 0);
}

uint64_t @objc closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 56) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  v2 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 64) = v2;
  *(_QWORD *)(v2 + 16) = closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)partial apply;
  *(_QWORD *)(v2 + 24) = v1;
  v3 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 72) = v3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAssetsBundle?);
  *v3 = v0;
  v3[1] = @objc closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:);
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD00000000000001CLL, 0x80000001001AC5C0, partial apply for specialized closure #1 in MOAngelControllerWrapper.continuationWrapper<A>(action:), v2, v4);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 64);
  v3 = *(_QWORD *)(*v0 + 56);
  swift_task_dealloc(*(_QWORD *)(*v0 + 72));
  swift_task_dealloc(v2);
  *(_QWORD *)(v1 + 80) = *(_QWORD *)(v1 + 16);
  swift_task_dealloc(v3);
  return swift_task_switch(@objc closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:), 0, 0);
}

{
  uint64_t v0;
  void *v1;
  void (**v2)(_QWORD, _QWORD);
  void *v3;
  void *v4;

  v1 = *(void **)(v0 + 80);
  v2 = *(void (***)(_QWORD, _QWORD))(v0 + 40);
  v4 = *(void **)(v0 + 24);
  v3 = *(void **)(v0 + 32);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));

  ((void (**)(_QWORD, void *))v2)[2](v2, v1);
  _Block_release(v2);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 56) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  v2 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 64) = v2;
  *(_QWORD *)(v2 + 16) = closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)partial apply;
  *(_QWORD *)(v2 + 24) = v1;
  v3 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 72) = v3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [MOSuggestionAsset]?);
  *v3 = v0;
  v3[1] = @objc closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:);
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD00000000000001CLL, 0x80000001001AC5C0, partial apply for specialized closure #1 in MOAngelControllerWrapper.continuationWrapper<A>(action:), v2, v4);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 64);
  v3 = *(_QWORD *)(*v0 + 56);
  swift_task_dealloc(*(_QWORD *)(*v0 + 72));
  swift_task_dealloc(v2);
  *(_QWORD *)(v1 + 80) = *(_QWORD *)(v1 + 16);
  swift_task_dealloc(v3);
  return swift_task_switch(@objc closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:), 0, 0);
}

{
  uint64_t v0;
  Class isa;
  void *v2;
  void *v3;
  __n128 v4;
  uint64_t v5;
  void (**v6)(_QWORD, _QWORD, __n128);

  isa = *(Class *)(v0 + 80);
  v3 = *(void **)(v0 + 24);
  v2 = *(void **)(v0 + 32);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));

  if (isa)
  {
    v5 = *(_QWORD *)(v0 + 80);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v4 = swift_bridgeObjectRelease(v5);
  }
  v6 = *(void (***)(_QWORD, _QWORD, __n128))(v0 + 40);
  ((void (**)(_QWORD, Class, __n128))v6)[2](v6, isa, v4);

  _Block_release(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)(_QWORD *a1, void *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  _QWORD *v29;
  os_log_type_t v30;
  _BOOL4 v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  __n128 v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  __n128 v48;
  void (*v49)(char *, uint64_t, __n128);
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  void (*v57)(uint64_t, char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, char *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  void (*v81)(_QWORD *, _QWORD, id, _QWORD, uint64_t (*)(uint64_t), uint64_t);
  id v82;
  _QWORD *v83;
  uint64_t v84;
  unsigned int v85;
  uint64_t v86;
  uint64_t (*v87)(char *, char *, uint64_t);
  void (*v88)(char *, uint64_t, __n128);
  uint64_t v89;
  id v90;
  uint64_t v91;
  _QWORD *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  _QWORD *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106[2];

  v92 = a3;
  v103 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[MOSuggestionAsset]?, Never>);
  v95 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v94 = v5;
  v99 = (char *)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Date(0);
  v100 = *(_QWORD *)(v6 - 8);
  v101 = v6;
  v7 = __chkstk_darwin(v6);
  v93 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = v8;
  __chkstk_darwin(v7);
  v104 = (char *)&v84 - v9;
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD **)(v10 - 8);
  v12 = v11[8];
  v13 = __chkstk_darwin(v10);
  v98 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v84 - v15;
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v84 - v18;
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v84 - v21;
  UUID.init()(v20);
  v90 = a2;
  v23 = objc_msgSend(a2, "baseBundle");
  v24 = (unint64_t)MOEventBundle.orderedAssetReferencesForPreview(max:)(13);

  v102 = v22;
  v97 = a1;
  if (v24)
  {
    __chkstk_darwin(v25);
    *(&v84 - 2) = (uint64_t)v22;
    v96 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay16MomentsUIService26MOSuggestionAssetReferenceCG_AHs5NeverOTg5((void (*)(uint64_t *__return_ptr, uint64_t *))partial apply for closure #1 in Array<A>.withTransferID(uuid:), (uint64_t)(&v84 - 4), v24);
    swift_bridgeObjectRelease(v24);
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
      swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    v26 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v26, (uint64_t)static MOAngelLogger.assets);
    v87 = (uint64_t (*)(char *, char *, uint64_t))v11[2];
    v27 = v87(v16, v22, v10);
    v28 = Logger.logObject.getter(v27);
    v29 = v11;
    v30 = static os_log_type_t.default.getter();
    v31 = os_log_type_enabled(v28, v30);
    v89 = v10;
    if (v31)
    {
      v32 = (uint8_t *)swift_slowAlloc(12, -1);
      v33 = swift_slowAlloc(32, -1);
      v106[0] = v33;
      *(_DWORD *)v32 = 136315138;
      v34 = UUID.uuidString.getter(v33);
      v36 = v35;
      v105 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v35, v106);
      v10 = v89;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v105, v106, v32 + 4);
      v37 = swift_bridgeObjectRelease(v36);
      v88 = (void (*)(char *, uint64_t, __n128))v29[1];
      v88(v16, v10, v37);
      _os_log_impl((void *)&_mh_execute_header, v28, v30, "[MOAngelControllerWrapper.willReturnAssets] Starting sheet processing for transferID=%s", v32, 0xCu);
      swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v33, -1, -1);
      v38 = v32;
      v22 = v102;
      swift_slowDealloc(v38, -1, -1);
    }
    else
    {
      v88 = (void (*)(char *, uint64_t, __n128))v29[1];
      ((void (*)(char *, uint64_t))v88)(v16, v10);
    }

    v50 = v29;
    Date.init()(v51);
    v52 = type metadata accessor for MOSuggestionAssetAnalytics.AssetTransferEvent(0);
    v86 = swift_allocBox(v52);
    v54 = v53;
    v55 = objc_msgSend(v90, "baseBundle");
    v56 = (uint64_t)v98;
    v57 = (void (*)(uint64_t, char *, uint64_t))v87;
    v87(v98, v22, v10);
    v58 = (uint64_t)v96;
    swift_bridgeObjectRetain(v96);
    v59 = v54;
    v60 = v56;
    MOSuggestionAssetAnalytics.AssetTransferEvent.init(bundle:references:transferID:)(v55, v58, v56, v59);
    v61 = v100;
    v62 = v101;
    if (one-time initialization token for shared != -1)
      swift_once(&one-time initialization token for shared, one-time initialization function for shared);
    v90 = (id)static MOSuggestionAssetCacheManager.shared;
    LOBYTE(v85) = (*(uint64_t (**)(void))((swift_isaMask & *v92) + 0x1B0))() & 1;
    v85 = v85;
    v84 = swift_allocObject(&unk_1001EA3A0, 24, 7);
    swift_unknownObjectWeakInit(v84 + 16);
    v63 = v93;
    (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v93, v104, v62);
    v57(v60, v22, v10);
    v64 = v95;
    (*(void (**)(char *, _QWORD *, uint64_t))(v95 + 16))(v99, v97, v103);
    v65 = *(unsigned __int8 *)(v61 + 80);
    v66 = (v65 + 16) & ~v65;
    v67 = (v91 + v66 + 7) & 0xFFFFFFFFFFFFFFF8;
    v68 = *((unsigned __int8 *)v50 + 80);
    v69 = (v68 + v67 + 8) & ~v68;
    v97 = v50;
    v70 = (v12 + v69 + 7) & 0xFFFFFFFFFFFFFFF8;
    v71 = *(unsigned __int8 *)(v64 + 80);
    v72 = (v71 + v70 + 8) & ~v71;
    v73 = swift_allocObject(&unk_1001EA3C8, v72 + v94, v65 | v68 | v71 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v61 + 32))(v73 + v66, v63, v62);
    v74 = v86;
    *(_QWORD *)(v73 + v67) = v86;
    v75 = v73 + v69;
    v76 = v89;
    ((void (*)(uint64_t, char *, uint64_t))v97[4])(v75, v98, v89);
    v77 = v84;
    *(_QWORD *)(v73 + v70) = v84;
    v78 = *(void (**)(uint64_t, char *, uint64_t))(v64 + 32);
    v79 = v77;
    v78(v73 + v72, v99, v103);
    v80 = one-time initialization token for defaultQueue;
    swift_retain(v74);
    swift_retain(v79);
    if (v80 != -1)
      swift_once(&one-time initialization token for defaultQueue, one-time initialization function for defaultQueue);
    v81 = *(void (**)(_QWORD *, _QWORD, id, _QWORD, uint64_t (*)(uint64_t), uint64_t))(*(_QWORD *)v90 + 232);
    v82 = (id)static MOSuggestionAssetCacheManager.defaultQueue;
    v83 = v96;
    v81(v96, 0, v82, v85, partial apply for closure #1 in closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:), v73);
    swift_bridgeObjectRelease(v83);
    swift_release(v73);

    (*(void (**)(char *, uint64_t))(v100 + 8))(v104, v101);
    ((void (*)(char *, uint64_t))v88)(v102, v76);
    swift_release(v74);
    swift_release(v79);
  }
  else
  {
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
      swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    v39 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v39, (uint64_t)static MOAngelLogger.assets);
    v40 = ((uint64_t (*)(char *, char *, uint64_t))v11[2])(v19, v22, v10);
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc(12, -1);
      v44 = swift_slowAlloc(32, -1);
      v106[0] = v44;
      *(_DWORD *)v43 = 136315138;
      v45 = UUID.uuidString.getter(v44);
      v47 = v46;
      v105 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v45, v46, v106);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v105, v106, v43 + 4);
      v48 = swift_bridgeObjectRelease(v47);
      v49 = (void (*)(char *, uint64_t, __n128))v11[1];
      v49(v19, v10, v48);
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "[MOAngelControllerWrapper.willReturnAssets] Failed to initiate transferID=%s", v43, 0xCu);
      swift_arrayDestroy(v44, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v44, -1, -1);
      swift_slowDealloc(v43, -1, -1);
    }
    else
    {
      v49 = (void (*)(char *, uint64_t, __n128))v11[1];
      ((void (*)(char *, uint64_t))v49)(v19, v10);
    }

    v106[0] = 0;
    CheckedContinuation.resume(returning:)(v106, v103);
    ((void (*)(char *, uint64_t))v49)(v102, v10);
  }
}

uint64_t closure #1 in closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  double v22;
  NSString v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  __n128 v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t Strong;
  void *v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t aBlock[5];
  uint64_t v56;
  char v57[24];
  char v58[32];

  v53 = a6;
  v46 = a5;
  v47 = a4;
  v52 = a1;
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v48 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MOSuggestionAssetAnalytics.AssetTransferEvent(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = __chkstk_darwin(v11);
  v15 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v17 = (char *)&v46 - v16;
  v18 = type metadata accessor for Date(0);
  v50 = *(_QWORD *)(v18 - 8);
  v51 = v18;
  __chkstk_darwin(v18);
  v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = swift_projectBox(a3);
  Date.init()(v21);
  v49 = v20;
  v22 = Date.timeIntervalSince(_:)(a2);
  swift_beginAccess(v21, v58, 1, 0);
  *(double *)(v21 + *(int *)(v11 + 36)) = v22;
  swift_beginAccess(v21, v57, 0, 0);
  outlined init with copy of MOSuggestionAssetAnalytics.AssetTransferEvent(v21, (uint64_t)v17);
  v23 = String._bridgeToObjectiveC()();
  outlined init with copy of MOSuggestionAssetAnalytics.AssetTransferEvent((uint64_t)v17, (uint64_t)v15);
  v24 = *(unsigned __int8 *)(v12 + 80);
  v25 = (v24 + 16) & ~v24;
  v26 = swift_allocObject(&unk_1001EA3F0, v25 + v13, v24 | 7);
  outlined init with take of MOSuggestionAssetAnalytics.AssetTransferEvent((uint64_t)v15, v26 + v25);
  aBlock[4] = (uint64_t)partial apply for closure #1 in MOSuggestionAssetAnalytics.AssetTransferEvent.send();
  v56 = v26;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed () -> (@owned [String : NSObject]?);
  aBlock[3] = (uint64_t)&block_descriptor_79;
  v27 = _Block_copy(aBlock);
  v28 = swift_release(v56);
  AnalyticsSendEventLazy(v23, v27, v28);
  _Block_release(v27);

  outlined destroy of MOSuggestionAssetAnalytics.AssetTransferEvent((uint64_t)v17);
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v29 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v29, (uint64_t)static MOAngelLogger.assets);
  v30 = v48;
  v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v48, v47, v8);
  v32 = Logger.logObject.getter(v31);
  v33 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = swift_slowAlloc(22, -1);
    v35 = swift_slowAlloc(32, -1);
    aBlock[0] = v35;
    *(_DWORD *)v34 = 136315394;
    v36 = UUID.uuidString.getter(v35);
    v38 = v37;
    v54 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v36, v37, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, aBlock, v34 + 4);
    v39 = swift_bridgeObjectRelease(v38);
    (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v30, v8, v39);
    *(_WORD *)(v34 + 12) = 2048;
    v54 = *(_QWORD *)&v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, aBlock, v34 + 14);
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "[MOAngelControllerWrapper.willReturnAssets] Finishing sheet processing for transferID=%s, duration=%f", (uint8_t *)v34, 0x16u);
    swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v35, -1, -1);
    swift_slowDealloc(v34, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v30, v8);
  }

  v40 = v52;
  if (v52)
  {
    v41 = v46 + 16;
    swift_beginAccess(v46 + 16, aBlock, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v41);
    if (Strong)
    {
      v43 = (void *)Strong;
      MOAngelControllerWrapper.grantAccessToAssets(_:)(v40);

    }
  }
  v54 = v40;
  swift_bridgeObjectRetain(v40);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[MOSuggestionAsset]?, Never>);
  CheckedContinuation.resume(returning:)(&v54, v44);
  return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v49, v51);
}

void MOAngelControllerWrapper.didReceivePresentationRequest(with:)(void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  unsigned int v12;
  uint64_t v13;
  __n128 v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  __int128 aBlock;
  uint64_t (*v30)(uint64_t);
  void *v31;
  uint64_t (*v32)();
  uint64_t v33;
  __int128 v34[2];
  _QWORD v35[5];

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, "contentOptions");
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_contentOptions) = v11;
  (*(void (**)(__int128 *__return_ptr))((swift_isaMask & *v1) + 0xD8))(&aBlock);
  if (v31)
  {
    outlined init with take of Tip(&aBlock, (uint64_t)v35);
    v12 = objc_msgSend(a1, "presentFullScreen");
    v13 = 1;
    if (v12)
      v13 = 2;
    *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_initialPresentRequestState) = v13;
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue, OS_dispatch_queue_ptr);
    v15 = (void *)static OS_dispatch_queue.main.getter(v14);
    outlined init with copy of MOProtectedAppsManagerDelegate((uint64_t)v35, (uint64_t)v34);
    v16 = swift_allocObject(&unk_1001EA168, 64, 7);
    outlined init with take of Tip(v34, v16 + 16);
    *(_QWORD *)(v16 + 56) = a1;
    v32 = partial apply for closure #1 in MOAngelControllerWrapper.didReceivePresentationRequest(with:);
    v33 = v16;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v30 = thunk for @escaping @callee_guaranteed () -> ();
    v31 = &block_descriptor_26;
    v17 = _Block_copy(&aBlock);
    v18 = v33;
    v19 = a1;
    swift_release(v18);
    static DispatchQoS.unspecified.getter(v20);
    *(_QWORD *)&aBlock = _swiftEmptyArrayStorage;
    v21 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    v23 = lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v22, v23, v3, v21);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v17);
    _Block_release(v17);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    __swift_destroy_boxed_opaque_existential_1(v35);
  }
  else
  {
    outlined destroy of Any?((uint64_t)&aBlock, &demangling cache variable for type metadata for MOAngelControllerWrapperDelegate?);
    if (serverManager._clientConnections != (NSMutableDictionary *)-1)
      swift_once(&serverManager._clientConnections, one-time initialization function for shared);
    v24 = type metadata accessor for Logger(0);
    v25 = __swift_project_value_buffer(v24, (uint64_t)static MOAngelLogger.shared);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Attempt to present a sheet before the view was ready to respond.", v28, 2u);
      swift_slowDealloc(v28, -1, -1);
    }

  }
}

void MOAngelControllerWrapper.didReceiveUpdateRequest(with:animated:)(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  __n128 v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  __int128 aBlock;
  uint64_t (*v28)(uint64_t);
  void *v29;
  uint64_t (*v30)();
  uint64_t v31;
  __int128 v32[2];
  _QWORD v33[5];

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(__int128 *__return_ptr, uint64_t))((swift_isaMask & *v2) + 0xD8))(&aBlock, v11);
  if (v29)
  {
    outlined init with take of Tip(&aBlock, (uint64_t)v33);
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue, OS_dispatch_queue_ptr);
    v15 = (void *)static OS_dispatch_queue.main.getter(v14);
    outlined init with copy of MOProtectedAppsManagerDelegate((uint64_t)v33, (uint64_t)v32);
    v16 = swift_allocObject(&unk_1001EA1B8, 65, 7);
    outlined init with take of Tip(v32, v16 + 16);
    *(_QWORD *)(v16 + 56) = a1;
    *(_BYTE *)(v16 + 64) = a2 & 1;
    v30 = partial apply for closure #1 in MOAngelControllerWrapper.didReceiveUpdateRequest(with:animated:);
    v31 = v16;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v28 = thunk for @escaping @callee_guaranteed () -> ();
    v29 = &block_descriptor_16;
    v17 = _Block_copy(&aBlock);
    swift_release(v31);
    static DispatchQoS.unspecified.getter(v18);
    *(_QWORD *)&aBlock = _swiftEmptyArrayStorage;
    v19 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    v21 = lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v20, v21, v5, v19);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v8, v17);
    _Block_release(v17);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    __swift_destroy_boxed_opaque_existential_1(v33);
  }
  else
  {
    outlined destroy of Any?((uint64_t)&aBlock, &demangling cache variable for type metadata for MOAngelControllerWrapperDelegate?);
    if (serverManager._clientConnections != (NSMutableDictionary *)-1)
      swift_once(&serverManager._clientConnections, one-time initialization function for shared);
    v22 = type metadata accessor for Logger(0);
    v23 = __swift_project_value_buffer(v22, (uint64_t)static MOAngelLogger.shared);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Attempted to updated sheet state before the view was ready to respond.", v26, 2u);
      swift_slowDealloc(v26, -1, -1);
    }

  }
}

id @nonobjc LSApplicationRecord.init(bundleIdentifier:allowPlaceholder:)(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  NSString v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v12;

  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v12 = 0;
  v7 = objc_msgSend(v3, "initWithBundleIdentifier:allowPlaceholder:error:", v6, a3 & 1, &v12);

  v8 = v12;
  if (v7)
  {
    v9 = v12;
  }
  else
  {
    v10 = v12;
    _convertNSErrorToError(_:)(v8);

    swift_willThrow();
  }
  return v7;
}

uint64_t outlined init with copy of MOAngelControllerWrapperDelegate?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOAngelControllerWrapperDelegate?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined assign with take of MOAngelControllerWrapperDelegate?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOAngelControllerWrapperDelegate?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001063F0@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xF0))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_100106434(unsigned __int8 *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(_QWORD))((swift_isaMask & **a2) + 0xF8))(*a1);
}

uint64_t sub_100106470@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x120))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1001064B4(unsigned __int8 *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(_QWORD))((swift_isaMask & **a2) + 0x128))(*a1);
}

uint64_t type metadata accessor for MOAngelControllerWrapper(uint64_t a1)
{
  uint64_t result;

  result = type metadata singleton initialization cache for MOAngelControllerWrapper;
  if (!type metadata singleton initialization cache for MOAngelControllerWrapper)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MOAngelControllerWrapper);
  return result;
}

uint64_t _sIeghH_IeAgH_TR(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc(a3[1]);
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = _sIeghH_IeAgH_TRTQ0_;
  return v6();
}

uint64_t _sIeAgH_ytIeAgHr_TR(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc(a4[1]);
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = _sIeghH_IeAgH_TRTQ0_;
  return v7();
}

uint64_t _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgmq5(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD v19[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    outlined destroy of Any?(a1, &demangling cache variable for type metadata for TaskPriority?);
    v8 = 7168;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
    {
LABEL_3:
      v10 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v9);
      swift_unknownObjectRetain();
      v12 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v10);
      v14 = v13;
      swift_unknownObjectRelease(v9);
      goto LABEL_6;
    }
  }
  else
  {
    v15 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v8 = v15 | 0x1C00;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
      goto LABEL_3;
  }
  v12 = 0;
  v14 = 0;
LABEL_6:
  v16 = swift_allocObject(&unk_1001EA300, 32, 7);
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = a3;
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    v17 = v19;
    v19[2] = v12;
    v19[3] = v14;
  }
  else
  {
    v17 = 0;
  }
  return swift_task_create(v8, v17, (char *)&type metadata for () + 8, &_sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5TATu, v16);
}

uint64_t specialized MOAngelControllerWrapper.getBundleRankingContext(_:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t inited;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v26;
  _BYTE v27[48];

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v27[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(MOUsageContextType, [UUID : [AnyHashable : Any]?])>);
  inited = swift_initStackObject(v6, v27);
  v26 = xmmword_10019ED20;
  *(_OWORD *)(inited + 16) = xmmword_10019ED20;
  v8 = (void *)kMOUsageContextRankingDictionaries;
  *(_QWORD *)(inited + 32) = kMOUsageContextRankingDictionaries;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(UUID, [AnyHashable : Any]?)>);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UUID, [AnyHashable : Any]?));
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = swift_allocObject(v9, v14 + v12, v13 | 7);
  *(_OWORD *)(v15 + 16) = v26;
  v16 = v15 + v14;
  v17 = v8;
  v18 = objc_msgSend(a1, "bundleIdentifier");
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v18);

  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v16, v5, v2);
  v19 = objc_msgSend(a1, "rankingDictionary");
  if (v19)
  {
    v20 = v19;
    v21 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v19, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  }
  else
  {
    v21 = 0;
  }
  *(_QWORD *)(v16 + *(int *)(v10 + 48)) = v21;
  *(_QWORD *)(inited + 40) = specialized Dictionary.init(dictionaryLiteral:)(v15);
  v22 = specialized Dictionary.init(dictionaryLiteral:)(inited);
  specialized _dictionaryUpCast<A, B, C, D>(_:)(v22);
  v24 = v23;
  swift_bridgeObjectRelease(v22);
  return v24;
}

void partial apply for closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)(a1, *(void **)(v1 + 16), *(_QWORD **)(v1 + 24));
}

void partial apply for closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)(_QWORD *a1)
{
  uint64_t v1;

  closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)(a1, *(void **)(v1 + 16), *(_QWORD **)(v1 + 24));
}

uint64_t sub_1001068FC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 64, 7);
}

uint64_t partial apply for closure #1 in MOAngelControllerWrapper.didReceivePresentationRequest(with:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[6];
  v1 = v0[7];
  v3 = v0[5];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v3, v2);
}

uint64_t block_copy_helper_26(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_26(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10010698C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 65, 7);
}

uint64_t partial apply for closure #1 in MOAngelControllerWrapper.didReceiveUpdateRequest(with:animated:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(unsigned __int8 *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 40);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 24))(v1, v3, v4, v2);
}

void *associated type witness table accessor for ObservableObject.ObjectWillChangePublisher : Publisher in MOAngelControllerWrapper()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_100106A18@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 104))();
  *a2 = result;
  return result;
}

uint64_t sub_100106A48(id *a1, uint64_t a2)
{
  return (*(uint64_t (**)(id))(**(_QWORD **)a2 + 112))(*a1);
}

uint64_t sub_100106A78@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 128))();
  *a2 = result;
  return result;
}

uint64_t sub_100106AA8(_QWORD *a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 136);
  v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

uint64_t sub_100106AD8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 152))();
  *a2 = result;
  return result;
}

uint64_t sub_100106B08(id *a1, uint64_t a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))(**(_QWORD **)a2 + 160);
  v4 = *a1;
  return v3(v2);
}

uint64_t sub_100106B44(_QWORD **a1)
{
  return (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xD8))();
}

uint64_t sub_100106B7C(uint64_t a1, _QWORD **a2)
{
  _BYTE v4[40];

  outlined init with copy of MOAngelControllerWrapperDelegate?(a1, (uint64_t)v4);
  return (*(uint64_t (**)(_BYTE *))((swift_isaMask & **a2) + 0xE0))(v4);
}

uint64_t sub_100106BCC(_QWORD **a1)
{
  return (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x108))();
}

uint64_t sub_100106C08(_QWORD **a1)
{
  return (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x138))();
}

uint64_t type metadata accessor for MOEventBundleWithAsset()
{
  return objc_opt_self(_TtC16MomentsUIService22MOEventBundleWithAsset);
}

uint64_t ObjC metadata update function for MOAngelControllerWrapper()
{
  return type metadata accessor for MOAngelControllerWrapper(0);
}

void type metadata completion function for MOAngelControllerWrapper(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];
  uint64_t v5;
  uint64_t v6;

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[4] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[5] = "(";
  type metadata accessor for Published<Bool>();
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(v2 - 8) + 64;
    v6 = v5;
    swift_updateClassMetadata2(a1, 256, 8, v4, a1 + 80);
  }
}

void type metadata accessor for Published<Bool>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Published<Bool>)
  {
    v0 = type metadata accessor for Published(0, &type metadata for Bool);
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Published<Bool>);
  }
}

uint64_t partial apply for @objc closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v2 = (void *)v0[2];
  v3 = v0[3];
  v5 = (void *)v0[4];
  v4 = (void *)v0[5];
  v6 = (_QWORD *)swift_task_alloc(dword_10020B96C);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = partial apply for closure #1 in MOSuggestionTipCoordinator.observeTipStatusUpdates(tip:);
  return ((uint64_t (*)(void *, uint64_t, void *, void *))((char *)&async function pointer to @objc closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)
                                                                  + async function pointer to @objc closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)))(v2, v3, v5, v4);
}

{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v2 = (void *)v0[2];
  v3 = v0[3];
  v5 = (void *)v0[4];
  v4 = (void *)v0[5];
  v6 = (_QWORD *)swift_task_alloc(dword_10020B9B4);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = _sIeghH_IeAgH_TRTQ0_;
  return ((uint64_t (*)(void *, uint64_t, void *, void *))((char *)&async function pointer to @objc closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)
                                                                  + async function pointer to @objc closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)))(v2, v3, v5, v4);
}

uint64_t _sIeghH_IeAgH_TRTA()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc(dword_10020B97C);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = _sIeghH_IeAgH_TRTQ0_;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&_sIeghH_IeAgH_TRTu + _sIeghH_IeAgH_TRTu))(v2, v3, v4);
}

uint64_t _sIeAgH_ytIeAgHr_TRTA(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10020B98C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = _sIeghH_IeAgH_TRTQ0_;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&_sIeAgH_ytIeAgHr_TRTu
                                                                   + _sIeAgH_ytIeAgHr_TRTu))(a1, v4, v5, v6);
}

uint64_t sub_100106ED8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5TA(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_10020B99C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = partial apply for closure #1 in MOSuggestionTipCoordinator.observeTipStatusUpdates(tip:);
  return ((uint64_t (*)(uint64_t, int *))((char *)&_sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5Tu
                                                 + _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5Tu))(a1, v4);
}

uint64_t objectdestroy_30Tm()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t objectdestroy_34Tm_0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100107058()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10010707C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  __n128 v15;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v21 = type metadata accessor for Date(0);
  v1 = *(_QWORD *)(v21 - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = v4;
  v20 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v20 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v4 + v6 + 8) & ~v6;
  v8 = (*(_QWORD *)(v5 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[MOSuggestionAsset]?, Never>);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v11 + v8 + 8) & ~v11;
  v18 = v12 + *(_QWORD *)(v10 + 64);
  v19 = v9;
  v13 = v2 | v6 | v11 | 7;
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + v3, v21);
  v14 = swift_release(*(_QWORD *)(v0 + v17));
  (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v0 + v7, v20, v14);
  v15 = swift_release(*(_QWORD *)(v0 + v8));
  (*(void (**)(uint64_t, uint64_t, __n128))(v10 + 8))(v0 + v12, v19, v15);
  return swift_deallocObject(v0, v18, v13);
}

uint64_t partial apply for closure #1 in closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(type metadata accessor for Date(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[MOSuggestionAsset]?, Never>)
                                      - 8)
                          + 80);
  return closure #1 in closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)(a1, v1 + v4, *(_QWORD *)(v1 + v5), v1 + v7, *(_QWORD *)(v1 + v8), v1 + ((v9 + v8 + 8) & ~v9));
}

{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CheckedContinuation<MOSuggestionAssetsBundle?, Never>)
                 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return closure #1 in closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)(a1, v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10010725C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for MOSuggestionAssetAnalytics.AssetTransferEvent(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;

  v8 = v7 + *(int *)(v1 + 32);
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t outlined destroy of MOSuggestionAssetAnalytics.AssetTransferEvent(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MOSuggestionAssetAnalytics.AssetTransferEvent(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100107324()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CheckedContinuation<MOSuggestionAssetsBundle?, Never>);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t SegmentType.asUnlocalizedString.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x746E65636552;
  else
    return 0x6E656D6D6F636552;
}

id MOSuggestionSheetFilterCollectionView.layout.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService37MOSuggestionSheetFilterCollectionView_layout);
}

uint64_t MOSuggestionSheetFilterCollectionViewModel.__allocating_init()()
{
  uint64_t v0;
  uint64_t result;

  result = swift_allocObject(v0, 17, 7);
  *(_BYTE *)(result + 16) = 0;
  return result;
}

uint64_t MOSuggestionSheetFilterCollectionView.filterViewModel.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC16MomentsUIService37MOSuggestionSheetFilterCollectionView_filterViewModel);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService37MOSuggestionSheetFilterCollectionView_filterViewModel, v3, 0, 0);
  return swift_retain(*v1);
}

uint64_t MOSuggestionSheetFilterCollectionView.filterViewModel.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC16MomentsUIService37MOSuggestionSheetFilterCollectionView_filterViewModel);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_release(v4);
}

uint64_t (*MOSuggestionSheetFilterCollectionView.filterViewModel.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService37MOSuggestionSheetFilterCollectionView_filterViewModel, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetFilterCollectionView.filterDelegate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC16MomentsUIService37MOSuggestionSheetFilterCollectionView_filterDelegate;
  swift_beginAccess(v3, v5, 0, 0);
  return outlined init with copy of MOSuggestionSheetFilterCollectionViewDelegate?(v3, a1);
}

uint64_t MOSuggestionSheetFilterCollectionView.filterDelegate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC16MomentsUIService37MOSuggestionSheetFilterCollectionView_filterDelegate;
  swift_beginAccess(v3, v5, 33, 0);
  outlined assign with take of MOSuggestionSheetFilterCollectionViewDelegate?(a1, v3);
  return swift_endAccess(v5);
}

uint64_t (*MOSuggestionSheetFilterCollectionView.filterDelegate.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService37MOSuggestionSheetFilterCollectionView_filterDelegate, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

char *MOSuggestionSheetFilterCollectionView.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  objc_class *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t ObjCClassFromMetadata;
  char *v23;
  NSString v24;
  char *v25;
  uint64_t v26;
  uint64_t (*v27)(__n128);
  __n128 v28;
  char *v29;
  Class isa;
  char v33[24];
  objc_super v34;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v33[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = OBJC_IVAR____TtC16MomentsUIService37MOSuggestionSheetFilterCollectionView_layout;
  v6 = objc_allocWithZone((Class)UICollectionViewFlowLayout);
  v7 = v0;
  v8 = objc_msgSend(v6, "init");
  objc_msgSend(v8, "setScrollDirection:", 1);
  objc_msgSend(v8, "setMinimumInteritemSpacing:", 12.0);
  *(_QWORD *)&v0[v5] = v8;
  v9 = OBJC_IVAR____TtC16MomentsUIService37MOSuggestionSheetFilterCollectionView_filterViewModel;
  v10 = type metadata accessor for MOSuggestionSheetFilterCollectionViewModel();
  v11 = swift_allocObject(v10, 17, 7);
  *(_BYTE *)(v11 + 16) = 0;
  *(_QWORD *)&v7[v9] = v11;
  v12 = &v7[OBJC_IVAR____TtC16MomentsUIService37MOSuggestionSheetFilterCollectionView_filterDelegate];
  *(_OWORD *)v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  *((_QWORD *)v12 + 4) = 0;

  v13 = *(_QWORD *)&v0[v5];
  v14 = (objc_class *)type metadata accessor for MOSuggestionSheetFilterCollectionView();
  v34.receiver = v7;
  v34.super_class = v14;
  v15 = objc_msgSendSuper2(&v34, "initWithFrame:collectionViewLayout:", v13, 0.0, 0.0, 0.0, 0.0);
  v16 = (void *)objc_opt_self(UIColor);
  v17 = v15;
  v18 = objc_msgSend(v16, "whiteColor");
  objc_msgSend(v17, "setBackgroundColor:", v18);

  objc_msgSend(v17, "setDelegate:", v17);
  objc_msgSend(v17, "setDataSource:", v17);
  objc_msgSend(v17, "setShowsHorizontalScrollIndicator:", 0);
  v19 = v17;
  v20 = objc_msgSend(v16, "secondarySystemBackgroundColor");
  objc_msgSend(v19, "setBackgroundColor:", v20);

  v21 = type metadata accessor for MOSuggestionCollectionViewFilterCell();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v21);
  v23 = (char *)v19;
  v24 = String._bridgeToObjectiveC()();
  objc_msgSend(v23, "registerClass:forCellWithReuseIdentifier:", ObjCClassFromMetadata, v24);

  objc_msgSend(v23, "setAllowsMultipleSelection:", 0);
  v25 = &v23[OBJC_IVAR____TtC16MomentsUIService37MOSuggestionSheetFilterCollectionView_filterViewModel];
  swift_beginAccess(&v23[OBJC_IVAR____TtC16MomentsUIService37MOSuggestionSheetFilterCollectionView_filterViewModel], v33, 0, 0);
  v26 = *(_QWORD *)v25;
  v27 = *(uint64_t (**)(__n128))(*(_QWORD *)v26 + 88);
  v28 = swift_retain(v26);
  LOBYTE(v27) = v27(v28);
  swift_release(v26);
  IndexPath.init(item:section:)(v27 & 1, 0);
  v29 = v23;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v29, "selectItemAtIndexPath:animated:scrollPosition:", isa, 0, 8);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v29;
}

void *MOSuggestionCollectionViewFilterCell.reuseIdentifier.unsafeMutableAddressor()
{
  return &static MOSuggestionCollectionViewFilterCell.reuseIdentifier;
}

uint64_t FilterType.rawValue.getter(char a1)
{
  return a1 & 1;
}

void MOSuggestionSheetFilterCollectionView.init(frame:collectionViewLayout:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MomentsUIService.MOSuggestionSheetFilterCollectionView", 54, "init(frame:collectionViewLayout:)", 33, 0);
  __break(1u);
}

id MOSuggestionSheetFilterCollectionView.__deallocating_deinit()
{
  return MOSuggestionRoundView.__deallocating_deinit(type metadata accessor for MOSuggestionSheetFilterCollectionView);
}

Swift::Int __swiftcall MOSuggestionSheetFilterCollectionView.collectionView(_:numberOfItemsInSection:)(UICollectionView _, Swift::Int numberOfItemsInSection)
{
  _QWORD *v2;
  uint64_t v3;
  Swift::Int v4;

  v3 = (*(uint64_t (**)(Class, Swift::Int))((swift_isaMask & *v2) + 0x68))(_.super.super.super.super.isa, numberOfItemsInSection);
  v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 112))(v3);
  swift_release(v3);
  return v4;
}

unint64_t MOSuggestionSheetFilterCollectionView.collectionView(_:cellForItemAt:)(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  NSString v4;
  Class isa;
  id v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  __n128 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;

  v2 = v1;
  v4 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v6 = objc_msgSend(a1, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v4, isa);

  v7 = type metadata accessor for MOSuggestionCollectionViewFilterCell();
  v8 = swift_dynamicCastClass(v6, v7);
  if (v8)
  {
    v9 = (_QWORD *)v8;
    v10 = *(uint64_t (**)(void))((swift_isaMask & *v2) + 0x68);
    v11 = v10();
    v12 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 120))(v11);
    swift_release(v11);
    result = IndexPath.row.getter(v13);
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (result < *(_QWORD *)(v12 + 16))
    {
      v15 = v12 + 16 * result;
      v16 = *(_QWORD *)(v15 + 32);
      v17 = *(_QWORD *)(v15 + 40);
      swift_bridgeObjectRetain(v17);
      v18 = swift_bridgeObjectRelease(v12);
      (*(void (**)(uint64_t, uint64_t, __n128))((swift_isaMask & *v9) + 0x80))(v16, v17, v18);
      v19 = swift_bridgeObjectRelease(v17);
      v20 = ((uint64_t (*)(__n128))v10)(v19);
      v21 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v20 + 88))(v20);
      swift_release(v20);
      objc_msgSend(v9, "setSelected:", IndexPath.row.getter(v22) == (v21 & 1));
      return (unint64_t)v9;
    }
    __break(1u);
  }
  else
  {

    return (unint64_t)objc_msgSend(objc_allocWithZone((Class)UICollectionViewCell), "init");
  }
  return result;
}

void MOSuggestionSheetFilterCollectionView.collectionView(_:layout:sizeForItemAt:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  specialized MOSuggestionSheetFilterCollectionView.collectionView(_:layout:sizeForItemAt:)(a3);
}

_UNKNOWN **static FilterType.allCases.getter()
{
  return &outlined read-only object #0 of static FilterType.allCases.getter;
}

uint64_t SegmentType.asString.getter(char a1)
{
  objc_class *v2;
  uint64_t v3;
  unint64_t v4;
  NSBundle v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t countAndFlagsBits;
  unint64_t v11;

  v2 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  if ((a1 & 1) != 0)
  {
    v11 = 0xE600000000000000;
    v3 = 0x746E65636552;
    v4 = 0xE600000000000000;
    v5.super.isa = v2;
    v6 = 0;
    v7 = 0xE000000000000000;
    v8 = 0x746E65636552;
  }
  else
  {
    v11 = 0xEB00000000646564;
    v3 = 0x6E656D6D6F636552;
    v4 = 0xEB00000000646564;
    v5.super.isa = v2;
    v6 = 0;
    v7 = 0xE000000000000000;
    v8 = 0x6E656D6D6F636552;
  }
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, (Swift::String_optional)0, v5, *(Swift::String *)&v6, *(Swift::String *)&v8)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t MOSuggestionSheetFilterCollectionView.collectionView(_:didSelectItemAt:)(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  char v15;
  Class isa;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  __n128 v25;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[5];

  v2 = v1;
  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0x68);
  v10 = ((uint64_t (*)(uint64_t))v9)(v6);
  v11 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 88))(v10);
  swift_release(v10);
  result = IndexPath.row.getter(v12);
  if (result != (v11 & 1))
  {
    v14 = v9();
    v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v14 + 88))(v14);
    swift_release(v14);
    IndexPath.init(item:section:)(v15 & 1, 0);
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    objc_msgSend(a1, "deselectItemAtIndexPath:animated:", isa, 0);

    result = IndexPath.row.getter(v17);
    if (result)
    {
      if (result != 1)
        return result;
      v18 = 1;
    }
    else
    {
      v18 = 0;
    }
    v19 = v9();
    (*(void (**)(uint64_t))(*(_QWORD *)v19 + 96))(v18);
    v20 = swift_release(v19);
    (*(void (**)(_QWORD *__return_ptr, __n128))((swift_isaMask & *v2) + 0x80))(v29, v20);
    if (v29[3])
    {
      outlined init with copy of MOProtectedAppsManagerDelegate((uint64_t)v29, (uint64_t)v26);
      outlined destroy of MOSuggestionSheetFilterCollectionViewDelegate?((uint64_t)v29);
      v21 = v27;
      v22 = v28;
      __swift_project_boxed_opaque_existential_1(v26, v27);
      v23 = v9();
      v24 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v23 + 88))(v23);
      v25 = swift_release(v23);
      (*(void (**)(_QWORD, uint64_t, uint64_t, __n128))(v22 + 8))(v24 & 1, v21, v22, v25);
      return __swift_destroy_boxed_opaque_existential_1(v26);
    }
    else
    {
      return outlined destroy of MOSuggestionSheetFilterCollectionViewDelegate?((uint64_t)v29);
    }
  }
  return result;
}

MomentsUIService::FilterType_optional __swiftcall FilterType.init(rawValue:)(Swift::Int rawValue)
{
  MomentsUIService::FilterType_optional v1;

  if (rawValue == 1)
    v1.value = MomentsUIService_FilterType_recent;
  else
    v1.value = MomentsUIService_FilterType_unknownDefault;
  if (rawValue)
    return v1;
  else
    return 0;
}

Swift::Void __swiftcall MOSuggestionSheetFilterCollectionView.resetFilterState()()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  Class isa;
  uint64_t v9;

  v1 = v0;
  v2 = type metadata accessor for IndexPath(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x68))(v4);
  (*(void (**)(_QWORD))(*(_QWORD *)v7 + 96))(0);
  swift_release(v7);
  IndexPath.init(item:section:)(0, 0);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  objc_msgSend(v1, "selectItemAtIndexPath:animated:scrollPosition:", isa, 0, 1);

}

unint64_t static MOSuggestionCollectionViewFilterCell.reuseIdentifier.getter()
{
  return 0xD000000000000024;
}

uint64_t MOSuggestionCollectionViewFilterCell.title.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionCollectionViewFilterCell_title);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionCollectionViewFilterCell_title, v4, 0, 0);
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t MOSuggestionCollectionViewFilterCell.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[24];

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionCollectionViewFilterCell_title);
  swift_beginAccess(v5, v8, 1, 0);
  v6 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease(v6);
}

uint64_t (*MOSuggestionCollectionViewFilterCell.title.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionCollectionViewFilterCell_title, a1, 33, 0);
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

id closure #1 in variable initialization expression of MOSuggestionCollectionViewFilterCell.filterButton()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v1 = (void *)objc_opt_self(UIColor);
  v2 = v0;
  v3 = objc_msgSend(v1, "systemGroupedBackgroundColor");
  objc_msgSend(v2, "setBackgroundColor:", v3);

  objc_msgSend(v2, "setTextAlignment:", 1);
  v4 = objc_msgSend((id)objc_opt_self(UIFont), "boldSystemFontOfSize:", 14.0);
  objc_msgSend(v2, "setFont:", v4);

  v5 = objc_msgSend(v1, "labelColor");
  objc_msgSend(v2, "setTextColor:", v5);

  v6 = objc_msgSend(v2, "layer");
  objc_msgSend(v6, "setCornerRadius:", 18.0);

  v7 = objc_msgSend(v2, "layer");
  objc_msgSend(v7, "setMasksToBounds:", 1);

  return v2;
}

id MOSuggestionCollectionViewFilterCell.filterButton.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionCollectionViewFilterCell_filterButton);
}

id MOSuggestionCollectionViewFilterCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  objc_super v14;

  v9 = &v4[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionCollectionViewFilterCell_title];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v10 = OBJC_IVAR____TtC16MomentsUIService36MOSuggestionCollectionViewFilterCell_filterButton;
  v11 = v4;
  *(_QWORD *)&v4[v10] = closure #1 in variable initialization expression of MOSuggestionCollectionViewFilterCell.filterButton();

  v14.receiver = v11;
  v14.super_class = (Class)type metadata accessor for MOSuggestionCollectionViewFilterCell();
  v12 = objc_msgSendSuper2(&v14, "initWithFrame:", a1, a2, a3, a4);
  MOSuggestionCollectionViewFilterCell.setupView()();

  return v12;
}

void MOSuggestionCollectionViewFilterCell.init(coder:)()
{
  char *v0;
  char *v1;
  uint64_t v2;

  v1 = &v0[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionCollectionViewFilterCell_title];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v2 = OBJC_IVAR____TtC16MomentsUIService36MOSuggestionCollectionViewFilterCell_filterButton;
  *(_QWORD *)&v0[v2] = closure #1 in variable initialization expression of MOSuggestionCollectionViewFilterCell.filterButton();

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionSheetFilterCollectionView.swift", 60, 2, 117, 0);
  __break(1u);
}

void MOSuggestionCollectionViewFilterCell.setupView()()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  NSString v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  Class isa;

  v1 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionCollectionViewFilterCell_filterButton);
  (*(void (**)(void))((swift_isaMask & *v0) + 0x60))();
  if (v2)
  {
    v4 = v2;
    v5 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v3 = swift_bridgeObjectRelease(v4).n128_u64[0];
  }
  else
  {
    v5 = 0;
  }
  objc_msgSend(v1, "setText:", v5, v3);

  objc_msgSend(v0, "addSubview:", v1);
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v6 = (void *)objc_opt_self(NSLayoutConstraint);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v8 = swift_allocObject(v7, 64, 7);
  *(_OWORD *)(v8 + 16) = xmmword_10019ED40;
  v9 = objc_msgSend(v1, "topAnchor");
  v10 = objc_msgSend(v0, "topAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

  *(_QWORD *)(v8 + 32) = v11;
  v12 = objc_msgSend(v1, "bottomAnchor");
  v13 = objc_msgSend(v0, "bottomAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(v8 + 40) = v14;
  v15 = objc_msgSend(v1, "leadingAnchor");
  v16 = objc_msgSend(v0, "leadingAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v8 + 48) = v17;
  v18 = objc_msgSend(v1, "trailingAnchor");
  v19 = objc_msgSend(v0, "trailingAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

  *(_QWORD *)(v8 + 56) = v20;
  specialized Array._endMutation()(v21);
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v6, "activateConstraints:", isa, swift_bridgeObjectRelease(v8).n128_f64[0]);

}

id MOSuggestionCollectionViewFilterCell.isSelected.getter()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionCollectionViewFilterCell();
  return objc_msgSendSuper2(&v2, "isSelected");
}

void MOSuggestionCollectionViewFilterCell.isSelected.setter(char a1)
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for MOSuggestionCollectionViewFilterCell();
  objc_msgSendSuper2(&v3, "setSelected:", a1 & 1);
  MOSuggestionCollectionViewFilterCell.isSelected.didset();
}

void MOSuggestionCollectionViewFilterCell.isSelected.didset()
{
  char *v0;
  void *v1;
  unsigned int v2;
  void *v3;
  char **v4;
  id v5;
  unsigned int v6;
  void *v7;
  char **v8;
  id v9;

  v1 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionCollectionViewFilterCell_filterButton];
  v2 = objc_msgSend(v0, "isSelected");
  v3 = (void *)objc_opt_self(UIColor);
  v4 = &selRef_systemCyanColor;
  if (!v2)
    v4 = &selRef_systemGroupedBackgroundColor;
  v5 = objc_msgSend(v3, *v4);
  objc_msgSend(v1, "setBackgroundColor:", v5);

  v6 = objc_msgSend(v0, "isSelected");
  v7 = (void *)objc_opt_self(UIColor);
  v8 = &selRef_whiteColor;
  if (!v6)
    v8 = &selRef_labelColor;
  v9 = objc_msgSend(v7, *v8);
  objc_msgSend(v1, "setTextColor:", v9);

}

Swift::Void __swiftcall MOSuggestionCollectionViewFilterCell.configure(title:)(Swift::String title)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionCollectionViewFilterCell_filterButton);
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setText:", v3);

}

id MOSuggestionCollectionViewFilterCell.__deallocating_deinit()
{
  return MOSuggestionRoundView.__deallocating_deinit(type metadata accessor for MOSuggestionCollectionViewFilterCell);
}

uint64_t MOSuggestionSheetFilterCollectionViewModel.selectedFilter.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 16, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t MOSuggestionSheetFilterCollectionViewModel.selectedFilter.setter(char a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;
  _BYTE v4[24];

  v2 = a1 & 1;
  result = swift_beginAccess(v1 + 16, v4, 1, 0);
  *(_BYTE *)(v1 + 16) = v2;
  return result;
}

_QWORD *MOSuggestionSheetFilterCollectionViewModel.possibleFilterTitles()()
{
  id v0;
  Swift::String v1;
  Swift::String v2;
  Swift::String v3;
  unint64_t v4;
  unint64_t v5;
  id v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  unint64_t v10;
  unint64_t v11;
  Swift::String v13;
  Swift::String v14;

  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, 2, 0);
  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v13._object = (void *)0xEB00000000646564;
  v1._countAndFlagsBits = 0x6E656D6D6F636552;
  v1._object = (void *)0xEB00000000646564;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v13._countAndFlagsBits = 0x6E656D6D6F636552;
  v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v13);

  v5 = _swiftEmptyArrayStorage[2];
  v4 = _swiftEmptyArrayStorage[3];
  if (v5 >= v4 >> 1)
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v4 > 1, v5 + 1, 1);
  _swiftEmptyArrayStorage[2] = v5 + 1;
  *(Swift::String *)&_swiftEmptyArrayStorage[2 * v5 + 4] = v3;
  v6 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v14._object = (void *)0xE600000000000000;
  v7._countAndFlagsBits = 0x746E65636552;
  v7._object = (void *)0xE600000000000000;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v14._countAndFlagsBits = 0x746E65636552;
  v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v14);

  v11 = _swiftEmptyArrayStorage[2];
  v10 = _swiftEmptyArrayStorage[3];
  if (v11 >= v10 >> 1)
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v10 > 1, v11 + 1, 1);
  _swiftEmptyArrayStorage[2] = v11 + 1;
  *(Swift::String *)&_swiftEmptyArrayStorage[2 * v11 + 4] = v9;
  return _swiftEmptyArrayStorage;
}

uint64_t MOSuggestionSheetFilterCollectionViewModel.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 17, 7);
}

uint64_t MOSuggestionSheetFilterCollectionViewModel.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_BYTE *)(v0 + 16) = 0;
  return result;
}

uint64_t outlined init with copy of MOSuggestionSheetFilterCollectionViewDelegate?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionSheetFilterCollectionViewDelegate?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined assign with take of MOSuggestionSheetFilterCollectionViewDelegate?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionSheetFilterCollectionViewDelegate?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for MOSuggestionSheetFilterCollectionViewModel()
{
  return objc_opt_self(_TtC16MomentsUIService42MOSuggestionSheetFilterCollectionViewModel);
}

uint64_t type metadata accessor for MOSuggestionSheetFilterCollectionView()
{
  return objc_opt_self(_TtC16MomentsUIService37MOSuggestionSheetFilterCollectionView);
}

uint64_t type metadata accessor for MOSuggestionCollectionViewFilterCell()
{
  return objc_opt_self(_TtC16MomentsUIService36MOSuggestionCollectionViewFilterCell);
}

_QWORD *protocol witness for RawRepresentable.init(rawValue:) in conformance FilterType@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

void protocol witness for static CaseIterable.allCases.getter in conformance FilterType(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of protocol witness for static CaseIterable.allCases.getter in conformance FilterType;
}

_UNKNOWN **static SegmentType.allCases.getter()
{
  return &outlined read-only object #0 of static SegmentType.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance SegmentType(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of protocol witness for static CaseIterable.allCases.getter in conformance SegmentType;
}

void specialized MOSuggestionSheetFilterCollectionView.init(coder:)()
{
  char *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;

  v1 = OBJC_IVAR____TtC16MomentsUIService37MOSuggestionSheetFilterCollectionView_layout;
  v2 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewFlowLayout), "init");
  objc_msgSend(v2, "setScrollDirection:", 1);
  objc_msgSend(v2, "setMinimumInteritemSpacing:", 12.0);
  *(_QWORD *)&v0[v1] = v2;
  v3 = OBJC_IVAR____TtC16MomentsUIService37MOSuggestionSheetFilterCollectionView_filterViewModel;
  v4 = type metadata accessor for MOSuggestionSheetFilterCollectionViewModel();
  v5 = swift_allocObject(v4, 17, 7);
  *(_BYTE *)(v5 + 16) = 0;
  *(_QWORD *)&v0[v3] = v5;
  v6 = &v0[OBJC_IVAR____TtC16MomentsUIService37MOSuggestionSheetFilterCollectionView_filterDelegate];
  *(_OWORD *)v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *((_QWORD *)v6 + 4) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionSheetFilterCollectionView.swift", 60, 2, 49, 0);
  __break(1u);
}

void specialized MOSuggestionSheetFilterCollectionView.collectionView(_:layout:sizeForItemAt:)(uint64_t a1)
{
  unint64_t v1;
  char v2;
  objc_class *v3;
  uint64_t v4;
  unint64_t v5;
  NSBundle v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *object;
  NSString v11;
  uint64_t v12;
  uint64_t inited;
  void *v14;
  NSString *v15;
  id v16;
  unint64_t v17;
  Class isa;
  unint64_t v19;
  _BYTE v20[72];

  v1 = IndexPath.row.getter(a1);
  if (v1 > 1)
  {
    __break(1u);
  }
  else
  {
    v2 = *((_BYTE *)&outlined read-only object #0 of MOSuggestionSheetFilterCollectionView.collectionView(_:layout:sizeForItemAt:)
         + v1
         + 32);
    v3 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    if ((v2 & 1) != 0)
    {
      v19 = 0xE600000000000000;
      v4 = 0x746E65636552;
      v5 = 0xE600000000000000;
      v6.super.isa = v3;
      v7 = 0;
      v8 = 0xE000000000000000;
      v9 = 0x746E65636552;
    }
    else
    {
      v19 = 0xEB00000000646564;
      v4 = 0x6E656D6D6F636552;
      v5 = 0xEB00000000646564;
      v6.super.isa = v3;
      v7 = 0;
      v8 = 0xE000000000000000;
      v9 = 0x6E656D6D6F636552;
    }
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v4, (Swift::String_optional)0, v6, *(Swift::String *)&v7, *(Swift::String *)&v9)._object;

    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(NSAttributedStringKey, Any)>);
    inited = swift_initStackObject(v12, v20);
    *(_OWORD *)(inited + 16) = xmmword_10019ED20;
    *(_QWORD *)(inited + 32) = NSFontAttributeName;
    v14 = (void *)objc_opt_self(UIFont);
    v15 = NSFontAttributeName;
    v16 = objc_msgSend(v14, "boldSystemFontOfSize:", 14.0);
    *(_QWORD *)(inited + 64) = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIFont, UIFont_ptr);
    *(_QWORD *)(inited + 40) = v16;
    v17 = specialized Dictionary.init(dictionaryLiteral:)(inited);
    type metadata accessor for NSAttributedStringKey(0);
    lazy protocol witness table accessor for type NSAttributedStringKey and conformance NSAttributedStringKey();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v11, "sizeWithAttributes:", isa, swift_bridgeObjectRelease(v17).n128_f64[0]);

  }
}

uint64_t outlined destroy of MOSuggestionSheetFilterCollectionViewDelegate?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionSheetFilterCollectionViewDelegate?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t lazy protocol witness table accessor for type FilterType and conformance FilterType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type FilterType and conformance FilterType;
  if (!lazy protocol witness table cache variable for type FilterType and conformance FilterType)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FilterType, &type metadata for FilterType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type FilterType and conformance FilterType);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in FilterType()
{
  return lazy protocol witness table accessor for type [FilterType] and conformance [A](&lazy protocol witness table cache variable for type [FilterType] and conformance [A], &demangling cache variable for type metadata for [FilterType]);
}

unint64_t lazy protocol witness table accessor for type SegmentType and conformance SegmentType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SegmentType and conformance SegmentType;
  if (!lazy protocol witness table cache variable for type SegmentType and conformance SegmentType)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SegmentType, &type metadata for SegmentType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SegmentType and conformance SegmentType);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in SegmentType()
{
  return lazy protocol witness table accessor for type [FilterType] and conformance [A](&lazy protocol witness table cache variable for type [SegmentType] and conformance [A], &demangling cache variable for type metadata for [SegmentType]);
}

uint64_t lazy protocol witness table accessor for type [FilterType] and conformance [A](unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100109644@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x68))();
  *a2 = result;
  return result;
}

uint64_t sub_100109684(_QWORD *a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0x70);
  v3 = swift_retain(*a1);
  return v2(v3);
}

uint64_t sub_1001096C4(_QWORD **a1)
{
  return (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x80))();
}

uint64_t sub_1001096FC(uint64_t a1, _QWORD **a2)
{
  _BYTE v4[40];

  outlined init with copy of MOSuggestionSheetFilterCollectionViewDelegate?(a1, (uint64_t)v4);
  return (*(uint64_t (**)(_BYTE *))((swift_isaMask & **a2) + 0x88))(v4);
}

uint64_t sub_10010974C@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x60))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_10010978C(uint64_t *a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **a2) + 0x68);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t sub_1001097E0@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 88))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_100109814(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 96))(*a1);
}

ValueMetadata *type metadata accessor for FilterType()
{
  return &type metadata for FilterType;
}

uint64_t storeEnumTagSinglePayload for FilterType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1001098C0 + 4 * byte_1001A2335[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1001098F4 + 4 * byte_1001A2330[v4]))();
}

uint64_t sub_1001098F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001098FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100109904);
  return result;
}

uint64_t sub_100109910(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100109918);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10010991C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100109924(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SegmentType()
{
  return &type metadata for SegmentType;
}

uint64_t MOSuggestionSheetAssetDateRange.init(start:end:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  v7 = type metadata accessor for MOSuggestionSheetAssetDateRange(0);
  return outlined init with take of Date?(a2, a3 + *(int *)(v7 + 20), (uint64_t *)&demangling cache variable for type metadata for Date?);
}

uint64_t type metadata accessor for MOSuggestionSheetAssetDateRange(uint64_t a1)
{
  return type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(a1, (uint64_t *)&type metadata singleton initialization cache for MOSuggestionSheetAssetDateRange, (uint64_t)&nominal type descriptor for MOSuggestionSheetAssetDateRange);
}

const char *MOSuggestionSheetAssetViewModel.placeHolderId.unsafeMutableAddressor()
{
  return "placeholder";
}

uint64_t static MOSuggestionSheetAssetViewModel.assetTypeAsPluralString(assetAndMediaType:count:includeCount:)(void *a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  return specialized static MOSuggestionSheetAssetViewModel.assetTypeAsPluralString(assetAndMediaType:count:includeCount:)(a1, a2, a3 & 1, a4, a5);
}

uint64_t static MOSuggestionSheetAssetViewModel.assetTypeAsPluralString(assetViewSubType:count:includeCount:)(char a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE v14[16];

  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = &v14[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((a3 & 1) != 0)
  {
    MOSuggestionAssetVisualSubType.localizableKeyWithCount(count:)(a2, a1);
    static Locale.current.getter(v12);
    return String.init(localized:table:bundle:locale:comment:)(v11, 0xD000000000000012, 0x80000001001A90C0, 0, v8, "Asset Type Description", 22, 2);
  }
  else if (a2 < 2)
  {
    return MOSuggestionAssetVisualSubType.singularLocalizedString.getter(a1);
  }
  else
  {
    return MOSuggestionAssetVisualSubType.pluralLocalizedString.getter(a1);
  }
}

uint64_t MOSuggestionSheetAssetViewModel.__allocating_init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, void *a7, void *a8, char a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,void *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55,char a56,void *a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t v63;
  uint64_t v64;

  v64 = swift_allocObject(v63, *(unsigned int *)(v63 + 48), *(unsigned __int16 *)(v63 + 52));
  MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37,
    a38,
    a39,
    a40 & 1,
    a41,
    a42,
    a43,
    a44,
    a45,
    a46,
    a47,
    a48,
    a49,
    a50,
    a51,
    a52,
    a53,
    a54,
    a55 & 1,
    a56,
    a57,
    a58,
    a59,
    a60,
    a61,
    a62,
    a63);
  return v64;
}

uint64_t MOSuggestionSheetAssetDateRange.end.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MOSuggestionSheetAssetDateRange(0);
  return outlined init with copy of Date?(v1 + *(int *)(v3 + 20), a1, (uint64_t *)&demangling cache variable for type metadata for Date?);
}

uint64_t MOSuggestionSheetAssetDateRange.end.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MOSuggestionSheetAssetDateRange(0);
  return outlined assign with take of Date?(a1, v1 + *(int *)(v3 + 20), (uint64_t *)&demangling cache variable for type metadata for Date?);
}

void (__swiftcall *MOSuggestionSheetAssetDateRange.end.modify())()
{
  type metadata accessor for MOSuggestionSheetAssetDateRange(0);
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

void *MOSuggestionSheetAssetViewModel.routeMap.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  _BYTE v4[24];

  swift_beginAccess(v0 + 48, v4, 0, 0);
  v1 = *(void **)(v0 + 48);
  v2 = v1;
  return v1;
}

void MOSuggestionSheetAssetViewModel.routeMap.setter(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  _BYTE v4[24];

  swift_beginAccess(v1 + 48, v4, 1, 0);
  v3 = *(void **)(v1 + 48);
  *(_QWORD *)(v1 + 48) = a1;

}

void *MOSuggestionSheetAssetViewModel.linkMetadata.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  _BYTE v4[24];

  swift_beginAccess(v0 + 56, v4, 0, 0);
  v1 = *(void **)(v0 + 56);
  v2 = v1;
  return v1;
}

void MOSuggestionSheetAssetViewModel.linkMetadata.setter(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  _BYTE v4[24];

  swift_beginAccess(v1 + 56, v4, 1, 0);
  v3 = *(void **)(v1 + 56);
  *(_QWORD *)(v1 + 56) = a1;

}

void *MOSuggestionSheetAssetViewModel.assetType.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  _BYTE v4[24];

  swift_beginAccess(v0 + 64, v4, 0, 0);
  v1 = *(void **)(v0 + 64);
  v2 = v1;
  return v1;
}

void MOSuggestionSheetAssetViewModel.assetType.setter(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  _BYTE v4[24];

  swift_beginAccess(v1 + 64, v4, 1, 0);
  v3 = *(void **)(v1 + 64);
  *(_QWORD *)(v1 + 64) = a1;

}

uint64_t MOSuggestionSheetAssetViewModel.assetVisualSubType.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 72, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t MOSuggestionSheetAssetViewModel.assetVisualSubType.setter(char a1)
{
  uint64_t v1;
  uint64_t result;
  _BYTE v4[24];

  result = swift_beginAccess(v1 + 72, v4, 1, 0);
  *(_BYTE *)(v1 + 72) = a1;
  return result;
}

void *MOSuggestionSheetAssetViewModel.evergreenData.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  _BYTE v4[24];

  swift_beginAccess(v0 + 80, v4, 0, 0);
  v1 = *(void **)(v0 + 80);
  v2 = v1;
  return v1;
}

void MOSuggestionSheetAssetViewModel.evergreenData.setter(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  _BYTE v4[24];

  swift_beginAccess(v1 + 80, v4, 1, 0);
  v3 = *(void **)(v1 + 80);
  *(_QWORD *)(v1 + 80) = a1;

}

uint64_t MOSuggestionSheetAssetViewModel.reflectionIndex.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 88, v2, 0, 0);
  return *(_QWORD *)(v0 + 88);
}

uint64_t MOSuggestionSheetAssetViewModel.reflectionIndex.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  _BYTE v4[24];

  result = swift_beginAccess(v1 + 88, v4, 1, 0);
  *(_QWORD *)(v1 + 88) = a1;
  return result;
}

uint64_t (*MOSuggestionSheetAssetViewModel.reflectionIndex.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + 88, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.mediaAssetID.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 96, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 104));
  return v1;
}

uint64_t MOSuggestionSheetAssetViewModel.mediaAssetID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE v7[24];

  swift_beginAccess(v2 + 96, v7, 1, 0);
  v5 = *(_QWORD *)(v2 + 104);
  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = a2;
  return swift_bridgeObjectRelease(v5);
}

uint64_t key path setter for MOSuggestionSheetAssetViewModel.URL : MOSuggestionSheetAssetViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Date?(a1, (uint64_t)v6, &demangling cache variable for type metadata for URL?);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 760))(v6);
}

uint64_t MOSuggestionSheetAssetViewModel.URL.getter@<X0>(uint64_t a1@<X8>)
{
  return MOSuggestionSheetAssetViewModel.URL.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_URL, &demangling cache variable for type metadata for URL?, a1);
}

uint64_t MOSuggestionSheetAssetViewModel.URL.setter(uint64_t a1)
{
  return MOSuggestionSheetAssetViewModel.URL.setter(a1, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_URL, &demangling cache variable for type metadata for URL?);
}

uint64_t (*MOSuggestionSheetAssetViewModel.URL.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_URL, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.mediaType.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mediaType;
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mediaType, v3, 0, 0);
  return *(_QWORD *)v1;
}

uint64_t MOSuggestionSheetAssetViewModel.mediaType.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mediaType);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*MOSuggestionSheetAssetViewModel.mediaType.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mediaType, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.isSquare.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_isSquare);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_isSquare, v3, 0, 0);
  return *v1;
}

uint64_t MOSuggestionSheetAssetViewModel.isSquare.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_isSquare);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*MOSuggestionSheetAssetViewModel.isSquare.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_isSquare, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.contactName.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_contactName);
}

uint64_t MOSuggestionSheetAssetViewModel.contactName.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_contactName);
}

uint64_t (*MOSuggestionSheetAssetViewModel.contactName.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_contactName, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.contactID.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_contactID);
}

uint64_t MOSuggestionSheetAssetViewModel.contactID.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_contactID);
}

uint64_t (*MOSuggestionSheetAssetViewModel.contactID.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_contactID, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.contactFirstName.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_contactFirstName);
}

uint64_t MOSuggestionSheetAssetViewModel.contactFirstName.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_contactFirstName);
}

uint64_t (*MOSuggestionSheetAssetViewModel.contactFirstName.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_contactFirstName, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.workoutName.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_workoutName);
}

uint64_t MOSuggestionSheetAssetViewModel.workoutName.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_workoutName);
}

uint64_t (*MOSuggestionSheetAssetViewModel.workoutName.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_workoutName, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void *MOSuggestionSheetAssetViewModel.livePhoto.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_livePhoto);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_livePhoto, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void MOSuggestionSheetAssetViewModel.livePhoto.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_livePhoto);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*MOSuggestionSheetAssetViewModel.livePhoto.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_livePhoto, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void *MOSuggestionSheetAssetViewModel.videoAsset.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_videoAsset);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_videoAsset, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void MOSuggestionSheetAssetViewModel.videoAsset.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_videoAsset);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*MOSuggestionSheetAssetViewModel.videoAsset.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_videoAsset, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.activityName.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_activityName);
}

uint64_t MOSuggestionSheetAssetViewModel.activityName.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_activityName);
}

uint64_t (*MOSuggestionSheetAssetViewModel.activityName.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_activityName, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.activityStepCount.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_activityStepCount);
}

uint64_t MOSuggestionSheetAssetViewModel.activityStepCount.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_activityStepCount);
}

uint64_t (*MOSuggestionSheetAssetViewModel.activityStepCount.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_activityStepCount, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.motionActivityNumSteps.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_motionActivityNumSteps;
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_motionActivityNumSteps, v3, 0, 0);
  return *(_QWORD *)v1;
}

uint64_t MOSuggestionSheetAssetViewModel.motionActivityNumSteps.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_motionActivityNumSteps);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*MOSuggestionSheetAssetViewModel.motionActivityNumSteps.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_motionActivityNumSteps, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.title.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_title);
}

uint64_t MOSuggestionSheetAssetViewModel.title.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_title);
}

uint64_t (*MOSuggestionSheetAssetViewModel.title.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_title, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.subtitle.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_subtitle);
}

uint64_t MOSuggestionSheetAssetViewModel.subtitle.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_subtitle);
}

uint64_t (*MOSuggestionSheetAssetViewModel.subtitle.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_subtitle, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.weatherString.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_weatherString);
}

uint64_t MOSuggestionSheetAssetViewModel.weatherString.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_weatherString);
}

uint64_t (*MOSuggestionSheetAssetViewModel.weatherString.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_weatherString, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t key path setter for MOSuggestionSheetAssetViewModel.weatherTemperature : MOSuggestionSheetAssetViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>?);
  __chkstk_darwin(v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Date?(a1, (uint64_t)v6, &demangling cache variable for type metadata for Measurement<NSUnitTemperature>?);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 1120))(v6);
}

uint64_t MOSuggestionSheetAssetViewModel.weatherTemperature.getter@<X0>(uint64_t a1@<X8>)
{
  return MOSuggestionSheetAssetViewModel.URL.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_weatherTemperature, &demangling cache variable for type metadata for Measurement<NSUnitTemperature>?, a1);
}

uint64_t MOSuggestionSheetAssetViewModel.URL.getter@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  _BYTE v8[24];

  v6 = v3 + *a1;
  swift_beginAccess(v6, v8, 0, 0);
  return outlined init with copy of Date?(v6, a3, a2);
}

uint64_t MOSuggestionSheetAssetViewModel.weatherTemperature.setter(uint64_t a1)
{
  return MOSuggestionSheetAssetViewModel.URL.setter(a1, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_weatherTemperature, &demangling cache variable for type metadata for Measurement<NSUnitTemperature>?);
}

uint64_t MOSuggestionSheetAssetViewModel.URL.setter(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  _BYTE v8[24];

  v6 = v3 + *a2;
  swift_beginAccess(v6, v8, 33, 0);
  outlined assign with take of Date?(a1, v6, a3);
  return swift_endAccess(v8);
}

uint64_t (*MOSuggestionSheetAssetViewModel.weatherTemperature.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_weatherTemperature, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.calories.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_calories);
}

uint64_t MOSuggestionSheetAssetViewModel.calories.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_calories);
}

uint64_t (*MOSuggestionSheetAssetViewModel.calories.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_calories, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.duration.getter()
{
  return MOSuggestionSheetAssetViewModel.duration.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_duration);
}

uint64_t MOSuggestionSheetAssetViewModel.duration.setter(uint64_t a1, char a2)
{
  return MOSuggestionSheetAssetViewModel.duration.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_duration);
}

uint64_t (*MOSuggestionSheetAssetViewModel.duration.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_duration, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.distance.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_distance);
}

uint64_t MOSuggestionSheetAssetViewModel.distance.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_distance);
}

uint64_t (*MOSuggestionSheetAssetViewModel.distance.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_distance, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.averageHeartRate.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_averageHeartRate);
}

uint64_t MOSuggestionSheetAssetViewModel.averageHeartRate.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_averageHeartRate);
}

uint64_t (*MOSuggestionSheetAssetViewModel.averageHeartRate.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_averageHeartRate, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.shouldAutoPlay.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_shouldAutoPlay);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_shouldAutoPlay, v3, 0, 0);
  return *v1;
}

uint64_t MOSuggestionSheetAssetViewModel.shouldAutoPlay.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_shouldAutoPlay);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*MOSuggestionSheetAssetViewModel.shouldAutoPlay.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_shouldAutoPlay, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

double MOSuggestionSheetAssetViewModel.squareCropRect.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = MOSuggestionSheetAssetViewModel.squareCropRect.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_squareCropRect, a1).n128_u64[0];
  return result;
}

uint64_t MOSuggestionSheetAssetViewModel.squareCropRect.setter(uint64_t a1)
{
  return MOSuggestionSheetAssetViewModel.squareCropRect.setter(a1, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_squareCropRect);
}

uint64_t (*MOSuggestionSheetAssetViewModel.squareCropRect.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_squareCropRect, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

double MOSuggestionSheetAssetViewModel.landscapeCropRect.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = MOSuggestionSheetAssetViewModel.squareCropRect.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_landscapeCropRect, a1).n128_u64[0];
  return result;
}

uint64_t MOSuggestionSheetAssetViewModel.landscapeCropRect.setter(uint64_t a1)
{
  return MOSuggestionSheetAssetViewModel.squareCropRect.setter(a1, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_landscapeCropRect);
}

uint64_t MOSuggestionSheetAssetViewModel.squareCropRect.setter(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  _BYTE v6[24];

  v4 = v2 + *a2;
  swift_beginAccess(v4, v6, 1, 0);
  return outlined init with take of Date?(a1, v4, &demangling cache variable for type metadata for CGRect?);
}

uint64_t (*MOSuggestionSheetAssetViewModel.landscapeCropRect.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_landscapeCropRect, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

double MOSuggestionSheetAssetViewModel.portraitCropRect.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = MOSuggestionSheetAssetViewModel.squareCropRect.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_portraitCropRect, a1).n128_u64[0];
  return result;
}

__n128 MOSuggestionSheetAssetViewModel.squareCropRect.getter@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  __n128 result;
  __int128 v7;
  _BYTE v8[24];

  v4 = v2 + *a1;
  swift_beginAccess(v4, v8, 0, 0);
  v5 = *(_BYTE *)(v4 + 32);
  result = *(__n128 *)v4;
  v7 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v4;
  *(_OWORD *)(a2 + 16) = v7;
  *(_BYTE *)(a2 + 32) = v5;
  return result;
}

uint64_t MOSuggestionSheetAssetViewModel.portraitCropRect.setter(uint64_t a1)
{
  return MOSuggestionSheetAssetViewModel.squareCropRect.setter(a1, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_portraitCropRect);
}

uint64_t (*MOSuggestionSheetAssetViewModel.portraitCropRect.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_portraitCropRect, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.assignedAssetTileSize.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_assignedAssetTileSize);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_assignedAssetTileSize, v3, 0, 0);
  return *v1;
}

uint64_t MOSuggestionSheetAssetViewModel.assignedAssetTileSize.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_assignedAssetTileSize);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*MOSuggestionSheetAssetViewModel.assignedAssetTileSize.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_assignedAssetTileSize, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.mapPrimaryField.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mapPrimaryField);
}

uint64_t MOSuggestionSheetAssetViewModel.mapPrimaryField.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mapPrimaryField);
}

uint64_t (*MOSuggestionSheetAssetViewModel.mapPrimaryField.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mapPrimaryField, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.mapSecondaryField.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mapSecondaryField);
}

uint64_t MOSuggestionSheetAssetViewModel.mapSecondaryField.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mapSecondaryField);
}

uint64_t (*MOSuggestionSheetAssetViewModel.mapSecondaryField.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mapSecondaryField, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.mapLocationCount.getter()
{
  return MOSuggestionSheetAssetViewModel.duration.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mapLocationCount);
}

uint64_t MOSuggestionSheetAssetViewModel.duration.getter(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v2 = v1 + *a1;
  swift_beginAccess(v2, v4, 0, 0);
  return *(_QWORD *)v2;
}

uint64_t MOSuggestionSheetAssetViewModel.mapLocationCount.setter(uint64_t a1, char a2)
{
  return MOSuggestionSheetAssetViewModel.duration.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mapLocationCount);
}

uint64_t MOSuggestionSheetAssetViewModel.duration.setter(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t result;
  _BYTE v8[24];

  v6 = v3 + *a3;
  result = swift_beginAccess(v6, v8, 1, 0);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MOSuggestionSheetAssetViewModel.mapLocationCount.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mapLocationCount, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.isLoadingPlaceHolder.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_isLoadingPlaceHolder);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_isLoadingPlaceHolder, v3, 0, 0);
  return *v1;
}

uint64_t MOSuggestionSheetAssetViewModel.isLoadingPlaceHolder.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_isLoadingPlaceHolder);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*MOSuggestionSheetAssetViewModel.isLoadingPlaceHolder.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_isLoadingPlaceHolder, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void *MOSuggestionSheetAssetViewModel.preComposedView.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_preComposedView);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_preComposedView, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void MOSuggestionSheetAssetViewModel.preComposedView.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_preComposedView);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*MOSuggestionSheetAssetViewModel.preComposedView.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_preComposedView, a1, 33, 0);
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.valenceClassificationAndReflectiveInterval.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_valenceClassificationAndReflectiveInterval);
}

uint64_t MOSuggestionSheetAssetViewModel.valenceClassificationAndReflectiveInterval.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_valenceClassificationAndReflectiveInterval);
}

uint64_t (*MOSuggestionSheetAssetViewModel.valenceClassificationAndReflectiveInterval.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_valenceClassificationAndReflectiveInterval, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.reflectiveInterval.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_reflectiveInterval;
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_reflectiveInterval, v3, 0, 0);
  return *(_QWORD *)v1;
}

uint64_t MOSuggestionSheetAssetViewModel.reflectiveInterval.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_reflectiveInterval);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*MOSuggestionSheetAssetViewModel.reflectiveInterval.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_reflectiveInterval, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.stateOfMindLabels.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindLabels);
}

uint64_t MOSuggestionSheetAssetViewModel.stateOfMindLabels.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindLabels);
}

uint64_t (*MOSuggestionSheetAssetViewModel.stateOfMindLabels.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindLabels, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.stateOfMindLabelsShortened.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindLabelsShortened);
}

uint64_t MOSuggestionSheetAssetViewModel.stateOfMindLabelsShortened.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindLabelsShortened);
}

uint64_t (*MOSuggestionSheetAssetViewModel.stateOfMindLabelsShortened.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindLabelsShortened, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.stateOfMindDomains.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindDomains);
}

uint64_t MOSuggestionSheetAssetViewModel.stateOfMindDomains.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindDomains);
}

uint64_t (*MOSuggestionSheetAssetViewModel.stateOfMindDomains.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindDomains, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.stateOfMindDomainsShortened.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindDomainsShortened);
}

uint64_t MOSuggestionSheetAssetViewModel.stateOfMindDomainsShortened.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindDomainsShortened);
}

uint64_t (*MOSuggestionSheetAssetViewModel.stateOfMindDomainsShortened.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindDomainsShortened, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.stateOfMindAssociatedColorsLight.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindAssociatedColorsLight);
}

uint64_t MOSuggestionSheetAssetViewModel.stateOfMindAssociatedColorsLight.setter(uint64_t a1)
{
  return MOSuggestionAssetMapsClusterer.skipRows.setter(a1, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindAssociatedColorsLight);
}

uint64_t (*MOSuggestionSheetAssetViewModel.stateOfMindAssociatedColorsLight.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindAssociatedColorsLight, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.stateOfMindAssociatedColorsDark.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindAssociatedColorsDark);
}

uint64_t MOSuggestionSheetAssetViewModel.stateOfMindAssociatedColorsDark.setter(uint64_t a1)
{
  return MOSuggestionAssetMapsClusterer.skipRows.setter(a1, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindAssociatedColorsDark);
}

uint64_t (*MOSuggestionSheetAssetViewModel.stateOfMindAssociatedColorsDark.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindAssociatedColorsDark, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t key path setter for MOSuggestionSheetAssetViewModel.stateOfMindDate : MOSuggestionSheetAssetViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Date?(a1, (uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for Date?);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 1672))(v6);
}

uint64_t MOSuggestionSheetAssetViewModel.stateOfMindDate.getter@<X0>(uint64_t a1@<X8>)
{
  return MOSuggestionSheetAssetViewModel.URL.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindDate, (uint64_t *)&demangling cache variable for type metadata for Date?, a1);
}

uint64_t MOSuggestionSheetAssetViewModel.stateOfMindDate.setter(uint64_t a1)
{
  return MOSuggestionSheetAssetViewModel.URL.setter(a1, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindDate, (uint64_t *)&demangling cache variable for type metadata for Date?);
}

uint64_t (*MOSuggestionSheetAssetViewModel.stateOfMindDate.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindDate, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void *MOSuggestionSheetAssetViewModel.bgColor.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_bgColor);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_bgColor, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void MOSuggestionSheetAssetViewModel.bgColor.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_bgColor);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*MOSuggestionSheetAssetViewModel.bgColor.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_bgColor, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.mediaThirdPartyAppAssociatedColors.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mediaThirdPartyAppAssociatedColors);
}

uint64_t MOSuggestionSheetAssetViewModel.mediaThirdPartyAppAssociatedColors.setter(uint64_t a1)
{
  return MOSuggestionAssetMapsClusterer.skipRows.setter(a1, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mediaThirdPartyAppAssociatedColors);
}

uint64_t (*MOSuggestionSheetAssetViewModel.mediaThirdPartyAppAssociatedColors.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mediaThirdPartyAppAssociatedColors, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.bgColorVariant.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_bgColorVariant;
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_bgColorVariant, v3, 0, 0);
  return *(_QWORD *)v1;
}

uint64_t MOSuggestionSheetAssetViewModel.bgColorVariant.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_bgColorVariant);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*MOSuggestionSheetAssetViewModel.bgColorVariant.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_bgColorVariant, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.parent.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_parent;
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_parent, v3, 0, 0);
  return swift_weakLoadStrong(v1);
}

uint64_t MOSuggestionSheetAssetViewModel.parent.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_parent;
  swift_beginAccess(v3, v5, 1, 0);
  swift_weakAssign(v3, a1);
  return swift_release(a1);
}

void (*MOSuggestionSheetAssetViewModel.parent.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_parent;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  v3[3] = swift_weakLoadStrong(v5);
  return MOSuggestionSheetInterstitialView.cellViewModel.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_uuid;
  v4 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t static MOSuggestionSheetAssetViewModel.placeHolderId.getter()
{
  return 0x6C6F686563616C70;
}

_QWORD *MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, void *a7, void *a8, char a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,void *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55,char a56,void *a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a64;
  uint64_t a65;
  uint64_t a66;
  uint64_t a67;
  uint64_t a68;
  uint64_t a69;
  uint64_t a70;
  uint64_t a71;
  void *a72;
  uint64_t a73;
  uint64_t v73;
  _QWORD *v74;
  void **v75;
  void **v76;
  void **v77;
  void **v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  _QWORD *v82;
  _QWORD *v83;
  char *v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  _BYTE *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  void *v93;
  id v94;
  void *v95;
  void *v96;
  id v97;
  void *v98;
  void *v99;
  void *v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  id v107;
  void *v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  NSObject *v133;
  os_log_type_t v134;
  __n128 v135;
  uint64_t v136;
  void *v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  unint64_t v141;
  __n128 v142;
  void *v143;
  uint64_t v144;
  unint64_t v145;
  __n128 v146;
  uint64_t v148;
  uint64_t v149;
  _BYTE *v153;
  uint64_t v154;
  _QWORD *v155;
  void **v157;
  void **v158;
  _QWORD *v159;
  _QWORD *v160;
  _QWORD *v161;
  _QWORD *v162;
  _QWORD *v163;
  uint64_t v164;
  char *v165;
  _QWORD *v166;
  _QWORD *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  _BYTE *v171;
  _QWORD *v172;
  _QWORD *v173;
  char *v174;
  void **v175;
  _QWORD *v176;
  _QWORD *v177;
  _QWORD *v178;
  _QWORD *v179;
  _QWORD *v180;
  uint64_t *v181;
  uint64_t *v182;
  uint64_t v183;
  void **v184;
  uint64_t *v185;
  id v187;
  id v189;
  id v191;
  void *v192;
  void *v193;
  id v194;
  void *v195;
  unint64_t v196;
  void *v197;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char v203[24];
  _BYTE v204[24];
  char v205[24];
  char v206[24];
  char v207[24];
  char v208[24];
  char v209[24];
  char v210[24];
  char v211[24];
  char v212[24];
  char v213[24];
  char v214[24];
  char v215[24];
  char v216[24];
  char v217[24];
  char v218[24];
  char v219[24];
  char v220[24];
  char v221[24];
  char v222[24];
  _BYTE v223[24];
  char v224[24];
  char v225[24];
  char v226[24];
  char v227[24];
  char v228[24];
  char v229[24];
  char v230[24];
  char v231[24];
  char v232[24];
  _BYTE v233[24];
  char v234[24];
  char v235[24];
  char v236[24];
  char v237[24];
  char v238[24];
  char v239[24];
  char v240[24];
  char v241[24];
  char v242[32];

  v74 = (_QWORD *)v73;
  v196 = STACK[0x9C0];
  *(_QWORD *)(v73 + 64) = 0;
  v75 = (void **)(v73 + 64);
  *(_OWORD *)(v73 + 48) = 0u;
  v76 = (void **)(v73 + 48);
  *(_OWORD *)(v73 + 32) = 0u;
  v77 = (void **)(v73 + 32);
  *(_BYTE *)(v73 + 72) = 26;
  v153 = (_BYTE *)(v73 + 72);
  *(_QWORD *)(v73 + 80) = 0;
  v78 = (void **)(v73 + 80);
  *(_QWORD *)(v73 + 104) = 0;
  *(_QWORD *)(v73 + 96) = 0;
  v155 = (_QWORD *)(v73 + 96);
  v154 = v73 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_URL;
  v148 = v73 + 40;
  v149 = v73 + 56;
  v79 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v154, 1, 1, v79);
  v80 = (_QWORD *)(v73 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_contactName);
  *v80 = 0;
  v80[1] = 0;
  v81 = (_QWORD *)(v73 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_contactID);
  *v81 = 0;
  v81[1] = 0;
  v82 = (_QWORD *)(v73 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_contactFirstName);
  *v82 = 0;
  v82[1] = 0;
  v83 = (_QWORD *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_workoutName);
  *v83 = 0;
  v83[1] = 0;
  v157 = (void **)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_livePhoto);
  *(_QWORD *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_livePhoto) = 0;
  v158 = (void **)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_videoAsset);
  *(_QWORD *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_videoAsset) = 0;
  v159 = (_QWORD *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_activityName);
  *v159 = 0;
  v159[1] = 0;
  v160 = (_QWORD *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_activityStepCount);
  *v160 = 0;
  v160[1] = 0;
  v161 = (_QWORD *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_title);
  *v161 = 0;
  v161[1] = 0;
  v162 = (_QWORD *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_subtitle);
  *v162 = 0;
  v162[1] = 0;
  v163 = (_QWORD *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_weatherString);
  *v163 = 0;
  v163[1] = 0;
  v84 = (char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_weatherTemperature;
  v164 = (uint64_t)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_weatherTemperature;
  v85 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 56))(v84, 1, 1, v85);
  v86 = (_QWORD *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_calories);
  *v86 = 0;
  v86[1] = 0;
  v87 = v86;
  v165 = (char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_duration;
  *(_QWORD *)v165 = 0;
  v165[8] = 1;
  v166 = (_QWORD *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_distance);
  *v166 = 0;
  v166[1] = 0;
  v167 = (_QWORD *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_averageHeartRate);
  *v167 = 0;
  v167[1] = 0;
  v168 = (uint64_t)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_squareCropRect;
  *(_OWORD *)v168 = 0u;
  *(_OWORD *)(v168 + 16) = 0u;
  *(_BYTE *)(v168 + 32) = 1;
  v169 = (uint64_t)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_landscapeCropRect;
  *(_OWORD *)v169 = 0u;
  *(_OWORD *)(v169 + 16) = 0u;
  *(_BYTE *)(v169 + 32) = 1;
  v170 = (uint64_t)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_portraitCropRect;
  *(_OWORD *)v170 = 0u;
  *(_OWORD *)(v170 + 16) = 0u;
  *(_BYTE *)(v170 + 32) = 1;
  v88 = (char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_assignedAssetTileSize;
  *v88 = 11;
  v171 = v88;
  v172 = (_QWORD *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mapPrimaryField);
  *v172 = 0;
  v172[1] = 0;
  v173 = (_QWORD *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mapSecondaryField);
  *v173 = 0;
  v173[1] = 0;
  v174 = (char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mapLocationCount;
  *(_QWORD *)v174 = 0;
  v174[8] = 1;
  v175 = (void **)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_preComposedView);
  *(_QWORD *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_preComposedView) = 0;
  v176 = (_QWORD *)((char *)v74
                  + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_valenceClassificationAndReflectiveInterval);
  *v176 = 0;
  v176[1] = 0;
  v177 = (_QWORD *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindLabels);
  *v177 = 0;
  v177[1] = 0;
  v178 = (_QWORD *)((char *)v74
                  + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindLabelsShortened);
  *v178 = 0;
  v178[1] = 0;
  v179 = (_QWORD *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindDomains);
  *v179 = 0;
  v179[1] = 0;
  v180 = (_QWORD *)((char *)v74
                  + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindDomainsShortened);
  *v180 = 0;
  v180[1] = 0;
  v181 = (_QWORD *)((char *)v74
                  + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindAssociatedColorsLight);
  *(_QWORD *)((char *)v74
            + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindAssociatedColorsLight) = 0;
  v182 = (_QWORD *)((char *)v74
                  + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindAssociatedColorsDark);
  *(_QWORD *)((char *)v74
            + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindAssociatedColorsDark) = 0;
  v89 = (char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindDate;
  v183 = (uint64_t)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindDate;
  v90 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56))(v89, 1, 1, v90);
  v184 = (void **)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_bgColor);
  *(_QWORD *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_bgColor) = 0;
  v185 = (_QWORD *)((char *)v74
                  + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mediaThirdPartyAppAssociatedColors);
  *(_QWORD *)((char *)v74
            + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mediaThirdPartyAppAssociatedColors) = 0;
  v91 = (char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_parent;
  v92 = swift_weakInit((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_parent, 0);
  UUID.init()(v92);
  v74[2] = a1;
  v74[3] = a2;
  swift_beginAccess(v91, v242, 1, 0);
  swift_weakAssign(v91, a3);
  swift_beginAccess(v77, v241, 1, 0);
  v93 = *v77;
  *v77 = a4;
  v94 = a4;

  swift_beginAccess(v148, v240, 1, 0);
  v95 = (void *)v74[5];
  v74[5] = a5;
  v191 = a5;

  swift_beginAccess(v76, v239, 1, 0);
  v96 = *v76;
  *v76 = a6;
  v97 = a6;

  swift_beginAccess(v149, v238, 1, 0);
  v98 = (void *)v74[7];
  v74[7] = a7;
  v189 = a7;

  swift_beginAccess(v75, v237, 1, 0);
  v99 = *v75;
  *v75 = a8;
  v187 = a8;

  swift_beginAccess(v153, v236, 1, 0);
  *v153 = a9;
  swift_beginAccess(v78, v235, 1, 0);
  v100 = *v78;
  *v78 = a10;
  v101 = a10;

  v74[11] = a11;
  swift_beginAccess(v155, v234, 1, 0);
  v102 = v74[13];
  *v155 = a12;
  v74[13] = a13;
  swift_bridgeObjectRelease(v102);
  swift_beginAccess(v154, v233, 33, 0);
  outlined assign with copy of URL?(a14, v154, &demangling cache variable for type metadata for URL?);
  swift_endAccess(v233);
  *(_QWORD *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mediaType) = a15;
  *((_BYTE *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_isSquare) = a16;
  swift_beginAccess(v80, v233, 1, 0);
  v103 = v80[1];
  *v80 = a17;
  v80[1] = a18;
  swift_bridgeObjectRelease(v103);
  swift_beginAccess(v82, v232, 1, 0);
  v104 = v82[1];
  *v82 = a19;
  v82[1] = a20;
  swift_bridgeObjectRelease(v104);
  swift_beginAccess(v83, v231, 1, 0);
  v105 = v83[1];
  *v83 = a21;
  v83[1] = a22;
  swift_bridgeObjectRelease(v105);
  swift_beginAccess(v157, v230, 1, 0);
  v106 = *v157;
  *v157 = a23;
  v107 = a23;

  swift_beginAccess(v158, v229, 1, 0);
  v108 = *v158;
  *v158 = a24;
  v109 = a24;

  swift_beginAccess(v159, v228, 1, 0);
  v110 = v159[1];
  *v159 = a25;
  v159[1] = a26;
  swift_bridgeObjectRelease(v110);
  swift_beginAccess(v160, v227, 1, 0);
  v111 = v160[1];
  *v160 = a27;
  v160[1] = a28;
  swift_bridgeObjectRelease(v111);
  *(_QWORD *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_motionActivityNumSteps) = a29;
  swift_beginAccess(v161, v226, 1, 0);
  v112 = v161[1];
  *v161 = a30;
  v161[1] = a31;
  swift_bridgeObjectRelease(v112);
  swift_beginAccess(v162, v225, 1, 0);
  v113 = v162[1];
  *v162 = a32;
  v162[1] = a33;
  swift_bridgeObjectRelease(v113);
  swift_beginAccess(v163, v224, 1, 0);
  v114 = v163[1];
  *v163 = a34;
  v163[1] = a35;
  swift_bridgeObjectRelease(v114);
  swift_beginAccess(v164, v223, 33, 0);
  outlined assign with copy of URL?(a36, v164, &demangling cache variable for type metadata for Measurement<NSUnitTemperature>?);
  swift_endAccess(v223);
  swift_beginAccess(v87, v223, 1, 0);
  v115 = v87[1];
  *v87 = a37;
  v87[1] = a38;
  swift_bridgeObjectRelease(v115);
  swift_beginAccess(v165, v222, 1, 0);
  *(_QWORD *)v165 = a39;
  v165[8] = a40 & 1;
  swift_beginAccess(v166, v221, 1, 0);
  v116 = v166[1];
  *v166 = a41;
  v166[1] = a42;
  swift_bridgeObjectRelease(v116);
  swift_beginAccess(v167, v220, 1, 0);
  v117 = v167[1];
  *v167 = a43;
  v167[1] = a44;
  swift_bridgeObjectRelease(v117);
  *((_BYTE *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_shouldAutoPlay) = a45;
  swift_beginAccess(v168, v219, 1, 0);
  outlined init with take of Date?(a46, v168, &demangling cache variable for type metadata for CGRect?);
  swift_beginAccess(v169, v218, 1, 0);
  outlined init with take of Date?(a47, v169, &demangling cache variable for type metadata for CGRect?);
  swift_beginAccess(v170, v217, 1, 0);
  outlined init with take of Date?(a48, v170, &demangling cache variable for type metadata for CGRect?);
  swift_beginAccess(v171, v216, 1, 0);
  *v171 = a49;
  swift_beginAccess(v172, v215, 1, 0);
  v118 = v172[1];
  *v172 = a50;
  v172[1] = a51;
  swift_bridgeObjectRelease(v118);
  swift_beginAccess(v173, v214, 1, 0);
  v119 = v173[1];
  *v173 = a52;
  v173[1] = a53;
  swift_bridgeObjectRelease(v119);
  swift_beginAccess(v174, v213, 1, 0);
  *(_QWORD *)v174 = a54;
  v174[8] = a55 & 1;
  *((_BYTE *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_isLoadingPlaceHolder) = a56;
  swift_beginAccess(v175, v212, 1, 0);
  v120 = *v175;
  *v175 = a57;
  v121 = a57;

  swift_beginAccess(v176, v211, 1, 0);
  v122 = v176[1];
  *v176 = a58;
  v176[1] = a59;
  swift_bridgeObjectRelease(v122);
  *(_QWORD *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_reflectiveInterval) = a60;
  swift_beginAccess(v177, v210, 1, 0);
  v123 = v177[1];
  *v177 = a61;
  v177[1] = a62;
  swift_bridgeObjectRelease(v123);
  swift_beginAccess(v178, v209, 1, 0);
  v124 = v178[1];
  *v178 = a63;
  v178[1] = a64;
  swift_bridgeObjectRelease(v124);
  swift_beginAccess(v179, v208, 1, 0);
  v125 = v179[1];
  *v179 = a65;
  v179[1] = a66;
  swift_bridgeObjectRelease(v125);
  swift_beginAccess(v180, v207, 1, 0);
  v126 = v180[1];
  *v180 = a67;
  v180[1] = a68;
  swift_bridgeObjectRelease(v126);
  swift_beginAccess(v181, v206, 1, 0);
  v127 = *v181;
  *v181 = a69;
  swift_bridgeObjectRelease(v127);
  swift_beginAccess(v182, v205, 1, 0);
  v128 = *v182;
  *v182 = a70;
  swift_bridgeObjectRelease(v128);
  swift_beginAccess(v183, v204, 33, 0);
  outlined assign with copy of URL?(a71, v183, (uint64_t *)&demangling cache variable for type metadata for Date?);
  swift_endAccess(v204);
  swift_beginAccess(v184, v204, 1, 0);
  v129 = *v184;
  *v184 = a72;
  v194 = a72;

  swift_beginAccess(v185, v203, 1, 0);
  v130 = *v185;
  *v185 = a73;
  swift_bridgeObjectRelease(v130);
  *(_QWORD *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_bgColorVariant) = v196;
  if (serverManager._displayMonitor != (FBSDisplayLayoutMonitor *)-1)
    swift_once(&serverManager._displayMonitor, one-time initialization function for memory);
  v131 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v131, (uint64_t)static MOAngelLogger.memory);
  v132 = swift_retain_n(v74, 4);
  v133 = Logger.logObject.getter(v132);
  v134 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v133, v134))
  {
    v197 = v109;
    v136 = swift_slowAlloc(22, -1);
    v195 = v107;
    v137 = v94;
    v138 = swift_slowAlloc(64, -1);
    v202 = v138;
    *(_DWORD *)v136 = 136315394;
    v193 = v101;
    v192 = v97;
    v139 = UUID.uuidString.getter();
    v141 = v140;
    v200 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v139, v140, &v202);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v200, &v201, v136 + 4);
    swift_release_n(v74, 2, v142);
    swift_bridgeObjectRelease(v141);
    *(_WORD *)(v136 + 12) = 2080;
    swift_beginAccess(v74 + 2, &v200, 0, 0);
    v143 = v121;
    v144 = v74[2];
    v145 = v74[3];
    swift_bridgeObjectRetain(v145);
    v199 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v144, v145, &v202);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v199, &v200, v136 + 14);
    swift_release_n(v74, 2, v146);
    swift_bridgeObjectRelease(v145);
    _os_log_impl((void *)&_mh_execute_header, v133, v134, "[MOSuggestionSheetAssetViewModel] init=%s\t id=%s", (uint8_t *)v136, 0x16u);
    swift_arrayDestroy(v138, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v138, -1, -1);
    swift_slowDealloc(v136, -1, -1);

    swift_release(a3);
  }
  else
  {
    swift_release_n(v74, 4, v135);

    swift_release(a3);
  }

  outlined destroy of Any?(a71, (uint64_t *)&demangling cache variable for type metadata for Date?);
  outlined destroy of Any?(a36, &demangling cache variable for type metadata for Measurement<NSUnitTemperature>?);
  outlined destroy of Any?(a14, &demangling cache variable for type metadata for URL?);
  return v74;
}

Swift::Int __swiftcall MOSuggestionSheetAssetViewModel.updateReflectionIndex()()
{
  uint64_t *v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Int result;
  _QWORD *v10;
  _BYTE v11[32];

  v1 = (void *)(*(uint64_t (**)(void))(*v0 + 680))();
  if (!v1)
    return (*(uint64_t (**)(void *))(*v0 + 704))(v1);
  v2 = v1;
  v3 = objc_msgSend(v1, "reflectionPrompts");

  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, &type metadata for String);
  v5 = *(_QWORD *)(v4 + 16);
  v6 = swift_bridgeObjectRelease(v4);
  v7 = (*(uint64_t (**)(uint64_t))(*v0 + 704))(v6);
  v8 = *v0;
  if (v7 >= v5 - 1)
  {
    v1 = (void *)(*(uint64_t (**)(_QWORD))(v8 + 712))(0);
    return (*(uint64_t (**)(void *))(*v0 + 704))(v1);
  }
  result = (*(uint64_t (**)(_BYTE *))(v8 + 720))(v11);
  if (!__OFADD__(*v10, 1))
  {
    ++*v10;
    v1 = (void *)((uint64_t (*)(_BYTE *, _QWORD))result)(v11, 0);
    return (*(uint64_t (**)(void *))(*v0 + 704))(v1);
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall MOSuggestionSheetAssetViewModel.prepareForReuse()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1760))();
  if (v1)
  {
    v2 = v1;
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 560))(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_uuid);
    swift_release(v2);
  }
}

uint64_t MOSuggestionSheetAssetViewModel.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  __n128 v11;
  uint64_t v12;
  unint64_t v13;
  __n128 v14;
  __n128 v15;
  void *v16;
  id *v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  _BYTE v24[24];
  uint64_t v25;
  _BYTE v26[16];
  uint64_t v27[3];

  v1 = v0;
  if (serverManager._displayMonitor != (FBSDisplayLayoutMonitor *)-1)
    swift_once(&serverManager._displayMonitor, one-time initialization function for memory);
  v2 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v2, (uint64_t)static MOAngelLogger.memory);
  v3 = swift_retain_n(v0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc(22, -1);
    v7 = swift_slowAlloc(64, -1);
    v27[0] = v7;
    *(_DWORD *)v6 = 136315394;
    v8 = UUID.uuidString.getter(v7);
    v10 = v9;
    v25 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v9, v27);
    v11 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, v26, v6 + 4);
    swift_release_n(v1, v11);
    swift_bridgeObjectRelease(v10);
    *(_WORD *)(v6 + 12) = 2080;
    swift_beginAccess(v1 + 16, &v23, 0, 0);
    v12 = *(_QWORD *)(v1 + 16);
    v13 = *(_QWORD *)(v1 + 24);
    swift_bridgeObjectRetain(v13);
    v25 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, v27);
    v14 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, v26, v6 + 14);
    swift_release_n(v1, v14);
    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "[MOSuggestionSheetAssetViewModel] de-init=%s\t id=%s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy(v7, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {

    swift_release_n(v0, v15);
  }
  swift_beginAccess(v1 + 32, v27, 1, 0);
  v16 = *(void **)(v1 + 32);
  *(_QWORD *)(v1 + 32) = 0;

  v17 = (id *)(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_livePhoto);
  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_livePhoto, &v25, 1, 0);
  v18 = *v17;
  *v17 = 0;

  swift_beginAccess(v1 + 48, v24, 1, 0);
  v19 = *(void **)(v1 + 48);
  *(_QWORD *)(v1 + 48) = 0;

  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 104));
  outlined destroy of Any?(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_URL, &demangling cache variable for type metadata for URL?);
  swift_bridgeObjectRelease(*(_QWORD *)(v1
                                      + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_contactName
                                      + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v1
                                      + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_contactID
                                      + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v1
                                      + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_contactFirstName
                                      + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v1
                                      + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_workoutName
                                      + 8));

  swift_bridgeObjectRelease(*(_QWORD *)(v1
                                      + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_activityName
                                      + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v1
                                      + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_activityStepCount
                                      + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v1
                                      + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_title
                                      + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v1
                                      + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_subtitle
                                      + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v1
                                      + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_weatherString
                                      + 8));
  outlined destroy of Any?(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_weatherTemperature, &demangling cache variable for type metadata for Measurement<NSUnitTemperature>?);
  swift_bridgeObjectRelease(*(_QWORD *)(v1
                                      + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_calories
                                      + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v1
                                      + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_distance
                                      + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v1
                                      + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_averageHeartRate
                                      + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v1
                                      + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mapPrimaryField
                                      + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v1
                                      + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mapSecondaryField
                                      + 8));

  swift_bridgeObjectRelease(*(_QWORD *)(v1
                                      + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_valenceClassificationAndReflectiveInterval
                                      + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v1
                                      + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindLabels
                                      + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v1
                                      + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindLabelsShortened
                                      + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v1
                                      + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindDomains
                                      + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v1
                                      + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindDomainsShortened
                                      + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v1
                                      + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindAssociatedColorsLight));
  swift_bridgeObjectRelease(*(_QWORD *)(v1
                                      + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindAssociatedColorsDark));
  outlined destroy of Any?(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindDate, (uint64_t *)&demangling cache variable for type metadata for Date?);

  swift_bridgeObjectRelease(*(_QWORD *)(v1
                                      + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mediaThirdPartyAppAssociatedColors));
  swift_weakDestroy(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_parent);
  v20 = v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_uuid;
  v21 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
  return v1;
}

double MOSuggestionSheetAssetViewModel.__deallocating_deinit()
{
  uint64_t v0;
  double result;

  MOSuggestionSheetAssetViewModel.deinit();
  *(_QWORD *)&result = swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52)).n128_u64[0];
  return result;
}

Swift::Int MOSuggestionSheetAssetViewModel.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  v0 = type metadata accessor for UUID(0);
  v1 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v3, v0, v1);
  return Hasher._finalize()();
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance MOSuggestionSheetAssetViewModel()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 1808))();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance MOSuggestionSheetAssetViewModel(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for UUID(0);
  v3 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  return dispatch thunk of Hashable.hash(into:)(a1, v2, v3);
}

uint64_t MOSuggestionSheetAssetViewModel.hash(into:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for UUID(0);
  v3 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  return dispatch thunk of Hashable.hash(into:)(a1, v2, v3);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance MOSuggestionSheetAssetViewModel(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[9];

  Hasher.init(_seed:)(v4, a1);
  v1 = type metadata accessor for UUID(0);
  v2 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v4, v1, v2);
  return Hasher._finalize()();
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance MOSuggestionSheetAssetViewModel(_QWORD *a1, _QWORD *a2)
{
  return static UUID.== infix(_:_:)(*a1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_uuid, *a2 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_uuid);
}

uint64_t static MOSuggestionSheetAssetViewModel.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return static UUID.== infix(_:_:)(a1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_uuid, a2 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_uuid);
}

uint64_t specialized static MOSuggestionSheetAssetViewModel.assetTypeAsPluralString(assetAndMediaType:count:includeCount:)(void *a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  Swift::String v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t countAndFlagsBits;
  id v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  Swift::String v55;
  unint64_t v56;
  uint64_t v58;
  uint64_t v59;
  char v60;
  Swift::String v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  Swift::String v70;
  Swift::String v71;
  uint64_t v72;
  const char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  Swift::String v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  Swift::String v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  Swift::String v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  Swift::String v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char v125;
  Swift::String v126;
  uint64_t v127;
  Swift::String v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  Swift::String v142;
  Swift::String v143;
  char v144;
  Swift::String v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  Swift::String v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char v160;
  Swift::String v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char v168;
  Swift::String v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char v176;
  Swift::String v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char v184;
  Swift::String v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char v192;
  Swift::String v193;
  unint64_t v194;
  id v195;
  uint64_t v196;
  uint64_t v197;

  v196 = a4;
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v195 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v195 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v195 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeWorkout);
  v20 = v19;
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v18 == v21 && v20 == v22)
  {
    v43 = a1;
LABEL_16:
    swift_bridgeObjectRelease_n(v20, 2);
    goto LABEL_17;
  }
  v24 = v22;
  v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, v21, v22, 0);
  v195 = a1;
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v24);
  if ((v25 & 1) != 0)
    goto LABEL_17;
  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeActivityRings);
  v20 = v27;
  v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v30 = v28;
  if (v26 == v29 && v20 == v28)
    goto LABEL_16;
  v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v20, v29, v28, 0);
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v30);
  if ((v31 & 1) != 0)
    goto LABEL_17;
  v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeSystemImage);
  v20 = v33;
  v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v36 = v34;
  if (v32 == v35 && v20 == v34)
    goto LABEL_16;
  v37 = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v20, v35, v34, 0);
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v36);
  if ((v37 & 1) == 0)
  {
    v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeRoutePreview);
    v40 = v39;
    v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v38 == v42 && v40 == v41)
    {
      swift_bridgeObjectRelease_n(v40, 2);
LABEL_29:

      if ((a5 & 1) != 0)
      {
        String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(15, 1);
        v61._countAndFlagsBits = 0;
        v61._object = (void *)0xE000000000000000;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v61);
        v197 = v196;
        String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v197, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
        v45 = 0x74756F6B726F5720;
        v46 = 0xEF736574756F5220;
        goto LABEL_19;
      }
      v50 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v194 = 0x80000001001ACDE0;
      v52 = 0x2074756F6B726F57;
      if (v196 < 2)
        v53 = 0xED00006574756F52;
      else
        v53 = 0xEE00736574756F52;
LABEL_26:
      v55._countAndFlagsBits = 0;
      v55._object = (void *)0xE000000000000000;
      v56 = 0xD00000000000001ALL;
      countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v52, (Swift::String_optional)0, (NSBundle)v50, v55, *(Swift::String *)(&v194 - 1))._countAndFlagsBits;

      return countAndFlagsBits;
    }
    v58 = v38;
    v59 = v41;
    v60 = _stringCompareWithSmolCheck(_:_:expecting:)(v58, v40, v42, v41, 0);
    swift_bridgeObjectRelease(v40);
    swift_bridgeObjectRelease(v59);
    if ((v60 & 1) != 0)
      goto LABEL_29;
    v62 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeWorkoutGroup);
    v64 = v63;
    v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v62 == v66 && v64 == v65)
    {
      swift_bridgeObjectRelease_n(v64, 2);
LABEL_38:

      if ((a5 & 1) != 0)
      {
        String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(18, 1);
        v70._countAndFlagsBits = 0;
        v70._object = (void *)0xE000000000000000;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v70);
        v197 = v196;
        String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v197, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
        v71._object = (void *)0x80000001001A9080;
        v71._countAndFlagsBits = 0xD000000000000012;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v71);
        v72 = String.LocalizationValue.init(stringInterpolation:)(v17);
        static Locale.current.getter(v72);
        v48 = v14;
        return String.init(localized:table:bundle:locale:comment:)(v48, 0xD000000000000012, 0x80000001001A90C0, 0, v11, "asset count description subtitle", 32, 2);
      }
      v50 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      if (v196 < 2)
      {
        v194 = 0x80000001001ACDE0;
        v52 = 0x2074756F6B726F57;
        v53 = 0xEF7972616D6D7553;
        goto LABEL_26;
      }
      v52 = 0xD000000000000011;
      v194 = 0x80000001001ACDE0;
      v73 = "Workout Summaries";
      goto LABEL_42;
    }
    v67 = v62;
    v68 = v65;
    v69 = _stringCompareWithSmolCheck(_:_:expecting:)(v67, v64, v66, v65, 0);
    swift_bridgeObjectRelease(v64);
    swift_bridgeObjectRelease(v68);
    if ((v69 & 1) != 0)
      goto LABEL_38;
    v74 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeContactPhoto);
    v76 = v75;
    v78 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v74 == v78 && v76 == v77)
    {
      swift_bridgeObjectRelease_n(v76, 2);
LABEL_48:

      if ((a5 & 1) == 0)
      {
        v50 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v194 = 0x80000001001ACDE0;
        if (v196 < 2)
          v52 = 0x6E6F73726550;
        else
          v52 = 0x656C706F6550;
        v53 = 0xE600000000000000;
        goto LABEL_26;
      }
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(7, 1);
      v82._countAndFlagsBits = 0;
      v82._object = (void *)0xE000000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v82);
      v197 = v196;
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v197, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
      v45 = 0x656C706F655020;
      goto LABEL_50;
    }
    v79 = v74;
    v80 = v77;
    v81 = _stringCompareWithSmolCheck(_:_:expecting:)(v79, v76, v78, v77, 0);
    swift_bridgeObjectRelease(v76);
    swift_bridgeObjectRelease(v80);
    if ((v81 & 1) != 0)
      goto LABEL_48;
    v83 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeLinkPreview);
    v85 = v84;
    v87 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v83 == v87 && v85 == v86)
    {
      swift_bridgeObjectRelease_n(v85, 2);
LABEL_59:

      if ((a5 & 1) != 0)
      {
        String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(6, 1);
        v91._countAndFlagsBits = 0;
        v91._object = (void *)0xE000000000000000;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v91);
        v197 = v196;
        String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v197, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
        v92 = 1852394528;
LABEL_61:
        v45 = v92 & 0xFFFF0000FFFFFFFFLL | 0x736B00000000;
        v46 = 0xE600000000000000;
        goto LABEL_19;
      }
      v50 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      if (v196 < 2)
      {
        v194 = 0x80000001001ACDE0;
        v52 = 1802398028;
        v53 = 0xE400000000000000;
        goto LABEL_26;
      }
      v194 = 0x80000001001ACDE0;
      v93 = 1802398028;
      goto LABEL_64;
    }
    v88 = v83;
    v89 = v86;
    v90 = _stringCompareWithSmolCheck(_:_:expecting:)(v88, v85, v87, v86, 0);
    swift_bridgeObjectRelease(v85);
    swift_bridgeObjectRelease(v89);
    if ((v90 & 1) != 0)
      goto LABEL_59;
    v94 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypePhoto);
    v96 = v95;
    v98 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    v99 = v97;
    if (v94 == v98 && v96 == v97)
      goto LABEL_67;
    v100 = _stringCompareWithSmolCheck(_:_:expecting:)(v94, v96, v98, v97, 0);
    swift_bridgeObjectRelease(v96);
    swift_bridgeObjectRelease(v99);
    if ((v100 & 1) != 0)
      goto LABEL_70;
    v103 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeLivePhoto);
    v96 = v104;
    v106 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    v107 = v105;
    if (v103 == v106 && v96 == v105)
    {
LABEL_67:
      swift_bridgeObjectRelease_n(v96, 2);
LABEL_70:

      if ((a5 & 1) != 0)
      {
        String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(7, 1);
        v101._countAndFlagsBits = 0;
        v101._object = (void *)0xE000000000000000;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v101);
        v197 = v196;
        String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v197, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
        v45 = 0x736F746F685020;
        goto LABEL_50;
      }
      v50 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      if (v196 >= 2)
      {
        v194 = 0x80000001001ACDE0;
        v102 = 1953458256;
LABEL_74:
        v52 = v102 & 0xFFFF0000FFFFFFFFLL | 0x736F00000000;
        v53 = 0xE600000000000000;
        goto LABEL_26;
      }
      v194 = 0x80000001001ACDE0;
      v114 = 1953458256;
      goto LABEL_82;
    }
    v108 = _stringCompareWithSmolCheck(_:_:expecting:)(v103, v96, v106, v105, 0);
    swift_bridgeObjectRelease(v96);
    swift_bridgeObjectRelease(v107);
    if ((v108 & 1) != 0)
      goto LABEL_70;
    v109 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeMediaCoverArt);
    v111 = v110;
    v113 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v109 == v113 && v111 == v112)
    {
      swift_bridgeObjectRelease_n(v111, 2);
      goto LABEL_84;
    }
    v115 = v109;
    v116 = v112;
    v117 = _stringCompareWithSmolCheck(_:_:expecting:)(v115, v111, v113, v112, 0);
    swift_bridgeObjectRelease(v111);
    swift_bridgeObjectRelease(v116);
    if ((v117 & 1) != 0)
    {
LABEL_84:

      if ((a3 & 1) != 0)
      {
LABEL_88:
        if ((a5 & 1) != 0)
        {
LABEL_89:
          String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(6, 1);
          v118._countAndFlagsBits = 0;
          v118._object = (void *)0xE000000000000000;
          String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v118);
          v197 = v196;
          String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v197, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
          v45 = 0x616964654D20;
          v46 = 0xE600000000000000;
          goto LABEL_19;
        }
LABEL_93:
        v50 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v194 = 0x80000001001ACDE0;
        v52 = 0x616964654DLL;
        v53 = 0xE500000000000000;
      }
      else
      {
        switch(a2)
        {
          case 1:
            if ((a5 & 1) != 0)
            {
              String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(6, 1);
              v142._countAndFlagsBits = 0;
              v142._object = (void *)0xE000000000000000;
              String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v142);
              v197 = v196;
              String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v197, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
              v45 = 0x73676E6F5320;
              v46 = 0xE600000000000000;
              goto LABEL_19;
            }
            v50 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
            if (v196 >= 2)
            {
              v194 = 0x80000001001ACDE0;
              v93 = 1735290707;
              goto LABEL_64;
            }
            v194 = 0x80000001001ACDE0;
            v52 = 1735290707;
            v53 = 0xE400000000000000;
            goto LABEL_26;
          case 2:
          case 5:
            if ((a5 & 1) != 0)
            {
              String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(9, 1);
              v128._countAndFlagsBits = 0;
              v128._object = (void *)0xE000000000000000;
              String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v128);
              v197 = v196;
              String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v197, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
              v45 = 0x74736163646F5020;
              v46 = 0xE900000000000073;
              goto LABEL_19;
            }
            v50 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
            if (v196 >= 2)
            {
              v194 = 0x80000001001ACDE0;
              v51 = 0x736163646F50;
              goto LABEL_23;
            }
            v194 = 0x80000001001ACDE0;
            v54 = 0x736163646F50;
            goto LABEL_25;
          case 4:
            if ((a5 & 1) != 0)
            {
              String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(7, 1);
              v143._countAndFlagsBits = 0;
              v143._object = (void *)0xE000000000000000;
              String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v143);
              v197 = v196;
              String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v197, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
              v45 = 0x736D75626C4120;
              goto LABEL_50;
            }
            v50 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
            v194 = 0x80000001001ACDE0;
            if (v196 < 2)
            {
              v52 = 0x6D75626C41;
              v53 = 0xE500000000000000;
            }
            else
            {
              v52 = 0x736D75626C41;
              v53 = 0xE600000000000000;
            }
            break;
          case 6:
          case 7:
          case 8:
            if ((a5 & 1) == 0)
              goto LABEL_93;
            goto LABEL_89;
          default:
            goto LABEL_88;
        }
      }
      goto LABEL_26;
    }
    v119 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeMultiPinMap);
    v121 = v120;
    v123 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    v124 = v122;
    if (v119 == v123 && v121 == v122)
      goto LABEL_92;
    v125 = _stringCompareWithSmolCheck(_:_:expecting:)(v119, v121, v123, v122, 0);
    swift_bridgeObjectRelease(v121);
    swift_bridgeObjectRelease(v124);
    if ((v125 & 1) != 0)
      goto LABEL_95;
    v129 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeLocationPreview);
    v121 = v130;
    v132 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    v133 = v131;
    if (v129 == v132 && v121 == v131)
    {
LABEL_92:
      swift_bridgeObjectRelease_n(v121, 2);
    }
    else
    {
      v134 = _stringCompareWithSmolCheck(_:_:expecting:)(v129, v121, v132, v131, 0);
      swift_bridgeObjectRelease(v121);
      swift_bridgeObjectRelease(v133);
      if ((v134 & 1) == 0)
      {
        v135 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeGenericMap);
        v137 = v136;
        v139 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
        v140 = v138;
        if (v135 == v139 && v137 == v138)
        {
          swift_bridgeObjectRelease_n(v137, 2);
        }
        else
        {
          v144 = _stringCompareWithSmolCheck(_:_:expecting:)(v135, v137, v139, v138, 0);
          swift_bridgeObjectRelease(v137);
          swift_bridgeObjectRelease(v140);
          if ((v144 & 1) == 0)
          {
            v146 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeVideo);
            v148 = v147;
            v150 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
            v151 = v149;
            if (v146 == v150 && v148 == v149)
            {
              swift_bridgeObjectRelease_n(v148, 2);
            }
            else
            {
              v152 = _stringCompareWithSmolCheck(_:_:expecting:)(v146, v148, v150, v149, 0);
              swift_bridgeObjectRelease(v148);
              swift_bridgeObjectRelease(v151);
              if ((v152 & 1) == 0)
              {
                v154 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeTrend);
                v156 = v155;
                v158 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
                v159 = v157;
                if (v154 == v158 && v156 == v157)
                {
                  swift_bridgeObjectRelease_n(v156, 2);
                }
                else
                {
                  v160 = _stringCompareWithSmolCheck(_:_:expecting:)(v154, v156, v158, v157, 0);
                  swift_bridgeObjectRelease(v156);
                  swift_bridgeObjectRelease(v159);
                  if ((v160 & 1) == 0)
                  {
                    v162 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeMotionActivity);
                    v164 = v163;
                    v166 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
                    v167 = v165;
                    if (v162 == v166 && v164 == v165)
                    {
                      swift_bridgeObjectRelease_n(v164, 2);
                    }
                    else
                    {
                      v168 = _stringCompareWithSmolCheck(_:_:expecting:)(v162, v164, v166, v165, 0);
                      swift_bridgeObjectRelease(v164);
                      swift_bridgeObjectRelease(v167);
                      if ((v168 & 1) == 0)
                      {
                        v170 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeAppIcon);
                        v172 = v171;
                        v174 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
                        v175 = v173;
                        if (v170 == v174 && v172 == v173)
                        {
                          swift_bridgeObjectRelease_n(v172, 2);
                        }
                        else
                        {
                          v176 = _stringCompareWithSmolCheck(_:_:expecting:)(v170, v172, v174, v173, 0);
                          swift_bridgeObjectRelease(v172);
                          swift_bridgeObjectRelease(v175);
                          if ((v176 & 1) == 0)
                          {
                            v178 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeReflectionPrompt);
                            v180 = v179;
                            v182 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
                            v183 = v181;
                            if (v178 == v182 && v180 == v181)
                            {
                              swift_bridgeObjectRelease_n(v180, 2);
                            }
                            else
                            {
                              v184 = _stringCompareWithSmolCheck(_:_:expecting:)(v178, v180, v182, v181, 0);
                              swift_bridgeObjectRelease(v180);
                              swift_bridgeObjectRelease(v183);
                              if ((v184 & 1) == 0)
                              {
                                v186 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeStateOfMindAsset);
                                v188 = v187;
                                v190 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
                                v191 = v189;
                                if (v186 == v190 && v188 == v189)
                                {

                                  swift_bridgeObjectRelease_n(v188, 2);
                                }
                                else
                                {
                                  v192 = _stringCompareWithSmolCheck(_:_:expecting:)(v186, v188, v190, v189, 0);

                                  swift_bridgeObjectRelease(v188);
                                  swift_bridgeObjectRelease(v191);
                                  if ((v192 & 1) == 0)
                                    return 0;
                                }
                                if ((a5 & 1) != 0)
                                {
                                  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(19, 1);
                                  v193._countAndFlagsBits = 0;
                                  v193._object = (void *)0xE000000000000000;
                                  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v193);
                                  v197 = v196;
                                  String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v197, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
                                  v45 = 0xD000000000000013;
                                  v46 = 0x80000001001ACE40;
                                  goto LABEL_19;
                                }
                                v50 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
                                if (v196 < 2)
                                {
                                  v52 = 0xD000000000000011;
                                  v194 = 0x80000001001ACDE0;
                                  v73 = "State of Mind Log";
                                }
                                else
                                {
                                  v52 = 0xD000000000000012;
                                  v194 = 0x80000001001ACDE0;
                                  v73 = "State of Mind Logs";
                                }
LABEL_42:
                                v53 = (unint64_t)(v73 - 32) | 0x8000000000000000;
                                goto LABEL_26;
                              }
                            }

                            if ((a5 & 1) != 0)
                            {
                              String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(12, 1);
                              v185._countAndFlagsBits = 0;
                              v185._object = (void *)0xE000000000000000;
                              String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v185);
                              v197 = v196;
                              String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v197, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
                              v45 = 0x7463656C66655220;
                              v46 = 0xEC000000736E6F69;
                              goto LABEL_19;
                            }
                            v50 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
                            if (v196 < 2)
                            {
                              v53 = 0xEA00000000006E6FLL;
                              v194 = 0x80000001001ACDE0;
                              v52 = 0x697463656C666552;
                            }
                            else
                            {
                              v194 = 0x80000001001ACDE0;
                              v52 = 0x697463656C666552;
                              v53 = 0xEB00000000736E6FLL;
                            }
                            goto LABEL_26;
                          }
                        }

                        if ((a5 & 1) != 0)
                        {
                          String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(10, 1);
                          v177._countAndFlagsBits = 0;
                          v177._object = (void *)0xE000000000000000;
                          String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v177);
                          v197 = v196;
                          String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v197, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
                          v45 = 0x6F63492070704120;
                          goto LABEL_97;
                        }
                        v50 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
                        if (v196 >= 2)
                        {
                          v194 = 0x80000001001ACDE0;
                          v127 = 0x634920707041;
                          goto LABEL_100;
                        }
                        v194 = 0x80000001001ACDE0;
                        v141 = 0x634920707041;
LABEL_110:
                        v52 = v141 & 0xFFFFFFFFFFFFLL | 0x6E6F000000000000;
                        v53 = 0xE800000000000000;
                        goto LABEL_26;
                      }
                    }

                    if ((a5 & 1) != 0)
                    {
                      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(6, 1);
                      v169._countAndFlagsBits = 0;
                      v169._object = (void *)0xE000000000000000;
                      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v169);
                      v197 = v196;
                      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v197, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
                      v92 = 1818318624;
                      goto LABEL_61;
                    }
                    v50 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
                    if (v196 < 2)
                    {
                      v194 = 0x80000001001ACDE0;
                      v52 = 1802264919;
                      v53 = 0xE400000000000000;
                      goto LABEL_26;
                    }
                    v194 = 0x80000001001ACDE0;
                    v93 = 1802264919;
LABEL_64:
                    v52 = v93 & 0xFFFF0000FFFFFFFFLL | 0x7300000000;
                    v53 = 0xE500000000000000;
                    goto LABEL_26;
                  }
                }

                if ((a5 & 1) == 0)
                {
                  v50 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
                  v194 = 0x80000001001ACDE0;
                  if (v196 < 2)
                  {
                    v52 = 0x646E657254;
                    v53 = 0xE500000000000000;
                  }
                  else
                  {
                    v52 = 0x73646E657254;
                    v53 = 0xE600000000000000;
                  }
                  goto LABEL_26;
                }
                String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(7, 1);
                v161._countAndFlagsBits = 0;
                v161._object = (void *)0xE000000000000000;
                String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v161);
                v197 = v196;
                String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v197, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
                v45 = 0x73646E65725420;
LABEL_50:
                v46 = 0xE700000000000000;
                goto LABEL_19;
              }
            }

            if ((a5 & 1) != 0)
            {
              String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(7, 1);
              v153._countAndFlagsBits = 0;
              v153._object = (void *)0xE000000000000000;
              String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v153);
              v197 = v196;
              String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v197, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
              v45 = 0x736F6564695620;
              goto LABEL_50;
            }
            v50 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
            if (v196 >= 2)
            {
              v194 = 0x80000001001ACDE0;
              v102 = 1701079382;
              goto LABEL_74;
            }
            v194 = 0x80000001001ACDE0;
            v114 = 1701079382;
LABEL_82:
            v52 = v114 & 0xFFFF0000FFFFFFFFLL | 0x6F00000000;
            v53 = 0xE500000000000000;
            goto LABEL_26;
          }
        }

        if ((a5 & 1) != 0)
        {
          String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(14, 1);
          v145._countAndFlagsBits = 0;
          v145._object = (void *)0xE000000000000000;
          String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v145);
          v197 = v196;
          String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v197, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
          v45 = 0x676E696B6C615720;
          v46 = 0xEE00736165724120;
          goto LABEL_19;
        }
        v50 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v194 = 0x80000001001ACDE0;
        v52 = 0x20676E696B6C6157;
        if (v196 < 2)
          v53 = 0xEC00000061657241;
        else
          v53 = 0xED00007361657241;
        goto LABEL_26;
      }
    }
LABEL_95:

    if ((a5 & 1) != 0)
    {
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(10, 1);
      v126._countAndFlagsBits = 0;
      v126._object = (void *)0xE000000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v126);
      v197 = v196;
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v197, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
      v45 = 0x6F697461636F4C20;
LABEL_97:
      v46 = 0xEA0000000000736ELL;
      goto LABEL_19;
    }
    v50 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    if (v196 >= 2)
    {
      v194 = 0x80000001001ACDE0;
      v127 = 0x697461636F4CLL;
LABEL_100:
      v52 = v127 & 0xFFFFFFFFFFFFLL | 0x6E6F000000000000;
      v53 = 0xE900000000000073;
      goto LABEL_26;
    }
    v194 = 0x80000001001ACDE0;
    v141 = 0x697461636F4CLL;
    goto LABEL_110;
  }
LABEL_17:

  if ((a5 & 1) == 0)
  {
    v50 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    if (v196 < 2)
    {
      v194 = 0x80000001001ACDE0;
      v54 = 0x756F6B726F57;
LABEL_25:
      v52 = v54 & 0xFFFFFFFFFFFFLL | 0x74000000000000;
      v53 = 0xE700000000000000;
    }
    else
    {
      v194 = 0x80000001001ACDE0;
      v51 = 0x756F6B726F57;
LABEL_23:
      v52 = v51 & 0xFFFFFFFFFFFFLL | 0x7374000000000000;
      v53 = 0xE800000000000000;
    }
    goto LABEL_26;
  }
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(9, 1);
  v44._countAndFlagsBits = 0;
  v44._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v44);
  v197 = v196;
  String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v197, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
  v45 = 0x74756F6B726F5720;
  v46 = 0xE900000000000073;
LABEL_19:
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v45);
  v47 = String.LocalizationValue.init(stringInterpolation:)(v17);
  static Locale.current.getter(v47);
  v48 = v14;
  return String.init(localized:table:bundle:locale:comment:)(v48, 0xD000000000000012, 0x80000001001A90C0, 0, v11, "asset count description subtitle", 32, 2);
}

uint64_t outlined assign with copy of URL?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t base witness table accessor for Equatable in MOSuggestionSheetAssetViewModel()
{
  return lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes(&lazy protocol witness table cache variable for type MOSuggestionSheetAssetViewModel and conformance MOSuggestionSheetAssetViewModel, type metadata accessor for MOSuggestionSheetAssetViewModel, (uint64_t)&protocol conformance descriptor for MOSuggestionSheetAssetViewModel);
}

uint64_t type metadata accessor for MOSuggestionSheetAssetViewModel(uint64_t a1)
{
  return type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(a1, (uint64_t *)&type metadata singleton initialization cache for MOSuggestionSheetAssetViewModel, (uint64_t)&nominal type descriptor for MOSuggestionSheetAssetViewModel);
}

uint64_t sub_10010F240@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 512))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_10010F270(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 520);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t sub_10010F2B4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 536))();
  *a2 = result;
  return result;
}

uint64_t sub_10010F2E4(id *a1, uint64_t a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))(**(_QWORD **)a2 + 544);
  v4 = *a1;
  return v3(v2);
}

uint64_t sub_10010F320@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 560))();
  *a2 = result;
  return result;
}

uint64_t sub_10010F350(id *a1, uint64_t a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))(**(_QWORD **)a2 + 568);
  v4 = *a1;
  return v3(v2);
}

uint64_t sub_10010F38C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 584))();
  *a2 = result;
  return result;
}

uint64_t sub_10010F3BC(id *a1, uint64_t a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))(**(_QWORD **)a2 + 592);
  v4 = *a1;
  return v3(v2);
}

uint64_t sub_10010F3F8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 608))();
  *a2 = result;
  return result;
}

uint64_t sub_10010F428(id *a1, uint64_t a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))(**(_QWORD **)a2 + 616);
  v4 = *a1;
  return v3(v2);
}

uint64_t sub_10010F464@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 632))();
  *a2 = result;
  return result;
}

uint64_t sub_10010F494(id *a1, uint64_t a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))(**(_QWORD **)a2 + 640);
  v4 = *a1;
  return v3(v2);
}

uint64_t sub_10010F4D0@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 656))();
  *a2 = result;
  return result;
}

uint64_t sub_10010F500(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 664))(*a1);
}

uint64_t sub_10010F52C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 680))();
  *a2 = result;
  return result;
}

uint64_t sub_10010F55C(id *a1, uint64_t a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))(**(_QWORD **)a2 + 688);
  v4 = *a1;
  return v3(v2);
}

uint64_t sub_10010F598@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 704))();
  *a2 = result;
  return result;
}

uint64_t sub_10010F5C8(_QWORD *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 712))(*a1);
}

uint64_t sub_10010F5F4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 728))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_10010F624(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 736);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t sub_10010F668(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 752))();
}

uint64_t sub_10010F694@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 776))();
  *a2 = result;
  return result;
}

uint64_t sub_10010F6C4(_QWORD *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 784))(*a1);
}

uint64_t sub_10010F6F0@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 800))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_10010F724(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 808))(*a1);
}

uint64_t sub_10010F750@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 824))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_10010F780(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 832);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t sub_10010F7C4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 848))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_10010F7F4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 856);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t sub_10010F838@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 872))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_10010F868(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 880);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t sub_10010F8AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 896))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_10010F8DC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 904);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t sub_10010F920@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 920))();
  *a2 = result;
  return result;
}

uint64_t sub_10010F950(id *a1, uint64_t a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))(**(_QWORD **)a2 + 928);
  v4 = *a1;
  return v3(v2);
}

uint64_t sub_10010F98C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 944))();
  *a2 = result;
  return result;
}

uint64_t sub_10010F9BC(id *a1, uint64_t a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))(**(_QWORD **)a2 + 952);
  v4 = *a1;
  return v3(v2);
}

uint64_t sub_10010F9F8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 968))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_10010FA28(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 976);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t sub_10010FA6C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 992))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_10010FA9C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 1000);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t sub_10010FAE0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 1016))();
  *a2 = result;
  return result;
}

uint64_t sub_10010FB10(_QWORD *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 1024))(*a1);
}

uint64_t sub_10010FB3C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 1040))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_10010FB6C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 1048);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t sub_10010FBB0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 1064))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_10010FBE0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 1072);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t sub_10010FC24@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 1088))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_10010FC54(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 1096);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t sub_10010FC98(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 1112))();
}

uint64_t sub_10010FCC4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 1136))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_10010FCF4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 1144);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t sub_10010FD38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 1160))();
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_10010FD70(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(**(_QWORD **)a2 + 1168))(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_10010FDA8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 1184))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_10010FDD8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 1192);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t sub_10010FE1C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 1208))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_10010FE4C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 1216);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t sub_10010FE90@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 1232))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_10010FEC4(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 1240))(*a1);
}

uint64_t sub_10010FEF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD v4[5];

  (*(void (**)(_QWORD *__return_ptr))(**(_QWORD **)a1 + 1256))(v4);
  return outlined init with take of Date?((uint64_t)v4, a2, &demangling cache variable for type metadata for CGRect?);
}

uint64_t sub_10010FF3C(uint64_t a1, uint64_t a2)
{
  _BYTE v4[40];

  outlined init with take of Date?(a1, (uint64_t)v4, &demangling cache variable for type metadata for CGRect?);
  return (*(uint64_t (**)(_BYTE *))(**(_QWORD **)a2 + 1264))(v4);
}

uint64_t sub_10010FF84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD v4[5];

  (*(void (**)(_QWORD *__return_ptr))(**(_QWORD **)a1 + 1280))(v4);
  return outlined init with take of Date?((uint64_t)v4, a2, &demangling cache variable for type metadata for CGRect?);
}

uint64_t sub_10010FFD0(uint64_t a1, uint64_t a2)
{
  _BYTE v4[40];

  outlined init with take of Date?(a1, (uint64_t)v4, &demangling cache variable for type metadata for CGRect?);
  return (*(uint64_t (**)(_BYTE *))(**(_QWORD **)a2 + 1288))(v4);
}

uint64_t sub_100110018@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD v4[5];

  (*(void (**)(_QWORD *__return_ptr))(**(_QWORD **)a1 + 1304))(v4);
  return outlined init with take of Date?((uint64_t)v4, a2, &demangling cache variable for type metadata for CGRect?);
}

uint64_t sub_100110064(uint64_t a1, uint64_t a2)
{
  _BYTE v4[40];

  outlined init with take of Date?(a1, (uint64_t)v4, &demangling cache variable for type metadata for CGRect?);
  return (*(uint64_t (**)(_BYTE *))(**(_QWORD **)a2 + 1312))(v4);
}

uint64_t sub_1001100AC@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 1328))();
  *a2 = result;
  return result;
}

uint64_t sub_1001100DC(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 1336))(*a1);
}

uint64_t sub_100110108@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 1352))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100110138(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 1360);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t sub_10011017C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 1376))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1001101AC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 1384);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t sub_1001101F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 1400))();
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_100110228(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(**(_QWORD **)a2 + 1408))(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_100110260@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 1424))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_100110294(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 1432))(*a1);
}

uint64_t sub_1001102C0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 1448))();
  *a2 = result;
  return result;
}

uint64_t sub_1001102F0(id *a1, uint64_t a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))(**(_QWORD **)a2 + 1456);
  v4 = *a1;
  return v3(v2);
}

uint64_t sub_10011032C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 1472))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_10011035C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 1480);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t sub_1001103A0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 1496))();
  *a2 = result;
  return result;
}

uint64_t sub_1001103D0(_QWORD *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 1504))(*a1);
}

uint64_t sub_1001103FC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 1520))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_10011042C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 1528);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t sub_100110470@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 1544))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1001104A0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 1552);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t sub_1001104E4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 1568))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100110514(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 1576);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t sub_100110558@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 1592))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100110588(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 1600);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t sub_1001105CC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 1616))();
  *a2 = result;
  return result;
}

uint64_t sub_1001105FC(_QWORD *a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 1624);
  v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

uint64_t sub_10011062C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 1640))();
  *a2 = result;
  return result;
}

uint64_t sub_10011065C(_QWORD *a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 1648);
  v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

uint64_t sub_10011068C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 1664))();
}

uint64_t sub_1001106B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 1688))();
  *a2 = result;
  return result;
}

uint64_t sub_1001106E8(id *a1, uint64_t a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))(**(_QWORD **)a2 + 1696);
  v4 = *a1;
  return v3(v2);
}

uint64_t sub_100110724@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 1712))();
  *a2 = result;
  return result;
}

uint64_t sub_100110754(_QWORD *a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 1720);
  v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

uint64_t sub_100110784@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 1736))();
  *a2 = result;
  return result;
}

uint64_t sub_1001107B4(_QWORD *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 1744))(*a1);
}

uint64_t sub_1001107E0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 1760))();
  *a2 = result;
  return result;
}

uint64_t sub_100110810(_QWORD *a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 1768);
  v3 = swift_retain(*a1);
  return v2(v3);
}

uint64_t *initializeBufferWithCopyOfBuffer for MOSuggestionSheetAssetDateRange(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v14);
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = *(int *)(a3 + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v11, (uint64_t *)v12, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for MOSuggestionSheetAssetDateRange(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(uint64_t, uint64_t);

  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(a1, v4);
  v6 = a1 + *(int *)(a2 + 20);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v4);
  return result;
}

char *initializeWithCopy for MOSuggestionSheetAssetDateRange(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for MOSuggestionSheetAssetDateRange(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

char *initializeWithTake for MOSuggestionSheetAssetDateRange(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for MOSuggestionSheetAssetDateRange(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for MOSuggestionSheetAssetDateRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100110DA0);
}

uint64_t sub_100110DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for MOSuggestionSheetAssetDateRange(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100110E24);
}

uint64_t sub_100110E24(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void type metadata completion function for MOSuggestionSheetAssetDateRange(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  v2 = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    type metadata accessor for Date?(319, (unint64_t *)&lazy cache variable for type metadata for Date?, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v6, a1 + 16);
    }
  }
}

uint64_t ObjC metadata update function for MOSuggestionSheetAssetViewModel()
{
  return type metadata accessor for MOSuggestionSheetAssetViewModel(0);
}

void type metadata completion function for MOSuggestionSheetAssetViewModel(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[54];

  v10[0] = &unk_1001A2700;
  v10[2] = &unk_1001A2718;
  v10[3] = &unk_1001A2718;
  v10[4] = &unk_1001A2718;
  v10[5] = &unk_1001A2718;
  v10[6] = &unk_1001A2730;
  v10[7] = &unk_1001A2718;
  v10[8] = (char *)&value witness table for Builtin.Int64 + 64;
  v10[9] = &unk_1001A2748;
  type metadata accessor for Date?(319, (unint64_t *)&lazy cache variable for type metadata for URL?, (uint64_t (*)(uint64_t))&type metadata accessor for URL);
  if (v3 <= 0x3F)
  {
    v10[10] = *(_QWORD *)(v2 - 8) + 64;
    v10[11] = (char *)&value witness table for Builtin.Int64 + 64;
    v10[12] = &unk_1001A2760;
    v10[13] = &unk_1001A2748;
    v10[14] = &unk_1001A2748;
    v10[15] = &unk_1001A2748;
    v10[16] = &unk_1001A2748;
    v10[17] = &unk_1001A2718;
    v10[18] = &unk_1001A2718;
    v10[19] = &unk_1001A2748;
    v10[20] = &unk_1001A2748;
    v10[21] = (char *)&value witness table for Builtin.Int64 + 64;
    v10[22] = &unk_1001A2748;
    v10[23] = &unk_1001A2748;
    v10[24] = &unk_1001A2748;
    type metadata accessor for Measurement<NSUnitTemperature>?(319);
    if (v5 <= 0x3F)
    {
      v10[25] = *(_QWORD *)(v4 - 8) + 64;
      v10[26] = &unk_1001A2748;
      v10[27] = &unk_1001A2778;
      v10[28] = &unk_1001A2748;
      v10[29] = &unk_1001A2748;
      v10[30] = &unk_1001A2760;
      v10[31] = &unk_1001A2790;
      v10[32] = &unk_1001A2790;
      v10[33] = &unk_1001A2790;
      v10[34] = &unk_1001A27A8;
      v10[35] = &unk_1001A2748;
      v10[36] = &unk_1001A2748;
      v10[37] = &unk_1001A2778;
      v10[38] = &unk_1001A2760;
      v10[39] = &unk_1001A2718;
      v10[40] = &unk_1001A2748;
      v10[41] = (char *)&value witness table for Builtin.Int64 + 64;
      v10[42] = &unk_1001A2748;
      v10[43] = &unk_1001A2748;
      v10[44] = &unk_1001A2748;
      v10[45] = &unk_1001A2748;
      v10[46] = &unk_1001A2718;
      v10[47] = &unk_1001A2718;
      type metadata accessor for Date?(319, (unint64_t *)&lazy cache variable for type metadata for Date?, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
      if (v7 <= 0x3F)
      {
        v10[48] = *(_QWORD *)(v6 - 8) + 64;
        v10[49] = &unk_1001A2718;
        v10[50] = &unk_1001A2718;
        v10[51] = (char *)&value witness table for Builtin.Int64 + 64;
        v10[52] = &unk_1001A27C0;
        v8 = type metadata accessor for UUID(319);
        if (v9 <= 0x3F)
        {
          v10[53] = *(_QWORD *)(v8 - 8) + 64;
          swift_updateClassMetadata2(a1, 256, 54, v10, a1 + 80);
        }
      }
    }
  }
}

void type metadata accessor for Date?(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = a3(255);
    v6 = type metadata accessor for Optional(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void type metadata accessor for Measurement<NSUnitTemperature>?(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!lazy cache variable for type metadata for Measurement<NSUnitTemperature>?)
  {
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&lazy cache variable for type metadata for Measurement<NSUnitTemperature>?);
  }
}

const char *MOSuggestionInterstitialCarouselCheckMarkView.Constants.SELECTED_SYMBOL.unsafeMutableAddressor()
{
  return "checkmark";
}

uint64_t static MOSuggestionInterstitialCarouselCheckMarkView.Constants.SELECTED_SYMBOL.getter()
{
  return 0x72616D6B63656863;
}

id one-time initialization function for SYMBOL_TINT_COLOR()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  static MOSuggestionInterstitialCarouselCheckMarkView.Constants.SYMBOL_TINT_COLOR = (uint64_t)result;
  return result;
}

uint64_t *MOSuggestionInterstitialCarouselCheckMarkView.Constants.SYMBOL_TINT_COLOR.unsafeMutableAddressor()
{
  if (one-time initialization token for SYMBOL_TINT_COLOR != -1)
    swift_once(&one-time initialization token for SYMBOL_TINT_COLOR, one-time initialization function for SYMBOL_TINT_COLOR);
  return &static MOSuggestionInterstitialCarouselCheckMarkView.Constants.SYMBOL_TINT_COLOR;
}

id static MOSuggestionInterstitialCarouselCheckMarkView.Constants.SYMBOL_TINT_COLOR.getter()
{
  return default argument 2 of MOSuggestionWorkoutIconGlyphView.init(image:glyphBackgroundColor:glyphTintColor:)(&one-time initialization token for SYMBOL_TINT_COLOR, (id *)&static MOSuggestionInterstitialCarouselCheckMarkView.Constants.SYMBOL_TINT_COLOR);
}

id one-time initialization function for BORDER_COLOR()
{
  id result;

  if (one-time initialization token for SYMBOL_TINT_COLOR != -1)
    swift_once(&one-time initialization token for SYMBOL_TINT_COLOR, one-time initialization function for SYMBOL_TINT_COLOR);
  result = objc_msgSend((id)static MOSuggestionInterstitialCarouselCheckMarkView.Constants.SYMBOL_TINT_COLOR, "CGColor");
  static MOSuggestionInterstitialCarouselCheckMarkView.Constants.BORDER_COLOR = (uint64_t)result;
  return result;
}

uint64_t *MOSuggestionInterstitialCarouselCheckMarkView.Constants.BORDER_COLOR.unsafeMutableAddressor()
{
  if (one-time initialization token for BORDER_COLOR != -1)
    swift_once(&one-time initialization token for BORDER_COLOR, one-time initialization function for BORDER_COLOR);
  return &static MOSuggestionInterstitialCarouselCheckMarkView.Constants.BORDER_COLOR;
}

id static MOSuggestionInterstitialCarouselCheckMarkView.Constants.BORDER_COLOR.getter()
{
  return default argument 2 of MOSuggestionWorkoutIconGlyphView.init(image:glyphBackgroundColor:glyphTintColor:)(&one-time initialization token for BORDER_COLOR, (id *)&static MOSuggestionInterstitialCarouselCheckMarkView.Constants.BORDER_COLOR);
}

void *MOSuggestionInterstitialCarouselCheckMarkView.Constants.MARGIN.unsafeMutableAddressor()
{
  return &static MOSuggestionInterstitialCarouselCheckMarkView.Constants.MARGIN;
}

double static MOSuggestionInterstitialCarouselCheckMarkView.Constants.MARGIN.getter()
{
  return 11.0;
}

uint64_t MOSuggestionInterstitialCarouselCheckMarkView.isSelected.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC16MomentsUIService45MOSuggestionInterstitialCarouselCheckMarkView_isSelected);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService45MOSuggestionInterstitialCarouselCheckMarkView_isSelected, v3, 0, 0);
  return *v1;
}

uint64_t MOSuggestionInterstitialCarouselCheckMarkView.isSelected.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC16MomentsUIService45MOSuggestionInterstitialCarouselCheckMarkView_isSelected);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*MOSuggestionInterstitialCarouselCheckMarkView.isSelected.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService45MOSuggestionInterstitialCarouselCheckMarkView_isSelected, a1, 33, 0);
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

id MOSuggestionInterstitialCarouselCheckMarkView.keyColor.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MomentsUIService45MOSuggestionInterstitialCarouselCheckMarkView_keyColor);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService45MOSuggestionInterstitialCarouselCheckMarkView_keyColor, v3, 0, 0);
  return *v1;
}

void MOSuggestionInterstitialCarouselCheckMarkView.keyColor.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC16MomentsUIService45MOSuggestionInterstitialCarouselCheckMarkView_keyColor);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*MOSuggestionInterstitialCarouselCheckMarkView.keyColor.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService45MOSuggestionInterstitialCarouselCheckMarkView_keyColor, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id MOSuggestionInterstitialCarouselCheckMarkView.accessoryButton.getter()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC16MomentsUIService45MOSuggestionInterstitialCarouselCheckMarkView_accessoryButton));
}

id MOSuggestionInterstitialCarouselCheckMarkView.init(frame:)(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  objc_super v16;

  v4[OBJC_IVAR____TtC16MomentsUIService45MOSuggestionInterstitialCarouselCheckMarkView_isSelected] = 2;
  v9 = OBJC_IVAR____TtC16MomentsUIService45MOSuggestionInterstitialCarouselCheckMarkView_keyColor;
  v10 = (void *)objc_opt_self(UIColor);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "systemBlueColor");
  v12 = OBJC_IVAR____TtC16MomentsUIService45MOSuggestionInterstitialCarouselCheckMarkView_accessoryButton;
  v13 = type metadata accessor for MOSuggestionSheetOversizedBoundsButton();
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v13)), "init");

  v16.receiver = v11;
  v16.super_class = (Class)type metadata accessor for MOSuggestionInterstitialCarouselCheckMarkView();
  v14 = objc_msgSendSuper2(&v16, "initWithFrame:", a1, a2, a3, a4);
  MOSuggestionInterstitialCarouselCheckMarkView.addButton()();

  return v14;
}

uint64_t type metadata accessor for MOSuggestionInterstitialCarouselCheckMarkView()
{
  return objc_opt_self(_TtC16MomentsUIService45MOSuggestionInterstitialCarouselCheckMarkView);
}

void MOSuggestionInterstitialCarouselCheckMarkView.addButton()()
{
  _QWORD *v0;
  char v1;
  id v2;
  id v3;
  id v4;
  double v5;
  id v6;
  id v7;
  id v8;
  id v9;
  double v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  CGFloat v15;
  id v16;
  id v17;
  CGFloat v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  NSString v40;
  id v41;
  CGRect v42;
  CGRect v43;

  v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x68))();
  (*(void (**)(_QWORD))((swift_isaMask & *v0) + 0xA0))((v1 == 2) | (v1 & 1));
  v2 = objc_msgSend(v0, "layer");
  if (one-time initialization token for borderColor != -1)
    swift_once(&one-time initialization token for borderColor, one-time initialization function for borderColor);
  objc_msgSend(v2, "setBorderColor:", static CanvasAssetAccessoryView.borderColor);

  v3 = objc_msgSend(v0, "layer");
  objc_msgSend(v3, "setBorderWidth:", 1.5);

  v4 = objc_msgSend(v0, "layer");
  objc_msgSend(v0, "frame");
  objc_msgSend(v4, "setCornerRadius:", v5 * 0.5);

  v6 = objc_msgSend(v0, "layer");
  v7 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  v8 = objc_msgSend(v7, "CGColor");

  objc_msgSend(v6, "setShadowColor:", v8);
  v9 = objc_msgSend(v0, "layer");
  LODWORD(v10) = 1041865114;
  objc_msgSend(v9, "setShadowOpacity:", v10);

  v11 = objc_msgSend(v0, "layer");
  objc_msgSend(v11, "setShadowRadius:", 3.0);

  v12 = objc_msgSend(v0, "layer");
  objc_msgSend(v12, "setShadowOffset:", 0.0, 0.0);

  v13 = objc_msgSend(v0, "layer");
  objc_msgSend(v13, "setShadowPathIsBounds:", 1);

  v14 = *(void **)((char *)v0
                 + OBJC_IVAR____TtC16MomentsUIService45MOSuggestionInterstitialCarouselCheckMarkView_accessoryButton);
  objc_msgSend(v0, "addSubview:", v14);
  objc_msgSend(v0, "frame");
  v15 = CGRectGetWidth(v42) + -11.0;
  objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v16 = objc_msgSend(v14, "widthAnchor");
  v17 = objc_msgSend(v16, "constraintEqualToConstant:", v15);

  objc_msgSend(v17, "setActive:", 1);
  objc_msgSend(v0, "frame");
  v18 = CGRectGetHeight(v43) + -11.0;
  objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v19 = objc_msgSend(v14, "heightAnchor");
  v20 = objc_msgSend(v19, "constraintEqualToConstant:", v18);

  objc_msgSend(v20, "setActive:", 1);
  v21 = objc_msgSend(v14, "superview");
  if (v21)
  {
    v22 = v21;
    objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v23 = objc_msgSend(v14, "centerYAnchor");
    v24 = objc_msgSend(v22, "centerYAnchor");
    v25 = objc_msgSend(v23, "constraintEqualToAnchor:", v24);

    objc_msgSend(v25, "setConstant:", 0.0);
    v26 = v25;
    objc_msgSend(v26, "setActive:", 1);

  }
  v27 = objc_msgSend(v14, "superview");
  if (v27)
  {
    v28 = v27;
    objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v29 = objc_msgSend(v14, "centerXAnchor");
    v30 = objc_msgSend(v28, "centerXAnchor");
    v31 = objc_msgSend(v29, "constraintEqualToAnchor:", v30);

    objc_msgSend(v31, "setConstant:", 0.0);
    v32 = v31;
    objc_msgSend(v32, "setActive:", 1);

  }
  v33 = (void *)objc_opt_self(UIFont);
  v34 = objc_msgSend(v33, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  v35 = objc_msgSend(v34, "fontDescriptor");
  v36 = objc_msgSend(v35, "fontDescriptorWithSymbolicTraits:", 2);

  if (v36)
  {
    v37 = objc_msgSend(v33, "fontWithDescriptor:size:", v36, 0.0);

    v38 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:", v37);
    v39 = v38;
    v40 = String._bridgeToObjectiveC()();
    v41 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:withConfiguration:", v40, v39);

    objc_msgSend(v14, "setImage:forState:", v41, 0);
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall MOSuggestionInterstitialCarouselCheckMarkView.layoutSubviews()()
{
  void *v0;
  id v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  CGFloat v10;
  id v11;
  id v12;
  objc_super v13;
  CGRect v14;

  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for MOSuggestionInterstitialCarouselCheckMarkView();
  objc_msgSendSuper2(&v13, "layoutSubviews");
  v1 = objc_msgSend(v0, "layer");
  objc_msgSend(v0, "bounds");
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  objc_msgSend(v0, "bounds");
  v10 = CGRectGetHeight(v14) * 0.5;
  v11 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:cornerRadius:", v3, v5, v7, v9, v10);
  v12 = objc_msgSend(v11, "CGPath");

  objc_msgSend(v1, "setShadowPath:", v12);
}

