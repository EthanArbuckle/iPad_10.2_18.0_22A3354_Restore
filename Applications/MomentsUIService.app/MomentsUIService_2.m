Swift::Void __swiftcall MOSuggestionInterstitialCarouselCheckMarkView.updateCheckmark(isSelected:)(Swift::Bool isSelected)
{
  _QWORD *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;

  v2 = *(void **)((char *)v1
                + OBJC_IVAR____TtC16MomentsUIService45MOSuggestionInterstitialCarouselCheckMarkView_accessoryButton);
  if (isSelected)
  {
    if (one-time initialization token for SYMBOL_TINT_COLOR != -1)
      swift_once(&one-time initialization token for SYMBOL_TINT_COLOR, one-time initialization function for SYMBOL_TINT_COLOR);
    objc_msgSend(v2, "setTintColor:", static MOSuggestionInterstitialCarouselCheckMarkView.Constants.SYMBOL_TINT_COLOR);
    objc_msgSend(v2, "setHidden:", 0);
    v3 = objc_msgSend(v1, "layer");
    v4 = (id)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x80))();
    v5 = objc_msgSend(v4, "CGColor");
  }
  else
  {
    objc_msgSend(*(id *)((char *)v1+ OBJC_IVAR____TtC16MomentsUIService45MOSuggestionInterstitialCarouselCheckMarkView_accessoryButton), "setHidden:", 1);
    v3 = objc_msgSend(v1, "layer");
    v4 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    v5 = objc_msgSend(v4, "CGColor");
  }
  v6 = v5;

  objc_msgSend(v3, "setBackgroundColor:", v6);
}

uint64_t MOSuggestionInterstitialCarouselCheckMarkView.setTapTarget(target:action:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t v13;

  v4 = *(void **)(v2 + OBJC_IVAR____TtC16MomentsUIService45MOSuggestionInterstitialCarouselCheckMarkView_accessoryButton);
  outlined init with copy of Any?(a1, (uint64_t)v12);
  v5 = v13;
  if (v13)
  {
    v6 = __swift_project_boxed_opaque_existential_1(v12, v13);
    v7 = *(_QWORD *)(v5 - 8);
    __chkstk_darwin(v6);
    v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v7 + 16))(v9);
    v10 = _bridgeAnythingToObjectiveC<A>(_:)(v9, v5);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
    __swift_destroy_boxed_opaque_existential_1(v12);
  }
  else
  {
    v10 = 0;
  }
  objc_msgSend(v4, "addTarget:action:forControlEvents:", v10, a2, 64);
  return swift_unknownObjectRelease(v10);
}

id MOSuggestionInterstitialCarouselCheckMarkView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionInterstitialCarouselCheckMarkView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void specialized MOSuggestionInterstitialCarouselCheckMarkView.init(coder:)()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0[OBJC_IVAR____TtC16MomentsUIService45MOSuggestionInterstitialCarouselCheckMarkView_isSelected] = 2;
  v1 = OBJC_IVAR____TtC16MomentsUIService45MOSuggestionInterstitialCarouselCheckMarkView_keyColor;
  *(_QWORD *)&v0[v1] = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
  v2 = OBJC_IVAR____TtC16MomentsUIService45MOSuggestionInterstitialCarouselCheckMarkView_accessoryButton;
  v3 = type metadata accessor for MOSuggestionSheetOversizedBoundsButton();
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v3)), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionInterstitialCarouselCheckMarkView.swift", 68, 2, 30, 0);
  __break(1u);
}

uint64_t outlined init with copy of Any?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Any?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001121B4@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x68))();
  *a2 = result;
  return result;
}

uint64_t sub_1001121F4(unsigned __int8 *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(_QWORD))((swift_isaMask & **a2) + 0x70))(*a1);
}

uint64_t sub_100112230@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x80))();
  *a2 = result;
  return result;
}

uint64_t sub_100112270(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x88))(*a1);
}

ValueMetadata *type metadata accessor for MOSuggestionInterstitialCarouselCheckMarkView.Constants()
{
  return &type metadata for MOSuggestionInterstitialCarouselCheckMarkView.Constants;
}

_QWORD *MOSuggestionInterstitialExpandableListView.__allocating_init(controller:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return MOSuggestionInterstitialExpandableListView.init(controller:)(a1);
}

uint64_t MOSuggestionInterstitialExpandableListView.assetTypeSummary.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xB8))();
  v2 = v1;
  if (!((unint64_t)v1 >> 62))
  {
    v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(v1);
    if (v3)
      goto LABEL_3;
LABEL_22:
    v6 = _swiftEmptyArrayStorage;
LABEL_23:
    swift_bridgeObjectRelease_n(v2, 2);
    v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
    v19 = lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [String], (uint64_t)&protocol conformance descriptor for [A]);
    v20 = BidirectionalCollection<>.joined(separator:)(0x20A280E220, 0xA500000000000000, v18, v19);
    swift_bridgeObjectRelease(v6);
    return v20;
  }
  if (v1 < 0)
    v17 = v1;
  else
    v17 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v1);
  result = _CocoaArrayWrapper.endIndex.getter(v17);
  v3 = result;
  if (!result)
    goto LABEL_22;
LABEL_3:
  if (v3 >= 1)
  {
    v5 = 0;
    v6 = _swiftEmptyArrayStorage;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v2);
      }
      else
      {
        v7 = *(_QWORD *)(v2 + 8 * v5 + 32);
        v8 = swift_retain(v7);
      }
      v9 = (*(uint64_t (**)(__n128))(*(_QWORD *)v7 + 200))(v8);
      if (v10)
      {
        v11 = v9;
        v12 = v10;
        v13 = (*(uint64_t (**)(void))(*(_QWORD *)v7 + 296))();
        swift_release(v7);
        if ((v13 & 1) != 0)
        {
          swift_bridgeObjectRelease(v12);
        }
        else
        {
          if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
            v6 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v6[2] + 1, 1, v6);
          v15 = v6[2];
          v14 = v6[3];
          if (v15 >= v14 >> 1)
            v6 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((_QWORD *)(v14 > 1), v15 + 1, 1, v6);
          v6[2] = v15 + 1;
          v16 = &v6[2 * v15];
          v16[4] = v11;
          v16[5] = v12;
        }
      }
      else
      {
        swift_release(v7);
      }
      ++v5;
    }
    while (v3 != v5);
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

void MOSuggestionInterstitialExpandableListView.reloadCell(_:index:)(uint64_t a1, unint64_t a2)
{
  _QWORD *v2;
  uint64_t (*v5)(_BYTE *, __n128);
  __n128 v6;
  void (*v7)(_BYTE *, _QWORD);
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[32];

  v5 = *(uint64_t (**)(_BYTE *, __n128))((swift_isaMask & *v2) + 0xC8);
  v6 = swift_retain(a1);
  v7 = (void (*)(_BYTE *, _QWORD))v5(v14, v6);
  v9 = v8;
  v10 = *v8;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v8);
  *v9 = v10;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v10 < 0 || (v10 & 0x4000000000000000) != 0)
  {
    v10 = specialized _ArrayBuffer._consumeAndCreateNew()(v10);
    *v9 = v10;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v12 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 8 * a2 + 0x20);
    *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 8 * a2 + 0x20) = a1;
    swift_release(v12);
    specialized Array._endMutation()(v13);
    v7(v14, 0);
    MOSuggestionInterstitialExpandableListView.reloadAll()();
    return;
  }
  __break(1u);
}

Swift::Void __swiftcall MOSuggestionInterstitialExpandableListView.reloadAll()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];
  uint64_t v16;
  _QWORD *v17;
  _QWORD aBlock[5];
  uint64_t v19;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v16 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[1] = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_queue);
  v8 = swift_allocObject(&unk_1001EAA38, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16);
  aBlock[4] = partial apply for closure #1 in MOSuggestionInterstitialExpandableListView.reloadAll();
  v19 = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_27;
  v9 = _Block_copy(aBlock);
  swift_retain(v8);
  static DispatchQoS.unspecified.getter(v10);
  v17 = _swiftEmptyArrayStorage;
  v11 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  v13 = lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags], (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v17, v12, v13, v1, v11);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v3, v9);
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v14 = v19;
  swift_release(v8);
  swift_release(v14);
}

uint64_t MOSuggestionInterstitialExpandableListView.updateSelectedAssets(_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t);

  v4 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0xD8);
  v2 = swift_bridgeObjectRetain(a1);
  return v4(v2);
}

Swift::Void __swiftcall MOSuggestionInterstitialExpandableListView.refreshCheckmarksState()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Swift::Int v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  void *v43;
  Class isa;
  id v45;
  uint64_t v46;
  void *v47;
  Class v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  Swift::Int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  NSObject *v59;
  uint64_t v60;
  os_log_type_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  _QWORD *v93;
  id v94;
  uint64_t (*v95)(void);
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  char *v101;
  unint64_t v102;
  uint64_t (*v103)(void);
  uint64_t v104;
  uint64_t v105[3];

  v1 = v0;
  v2 = type metadata accessor for IndexPath(0);
  v104 = *(_QWORD *)(v2 - 8);
  v3 = __chkstk_darwin(v2);
  v82 = (char *)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  v7 = (uint64_t)&v77 - v6;
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v77 - v9;
  v11 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0xB8))(v8);
  if ((unint64_t)v11 >> 62)
    goto LABEL_65;
  v13 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v13)
  {
LABEL_3:
    v14 = 0;
    v83 = v11 & 0xC000000000000001;
    v79 = v11 & 0xFFFFFFFFFFFFFF8;
    v78 = v11 + 32;
    *(_QWORD *)&v12 = 136315650;
    v87 = v12;
    v86 = (char *)&type metadata for Any + 8;
    v93 = v1;
    v89 = v7;
    v101 = v10;
    v81 = v11;
    v80 = v13;
    while (1)
    {
      if (v83)
      {
        v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v11);
        v16 = v14 + 1;
        if (__OFADD__(v14, 1))
          goto LABEL_63;
      }
      else
      {
        if (v14 >= *(_QWORD *)(v79 + 16))
          goto LABEL_64;
        v15 = *(_QWORD *)(v78 + 8 * v14);
        swift_retain(v15);
        v16 = v14 + 1;
        if (__OFADD__(v14, 1))
          goto LABEL_63;
      }
      v85 = v16;
      v17 = (*(uint64_t (**)(void))(*(_QWORD *)v15 + 176))();
      if (v17)
        break;
      v72 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xD0))();
      v73 = v14;
      v74 = *(_QWORD *)(v15 + 72);
      v75 = *(_QWORD *)(v15 + 80);
      swift_bridgeObjectRetain(v75);
      LOBYTE(v74) = specialized Set.contains(_:)(v74, v75, v72);
      swift_bridgeObjectRelease(v75);
      swift_bridgeObjectRelease(v72);
      v7 = (uint64_t)v82;
      IndexPath.init(row:section:)(0, v73);
      MOSuggestionInterstitialExpandableListView.refreshCellStateAt(indexPath:assetIdentifier:isSelected:)(v7, *(_QWORD *)(v15 + 72), *(_QWORD *)(v15 + 80), v74 & 1);
      (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v7, v2);
      swift_release(v15);
LABEL_5:
      v14 = v85;
      if (v85 == v13)
        goto LABEL_69;
    }
    v7 = v17;
    v84 = v15;
    v91 = v17 & 0xFFFFFFFFFFFFFF8;
    if (!((unint64_t)v17 >> 62))
    {
      v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v18)
        goto LABEL_15;
      goto LABEL_59;
    }
    if (v17 >= 0)
      v17 &= 0xFFFFFFFFFFFFFF8uLL;
    v18 = _CocoaArrayWrapper.endIndex.getter(v17);
    if (!v18)
    {
LABEL_59:
      swift_release(v84);
      swift_bridgeObjectRelease(v7);
      goto LABEL_5;
    }
LABEL_15:
    v19 = 0;
    v20 = swift_isaMask & *v1;
    v95 = *(uint64_t (**)(void))(v20 + 0xD0);
    v98 = v7 & 0xC000000000000001;
    v103 = *(uint64_t (**)(void))(v20 + 160);
    v90 = v7 + 32;
    v99 = v14;
    v96 = v18;
    v97 = v7;
    while (1)
    {
      if (v98)
      {
        v21 = specialized _ArrayBuffer._getElementSlowPath(_:)(v19, v7);
        v22 = __OFADD__(v19++, 1);
        if (v22)
          goto LABEL_61;
      }
      else
      {
        if (v19 >= *(_QWORD *)(v91 + 16))
          goto LABEL_62;
        v21 = *(_QWORD *)(v90 + 8 * v19);
        swift_retain(v21);
        v22 = __OFADD__(v19++, 1);
        if (v22)
        {
LABEL_61:
          __break(1u);
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
LABEL_65:
          if (v11 < 0)
            v76 = v11;
          else
            v76 = v11 & 0xFFFFFFFFFFFFFF8;
          v13 = _CocoaArrayWrapper.endIndex.getter(v76);
          if (!v13)
            goto LABEL_69;
          goto LABEL_3;
        }
      }
      v23 = v95();
      v24 = v23;
      if (!*(_QWORD *)(v23 + 16))
      {
        v11 = v2;
        swift_bridgeObjectRelease(v23);
        v35 = 0;
        v10 = v101;
        goto LABEL_44;
      }
      v25 = v2;
      v27 = *(_QWORD *)(v21 + 72);
      v26 = *(_QWORD *)(v21 + 80);
      Hasher.init(_seed:)(v105, *(_QWORD *)(v23 + 40));
      swift_bridgeObjectRetain(v26);
      String.hash(into:)(v105, v27, v26);
      v28 = Hasher._finalize()();
      v29 = -1 << *(_BYTE *)(v24 + 32);
      v30 = v28 & ~v29;
      if (((*(_QWORD *)(v24 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
        goto LABEL_42;
      v31 = *(_QWORD *)(v24 + 48);
      v32 = (_QWORD *)(v31 + 16 * v30);
      v33 = v32[1];
      v34 = *v32 == v27 && v33 == v26;
      if (!v34 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v32, v33, v27, v26, 0) & 1) == 0)
        break;
LABEL_32:
      swift_bridgeObjectRelease(v26);
      swift_bridgeObjectRelease(v24);
      v35 = 1;
LABEL_43:
      v1 = v93;
      v11 = v25;
      v10 = v101;
      v14 = v99;
LABEL_44:
      v40 = IndexPath.init(row:section:)(v19, v14);
      v100 = *(_QWORD *)(v21 + 72);
      v102 = *(_QWORD *)(v21 + 80);
      v41 = v1;
      v42 = ((uint64_t (*)(uint64_t))v103)(v40);
      if (v42)
      {
        v43 = (void *)v42;
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        v45 = objc_msgSend(v43, "cellForItemAtIndexPath:", isa);

        v94 = v45;
        if (v45)
        {
          v46 = v103();
          if (v46)
          {
            v47 = (void *)v46;
            v48 = IndexPath._bridgeToObjectiveC()().super.isa;
            v49 = objc_msgSend(v47, "cellForItemAtIndexPath:", v48);

            if (v49)
            {
              v50 = type metadata accessor for MOSuggestionInterstitialExpandableListViewCell();
              v51 = swift_dynamicCastClass(v49, v50);
              if (v51)
              {
                v52 = (*(uint64_t (**)(uint64_t))((swift_isaMask & **(_QWORD **)(v51
                                                                                        + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_checkmarkView))
                                                         + 0xA0))(v35);
                v53 = IndexPath.section.getter(v52);
                MOSuggestionInterstitialExpandableListView.updateSectionHeaderTitle(section:)(v53);
              }

            }
          }
          v92 = v35;
          if (serverManager._clientConnections != (NSMutableDictionary *)-1)
            swift_once(&serverManager._clientConnections, one-time initialization function for shared);
          v54 = type metadata accessor for Logger(0);
          __swift_project_value_buffer(v54, (uint64_t)static MOAngelLogger.shared);
          v55 = v104;
          v56 = v89;
          (*(void (**)(uint64_t, char *, uint64_t))(v104 + 16))(v89, v10, v11);
          v57 = v102;
          v58 = swift_bridgeObjectRetain_n(v102, 2);
          v59 = Logger.logObject.getter(v58);
          v60 = v55;
          v61 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v59, v61))
          {
            v62 = v56;
            v63 = swift_slowAlloc(28, -1);
            v64 = v57;
            v88 = swift_slowAlloc(64, -1);
            v105[0] = v88;
            *(_DWORD *)v63 = v87;
            v65 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes(&lazy protocol witness table cache variable for type IndexPath and conformance IndexPath, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
            v66 = v60;
            v67 = dispatch thunk of CustomStringConvertible.description.getter(v11, v65);
            v69 = v68;
            *(_QWORD *)(v63 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v67, v68, v105);
            swift_bridgeObjectRelease(v69);
            v70 = v62;
            v10 = v101;
            (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v70, v11);
            *(_WORD *)(v63 + 12) = 1024;
            *(_DWORD *)(v63 + 14) = v92;
            *(_WORD *)(v63 + 18) = 2080;
            swift_bridgeObjectRetain(v64);
            *(_QWORD *)(v63 + 20) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v100, v64, v105);
            swift_bridgeObjectRelease_n(v64, 3);
            _os_log_impl((void *)&_mh_execute_header, v59, v61, "[MOSuggestionInterstitialExpandableListViewCell] update at %s, selected=%{BOOL}d, id=%s", (uint8_t *)v63, 0x1Cu);
            v71 = v88;
            swift_arrayDestroy(v88, 2, v86);
            v41 = v93;
            swift_slowDealloc(v71, -1, -1);
            swift_slowDealloc(v63, -1, -1);

          }
          else
          {
            (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v56, v11);

            swift_bridgeObjectRelease_n(v57, 2);
          }
          v14 = v99;
        }
      }
      v2 = v11;
      (*(void (**)(char *, uint64_t))(v104 + 8))(v10, v11);
      swift_release(v21);
      v7 = v97;
      v1 = v41;
      if (v19 == v96)
      {
        swift_release(v84);
        swift_bridgeObjectRelease(v7);
        v11 = v81;
        v13 = v80;
        goto LABEL_5;
      }
    }
    v36 = ~v29;
    while (1)
    {
      v30 = (v30 + 1) & v36;
      if (((*(_QWORD *)(v24 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
        break;
      v37 = (_QWORD *)(v31 + 16 * v30);
      v38 = v37[1];
      v39 = *v37 == v27 && v38 == v26;
      if (v39 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v37, v38, v27, v26, 0) & 1) != 0)
        goto LABEL_32;
    }
LABEL_42:
    swift_bridgeObjectRelease(v26);
    swift_bridgeObjectRelease(v24);
    v35 = 0;
    goto LABEL_43;
  }
LABEL_69:
  swift_bridgeObjectRelease(v11);
}

_UNKNOWN **static InterstitialSection.allCases.getter()
{
  return &outlined read-only object #0 of static InterstitialSection.allCases.getter;
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance InterstitialSection@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = specialized InterstitialSection.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for static CaseIterable.allCases.getter in conformance InterstitialSection(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static InterstitialSection.allCases.getter;
}

void *MOSuggestionInterstitialExpandableListView.dataSource.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_dataSource);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_dataSource, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void MOSuggestionInterstitialExpandableListView.dataSource.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_dataSource);
}

uint64_t (*MOSuggestionInterstitialExpandableListView.dataSource.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_dataSource, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void *MOSuggestionInterstitialExpandableListView.collectionView.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_collectionView);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_collectionView, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void MOSuggestionInterstitialExpandableListView.collectionView.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_collectionView);
}

uint64_t (*MOSuggestionInterstitialExpandableListView.collectionView.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_collectionView, a1, 33, 0);
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

uint64_t MOSuggestionInterstitialExpandableListView.assetViewModels.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter(&OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_assetViewModels);
}

uint64_t MOSuggestionInterstitialExpandableListView.assetViewModels.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_assetViewModels);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_bridgeObjectRelease(v4);
}

uint64_t (*MOSuggestionInterstitialExpandableListView.assetViewModels.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_assetViewModels, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionInterstitialExpandableListView.selectedAssetIdentifiers.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter(&OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_selectedAssetIdentifiers);
}

uint64_t MOSuggestionInterstitialExpandableListView.selectedAssetIdentifiers.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  _BYTE v11[24];

  v3 = (_QWORD *)((char *)v1
                + OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_selectedAssetIdentifiers);
  swift_beginAccess((char *)v1 + OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_selectedAssetIdentifiers, v11, 1, 0);
  v4 = *v3;
  *v3 = a1;
  v5 = swift_bridgeObjectRelease(v4);
  result = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0xE8))(v5);
  if (result)
  {
    v8 = result;
    v9 = v7;
    ObjectType = swift_getObjectType(result);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(ObjectType, v9);
    return swift_unknownObjectRelease(v8);
  }
  return result;
}

uint64_t (*MOSuggestionInterstitialExpandableListView.selectedAssetIdentifiers.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_selectedAssetIdentifiers, a1, 33, 0);
  return MOSuggestionInterstitialExpandableListView.selectedAssetIdentifiers.modify;
}

uint64_t MOSuggestionInterstitialExpandableListView.selectedAssetIdentifiers.modify(uint64_t a1, char a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  result = swift_endAccess(a1);
  if ((a2 & 1) == 0)
  {
    result = (*(uint64_t (**)(uint64_t))((swift_isaMask & **(_QWORD **)(a1 + 24)) + 0xE8))(result);
    if (result)
    {
      v6 = result;
      v7 = v5;
      ObjectType = swift_getObjectType(result);
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(ObjectType, v7);
      return swift_unknownObjectRelease(v6);
    }
  }
  return result;
}

uint64_t MOSuggestionInterstitialExpandableListView.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_delegate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_delegate, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

uint64_t MOSuggestionInterstitialExpandableListView.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE v7[24];

  v5 = v2 + OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_delegate;
  swift_beginAccess(v5, v7, 1, 0);
  *(_QWORD *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign(v5, a1);
  return swift_unknownObjectRelease(a1);
}

void (*MOSuggestionInterstitialExpandableListView.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return MOSuggestionSheetAssetGridView.delegate.modify;
}

uint64_t MOSuggestionInterstitialExpandableListView.controller.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_controller;
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_controller, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

void MOSuggestionInterstitialExpandableListView.controller.setter(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v4[24];

  v3 = v1 + OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_controller;
  swift_beginAccess(v3, v4, 1, 0);
  swift_unknownObjectWeakAssign(v3, a1);

}

void (*MOSuggestionInterstitialExpandableListView.controller.modify(_QWORD *a1))(id **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_controller;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  v3[3] = swift_unknownObjectWeakLoadStrong(v5);
  return MOSuggestionSheetInterstitialView.controller.modify;
}

_QWORD *MOSuggestionInterstitialExpandableListView.init(controller:)(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  objc_class *v20;
  id v21;
  void *v22;
  _QWORD *v23;
  id v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  void (*v37)(id);
  id v38;
  _QWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  _QWORD aBlock[5];
  uint64_t v46;
  objc_super v47;
  char v48[32];

  v2 = v1;
  v44 = a1;
  v3 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v42 = *(_QWORD *)(v3 - 8);
  v43 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v6);
  v8 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v9);
  v11 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v2[OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_dataSource] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_collectionView] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_assetViewModels] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v2[OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_selectedAssetIdentifiers] = &_swiftEmptySetSingleton;
  v12 = &v2[OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_delegate];
  *((_QWORD *)v12 + 1) = 0;
  swift_unknownObjectWeakInit(v12);
  v13 = &v2[OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_controller];
  swift_unknownObjectWeakInit(&v2[OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_controller]);
  v41 = OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_queue;
  v40[1] = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue, OS_dispatch_queue_ptr);
  v14 = v2;
  static DispatchQoS.unspecified.getter(v14);
  aBlock[0] = _swiftEmptyArrayStorage;
  v15 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  v17 = lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A], &demangling cache variable for type metadata for [OS_dispatch_queue.Attributes], (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v16, v17, v6, v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v42 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v43);
  v18 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000002BLL, 0x80000001001A6170, v11, v8, v5, 0);
  *(_QWORD *)&v2[v41] = v18;
  swift_beginAccess(v13, v48, 1, 0);
  v19 = v44;
  swift_unknownObjectWeakAssign(v13, v44);

  v20 = (objc_class *)type metadata accessor for MOSuggestionInterstitialExpandableListView();
  v47.receiver = v14;
  v47.super_class = v20;
  v21 = objc_msgSendSuper2(&v47, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v22 = (void *)objc_opt_self(UIColor);
  v23 = v21;
  v24 = objc_msgSend(v22, "systemBackgroundColor");
  objc_msgSend(v23, "setBackgroundColor:", v24);

  objc_msgSend(v23, "bounds");
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v33 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  aBlock[4] = closure #1 in MOSuggestionInterstitialExpandableListView.generateLayout();
  v46 = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned Int, @guaranteed NSCollectionLayoutEnvironment) -> (@owned NSCollectionLayoutSection?);
  aBlock[3] = &block_descriptor_3;
  v34 = _Block_copy(aBlock);
  v35 = objc_msgSend(v33, "initWithSectionProvider:", v34);
  _Block_release(v34);
  swift_release(v46);
  v36 = objc_msgSend(objc_allocWithZone((Class)UICollectionView), "initWithFrame:collectionViewLayout:", v35, v26, v28, v30, v32);

  objc_msgSend(v23, "addSubview:", v36);
  objc_msgSend(v36, "setAutoresizingMask:", 18);
  v37 = *(void (**)(id))((swift_isaMask & *v23) + 0xA8);
  v38 = v36;
  v37(v36);
  objc_msgSend(v38, "setDelegate:", v23);
  objc_msgSend(v38, "setAllowsSelection:", 1);
  objc_msgSend(v38, "setAllowsMultipleSelection:", 1);

  MOSuggestionInterstitialExpandableListView.configureDataSource()();
  return v23;
}

Swift::Void __swiftcall MOSuggestionInterstitialExpandableListView.configureCollectionView()()
{
  _QWORD *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void (*v13)(id);
  id v14;
  _QWORD v15[5];
  uint64_t v16;

  objc_msgSend(v0, "bounds");
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  v15[4] = closure #1 in MOSuggestionInterstitialExpandableListView.generateLayout();
  v16 = 0;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = thunk for @escaping @callee_guaranteed (@unowned Int, @guaranteed NSCollectionLayoutEnvironment) -> (@owned NSCollectionLayoutSection?);
  v15[3] = &block_descriptor_6_1;
  v10 = _Block_copy(v15);
  v11 = objc_msgSend(v9, "initWithSectionProvider:", v10);
  _Block_release(v10);
  swift_release(v16);
  v12 = objc_msgSend(objc_allocWithZone((Class)UICollectionView), "initWithFrame:collectionViewLayout:", v11, v2, v4, v6, v8);

  objc_msgSend(v0, "addSubview:", v12);
  objc_msgSend(v12, "setAutoresizingMask:", 18);
  v13 = *(void (**)(id))((swift_isaMask & *v0) + 0xA8);
  v14 = v12;
  v13(v12);
  objc_msgSend(v14, "setDelegate:", v0);
  objc_msgSend(v14, "setAllowsSelection:", 1);
  objc_msgSend(v14, "setAllowsMultipleSelection:", 1);

}

Swift::Void __swiftcall MOSuggestionInterstitialExpandableListView.configureDataSource()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  _QWORD *v19;
  void (*v20)(char *, char *, uint64_t);
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, char *, uint64_t);
  uint64_t v27;
  id v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  id v31;
  char *v32;
  char *v33;
  _QWORD *v34;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<MOSuggestionInterstitialExpandableListViewCell, MOSuggestionInterstitialListAssetViewModel>);
  v34 = *(_QWORD **)(v2 - 8);
  v3 = v34[8];
  v4 = __chkstk_darwin(v2);
  v5 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v32 = (char *)&v31 - v7;
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v31 - v9;
  __chkstk_darwin(v8);
  v12 = (char *)&v31 - v11;
  v13 = swift_allocObject(&unk_1001EAA38, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16);
  v14 = type metadata accessor for MOSuggestionInterstitialExpandableListViewCell();
  v15 = type metadata accessor for MOSuggestionInterstitialListAssetViewModel(0);
  v33 = v12;
  UICollectionView.CellRegistration.init(handler:)(partial apply for closure #1 in MOSuggestionInterstitialExpandableListView.configureDataSource(), v13, v14, v15);
  v16 = swift_allocObject(&unk_1001EAA38, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16);
  v17 = UICollectionView.CellRegistration.init(handler:)(partial apply for closure #2 in MOSuggestionInterstitialExpandableListView.configureDataSource(), v16, v14, v15);
  v18 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0xA0))(v17);
  if (v18)
  {
    v19 = v34;
    v20 = (void (*)(char *, char *, uint64_t))v34[2];
    v21 = v32;
    v31 = v18;
    v20(v32, v10, v2);
    v20(v5, v33, v2);
    v22 = *((unsigned __int8 *)v19 + 80);
    v23 = (v22 + 16) & ~v22;
    v24 = (v3 + v22 + v23) & ~v22;
    v25 = swift_allocObject(&unk_1001EAAD8, v24 + v3, v22 | 7);
    v26 = (void (*)(uint64_t, char *, uint64_t))v19[4];
    v26(v25 + v23, v21, v2);
    v26(v25 + v24, v5, v2);
    v27 = swift_allocObject(&unk_1001EAB00, 32, 7);
    *(_QWORD *)(v27 + 16) = partial apply for closure #3 in MOSuggestionInterstitialExpandableListView.configureDataSource();
    *(_QWORD *)(v27 + 24) = v25;
    objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionViewDiffableDataSource<InterstitialSection, MOSuggestionInterstitialListAssetViewModel>));
    v28 = v31;
    v29 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
    (*(void (**)(uint64_t))((swift_isaMask & *v1) + 0x90))(v29);

  }
  v30 = (void (*)(char *, uint64_t))v34[1];
  v30(v10, v2);
  v30(v33, v2);
}

void MOSuggestionInterstitialExpandableListView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MomentsUIService.MOSuggestionInterstitialExpandableListView", 59, "init(frame:)", 12, 0);
  __break(1u);
}

id MOSuggestionInterstitialExpandableListView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionInterstitialExpandableListView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

UICollectionViewLayout __swiftcall MOSuggestionInterstitialExpandableListView.generateLayout()()
{
  id v0;
  void *v1;
  id v2;
  _QWORD v4[5];
  uint64_t v5;

  v0 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  v4[4] = closure #1 in MOSuggestionInterstitialExpandableListView.generateLayout();
  v5 = 0;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 1107296256;
  v4[2] = thunk for @escaping @callee_guaranteed (@unowned Int, @guaranteed NSCollectionLayoutEnvironment) -> (@owned NSCollectionLayoutSection?);
  v4[3] = &block_descriptor_17_0;
  v1 = _Block_copy(v4);
  v2 = objc_msgSend(v0, "initWithSectionProvider:", v1);
  _Block_release(v1);
  swift_release(v5);
  return (UICollectionViewLayout)v2;
}

void *closure #1 in MOSuggestionInterstitialExpandableListView.generateLayout()(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  id v14;
  double v15;
  void (*v16)(_BYTE *, _QWORD);
  void *v17;
  void (*v18)(_BYTE *, uint64_t);
  _BYTE v20[32];

  v3 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for UICollectionLayoutListConfiguration(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v13 = &v20[-v12];
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:), v3);
  UICollectionLayoutListConfiguration.init(appearance:)(v6);
  v14 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  UICollectionLayoutListConfiguration.backgroundColor.setter(v14);
  if (one-time initialization token for CHECKMARK_PLATTER_SIZE != -1)
    swift_once(&one-time initialization token for CHECKMARK_PLATTER_SIZE, one-time initialization function for CHECKMARK_PLATTER_SIZE);
  v15 = *(double *)&static MOSuggestionInterstitialExpandableListViewCellConstants.CHECKMARK_PLATTER_SIZE
      + 12.0
      + 40.0
      + 12.0;
  v16 = (void (*)(_BYTE *, _QWORD))UICollectionLayoutListConfiguration.separatorConfiguration.modify(v20);
  UIListSeparatorConfiguration.bottomSeparatorInsets.setter(0.0, v15, 0.0, 0.0);
  v16(v20, 0);
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSCollectionLayoutSection, NSCollectionLayoutSection_ptr);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v11, v13, v7);
  v17 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)(v11, a2);
  v18 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
  v18(v11, v7);
  objc_msgSend(v17, "setContentInsets:", 0.0, 0.0, 20.0, 0.0);
  v18(v13, v7);
  return v17;
}

void closure #1 in MOSuggestionInterstitialExpandableListView.configureDataSource()(_QWORD *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD *Strong;
  void *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  void *v33;
  char **v34;
  NSString v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(__n128);
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  void *v46;
  char **v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  void (*v55)(void (*)(), char *);
  id v56;
  _QWORD *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char v69[24];

  v67 = a2;
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v66 = v9;
  v68 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UICellAccessory.DisplayedState(0);
  v62 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICellAccessory.LayoutDimension?);
  __chkstk_darwin(v13);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICellAccessory.OutlineDisclosureOptions.Style?);
  __chkstk_darwin(v16);
  v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for UICellAccessory.OutlineDisclosureOptions(0);
  v64 = *(_QWORD *)(v19 - 8);
  v65 = v19;
  __chkstk_darwin(v19);
  v21 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = *a3;
  a4 += 16;
  swift_beginAccess(a4, v69, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(a4);
  if (Strong)
  {
    v23 = Strong;
    v61 = v10;
    v24 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x100))();
    if (v24)
    {
      v25 = (_QWORD *)v24;
      v26 = enum case for UICellAccessory.OutlineDisclosureOptions.Style.header(_:);
      v27 = type metadata accessor for UICellAccessory.OutlineDisclosureOptions.Style(0);
      v59 = v8;
      v60 = v7;
      v28 = v27;
      v29 = *(_QWORD *)(v27 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v29 + 104))(v18, v26, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v18, 0, 1, v28);
      v30 = type metadata accessor for UICellAccessory.LayoutDimension(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v15, 1, 1, v30);
      v31 = UICellAccessory.OutlineDisclosureOptions.init(style:isHidden:reservedLayoutWidth:tintColor:)(v18, 2, v15, 0);
      v32 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v25) + 0x1B0);
      v58 = v25;
      LOBYTE(v26) = v32(v31);
      v33 = (void *)objc_opt_self(UIColor);
      v34 = &selRef_systemIndigoColor;
      if ((v26 & 1) != 0)
        v34 = &selRef_systemBlueColor;
      UICellAccessory.OutlineDisclosureOptions.tintColor.setter(objc_msgSend(v33, *v34));
      v35 = String._bridgeToObjectiveC()();
      v36 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v35);

      UICellAccessory.OutlineDisclosureOptions._customImage.setter(v36);
      v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UICellAccessory>);
      v38 = *(_QWORD *)(type metadata accessor for UICellAccessory(0) - 8);
      v39 = swift_allocObject(v37, ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(_QWORD *)(v38 + 72), *(unsigned __int8 *)(v38 + 80) | 7);
      *(_OWORD *)(v39 + 16) = xmmword_10019ED20;
      v40 = v61;
      v41 = v62;
      (*(void (**)(char *, _QWORD, uint64_t))(v62 + 104))(v12, enum case for UICellAccessory.DisplayedState.always(_:), v61);
      static UICellAccessory.outlineDisclosure(displayed:options:actionHandler:)(v12, v21, 0, 0);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v12, v40);
      UICollectionViewListCell.accessories.setter(v39);
      v42 = *(uint64_t (**)(__n128))((swift_isaMask & *a1) + 0xE8);
      v43 = v63;
      v44 = swift_retain(v63);
      v45 = v42(v44);
      LOBYTE(v39) = v32(v45);
      v46 = (void *)objc_opt_self(UIColor);
      v47 = &selRef_systemIndigoColor;
      if ((v39 & 1) != 0)
        v47 = &selRef_systemBlueColor;
      v48 = objc_msgSend(v46, *v47);
      (*(void (**)(id))((swift_isaMask & *a1) + 0xB8))(v48);
      v49 = v59;
      v50 = v60;
      v51 = v68;
      (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v68, v67, v60);
      v52 = *(unsigned __int8 *)(v49 + 80);
      v53 = (v52 + 40) & ~v52;
      v54 = (char *)swift_allocObject(&unk_1001EAC40, v53 + v66, v52 | 7);
      *((_QWORD *)v54 + 2) = v23;
      *((_QWORD *)v54 + 3) = v43;
      *((_QWORD *)v54 + 4) = a1;
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(&v54[v53], v51, v50);
      v55 = *(void (**)(void (*)(), char *))((swift_isaMask & *a1) + 0xA0);
      swift_retain(v43);
      v56 = v23;
      v57 = a1;
      v55(partial apply for closure #1 in closure #1 in MOSuggestionInterstitialExpandableListView.configureDataSource(), v54);

      (*(void (**)(char *, uint64_t))(v64 + 8))(v21, v65);
    }
    else
    {

    }
  }
}

void MOSuggestionInterstitialExpandableListView.toggleSelectionState(_:cell:indexPath:)(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  void (*v32)(_BYTE *, uint64_t);
  uint64_t v33;
  __n128 v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t (*v39)(uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  Swift::Int v43;
  void (*v44)(_BYTE *, uint64_t, uint64_t);
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  __n128 v55;
  const char *v56;
  NSObject *v57;
  os_log_type_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  Swift::Int v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  void (*v67)(_BYTE *, uint64_t);
  uint64_t (*v68)(uint64_t *);
  uint64_t v69;
  uint64_t (*v70)(uint64_t *, _QWORD);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(_BYTE *, uint64_t);
  uint64_t (*v81)(uint64_t *);
  uint64_t v82;
  uint64_t (*v83)(uint64_t *, _QWORD);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  os_log_type_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  __n128 v96;
  uint64_t v97;
  uint64_t v98;
  __n128 v99;
  Swift::Int v100;
  _BYTE v101[4];
  int v102;
  uint64_t v103;
  _BYTE *v104;
  _BYTE *v105;
  _BYTE *v106;
  void (*v107)(_BYTE *, uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112[4];
  uint64_t v113;
  uint64_t v114;

  v111 = a3;
  v109 = a2;
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v101[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __chkstk_darwin(v7);
  v12 = &v101[-v11];
  v13 = __chkstk_darwin(v10);
  v106 = &v101[-v14];
  v15 = __chkstk_darwin(v13);
  v17 = &v101[-v16];
  v18 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0xD0);
  v110 = v3;
  v19 = v18(v15);
  LODWORD(v20) = MOSuggestionInterstitialListAssetViewModel.hasIdentifiersSelected(_:)(v19);
  swift_bridgeObjectRelease(v19);
  if (serverManager._clientConnections != (NSMutableDictionary *)-1)
    swift_once(&serverManager._clientConnections, one-time initialization function for shared);
  v21 = type metadata accessor for Logger(0);
  v22 = __swift_project_value_buffer(v21, (uint64_t)static MOAngelLogger.shared);
  v107 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16);
  v107(v17, v111, v5);
  v23 = swift_retain_n(a1, 2);
  v108 = v22;
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc(28, -1);
    v104 = v12;
    v27 = v26;
    v103 = swift_slowAlloc(64, -1);
    v112[0] = v103;
    *(_DWORD *)v27 = 67109634;
    v102 = v20;
    LODWORD(v113) = v20 & 1;
    v105 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v113, (char *)&v113 + 4, v27 + 4);
    *(_WORD *)(v27 + 8) = 2080;
    v28 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes(&lazy protocol witness table cache variable for type IndexPath and conformance IndexPath, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    v29 = dispatch thunk of CustomStringConvertible.description.getter(v5, v28);
    v31 = v30;
    v113 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v30, v112);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v113, &v114, v27 + 10);
    swift_bridgeObjectRelease(v31);
    v32 = *(void (**)(_BYTE *, uint64_t))(v6 + 8);
    v32(v17, v5);
    *(_WORD *)(v27 + 18) = 2080;
    v33 = a1[9];
    v20 = a1[10];
    swift_bridgeObjectRetain(v20);
    v113 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v20, v112);
    v9 = v105;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v113, &v114, v27 + 20);
    swift_release_n(a1, 2, v34);
    v35 = v20;
    LOBYTE(v20) = v102;
    swift_bridgeObjectRelease(v35);
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "[MOSuggestionInterstitialExpandableListViewCell] toggle attempt isCurrentlySelected=%{BOOL}d, at=%s, id=%s", (uint8_t *)v27, 0x1Cu);
    v36 = v103;
    swift_arrayDestroy(v103, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v36, -1, -1);
    v37 = v27;
    v12 = v104;
    swift_slowDealloc(v37, -1, -1);

  }
  else
  {
    v32 = *(void (**)(_BYTE *, uint64_t))(v6 + 8);
    v32(v17, v5);

    swift_release_n(a1, 2, v38);
  }
  v39 = *(uint64_t (**)(uint64_t))((swift_isaMask & **(_QWORD **)(v109
                                                                         + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_checkmarkView))
                                          + 0xA0);
  if ((v20 & 1) == 0)
  {
    v59 = v39(1);
    v60 = (*(uint64_t (**)(uint64_t))(*a1 + 176))(v59);
    if (v60)
    {
      v61 = swift_bridgeObjectRelease(v60);
      v62 = IndexPath.section.getter(v61);
      MOSuggestionInterstitialExpandableListView.selectAllInSection(_:)(v62);
    }
    else
    {
      v78 = a1[9];
      v79 = a1[10];
      v80 = v32;
      v81 = *(uint64_t (**)(uint64_t *))((swift_isaMask & *v110) + 0xE0);
      swift_bridgeObjectRetain(v79);
      v82 = v81(v112);
      v32 = v80;
      v83 = (uint64_t (*)(uint64_t *, _QWORD))v82;
      specialized Set._Variant.insert(_:)(&v113, v78, v79);
      swift_bridgeObjectRelease(v114);
      v84 = v83(v112, 0);
      v85 = IndexPath.row.getter(v84);
      if (v85 >= 1)
      {
        v86 = IndexPath.section.getter(v85);
        v87 = (uint64_t)v106;
        IndexPath.init(row:section:)(0, v86);
        MOSuggestionInterstitialExpandableListView.forceCell(indexPath:selected:)(v87, 1);
        v32((_BYTE *)v87, v5);
      }
    }
    v107(v12, v111, v5);
    v88 = swift_retain_n(a1, 2);
    v46 = Logger.logObject.getter(v88);
    v89 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v46, v89))
    {
      v48 = swift_slowAlloc(22, -1);
      v109 = swift_slowAlloc(64, -1);
      v112[0] = v109;
      *(_DWORD *)v48 = 136315394;
      v90 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes(&lazy protocol witness table cache variable for type IndexPath and conformance IndexPath, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
      v91 = dispatch thunk of CustomStringConvertible.description.getter(v5, v90);
      v93 = v92;
      v113 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v91, v92, v112);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v113, &v114, v48 + 4);
      swift_bridgeObjectRelease(v93);
      v32(v12, v5);
      *(_WORD *)(v48 + 12) = 2080;
      v94 = a1[9];
      v95 = a1[10];
      swift_bridgeObjectRetain(v95);
      v113 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v94, v95, v112);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v113, &v114, v48 + 14);
      swift_release_n(a1, 2, v96);
      swift_bridgeObjectRelease(v95);
      v56 = "[MOSuggestionInterstitialExpandableListViewCell] did select at %s, id=%s";
      v57 = v46;
      v58 = v89;
      goto LABEL_21;
    }
    v63 = v12;
LABEL_23:
    v32(v63, v5);

    v98 = swift_release_n(a1, 2, v99);
    goto LABEL_24;
  }
  v40 = v39(0);
  v41 = (*(uint64_t (**)(uint64_t))(*a1 + 176))(v40);
  if (v41)
  {
    v42 = swift_bridgeObjectRelease(v41);
    v43 = IndexPath.section.getter(v42);
    MOSuggestionInterstitialExpandableListView.deselectAllInSection(_:)(v43);
    v44 = v107;
  }
  else
  {
    v64 = a1[9];
    v65 = a1[10];
    v66 = v9;
    v67 = v32;
    v68 = *(uint64_t (**)(uint64_t *))((swift_isaMask & *v110) + 0xE0);
    swift_bridgeObjectRetain(v65);
    v69 = v68(v112);
    v32 = v67;
    v70 = (uint64_t (*)(uint64_t *, _QWORD))v69;
    specialized Set._Variant.remove(_:)(v64, v65);
    v72 = v71;
    swift_bridgeObjectRelease(v65);
    swift_bridgeObjectRelease(v72);
    v73 = v70(v112, 0);
    v9 = v66;
    v74 = IndexPath.row.getter(v73);
    v44 = v107;
    if (v74 >= 1)
    {
      v75 = MOSuggestionInterstitialExpandableListView.sectionHasSelection(indexPath:)();
      if ((v75 & 1) == 0)
      {
        v76 = IndexPath.section.getter(v75);
        v77 = (uint64_t)v106;
        IndexPath.init(row:section:)(0, v76);
        MOSuggestionInterstitialExpandableListView.forceCell(indexPath:selected:)(v77, 0);
        v32((_BYTE *)v77, v5);
      }
    }
  }
  v44(v9, v111, v5);
  v45 = swift_retain_n(a1, 2);
  v46 = Logger.logObject.getter(v45);
  v47 = static os_log_type_t.debug.getter();
  if (!os_log_type_enabled(v46, v47))
  {
    v63 = v9;
    goto LABEL_23;
  }
  v48 = swift_slowAlloc(22, -1);
  v109 = swift_slowAlloc(64, -1);
  v112[0] = v109;
  *(_DWORD *)v48 = 136315394;
  v49 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes(&lazy protocol witness table cache variable for type IndexPath and conformance IndexPath, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
  v50 = dispatch thunk of CustomStringConvertible.description.getter(v5, v49);
  v52 = v51;
  v113 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v50, v51, v112);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v113, &v114, v48 + 4);
  swift_bridgeObjectRelease(v52);
  v32(v9, v5);
  *(_WORD *)(v48 + 12) = 2080;
  v53 = a1[9];
  v54 = a1[10];
  swift_bridgeObjectRetain(v54);
  v113 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v53, v54, v112);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v113, &v114, v48 + 14);
  swift_release_n(a1, 2, v55);
  swift_bridgeObjectRelease(v54);
  v56 = "[MOSuggestionInterstitialExpandableListViewCell] did de-select at %s, id=%s";
  v57 = v46;
  v58 = v47;
LABEL_21:
  _os_log_impl((void *)&_mh_execute_header, v57, v58, v56, (uint8_t *)v48, 0x16u);
  v97 = v109;
  swift_arrayDestroy(v109, 2, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v97, -1, -1);
  swift_slowDealloc(v48, -1, -1);

LABEL_24:
  v100 = IndexPath.section.getter(v98);
  MOSuggestionInterstitialExpandableListView.updateSectionHeaderTitle(section:)(v100);
}

void closure #2 in MOSuggestionInterstitialExpandableListView.configureDataSource()(_QWORD *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *Strong;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  char v14;
  void *v15;
  char **v16;
  id v17;
  _BYTE v18[24];

  v5 = *a3;
  v6 = a4 + 16;
  swift_beginAccess(a4 + 16, v18, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = Strong;
    v9 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x100))();
    if (v9)
    {
      v10 = (_QWORD *)v9;
      v11 = *(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0xE8);
      v12 = swift_retain(v5);
      v13 = v11(v12);
      v14 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v10) + 0x1B0))(v13);
      v15 = (void *)objc_opt_self(UIColor);
      v16 = &selRef_systemBlueColor;
      if ((v14 & 1) == 0)
        v16 = &selRef_systemIndigoColor;
      v17 = objc_msgSend(v15, *v16);
      (*(void (**)(id))((swift_isaMask & *a1) + 0xB8))(v17);

      v8 = v10;
    }

  }
}

uint64_t closure #3 in MOSuggestionInterstitialExpandableListView.configureDataSource()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v9 = (*(uint64_t (**)(void))(*(_QWORD *)a3 + 176))();
  swift_bridgeObjectRelease(v9);
  v21 = a3;
  if (v9)
  {
    v10 = type metadata accessor for MOSuggestionInterstitialExpandableListViewCell();
    v11 = type metadata accessor for MOSuggestionInterstitialListAssetViewModel(0);
    v12 = swift_retain(a3);
    v13 = a5;
    v14 = a2;
    v15 = v10;
    v16 = v11;
  }
  else
  {
    v17 = type metadata accessor for MOSuggestionInterstitialExpandableListViewCell();
    v18 = type metadata accessor for MOSuggestionInterstitialListAssetViewModel(0);
    v12 = swift_retain(a3);
    v13 = a4;
    v14 = a2;
    v15 = v17;
    v16 = v18;
  }
  v19 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(v13, v14, &v21, v15, v16, v12);
  swift_release(a3);
  return v19;
}

void MOSuggestionInterstitialExpandableListView.updatedSnapshot(_:)(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19[3];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSDiffableDataSourceSectionSnapshot<MOSuggestionInterstitialListAssetViewModel>);
  v6 = swift_allocBox(v5);
  v8 = v7;
  v9 = type metadata accessor for MOSuggestionInterstitialListAssetViewModel(0);
  v10 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes(&lazy protocol witness table cache variable for type MOSuggestionInterstitialListAssetViewModel and conformance MOSuggestionInterstitialListAssetViewModel, type metadata accessor for MOSuggestionInterstitialListAssetViewModel, (uint64_t)&protocol conformance descriptor for MOSuggestionInterstitialListAssetViewModel);
  v11 = NSDiffableDataSourceSectionSnapshot.init()(v9, v10);
  v12 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0xB8))(v11);
  v13 = v12;
  if ((unint64_t)v12 >> 62)
  {
    if (v12 >= 0)
      v12 &= 0xFFFFFFFFFFFFFF8uLL;
    v14 = _CocoaArrayWrapper.endIndex.getter(v12);
    if ((v14 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_14:
      v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v13);
      goto LABEL_8;
    }
  }
  else
  {
    v14 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if ((a1 & 0x8000000000000000) != 0 || v14 <= a1)
    goto LABEL_9;
  if ((v13 & 0xC000000000000001) != 0)
    goto LABEL_14;
  if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10) > a1)
  {
    v15 = *(_QWORD *)(v13 + 8 * a1 + 32);
    swift_retain(v15);
LABEL_8:
    swift_bridgeObjectRelease(v13);
    v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v17 = swift_allocObject(v16, 40, 7);
    *(_OWORD *)(v17 + 16) = xmmword_10019EDA0;
    *(_QWORD *)(v17 + 32) = v15;
    v19[0] = v17;
    specialized Array._endMutation()(v17);
    v13 = v19[0];
    swift_retain(v15);
    addItems #1 (_:to:) in MOSuggestionInterstitialExpandableListView.updatedSnapshot(_:)(v19[0], 0, v6);
    swift_release(v15);
LABEL_9:
    swift_bridgeObjectRelease(v13);
    v18 = swift_beginAccess(v8, v19, 0, 0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v5 - 8) + 16))(a2, v8, v5, v18);
    swift_release(v6);
    return;
  }
  __break(1u);
}

uint64_t addItems #1 (_:to:) in MOSuggestionInterstitialExpandableListView.updatedSnapshot(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t result;
  uint64_t i;
  _BYTE *v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  _BYTE v18[24];
  uint64_t v19;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSDiffableDataSourceSectionSnapshot<MOSuggestionInterstitialListAssetViewModel>);
  v7 = swift_projectBox(a3);
  v19 = a2;
  v8 = swift_beginAccess(v7, v18, 33, 0);
  NSDiffableDataSourceSectionSnapshot.append(_:to:)(a1, &v19, v6, v8);
  swift_endAccess(v18);
  if (!((unint64_t)a1 >> 62))
  {
    v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(a1);
    if (v9)
      goto LABEL_3;
    return swift_bridgeObjectRelease(a1);
  }
  if (a1 < 0)
    v17 = a1;
  else
    v17 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  result = _CocoaArrayWrapper.endIndex.getter(v17);
  v9 = result;
  if (!result)
    return swift_bridgeObjectRelease(a1);
LABEL_3:
  if (v9 >= 1)
  {
    for (i = 0; i != v9; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v12 = (_BYTE *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      }
      else
      {
        v12 = *(_BYTE **)(a1 + 8 * i + 32);
        v13 = swift_retain(v12);
      }
      if (v12[88] != 1)
      {
        v14 = (*(uint64_t (**)(__n128))(*(_QWORD *)v12 + 176))(v13);
        if (v14)
        {
          v15 = v14;
          v16 = swift_retain(v12);
          addItems #1 (_:to:) in MOSuggestionInterstitialExpandableListView.updatedSnapshot(_:)(v15, v12, a3, v16);
          swift_bridgeObjectRelease(v15);
          swift_release(v12);
        }
      }
      swift_release(v12);
    }
    return swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall MOSuggestionInterstitialExpandableListView.updateSectionHeaderTitle(section:)(Swift::Int section)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  Class isa;
  id v26;
  uint64_t v27;
  _QWORD *v28;
  __n128 v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;

  v2 = v1;
  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = IndexPath.init(row:section:)(0, section);
  v9 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0xB8))(v8);
  v10 = IndexPath.section.getter(v9);
  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v34 = v9;
    else
      v34 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v11 = _CocoaArrayWrapper.endIndex.getter(v34);
    swift_bridgeObjectRelease(v9);
    if ((v11 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_27:
      v12 = specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v9);
LABEL_8:
      v13 = swift_bridgeObjectRelease(v9);
      v14 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0xD0);
      v15 = v14(v13);
      v16 = MOSuggestionInterstitialListAssetViewModel._groupAssetTypeAndCountDescription(with:)(v15);
      v17 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v12 + 208))(v16);
      v36 = (id)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v12 + 200))(v17);
      v9 = v18;
      v19 = swift_bridgeObjectRelease(v15);
      v20 = v14(v19);
      v21 = MOSuggestionInterstitialListAssetViewModel.hasIdentifiersSelected(_:)(v20);
      v22 = swift_bridgeObjectRelease(v20);
      v23 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0xA0))(v22);
      if (v23)
      {
        v24 = (void *)v23;
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        v26 = objc_msgSend(v24, "cellForItemAtIndexPath:", isa);

        if (v26)
        {
          v27 = type metadata accessor for MOSuggestionInterstitialExpandableListViewCell();
          v28 = (_QWORD *)swift_dynamicCastClass(v26, v27);
          if (v28)
          {
            v30 = v28;
            if (v9)
            {
              v31 = (*(uint64_t (**)(void))((swift_isaMask & *v28) + 0xE0))();
              if (v31)
              {
                v32 = v31;
                v33 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v31 + 176))(v31);
                if (v33)
                {
                  swift_bridgeObjectRelease(v33);
                  v35 = *(id *)((char *)v30
                              + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_titleLabel);
                  v36 = String._bridgeToObjectiveC()();
                  objc_msgSend(v35, "setText:", v36);
                  swift_bridgeObjectRelease(v9);
                  swift_release(v32);

                }
                else
                {
                  swift_bridgeObjectRelease(v9);
                  v29 = swift_release(v32);
                }
              }
              else
              {
                swift_bridgeObjectRelease(v9);
              }
            }
            (*(void (**)(_QWORD, __n128))((swift_isaMask & **(_QWORD **)((char *)v30
                                                                                  + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_checkmarkView))
                                                   + 0xA0))(v21 & 1, v29);
            swift_release(v12);

            goto LABEL_18;
          }

        }
      }
      swift_release(v12);
LABEL_17:
      swift_bridgeObjectRelease(v9);
LABEL_18:
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      return;
    }
  }
  else
  {
    v11 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if ((v10 & 0x8000000000000000) != 0 || v10 >= v11)
    goto LABEL_17;
  if ((v9 & 0xC000000000000001) != 0)
    goto LABEL_27;
  if (v10 < *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(_QWORD *)(v9 + 8 * v10 + 32);
    swift_retain(v12);
    goto LABEL_8;
  }
  __break(1u);
}

void closure #1 in MOSuggestionInterstitialExpandableListView.reloadAll()(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD *Strong;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t (*v29)(void);
  uint64_t v30;
  _BYTE v31[24];
  _BYTE v32[24];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSDiffableDataSourceSectionSnapshot<MOSuggestionInterstitialListAssetViewModel>);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v32, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v7 = Strong;
    v29 = *(uint64_t (**)(void))((swift_isaMask & *Strong) + 0xB8);
    v8 = v29();
    v9 = v8;
    if (v8 >> 62)
      goto LABEL_25;
    v10 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    v11 = swift_bridgeObjectRelease(v8);
    while (1)
    {
      if (!v10)
      {
LABEL_22:
        MOSuggestionInterstitialExpandableListView.printViewModels()();

        return;
      }
      v12 = 0;
      v27 = xmmword_10019EDA0;
      v28 = v3;
      while (1)
      {
        if (v12 >= 0xD)
          goto LABEL_9;
        v11 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v7) + 0x88))(v11);
        if (!v11)
          goto LABEL_9;
        v17 = (void *)v11;
        v18 = swift_allocBox(v2);
        v20 = v19;
        v21 = type metadata accessor for MOSuggestionInterstitialListAssetViewModel(0);
        v22 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes(&lazy protocol witness table cache variable for type MOSuggestionInterstitialListAssetViewModel and conformance MOSuggestionInterstitialListAssetViewModel, type metadata accessor for MOSuggestionInterstitialListAssetViewModel, (uint64_t)&protocol conformance descriptor for MOSuggestionInterstitialListAssetViewModel);
        v23 = NSDiffableDataSourceSectionSnapshot.init()(v21, v22);
        v24 = ((uint64_t (*)(uint64_t))v29)(v23);
        v9 = v24;
        if ((unint64_t)v24 >> 62)
        {
          if (v24 >= 0)
            v24 &= 0xFFFFFFFFFFFFFF8uLL;
          v25 = _CocoaArrayWrapper.endIndex.getter(v24);
          if ((v25 & 0x8000000000000000) != 0)
          {
            __break(1u);
            goto LABEL_22;
          }
        }
        else
        {
          v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        if (v12 < v25)
          break;
LABEL_8:
        swift_bridgeObjectRelease(v9);
        v16 = swift_beginAccess(v20, v31, 0, 0);
        (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v5, v20, v2, v16);
        swift_release(v18);
        LOBYTE(v30) = v12;
        UICollectionViewDiffableDataSource.apply(_:to:animatingDifferences:completion:)(v5, &v30, 1, 0, 0);

        v11 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
LABEL_9:
        if (v10 == ++v12)
          goto LABEL_22;
      }
      if ((v9 & 0xC000000000000001) != 0)
        break;
      if (v12 < *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v13 = *(_QWORD *)(v9 + 8 * v12 + 32);
        swift_retain(v13);
        goto LABEL_7;
      }
      __break(1u);
LABEL_25:
      if (v9 < 0)
        v26 = v9;
      else
        v26 = v9 & 0xFFFFFFFFFFFFFF8;
      v10 = _CocoaArrayWrapper.endIndex.getter(v26);
      v11 = swift_bridgeObjectRelease(v9);
      if (v10 < 0)
      {
        __break(1u);
        return;
      }
    }
    v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v9);
LABEL_7:
    swift_bridgeObjectRelease(v9);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v15 = swift_allocObject(v14, 40, 7);
    *(_OWORD *)(v15 + 16) = v27;
    *(_QWORD *)(v15 + 32) = v13;
    v30 = v15;
    specialized Array._endMutation()(v15);
    v9 = v30;
    swift_retain(v13);
    addItems #1 (_:to:) in MOSuggestionInterstitialExpandableListView.updatedSnapshot(_:)(v9, 0, v18);
    swift_release(v13);
    v3 = v28;
    goto LABEL_8;
  }
}

Swift::Void __swiftcall MOSuggestionInterstitialExpandableListView.printViewModels()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t i;
  unint64_t v3;
  _QWORD *v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  __n128 v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xB8))();
  if ((unint64_t)v1 >> 62)
    goto LABEL_37;
  for (i = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10); i; i = _CocoaArrayWrapper.endIndex.getter(v49))
  {
    v3 = 0;
    v54 = v1 & 0xC000000000000001;
    v50 = v1 + 32;
    v51 = v1 & 0xFFFFFFFFFFFFFF8;
    v52 = i;
    v53 = v1;
    while (v54)
    {
      v4 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v1);
      v5 = __OFADD__(v3, 1);
      v6 = v3 + 1;
      if (v5)
        goto LABEL_34;
LABEL_12:
      v56 = v6;
      if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
        swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
      v7 = type metadata accessor for Logger(0);
      v8 = __swift_project_value_buffer(v7, (uint64_t)static MOAngelLogger.assets);
      v9 = swift_retain_n(v4, 2);
      v10 = Logger.logObject.getter(v9);
      v11 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = swift_slowAlloc(22, -1);
        v13 = swift_slowAlloc(64, -1);
        v59 = v13;
        *(_DWORD *)v12 = 136315394;
        v14 = v4[9];
        v15 = v4[10];
        swift_bridgeObjectRetain(v15);
        *(_QWORD *)(v12 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, &v59);
        swift_bridgeObjectRelease(v15);
        *(_WORD *)(v12 + 12) = 2080;
        v16 = type metadata accessor for UUID(0);
        v17 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v18 = dispatch thunk of CustomStringConvertible.description.getter(v16, v17);
        v20 = v19;
        *(_QWORD *)(v12 + 14) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v19, &v59);
        swift_release_n(v4, 2, v21);
        swift_bridgeObjectRelease(v20);
        _os_log_impl((void *)&_mh_execute_header, v10, v11, "assetViewModel id=%s, uuid=%s", (uint8_t *)v12, 0x16u);
        swift_arrayDestroy(v13, 2, (char *)&type metadata for Any + 8);
        v22 = v13;
        i = v52;
        v1 = v53;
        swift_slowDealloc(v22, -1, -1);
        swift_slowDealloc(v12, -1, -1);

      }
      else
      {

        v23 = swift_release_n(v4, 2, v24);
      }
      v25 = (*(uint64_t (**)(uint64_t))(*v4 + 176))(v23);
      if (v25)
      {
        v26 = v25;
        v55 = v4;
        if ((unint64_t)v25 >> 62)
        {
          if (v25 >= 0)
            v25 &= 0xFFFFFFFFFFFFFF8uLL;
          v27 = _CocoaArrayWrapper.endIndex.getter(v25);
          if (!v27)
          {
LABEL_33:
            swift_release(v4);
            swift_bridgeObjectRelease(v26);
            goto LABEL_5;
          }
        }
        else
        {
          v27 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v27)
            goto LABEL_33;
        }
        if (v27 < 1)
          goto LABEL_35;
        v28 = 0;
        v29 = v26 & 0xC000000000000001;
        v57 = v27;
        v58 = v26;
        do
        {
          if (v29)
          {
            v31 = specialized _ArrayBuffer._getElementSlowPath(_:)(v28, v26);
          }
          else
          {
            v31 = *(_QWORD *)(v26 + 8 * v28 + 32);
            swift_retain(v31);
          }
          v32 = swift_retain_n(v31, 2);
          v33 = Logger.logObject.getter(v32);
          v34 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v33, v34))
          {
            v35 = v8;
            v36 = swift_slowAlloc(22, -1);
            v37 = swift_slowAlloc(64, -1);
            v59 = v37;
            *(_DWORD *)v36 = 136315394;
            v38 = v29;
            v40 = *(_QWORD *)(v31 + 72);
            v39 = *(_QWORD *)(v31 + 80);
            swift_bridgeObjectRetain(v39);
            *(_QWORD *)(v36 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v40, v39, &v59);
            swift_bridgeObjectRelease(v39);
            *(_WORD *)(v36 + 12) = 2080;
            v41 = type metadata accessor for UUID(0);
            v42 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
            v43 = dispatch thunk of CustomStringConvertible.description.getter(v41, v42);
            v45 = v44;
            *(_QWORD *)(v36 + 14) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v43, v44, &v59);
            swift_release_n(v31, 2, v46);
            v47 = v45;
            v29 = v38;
            swift_bridgeObjectRelease(v47);
            _os_log_impl((void *)&_mh_execute_header, v33, v34, "-- subViewModel id=%s, uuid=%s", (uint8_t *)v36, 0x16u);
            swift_arrayDestroy(v37, 2, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v37, -1, -1);
            v48 = v36;
            v8 = v35;
            v27 = v57;
            v26 = v58;
            swift_slowDealloc(v48, -1, -1);
            swift_release(v31);

          }
          else
          {

            swift_release_n(v31, 3, v30);
          }
          ++v28;
        }
        while (v27 != v28);
        swift_release(v55);
        swift_bridgeObjectRelease(v26);
        i = v52;
        v1 = v53;
      }
      else
      {
        swift_release(v4);
      }
LABEL_5:
      v3 = v56;
      if (v56 == i)
        goto LABEL_41;
    }
    if (v3 >= *(_QWORD *)(v51 + 16))
      goto LABEL_36;
    v4 = *(_QWORD **)(v50 + 8 * v3);
    swift_retain(v4);
    v5 = __OFADD__(v3, 1);
    v6 = v3 + 1;
    if (!v5)
      goto LABEL_12;
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    if (v1 < 0)
      v49 = v1;
    else
      v49 = v1 & 0xFFFFFFFFFFFFFF8;
  }
LABEL_41:
  swift_bridgeObjectRelease(v1);
}

unint64_t MOSuggestionInterstitialExpandableListView.assetViewModelAt(indexPath:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v3 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xB8))();
  v4 = IndexPath.section.getter(v3);
  v5 = v4;
  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v14 = v3;
    else
      v14 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v6 = _CocoaArrayWrapper.endIndex.getter(v14);
    v4 = swift_bridgeObjectRelease(v3);
    if ((v6 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_27:
      v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
      goto LABEL_8;
    }
  }
  else
  {
    v6 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if ((v5 & 0x8000000000000000) != 0 || v5 >= v6)
  {
    swift_bridgeObjectRelease(v3);
    return 0;
  }
  if ((v3 & 0xC000000000000001) != 0)
    goto LABEL_27;
  if (v5 >= *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v5 = *(_QWORD *)(v3 + 8 * v5 + 32);
  swift_retain(v5);
LABEL_8:
  v7 = swift_bridgeObjectRelease(v3);
  if (!IndexPath.row.getter(v7))
    return v5;
  v8 = (*(uint64_t (**)(void))(*(_QWORD *)v5 + 176))();
  if (!v8)
    goto LABEL_39;
  v3 = v8;
  v9 = IndexPath.row.getter(v8);
  v10 = __OFSUB__(v9, 1);
  v4 = v9 - 1;
  if (v10)
    goto LABEL_29;
  a1 = v3 & 0xFFFFFFFFFFFFFF8;
  if (!((unint64_t)v3 >> 62))
  {
    v11 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if ((v4 & 0x8000000000000000) == 0)
    {
      while (v4 < v11)
      {
        if ((v3 & 0xC000000000000001) != 0)
          goto LABEL_35;
        if (v4 < *(_QWORD *)(a1 + 16))
        {
          v12 = *(_QWORD *)(v3 + 8 * v4 + 32);
          swift_retain(v12);
          goto LABEL_17;
        }
        __break(1u);
LABEL_37:
        v4 = v16;
        if ((v16 & 0x8000000000000000) != 0)
          break;
      }
    }
    swift_bridgeObjectRelease(v3);
LABEL_39:
    swift_release(v5);
    return 0;
  }
LABEL_30:
  v16 = v4;
  if (v3 >= 0)
    v15 = a1;
  else
    v15 = v3;
  swift_bridgeObjectRetain(v3);
  v11 = _CocoaArrayWrapper.endIndex.getter(v15);
  v4 = swift_bridgeObjectRelease(v3);
  if ((v11 & 0x8000000000000000) == 0)
    goto LABEL_37;
  __break(1u);
LABEL_35:
  v12 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v3);
LABEL_17:
  swift_bridgeObjectRelease(v3);
  swift_release(v5);
  return v12;
}

uint64_t MOSuggestionInterstitialExpandableListView.sectionHasSelection(indexPath:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;
  unint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0;
  v2 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xB8))();
  result = IndexPath.section.getter(v2);
  v4 = result;
  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0)
      v9 = v2;
    else
      v9 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v5 = _CocoaArrayWrapper.endIndex.getter(v9);
    result = swift_bridgeObjectRelease(v2);
    if ((v5 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_15:
      v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
      goto LABEL_8;
    }
  }
  else
  {
    v5 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = 0;
  if ((v4 & 0x8000000000000000) != 0 || v4 >= v5)
    goto LABEL_9;
  if ((v2 & 0xC000000000000001) != 0)
    goto LABEL_15;
  if (v4 < *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v7 = *(_QWORD *)(v2 + 8 * v4 + 32);
    swift_retain(v7);
LABEL_8:
    v8 = swift_bridgeObjectRelease(v2);
    v2 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0xD0))(v8);
    v6 = MOSuggestionInterstitialListAssetViewModel.hasIdentifiersSelected(_:)(v2);
    swift_release(v7);
LABEL_9:
    swift_bridgeObjectRelease(v2);
    return v6 & 1;
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall MOSuggestionInterstitialExpandableListView.selectAllInSection(_:)(Swift::Int a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(Swift::Int *);
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(Swift::Int *, _QWORD);
  uint64_t v33;
  uint64_t v34;
  void *v35;
  Class isa;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  Swift::Int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(Swift::Int *);
  void (*v45)(Swift::Int *, _QWORD);
  _QWORD *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  _BOOL4 v52;
  Swift::Int v53;
  _QWORD *v54;
  uint8_t *v55;
  uint64_t v56;
  _QWORD *v57;
  unint64_t v58;
  uint64_t (*v59)(uint64_t);
  uint64_t (*v60)(Swift::Int *);
  Swift::Int v61;
  uint64_t (*v62)(char *, uint64_t);
  uint64_t v63;
  Swift::Int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v3 = v1;
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v56 - v10;
  IndexPath.init(row:section:)(0, a1);
  MOSuggestionInterstitialExpandableListView.forceCell(indexPath:selected:)((uint64_t)v11, 1);
  v62 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
  v63 = v5;
  v12 = v62(v11, v5);
  v13 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0xB8))(v12);
  v14 = v13;
  if ((unint64_t)v13 >> 62)
  {
    if (v13 >= 0)
      v13 &= 0xFFFFFFFFFFFFFF8uLL;
    v15 = _CocoaArrayWrapper.endIndex.getter(v13);
    if ((v15 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_37:
      v2 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v14);
      goto LABEL_8;
    }
  }
  else
  {
    v15 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (a1 < 0 || v15 <= a1)
  {
    swift_bridgeObjectRelease(v14);
    return;
  }
  if ((v14 & 0xC000000000000001) != 0)
    goto LABEL_37;
  v16 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v16 <= a1)
  {
    __break(1u);
    goto LABEL_39;
  }
  v2 = *(_QWORD **)(v14 + 8 * a1 + 32);
  swift_retain(v2);
LABEL_8:
  v17 = swift_bridgeObjectRelease(v14);
  v18 = (*(uint64_t (**)(uint64_t))(*v2 + 272))(v17);
  if (!v18)
    goto LABEL_15;
  v14 = v18;
  v16 = v18 & 0xFFFFFFFFFFFFFF8;
  if (!(v18 >> 62))
  {
    v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_11;
  }
LABEL_39:
  if (v14 >= 0)
    v47 = v16;
  else
    v47 = v14;
  v19 = _CocoaArrayWrapper.endIndex.getter(v47);
LABEL_11:
  v18 = swift_bridgeObjectRelease(v14);
  if (v19 == 1)
  {
    (*(void (**)(unint64_t))(*v2 + 200))(v18);
    v21 = v20;
    v18 = swift_bridgeObjectRelease(v20);
    if (v21)
    {
      v22 = (*(uint64_t (**)(unint64_t))(*v2 + 176))(v18);
      if (!v22)
      {
        v42 = v2[9];
        v43 = v2[10];
        v44 = *(uint64_t (**)(Swift::Int *))((swift_isaMask & *v3) + 0xE0);
        swift_bridgeObjectRetain(v43);
        v45 = (void (*)(Swift::Int *, _QWORD))v44(&v64);
        specialized Set._Variant.insert(_:)(&v66, v42, v43);
        swift_bridgeObjectRelease(v67);
        v45(&v64, 0);
        goto LABEL_32;
      }
      v18 = swift_bridgeObjectRelease(v22);
    }
  }
LABEL_15:
  v23 = (*(uint64_t (**)(unint64_t))(*v2 + 176))(v18);
  if (!v23)
  {
LABEL_32:
    v46 = v2;
LABEL_51:
    swift_release(v46);
    return;
  }
  v24 = v23;
  v61 = a1;
  v57 = v2;
  if ((unint64_t)v23 >> 62)
  {
    if (v23 >= 0)
      v23 &= 0xFFFFFFFFFFFFFF8uLL;
    v25 = _CocoaArrayWrapper.endIndex.getter(v23);
    if (!v25)
      goto LABEL_46;
  }
  else
  {
    v25 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v25)
    {
LABEL_46:
      swift_bridgeObjectRelease(v24);
      if (serverManager._clientConnections != (NSMutableDictionary *)-1)
        swift_once(&serverManager._clientConnections, one-time initialization function for shared);
      v48 = type metadata accessor for Logger(0);
      v49 = __swift_project_value_buffer(v48, (uint64_t)static MOAngelLogger.shared);
      v50 = Logger.logObject.getter(v49);
      v51 = static os_log_type_t.debug.getter();
      v52 = os_log_type_enabled(v50, v51);
      v53 = v61;
      v54 = v57;
      if (v52)
      {
        v55 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v55 = 134217984;
        v64 = v53;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65, v55 + 4);
        _os_log_impl((void *)&_mh_execute_header, v50, v51, "[MOSuggestionInterstitialExpandableListViewCell] select at section %ld", v55, 0xCu);
        swift_slowDealloc(v55, -1, -1);
        swift_release(v54);

        return;
      }

      v46 = v54;
      goto LABEL_51;
    }
  }
  if (v25 >= 1)
  {
    v26 = 0;
    v27 = *(uint64_t (**)(Swift::Int *))((swift_isaMask & *v3) + 0xE0);
    v59 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0xA0);
    v60 = v27;
    v58 = v24 & 0xC000000000000001;
    do
    {
      if (v58)
      {
        v29 = specialized _ArrayBuffer._getElementSlowPath(_:)(v26, v24);
      }
      else
      {
        v29 = *(_QWORD *)(v24 + 8 * v26 + 32);
        swift_retain(v29);
      }
      ++v26;
      v30 = *(_QWORD *)(v29 + 72);
      v31 = *(_QWORD *)(v29 + 80);
      swift_bridgeObjectRetain(v31);
      v32 = (void (*)(Swift::Int *, _QWORD))v60(&v64);
      specialized Set._Variant.insert(_:)(&v66, v30, v31);
      swift_bridgeObjectRelease(v67);
      v32(&v64, 0);
      v33 = IndexPath.init(row:section:)(v26, v61);
      v34 = v59(v33);
      if (v34
        && (v35 = (void *)v34,
            isa = IndexPath._bridgeToObjectiveC()().super.isa,
            v37 = objc_msgSend(v35, "cellForItemAtIndexPath:", isa),
            v35,
            isa,
            v37))
      {
        v38 = type metadata accessor for MOSuggestionInterstitialExpandableListViewCell();
        v39 = swift_dynamicCastClass(v37, v38);
        if (v39)
        {
          v40 = (*(uint64_t (**)(uint64_t))((swift_isaMask & **(_QWORD **)(v39
                                                                                  + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_checkmarkView))
                                                   + 0xA0))(1);
          v41 = IndexPath.section.getter(v40);
          MOSuggestionInterstitialExpandableListView.updateSectionHeaderTitle(section:)(v41);
        }
        swift_release(v29);

      }
      else
      {
        v28 = swift_release(v29);
      }
      ((void (*)(char *, uint64_t, __n128))v62)(v9, v63, v28);
    }
    while (v25 != v26);
    goto LABEL_46;
  }
  __break(1u);
}

void MOSuggestionInterstitialExpandableListView.forceCell(indexPath:selected:)(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v4;
  void *v5;
  Class isa;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  id v11;

  v4 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0xA0))();
  if (v4)
  {
    v5 = (void *)v4;
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v11 = objc_msgSend(v5, "cellForItemAtIndexPath:", isa);

    if (v11)
    {
      v7 = type metadata accessor for MOSuggestionInterstitialExpandableListViewCell();
      v8 = swift_dynamicCastClass(v11, v7);
      if (v8)
      {
        v9 = (*(uint64_t (**)(_QWORD))((swift_isaMask & **(_QWORD **)(v8
                                                                              + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_checkmarkView))
                                               + 0xA0))(a2 & 1);
        v10 = IndexPath.section.getter(v9);
        MOSuggestionInterstitialExpandableListView.updateSectionHeaderTitle(section:)(v10);
      }

    }
  }
}

Swift::Void __swiftcall MOSuggestionInterstitialExpandableListView.deselectAllInSection(_:)(Swift::Int a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(Swift::Int *);
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(Swift::Int *, _QWORD);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  Class isa;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  Swift::Int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(Swift::Int *);
  void (*v47)(Swift::Int *, _QWORD);
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  _BOOL4 v56;
  Swift::Int v57;
  _QWORD *v58;
  uint8_t *v59;
  uint64_t v60;
  _QWORD *v61;
  unint64_t v62;
  uint64_t (*v63)(uint64_t);
  uint64_t (*v64)(Swift::Int *);
  Swift::Int v65;
  uint64_t (*v66)(char *, uint64_t);
  uint64_t v67;
  Swift::Int v68;
  uint64_t v69;

  v3 = v1;
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v60 - v10;
  IndexPath.init(row:section:)(0, a1);
  MOSuggestionInterstitialExpandableListView.forceCell(indexPath:selected:)((uint64_t)v11, 0);
  v66 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
  v67 = v5;
  v12 = v66(v11, v5);
  v13 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0xB8))(v12);
  v14 = v13;
  if ((unint64_t)v13 >> 62)
  {
    if (v13 >= 0)
      v13 &= 0xFFFFFFFFFFFFFF8uLL;
    v15 = _CocoaArrayWrapper.endIndex.getter(v13);
    if ((v15 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_37:
      v2 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v14);
      goto LABEL_8;
    }
  }
  else
  {
    v15 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (a1 < 0 || v15 <= a1)
  {
    swift_bridgeObjectRelease(v14);
    return;
  }
  if ((v14 & 0xC000000000000001) != 0)
    goto LABEL_37;
  v16 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v16 <= a1)
  {
    __break(1u);
    goto LABEL_39;
  }
  v2 = *(_QWORD **)(v14 + 8 * a1 + 32);
  swift_retain(v2);
LABEL_8:
  v17 = swift_bridgeObjectRelease(v14);
  v18 = (*(uint64_t (**)(uint64_t))(*v2 + 272))(v17);
  if (!v18)
    goto LABEL_15;
  v14 = v18;
  v16 = v18 & 0xFFFFFFFFFFFFFF8;
  if (!(v18 >> 62))
  {
    v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_11;
  }
LABEL_39:
  if (v14 >= 0)
    v51 = v16;
  else
    v51 = v14;
  v19 = _CocoaArrayWrapper.endIndex.getter(v51);
LABEL_11:
  v18 = swift_bridgeObjectRelease(v14);
  if (v19 == 1)
  {
    (*(void (**)(unint64_t))(*v2 + 200))(v18);
    v21 = v20;
    v18 = swift_bridgeObjectRelease(v20);
    if (v21)
    {
      v22 = (*(uint64_t (**)(unint64_t))(*v2 + 176))(v18);
      if (!v22)
      {
        v44 = v2[9];
        v45 = v2[10];
        v46 = *(uint64_t (**)(Swift::Int *))((swift_isaMask & *v3) + 0xE0);
        swift_bridgeObjectRetain(v45);
        v47 = (void (*)(Swift::Int *, _QWORD))v46(&v68);
        specialized Set._Variant.remove(_:)(v44, v45);
        v49 = v48;
        swift_bridgeObjectRelease(v45);
        swift_bridgeObjectRelease(v49);
        v47(&v68, 0);
        goto LABEL_32;
      }
      v18 = swift_bridgeObjectRelease(v22);
    }
  }
LABEL_15:
  v23 = (*(uint64_t (**)(unint64_t))(*v2 + 176))(v18);
  if (!v23)
  {
LABEL_32:
    v50 = v2;
LABEL_51:
    swift_release(v50);
    return;
  }
  v24 = v23;
  v65 = a1;
  v61 = v2;
  if ((unint64_t)v23 >> 62)
  {
    if (v23 >= 0)
      v23 &= 0xFFFFFFFFFFFFFF8uLL;
    v25 = _CocoaArrayWrapper.endIndex.getter(v23);
    if (!v25)
      goto LABEL_46;
  }
  else
  {
    v25 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v25)
    {
LABEL_46:
      swift_bridgeObjectRelease(v24);
      if (serverManager._clientConnections != (NSMutableDictionary *)-1)
        swift_once(&serverManager._clientConnections, one-time initialization function for shared);
      v52 = type metadata accessor for Logger(0);
      v53 = __swift_project_value_buffer(v52, (uint64_t)static MOAngelLogger.shared);
      v54 = Logger.logObject.getter(v53);
      v55 = static os_log_type_t.debug.getter();
      v56 = os_log_type_enabled(v54, v55);
      v57 = v65;
      v58 = v61;
      if (v56)
      {
        v59 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v59 = 134217984;
        v68 = v57;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v68, &v69, v59 + 4);
        _os_log_impl((void *)&_mh_execute_header, v54, v55, "[MOSuggestionInterstitialExpandableListViewCell] de-select at section %ld", v59, 0xCu);
        swift_slowDealloc(v59, -1, -1);
        swift_release(v58);

        return;
      }

      v50 = v58;
      goto LABEL_51;
    }
  }
  if (v25 >= 1)
  {
    v26 = 0;
    v27 = *(uint64_t (**)(Swift::Int *))((swift_isaMask & *v3) + 0xE0);
    v63 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0xA0);
    v64 = v27;
    v62 = v24 & 0xC000000000000001;
    do
    {
      if (v62)
      {
        v29 = specialized _ArrayBuffer._getElementSlowPath(_:)(v26, v24);
      }
      else
      {
        v29 = *(_QWORD *)(v24 + 8 * v26 + 32);
        swift_retain(v29);
      }
      ++v26;
      v30 = *(_QWORD *)(v29 + 72);
      v31 = *(_QWORD *)(v29 + 80);
      swift_bridgeObjectRetain(v31);
      v32 = (void (*)(Swift::Int *, _QWORD))v64(&v68);
      specialized Set._Variant.remove(_:)(v30, v31);
      v34 = v33;
      swift_bridgeObjectRelease(v31);
      swift_bridgeObjectRelease(v34);
      v32(&v68, 0);
      v35 = IndexPath.init(row:section:)(v26, v65);
      v36 = v63(v35);
      if (v36
        && (v37 = (void *)v36,
            isa = IndexPath._bridgeToObjectiveC()().super.isa,
            v39 = objc_msgSend(v37, "cellForItemAtIndexPath:", isa),
            v37,
            isa,
            v39))
      {
        v40 = type metadata accessor for MOSuggestionInterstitialExpandableListViewCell();
        v41 = swift_dynamicCastClass(v39, v40);
        if (v41)
        {
          v42 = (*(uint64_t (**)(_QWORD))((swift_isaMask & **(_QWORD **)(v41
                                                                                 + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_checkmarkView))
                                                  + 0xA0))(0);
          v43 = IndexPath.section.getter(v42);
          MOSuggestionInterstitialExpandableListView.updateSectionHeaderTitle(section:)(v43);
        }
        swift_release(v29);

      }
      else
      {
        v28 = swift_release(v29);
      }
      ((void (*)(char *, uint64_t, __n128))v66)(v9, v67, v28);
    }
    while (v25 != v26);
    goto LABEL_46;
  }
  __break(1u);
}

void MOSuggestionInterstitialExpandableListView.toggleSelectionState(indexPath:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  void *v4;
  Class isa;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  v3 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xA0))();
  if (v3)
  {
    v4 = (void *)v3;
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v11 = objc_msgSend(v4, "cellForItemAtIndexPath:", isa);

    if (v11)
    {
      v6 = type metadata accessor for MOSuggestionInterstitialExpandableListViewCell();
      v7 = (_QWORD *)swift_dynamicCastClass(v11, v6);
      if (v7 && (v8 = (uint64_t)v7, (v9 = (*(uint64_t (**)(void))((swift_isaMask & *v7) + 0xE0))()) != 0))
      {
        v10 = v9;
        if ((*(_BYTE *)(v9 + 90) & 1) != 0)
          MOSuggestionInterstitialExpandableListView.toggleSelectionState(_:cell:indexPath:)((_QWORD *)v9, v8, a1);

        swift_release(v10);
      }
      else
      {

      }
    }
  }
}

void MOSuggestionInterstitialExpandableListView.refreshCellStateAt(indexPath:assetIdentifier:isSelected:)(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  Class isa;
  id v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v31 = a2;
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v4) + 0xA0))(v10);
  if (v13)
  {
    v14 = (void *)v13;
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v16 = objc_msgSend(v14, "cellForItemAtIndexPath:", isa);

    if (v16)
    {
      MOSuggestionInterstitialExpandableListView.forceCell(indexPath:selected:)(a1, a4 & 1);
      if (serverManager._clientConnections != (NSMutableDictionary *)-1)
        swift_once(&serverManager._clientConnections, one-time initialization function for shared);
      v17 = type metadata accessor for Logger(0);
      __swift_project_value_buffer(v17, (uint64_t)static MOAngelLogger.shared);
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
      v18 = swift_bridgeObjectRetain_n(a3, 2);
      v19 = Logger.logObject.getter(v18);
      v20 = static os_log_type_t.debug.getter();
      v21 = v20;
      if (os_log_type_enabled(v19, v20))
      {
        v22 = swift_slowAlloc(28, -1);
        v30 = swift_slowAlloc(64, -1);
        v33 = v30;
        *(_DWORD *)v22 = 136315650;
        v23 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes(&lazy protocol witness table cache variable for type IndexPath and conformance IndexPath, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
        HIDWORD(v28) = v21;
        v24 = dispatch thunk of CustomStringConvertible.description.getter(v8, v23);
        v26 = v25;
        v32 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v25, &v33);
        v29 = v16;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v22 + 4);
        swift_bridgeObjectRelease(v26);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
        *(_WORD *)(v22 + 12) = 1024;
        LODWORD(v32) = a4 & 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, (char *)&v32 + 4, v22 + 14);
        *(_WORD *)(v22 + 18) = 2080;
        swift_bridgeObjectRetain(a3);
        v32 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v31, a3, &v33);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v22 + 20);
        swift_bridgeObjectRelease_n(a3, 3);
        _os_log_impl((void *)&_mh_execute_header, v19, BYTE4(v28), "[MOSuggestionInterstitialExpandableListViewCell] update at %s, selected=%{BOOL}d, id=%s", (uint8_t *)v22, 0x1Cu);
        v27 = v30;
        swift_arrayDestroy(v30, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v27, -1, -1);
        swift_slowDealloc(v22, -1, -1);

      }
      else
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);

        swift_bridgeObjectRelease_n(a3, 2);
      }
    }
  }
}

void MOSuggestionInterstitialExpandableListView.collectionView(_:didDeselectItemAt:)(uint64_t a1, uint64_t a2)
{
  MOSuggestionInterstitialExpandableListView.toggleSelectionState(indexPath:)(a2);
}

uint64_t @objc MOSuggestionInterstitialExpandableListView.collectionView(_:didSelectItemAt:)(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  uint64_t v14;

  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v11 = a3;
  v12 = a1;
  MOSuggestionInterstitialExpandableListView.toggleSelectionState(indexPath:)((uint64_t)v10);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

double MOSuggestionInterstitialExpandableListView.collectionView(_:willDisplay:forItemAt:)(uint64_t a1, void *a2, uint64_t a3)
{
  return specialized MOSuggestionInterstitialExpandableListView.collectionView(_:willDisplay:forItemAt:)(a2, a3);
}

uint64_t sub_100117618()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void partial apply for closure #1 in MOSuggestionInterstitialExpandableListView.reloadAll()()
{
  uint64_t v0;

  closure #1 in MOSuggestionInterstitialExpandableListView.reloadAll()(v0);
}

uint64_t block_copy_helper_27(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_27(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t specialized InterstitialSection.init(rawValue:)(unint64_t result)
{
  if (result >= 0xD)
    return 13;
  return result;
}

uint64_t type metadata accessor for MOSuggestionInterstitialExpandableListView()
{
  return objc_opt_self(_TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView);
}

void partial apply for closure #1 in MOSuggestionInterstitialExpandableListView.configureDataSource()(_QWORD *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  closure #1 in MOSuggestionInterstitialExpandableListView.configureDataSource()(a1, a2, a3, v3);
}

void partial apply for closure #2 in MOSuggestionInterstitialExpandableListView.configureDataSource()(_QWORD *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  closure #2 in MOSuggestionInterstitialExpandableListView.configureDataSource()(a1, a2, a3, v3);
}

uint64_t sub_10011769C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<MOSuggestionInterstitialExpandableListViewCell, MOSuggestionInterstitialListAssetViewModel>);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = (v5 + v3 + v4) & ~v3;
  v8 = v7 + v5;
  v9 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v9(v0 + v4, v1);
  v9(v0 + v7, v1);
  return swift_deallocObject(v0, v8, v6);
}

uint64_t partial apply for closure #3 in MOSuggestionInterstitialExpandableListView.configureDataSource()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;

  v7 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<MOSuggestionInterstitialExpandableListViewCell, MOSuggestionInterstitialListAssetViewModel>)
                 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  return closure #3 in MOSuggestionInterstitialExpandableListView.configureDataSource()(a1, a2, a3, v3 + ((v8 + 16) & ~v8), v3 + ((*(_QWORD *)(v7 + 64) + v8 + ((v8 + 16) & ~v8)) & ~v8));
}

uint64_t sub_100117790()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void specialized MOSuggestionInterstitialExpandableListView.init(coder:)()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  v1 = v0;
  v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v18 = *(_QWORD *)(v2 - 8);
  v19 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_dataSource] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_collectionView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_assetViewModels] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_selectedAssetIdentifiers] = &_swiftEmptySetSingleton;
  v11 = &v1[OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_delegate];
  *((_QWORD *)v11 + 1) = 0;
  swift_unknownObjectWeakInit(v11);
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_controller]);
  v12 = OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_queue;
  v13 = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v13);
  v20 = _swiftEmptyArrayStorage;
  v14 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  v16 = lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A], &demangling cache variable for type metadata for [OS_dispatch_queue.Attributes], (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v20, v15, v16, v5, v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v19);
  *(_QWORD *)&v1[v12] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000002BLL, 0x80000001001A6170, v10, v7, v4, 0);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionInterstitialExpandableListView.swift", 65, 2, 42, 0);
  __break(1u);
}

double specialized MOSuggestionInterstitialExpandableListView.collectionView(_:willDisplay:forItemAt:)(void *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  double result;
  _QWORD *v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  __n128 v31;
  uint64_t v32;
  unint64_t v33;
  __n128 v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  Swift::Int v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  _QWORD *v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;

  v3 = v2;
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MOSuggestionInterstitialExpandableListViewCell();
  v11 = (_QWORD *)swift_dynamicCastClass(a1, v10);
  if (v11)
  {
    v13 = v11;
    v14 = *(uint64_t (**)(void))((swift_isaMask & *v11) + 0xE0);
    v44 = a1;
    v15 = v14();
    if (v15)
    {
      v16 = v15;
      v17 = (*(uint64_t (**)(void))((swift_isaMask & *v3) + 0xD0))();
      v18 = MOSuggestionInterstitialListAssetViewModel.hasIdentifiersSelected(_:)(v17);
      swift_bridgeObjectRelease(v17);
      if (serverManager._clientConnections != (NSMutableDictionary *)-1)
        swift_once(&serverManager._clientConnections, one-time initialization function for shared);
      v19 = type metadata accessor for Logger(0);
      __swift_project_value_buffer(v19, (uint64_t)static MOAngelLogger.shared);
      v20 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
      v43 = a2;
      v20(v9, a2, v6);
      v21 = swift_retain_n(v16);
      v22 = Logger.logObject.getter(v21);
      v23 = static os_log_type_t.debug.getter();
      v24 = v23;
      if (os_log_type_enabled(v22, v23))
      {
        v25 = swift_slowAlloc(28, -1);
        v42 = v3;
        v26 = v25;
        v40 = swift_slowAlloc(64, -1);
        v46 = v40;
        *(_DWORD *)v26 = 136315650;
        v27 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes(&lazy protocol witness table cache variable for type IndexPath and conformance IndexPath, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
        HIDWORD(v39) = v24;
        v28 = dispatch thunk of CustomStringConvertible.description.getter(v6, v27);
        v30 = v29;
        v45 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v29, &v46);
        v41 = v18;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v26 + 4);
        v31 = swift_bridgeObjectRelease(v30);
        (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v31);
        *(_WORD *)(v26 + 12) = 2080;
        v32 = *(_QWORD *)(v16 + 72);
        v33 = *(_QWORD *)(v16 + 80);
        swift_bridgeObjectRetain(v33);
        v45 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v32, v33, &v46);
        LOBYTE(v18) = v41;
        v34 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v26 + 14);
        swift_release_n(v16, v34);
        swift_bridgeObjectRelease(v33);
        *(_WORD *)(v26 + 22) = 1024;
        LODWORD(v45) = v18 & 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, (char *)&v45 + 4, v26 + 24);
        _os_log_impl((void *)&_mh_execute_header, v22, BYTE4(v39), "[MOSuggestionInterstitialExpandableListViewCell] will display cell at %s, id=%s, shouldBeSelected=%{BOOL}d", (uint8_t *)v26, 0x1Cu);
        v35 = v40;
        swift_arrayDestroy(v40, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v35, -1, -1);
        swift_slowDealloc(v26, -1, -1);

      }
      else
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);

        swift_release_n(v16, v36);
      }
      v37 = (*(uint64_t (**)(_QWORD))((swift_isaMask & **(_QWORD **)((char *)v13
                                                                             + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_checkmarkView))
                                              + 0xA0))(v18 & 1);
      v38 = IndexPath.section.getter(v37);
      MOSuggestionInterstitialExpandableListView.updateSectionHeaderTitle(section:)(v38);

      *(_QWORD *)&result = swift_release(v16).n128_u64[0];
    }
    else
    {

    }
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type InterstitialSection and conformance InterstitialSection()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type InterstitialSection and conformance InterstitialSection;
  if (!lazy protocol witness table cache variable for type InterstitialSection and conformance InterstitialSection)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for InterstitialSection, &type metadata for InterstitialSection);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type InterstitialSection and conformance InterstitialSection);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in InterstitialSection()
{
  return lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type [InterstitialSection] and conformance [A], &demangling cache variable for type metadata for [InterstitialSection], (uint64_t)&protocol conformance descriptor for [A]);
}

uint64_t sub_100117E54@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x88))();
  *a2 = result;
  return result;
}

uint64_t sub_100117E94(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0x90);
  v4 = *a1;
  return v3(v2);
}

uint64_t sub_100117EE0@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xA0))();
  *a2 = result;
  return result;
}

uint64_t sub_100117F20(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0xA8);
  v4 = *a1;
  return v3(v2);
}

uint64_t sub_100117F6C@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xB8))();
  *a2 = result;
  return result;
}

uint64_t sub_100117FAC(_QWORD *a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0xC0);
  v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

uint64_t sub_100117FEC@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xD0))();
  *a2 = result;
  return result;
}

uint64_t sub_10011802C(_QWORD *a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0xD8);
  v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

uint64_t sub_10011806C@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xE8))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1001180AC(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **a2) + 0xF0);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t sub_1001180FC@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x100))();
  *a2 = result;
  return result;
}

uint64_t sub_10011813C(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0x108);
  v4 = *a1;
  return v3(v2);
}

uint64_t getEnumTagSinglePayload for InterstitialSection(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF4)
    goto LABEL_17;
  if (a2 + 12 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 12) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 12;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 12;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 12;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v8 = v6 - 13;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for InterstitialSection(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_100118264 + 4 * byte_1001A2845[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_100118298 + 4 * byte_1001A2840[v4]))();
}

uint64_t sub_100118298(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001182A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001182A8);
  return result;
}

uint64_t sub_1001182B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001182BCLL);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1001182C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001182C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InterstitialSection()
{
  return &type metadata for InterstitialSection;
}

uint64_t sub_1001182E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  swift_release(*(_QWORD *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void partial apply for closure #1 in closure #1 in MOSuggestionInterstitialExpandableListView.configureDataSource()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  MOSuggestionInterstitialExpandableListView.toggleSelectionState(_:cell:indexPath:)(*(_QWORD **)(v0 + 24), *(_QWORD *)(v0 + 32), v0 + ((v1 + 40) & ~v1));
}

_QWORD *String.shortenedAssetID.getter(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  _QWORD *result;
  _QWORD *v4;
  uint64_t v5;
  _QWORD v6[4];

  v6[2] = a1;
  v6[3] = a2;
  v6[0] = 35;
  v6[1] = 0xE100000000000000;
  v2 = lazy protocol witness table accessor for type String and conformance String();
  result = (_QWORD *)StringProtocol.components<A>(separatedBy:)(v6, &type metadata for String, &type metadata for String, v2, v2);
  if (result[2])
  {
    v4 = result;
    v5 = result[4];
    swift_bridgeObjectRetain(result[5]);
    swift_bridgeObjectRelease(v4);
    return (_QWORD *)v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id static MOSuggestionAssetReference.consolidatedType(_:)(uint64_t a1)
{
  return (id)specialized static MOSuggestionAssetReference.consolidatedType(_:)(a1);
}

id static MOSuggestionAssetReference.consolidatedGroupType(_:)(uint64_t a1)
{
  return (id)specialized static MOSuggestionAssetReference.consolidatedGroupType(_:)(a1);
}

uint64_t MOSuggestionAssetReference.bundleType.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 24, v2, 0, 0);
  return *(_QWORD *)(v0 + 24);
}

uint64_t MOSuggestionAssetReference.bundleType.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  _BYTE v4[24];

  result = swift_beginAccess(v1 + 24, v4, 1, 0);
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t key path setter for MOSuggestionAssetReference.transferID : MOSuggestionAssetReference(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
  __chkstk_darwin(v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of UUID?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 200))(v6);
}

uint64_t MOSuggestionAssetReference.transferID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID;
  swift_beginAccess(v3, v5, 0, 0);
  return outlined init with copy of UUID?(v3, a1);
}

uint64_t MOSuggestionAssetReference.transferID.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID;
  swift_beginAccess(v3, v5, 33, 0);
  outlined assign with take of UUID?(a1, v3);
  return swift_endAccess(v5);
}

uint64_t (*MOSuggestionAssetReference.transferID.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id MOSuggestionAssetReference.resource.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource, v3, 0, 0);
  return *v1;
}

void MOSuggestionAssetReference.resource.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*MOSuggestionAssetReference.resource.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void *MOSuggestionAssetReference.NUM_WORKOUT_ASSET_REPRESENTATIONS.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetReference.NUM_WORKOUT_ASSET_REPRESENTATIONS;
}

void *MOSuggestionAssetReference.NUM_MOTIONACTIVITY_ASSET_REPRESENTATIONS.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetReference.NUM_MOTIONACTIVITY_ASSET_REPRESENTATIONS;
}

_QWORD *MOSuggestionAssetReference.__allocating_init(resource:assetType:bundleType:appendices:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char v16[24];

  v11 = (_QWORD *)swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v11[5] = 0;
  v11[4] = 0;
  v12 = (char *)v11 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID;
  v13 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  *(_QWORD *)((char *)v11 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = a1;
  swift_beginAccess(v11 + 4, v16, 1, 0);
  v14 = v11[5];
  v11[4] = a4;
  v11[5] = a5;
  swift_bridgeObjectRelease(v14);
  v11[2] = a2;
  v11[3] = a3;
  return v11;
}

_QWORD *MOSuggestionAssetReference.init(resource:assetType:bundleType:appendices:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v15[24];

  v5[5] = 0;
  v5[4] = 0;
  v11 = (char *)v5 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID;
  v12 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = a1;
  swift_beginAccess(v5 + 4, v15, 1, 0);
  v13 = v5[5];
  v5[4] = a4;
  v5[5] = a5;
  swift_bridgeObjectRelease(v13);
  v5[2] = a2;
  v5[3] = a3;
  return v5;
}

uint64_t MOSuggestionAssetReference.packedAssetKeywordString.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;

  v1 = (void *)(*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
  v2 = objc_msgSend(v1, "assets");

  if (!v2)
    return 0;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);

  return v3;
}

uint64_t MOSuggestionAssetReference.packedMetadata.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  Class isa;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v17;
  id v18[4];

  v1 = (void *)(*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
  v2 = objc_msgSend(v1, "data");
  if (!v2)
    goto LABEL_6;
  v3 = v2;
  v4 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v6 = v5;

  v7 = (void *)objc_opt_self(NSJSONSerialization);
  isa = Data._bridgeToObjectiveC()().super.isa;
  v18[0] = 0;
  v9 = objc_msgSend(v7, "JSONObjectWithData:options:error:", isa, 0, v18);

  v10 = v18[0];
  if (!v9)
  {
    v14 = v18[0];
    v15 = _convertNSErrorToError(_:)(v10);

    swift_willThrow();
    outlined consume of Data._Representation(v4, v6);
    swift_errorRelease(v15);
    goto LABEL_6;
  }
  v11 = v18[0];
  _bridgeAnyObjectToAny(_:)(v18, v9);
  outlined consume of Data._Representation(v4, v6);
  swift_unknownObjectRelease(v9);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Swift.AnyObject]);
  if ((swift_dynamicCast(&v17, v18, (char *)&type metadata for Any + 8, v12, 6) & 1) == 0)
  {
LABEL_6:

    return 0;
  }
  v13 = v17;

  return v13;
}

uint64_t MOSuggestionAssetReference.photoLocalIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v20;
  uint64_t v21;

  v1 = v0;
  v2 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
  if (v2)
  {
    v4 = v2;
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOPhotoResourceLocalIdentifier"));
    v7 = v6;
    if (*(_QWORD *)(v4 + 16) && (v8 = specialized __RawDictionaryStorage.find<A>(_:)(v5, v6), (v9 & 1) != 0))
    {
      v10 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v8);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease(v7);
      swift_bridgeObjectRelease(v4);
      v21 = v10;
      if ((swift_dynamicCast(&v20, &v21, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for String, 6) & 1) != 0)return v20;
    }
    else
    {
      swift_bridgeObjectRelease(v7);
      v3 = swift_bridgeObjectRelease(v4);
    }
  }
  v12 = (void *)(*(uint64_t (**)(__n128))(*(_QWORD *)v1 + 216))(v3);
  v13 = objc_msgSend(v12, "assets");

  if (!v13)
    return 0;
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);

  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v14 = type metadata accessor for Logger(0);
  v15 = __swift_project_value_buffer(v14, (uint64_t)static MOAngelLogger.assets);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "[MOSuggestionAssetReference] (non-fatal) Honoring legacy photo behavior in moments db", v18, 2u);
    swift_slowDealloc(v18, -1, -1);
  }

  return v11;
}

uint64_t MOSuggestionAssetReference.mediaType.getter()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  void *v61;
  uint64_t v62;

  result = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
  if (!result)
    return result;
  v2 = result;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOMediaPlayMetaDataKeyPlayerMediaTypeKey"));
  v5 = v4;
  if (!*(_QWORD *)(v2 + 16) || (v6 = specialized __RawDictionaryStorage.find<A>(_:)(v3, v4), (v7 & 1) == 0))
  {
    swift_bridgeObjectRelease(v5);
    swift_bridgeObjectRelease(v2);
    return 0;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v6);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v2);
  v62 = v8;
  type metadata accessor for MOMediaPlayMetaDataKeyPlayerMediaType(0);
  if ((swift_dynamicCast(&v61, &v62, (char *)&type metadata for Swift.AnyObject + 8, v9, 6) & 1) == 0)
    return 0;
  v10 = v61;
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOMediaPlayMetaDataKeyPlayerMediaTypeSong[0]);
  v13 = v12;
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  if (v11 == v14 && v13 == v15)
  {
    swift_bridgeObjectRelease_n(v13, 2);
    goto LABEL_17;
  }
  v17 = v15;
  v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v14, v15, 0);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v17);
  if ((v18 & 1) != 0)
  {
LABEL_17:

    return 1;
  }
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOMediaPlayMetaDataKeyPlayerMediaTypeSongAlbum[0]);
  v21 = v20;
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v24 = v22;
  if (v19 == v23 && v21 == v22)
  {
    swift_bridgeObjectRelease_n(v21, 2);
LABEL_19:

    return 4;
  }
  v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v23, v22, 0);
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v24);
  if ((v25 & 1) != 0)
    goto LABEL_19;
  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOMediaPlayMetaDataKeyPlayerMediaTypePodcastArtist[0]);
  v28 = v27;
  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v31 = v29;
  if (v26 == v30 && v28 == v29)
    goto LABEL_22;
  v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v28, v30, v29, 0);
  swift_bridgeObjectRelease(v28);
  swift_bridgeObjectRelease(v31);
  if ((v32 & 1) != 0)
    goto LABEL_24;
  v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOMediaPlayMetaDataKeyPlayerMediaTypePodcastEpisode[0]);
  v28 = v34;
  v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v37 = v35;
  if (v33 == v36 && v28 == v35)
  {
LABEL_22:
    swift_bridgeObjectRelease_n(v28, 2);
LABEL_24:

    return 2;
  }
  v38 = _stringCompareWithSmolCheck(_:_:expecting:)(v33, v28, v36, v35, 0);
  swift_bridgeObjectRelease(v28);
  swift_bridgeObjectRelease(v37);
  if ((v38 & 1) != 0)
    goto LABEL_24;
  v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOMediaPlayMetaDataKeyPlayerMediaTypeThirdPartyMedia[0]);
  v41 = v40;
  v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v44 = v42;
  if (v39 == v43 && v41 == v42)
  {
    swift_bridgeObjectRelease_n(v41, 2);
LABEL_32:

    return 6;
  }
  v45 = _stringCompareWithSmolCheck(_:_:expecting:)(v39, v41, v43, v42, 0);
  swift_bridgeObjectRelease(v41);
  swift_bridgeObjectRelease(v44);
  if ((v45 & 1) != 0)
    goto LABEL_32;
  v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOMediaPlayMetaDataKeyPlayerMediaTypeThirdPartyMediaAlbum[0]);
  v48 = v47;
  v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v51 = v49;
  if (v46 == v50 && v48 == v49)
  {
    swift_bridgeObjectRelease_n(v48, 2);
LABEL_37:

    return 7;
  }
  v52 = _stringCompareWithSmolCheck(_:_:expecting:)(v46, v48, v50, v49, 0);
  swift_bridgeObjectRelease(v48);
  swift_bridgeObjectRelease(v51);
  if ((v52 & 1) != 0)
    goto LABEL_37;
  v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOMediaPlayMetaDataKeyPlayerMediaTypeThirdPartyMediaArtist);
  v55 = v54;
  v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v58 = v56;
  if (v53 == v57 && v55 == v56)
  {
    v59 = 8;
  }
  else if ((_stringCompareWithSmolCheck(_:_:expecting:)(v53, v55, v57, v56, 0) & 1) != 0)
  {
    v59 = 8;
  }
  else
  {
    v59 = 0;
  }
  v60 = v10;

  swift_bridgeObjectRelease(v55);
  swift_bridgeObjectRelease(v58);
  return v59;
}

uint64_t MOSuggestionAssetReference.motionActivityType.getter()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
  if (result)
  {
    v2 = result;
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOActivityMetaDataMotionType"));
    v5 = v4;
    if (*(_QWORD *)(v2 + 16) && (v6 = specialized __RawDictionaryStorage.find<A>(_:)(v3, v4), (v7 & 1) != 0))
    {
      v8 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v6);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease(v5);
      swift_bridgeObjectRelease(v2);
      v11 = v8;
      type metadata accessor for MOWorkoutMotionActivityAction(0);
      if ((swift_dynamicCast(&v10, &v11, (char *)&type metadata for Swift.AnyObject + 8, v9, 6) & 1) != 0)
        return v10;
    }
    else
    {
      swift_bridgeObjectRelease(v5);
      swift_bridgeObjectRelease(v2);
    }
    return 0;
  }
  return result;
}

id static MOSuggestionAssetReference.consolidatedTypeWithoutVideo(_:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  void *v16;

  v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeLivePhoto);
  v3 = v2;
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v1 == v4 && v3 == v5)
  {
LABEL_12:
    swift_bridgeObjectRelease_n(v3, 2);
    goto LABEL_13;
  }
  v7 = v5;
  v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v1, v3, v4, v5, 0);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v7);
  if ((v8 & 1) == 0)
  {
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypePhoto);
    v3 = v10;
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v9 != v11 || v3 != v12)
    {
      v14 = v12;
      v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v3, v11, v12, 0);
      swift_bridgeObjectRelease(v3);
      swift_bridgeObjectRelease(v14);
      v16 = a1;
      if ((v15 & 1) == 0)
        return v16;
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_13:
  v16 = (void *)MOSuggestionAssetsTypePhoto;
  return v16;
}

uint64_t MOSuggestionAssetReference.assetIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  Swift::String v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  Swift::String v20;
  unint64_t v21;
  Swift::String v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Swift::String v35;
  uint64_t v36;
  unint64_t v37;

  v1 = v0;
  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v0 + 216))(v4);
  v8 = objc_msgSend(v7, "identifier");

  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v9 = UUID.uuidString.getter();
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  v36 = v9;
  v37 = v11;
  swift_bridgeObjectRetain(v11);
  v12._countAndFlagsBits = 95;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  v13 = swift_bridgeObjectRelease(v11);
  v15 = v36;
  v14 = v37;
  v16 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 120))(v13);
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  v36 = v15;
  v37 = v14;
  swift_bridgeObjectRetain(v14);
  v20._countAndFlagsBits = v17;
  v20._object = v19;
  String.append(_:)(v20);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v19);
  v21 = v37;
  swift_bridgeObjectRetain(v37);
  v22._countAndFlagsBits = 95;
  v22._object = (void *)0xE100000000000000;
  String.append(_:)(v22);
  v23 = swift_bridgeObjectRelease(v21);
  v25 = v36;
  v24 = v37;
  v26 = *(void (**)(uint64_t))(*(_QWORD *)v1 + 168);
  v26(v23);
  v28 = v27;
  v29 = swift_bridgeObjectRelease(v27);
  v30 = (void *)0xE000000000000000;
  if (!v28)
  {
    v34 = 0;
    goto LABEL_5;
  }
  v36 = 0;
  v37 = 0xE000000000000000;
  result = ((uint64_t (*)(uint64_t))v26)(v29);
  if (v32)
  {
    v33 = v32;
    String.append(_:)(*(Swift::String *)&result);
    swift_bridgeObjectRelease(v33);
    v34 = v36;
    v30 = (void *)v37;
LABEL_5:
    v36 = v25;
    v37 = v24;
    swift_bridgeObjectRetain(v24);
    v35._countAndFlagsBits = v34;
    v35._object = v30;
    String.append(_:)(v35);
    swift_bridgeObjectRelease(v24);
    swift_bridgeObjectRelease(v30);
    return v36;
  }
  __break(1u);
  return result;
}

_QWORD *MOSuggestionAssetReference.identifierWithoutCacheType.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD *result;
  _QWORD *v6;
  uint64_t v7;
  _QWORD v8[4];

  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
  v3 = v2;
  v8[2] = v1;
  v8[3] = v2;
  v8[0] = 35;
  v8[1] = 0xE100000000000000;
  v4 = lazy protocol witness table accessor for type String and conformance String();
  result = (_QWORD *)StringProtocol.components<A>(separatedBy:)(v8, &type metadata for String, &type metadata for String, v4, v4);
  if (result[2])
  {
    v6 = result;
    v7 = result[4];
    swift_bridgeObjectRetain(result[5]);
    swift_bridgeObjectRelease(v3);
    swift_bridgeObjectRelease(v6);
    return (_QWORD *)v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t MOSuggestionAssetReference.assetGroupIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v10;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v0 + 216))(v3);
  v7 = objc_msgSend(v6, "identifier");

  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v8 = UUID.uuidString.getter();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return v8;
}

uint64_t MOSuggestionAssetReference.logDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  void *object;
  Swift::String v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  Swift::String v9;

  _StringGuts.grow(_:)(23);
  v1 = swift_bridgeObjectRelease(0xE000000000000000);
  v2._countAndFlagsBits = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v0 + 288))(v1);
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  v4._countAndFlagsBits = 0x7954746573736120;
  v4._object = (void *)0xEB000000003D6570;
  String.append(_:)(v4);
  v5 = (void *)(*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  v9._countAndFlagsBits = v6;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(v8);
  return 0x3D64497465737361;
}

Swift::Void __swiftcall MOSuggestionAssetReference.addAppendices(_:)(Swift::String a1)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(_BYTE *, _QWORD);
  uint64_t v7;
  Swift::String v8;
  _BYTE v9[32];

  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  (*(void (**)(void))(*(_QWORD *)v1 + 168))();
  v5 = v4;
  swift_bridgeObjectRelease(v4);
  if (!v5)
    (*(void (**)(_QWORD, unint64_t))(*(_QWORD *)v1 + 176))(0, 0xE000000000000000);
  v6 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))(*(_QWORD *)v1 + 184))(v9);
  if (*(_QWORD *)(v7 + 8))
  {
    v8._countAndFlagsBits = countAndFlagsBits;
    v8._object = object;
    String.append(_:)(v8);
  }
  v6(v9, 0);
}

uint64_t MOSuggestionAssetReference.addCacheType(_:)(char a1)
{
  uint64_t v1;
  Swift::String v3;
  unint64_t v4;
  char v6;
  uint64_t v7;
  unint64_t v8;

  v7 = 0;
  v8 = 0xE000000000000000;
  v3._countAndFlagsBits = 0x5954454843414323;
  v3._object = (void *)0xEA00000000004550;
  String.append(_:)(v3);
  v6 = a1;
  _print_unlocked<A, B>(_:_:)(&v6, &v7, &type metadata for MOSuggestionAssetTileSize, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v4 = v8;
  (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)v1 + 320))(v7, v8);
  return swift_bridgeObjectRelease(v4);
}

uint64_t MOSuggestionAssetReference.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  outlined destroy of UUID?(v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID);

  return v0;
}

double MOSuggestionAssetReference.__deallocating_deinit()
{
  uint64_t v0;
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  outlined destroy of UUID?(v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID);

  *(_QWORD *)&result = swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52)).n128_u64[0];
  return result;
}

uint64_t MOEvergreenAssetReference.prompts.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter(&OBJC_IVAR____TtC16MomentsUIService25MOEvergreenAssetReference_prompts);
}

uint64_t MOEvergreenAssetReference.prompts.setter(uint64_t a1)
{
  return MOSuggestionAssetMapsClusterer.skipRows.setter(a1, &OBJC_IVAR____TtC16MomentsUIService25MOEvergreenAssetReference_prompts);
}

uint64_t (*MOEvergreenAssetReference.prompts.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService25MOEvergreenAssetReference_prompts, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

_QWORD *MOEvergreenAssetReference.__allocating_init(resource:appendices:prompts:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v16;
  char v17[24];

  swift_bridgeObjectRelease(a3);
  v7 = (_QWORD *)swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  *(_QWORD *)((char *)v7 + OBJC_IVAR____TtC16MomentsUIService25MOEvergreenAssetReference_prompts) = 0;
  v8 = (void *)MOSuggestionAssetsTypeReflectionPrompt;
  v7[5] = 0;
  v7[4] = 0;
  v9 = (char *)v7 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID;
  v10 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(_QWORD *)((char *)v7 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = a1;
  swift_beginAccess(v7 + 4, v17, 1, 0);
  v11 = v7[5];
  v7[4] = 0;
  v7[5] = 0;
  v12 = v8;
  swift_bridgeObjectRelease(v11);
  v7[2] = v12;
  v7[3] = 0;
  v13 = (_QWORD *)((char *)v7 + OBJC_IVAR____TtC16MomentsUIService25MOEvergreenAssetReference_prompts);
  swift_beginAccess((char *)v7 + OBJC_IVAR____TtC16MomentsUIService25MOEvergreenAssetReference_prompts, &v16, 1, 0);
  v14 = *v13;
  *v13 = a4;
  swift_bridgeObjectRelease(v14);
  return v7;
}

_QWORD *MOEvergreenAssetReference.init(resource:appendices:prompts:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  void *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v15;
  char v16[24];

  swift_bridgeObjectRelease(a3);
  *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC16MomentsUIService25MOEvergreenAssetReference_prompts) = 0;
  v7 = (void *)MOSuggestionAssetsTypeReflectionPrompt;
  v4[5] = 0;
  v4[4] = 0;
  v8 = (char *)v4 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID;
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = a1;
  swift_beginAccess(v4 + 4, v16, 1, 0);
  v10 = v4[5];
  v4[4] = 0;
  v4[5] = 0;
  v11 = v7;
  swift_bridgeObjectRelease(v10);
  v4[2] = v11;
  v4[3] = 0;
  v12 = (_QWORD *)((char *)v4 + OBJC_IVAR____TtC16MomentsUIService25MOEvergreenAssetReference_prompts);
  swift_beginAccess((char *)v4 + OBJC_IVAR____TtC16MomentsUIService25MOEvergreenAssetReference_prompts, &v15, 1, 0);
  v13 = *v12;
  *v12 = a4;
  swift_bridgeObjectRelease(v13);
  return v4;
}

void MOEvergreenAssetReference.init(resource:assetType:bundleType:appendices:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  MOEvergreenAssetReference.__allocating_init(resource:assetType:bundleType:appendices:)(a1, a2, a3, a4, a5, (uint64_t)"MomentsUIService.MOEvergreenAssetReference", 42);
}

uint64_t MOEvergreenAssetReference.__ivar_destroyer()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MomentsUIService25MOEvergreenAssetReference_prompts));
}

uint64_t MOEvergreenAssetReference.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  outlined destroy of UUID?(v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MomentsUIService25MOEvergreenAssetReference_prompts));
  return v0;
}

double MOEvergreenAssetReference.__deallocating_deinit()
{
  uint64_t v0;
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  outlined destroy of UUID?(v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MomentsUIService25MOEvergreenAssetReference_prompts));
  *(_QWORD *)&result = swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52)).n128_u64[0];
  return result;
}

uint64_t MOMultiMapAssetReference.locationResources.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter(&OBJC_IVAR____TtC16MomentsUIService24MOMultiMapAssetReference_locationResources);
}

uint64_t MOMultiMapAssetReference.locationResources.setter(uint64_t a1)
{
  return MOSuggestionAssetMapsClusterer.skipRows.setter(a1, &OBJC_IVAR____TtC16MomentsUIService24MOMultiMapAssetReference_locationResources);
}

uint64_t (*MOMultiMapAssetReference.locationResources.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService24MOMultiMapAssetReference_locationResources, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void *MOMultiMapAssetReference.weatherResource.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService24MOMultiMapAssetReference_weatherResource);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService24MOMultiMapAssetReference_weatherResource, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void MOMultiMapAssetReference.weatherResource.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC16MomentsUIService24MOMultiMapAssetReference_weatherResource);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*MOMultiMapAssetReference.weatherResource.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService24MOMultiMapAssetReference_weatherResource, a1, 33, 0);
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

uint64_t MOMultiMapAssetReference.pointOfInterestResources.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter(&OBJC_IVAR____TtC16MomentsUIService24MOMultiMapAssetReference_pointOfInterestResources);
}

uint64_t MOMultiMapAssetReference.pointOfInterestResources.setter(uint64_t a1)
{
  return MOSuggestionAssetMapsClusterer.skipRows.setter(a1, &OBJC_IVAR____TtC16MomentsUIService24MOMultiMapAssetReference_pointOfInterestResources);
}

uint64_t (*MOMultiMapAssetReference.pointOfInterestResources.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService24MOMultiMapAssetReference_pointOfInterestResources, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

_QWORD *MOMultiMapAssetReference.__allocating_init(locationResources:weatherResource:pointOfInterestResources:bundleType:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;

  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v9 = specialized MOMultiMapAssetReference.init(locationResources:weatherResource:pointOfInterestResources:bundleType:)(a1, a2, a3, a4);

  return v9;
}

_QWORD *MOMultiMapAssetReference.init(locationResources:weatherResource:pointOfInterestResources:bundleType:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;

  v5 = specialized MOMultiMapAssetReference.init(locationResources:weatherResource:pointOfInterestResources:bundleType:)(a1, a2, a3, a4);

  return v5;
}

void MOMultiMapAssetReference.init(resource:assetType:bundleType:appendices:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  MOEvergreenAssetReference.__allocating_init(resource:assetType:bundleType:appendices:)(a1, a2, a3, a4, a5, (uint64_t)"MomentsUIService.MOMultiMapAssetReference", 41);
}

uint64_t MOMultiMapAssetReference.__ivar_destroyer()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC16MomentsUIService24MOMultiMapAssetReference_locationResources));

  return swift_bridgeObjectRelease(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC16MomentsUIService24MOMultiMapAssetReference_pointOfInterestResources));
}

uint64_t MOMultiMapAssetReference.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  outlined destroy of UUID?(v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID);

  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC16MomentsUIService24MOMultiMapAssetReference_locationResources));

  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC16MomentsUIService24MOMultiMapAssetReference_pointOfInterestResources));
  return v0;
}

double MOMultiMapAssetReference.__deallocating_deinit()
{
  uint64_t v0;
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  outlined destroy of UUID?(v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID);

  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC16MomentsUIService24MOMultiMapAssetReference_locationResources));

  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC16MomentsUIService24MOMultiMapAssetReference_pointOfInterestResources));
  *(_QWORD *)&result = swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52)).n128_u64[0];
  return result;
}

id MOGenericMapAssetReference.associatedMotionType.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MomentsUIService26MOGenericMapAssetReference_associatedMotionType);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService26MOGenericMapAssetReference_associatedMotionType, v3, 0, 0);
  return *v1;
}

void MOGenericMapAssetReference.associatedMotionType.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC16MomentsUIService26MOGenericMapAssetReference_associatedMotionType);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*MOGenericMapAssetReference.associatedMotionType.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService26MOGenericMapAssetReference_associatedMotionType, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

_QWORD *MOGenericMapAssetReference.__allocating_init(associatedMotionType:resource:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  void *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char v12[24];

  v5 = (_QWORD *)swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC16MomentsUIService26MOGenericMapAssetReference_associatedMotionType) = a1;
  v6 = (void *)MOSuggestionAssetsTypeGenericMap;
  v5[5] = 0;
  v5[4] = 0;
  v7 = (char *)v5 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID;
  v8 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = a2;
  swift_beginAccess(v5 + 4, v12, 1, 0);
  v9 = v5[5];
  v5[4] = 0;
  v5[5] = 0;
  v10 = v6;
  swift_bridgeObjectRelease(v9);
  v5[2] = v10;
  v5[3] = 0;
  return v5;
}

_QWORD *MOGenericMapAssetReference.init(associatedMotionType:resource:)(void *a1, uint64_t a2)
{
  _QWORD *v2;
  void *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  char v12[24];

  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService26MOGenericMapAssetReference_associatedMotionType) = a1;
  v5 = (void *)MOSuggestionAssetsTypeGenericMap;
  v2[5] = 0;
  v2[4] = 0;
  v6 = (char *)v2 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID;
  v7 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = a2;
  swift_beginAccess(v2 + 4, v12, 1, 0);
  v8 = v2[5];
  v2[4] = 0;
  v2[5] = 0;
  v9 = a1;
  v10 = v5;
  swift_bridgeObjectRelease(v8);
  v2[2] = v10;
  v2[3] = 0;

  return v2;
}

void MOGenericMapAssetReference.init(resource:assetType:bundleType:appendices:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  MOEvergreenAssetReference.__allocating_init(resource:assetType:bundleType:appendices:)(a1, a2, a3, a4, a5, (uint64_t)"MomentsUIService.MOGenericMapAssetReference", 43);
}

void MOGenericMapAssetReference.__ivar_destroyer()
{
  uint64_t v0;

}

uint64_t MOGenericMapAssetReference.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  outlined destroy of UUID?(v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID);

  return v0;
}

double MOGenericMapAssetReference.__deallocating_deinit()
{
  uint64_t v0;
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  outlined destroy of UUID?(v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID);

  *(_QWORD *)&result = swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52)).n128_u64[0];
  return result;
}

uint64_t MOWorkoutGroupAssetReference.workoutResources.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter(&OBJC_IVAR____TtC16MomentsUIService28MOWorkoutGroupAssetReference_workoutResources);
}

uint64_t MOWorkoutGroupAssetReference.workoutResources.setter(uint64_t a1)
{
  return MOSuggestionAssetMapsClusterer.skipRows.setter(a1, &OBJC_IVAR____TtC16MomentsUIService28MOWorkoutGroupAssetReference_workoutResources);
}

uint64_t (*MOWorkoutGroupAssetReference.workoutResources.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService28MOWorkoutGroupAssetReference_workoutResources, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOWorkoutGroupAssetReference.__allocating_init(workoutResources:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  MOWorkoutGroupAssetReference.init(workoutResources:)(a1);
  return v3;
}

uint64_t MOWorkoutGroupAssetReference.init(workoutResources:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t result;
  id v5;
  id v6;
  void *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  char v13[24];

  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService28MOWorkoutGroupAssetReference_workoutResources) = a1;
  if (!((unint64_t)a1 >> 62))
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(a1);
    if (v3)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease(a1);
    __break(1u);
    goto LABEL_12;
  }
  if (a1 < 0)
    v12 = a1;
  else
    v12 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  result = _CocoaArrayWrapper.endIndex.getter(v12);
  if (!result)
    goto LABEL_11;
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_12:
    v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    goto LABEL_6;
  }
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(id *)(a1 + 32);
LABEL_6:
    v6 = v5;
    swift_bridgeObjectRelease(a1);
    v7 = (void *)MOSuggestionAssetsTypeWorkoutGroup;
    v1[5] = 0;
    v1[4] = 0;
    v8 = (char *)v1 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID;
    v9 = type metadata accessor for UUID(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
    *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = v6;
    swift_beginAccess(v1 + 4, v13, 1, 0);
    v10 = v1[5];
    v1[4] = 0;
    v1[5] = 0;
    v11 = v7;
    swift_bridgeObjectRelease(v10);
    v1[2] = v11;
    v1[3] = 0;
    return (uint64_t)v1;
  }
  __break(1u);
  return result;
}

void MOWorkoutGroupAssetReference.init(resource:assetType:bundleType:appendices:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  MOEvergreenAssetReference.__allocating_init(resource:assetType:bundleType:appendices:)(a1, a2, a3, a4, a5, (uint64_t)"MomentsUIService.MOWorkoutGroupAssetReference", 45);
}

void MOEvergreenAssetReference.__allocating_init(resource:assetType:bundleType:appendices:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _swift_stdlib_reportUnimplementedInitializer(a6, a7, "init(resource:assetType:bundleType:appendices:)", 47, 0);
  __break(1u);
}

uint64_t MOWorkoutGroupAssetReference.__ivar_destroyer()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC16MomentsUIService28MOWorkoutGroupAssetReference_workoutResources));
}

uint64_t MOWorkoutGroupAssetReference.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  outlined destroy of UUID?(v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID);

  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC16MomentsUIService28MOWorkoutGroupAssetReference_workoutResources));
  return v0;
}

double MOWorkoutGroupAssetReference.__deallocating_deinit()
{
  uint64_t v0;
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  outlined destroy of UUID?(v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID);

  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC16MomentsUIService28MOWorkoutGroupAssetReference_workoutResources));
  *(_QWORD *)&result = swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52)).n128_u64[0];
  return result;
}

void MOResource.workoutUUID.getter(uint64_t a1@<X8>)
{
  MOResource.workoutUUID.getter(MOWorkoutMetaDataKeyWorkoutID, a1);
}

void MOResource.stateOfMindUUID.getter(uint64_t a1@<X8>)
{
  MOResource.workoutUUID.getter(&MOStateOfMindMetaDataStateOfMindID, a1);
}

void MOResource.workoutUUID.getter(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  id v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void *v10;
  Class isa;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  id v28;
  uint64_t v29;

  v5 = objc_msgSend(v2, "data");
  if (v5)
  {
    v6 = v5;
    v7 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v9 = v8;

    v10 = (void *)objc_opt_self(NSJSONSerialization);
    isa = Data._bridgeToObjectiveC()().super.isa;
    v28 = 0;
    v12 = objc_msgSend(v10, "JSONObjectWithData:options:error:", isa, 0, &v28);

    v13 = v28;
    if (v12)
    {
      v14 = v28;
      _bridgeAnyObjectToAny(_:)(&v28, v12);
      outlined consume of Data._Representation(v7, v9);
      swift_unknownObjectRelease(v12);
      v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Swift.AnyObject]);
      if ((swift_dynamicCast(v27, &v28, (char *)&type metadata for Any + 8, v15, 6) & 1) != 0)
      {
        v16 = v27[0];
        v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(*a1);
        v19 = v18;
        if (*(_QWORD *)(v16 + 16) && (v20 = specialized __RawDictionaryStorage.find<A>(_:)(v17, v18), (v21 & 1) != 0))
        {
          v22 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v20);
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease(v19);
          swift_bridgeObjectRelease(v16);
          v27[0] = v22;
          if ((swift_dynamicCast(&v28, v27, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for String, 6) & 1) != 0)
          {
            v23 = v29;
            UUID.init(uuidString:)(v28, v29);
            swift_bridgeObjectRelease(v23);
            return;
          }
        }
        else
        {
          swift_bridgeObjectRelease(v19);
          swift_bridgeObjectRelease(v16);
        }
      }
    }
    else
    {
      v24 = v28;
      v25 = _convertNSErrorToError(_:)(v13);

      swift_willThrow();
      outlined consume of Data._Representation(v7, v9);
      swift_errorRelease(v25);
    }
  }
  v26 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(a2, 1, 1, v26);
}

id MOResource.photoLocalIdentifier.getter()
{
  void *v0;
  void *v1;
  id v2;
  double v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  void *v8;
  Class isa;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  _QWORD v32[2];
  id v33;

  v1 = v0;
  v2 = objc_msgSend(v0, "data");
  if (v2)
  {
    v4 = v2;
    v5 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v7 = v6;

    v8 = (void *)objc_opt_self(NSJSONSerialization);
    isa = Data._bridgeToObjectiveC()().super.isa;
    v33 = 0;
    v10 = objc_msgSend(v8, "JSONObjectWithData:options:error:", isa, 0, &v33);

    v11 = v33;
    if (v10)
    {
      v12 = v33;
      _bridgeAnyObjectToAny(_:)(&v33, v10);
      outlined consume of Data._Representation(v5, v7);
      swift_unknownObjectRelease(v10);
      v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Swift.AnyObject]);
      if ((swift_dynamicCast(v32, &v33, (char *)&type metadata for Any + 8, v13, 6) & 1) != 0)
      {
        v14 = v32[0];
        v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOPhotoResourceLocalIdentifier"));
        v17 = v16;
        if (*(_QWORD *)(v14 + 16) && (v18 = specialized __RawDictionaryStorage.find<A>(_:)(v15, v16), (v19 & 1) != 0))
        {
          v20 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v18);
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease(v17);
          swift_bridgeObjectRelease(v14);
          v32[0] = v20;
          if ((swift_dynamicCast(&v33, v32, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for String, 6) & 1) != 0)return v33;
        }
        else
        {
          swift_bridgeObjectRelease(v17);
          *(_QWORD *)&v3 = swift_bridgeObjectRelease(v14).n128_u64[0];
        }
      }
    }
    else
    {
      v22 = v33;
      v23 = _convertNSErrorToError(_:)(v11);

      swift_willThrow();
      outlined consume of Data._Representation(v5, v7);
      swift_errorRelease(v23);
    }
  }
  v24 = objc_msgSend(v1, "assets", v3);
  if (!v24)
    return 0;
  v25 = v24;
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);

  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v26 = type metadata accessor for Logger(0);
  v27 = __swift_project_value_buffer(v26, (uint64_t)static MOAngelLogger.assets);
  v28 = Logger.logObject.getter(v27);
  v29 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v30 = 0;
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "[MOSuggestionAssetReference] (non-fatal) Honoring legacy photo behavior in moments db", v30, 2u);
    swift_slowDealloc(v30, -1, -1);
  }

  return (id)v21;
}

id MOResource.bundleId.getter()
{
  void *v0;
  id result;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  void *v6;
  Class isa;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD v21[2];
  id v22;

  result = objc_msgSend(v0, "data");
  if (result)
  {
    v2 = result;
    v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)(result);
    v5 = v4;

    v6 = (void *)objc_opt_self(NSJSONSerialization);
    isa = Data._bridgeToObjectiveC()().super.isa;
    v22 = 0;
    v8 = objc_msgSend(v6, "JSONObjectWithData:options:error:", isa, 0, &v22);

    v9 = v22;
    if (v8)
    {
      v10 = v22;
      _bridgeAnyObjectToAny(_:)(&v22, v8);
      outlined consume of Data._Representation(v3, v5);
      swift_unknownObjectRelease(v8);
      v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Swift.AnyObject]);
      if ((swift_dynamicCast(v21, &v22, (char *)&type metadata for Any + 8, v11, 6) & 1) != 0)
      {
        v12 = v21[0];
        v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOMediaPlayMetaDataKeyPlayerBundleID"));
        v15 = v14;
        if (*(_QWORD *)(v12 + 16) && (v16 = specialized __RawDictionaryStorage.find<A>(_:)(v13, v14), (v17 & 1) != 0))
        {
          v18 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v16);
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease(v15);
          swift_bridgeObjectRelease(v12);
          v21[0] = v18;
          if ((swift_dynamicCast(&v22, v21, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for String, 6) & 1) != 0)return v22;
        }
        else
        {
          swift_bridgeObjectRelease(v15);
          swift_bridgeObjectRelease(v12);
        }
      }
    }
    else
    {
      v19 = v22;
      v20 = _convertNSErrorToError(_:)(v9);

      swift_willThrow();
      outlined consume of Data._Representation(v3, v5);
      swift_errorRelease(v20);
    }
    return 0;
  }
  return result;
}

_QWORD *specialized MOMultiMapAssetReference.init(locationResources:weatherResource:pointOfInterestResources:bundleType:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  void **v10;
  uint64_t *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  id v34;
  NSString v35;
  id v36;
  void *v37;
  char *v38;
  uint64_t v39;
  _BYTE v41[24];
  char v42[24];
  char v43[24];

  v5 = v4;
  v10 = (void **)((char *)v5 + OBJC_IVAR____TtC16MomentsUIService24MOMultiMapAssetReference_weatherResource);
  *v10 = 0;
  v11 = (_QWORD *)((char *)v5 + OBJC_IVAR____TtC16MomentsUIService24MOMultiMapAssetReference_pointOfInterestResources);
  *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC16MomentsUIService24MOMultiMapAssetReference_pointOfInterestResources) = 0;
  *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC16MomentsUIService24MOMultiMapAssetReference_locationResources) = a1;
  swift_beginAccess(v10, v43, 1, 0);
  v12 = *v10;
  *v10 = a2;
  swift_retain(v5);
  swift_bridgeObjectRetain(a1);
  v13 = a2;

  swift_beginAccess(v11, v42, 1, 0);
  v14 = *v11;
  *v11 = a3;
  swift_release(v5);
  swift_bridgeObjectRelease(v14);
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v28 = a1;
    else
      v28 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    if (_CocoaArrayWrapper.endIndex.getter(v28))
      goto LABEL_3;
  }
  else
  {
    v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v15)
    {
LABEL_3:
      if ((a1 & 0xC000000000000001) != 0)
      {
        v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
        goto LABEL_6;
      }
      if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v16 = *(id *)(a1 + 32);
LABEL_6:
        v17 = v16;
        swift_bridgeObjectRelease(a1);
        v18 = (id)MOSuggestionAssetsTypeMultiPinMap;
        if ((unint64_t)a1 >> 62)
        {
          if (a1 < 0)
            v21 = a1;
          else
            v21 = a1 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(a1);
          v22 = v18;
          v19 = _CocoaArrayWrapper.endIndex.getter(v21);
          swift_bridgeObjectRelease(a1);
        }
        else
        {
          v19 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
          v20 = MOSuggestionAssetsTypeMultiPinMap;
        }
        swift_bridgeObjectRelease(a1);
        if (v19 <= 1)
          v23 = 0;
        else
          v23 = 0x49544C554DLL;
        if (v19 <= 1)
          v24 = 0;
        else
          v24 = 0xE500000000000000;
        v5[5] = 0;
        v5[4] = 0;
        v25 = (char *)v5 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID;
        v26 = type metadata accessor for UUID(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
        *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = v17;
        swift_beginAccess(v5 + 4, v41, 1, 0);
        v27 = v5[5];
        v5[4] = v23;
        v5[5] = v24;
        goto LABEL_27;
      }
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRelease_n(a1, 2);
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
LABEL_30:
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v29 = type metadata accessor for Logger(0);
  v30 = __swift_project_value_buffer(v29, (uint64_t)static MOAngelLogger.assets);
  v31 = Logger.logObject.getter(v30);
  v32 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v33 = 0;
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "Empty Multimap reference", v33, 2u);
    swift_slowDealloc(v33, -1, -1);
  }

  v34 = objc_allocWithZone((Class)MOResource);
  v35 = String._bridgeToObjectiveC()();
  v36 = objc_msgSend(v34, "initWithName:type:", v35, 6);

  v37 = (void *)MOSuggestionAssetsTypeMultiPinMap;
  v5[5] = 0;
  v5[4] = 0;
  v38 = (char *)v5 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID;
  v39 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v38, 1, 1, v39);
  *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = v36;
  swift_beginAccess(v5 + 4, v41, 1, 0);
  v27 = v5[5];
  v5[4] = 0;
  v5[5] = 0;
  v18 = v37;
LABEL_27:
  swift_bridgeObjectRelease(v27);
  v5[2] = v18;
  v5[3] = a4;
  return v5;
}

uint64_t specialized static MOSuggestionAssetReference.consolidatedType(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;

  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeLivePhoto);
  v4 = v3;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v2 == v5 && v4 == v6)
    goto LABEL_13;
  v8 = v6;
  v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, v4, v5, v6, 0);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v8);
  if ((v9 & 1) != 0)
    return MOSuggestionAssetsTypePhoto;
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypePhoto);
  v4 = v11;
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v10 == v12 && v4 == v13)
  {
LABEL_13:
    swift_bridgeObjectRelease_n(v4, 2);
    return MOSuggestionAssetsTypePhoto;
  }
  v15 = v13;
  v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v4, v12, v13, 0);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v15);
  if ((v16 & 1) == 0)
  {
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeVideo);
    v4 = v18;
    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    v21 = v19;
    if (v17 != v20 || v4 != v19)
    {
      v23 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v4, v20, v19, 0);
      swift_bridgeObjectRelease(v4);
      swift_bridgeObjectRelease(v21);
      if ((v23 & 1) == 0)
        return a1;
      return MOSuggestionAssetsTypePhoto;
    }
    goto LABEL_13;
  }
  return MOSuggestionAssetsTypePhoto;
}

uint64_t specialized static MOSuggestionAssetReference.consolidatedGroupType(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;

  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeActivityRings);
  v4 = v3;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v2 == v5 && v4 == v6)
    goto LABEL_13;
  v8 = v6;
  v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, v4, v5, v6, 0);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v8);
  if ((v9 & 1) == 0)
  {
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeRoutePreview);
    v4 = v11;
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v10 == v12 && v4 == v13)
      goto LABEL_13;
    v15 = v13;
    v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v4, v12, v13, 0);
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(v15);
    if ((v16 & 1) == 0)
    {
      v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeSystemImage);
      v4 = v18;
      v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
      v21 = v19;
      if (v17 == v20 && v4 == v19)
      {
LABEL_13:
        swift_bridgeObjectRelease_n(v4, 2);
        goto LABEL_14;
      }
      v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v4, v20, v19, 0);
      swift_bridgeObjectRelease(v4);
      swift_bridgeObjectRelease(v21);
      if ((v24 & 1) != 0)
        goto LABEL_14;
      v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeLivePhoto);
      v27 = v26;
      v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
      v30 = v28;
      if (v25 != v29 || v27 != v28)
      {
        v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v25, v27, v29, v28, 0);
        swift_bridgeObjectRelease(v27);
        swift_bridgeObjectRelease(v30);
        if ((v31 & 1) != 0)
          goto LABEL_25;
        v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeVideo);
        v27 = v33;
        v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
        v36 = v34;
        if (v32 != v35 || v27 != v34)
        {
          v37 = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v27, v35, v34, 0);
          swift_bridgeObjectRelease(v27);
          swift_bridgeObjectRelease(v36);
          if ((v37 & 1) == 0)
            return a1;
          goto LABEL_25;
        }
      }
      swift_bridgeObjectRelease_n(v27, 2);
LABEL_25:
      v22 = &MOSuggestionAssetsTypePhoto;
      return *(_QWORD *)v22;
    }
  }
LABEL_14:
  v22 = &MOSuggestionAssetsTypeWorkout;
  return *(_QWORD *)v22;
}

uint64_t outlined destroy of UUID?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10011B590@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 120))();
  *a2 = result;
  return result;
}

uint64_t sub_10011B5C0(id *a1, uint64_t a2)
{
  return (*(uint64_t (**)(id))(**(_QWORD **)a2 + 128))(*a1);
}

uint64_t sub_10011B5F0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 144))();
  *a2 = result;
  return result;
}

uint64_t sub_10011B620(_QWORD *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 152))(*a1);
}

uint64_t sub_10011B64C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 168))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_10011B67C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 176);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t sub_10011B6C0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 192))();
}

uint64_t sub_10011B6EC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 216))();
  *a2 = result;
  return result;
}

uint64_t sub_10011B71C(id *a1, uint64_t a2)
{
  return (*(uint64_t (**)(id))(**(_QWORD **)a2 + 224))(*a1);
}

uint64_t sub_10011B74C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 344))();
  *a2 = result;
  return result;
}

uint64_t sub_10011B77C(_QWORD *a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 352);
  v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

uint64_t sub_10011B7AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 360))();
  *a2 = result;
  return result;
}

uint64_t sub_10011B7DC(_QWORD *a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 368);
  v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

uint64_t sub_10011B80C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 384))();
  *a2 = result;
  return result;
}

uint64_t sub_10011B83C(id *a1, uint64_t a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))(**(_QWORD **)a2 + 392);
  v4 = *a1;
  return v3(v2);
}

uint64_t sub_10011B878@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 408))();
  *a2 = result;
  return result;
}

uint64_t sub_10011B8A8(_QWORD *a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 416);
  v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

uint64_t sub_10011B8D8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 344))();
  *a2 = result;
  return result;
}

uint64_t sub_10011B908(id *a1, uint64_t a2)
{
  return (*(uint64_t (**)(id))(**(_QWORD **)a2 + 352))(*a1);
}

uint64_t sub_10011B938@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 344))();
  *a2 = result;
  return result;
}

uint64_t sub_10011B968(_QWORD *a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 352);
  v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

uint64_t ObjC metadata update function for MOSuggestionAssetReference()
{
  return type metadata accessor for MOSuggestionAssetReference(0);
}

uint64_t type metadata accessor for MOSuggestionAssetReference(uint64_t a1)
{
  return type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(a1, (uint64_t *)&type metadata singleton initialization cache for MOSuggestionAssetReference, (uint64_t)&nominal type descriptor for MOSuggestionAssetReference);
}

void type metadata completion function for MOSuggestionAssetReference(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = "\b";
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[2] = &unk_1001A2A08;
  type metadata accessor for UUID?(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
  }
}

uint64_t ObjC metadata update function for MOEvergreenAssetReference()
{
  return type metadata accessor for MOEvergreenAssetReference(0);
}

uint64_t type metadata accessor for MOEvergreenAssetReference(uint64_t a1)
{
  return type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(a1, (uint64_t *)&type metadata singleton initialization cache for MOEvergreenAssetReference, (uint64_t)&nominal type descriptor for MOEvergreenAssetReference);
}

uint64_t type metadata completion function for MOEvergreenAssetReference(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return type metadata completion function for MOEvergreenAssetReference(a1, a2, a3, (uint64_t)"\b");
}

uint64_t ObjC metadata update function for MOMultiMapAssetReference()
{
  return type metadata accessor for MOMultiMapAssetReference(0);
}

uint64_t type metadata accessor for MOMultiMapAssetReference(uint64_t a1)
{
  return type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(a1, (uint64_t *)&type metadata singleton initialization cache for MOMultiMapAssetReference, (uint64_t)&nominal type descriptor for MOMultiMapAssetReference);
}

uint64_t type metadata completion function for MOMultiMapAssetReference(uint64_t a1)
{
  _QWORD v2[3];

  v2[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[1] = "\b";
  v2[2] = "\b";
  return swift_updateClassMetadata2(a1, 256, 3, v2, a1 + 336);
}

uint64_t ObjC metadata update function for MOGenericMapAssetReference()
{
  return type metadata accessor for MOGenericMapAssetReference(0);
}

uint64_t type metadata accessor for MOGenericMapAssetReference(uint64_t a1)
{
  return type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(a1, (uint64_t *)&type metadata singleton initialization cache for MOGenericMapAssetReference, (uint64_t)&nominal type descriptor for MOGenericMapAssetReference);
}

uint64_t type metadata completion function for MOGenericMapAssetReference(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return type metadata completion function for MOEvergreenAssetReference(a1, a2, a3, (uint64_t)"\b");
}

uint64_t ObjC metadata update function for MOWorkoutGroupAssetReference()
{
  return type metadata accessor for MOWorkoutGroupAssetReference(0);
}

uint64_t type metadata accessor for MOWorkoutGroupAssetReference(uint64_t a1)
{
  return type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(a1, (uint64_t *)&type metadata singleton initialization cache for MOWorkoutGroupAssetReference, (uint64_t)&nominal type descriptor for MOWorkoutGroupAssetReference);
}

uint64_t type metadata completion function for MOWorkoutGroupAssetReference(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return type metadata completion function for MOEvergreenAssetReference(a1, a2, a3, (uint64_t)&value witness table for Builtin.BridgeObject + 64);
}

uint64_t type metadata completion function for MOEvergreenAssetReference(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  v5 = a4;
  return swift_updateClassMetadata2(a1, 256, 1, &v5, a1 + 336);
}

uint64_t MOSuggestionAssetCacheManager.MOSuggestionAssetCompletionResultHolder.order.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t getEnumTagSinglePayload for MOClientPresentationDetails(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[16])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for MOClientPresentationDetails(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for MOClientPresentationDetails()
{
  return &type metadata for MOClientPresentationDetails;
}

BOOL MOMapLocation.shouldNotUseSpecificName.getter()
{
  uint64_t v0;
  uint64_t v1;
  double v3;

  if ((*(double (**)(void))(*(_QWORD *)v0 + 360))() > 0.9
    && (v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))()) != 0)
  {
    swift_unknownObjectRelease(v1);
    return 0;
  }
  else
  {
    v3 = (*(double (**)(void))(*(_QWORD *)v0 + 456))();
    if (one-time initialization token for LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD != -1)
      swift_once(&one-time initialization token for LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD, one-time initialization function for LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD);
    return *(double *)&static MOMapLocation.LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD < v3;
  }
}

double MOMapLocation.coordinate.getter()
{
  uint64_t v0;
  double v1;

  v1 = (*(double (**)(void))(*(_QWORD *)v0 + 240))();
  (*(void (**)(void))(*(_QWORD *)v0 + 264))();
  return v1;
}

uint64_t MOMapLocation.shouldUseMarker.getter()
{
  uint64_t v0;
  uint64_t result;

  if ((*(double (**)(void))(*(_QWORD *)v0 + 360))() <= 0.9)
    return 0;
  result = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
  if (result)
  {
    swift_unknownObjectRelease(result);
    return 1;
  }
  return result;
}

uint64_t MOMapLocation.renderingGeoMapItem.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v3)(void);

  if ((*(double (**)(void))(*(_QWORD *)v0 + 360))() <= 0.9)
    return 0;
  v3 = *(uint64_t (**)(void))(*(_QWORD *)v0 + 288);
  v1 = v3();
  if (!v1)
    return 0;
  swift_unknownObjectRelease(v1);
  return v3();
}

uint64_t MOMapLocation.__allocating_init(fromGEOMapItem:title:confidenceLevel:enclosingArea:poiCategory:startDate:horizontalUncertainty:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, double a17, char a18)
{
  uint64_t v11;
  double v20;
  double v21;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  double v40;
  _BYTE v41[24];
  _BYTE v42[24];
  _BYTE v43[24];
  _BYTE v44[32];

  objc_msgSend(a1, "coordinate");
  v21 = v20;
  objc_msgSend(a1, "coordinate");
  if ((a18 & 1) != 0)
    a17 = 0.0;
  v23 = (*(uint64_t (**)(_QWORD, unint64_t, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, double, _BYTE, _QWORD, unint64_t))(v11 + 528))(0, 0xE000000000000000, 0, 1, 0, 0, 0, 0, v21, 0, 0, 0xE000000000000000);
  v24 = (uint64_t *)(v23 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_mapItem);
  swift_beginAccess(v23 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_mapItem, v44, 1, 0);
  v25 = *v24;
  *v24 = (uint64_t)a1;
  swift_retain(v23);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease(v25);
  v26 = (_QWORD *)(v23 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_title);
  swift_beginAccess(v23 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_title, v43, 1, 0);
  v27 = v26[1];
  *v26 = a2;
  v26[1] = a3;
  swift_bridgeObjectRelease(v27);
  v28 = (_QWORD *)(v23 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_enclosingArea);
  swift_beginAccess(v23 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_enclosingArea, v42, 1, 0);
  v29 = v28[1];
  *v28 = a4;
  v28[1] = a5;
  swift_bridgeObjectRelease(v29);
  v30 = v23 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_startDate;
  swift_beginAccess(v23 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_startDate, v41, 33, 0);
  outlined assign with copy of Date?(a8, v30);
  swift_endAccess(v41);
  if (a7)
  {
    v31 = (_QWORD *)(v23 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_poiCategory);
    swift_beginAccess(v23 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_poiCategory, v41, 1, 0);
    v32 = v31[1];
    *v31 = a6;
    v31[1] = a7;
    swift_release(v23);
    swift_bridgeObjectRelease(v32);
  }
  else
  {
    swift_release(v23);
  }
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v33 = type metadata accessor for Logger(0);
  v34 = __swift_project_value_buffer(v33, (uint64_t)static MOAngelLogger.assets);
  v35 = Logger.logObject.getter(v34);
  v36 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = swift_slowAlloc(22, -1);
    *(_DWORD *)v37 = 134218240;
    v40 = a9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, v41, v37 + 4);
    *(_WORD *)(v37 + 12) = 2048;
    v40 = a17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, v41, v37 + 14);
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "[MOMapLocation] confidence: %f, unc=%f", (uint8_t *)v37, 0x16u);
    swift_slowDealloc(v37, -1, -1);
  }

  swift_unknownObjectRelease(a1);
  outlined destroy of Date?(a8);
  return v23;
}

uint64_t MOMapLocation.__allocating_init(fromResource:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  Class isa;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  void *v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  void *v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  void *v37;
  double v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  double v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  void *v67;
  BOOL v68;
  BOOL *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  double v75;
  id v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  double v85;
  id v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  double v95;
  id v96;
  uint64_t v97;
  double *v98;
  double v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  char v104;
  void *v105;
  unint64_t v106;
  double v107;
  double *v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  char v116[24];
  char v117[24];
  char v118[24];
  char v119[24];
  char v120[24];
  double v121[3];
  id v122;
  uint64_t v123;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v4);
  v6 = &v116[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = objc_msgSend(a1, "data");
  if (!v7)
    goto LABEL_19;
  v8 = v7;
  v9 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v11 = v10;

  v12 = (void *)objc_opt_self(NSJSONSerialization);
  isa = Data._bridgeToObjectiveC()().super.isa;
  v122 = 0;
  v14 = objc_msgSend(v12, "JSONObjectWithData:options:error:", isa, 0, &v122);

  v15 = v122;
  if (!v14)
  {
    v50 = v122;
    v51 = _convertNSErrorToError(_:)(v15);

    swift_willThrow();
    outlined consume of Data._Representation(v9, v11);
    swift_errorRelease(v51);
    goto LABEL_19;
  }
  v16 = v122;
  _bridgeAnyObjectToAny(_:)(&v122, v14);
  outlined consume of Data._Representation(v9, v11);
  swift_unknownObjectRelease(v14);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Swift.AnyObject]);
  if ((swift_dynamicCast(v121, &v122, (char *)&type metadata for Any + 8, v17, 6) & 1) == 0)
  {
LABEL_19:

    return 0;
  }
  v18 = v121[0];
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(kMOResourcePlaceKeyLocation);
  v21 = v20;
  if (!*(_QWORD *)(*(_QWORD *)&v18 + 16)
    || (v22 = specialized __RawDictionaryStorage.find<A>(_:)(v19, v20), (v23 & 1) == 0))
  {
    swift_bridgeObjectRelease(*(_QWORD *)&v18);
    swift_bridgeObjectRelease(v21);
    goto LABEL_19;
  }
  v24 = *(void **)(*(_QWORD *)(*(_QWORD *)&v18 + 56) + 8 * v22);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease(v21);
  v122 = v24;
  if ((swift_dynamicCast(v121, &v122, (char *)&type metadata for Swift.AnyObject + 8, v17, 6) & 1) == 0)
  {

LABEL_23:
    v53 = v18;
LABEL_25:
    swift_bridgeObjectRelease(*(_QWORD *)&v53);
    return 0;
  }
  v25 = v121[0];
  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(kRTLocationLatitude);
  v28 = v27;
  if (!*(_QWORD *)(*(_QWORD *)&v25 + 16))
    goto LABEL_24;
  v29 = specialized __RawDictionaryStorage.find<A>(_:)(v26, v27);
  if ((v30 & 1) == 0)
    goto LABEL_24;
  v31 = *(void **)(*(_QWORD *)(*(_QWORD *)&v25 + 56) + 8 * v29);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease(v28);
  v122 = v31;
  if ((swift_dynamicCast(v121, &v122, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Double, 6) & 1) == 0)
  {
LABEL_26:

    swift_bridgeObjectRelease(*(_QWORD *)&v25);
    goto LABEL_23;
  }
  v32 = v121[0];
  v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(kRTLocationLongitude);
  v28 = v34;
  if (!*(_QWORD *)(*(_QWORD *)&v25 + 16)
    || (v35 = specialized __RawDictionaryStorage.find<A>(_:)(v33, v34), (v36 & 1) == 0))
  {
LABEL_24:
    swift_bridgeObjectRelease(*(_QWORD *)&v18);
    swift_bridgeObjectRelease(v28);

    v53 = v25;
    goto LABEL_25;
  }
  v37 = *(void **)(*(_QWORD *)(*(_QWORD *)&v25 + 56) + 8 * v35);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease(v28);
  v122 = v37;
  if ((swift_dynamicCast(v121, &v122, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Double, 6) & 1) == 0)
    goto LABEL_26;
  v38 = v121[0];
  objc_msgSend(a1, "placeNameConfidence");
  v40 = (*(uint64_t (**)(_QWORD, unint64_t, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, double, double, double, double, _BYTE, _QWORD, unint64_t))(v2 + 528))(0, 0xE000000000000000, 0, 1, 0, 0, 0, 0, v32, v38, v39, 0.0, 0, 0, 0xE000000000000000);
  v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(kMOResourcePlaceKeyStartDate);
  v43 = v42;
  if (!*(_QWORD *)(*(_QWORD *)&v18 + 16))
  {
    swift_retain(v40);
    goto LABEL_28;
  }
  v44 = v41;
  swift_retain(v40);
  v45 = specialized __RawDictionaryStorage.find<A>(_:)(v44, v43);
  if ((v46 & 1) == 0)
  {
LABEL_28:
    swift_bridgeObjectRelease(v43);
    goto LABEL_29;
  }
  v47 = *(void **)(*(_QWORD *)(*(_QWORD *)&v18 + 56) + 8 * v45);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease(v43);
  v122 = v47;
  if ((swift_dynamicCast(v121, &v122, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Double, 6) & 1) != 0)
  {
    Date.init(timeIntervalSinceReferenceDate:)(v121[0]);
    v48 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v6, 0, 1, v48);
    v49 = v40 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_startDate;
    swift_beginAccess(v40 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_startDate, &v122, 33, 0);
    outlined assign with take of Date?((uint64_t)v6, v49);
    swift_endAccess(&v122);
  }
LABEL_29:
  v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(kMOResourcePlaceKeyEndDate);
  v56 = v55;
  if (*(_QWORD *)(*(_QWORD *)&v18 + 16)
    && (v57 = specialized __RawDictionaryStorage.find<A>(_:)(v54, v55), (v58 & 1) != 0))
  {
    v59 = *(void **)(*(_QWORD *)(*(_QWORD *)&v18 + 56) + 8 * v57);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease(v56);
    v122 = v59;
    if ((swift_dynamicCast(v121, &v122, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Double, 6) & 1) != 0)
    {
      Date.init(timeIntervalSinceReferenceDate:)(v121[0]);
      v60 = type metadata accessor for Date(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v6, 0, 1, v60);
      v61 = v40 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_endDate;
      swift_beginAccess(v40 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_endDate, &v122, 33, 0);
      outlined assign with take of Date?((uint64_t)v6, v61);
      swift_endAccess(&v122);
    }
  }
  else
  {
    swift_bridgeObjectRelease(v56);
  }
  v62 = static String._unconditionallyBridgeFromObjectiveC(_:)(kMOResourcePlaceKeyPlaceUserType);
  v64 = v63;
  if (*(_QWORD *)(*(_QWORD *)&v18 + 16)
    && (v65 = specialized __RawDictionaryStorage.find<A>(_:)(v62, v63), (v66 & 1) != 0))
  {
    v67 = *(void **)(*(_QWORD *)(*(_QWORD *)&v18 + 56) + 8 * v65);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease(v64);
    v122 = v67;
    if ((swift_dynamicCast(v121, &v122, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for UInt, 6) & 1) != 0)
    {
      v68 = *(_QWORD *)&v121[0] == 2;
      v69 = (BOOL *)(v40 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_isWork);
      swift_beginAccess(v40 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_isWork, v117, 1, 0);
      *v69 = v68;
      swift_beginAccess(v40 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_userPlaceType, v116, 1, 0);
    }
  }
  else
  {
    swift_bridgeObjectRelease(v64);
  }
  v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(kMOResourcePlaceKeyPoiCategory);
  v72 = v71;
  if (!*(_QWORD *)(*(_QWORD *)&v18 + 16)
    || (v73 = specialized __RawDictionaryStorage.find<A>(_:)(v70, v71), (v74 & 1) == 0))
  {
    v79 = v72;
    goto LABEL_44;
  }
  v75 = *(double *)(*(_QWORD *)(*(_QWORD *)&v18 + 56) + 8 * v73);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease(v72);
  v121[0] = v75;
  if ((swift_dynamicCast(&v122, v121, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for String, 6) & 1) != 0)
  {
    v76 = v122;
    v77 = v123;
    v78 = (_QWORD *)(v40 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_poiCategory);
    swift_beginAccess(v40 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_poiCategory, v118, 1, 0);
    v79 = v78[1];
    *v78 = v76;
    v78[1] = v77;
LABEL_44:
    swift_bridgeObjectRelease(v79);
  }
  v80 = static String._unconditionallyBridgeFromObjectiveC(_:)(kMOResourcePlaceKeyCityName);
  v82 = v81;
  if (!*(_QWORD *)(*(_QWORD *)&v18 + 16)
    || (v83 = specialized __RawDictionaryStorage.find<A>(_:)(v80, v81), (v84 & 1) == 0))
  {
    v89 = v82;
    goto LABEL_50;
  }
  v85 = *(double *)(*(_QWORD *)(*(_QWORD *)&v18 + 56) + 8 * v83);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease(v82);
  v121[0] = v85;
  if ((swift_dynamicCast(&v122, v121, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for String, 6) & 1) != 0)
  {
    v86 = v122;
    v87 = v123;
    v88 = (_QWORD *)(v40 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_enclosingArea);
    swift_beginAccess(v40 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_enclosingArea, v119, 1, 0);
    v89 = v88[1];
    *v88 = v86;
    v88[1] = v87;
LABEL_50:
    swift_bridgeObjectRelease(v89);
  }
  v90 = static String._unconditionallyBridgeFromObjectiveC(_:)(kMOResourcePlaceKeyEnclosingArea);
  v92 = v91;
  if (*(_QWORD *)(*(_QWORD *)&v18 + 16)
    && (v93 = specialized __RawDictionaryStorage.find<A>(_:)(v90, v91), (v94 & 1) != 0))
  {
    v95 = *(double *)(*(_QWORD *)(*(_QWORD *)&v18 + 56) + 8 * v93);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease(v92);
    swift_bridgeObjectRelease(*(_QWORD *)&v18);
    v121[0] = v95;
    if ((swift_dynamicCast(&v122, v121, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for String, 6) & 1) == 0)
      goto LABEL_57;
    v96 = v122;
    v97 = v123;
    v98 = (double *)(v40 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_enclosingArea);
    swift_beginAccess(v40 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_enclosingArea, v120, 1, 0);
    v99 = v98[1];
    *(_QWORD *)v98 = v96;
    *((_QWORD *)v98 + 1) = v97;
  }
  else
  {
    swift_bridgeObjectRelease(v92);
    v99 = v18;
  }
  swift_bridgeObjectRelease(*(_QWORD *)&v99);
LABEL_57:
  v100 = static String._unconditionallyBridgeFromObjectiveC(_:)(kRTLocationHorizontalUncertainty);
  v102 = v101;
  if (*(_QWORD *)(*(_QWORD *)&v25 + 16)
    && (v103 = specialized __RawDictionaryStorage.find<A>(_:)(v100, v101), (v104 & 1) != 0))
  {
    v105 = *(void **)(*(_QWORD *)(*(_QWORD *)&v25 + 56) + 8 * v103);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease(v102);
    swift_bridgeObjectRelease(*(_QWORD *)&v25);
    v122 = v105;
    if ((swift_dynamicCast(v121, &v122, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Double, 6) & 1) != 0)
    {
      v107 = v121[0];
      v108 = (double *)(v40 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_horizontalUncertainty);
      v106 = swift_beginAccess(v40 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_horizontalUncertainty, v121, 1, 0).n128_u64[0];
      *v108 = v107;
    }
  }
  else
  {
    swift_bridgeObjectRelease(v102);
    v106 = swift_bridgeObjectRelease(*(_QWORD *)&v25).n128_u64[0];
  }
  v109 = objc_msgSend(a1, "name", *(double *)&v106);
  v110 = static String._unconditionallyBridgeFromObjectiveC(_:)(v109);
  v112 = v111;

  v113 = (uint64_t *)(v40 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_title);
  swift_beginAccess(v40 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_title, &v122, 1, 0);
  v114 = v113[1];
  *v113 = v110;
  v113[1] = v112;
  swift_release(v40);
  swift_bridgeObjectRelease(v114);
  return v40;
}

unint64_t MOMapLocation.transferrableMetadata.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t inited;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  _QWORD *boxed_opaque_existential_1;
  void *v21;
  _QWORD *v22;
  void *v23;
  double (*v24)(void *);
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  void *v31;
  void *v32;
  uint64_t (*v33)(void *);
  id v34;
  void *v35;
  double v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  void *v42;
  id v43;
  id v44;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v47;
  unint64_t v48;
  _BYTE v49[32];
  _QWORD v50[4];
  uint64_t v51;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v47 - v5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(MOSuggestionAssetMetadataKey, Any?)>);
  inited = swift_initStackObject(v7, &v51);
  *(_OWORD *)(inited + 16) = xmmword_1001A01C0;
  v9 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewPlaceName;
  *(_QWORD *)(inited + 32) = MOSuggestionAssetMetadataKeyLocationPreviewPlaceName;
  if ((*(double (**)(void *))(*(_QWORD *)v0 + 360))(v9) > 0.9
    && (v10 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))()) != 0)
  {
    v11 = swift_unknownObjectRelease(v10);
  }
  else
  {
    v13 = (*(double (**)(void))(*(_QWORD *)v0 + 456))();
    if (one-time initialization token for LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD != -1)
      v11 = swift_once(&one-time initialization token for LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD, one-time initialization function for LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD);
    v12.n128_u64[0] = static MOMapLocation.LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD;
    if (*(double *)&static MOMapLocation.LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD < v13)
    {
      *(_OWORD *)(inited + 40) = 0u;
      *(_OWORD *)(inited + 56) = 0u;
      goto LABEL_9;
    }
  }
  v14 = (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)v0 + 336))(v11, v12);
  *(_QWORD *)(inited + 64) = &type metadata for String;
  *(_QWORD *)(inited + 40) = v14;
  *(_QWORD *)(inited + 48) = v15;
LABEL_9:
  v16 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewVisitStartTime;
  *(_QWORD *)(inited + 72) = MOSuggestionAssetMetadataKeyLocationPreviewVisitStartTime;
  (*(void (**)(void *))(*(_QWORD *)v0 + 192))(v16);
  v17 = type metadata accessor for Date(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v19(v6, 1, v17) == 1)
  {
    outlined destroy of Date?((uint64_t)v6);
    *(_OWORD *)(inited + 80) = 0u;
    *(_OWORD *)(inited + 96) = 0u;
  }
  else
  {
    *(_QWORD *)(inited + 104) = v17;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((_QWORD *)(inited + 80));
    (*(void (**)(_QWORD *, char *, uint64_t))(v18 + 32))(boxed_opaque_existential_1, v6, v17);
  }
  v21 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewVisitEndTime;
  *(_QWORD *)(inited + 112) = MOSuggestionAssetMetadataKeyLocationPreviewVisitEndTime;
  (*(void (**)(void *))(*(_QWORD *)v0 + 216))(v21);
  if (v19(v4, 1, v17) == 1)
  {
    outlined destroy of Date?((uint64_t)v4);
    *(_OWORD *)(inited + 120) = 0u;
    *(_OWORD *)(inited + 136) = 0u;
  }
  else
  {
    *(_QWORD *)(inited + 144) = v17;
    v22 = __swift_allocate_boxed_opaque_existential_1((_QWORD *)(inited + 120));
    (*(void (**)(_QWORD *, char *, uint64_t))(v18 + 32))(v22, v4, v17);
  }
  v23 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewVisitLattitude;
  *(_QWORD *)(inited + 152) = MOSuggestionAssetMetadataKeyLocationPreviewVisitLattitude;
  v24 = *(double (**)(void *))(*(_QWORD *)v0 + 240);
  *(double *)(inited + 160) = v24(v23);
  v25 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewVisitLatitude;
  *(_QWORD *)(inited + 184) = &type metadata for Double;
  *(_QWORD *)(inited + 192) = v25;
  *(double *)(inited + 200) = v24(v25);
  v26 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewVisitLongitude;
  *(_QWORD *)(inited + 224) = &type metadata for Double;
  *(_QWORD *)(inited + 232) = v26;
  *(double *)(inited + 240) = (*(double (**)(void *))(*(_QWORD *)v0 + 264))(v26);
  v27 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewCityName;
  *(_QWORD *)(inited + 264) = &type metadata for Double;
  *(_QWORD *)(inited + 272) = v27;
  v28 = (*(uint64_t (**)(void *))(*(_QWORD *)v0 + 432))(v27);
  if (v29)
  {
    v30 = &type metadata for String;
  }
  else
  {
    v28 = 0;
    v30 = 0;
    *(_QWORD *)(inited + 296) = 0;
  }
  *(_QWORD *)(inited + 280) = v28;
  *(_QWORD *)(inited + 288) = v29;
  v31 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewVisitMapItem;
  *(_QWORD *)(inited + 304) = v30;
  *(_QWORD *)(inited + 312) = v31;
  *(_OWORD *)(inited + 320) = 0u;
  *(_OWORD *)(inited + 336) = 0u;
  v32 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewTypeOfPlace;
  *(_QWORD *)(inited + 352) = MOSuggestionAssetMetadataKeyLocationPreviewTypeOfPlace;
  v33 = *(uint64_t (**)(void *))(*(_QWORD *)v0 + 408);
  v34 = v31;
  *(_QWORD *)(inited + 360) = v33(v32);
  v35 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewVisitHorizontalUncertainty;
  *(_QWORD *)(inited + 384) = &type metadata for Int;
  *(_QWORD *)(inited + 392) = v35;
  v36 = (*(double (**)(void *))(*(_QWORD *)v0 + 456))(v35);
  *(_QWORD *)(inited + 424) = &type metadata for Double;
  *(double *)(inited + 400) = v36;
  v37 = specialized Dictionary.init(dictionaryLiteral:)(inited);
  v38 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
  if (v38)
  {
    v39 = v38;
    v40 = objc_msgSend(objc_allocWithZone((Class)MKMapItem), "initWithGeoMapItem:isPlaceHolderPlace:", v38, 1);
    if (v40)
    {
      v41 = v40;
      v42 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewVisitMapItem;
      v50[3] = type metadata accessor for MKMapItem();
      v50[0] = v41;
      outlined init with take of Any?((uint64_t)v50, (uint64_t)v49);
      v43 = v42;
      v44 = v41;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v37);
      v48 = v37;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)v49, v43, isUniquelyReferenced_nonNull_native);
      v37 = v48;

      swift_unknownObjectRelease(v39);
      swift_bridgeObjectRelease(0x8000000000000000);
    }
    else
    {
      swift_unknownObjectRelease(v39);
    }
  }
  return v37;
}

uint64_t MOMapLocation.isPOIUndefined.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 504))();
  v3 = v2;
  if (v1 == 0xD00000000000001DLL && v2 == 0x80000001001AD320)
  {
    swift_bridgeObjectRelease(0x80000001001AD320);
    return 1;
  }
  else
  {
    v5 = _stringCompareWithSmolCheck(_:_:expecting:)(v1, v2, 0xD00000000000001DLL, 0x80000001001AD320, 0);
    swift_bridgeObjectRelease(v3);
    return v5 & 1;
  }
}

uint64_t outlined assign with copy of Date?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of Date?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined assign with take of Date?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void *MOSuggestionSheetMosaicCell.margin.unsafeMutableAddressor()
{
  return &static MOSuggestionSheetMosaicCell.margin;
}

void *MOSuggestionSheetMosaicCell.identifier.unsafeMutableAddressor()
{
  return &static MOSuggestionSheetMosaicCell.identifier;
}

__int128 *MOSuggestionSheetMosaicCell.checkPlatterViewSize.unsafeMutableAddressor()
{
  if (one-time initialization token for checkPlatterViewSize != -1)
    swift_once(&one-time initialization token for checkPlatterViewSize, one-time initialization function for checkPlatterViewSize);
  return &static MOSuggestionSheetMosaicCell.checkPlatterViewSize;
}

unint64_t static MOSuggestionSheetMosaicCell.identifier.getter()
{
  return 0xD000000000000019;
}

__n128 one-time initialization function for checkPlatterViewSize()
{
  __n128 result;

  __asm { FMOV            V0.2D, #22.0 }
  static MOSuggestionSheetMosaicCell.checkPlatterViewSize = (__int128)result;
  return result;
}

{
  __n128 result;

  __asm { FMOV            V0.2D, #28.0 }
  static MOSuggestionCarouselAssetCell.checkPlatterViewSize = (__int128)result;
  return result;
}

double static MOSuggestionSheetMosaicCell.checkPlatterViewSize.getter()
{
  if (one-time initialization token for checkPlatterViewSize != -1)
    swift_once(&one-time initialization token for checkPlatterViewSize, one-time initialization function for checkPlatterViewSize);
  return *(double *)&static MOSuggestionSheetMosaicCell.checkPlatterViewSize;
}

void *MOSuggestionSheetMosaicCell.checkPlatterViewMargin.unsafeMutableAddressor()
{
  return &static MOSuggestionSheetMosaicCell.checkPlatterViewMargin;
}

double MOSuggestionSheetMosaicCell.xPlatterViewCellMargin.getter()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(v0
               + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell____lazy_storage___xPlatterViewCellMargin);
  if ((*(_BYTE *)(v0
                 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell____lazy_storage___xPlatterViewCellMargin
                 + 8) & 1) == 0)
    return *(double *)v1;
  *(_QWORD *)v1 = 0x4018000000000000;
  v1[8] = 0;
  return 6.0;
}

void MOSuggestionSheetMosaicCell.xPlatterViewCellMargin.setter(double a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell____lazy_storage___xPlatterViewCellMargin;
  *(double *)v2 = a1;
  *(_BYTE *)(v2 + 8) = 0;
}

_QWORD *(*MOSuggestionSheetMosaicCell.xPlatterViewCellMargin.modify(uint64_t a1))(_QWORD *result)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 8) = v1;
  *(double *)a1 = MOSuggestionSheetMosaicCell.xPlatterViewCellMargin.getter();
  return MOSuggestionSheetMosaicCell.xPlatterViewCellMargin.modify;
}

_QWORD *MOSuggestionSheetMosaicCell.xPlatterViewCellMargin.modify(_QWORD *result)
{
  uint64_t v1;

  v1 = result[1]
     + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell____lazy_storage___xPlatterViewCellMargin;
  *(_QWORD *)v1 = *result;
  *(_BYTE *)(v1 + 8) = 0;
  return result;
}

uint64_t MOSuggestionSheetMosaicCell.assetViewModel.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_assetViewModel);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_assetViewModel, v3, 0, 0);
  return swift_retain(*v1);
}

uint64_t MOSuggestionSheetMosaicCell.assetViewModel.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[24];

  v3 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_assetViewModel);
  swift_beginAccess((char *)v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_assetViewModel, v7, 1, 0);
  v4 = *v3;
  *v3 = a1;
  swift_retain(a1);
  v5 = swift_release(v4);
  (*(void (**)(uint64_t))((swift_isaMask & *v1) + 0x150))(v5);
  return swift_release(a1);
}

uint64_t (*MOSuggestionSheetMosaicCell.assetViewModel.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_assetViewModel, a1, 33, 0);
  return MOSuggestionSheetMosaicCell.assetViewModel.modify;
}

uint64_t MOSuggestionSheetMosaicCell.assetViewModel.modify(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess(a1);
  if ((a2 & 1) == 0)
    return (*(uint64_t (**)(uint64_t))((swift_isaMask & **(_QWORD **)(a1 + 24)) + 0x150))(result);
  return result;
}

uint64_t MOSuggestionSheetMosaicCell.isInterstitial.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_isInterstitial);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_isInterstitial, v3, 0, 0);
  return *v1;
}

id MOSuggestionSheetMosaicCell.isInterstitial.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  id result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_isInterstitial);
  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_isInterstitial, v5, 1, 0);
  *v3 = a1;
  result = *(id *)(v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_checkPlatterView);
  if (result)
    return objc_msgSend(result, "setHidden:", (a1 & 1) == 0);
  return result;
}

void (*MOSuggestionSheetMosaicCell.isInterstitial.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_isInterstitial;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return MOSuggestionSheetMosaicCell.isInterstitial.modify;
}

void MOSuggestionSheetMosaicCell.isInterstitial.modify(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  void *v5;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = v3[3];
    v5 = *(void **)(v4 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_checkPlatterView);
    if (v5)
      objc_msgSend(v5, "setHidden:", (*(_BYTE *)(v4 + v3[4]) & 1) == 0);
  }
  free(v3);
}

id MOSuggestionSheetMosaicCell.isSelected.getter()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionSheetMosaicCell();
  return objc_msgSendSuper2(&v2, "isSelected");
}

uint64_t type metadata accessor for MOSuggestionSheetMosaicCell()
{
  return objc_opt_self(_TtC16MomentsUIService27MOSuggestionSheetMosaicCell);
}

void MOSuggestionSheetMosaicCell.isSelected.setter(char a1)
{
  char *v1;
  char *v2;
  void *v4;
  _QWORD *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  objc_super v14;

  v2 = v1;
  v14.receiver = v2;
  v14.super_class = (Class)type metadata accessor for MOSuggestionSheetMosaicCell();
  objc_msgSendSuper2(&v14, "setSelected:", a1 & 1);
  v4 = *(void **)&v2[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_checkPlatterView];
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v2, "isSelected");
    (*(void (**)(id))((swift_isaMask & *v5) + 0xA0))(v6);

  }
  if (objc_msgSend(v2, "isSelected"))
  {
    v7 = *(void **)&v2[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_blurEffectView];
    if (v7)
      objc_msgSend(v7, "removeFromSuperview");
  }
  else
  {
    v8 = *(void **)&v2[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_assetView];
    if (v8)
    {
      v9 = (void *)objc_opt_self(UIBlurEffect);
      v10 = v8;
      v11 = objc_msgSend(v9, "effectWithStyle:", 6);
      v12 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v11);
      objc_msgSend(v10, "bounds");
      objc_msgSend(v12, "setFrame:");
      objc_msgSend(v12, "setAutoresizingMask:", 18);
      objc_msgSend(v12, "setAlpha:", 0.5);
      objc_msgSend(v10, "addSubview:", v12);
      v13 = *(void **)&v2[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_blurEffectView];
      *(_QWORD *)&v2[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_blurEffectView] = v12;

    }
  }
}

void closure #1 in MOSuggestionSheetMosaicCell.overflowDetail.didset(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  void (*v9)(void);
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t (*v13)(void);
  id v14;
  _BYTE v15[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (_QWORD *)Strong;
    v4 = OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_overflowView;
    v5 = *(void **)(Strong + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_overflowView);
    if (v5
      || (v6 = type metadata accessor for MOSuggestionSheetOverflowView(),
          v7 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v6)), "init"),
          v8 = *(void **)((char *)v3 + v4),
          *(_QWORD *)((char *)v3 + v4) = v7,
          v8,
          (v5 = *(void **)((char *)v3 + v4)) != 0))
    {
      v9 = *(void (**)(void))((swift_isaMask & *v3) + 0x138);
      v10 = v5;
      v9();
      (*(void (**)(uint64_t))((swift_isaMask & *v10) + 0x70))(v11);

      v12 = *(void **)((char *)v3 + v4);
      if (v12)
      {
        v13 = *(uint64_t (**)(void))((swift_isaMask & *v3) + 0x138);
        v14 = v12;
        objc_msgSend(v14, "setHidden:", (v13() & 1) == 0);

      }
    }

  }
}

uint64_t MOSuggestionSheetMosaicCell.overflowDetail.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_overflowDetail);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_overflowDetail, v3, 0, 0);
  return *v1;
}

uint64_t MOSuggestionSheetMosaicCell.overflowDetail.setter(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE v7[24];

  v5 = v2 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_overflowDetail;
  swift_beginAccess(v2 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_overflowDetail, v7, 1, 0);
  *(_BYTE *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;
  return MOSuggestionSheetMosaicCell.overflowDetail.didset((uint64_t)partial apply for closure #1 in MOSuggestionSheetMosaicCell.overflowDetail.didset, (uint64_t)&block_descriptor_10);
}

uint64_t (*MOSuggestionSheetMosaicCell.overflowDetail.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_overflowDetail, a1, 33, 0);
  return MOSuggestionSheetMosaicCell.overflowDetail.modify;
}

uint64_t MOSuggestionSheetMosaicCell.overflowDetail.modify(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess(a1);
  if ((a2 & 1) == 0)
    return MOSuggestionSheetMosaicCell.overflowDetail.didset((uint64_t)partial apply for closure #1 in MOSuggestionSheetMosaicCell.overflowDetail.didset, (uint64_t)&block_descriptor_10);
  return result;
}

id MOSuggestionSheetMosaicCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  char *v9;
  char *v10;
  id v11;
  objc_super v13;

  *(_QWORD *)&v4[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_assetView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_checkPlatterView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_blurEffectView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_overflowView] = 0;
  v9 = &v4[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell____lazy_storage___xPlatterViewCellMargin];
  *(_QWORD *)v9 = 0;
  v9[8] = 1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_assetViewModel] = 0;
  v4[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_isInterstitial] = 0;
  v10 = &v4[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_overflowDetail];
  *v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v13.receiver = v4;
  v13.super_class = (Class)type metadata accessor for MOSuggestionSheetMosaicCell();
  v11 = objc_msgSendSuper2(&v13, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v11, "setAutoresizingMask:", 18);
  objc_msgSend(v11, "setAutoresizesSubviews:", 1);

  return v11;
}

Swift::Void __swiftcall MOSuggestionSheetMosaicCell.initMosaicCell()()
{
  MOSuggestionSheetMosaicCell.overflowDetail.didset((uint64_t)partial apply for closure #1 in MOSuggestionSheetMosaicCell.initMosaicCell(), (uint64_t)&block_descriptor_28);
}

uint64_t MOSuggestionSheetMosaicCell.overflowDetail.didset(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __n128 v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v21 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue, OS_dispatch_queue_ptr);
  v12 = (void *)static OS_dispatch_queue.main.getter(v11);
  v13 = swift_allocObject(&unk_1001EAE20, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16);
  aBlock[4] = a1;
  v23 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = a2;
  v14 = _Block_copy(aBlock);
  swift_release(v23);
  static DispatchQoS.unspecified.getter(v15);
  aBlock[0] = _swiftEmptyArrayStorage;
  v16 = lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  v18 = lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v17, v18, v4, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void closure #1 in MOSuggestionSheetMosaicCell.initMosaicCell()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    (*(void (**)(void))((swift_isaMask & *Strong) + 0x158))();

  }
}

Swift::Void __swiftcall MOSuggestionSheetMosaicCell._initMosaicCell()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  id v8;
  void (*v9)(__n128);
  __n128 v10;
  _QWORD *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  _QWORD *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  _QWORD *v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  _QWORD *v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  void *v43;
  uint64_t v44;
  void *v45;
  id v46;
  uint64_t v47;
  id v48;
  void *v49;
  id v50;
  void *v51;
  _QWORD *v52;

  v1 = v0;
  v2 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x108))();
  if (v2)
  {
    v3 = v2;
    v4 = OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_assetView;
    v5 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_assetView);
    if (v5)
    {
      v6 = *(_QWORD **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_assetView);
    }
    else
    {
      v7 = type metadata accessor for MOSuggestionSheetAssetView();
      v6 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v7)), "init");
      v5 = 0;
    }
    v8 = v5;
    objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v9 = *(void (**)(__n128))((swift_isaMask & *v6) + 0xA0);
    v10 = swift_retain(v3);
    v9(v10);
    objc_msgSend(v1, "addSubview:", v6);
    v11 = v6;
    v12 = objc_msgSend(v11, "superview");
    if (v12)
    {
      v13 = v12;
      objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v14 = objc_msgSend(v11, "topAnchor");
      v15 = objc_msgSend(v13, "topAnchor");
      v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

      objc_msgSend(v16, "setConstant:", 2.0);
      if (v16)
      {
        v17 = v16;
        objc_msgSend(v17, "setActive:", 1);

        v18 = v17;
      }
      else
      {
        v18 = 0;
        v17 = v11;
      }

    }
    else
    {
      v18 = 0;
      v13 = v11;
    }

    v19 = v11;
    v20 = objc_msgSend(v19, "superview");
    if (v20)
    {
      v21 = v20;
      objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v22 = objc_msgSend(v19, "leadingAnchor");
      v23 = objc_msgSend(v21, "leadingAnchor");
      v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

      objc_msgSend(v24, "setConstant:", 2.0);
      if (v24)
      {
        v25 = v24;
        objc_msgSend(v25, "setActive:", 1);

        v26 = v25;
      }
      else
      {
        v26 = 0;
        v25 = v19;
      }

    }
    else
    {
      v26 = 0;
      v21 = v19;
    }

    v27 = v19;
    v28 = objc_msgSend(v27, "superview");
    if (v28)
    {
      v29 = v28;
      objc_msgSend(v27, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v30 = objc_msgSend(v27, "trailingAnchor");
      v31 = objc_msgSend(v29, "trailingAnchor");
      v32 = objc_msgSend(v30, "constraintEqualToAnchor:", v31);

      objc_msgSend(v32, "setConstant:", -2.0);
      if (v32)
      {
        v33 = v32;
        objc_msgSend(v33, "setActive:", 1);

        v34 = v33;
      }
      else
      {
        v34 = 0;
        v33 = v27;
      }

    }
    else
    {
      v34 = 0;
      v29 = v27;
    }

    v35 = v27;
    v36 = objc_msgSend(v35, "superview");
    if (v36)
    {
      v37 = v36;
      objc_msgSend(v35, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v38 = objc_msgSend(v35, "bottomAnchor");
      v39 = objc_msgSend(v37, "bottomAnchor");
      v40 = objc_msgSend(v38, "constraintEqualToAnchor:", v39);

      if (v40)
      {
        objc_msgSend(v40, "setConstant:", -2.0);
        v41 = v40;
        objc_msgSend(v41, "setActive:", 1);

        v42 = v41;
      }
      else
      {
        v42 = 0;
        v41 = v35;
      }

    }
    else
    {
      v42 = 0;
      v37 = v35;
    }

    v43 = *(void **)((char *)v1 + v4);
    *(_QWORD *)((char *)v1 + v4) = v35;
    v52 = v35;

    v44 = OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_overflowView;
    v45 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_overflowView);
    if (v45)
    {
      v46 = *(id *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_overflowView);
    }
    else
    {
      v47 = type metadata accessor for MOSuggestionSheetOverflowView();
      v46 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v47)), "init");
      v45 = 0;
    }
    v48 = v45;
    objc_msgSend(v1, "addSubview:", v46);
    objc_msgSend(v46, "setHidden:", 1);
    v49 = *(void **)((char *)v1 + v44);
    *(_QWORD *)((char *)v1 + v44) = v46;
    v50 = v46;

    if (((*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x120))() & 1) != 0)
    {
      MOSuggestionSheetMosaicCell.addSelectButton()();
      v51 = v50;
    }
    else
    {
      v51 = v52;
      v52 = v50;
    }
    swift_release(v3);

  }
}

Swift::Void __swiftcall MOSuggestionSheetMosaicCell.layoutSubviews()()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for MOSuggestionSheetMosaicCell();
  objc_msgSendSuper2(&v5, "layoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_assetView];
  if (v1)
  {
    v2 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_overflowView];
    if (v2)
    {
      v3 = v1;
      v4 = v2;
      objc_msgSend(v3, "frame");
      objc_msgSend(v4, "setFrame:");

    }
  }
}

void MOSuggestionSheetMosaicCell.updateUnselectedBlur()()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;

  if ((objc_msgSend(v0, "isSelected") & 1) != 0)
  {
    v1 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_blurEffectView];
    if (v1)
      objc_msgSend(v1, "removeFromSuperview");
  }
  else
  {
    v2 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_assetView];
    if (v2)
    {
      v3 = (void *)objc_opt_self(UIBlurEffect);
      v4 = v2;
      v5 = objc_msgSend(v3, "effectWithStyle:", 6);
      v6 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v5);
      objc_msgSend(v4, "bounds");
      objc_msgSend(v6, "setFrame:");
      objc_msgSend(v6, "setAutoresizingMask:", 18);
      objc_msgSend(v6, "setAlpha:", 0.5);
      objc_msgSend(v4, "addSubview:", v6);
      v7 = *(id *)&v0[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_blurEffectView];
      *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_blurEffectView] = v6;

    }
  }
}

void MOSuggestionSheetMosaicCell.addSelectButton()()
{
  char *v0;
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  double v5;
  id v6;
  id v7;
  double v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  _QWORD *v24;

  if (one-time initialization token for checkPlatterViewSize != -1)
    swift_once(&one-time initialization token for checkPlatterViewSize, one-time initialization function for checkPlatterViewSize);
  v1 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CanvasAssetAccessoryView()), "initWithFrame:", 0.0, 0.0, static MOSuggestionSheetMosaicCell.checkPlatterViewSize);
  v2 = OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_checkPlatterView;
  v3 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_checkPlatterView];
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_checkPlatterView] = v1;

  v4 = *(void **)&v0[v2];
  if (v4)
  {
    v24 = v4;
    objc_msgSend(v24, "setUserInteractionEnabled:", 0);
    objc_msgSend(v0, "addSubview:", v24);
    v5 = *(double *)&static MOSuggestionSheetMosaicCell.checkPlatterViewSize;
    objc_msgSend(v24, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v6 = objc_msgSend(v24, "widthAnchor");
    v7 = objc_msgSend(v6, "constraintEqualToConstant:", v5);

    objc_msgSend(v7, "setActive:", 1);
    v8 = *((double *)&static MOSuggestionSheetMosaicCell.checkPlatterViewSize + 1);
    objc_msgSend(v24, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v9 = objc_msgSend(v24, "heightAnchor");
    v10 = objc_msgSend(v9, "constraintEqualToConstant:", v8);

    objc_msgSend(v10, "setActive:", 1);
    v11 = objc_msgSend(v24, "superview");
    if (v11)
    {
      v12 = v11;
      objc_msgSend(v24, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v13 = objc_msgSend(v24, "bottomAnchor");
      v14 = objc_msgSend(v12, "bottomAnchor");
      v15 = objc_msgSend(v13, "constraintEqualToAnchor:", v14);

      if (v15)
      {
        objc_msgSend(v15, "setConstant:", -4.0);
        v16 = v15;
        objc_msgSend(v16, "setActive:", 1);

      }
    }
    v17 = objc_msgSend(v24, "superview");
    if (v17)
    {
      v18 = v17;
      objc_msgSend(v24, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v19 = objc_msgSend(v24, "trailingAnchor");
      v20 = objc_msgSend(v18, "trailingAnchor");
      v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

      objc_msgSend(v21, "setConstant:", -4.0);
      v22 = v21;
      objc_msgSend(v22, "setActive:", 1);

    }
    v23 = objc_msgSend(v0, "isSelected");
    (*(void (**)(id))((swift_isaMask & *v24) + 0x70))(v23);

  }
}

Swift::Void __swiftcall MOSuggestionSheetMosaicCell.cleanup()()
{
  _QWORD *v0;
  _QWORD *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void (*v17)(void);
  _QWORD *v18;
  void *v19;

  v1 = v0;
  v2 = objc_msgSend(v0, "subviews");
  v3 = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIView, UIView_ptr);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v9 = v4;
    else
      v9 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v5 = _CocoaArrayWrapper.endIndex.getter(v9);
    swift_bridgeObjectRelease(v4);
    if (!v5)
      goto LABEL_13;
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v5)
      goto LABEL_13;
  }
  if (v5 < 1)
  {
    __break(1u);
    return;
  }
  for (i = 0; i != v5; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0)
      v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
    else
      v7 = *(id *)(v4 + 8 * i + 32);
    v8 = v7;
    objc_msgSend(v7, "removeFromSuperview");

  }
LABEL_13:
  swift_bridgeObjectRelease(v4);
  v10 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_checkPlatterView);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_checkPlatterView) = 0;

  v11 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_blurEffectView);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_blurEffectView) = 0;

  v12 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x108))();
  if (v12)
  {
    v14 = v12;
    (*(void (**)(uint64_t))(*(_QWORD *)v12 + 1800))(v12);
    v13 = swift_release(v14);
  }
  (*(void (**)(_QWORD, __n128))((swift_isaMask & *v1) + 0x110))(0, v13);
  v15 = OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_assetView;
  v16 = *(_QWORD **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_assetView);
  if (v16)
  {
    v17 = *(void (**)(void))((swift_isaMask & *v16) + 0xC8);
    v18 = v16;
    v17();

    v16 = *(_QWORD **)((char *)v1 + v15);
  }
  *(_QWORD *)((char *)v1 + v15) = 0;

  v19 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_overflowView);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_overflowView) = 0;

}

Swift::Void __swiftcall MOSuggestionSheetMosaicCell.prepareForReuse()()
{
  _QWORD *v0;
  id v1;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionSheetMosaicCell();
  v1 = objc_msgSendSuper2(&v2, "prepareForReuse");
  (*(void (**)(id))((swift_isaMask & *v0) + 0x170))(v1);
}

id MOSuggestionSheetMosaicCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionSheetMosaicCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void specialized MOSuggestionSheetMosaicCell.init(coder:)()
{
  _BYTE *v0;
  char *v1;
  char *v2;

  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_assetView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_checkPlatterView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_blurEffectView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_overflowView] = 0;
  v1 = &v0[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell____lazy_storage___xPlatterViewCellMargin];
  *(_QWORD *)v1 = 0;
  v1[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_assetViewModel] = 0;
  v0[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_isInterstitial] = 0;
  v2 = &v0[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_overflowDetail];
  *v2 = 0;
  *((_QWORD *)v2 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionSheetMosaicCell.swift", 50, 2, 65, 0);
  __break(1u);
}

uint64_t sub_10011EC90()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void partial apply for closure #1 in MOSuggestionSheetMosaicCell.initMosaicCell()()
{
  uint64_t v0;

  closure #1 in MOSuggestionSheetMosaicCell.initMosaicCell()(v0);
}

uint64_t block_copy_helper_28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_28(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_10011ECD4(_QWORD **a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))((swift_isaMask & **a1) + 0xF0))();
}

uint64_t sub_10011ED14(double *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(double))((swift_isaMask & **a2) + 0xF8))(*a1);
}

uint64_t sub_10011ED50@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x108))();
  *a2 = result;
  return result;
}

uint64_t sub_10011ED90(_QWORD *a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0x110);
  v3 = swift_retain(*a1);
  return v2(v3);
}

uint64_t sub_10011EDD0@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x120))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_10011EE14(unsigned __int8 *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(_QWORD))((swift_isaMask & **a2) + 0x128))(*a1);
}

uint64_t sub_10011EE50@<X0>(_QWORD **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x138))();
  *(_BYTE *)a2 = result & 1;
  *(_QWORD *)(a2 + 8) = v4;
  return result;
}

uint64_t sub_10011EE98(unsigned __int8 *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))((swift_isaMask & **a2) + 0x140))(*a1, *((_QWORD *)a1 + 1));
}

void partial apply for closure #1 in MOSuggestionSheetMosaicCell.overflowDetail.didset()
{
  uint64_t v0;

  closure #1 in MOSuggestionSheetMosaicCell.overflowDetail.didset(v0);
}

void MOSuggestionSheetVideoPlaybackView.__allocating_init(url:frame:assignedTileSize:cropRect:)(uint64_t a1, char a2, uint64_t a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7)
{
  objc_class *v7;
  id v15;

  v15 = objc_allocWithZone(v7);
  MOSuggestionSheetVideoPlaybackView.init(url:frame:assignedTileSize:cropRect:)(a1, a2, a3, a4, a5, a6, a7);
}

void MOSuggestionSheetVideoPlaybackView.ThumbnailView.__allocating_init(thumbnail:assignedTileSize:cropRect:duration:)(void *a1, char a2, uint64_t a3, void *a4, char a5)
{
  objc_class *v5;
  char v10;
  id v11;

  v10 = a5 & 1;
  v11 = objc_allocWithZone(v5);
  MOSuggestionSheetVideoPlaybackView.ThumbnailView.init(thumbnail:assignedTileSize:cropRect:duration:)(a1, a2, a3, a4, v10);
}

double MOSuggestionSheetBaseVideoPlaybackView.ViewAdjustment.contentFrame.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void MOSuggestionSheetBaseVideoPlaybackView.ViewAdjustment.contentFrame.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  *v4 = a1;
  v4[1] = a2;
  v4[2] = a3;
  v4[3] = a4;
}

double MOSuggestionSheetBaseVideoPlaybackView.ViewAdjustment.verticalShift.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

void MOSuggestionSheetBaseVideoPlaybackView.ViewAdjustment.verticalShift.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 32) = a1;
}

double MOSuggestionSheetBaseVideoPlaybackView.ViewAdjustment.horizontalShift.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

void MOSuggestionSheetBaseVideoPlaybackView.ViewAdjustment.horizontalShift.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 40) = a1;
}

void (__swiftcall *MOSuggestionSheetBaseVideoPlaybackView.ViewAdjustment.horizontalShift.modify())()
{
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

void MOSuggestionSheetBaseVideoPlaybackView.ViewAdjustment.init(contentFrame:verticalShift:horizontalShift:)(double *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>, double a6@<D4>, double a7@<D5>)
{
  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
  a1[3] = a5;
  a1[4] = a6;
  a1[5] = a7;
}

uint64_t static MOSuggestionSheetBaseVideoPlaybackView.layerClass.getter()
{
  return type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for AVPlayerLayer, AVPlayerLayer_ptr);
}

id MOSuggestionSheetBaseVideoPlaybackView.init(frame:)(double a1, double a2, double a3, double a4)
{
  void *v4;
  objc_super v10;

  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for MOSuggestionSheetBaseVideoPlaybackView();
  return objc_msgSendSuper2(&v10, "initWithFrame:", a1, a2, a3, a4);
}

id MOSuggestionSheetBaseVideoPlaybackView.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for MOSuggestionSheetBaseVideoPlaybackView();
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id MOSuggestionSheetBaseVideoPlaybackView.__deallocating_deinit()
{
  return MOSuggestionRoundView.__deallocating_deinit(type metadata accessor for MOSuggestionSheetBaseVideoPlaybackView);
}

CGFloat static MOSuggestionSheetBaseVideoPlaybackView.baseViewRect(viewport:cropRect:)@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>, CGFloat a6@<D4>, CGFloat a7@<D5>, CGFloat a8@<D6>, CGFloat a9@<D7>)
{
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  CGFloat v24;
  CGFloat result;
  uint64_t v26;
  CGRect v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;

  v29.origin.x = a6;
  v29.origin.y = a7;
  v29.size.width = a8;
  v29.size.height = a9;
  CGRectGetWidth(v29);
  v30.origin.x = a6;
  v30.origin.y = a7;
  v30.size.width = a8;
  v30.size.height = a9;
  CGRectGetHeight(v30);
  v31.origin.x = a2;
  v31.origin.y = a3;
  v31.size.width = a4;
  v31.size.height = a5;
  CGRectGetWidth(v31);
  v32.origin.x = a2;
  v32.origin.y = a3;
  v32.size.width = a4;
  v32.size.height = a5;
  CGRectGetHeight(v32);
  v18 = CGRectMake_1();
  v20 = v19;
  v22 = v21;
  v26 = v23;
  v33.origin.x = a2;
  v33.origin.y = a3;
  v33.size.width = a4;
  v33.size.height = a5;
  v24 = CGRectGetWidth(v33) * a6;
  v34.origin.x = a2;
  v34.origin.y = a3;
  v34.size.width = a4;
  v34.size.height = a5;
  result = CGRectGetHeight(v34) * a7;
  *(double *)a1 = v18;
  *(_QWORD *)(a1 + 8) = v20;
  *(_QWORD *)(a1 + 16) = v22;
  *(_QWORD *)(a1 + 24) = v26;
  *(CGFloat *)(a1 + 32) = result;
  *(CGFloat *)(a1 + 40) = v24;
  return result;
}

__CFString *one-time initialization function for PLAYBACK_SHOULD_PAUSE_NOTIFICATION()
{
  static MOSuggestionSheetVideoPlaybackView.PLAYBACK_SHOULD_PAUSE_NOTIFICATION = (uint64_t)CFSTR("MOSuggestionSheetVideoPlaybackViewPlaybackShouldPause");
  return CFSTR("MOSuggestionSheetVideoPlaybackViewPlaybackShouldPause");
}

uint64_t *MOSuggestionSheetVideoPlaybackView.PLAYBACK_SHOULD_PAUSE_NOTIFICATION.unsafeMutableAddressor()
{
  if (one-time initialization token for PLAYBACK_SHOULD_PAUSE_NOTIFICATION != -1)
    swift_once(&one-time initialization token for PLAYBACK_SHOULD_PAUSE_NOTIFICATION, one-time initialization function for PLAYBACK_SHOULD_PAUSE_NOTIFICATION);
  return &static MOSuggestionSheetVideoPlaybackView.PLAYBACK_SHOULD_PAUSE_NOTIFICATION;
}

id static MOSuggestionSheetVideoPlaybackView.PLAYBACK_SHOULD_PAUSE_NOTIFICATION.getter()
{
  if (one-time initialization token for PLAYBACK_SHOULD_PAUSE_NOTIFICATION != -1)
    swift_once(&one-time initialization token for PLAYBACK_SHOULD_PAUSE_NOTIFICATION, one-time initialization function for PLAYBACK_SHOULD_PAUSE_NOTIFICATION);
  return (id)static MOSuggestionSheetVideoPlaybackView.PLAYBACK_SHOULD_PAUSE_NOTIFICATION;
}

id MOSuggestionSheetVideoPlaybackView.config.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_config);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_config, v3, 0, 0);
  return *v1;
}

void MOSuggestionSheetVideoPlaybackView.config.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_config);
}

uint64_t (*MOSuggestionSheetVideoPlaybackView.config.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_config, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetVideoPlaybackView.isPlaying.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_isPlaying);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_isPlaying, v3, 0, 0);
  return *v1;
}

void MOSuggestionSheetVideoPlaybackView.isPlaying.setter(char a1)
{
  _QWORD *v1;
  int v3;
  _BYTE *v4;
  uint64_t v5;
  int v6;
  void *v7;
  void *v8;
  char **v9;
  _BYTE v10[24];

  v3 = a1 & 1;
  v4 = (char *)v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_isPlaying;
  v5 = swift_beginAccess((char *)v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_isPlaying, v10, 1, 0);
  v6 = *v4;
  *v4 = a1;
  if (v6 != v3)
  {
    v7 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x128))(v5);
    v8 = v7;
    v9 = &selRef_play;
    if ((a1 & 1) == 0)
      v9 = &selRef_pause;
    objc_msgSend(v7, *v9);

  }
}

void (*MOSuggestionSheetVideoPlaybackView.isPlaying.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_isPlaying;
  v3[3] = v1;
  v3[4] = v4;
  v5 = (_BYTE *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  *((_BYTE *)v3 + 40) = *v5;
  return MOSuggestionSheetVideoPlaybackView.isPlaying.modify;
}

void MOSuggestionSheetVideoPlaybackView.isPlaying.modify(uint64_t a1)
{
  _QWORD **v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  void *v6;
  void *v7;
  char **v8;

  v1 = *(_QWORD ***)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v4 = *(unsigned __int8 *)(*(_QWORD *)a1 + 40);
  v5 = *(unsigned __int8 *)(v3 + v2);
  *(_BYTE *)(v3 + v2) = v4;
  if (v4 != v5)
  {
    v6 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1[3]) + 0x128))();
    v7 = v6;
    v8 = &selRef_play;
    if (!v4)
      v8 = &selRef_pause;
    objc_msgSend(v6, *v8);

  }
  free(v1);
}

id MOSuggestionSheetVideoPlaybackView.player.getter()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  id v3;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_baseVideoView), "layer");
  v2 = objc_opt_self(AVPlayerLayer);
  v3 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v1, v2, 0, 0, 0), "player");

  return v3;
}

void MOSuggestionSheetVideoPlaybackView.player.setter(void *a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_baseVideoView), "layer");
  v3 = objc_opt_self(AVPlayerLayer);
  objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v2, v3, 0, 0, 0), "setPlayer:", a1);

}

void (*MOSuggestionSheetVideoPlaybackView.player.modify(_QWORD *a1))(id *a1, char a2)
{
  uint64_t v1;
  void *v3;
  id v4;
  uint64_t v5;
  id v6;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_baseVideoView);
  a1[1] = v3;
  v4 = objc_msgSend(v3, "layer");
  v5 = objc_opt_self(AVPlayerLayer);
  v6 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v4, v5, 0, 0, 0), "player");

  *a1 = v6;
  return MOSuggestionSheetVideoPlaybackView.player.modify;
}

void MOSuggestionSheetVideoPlaybackView.player.modify(id *a1, char a2)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) != 0)
  {
    v2 = v2;
    v6 = objc_msgSend(v3, "layer");
    v4 = objc_opt_self(AVPlayerLayer);
    objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v6, v4, 0, 0, 0), "setPlayer:", v2);

  }
  else
  {
    v6 = objc_msgSend(a1[1], "layer");
    v5 = objc_opt_self(AVPlayerLayer);
    objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v6, v5, 0, 0, 0), "setPlayer:", v2);
  }

}

void MOSuggestionSheetVideoPlaybackView.init(url:frame:assignedTileSize:cropRect:)(uint64_t a1, char a2, uint64_t a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7)
{
  char *v7;
  uint64_t v13;
  void *v14;
  char *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  NSString v29;
  void *v30;
  id v31;
  uint64_t v32;
  NSString v33;
  id v34;
  double *v35;
  double v36;
  double v37;
  double v38;
  double v39;
  CGFloat y;
  CGFloat x;
  CGFloat width;
  CGFloat height;
  double v44;
  double v45;
  double v46;
  CGFloat v47;
  double *v48;
  _QWORD *v49;
  void (*v50)(void);
  _QWORD *v51;
  id v52;
  uint64_t v53;
  id v54;
  NSURL *v55;
  void *v56;
  void *v57;
  id v58;
  uint64_t v59;
  uint64_t (*v60)(void);
  void *v61;
  char **v62;
  void *v63;
  id v64;
  id v65;
  id v66;
  double v67;
  id v68;
  double v69;
  void *v70;
  void *v71;
  id v72;
  id v73;
  void *v74;
  void *v75;
  id v76;
  void *v77;
  double v78;
  void *v79;
  NSString v80;
  id v81;
  CMTimeValue value;
  CMTimeEpoch epoch;
  uint64_t v84;
  double Seconds;
  id v86;
  void *v87;
  char **v88;
  uint64_t v89;
  id v90;
  void *v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  __n128 v102;
  unint64_t v103;
  id v104;
  id v105;
  Class isa;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  double v114;
  char **v115;
  id v116;
  void *v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  id v124;
  id v125;
  id v126;
  id v127;
  double v128;
  id v129;
  Class v130;
  double v131;
  double v132;
  id v133;
  void *v134;
  id v135;
  id v136;
  id v137;
  id v138;
  uint64_t v139;
  id v140;
  id v141;
  void *v142;
  id v143;
  id v144;
  id v145;
  id v146;
  id v147;
  void *v148;
  id v149;
  id v150;
  id v151;
  id v152;
  uint64_t v153;
  void *v154;
  _QWORD *v155;
  void (*v156)(_QWORD *, _UNKNOWN **);
  _QWORD *v157;
  _QWORD *v158;
  void *v159;
  id v160;
  id v161;
  void *v162;
  id v163;
  id v164;
  id v165;
  id v166;
  id v167;
  void *v168;
  id v169;
  void *v170;
  id v171;
  id v172;
  id v173;
  double v174;
  double v175;
  id v176;
  void *v177;
  id v178;
  id v179;
  id v180;
  id v181;
  id v182;
  void *v183;
  id v184;
  id v185;
  id v186;
  id v187;
  void *v188;
  _QWORD *v189;
  id v190;
  Swift::String v191;
  Swift::String v192;
  void *object;
  NSString v194;
  void *v195;
  id v196;
  _QWORD *v197;
  NSString v198;
  void *v199;
  void *v200;
  id v201;
  uint64_t v202;
  id v203;
  uint64_t v204;
  _QWORD *v205;
  uint64_t v206;
  double v207;
  double v208;
  uint64_t v209;
  uint64_t v210;
  void *v211;
  id v212;
  double v214;
  uint64_t (*v215)(void);
  CMTime time;
  objc_super v218;
  CGRect v219;
  char v220;
  Swift::String v221;
  CGRect v222;
  CGRect v223;
  CGRect v224;
  CGRect v225;
  CGRect v226;
  CGRect v227;

  v210 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_verticalShift;
  *(_QWORD *)&v7[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_verticalShift] = 0;
  v209 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_horizontalShift;
  *(_QWORD *)&v7[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_horizontalShift] = 0;
  v13 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_config;
  v14 = (void *)objc_opt_self(UIColor);
  v15 = v7;
  v211 = v14;
  v16 = objc_msgSend(v14, "grayColor");
  v17 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v18 = objc_msgSend(v17, "configurationWithHierarchicalColor:", v16);

  v19 = (void *)objc_opt_self(UIFont);
  v20 = objc_msgSend(v19, "systemFontOfSize:", 50.0);
  v21 = objc_msgSend(v17, "configurationWithFont:", v20);

  v22 = objc_msgSend(v18, "configurationByApplyingConfiguration:", v21);
  *(_QWORD *)&v7[v13] = v22;
  v15[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_isPlaying] = 0;
  v23 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_muteButton;
  v24 = type metadata accessor for MOSuggestionSheetOversizedBoundsButton();
  *(_QWORD *)&v15[v23] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v24)), "init");
  *(_QWORD *)&v15[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_playPauseButton] = 0;
  v25 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_muteButtonConfig;
  v212 = v19;
  v26 = objc_msgSend(v19, "preferredFontForTextStyle:", UIFontTextStyleTitle3);
  v27 = objc_msgSend(v17, "configurationWithFont:", v26);

  *(_QWORD *)&v15[v25] = v27;
  v28 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_unMutedImage;
  v29 = String._bridgeToObjectiveC()();
  v30 = (void *)objc_opt_self(UIImage);
  v31 = objc_msgSend(v30, "systemImageNamed:", v29);

  *(_QWORD *)&v15[v28] = v31;
  v32 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_mutedImage;
  v33 = String._bridgeToObjectiveC()();
  v34 = objc_msgSend(v30, "systemImageNamed:", v33);

  *(_QWORD *)&v15[v32] = v34;
  v15[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_assignedSizeType] = a2;
  outlined init with take of CGRect?(a3, (uint64_t)&v219);
  if (v220 == 1)
  {
    v35 = (double *)&v15[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_targetBaseFrame];
    *v35 = a4;
    v35[1] = a5;
    v35[2] = a6;
    v35[3] = a7;
    v36 = a4;
    v37 = a5;
    v38 = a6;
    v39 = a7;
  }
  else
  {
    x = v219.origin.x;
    y = v219.origin.y;
    width = v219.size.width;
    height = v219.size.height;
    v207 = v219.origin.x;
    v214 = v219.origin.y;
    CGRectGetWidth(v219);
    v222.origin.x = x;
    v222.origin.y = y;
    v222.size.width = width;
    v222.size.height = height;
    CGRectGetHeight(v222);
    v223.origin.x = a4;
    v223.origin.y = a5;
    v223.size.width = a6;
    v223.size.height = a7;
    CGRectGetWidth(v223);
    v224.origin.x = a4;
    v224.origin.y = a5;
    v224.size.width = a6;
    v224.size.height = a7;
    CGRectGetHeight(v224);
    v36 = CGRectMake_1();
    v37 = v44;
    v38 = v45;
    v39 = v46;
    v225.origin.x = a4;
    v225.origin.y = a5;
    v225.size.width = a6;
    v225.size.height = a7;
    v208 = v207 * CGRectGetWidth(v225);
    v226.origin.x = a4;
    v226.origin.y = a5;
    v226.size.width = a6;
    v226.size.height = a7;
    v47 = CGRectGetHeight(v226);
    v48 = (double *)&v15[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_targetBaseFrame];
    *v48 = v36;
    v48[1] = v37;
    v48[2] = v38;
    v48[3] = v39;
    *(double *)&v7[v210] = v214 * v47;
    *(double *)&v7[v209] = v208;
  }
  *(_QWORD *)&v15[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_baseVideoView] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MOSuggestionSheetBaseVideoPlaybackView()), "initWithFrame:", v36, v37, v38, v39);

  v218.receiver = v15;
  v218.super_class = (Class)type metadata accessor for MOSuggestionSheetVideoPlaybackView();
  v49 = objc_msgSendSuper2(&v218, "initWithFrame:", a4, a5, a6, a7);
  v50 = *(void (**)(void))((swift_isaMask & *v49) + 0x178);
  v51 = v49;
  v50();
  v52 = objc_msgSend(*(id *)((char *)v51 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_baseVideoView), "layer");
  v53 = objc_opt_self(AVPlayerLayer);
  objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v52, v53, 0, 0, 0), "setVideoGravity:", AVLayerVideoGravityResizeAspectFill);

  v54 = objc_allocWithZone((Class)AVPlayer);
  URL._bridgeToObjectiveC()(v55);
  v57 = v56;
  v58 = objc_msgSend(v54, "initWithURL:", v56);

  v59 = (*(uint64_t (**)(id))((swift_isaMask & *v51) + 0x130))(v58);
  v60 = *(uint64_t (**)(void))((swift_isaMask & *v51) + 0x128);
  v61 = (void *)((uint64_t (*)(uint64_t))v60)(v59);
  v62 = &selRef_setContentOffset_animated_;
  if (v61)
  {
    v63 = v61;
    v64 = objc_msgSend(v61, "currentItem");

    if (v64)
    {
      v65 = objc_msgSend(v64, "asset");

      if (v65)
      {
        v66 = objc_msgSend((id)objc_opt_self(AVMutableVideoComposition), "videoCompositionWithPropertiesOfAsset:", v65);
        objc_msgSend(v66, "setColorPrimaries:", AVVideoColorPrimaries_ITU_R_709_2);
        objc_msgSend(v66, "setColorTransferFunction:", AVVideoTransferFunction_ITU_R_709_2);
        objc_msgSend(v66, "setColorYCbCrMatrix:", AVVideoYCbCrMatrix_ITU_R_709_2);
        objc_msgSend(v66, "renderSize");
        if (v67 <= 0.0 || (v68 = objc_msgSend(v66, "renderSize"), v69 <= 0.0))
        {
          v73 = v65;
          v65 = v66;
        }
        else
        {
          v70 = (void *)((uint64_t (*)(id))v60)(v68);
          if (v70)
          {
            v71 = v70;
            v72 = objc_msgSend(v70, "currentItem");

            if (v72)
            {
              v73 = v66;
              objc_msgSend(v72, "setVideoComposition:", v73);

            }
            else
            {
              v73 = v66;
            }
            v62 = &selRef_setContentOffset_animated_;
          }
          else
          {
            v73 = v66;
          }
        }

      }
    }
  }
  v74 = (void *)v60();
  if (v74)
  {
    v75 = v74;
    objc_msgSend(v74, "setMuted:", 1);

  }
  specialized MOSuggestionSheetVideoPlaybackView.setNonDisruptiveMute()();
  if (a2 == 3)
    goto LABEL_77;
  v76 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v77 = (void *)v60();
  v215 = v60;
  if (!v77)
  {
    v80 = 0;
    goto LABEL_31;
  }
  v79 = v77;
  v80 = objc_msgSend(v77, "currentItem");

  if (!v80)
    goto LABEL_31;
  v81 = objc_msgSend(v80, "asset");

  objc_msgSend(v81, "duration");
  value = time.value;
  epoch = time.epoch;
  v84 = *(_QWORD *)&time.timescale;

  time.value = value;
  *(_QWORD *)&time.timescale = v84;
  time.epoch = epoch;
  Seconds = CMTimeGetSeconds(&time);
  v86 = objc_msgSend(objc_allocWithZone((Class)NSDateComponentsFormatter), "init");
  v87 = v86;
  if (Seconds < 60.0)
  {
    objc_msgSend(v86, "setAllowedUnits:", 192);
    v88 = &selRef_setZeroFormattingBehavior_;
    v89 = 0x10000;
LABEL_24:
    objc_msgSend(v87, *v88, v89);
    goto LABEL_25;
  }
  if (Seconds > 3600.0)
  {
    v88 = &selRef_setAllowedUnits_;
    v89 = 224;
    goto LABEL_24;
  }
LABEL_25:
  v90 = objc_msgSend(v87, "stringFromTimeInterval:", Seconds);
  if (v90)
  {
    v91 = v90;
    v92 = static String._unconditionallyBridgeFromObjectiveC(_:)(v90);
    v94 = v93;

  }
  else
  {
    v92 = 0;
    v94 = 0xE000000000000000;
  }
  if (Seconds < 60.0)
  {
    v95 = specialized Collection.dropFirst(_:)(1uLL, v92, v94);
    v97 = v96;
    v99 = v98;
    v101 = v100;
    v102 = swift_bridgeObjectRelease(v94);
    static String._fromSubstring(_:)(v95, v97, v99, v101, v102);
    v94 = v103;
    swift_bridgeObjectRelease(v101);
  }

  v60 = v215;
  v80 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v78 = swift_bridgeObjectRelease(v94).n128_u64[0];
LABEL_31:
  objc_msgSend(v76, "setText:", v80, v78);

  v104 = objc_msgSend(v211, "whiteColor");
  objc_msgSend(v76, "setTextColor:", v104);

  v105 = objc_msgSend(v212, "preferredFontForTextStyle:");
  isa = UIFont.withWeight(_:)(UIFontWeightSemibold).super.isa;

  objc_msgSend(v76, "setFont:", isa);
  objc_msgSend(v76, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityMedium);
  v107 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v108 = objc_msgSend(v107, "layer");
  v109 = specialized static MOSuggestionSheetVideoPlaybackView.gradient.getter();
  objc_msgSend(v108, "addSublayer:", v109);

  objc_msgSend(v51, "addSubview:", v107);
  objc_msgSend(v107, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v110 = objc_msgSend(v107, "widthAnchor");
  v111 = objc_msgSend(v110, "constraintEqualToConstant:", 100.0);

  objc_msgSend(v111, "setActive:", 1);
  objc_msgSend(v107, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v112 = objc_msgSend(v107, "heightAnchor");
  v113 = objc_msgSend(v112, "constraintEqualToConstant:", 75.0);

  objc_msgSend(v113, "setActive:", 1);
  objc_msgSend(v51, "addSubview:", v76);
  objc_msgSend(v51, "bringSubviewToFront:", v76);
  v114 = 8.0;
  if (a2 == 8)
  {
    if (one-time initialization token for checkPlatterViewSize != -1)
      swift_once(&one-time initialization token for checkPlatterViewSize, one-time initialization function for checkPlatterViewSize);
    v114 = *(double *)&static MOSuggestionCarouselAssetCell.checkPlatterViewSize + 8.0 + 8.0;
  }
  v115 = &selRef_genericAvatarFor_pointSize_completion_;
  v116 = objc_msgSend(v76, "superview");
  if (v116)
  {
    v117 = v116;
    objc_msgSend(v76, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v118 = objc_msgSend(v76, "trailingAnchor");
    v119 = objc_msgSend(v117, "trailingAnchor");
    v120 = objc_msgSend(v118, "constraintEqualToAnchor:", v119);

    objc_msgSend(v120, "setConstant:", -v114);
    if (v120)
    {
      v121 = v120;
      objc_msgSend(v121, "setActive:", 1);

      v60 = v215;
      v115 = &selRef_genericAvatarFor_pointSize_completion_;
      if (a2 != 8)
        goto LABEL_38;
LABEL_43:
      objc_msgSend(v76, "frame");
      v128 = CGRectGetWidth(v227);
      v129 = objc_msgSend(v212, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
      v130 = UIFont.withWeight(_:)(UIFontWeightSemibold).super.isa;

      v131 = specialized UILabel.estimatedHeight(forWidth:text:ofFont:)(0, 0xE000000000000000, v130, v128);
      if (one-time initialization token for checkPlatterViewSize != -1)
        swift_once(&one-time initialization token for checkPlatterViewSize, one-time initialization function for checkPlatterViewSize);
      v132 = *((double *)&static MOSuggestionCarouselAssetCell.checkPlatterViewSize + 1);
      v133 = objc_msgSend(v76, "superview");
      if (v133)
      {
        v134 = v133;
        objc_msgSend(v76, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v135 = objc_msgSend(v76, "bottomAnchor");
        v136 = objc_msgSend(v134, "bottomAnchor");
        v137 = objc_msgSend(v135, "constraintEqualToAnchor:", v136);

        if (v137)
        {
          objc_msgSend(v137, "setConstant:", -(v131 * -0.5 + 8.0 + v132 * 0.5));
          v138 = v137;
          objc_msgSend(v138, "setActive:", 1);

        }
      }
      MOSuggestionSheetVideoPlaybackView.setupMuteButton()();
      v139 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_muteButton;
      objc_msgSend(v51, "addSubview:", *(_QWORD *)((char *)v51 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_muteButton));
      v140 = *(id *)((char *)v51 + v139);
      v141 = objc_msgSend(v140, "superview");
      if (v141)
      {
        v142 = v141;
        objc_msgSend(v140, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v143 = objc_msgSend(v140, "trailingAnchor");
        v144 = objc_msgSend(v142, "trailingAnchor");
        v145 = objc_msgSend(v143, "constraintEqualToAnchor:", v144);

        objc_msgSend(v145, "setConstant:", -10.0);
        if (v145)
        {
          v145 = v145;
          objc_msgSend(v145, "setActive:", 1);

          v140 = v145;
        }

        v115 = &selRef_genericAvatarFor_pointSize_completion_;
      }
      else
      {
        v145 = 0;
        v142 = v140;
      }

      v146 = *(id *)((char *)v51 + v139);
      v147 = objc_msgSend(v146, v115[94]);
      if (v147)
      {
        v148 = v147;
        objc_msgSend(v146, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v149 = objc_msgSend(v146, "topAnchor");
        v150 = objc_msgSend(v148, "topAnchor");
        v151 = objc_msgSend(v149, "constraintEqualToAnchor:", v150);

        objc_msgSend(v151, "setConstant:", 10.0);
        if (v151)
        {
          v151 = v151;
          objc_msgSend(v151, "setActive:", 1);

          v146 = v151;
        }

        v115 = &selRef_genericAvatarFor_pointSize_completion_;
      }
      else
      {
        v151 = 0;
        v148 = v146;
      }

      v152 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MOPlayPauseButton()), "init");
      v153 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_playPauseButton;
      v154 = *(void **)((char *)v51
                      + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_playPauseButton);
      *(_QWORD *)((char *)v51 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_playPauseButton) = v152;

      v155 = *(_QWORD **)((char *)v51 + v153);
      if (v155
        && (v156 = *(void (**)(_QWORD *, _UNKNOWN **))((swift_isaMask & *v155) + 0xB0),
            v157 = v51,
            v158 = v155,
            v156(v51, &protocol witness table for MOSuggestionSheetVideoPlaybackView),
            v158,
            *(_QWORD *)((char *)v51 + v153)))
      {
        objc_msgSend(v157, "addSubview:");
        v159 = *(void **)((char *)v51 + v153);
        if (v159)
        {
          v160 = v159;
          v161 = objc_msgSend(v160, v115[94]);
          if (v161)
          {
            v162 = v161;
            objc_msgSend(v160, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
            v163 = objc_msgSend(v160, "leadingAnchor");
            v164 = objc_msgSend(v162, "leadingAnchor");
            v165 = objc_msgSend(v163, "constraintEqualToAnchor:", v164);

            objc_msgSend(v165, "setConstant:", 10.0);
            v166 = v165;
            v115 = &selRef_genericAvatarFor_pointSize_completion_;
            v167 = v166;
            objc_msgSend(v166, "setActive:", 1);

            v160 = v162;
          }

          v168 = *(void **)((char *)v51 + v153);
          if (v168)
          {
            v123 = v168;
            v169 = objc_msgSend(v123, v115[94]);
            v60 = v215;
            if (v169)
            {
              v170 = v169;
              objc_msgSend(v123, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
              v171 = objc_msgSend(v123, "topAnchor");
              v172 = objc_msgSend(v170, "topAnchor");
              v173 = objc_msgSend(v171, "constraintEqualToAnchor:", v172);

              objc_msgSend(v173, "setConstant:", 10.0);
              v127 = v173;
              objc_msgSend(v127, "setActive:", 1);

              v123 = v170;
              v115 = &selRef_genericAvatarFor_pointSize_completion_;
              goto LABEL_67;
            }
LABEL_68:

            goto LABEL_69;
          }
LABEL_89:
          __break(1u);
          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_89;
    }

    v60 = v215;
    v115 = &selRef_genericAvatarFor_pointSize_completion_;
  }
  if (a2 == 8)
    goto LABEL_43;
LABEL_38:
  v122 = objc_msgSend(v76, "superview");
  if (v122)
  {
    v123 = v122;
    objc_msgSend(v76, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v124 = objc_msgSend(v76, "bottomAnchor");
    v125 = objc_msgSend(v123, "bottomAnchor");
    v126 = objc_msgSend(v124, "constraintEqualToAnchor:", v125);

    if (v126)
    {
      objc_msgSend(v126, "setConstant:", -8.0);
      v127 = v126;
      objc_msgSend(v127, "setActive:", 1);
LABEL_67:

      goto LABEL_68;
    }
    goto LABEL_68;
  }
LABEL_69:
  objc_msgSend(v76, "intrinsicContentSize");
  v175 = v174;
  v176 = objc_msgSend(v107, v115[94]);
  if (v176)
  {
    v177 = v176;
    objc_msgSend(v107, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v178 = objc_msgSend(v107, "trailingAnchor");
    v179 = objc_msgSend(v177, "trailingAnchor");
    v180 = objc_msgSend(v178, "constraintEqualToAnchor:", v179);

    objc_msgSend(v180, "setConstant:", 50.0 - v114 + v175 * -0.5);
    v181 = v180;
    objc_msgSend(v181, "setActive:", 1);

  }
  v182 = objc_msgSend(v107, v115[94]);
  if (v182)
  {
    v183 = v182;
    objc_msgSend(v107, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v184 = objc_msgSend(v107, "bottomAnchor");
    v185 = objc_msgSend(v183, "bottomAnchor");
    v186 = objc_msgSend(v184, "constraintEqualToAnchor:", v185);

    if (v186)
    {
      objc_msgSend(v186, "setConstant:", 37.5);
      v187 = v186;
      objc_msgSend(v187, "setActive:", 1);

      v76 = v187;
      v107 = v187;
    }
    v62 = &selRef_setContentOffset_animated_;

    v76 = v107;
  }
  else
  {
    v183 = v107;
    v62 = &selRef_setContentOffset_animated_;
  }

LABEL_77:
  objc_msgSend(v51, "setIsAccessibilityElement:", 1);
  objc_msgSend(v51, "setAccessibilityIgnoresInvertColors:", 1);
  v188 = (void *)objc_opt_self(NSBundle);
  v189 = v51;
  v190 = objc_msgSend(v188, "mainBundle");
  v221._countAndFlagsBits = 0xD00000000000002ALL;
  v221._object = (void *)0x80000001001AD450;
  v191._countAndFlagsBits = 0x6F65646956;
  v191._object = (void *)0xE500000000000000;
  v192._countAndFlagsBits = 0;
  v192._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v191, (Swift::String_optional)0, (NSBundle)v190, v192, v221)._object;

  v194 = String._bridgeToObjectiveC()();
  objc_msgSend(v189, "setAccessibilityLabel:", v194, swift_bridgeObjectRelease(object).n128_f64[0]);

  v195 = (void *)objc_opt_self(NSNotificationCenter);
  v196 = objc_msgSend(v195, "defaultCenter");
  v197 = v189;
  v198 = String._bridgeToObjectiveC()();
  v199 = (void *)v60();
  v200 = v199;
  if (v199)
  {
    v201 = objc_msgSend(v199, v62[140]);

    if (v201)
    {
      time.value = (CMTimeValue)v201;
      v202 = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for AVPlayerItem, AVPlayerItem_ptr);
      v200 = (void *)_bridgeAnythingToObjectiveC<A>(_:)(&time, v202);

    }
    else
    {
      v200 = 0;
    }
  }
  objc_msgSend(v196, "addObserver:selector:name:object:", v197, "finishedPlayingWithNote:", v198, v200);

  swift_unknownObjectRelease(v200);
  v203 = objc_msgSend(v195, "defaultCenter");
  v204 = one-time initialization token for PLAYBACK_SHOULD_PAUSE_NOTIFICATION;
  v205 = v197;
  if (v204 != -1)
    swift_once(&one-time initialization token for PLAYBACK_SHOULD_PAUSE_NOTIFICATION, one-time initialization function for PLAYBACK_SHOULD_PAUSE_NOTIFICATION);
  objc_msgSend(v203, "addObserver:selector:name:object:", v205, "didReceiveInteruptionWithNote:", static MOSuggestionSheetVideoPlaybackView.PLAYBACK_SHOULD_PAUSE_NOTIFICATION, 0);

  v206 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v206 - 8) + 8))(a1, v206);
}

Swift::Void __swiftcall MOSuggestionSheetVideoPlaybackView.configureBaseVideoView()()
{
  char *v0;
  void *v1;
  uint64_t v2;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t (**v6)();
  uint64_t v7;
  CGRect *v8;
  CGRect *v9;
  double v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  double v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  double v24;
  id v25;
  id v26;
  double Height;
  id v28;
  id v29;
  _QWORD *v30;
  CGFloat Width;
  uint64_t v32;

  v1 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_baseVideoView];
  objc_msgSend(v0, "addSubview:", v1);
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v2 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v2, (uint64_t)static MOAngelLogger.assets);
  v3 = v0;
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.debug.getter();
  v6 = off_10020C000;
  if (os_log_type_enabled(v4, v5))
  {
    v7 = swift_slowAlloc(42, -1);
    *(_DWORD *)v7 = 134218752;
    Width = *(double *)&v3[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_verticalShift];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&Width, &v32, v7 + 4);
    *(_WORD *)(v7 + 12) = 2048;
    Width = *(double *)&v3[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_horizontalShift];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&Width, &v32, v7 + 14);
    *(_WORD *)(v7 + 22) = 2048;
    v8 = (CGRect *)&v3[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_targetBaseFrame];
    Width = CGRectGetWidth(*(CGRect *)&v3[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_targetBaseFrame]);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&Width, &v32, v7 + 24);
    *(_WORD *)(v7 + 32) = 2048;
    v6 = off_10020C000;
    Width = CGRectGetHeight(*v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&Width, &v32, v7 + 34);

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "[MOSuggestionSheetVideoPlaybackView] verticalShift=%f, horizontalShift=%f, width=%f, height=%f", (uint8_t *)v7, 0x2Au);
    swift_slowDealloc(v7, -1, -1);

  }
  else
  {

  }
  v9 = (CGRect *)((char *)v6[508] + (_QWORD)v3);
  if (CGRectGetWidth(*v9) <= 0.0 || CGRectGetHeight(*v9) <= 0.0)
  {
    v30 = UIView.fillSuper(margin:)(0.0);
    swift_bridgeObjectRelease(v30);
  }
  else
  {
    v10 = *(double *)&v3[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_verticalShift];
    v11 = objc_msgSend(v1, "superview");
    if (v11)
    {
      v12 = v11;
      objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v13 = objc_msgSend(v1, "topAnchor");
      v14 = objc_msgSend(v12, "topAnchor");
      v15 = objc_msgSend(v13, "constraintEqualToAnchor:", v14);

      objc_msgSend(v15, "setConstant:", -v10);
      if (v15)
      {
        v16 = v15;
        objc_msgSend(v16, "setActive:", 1);

      }
    }
    v17 = *(double *)&v3[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_horizontalShift];
    v18 = objc_msgSend(v1, "superview");
    if (v18)
    {
      v19 = v18;
      objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v20 = objc_msgSend(v1, "leadingAnchor");
      v21 = objc_msgSend(v19, "leadingAnchor");
      v22 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);

      objc_msgSend(v22, "setConstant:", -v17);
      if (v22)
      {
        v23 = v22;
        objc_msgSend(v23, "setActive:", 1);

      }
    }
    v24 = CGRectGetWidth(*v9);
    objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v25 = objc_msgSend(v1, "widthAnchor");
    v26 = objc_msgSend(v25, "constraintEqualToConstant:", v24);

    objc_msgSend(v26, "setActive:", 1);
    Height = CGRectGetHeight(*v9);
    objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v28 = objc_msgSend(v1, "heightAnchor");
    v29 = objc_msgSend(v28, "constraintEqualToConstant:", Height);

    objc_msgSend(v29, "setActive:", 1);
  }
}

id MOSuggestionSheetVideoPlaybackView.__deallocating_deinit()
{
  void *v0;
  id v1;
  objc_super v3;

  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v1, "removeObserver:", v0);

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for MOSuggestionSheetVideoPlaybackView();
  return objc_msgSendSuper2(&v3, "dealloc");
}

Swift::Void __swiftcall MOSuggestionSheetVideoPlaybackView.didReceiveInteruption(note:)(NSNotification note)
{
  _QWORD *v1;

  (*(void (**)(_QWORD))((swift_isaMask & *v1) + 0x118))(0);
}

void MOSuggestionSheetVideoPlaybackView.setupMuteButton()()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  unsigned int v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  double v19;
  id v20;
  id v21;
  id v22;

  v1 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x128))();
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, "isMuted");

    if (v3)
    {
      v4 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_muteButton);
      v5 = *(id *)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_mutedImage);
      if (v5)
        goto LABEL_6;
LABEL_7:
      v8 = v4;
      goto LABEL_8;
    }
  }
  v4 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_muteButton);
  v5 = *(id *)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_unMutedImage);
  if (!v5)
    goto LABEL_7;
LABEL_6:
  v6 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_muteButtonConfig);
  v7 = v4;
  v5 = objc_msgSend(v5, "imageWithConfiguration:", v6);
LABEL_8:
  objc_msgSend(v4, "setImage:forState:", v5, 0);

  v9 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_muteButton;
  v10 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_muteButton);
  v11 = (void *)objc_opt_self(UIColor);
  v12 = v10;
  v13 = objc_msgSend(v11, "whiteColor");
  objc_msgSend(v12, "setTintColor:", v13);

  v14 = objc_msgSend(*(id *)((char *)v0 + v9), "layer");
  objc_msgSend(v14, "setMasksToBounds:", 0);

  v15 = objc_msgSend(*(id *)((char *)v0 + v9), "layer");
  v16 = objc_msgSend(v11, "blackColor");
  v17 = objc_msgSend(v16, "CGColor");

  objc_msgSend(v15, "setShadowColor:", v17);
  v18 = objc_msgSend(*(id *)((char *)v0 + v9), "layer");
  LODWORD(v19) = 1.0;
  objc_msgSend(v18, "setShadowOpacity:", v19);

  v20 = objc_msgSend(*(id *)((char *)v0 + v9), "layer");
  objc_msgSend(v20, "setShadowRadius:", 16.0);

  v21 = objc_msgSend(*(id *)((char *)v0 + v9), "layer");
  objc_msgSend(v21, "setShadowOffset:", 0.0, 2.0);

  v22 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "touchMute:");
  objc_msgSend(*(id *)((char *)v0 + v9), "addGestureRecognizer:", v22);
  objc_msgSend(*(id *)((char *)v0 + v9), "setUserInteractionEnabled:", 1);
  objc_msgSend(*(id *)((char *)v0 + v9), "setDeliversTouchesForGesturesToSuperview:", 0);

}

void MOSuggestionSheetVideoPlaybackView.init(frame:)()
{
  MOSuggestionCutoutView.init(frame:)((uint64_t)"MomentsUIService.MOSuggestionSheetVideoPlaybackView", 51);
}

Swift::Void __swiftcall MOSuggestionSheetVideoPlaybackView.didReceivePlayNotification()()
{
  MOSuggestionSheetVideoPlaybackView.didReceivePlayNotification()((SEL *)&selRef_play);
}

Swift::Void __swiftcall MOSuggestionSheetVideoPlaybackView.didReceivePauseNotification()()
{
  MOSuggestionSheetVideoPlaybackView.didReceivePlayNotification()((SEL *)&selRef_pause);
}

void MOSuggestionSheetVideoPlaybackView.didReceivePlayNotification()(SEL *a1)
{
  _QWORD *v1;
  id v3;

  v3 = (id)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x128))();
  objc_msgSend(v3, *a1);

}

MomentsUIService::PlayerState __swiftcall MOSuggestionSheetVideoPlaybackView.getPlayerState()()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  id v3;
  MomentsUIService::PlayerState result;

  v1 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x128))();
  result = MomentsUIService_PlayerState_paused;
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, "timeControlStatus");

    if (v3 == (id)2)
      return 0;
  }
  return result;
}

void protocol witness for VideoPlaybackDelegate.didReceivePlayNotification() in conformance MOSuggestionSheetVideoPlaybackView(uint64_t a1, uint64_t a2)
{
  protocol witness for VideoPlaybackDelegate.didReceivePlayNotification() in conformance MOSuggestionSheetVideoPlaybackView(a1, a2, (SEL *)&selRef_play);
}

void protocol witness for VideoPlaybackDelegate.didReceivePauseNotification() in conformance MOSuggestionSheetVideoPlaybackView(uint64_t a1, uint64_t a2)
{
  protocol witness for VideoPlaybackDelegate.didReceivePlayNotification() in conformance MOSuggestionSheetVideoPlaybackView(a1, a2, (SEL *)&selRef_pause);
}

void protocol witness for VideoPlaybackDelegate.didReceivePlayNotification() in conformance MOSuggestionSheetVideoPlaybackView(uint64_t a1, uint64_t a2, SEL *a3)
{
  _QWORD *v3;
  id v5;

  v5 = (id)(*(uint64_t (**)(void))((swift_isaMask & *v3) + 0x128))();
  objc_msgSend(v5, *a3);

}

BOOL protocol witness for VideoPlaybackDelegate.getPlayerState() in conformance MOSuggestionSheetVideoPlaybackView()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  id v3;

  v1 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x128))();
  if (!v1)
    return 1;
  v2 = v1;
  v3 = objc_msgSend(v1, "timeControlStatus");

  return v3 != (id)2;
}

void *PlayPauseConstants.FRAME_SIZE.unsafeMutableAddressor()
{
  return &static PlayPauseConstants.FRAME_SIZE;
}

const char *PlayPauseConstants.PLAYBUTTONSYMBOL.unsafeMutableAddressor()
{
  return "play.fill";
}

uint64_t static ProgressIndicatorConstants.PLAYBUTTONSYMBOL.getter()
{
  return 0x6C69662E79616C70;
}

const char *PlayPauseConstants.PAUSEBUTTONSYMBOL.unsafeMutableAddressor()
{
  return "pause.fill";
}

uint64_t static ProgressIndicatorConstants.PAUSEBUTTONSYMBOL.getter()
{
  return 0x69662E6573756170;
}

void *PlayPauseConstants.BORDER_LINE_WIDTH.unsafeMutableAddressor()
{
  return &static PlayPauseConstants.BORDER_LINE_WIDTH;
}

double static ProgressIndicatorConstants.BORDER_LINE_WIDTH.getter()
{
  return 2.5;
}

id MOPlayPauseButton.playButtonConfig.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_playButtonConfig);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_playButtonConfig, v3, 0, 0);
  return *v1;
}

void MOPlayPauseButton.playButtonConfig.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_playButtonConfig);
}

uint64_t (*MOPlayPauseButton.playButtonConfig.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_playButtonConfig, a1, 33, 0);
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

uint64_t MOPlayPauseButton.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_delegate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_delegate, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

uint64_t MOPlayPauseButton.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE v7[24];

  v5 = v2 + OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_delegate;
  swift_beginAccess(v5, v7, 1, 0);
  *(_QWORD *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign(v5, a1);
  return swift_unknownObjectRelease(a1);
}

void (*MOPlayPauseButton.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return MOSuggestionSheetAssetGridView.delegate.modify;
}

char *MOPlayPauseButton.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  char *v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  NSString v13;
  void *v14;
  id v15;
  uint64_t v16;
  NSString v17;
  id v18;
  char *v19;
  id v20;
  char **v21;
  id v22;
  id v23;
  char *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  _QWORD *v29;
  uint64_t v30;
  id v31;
  char **v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  id v44;
  void *v45;
  objc_super v47;

  v1 = OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_playPauseButton;
  v2 = type metadata accessor for MOSuggestionSheetOversizedBoundsButton();
  v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2));
  v4 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v3, "init");
  v5 = OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_playButtonConfig;
  v6 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  v7 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v8 = objc_msgSend(v7, "configurationWithHierarchicalColor:", v6);

  v9 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:", 15.0);
  v10 = objc_msgSend(v7, "configurationWithFont:", v9);

  v11 = objc_msgSend(v8, "configurationByApplyingConfiguration:", v10);
  *(_QWORD *)&v4[v5] = v11;
  v12 = OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_pauseImage;
  v13 = String._bridgeToObjectiveC()();
  v14 = (void *)objc_opt_self(UIImage);
  v15 = objc_msgSend(v14, "systemImageNamed:", v13);

  *(_QWORD *)&v4[v12] = v15;
  v16 = OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_playImage;
  v17 = String._bridgeToObjectiveC()();
  v18 = objc_msgSend(v14, "systemImageNamed:", v17);

  *(_QWORD *)&v4[v16] = v18;
  v19 = &v4[OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_delegate];
  *((_QWORD *)v19 + 1) = 0;
  swift_unknownObjectWeakInit(v19);

  v47.receiver = v4;
  v47.super_class = (Class)type metadata accessor for MOPlayPauseButton();
  v20 = objc_msgSendSuper2(&v47, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v21 = &selRef_genericAvatarFor_pointSize_completion_;
  objc_msgSend(v20, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v22 = objc_msgSend(v20, "widthAnchor");
  v23 = objc_msgSend(v22, "constraintEqualToConstant:", 30.0);

  objc_msgSend(v23, "setActive:", 1);
  v24 = (char *)v20;
  objc_msgSend(v24, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v25 = objc_msgSend(v24, "heightAnchor");
  v26 = objc_msgSend(v25, "constraintEqualToConstant:", 30.0);

  objc_msgSend(v26, "setActive:", 1);
  v27 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 11);
  v28 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v27);

  objc_msgSend(v28, "_setCornerRadius:", 15.0);
  objc_msgSend(v24, "addSubview:", v28);
  objc_msgSend(v28, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v29 = UIView.fillSuper(margin:)(0.0);
  swift_bridgeObjectRelease(v29);
  MOPlayPauseButton.setupPlayPauseButton()();
  v30 = OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_playPauseButton;
  objc_msgSend(v24, "addSubview:", *(_QWORD *)&v24[OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_playPauseButton]);
  objc_msgSend(*(id *)&v24[v30], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v31 = *(id *)&v24[v30];
  v32 = &selRef_genericAvatarFor_pointSize_completion_;
  v33 = objc_msgSend(v31, "superview");
  if (v33)
  {
    v34 = v33;
    objc_msgSend(v31, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v35 = objc_msgSend(v31, "centerYAnchor");
    v36 = objc_msgSend(v34, "centerYAnchor");
    v37 = objc_msgSend(v35, "constraintEqualToAnchor:", v36);

    objc_msgSend(v37, "setConstant:", 0.0);
    if (v37)
    {
      v37 = v37;
      objc_msgSend(v37, "setActive:", 1);

      v31 = v37;
    }

    v21 = &selRef_genericAvatarFor_pointSize_completion_;
    v32 = &selRef_genericAvatarFor_pointSize_completion_;
  }
  else
  {
    v37 = 0;
    v34 = v31;
  }

  v38 = *(id *)&v24[v30];
  v39 = objc_msgSend(v38, v32[94]);
  if (v39)
  {
    v40 = v39;
    objc_msgSend(v38, v21[47], 0);
    v41 = objc_msgSend(v38, "centerXAnchor");
    v42 = objc_msgSend(v40, "centerXAnchor");
    v43 = objc_msgSend(v41, "constraintEqualToAnchor:", v42);

    objc_msgSend(v43, "setConstant:", 0.0);
    if (v43)
    {
      v44 = v43;
      objc_msgSend(v44, "setActive:", 1);

      v38 = v24;
      v45 = v44;
    }
    else
    {
      v45 = 0;
      v44 = v24;
    }

    v38 = v44;
  }
  else
  {
    v45 = 0;
    v40 = v24;
  }

  return v24;
}

void MOPlayPauseButton.setupPlayPauseButton()()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;

  v1 = OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_playPauseButton;
  v2 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_playPauseButton);
  v3 = *(id *)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_pauseImage);
  if (v3)
  {
    v4 = (void *)(*(uint64_t (**)(void *))((swift_isaMask & *v0) + 0x90))(v2);
    v3 = objc_msgSend(v3, "imageWithConfiguration:", v4);

  }
  else
  {
    v5 = v2;
  }
  objc_msgSend(v2, "setImage:forState:", v3, 0);

  v6 = *(void **)((char *)v0 + v1);
  v7 = (void *)objc_opt_self(UIColor);
  v8 = v6;
  v9 = objc_msgSend(v7, "whiteColor");
  objc_msgSend(v8, "setTintColor:", v9);

  v10 = objc_msgSend(*(id *)((char *)v0 + v1), "imageView");
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v10, "setContentMode:", 1);

  }
  v12 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "touchPlayPause:");
  objc_msgSend(v0, "setUserInteractionEnabled:", 1);
  objc_msgSend(*(id *)((char *)v0 + v1), "addGestureRecognizer:", v12);
  objc_msgSend(*(id *)((char *)v0 + v1), "setUserInteractionEnabled:", 1);
  objc_msgSend(*(id *)((char *)v0 + v1), "setDeliversTouchesForGesturesToSuperview:", 0);

}

Swift::Void __swiftcall MOPlayPauseButton.setPlayerPausedButtonUI()()
{
  MOPlayPauseButton.setPlayerPausedButtonUI()(&OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_playImage);
}

Swift::Void __swiftcall MOPlayPauseButton.setPlayerPlayingButtonUI()()
{
  MOPlayPauseButton.setPlayerPausedButtonUI()(&OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_pauseImage);
}

void MOPlayPauseButton.setPlayerPausedButtonUI()(_QWORD *a1)
{
  _QWORD *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;

  v2 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_playPauseButton);
  v3 = *(void **)((char *)v1 + *a1);
  if (v3)
  {
    v4 = (void *)(*(uint64_t (**)(void *))((swift_isaMask & *v1) + 0x90))(v2);
    v6 = objc_msgSend(v3, "imageWithConfiguration:", v4);

  }
  else
  {
    v5 = v2;
    v6 = 0;
  }
  objc_msgSend(v2, "setImage:forState:", v6, 0);

}

void MOPlayPauseButton.init(frame:)()
{
  MOSuggestionCutoutView.init(frame:)((uint64_t)"MomentsUIService.MOPlayPauseButton", 34);
}

id MOPlayPauseButton.__deallocating_deinit()
{
  return MOSuggestionRoundView.__deallocating_deinit(type metadata accessor for MOPlayPauseButton);
}

void *MOSuggestionSheetVideoPlaybackView.oneHourSeconds.unsafeMutableAddressor()
{
  return &static MOSuggestionSheetVideoPlaybackView.oneHourSeconds;
}

double static MOSuggestionSheetVideoPlaybackView.oneHourSeconds.getter()
{
  return 3600.0;
}

void *MOSuggestionSheetVideoPlaybackView.minuteSeconds.unsafeMutableAddressor()
{
  return &static MOSuggestionSheetVideoPlaybackView.minuteSeconds;
}

id MOSuggestionSheetVideoPlaybackView.ThumbnailView.imageView.getter()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtCC16MomentsUIService34MOSuggestionSheetVideoPlaybackView13ThumbnailView_imageView));
}

void MOSuggestionSheetVideoPlaybackView.ThumbnailView.init(thumbnail:assignedTileSize:cropRect:duration:)(void *a1, char a2, uint64_t a3, void *a4, char a5)
{
  char *v5;
  uint64_t v10;
  id v11;
  char *v12;
  id v13;
  double x;
  double y;
  double width;
  double height;
  id v18;
  char *v19;
  void *v20;
  char *v21;
  id v22;
  _QWORD *v23;
  double v24;
  double v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  id v32;
  void *v33;
  unint64_t v34;
  double v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSString v44;
  id v45;
  id v46;
  Class isa;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  double v55;
  id v56;
  void *v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  void *v63;
  id v64;
  id v65;
  id v66;
  id v67;
  double v68;
  double v69;
  id v70;
  void *v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  void *v77;
  id v78;
  id v79;
  id v80;
  id v81;
  char *v82;
  void *v84;
  unint64_t v85;
  objc_super v86;
  CGRect v87;
  char v88;
  CGRect v89;

  v10 = OBJC_IVAR____TtCC16MomentsUIService34MOSuggestionSheetVideoPlaybackView13ThumbnailView_imageView;
  v11 = objc_allocWithZone((Class)UIImageView);
  v12 = v5;
  v13 = objc_msgSend(v11, "init");
  *(_QWORD *)&v5[v10] = v13;
  v84 = a1;
  objc_msgSend(v13, "setImage:", a1);
  objc_msgSend(v13, "setContentMode:", 2);
  outlined init with take of CGRect?(a3, (uint64_t)&v87);
  if ((v88 & 1) == 0)
  {
    x = v87.origin.x;
    y = v87.origin.y;
    width = v87.size.width;
    height = v87.size.height;
    v89.origin.x = 0.0;
    v89.origin.y = 0.0;
    v89.size.width = 0.0;
    v89.size.height = 0.0;
    if (!CGRectEqualToRect(v87, v89))
    {
      v18 = objc_msgSend(v13, "layer");
      objc_msgSend(v18, "setContentsRect:", x, y, width, height);

    }
  }

  v86.receiver = v12;
  v86.super_class = (Class)type metadata accessor for MOSuggestionSheetVideoPlaybackView.ThumbnailView();
  v19 = (char *)objc_msgSendSuper2(&v86, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v20 = *(void **)&v19[OBJC_IVAR____TtCC16MomentsUIService34MOSuggestionSheetVideoPlaybackView13ThumbnailView_imageView];
  v21 = v19;
  objc_msgSend(v21, "addSubview:", v20);
  v22 = v20;
  v23 = UIView.fillSuper(margin:)(0.0);

  swift_bridgeObjectRelease(v23);
  if ((a5 & 1) != 0)
  {

    return;
  }
  v24 = *(double *)&a4;
  v25 = *(double *)&a4 / 3600.0;
  if ((~COERCE__INT64(*(double *)&a4 / 3600.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_56;
  }
  if (v25 <= -9.22337204e18)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  if (v25 >= 9.22337204e18)
  {
LABEL_57:
    __break(1u);
LABEL_58:
    swift_once(&one-time initialization token for durationWithHourMinuteSecondFormatter, one-time initialization function for durationWithHourMinuteSecondFormatter);
    goto LABEL_10;
  }
  v26 = (uint64_t)v25;
  *(double *)&a4 = COERCE_DOUBLE(objc_msgSend(objc_allocWithZone((Class)UILabel), "init"));
  if (v26 < 1)
  {
    if (one-time initialization token for durationWithMinuteSecondFormatter != -1)
      swift_once(&one-time initialization token for durationWithMinuteSecondFormatter, one-time initialization function for durationWithMinuteSecondFormatter);
    v32 = objc_msgSend((id)static MODateFormatter.durationWithMinuteSecondFormatter, "stringFromTimeInterval:", v24);
    if (v32)
    {
      v33 = v32;
      v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
      v31 = v34;

    }
    else
    {
      v29 = 0;
      v31 = 0;
    }
    v85 = v31;
    v35 = 600.0;
    goto LABEL_21;
  }
  if (one-time initialization token for durationWithHourMinuteSecondFormatter != -1)
    goto LABEL_58;
LABEL_10:
  v27 = objc_msgSend((id)static MODateFormatter.durationWithHourMinuteSecondFormatter, "stringFromTimeInterval:", v24);
  if (v27)
  {
    v28 = v27;
    v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v31 = v30;

  }
  else
  {
    v29 = 0;
    v31 = 0;
  }
  v85 = v31;
  v35 = 36000.0;
LABEL_21:
  v36 = *(_QWORD *)&v35;
  if (v24 >= v35)
    goto LABEL_33;
  if (!v31)
    goto LABEL_35;
  swift_bridgeObjectRetain(v31);
  v37 = specialized Collection.first.getter(v29, v31);
  v39 = v38;
  swift_bridgeObjectRelease(v31);
  if (!v39)
    goto LABEL_34;
  if (v37 == 48 && v39 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease(0xE100000000000000);
    goto LABEL_28;
  }
  v40 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v39, 48, 0xE100000000000000, 0);
  swift_bridgeObjectRelease(v39);
  if ((v40 & 1) == 0)
  {
LABEL_34:
    swift_bridgeObjectRetain(v31);
    v44 = String._bridgeToObjectiveC()();
    v36 = swift_bridgeObjectRelease(v31).n128_u64[0];
    goto LABEL_36;
  }
LABEL_28:
  v41 = HIBYTE(v31) & 0xF;
  if ((v31 & 0x2000000000000000) == 0)
    v41 = v29 & 0xFFFFFFFFFFFFLL;
  if (v41)
  {
    specialized Collection.first.getter(v29, v31);
    if (v42)
    {
      v43 = v42;
      specialized RangeReplaceableCollection.removeFirst(_:)(1);
      v36 = swift_bridgeObjectRelease(v43).n128_u64[0];
      v31 = v85;
LABEL_33:
      if (v31)
        goto LABEL_34;
LABEL_35:
      v44 = 0;
LABEL_36:
      objc_msgSend(a4, "setText:", v44, *(double *)&v36);

      v45 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
      objc_msgSend(a4, "setTextColor:", v45);

      v46 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleFootnote);
      isa = UIFont.withWeight(_:)(UIFontWeightSemibold).super.isa;

      objc_msgSend(a4, "setFont:", isa);
      objc_msgSend(a4, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityMedium);
      v48 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
      v49 = objc_msgSend(v48, "layer");
      v50 = specialized static MOSuggestionSheetVideoPlaybackView.gradient.getter();
      objc_msgSend(v49, "addSublayer:", v50);

      objc_msgSend(v21, "addSubview:", v48);
      objc_msgSend(v48, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v51 = objc_msgSend(v48, "widthAnchor");
      v52 = objc_msgSend(v51, "constraintEqualToConstant:", 100.0);

      objc_msgSend(v52, "setActive:", 1);
      objc_msgSend(v48, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v53 = objc_msgSend(v48, "heightAnchor");
      v54 = objc_msgSend(v53, "constraintEqualToConstant:", 75.0);

      objc_msgSend(v54, "setActive:", 1);
      objc_msgSend(v21, "addSubview:", a4);
      objc_msgSend(v21, "bringSubviewToFront:", a4);
      v55 = 8.0;
      if (a2 == 8)
      {
        if (one-time initialization token for checkPlatterViewSize != -1)
          swift_once(&one-time initialization token for checkPlatterViewSize, one-time initialization function for checkPlatterViewSize);
        v55 = *(double *)&static MOSuggestionCarouselAssetCell.checkPlatterViewSize + 8.0 + 8.0;
      }
      v56 = objc_msgSend(a4, "superview");
      if (v56)
      {
        v57 = v56;
        objc_msgSend(a4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v58 = objc_msgSend(a4, "trailingAnchor");
        v59 = objc_msgSend(v57, "trailingAnchor");
        v60 = objc_msgSend(v58, "constraintEqualToAnchor:", v59);

        objc_msgSend(v60, "setConstant:", -v55);
        v61 = v60;
        objc_msgSend(v61, "setActive:", 1);

      }
      v62 = objc_msgSend(a4, "superview");
      if (v62)
      {
        v63 = v62;
        objc_msgSend(a4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v64 = objc_msgSend(a4, "bottomAnchor");
        v65 = objc_msgSend(v63, "bottomAnchor");
        v66 = objc_msgSend(v64, "constraintEqualToAnchor:", v65);

        if (v66)
        {
          objc_msgSend(v66, "setConstant:", -8.0);
          v67 = v66;
          objc_msgSend(v67, "setActive:", 1);

        }
      }
      objc_msgSend(a4, "intrinsicContentSize");
      v69 = v68;
      v70 = objc_msgSend(v48, "superview");
      if (v70)
      {
        v71 = v70;
        objc_msgSend(v48, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v72 = objc_msgSend(v48, "trailingAnchor");
        v73 = objc_msgSend(v71, "trailingAnchor");
        v74 = objc_msgSend(v72, "constraintEqualToAnchor:", v73);

        objc_msgSend(v74, "setConstant:", 50.0 - v55 + v69 * -0.5);
        v75 = v74;
        objc_msgSend(v75, "setActive:", 1);

      }
      v76 = objc_msgSend(v48, "superview");
      if (v76)
      {
        v77 = v76;
        objc_msgSend(v48, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v78 = objc_msgSend(v48, "bottomAnchor");
        v79 = objc_msgSend(v77, "bottomAnchor");
        v80 = objc_msgSend(v78, "constraintEqualToAnchor:", v79);

        if (v80)
        {
          objc_msgSend(v80, "setConstant:", 37.5);
          v81 = v80;
          objc_msgSend(v81, "setActive:", 1);

LABEL_54:
          swift_bridgeObjectRelease(v31);
          return;
        }

        v82 = (char *)v84;
      }
      else
      {
        v82 = v21;
        v77 = v84;
      }

      goto LABEL_54;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t type metadata accessor for MOSuggestionSheetBaseVideoPlaybackView()
{
  return objc_opt_self(_TtC16MomentsUIService38MOSuggestionSheetBaseVideoPlaybackView);
}

double CGRectMake_1()
{
  return 0.0;
}

void MOSuggestionSheetVideoPlaybackView.ThumbnailView.init(coder:)()
{
  char *v0;
  uint64_t v1;

  v1 = OBJC_IVAR____TtCC16MomentsUIService34MOSuggestionSheetVideoPlaybackView13ThumbnailView_imageView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionSheetVideoPlaybackView.swift", 57, 2, 448, 0);
  __break(1u);
}

void MOSuggestionSheetVideoPlaybackView.ThumbnailView.init(frame:)()
{
  MOSuggestionCutoutView.init(frame:)((uint64_t)"MomentsUIService.ThumbnailView", 30);
}

id MOSuggestionSheetVideoPlaybackView.ThumbnailView.__deallocating_deinit()
{
  return MOSuggestionRoundView.__deallocating_deinit(type metadata accessor for MOSuggestionSheetVideoPlaybackView.ThumbnailView);
}

uint64_t specialized RangeReplaceableCollection.removeFirst(_:)(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  if (result)
  {
    if (result < 0)
    {
      __break(1u);
    }
    else
    {
      v2 = *v1;
      v3 = v1[1];
      v4 = HIBYTE(v3) & 0xF;
      if ((v3 & 0x2000000000000000) == 0)
        v4 = *v1;
      v5 = 7;
      if (((v3 >> 60) & ((v2 & 0x800000000000000) == 0)) != 0)
        v5 = 11;
      result = String.index(_:offsetBy:limitedBy:)(15, result, v5 | (v4 << 16), v2, v3);
      if ((v6 & 1) == 0)
        return String.removeSubrange(_:)(15, result);
    }
    __break(1u);
  }
  return result;
}

void specialized MOSuggestionSheetVideoPlaybackView.setNonDisruptiveMute()()
{
  id v0;
  unsigned int v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  _QWORD v16[3];
  _BYTE v17[16];
  id v18;

  v0 = objc_msgSend((id)objc_opt_self(AVAudioSession), "sharedInstance");
  v18 = 0;
  v1 = objc_msgSend(v0, "setCategory:error:", AVAudioSessionCategoryAmbient, &v18);

  if (v1)
  {
    v2 = v18;
  }
  else
  {
    v14 = v18;
    v3 = v18;
    v4 = _convertNSErrorToError(_:)(v14);

    swift_willThrow();
    if (serverManager._clientConnections != (NSMutableDictionary *)-1)
      swift_once(&serverManager._clientConnections, one-time initialization function for shared);
    v5 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v5, (uint64_t)static MOAngelLogger.shared);
    swift_errorRetain(v4);
    v6 = swift_errorRetain(v4);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(12, -1);
      v10 = (void *)swift_slowAlloc(32, -1);
      v18 = v10;
      *(_DWORD *)v9 = 136315138;
      swift_getErrorValue(v4, v17, v16);
      v11 = Error.localizedDescription.getter(v16[1], v16[2]);
      v13 = v12;
      v15 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v12, (uint64_t *)&v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, v16, v9 + 4);
      swift_bridgeObjectRelease(v13);
      swift_errorRelease(v4);
      swift_errorRelease(v4);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Failed to set audio playback as non-disruptive %s", v9, 0xCu);
      swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v10, -1, -1);
      swift_slowDealloc(v9, -1, -1);

      swift_errorRelease(v4);
    }
    else
    {
      swift_errorRelease(v4);
      swift_errorRelease(v4);
      swift_errorRelease(v4);

    }
  }
}

id specialized static MOSuggestionSheetVideoPlaybackView.gradient.getter()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  Class isa;

  v0 = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
  objc_msgSend(v0, "setType:", kCAGradientLayerRadial);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Any>);
  v2 = swift_allocObject(v1, 96, 7);
  *(_OWORD *)(v2 + 16) = xmmword_10019EEE0;
  v3 = (void *)objc_opt_self(UIColor);
  v4 = objc_msgSend(v3, "blackColor");
  v5 = objc_msgSend(v4, "colorWithAlphaComponent:", 0.3);

  v6 = objc_msgSend(v5, "CGColor");
  type metadata accessor for CGColorRef(0);
  v8 = v7;
  *(_QWORD *)(v2 + 56) = v7;
  *(_QWORD *)(v2 + 32) = v6;
  v9 = objc_msgSend(v3, "blackColor");
  v10 = objc_msgSend(v9, "colorWithAlphaComponent:", 0.0);

  v11 = objc_msgSend(v10, "CGColor");
  *(_QWORD *)(v2 + 88) = v8;
  *(_QWORD *)(v2 + 64) = v11;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v0, "setColors:", isa, swift_bridgeObjectRelease(v2).n128_f64[0]);

  objc_msgSend(v0, "setStartPoint:", 0.5, 0.5);
  objc_msgSend(v0, "setEndPoint:", 1.0, 1.0);
  objc_msgSend(v0, "setFrame:", 0.0, 0.0, 100.0, 75.0);
  return v0;
}

uint64_t type metadata accessor for MOSuggestionSheetVideoPlaybackView()
{
  return objc_opt_self(_TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView);
}

uint64_t type metadata accessor for MOPlayPauseButton()
{
  return objc_opt_self(_TtC16MomentsUIService17MOPlayPauseButton);
}

void specialized MOSuggestionSheetVideoPlaybackView.finishedPlaying(note:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  void (*v4)(void);
  _QWORD *v5;
  void *v6;
  void *v7;
  id v8;
  CMTimeEpoch epoch;
  _QWORD v10[3];

  v1 = v0;
  v2 = (*(uint64_t (**)(_QWORD))((swift_isaMask & *v0) + 0x118))(0);
  v3 = *(_QWORD **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_playPauseButton);
  if (v3)
  {
    v4 = *(void (**)(void))((swift_isaMask & *v3) + 0xD0);
    v5 = v3;
    v4();

  }
  v6 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x128))(v2);
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v6, "currentItem");

    if (v8)
    {
      epoch = kCMTimeZero.epoch;
      v10[0] = kCMTimeZero.value;
      v10[1] = *(_QWORD *)&kCMTimeZero.timescale;
      v10[2] = epoch;
      objc_msgSend(v8, "seekToTime:completionHandler:", v10, 0);

    }
  }
}

void specialized MOSuggestionSheetVideoPlaybackView.init(coder:)()
{
  _BYTE *v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  NSString v15;
  void *v16;
  id v17;
  uint64_t v18;
  NSString v19;
  id v20;

  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_verticalShift] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_horizontalShift] = 0;
  v1 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_config;
  v2 = objc_msgSend((id)objc_opt_self(UIColor), "grayColor");
  v3 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v4 = objc_msgSend(v3, "configurationWithHierarchicalColor:", v2);

  v5 = (void *)objc_opt_self(UIFont);
  v6 = objc_msgSend(v5, "systemFontOfSize:", 50.0);
  v7 = objc_msgSend(v3, "configurationWithFont:", v6);

  v8 = objc_msgSend(v4, "configurationByApplyingConfiguration:", v7);
  *(_QWORD *)&v0[v1] = v8;
  v0[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_isPlaying] = 0;
  v9 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_muteButton;
  v10 = type metadata accessor for MOSuggestionSheetOversizedBoundsButton();
  *(_QWORD *)&v0[v9] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v10)), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_playPauseButton] = 0;
  v11 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_muteButtonConfig;
  v12 = objc_msgSend(v5, "preferredFontForTextStyle:", UIFontTextStyleTitle3);
  v13 = objc_msgSend(v3, "configurationWithFont:", v12);

  *(_QWORD *)&v0[v11] = v13;
  v14 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_unMutedImage;
  v15 = String._bridgeToObjectiveC()();
  v16 = (void *)objc_opt_self(UIImage);
  v17 = objc_msgSend(v16, "systemImageNamed:", v15);

  *(_QWORD *)&v0[v14] = v17;
  v18 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_mutedImage;
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(v16, "systemImageNamed:", v19);

  *(_QWORD *)&v0[v18] = v20;
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionSheetVideoPlaybackView.swift", 57, 2, 228, 0);
  __break(1u);
}

void specialized MOSuggestionSheetVideoPlaybackView.clearNonDisruptiveMute()()
{
  id v0;
  unsigned int v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  _QWORD v16[3];
  _BYTE v17[16];
  id v18;

  v0 = objc_msgSend((id)objc_opt_self(AVAudioSession), "sharedInstance");
  v18 = 0;
  v1 = objc_msgSend(v0, "setCategory:mode:options:error:", AVAudioSessionCategoryPlayback, AVAudioSessionModeDefault, 0, &v18);

  if (v1)
  {
    v2 = v18;
  }
  else
  {
    v14 = v18;
    v3 = v18;
    v4 = _convertNSErrorToError(_:)(v14);

    swift_willThrow();
    if (serverManager._clientConnections != (NSMutableDictionary *)-1)
      swift_once(&serverManager._clientConnections, one-time initialization function for shared);
    v5 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v5, (uint64_t)static MOAngelLogger.shared);
    swift_errorRetain(v4);
    v6 = swift_errorRetain(v4);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(12, -1);
      v10 = (void *)swift_slowAlloc(32, -1);
      v18 = v10;
      *(_DWORD *)v9 = 136315138;
      swift_getErrorValue(v4, v17, v16);
      v11 = Error.localizedDescription.getter(v16[1], v16[2]);
      v13 = v12;
      v15 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v12, (uint64_t *)&v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, v16, v9 + 4);
      swift_bridgeObjectRelease(v13);
      swift_errorRelease(v4);
      swift_errorRelease(v4);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Failed to set audio playback as disruptive %s", v9, 0xCu);
      swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v10, -1, -1);
      swift_slowDealloc(v9, -1, -1);

      swift_errorRelease(v4);
    }
    else
    {
      swift_errorRelease(v4);
      swift_errorRelease(v4);
      swift_errorRelease(v4);

    }
  }
}

void specialized MOSuggestionSheetVideoPlaybackView.touchMute(_:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  void *v3;
  void *v4;
  unsigned int v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;

  v1 = v0;
  v2 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0x128);
  v3 = (void *)v2();
  if (!v3 || (v4 = v3, v5 = objc_msgSend(v3, "isMuted"), v4, !v5))
  {
    v10 = (void *)v2();
    if (v10)
    {
      v11 = v10;
      objc_msgSend(v10, "setMuted:", 1);

    }
    specialized MOSuggestionSheetVideoPlaybackView.setNonDisruptiveMute()();
    v8 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_muteButton);
    v9 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_mutedImage);
    if (v9)
      goto LABEL_12;
LABEL_13:
    v15 = v8;
    v14 = 0;
    goto LABEL_14;
  }
  v6 = (void *)v2();
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v6, "setMuted:", 0);

  }
  specialized MOSuggestionSheetVideoPlaybackView.clearNonDisruptiveMute()();
  if (one-time initialization token for shared != -1)
    swift_once(&one-time initialization token for shared, one-time initialization function for shared);
  (*(void (**)(void))(*(_QWORD *)static MOMusicPlaybackCoordinator.shared + 232))();
  v8 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_muteButton);
  v9 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_unMutedImage);
  if (!v9)
    goto LABEL_13;
LABEL_12:
  v12 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_muteButtonConfig);
  v13 = v8;
  v14 = objc_msgSend(v9, "imageWithConfiguration:", v12);
LABEL_14:
  v16 = v14;
  objc_msgSend(v8, "setImage:forState:");

}

uint64_t specialized MOPlayPauseButton.touchPlayPause(_:)()
{
  _QWORD *v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;

  result = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xA8))();
  if (result)
  {
    v3 = result;
    v4 = v2;
    ObjectType = swift_getObjectType(result);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(ObjectType, v4) & 1) != 0)
    {
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
      v6 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_playPauseButton);
      v7 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_pauseImage);
      if (v7)
      {
LABEL_7:
        v8 = (void *)(*(uint64_t (**)(void *))((swift_isaMask & *v0) + 0x90))(v6);
        v9 = objc_msgSend(v7, "imageWithConfiguration:", v8);

LABEL_9:
        objc_msgSend(v6, "setImage:forState:", v9, 0);

        return swift_unknownObjectRelease(v3);
      }
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v4 + 16))(ObjectType, v4);
      v6 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_playPauseButton);
      v7 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_playImage);
      if (v7)
        goto LABEL_7;
    }
    v10 = v6;
    v9 = 0;
    goto LABEL_9;
  }
  return result;
}

void specialized MOPlayPauseButton.init(coder:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  NSString v11;
  void *v12;
  id v13;
  uint64_t v14;
  NSString v15;
  id v16;
  char *v17;

  v1 = OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_playPauseButton;
  v2 = type metadata accessor for MOSuggestionSheetOversizedBoundsButton();
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)), "init");
  v3 = OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_playButtonConfig;
  v4 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  v5 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v6 = objc_msgSend(v5, "configurationWithHierarchicalColor:", v4);

  v7 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:", 15.0);
  v8 = objc_msgSend(v5, "configurationWithFont:", v7);

  v9 = objc_msgSend(v6, "configurationByApplyingConfiguration:", v8);
  *(_QWORD *)&v0[v3] = v9;
  v10 = OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_pauseImage;
  v11 = String._bridgeToObjectiveC()();
  v12 = (void *)objc_opt_self(UIImage);
  v13 = objc_msgSend(v12, "systemImageNamed:", v11);

  *(_QWORD *)&v0[v10] = v13;
  v14 = OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_playImage;
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(v12, "systemImageNamed:", v15);

  *(_QWORD *)&v0[v14] = v16;
  v17 = &v0[OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_delegate];
  *((_QWORD *)v17 + 1) = 0;
  swift_unknownObjectWeakInit(v17);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionSheetVideoPlaybackView.swift", 57, 2, 380, 0);
  __break(1u);
}

uint64_t type metadata accessor for MOSuggestionSheetVideoPlaybackView.ThumbnailView()
{
  return objc_opt_self(_TtCC16MomentsUIService34MOSuggestionSheetVideoPlaybackView13ThumbnailView);
}

unint64_t lazy protocol witness table accessor for type PlayerState and conformance PlayerState()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PlayerState and conformance PlayerState;
  if (!lazy protocol witness table cache variable for type PlayerState and conformance PlayerState)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlayerState, &type metadata for PlayerState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PlayerState and conformance PlayerState);
  }
  return result;
}

uint64_t sub_1001245CC@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xF8))();
  *a2 = result;
  return result;
}

uint64_t sub_10012460C(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x100))(*a1);
}

uint64_t sub_10012464C@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x110))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_100124690(unsigned __int8 *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(_QWORD))((swift_isaMask & **a2) + 0x118))(*a1);
}

uint64_t sub_1001246CC@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x128))();
  *a2 = result;
  return result;
}

uint64_t sub_10012470C(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0x130);
  v4 = *a1;
  return v3(v2);
}

uint64_t sub_100124758@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x90))();
  *a2 = result;
  return result;
}

uint64_t sub_100124798(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x98))(*a1);
}

uint64_t sub_1001247D8@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xA8))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100124818(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **a2) + 0xB0);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for MOSuggestionSheetBaseVideoPlaybackView.ViewAdjustment(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MOSuggestionSheetBaseVideoPlaybackView.ViewAdjustment(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

ValueMetadata *type metadata accessor for MOSuggestionSheetBaseVideoPlaybackView.ViewAdjustment()
{
  return &type metadata for MOSuggestionSheetBaseVideoPlaybackView.ViewAdjustment;
}

uint64_t storeEnumTagSinglePayload for PlayerState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100124930 + 4 * byte_1001A2B25[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100124964 + 4 * asc_1001A2B20[v4]))();
}

uint64_t sub_100124964(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10012496C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100124974);
  return result;
}

uint64_t sub_100124980(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100124988);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10012498C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100124994(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlayerState()
{
  return &type metadata for PlayerState;
}

ValueMetadata *type metadata accessor for PlayPauseConstants()
{
  return &type metadata for PlayPauseConstants;
}

uint64_t *MOEventBundleStore.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1)
    swift_once(&one-time initialization token for shared, one-time initialization function for shared);
  return &static MOEventBundleStore.shared;
}

BOOL MOEventBundle.recommendedEligible.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  _QWORD v7[2];
  _QWORD v8[5];
  __int128 v9;
  __int128 v10;

  v1 = objc_msgSend(v0, "rankingDictionary");
  if (!v1)
  {
    v9 = 0u;
    v10 = 0u;
LABEL_11:
    outlined destroy of Any?((uint64_t)&v9, &demangling cache variable for type metadata for Any?);
    return 0;
  }
  v2 = v1;
  v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v7[0] = 0xD000000000000017;
  v7[1] = 0x80000001001AA940;
  AnyHashable.init<A>(_:)(v8, v7, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v3 + 16) && (v4 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v8), (v5 & 1) != 0))
  {
    outlined init with copy of Any(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)&v9);
  }
  else
  {
    v9 = 0u;
    v10 = 0u;
  }
  outlined destroy of AnyHashable((uint64_t)v8);
  swift_bridgeObjectRelease(v3);
  if (!*((_QWORD *)&v10 + 1))
    goto LABEL_11;
  return (swift_dynamicCast(v8, &v9, (char *)&type metadata for Any + 8, &type metadata for UInt, 6) & 1) != 0
      && (unint64_t)(v8[0] - 1) < 2;
}

uint64_t MOEventBundle.visibilityCategory.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  _QWORD v7[5];
  __int128 v8;
  __int128 v9;

  v1 = objc_msgSend(v0, "rankingDictionary");
  if (!v1)
  {
    v8 = 0u;
    v9 = 0u;
LABEL_10:
    outlined destroy of Any?((uint64_t)&v8, &demangling cache variable for type metadata for Any?);
    return 0;
  }
  v2 = v1;
  v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  *(_QWORD *)&v8 = 0xD000000000000017;
  *((_QWORD *)&v8 + 1) = 0x80000001001AA940;
  AnyHashable.init<A>(_:)(v7, &v8, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v3 + 16) && (v4 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v7), (v5 & 1) != 0))
  {
    outlined init with copy of Any(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)&v8);
  }
  else
  {
    v8 = 0u;
    v9 = 0u;
  }
  outlined destroy of AnyHashable((uint64_t)v7);
  swift_bridgeObjectRelease(v3);
  if (!*((_QWORD *)&v9 + 1))
    goto LABEL_10;
  if ((swift_dynamicCast(v7, &v8, (char *)&type metadata for Any + 8, &type metadata for UInt, 6) & 1) != 0)
    return v7[0];
  return 0;
}

double MOEventBundle.bundleRankingScore.getter()
{
  return MOEventBundle.bundleRankingScore.getter(0x53676E696B6E6172, 0xEC00000065726F63);
}

BOOL MOEventBundle.recentEligible.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  _QWORD v7[2];
  _QWORD v8[5];
  __int128 v9;
  __int128 v10;

  v1 = objc_msgSend(v0, "rankingDictionary");
  if (!v1)
  {
    v9 = 0u;
    v10 = 0u;
LABEL_10:
    outlined destroy of Any?((uint64_t)&v9, &demangling cache variable for type metadata for Any?);
    return 0;
  }
  v2 = v1;
  v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v7[0] = 0xD000000000000017;
  v7[1] = 0x80000001001AA940;
  AnyHashable.init<A>(_:)(v8, v7, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v3 + 16) && (v4 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v8), (v5 & 1) != 0))
  {
    outlined init with copy of Any(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)&v9);
  }
  else
  {
    v9 = 0u;
    v10 = 0u;
  }
  outlined destroy of AnyHashable((uint64_t)v8);
  swift_bridgeObjectRelease(v3);
  if (!*((_QWORD *)&v10 + 1))
    goto LABEL_10;
  if ((swift_dynamicCast(v8, &v9, (char *)&type metadata for Any + 8, &type metadata for UInt, 6) & 1) != 0)
    return ((v8[0] - 1) & 0xFFFFFFFFFFFFFFFDLL) == 0;
  return 0;
}

double MOEventBundle.baseScore.getter()
{
  return MOEventBundle.bundleRankingScore.getter(0x726F635365736162, 0xE900000000000065);
}

double MOEventBundle.bundleRankingScore.getter(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v5;
  double v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  _QWORD v12[2];
  _QWORD v13[5];
  __int128 v14;
  __int128 v15;

  v5 = objc_msgSend(v2, "rankingDictionary");
  v6 = 0.0;
  if (v5)
  {
    v7 = v5;
    v8 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v5, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    v12[0] = a1;
    v12[1] = a2;
    AnyHashable.init<A>(_:)(v13, v12, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(v8 + 16) && (v9 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v13), (v10 & 1) != 0))
    {
      outlined init with copy of Any(*(_QWORD *)(v8 + 56) + 32 * v9, (uint64_t)&v14);
    }
    else
    {
      v14 = 0u;
      v15 = 0u;
    }
    swift_bridgeObjectRelease(v8);
    outlined destroy of AnyHashable((uint64_t)v13);
    if (*((_QWORD *)&v15 + 1))
    {
      if ((swift_dynamicCast(v12, &v14, (char *)&type metadata for Any + 8, &type metadata for Double, 6) & 1) != 0)
        return *(double *)v12;
    }
    else
    {
      outlined destroy of Any?((uint64_t)&v14, &demangling cache variable for type metadata for Any?);
    }
  }
  return v6;
}

uint64_t MOEventBundleStore.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  MOEventBundleStore.init()();
  return v1;
}

double static MOEventBundleStore.shared.getter()
{
  double result;

  if (one-time initialization token for shared != -1)
    swift_once(&one-time initialization token for shared, one-time initialization function for shared);
  *(_QWORD *)&result = swift_retain(static MOEventBundleStore.shared).n128_u64[0];
  return result;
}

uint64_t one-time initialization function for defaultQueue()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  _QWORD *v15;

  v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue, OS_dispatch_queue_ptr);
  static DispatchQoS.userInteractive.getter();
  v15 = _swiftEmptyArrayStorage;
  v10 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  v12 = lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A], &demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v15, v11, v12, v4, v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000002DLL, 0x80000001001AD940, v9, v6, v3, 0);
  static MOEventBundleStore.defaultQueue = result;
  return result;
}

uint64_t key path getter for MOEventBundleStore.allBundles : MOEventBundleStore@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 184))();
  *a2 = result;
  return result;
}

uint64_t key path setter for MOEventBundleStore.allBundles : MOEventBundleStore(_QWORD *a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 192);
  v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

uint64_t MOEventBundleStore.allBundles.getter()
{
  return MOEventBundleStore.allBundles.getter((uint64_t)&unk_1001A2CD8, (uint64_t)&unk_1001A2D00);
}

uint64_t MOEventBundleStore.allBundles.setter(uint64_t a1)
{
  return MOEventBundleStore.allBundles.setter(a1, (uint64_t)&unk_1001A2CD8, (uint64_t)&unk_1001A2D00);
}

uint64_t (*MOEventBundleStore.allBundles.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_1001A2CD8);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_1001A2D00);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return MOAngelControllerWrapper.isVisible.modify;
}

uint64_t key path setter for MOEventBundleStore.$allBundles : MOEventBundleStore(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>.Publisher);
  __chkstk_darwin(v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 216))(v6);
}

uint64_t MOEventBundleStore.$allBundles.getter()
{
  return MOEventBundleStore.$allBundles.getter(&OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__allBundles, &demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>);
}

uint64_t MOEventBundleStore.$allBundles.setter(uint64_t a1)
{
  return MOEventBundleStore.$allBundles.setter(a1, &demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>.Publisher, &OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__allBundles, &demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>);
}

uint64_t (*MOEventBundleStore.$allBundles.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>.Publisher);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__allBundles;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return MOAngelControllerWrapper.$isVisible.modify;
}

uint64_t key path getter for MOEventBundleStore.privateUIBundles : MOEventBundleStore@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 232))();
  *a2 = result;
  return result;
}

uint64_t key path setter for MOEventBundleStore.privateUIBundles : MOEventBundleStore(_QWORD *a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 240);
  v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

uint64_t MOEventBundleStore.privateUIBundles.getter()
{
  return MOEventBundleStore.allBundles.getter((uint64_t)&unk_1001A2D20, (uint64_t)&unk_1001A2D48);
}

uint64_t MOEventBundleStore.privateUIBundles.setter(uint64_t a1)
{
  return MOEventBundleStore.allBundles.setter(a1, (uint64_t)&unk_1001A2D20, (uint64_t)&unk_1001A2D48);
}

uint64_t (*MOEventBundleStore.privateUIBundles.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_1001A2D20);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_1001A2D48);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return MOAngelControllerWrapper.isVisible.modify;
}

uint64_t key path setter for MOEventBundleStore.$privateUIBundles : MOEventBundleStore(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>.Publisher);
  __chkstk_darwin(v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 264))(v6);
}

uint64_t MOEventBundleStore.$privateUIBundles.getter()
{
  return MOEventBundleStore.$allBundles.getter(&OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__privateUIBundles, &demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>);
}

uint64_t MOEventBundleStore.$privateUIBundles.setter(uint64_t a1)
{
  return MOEventBundleStore.$allBundles.setter(a1, &demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>.Publisher, &OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__privateUIBundles, &demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>);
}

uint64_t (*MOEventBundleStore.$privateUIBundles.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>.Publisher);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__privateUIBundles;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return MOAngelControllerWrapper.$isVisible.modify;
}

uint64_t property wrapper backing initializer of MOEventBundleStore.allBundles(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [MOEventBundleWithAsset]);
  return Published.init(initialValue:)(&v3, v1);
}

uint64_t key path getter for MOEventBundleStore.publicUIBundles : MOEventBundleStore@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 280))();
  *a2 = result;
  return result;
}

uint64_t key path setter for MOEventBundleStore.publicUIBundles : MOEventBundleStore(_QWORD *a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 288);
  v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

uint64_t MOEventBundleStore.publicUIBundles.getter()
{
  return MOEventBundleStore.allBundles.getter((uint64_t)&unk_1001A2D68, (uint64_t)&unk_1001A2D90);
}

uint64_t MOEventBundleStore.allBundles.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v5 = swift_getKeyPath(a2);
  static Published.subscript.getter(&v7, v2, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  return v7;
}

uint64_t MOEventBundleStore.publicUIBundles.setter(uint64_t a1)
{
  return MOEventBundleStore.allBundles.setter(a1, (uint64_t)&unk_1001A2D68, (uint64_t)&unk_1001A2D90);
}

uint64_t MOEventBundleStore.allBundles.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v9;

  KeyPath = swift_getKeyPath(a2);
  v7 = swift_getKeyPath(a3);
  v9 = a1;
  swift_retain(v3);
  return static Published.subscript.setter(&v9, v3, KeyPath, v7);
}

uint64_t (*MOEventBundleStore.publicUIBundles.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_1001A2D68);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_1001A2D90);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return MOAngelControllerWrapper.isVisible.modify;
}

uint64_t key path setter for MOEventBundleStore.$publicUIBundles : MOEventBundleStore(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>.Publisher);
  __chkstk_darwin(v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 312))(v6);
}

uint64_t MOEventBundleStore.$publicUIBundles.getter()
{
  return MOEventBundleStore.$allBundles.getter(&OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__publicUIBundles, &demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>);
}

uint64_t MOEventBundleStore.$publicUIBundles.setter(uint64_t a1)
{
  return MOEventBundleStore.$allBundles.setter(a1, &demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>.Publisher, &OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__publicUIBundles, &demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>);
}

uint64_t (*MOEventBundleStore.$publicUIBundles.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>.Publisher);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__publicUIBundles;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return MOAngelControllerWrapper.$isVisible.modify;
}

uint64_t key path getter for MOEventBundleStore.isLoading : MOEventBundleStore@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 328))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for MOEventBundleStore.isLoading : MOEventBundleStore(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 336))(*a1);
}

uint64_t MOEventBundleStore.isLoading.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1001A2DB0);
  v2 = swift_getKeyPath(&unk_1001A2DD8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

uint64_t MOEventBundleStore.isLoading.setter(char a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  char v6;

  KeyPath = swift_getKeyPath(&unk_1001A2DB0);
  v4 = swift_getKeyPath(&unk_1001A2DD8);
  v6 = a1;
  swift_retain(v1);
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

uint64_t (*MOEventBundleStore.isLoading.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_1001A2DB0);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_1001A2DD8);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return MOAngelControllerWrapper.isVisible.modify;
}

uint64_t key path setter for MOEventBundleStore.$isLoading : MOEventBundleStore(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  __chkstk_darwin(v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 360))(v6);
}

uint64_t MOEventBundleStore.$isLoading.getter()
{
  return MOEventBundleStore.$allBundles.getter(&OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__isLoading, &demangling cache variable for type metadata for Published<Bool>);
}

uint64_t MOEventBundleStore.$allBundles.getter(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  _BYTE v6[24];

  swift_beginAccess(v2 + *a1, v6, 33, 0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(a2);
  Published.projectedValue.getter(v4);
  return swift_endAccess(v6);
}

uint64_t MOEventBundleStore.$isLoading.setter(uint64_t a1)
{
  return MOEventBundleStore.$allBundles.setter(a1, &demangling cache variable for type metadata for Published<Bool>.Publisher, &OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__isLoading, &demangling cache variable for type metadata for Published<Bool>);
}

uint64_t MOEventBundleStore.$allBundles.setter(uint64_t a1, uint64_t *a2, _QWORD *a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE v15[24];

  v8 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  swift_beginAccess(v4 + *a3, v15, 33, 0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(a4);
  Published.projectedValue.setter(v11, v12);
  swift_endAccess(v15);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
}

uint64_t (*MOEventBundleStore.$isLoading.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__isLoading;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return MOAngelControllerWrapper.$isVisible.modify;
}

uint64_t MOEventBundleStore.isFirstRefresh.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_isFirstRefresh);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_isFirstRefresh, v3, 0, 0);
  return *v1;
}

uint64_t MOEventBundleStore.isFirstRefresh.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_isFirstRefresh);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*MOEventBundleStore.isFirstRefresh.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_isFirstRefresh, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOEventBundleStore.isRunningSoftRefresh.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_isRunningSoftRefresh);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_isRunningSoftRefresh, v3, 0, 0);
  return *v1;
}

uint64_t MOEventBundleStore.isRunningSoftRefresh.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_isRunningSoftRefresh);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*MOEventBundleStore.isRunningSoftRefresh.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_isRunningSoftRefresh, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOEventBundleStore.isRunningDatabaseUpgrade.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_isRunningDatabaseUpgrade);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_isRunningDatabaseUpgrade, v3, 0, 0);
  return *v1;
}

double MOEventBundleStore.isRunningDatabaseUpgrade.setter(char a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  double result;
  int v11;
  _BYTE v12[24];

  v2 = v1;
  v4 = (_BYTE *)(v2 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_isRunningDatabaseUpgrade);
  swift_beginAccess(v2 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_isRunningDatabaseUpgrade, v12, 1, 0);
  *v4 = a1;
  if (serverManager._clientConnections != (NSMutableDictionary *)-1)
    swift_once(&serverManager._clientConnections, one-time initialization function for shared);
  v5 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v5, (uint64_t)static MOAngelLogger.shared);
  swift_retain(v2);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v9 = 67109120;
    v11 = *v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, v12, v9 + 4);
    swift_release(v2);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Performing DB Upgrade state update: %{BOOL}d", v9, 8u);
    swift_slowDealloc(v9, -1, -1);

  }
  else
  {

    *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  }
  return result;
}

void (*MOEventBundleStore.isRunningDatabaseUpgrade.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_isRunningDatabaseUpgrade;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return MOEventBundleStore.isRunningDatabaseUpgrade.modify;
}

void MOEventBundleStore.isRunningDatabaseUpgrade.modify(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1)
      swift_once(&serverManager._clientConnections, one-time initialization function for shared);
    v4 = v3[3];
    v5 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v5, (uint64_t)static MOAngelLogger.shared);
    swift_retain(v4);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = v3[3];
      v10 = v3[4];
      v11 = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v11 = 67109120;
      *(_DWORD *)v3 = *(unsigned __int8 *)(v9 + v10);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v3, (char *)v3 + 4, v11 + 4);
      swift_release(v9);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Performing DB Upgrade state update: %{BOOL}d", v11, 8u);
      swift_slowDealloc(v11, -1, -1);
    }
    else
    {
      swift_release(v3[3]);
    }

  }
  free(v3);
}

uint64_t MOEventBundleStore.latestRawBundles.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter(&OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_latestRawBundles);
}

uint64_t MOEventBundleStore.latestRawBundles.setter(uint64_t a1)
{
  return MOSuggestionAssetMapsClusterer.skipRows.setter(a1, &OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_latestRawBundles);
}

uint64_t (*MOEventBundleStore.latestRawBundles.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_latestRawBundles, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOEventBundleStore.sourceThirdPartyBundleIds.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter(&OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_sourceThirdPartyBundleIds);
}

uint64_t MOEventBundleStore.sourceThirdPartyBundleIds.setter(uint64_t a1)
{
  return MOSuggestionAssetMapsClusterer.skipRows.setter(a1, &OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_sourceThirdPartyBundleIds);
}

uint64_t (*MOEventBundleStore.sourceThirdPartyBundleIds.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_sourceThirdPartyBundleIds, a1, 33, 0);
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

uint64_t MOEventBundleStore.failedResources.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter(&OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_failedResources);
}

uint64_t MOEventBundleStore.failedResources.setter(uint64_t a1)
{
  return MOSuggestionAssetMapsClusterer.skipRows.setter(a1, &OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_failedResources);
}

uint64_t (*MOEventBundleStore.failedResources.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_failedResources, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOEventBundleStore.pendingHandlers.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter(&OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_pendingHandlers);
}

uint64_t MOEventBundleStore.pendingHandlers.setter(uint64_t a1)
{
  return MOSuggestionAssetMapsClusterer.skipRows.setter(a1, &OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_pendingHandlers);
}

uint64_t (*MOEventBundleStore.pendingHandlers.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_pendingHandlers, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOEventBundleStore.ResourceValidationResult.shouldForceDropBundle.getter(uint64_t a1, char a2)
{
  return a2 & 1;
}

uint64_t MOEventBundleStore.ResourceValidationResult.thirdPartyBundleIds.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_bridgeObjectRetain(a3);
}

uint64_t MOEventBundleStore.ResourceValidationResult.thirdPartyBundleIds.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 16));
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t MOEventBundleStore.serviceFetchHandlers()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t i;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  void (*v27)(_QWORD **, uint64_t *);
  uint64_t v28;
  _QWORD *v29;

  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 520))();
  result = (*(uint64_t (**)(_QWORD *))(*(_QWORD *)v0 + 528))(_swiftEmptyArrayStorage);
  v26 = *(_QWORD *)(v1 + 16);
  if (!v26)
    return swift_bridgeObjectRelease(v1);
  v3 = 0;
  v22 = v1;
  v23 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v0 + 472);
  v24 = v1 + 32;
  v25 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v0 + 448);
  while (v3 < *(_QWORD *)(v1 + 16))
  {
    v8 = (_QWORD *)(v24 + 32 * v3);
    v9 = v8[3];
    v27 = (void (*)(_QWORD **, uint64_t *))v8[2];
    v10 = v8[1];
    v11 = *(unsigned __int8 *)v8;
    v12 = swift_retain(v9);
    v5 = v25(v12);
    v6 = v5;
    if (v11 != 1 || (v10 & 1) != 0)
      goto LABEL_5;
    v29 = _swiftEmptyArrayStorage;
    if ((unint64_t)v5 >> 62)
    {
      if (v5 < 0)
        v21 = v5;
      else
        v21 = v5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v5);
      result = _CocoaArrayWrapper.endIndex.getter(v21);
      v14 = result;
      if (result)
      {
LABEL_14:
        if (v14 < 1)
          goto LABEL_30;
        for (i = 0; i != v14; ++i)
        {
          if ((v6 & 0xC000000000000001) != 0)
            v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v6);
          else
            v18 = *(id *)(v6 + 8 * i + 32);
          v19 = v18;
          v20 = objc_msgSend(v18, "interfaceType");
          if (v20 == (id)11)
          {

          }
          else
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v20);
            v16 = v29[2];
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v16);
            v17 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v19);
            specialized ContiguousArray._endMutation()(v17);
          }
        }
        swift_bridgeObjectRelease(v6);
        v4 = v29;
        goto LABEL_4;
      }
    }
    else
    {
      v14 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain(v5);
      if (v14)
        goto LABEL_14;
    }
    swift_bridgeObjectRelease(v6);
    v4 = _swiftEmptyArrayStorage;
LABEL_4:
    v5 = swift_bridgeObjectRelease(v6);
    v6 = (uint64_t)v4;
LABEL_5:
    v1 = v22;
    ++v3;
    v7 = v23(v5);
    v28 = v7;
    v29 = (_QWORD *)v6;
    v27(&v29, &v28);
    swift_release(v9);
    swift_bridgeObjectRelease(v6);
    result = swift_bridgeObjectRelease(v7);
    if (v3 == v26)
      return swift_bridgeObjectRelease(v1);
  }
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

_QWORD *static MOEventBundleStore.bundlesSubset(presentationDetails:bundles:)(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;

  v3 = a3;
  if ((a1 & 1) == 0 || (a2 & 1) != 0)
  {
    swift_bridgeObjectRetain(a3);
    return (_QWORD *)v3;
  }
  if (!((unint64_t)a3 >> 62))
  {
    v4 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (_QWORD *)swift_bridgeObjectRetain(a3);
    if (v4)
      goto LABEL_5;
LABEL_21:
    swift_bridgeObjectRelease(v3);
    return _swiftEmptyArrayStorage;
  }
  if (a3 < 0)
    v12 = a3;
  else
    v12 = a3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a3);
  result = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v12);
  v4 = (uint64_t)result;
  if (!result)
    goto LABEL_21;
LABEL_5:
  if (v4 >= 1)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
      else
        v9 = *(id *)(v3 + 8 * i + 32);
      v10 = v9;
      v11 = objc_msgSend(v9, "interfaceType");
      if (v11 == (id)11)
      {

      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v11);
        v7 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v7);
        v8 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v10);
        specialized ContiguousArray._endMutation()(v8);
      }
    }
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

double MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  void **aBlock;
  uint64_t v50;
  uint64_t (*v51)(uint64_t);
  void *v52;
  void *v53;
  uint64_t v54;

  v8 = v7;
  v43 = a4;
  v44 = a5;
  v46 = a3;
  v13 = type metadata accessor for DispatchWorkItemFlags(0);
  v45 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for DispatchQoS(0);
  v16 = *(_QWORD *)(v47 - 8);
  v17 = __chkstk_darwin(v47);
  v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 328))(v17) & 1) != 0)
  {
    v42 = a2;
    v43 = a7;
    v44 = v16;
    if (serverManager._clientConnections != (NSMutableDictionary *)-1)
      swift_once(&serverManager._clientConnections, one-time initialization function for shared);
    v20 = type metadata accessor for Logger(0);
    v21 = __swift_project_value_buffer(v20, (uint64_t)static MOAngelLogger.shared);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "A loading process is already in progress: queued", v24, 2u);
      swift_slowDealloc(v24, -1, -1);
    }

    v25 = swift_allocObject(&unk_1001EB108, 56, 7);
    *(_QWORD *)(v25 + 16) = v8;
    *(_BYTE *)(v25 + 24) = a1 & 1;
    v26 = v43;
    *(_QWORD *)(v25 + 32) = v42;
    *(_QWORD *)(v25 + 40) = a6;
    *(_QWORD *)(v25 + 48) = v26;
    v53 = partial apply for closure #1 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:);
    v54 = v25;
    aBlock = _NSConcreteStackBlock;
    v50 = 1107296256;
    v51 = thunk for @escaping @callee_guaranteed () -> ();
    v52 = &block_descriptor_26;
    v27 = _Block_copy(&aBlock);
    swift_retain(v8);
    swift_retain(v26);
    static DispatchQoS.unspecified.getter(v28);
    v48 = _swiftEmptyArrayStorage;
    v29 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    v31 = lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v48, v30, v31, v13, v29);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v19, v15, v27);
    _Block_release(v27);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v15, v13);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v19, v47);
  }
  else
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v7 + 336))(1);
    (*(void (**)(_QWORD *))(*(_QWORD *)v7 + 192))(_swiftEmptyArrayStorage);
    v32 = swift_allocObject(&unk_1001EB0B8, 72, 7);
    *(_QWORD *)(v32 + 16) = v7;
    *(_BYTE *)(v32 + 24) = a1 & 1;
    *(_QWORD *)(v32 + 32) = a2;
    *(_QWORD *)(v32 + 40) = a6;
    v34 = v43;
    v33 = v44;
    *(_QWORD *)(v32 + 48) = a7;
    *(_QWORD *)(v32 + 56) = v34;
    *(_QWORD *)(v32 + 64) = v33;
    v53 = partial apply for closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:);
    v54 = v32;
    aBlock = _NSConcreteStackBlock;
    v50 = 1107296256;
    v51 = thunk for @escaping @callee_guaranteed () -> ();
    v52 = &block_descriptor_29;
    v35 = _Block_copy(&aBlock);
    swift_retain(v8);
    swift_retain(a7);
    v36 = outlined copy of (@escaping @callee_guaranteed () -> ())?(v34, v33);
    static DispatchQoS.unspecified.getter(v36);
    v48 = _swiftEmptyArrayStorage;
    v37 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    v39 = lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v48, v38, v39, v13, v37);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v19, v15, v35);
    _Block_release(v35);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v15, v13);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v47);
  }
  *(_QWORD *)&result = swift_release(v54).n128_u64[0];
  return result;
}

uint64_t closure #1 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, __n128);
  __n128 v12;
  uint64_t (*v13)(_BYTE *, _QWORD);
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  _BYTE v23[32];

  v10 = swift_allocObject(&unk_1001EB5F0, 32, 7);
  *(_QWORD *)(v10 + 16) = a4;
  *(_QWORD *)(v10 + 24) = a5;
  v11 = *(uint64_t (**)(_BYTE *, __n128))(*(_QWORD *)a1 + 536);
  v12 = swift_retain(a5);
  v13 = (uint64_t (*)(_BYTE *, _QWORD))v11(v23, v12);
  v15 = v14;
  v16 = (_QWORD *)*v14;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v14);
  *v15 = v16;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v16 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v16[2] + 1, 1, v16);
    *v15 = v16;
  }
  v19 = v16[2];
  v18 = v16[3];
  if (v19 >= v18 >> 1)
  {
    v16 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((_QWORD *)(v18 > 1), v19 + 1, 1, v16);
    *v15 = v16;
  }
  v16[2] = v19 + 1;
  v20 = &v16[4 * v19];
  *((_BYTE *)v20 + 32) = a2 & 1;
  v20[5] = a3;
  v20[6] = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed [MOEventBundle], @guaranteed Set<String>?) -> ();
  v20[7] = v10;
  v21 = v13(v23, 0);
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 328))(v21);
  if ((result & 1) == 0)
    return MOEventBundleStore.serviceFetchHandlers()();
  return result;
}

double closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t (*v13)(_QWORD *, __n128);
  __n128 v14;
  void (*v15)(_QWORD *, _QWORD);
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  char v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  double result;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  _QWORD aBlock[5];
  uint64_t v46;

  v12 = swift_allocObject(&unk_1001EB618, 32, 7);
  v42 = a4;
  *(_QWORD *)(v12 + 16) = a4;
  *(_QWORD *)(v12 + 24) = a5;
  v13 = *(uint64_t (**)(_QWORD *, __n128))(*(_QWORD *)a1 + 536);
  v14 = swift_retain(a5);
  v15 = (void (*)(_QWORD *, _QWORD))v13(aBlock, v14);
  v17 = v16;
  v18 = (_QWORD *)*v16;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v16);
  *v17 = v18;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v18 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v18[2] + 1, 1, v18);
    *v17 = v18;
  }
  v21 = v18[2];
  v20 = v18[3];
  if (v21 >= v20 >> 1)
  {
    v18 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((_QWORD *)(v20 > 1), v21 + 1, 1, v18);
    *v17 = v18;
  }
  v18[2] = v21 + 1;
  v22 = &v18[4 * v21];
  v23 = a2 & 1;
  *((_BYTE *)v22 + 32) = v23;
  v22[5] = a3;
  v22[6] = thunk for @escaping @callee_guaranteed (@guaranteed [MOEventBundle], @guaranteed Set<String>?) -> ()partial apply;
  v22[7] = v12;
  v15(aBlock, 0);
  v24 = objc_msgSend((id)objc_opt_self(MOOnboardingManager), "sharedInstance");
  v25 = objc_msgSend(v24, "onboardingFlowCompletionStatus");

  if ((unint64_t)v25 >= 2 && ((*(uint64_t (**)(void))(*(_QWORD *)a1 + 376))() & 1) != 0)
  {
    (*(void (**)(_QWORD))(*(_QWORD *)a1 + 384))(0);
    if (serverManager._clientConnections != (NSMutableDictionary *)-1)
      swift_once(&serverManager._clientConnections, one-time initialization function for shared);
    v26 = type metadata accessor for Logger(0);
    v27 = __swift_project_value_buffer(v26, (uint64_t)static MOAngelLogger.shared);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "[MOEventBundleStore] calling scheduleDatabaseUpgrade", v30, 2u);
      swift_slowDealloc(v30, -1, -1);
    }

    v31 = swift_allocObject(&unk_1001EB640, 72, 7);
    *(_QWORD *)(v31 + 16) = a1;
    *(_QWORD *)(v31 + 24) = a6;
    *(_QWORD *)(v31 + 32) = a7;
    *(_BYTE *)(v31 + 40) = v23;
    *(_QWORD *)(v31 + 48) = a3;
    *(_QWORD *)(v31 + 56) = v42;
    *(_QWORD *)(v31 + 64) = a5;
    v32 = *(void **)(a1 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_promptManager);
    v33 = swift_allocObject(&unk_1001EB668, 32, 7);
    *(_QWORD *)(v33 + 16) = partial apply for closure #1 in closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:);
    *(_QWORD *)(v33 + 24) = v31;
    aBlock[4] = partial apply for closure #2 in closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:);
    v46 = v33;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned Bool, @guaranteed Error?) -> ();
    aBlock[3] = &block_descriptor_127;
    v34 = _Block_copy(aBlock);
    v35 = v46;
    swift_retain(a5);
    swift_retain(a1);
    outlined copy of (@escaping @callee_guaranteed () -> ())?(a6, a7);
    swift_retain(v31);
    objc_msgSend(v32, "scheduleDatabaseUpgradeWithHandler:", v34, swift_release(v35).n128_f64[0]);
    _Block_release(v34);
    *(_QWORD *)&result = swift_release(v31).n128_u64[0];
  }
  else if (((*(uint64_t (**)(void))(*(_QWORD *)a1 + 400))() & 1) != 0
         || ((*(uint64_t (**)(void))(*(_QWORD *)a1 + 424))() & 1) != 0)
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1)
      swift_once(&serverManager._clientConnections, one-time initialization function for shared);
    v37 = type metadata accessor for Logger(0);
    v38 = __swift_project_value_buffer(v37, (uint64_t)static MOAngelLogger.shared);
    v39 = Logger.logObject.getter(v38);
    v40 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v41 = 0;
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "[MOEventBundleStore] softRefreshEvents still running, skipping _fetchAvailableBundles", v41, 2u);
      swift_slowDealloc(v41, -1, -1);
    }

    (*(void (**)(_QWORD))(*(_QWORD *)a1 + 336))(0);
    MOEventBundleStore.serviceFetchHandlers()();
  }
  else
  {
    return specialized MOEventBundleStore._fetchAvailableBundles(presentationDetails:completionHandler:)();
  }
  return result;
}

void closure #1 in closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:)(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  int v12;
  char v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  void *v18;
  _QWORD *v19;
  void *v20;
  _QWORD *v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  __n128 v25;
  __n128 v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  __n128 v30;
  _QWORD v31[5];
  _QWORD *v32;

  if (serverManager._clientConnections != (NSMutableDictionary *)-1)
    swift_once(&serverManager._clientConnections, one-time initialization function for shared);
  v6 = type metadata accessor for Logger(0);
  v7 = __swift_project_value_buffer(v6, (uint64_t)static MOAngelLogger.shared);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "[MOEventBundleStore] returning from scheduleDatabaseUpgrade", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  switch(a1)
  {
    case 0:
    case 1:
    case 4:
      v11 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)a2 + 432))(0);
      v12 = 1;
      if (!a3)
        goto LABEL_8;
      goto LABEL_7;
    case 2:
      v22 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 432))(1);
      if (a3)
      {
        v23 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 424))(v22);
        a3(v23 & 1);
      }
      break;
    case 3:
      v11 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)a2 + 432))(0);
      v12 = 0;
      if (a3)
      {
LABEL_7:
        v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 424))(v11);
        a3(v13 & 1);
      }
LABEL_8:
      if (v12)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)a2 + 408))(1);
        specialized MOEventBundleStore._fetchAvailableBundles(presentationDetails:completionHandler:)();
        v15 = Logger.logObject.getter(v14);
        v16 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v15, v16))
        {
          v17 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v17 = 0;
          _os_log_impl((void *)&_mh_execute_header, v15, v16, "[MOEventBundleStore] calling softRefreshEvents", v17, 2u);
          swift_slowDealloc(v17, -1, -1);
        }

        v18 = *(void **)(a2 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_promptManager);
        v19 = (_QWORD *)swift_allocObject(&unk_1001EB6B8, 40, 7);
        v19[2] = a2;
        v19[3] = partial apply for closure #1 in closure #1 in closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:);
        v19[4] = a2;
        v31[4] = partial apply for closure #2 in closure #1 in closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:);
        v32 = v19;
        v31[0] = _NSConcreteStackBlock;
        v31[1] = 1107296256;
        v31[2] = thunk for @escaping @callee_guaranteed (@guaranteed CGImageRef?) -> ();
        v31[3] = &block_descriptor_133;
        v20 = _Block_copy(v31);
        v21 = v32;
        swift_retain_n(a2);
        objc_msgSend(v18, "softRefreshEventsWithRefreshVariant:andHandler:", 512, v20, swift_release(v21).n128_f64[0]);
        _Block_release(v20);
        swift_release(a2);
      }
      else
      {
        specialized MOEventBundleStore._fetchAvailableBundles(presentationDetails:completionHandler:)();
      }
      break;
    default:
      type metadata accessor for MODatabaseUpgradeStatus(0);
      v31[0] = a1;
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v24, v31, v24, &type metadata for UInt, v25, v26, v27, v28, v29, v30);
      __break(1u);
      break;
  }
}

uint64_t closure #1 in closure #1 in closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  if (serverManager._clientConnections != (NSMutableDictionary *)-1)
    swift_once(&serverManager._clientConnections, one-time initialization function for shared);
  v2 = type metadata accessor for Logger(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)static MOAngelLogger.shared);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "[MOEventBundleStore] returning from softRefreshEvents", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)a1 + 408))(0);
}

void closure #2 in closure #1 in closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:)(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  _QWORD v16[5];
  uint64_t v17;

  if (a1)
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1)
      swift_once(&serverManager._clientConnections, one-time initialization function for shared);
    v7 = type metadata accessor for Logger(0);
    v8 = __swift_project_value_buffer(v7, (uint64_t)static MOAngelLogger.shared);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "[MOEventBundleStore] softRefresh failed, retrying...", v11, 2u);
      swift_slowDealloc(v11, -1, -1);
    }

    v12 = *(void **)(a2 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_promptManager);
    v13 = swift_allocObject(&unk_1001EB708, 32, 7);
    *(_QWORD *)(v13 + 16) = a3;
    *(_QWORD *)(v13 + 24) = a4;
    v16[4] = partial apply for thunk for @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> ();
    v17 = v13;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 1107296256;
    v16[2] = thunk for @escaping @callee_guaranteed (@guaranteed CGImageRef?) -> ();
    v16[3] = &block_descriptor_139;
    v14 = _Block_copy(v16);
    v15 = v17;
    swift_retain(a4);
    objc_msgSend(v12, "softRefreshEventsWithRefreshVariant:andHandler:", 512, v14, swift_release(v15).n128_f64[0]);
    _Block_release(v14);
  }
  else
  {
    a3();
  }
}

uint64_t closure #2 in closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;

  if (a2)
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1)
      swift_once(&serverManager._clientConnections, one-time initialization function for shared);
    v5 = type metadata accessor for Logger(0);
    v6 = __swift_project_value_buffer(v5, (uint64_t)static MOAngelLogger.shared);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "[MOEventBundleStore] scheduleDatabaseUpgrade failed...", v9, 2u);
      swift_slowDealloc(v9, -1, -1);
    }

  }
  return a3(a1);
}

double closure #1 in MOEventBundleStore._fetchAvailableBundles(presentationDetails:completionHandler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  unint64_t v24;
  id v25;
  void *v26;
  id v28;
  void *v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  id v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  NSObject *v63;
  int v64;
  BOOL v65;
  os_log_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  double v71;
  id v72;
  id v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  const char *v87;
  uint8_t *v88;
  uint32_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  double v94;
  BOOL v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  BOOL v100;
  int v101;
  int v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  NSObject *v106;
  os_log_type_t v107;
  int v108;
  uint64_t v109;
  id v110;
  id v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  os_log_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  unint64_t v132;
  int64_t v133;
  unint64_t v134;
  int64_t v135;
  uint64_t v136;
  uint64_t v137;
  id v138;
  NSObject *v139;
  os_log_type_t v140;
  uint64_t v141;
  id v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  unint64_t v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  id v154;
  void *v155;
  double v156;
  id v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  id v161;
  unint64_t v162;
  unint64_t v163;
  uint64_t v164;
  id v165;
  NSObject *v166;
  os_log_type_t v167;
  uint8_t *v168;
  uint64_t v169;
  id v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  unint64_t v176;
  char *v177;
  os_log_type_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  void (*v184)(__n128);
  __n128 v185;
  uint64_t v186;
  NSObject *v187;
  os_log_type_t v188;
  uint8_t *v189;
  uint64_t v190;
  NSObject *v191;
  os_log_type_t v192;
  uint8_t *v193;
  __n128 v194;
  char *v195;
  char *v196;
  __n128 v197;
  __n128 v198;
  __n128 v199;
  int v200;
  void (*v201)(_QWORD);
  id v202;
  char *v203;
  id v204;
  uint64_t v205;
  uint64_t v206;
  unint64_t v207;
  uint64_t v208;
  uint64_t v209;
  unint64_t v210;
  unint64_t v211;
  void *v212;
  __n128 v213;
  uint64_t v214;
  unint64_t v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  id v222;
  uint64_t v223;
  int64_t v224;
  uint64_t v225;
  uint64_t v226;
  os_log_t v227;
  uint64_t v228;
  uint64_t v229;
  _QWORD v230[2];
  uint64_t v231;
  char v232[8];
  __int128 v233;
  __int128 v234;
  char v235[8];
  uint64_t v236;
  char v237[8];

  v208 = a1;
  v220 = type metadata accessor for UUID(0);
  v219 = *(_QWORD *)(v220 - 8);
  __chkstk_darwin(v220);
  v218 = (char *)&v194 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v237, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (!Strong)
    return result;
  v6 = (id)Strong;
  if (serverManager._clientConnections != (NSMutableDictionary *)-1)
    goto LABEL_160;
LABEL_3:
  v7 = type metadata accessor for Logger(0);
  v8 = __swift_project_value_buffer(v7, (uint64_t)static MOAngelLogger.shared);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "[MOEventBundleStore] returning from fetchEventBundles", v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }

  v201 = *(void (**)(_QWORD))(*(_QWORD *)v6 + 336);
  v201(0);
  v12 = v208;
  if (v208)
  {
    v13 = (unint64_t)v208 >> 62;
    if ((unint64_t)v208 >> 62)
    {
      if (v208 < 0)
        v190 = v208;
      else
        v190 = v208 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v208);
      v15 = _CocoaArrayWrapper.endIndex.getter(v190);
      if (!v15)
      {
LABEL_165:
        swift_bridgeObjectRelease(v208);
        goto LABEL_166;
      }
    }
    else
    {
      v14 = *(_QWORD *)((v208 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v208);
      v15 = v14;
      if (!v14)
        goto LABEL_165;
    }
    v209 = v15;
    v16 = v208;
    v17 = swift_bridgeObjectRetain_n(v208, 2);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v20 = 134217984;
      if (v13)
      {
        v16 = v208;
        if (v208 < 0)
          v22 = v208;
        else
          v22 = v208 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v208);
        v21 = _CocoaArrayWrapper.endIndex.getter(v22);
        swift_bridgeObjectRelease(v16);
      }
      else
      {
        v16 = v208;
        v21 = *(_QWORD *)((v208 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease(v16);
      v231 = v21;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v231, v232, v20 + 4);
      swift_bridgeObjectRelease(v16);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "[MOEventBundleStore] bundles received from fetch: count=%ld", v20, 0xCu);
      swift_slowDealloc(v20, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v16, 2);
    }
    v236 = (uint64_t)_swiftEmptyArrayStorage;
    v210 = v16 & 0xC000000000000001;
    v23 = swift_beginAccess(&v236, v235, 0, 0);
    v200 = 0;
    v24 = 0;
    v206 = v16 & 0xFFFFFFFFFFFFFF8;
    v205 = v16 + 32;
    v203 = (char *)&v233 + 8;
    v195 = (char *)&v233 + 4;
    v23.n128_u64[0] = 134217984;
    v199 = v23;
    v23.n128_u64[0] = 136315138;
    v198 = v23;
    v196 = (char *)&type metadata for Any + 8;
    v23.n128_u64[0] = 134218754;
    v197 = v23;
    v23.n128_u64[0] = 134218242;
    v213 = v23;
    v23.n128_u64[0] = 136316418;
    v194 = v23;
    v207 = 0x80000001001AA940;
    v217 = v8;
    v202 = v6;
    while (1)
    {
      if (v210)
      {
        v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v24, v208);
      }
      else
      {
        if (v24 >= *(_QWORD *)(v206 + 16))
          goto LABEL_159;
        v25 = *(id *)(v205 + 8 * v24);
      }
      v26 = v25;
      if (__OFADD__(v24++, 1))
        goto LABEL_157;
      v28 = objc_msgSend(v25, "rankingDictionary");
      if (!v28)
        break;
      v29 = v28;
      v30 = v24;
      v31 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v28, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      v230[0] = 0xD000000000000017;
      v230[1] = v207;
      AnyHashable.init<A>(_:)(&v231, v230, &type metadata for String, &protocol witness table for String);
      if (*(_QWORD *)(v31 + 16)
        && (v32 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&v231), (v33 & 1) != 0))
      {
        outlined init with copy of Any(*(_QWORD *)(v31 + 56) + 32 * v32, (uint64_t)&v233);
      }
      else
      {
        v233 = 0u;
        v234 = 0u;
      }
      outlined destroy of AnyHashable((uint64_t)&v231);
      swift_bridgeObjectRelease(v31);
      v24 = v30;
      if (!*((_QWORD *)&v234 + 1))
        goto LABEL_36;
      if (swift_dynamicCast(&v231, &v233, (char *)&type metadata for Any + 8, &type metadata for UInt, 6)&& v231 == 4)
      {
        v34 = v26;
        v35 = Logger.logObject.getter(v34);
        v36 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v35, v36))
        {
          v37 = swift_slowAlloc(12, -1);
          v229 = swift_slowAlloc(32, -1);
          v231 = v229;
          *(_DWORD *)v37 = v198.n128_u32[0];
          v38 = objc_msgSend(v34, "bundleIdentifier");
          v39 = v218;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)(v38);

          v40 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
          v41 = v220;
          v42 = dispatch thunk of CustomStringConvertible.description.getter(v220, v40);
          v43 = v6;
          v45 = v44;
          (*(void (**)(char *, uint64_t))(v219 + 8))(v39, v41);
          *(_QWORD *)(v37 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v42, v45, &v231);

          v46 = v45;
          v6 = v43;
          swift_bridgeObjectRelease(v46);
          _os_log_impl((void *)&_mh_execute_header, v35, v36, "[MOEventBundleStore] Filtering out bundle due to rejected ranking category id=%s", (uint8_t *)v37, 0xCu);
          v47 = v229;
          swift_arrayDestroy(v229, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v47, -1, -1);
          swift_slowDealloc(v37, -1, -1);

        }
        else
        {

        }
        v24 = v30;
        goto LABEL_19;
      }
LABEL_37:
      v48 = objc_msgSend(v26, "resources", v194.n128_u64[0], v194.n128_u64[1]);
      if (v48)
      {
        v49 = v48;
        v211 = v24;
        v50 = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MOResource, MOResource_ptr);
        v51 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v49, v50);
        v52 = objc_msgSend(v26, "promptLanguages");
        if (v52
          && (v53 = v52,
              v54 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v52, &type metadata for String),
              v53,
              v55 = *(_QWORD *)(v54 + 16),
              v56 = swift_bridgeObjectRelease(v54),
              v55))
        {
          v57 = (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)v6 + 576))(v51, v56);
          v212 = v26;
          if (v57)
          {
            v60 = v57;
            v61 = v58;
            v229 = v59;
            v204 = v49;
            swift_bridgeObjectRetain_n(v51, 4);
            swift_bridgeObjectRetain_n(v60, 3);
            v62 = v26;
            v63 = Logger.logObject.getter(v62);
            v64 = static os_log_type_t.default.getter();
            v65 = os_log_type_enabled(v63, (os_log_type_t)v64);
            v66 = (os_log_t)((unint64_t)v51 >> 62);
            v221 = v60;
            v222 = v62;
            v227 = (os_log_t)((unint64_t)v51 >> 62);
            if (v65)
            {
              v67 = swift_slowAlloc(42, -1);
              v225 = swift_slowAlloc(32, -1);
              v231 = v225;
              *(_DWORD *)v67 = v197.n128_u32[0];
              v68 = *(_QWORD *)(v60 + 16);
              swift_bridgeObjectRelease(v60);
              *(_QWORD *)&v233 = v68;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v233, v203, v67 + 4);
              swift_bridgeObjectRelease(v60);
              *(_WORD *)(v67 + 12) = 2048;
              v228 = v61;
              LODWORD(v226) = v64;
              if (v66)
              {
                if (v51 < 0)
                  v183 = v51;
                else
                  v183 = v51 & 0xFFFFFFFFFFFFFF8;
                swift_bridgeObjectRetain(v51);
                v69 = _CocoaArrayWrapper.endIndex.getter(v183);
                swift_bridgeObjectRelease(v51);
              }
              else
              {
                v69 = *(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10);
              }
              swift_bridgeObjectRelease(v51);
              *(_QWORD *)&v233 = v69;
              v61 = (uint64_t)v203;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v233, v203, v67 + 14);
              swift_bridgeObjectRelease(v51);
              *(_WORD *)(v67 + 22) = 2048;
              swift_bridgeObjectRelease(v51);
              if (v69 >= 0)
                v70 = v69;
              else
                v70 = v69 + 1;
              *(_QWORD *)&v233 = v70 >> 1;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v233, v61, v67 + 24);
              *(_QWORD *)&v71 = swift_bridgeObjectRelease(v51).n128_u64[0];
              *(_WORD *)(v67 + 32) = 2080;
              v72 = v222;
              v73 = objc_msgSend(v222, "bundleIdentifier", v71);
              v74 = v218;
              static UUID._unconditionallyBridgeFromObjectiveC(_:)(v73);

              v75 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
              v76 = v220;
              v77 = dispatch thunk of CustomStringConvertible.description.getter(v220, v75);
              v79 = v78;
              (*(void (**)(char *, uint64_t))(v219 + 8))(v74, v76);
              *(_QWORD *)&v233 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v77, v79, &v231);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v233, v61, v67 + 34);

              swift_bridgeObjectRelease(v79);
              _os_log_impl((void *)&_mh_execute_header, v63, (os_log_type_t)v226, "[MOEventBundleStore.failedResources] failed resource count=%ld, totalCount=%ld, threshold=%ld, bundleId: %s", (uint8_t *)v67, 0x2Au);
              v80 = v225;
              swift_arrayDestroy(v225, 1, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v80, -1, -1);
              swift_slowDealloc(v67, -1, -1);

              v26 = v212;
              v60 = v221;
              v66 = v227;
              LOBYTE(v61) = v228;
            }
            else
            {

              swift_bridgeObjectRelease_n(v60, 2);
              swift_bridgeObjectRelease_n(v51, 4);
            }
            v91 = *(_QWORD *)(v60 + 16);
            if (v66)
            {
              if (v51 < 0)
                v181 = v51;
              else
                v181 = v51 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(v51);
              v92 = _CocoaArrayWrapper.endIndex.getter(v181);
              swift_bridgeObjectRelease(v60);
              v93 = v51;
            }
            else
            {
              v92 = *(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10);
              v93 = v60;
            }
            swift_bridgeObjectRelease(v93);
            *(_QWORD *)&v94 = swift_bridgeObjectRelease(v229).n128_u64[0];
            if (*(_QWORD *)(v60 + 16))
              v95 = v92 < 4;
            else
              v95 = 0;
            v96 = v95;
            if (objc_msgSend(v222, "interfaceType", v94) == (id)11
              || ((v97 = v61 & 1, v92 >= 0) ? (v98 = v92) : (v98 = v92 + 1),
                  (v99 = v98 >> 1, v92 > 3) ? (v100 = v91 < v99) : (v100 = 1),
                  v100 ? (v101 = 0) : (v101 = 1),
                  v97 ? (v102 = 1) : (v102 = v101),
                  (v102 | v96) != 1))
            {
              v125 = 0;
              v126 = v221;
              v127 = *(_QWORD *)(v221 + 56);
              v223 = v221 + 56;
              v128 = 1 << *(_BYTE *)(v221 + 32);
              if (v128 < 64)
                v129 = ~(-1 << v128);
              else
                v129 = -1;
              v130 = v129 & v127;
              v224 = (unint64_t)(v128 + 63) >> 6;
              v131 = v51 & 0xFFFFFFFFFFFFFF8;
              v226 = v51 & 0xFFFFFFFFFFFFFF8;
              if (v51 < 0)
                v131 = v51;
              v216 = v131;
              v215 = v51 & 0xC000000000000001;
              v214 = v51 + 32;
              v6 = v222;
              while (1)
              {
                if (v130)
                {
                  v228 = (v130 - 1) & v130;
                  v229 = v125;
                  v132 = __clz(__rbit64(v130)) | (v125 << 6);
                }
                else
                {
                  v133 = v125 + 1;
                  if (__OFADD__(v125, 1))
                    goto LABEL_156;
                  v26 = v212;
                  if (v133 >= v224)
                  {
LABEL_111:
                    swift_release(v126);
                    *(_QWORD *)&v156 = swift_bridgeObjectRelease(v51).n128_u64[0];
                    v157 = v204;
                    objc_msgSend(v6, "setResources:", v204, v156);

                    v90 = 1;
                    v6 = v202;
                    goto LABEL_116;
                  }
                  v134 = *(_QWORD *)(v223 + 8 * v133);
                  v135 = v125 + 1;
                  if (!v134)
                  {
                    v135 = v125 + 2;
                    if (v125 + 2 >= v224)
                      goto LABEL_111;
                    v134 = *(_QWORD *)(v223 + 8 * v135);
                    if (!v134)
                    {
                      v135 = v125 + 3;
                      if (v125 + 3 >= v224)
                        goto LABEL_111;
                      v134 = *(_QWORD *)(v223 + 8 * v135);
                      if (!v134)
                      {
                        v136 = v125 + 4;
                        if (v125 + 4 >= v224)
                          goto LABEL_111;
                        v134 = *(_QWORD *)(v223 + 8 * v136);
                        if (!v134)
                        {
                          while (1)
                          {
                            v135 = v136 + 1;
                            if (__OFADD__(v136, 1))
                              goto LABEL_158;
                            if (v135 >= v224)
                              goto LABEL_111;
                            v134 = *(_QWORD *)(v223 + 8 * v135);
                            ++v136;
                            if (v134)
                              goto LABEL_97;
                          }
                        }
                        v135 = v125 + 4;
                      }
                    }
                  }
LABEL_97:
                  v228 = (v134 - 1) & v134;
                  v229 = v135;
                  v132 = __clz(__rbit64(v134)) + (v135 << 6);
                }
                v137 = *(_QWORD *)(*(_QWORD *)(v126 + 48) + 8 * v132);
                v138 = v6;
                v139 = Logger.logObject.getter(v138);
                v140 = static os_log_type_t.default.getter();
                if (os_log_type_enabled(v139, v140))
                {
                  v141 = swift_slowAlloc(22, -1);
                  v225 = swift_slowAlloc(32, -1);
                  v231 = v225;
                  *(_DWORD *)v141 = v213.n128_u32[0];
                  *(_QWORD *)(v141 + 4) = v137;
                  *(_WORD *)(v141 + 12) = 2080;
                  v142 = objc_msgSend(v138, "bundleIdentifier");
                  v143 = v218;
                  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v142);

                  v144 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
                  v145 = v51;
                  v146 = v220;
                  v147 = dispatch thunk of CustomStringConvertible.description.getter(v220, v144);
                  v149 = v148;
                  v150 = v146;
                  v51 = v145;
                  v126 = v221;
                  (*(void (**)(char *, uint64_t))(v219 + 8))(v143, v150);
                  *(_QWORD *)(v141 + 14) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v147, v149, &v231);

                  v151 = v149;
                  v6 = v222;
                  swift_bridgeObjectRelease(v151);
                  _os_log_impl((void *)&_mh_execute_header, v139, v140, "[MOEventBundleStore.failedResources] hiding resource at index=%ld, bundleId: %s", (uint8_t *)v141, 0x16u);
                  v152 = v225;
                  swift_arrayDestroy(v225, 1, (char *)&type metadata for Any + 8);
                  swift_slowDealloc(v152, -1, -1);
                  swift_slowDealloc(v141, -1, -1);

                }
                else
                {

                }
                v130 = v228;
                v125 = v229;
                if (v227)
                {
                  swift_bridgeObjectRetain(v51);
                  v153 = _CocoaArrayWrapper.endIndex.getter(v216);
                  swift_bridgeObjectRelease(v51);
                  if (v153 < 0)
                  {
                    __break(1u);
LABEL_155:
                    __break(1u);
LABEL_156:
                    __break(1u);
LABEL_157:
                    __break(1u);
LABEL_158:
                    __break(1u);
LABEL_159:
                    __break(1u);
LABEL_160:
                    swift_once(&serverManager._clientConnections, one-time initialization function for shared);
                    goto LABEL_3;
                  }
                }
                else
                {
                  v153 = *(_QWORD *)(v226 + 16);
                }
                if ((v137 & 0x8000000000000000) == 0 && v137 < v153)
                {
                  if (v215)
                  {
                    v154 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v137, v51);
                  }
                  else
                  {
                    if ((unint64_t)v137 >= *(_QWORD *)(v226 + 16))
                      goto LABEL_155;
                    v154 = *(id *)(v214 + 8 * v137);
                  }
                  v155 = v154;
                  objc_msgSend(v154, "setPriorityScore:", 20000.0);

                }
              }
            }

            v103 = v222;
            swift_bridgeObjectRetain(v51);
            v104 = v221;
            swift_bridgeObjectRetain(v221);
            v106 = Logger.logObject.getter(v105);
            v107 = static os_log_type_t.default.getter();
            v108 = v107;
            if (os_log_type_enabled(v106, v107))
            {
              v109 = swift_slowAlloc(50, -1);
              v229 = swift_slowAlloc(32, -1);
              v231 = v229;
              *(_DWORD *)v109 = v194.n128_u32[0];
              v224 = v109 + 4;
              v110 = objc_msgSend(v103, "bundleIdentifier");
              LODWORD(v228) = v108;
              v111 = v110;
              v227 = v106;
              v112 = v218;
              static UUID._unconditionallyBridgeFromObjectiveC(_:)(v110);

              v113 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
              v225 = v51;
              v114 = v220;
              v115 = dispatch thunk of CustomStringConvertible.description.getter(v220, v113);
              v226 = v97;
              v117 = v116;
              (*(void (**)(char *, uint64_t))(v219 + 8))(v112, v114);
              *(_QWORD *)&v233 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v115, v117, &v231);
              v118 = v203;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v233, v203, v224);

              swift_bridgeObjectRelease(v117);
              *(_WORD *)(v109 + 12) = 2048;
              v119 = *(_QWORD *)(v104 + 16);
              swift_bridgeObjectRelease(v104);
              *(_QWORD *)&v233 = v119;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v233, v118, v109 + 14);
              swift_bridgeObjectRelease(v104);
              *(_WORD *)(v109 + 22) = 2048;
              v120 = v225;
              swift_bridgeObjectRelease(v225);
              *(_QWORD *)&v233 = v92;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v233, v118, v109 + 24);
              swift_bridgeObjectRelease(v120);
              *(_WORD *)(v109 + 32) = 1024;
              LODWORD(v233) = v101;
              v121 = v195;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v233, v195, v109 + 34);
              *(_WORD *)(v109 + 38) = 1024;
              LODWORD(v233) = v226;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v233, v121, v109 + 40);
              *(_WORD *)(v109 + 44) = 1024;
              LODWORD(v233) = v96;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v233, v121, v109 + 46);
              v122 = v227;
              _os_log_impl((void *)&_mh_execute_header, v227, (os_log_type_t)v228, "[BundleEventStore.failedResources] exceeded resource prevalidation failure count, removing bundle id: %s, resource failure count:%ld out of total resource count:%ld, hasMoreInvalidsThanValids=%{BOOL}d, shouldForceDropBundle=%{BOOL}d, hasNotEnoughVariety=%{BOOL}d", (uint8_t *)v109, 0x32u);
              v123 = v229;
              swift_arrayDestroy(v229, 1, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v123, -1, -1);
              v124 = v109;
              v26 = v212;
              swift_slowDealloc(v124, -1, -1);

            }
            else
            {

              swift_bridgeObjectRelease_n(v104, 2);
              swift_bridgeObjectRelease_n(v51, 2);
            }
            v90 = 0;
            v6 = v202;
          }
          else
          {
            swift_bridgeObjectRelease(v51);

            v90 = 1;
          }
LABEL_116:
          v158 = (uint64_t)MOEventBundle._orderedAssetReferences()();
          if (!v158)
            goto LABEL_120;
          v159 = v158;
          if ((unint64_t)v158 >> 62)
          {
            if (v158 >= 0)
              v158 &= 0xFFFFFFFFFFFFFF8uLL;
            v160 = _CocoaArrayWrapper.endIndex.getter(v158);
          }
          else
          {
            v160 = *(_QWORD *)((v158 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          swift_bridgeObjectRelease(v159);
          if (!v160)
          {
            v165 = v26;
            v166 = Logger.logObject.getter(v165);
            v167 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v166, v167))
            {
              v168 = (uint8_t *)swift_slowAlloc(12, -1);
              v169 = swift_slowAlloc(32, -1);
              v231 = v169;
              *(_DWORD *)v168 = v198.n128_u32[0];
              v229 = (uint64_t)(v168 + 4);
              v170 = objc_msgSend(v165, "bundleIdentifier");
              v171 = v218;
              static UUID._unconditionallyBridgeFromObjectiveC(_:)(v170);

              v172 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
              v173 = v220;
              v174 = dispatch thunk of CustomStringConvertible.description.getter(v220, v172);
              v176 = v175;
              v177 = v171;
              v26 = v212;
              (*(void (**)(char *, uint64_t))(v219 + 8))(v177, v173);
              *(_QWORD *)&v233 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v174, v176, &v231);
              v6 = v202;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v233, v203, v229);

              swift_bridgeObjectRelease(v176);
              _os_log_impl((void *)&_mh_execute_header, v166, v167, "[BundleEventStore] Dropping bundleId: %s due to no renderable resources", v168, 0xCu);
              swift_arrayDestroy(v169, 1, v196);
              swift_slowDealloc(v169, -1, -1);
              swift_slowDealloc(v168, -1, -1);

            }
            else
            {

            }
          }
          else
          {
LABEL_120:
            if (v90)
            {
              swift_beginAccess(&v236, &v231, 33, 0);
              v161 = v26;
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v161);
              v163 = *(_QWORD *)((v236 & 0xFFFFFFFFFFFFFF8) + 0x10);
              v162 = *(_QWORD *)((v236 & 0xFFFFFFFFFFFFFF8) + 0x18);
              if (v163 >= v162 >> 1)
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v162 > 1, v163 + 1, 1);
              v164 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v163, v161);
              specialized Array._endMutation()(v164);
              swift_endAccess(&v231);
              v158 = ((uint64_t (*)(_QWORD))v201)(0);
              v200 = 1;
            }
          }
          v82 = Logger.logObject.getter(v158);
          v178 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v82, v178))
          {
            v84 = swift_slowAlloc(12, -1);
            *(_DWORD *)v84 = v199.n128_u32[0];
            v179 = v236;
            if ((unint64_t)v236 >> 62)
            {
              if (v236 < 0)
                v182 = v236;
              else
                v182 = v236 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(v236);
              v180 = _CocoaArrayWrapper.endIndex.getter(v182);
              swift_bridgeObjectRelease(v179);
            }
            else
            {
              v180 = *(_QWORD *)((v236 & 0xFFFFFFFFFFFFF8) + 0x10);
            }
            *(_QWORD *)(v84 + 4) = v180;
            v86 = v178;
            v85 = v82;
            v87 = "[BundleEventStore] Added n=%ld allowed bundles to store";
            v88 = (uint8_t *)v84;
            v89 = 12;
LABEL_131:
            _os_log_impl((void *)&_mh_execute_header, v85, v86, v87, v88, v89);
            swift_slowDealloc(v84, -1, -1);

LABEL_133:
            v24 = v211;
            goto LABEL_19;
          }
        }
        else
        {
          swift_bridgeObjectRelease(v51);

          v82 = Logger.logObject.getter(v81);
          v83 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v82, v83))
          {
            v84 = swift_slowAlloc(2, -1);
            *(_WORD *)v84 = 0;
            v85 = v82;
            v86 = v83;
            v87 = "[MOEventBundleStore] Filtering out bundle due to missing prompts";
            v88 = (uint8_t *)v84;
            v89 = 2;
            goto LABEL_131;
          }
        }

        goto LABEL_133;
      }

LABEL_19:
      if (v24 == v209)
      {
        swift_bridgeObjectRelease(v208);
        swift_beginAccess(&v236, &v231, 0, 0);
        v184 = *(void (**)(__n128))(*(_QWORD *)v6 + 456);
        v185 = swift_bridgeObjectRetain(v236);
        v184(v185);
        v186 = MOEventBundleStore.serviceFetchHandlers()();
        if ((v200 & 1) == 0)
        {
          v187 = Logger.logObject.getter(v186);
          v188 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v187, v188))
          {
            v189 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v189 = 0;
            _os_log_impl((void *)&_mh_execute_header, v187, v188, "[BundleEventStore] No bundles added as suggestions", v189, 2u);
            swift_slowDealloc(v189, -1, -1);
          }

        }
        swift_release(v6);
        *(_QWORD *)&result = swift_bridgeObjectRelease(v236).n128_u64[0];
        return result;
      }
    }
    v233 = 0u;
    v234 = 0u;
LABEL_36:
    outlined destroy of Any?((uint64_t)&v233, &demangling cache variable for type metadata for Any?);
    goto LABEL_37;
  }
LABEL_166:
  v191 = Logger.logObject.getter(v12);
  v192 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v191, v192))
  {
    v193 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v193 = 0;
    _os_log_impl((void *)&_mh_execute_header, v191, v192, "[MOEventBundleStore] got nothing from fetchEventBundles", v193, 2u);
    swift_slowDealloc(v193, -1, -1);
  }

  (*(void (**)(_QWORD *))(*(_QWORD *)v6 + 456))(_swiftEmptyArrayStorage);
  MOEventBundleStore.serviceFetchHandlers()();
  *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  return result;
}

BOOL MOEventBundle.rejected.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  _QWORD v7[2];
  _QWORD v8[5];
  __int128 v9;
  __int128 v10;

  v1 = objc_msgSend(v0, "rankingDictionary");
  if (!v1)
  {
    v9 = 0u;
    v10 = 0u;
LABEL_11:
    outlined destroy of Any?((uint64_t)&v9, &demangling cache variable for type metadata for Any?);
    return 0;
  }
  v2 = v1;
  v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v7[0] = 0xD000000000000017;
  v7[1] = 0x80000001001AA940;
  AnyHashable.init<A>(_:)(v8, v7, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v3 + 16) && (v4 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v8), (v5 & 1) != 0))
  {
    outlined init with copy of Any(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)&v9);
  }
  else
  {
    v9 = 0u;
    v10 = 0u;
  }
  outlined destroy of AnyHashable((uint64_t)v8);
  swift_bridgeObjectRelease(v3);
  if (!*((_QWORD *)&v10 + 1))
    goto LABEL_11;
  return (swift_dynamicCast(v8, &v9, (char *)&type metadata for Any + 8, &type metadata for UInt, 6) & 1) != 0
      && v8[0] == 4;
}

double closure #2 in MOEventBundleStore._fetchAvailableBundles(presentationDetails:completionHandler:)(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void *), uint64_t a5)
{
  uint64_t v9;
  uint64_t Strong;
  double result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  Class isa;
  _QWORD *v22;
  void *v23;
  _QWORD *v24;
  id v25;
  void *v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  _QWORD aBlock[5];
  _QWORD *v32;
  char v33[24];

  v9 = a3 + 16;
  swift_beginAccess(a3 + 16, v33, 0, 0);
  Strong = swift_weakLoadStrong(v9);
  if (Strong)
  {
    v12 = Strong;
    if (a2)
    {
      if (serverManager._clientConnections != (NSMutableDictionary *)-1)
        swift_once(&serverManager._clientConnections, one-time initialization function for shared);
      v13 = type metadata accessor for Logger(0);
      v14 = __swift_project_value_buffer(v13, (uint64_t)static MOAngelLogger.shared);
      v15 = Logger.logObject.getter(v14);
      v16 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v17 = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "[BundleEventStore] fetchEventBundles failed, retring...", v17, 2u);
        swift_slowDealloc(v17, -1, -1);
      }

      v18 = *(id *)(v12 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_promptManager);
      specialized MOEventBundleStore.allowedSourceTypes.getter();
      v20 = v19;
      type metadata accessor for MOEventBundleSourceType(0);
      lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes(&lazy protocol witness table cache variable for type MOEventBundleSourceType and conformance MOEventBundleSourceType, (uint64_t (*)(uint64_t))type metadata accessor for MOEventBundleSourceType, (uint64_t)&protocol conformance descriptor for MOEventBundleSourceType);
      isa = Set._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v20);
      v22 = (_QWORD *)swift_allocObject(&unk_1001EB7A8, 40, 7);
      v22[2] = v12;
      v22[3] = a4;
      v22[4] = a5;
      aBlock[4] = partial apply for closure #1 in closure #2 in MOEventBundleStore._fetchAvailableBundles(presentationDetails:completionHandler:);
      v32 = v22;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed NSNumber?, @guaranteed Error?) -> ();
      aBlock[3] = &block_descriptor_153;
      v23 = _Block_copy(aBlock);
      v24 = v32;
      swift_retain(v12);
      swift_retain(a5);
      objc_msgSend(v18, "fetchEventBundlesWithAllowedSourceTypes:respectOnboardingDates:respectLearnFromThisApp:handler:", isa, 1, 1, v23, swift_release(v24).n128_f64[0]);
      swift_release(v12);
      _Block_release(v23);

    }
    else
    {
      if (a1)
      {
        v25 = objc_msgSend(a1, "sourceAppBundleIds");
        if (v25)
        {
          v26 = v25;
          v27 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v25, &type metadata for String, &protocol witness table for String);

          (*(void (**)(uint64_t))(*(_QWORD *)v12 + 480))(v27);
        }
        v28 = objc_msgSend(a1, "processedBundles");
        if (v28)
        {
          v29 = v28;
          v30 = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MOEventBundle, MOEventBundle_ptr);
          a1 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v29, v30);

        }
        else
        {
          a1 = 0;
        }
      }
      a4(a1);
      swift_release(v12);
      *(_QWORD *)&result = swift_bridgeObjectRelease(a1).n128_u64[0];
    }
  }
  return result;
}

double closure #1 in closure #2 in MOEventBundleStore._fetchAvailableBundles(presentationDetails:completionHandler:)(id a1, uint64_t a2, uint64_t a3, void (*a4)(id))
{
  id v5;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  double result;

  v5 = a1;
  if (a1)
  {
    v7 = objc_msgSend(a1, "sourceAppBundleIds");
    if (v7)
    {
      v8 = v7;
      v9 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v7, &type metadata for String, &protocol witness table for String);

      (*(void (**)(uint64_t))(*(_QWORD *)a3 + 480))(v9);
    }
    v10 = objc_msgSend(v5, "processedBundles");
    if (v10)
    {
      v11 = v10;
      v12 = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MOEventBundle, MOEventBundle_ptr);
      v5 = (id)static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

    }
    else
    {
      v5 = 0;
    }
  }
  a4(v5);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  return result;
}

uint64_t MOEventBundleStore._failedResources(resources:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  NSObject *v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  NSObject *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  NSObject *v34;
  uint64_t v35;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  _QWORD aBlock[5];
  _QWORD *v47;

  v2 = type metadata accessor for DispatchTime(0);
  v42 = *(_QWORD *)(v2 - 8);
  v43 = v2;
  v3 = __chkstk_darwin(v2);
  v5 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v41 = (char *)v37 - v6;
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v40 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v38 = *(_QWORD *)(v10 - 8);
  v39 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)swift_allocObject(&unk_1001EB158, 40, 7);
  v13[2] = 0;
  v44 = v13 + 2;
  v13[3] = 0;
  v13[4] = 0;
  v14 = dispatch_group_create();
  dispatch_group_enter(v14);
  if (one-time initialization token for defaultQueue != -1)
    swift_once(&one-time initialization token for defaultQueue, one-time initialization function for defaultQueue);
  v37[1] = static MOEventBundleStore.defaultQueue;
  v15 = swift_allocObject(&unk_1001EB180, 24, 7);
  swift_weakInit(v15 + 16);
  v16 = (_QWORD *)swift_allocObject(&unk_1001EB1A8, 48, 7);
  v16[2] = v15;
  v16[3] = a1;
  v16[4] = v14;
  v16[5] = v13;
  aBlock[4] = partial apply for closure #1 in MOEventBundleStore._failedResources(resources:);
  v47 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_38_0;
  v17 = _Block_copy(aBlock);
  swift_retain(v15);
  swift_bridgeObjectRetain(a1);
  v37[0] = v14;
  swift_retain(v13);
  static DispatchQoS.unspecified.getter(v18);
  v45 = _swiftEmptyArrayStorage;
  v19 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  v21 = lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v45, v20, v21, v7, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v9, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v39);
  swift_release(v47);
  swift_release(v15);
  static DispatchTime.now()(v22);
  v23 = v41;
  + infix(_:_:)(v5, 5.0);
  v24 = v43;
  v25 = *(void (**)(char *, uint64_t))(v42 + 8);
  v26 = v5;
  v27 = v37[0];
  v25(v26, v43);
  v28 = OS_dispatch_group.wait(timeout:)(v23) & 1;
  v25(v23, v24);
  if ((static DispatchTimeoutResult.== infix(_:_:)(v28, 1) & 1) != 0)
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1)
      swift_once(&serverManager._clientConnections, one-time initialization function for shared);
    v29 = type metadata accessor for Logger(0);
    v30 = __swift_project_value_buffer(v29, (uint64_t)static MOAngelLogger.shared);
    v31 = Logger.logObject.getter(v30);
    v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v33 = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "[BundleEventStore.failedResources] timed out while validating assets", v33, 2u);
      swift_slowDealloc(v33, -1, -1);
      v34 = v27;
      v27 = v31;
    }
    else
    {
      v34 = v31;
    }

  }
  swift_beginAccess(v44, aBlock, 0, 0);
  v35 = v13[2];
  outlined copy of MOEventBundleStore.ResourceValidationResult?(v35, v13[3], v13[4]);
  swift_release(v13);
  return v35;
}

double closure #1 in MOEventBundleStore._failedResources(resources:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t Strong;
  double result;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, double (*)(uint64_t, char, uint64_t), uint64_t, __n128);
  id v13;
  __n128 v14;
  _BYTE v15[24];

  v7 = a1 + 16;
  swift_beginAccess(a1 + 16, v15, 0, 0);
  Strong = swift_weakLoadStrong(v7);
  if (Strong)
  {
    v10 = Strong;
    v11 = swift_allocObject(&unk_1001EB5C8, 32, 7);
    *(_QWORD *)(v11 + 16) = a3;
    *(_QWORD *)(v11 + 24) = a4;
    v12 = *(void (**)(uint64_t, double (*)(uint64_t, char, uint64_t), uint64_t, __n128))(*(_QWORD *)v10 + 584);
    v13 = a3;
    v14 = swift_retain(a4);
    v12(a2, partial apply for closure #1 in closure #1 in MOEventBundleStore._failedResources(resources:), v11, v14);
    swift_release(v11);
    *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  }
  return result;
}

double closure #1 in closure #1 in MOEventBundleStore._failedResources(resources:)(uint64_t a1, char a2, uint64_t a3, dispatch_group_t group, _QWORD *a5)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;
  _BYTE v14[24];

  v9 = a5 + 2;
  dispatch_group_leave(group);
  swift_beginAccess(v9, v14, 1, 0);
  v10 = a5[2];
  v11 = a5[3];
  v12 = a5[4];
  a5[2] = a1;
  a5[3] = a2 & 1;
  a5[4] = a3;
  outlined consume of MOEventBundleStore.ResourceValidationResult?(v10, v11, v12);
  swift_bridgeObjectRetain(a1);
  *(_QWORD *)&result = swift_bridgeObjectRetain(a3).n128_u64[0];
  return result;
}

void MOEventBundleStore._failedResourcesAsync(resources:completion:)(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, __n128), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  const __SCNetworkReachability *v22;
  const __SCNetworkReachability *v23;
  int v24;
  _BOOL4 v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  void (*v32)(_QWORD, _QWORD, _QWORD);
  void (*v33)(_QWORD, _QWORD, _QWORD);
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  BOOL v38;
  id v39;
  void *v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  void *v44;
  Class v45;
  id v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  id v63;
  void *v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  void *v68;
  Class isa;
  id v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  uint64_t v80;
  id v81;
  void *v82;
  uint64_t v83;
  void (*v84)(_QWORD, _QWORD, _QWORD);
  Class v85;
  id v86;
  uint64_t v87;
  id v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  void *v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  void *v104;
  Class v105;
  id v106;
  uint64_t v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  __n128 v119;
  uint64_t v120;
  uint64_t v121;
  id v122;
  uint64_t v123;
  uint64_t v124;
  unsigned __int8 v125;
  int v126;
  id v127;
  void *v128;
  uint64_t v129;
  uint64_t v130;
  id v131;
  NSString v132;
  Class v133;
  id v134;
  uint64_t v135;
  id v136;
  uint64_t v137;
  uint64_t v138;
  NSObject *v139;
  os_log_type_t v140;
  uint8_t *v141;
  NSObject *v142;
  os_log_type_t v143;
  const char *v144;
  uint64_t v145;
  id v146;
  uint64_t v147;
  id v148;
  uint64_t v149;
  id v150;
  uint64_t v151;
  id v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  os_log_type_t v156;
  uint8_t *v157;
  char *v158;
  uint64_t v159;
  id *v160;
  id v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t (*v164)(char *, char *, uint64_t);
  char *v165;
  uint64_t v166;
  NSObject *v167;
  os_log_type_t v168;
  uint8_t *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  unint64_t v174;
  uint8_t *v175;
  __n128 v176;
  os_log_t v177;
  uint8_t *v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  id *inited;
  id v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t (*v186)(char *, char *, uint64_t);
  char *v187;
  uint64_t v188;
  NSObject *v189;
  os_log_type_t v190;
  uint8_t *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  unint64_t v195;
  unint64_t v196;
  __n128 v197;
  os_log_t v198;
  uint8_t *v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t v205;
  unint64_t v206;
  unint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  double (**v211)();
  uint64_t v212;
  double (*v213)();
  void *v214;
  char *v215;
  Class v216;
  id v217;
  id v218;
  uint64_t v219;
  id v220;
  void *v221;
  id v222;
  double v223;
  id *v224;
  id *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  unint64_t v230;
  unint64_t v231;
  unint64_t v232;
  uint64_t v233;
  _QWORD *v234;
  uint64_t v235;
  uint8_t *v236;
  uint64_t v237;
  double (**v238)();
  uint64_t v239;
  double (*v240)();
  void *v241;
  Class v242;
  id v243;
  id v244;
  uint64_t v245;
  id v246;
  void *v247;
  id v248;
  double v249;
  __n128 v250;
  id v251;
  uint64_t v252;
  id v253;
  uint64_t v254;
  id *v255;
  id *v256;
  id v257;
  void (*v258)(_QWORD, _QWORD, _QWORD);
  void (*v259)(_QWORD, _QWORD, __n128);
  uint64_t v260;
  unint64_t v261;
  void *v262;
  NSString v263;
  id v264;
  uint64_t v265;
  unint64_t v266;
  uint64_t v267;
  NSObject *v268;
  os_log_type_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  NSObject *v274;
  os_log_type_t v275;
  uint8_t *v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  os_log_t v282;
  uint8_t *v283;
  unint64_t v284;
  id *v285;
  void (*v286)(_QWORD, _QWORD, _QWORD);
  void (*v287)(_QWORD, _QWORD, __n128);
  __n128 v288;
  char *v289;
  __n128 v290;
  unint64_t *v291;
  unint64_t v292;
  char *v293;
  const __CFString *v294;
  char *v295;
  const __CFString *v296;
  const __CFString *v297;
  uint64_t v298;
  uint64_t v299;
  char *v300;
  char *v301;
  char *v302;
  char *v303;
  char *v304;
  uint64_t v305;
  _QWORD *v306;
  void (*v307)(uint64_t, uint64_t, uint64_t, __n128);
  int v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  char *v312;
  char *v313;
  _BOOL4 v314;
  uint64_t v315;
  _QWORD *v316;
  void (*v317)(_QWORD, _QWORD, _QWORD);
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  void (*v321)(_QWORD, _QWORD, _QWORD);
  _QWORD *v322;
  uint64_t v323;
  unint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  _QWORD *v328;
  uint64_t v329;
  unint64_t v330;
  char v331[8];
  char v332[8];
  sockaddr address;
  double (*v334)(uint64_t, void *, uint64_t, void *);
  void *v335;
  void (*v336)(uint64_t, uint64_t, uint64_t);
  uint64_t v337;
  char v338[12];
  char v339[8];
  SCNetworkReachabilityFlags flags;

  v317 = (void (*)(_QWORD, _QWORD, _QWORD))a3;
  v323 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v282 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v312 = (char *)&v282 - v8;
  v320 = type metadata accessor for UUID(0);
  v319 = *(_QWORD *)(v320 - 8);
  v9 = *(_QWORD *)(v319 + 64);
  v10 = __chkstk_darwin(v320);
  v300 = (char *)&v282 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v303 = (char *)&v282 - v12;
  v13 = __chkstk_darwin(v11);
  v304 = (char *)&v282 - v14;
  v15 = __chkstk_darwin(v13);
  v301 = (char *)&v282 - v16;
  __chkstk_darwin(v15);
  v302 = (char *)&v282 - v17;
  v18 = swift_allocObject(&unk_1001EB1F8, 24, 7);
  *(_QWORD *)(v18 + 16) = &_swiftEmptySetSingleton;
  v315 = v18 + 16;
  v19 = swift_allocObject(&unk_1001EB220, 24, 7);
  *(_QWORD *)(v19 + 16) = &_swiftEmptySetSingleton;
  v298 = v19 + 16;
  v325 = swift_allocObject(&unk_1001EB248, 17, 7);
  *(_BYTE *)(v325 + 16) = 0;
  v20 = swift_allocObject(&unk_1001EB270, 24, 7);
  *(_QWORD *)(v20 + 16) = 0;
  v316 = (_QWORD *)(v20 + 16);
  v21 = (_QWORD *)swift_allocObject(&unk_1001EB270, 24, 7);
  v21[2] = 0;
  v322 = v21 + 2;
  *(_QWORD *)&address.sa_data[6] = 0;
  *(_QWORD *)address.sa_data = 0;
  *(_WORD *)&address.sa_len = 528;
  v22 = SCNetworkReachabilityCreateWithAddress(0, &address);
  v328 = v21;
  v313 = v7;
  if (v22)
  {
    v23 = v22;
    flags = 0;
    v24 = SCNetworkReachabilityGetFlags(v22, &flags);

    if (v24)
      v25 = (flags & 6) == 2;
    else
      v25 = 0;
    v21 = v328;
  }
  else
  {
    v25 = 0;
  }
  v314 = v25;
  v26 = !v25;
  v27 = swift_allocObject(&unk_1001EB270, 24, 7);
  *(_QWORD *)(v27 + 16) = 0;
  v306 = (_QWORD *)(v27 + 16);
  v28 = swift_allocObject(&unk_1001EB270, 24, 7);
  *(_QWORD *)(v28 + 16) = 0;
  v29 = swift_allocObject(&unk_1001EB298, 104, 7);
  *(_QWORD *)(v29 + 16) = v28;
  *(_QWORD *)(v29 + 24) = v27;
  *(_QWORD *)(v29 + 32) = v20;
  v308 = v26;
  *(_BYTE *)(v29 + 40) = v26;
  *(_QWORD *)(v29 + 48) = v21;
  v30 = v323;
  *(_QWORD *)(v29 + 56) = v323;
  *(_QWORD *)(v29 + 64) = v18;
  v31 = (_QWORD *)v325;
  *(_QWORD *)(v29 + 72) = v325;
  *(_QWORD *)(v29 + 80) = a2;
  v32 = v317;
  *(_QWORD *)(v29 + 88) = v317;
  *(_QWORD *)(v29 + 96) = v19;
  v309 = v29;
  v311 = v18;
  v310 = v28;
  v307 = a2;
  if ((unint64_t)v30 >> 62)
    goto LABEL_149;
  v33 = v32;
  v34 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n(v30, 2);
  swift_retain(v33);
  swift_retain(v19);
  swift_retain(v31);
  swift_retain(v18);
  swift_retain(v21);
  swift_retain(v20);
  swift_retain(v27);
  v35 = v28;
  v28 = v34;
  swift_retain(v35);
  while (1)
  {
    v18 = v323;
    if (!v28)
      break;
    v32 = (void (*)(_QWORD, _QWORD, _QWORD))(v323 & 0xC000000000000001);
    swift_beginAccess(v316, &flags, 1, 0);
    swift_beginAccess(v306, v339, 1, 0);
    v36 = swift_beginAccess(v322, v338, 1, 0);
    v305 = 0;
    v291 = &v330;
    v292 = v9 + 7;
    v9 = v18 & 0xC000000000000001;
    v289 = (char *)&v329 + 4;
    v297 = CFSTR("MOStateOfMindMetaDataKeyStateOfMindID");
    v37 = 4;
    v296 = CFSTR("MOWorkoutMetaDataKeyWorkoutID");
    v294 = CFSTR("MOMediaPlayMetaDataKeyPlayerBundleID");
    v295 = (char *)&type metadata for Any + 8;
    v293 = (char *)&type metadata for Swift.AnyObject + 8;
    v36.n128_u64[0] = 136315394;
    v288 = v36;
    v36.n128_u64[0] = 136315138;
    v290 = v36;
    v321 = (void (*)(_QWORD, _QWORD, _QWORD))v19;
    v327 = v20;
    v318 = v28;
    v324 = v18 & 0xC000000000000001;
    v326 = v27;
    while (1)
    {
      v27 = v37 - 4;
      v30 = v9
          ? specialized _ArrayBuffer._getElementSlowPath(_:)(v37 - 4, v18)
          : (uint64_t)*(id *)(v18 + 8 * v37);
      v21 = (_QWORD *)v30;
      v20 = v37 - 3;
      if (__OFADD__(v27, 1))
        break;
      v30 = (uint64_t)objc_msgSend((id)v30, "type");
      switch(v30)
      {
        case 2:
          if (__OFADD__(*v316, 1))
            goto LABEL_148;
          ++*v316;
          v122 = MOResource.photoLocalIdentifier.getter();
          if (!v123)
          {

            goto LABEL_98;
          }
          v124 = v123;
          specialized static MOSuggestionAssetPhotoLivePhotoVideosProvider.assetTypeFromIdentifier(_:)((uint64_t)v122, v123);
          v126 = v125;
          swift_bridgeObjectRelease(v124);
          if (v126 == 3)
            goto LABEL_95;
          goto LABEL_96;
        case 3:
          if (!v314)
          {
            if (serverManager._clientConnections != (NSMutableDictionary *)-1)
              swift_once(&serverManager._clientConnections, one-time initialization function for shared);
            v137 = type metadata accessor for Logger(0);
            v138 = __swift_project_value_buffer(v137, (uint64_t)static MOAngelLogger.shared);
            v139 = Logger.logObject.getter(v138);
            v140 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v139, v140))
            {
              v141 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v141 = 0;
              v142 = v139;
              v143 = v140;
              v144 = "[BundleEventStore.failedResources] no internet";
              goto LABEL_93;
            }
LABEL_94:

LABEL_95:
            swift_beginAccess(v315, &address, 33, 0);
            specialized Set._Variant.insert(_:)(&v329, v37 - 4);
            swift_endAccess(&address);
LABEL_96:

LABEL_97:
            v31 = (_QWORD *)v325;
LABEL_98:
            v27 = v326;
            goto LABEL_99;
          }
          v63 = objc_msgSend(v21, "data");
          if (!v63)
            goto LABEL_89;
          v64 = v63;
          v65 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v63);
          v67 = v66;

          v68 = (void *)objc_opt_self(NSJSONSerialization);
          isa = Data._bridgeToObjectiveC()().super.isa;
          *(_QWORD *)&address.sa_len = 0;
          v70 = objc_msgSend(v68, "JSONObjectWithData:options:error:", isa, 0, &address);

          v71 = *(_QWORD *)&address.sa_len;
          if (!v70)
          {
            v152 = *(id *)&address.sa_len;
            v153 = _convertNSErrorToError(_:)(v71);

            swift_willThrow();
            outlined consume of Data._Representation(v65, v67);
            swift_errorRelease(v153);
            v305 = 0;
LABEL_87:
            v19 = (uint64_t)v321;
            v18 = v323;
            v28 = v318;
LABEL_89:
            if (serverManager._clientConnections != (NSMutableDictionary *)-1)
              swift_once(&serverManager._clientConnections, one-time initialization function for shared);
            v154 = type metadata accessor for Logger(0);
            v155 = __swift_project_value_buffer(v154, (uint64_t)static MOAngelLogger.shared);
            v139 = Logger.logObject.getter(v155);
            v156 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v139, v156))
            {
              v141 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v141 = 0;
              v142 = v139;
              v143 = v156;
              v144 = "[BundleEventStore.failedResources] bundleId is null";
LABEL_93:
              _os_log_impl((void *)&_mh_execute_header, v142, v143, v144, v141, 2u);
              v157 = v141;
              v19 = (uint64_t)v321;
              swift_slowDealloc(v157, -1, -1);
            }
            goto LABEL_94;
          }
          v72 = *(id *)&address.sa_len;
          _bridgeAnyObjectToAny(_:)(&address, v70);
          outlined consume of Data._Representation(v65, v67);
          swift_unknownObjectRelease(v70);
          v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Swift.AnyObject]);
          if ((swift_dynamicCast(&v329, &address, v295, v73, 6) & 1) == 0)
            goto LABEL_87;
          v74 = v329;
          v75 = static String._unconditionallyBridgeFromObjectiveC(_:)(v294);
          v77 = v76;
          v28 = v318;
          if (!*(_QWORD *)(v74 + 16)
            || (v78 = specialized __RawDictionaryStorage.find<A>(_:)(v75, v76), (v79 & 1) == 0))
          {
            swift_bridgeObjectRelease(v74);
            swift_bridgeObjectRelease(v77);
            v19 = (uint64_t)v321;
            v18 = v323;
            goto LABEL_89;
          }
          v80 = *(_QWORD *)(*(_QWORD *)(v74 + 56) + 8 * v78);
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease(v74);
          swift_bridgeObjectRelease(v77);
          v329 = v80;
          if ((swift_dynamicCast(&address, &v329, v293, &type metadata for String, 6) & 1) == 0)
            goto LABEL_87;
          v81 = objc_msgSend(v21, "data", swift_bridgeObjectRelease(*(_QWORD *)&address.sa_data[6]).n128_f64[0]);
          if (!v81)
            goto LABEL_60;
          v82 = v81;
          v83 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v81);
          v32 = v84;

          v85 = Data._bridgeToObjectiveC()().super.isa;
          *(_QWORD *)&address.sa_len = 0;
          v86 = objc_msgSend(v68, "JSONObjectWithData:options:error:", v85, 0, &address);

          v87 = *(_QWORD *)&address.sa_len;
          if (!v86)
          {
            v251 = *(id *)&address.sa_len;
            v252 = _convertNSErrorToError(_:)(v87);

            swift_willThrow();
            outlined consume of Data._Representation(v83, (unint64_t)v32);
            swift_errorRelease(v252);
            goto LABEL_74;
          }
          v88 = *(id *)&address.sa_len;
          _bridgeAnyObjectToAny(_:)(&address, v86);
          outlined consume of Data._Representation(v83, (unint64_t)v32);
          swift_unknownObjectRelease(v86);
          v89 = swift_dynamicCast(&v329, &address, (char *)&type metadata for Any + 8, v73, 6);
          v28 = v318;
          if ((v89 & 1) == 0)
          {

            v19 = (uint64_t)v321;
            v31 = (_QWORD *)v325;
            v27 = v326;
            v18 = v323;
            goto LABEL_99;
          }
          v90 = v329;
          v91 = static String._unconditionallyBridgeFromObjectiveC(_:)(v294);
          v93 = v92;
          v19 = (uint64_t)v321;
          v18 = v323;
          if (!*(_QWORD *)(v90 + 16)
            || (v94 = specialized __RawDictionaryStorage.find<A>(_:)(v91, v92), (v95 & 1) == 0))
          {
            swift_bridgeObjectRelease(v90);
            swift_bridgeObjectRelease(v93);
            goto LABEL_96;
          }
          v96 = *(_QWORD *)(*(_QWORD *)(v90 + 56) + 8 * v94);
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease(v90);
          swift_bridgeObjectRelease(v93);
          v329 = v96;
          if ((swift_dynamicCast(&address, &v329, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for String, 6) & 1) == 0)
          {

            v19 = (uint64_t)v321;
            goto LABEL_97;
          }
          v97 = *(_QWORD *)(v299 + 16);
          v98 = *(_QWORD *)(v299 + 24);
          v19 = (uint64_t)v321;
          v31 = (_QWORD *)v325;
          v9 = v324;
          if (*(_QWORD *)&address.sa_len == v97 && *(_QWORD *)&address.sa_data[6] == v98)
          {
            v32 = *(void (**)(_QWORD, _QWORD, _QWORD))&address.sa_data[6];
LABEL_122:

            swift_bridgeObjectRelease(v32);
            goto LABEL_12;
          }
          v287 = *(void (**)(_QWORD, _QWORD, __n128))&address.sa_len;
          v32 = *(void (**)(_QWORD, _QWORD, _QWORD))&address.sa_data[6];
          if ((_stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)&address.sa_len, *(_QWORD *)&address.sa_data[6], v97, v98, 0) & 1) != 0)goto LABEL_122;
          v253 = objc_allocWithZone((Class)LSApplicationRecord);
          swift_bridgeObjectRetain(v32);
          v286 = v32;
          v254 = v305;
          v255 = (id *)@nonobjc LSApplicationRecord.init(bundleIdentifier:allowPlaceholder:)((uint64_t)v287, (uint64_t)v32, 1);
          if (v254)
          {
            swift_errorRelease(v254);
            v32 = 0;
            v256 = 0;
            v305 = 0;
          }
          else
          {
            v305 = 0;
            v256 = v255;
            if (v255)
            {
              v257 = objc_msgSend(v255, "localizedName");
              static String._unconditionallyBridgeFromObjectiveC(_:)(v257);
              v32 = v258;

            }
            else
            {
              v32 = 0;
            }
          }
          v259 = v287;
          v260 = (uint64_t)v286;
          *(_QWORD *)&address.sa_len = v287;
          *(_QWORD *)&address.sa_data[6] = v286;
          v329 = 0x6C7070612E6D6F63;
          v330 = 0xEA00000000002E65;
          v261 = lazy protocol witness table accessor for type String and conformance String();
          if ((StringProtocol.contains<A>(_:)(&v329, &type metadata for String, &type metadata for String, v261, v261) & 1) == 0)
          {
            swift_beginAccess(v298, &address, 33, 0);
            swift_bridgeObjectRetain(v260);
            specialized Set._Variant.insert(_:)(&v329, (uint64_t)v259, v260);
            swift_endAccess(&address);
            swift_bridgeObjectRelease(v330);
          }
          v262 = (void *)objc_opt_self(APApplication);
          swift_bridgeObjectRetain(v260);
          v263 = String._bridgeToObjectiveC()();
          v264 = objc_msgSend(v262, "applicationWithBundleIdentifier:", v263);

          LODWORD(v263) = objc_msgSend(v264, "isHidden", swift_bridgeObjectRelease(v260).n128_f64[0]);
          if ((_DWORD)v263)
          {
            v284 = (unint64_t)v32;
            v285 = v256;
            swift_beginAccess(v315, &address, 33, 0);
            specialized Set._Variant.insert(_:)(&v329, v37 - 4);
            swift_endAccess(&address);
            if (serverManager._clientConnections != (NSMutableDictionary *)-1)
              swift_once(&serverManager._clientConnections, one-time initialization function for shared);
            v265 = type metadata accessor for Logger(0);
            __swift_project_value_buffer(v265, (uint64_t)static MOAngelLogger.shared);
            v266 = (unint64_t)v286;
            v267 = swift_bridgeObjectRetain_n(v286, 2);
            v268 = Logger.logObject.getter(v267);
            v269 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v268, v269))
            {
              v270 = swift_slowAlloc(18, -1);
              v271 = swift_slowAlloc(32, -1);
              *(_QWORD *)&address.sa_len = v271;
              *(_DWORD *)v270 = v288.n128_u32[0];
              swift_bridgeObjectRetain(v266);
              v329 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)((uint64_t)v287, v266, (uint64_t *)&address);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v329, v291, v270 + 4);
              swift_bridgeObjectRelease_n(v266, 3);
              *(_WORD *)(v270 + 12) = 1024;
              LODWORD(v329) = 1;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v329, v289, v270 + 14);
              _os_log_impl((void *)&_mh_execute_header, v268, v269, "[BundleEventStore.failedResources] bundleId %s, shouldDropApp=%{BOOL}d", (uint8_t *)v270, 0x12u);
              swift_arrayDestroy(v271, 1, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v271, -1, -1);
              swift_slowDealloc(v270, -1, -1);
            }
            else
            {
              swift_bridgeObjectRelease_n(v266, 2);
            }

            v256 = v285;
            v32 = (void (*)(_QWORD, _QWORD, _QWORD))v284;
          }
          if (v32)
          {

            swift_bridgeObjectRelease(v286);
            swift_bridgeObjectRelease(v32);
          }
          else
          {
            v285 = v256;
            if (serverManager._clientConnections != (NSMutableDictionary *)-1)
              swift_once(&serverManager._clientConnections, one-time initialization function for shared);
            v272 = type metadata accessor for Logger(0);
            __swift_project_value_buffer(v272, (uint64_t)static MOAngelLogger.shared);
            swift_bridgeObjectRetain(v286);
            v274 = Logger.logObject.getter(v273);
            v275 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v274, v275))
            {
              v276 = (uint8_t *)swift_slowAlloc(12, -1);
              v277 = swift_slowAlloc(32, -1);
              *(_QWORD *)&address.sa_len = v277;
              *(_DWORD *)v276 = v290.n128_u32[0];
              v284 = (unint64_t)(v276 + 4);
              v32 = v286;
              swift_bridgeObjectRetain(v286);
              v329 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)((uint64_t)v287, (unint64_t)v32, (uint64_t *)&address);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v329, v291, v284);
              swift_bridgeObjectRelease_n(v32, 3);
              _os_log_impl((void *)&_mh_execute_header, v274, v275, "[BundleEventStore.failedResources] app name is nil for bundleId %s", v276, 0xCu);
              swift_arrayDestroy(v277, 1, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v277, -1, -1);
              swift_slowDealloc(v276, -1, -1);
            }
            else
            {
              swift_bridgeObjectRelease_n(v286, 2);
            }

            swift_beginAccess(v315, &address, 33, 0);
            specialized Set._Variant.insert(_:)(&v329, v37 - 4);
            swift_endAccess(&address);

LABEL_60:
          }
LABEL_75:
          v19 = (uint64_t)v321;
          v31 = (_QWORD *)v325;
          goto LABEL_76;
        case 6:
        case 12:

          if (__OFADD__(*v322, 1))
            goto LABEL_147;
          ++*v322;
          goto LABEL_12;
        case 10:
          v99 = objc_msgSend(v21, "data");
          if (!v99)
          {
            v118 = (uint64_t)v312;
LABEL_84:
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v319 + 56))(v118, 1, 1, v320);
            v27 = v326;
            goto LABEL_85;
          }
          v100 = v99;
          v101 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v99);
          v103 = v102;

          v104 = (void *)objc_opt_self(NSJSONSerialization);
          v105 = Data._bridgeToObjectiveC()().super.isa;
          *(_QWORD *)&address.sa_len = 0;
          v106 = objc_msgSend(v104, "JSONObjectWithData:options:error:", v105, 0, &address);

          v107 = *(_QWORD *)&address.sa_len;
          if (!v106)
          {
            v148 = *(id *)&address.sa_len;
            v149 = _convertNSErrorToError(_:)(v107);

            swift_willThrow();
            outlined consume of Data._Representation(v101, v103);
            swift_errorRelease(v149);
            v305 = 0;
LABEL_72:
            v118 = (uint64_t)v312;
            v19 = (uint64_t)v321;
            v28 = v318;
LABEL_83:
            v9 = v324;
            goto LABEL_84;
          }
          v108 = *(id *)&address.sa_len;
          _bridgeAnyObjectToAny(_:)(&address, v106);
          outlined consume of Data._Representation(v101, v103);
          swift_unknownObjectRelease(v106);
          v109 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Swift.AnyObject]);
          if ((swift_dynamicCast(&v329, &address, (char *)&type metadata for Any + 8, v109, 6) & 1) == 0)
            goto LABEL_72;
          v110 = v329;
          v111 = static String._unconditionallyBridgeFromObjectiveC(_:)(v296);
          v113 = v112;
          v19 = (uint64_t)v321;
          v28 = v318;
          if (!*(_QWORD *)(v110 + 16)
            || (v114 = specialized __RawDictionaryStorage.find<A>(_:)(v111, v112), (v115 & 1) == 0))
          {
            swift_bridgeObjectRelease(v110);
            swift_bridgeObjectRelease(v113);
            v118 = (uint64_t)v312;
            goto LABEL_83;
          }
          v116 = *(_QWORD *)(*(_QWORD *)(v110 + 56) + 8 * v114);
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease(v110);
          swift_bridgeObjectRelease(v113);
          v329 = v116;
          if ((swift_dynamicCast(&address, &v329, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for String, 6) & 1) == 0)
          {
            v118 = (uint64_t)v312;
            v19 = (uint64_t)v321;
            goto LABEL_83;
          }
          v117 = *(_QWORD *)&address.sa_data[6];
          v118 = (uint64_t)v312;
          UUID.init(uuidString:)(*(_QWORD *)&address.sa_len, *(_QWORD *)&address.sa_data[6]);
          v119 = swift_bridgeObjectRelease(v117);
          v120 = v319;
          v121 = v320;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v319 + 48))(v118, 1, v320, v119) == 1)
          {
            v19 = (uint64_t)v321;
            v27 = v326;
            v9 = v324;
LABEL_85:

            outlined destroy of Any?(v118, &demangling cache variable for type metadata for UUID?);
            v31 = (_QWORD *)v325;
            goto LABEL_13;
          }
          v180 = v302;
          v286 = *(void (**)(_QWORD, _QWORD, _QWORD))(v120 + 32);
          v286(v302, v118, v121);
          v181 = type metadata accessor for MOSuggestionAssetWorkoutProvider();
          inited = (id *)swift_initStackObject(v181, v331);
          inited[2] = (id)-1;
          v183 = objc_msgSend(objc_allocWithZone((Class)HKHealthStore), "init");
          v285 = inited;
          inited[3] = v183;
          v184 = v121;
          if (serverManager._clientConnections != (NSMutableDictionary *)-1)
            swift_once(&serverManager._clientConnections, one-time initialization function for shared);
          v185 = type metadata accessor for Logger(0);
          __swift_project_value_buffer(v185, (uint64_t)static MOAngelLogger.shared);
          v186 = *(uint64_t (**)(char *, char *, uint64_t))(v120 + 16);
          v187 = v301;
          v188 = v186(v301, v180, v121);
          v189 = Logger.logObject.getter(v188);
          v190 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v189, v190))
          {
            v191 = (uint8_t *)swift_slowAlloc(12, -1);
            *(_QWORD *)&address.sa_len = swift_slowAlloc(32, -1);
            v284 = (unint64_t)v186;
            v192 = *(_QWORD *)&address.sa_len;
            v283 = v191;
            *(_DWORD *)v191 = v290.n128_u32[0];
            v193 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
            v282 = v189;
            v194 = dispatch thunk of CustomStringConvertible.description.getter(v320, v193);
            v196 = v195;
            v329 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v194, v195, (uint64_t *)&address);
            v184 = v320;
            v120 = v319;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v329, v291, v191 + 4);
            v197 = swift_bridgeObjectRelease(v196);
            v287 = *(void (**)(_QWORD, _QWORD, __n128))(v120 + 8);
            v287(v301, v184, v197);
            v198 = v282;
            v199 = v283;
            _os_log_impl((void *)&_mh_execute_header, v282, v190, "[MOEventBundleStore.failedResources] calling HK, id=%s", v283, 0xCu);
            swift_arrayDestroy(v192, 1, (char *)&type metadata for Any + 8);
            v200 = v192;
            v186 = (uint64_t (*)(char *, char *, uint64_t))v284;
            swift_slowDealloc(v200, -1, -1);
            swift_slowDealloc(v199, -1, -1);

          }
          else
          {
            v287 = *(void (**)(_QWORD, _QWORD, __n128))(v120 + 8);
            ((void (*)(char *, uint64_t))v287)(v187, v184);

          }
          v226 = v302;
          if (__OFADD__(*v306, 1))
            goto LABEL_154;
          ++*v306;
          v186(v304, v226, v184);
          v227 = *(unsigned __int8 *)(v120 + 80);
          v228 = (v227 + 16) & ~v227;
          v284 = (v228 + v292) & 0xFFFFFFFFFFFFFFF8;
          v229 = v184;
          v230 = (v284 + 15) & 0xFFFFFFFFFFFFFFF8;
          v283 = (uint8_t *)((v230 + 15) & 0xFFFFFFFFFFFFFFF8);
          v231 = (v230 + 31) & 0xFFFFFFFFFFFFFFF8;
          v232 = (v231 + 15) & 0xFFFFFFFFFFFFFFF8;
          v233 = swift_allocObject(&unk_1001EB338, v232 + 16, v227 | 7);
          v286(v233 + v228, v304, v229);
          v234 = (_QWORD *)v325;
          *(_QWORD *)(v233 + v284) = v325;
          v235 = v311;
          *(_QWORD *)(v233 + v230) = v311;
          v236 = &v283[v233];
          *(_QWORD *)v236 = v27;
          v236[8] = v308;
          v237 = v310;
          *(_QWORD *)(v233 + v231) = v310;
          v238 = (double (**)())(v233 + v232);
          v239 = v233;
          v240 = (double (*)())v309;
          *v238 = partial apply for closure #1 in MOEventBundleStore._failedResourcesAsync(resources:completion:);
          v238[1] = v240;
          v241 = (void *)objc_opt_self(HKQuery);
          swift_retain(v234);
          swift_retain(v235);
          swift_retain(v237);
          swift_retain(v240);
          v215 = v302;
          v242 = UUID._bridgeToObjectiveC()().super.isa;
          v243 = objc_msgSend(v241, "predicateForObjectWithUUID:", v242);

          v244 = objc_msgSend((id)objc_opt_self(HKObjectType), "workoutType");
          v245 = swift_allocObject(&unk_1001EB360, 32, 7);
          *(_QWORD *)(v245 + 16) = partial apply for closure #2 in MOEventBundleStore._failedResourcesAsync(resources:completion:);
          *(_QWORD *)(v245 + 24) = v239;
          v246 = objc_allocWithZone((Class)HKSampleQuery);
          v336 = partial apply for closure #1 in MOSuggestionAssetWorkoutProvider.getWorkout(workoutUUID:completion:);
          v337 = v245;
          *(_QWORD *)&address.sa_len = _NSConcreteStackBlock;
          *(_QWORD *)&address.sa_data[6] = 1107296256;
          v334 = thunk for @escaping @callee_guaranteed (@guaranteed HKSampleQuery, @guaranteed [HKSample]?, @guaranteed Error?) -> ();
          v335 = &block_descriptor_74;
          v247 = _Block_copy(&address);
          v248 = objc_msgSend(v246, "initWithSampleType:predicate:limit:sortDescriptors:resultsHandler:", v244, v243, 1, 0, v247, swift_retain(v239).n128_f64[0]);

          v31 = v234;
          _Block_release(v247);
          *(_QWORD *)&v249 = swift_release(v337).n128_u64[0];
          v32 = (void (*)(_QWORD, _QWORD, _QWORD))v285;
          objc_msgSend(v285[3], "executeQuery:", v248, v249);

          swift_release(v239);
          v225 = (id *)v32;
LABEL_116:
          v250 = swift_release(v225);
          v287(v215, v320, v250);
          v19 = (uint64_t)v321;
LABEL_76:
          v27 = v326;
          v18 = v323;
          v28 = v318;
LABEL_99:
          v9 = v324;
LABEL_13:
          ++v37;
          v38 = v20 == v28;
          v20 = v327;
          v21 = v328;
          if (v38)
            goto LABEL_145;
          break;
        case 11:
          v127 = objc_msgSend(v21, "contactIdentifier");
          if (!v127)
          {

            v31 = (_QWORD *)v325;
LABEL_12:
            v27 = v326;
            goto LABEL_13;
          }
          v128 = v127;
          static String._unconditionallyBridgeFromObjectiveC(_:)(v127);
          v130 = v129;

          v131 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), "init");
          v132 = String._bridgeToObjectiveC()();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
          v133 = Array._bridgeToObjectiveC()().super.isa;
          *(_QWORD *)&address.sa_len = 0;
          v134 = objc_msgSend(v131, "unifiedContactWithIdentifier:keysToFetch:error:", v132, v133, &address);

          v135 = *(_QWORD *)&address.sa_len;
          if (v134)
          {
            v136 = *(id *)&address.sa_len;

            swift_bridgeObjectRelease(v130);
            goto LABEL_60;
          }
          v150 = *(id *)&address.sa_len;
          v151 = _convertNSErrorToError(_:)(v135);

          swift_willThrow();
          swift_errorRelease(v151);
          swift_bridgeObjectRelease(v130);
          swift_beginAccess(v315, &address, 33, 0);
          specialized Set._Variant.insert(_:)(&v329, v37 - 4);
          swift_endAccess(&address);
LABEL_74:

          v305 = 0;
          goto LABEL_75;
        case 16:
          v39 = objc_msgSend(v21, "data");
          if (!v39)
          {
            v32 = (void (*)(_QWORD, _QWORD, _QWORD))v19;
            v145 = v319;
            v31 = (_QWORD *)v325;
            goto LABEL_79;
          }
          v40 = v39;
          v41 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v39);
          v43 = v42;

          v44 = (void *)objc_opt_self(NSJSONSerialization);
          v45 = Data._bridgeToObjectiveC()().super.isa;
          *(_QWORD *)&address.sa_len = 0;
          v46 = objc_msgSend(v44, "JSONObjectWithData:options:error:", v45, 0, &address);

          v47 = *(_QWORD *)&address.sa_len;
          if (!v46)
          {
            v146 = *(id *)&address.sa_len;
            v147 = _convertNSErrorToError(_:)(v47);

            swift_willThrow();
            outlined consume of Data._Representation(v41, v43);
            swift_errorRelease(v147);
            v305 = 0;
LABEL_70:
            v58 = (uint64_t)v313;
            v145 = v319;
            v32 = v321;
            v31 = (_QWORD *)v325;
            v28 = v318;
            v9 = v324;
            goto LABEL_80;
          }
          v48 = *(id *)&address.sa_len;
          _bridgeAnyObjectToAny(_:)(&address, v46);
          outlined consume of Data._Representation(v41, v43);
          swift_unknownObjectRelease(v46);
          v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Swift.AnyObject]);
          if ((swift_dynamicCast(&v329, &address, (char *)&type metadata for Any + 8, v49, 6) & 1) == 0)
            goto LABEL_70;
          v50 = v329;
          v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v297);
          v53 = v52;
          v32 = v321;
          v28 = v318;
          if (!*(_QWORD *)(v50 + 16)
            || (v54 = specialized __RawDictionaryStorage.find<A>(_:)(v51, v52), (v55 & 1) == 0))
          {
            swift_bridgeObjectRelease(v50);
            swift_bridgeObjectRelease(v53);
            v145 = v319;
            goto LABEL_78;
          }
          v56 = *(_QWORD *)(*(_QWORD *)(v50 + 56) + 8 * v54);
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease(v50);
          swift_bridgeObjectRelease(v53);
          v329 = v56;
          if ((swift_dynamicCast(&address, &v329, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for String, 6) & 1) == 0)
          {
            v145 = v319;
            v32 = v321;
LABEL_78:
            v31 = (_QWORD *)v325;
            v9 = v324;
LABEL_79:
            v58 = (uint64_t)v313;
LABEL_80:
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v145 + 56))(v58, 1, 1, v320);
            v27 = v326;
LABEL_81:

            outlined destroy of Any?(v58, &demangling cache variable for type metadata for UUID?);
            v19 = (uint64_t)v32;
            goto LABEL_13;
          }
          v57 = *(_QWORD *)&address.sa_data[6];
          v58 = (uint64_t)v313;
          UUID.init(uuidString:)(*(_QWORD *)&address.sa_len, *(_QWORD *)&address.sa_data[6]);
          v59 = swift_bridgeObjectRelease(v57);
          v60 = v319;
          v61 = v320;
          v62 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v319 + 48))(v58, 1, v320, v59);
          v32 = v321;
          if (v62 == 1)
          {
            v31 = (_QWORD *)v325;
            v27 = v326;
            v9 = v324;
            goto LABEL_81;
          }
          v158 = v303;
          v286 = *(void (**)(_QWORD, _QWORD, _QWORD))(v60 + 32);
          v286(v303, v58, v61);
          v159 = type metadata accessor for MOSuggestionAssetStateOfMindProvider();
          v160 = (id *)swift_initStackObject(v159, v332);
          v161 = objc_msgSend(objc_allocWithZone((Class)HKHealthStore), "init");
          v285 = v160;
          v160[2] = v161;
          v162 = v61;
          if (serverManager._clientConnections != (NSMutableDictionary *)-1)
            swift_once(&serverManager._clientConnections, one-time initialization function for shared);
          v163 = type metadata accessor for Logger(0);
          __swift_project_value_buffer(v163, (uint64_t)static MOAngelLogger.shared);
          v164 = *(uint64_t (**)(char *, char *, uint64_t))(v60 + 16);
          v165 = v300;
          v166 = v164(v300, v158, v61);
          v167 = Logger.logObject.getter(v166);
          v168 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v167, v168))
          {
            v169 = (uint8_t *)swift_slowAlloc(12, -1);
            *(_QWORD *)&address.sa_len = swift_slowAlloc(32, -1);
            v284 = (unint64_t)v164;
            v170 = *(_QWORD *)&address.sa_len;
            v283 = v169;
            *(_DWORD *)v169 = v290.n128_u32[0];
            v171 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
            v282 = v167;
            v172 = dispatch thunk of CustomStringConvertible.description.getter(v320, v171);
            v174 = v173;
            v329 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v172, v173, (uint64_t *)&address);
            v175 = v169 + 4;
            v162 = v320;
            v60 = v319;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v329, v291, v175);
            v176 = swift_bridgeObjectRelease(v174);
            v287 = *(void (**)(_QWORD, _QWORD, __n128))(v60 + 8);
            v287(v165, v162, v176);
            v177 = v282;
            v178 = v283;
            _os_log_impl((void *)&_mh_execute_header, v282, v168, "[MOEventBundleStore.failedResources] calling HK for state of mind, id=%s", v283, 0xCu);
            swift_arrayDestroy(v170, 1, (char *)&type metadata for Any + 8);
            v179 = v170;
            v164 = (uint64_t (*)(char *, char *, uint64_t))v284;
            swift_slowDealloc(v179, -1, -1);
            swift_slowDealloc(v178, -1, -1);

          }
          else
          {
            v287 = *(void (**)(_QWORD, _QWORD, __n128))(v60 + 8);
            ((void (*)(char *, uint64_t))v287)(v165, v162);

          }
          v201 = v303;
          if (__OFADD__(*v306, 1))
          {
            __break(1u);
LABEL_154:
            __break(1u);
          }
          ++*v306;
          v164(v304, v201, v162);
          v202 = *(unsigned __int8 *)(v60 + 80);
          v203 = (v202 + 16) & ~v202;
          v284 = (v203 + v292) & 0xFFFFFFFFFFFFFFF8;
          v204 = v162;
          v283 = (uint8_t *)((v284 + 15) & 0xFFFFFFFFFFFFFFF8);
          v205 = (unint64_t)(v283 + 15) & 0xFFFFFFFFFFFFFFF8;
          v206 = (v205 + 15) & 0xFFFFFFFFFFFFFFF8;
          v207 = (v206 + 15) & 0xFFFFFFFFFFFFFFF8;
          v208 = swift_allocObject(&unk_1001EB2C0, v207 + 16, v202 | 7);
          v286(v208 + v203, v304, v204);
          v32 = (void (*)(_QWORD, _QWORD, _QWORD))v325;
          *(_QWORD *)(v208 + v284) = v325;
          v209 = v311;
          *(_QWORD *)&v283[v208] = v311;
          *(_QWORD *)(v208 + v205) = v27;
          v210 = v310;
          *(_QWORD *)(v208 + v206) = v310;
          v211 = (double (**)())(v208 + v207);
          v212 = v208;
          v213 = (double (*)())v309;
          *v211 = partial apply for closure #1 in MOEventBundleStore._failedResourcesAsync(resources:completion:);
          v211[1] = v213;
          v214 = (void *)objc_opt_self(HKQuery);
          swift_retain(v32);
          swift_retain(v209);
          swift_retain(v210);
          swift_retain(v213);
          v215 = v303;
          v216 = UUID._bridgeToObjectiveC()().super.isa;
          v217 = objc_msgSend(v214, "predicateForObjectWithUUID:", v216);

          v218 = objc_msgSend((id)objc_opt_self(HKObjectType), "stateOfMindType");
          v219 = swift_allocObject(&unk_1001EB2E8, 32, 7);
          *(_QWORD *)(v219 + 16) = partial apply for closure #3 in MOEventBundleStore._failedResourcesAsync(resources:completion:);
          *(_QWORD *)(v219 + 24) = v208;
          v220 = objc_allocWithZone((Class)HKSampleQuery);
          v336 = partial apply for closure #1 in MOSuggestionAssetStateOfMindProvider.getStateOfMind(stateOfMindUUID:completion:);
          v337 = v219;
          *(_QWORD *)&address.sa_len = _NSConcreteStackBlock;
          *(_QWORD *)&address.sa_data[6] = 1107296256;
          v334 = thunk for @escaping @callee_guaranteed (@guaranteed HKSampleQuery, @guaranteed [HKSample]?, @guaranteed Error?) -> ();
          v335 = &block_descriptor_65;
          v221 = _Block_copy(&address);
          v222 = objc_msgSend(v220, "initWithSampleType:predicate:limit:sortDescriptors:resultsHandler:", v218, v217, 1, 0, v221, swift_retain(v212).n128_f64[0]);

          v31 = v32;
          _Block_release(v221);
          *(_QWORD *)&v223 = swift_release(v337).n128_u64[0];
          v224 = v285;
          objc_msgSend(v285[2], "executeQuery:", v222, v223);

          swift_release(v212);
          v225 = v224;
          goto LABEL_116;
        default:

          goto LABEL_12;
      }
    }
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    if (v30 < 0)
      v280 = v30;
    else
      v280 = v30 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v30, 2);
    swift_retain(v32);
    swift_retain(v19);
    swift_retain(v325);
    swift_retain(v18);
    swift_retain(v21);
    swift_retain(v20);
    swift_retain(v27);
    swift_retain(v28);
    v281 = v280;
    v31 = (_QWORD *)v325;
    v28 = _CocoaArrayWrapper.endIndex.getter(v281);
  }
LABEL_145:
  swift_bridgeObjectRelease(v18);
  v278 = v310;
  v279 = v311;
  closure #1 in MOEventBundleStore._failedResourcesAsync(resources:completion:)(v310, v27, v20, v308, (uint64_t)v21, v18, v311, v31, v307, (uint64_t)v317, v19);
  swift_release(v309);
  swift_release(v278);
  swift_release(v27);
  swift_release(v21);
  swift_release(v20);
  swift_release(v31);
  swift_release(v19);
  swift_release(v279);
}

double closure #1 in MOEventBundleStore._failedResourcesAsync(resources:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8, void (*a9)(uint64_t, uint64_t, uint64_t, __n128), uint64_t a10, uint64_t a11)
{
  void (*v19)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v20;
  double result;
  uint64_t *v22;
  _BOOL4 v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  _BOOL4 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  char v40[24];
  char v41[24];
  _BOOL4 v42;
  _BYTE v43[20];
  char v44[24];
  char v45[24];
  char v46[24];
  char v47[24];
  char v48[32];

  v19 = (void (*)(uint64_t, uint64_t, uint64_t, __n128))(a2 + 16);
  swift_beginAccess(a1 + 16, v48, 0, 0);
  v20 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)&result = swift_beginAccess(v19, v47, 0, 0).n128_u64[0];
  if (v20 == *(_QWORD *)(a2 + 16))
  {
    v22 = (uint64_t *)(a7 + 16);
    swift_beginAccess(a3 + 16, v46, 0, 0);
    v23 = *(_QWORD *)(a3 + 16) == 1;
    swift_beginAccess(a5 + 16, v45, 0, 0);
    v24 = *(_BYTE **)(a5 + 16);
    if ((unint64_t)a6 >> 62)
    {
      if (a6 < 0)
        v38 = a6;
      else
        v38 = a6 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a6);
      v25 = (_BYTE *)_CocoaArrayWrapper.endIndex.getter(v38);
      swift_bridgeObjectRelease(a6);
    }
    else
    {
      v25 = *(_BYTE **)((a6 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_beginAccess(v22, v44, 0, 0);
    v26 = *(_QWORD *)(*v22 + 16);
    v27 = &v25[-v26];
    if (__OFSUB__(v25, v26))
    {
      __break(1u);
    }
    else
    {
      v19 = a9;
      v25 = a8 + 2;
      a8 = (_QWORD *)(a11 + 16);
      LODWORD(v20) = v23 & a4;
      if (v24 == v27)
      {
        if ((a4 & 1) == 0)
          goto LABEL_13;
      }
      else if ((v20 & 1) == 0)
      {
LABEL_13:
        swift_beginAccess(v22, &v42, 0, 0);
        v34 = *v22;
        swift_beginAccess(v25, v41, 0, 0);
        v35 = *v25;
        swift_beginAccess(a8, v40, 0, 0);
        v36 = *a8;
        swift_bridgeObjectRetain(v34);
        v37 = swift_bridgeObjectRetain(v36);
        v19(v34, v35, v36, v37);
        swift_bridgeObjectRelease(v36);
        *(_QWORD *)&result = swift_bridgeObjectRelease(v34).n128_u64[0];
        return result;
      }
      if (serverManager._clientConnections == (NSMutableDictionary *)-1)
      {
LABEL_10:
        v28 = type metadata accessor for Logger(0);
        v29 = __swift_project_value_buffer(v28, (uint64_t)static MOAngelLogger.shared);
        v30 = Logger.logObject.getter(v29);
        v31 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v30, v31))
        {
          v32 = v24 == v27;
          v33 = swift_slowAlloc(14, -1);
          *(_DWORD *)v33 = 67109376;
          v42 = v20;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, v43, v33 + 4);
          *(_WORD *)(v33 + 8) = 1024;
          v42 = v32;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, v43, v33 + 10);
          _os_log_impl((void *)&_mh_execute_header, v30, v31, "[BundleEventStore.failedResources] forceDrop, shouldForceDropPhoto=%{BOOL}d, shouldForceDropSingleMap=%{BOOL}d", (uint8_t *)v33, 0xEu);
          swift_slowDealloc(v33, -1, -1);
        }

        swift_beginAccess(v25, &v39, 1, 0);
        *v25 = 1;
        goto LABEL_13;
      }
    }
    swift_once(&serverManager._clientConnections, one-time initialization function for shared);
    goto LABEL_10;
  }
  return result;
}

double closure #2 in MOEventBundleStore._failedResourcesAsync(resources:completion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint8_t *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  void *v54;
  id v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  double result;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t aBlock[5];
  uint64_t v85;

  v71 = a8;
  v75 = a4;
  v76 = a7;
  v70 = a6;
  v69 = a5;
  v73 = a1;
  v74 = a3;
  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v81 = *(_QWORD *)(v10 - 8);
  v82 = v10;
  __chkstk_darwin(v10);
  v80 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v78 = *(_QWORD *)(v12 - 8);
  v79 = v12;
  __chkstk_darwin(v12);
  v77 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for UUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  v17 = __chkstk_darwin(v14);
  v68 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v65 - v18;
  if (serverManager._clientConnections != (NSMutableDictionary *)-1)
    swift_once(&serverManager._clientConnections, one-time initialization function for shared);
  v20 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v20, (uint64_t)static MOAngelLogger.shared);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v22 = v21(v19, a2, v14);
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = swift_slowAlloc(12, -1);
    v67 = (uint64_t)v21;
    v26 = (uint8_t *)v25;
    v27 = swift_slowAlloc(32, -1);
    v72 = a2;
    v28 = v27;
    aBlock[0] = v27;
    *(_DWORD *)v26 = 136315138;
    v66 = (unint64_t)(v26 + 4);
    v29 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v30 = dispatch thunk of CustomStringConvertible.description.getter(v14, v29);
    v32 = v31;
    v83 = (_QWORD *)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v31, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, aBlock, v66);
    v33 = swift_bridgeObjectRelease(v32);
    (*(void (**)(char *, uint64_t, __n128))(v15 + 8))(v19, v14, v33);
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "[MOEventBundleStore.failedResources] returning from HK, id=%s", v26, 0xCu);
    swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
    v34 = v28;
    a2 = v72;
    swift_slowDealloc(v34, -1, -1);
    v35 = v26;
    v21 = (uint64_t (*)(char *, uint64_t, uint64_t))v67;
    swift_slowDealloc(v35, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v14);
  }

  v72 = a9;
  if (one-time initialization token for defaultQueue != -1)
    swift_once(&one-time initialization token for defaultQueue, one-time initialization function for defaultQueue);
  v67 = static MOEventBundleStore.defaultQueue;
  v36 = v68;
  v21(v68, a2, v14);
  v37 = *(unsigned __int8 *)(v15 + 80);
  v38 = (v37 + 16) & ~v37;
  v39 = (v16 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v39 + 15) & 0xFFFFFFFFFFFFFFF8;
  v41 = (v40 + 15) & 0xFFFFFFFFFFFFFFF8;
  v42 = v15;
  v66 = (v41 + 15) & 0xFFFFFFFFFFFFFFF8;
  v43 = (v41 + 31) & 0xFFFFFFFFFFFFFFF8;
  v44 = v14;
  v45 = (v43 + 15) & 0xFFFFFFFFFFFFFFF8;
  v46 = swift_allocObject(&unk_1001EB528, v45 + 16, v37 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v46 + v38, v36, v44);
  v47 = v73;
  *(_QWORD *)(v46 + v39) = v73;
  v49 = v74;
  v48 = v75;
  *(_QWORD *)(v46 + v40) = v74;
  *(_QWORD *)(v46 + v41) = v48;
  v50 = v46 + v66;
  *(_QWORD *)v50 = v69;
  *(_BYTE *)(v50 + 8) = v70 & 1;
  v51 = v76;
  *(_QWORD *)(v46 + v43) = v76;
  v52 = (_QWORD *)(v46 + v45);
  v53 = v72;
  *v52 = v71;
  v52[1] = v53;
  aBlock[4] = (uint64_t)partial apply for closure #1 in closure #2 in MOEventBundleStore._failedResourcesAsync(resources:completion:);
  v85 = v46;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = (uint64_t)&block_descriptor_102;
  v54 = _Block_copy(aBlock);
  v55 = v47;
  swift_retain(v49);
  swift_retain(v48);
  swift_retain(v51);
  swift_retain(v53);
  v56 = v77;
  static DispatchQoS.unspecified.getter(v57);
  v83 = _swiftEmptyArrayStorage;
  v58 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  v60 = lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  v61 = v80;
  v62 = v59;
  v63 = v82;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v83, v62, v60, v82, v58);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v56, v61, v54);
  _Block_release(v54);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v61, v63);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v56, v79);
  *(_QWORD *)&result = swift_release(v85).n128_u64[0];
  return result;
}

void closure #1 in closure #2 in MOEventBundleStore._failedResourcesAsync(resources:completion:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, void (*a8)(__n128))
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint8_t *v32;
  _QWORD *v33;
  id v34;
  void *v35;
  _BYTE *v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(__n128);
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48[3];

  v42 = a3;
  v43 = a7;
  v44 = a2;
  v13 = type metadata accessor for UUID(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (serverManager._clientConnections != (NSMutableDictionary *)-1)
    swift_once(&serverManager._clientConnections, one-time initialization function for shared);
  v17 = a4 + 16;
  v18 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v18, (uint64_t)static MOAngelLogger.shared);
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, v13);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc(12, -1);
    v41 = a8;
    v23 = (uint8_t *)v22;
    v24 = swift_slowAlloc(32, -1);
    v39 = a4 + 16;
    v25 = v24;
    v48[0] = v24;
    v40 = a5;
    *(_DWORD *)v23 = 136315138;
    HIDWORD(v38) = a6;
    v26 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v27 = dispatch thunk of CustomStringConvertible.description.getter(v13, v26);
    v29 = v28;
    v45 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v28, v48);
    LOBYTE(a6) = BYTE4(v38);
    a5 = v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v23 + 4);
    v30 = swift_bridgeObjectRelease(v29);
    (*(void (**)(char *, uint64_t, __n128))(v14 + 8))(v16, v13, v30);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "[MOEventBundleStore.failedResources] back on queue, id=%s", v23, 0xCu);
    swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
    v31 = v25;
    v17 = v39;
    swift_slowDealloc(v31, -1, -1);
    v32 = v23;
    a8 = v41;
    swift_slowDealloc(v32, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }

  v33 = (_QWORD *)(v43 + 16);
  if (v44)
  {
    v34 = v44;
    v35 = (void *)HKWorkout.distanceQuantityTypeForWorkoutType()();
    if (v35)
    {

      if ((a6 & 1) != 0)
      {
        swift_beginAccess(v17, v48, 33, 0);
        specialized Set._Variant.insert(_:)(&v45, a5);
        swift_endAccess(v48);
      }
    }

  }
  else
  {
    v36 = (_BYTE *)(v42 + 16);
    swift_beginAccess(v42 + 16, v48, 1, 0);
    *v36 = 1;
    swift_beginAccess(v17, &v45, 33, 0);
    specialized Set._Variant.insert(_:)(&v47, a5);
    swift_endAccess(&v45);
  }
  v37 = swift_beginAccess(v33, &v45, 1, 0);
  if (__OFADD__(*v33, 1))
  {
    __break(1u);
  }
  else
  {
    ++*v33;
    a8(v37);
  }
}

double closure #3 in MOEventBundleStore._failedResourcesAsync(resources:completion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint8_t *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  void *v53;
  id v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  double result;
  uint64_t v64;
  uint8_t *v65;
  uint64_t (*v66)(char *, uint64_t, uint64_t);
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t aBlock[5];
  uint64_t v84;

  v74 = a6;
  v75 = a8;
  v69 = a5;
  v70 = a7;
  v72 = a3;
  v73 = a4;
  v71 = a1;
  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v80 = *(_QWORD *)(v9 - 8);
  v81 = v9;
  __chkstk_darwin(v9);
  v79 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v77 = *(_QWORD *)(v11 - 8);
  v78 = v11;
  __chkstk_darwin(v11);
  v76 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UUID(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  v16 = __chkstk_darwin(v13);
  v68 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v64 - v17;
  if (serverManager._clientConnections != (NSMutableDictionary *)-1)
    swift_once(&serverManager._clientConnections, one-time initialization function for shared);
  v19 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v19, (uint64_t)static MOAngelLogger.shared);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v21 = v20(v18, a2, v13);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = swift_slowAlloc(12, -1);
    v66 = v20;
    v25 = (uint8_t *)v24;
    v26 = swift_slowAlloc(32, -1);
    v67 = a2;
    v27 = v26;
    aBlock[0] = v26;
    *(_DWORD *)v25 = 136315138;
    v65 = v25 + 4;
    v28 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v29 = dispatch thunk of CustomStringConvertible.description.getter(v13, v28);
    v31 = v30;
    v82 = (_QWORD *)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v30, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v82, aBlock, v65);
    v32 = swift_bridgeObjectRelease(v31);
    (*(void (**)(char *, uint64_t, __n128))(v14 + 8))(v18, v13, v32);
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "[MOEventBundleStore.failedResources] returning from HK for state of mind, id=%s", v25, 0xCu);
    swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
    v33 = v27;
    a2 = v67;
    swift_slowDealloc(v33, -1, -1);
    v34 = v25;
    v20 = v66;
    swift_slowDealloc(v34, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
  }

  if (one-time initialization token for defaultQueue != -1)
    swift_once(&one-time initialization token for defaultQueue, one-time initialization function for defaultQueue);
  v67 = static MOEventBundleStore.defaultQueue;
  v35 = v68;
  v20(v68, a2, v13);
  v36 = *(unsigned __int8 *)(v14 + 80);
  v37 = (v36 + 16) & ~v36;
  v38 = (v15 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  v66 = (uint64_t (*)(char *, uint64_t, uint64_t))v13;
  v39 = v14;
  v40 = (v38 + 15) & 0xFFFFFFFFFFFFFFF8;
  v41 = (v40 + 15) & 0xFFFFFFFFFFFFFFF8;
  v42 = (v41 + 15) & 0xFFFFFFFFFFFFFFF8;
  v43 = (v42 + 15) & 0xFFFFFFFFFFFFFFF8;
  v44 = (v43 + 15) & 0xFFFFFFFFFFFFFFF8;
  v45 = swift_allocObject(&unk_1001EB578, v44 + 16, v36 | 7);
  (*(void (**)(uint64_t, char *, uint64_t (*)(char *, uint64_t, uint64_t)))(v39 + 32))(v45 + v37, v35, v66);
  v47 = v71;
  v46 = v72;
  *(_QWORD *)(v45 + v38) = v71;
  *(_QWORD *)(v45 + v40) = v46;
  v49 = v73;
  v48 = v74;
  *(_QWORD *)(v45 + v41) = v73;
  v50 = v70;
  *(_QWORD *)(v45 + v42) = v69;
  *(_QWORD *)(v45 + v43) = v48;
  v51 = (_QWORD *)(v45 + v44);
  v52 = v75;
  *v51 = v50;
  v51[1] = v52;
  aBlock[4] = (uint64_t)partial apply for closure #1 in closure #3 in MOEventBundleStore._failedResourcesAsync(resources:completion:);
  v84 = v45;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = (uint64_t)&block_descriptor_108;
  v53 = _Block_copy(aBlock);
  v54 = v47;
  swift_retain(v46);
  swift_retain(v49);
  swift_retain(v48);
  swift_retain(v52);
  v55 = v76;
  static DispatchQoS.unspecified.getter(v56);
  v82 = _swiftEmptyArrayStorage;
  v57 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v58 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  v59 = lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  v60 = v79;
  v61 = v58;
  v62 = v81;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v82, v61, v59, v81, v57);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v55, v60, v53);
  _Block_release(v53);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v60, v62);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v55, v78);
  *(_QWORD *)&result = swift_release(v84).n128_u64[0];
  return result;
}

void closure #1 in closure #3 in MOEventBundleStore._failedResourcesAsync(resources:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(__n128), uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  __n128 v27;
  uint8_t *v28;
  _QWORD *v29;
  uint64_t v30;
  _BYTE *v31;
  __n128 v32;
  _QWORD v33[2];
  void (*v34)(__n128);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[3];

  v37 = a2;
  v38 = a6;
  v35 = a4;
  v36 = a5;
  v12 = type metadata accessor for UUID(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (serverManager._clientConnections != (NSMutableDictionary *)-1)
    swift_once(&serverManager._clientConnections, one-time initialization function for shared);
  v16 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v16, (uint64_t)static MOAngelLogger.shared);
  v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc(12, -1);
    v33[0] = a3;
    v21 = (uint8_t *)v20;
    v22 = swift_slowAlloc(32, -1);
    v42[0] = v22;
    v33[1] = a8;
    v34 = a7;
    *(_DWORD *)v21 = 136315138;
    v23 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v24 = dispatch thunk of CustomStringConvertible.description.getter(v12, v23);
    v26 = v25;
    v39 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v25, v42);
    a7 = v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40, v21 + 4);
    v27 = swift_bridgeObjectRelease(v26);
    (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v27);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "[MOEventBundleStore.failedResources] back on queue for state of mind, id=%s", v21, 0xCu);
    swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    v28 = v21;
    a3 = v33[0];
    swift_slowDealloc(v28, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }

  v29 = (_QWORD *)(v38 + 16);
  if (!v37)
  {
    v30 = v35 + 16;
    v31 = (_BYTE *)(a3 + 16);
    swift_beginAccess(v31, v42, 1, 0);
    *v31 = 1;
    swift_beginAccess(v30, &v39, 33, 0);
    specialized Set._Variant.insert(_:)(&v41, v36);
    swift_endAccess(&v39);
  }
  v32 = swift_beginAccess(v29, &v39, 1, 0);
  if (__OFADD__(*v29, 1))
  {
    __break(1u);
  }
  else
  {
    ++*v29;
    a7(v32);
  }
}

_QWORD *static MOEventBundleStore.filterBundlesForPublicUI(presentationDetails:bundles:)(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;

  v3 = a3;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain(a3);
    return (_QWORD *)v3;
  }
  if (!((unint64_t)a3 >> 62))
  {
    v4 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (_QWORD *)swift_bridgeObjectRetain(a3);
    if (v4)
      goto LABEL_4;
LABEL_19:
    swift_bridgeObjectRelease(v3);
    return _swiftEmptyArrayStorage;
  }
  if (a3 < 0)
    v12 = a3;
  else
    v12 = a3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a3);
  result = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v12);
  v4 = (uint64_t)result;
  if (!result)
    goto LABEL_19;
LABEL_4:
  if (v4 >= 1)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
      else
        v9 = *(id *)(v3 + 8 * i + 32);
      v10 = v9;
      v11 = objc_msgSend(v9, "interfaceType");
      if (v11 == (id)11)
      {

      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v11);
        v7 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v7);
        v8 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v10);
        specialized ContiguousArray._endMutation()(v8);
      }
    }
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t MOEventBundleStore.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  v1 = v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__allBundles;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__privateUIBundles, v2);
  v3(v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__publicUIBundles, v2);
  v4 = v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__isLoading;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_latestRawBundles));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_sourceThirdPartyBundleIds));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_failedResources));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_pendingHandlers));

  return v0;
}

double MOEventBundleStore.__deallocating_deinit()
{
  uint64_t v0;
  double result;

  MOEventBundleStore.deinit();
  *(_QWORD *)&result = swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52)).n128_u64[0];
  return result;
}

uint64_t MOEventBundleStore.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v0 + 16) = 0xD000000000000029;
  *(_QWORD *)(v0 + 24) = 0x80000001001A6050;
  v9 = v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__allBundles;
  v18 = _swiftEmptyArrayStorage;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [MOEventBundleWithAsset]);
  Published.init(initialValue:)(&v18, v10);
  v11 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
  v11(v9, v8, v5);
  v12 = v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__privateUIBundles;
  v18 = _swiftEmptyArrayStorage;
  Published.init(initialValue:)(&v18, v10);
  v11(v12, v8, v5);
  v13 = v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__publicUIBundles;
  v18 = _swiftEmptyArrayStorage;
  Published.init(initialValue:)(&v18, v10);
  v11(v13, v8, v5);
  v14 = v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__isLoading;
  LOBYTE(v18) = 0;
  Published.init(initialValue:)(&v18, &type metadata for Bool);
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v14, v4, v1);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_isFirstRefresh) = 1;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_isRunningSoftRefresh) = 0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_isRunningDatabaseUpgrade) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_latestRawBundles) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_sourceThirdPartyBundleIds) = &_swiftEmptySetSingleton;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_failedResources) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_pendingHandlers) = _swiftEmptyArrayStorage;
  v15 = OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_promptManager;
  *(_QWORD *)(v0 + v15) = objc_msgSend(objc_allocWithZone((Class)MOPromptManager), "init");
  return v0;
}

uint64_t protocol witness for ObservableObject.objectWillChange.getter in conformance MOEventBundleStore@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for MOEventBundleStore(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

BOOL MOEventBundle.hasPhotos.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  _BOOL8 v11;
  BOOL v12;
  uint64_t v13;

  v1 = objc_msgSend(v0, "resources");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MOResource, MOResource_ptr);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  if ((unint64_t)v4 >> 62)
    goto LABEL_17;
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v4);
  for (; v5; v5 = _CocoaArrayWrapper.endIndex.getter(v13))
  {
    v6 = 4;
    while (1)
    {
      v7 = (v4 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, v4)
         : *(id *)(v4 + 8 * v6);
      v8 = v7;
      v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
        break;
      v10 = objc_msgSend(v7, "type");

      v12 = v10 == (id)2;
      v11 = v10 == (id)2;
      ++v6;
      v12 = v12 || v9 == v5;
      if (v12)
        goto LABEL_22;
    }
    __break(1u);
LABEL_17:
    if (v4 < 0)
      v13 = v4;
    else
      v13 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
  }
  v11 = 0;
LABEL_22:
  swift_bridgeObjectRelease_n(v4, 2);
  return v11;
}

BOOL MOEventBundle.accepted.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  _QWORD v7[2];
  _QWORD v8[5];
  __int128 v9;
  __int128 v10;

  v1 = objc_msgSend(v0, "rankingDictionary");
  if (!v1)
  {
    v9 = 0u;
    v10 = 0u;
LABEL_11:
    outlined destroy of Any?((uint64_t)&v9, &demangling cache variable for type metadata for Any?);
    return 0;
  }
  v2 = v1;
  v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v7[0] = 0x43676E696B6E6172;
  v7[1] = 0xEF79726F67657461;
  AnyHashable.init<A>(_:)(v8, v7, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v3 + 16) && (v4 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v8), (v5 & 1) != 0))
  {
    outlined init with copy of Any(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)&v9);
  }
  else
  {
    v9 = 0u;
    v10 = 0u;
  }
  outlined destroy of AnyHashable((uint64_t)v8);
  swift_bridgeObjectRelease(v3);
  if (!*((_QWORD *)&v10 + 1))
    goto LABEL_11;
  return (swift_dynamicCast(v8, &v9, (char *)&type metadata for Any + 8, &type metadata for UInt, 6) & 1) != 0
      && v8[0] != 3;
}

uint64_t MOEvent.interfaceCategory.getter()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, "category");
  if (v1 == (id)5 || v1 == (id)17)
    return 5;
  else
    return (uint64_t)objc_msgSend(v0, "category");
}

uint64_t sub_10012DB18@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 184))();
  *a2 = result;
  return result;
}

uint64_t sub_10012DB48(_QWORD *a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 192);
  v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

uint64_t sub_10012DB78@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 232))();
  *a2 = result;
  return result;
}

uint64_t sub_10012DBA8(_QWORD *a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 240);
  v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

uint64_t sub_10012DBD8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 280))();
  *a2 = result;
  return result;
}

uint64_t sub_10012DC08(_QWORD *a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 288);
  v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

uint64_t sub_10012DC38@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 328))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_10012DC6C(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 336))(*a1);
}

uint64_t sub_10012DC98()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[6]);
  if (v0[7])
    swift_release(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

double partial apply for closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:)()
{
  uint64_t v0;

  return closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:)(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
}

uint64_t block_copy_helper_29(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_29(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10012DD04()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t partial apply for closure #1 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:)()
{
  uint64_t v0;

  return closure #1 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:)(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_10012DD44()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  }
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10012DD74()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10012DD98()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

double partial apply for closure #1 in MOEventBundleStore._failedResources(resources:)()
{
  uint64_t v0;

  return closure #1 in MOEventBundleStore._failedResources(resources:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t outlined copy of MOEventBundleStore.ResourceValidationResult?(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    swift_bridgeObjectRetain(result);
    return swift_bridgeObjectRetain(a3);
  }
  return result;
}

uint64_t sub_10012DE0C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10012DE30()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10012DE40()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10012DE50()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[6]);
  swift_bridgeObjectRelease(v0[7]);
  swift_release(v0[8]);
  swift_release(v0[9]);
  swift_release(v0[11]);
  swift_release(v0[12]);
  return swift_deallocObject(v0, 104, 7);
}

double partial apply for closure #1 in MOEventBundleStore._failedResourcesAsync(resources:completion:)()
{
  uint64_t v0;

  return closure #1 in MOEventBundleStore._failedResourcesAsync(resources:completion:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(unsigned __int8 *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD **)(v0 + 72), *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
}

uint64_t sub_10012DEF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  swift_release(*(_QWORD *)(v0 + v7));
  swift_release(*(_QWORD *)(v0 + v8));
  swift_release(*(_QWORD *)(v0 + v9 + 8));
  return swift_deallocObject(v0, v9 + 16, v5);
}

double partial apply for closure #3 in MOEventBundleStore._failedResourcesAsync(resources:completion:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v3 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  return closure #3 in MOEventBundleStore._failedResourcesAsync(resources:completion:)(a1, v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + v6), *(_QWORD *)(v1 + v7), *(_QWORD *)(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_10012E038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 31) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  swift_release(*(_QWORD *)(v0 + v7));
  swift_release(*(_QWORD *)(v0 + v8));
  swift_release(*(_QWORD *)(v0 + v9 + 8));
  return swift_deallocObject(v0, v9 + 16, v5);
}

double partial apply for closure #2 in MOEventBundleStore._failedResourcesAsync(resources:completion:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  return closure #2 in MOEventBundleStore._failedResourcesAsync(resources:completion:)(a1, v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + v6), *(_QWORD *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v1 + ((v6 + 31) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v6 + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v6 + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_10012E18C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 208))();
}

uint64_t sub_10012E1B8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 256))();
}

uint64_t sub_10012E1E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 304))();
}

uint64_t sub_10012E210(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 352))();
}

uint64_t sub_10012E23C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 376))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_10012E270(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 384))(*a1);
}

uint64_t sub_10012E29C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 400))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_10012E2D0(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 408))(*a1);
}

uint64_t sub_10012E2FC@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 424))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_10012E330(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 432))(*a1);
}

uint64_t sub_10012E35C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 448))();
  *a2 = result;
  return result;
}

uint64_t sub_10012E38C(_QWORD *a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 456);
  v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

uint64_t sub_10012E3BC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 472))();
  *a2 = result;
  return result;
}

uint64_t sub_10012E3EC(_QWORD *a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 480);
  v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

uint64_t sub_10012E41C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 496))();
  *a2 = result;
  return result;
}

uint64_t sub_10012E44C(_QWORD *a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 504);
  v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

uint64_t sub_10012E47C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 520))();
  *a2 = result;
  return result;
}

uint64_t sub_10012E4AC(_QWORD *a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 528);
  v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

uint64_t ObjC metadata update function for MOEventBundleStore()
{
  return type metadata accessor for MOEventBundleStore(0);
}

uint64_t type metadata accessor for MOEventBundleStore(uint64_t a1)
{
  uint64_t result;

  result = type metadata singleton initialization cache for MOEventBundleStore;
  if (!type metadata singleton initialization cache for MOEventBundleStore)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MOEventBundleStore);
  return result;
}

void type metadata completion function for MOEventBundleStore(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;

  v6 = &unk_1001A2E68;
  type metadata accessor for Published<[MOEventBundleWithAsset]>(319);
  if (v3 <= 0x3F)
  {
    v7 = *(_QWORD *)(v2 - 8) + 64;
    v8 = v7;
    v9 = v7;
    type metadata accessor for Published<Bool>();
    if (v5 <= 0x3F)
    {
      v10 = *(_QWORD *)(v4 - 8) + 64;
      v11 = &unk_1001A2E80;
      v12 = &unk_1001A2E80;
      v13 = &unk_1001A2E80;
      v14 = (char *)&value witness table for Builtin.BridgeObject + 64;
      v15 = (char *)&value witness table for Builtin.BridgeObject + 64;
      v16 = (char *)&value witness table for Builtin.BridgeObject + 64;
      v17 = (char *)&value witness table for Builtin.BridgeObject + 64;
      v18 = (char *)&value witness table for Builtin.UnknownObject + 64;
      swift_updateClassMetadata2(a1, 256, 13, &v6, a1 + 80);
    }
  }
}

void type metadata accessor for Published<[MOEventBundleWithAsset]>(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!lazy cache variable for type metadata for Published<[MOEventBundleWithAsset]>)
  {
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [MOEventBundleWithAsset]);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&lazy cache variable for type metadata for Published<[MOEventBundleWithAsset]>);
  }
}

uint64_t destroy for MOEventBundleStore.ResourceValidationResult(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  return swift_bridgeObjectRelease(a1[2]);
}

uint64_t initializeBufferWithCopyOfBuffer for MOEventBundleStore.ResourceValidationResult(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  v4 = a2[2];
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t *assignWithCopy for MOEventBundleStore.ResourceValidationResult(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  v6 = a2[2];
  v7 = a1[2];
  a1[2] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t *assignWithTake for MOEventBundleStore.ResourceValidationResult(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v4);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  v5 = a1[2];
  a1[2] = a2[2];
  swift_bridgeObjectRelease(v5);
  return a1;
}

ValueMetadata *type metadata accessor for MOEventBundleStore.ResourceValidationResult()
{
  return &type metadata for MOEventBundleStore.ResourceValidationResult;
}

uint64_t sub_10012E76C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 31) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_release(*(_QWORD *)(v0 + v7));
  swift_release(*(_QWORD *)(v0 + v8));
  swift_release(*(_QWORD *)(v0 + v9));
  swift_release(*(_QWORD *)(v0 + v10 + 8));
  return swift_deallocObject(v0, v10 + 16, v5);
}

void partial apply for closure #1 in closure #2 in MOEventBundleStore._failedResourcesAsync(resources:completion:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  closure #1 in closure #2 in MOEventBundleStore._failedResourcesAsync(resources:completion:)(v0 + v2, *(void **)(v0 + v3), *(_QWORD *)(v0 + v4), *(_QWORD *)(v0 + v5), *(_QWORD *)(v0 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v0 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v0 + ((v5 + 31) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(__n128))(v0 + ((((v5 + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_10012E8CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_release(*(_QWORD *)(v0 + v7));
  swift_release(*(_QWORD *)(v0 + v8));
  swift_release(*(_QWORD *)(v0 + v9));
  swift_release(*(_QWORD *)(v0 + v10 + 8));
  return swift_deallocObject(v0, v10 + 16, v5);
}

void partial apply for closure #1 in closure #3 in MOEventBundleStore._failedResourcesAsync(resources:completion:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  closure #1 in closure #3 in MOEventBundleStore._failedResourcesAsync(resources:completion:)(v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v4), *(_QWORD *)(v0 + v5), *(_QWORD *)(v0 + v6), *(_QWORD *)(v0 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(__n128))(v0 + ((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_10012EA1C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double partial apply for closure #1 in closure #1 in MOEventBundleStore._failedResources(resources:)(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;

  return closure #1 in closure #1 in MOEventBundleStore._failedResources(resources:)(a1, a2, a3, *(dispatch_group_t *)(v3 + 16), *(_QWORD **)(v3 + 24));
}

uint64_t outlined consume of MOEventBundleStore.ResourceValidationResult?(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    swift_bridgeObjectRelease(result);
    return swift_bridgeObjectRelease(a3);
  }
  return result;
}

uint64_t sub_10012EA7C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@guaranteed [MOEventBundle], @guaranteed Set<String>?) -> ()(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 16))(*a1, *a2);
}

unint64_t specialized static MOEventBundleStore.settingToSourceTypeMapping.getter()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  unint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  void *v31;
  _BYTE v32[168];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(MOSetting, [MOEventBundleSourceType])>);
  inited = swift_initStackObject(v0, v32);
  *(_OWORD *)(inited + 16) = xmmword_1001A2EC0;
  *(_QWORD *)(inited + 32) = 1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MOEventBundleSourceType>);
  v3 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v3 + 16) = xmmword_10019ED20;
  v31 = (void *)MOEventBundleSourceTypeActivity;
  *(_QWORD *)(v3 + 32) = MOEventBundleSourceTypeActivity;
  *(_QWORD *)(inited + 40) = v3;
  *(_QWORD *)(inited + 48) = 2;
  v4 = swift_allocObject(v2, 48, 7);
  *(_OWORD *)(v4 + 16) = xmmword_10019EEE0;
  v5 = (void *)MOEventBundleSourceTypeMedia;
  v6 = (void *)MOEventBundleSourceTypeThirdPartyMedia;
  *(_QWORD *)(v4 + 32) = MOEventBundleSourceTypeMedia;
  *(_QWORD *)(v4 + 40) = v6;
  *(_QWORD *)(inited + 56) = v4;
  *(_QWORD *)(inited + 64) = 3;
  v7 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_10019ED20;
  v8 = (void *)MOEventBundleSourceTypeContact;
  *(_QWORD *)(v7 + 32) = MOEventBundleSourceTypeContact;
  *(_QWORD *)(inited + 72) = v7;
  *(_QWORD *)(inited + 80) = 4;
  v9 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v9 + 16) = xmmword_10019ED20;
  v10 = (void *)MOEventBundleSourceTypePhoto;
  *(_QWORD *)(v9 + 32) = MOEventBundleSourceTypePhoto;
  *(_QWORD *)(inited + 88) = v9;
  *(_QWORD *)(inited + 96) = 5;
  v11 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v11 + 16) = xmmword_10019ED20;
  v12 = (void *)MOEventBundleSourceTypeVisitLocation;
  *(_QWORD *)(v11 + 32) = MOEventBundleSourceTypeVisitLocation;
  *(_QWORD *)(inited + 104) = v11;
  *(_QWORD *)(inited + 112) = 6;
  v13 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v13 + 16) = xmmword_10019ED20;
  v14 = (void *)MOEventBundleSourceTypePeopleContext;
  *(_QWORD *)(v13 + 32) = MOEventBundleSourceTypePeopleContext;
  *(_QWORD *)(inited + 120) = v13;
  *(_QWORD *)(inited + 128) = 9;
  v15 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v15 + 16) = xmmword_10019ED20;
  v16 = (void *)MOEventBundleSourceTypeStateOfMind;
  *(_QWORD *)(v15 + 32) = MOEventBundleSourceTypeStateOfMind;
  *(_QWORD *)(inited + 136) = v15;
  *(_QWORD *)(inited + 144) = 10;
  v17 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v17 + 16) = xmmword_10019ED20;
  v18 = (void *)MOEventBundleSourceTypeReflectionPrompt;
  *(_QWORD *)(v17 + 32) = MOEventBundleSourceTypeReflectionPrompt;
  *(_QWORD *)(inited + 152) = v17;
  v19 = specialized Dictionary.init(dictionaryLiteral:)((_QWORD *)inited);
  swift_setDeallocating(inited);
  v20 = v31;
  v21 = v5;
  v22 = v6;
  v23 = v8;
  v24 = v10;
  v25 = v12;
  v26 = v14;
  v27 = v16;
  v28 = v18;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (MOSetting, [MOEventBundleSourceType]));
  swift_arrayDestroy(inited + 32, 8, v29);
  return v19;
}

void specialized MOEventBundleStore.allowedSourceTypes.getter()
{
  id v0;
  unint64_t v1;
  unint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int64_t v8;
  char **v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  int64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  unint64_t v25;
  _QWORD v26[2];

  v26[1] = &_swiftEmptySetSingleton;
  v0 = objc_msgSend((id)objc_opt_self(MOSettingsManager), "sharedInstance");
  v1 = specialized static MOEventBundleStore.settingToSourceTypeMapping.getter();
  v2 = v1;
  v3 = 0;
  v4 = 1 << *(_BYTE *)(v1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v1 + 64;
  v7 = v5 & *(_QWORD *)(v1 + 64);
  v8 = (unint64_t)(v4 + 63) >> 6;
  v9 = &selRef_genericAvatarFor_pointSize_completion_;
  v25 = v1;
  if (v7)
    goto LABEL_6;
LABEL_7:
  v12 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v12 < v8)
    {
      v13 = *(_QWORD *)(v6 + 8 * v12);
      ++v3;
      if (v13)
        goto LABEL_20;
      v3 = v12 + 1;
      if (v12 + 1 >= v8)
        goto LABEL_27;
      v13 = *(_QWORD *)(v6 + 8 * v3);
      if (v13)
        goto LABEL_20;
      v3 = v12 + 2;
      if (v12 + 2 >= v8)
        goto LABEL_27;
      v13 = *(_QWORD *)(v6 + 8 * v3);
      if (v13)
      {
LABEL_20:
        v7 = (v13 - 1) & v13;
        for (i = __clz(__rbit64(v13)) + (v3 << 6); ; i = v10 | (v3 << 6))
        {
          v15 = 8 * i;
          v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v15);
          if (objc_msgSend(v0, v9[487], *(_QWORD *)(*(_QWORD *)(v2 + 48) + v15), swift_bridgeObjectRetain(v16).n128_f64[0])&& (v17 = *(_QWORD *)(v16 + 16)) != 0)
          {
            v18 = v0;
            v19 = v8;
            v20 = v6;
            swift_bridgeObjectRetain(v16);
            v21 = 0;
            do
            {
              v22 = *(void **)(v16 + 8 * v21++ + 32);
              v23 = v22;
              specialized Set._Variant.insert(_:)(v26, v23);
              v24 = (void *)v26[0];

            }
            while (v17 != v21);
            swift_bridgeObjectRelease_n(v16, 2);
            v6 = v20;
            v8 = v19;
            v0 = v18;
            v2 = v25;
            v9 = &selRef_genericAvatarFor_pointSize_completion_;
            if (!v7)
              goto LABEL_7;
          }
          else
          {
            swift_bridgeObjectRelease(v16);
            if (!v7)
              goto LABEL_7;
          }
LABEL_6:
          v10 = __clz(__rbit64(v7));
          v7 &= v7 - 1;
        }
      }
      v14 = v12 + 3;
      if (v14 < v8)
      {
        v13 = *(_QWORD *)(v6 + 8 * v14);
        if (v13)
        {
          v3 = v14;
          goto LABEL_20;
        }
        while (1)
        {
          v3 = v14 + 1;
          if (__OFADD__(v14, 1))
            goto LABEL_29;
          if (v3 >= v8)
            break;
          v13 = *(_QWORD *)(v6 + 8 * v3);
          ++v14;
          if (v13)
            goto LABEL_20;
        }
      }
    }
LABEL_27:

    swift_release(v2);
    return;
  }
  __break(1u);
LABEL_29:
  __break(1u);
}

double specialized MOEventBundleStore._fetchAvailableBundles(presentationDetails:completionHandler:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  Class isa;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  _QWORD *v16;
  double result;
  _QWORD v18[5];
  _QWORD *v19;

  v1 = v0;
  if (serverManager._clientConnections != (NSMutableDictionary *)-1)
    swift_once(&serverManager._clientConnections, one-time initialization function for shared);
  v2 = type metadata accessor for Logger(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)static MOAngelLogger.shared);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "[MOEventBundleStore] calling fetchEventBundles", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = objc_msgSend((id)objc_opt_self(MOConfiguration), "sharedInstance");
  objc_msgSend(v7, "reset");

  v8 = swift_allocObject(&unk_1001EB180, 24, 7);
  swift_weakInit(v8 + 16);
  v9 = *(void **)(v1 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_promptManager);
  specialized MOEventBundleStore.allowedSourceTypes.getter();
  v11 = v10;
  type metadata accessor for MOEventBundleSourceType(0);
  lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes(&lazy protocol witness table cache variable for type MOEventBundleSourceType and conformance MOEventBundleSourceType, (uint64_t (*)(uint64_t))type metadata accessor for MOEventBundleSourceType, (uint64_t)&protocol conformance descriptor for MOEventBundleSourceType);
  isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v11);
  v13 = swift_allocObject(&unk_1001EB180, 24, 7);
  swift_weakInit(v13 + 16);
  v14 = (_QWORD *)swift_allocObject(&unk_1001EB758, 40, 7);
  v14[2] = v13;
  v14[3] = partial apply for closure #1 in MOEventBundleStore._fetchAvailableBundles(presentationDetails:completionHandler:);
  v14[4] = v8;
  v18[4] = partial apply for closure #2 in MOEventBundleStore._fetchAvailableBundles(presentationDetails:completionHandler:);
  v19 = v14;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = thunk for @escaping @callee_guaranteed (@guaranteed NSNumber?, @guaranteed Error?) -> ();
  v18[3] = &block_descriptor_147;
  v15 = _Block_copy(v18);
  v16 = v19;
  swift_retain(v8);
  objc_msgSend(v9, "fetchEventBundlesWithAllowedSourceTypes:respectOnboardingDates:respectLearnFromThisApp:handler:", isa, 1, 1, v15, swift_release(v16).n128_f64[0]);
  _Block_release(v15);

  *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  return result;
}

uint64_t sub_10012F1D8()
{
  _QWORD *v0;

  swift_release(v0[2]);
  if (v0[3])
    swift_release(v0[4]);
  swift_release(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

void partial apply for closure #1 in closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:)(a1, *(_QWORD *)(v1 + 16), *(void (**)(_QWORD))(v1 + 24));
}

uint64_t partial apply for closure #2 in closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return closure #2 in closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:)(a1, a2, *(uint64_t (**)(uint64_t))(v2 + 16));
}

uint64_t partial apply for closure #1 in closure #1 in closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:)()
{
  uint64_t v0;

  return closure #1 in closure #1 in closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:)(v0);
}

void partial apply for closure #2 in closure #1 in closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:)(uint64_t a1)
{
  uint64_t v1;

  closure #2 in closure #1 in closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:)(a1, *(_QWORD *)(v1 + 16), *(void (**)(void))(v1 + 24), *(_QWORD *)(v1 + 32));
}

double partial apply for closure #1 in MOEventBundleStore._fetchAvailableBundles(presentationDetails:completionHandler:)(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in MOEventBundleStore._fetchAvailableBundles(presentationDetails:completionHandler:)(a1, v1);
}

double partial apply for closure #2 in MOEventBundleStore._fetchAvailableBundles(presentationDetails:completionHandler:)(void *a1, uint64_t a2)
{
  uint64_t v2;

  return closure #2 in MOEventBundleStore._fetchAvailableBundles(presentationDetails:completionHandler:)(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(void *))(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t objectdestroy_129Tm()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double partial apply for closure #1 in closure #2 in MOEventBundleStore._fetchAvailableBundles(presentationDetails:completionHandler:)(void *a1, uint64_t a2)
{
  uint64_t v2;

  return closure #1 in closure #2 in MOEventBundleStore._fetchAvailableBundles(presentationDetails:completionHandler:)(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(id))(v2 + 24));
}

uint64_t *CanvasAssetAccessoryView.borderColor.unsafeMutableAddressor()
{
  if (one-time initialization token for borderColor != -1)
    swift_once(&one-time initialization token for borderColor, one-time initialization function for borderColor);
  return &static CanvasAssetAccessoryView.borderColor;
}

void one-time initialization function for unselectedConfig()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "systemGrayColor");
  v1 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithHierarchicalColor:", v0);

  static CanvasAssetAccessoryView.unselectedConfig = (uint64_t)v1;
}

uint64_t *CanvasAssetAccessoryView.unselectedConfig.unsafeMutableAddressor()
{
  if (one-time initialization token for unselectedConfig != -1)
    swift_once(&one-time initialization token for unselectedConfig, one-time initialization function for unselectedConfig);
  return &static CanvasAssetAccessoryView.unselectedConfig;
}

id static CanvasAssetAccessoryView.unselectedConfig.getter()
{
  return default argument 2 of MOSuggestionWorkoutIconGlyphView.init(image:glyphBackgroundColor:glyphTintColor:)(&one-time initialization token for unselectedConfig, (id *)&static CanvasAssetAccessoryView.unselectedConfig);
}

void *CanvasAssetAccessoryView.selectedSymbol.unsafeMutableAddressor()
{
  return &static CanvasAssetAccessoryView.selectedSymbol;
}

unint64_t static CanvasAssetAccessoryView.selectedSymbol.getter()
{
  return 0xD000000000000015;
}

const char *CanvasAssetAccessoryView.unselectedSymbol.unsafeMutableAddressor()
{
  return "circle.fill";
}

uint64_t static CanvasAssetAccessoryView.unselectedSymbol.getter()
{
  return 0x662E656C63726963;
}

void one-time initialization function for borderColor()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  v1 = objc_msgSend(v0, "CGColor");

  static CanvasAssetAccessoryView.borderColor = (uint64_t)v1;
}

id static CanvasAssetAccessoryView.borderColor.getter()
{
  return default argument 2 of MOSuggestionWorkoutIconGlyphView.init(image:glyphBackgroundColor:glyphTintColor:)(&one-time initialization token for borderColor, (id *)&static CanvasAssetAccessoryView.borderColor);
}

id one-time initialization function for symbolTintColor()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  static CanvasAssetAccessoryView.symbolTintColor = (uint64_t)result;
  return result;
}

uint64_t *CanvasAssetAccessoryView.symbolTintColor.unsafeMutableAddressor()
{
  if (one-time initialization token for symbolTintColor != -1)
    swift_once(&one-time initialization token for symbolTintColor, one-time initialization function for symbolTintColor);
  return &static CanvasAssetAccessoryView.symbolTintColor;
}

id static CanvasAssetAccessoryView.symbolTintColor.getter()
{
  return default argument 2 of MOSuggestionWorkoutIconGlyphView.init(image:glyphBackgroundColor:glyphTintColor:)(&one-time initialization token for symbolTintColor, (id *)&static CanvasAssetAccessoryView.symbolTintColor);
}

uint64_t CanvasAssetAccessoryView.isSelected.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MomentsUIService24CanvasAssetAccessoryView_isSelected);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService24CanvasAssetAccessoryView_isSelected, v3, 0, 0);
  return *v1;
}

uint64_t CanvasAssetAccessoryView.isSelected.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC16MomentsUIService24CanvasAssetAccessoryView_isSelected);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*CanvasAssetAccessoryView.isSelected.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService24CanvasAssetAccessoryView_isSelected, a1, 33, 0);
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

id CanvasAssetAccessoryView.keyColor.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MomentsUIService24CanvasAssetAccessoryView_keyColor);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService24CanvasAssetAccessoryView_keyColor, v3, 0, 0);
  return *v1;
}

void CanvasAssetAccessoryView.keyColor.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC16MomentsUIService24CanvasAssetAccessoryView_keyColor);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*CanvasAssetAccessoryView.keyColor.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService24CanvasAssetAccessoryView_keyColor, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id CanvasAssetAccessoryView.accessoryButton.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService24CanvasAssetAccessoryView_accessoryButton);
}

id CanvasAssetAccessoryView.init(frame:)(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  objc_super v16;

  v4[OBJC_IVAR____TtC16MomentsUIService24CanvasAssetAccessoryView_isSelected] = 2;
  v9 = OBJC_IVAR____TtC16MomentsUIService24CanvasAssetAccessoryView_keyColor;
  v10 = (void *)objc_opt_self(UIColor);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "systemBlueColor");
  v12 = OBJC_IVAR____TtC16MomentsUIService24CanvasAssetAccessoryView_accessoryButton;
  v13 = type metadata accessor for MOSuggestionSheetOversizedBoundsButton();
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v13)), "init");

  v16.receiver = v11;
  v16.super_class = (Class)type metadata accessor for CanvasAssetAccessoryView();
  v14 = objc_msgSendSuper2(&v16, "initWithFrame:", a1, a2, a3, a4);
  CanvasAssetAccessoryView.addButton()();

  return v14;
}

uint64_t type metadata accessor for CanvasAssetAccessoryView()
{
  return objc_opt_self(_TtC16MomentsUIService24CanvasAssetAccessoryView);
}

void CanvasAssetAccessoryView.addButton()()
{
  _QWORD *v0;
  char v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  double v7;
  id v8;
  id v9;
  id v10;
  id v11;
  double v12;
  id v13;
  id v14;
  id v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  CGFloat v24;
  id v25;
  id v26;
  id v27;
  double Width;
  id v29;
  id v30;
  double Height;
  id v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;

  v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x68))();
  (*(void (**)(_QWORD))((swift_isaMask & *v0) + 0xA0))((v1 == 2) | (v1 & 1));
  v2 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService24CanvasAssetAccessoryView_accessoryButton);
  v3 = objc_msgSend(v2, "layer");
  if (one-time initialization token for borderColor != -1)
    swift_once(&one-time initialization token for borderColor, one-time initialization function for borderColor);
  objc_msgSend(v3, "setBorderColor:", static CanvasAssetAccessoryView.borderColor);

  v4 = objc_msgSend(v2, "layer");
  objc_msgSend(v4, "setBackgroundColor:", static CanvasAssetAccessoryView.borderColor);

  v5 = objc_msgSend(v2, "layer");
  objc_msgSend(v5, "setBorderWidth:", 0.3);

  v6 = objc_msgSend(v2, "layer");
  objc_msgSend(v0, "frame");
  objc_msgSend(v6, "setCornerRadius:", v7 * 0.5);

  v8 = objc_msgSend(v2, "layer");
  v9 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  v10 = objc_msgSend(v9, "CGColor");

  objc_msgSend(v8, "setShadowColor:", v10);
  v11 = objc_msgSend(v2, "layer");
  LODWORD(v12) = 1041865114;
  objc_msgSend(v11, "setShadowOpacity:", v12);

  v13 = objc_msgSend(v2, "layer");
  objc_msgSend(v13, "setShadowRadius:", 3.0);

  v14 = objc_msgSend(v2, "layer");
  objc_msgSend(v14, "setShadowOffset:", 0.0, 0.0);

  v15 = objc_msgSend(v2, "layer");
  objc_msgSend(v2, "bounds");
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;
  objc_msgSend(v2, "bounds");
  v24 = CGRectGetHeight(v46) * 0.5;
  v25 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:cornerRadius:", v17, v19, v21, v23, v24);
  v26 = objc_msgSend(v25, "CGPath");

  objc_msgSend(v15, "setShadowPath:", v26);
  v27 = objc_msgSend(v2, "layer");
  objc_msgSend(v27, "setShadowPathIsBounds:", 1);

  objc_msgSend(v0, "addSubview:", v2);
  objc_msgSend(v0, "frame");
  Width = CGRectGetWidth(v47);
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v29 = objc_msgSend(v2, "widthAnchor");
  v30 = objc_msgSend(v29, "constraintEqualToConstant:", Width);

  objc_msgSend(v30, "setActive:", 1);
  objc_msgSend(v0, "frame");
  Height = CGRectGetHeight(v48);
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v32 = objc_msgSend(v2, "heightAnchor");
  v33 = objc_msgSend(v32, "constraintEqualToConstant:", Height);

  objc_msgSend(v33, "setActive:", 1);
  v34 = objc_msgSend(v2, "superview");
  if (v34)
  {
    v35 = v34;
    objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v36 = objc_msgSend(v2, "centerYAnchor");
    v37 = objc_msgSend(v35, "centerYAnchor");
    v38 = objc_msgSend(v36, "constraintEqualToAnchor:", v37);

    objc_msgSend(v38, "setConstant:", 0.0);
    v39 = v38;
    objc_msgSend(v39, "setActive:", 1);

  }
  v40 = objc_msgSend(v2, "superview");
  if (v40)
  {
    v45 = v40;
    objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v41 = objc_msgSend(v2, "centerXAnchor");
    v42 = objc_msgSend(v45, "centerXAnchor");
    v43 = objc_msgSend(v41, "constraintEqualToAnchor:", v42);

    objc_msgSend(v43, "setConstant:", 0.0);
    v44 = v43;
    objc_msgSend(v44, "setActive:", 1);

  }
}

Swift::Void __swiftcall CanvasAssetAccessoryView.updateCheckmark(isSelected:)(Swift::Bool isSelected)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t (*v7)(void);
  id v8;
  Class isa;
  id v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  NSString v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  NSString v20;
  id v21;
  void *v22;
  id v23;
  id v24;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v5 = swift_allocObject(v4, 56, 7);
  *(_OWORD *)(v5 + 16) = xmmword_1001A1E50;
  v6 = (void *)objc_opt_self(UIColor);
  *(_QWORD *)(v5 + 32) = objc_msgSend(v6, "whiteColor");
  v7 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0x80);
  *(_QWORD *)(v5 + 40) = v7();
  v8 = objc_msgSend(v6, "whiteColor");
  *(_QWORD *)(v5 + 48) = v8;
  specialized Array._endMutation()(v8);
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIColor, UIColor_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v5);
  v10 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPaletteColors:", isa);

  v11 = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for _UIImageSymbolConfiguration, _UIImageSymbolConfiguration_ptr);
  v12 = objc_msgSend((id)swift_getObjCClassFromMetadata(v11), "configurationPreferringMulticolor");
  v23 = objc_msgSend(v10, "configurationByApplyingConfiguration:", v12);

  v13 = *(void **)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService24CanvasAssetAccessoryView_accessoryButton);
  if (isSelected)
  {
    v14 = v23;
    v15 = String._bridgeToObjectiveC()();
    v16 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v15, v14);

    if (v16)
    {
      v17 = (void *)v7();
      v18 = objc_msgSend(v16, "imageWithTintColor:", v17);

    }
    else
    {
      v18 = 0;
    }
    objc_msgSend(v13, "setImage:forState:", v18, 0, v23);

    v22 = (void *)v7();
    objc_msgSend(v13, "setTintColor:", v22);

  }
  else
  {
    if (one-time initialization token for unselectedConfig != -1)
      swift_once(&one-time initialization token for unselectedConfig, one-time initialization function for unselectedConfig);
    v19 = (id)static CanvasAssetAccessoryView.unselectedConfig;
    v20 = String._bridgeToObjectiveC()();
    v21 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v20, v19, v23);

    objc_msgSend(v13, "setImage:forState:", v21, 0);
    if (one-time initialization token for symbolTintColor != -1)
      swift_once(&one-time initialization token for symbolTintColor, one-time initialization function for symbolTintColor);
    objc_msgSend(v13, "setTintColor:", static CanvasAssetAccessoryView.symbolTintColor);
  }

}

uint64_t CanvasAssetAccessoryView.setTapTarget(target:action:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t v13;

  v4 = *(void **)(v2 + OBJC_IVAR____TtC16MomentsUIService24CanvasAssetAccessoryView_accessoryButton);
  outlined init with copy of Any?(a1, (uint64_t)v12);
  v5 = v13;
  if (v13)
  {
    v6 = __swift_project_boxed_opaque_existential_1(v12, v13);
    v7 = *(_QWORD *)(v5 - 8);
    __chkstk_darwin(v6);
    v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v7 + 16))(v9);
    v10 = _bridgeAnythingToObjectiveC<A>(_:)(v9, v5);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
    __swift_destroy_boxed_opaque_existential_1(v12);
  }
  else
  {
    v10 = 0;
  }
  objc_msgSend(v4, "addTarget:action:forControlEvents:", v10, a2, 64);
  return swift_unknownObjectRelease(v10);
}

id CanvasAssetAccessoryView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CanvasAssetAccessoryView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void specialized CanvasAssetAccessoryView.init(coder:)()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0[OBJC_IVAR____TtC16MomentsUIService24CanvasAssetAccessoryView_isSelected] = 2;
  v1 = OBJC_IVAR____TtC16MomentsUIService24CanvasAssetAccessoryView_keyColor;
  *(_QWORD *)&v0[v1] = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
  v2 = OBJC_IVAR____TtC16MomentsUIService24CanvasAssetAccessoryView_accessoryButton;
  v3 = type metadata accessor for MOSuggestionSheetOversizedBoundsButton();
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v3)), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/CanvasAssetAccessoryView.swift", 47, 2, 27, 0);
  __break(1u);
}

uint64_t sub_100130478@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x68))();
  *a2 = result;
  return result;
}

uint64_t sub_1001304B8(unsigned __int8 *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(_QWORD))((swift_isaMask & **a2) + 0x70))(*a1);
}

uint64_t sub_1001304F4@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x80))();
  *a2 = result;
  return result;
}

uint64_t sub_100130534(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x88))(*a1);
}

_QWORD *_sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSDy16MomentsUIService19MOAssetAndMediaTypeVSiG_AH_Sits5NeverOTg504_s16d11UIService19fghi38VSiACSiIggyod_AC3key_Si5valuetAC_Sits5j129OIegnrzr_TR04_s16a61UIService42MOSuggestionInterstitialListAssetViewModelC32assetf38DictionaryToCountString4dictSSSDyAA015cdE27J0M32G_tFZAG_SitAG_SitXEfU_Tf3nnnpf_nTf1cn_n(uint64_t a1)
{
  int64_t v1;
  _QWORD *result;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v1, 0);
  result = (_QWORD *)specialized Dictionary.startIndex.getter(a1);
  v5 = (uint64_t)result;
  v6 = 0;
  v7 = a1 + 64;
  v21 = v1;
  v22 = v4;
  v23 = a1 + 64;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(_BYTE *)(a1 + 32))
  {
    v10 = (unint64_t)v5 >> 6;
    if ((*(_QWORD *)(v7 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v4)
      goto LABEL_24;
    v24 = v6;
    v11 = *(_QWORD *)(a1 + 48) + 24 * v5;
    v25 = *(_QWORD *)(v11 + 8);
    v26 = *(_BYTE *)(v11 + 16);
    v27 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v5);
    v12 = _swiftEmptyArrayStorage[2];
    v13 = _swiftEmptyArrayStorage[3];
    result = *(id *)v11;
    v14 = result;
    if (v12 >= v13 >> 1)
      result = (_QWORD *)specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v12 + 1, 1);
    _swiftEmptyArrayStorage[2] = v12 + 1;
    v15 = &_swiftEmptyArrayStorage[4 * v12];
    v15[4] = v14;
    v15[5] = v25;
    *((_BYTE *)v15 + 48) = v26;
    v15[7] = v27;
    v8 = 1 << *(_BYTE *)(a1 + 32);
    if (v5 >= v8)
      goto LABEL_25;
    v7 = a1 + 64;
    v16 = *(_QWORD *)(v23 + 8 * v10);
    if ((v16 & (1 << v5)) == 0)
      goto LABEL_26;
    v4 = v22;
    if (*(_DWORD *)(a1 + 36) != v22)
      goto LABEL_27;
    v17 = v16 & (-2 << (v5 & 0x3F));
    if (v17)
    {
      v8 = __clz(__rbit64(v17)) | v5 & 0xFFFFFFFFFFFFFFC0;
      v9 = v21;
    }
    else
    {
      v18 = v10 + 1;
      v19 = (unint64_t)(v8 + 63) >> 6;
      v9 = v21;
      if (v10 + 1 < v19)
      {
        v20 = *(_QWORD *)(v23 + 8 * v18);
        if (v20)
        {
LABEL_20:
          v8 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v10)
          {
            v20 = *(_QWORD *)(a1 + 80 + 8 * v10++);
            if (v20)
            {
              v18 = v10 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v6 = v24 + 1;
    v5 = v8;
    if (v24 + 1 == v9)
      return _swiftEmptyArrayStorage;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void *MOSuggestionCarouselView.interitemSpacing.unsafeMutableAddressor()
{
  return &static MOSuggestionCarouselView.interitemSpacing;
}

void *MOSuggestionCarouselView.sideViewMargin.unsafeMutableAddressor()
{
  return &static MOSuggestionCarouselView.sideViewMargin;
}

void *MOSuggestionCarouselView.sectionInset.unsafeMutableAddressor()
{
  return &static MOSuggestionCarouselView.sectionInset;
}

void *MOSuggestionCarouselView.scrollVelocityUpperbound.unsafeMutableAddressor()
{
  return &static MOSuggestionCarouselView.scrollVelocityUpperbound;
}

void *MOSuggestionCarouselView.scrollVelocityLowerbound.unsafeMutableAddressor()
{
  return &static MOSuggestionCarouselView.scrollVelocityLowerbound;
}

void *MOSuggestionCarouselView.scrollVelocityRange.unsafeMutableAddressor()
{
  return &static MOSuggestionCarouselView.scrollVelocityRange;
}

void *MOSuggestionCarouselView.collectionView.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_collectionView);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_collectionView, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void MOSuggestionCarouselView.collectionView.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_collectionView);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*MOSuggestionCarouselView.collectionView.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_collectionView, a1, 33, 0);
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

uint64_t MOSuggestionCarouselView.assetViewModels.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter(&OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_assetViewModels);
}

uint64_t MOSuggestionCarouselView.assetViewModels.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_assetViewModels);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_bridgeObjectRelease(v4);
}

uint64_t (*MOSuggestionCarouselView.assetViewModels.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_assetViewModels, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionCarouselView.selectedAssetIdentifiers.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter(&OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_selectedAssetIdentifiers);
}

uint64_t MOSuggestionCarouselView.selectedAssetIdentifiers.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  _BYTE v11[24];

  v3 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_selectedAssetIdentifiers);
  swift_beginAccess((char *)v1 + OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_selectedAssetIdentifiers, v11, 1, 0);
  v4 = *v3;
  *v3 = a1;
  v5 = swift_bridgeObjectRelease(v4);
  result = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0xE0))(v5);
  if (result)
  {
    v8 = result;
    v9 = v7;
    ObjectType = swift_getObjectType(result);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(ObjectType, v9);
    return swift_unknownObjectRelease(v8);
  }
  return result;
}

uint64_t (*MOSuggestionCarouselView.selectedAssetIdentifiers.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_selectedAssetIdentifiers, a1, 33, 0);
  return MOSuggestionCarouselView.selectedAssetIdentifiers.modify;
}

uint64_t MOSuggestionCarouselView.selectedAssetIdentifiers.modify(uint64_t a1, char a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  result = swift_endAccess(a1);
  if ((a2 & 1) == 0)
  {
    result = (*(uint64_t (**)(uint64_t))((swift_isaMask & **(_QWORD **)(a1 + 24)) + 0xE0))(result);
    if (result)
    {
      v6 = result;
      v7 = v5;
      ObjectType = swift_getObjectType(result);
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(ObjectType, v7);
      return swift_unknownObjectRelease(v6);
    }
  }
  return result;
}

uint64_t MOSuggestionCarouselView.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_delegate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_delegate, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

uint64_t MOSuggestionCarouselView.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE v7[24];

  v5 = v2 + OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_delegate;
  swift_beginAccess(v5, v7, 1, 0);
  *(_QWORD *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign(v5, a1);
  return swift_unknownObjectRelease(a1);
}

void (*MOSuggestionCarouselView.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return MOSuggestionSheetAssetGridView.delegate.modify;
}

uint64_t MOSuggestionCarouselView.controller.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_controller;
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_controller, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

void MOSuggestionCarouselView.controller.setter(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v4[24];

  v3 = v1 + OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_controller;
  swift_beginAccess(v3, v4, 1, 0);
  swift_unknownObjectWeakAssign(v3, a1);

}

void (*MOSuggestionCarouselView.controller.modify(_QWORD *a1))(id **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_controller;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  v3[3] = swift_unknownObjectWeakLoadStrong(v5);
  return MOSuggestionSheetInterstitialView.controller.modify;
}

id MOSuggestionCarouselView.__allocating_init(controller:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return MOSuggestionCarouselView.init(controller:)(a1);
}

id MOSuggestionCarouselView.init(controller:)(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  objc_super v14;
  char v15[24];

  *(_QWORD *)&v1[OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_collectionView] = 0;
  v3 = OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_pageControl;
  v4 = objc_allocWithZone((Class)UIPageControl);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  *(_QWORD *)&v5[OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_assetViewModels] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v5[OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_selectedAssetIdentifiers] = &_swiftEmptySetSingleton;
  v6 = &v5[OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_delegate];
  *((_QWORD *)v6 + 1) = 0;
  swift_unknownObjectWeakInit(v6);
  v7 = &v5[OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_controller];
  v8 = swift_unknownObjectWeakInit(&v5[OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_controller]);
  swift_beginAccess(v8, v15, 1, 0);
  swift_unknownObjectWeakAssign(v7, a1);

  v14.receiver = v5;
  v14.super_class = (Class)type metadata accessor for MOSuggestionCarouselView();
  v9 = objc_msgSendSuper2(&v14, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v10 = (void *)objc_opt_self(UIColor);
  v11 = v9;
  v12 = objc_msgSend(v10, "clearColor");
  objc_msgSend(v11, "setBackgroundColor:", v12);

  MOSuggestionCarouselView.configureViewHierarchy()();
  return v11;
}

uint64_t type metadata accessor for MOSuggestionCarouselView()
{
  return objc_opt_self(_TtC16MomentsUIService24MOSuggestionCarouselView);
}

Swift::Void __swiftcall MOSuggestionCarouselView.reloadAll()()
{
  _QWORD *v0;
  id v1;
  void *v2;
  id v3;

  v1 = MOSuggestionCarouselView.configurePageControl()();
  v2 = (void *)(*(uint64_t (**)(id))((swift_isaMask & *v0) + 0x80))(v1);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "reloadData");

  }
}

void MOSuggestionCarouselView.reloadAll(completion:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  id v5;
  _QWORD *v6;
  id v7;

  v5 = MOSuggestionCarouselView.configurePageControl()();
  v6 = (_QWORD *)(*(uint64_t (**)(id))((swift_isaMask & *v2) + 0x80))(v5);
  if (v6)
  {
    v7 = v6;
    (*(void (**)(uint64_t, uint64_t))((swift_isaMask & *v6) + 0x70))(a1, a2);

  }
}

Swift::Void __swiftcall MOSuggestionCarouselView.reloadCell(_:index:)(Swift::OpaquePointer _, Swift::Int index)
{
  _QWORD *v2;
  uint64_t (*v5)(__n128);
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t rawValue;
  Swift::Int v14;
  uint64_t v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  os_log_t oslog;

  v5 = *(uint64_t (**)(__n128))((swift_isaMask & *v2) + 0xB8);
  v6 = swift_bridgeObjectRetain(_._rawValue);
  v7 = v5(v6);
  if (!((unint64_t)_._rawValue >> 62))
  {
    if (*(_QWORD *)(((unint64_t)_._rawValue & 0xFFFFFFFFFFFFF8) + 0x10) > index)
      goto LABEL_3;
LABEL_10:
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
      swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    v15 = type metadata accessor for Logger(0);
    v16 = __swift_project_value_buffer(v15, (uint64_t)static MOAngelLogger.assets);
    oslog = (os_log_t)Logger.logObject.getter(v16);
    v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v17, "[MOSuggestionSheetAssetGridView] Refusing to reconfigure due to size / index mismatch", v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }
    goto LABEL_14;
  }
  if ((uint64_t)_._rawValue < 0)
    rawValue = (unint64_t)_._rawValue;
  else
    rawValue = (unint64_t)_._rawValue & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(_._rawValue);
  v14 = _CocoaArrayWrapper.endIndex.getter(rawValue);
  swift_bridgeObjectRelease(_._rawValue);
  if (v14 <= index)
    goto LABEL_10;
LABEL_3:
  v8 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0x80))(v7);
  if (v8)
  {
    v9 = (void *)v8;
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<IndexPath>);
    v11 = type metadata accessor for IndexPath(0);
    v12 = swift_allocObject(v10, ((*(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80) | 7);
    *(_OWORD *)(v12 + 16) = xmmword_10019ED20;
    IndexPath.init(row:section:)(index, 0);
    oslog = (os_log_t)Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v9, "reconfigureItemsAtIndexPaths:", oslog, swift_bridgeObjectRelease(v12).n128_f64[0]);

LABEL_14:
  }
}

void MOSuggestionCarouselView.reloadCellWith(_:index:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD *, __n128);
  __n128 v10;
  uint64_t (*v11)(_QWORD *, _QWORD);
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t (*v28)(_QWORD *, _QWORD, __n128);
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  Class isa;
  uint64_t v37;
  uint64_t v38;
  os_log_type_t v39;
  uint8_t *v40;
  NSObject *oslog;
  uint64_t v42;
  unint64_t v43;
  _QWORD v44[4];

  v3 = v2;
  v6 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0xB0))();
  v7 = v6;
  if ((unint64_t)v6 >> 62)
  {
    if (v6 >= 0)
      v6 &= 0xFFFFFFFFFFFFFF8uLL;
    v8 = _CocoaArrayWrapper.endIndex.getter(v6);
  }
  else
  {
    v8 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v7);
  if (v8 > a2)
  {
    v9 = *(uint64_t (**)(_QWORD *, __n128))((swift_isaMask & *v3) + 0xC0);
    v10 = swift_retain(a1);
    v11 = (uint64_t (*)(_QWORD *, _QWORD))v9(v44, v10);
    v13 = v12;
    v14 = *v12;
    isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v12);
    *v13 = v14;
    if (!isUniquelyReferenced_nonNull_bridgeObject || v14 < 0 || (v14 & 0x4000000000000000) != 0)
    {
      v14 = specialized _ArrayBuffer._consumeAndCreateNew()(v14);
      *v13 = v14;
    }
    if (a2 < 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) > (unint64_t)a2)
    {
      v16 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 8 * a2 + 0x20);
      *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 8 * a2 + 0x20) = a1;
      swift_release(v16);
      specialized Array._endMutation()(v17);
      v18 = v11(v44, 0);
      v19 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 512))(v18);
      v21 = v20;
      v44[0] = v19;
      v44[1] = v20;
      v42 = 35;
      v43 = 0xE100000000000000;
      v22 = lazy protocol witness table accessor for type String and conformance String();
      v23 = (_QWORD *)StringProtocol.components<A>(separatedBy:)(&v42, &type metadata for String, &type metadata for String, v22, v22);
      if (v23[2])
      {
        v24 = v23;
        v25 = v23[4];
        v26 = v23[5];
        swift_bridgeObjectRetain(v26);
        swift_bridgeObjectRelease(v21);
        v27 = swift_bridgeObjectRelease(v24);
        v28 = (uint64_t (*)(_QWORD *, _QWORD, __n128))(*(uint64_t (**)(_QWORD *, __n128))((swift_isaMask & *v3) + 0xD8))(v44, v27);
        specialized Set._Variant.insert(_:)(&v42, v25, v26);
        v29 = swift_bridgeObjectRelease(v43);
        v30 = v28(v44, 0, v29);
        v31 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0x80))(v30);
        if (v31)
        {
          v32 = (void *)v31;
          v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<IndexPath>);
          v34 = type metadata accessor for IndexPath(0);
          v35 = swift_allocObject(v33, ((*(unsigned __int8 *)(*(_QWORD *)(v34 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v34 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v34 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v34 - 8) + 80) | 7);
          *(_OWORD *)(v35 + 16) = xmmword_10019ED20;
          IndexPath.init(row:section:)(a2, 0);
          isa = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v32, "reconfigureItemsAtIndexPaths:", isa, swift_bridgeObjectRelease(v35).n128_f64[0]);

        }
        return;
      }
      goto LABEL_23;
    }
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
LABEL_24:
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v37 = type metadata accessor for Logger(0);
  v38 = __swift_project_value_buffer(v37, (uint64_t)static MOAngelLogger.assets);
  oslog = Logger.logObject.getter(v38);
  v39 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v39))
  {
    v40 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v40 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v39, "[MOSuggestionSheetAssetGridView] Refusing to reconfigure due to size / index mismatch", v40, 2u);
    swift_slowDealloc(v40, -1, -1);
  }

}

void MOSuggestionCarouselView.configureViewHierarchy()()
{
  _QWORD *v0;
  _QWORD *v1;
  double y;
  double width;
  double height;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t ObjCClassFromMetadata;
  NSString v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  Class isa;
  void (*v37)(id);
  id v38;

  v1 = v0;
  y = CGRectZero.origin.y;
  width = CGRectZero.size.width;
  height = CGRectZero.size.height;
  v5 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewFlowLayout), "init");
  objc_msgSend(v5, "setScrollDirection:", 1);
  objc_msgSend(v5, "setSectionInset:", 0.0, 50.0, 0.0, 50.0);
  v6 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MOSuggestionSheetCollectionView()), "initWithFrame:collectionViewLayout:", v5, CGRectZero.origin.x, y, width, height);

  v7 = type metadata accessor for MOSuggestionCarouselAssetCell();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v7);
  v9 = String._bridgeToObjectiveC()();
  objc_msgSend(v6, "registerClass:forCellWithReuseIdentifier:", ObjCClassFromMetadata, v9);

  v10 = (void *)objc_opt_self(UIColor);
  v11 = v6;
  v12 = objc_msgSend(v10, "clearColor");
  objc_msgSend(v11, "setBackgroundColor:", v12);

  objc_msgSend(v11, "setDataSource:", v1);
  objc_msgSend(v11, "setDelegate:", v1);
  objc_msgSend(v11, "setShowsHorizontalScrollIndicator:", 0);
  objc_msgSend(v11, "setAllowsSelection:", 1);
  objc_msgSend(v11, "setAllowsMultipleSelection:", 1);
  objc_msgSend(v1, "addSubview:", v11);
  v13 = OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_pageControl;
  objc_msgSend(v1, "addSubview:", *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_pageControl));
  objc_msgSend(*(id *)((char *)v1 + v13), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v14 = (void *)objc_opt_self(NSLayoutConstraint);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v16 = swift_allocObject(v15, 80, 7);
  *(_OWORD *)(v16 + 16) = xmmword_1001A2F10;
  v17 = objc_msgSend(v11, "topAnchor");
  v18 = objc_msgSend(v1, "topAnchor");
  v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

  *(_QWORD *)(v16 + 32) = v19;
  v20 = objc_msgSend(v11, "leadingAnchor");
  v21 = objc_msgSend(v1, "leadingAnchor");
  v22 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);

  *(_QWORD *)(v16 + 40) = v22;
  v23 = objc_msgSend(v11, "trailingAnchor");
  v24 = objc_msgSend(v1, "trailingAnchor");
  v25 = objc_msgSend(v23, "constraintEqualToAnchor:", v24);

  *(_QWORD *)(v16 + 48) = v25;
  v26 = objc_msgSend(*(id *)((char *)v1 + v13), "centerXAnchor");
  v27 = objc_msgSend(v1, "centerXAnchor");
  v28 = objc_msgSend(v26, "constraintEqualToAnchor:", v27);

  *(_QWORD *)(v16 + 56) = v28;
  v29 = objc_msgSend(*(id *)((char *)v1 + v13), "topAnchor");
  v30 = objc_msgSend(v11, "bottomAnchor");
  v31 = objc_msgSend(v29, "constraintEqualToAnchor:", v30);

  *(_QWORD *)(v16 + 64) = v31;
  v32 = objc_msgSend(*(id *)((char *)v1 + v13), "bottomAnchor");
  v33 = objc_msgSend(v1, "bottomAnchor");
  v34 = objc_msgSend(v32, "constraintEqualToAnchor:", v33);

  *(_QWORD *)(v16 + 72) = v34;
  specialized Array._endMutation()(v35);
  type metadata accessor for NSLayoutConstraint();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v14, "activateConstraints:", isa, swift_bridgeObjectRelease(v16).n128_f64[0]);

  v37 = *(void (**)(id))((swift_isaMask & *v1) + 0x88);
  v38 = v11;
  v37(v11);

}

id MOSuggestionCarouselView.configurePageControl()()
{
  _QWORD *v0;
  uint64_t (*v1)(void);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char **v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;

  v1 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0xB0);
  v2 = v1();
  v3 = v2;
  if ((unint64_t)v2 >> 62)
  {
    if (v2 >= 0)
      v2 &= 0xFFFFFFFFFFFFFF8uLL;
    v4 = _CocoaArrayWrapper.endIndex.getter(v2);
  }
  else
  {
    v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v3);
  v5 = OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_pageControl;
  if (v4 >= 2)
  {
    v7 = *(id *)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_pageControl);
    v8 = v1();
    v9 = v8;
    if ((unint64_t)v8 >> 62)
    {
      if (v8 >= 0)
        v8 &= 0xFFFFFFFFFFFFFF8uLL;
      v10 = _CocoaArrayWrapper.endIndex.getter(v8);
    }
    else
    {
      v10 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v9);
    objc_msgSend(v7, "setNumberOfPages:", v10);

    v11 = *(void **)((char *)v0 + v5);
    v12 = (void *)objc_opt_self(UIColor);
    v13 = v11;
    v14 = objc_msgSend(v12, "blackColor");
    objc_msgSend(v13, "setCurrentPageIndicatorTintColor:", v14);

    v15 = *(id *)((char *)v0 + v5);
    v16 = objc_msgSend(v12, "grayColor");
    v17 = objc_msgSend(v16, "colorWithAlphaComponent:", 0.5);

    objc_msgSend(v15, "setPageIndicatorTintColor:", v17);
    objc_msgSend(*(id *)((char *)v0 + v5), "setAccessibilityContainerType:", 4);
    v18 = *(id *)((char *)v0 + v5);
    v19 = objc_msgSend(v12, "clearColor");
    objc_msgSend(v18, "setBackgroundColor:", v19);

    v6 = &selRef_setUserInteractionEnabled_;
  }
  else
  {
    v6 = &selRef_setHidden_;
  }
  return objc_msgSend(*(id *)((char *)v0 + v5), *v6, v4 < 2);
}

void MOSuggestionCarouselView.updateSelectedAssets(_:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t (*v9)(__n128);
  __n128 v10;
  uint64_t v11;
  void *v12;
  id v13;

  v2 = v1;
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v4 = type metadata accessor for Logger(0);
  v5 = __swift_project_value_buffer(v4, (uint64_t)static MOAngelLogger.assets);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "[Interstitial] Updating carousel selections)", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  v9 = *(uint64_t (**)(__n128))((swift_isaMask & *v2) + 0xD0);
  v10 = swift_bridgeObjectRetain(a1);
  v11 = v9(v10);
  v12 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0x80))(v11);
  if (v12)
  {
    v13 = v12;
    objc_msgSend(v12, "reloadData");

  }
}

void MOSuggestionCarouselView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MomentsUIService.MOSuggestionCarouselView", 41, "init(frame:)", 12, 0);
  __break(1u);
}

id MOSuggestionCarouselView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionCarouselView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

Swift::Int __swiftcall MOSuggestionCarouselView.collectionView(_:numberOfItemsInSection:)(UICollectionView _, Swift::Int numberOfItemsInSection)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  Swift::Int v5;

  v3 = (*(uint64_t (**)(Class, Swift::Int))((swift_isaMask & *v2) + 0xB0))(_.super.super.super.super.isa, numberOfItemsInSection);
  v4 = v3;
  if ((unint64_t)v3 >> 62)
  {
    if (v3 >= 0)
      v3 &= 0xFFFFFFFFFFFFFF8uLL;
    v5 = _CocoaArrayWrapper.endIndex.getter(v3);
  }
  else
  {
    v5 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v4);
  return v5;
}

void MOSuggestionCarouselView.collectionView(_:cellForItemAt:)(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  void *v5;
  NSString v6;
  Class isa;
  id v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  Class v24;
  void (*v25)(__n128);
  __n128 v26;
  id v27;
  void *v28;
  char **v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  __n128 v45;
  __n128 v46;
  uint64_t v47;
  uint64_t (*v48)(void);
  unint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v2 = v1;
  v4 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xF8))();
  if (!v4)
    goto LABEL_32;
  v5 = (void *)v4;
  v6 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v8 = objc_msgSend(a1, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v6, isa);

  v9 = type metadata accessor for MOSuggestionCarouselAssetCell();
  v10 = swift_dynamicCastClass(v8, v9);
  if (v10)
  {
    v11 = (_QWORD *)v10;
    v12 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0xB0))();
    v13 = IndexPath.item.getter(v12);
    if ((unint64_t)v12 >> 62)
    {
      if (v12 < 0)
        v47 = v12;
      else
        v47 = v12 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v12);
      v14 = _CocoaArrayWrapper.endIndex.getter(v47);
      swift_bridgeObjectRelease(v12);
      if ((v14 & 0x8000000000000000) != 0)
      {
        __break(1u);
        goto LABEL_26;
      }
    }
    else
    {
      v14 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if ((v13 & 0x8000000000000000) != 0 || v13 >= v14)
    {
      swift_bridgeObjectRelease(v12);
      objc_msgSend(objc_allocWithZone((Class)UICollectionViewCell), "init");

      return;
    }
    if ((v12 & 0xC000000000000001) == 0)
    {
      if (v13 >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_28;
      }
      v8 = *(id *)(v12 + 8 * v13 + 32);
      swift_retain(v8);
LABEL_10:
      v15 = swift_bridgeObjectRelease(v12);
      v16 = (*(uint64_t (**)(__n128))((swift_isaMask & *v2) + 0xC8))(v15);
      v48 = *(uint64_t (**)(void))(*(_QWORD *)v8 + 512);
      v17 = v48();
      v12 = v18;
      v54 = v17;
      v55 = v18;
      v52 = 35;
      v53 = 0xE100000000000000;
      v49 = lazy protocol witness table accessor for type String and conformance String();
      v19 = (_QWORD *)StringProtocol.components<A>(separatedBy:)(&v52, &type metadata for String, &type metadata for String, v49, v49);
      if (v19[2])
      {
        v20 = v19;
        v21 = v5;
        v23 = v19[4];
        v22 = v19[5];
        swift_bridgeObjectRetain(v22);
        swift_bridgeObjectRelease(v12);
        swift_bridgeObjectRelease(v20);
        LOBYTE(v12) = specialized Set.contains(_:)(v23, v22, v16);
        swift_bridgeObjectRelease(v22);
        swift_bridgeObjectRelease(v16);
        if ((v12 & 1) != 0)
        {
          v24 = IndexPath._bridgeToObjectiveC()().super.isa;
          objc_msgSend(a1, "selectItemAtIndexPath:animated:scrollPosition:", v24, 0, 1);

        }
        v25 = *(void (**)(__n128))((swift_isaMask & *v11) + 0xB0);
        v26 = swift_retain(v8);
        v25(v26);
        v27 = objc_msgSend(v11, "setSelected:", v12 & 1);
        v5 = v21;
        LOBYTE(v25) = (*(uint64_t (**)(id))((swift_isaMask & *v21) + 0x1B0))(v27);
        v28 = (void *)objc_opt_self(UIColor);
        v29 = &selRef_systemBlueColor;
        if ((v25 & 1) == 0)
          v29 = &selRef_systemIndigoColor;
        v30 = objc_msgSend(v28, *v29);
        (*(void (**)(id))((swift_isaMask & *v11) + 0xE0))(v30);
        if (serverManager._connectionProperties == (NSMutableDictionary *)-1)
          goto LABEL_16;
        goto LABEL_29;
      }
LABEL_28:
      __break(1u);
LABEL_29:
      swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
LABEL_16:
      v31 = type metadata accessor for Logger(0);
      __swift_project_value_buffer(v31, (uint64_t)static MOAngelLogger.assets);
      v32 = swift_retain_n(v8);
      v33 = Logger.logObject.getter(v32);
      v34 = static os_log_type_t.debug.getter();
      if (!os_log_type_enabled(v33, v34))
      {

        swift_release_n(v8, v46);
        return;
      }
      v35 = swift_slowAlloc(18, -1);
      v36 = swift_slowAlloc(32, -1);
      v51 = v36;
      *(_DWORD *)v35 = 67109378;
      LODWORD(v54) = v12 & 1;
      v37 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, (char *)&v54 + 4, v35 + 4);
      *(_WORD *)(v35 + 8) = 2080;
      v38 = ((uint64_t (*)(__n128))v48)(v37);
      v40 = v39;
      v54 = v38;
      v55 = v39;
      v52 = 35;
      v53 = 0xE100000000000000;
      v41 = (_QWORD *)StringProtocol.components<A>(separatedBy:)(&v52, &type metadata for String, &type metadata for String, v49, v49);
      if (v41[2])
      {
        v42 = v41;
        v50 = v5;
        v43 = v41[4];
        v44 = v41[5];
        swift_bridgeObjectRetain(v44);
        swift_bridgeObjectRelease(v40);
        swift_bridgeObjectRelease(v42);
        v54 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v43, v44, &v51);
        v45 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55, v35 + 10);
        swift_release_n(v8, v45);
        swift_bridgeObjectRelease(v44);
        _os_log_impl((void *)&_mh_execute_header, v33, v34, "[Interstitial] cellForItemAt: %{BOOL}d id: %s", (uint8_t *)v35, 0x12u);
        swift_arrayDestroy(v36, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v36, -1, -1);
        swift_slowDealloc(v35, -1, -1);
        swift_release(v8);

        return;
      }
      __break(1u);
      goto LABEL_31;
    }
LABEL_26:
    v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v12);
    goto LABEL_10;
  }
LABEL_31:

LABEL_32:
  __break(1u);
}

void MOSuggestionCarouselView.collectionView(_:willDisplay:forItemAt:)(void *a1, id a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v7)(void);
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  Class isa;
  char v25;
  void *v26;
  char **v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  unint64_t v42;
  __n128 v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(void);
  unint64_t v48;
  void *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v4 = v2;
  v50 = (_QWORD *)(*(uint64_t (**)(void))((swift_isaMask & *v2) + 0xF8))();
  if (!v50)
    return;
  v7 = *(uint64_t (**)(void))((swift_isaMask & *v2) + 0xB0);
  v8 = v7();
  v9 = IndexPath.item.getter(v8);
  if ((unint64_t)v8 >> 62)
  {
    if (v8 < 0)
      v45 = v8;
    else
      v45 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v10 = _CocoaArrayWrapper.endIndex.getter(v45);
    swift_bridgeObjectRelease(v8);
    if (v10 < 0)
    {
      __break(1u);
LABEL_33:
      v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v8);
      goto LABEL_9;
    }
  }
  else
  {
    v10 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if ((v9 & 0x8000000000000000) != 0 || v9 >= v10)
  {

    swift_bridgeObjectRelease(v8);
    return;
  }
  if ((v8 & 0xC000000000000001) != 0)
    goto LABEL_33;
  if (v9 >= *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_35;
  }
  v9 = *(_QWORD *)(v8 + 8 * v9 + 32);
  swift_retain(v9);
LABEL_9:
  swift_bridgeObjectRelease(v8);
  v11 = type metadata accessor for MOSuggestionCarouselAssetCell();
  v12 = swift_dynamicCastClass(a2, v11);
  if (!v12)
  {

    swift_release(v9);
    return;
  }
  v8 = v12;
  a2 = a2;
  v3 = IndexPath.item.getter(a2);
  v10 = v7();
  if (!((unint64_t)v10 >> 62))
  {
    v13 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_12;
  }
LABEL_35:
  if (v10 < 0)
    v46 = v10;
  else
    v46 = v10 & 0xFFFFFFFFFFFFFF8;
  v13 = _CocoaArrayWrapper.endIndex.getter(v46);
LABEL_12:
  v14 = swift_bridgeObjectRelease(v10);
  if (v3 >= v13)
  {

    swift_release(v9);
    return;
  }
  v49 = a2;
  v15 = (*(uint64_t (**)(__n128))((swift_isaMask & *v4) + 0xC8))(v14);
  v47 = *(uint64_t (**)(void))(*(_QWORD *)v9 + 512);
  v16 = v47();
  v18 = v17;
  v54 = v16;
  v55 = v17;
  v52 = 35;
  v53 = 0xE100000000000000;
  v48 = lazy protocol witness table accessor for type String and conformance String();
  v19 = (_QWORD *)StringProtocol.components<A>(separatedBy:)(&v52, &type metadata for String, &type metadata for String, v48, v48);
  if (v19[2])
  {
    v20 = v19;
    v22 = v19[4];
    v21 = v19[5];
    swift_bridgeObjectRetain(v21);
    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease(v20);
    LOBYTE(v18) = specialized Set.contains(_:)(v22, v21, v15);
    swift_bridgeObjectRelease(v21);
    *(_QWORD *)&v23 = swift_bridgeObjectRelease(v15).n128_u64[0];
    if ((v18 & 1) != 0)
    {
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      objc_msgSend(a1, "selectItemAtIndexPath:animated:scrollPosition:", isa, 0, 1);

    }
    objc_msgSend((id)v8, "setSelected:", v18 & 1, v23);
    v25 = (*(uint64_t (**)(void))((swift_isaMask & *v50) + 0x1B0))();
    v26 = (void *)objc_opt_self(UIColor);
    v27 = &selRef_systemBlueColor;
    if ((v25 & 1) == 0)
      v27 = &selRef_systemIndigoColor;
    v28 = objc_msgSend(v26, *v27);
    (*(void (**)(id))((swift_isaMask & *(_QWORD *)v8) + 0xE0))(v28);
    a2 = v49;
    if (serverManager._connectionProperties == (NSMutableDictionary *)-1)
      goto LABEL_19;
  }
  else
  {
    __break(1u);
  }
  swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
LABEL_19:
  v29 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v29, (uint64_t)static MOAngelLogger.assets);
  v30 = swift_retain_n(v9);
  v31 = Logger.logObject.getter(v30);
  v32 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = swift_slowAlloc(18, -1);
    v34 = swift_slowAlloc(32, -1);
    v51 = v34;
    *(_DWORD *)v33 = 67109378;
    LODWORD(v54) = v18 & 1;
    v35 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, (char *)&v54 + 4, v33 + 4);
    *(_WORD *)(v33 + 8) = 2080;
    v36 = ((uint64_t (*)(__n128))v47)(v35);
    v38 = v37;
    v54 = v36;
    v55 = v37;
    v52 = 35;
    v53 = 0xE100000000000000;
    v39 = (_QWORD *)StringProtocol.components<A>(separatedBy:)(&v52, &type metadata for String, &type metadata for String, v48, v48);
    if (!v39[2])
    {
      __break(1u);
      return;
    }
    v40 = v39;
    v41 = v39[4];
    v42 = v39[5];
    swift_bridgeObjectRetain(v42);
    swift_bridgeObjectRelease(v38);
    swift_bridgeObjectRelease(v40);
    v54 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v41, v42, &v51);
    v43 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55, v33 + 10);
    swift_release_n(v9, v43);
    swift_bridgeObjectRelease(v42);
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "[Interstitial] willDisplay isSelected: %{BOOL}d id: %s", (uint8_t *)v33, 0x12u);
    swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1, -1);
    swift_slowDealloc(v33, -1, -1);
    swift_release(v9);

  }
  else
  {

    swift_release_n(v9, v44);
  }

}

void MOSuggestionCarouselView.collectionView(_:didSelectItemAt:)()
{
  specialized MOSuggestionCarouselView.collectionView(_:didSelectItemAt:)();
}

void MOSuggestionCarouselView.collectionView(_:didDeselectItemAt:)()
{
  specialized MOSuggestionCarouselView.collectionView(_:didDeselectItemAt:)();
}

double MOSuggestionCarouselView.collectionView(_:layout:sizeForItemAt:)(void *a1, void *a2)
{
  uint64_t v4;
  void *v5;
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;

  v4 = objc_opt_self(UICollectionViewFlowLayout);
  v5 = (void *)swift_dynamicCastObjCClass(a2, v4);
  if (v5)
  {
    v6 = a2;
    objc_msgSend(v5, "minimumInteritemSpacing");
    v8 = v7;
    objc_msgSend(v5, "sectionInset");
    v10 = v8 + v9;
  }
  else
  {
    v10 = 0.0;
  }
  objc_msgSend(a1, "frame");
  v12 = v11;

  return v12 - v10 + -40.0;
}

uint64_t MOSuggestionCarouselView.scrollToIndex(index:animated:velocity:)(uint64_t a1, char a2, double a3)
{
  _QWORD *v3;
  uint64_t result;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  float v13;
  float v14;
  float v15;
  double v16;
  float v17;
  double v18;
  double v19;
  double v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  _QWORD v27[5];
  uint64_t v28;
  CGRect v29;

  result = (*(uint64_t (**)(void))((swift_isaMask & *v3) + 0x80))();
  if (result)
  {
    v8 = (void *)result;
    if (a1 < 0)
      goto LABEL_13;
    v9 = (*(uint64_t (**)(void))((swift_isaMask & *v3) + 0xB0))();
    v10 = v9;
    if ((unint64_t)v9 >> 62)
    {
      if (v9 >= 0)
        v9 &= 0xFFFFFFFFFFFFFF8uLL;
      v11 = _CocoaArrayWrapper.endIndex.getter(v9);
    }
    else
    {
      v11 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    *(_QWORD *)&v12 = swift_bridgeObjectRelease(v10).n128_u64[0];
    if (v11 <= a1)
    {
LABEL_13:

      return 0;
    }
    else
    {
      objc_msgSend(v8, "frame", v12);
      v13 = CGRectGetWidth(v29) + -50.0 + -40.0;
      v14 = (float)a1 * v13;
      if (v14 > 0.0)
        v15 = v14;
      else
        v15 = 0.0;
      objc_msgSend(v8, "contentSize");
      v17 = v16;
      if (v15 <= v17)
        v17 = v15;
      v18 = v17;
      objc_msgSend(v8, "contentOffset");
      v20 = v19;
      if ((a2 & 1) != 0)
      {
        v21 = (void *)objc_opt_self(UIView);
        v22 = swift_allocObject(&unk_1001EB848, 40, 7);
        *(_QWORD *)(v22 + 16) = v8;
        *(double *)(v22 + 24) = v18;
        *(double *)(v22 + 32) = v20;
        v27[4] = partial apply for closure #1 in MOSuggestionInterstitialCarouselView.scrollToIndex(index:shouldScroll:velocity:);
        v28 = v22;
        v27[0] = _NSConcreteStackBlock;
        v27[1] = 1107296256;
        v27[2] = thunk for @escaping @callee_guaranteed () -> ();
        v27[3] = &block_descriptor_30;
        v23 = _Block_copy(v27);
        v24 = v28;
        v25 = v8;
        swift_release(v24);
        objc_msgSend(v21, "animateWithDuration:animations:", v23, a3);
        _Block_release(v23);
      }
      else
      {
        objc_msgSend(v8, "setContentOffset:animated:", 0, v18, v19);
      }
      v26 = *(id *)((char *)v3 + OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_pageControl);
      objc_msgSend(v26, "setCurrentPage:", a1);

      return *(_QWORD *)&v18;
    }
  }
  return result;
}

void MOSuggestionCarouselView.scrollViewWillEndDragging(_:withVelocity:targetContentOffset:)(void *a1, double *a2, double a3)
{
  float v6;
  double v7;
  float v8;
  float v9;
  float v10;
  uint64_t v11;
  CGFloat Width;
  uint64_t v13;
  char v14;
  CGRect v15;
  CGRect v16;
  CGRect v17;

  objc_msgSend(a1, "frame");
  if (CGRectGetWidth(v15) > 0.0)
  {
    objc_msgSend(a1, "frame");
    v6 = CGRectGetWidth(v16) + -50.0 + -40.0;
    objc_msgSend(a1, "contentOffset");
    v8 = v7;
    v9 = *a2;
    v10 = v8 / v6;
    if (v9 >= v8)
      goto LABEL_7;
    v10 = floorf(v10);
    if ((~LODWORD(v10) & 0x7F800000) != 0)
    {
      if (v10 > -9.2234e18)
      {
        if (v10 < 9.2234e18)
          goto LABEL_10;
        __break(1u);
LABEL_7:
        v10 = ceilf(v10);
        if ((~LODWORD(v10) & 0x7F800000) != 0)
        {
          if (v10 > -9.2234e18)
          {
            if (v10 < 9.2234e18)
            {
LABEL_10:
              v11 = (uint64_t)v10;
              objc_msgSend(a1, "frame");
              Width = CGRectGetWidth(v17);
              v13 = MOSuggestionCarouselView.scrollToIndex(index:animated:velocity:)(v11, 1, (1.0 - fabs(a3 / Width)) * 0.14 + 0.01);
              if ((v14 & 1) == 0)
                *(_QWORD *)a2 = v13;
              return;
            }
LABEL_17:
            __break(1u);
            return;
          }
LABEL_16:
          __break(1u);
          goto LABEL_17;
        }
LABEL_15:
        __break(1u);
        goto LABEL_16;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_15;
  }
}

void MOSuggestionCarouselView.assetTypeSummary.getter()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  void *v6;
  uint64_t (*v7)(void);
  id v8;
  Swift::UInt v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  char v22;
  char v23;
  id v24;
  uint64_t v25;
  uint64_t (*v26)();
  id v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  char v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  unint64_t v51;
  uint64_t v52[4];
  _QWORD v53[2];
  _QWORD *v54;

  v1 = specialized Dictionary.init(dictionaryLiteral:)((uint64_t)_swiftEmptyArrayStorage);
  v54 = (_QWORD *)v1;
  v50 = v0;
  isUniquelyReferenced_nonNull_native = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xB0))();
  if ((unint64_t)isUniquelyReferenced_nonNull_native >> 62)
  {
LABEL_36:
    if (isUniquelyReferenced_nonNull_native < 0)
      v42 = isUniquelyReferenced_nonNull_native;
    else
      v42 = isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFFF8;
    v3 = _CocoaArrayWrapper.endIndex.getter(v42);
    if (v3)
      goto LABEL_3;
LABEL_40:
    swift_bridgeObjectRelease(isUniquelyReferenced_nonNull_native);
LABEL_41:
    swift_bridgeObjectRetain(v1);
    v44 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSDy16MomentsUIService19MOAssetAndMediaTypeVSiG_AH_Sits5NeverOTg504_s16d11UIService19fghi38VSiACSiIggyod_AC3key_Si5valuetAC_Sits5j129OIegnrzr_TR04_s16a61UIService42MOSuggestionInterstitialListAssetViewModelC32assetf38DictionaryToCountString4dictSSSDyAA015cdE27J0M32G_tFZAG_SitAG_SitXEfU_Tf3nnnpf_nTf1cn_n(v43);
    v52[0] = (uint64_t)v44;
    swift_bridgeObjectRetain(v44);
    specialized MutableCollection<>.sort(by:)(v52);
    swift_bridgeObjectRelease(v44);
    v45 = v52[0];
    v46 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay16MomentsUIService19MOAssetAndMediaTypeV_SitG_SSs5NeverOTg504_s16d11UIService19fghi21VSiSSIggyo_AC_SitSSs5j137OIegnrzr_TR04_s16a61UIService42MOSuggestionInterstitialListAssetViewModelC25assetf44SetToCountStringySSSo09NSCountedK0CFZSSAA015cdE13J0V_P16XEfU1_Tf3nnnpf_nTf1cn_n(v52[0]);
    swift_release(v45);
    v52[0] = (uint64_t)v46;
    v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
    v48 = lazy protocol witness table accessor for type [String] and conformance [A]();
    BidirectionalCollection<>.joined(separator:)(0x20A280E220, 0xA500000000000000, v47, v48);
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(v46);
    swift_bridgeObjectRelease(v1);
    return;
  }
  v3 = *(_QWORD *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v3)
    goto LABEL_40;
LABEL_3:
  if (v3 >= 1)
  {
    v1 = 0;
    v51 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
    v49 = v3;
    while (1)
    {
      if (v51)
      {
        v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(v1, isUniquelyReferenced_nonNull_native);
      }
      else
      {
        v4 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 8 * v1 + 32);
        v5 = swift_retain(v4);
      }
      v6 = (void *)(*(uint64_t (**)(__n128))(*(_QWORD *)v4 + 632))(v5);
      if (v6)
      {
        v7 = *(uint64_t (**)(void))(*(_QWORD *)v4 + 776);
        v8 = v6;
        v9 = v7();
        v10 = (*(uint64_t (**)(void))((swift_isaMask & *v50) + 0xC8))();
        v11 = (*(uint64_t (**)(void))(*(_QWORD *)v4 + 512))();
        v13 = v12;
        v52[0] = v11;
        v52[1] = v12;
        v53[0] = 35;
        v53[1] = 0xE100000000000000;
        v14 = lazy protocol witness table accessor for type String and conformance String();
        v15 = (_QWORD *)StringProtocol.components<A>(separatedBy:)(v53, &type metadata for String, &type metadata for String, v14, v14);
        if (!v15[2])
        {
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
          goto LABEL_36;
        }
        v16 = v15;
        v17 = isUniquelyReferenced_nonNull_native;
        v19 = v15[4];
        v18 = v15[5];
        swift_bridgeObjectRetain(v18);
        swift_bridgeObjectRelease(v13);
        swift_bridgeObjectRelease(v16);
        LOBYTE(v16) = specialized Set.contains(_:)(v19, v18, v10);
        swift_bridgeObjectRelease(v18);
        swift_bridgeObjectRelease(v10);
        if ((v16 & 1) == 0)
        {
          swift_release(v4);

          goto LABEL_18;
        }
        v20 = (uint64_t)v54;
        if (v54[2]
          && (v21 = v8,
              specialized __RawDictionaryStorage.find<A>(_:)(v21, v9, 0),
              v23 = v22,
              v21,
              (v23 & 1) != 0))
        {
          v24 = v21;
          v26 = specialized Dictionary.subscript.modify(v52, v24, v9, 0);
          if ((*(_BYTE *)(v25 + 8) & 1) != 0)
          {
            ((void (*)(uint64_t *, _QWORD))v26)(v52, 0);

            swift_release(v4);
LABEL_18:
            isUniquelyReferenced_nonNull_native = v17;
            v3 = v49;
            goto LABEL_6;
          }
          if (__OFADD__(*(_QWORD *)v25, 1))
          {
            __break(1u);
            break;
          }
          isUniquelyReferenced_nonNull_native = v17;
          ++*(_QWORD *)v25;
          ((void (*)(uint64_t *, _QWORD))v26)(v52, 0);

          swift_release(v4);
          v3 = v49;
        }
        else
        {
          v27 = v8;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v20);
          v52[0] = v20;
          v29 = specialized __RawDictionaryStorage.find<A>(_:)(v27, v9, 0);
          v30 = *(_QWORD *)(v20 + 16);
          v31 = (v28 & 1) == 0;
          v32 = v30 + v31;
          if (__OFADD__(v30, v31))
            goto LABEL_34;
          v33 = v28;
          if (*(_QWORD *)(v20 + 24) >= v32)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              specialized _NativeDictionary.copy()();
          }
          else
          {
            specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v32, isUniquelyReferenced_nonNull_native);
            v34 = specialized __RawDictionaryStorage.find<A>(_:)(v27, v9, 0);
            if ((v33 & 1) != (v35 & 1))
              goto LABEL_44;
            v29 = v34;
          }
          isUniquelyReferenced_nonNull_native = v17;
          v36 = (_QWORD *)v52[0];
          v3 = v49;
          if ((v33 & 1) != 0)
          {
            *(_QWORD *)(*(_QWORD *)(v52[0] + 56) + 8 * v29) = 1;
          }
          else
          {
            *(_QWORD *)(v52[0] + 8 * (v29 >> 6) + 64) |= 1 << v29;
            v37 = v36[6] + 24 * v29;
            *(_QWORD *)v37 = v27;
            *(_QWORD *)(v37 + 8) = v9;
            *(_BYTE *)(v37 + 16) = 0;
            *(_QWORD *)(v36[7] + 8 * v29) = 1;
            v38 = v36[2];
            v39 = __OFADD__(v38, 1);
            v40 = v38 + 1;
            if (v39)
              goto LABEL_35;
            v36[2] = v40;
            v41 = v27;
          }
          v54 = v36;
          swift_release(v4);

          swift_bridgeObjectRelease(0x8000000000000000);
        }
      }
      else
      {
        swift_release(v4);
      }
LABEL_6:
      if (v3 == ++v1)
      {
        swift_bridgeObjectRelease(isUniquelyReferenced_nonNull_native);
        v1 = (unint64_t)v54;
        goto LABEL_41;
      }
    }
  }
  __break(1u);
LABEL_44:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for MOAssetAndMediaType);
  __break(1u);
  swift_release(v52[0]);
  __break(1u);
}

uint64_t specialized Dictionary.startIndex.getter(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

void specialized MOSuggestionCarouselView.init(coder:)()
{
  char *v0;
  uint64_t v1;
  char *v2;

  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_collectionView] = 0;
  v1 = OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_pageControl;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIPageControl), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_assetViewModels] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_selectedAssetIdentifiers] = &_swiftEmptySetSingleton;
  v2 = &v0[OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_delegate];
  *((_QWORD *)v2 + 1) = 0;
  swift_unknownObjectWeakInit(v2, 0);
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_controller], 0);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionCarouselView.swift", 47, 2, 72, 0);
  __break(1u);
}

void specialized MOSuggestionCarouselView.collectionView(_:didSelectItemAt:)()
{
  _QWORD *v0;
  uint64_t (*v1)(__n128);
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  unint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t (*v37)(uint64_t *, _QWORD, __n128);
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t ObjectType;
  uint64_t v45;
  uint64_t v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[3];
  uint64_t v51;
  unint64_t v52;

  v2 = v0;
  v3 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xB0))();
  v4 = IndexPath.item.getter(v3);
  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v45 = v3;
    else
      v45 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v5 = _CocoaArrayWrapper.endIndex.getter(v45);
    swift_bridgeObjectRelease(v3);
    if ((v5 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_30:
      v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v3);
      goto LABEL_8;
    }
  }
  else
  {
    v5 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if ((v4 & 0x8000000000000000) != 0 || v4 >= v5)
  {
    swift_bridgeObjectRelease(v3);
    return;
  }
  if ((v3 & 0xC000000000000001) != 0)
    goto LABEL_30;
  if (v4 >= *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_32:
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    goto LABEL_17;
  }
  v5 = *(_QWORD *)(v3 + 8 * v4 + 32);
  swift_retain(v5);
LABEL_8:
  v6 = swift_bridgeObjectRelease(v3);
  v1 = *(uint64_t (**)(__n128))(*(_QWORD *)v5 + 512);
  v7 = v1(v6);
  if (v7 == 0x6C6F686563616C70 && v8 == 0xEB00000000726564)
  {
    swift_release(v5);
    swift_bridgeObjectRelease(0xEB00000000726564);
    return;
  }
  v10 = v8;
  v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, 0x6C6F686563616C70, 0xEB00000000726564, 0);
  swift_bridgeObjectRelease(v10);
  if ((v11 & 1) != 0)
  {
    swift_release(v5);
    return;
  }
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    goto LABEL_32;
LABEL_17:
  v12 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v12, (uint64_t)static MOAngelLogger.assets);
  v13 = swift_retain_n(v5);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v47 = v15;
    v16 = (uint8_t *)swift_slowAlloc(12, -1);
    v46 = swift_slowAlloc(32, -1);
    v48 = v46;
    *(_DWORD *)v16 = 136315138;
    v17 = ((uint64_t (*)(void))v1)();
    v19 = v18;
    v49 = v17;
    v50[0] = v18;
    v51 = 35;
    v52 = 0xE100000000000000;
    v20 = lazy protocol witness table accessor for type String and conformance String();
    v21 = (_QWORD *)StringProtocol.components<A>(separatedBy:)(&v51, &type metadata for String, &type metadata for String, v20, v20);
    if (!v21[2])
    {
LABEL_34:
      __break(1u);
      return;
    }
    v22 = v21;
    v24 = v21[4];
    v23 = v21[5];
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v22);
    v49 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v23, &v48);
    v25 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, v50, v16 + 4);
    swift_release_n(v5, v25);
    swift_bridgeObjectRelease(v23);
    _os_log_impl((void *)&_mh_execute_header, v14, v47, "[MOSuggestionCarouselView] selecting %s", v16, 0xCu);
    swift_arrayDestroy(v46, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v46, -1, -1);
    swift_slowDealloc(v16, -1, -1);

  }
  else
  {

    v26 = swift_release_n(v5, v27);
  }
  v28 = ((uint64_t (*)(uint64_t))v1)(v26);
  v30 = v29;
  v49 = v28;
  v50[0] = v29;
  v51 = 35;
  v52 = 0xE100000000000000;
  v31 = lazy protocol witness table accessor for type String and conformance String();
  v32 = (_QWORD *)StringProtocol.components<A>(separatedBy:)(&v51, &type metadata for String, &type metadata for String, v31, v31);
  if (!v32[2])
  {
    __break(1u);
    goto LABEL_34;
  }
  v33 = v32;
  v34 = v32[4];
  v35 = v32[5];
  swift_bridgeObjectRetain(v35);
  swift_bridgeObjectRelease(v30);
  v36 = swift_bridgeObjectRelease(v33);
  v37 = (uint64_t (*)(uint64_t *, _QWORD, __n128))(*(uint64_t (**)(uint64_t *, __n128))((swift_isaMask & *v2) + 0xD8))(&v49, v36);
  specialized Set._Variant.insert(_:)(&v51, v34, v35);
  v38 = swift_bridgeObjectRelease(v52);
  v39 = v37(&v49, 0, v38);
  v40 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0xE0))(v39);
  v42 = v40;
  if (v40)
  {
    v43 = v41;
    ObjectType = swift_getObjectType(v40);
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(ObjectType, v43);
    swift_unknownObjectRelease(v42);
  }
  swift_release(v5);
}

void specialized MOSuggestionCarouselView.collectionView(_:didDeselectItemAt:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  unint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t (*v30)(uint64_t *, _QWORD, __n128);
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t ObjectType;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[3];
  uint64_t v45;
  unint64_t v46;

  v1 = v0;
  v2 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xB0))();
  v3 = IndexPath.item.getter(v2);
  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0)
      v40 = v2;
    else
      v40 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v4 = _CocoaArrayWrapper.endIndex.getter(v40);
    swift_bridgeObjectRelease(v2);
    if ((v4 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_23:
      v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v2);
LABEL_8:
      swift_bridgeObjectRelease(v2);
      if (serverManager._connectionProperties == (NSMutableDictionary *)-1)
        goto LABEL_9;
      goto LABEL_25;
    }
  }
  else
  {
    v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if ((v3 & 0x8000000000000000) != 0 || v3 >= v4)
  {
    swift_bridgeObjectRelease(v2);
    return;
  }
  if ((v2 & 0xC000000000000001) != 0)
    goto LABEL_23;
  if (v3 < *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v4 = *(_QWORD *)(v2 + 8 * v3 + 32);
    swift_retain(v4);
    goto LABEL_8;
  }
  __break(1u);
LABEL_25:
  swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
LABEL_9:
  v5 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v5, (uint64_t)static MOAngelLogger.assets);
  v6 = swift_retain_n(v4);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v41 = swift_slowAlloc(32, -1);
    v42 = v41;
    *(_DWORD *)v9 = 136315138;
    v10 = (*(uint64_t (**)(void))(*(_QWORD *)v4 + 512))();
    v12 = v11;
    v43 = v10;
    v44[0] = v11;
    v45 = 35;
    v46 = 0xE100000000000000;
    v13 = lazy protocol witness table accessor for type String and conformance String();
    v14 = (_QWORD *)StringProtocol.components<A>(separatedBy:)(&v45, &type metadata for String, &type metadata for String, v13, v13);
    if (!v14[2])
    {
LABEL_27:
      __break(1u);
      return;
    }
    v15 = v14;
    v17 = v14[4];
    v16 = v14[5];
    swift_bridgeObjectRetain(v16);
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v15);
    v43 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v16, &v42);
    v18 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, v44, v9 + 4);
    swift_release_n(v4, v18);
    swift_bridgeObjectRelease(v16);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "[MOSuggestionCarouselView] un-selecting %s", v9, 0xCu);
    swift_arrayDestroy(v41, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v41, -1, -1);
    swift_slowDealloc(v9, -1, -1);

  }
  else
  {

    v19 = swift_release_n(v4, v20);
  }
  v21 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 512))(v19);
  v23 = v22;
  v43 = v21;
  v44[0] = v22;
  v45 = 35;
  v46 = 0xE100000000000000;
  v24 = lazy protocol witness table accessor for type String and conformance String();
  v25 = (_QWORD *)StringProtocol.components<A>(separatedBy:)(&v45, &type metadata for String, &type metadata for String, v24, v24);
  if (!v25[2])
  {
    __break(1u);
    goto LABEL_27;
  }
  v26 = v25;
  v27 = v25[4];
  v28 = v25[5];
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRelease(v23);
  v29 = swift_bridgeObjectRelease(v26);
  v30 = (uint64_t (*)(uint64_t *, _QWORD, __n128))(*(uint64_t (**)(uint64_t *, __n128))((swift_isaMask & *v1) + 0xD8))(&v43, v29);
  specialized Set._Variant.remove(_:)(v27, v28);
  v32 = v31;
  swift_bridgeObjectRelease(v28);
  v33 = swift_bridgeObjectRelease(v32);
  v34 = v30(&v43, 0, v33);
  v35 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0xE0))(v34);
  v37 = v35;
  if (v35)
  {
    v38 = v36;
    ObjectType = swift_getObjectType(v35);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(ObjectType, v38);
    swift_unknownObjectRelease(v37);
  }
  swift_release(v4);
}

uint64_t sub_10013424C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

uint64_t block_copy_helper_30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_30(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100134288@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x80))();
  *a2 = result;
  return result;
}

uint64_t sub_1001342C8(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0x88);
  v4 = *a1;
  return v3(v2);
}

uint64_t sub_100134314@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xB0))();
  *a2 = result;
  return result;
}

uint64_t sub_100134354(_QWORD *a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0xB8);
  v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

uint64_t sub_100134394@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xC8))();
  *a2 = result;
  return result;
}

uint64_t sub_1001343D4(_QWORD *a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0xD0);
  v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

uint64_t sub_100134414@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xE0))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100134454(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **a2) + 0xE8);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t sub_1001344A4@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xF8))();
  *a2 = result;
  return result;
}

uint64_t sub_1001344E4(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0x100);
  v4 = *a1;
  return v3(v2);
}

void MOSuggestionAssetWorkoutRouteProvider.getAsset(workoutUUID:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t inited;
  _QWORD *v9;
  uint64_t v10;

  v7 = type metadata accessor for MOSuggestionAssetWorkoutProvider();
  inited = swift_initStackObject(v7, &v10);
  *(_QWORD *)(inited + 16) = -1;
  *(_QWORD *)(inited + 24) = objc_msgSend(objc_allocWithZone((Class)HKHealthStore), "init");
  v9 = (_QWORD *)swift_allocObject(&unk_1001EB8E8, 40, 7);
  v9[2] = a2;
  v9[3] = a3;
  v9[4] = v3;
  swift_retain(a3);
  swift_retain(v3);
  MOSuggestionAssetWorkoutProvider.getWorkout(workoutUUID:completion:)(a1, (uint64_t)partial apply for closure #1 in MOSuggestionAssetWorkoutRouteProvider.getAsset(workoutUUID:completion:), (uint64_t)v9);
  swift_release(v9);
  swift_setDeallocating(inited);

}

void closure #1 in MOSuggestionAssetWorkoutRouteProvider.getAsset(workoutUUID:completion:)(void *a1, void (*a2)(_QWORD), uint64_t a3, _QWORD *a4)
{
  void *v7;
  id v8;
  uint64_t v9;
  void (*v10)(void (*)(void *), uint64_t, __n128);
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;

  if (a1)
  {
    v7 = (void *)a4[4];
    a4[4] = a1;
    v8 = a1;

    v9 = swift_allocObject(&unk_1001EB9B0, 32, 7);
    *(_QWORD *)(v9 + 16) = a2;
    *(_QWORD *)(v9 + 24) = a3;
    v10 = *(void (**)(void (*)(void *), uint64_t, __n128))(*a4 + 160);
    v11 = swift_retain(a3);
    v10(partial apply for closure #1 in closure #1 in MOSuggestionAssetWorkoutRouteProvider.getAsset(workoutUUID:completion:), v9, v11);

    swift_release(v9);
  }
  else
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1)
      swift_once(&serverManager._clientConnections, one-time initialization function for shared);
    v12 = type metadata accessor for Logger(0);
    v13 = __swift_project_value_buffer(v12, (uint64_t)static MOAngelLogger.shared);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Failed to locate workout", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }

    a2(0);
  }
}

void partial apply for closure #1 in MOSuggestionAssetWorkoutRouteProvider.getAsset(workoutUUID:completion:)(void *a1)
{
  uint64_t v1;

  closure #1 in MOSuggestionAssetWorkoutRouteProvider.getAsset(workoutUUID:completion:)(a1, *(void (**)(_QWORD))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD **)(v1 + 32));
}

void closure #1 in closure #1 in MOSuggestionAssetWorkoutRouteProvider.getAsset(workoutUUID:completion:)(void *a1, void (*a2)(void *))
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;

  if (a1)
  {
    v9 = a1;
    a2(a1);

  }
  else
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1)
      swift_once(&serverManager._clientConnections, one-time initialization function for shared);
    v4 = type metadata accessor for Logger(0);
    v5 = __swift_project_value_buffer(v4, (uint64_t)static MOAngelLogger.shared);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to generate route", v8, 2u);
      swift_slowDealloc(v8, -1, -1);
    }

    a2(0);
  }
}

void MOSuggestionAssetWorkoutRouteProvider.generateRoute(completion:)(void (*a1)(_QWORD), uint64_t a2)
{
  uint64_t v2;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  _QWORD *v10;
  id v11;
  void *v12;
  id v13;
  _QWORD v14[5];
  _QWORD *v15;

  v5 = *(void **)(v2 + 32);
  if (v5)
  {
    v6 = (void *)objc_opt_self(HKQuery);
    v7 = v5;
    v8 = objc_msgSend(v6, "predicateForObjectsFromWorkout:", v7);
    v9 = objc_msgSend((id)objc_opt_self(HKSeriesType), "workoutRouteType");
    v10 = (_QWORD *)swift_allocObject(&unk_1001EB910, 40, 7);
    v10[2] = a1;
    v10[3] = a2;
    v10[4] = v2;
    v11 = objc_allocWithZone((Class)HKAnchoredObjectQuery);
    v14[4] = partial apply for closure #1 in MOSuggestionAssetWorkoutRouteProvider.generateRoute(completion:);
    v15 = v10;
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 1107296256;
    v14[2] = thunk for @escaping @callee_guaranteed (@guaranteed HKAnchoredObjectQuery, @guaranteed [HKSample]?, @guaranteed [HKDeletedObject]?, @guaranteed HKQueryAnchor?, @guaranteed Error?) -> ();
    v14[3] = &block_descriptor_31;
    v12 = _Block_copy(v14);
    swift_retain(a2);
    v13 = objc_msgSend(v11, "initWithType:predicate:anchor:limit:resultsHandler:", v9, v8, 0, 0, v12, swift_retain(v2).n128_f64[0]);

    _Block_release(v12);
    objc_msgSend(*(id *)(v2 + 16), "executeQuery:", v13, swift_release(v15).n128_f64[0]);

  }
  else
  {
    a1(0);
  }
}

void closure #1 in MOSuggestionAssetWorkoutRouteProvider.generateRoute(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(_QWORD), uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;

  if (!a2)
    goto LABEL_15;
  v12 = a2 & 0xFFFFFFFFFFFFFF8;
  if (!((unint64_t)a2 >> 62))
  {
    v13 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a2);
    if (v13)
      goto LABEL_4;
    goto LABEL_14;
  }
  if (a2 >= 0)
    v17 = a2 & 0xFFFFFFFFFFFFFF8;
  else
    v17 = a2;
  swift_bridgeObjectRetain(a2);
  if (!_CocoaArrayWrapper.endIndex.getter(v17))
  {
LABEL_14:
    swift_bridgeObjectRelease(a2);
LABEL_15:
    a6(0);
    return;
  }
LABEL_4:
  if ((a2 & 0xC000000000000001) != 0)
  {
    v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
    goto LABEL_7;
  }
  if (*(_QWORD *)(v12 + 16))
  {
    v14 = *(id *)(a2 + 32);
LABEL_7:
    v18 = v14;
    swift_bridgeObjectRelease(a2);
    v15 = objc_opt_self(HKWorkoutRoute);
    v16 = swift_dynamicCastObjCClass(v18, v15);
    if (v16)
    {
      (*(void (**)(uint64_t, void (*)(_QWORD), uint64_t))(*(_QWORD *)a8 + 168))(v16, a6, a7);

      return;
    }

    goto LABEL_15;
  }
  __break(1u);
}

void partial apply for closure #1 in MOSuggestionAssetWorkoutRouteProvider.generateRoute(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  closure #1 in MOSuggestionAssetWorkoutRouteProvider.generateRoute(completion:)(a1, a2, a3, a4, a5, *(void (**)(_QWORD))(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32));
}

void MOSuggestionAssetWorkoutRouteProvider.fetchRouteLocations(_:completion:)(uint64_t a1, void (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v3;
  void *v6;
  _QWORD *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  _QWORD v13[5];
  _QWORD *v14;

  v6 = *(void **)(v3 + 32);
  if (v6)
  {
    v8 = (_QWORD *)swift_allocObject(&unk_1001EB960, 48, 7);
    v8[2] = v3;
    v8[3] = v6;
    v8[4] = a2;
    v8[5] = a3;
    v9 = objc_allocWithZone((Class)HKWorkoutRouteQuery);
    v13[4] = partial apply for closure #1 in MOSuggestionAssetWorkoutRouteProvider.fetchRouteLocations(_:completion:);
    v14 = v8;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 1107296256;
    v13[2] = thunk for @escaping @callee_guaranteed (@guaranteed HKWorkoutRouteQuery, @guaranteed [CLLocation]?, @unowned Bool, @guaranteed Error?) -> ();
    v13[3] = &block_descriptor_9_0;
    v10 = _Block_copy(v13);
    v11 = v6;
    swift_retain(v3);
    v12 = objc_msgSend(v9, "initWithRoute:dataHandler:", a1, v10, swift_retain(a3).n128_f64[0]);
    _Block_release(v10);
    objc_msgSend(*(id *)(v3 + 16), "executeQuery:", v12, swift_release(v14).n128_f64[0]);

  }
  else
  {
    a2(0);
  }
}

void closure #1 in MOSuggestionAssetWorkoutRouteProvider.fetchRouteLocations(_:completion:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, void *a6, void (*a7)(id))
{
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  Class isa;
  id v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  id v31;
  uint64_t v32;
  char v33;
  _QWORD v34[3];

  if (a2)
  {
    if ((unint64_t)a2 >> 62)
    {
      if (a2 >= 0)
        v32 = a2 & 0xFFFFFFFFFFFFFF8;
      else
        v32 = a2;
      swift_bridgeObjectRetain(a2);
      v12 = _CocoaArrayWrapper.endIndex.getter(v32);
      swift_bridgeObjectRelease(a2);
    }
    else
    {
      v12 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    v13 = _swiftEmptyArrayStorage;
    if (v12)
    {
      v34[0] = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)(v12);
      if (v12 < 0)
      {
        __break(1u);
        return;
      }
      v33 = a3;
      v14 = 0;
      do
      {
        if ((a2 & 0xC000000000000001) != 0)
          v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14, a2);
        else
          v15 = *(id *)(a2 + 8 * v14 + 32);
        v16 = v15;
        if (one-time initialization token for shared != -1)
          swift_once(&one-time initialization token for shared, one-time initialization function for shared);
        ++v14;
        v17 = (*(uint64_t (**)(void *))(*(_QWORD *)static MOLocationShifter.shared + 104))(v16);

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v18);
        v19 = *(_QWORD *)(v34[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v19);
        v20 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v17);
        specialized ContiguousArray._endMutation()(v20);
      }
      while (v12 != v14);
      v13 = (_QWORD *)v34[0];
      a3 = v33;
    }
    swift_beginAccess(a5 + 24, v34, 33, 0);
    specialized Array.append<A>(contentsOf:)((uint64_t)v13);
    swift_endAccess(v34);
  }
  if ((a3 & 1) != 0)
  {
    swift_beginAccess(a5 + 24, v34, 0, 0);
    v21 = *(_QWORD *)(a5 + 24);
    v22 = objc_allocWithZone((Class)MOSuggestionAssetWorkoutRoute);
    type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for CLLocation, CLLocation_ptr);
    swift_bridgeObjectRetain(v21);
    v23 = a6;
    isa = Array._bridgeToObjectiveC()().super.isa;
    v25 = objc_msgSend(v22, "init:workout:", isa, v23, swift_bridgeObjectRelease(v21).n128_f64[0]);

    if (serverManager._clientConnections != (NSMutableDictionary *)-1)
      swift_once(&serverManager._clientConnections, one-time initialization function for shared);
    v26 = type metadata accessor for Logger(0);
    v27 = __swift_project_value_buffer(v26, (uint64_t)static MOAngelLogger.shared);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Fetched workout route", v30, 2u);
      swift_slowDealloc(v30, -1, -1);
    }

    v31 = v25;
    a7(v25);

  }
}

_QWORD *MOSuggestionAssetWorkoutRouteProvider.__allocating_init()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_allocObject(v0, 40, 7);
  v1[2] = objc_msgSend(objc_allocWithZone((Class)HKHealthStore), "init");
  v1[3] = _swiftEmptyArrayStorage;
  v1[4] = 0;
  return v1;
}

_QWORD *MOSuggestionAssetWorkoutRouteProvider.init()()
{
  _QWORD *v0;

  v0[2] = objc_msgSend(objc_allocWithZone((Class)HKHealthStore), "init");
  v0[3] = _swiftEmptyArrayStorage;
  v0[4] = 0;
  return v0;
}

double thunk for @escaping @callee_guaranteed (@guaranteed HKAnchoredObjectQuery, @guaranteed [HKSample]?, @guaranteed [HKDeletedObject]?, @guaranteed HKQueryAnchor?, @guaranteed Error?) -> ()(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v9;
  uint64_t v11;
  void (*v12)(id, uint64_t, uint64_t, void *, void *);
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  double result;

  v9 = a3;
  v12 = *(void (**)(id, uint64_t, uint64_t, void *, void *))(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  if (a3)
  {
    v13 = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for HKSample, HKSample_ptr);
    v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v13);
  }
  if (a4)
  {
    v14 = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for HKDeletedObject, HKDeletedObject_ptr);
    a4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a4, v14);
  }
  swift_retain(v11);
  v15 = a2;
  v16 = a5;
  v17 = a6;
  v12(v15, v9, a4, a5, a6);
  swift_release(v11);

  swift_bridgeObjectRelease(a4);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v9).n128_u64[0];
  return result;
}

uint64_t block_copy_helper_31(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_31(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100135150()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void partial apply for closure #1 in MOSuggestionAssetWorkoutRouteProvider.fetchRouteLocations(_:completion:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;

  closure #1 in MOSuggestionAssetWorkoutRouteProvider.fetchRouteLocations(_:completion:)(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(void **)(v4 + 24), *(void (**)(id))(v4 + 32));
}

double thunk for @escaping @callee_guaranteed (@guaranteed HKWorkoutRouteQuery, @guaranteed [CLLocation]?, @unowned Bool, @guaranteed Error?) -> ()(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v7;
  uint64_t v9;
  void (*v10)(id, uint64_t, uint64_t, void *);
  uint64_t v11;
  id v12;
  id v13;
  double result;

  v7 = a3;
  v10 = *(void (**)(id, uint64_t, uint64_t, void *))(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  if (a3)
  {
    v11 = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for CLLocation, CLLocation_ptr);
    v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v11);
  }
  swift_retain(v9);
  v12 = a2;
  v13 = a5;
  v10(v12, v7, a4, a5);
  swift_release(v9);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v7).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for MOSuggestionAssetWorkoutRouteProvider()
{
  return objc_opt_self(_TtC16MomentsUIService37MOSuggestionAssetWorkoutRouteProvider);
}

uint64_t sub_100135260()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void partial apply for closure #1 in closure #1 in MOSuggestionAssetWorkoutRouteProvider.getAsset(workoutUUID:completion:)(void *a1)
{
  uint64_t v1;

  closure #1 in closure #1 in MOSuggestionAssetWorkoutRouteProvider.getAsset(workoutUUID:completion:)(a1, *(void (**)(void *))(v1 + 16));
}

_QWORD *MOSuggestionMotionAssetView.__allocating_init(image:title:subtitle:assignedTileSize:frame:snowglobeView:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, void *a7, double a8, double a9, double a10, double a11)
{
  objc_class *v11;
  id v23;

  v23 = objc_allocWithZone(v11);
  return MOSuggestionMotionAssetView.init(image:title:subtitle:assignedTileSize:frame:snowglobeView:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

id closure #1 in variable initialization expression of MOSuggestionMotionAssetView.exerciseNameLabel()
{
  id v0;
  id v1;
  id v2;
  id v3;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v1 = specialized static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)((uint64_t)UIFontTextStyleFootnote, 0, 0x100000000, *(uint64_t *)&UIFontWeightBold, 0, 0);
  objc_msgSend(v0, "setFont:", v1);

  objc_msgSend(v0, "setOverrideUserInterfaceStyle:", 2);
  v2 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  v3 = objc_msgSend(v2, "colorWithAlphaComponent:", 0.6);

  objc_msgSend(v0, "setTextColor:", v3);
  objc_msgSend(v0, "setTextAlignment:", 0);
  objc_msgSend(v0, "setLineBreakMode:", 4);
  objc_msgSend(v0, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v0, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityMedium);
  objc_msgSend(v0, "setNumberOfLines:", 2);
  return v0;
}

id MOSuggestionMotionAssetView.exerciseNameLabel.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_exerciseNameLabel);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_exerciseNameLabel, v3, 0, 0);
  return *v1;
}

void MOSuggestionMotionAssetView.exerciseNameLabel.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_exerciseNameLabel);
}

uint64_t (*MOSuggestionMotionAssetView.exerciseNameLabel.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_exerciseNameLabel, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void closure #1 in variable initialization expression of MOSuggestionMotionAssetView.workoutDataLabel()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v1 = (void *)objc_opt_self(UIFont);
  v2 = objc_msgSend(v1, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  v3 = objc_msgSend(v2, "fontDescriptor");
  v4 = objc_msgSend(v3, "fontDescriptorWithSymbolicTraits:", 2);

  if (v4)
  {
    v5 = objc_msgSend(v1, "fontWithDescriptor:size:", v4, 0.0);

    objc_msgSend(v0, "setFont:", v5);
    objc_msgSend(v0, "setOverrideUserInterfaceStyle:", 2);
    v6 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemBackgroundColor");
    v7 = objc_msgSend(v6, "colorWithAlphaComponent:", 0.5);

    objc_msgSend(v0, "setTextColor:", v7);
    objc_msgSend(v0, "setPreferredVibrancy:", 1);
    objc_msgSend(v0, "setTextAlignment:", 0);
    objc_msgSend(v0, "setAdjustsFontForContentSizeCategory:", 1);
    objc_msgSend(v0, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityMedium);
  }
  else
  {
    __break(1u);
  }
}

id MOSuggestionMotionAssetView.workoutDataLabel.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_workoutDataLabel);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_workoutDataLabel, v3, 0, 0);
  return *v1;
}

void MOSuggestionMotionAssetView.workoutDataLabel.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_workoutDataLabel);
}

uint64_t (*MOSuggestionMotionAssetView.workoutDataLabel.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_workoutDataLabel, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id MOSuggestionMotionAssetView.labelStack.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_labelStack);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_labelStack, v3, 0, 0);
  return *v1;
}

void MOSuggestionMotionAssetView.labelStack.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_labelStack);
}

uint64_t (*MOSuggestionMotionAssetView.labelStack.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_labelStack, a1, 33, 0);
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

_QWORD *MOSuggestionMotionAssetView.init(image:title:subtitle:assignedTileSize:frame:snowglobeView:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, void *a7, double a8, double a9, double a10, double a11)
{
  void *v11;
  _BYTE *v22;
  NSString v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  _QWORD *v31;
  _QWORD *v32;
  id v33;
  _QWORD *v34;
  void *v35;
  _QWORD *v36;
  id v37;
  Swift::String v38;
  Swift::String v39;
  void *object;
  NSString v41;
  objc_super v44;
  Swift::String v45;

  v22 = v11;
  v23 = String._bridgeToObjectiveC()();
  v24 = (void *)objc_opt_self(UIColor);
  v25 = objc_msgSend(v24, "colorNamed:", v23);

  if (!v25)
    v25 = objc_msgSend(v24, "systemWhiteColor");
  *(_QWORD *)&v22[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_motionBackground] = v25;
  v26 = OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_exerciseNameLabel;
  *(_QWORD *)&v22[v26] = closure #1 in variable initialization expression of MOSuggestionMotionAssetView.exerciseNameLabel();
  v27 = OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_workoutDataLabel;
  closure #1 in variable initialization expression of MOSuggestionMotionAssetView.workoutDataLabel();
  *(_QWORD *)&v22[v27] = v28;
  v29 = OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_labelStack;
  v30 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v30, "setAxis:", 1);
  objc_msgSend(v30, "setAlignment:", 1);
  *(_QWORD *)&v22[v29] = v30;
  v31 = &v22[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_title];
  *v31 = a2;
  v31[1] = a3;
  v22[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_assignedTileSize] = a6;
  v32 = &v22[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_subtitle];
  *v32 = a4;
  v32[1] = a5;
  *(_QWORD *)&v22[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_snowglobeView] = a7;
  v33 = a7;

  v44.receiver = v22;
  v44.super_class = (Class)type metadata accessor for MOSuggestionMotionAssetView();
  v34 = objc_msgSendSuper2(&v44, "initWithFrame:", a8, a9, a10, a11);
  objc_msgSend(v34, "setContentMode:", 1);
  (*(void (**)(void *))((swift_isaMask & *v34) + 0xE0))(a1);
  objc_msgSend(v34, "setIsAccessibilityElement:", 1);
  v35 = (void *)objc_opt_self(NSBundle);
  v36 = v34;
  v37 = objc_msgSend(v35, "mainBundle");
  v45._countAndFlagsBits = 0xD000000000000036;
  v45._object = (void *)0x80000001001A7EC0;
  v38._countAndFlagsBits = 0x676E696B6C6157;
  v38._object = (void *)0xE700000000000000;
  v39._countAndFlagsBits = 0;
  v39._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v38, (Swift::String_optional)0, (NSBundle)v37, v39, v45)._object;

  v41 = String._bridgeToObjectiveC()();
  objc_msgSend(v36, "setAccessibilityLabel:", v41, swift_bridgeObjectRelease(object).n128_f64[0]);

  return v36;
}

uint64_t type metadata accessor for MOSuggestionMotionAssetView()
{
  return objc_opt_self(_TtC16MomentsUIService27MOSuggestionMotionAssetView);
}

Swift::Void __swiftcall MOSuggestionMotionAssetView.makeUIView(image:)(UIImage_optional image)
{
  _QWORD *v1;
  Class isa;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  objc_class *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  objc_class *v12;
  NSString v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  objc_class *v27;
  objc_class *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t (*v33)(void);
  void *v34;
  NSString v35;
  uint64_t (*v36)(void);
  void *v37;
  NSString v38;
  void *v39;
  unsigned int v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  id v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  void *v56;
  id v57;
  id v58;
  id v59;
  id v60;
  void *v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  void *v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  void *v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  uint64_t (*v81)(void);
  void *v82;
  void *v83;
  void *v84;
  void *v85;
  void *v86;
  void *v87;
  void *v88;
  id v89;
  id v90;
  id v91;
  void *v92;
  id v93;
  void *v94;
  id v95;
  id v96;
  id v97;
  char **v98;
  char **v99;
  id v100;
  _QWORD *v101;
  void *v102;
  id v103;
  void *v104;
  id v105;
  id v106;
  id v107;
  void *v108;
  id v109;
  void *v110;
  id v111;
  id v112;
  id v113;
  char **v114;
  void *v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  void *v121;
  void *v122;
  id v123;
  id v124;
  id v125;
  void *v126;
  id v127;
  id v128;
  id v129;
  id v130;
  void *v131;
  id v132;
  id v133;
  id v134;
  id v135;
  id v136;
  id v137;
  id v138;
  void *v139;
  void *v140;
  void *v141;
  id v142;
  void *v143;
  id v144;
  id v145;
  id v146;
  void *v147;
  id v148;
  void *v149;
  id v150;
  id v151;
  id v152;
  id v153;
  id v154;
  id v155;
  id v156;
  id v157;
  id v158;
  id v159;

  isa = image.value.super.isa;
  objc_msgSend(v1, "setBackgroundColor:", *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_motionBackground));
  v3 = *(id *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_snowglobeView);
  if (v3)
  {
    v158 = *(id *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_snowglobeView);
    v4 = v3;
    objc_msgSend(v1, "addSubview:", v4);
    v3 = objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    goto LABEL_14;
  }
  if (!isa)
  {
    v158 = 0;
    goto LABEL_14;
  }
  v5 = type metadata accessor for MOSuggestionRoundView();
  v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v5));
  v7 = isa;
  v8 = objc_msgSend(v6, "init");
  v9 = (void *)objc_opt_self(UIColor);
  v158 = v8;
  v10 = objc_msgSend(v9, "systemWhiteColor");
  v11 = objc_msgSend(v10, "colorWithAlphaComponent:", 0.55);

  objc_msgSend(v158, "setBackgroundColor:", v11);
  v12 = (objc_class *)objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v7);
  -[objc_class setContentMode:](v12, "setContentMode:", 1);
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v9, "colorNamed:", v13);

  -[objc_class setTintColor:](v12, "setTintColor:", v14);
  objc_msgSend(v158, "addSubview:", v12);
  objc_msgSend(v1, "addSubview:", v158);
  objc_msgSend(v158, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v15 = -[objc_class heightAnchor](v12, "heightAnchor");
  v16 = objc_msgSend(v158, "heightAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:multiplier:", v16, 0.5);

  objc_msgSend(v17, "setActive:", 1);
  v18 = -[objc_class widthAnchor](v12, "widthAnchor");
  v19 = objc_msgSend(v158, "widthAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:multiplier:", v19, 0.5);

  objc_msgSend(v20, "setActive:", 1);
  v21 = -[objc_class superview](v12, "superview");
  if (v21)
  {
    v22 = v21;
    -[objc_class setTranslatesAutoresizingMaskIntoConstraints:](v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v23 = -[objc_class centerYAnchor](v12, "centerYAnchor");
    v24 = objc_msgSend(v22, "centerYAnchor");
    v25 = objc_msgSend(v23, "constraintEqualToAnchor:", v24);

    objc_msgSend(v25, "setConstant:", 0.0);
    v26 = v25;
    objc_msgSend(v26, "setActive:", 1);

  }
  v27 = (objc_class *)-[objc_class superview](v12, "superview");
  if (!v27)
  {
    v28 = v7;
LABEL_12:

    goto LABEL_13;
  }
  v28 = v27;
  -[objc_class setTranslatesAutoresizingMaskIntoConstraints:](v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v29 = -[objc_class centerXAnchor](v12, "centerXAnchor");
  v30 = -[objc_class centerXAnchor](v28, "centerXAnchor");
  v31 = objc_msgSend(v29, "constraintEqualToAnchor:", v30);

  objc_msgSend(v31, "setConstant:", 0.0);
  if (!v31)
  {

    v12 = v7;
    goto LABEL_12;
  }
  v32 = v31;
  objc_msgSend(v32, "setActive:", 1);

LABEL_13:
LABEL_14:
  v33 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0x90);
  v34 = (void *)((uint64_t (*)(id))v33)(v3);
  v35 = String._bridgeToObjectiveC()();
  objc_msgSend(v34, "setText:", v35);

  v36 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0xA8);
  v37 = (void *)v36();
  v38 = String._bridgeToObjectiveC()();
  objc_msgSend(v37, "setText:", v38);

  v39 = v158;
  if (v158)
  {
    v40 = *((unsigned __int8 *)v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_assignedTileSize);
    if (v40 > 8)
    {
LABEL_77:

      return;
    }
    if (((1 << v40) & 0xD0) != 0)
    {
      v159 = v158;
      v60 = objc_msgSend(v159, "superview");
      if (v60)
      {
        v61 = v60;
        objc_msgSend(v159, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v62 = objc_msgSend(v159, "leadingAnchor");
        v63 = objc_msgSend(v61, "leadingAnchor");
        v64 = objc_msgSend(v62, "constraintEqualToAnchor:", v63);

        objc_msgSend(v64, "setConstant:", 8.0);
        if (v64)
        {
          v65 = v64;
          objc_msgSend(v65, "setActive:", 1);

        }
      }
      v66 = objc_msgSend(v159, "superview");
      if (v66)
      {
        v67 = v66;
        objc_msgSend(v159, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v68 = objc_msgSend(v159, "topAnchor");
        v69 = objc_msgSend(v67, "topAnchor");
        v70 = objc_msgSend(v68, "constraintEqualToAnchor:", v69);

        objc_msgSend(v70, "setConstant:", 8.0);
        if (v70)
        {
          v71 = v70;
          objc_msgSend(v71, "setActive:", 1);

        }
      }
      v72 = objc_msgSend(v159, "superview");
      if (v72)
      {
        v73 = v72;
        objc_msgSend(v159, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v74 = objc_msgSend(v159, "bottomAnchor");
        v75 = objc_msgSend(v73, "bottomAnchor");
        v76 = objc_msgSend(v74, "constraintEqualToAnchor:", v75);

        if (v76)
        {
          objc_msgSend(v76, "setConstant:", -8.0);
          v77 = v76;
          objc_msgSend(v77, "setActive:", 1);

        }
      }
      v78 = objc_msgSend(v159, "widthAnchor");
      v79 = objc_msgSend(v159, "heightAnchor");
      v80 = objc_msgSend(v78, "constraintEqualToAnchor:", v79);

      objc_msgSend(v80, "setActive:", 1);
      v81 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0xC0);
      v82 = (void *)v81();
      v83 = (void *)v33();
      objc_msgSend(v82, "addArrangedSubview:", v83);

      v84 = (void *)v81();
      v85 = (void *)v36();
      objc_msgSend(v84, "addArrangedSubview:", v85);

      v86 = (void *)v81();
      objc_msgSend(v86, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

      v87 = (void *)v81();
      objc_msgSend(v1, "addSubview:", v87);

      v88 = (void *)v81();
      objc_msgSend(v88, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v89 = objc_msgSend(v88, "leadingAnchor");
      v90 = objc_msgSend(v159, "trailingAnchor");
      v91 = objc_msgSend(v89, "constraintEqualToAnchor:", v90);

      objc_msgSend(v91, "setConstant:", 8.0);
      objc_msgSend(v91, "setActive:", 1);

      v92 = (void *)v81();
      v93 = objc_msgSend(v92, "superview");
      if (v93)
      {
        v94 = v93;
        objc_msgSend(v92, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v95 = objc_msgSend(v92, "centerYAnchor");
        v96 = objc_msgSend(v94, "centerYAnchor");
        v97 = objc_msgSend(v95, "constraintEqualToAnchor:", v96);

        objc_msgSend(v97, "setConstant:", 0.0);
        v98 = &selRef_genericAvatarFor_pointSize_completion_;
        if (v97)
        {
          v97 = v97;
          v99 = &selRef_genericAvatarFor_pointSize_completion_;
          objc_msgSend(v97, "setActive:", 1);

          v92 = v97;
        }
        else
        {
          v99 = &selRef_genericAvatarFor_pointSize_completion_;
        }

      }
      else
      {
        v97 = 0;
        v94 = v92;
        v99 = &selRef_genericAvatarFor_pointSize_completion_;
        v98 = &selRef_genericAvatarFor_pointSize_completion_;
      }

      v115 = (void *)v81();
      v116 = objc_msgSend(v115, "superview");
      if (v116)
      {
        v157 = v116;
        objc_msgSend(v115, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v117 = objc_msgSend(v115, "trailingAnchor");
        v118 = objc_msgSend(v157, "trailingAnchor");
        v119 = objc_msgSend(v117, v98[101], v118);

        objc_msgSend(v119, "setConstant:", -8.0);
        v120 = v119;
        objc_msgSend(v120, v99[93], 1);
LABEL_75:

        v39 = v157;
        goto LABEL_77;
      }
LABEL_76:

      v39 = v159;
      goto LABEL_77;
    }
    if (((1 << v40) & 0xC) != 0)
    {
      v100 = v158;
      v101 = UIView.fillSuper(margin:)(8.0);

      swift_bridgeObjectRelease(v101);
      return;
    }
    if (((1 << v40) & 0x120) == 0)
      goto LABEL_77;
    v159 = v158;
    v41 = (void *)v33();
    objc_msgSend(v1, "addSubview:", v41);

    v42 = (void *)v36();
    objc_msgSend(v1, "addSubview:", v42);

    if (v40 != 8)
    {
LABEL_23:
      v54 = (void *)v33();
      v55 = objc_msgSend(v54, "superview");
      if (v55)
      {
        v56 = v55;
        objc_msgSend(v54, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v57 = objc_msgSend(v54, "topAnchor");
        v58 = objc_msgSend(v56, "topAnchor");
        v59 = objc_msgSend(v57, "constraintEqualToAnchor:", v58);

        objc_msgSend(v59, "setConstant:", 12.0);
        if (v59)
        {
          v59 = v59;
          objc_msgSend(v59, "setActive:", 1);

          v54 = v59;
        }

      }
      else
      {
        v59 = 0;
        v56 = v54;
      }

      v102 = (void *)v33();
      v103 = objc_msgSend(v102, "superview");
      if (v103)
      {
        v104 = v103;
        objc_msgSend(v102, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v105 = objc_msgSend(v102, "leadingAnchor");
        v106 = objc_msgSend(v104, "leadingAnchor");
        v107 = objc_msgSend(v105, "constraintEqualToAnchor:", v106);

        objc_msgSend(v107, "setConstant:", 16.0);
        if (v107)
        {
          v107 = v107;
          objc_msgSend(v107, "setActive:", 1);

          v102 = v107;
        }

      }
      else
      {
        v107 = 0;
        v104 = v102;
      }

      v108 = (void *)v33();
      v109 = objc_msgSend(v108, "superview");
      if (v109)
      {
        v110 = v109;
        objc_msgSend(v108, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v111 = objc_msgSend(v108, "trailingAnchor");
        v112 = objc_msgSend(v110, "trailingAnchor");
        v113 = objc_msgSend(v111, "constraintEqualToAnchor:", v112);

        objc_msgSend(v113, "setConstant:", -16.0);
        if (v113)
        {
          v113 = v113;
          v114 = &selRef_genericAvatarFor_pointSize_completion_;
          objc_msgSend(v113, "setActive:", 1);

          v108 = v113;
        }
        else
        {
          v114 = &selRef_genericAvatarFor_pointSize_completion_;
        }

      }
      else
      {
        v114 = &selRef_genericAvatarFor_pointSize_completion_;
        v113 = 0;
        v110 = v108;
      }

      v121 = (void *)v33();
      objc_msgSend(v121, "setTextAlignment:", 1);

      v122 = (void *)v33();
      objc_msgSend(v159, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v123 = objc_msgSend(v159, "topAnchor");
      v124 = objc_msgSend(v122, "topAnchor");
      v125 = objc_msgSend(v123, "constraintEqualToAnchor:constant:", v124, 24.0);

      objc_msgSend(v125, v114[93], 1);
      v126 = (void *)v36();
      objc_msgSend(v159, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v127 = objc_msgSend(v159, "bottomAnchor");
      v128 = objc_msgSend(v126, "bottomAnchor");
      v129 = objc_msgSend(v127, "constraintEqualToAnchor:constant:", v128, -24.0);

      objc_msgSend(v129, v114[93], 1);
      v130 = objc_msgSend(v159, "superview");
      if (v130)
      {
        v131 = v130;
        objc_msgSend(v159, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v132 = objc_msgSend(v159, "centerXAnchor");
        v133 = objc_msgSend(v131, "centerXAnchor");
        v134 = objc_msgSend(v132, "constraintEqualToAnchor:", v133);

        objc_msgSend(v134, "setConstant:", 0.0);
        v135 = v134;
        objc_msgSend(v135, v114[93], 1);

      }
      v136 = objc_msgSend(v159, "widthAnchor");
      v137 = objc_msgSend(v159, "heightAnchor");
      v138 = objc_msgSend(v136, "constraintEqualToAnchor:", v137);

      objc_msgSend(v138, v114[93], 1);
      v139 = (void *)v36();
      objc_msgSend(v139, "setTextAlignment:", 1);

      v140 = (void *)v33();
      objc_msgSend(v140, "setTextAlignment:", 1);

      v141 = (void *)v36();
      v142 = objc_msgSend(v141, "superview");
      if (v142)
      {
        v143 = v142;
        objc_msgSend(v141, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v144 = objc_msgSend(v141, "bottomAnchor");
        v145 = objc_msgSend(v143, "bottomAnchor");
        v146 = objc_msgSend(v144, "constraintEqualToAnchor:", v145);

        if (v146)
        {
          objc_msgSend(v146, "setConstant:", -12.0);
          v146 = v146;
          objc_msgSend(v146, v114[93], 1);

          v141 = v146;
        }

      }
      else
      {
        v146 = 0;
        v143 = v141;
      }

      v147 = (void *)v36();
      v148 = objc_msgSend(v147, "superview");
      if (v148)
      {
        v149 = v148;
        objc_msgSend(v147, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v150 = objc_msgSend(v147, "leadingAnchor");
        v151 = objc_msgSend(v149, "leadingAnchor");
        v152 = objc_msgSend(v150, "constraintEqualToAnchor:", v151);

        objc_msgSend(v152, "setConstant:", 0.0);
        if (v152)
        {
          v152 = v152;
          objc_msgSend(v152, v114[93], 1);

          v147 = v152;
        }

      }
      else
      {
        v152 = 0;
        v149 = v147;
      }

      v115 = (void *)v36();
      v153 = objc_msgSend(v115, "superview");
      if (v153)
      {
        v157 = v153;
        objc_msgSend(v115, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v154 = objc_msgSend(v115, "trailingAnchor");
        v155 = objc_msgSend(v157, "trailingAnchor");
        v156 = objc_msgSend(v154, "constraintEqualToAnchor:", v155);

        objc_msgSend(v156, "setConstant:", -8.0);
        v120 = v156;
        objc_msgSend(v120, v114[93], 1);
        goto LABEL_75;
      }
      goto LABEL_76;
    }
    v43 = (void *)v33();
    v44 = (void *)objc_opt_self(UIFont);
    v45 = objc_msgSend(v44, "preferredFontForTextStyle:", UIFontTextStyleBody);
    v46 = objc_msgSend(v45, "fontDescriptor");
    v47 = objc_msgSend(v46, "fontDescriptorWithSymbolicTraits:", 2);

    if (v47)
    {
      v48 = objc_msgSend(v44, "fontWithDescriptor:size:", v47, 0.0);

      objc_msgSend(v43, "setFont:", v48);
      v49 = (void *)v36();
      v50 = objc_msgSend(v44, "preferredFontForTextStyle:", UIFontTextStyleBody);
      v51 = objc_msgSend(v50, "fontDescriptor");
      v52 = objc_msgSend(v51, "fontDescriptorWithSymbolicTraits:", 2);

      if (v52)
      {
        v53 = objc_msgSend(v44, "fontWithDescriptor:size:", v52, 0.0);

        objc_msgSend(v49, "setFont:", v53);
        goto LABEL_23;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void MOSuggestionMotionAssetView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MomentsUIService.MOSuggestionMotionAssetView", 44, "init(frame:)", 12, 0);
  __break(1u);
}

id MOSuggestionMotionAssetView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionMotionAssetView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void specialized MOSuggestionMotionAssetView.init(coder:)()
{
  char *v0;
  NSString v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v1 = String._bridgeToObjectiveC()();
  v2 = (void *)objc_opt_self(UIColor);
  v3 = objc_msgSend(v2, "colorNamed:", v1);

  if (!v3)
    v3 = objc_msgSend(v2, "systemWhiteColor");
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_motionBackground] = v3;
  v4 = OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_exerciseNameLabel;
  *(_QWORD *)&v0[v4] = closure #1 in variable initialization expression of MOSuggestionMotionAssetView.exerciseNameLabel();
  v5 = OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_workoutDataLabel;
  closure #1 in variable initialization expression of MOSuggestionMotionAssetView.workoutDataLabel();
  *(_QWORD *)&v0[v5] = v6;
  v7 = OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_labelStack;
  v8 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v8, "setAxis:", 1);
  objc_msgSend(v8, "setAlignment:", 1);
  *(_QWORD *)&v0[v7] = v8;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionMotionAssetView.swift", 50, 2, 76, 0);
  __break(1u);
}

uint64_t sub_100137350@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x90))();
  *a2 = result;
  return result;
}

uint64_t sub_100137390(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x98))(*a1);
}

uint64_t sub_1001373D0@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xA8))();
  *a2 = result;
  return result;
}

uint64_t sub_100137410(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0xB0))(*a1);
}

uint64_t sub_100137450@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xC0))();
  *a2 = result;
  return result;
}

uint64_t sub_100137490(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0xC8))(*a1);
}

uint64_t *MOMusicPlaybackCoordinator.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1)
    swift_once(&one-time initialization token for shared, one-time initialization function for shared);
  return &static MOMusicPlaybackCoordinator.shared;
}

uint64_t MOMusicPlaybackCoordinator.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_allocObject(v0, 56, 7);
  MOMusicPlaybackCoordinator.init()();
  return v1;
}

double static MOMusicPlaybackCoordinator.shared.getter()
{
  double result;

  if (one-time initialization token for shared != -1)
    swift_once(&one-time initialization token for shared, one-time initialization function for shared);
  *(_QWORD *)&result = swift_retain(static MOMusicPlaybackCoordinator.shared).n128_u64[0];
  return result;
}

uint64_t MOMusicPlaybackCoordinator.nowPlayingTrackID.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 40, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 48));
  return v1;
}

uint64_t MOMusicPlaybackCoordinator.nowPlayingTrackID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE v7[24];

  swift_beginAccess(v2 + 40, v7, 1, 0);
  v5 = *(_QWORD *)(v2 + 48);
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return swift_bridgeObjectRelease(v5);
}

uint64_t (*MOMusicPlaybackCoordinator.nowPlayingTrackID.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + 40, a1, 33, 0);
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

uint64_t MOMusicPlaybackCoordinator.init()()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  *(_QWORD *)(v0 + 16) = objc_msgSend((id)objc_opt_self(MPMusicPlayerController), "systemMusicPlayer");
  *(_QWORD *)(v0 + 24) = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)(v0 + 40) = 0;
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 32) = 0;
  (*(void (**)(void))(*(_QWORD *)v0 + 224))();
  v1 = objc_msgSend(*(id *)(v0 + 16), "nowPlayingItem");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, "playbackStoreID");
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v6 = v5;

    swift_beginAccess(v0 + 40, v9, 1, 0);
    v7 = *(_QWORD *)(v0 + 48);
    *(_QWORD *)(v0 + 40) = v4;
    *(_QWORD *)(v0 + 48) = v6;
    swift_bridgeObjectRelease(v7);
  }
  return v0;
}

uint64_t MOMusicPlaybackCoordinator.deinit()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v1, "removeObserver:", v0);

  (*(void (**)(void))(*(_QWORD *)v0 + 320))();
  objc_msgSend(*(id *)(v0 + 16), "endGeneratingPlaybackNotifications");

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return v0;
}

uint64_t MOMusicPlaybackCoordinator.__deallocating_deinit()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v1, "removeObserver:", v0);

  (*(void (**)(void))(*(_QWORD *)v0 + 320))();
  objc_msgSend(*(id *)(v0 + 16), "endGeneratingPlaybackNotifications");

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocClassInstance(v0, 56, 7);
}

uint64_t MOMusicPlaybackCoordinator.register(view:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(__n128);
  __n128 v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(__int128 *, _QWORD, __n128);
  uint64_t *v20;
  uint64_t *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  __n128 v24;
  __int128 v25[2];
  uint64_t v26;

  v2 = v1;
  v4 = a1[3];
  v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  if (v7)
  {
    v8 = result;
    v9 = v7;
    v10 = *(uint64_t (**)(__n128))(*(_QWORD *)v1 + 136);
    v11 = swift_bridgeObjectRetain(v7);
    v12 = v10(v11);
    if (*(_QWORD *)(v12 + 16) && (v13 = specialized __RawDictionaryStorage.find<A>(_:)(v8, v9), (v14 & 1) != 0))
    {
      v15 = *(_QWORD **)(*(_QWORD *)(v12 + 56) + 8 * v13);
      swift_bridgeObjectRetain(v15);
      swift_bridgeObjectRelease(v9);
      swift_bridgeObjectRelease(v12);
      outlined init with copy of MOProtectedAppsManagerDelegate((uint64_t)a1, (uint64_t)v25);
      if ((swift_isUniquelyReferenced_nonNull_native(v15) & 1) == 0)
        v15 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v15[2] + 1, 1, v15);
      v17 = v15[2];
      v16 = v15[3];
      if (v17 >= v16 >> 1)
        v15 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((_QWORD *)(v16 > 1), v17 + 1, 1, v15);
      v15[2] = v17 + 1;
      outlined init with take of Tip(v25, (uint64_t)&v15[5 * v17 + 4]);
    }
    else
    {
      swift_bridgeObjectRelease(v9);
      swift_bridgeObjectRelease(v12);
      v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<MOMusicPlaybackCoordinatorDelegate>);
      v15 = (_QWORD *)swift_allocObject(v18, 72, 7);
      *((_OWORD *)v15 + 1) = xmmword_10019ED20;
      outlined init with copy of MOProtectedAppsManagerDelegate((uint64_t)a1, (uint64_t)(v15 + 4));
    }
    v19 = (uint64_t (*)(__int128 *, _QWORD, __n128))(*(uint64_t (**)(__int128 *))(*(_QWORD *)v2 + 152))(v25);
    v21 = v20;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v20);
    v26 = *v21;
    *v21 = 0x8000000000000000;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)v15, v8, v9, isUniquelyReferenced_nonNull_native);
    v23 = *v21;
    *v21 = v26;
    swift_bridgeObjectRelease(v9);
    v24 = swift_bridgeObjectRelease(v23);
    return v19(v25, 0, v24);
  }
  return result;
}

Swift::Void __swiftcall MOMusicPlaybackCoordinator.subscribeToNowPlaying()()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;

  objc_msgSend(*(id *)(v0 + 16), "beginGeneratingPlaybackNotifications");
  v1 = (void *)objc_opt_self(NSNotificationCenter);
  v2 = objc_msgSend(v1, "defaultCenter");
  objc_msgSend(v2, "removeObserver:", v0);

  v3 = objc_msgSend(v1, "defaultCenter");
  objc_msgSend(v3, "addObserver:selector:name:object:", v0, "playbackStateDidChangeWithNote:", MPMusicPlayerControllerPlaybackStateDidChangeNotification, 0);

  v4 = objc_msgSend(v1, "defaultCenter");
  objc_msgSend(v4, "addObserver:selector:name:object:", v0, "nowPlayingItemChangedWithNote:", MPMusicPlayerControllerNowPlayingItemDidChangeNotification, 0);

}

Swift::Void __swiftcall MOMusicPlaybackCoordinator.pauseSystemPlayback()()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + 16), "pause");
}

Swift::Bool __swiftcall MOMusicPlaybackCoordinator.matchesNowPlayingMediaItem(track:)(Swift::String_optional track)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  char v11;

  object = track.value._object;
  countAndFlagsBits = track.value._countAndFlagsBits;
  v4 = objc_msgSend(*(id *)(v1 + 16), "nowPlayingItem");
  if (!v4)
    return 0;
  v5 = v4;
  v6 = objc_msgSend(v4, "playbackStoreID");
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  if (!object)
  {
    swift_bridgeObjectRelease(v9);

    return 0;
  }
  if (v7 != countAndFlagsBits || v9 != object)
  {
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(countAndFlagsBits, object, v7, v9, 0);
    swift_bridgeObjectRelease(v9);

    return (v11 & 1) != 0;
  }
  swift_bridgeObjectRelease(v9);

  return 1;
}

Swift::Void __swiftcall MOMusicPlaybackCoordinator.sendPlayNotificationsForID(track:)(Swift::String track)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t (*v4)(__n128);
  __n128 v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  object = track._object;
  countAndFlagsBits = track._countAndFlagsBits;
  v4 = *(uint64_t (**)(__n128))(*(_QWORD *)v1 + 136);
  v5 = swift_bridgeObjectRetain(track._object);
  v6 = v4(v5);
  if (*(_QWORD *)(v6 + 16)
    && (v7 = specialized __RawDictionaryStorage.find<A>(_:)(countAndFlagsBits, (uint64_t)object), (v8 & 1) != 0))
  {
    v9 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v7);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRelease(object);
    swift_bridgeObjectRelease(v6);
    v10 = *(_QWORD *)(v9 + 16);
    if (v10)
    {
      v11 = v9 + 32;
      do
      {
        outlined init with copy of MOProtectedAppsManagerDelegate(v11, (uint64_t)v14);
        v12 = v15;
        v13 = v16;
        __swift_project_boxed_opaque_existential_1(v14, v15);
        (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
        __swift_destroy_boxed_opaque_existential_1(v14);
        v11 += 40;
        --v10;
      }
      while (v10);
      swift_bridgeObjectRelease(v9);
    }
    else
    {
      swift_bridgeObjectRelease(v9);
    }
  }
  else
  {
    swift_bridgeObjectRelease(object);
    swift_bridgeObjectRelease(v6);
  }
}

Swift::Void __swiftcall MOMusicPlaybackCoordinator.sendStopNotificationsForID(track:)(Swift::String track)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t (*v4)(__n128);
  __n128 v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  object = track._object;
  countAndFlagsBits = track._countAndFlagsBits;
  v4 = *(uint64_t (**)(__n128))(*(_QWORD *)v1 + 136);
  v5 = swift_bridgeObjectRetain(track._object);
  v6 = v4(v5);
  if (*(_QWORD *)(v6 + 16)
    && (v7 = specialized __RawDictionaryStorage.find<A>(_:)(countAndFlagsBits, (uint64_t)object), (v8 & 1) != 0))
  {
    v9 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v7);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRelease(object);
    swift_bridgeObjectRelease(v6);
    v10 = *(_QWORD *)(v9 + 16);
    if (v10)
    {
      v11 = v9 + 32;
      do
      {
        outlined init with copy of MOProtectedAppsManagerDelegate(v11, (uint64_t)v14);
        v12 = v15;
        v13 = v16;
        __swift_project_boxed_opaque_existential_1(v14, v15);
        (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v12, v13);
        __swift_destroy_boxed_opaque_existential_1(v14);
        v11 += 40;
        --v10;
      }
      while (v10);
      swift_bridgeObjectRelease(v9);
    }
    else
    {
      swift_bridgeObjectRelease(v9);
    }
  }
  else
  {
    swift_bridgeObjectRelease(object);
    swift_bridgeObjectRelease(v6);
  }
}

Swift::Void __swiftcall MOMusicPlaybackCoordinator.sendProgressNotificationsForID(track:progress:)(Swift::String track, Swift::Float progress)
{
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t (*v6)(__n128);
  __n128 v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  object = track._object;
  countAndFlagsBits = track._countAndFlagsBits;
  v6 = *(uint64_t (**)(__n128))(*(_QWORD *)v2 + 136);
  v7 = swift_bridgeObjectRetain(track._object);
  v8 = v6(v7);
  if (!*(_QWORD *)(v8 + 16)
    || (v9 = specialized __RawDictionaryStorage.find<A>(_:)(countAndFlagsBits, (uint64_t)object), (v10 & 1) == 0))
  {
    swift_bridgeObjectRelease(object);
    v16 = v8;
LABEL_8:
    swift_bridgeObjectRelease(v16);
    return;
  }
  v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(object);
  swift_bridgeObjectRelease(v8);
  v12 = *(_QWORD *)(v11 + 16);
  if (!v12)
  {
    v16 = v11;
    goto LABEL_8;
  }
  v13 = v11 + 32;
  do
  {
    outlined init with copy of MOProtectedAppsManagerDelegate(v13, (uint64_t)v17);
    v14 = v18;
    v15 = v19;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    (*(void (**)(uint64_t, uint64_t, Swift::Float))(v15 + 32))(v14, v15, progress);
    __swift_destroy_boxed_opaque_existential_1(v17);
    v13 += 40;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease(v11);
}

Swift::Void __swiftcall MOMusicPlaybackCoordinator.updateNowPlayingTrack()()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v1 = (*((uint64_t (**)(void))*v0 + 23))();
  if (v2)
  {
    v3 = v2;
    (*((void (**)(uint64_t))*v0 + 32))(v1);
    swift_bridgeObjectRelease(v3);
  }
  v4 = objc_msgSend(v0[2], "nowPlayingItem");
  if (v4)
  {
    v9 = v4;
    v5 = objc_msgSend(v4, "playbackStoreID");
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v8 = v7;

    (*((void (**)(uint64_t, uint64_t))*v0 + 24))(v6, v8);
  }
}

Swift::Void __swiftcall MOMusicPlaybackCoordinator.updatePlayState()()
{
  id *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void (**v7)(uint64_t, _QWORD);
  uint64_t v8;
  id v9;

  v1 = objc_msgSend(v0[2], "nowPlayingItem");
  if (v1)
  {
    v9 = v1;
    v2 = objc_msgSend(v1, "playbackStoreID");
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v5 = v4;

    v6 = (*((uint64_t (**)(void))*v0 + 41))();
    v7 = (void (**)(uint64_t, _QWORD))*v0;
    if ((v6 & 1) != 0)
    {
      v7[32](v3, v5);
      swift_bridgeObjectRelease(v5);
    }
    else
    {
      v7[31](v3, v5);
      v8 = swift_bridgeObjectRelease(v5);
      (*((void (**)(uint64_t))*v0 + 39))(v8);
    }

  }
}

Swift::Void __swiftcall MOMusicPlaybackCoordinator.updateDelegateProgressIndication()()
{
  id *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  double v8;
  float v9;
  float v10;
  id v11;

  v1 = objc_msgSend(v0[2], "nowPlayingItem");
  if (v1)
  {
    v11 = v1;
    v2 = objc_msgSend(v1, "playbackStoreID");
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v5 = v4;

    objc_msgSend(v0[2], "currentPlaybackTime");
    v7 = v6;
    objc_msgSend(v11, "playbackDuration");
    v9 = v8;
    if (v9 > 0.0)
    {
      v10 = v7;
      (*((void (**)(uint64_t, uint64_t, float))*v0 + 33))(v3, v5, v10 / v9);
    }
    swift_bridgeObjectRelease(v5);

  }
}

Swift::Void __swiftcall MOMusicPlaybackCoordinator.playbackStateDidChange(note:)(NSNotification note)
{
  uint64_t v1;

  (*(void (**)(void))(*(_QWORD *)v1 + 280))();
}

Swift::Void __swiftcall MOMusicPlaybackCoordinator.nowPlayingItemChanged(note:)(NSNotification note)
{
  uint64_t v1;

  (*(void (**)(void))(*(_QWORD *)v1 + 272))();
}

Swift::Void __swiftcall MOMusicPlaybackCoordinator.createTimerIfNeeded()()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v1 = *(uint64_t (**)(void))(*(_QWORD *)v0 + 160);
  v2 = (void *)v1();

  if (!v2)
  {
    v3 = objc_msgSend((id)objc_opt_self(NSTimer), "scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:", v0, "updateDelegateProgressIndication", 0, 1, 1.0);
    v4 = (*(uint64_t (**)(id))(*(_QWORD *)v0 + 168))(v3);
    v5 = (void *)((uint64_t (*)(uint64_t))v1)(v4);
    if (v5)
    {
      v6 = v5;
      objc_msgSend(v5, "setTolerance:", 0.2);

    }
    (*(void (**)(void))(*(_QWORD *)v0 + 288))();
  }
}

Swift::Void __swiftcall MOMusicPlaybackCoordinator.invalidateTimerIfNeeded()()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  void *v2;
  void *v3;

  v1 = *(uint64_t (**)(void))(*(_QWORD *)v0 + 160);
  v2 = (void *)v1();

  if (v2)
  {
    v3 = (void *)v1();
    objc_msgSend(v3, "invalidate");

    (*(void (**)(_QWORD))(*(_QWORD *)v0 + 168))(0);
  }
}

Swift::Bool __swiftcall MOMusicPlaybackCoordinator.updateTimerForPauseState()()
{
  id *v0;
  id v1;

  v1 = objc_msgSend(v0[2], "playbackState");
  if (v1 != (id)1)
    (*((void (**)(void))*v0 + 40))();
  return v1 != (id)1;
}

Swift::Bool __swiftcall MOMusicPlaybackCoordinator.isPlaying()()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "playbackState") == (id)1;
}

uint64_t MOMusicPlaybackCoordinator.doesMediaViewIDMatchNowPlaying(view:)(_QWORD *a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;

  v3 = objc_msgSend(*(id *)(v1 + 16), "nowPlayingItem");
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, "playbackStoreID");
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v8 = v7;

    v9 = a1[3];
    v10 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v9);
    v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
    if (v12)
    {
      v13 = v12;
      if (v6 == v11 && v12 == v8)
        v15 = 1;
      else
        v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v11, v12, 0);
      swift_bridgeObjectRelease(v8);
      swift_bridgeObjectRelease(v13);
    }
    else
    {
      swift_bridgeObjectRelease(v8);
      v15 = 0;
    }

  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

BOOL MOMusicPlaybackCoordinator.isMediaViewNowPlaying(view:)()
{
  uint64_t v0;

  return ((*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))() & 1) != 0
      && ((*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))() & 1) != 0;
}

void MOMusicPlaybackCoordinator.handlePlayPauseButtonChange(view:)(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void **v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  Class isa;
  void *v21;
  _QWORD *v22;
  void *v23;
  _QWORD *v24;
  id v25;
  void *v26;
  _QWORD *v27;
  void *v28;
  _QWORD *v29;
  id v30;
  uint64_t v31;
  void **aBlock;
  uint64_t v33;
  void (*v34)(uint64_t, void *);
  void *v35;
  void (*v36)(uint64_t);
  _QWORD *v37;

  v2 = v1;
  v4 = a1[3];
  v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  if (v7)
    v8 = v6;
  else
    v8 = 0;
  if (v7)
    v9 = v7;
  else
    v9 = 0xE000000000000000;
  if (((*(uint64_t (**)(_QWORD *))(*v1 + 344))(a1) & 1) != 0)
  {
    if (((*(uint64_t (**)(void))(*v1 + 336))() & 1) != 0)
    {
      if (serverManager._clientConnections != (NSMutableDictionary *)-1)
        swift_once(&serverManager._clientConnections, one-time initialization function for shared);
      v10 = type metadata accessor for Logger(0);
      __swift_project_value_buffer(v10, (uint64_t)static MOAngelLogger.shared);
      swift_bridgeObjectRetain(v9);
      v12 = Logger.logObject.getter(v11);
      v13 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc(12, -1);
        v15 = (void **)swift_slowAlloc(32, -1);
        aBlock = v15;
        *(_DWORD *)v14 = 136315138;
        swift_bridgeObjectRetain(v9);
        v31 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v9, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &aBlock, v14 + 4);
        swift_bridgeObjectRelease_n(v9, 3);
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "[MOMusicPlayerCoordinator] pause trackId=%s", v14, 0xCu);
        swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v15, -1, -1);
        swift_slowDealloc(v14, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v9, 2);
      }
      objc_msgSend((id)v2[2], "pause");
    }
    else
    {
      v26 = (void *)v1[2];
      v27 = (_QWORD *)swift_allocObject(&unk_1001EBA58, 40, 7);
      v27[2] = v8;
      v27[3] = v9;
      v27[4] = v1;
      v36 = partial apply for closure #1 in MOMusicPlaybackCoordinator.handlePlayPauseButtonChange(view:);
      v37 = v27;
      aBlock = _NSConcreteStackBlock;
      v33 = 1107296256;
      v34 = thunk for @escaping @callee_guaranteed (@guaranteed CGImageRef?) -> ();
      v35 = &block_descriptor_6_2;
      v28 = _Block_copy(&aBlock);
      v29 = v37;
      v30 = v26;
      swift_retain(v2);
      objc_msgSend(v30, "prepareToPlayWithCompletionHandler:", v28, swift_release(v29).n128_f64[0]);
      _Block_release(v28);

    }
  }
  else
  {
    v16 = (void *)v1[2];
    v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    v18 = swift_allocObject(v17, 48, 7);
    *(_OWORD *)(v18 + 16) = xmmword_10019ED20;
    *(_QWORD *)(v18 + 32) = v8;
    *(_QWORD *)(v18 + 40) = v9;
    swift_bridgeObjectRetain(v9);
    v19 = v16;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v19, "setQueueWithStoreIDs:", isa, swift_bridgeObjectRelease(v18).n128_f64[0]);

    v21 = (void *)v2[2];
    v22 = (_QWORD *)swift_allocObject(&unk_1001EBA08, 40, 7);
    v22[2] = v8;
    v22[3] = v9;
    v22[4] = v2;
    v36 = partial apply for closure #2 in MOMusicPlaybackCoordinator.handlePlayPauseButtonChange(view:);
    v37 = v22;
    aBlock = _NSConcreteStackBlock;
    v33 = 1107296256;
    v34 = thunk for @escaping @callee_guaranteed (@guaranteed CGImageRef?) -> ();
    v35 = &block_descriptor_32;
    v23 = _Block_copy(&aBlock);
    v24 = v37;
    swift_retain(v2);
    v25 = v21;
    objc_msgSend(v25, "prepareToPlayWithCompletionHandler:", v23, swift_release(v24).n128_f64[0]);
    _Block_release(v23);

  }
}

void closure #1 in MOMusicPlaybackCoordinator.handlePlayPauseButtonChange(view:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, const char *a5)
{
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  NSObject *oslog;
  uint64_t v26;
  uint64_t v27;

  if (a1)
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1)
      swift_once(&serverManager._clientConnections, one-time initialization function for shared);
    v6 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v6, (uint64_t)static MOAngelLogger.shared);
    swift_errorRetain(a1);
    v7 = swift_errorRetain(a1);
    oslog = Logger.logObject.getter(v7);
    v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(12, -1);
      v10 = swift_slowAlloc(32, -1);
      v27 = v10;
      *(_DWORD *)v9 = 136315138;
      v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error?);
      v12 = Optional.debugDescription.getter(v11);
      v14 = v13;
      v26 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v9 + 4);
      swift_bridgeObjectRelease(v14);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, oslog, v8, "[MOMusicPlayerCoordinator] error %s", v9, 0xCu);
      swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v10, -1, -1);
      swift_slowDealloc(v9, -1, -1);

    }
    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);

    }
  }
  else
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1)
      swift_once(&serverManager._clientConnections, one-time initialization function for shared);
    v19 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v19, (uint64_t)static MOAngelLogger.shared);
    v20 = swift_bridgeObjectRetain_n(a3, 2);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(12, -1);
      v24 = swift_slowAlloc(32, -1);
      v27 = v24;
      *(_DWORD *)v23 = 136315138;
      swift_bridgeObjectRetain(a3);
      v26 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a2, a3, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v23 + 4);
      swift_bridgeObjectRelease_n(a3, 3);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, a5, v23, 0xCu);
      swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v24, -1, -1);
      swift_slowDealloc(v23, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a3, 2);
    }
    objc_msgSend(*(id *)(a4 + 16), "play");
  }
}

void partial apply for closure #2 in MOMusicPlaybackCoordinator.handlePlayPauseButtonChange(view:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in MOMusicPlaybackCoordinator.handlePlayPauseButtonChange(view:)(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), "[MOMusicPlayerCoordinator] Playing trackId=%s");
}

uint64_t block_copy_helper_32(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_32(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void partial apply for closure #1 in MOMusicPlaybackCoordinator.handlePlayPauseButtonChange(view:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in MOMusicPlaybackCoordinator.handlePlayPauseButtonChange(view:)(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), "[MOMusicPlayerCoordinator] Resuming trackId=%s");
}

uint64_t sub_100138DBC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 136))();
  *a2 = result;
  return result;
}

uint64_t sub_100138DEC(_QWORD *a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 144);
  v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

uint64_t sub_100138E1C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 160))();
  *a2 = result;
  return result;
}

uint64_t sub_100138E4C(id *a1, uint64_t a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))(**(_QWORD **)a2 + 168);
  v4 = *a1;
  return v3(v2);
}

uint64_t sub_100138E88@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 184))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100138EB8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 192);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t type metadata accessor for MOMusicPlaybackCoordinator()
{
  return objc_opt_self(_TtC16MomentsUIService26MOMusicPlaybackCoordinator);
}

void MOSuggestionSheetListPlayButton.mediaAssetID.didset()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(_QWORD *);
  id v4;
  void (*v5)(_QWORD *);
  id v6;
  id v7;
  NSString v8;
  id v9;
  _QWORD v10[3];
  uint64_t v11;
  _UNKNOWN **v12;

  if (one-time initialization token for shared != -1)
    swift_once(&one-time initialization token for shared, one-time initialization function for shared);
  v1 = static MOMusicPlaybackCoordinator.shared;
  v2 = type metadata accessor for MOSuggestionSheetListPlayButton();
  v11 = v2;
  v12 = &protocol witness table for MOSuggestionSheetListPlayButton;
  v10[0] = v0;
  v3 = *(void (**)(_QWORD *))(*(_QWORD *)v1 + 216);
  v4 = v0;
  v3(v10);
  __swift_destroy_boxed_opaque_existential_1(v10);
  v11 = v2;
  v12 = &protocol witness table for MOSuggestionSheetListPlayButton;
  v10[0] = v4;
  v5 = *(void (**)(_QWORD *))(*(_QWORD *)static MOMusicPlaybackCoordinator.shared + 352);
  v6 = v4;
  v5(v10);
  __swift_destroy_boxed_opaque_existential_1(v10);
  v7 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:", 6, 10.0);
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v8, v7);

  if (!v9)
    v9 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  objc_msgSend(v6, "setImage:forState:", v9, 0);

}

uint64_t MOSuggestionSheetListPlayButton.mediaAssetID.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetListPlayButton_mediaAssetID);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetListPlayButton_mediaAssetID, v4, 0, 0);
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

void MOSuggestionSheetListPlayButton.mediaAssetID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v7[24];

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetListPlayButton_mediaAssetID);
  swift_beginAccess(v2 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetListPlayButton_mediaAssetID, v7, 1, 0);
  v6 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  swift_bridgeObjectRelease(v6);
  MOSuggestionSheetListPlayButton.mediaAssetID.didset();
}

void (*MOSuggestionSheetListPlayButton.mediaAssetID.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetListPlayButton_mediaAssetID, a1, 33, 0);
  return MOSuggestionSheetListPlayButton.mediaAssetID.modify;
}

void MOSuggestionSheetListPlayButton.mediaAssetID.modify(uint64_t a1, char a2)
{
  swift_endAccess(a1);
  if ((a2 & 1) == 0)
    MOSuggestionSheetListPlayButton.mediaAssetID.didset();
}

id MOSuggestionSheetListPlayButton.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  objc_class *v10;
  id v11;
  objc_super v13;

  v9 = &v4[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetListPlayButton_mediaAssetID];
  v10 = (objc_class *)type metadata accessor for MOSuggestionSheetListPlayButton();
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v13.receiver = v4;
  v13.super_class = v10;
  v11 = objc_msgSendSuper2(&v13, "initWithFrame:", a1, a2, a3, a4);
  MOSuggestionSheetListPlayButton.sharedInit()();

  return v11;
}

uint64_t type metadata accessor for MOSuggestionSheetListPlayButton()
{
  return objc_opt_self(_TtC16MomentsUIService31MOSuggestionSheetListPlayButton);
}

id MOSuggestionSheetListPlayButton.init(coder:)(void *a1)
{
  char *v1;
  char *v3;
  objc_class *v4;
  id v5;
  id v6;
  id v7;
  objc_super v9;

  v3 = &v1[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetListPlayButton_mediaAssetID];
  v4 = (objc_class *)type metadata accessor for MOSuggestionSheetListPlayButton();
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v9.receiver = v1;
  v9.super_class = v4;
  v5 = objc_msgSendSuper2(&v9, "initWithCoder:", a1);
  v6 = v5;
  if (v5)
  {
    v7 = v5;
    MOSuggestionSheetListPlayButton.sharedInit()();

  }
  return v6;
}

uint64_t MOSuggestionSheetListPlayButton.sharedInit()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  NSString v18;
  id v19;
  id v20;
  Swift::String v21;
  Swift::String v22;
  void *object;
  NSString v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v29;
  uint64_t v30;
  Swift::String v31;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  __chkstk_darwin(v2);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UIButton.Configuration.CornerStyle(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UIButton.Configuration.Size(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for UIButton.Configuration(0);
  v13 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.filled()(objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0));
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for UIButton.Configuration.Size.medium(_:), v9);
  UIButton.Configuration.buttonSize.setter(v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v5);
  UIButton.Configuration.cornerStyle.setter(v8);
  v16 = (void *)objc_opt_self(UIColor);
  UIButton.Configuration.baseBackgroundColor.setter(objc_msgSend(v16, "tertiarySystemFillColor"));
  UIButton.Configuration.baseForegroundColor.setter(objc_msgSend(v16, "systemIndigoColor"));
  v17 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:", 6, 10.0);
  v18 = String._bridgeToObjectiveC()();
  v19 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v18, v17);

  UIButton.Configuration.image.setter(v19);
  v20 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v31._object = (void *)0x80000001001ADDB0;
  v21._countAndFlagsBits = 0x64654D2079616C50;
  v21._object = (void *)0xEA00000000006169;
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  v31._countAndFlagsBits = 0xD000000000000027;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, (NSBundle)v20, v22, v31)._object;

  v24 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setAccessibilityLabel:", v24, swift_bridgeObjectRelease(object).n128_f64[0]);

  v25 = v30;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v4, v15, v30);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v4, 0, 1, v25);
  UIButton.configuration.setter(v4);
  type metadata accessor for UIAction();
  v26 = swift_allocObject(&unk_1001EBB10, 24, 7);
  swift_unknownObjectWeakInit(v26 + 16);
  v27 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, partial apply for closure #1 in MOSuggestionSheetListPlayButton.sharedInit(), v26);
  objc_msgSend(v1, "addAction:forControlEvents:", v27, 64);

  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v25);
}

void closure #1 in MOSuggestionSheetListPlayButton.sharedInit()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    (*(void (**)(void))((swift_isaMask & *Strong) + 0x80))();

  }
}

Swift::Void __swiftcall MOSuggestionSheetListPlayButton.setPublicUI(_:)(Swift::Bool a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v3);
  v8 = (char *)&v11 - v7;
  UIButton.configuration.getter(v6);
  v9 = type metadata accessor for UIButton.Configuration(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    outlined init with copy of UIButton.Configuration?((uint64_t)v8, (uint64_t)v5);
    UIButton.configuration.setter(v5);
    outlined destroy of UIButton.Configuration?((uint64_t)v8);
  }
  else
  {
    v10 = objc_msgSend((id)objc_opt_self(UIColor), "systemIndigoColor");
    UIButton.Configuration.baseForegroundColor.setter(v10);
    UIButton.configuration.setter(v8);
  }
  objc_msgSend(v1, "setNeedsUpdateConfiguration");
}

Swift::Void __swiftcall MOSuggestionSheetListPlayButton.touchPlayback()()
{
  void *v0;
  uint64_t v1;
  void (*v2)(_QWORD *);
  id v3;
  _QWORD v4[5];

  if (one-time initialization token for shared != -1)
    swift_once(&one-time initialization token for shared, one-time initialization function for shared);
  v1 = static MOMusicPlaybackCoordinator.shared;
  v4[3] = type metadata accessor for MOSuggestionSheetListPlayButton();
  v4[4] = &protocol witness table for MOSuggestionSheetListPlayButton;
  v4[0] = v0;
  v2 = *(void (**)(_QWORD *))(*(_QWORD *)v1 + 360);
  v3 = v0;
  v2(v4);
  __swift_destroy_boxed_opaque_existential_1(v4);
}

uint64_t MOSuggestionSheetListPlayButton.__ivar_destroyer()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetListPlayButton_mediaAssetID
                                             + 8));
}

id MOSuggestionSheetListPlayButton.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionSheetListPlayButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t MOSuggestionSheetListPlayButton.mediaID.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x58))();
}

Swift::Void __swiftcall MOSuggestionSheetListPlayButton.didReceiveShouldPlayNotification()()
{
  MOSuggestionSheetListPlayButton.didReceiveShouldPlayNotification()("[MOSuggestionSheetListPlayButton] Start Playing Notification");
}

Swift::Void __swiftcall MOSuggestionSheetListPlayButton.didReceiveShouldStopNotification()()
{
  MOSuggestionSheetListPlayButton.didReceiveShouldPlayNotification()("[MOSuggestionSheetListPlayButton] Stop Playing Notification");
}

void MOSuggestionSheetListPlayButton.didReceiveShouldPlayNotification()(const char *a1)
{
  void *v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;
  NSString v10;
  id v11;
  id v12;
  id v13;

  v3 = v1;
  if (serverManager._clientConnections != (NSMutableDictionary *)-1)
    swift_once(&serverManager._clientConnections, one-time initialization function for shared);
  v4 = type metadata accessor for Logger(0);
  v5 = __swift_project_value_buffer(v4, (uint64_t)static MOAngelLogger.shared);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, a1, v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  v9 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:", 6, 10.0);
  v10 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v10, v9);

  v11 = v12;
  if (!v12)
    v11 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  v13 = v11;
  objc_msgSend(v3, "setImage:forState:");

}

uint64_t protocol witness for MOMusicPlaybackCoordinatorDelegate.mediaID.getter in conformance MOSuggestionSheetListPlayButton()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x58))();
}

void protocol witness for MOMusicPlaybackCoordinatorDelegate.didReceiveShouldPlayNotification() in conformance MOSuggestionSheetListPlayButton()
{
  MOSuggestionSheetListPlayButton.didReceiveShouldPlayNotification()();
}

void protocol witness for MOMusicPlaybackCoordinatorDelegate.didReceiveShouldStopNotification() in conformance MOSuggestionSheetListPlayButton()
{
  MOSuggestionSheetListPlayButton.didReceiveShouldStopNotification()();
}

uint64_t sub_100139D28@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x58))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100139D68(uint64_t *a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **a2) + 0x60);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t sub_100139DBC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void partial apply for closure #1 in MOSuggestionSheetListPlayButton.sharedInit()(uint64_t a1)
{
  uint64_t v1;

  closure #1 in MOSuggestionSheetListPlayButton.sharedInit()(a1, v1);
}

uint64_t MOSuggestionAssetReference.visualSubtypeWithCount.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(__n128);
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for MOMultiMapAssetReference(0);
  v2 = swift_dynamicCastClass(v0, v1);
  if (!v2)
    return MOSuggestionAssetReference.visualSubType.getter();
  v3 = *(uint64_t (**)(__n128))(*(_QWORD *)v2 + 360);
  v4 = swift_retain(v0);
  v5 = v3(v4);
  v6 = v5;
  if ((unint64_t)v5 >> 62)
  {
    if (v5 >= 0)
      v5 &= 0xFFFFFFFFFFFFFF8uLL;
    _CocoaArrayWrapper.endIndex.getter(v5);
  }
  swift_bridgeObjectRelease(v6);
  swift_release(v0);
  return 15;
}

void *one-time initialization function for assetTypeDirectMapping()
{
  uint64_t v0;
  uint64_t inited;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *result;
  uint64_t v17;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(MOSuggestionAssetsType, MOSuggestionAssetVisualSubType)>);
  inited = swift_initStackObject(v0, &v17);
  *(_OWORD *)(inited + 16) = xmmword_1001A02E0;
  v2 = (void *)MOSuggestionAssetsTypePhoto;
  *(_QWORD *)(inited + 32) = MOSuggestionAssetsTypePhoto;
  *(_BYTE *)(inited + 40) = 12;
  v3 = (void *)MOSuggestionAssetsTypeLivePhoto;
  *(_QWORD *)(inited + 48) = MOSuggestionAssetsTypeLivePhoto;
  *(_BYTE *)(inited + 56) = 13;
  v4 = (void *)MOSuggestionAssetsTypeVideo;
  *(_QWORD *)(inited + 64) = MOSuggestionAssetsTypeVideo;
  *(_BYTE *)(inited + 72) = 14;
  v5 = (void *)MOSuggestionAssetsTypeWorkoutGroup;
  *(_QWORD *)(inited + 80) = MOSuggestionAssetsTypeWorkoutGroup;
  *(_BYTE *)(inited + 88) = 10;
  v6 = (void *)MOSuggestionAssetsTypeWorkout;
  *(_QWORD *)(inited + 96) = MOSuggestionAssetsTypeWorkout;
  *(_BYTE *)(inited + 104) = 7;
  v7 = (void *)MOSuggestionAssetsTypeMultiPinMap;
  *(_QWORD *)(inited + 112) = MOSuggestionAssetsTypeMultiPinMap;
  *(_BYTE *)(inited + 120) = 15;
  v8 = (void *)MOSuggestionAssetsTypeStateOfMindAsset;
  *(_QWORD *)(inited + 128) = MOSuggestionAssetsTypeStateOfMindAsset;
  *(_BYTE *)(inited + 136) = 25;
  v9 = v2;
  v10 = v3;
  v11 = v4;
  v12 = v5;
  v13 = v6;
  v14 = v7;
  v15 = v8;
  result = (void *)specialized Dictionary.init(dictionaryLiteral:)(inited);
  static MOSuggestionAssetReference.assetTypeDirectMapping = result;
  return result;
}

unint64_t MOSuggestionAssetReference.mediaSubType.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
  if ((v2 & 1) != 0 || (unint64_t)(v1 - 1) > 7)
    return 26;
  else
    return 0x605041A011A0200uLL >> (8 * (v1 - 1));
}

uint64_t MOSuggestionAssetReference.motionActivitySubType.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;

  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
  if (!v1)
    return 26;
  v2 = (void *)v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOWorkoutMotionActivityActionWalk[0]);
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  if (v3 == v6 && v5 == v7)
  {
    swift_bridgeObjectRelease_n(v5, 2);
    goto LABEL_20;
  }
  v9 = v7;
  v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  if ((v10 & 1) != 0)
  {
LABEL_20:

    return 17;
  }
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOWorkoutMotionActivityActionRun[0]);
  v13 = v12;
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  if (v11 == v14 && v13 == v15)
  {
    swift_bridgeObjectRelease_n(v13, 2);
    goto LABEL_23;
  }
  v17 = v15;
  v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v14, v15, 0);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v17);
  if ((v18 & 1) != 0)
  {
LABEL_23:

    return 18;
  }
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOWorkoutMotionActivityActionRunAndWalk[0]);
  v21 = v20;
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v24 = v22;
  v25 = 19;
  if (v19 != v23 || v21 != v22)
  {
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v23, v22, 0) & 1) != 0)
      v25 = 19;
    else
      v25 = 26;
  }
  v26 = v2;

  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v24);
  return v25;
}

uint64_t MOSuggestionAssetReference.genericMapSubType.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(__n128);
  __n128 v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30;

  v1 = v0;
  v2 = type metadata accessor for MOGenericMapAssetReference(0);
  v3 = swift_dynamicCastClass(v0, v2);
  if (!v3)
    return 26;
  v4 = *(uint64_t (**)(__n128))(*(_QWORD *)v3 + 344);
  v5 = swift_retain(v0);
  v6 = (void *)v4(v5);
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOWorkoutMotionActivityActionWalk[0]);
  v9 = v8;
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  if (v7 == v10 && v9 == v11)
  {
    swift_bridgeObjectRelease_n(v9, 2);
    goto LABEL_16;
  }
  v13 = v11;
  v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v13);
  if ((v14 & 1) != 0)
  {
LABEL_16:
    swift_release(v1);

    return 20;
  }
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOWorkoutMotionActivityActionRun[0]);
  v17 = v16;
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  if (v15 == v18 && v17 == v19)
  {
    swift_bridgeObjectRelease_n(v17, 2);
    goto LABEL_18;
  }
  v21 = v19;
  v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, v18, v19, 0);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v21);
  if ((v22 & 1) != 0)
  {
LABEL_18:
    swift_release(v1);

    return 21;
  }
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOWorkoutMotionActivityActionRunAndWalk[0]);
  v25 = v24;
  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v28 = v26;
  if (v23 == v27 && v25 == v26)
  {

    swift_release(v1);
    swift_bridgeObjectRelease_n(v25, 2);
    return 22;
  }
  v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v25, v27, v26, 0);

  swift_release(v1);
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v28);
  if ((v30 & 1) != 0)
    return 22;
  return 26;
}

unint64_t MOSuggestionAssetReference.visualSubType.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  void *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  if (one-time initialization token for assetTypeDirectMapping != -1)
    swift_once(&one-time initialization token for assetTypeDirectMapping, one-time initialization function for assetTypeDirectMapping);
  v1 = static MOSuggestionAssetReference.assetTypeDirectMapping;
  v2 = *(uint64_t (**)(void))(*(_QWORD *)v0 + 120);
  v3 = v2();
  v4 = (void *)v3;
  if (v1[2])
  {
    v5 = specialized __RawDictionaryStorage.find<A>(_:)(v3);
    if ((v6 & 1) != 0)
    {
      v7 = *(unsigned __int8 *)(v1[7] + v5);

      return v7;
    }
  }

  v9 = (void *)v2();
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeMediaCoverArt);
  v12 = v11;
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  if (v10 == v13 && v12 == v14)
  {
    swift_bridgeObjectRelease_n(v12, 2);
    goto LABEL_21;
  }
  v16 = v14;
  v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v13, v14, 0);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v16);
  if ((v17 & 1) != 0)
  {
LABEL_21:

    return MOSuggestionAssetReference.mediaSubType.getter();
  }
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeMotionActivity);
  v20 = v19;
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  if (v18 == v21 && v20 == v22)
  {
    swift_bridgeObjectRelease_n(v20, 2);
    goto LABEL_23;
  }
  v24 = v22;
  v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, v21, v22, 0);
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v24);
  if ((v25 & 1) != 0)
  {
LABEL_23:

    return MOSuggestionAssetReference.motionActivitySubType.getter();
  }
  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeGenericMap);
  v28 = v27;
  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v31 = v29;
  if (v26 == v30 && v28 == v29)
  {

    swift_bridgeObjectRelease_n(v28, 2);
  }
  else
  {
    v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v28, v30, v29, 0);

    swift_bridgeObjectRelease(v28);
    swift_bridgeObjectRelease(v31);
    if ((v32 & 1) == 0)
      return 26;
  }
  return MOSuggestionAssetReference.genericMapSubType.getter();
}

void static MOSuggestionAssetAppIconProvider.getImageFor(bundleIdentifier:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  NSString v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD v14[5];
  uint64_t v15;

  v7 = objc_allocWithZone((Class)ISIcon);
  swift_bridgeObjectRetain(a2);
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(v7, "initWithBundleIdentifier:", v8, swift_bridgeObjectRelease(a2).n128_f64[0]);

  if (one-time initialization token for iconDescriptor != -1)
    swift_once(&one-time initialization token for iconDescriptor, one-time initialization function for iconDescriptor);
  v10 = static MOSuggestionAssetAppIconProvider.iconDescriptor;
  v11 = swift_allocObject(&unk_1001EBB40, 32, 7);
  *(_QWORD *)(v11 + 16) = a3;
  *(_QWORD *)(v11 + 24) = a4;
  v14[4] = _s16MomentsUIService32MOSuggestionAssetAppIconProviderC11getImageFor16bundleIdentifier10completionySS_ySo7UIImageCSgctFZySo10CGImageRefaSgcfU_TA_0;
  v15 = v11;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = thunk for @escaping @callee_guaranteed (@guaranteed CGImageRef?) -> ();
  v14[3] = &block_descriptor_33;
  v12 = _Block_copy(v14);
  v13 = v15;
  swift_retain(a4);
  objc_msgSend(v9, "getCGImageForImageDescriptor:completion:", v10, v12, swift_release(v13).n128_f64[0]);
  _Block_release(v12);

}

uint64_t MOSuggestionAssetAppIconProvider.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  double v3;
  double v4;

  v1 = swift_allocObject(v0, 24, 7);
  v2 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v2, "scale");
  v4 = v3;

  *(_QWORD *)(v1 + 16) = objc_msgSend(objc_allocWithZone((Class)ISImageDescriptor), "initWithSize:scale:", 350.0, 350.0, v4);
  return v1;
}

uint64_t *MOSuggestionAssetAppIconProvider.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1)
    swift_once(&one-time initialization token for shared, one-time initialization function for shared);
  return &static MOSuggestionAssetAppIconProvider.shared;
}

double static MOSuggestionAssetAppIconProvider.shared.getter()
{
  double result;

  if (one-time initialization token for shared != -1)
    swift_once(&one-time initialization token for shared, one-time initialization function for shared);
  *(_QWORD *)&result = swift_retain(static MOSuggestionAssetAppIconProvider.shared).n128_u64[0];
  return result;
}

id one-time initialization function for iconDescriptor()
{
  id v0;
  double v1;
  double v2;
  id result;

  v0 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v0, "scale");
  v2 = v1;

  result = objc_msgSend(objc_allocWithZone((Class)ISImageDescriptor), "initWithSize:scale:", 50.0, 50.0, v2);
  static MOSuggestionAssetAppIconProvider.iconDescriptor = (uint64_t)result;
  return result;
}

void MOSuggestionAssetAppIconProvider.getAssetFor(bundleIdentifier:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _QWORD v15[5];
  uint64_t v16;

  v8 = objc_allocWithZone((Class)ISIcon);
  swift_bridgeObjectRetain(a2);
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v8, "initWithBundleIdentifier:", v9, swift_bridgeObjectRelease(a2).n128_f64[0]);

  v11 = *(_QWORD *)(v4 + 16);
  v12 = swift_allocObject(&unk_1001EBB90, 32, 7);
  *(_QWORD *)(v12 + 16) = a3;
  *(_QWORD *)(v12 + 24) = a4;
  v15[4] = partial apply for closure #1 in MOSuggestionAssetAppIconProvider.getAssetFor(bundleIdentifier:completion:);
  v16 = v12;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = thunk for @escaping @callee_guaranteed (@guaranteed CGImageRef?) -> ();
  v15[3] = &block_descriptor_6_3;
  v13 = _Block_copy(v15);
  v14 = v16;
  swift_retain(a4);
  objc_msgSend(v10, "getCGImageForImageDescriptor:completion:", v11, v13, swift_release(v14).n128_f64[0]);
  _Block_release(v13);

}

void closure #1 in MOSuggestionAssetAppIconProvider.getAssetFor(bundleIdentifier:completion:)(void *a1, void (*a2)(void))
{
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  id v9;

  if (a1)
  {
    v4 = objc_allocWithZone((Class)UIImage);
    v5 = a1;
    v6 = objc_msgSend(v4, "initWithCGImage:", v5);
    v7 = MOSuggestionAssetsTypeAppIcon;
    v8 = type metadata accessor for UIImage();
    v9 = objc_msgSend(objc_allocWithZone((Class)MOSuggestionAsset), "init:type:contentClassType:", v6, v7, swift_getObjCClassFromMetadata(v8));
    a2();

  }
  else
  {
    a2();
  }
}

uint64_t sub_10013ABD0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void _s16MomentsUIService32MOSuggestionAssetAppIconProviderC11getImageFor16bundleIdentifier10completionySS_ySo7UIImageCSgctFZySo10CGImageRefaSgcfU_TA_0(void *a1)
{
  uint64_t v1;

  closure #1 in static MOSuggestionAssetAppIconProvider.getImageFor(bundleIdentifier:completion:)(a1, *(void (**)(void))(v1 + 16));
}

uint64_t block_copy_helper_33(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_33(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void static MOSuggestionAssetAppIconProvider.getImageFor(bundleIdentifier:shouldApplyMask:completion:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  id v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  _QWORD v16[5];
  uint64_t v17;

  v9 = objc_allocWithZone((Class)ISIcon);
  swift_bridgeObjectRetain(a2);
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v9, "initWithBundleIdentifier:", v10, swift_bridgeObjectRelease(a2).n128_f64[0]);

  if (one-time initialization token for iconDescriptor != -1)
    swift_once(&one-time initialization token for iconDescriptor, one-time initialization function for iconDescriptor);
  v12 = static MOSuggestionAssetAppIconProvider.iconDescriptor;
  objc_msgSend((id)static MOSuggestionAssetAppIconProvider.iconDescriptor, "setShouldApplyMask:", a3 & 1);
  v13 = swift_allocObject(&unk_1001EBBE0, 32, 7);
  *(_QWORD *)(v13 + 16) = a4;
  *(_QWORD *)(v13 + 24) = a5;
  v16[4] = partial apply for closure #1 in static MOSuggestionAssetAppIconProvider.getImageFor(bundleIdentifier:shouldApplyMask:completion:);
  v17 = v13;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = thunk for @escaping @callee_guaranteed (@guaranteed CGImageRef?) -> ();
  v16[3] = &block_descriptor_12_1;
  v14 = _Block_copy(v16);
  v15 = v17;
  swift_retain(a5);
  objc_msgSend(v11, "getCGImageForImageDescriptor:completion:", v12, v14, swift_release(v15).n128_f64[0]);
  _Block_release(v14);

}

void closure #1 in static MOSuggestionAssetAppIconProvider.getImageFor(bundleIdentifier:completion:)(void *a1, void (*a2)(void))
{
  id v4;
  id v5;
  id v6;

  if (a1)
  {
    v4 = objc_allocWithZone((Class)UIImage);
    v5 = a1;
    v6 = objc_msgSend(v4, "initWithCGImage:", v5);
    a2();

  }
  else
  {
    a2();
  }
}

uint64_t MOSuggestionAssetAppIconProvider.init()()
{
  uint64_t v0;
  id v1;
  double v2;
  double v3;

  v1 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v1, "scale");
  v3 = v2;

  *(_QWORD *)(v0 + 16) = objc_msgSend(objc_allocWithZone((Class)ISImageDescriptor), "initWithSize:scale:", 350.0, 350.0, v3);
  return v0;
}

void partial apply for closure #1 in MOSuggestionAssetAppIconProvider.getAssetFor(bundleIdentifier:completion:)(void *a1)
{
  uint64_t v1;

  closure #1 in MOSuggestionAssetAppIconProvider.getAssetFor(bundleIdentifier:completion:)(a1, *(void (**)(void))(v1 + 16));
}

uint64_t type metadata accessor for MOSuggestionAssetAppIconProvider()
{
  return objc_opt_self(_TtC16MomentsUIService32MOSuggestionAssetAppIconProvider);
}

uint64_t Array.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t WitnessTable;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  __int128 v14;
  __int128 v15;

  v8 = type metadata accessor for Array(0, a3);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v8);
  RandomAccessCollection<>.indices.getter(&v15, v8, WitnessTable, &protocol witness table for Int);
  v14 = v15;
  v13 = a1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Range<Int>);
  if ((Range.contains(_:)(&v13, v10) & 1) != 0)
  {
    Array.subscript.getter(a1, a2, a3);
    v11 = 0;
  }
  else
  {
    v11 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a4, v11, 1, a3);
}

id static MOSuggestionTheme.Fonts.footnoteBoldTightLeading()()
{
  return static MOSuggestionTheme.Fonts.footnoteBoldTightLeading()(&UIFontTextStyleFootnote);
}

id static MOSuggestionTheme.Fonts.caption1BoldTightLeading()()
{
  return static MOSuggestionTheme.Fonts.footnoteBoldTightLeading()(&UIFontTextStyleCaption1);
}

id static MOSuggestionTheme.Fonts.footnoteBoldTightLeading()(_QWORD *a1)
{
  id v1;
  id v2;
  id v3;

  v1 = objc_msgSend((id)objc_opt_self(UIFontDescriptor), "preferredFontDescriptorWithTextStyle:", *a1);
  v2 = objc_msgSend(v1, "fontDescriptorWithSymbolicTraits:", 32770);

  if (!v2)
    return 0;
  v3 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v2, 0.0);

  return v3;
}

void static MOSuggestionTheme.Fonts.footnoteBoldFont()()
{
  static MOSuggestionTheme.Fonts.footnoteBold()(&UIFontTextStyleFootnote);
}

id static MOSuggestionTheme.Fonts.footnote()()
{
  return static MOSuggestionTheme.Fonts.footnote()(&UIFontTextStyleFootnote);
}

Class static MOSuggestionTheme.Fonts.subheaderEmphFont()()
{
  return static MOSuggestionTheme.Fonts.subheaderEmphFont()(&UIFontTextStyleSubheadline, (UIFontWeight *)&UIFontWeightSemibold);
}

id static MOSuggestionTheme.Fonts.subheaderFont()()
{
  return static MOSuggestionTheme.Fonts.footnote()(&UIFontTextStyleSubheadline);
}

id static MOSuggestionTheme.Colors.keyColor(publicUI:)(char a1)
{
  void *v2;
  char **v3;

  v2 = (void *)objc_opt_self(UIColor);
  v3 = &selRef_systemBlueColor;
  if ((a1 & 1) == 0)
    v3 = &selRef_systemIndigoColor;
  return objc_msgSend(v2, *v3);
}

id static MOSuggestionTheme.Colors.backgroundPrimary()()
{
  return static MOSuggestionTheme.Colors.backgroundPrimary()((SEL *)&selRef_systemBackgroundColor);
}

void static MOSuggestionTheme.Fonts.headlineBoldFont()()
{
  static MOSuggestionTheme.Fonts.footnoteBold()(&UIFontTextStyleHeadline);
}

id static MOSuggestionTheme.Colors.backgroundGroupedSecondary()()
{
  return static MOSuggestionTheme.Colors.backgroundPrimary()((SEL *)&selRef_secondarySystemGroupedBackgroundColor);
}

void static MOSuggestionTheme.Fonts.subheaderFontBold()()
{
  static MOSuggestionTheme.Fonts.footnoteBold()(&UIFontTextStyleSubheadline);
}

Class static MOSuggestionTheme.Fonts.footnoteEmphFont()()
{
  return static MOSuggestionTheme.Fonts.subheaderEmphFont()(&UIFontTextStyleFootnote, (UIFontWeight *)&UIFontWeightSemibold);
}

id static MOSuggestionTheme.Colors.secondaryColor(publicUI:)(char a1)
{
  void *v2;
  char **v3;
  id v4;
  id v5;

  v2 = (void *)objc_opt_self(UIColor);
  v3 = &selRef_systemBlueColor;
  if ((a1 & 1) == 0)
    v3 = &selRef_systemIndigoColor;
  v4 = objc_msgSend(v2, *v3);
  v5 = objc_msgSend(v4, "colorWithAlphaComponent:", 0.15);

  return v5;
}

id static MOSuggestionTheme.Colors.textPrimary()()
{
  return static MOSuggestionTheme.Colors.backgroundPrimary()((SEL *)&selRef_labelColor);
}

id static MOSuggestionTheme.Colors.tertiaryFill()()
{
  return static MOSuggestionTheme.Colors.backgroundPrimary()((SEL *)&selRef_tertiarySystemFillColor);
}

uint64_t *MOSuggestionTheme.Colors.exerciseGreen.unsafeMutableAddressor()
{
  if (one-time initialization token for exerciseGreen != -1)
    swift_once(&one-time initialization token for exerciseGreen, one-time initialization function for exerciseGreen);
  return &static MOSuggestionTheme.Colors.exerciseGreen;
}

uint64_t *MOSuggestionTheme.Sizes.cornerRadius.unsafeMutableAddressor()
{
  if (one-time initialization token for cornerRadius != -1)
    swift_once(&one-time initialization token for cornerRadius, one-time initialization function for cornerRadius);
  return &static MOSuggestionTheme.Sizes.cornerRadius;
}

void *MOSuggestionTheme.Styles.shadowOpacity.unsafeMutableAddressor()
{
  return &static MOSuggestionTheme.Styles.shadowOpacity;
}

void *MOSuggestionTheme.Styles.blurRadius.unsafeMutableAddressor()
{
  return &static MOSuggestionTheme.Styles.blurRadius;
}

id static MOSuggestionTheme.Colors.backgroundGroupedPrimary()()
{
  return static MOSuggestionTheme.Colors.backgroundPrimary()((SEL *)&selRef_systemGroupedBackgroundColor);
}

id static MOSuggestionTheme.Colors.darkModePlatterBackgroundColor()()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  v1 = objc_msgSend(v0, "colorWithAlphaComponent:", 0.15);

  return v1;
}

Class static MOSuggestionTheme.Fonts.title3Font()()
{
  return static MOSuggestionTheme.Fonts.subheaderEmphFont()(&UIFontTextStyleTitle3, (UIFontWeight *)&UIFontWeightRegular);
}

id static MOSuggestionTheme.Fonts.callout()()
{
  return static MOSuggestionTheme.Fonts.footnote()(&UIFontTextStyleCallout);
}

id one-time initialization function for exerciseGreen()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.650980392, 1.0, 0.0, 1.0);
  static MOSuggestionTheme.Colors.exerciseGreen = (uint64_t)result;
  return result;
}

id UIColor.init(rgbColorCodeRed:green:blue:alpha:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;

  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)), "initWithRed:green:blue:alpha:", (double)a1 / 255.0, (double)a2 / 255.0, (double)a3 / 255.0, a4);
}

id static MOSuggestionTheme.Colors.exerciseGreen.getter()
{
  return default argument 2 of MOSuggestionWorkoutIconGlyphView.init(image:glyphBackgroundColor:glyphTintColor:)(&one-time initialization token for exerciseGreen, (id *)&static MOSuggestionTheme.Colors.exerciseGreen);
}

id one-time initialization function for exerciseGreenFaded()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.650980392, 1.0, 0.0, 0.18);
  static MOSuggestionTheme.Colors.exerciseGreenFaded = (uint64_t)result;
  return result;
}

uint64_t *MOSuggestionTheme.Colors.exerciseGreenFaded.unsafeMutableAddressor()
{
  if (one-time initialization token for exerciseGreenFaded != -1)
    swift_once(&one-time initialization token for exerciseGreenFaded, one-time initialization function for exerciseGreenFaded);
  return &static MOSuggestionTheme.Colors.exerciseGreenFaded;
}

id static MOSuggestionTheme.Colors.exerciseGreenFaded.getter()
{
  return default argument 2 of MOSuggestionWorkoutIconGlyphView.init(image:glyphBackgroundColor:glyphTintColor:)(&one-time initialization token for exerciseGreenFaded, (id *)&static MOSuggestionTheme.Colors.exerciseGreenFaded);
}

id static MOSuggestionTheme.Colors.textWhite()()
{
  return static MOSuggestionTheme.Colors.backgroundPrimary()((SEL *)&selRef_whiteColor);
}

id static MOSuggestionTheme.Colors.textSecondary()()
{
  return static MOSuggestionTheme.Colors.backgroundPrimary()((SEL *)&selRef_secondaryLabelColor);
}

id static MOSuggestionTheme.Colors.textSecondaryVibrant()()
{
  return static MOSuggestionTheme.Colors.textSecondaryVibrant()(0.7);
}

id static MOSuggestionTheme.Colors.textSecondaryVibrantThirdParty()()
{
  return static MOSuggestionTheme.Colors.textSecondaryVibrant()(0.6);
}

id static MOSuggestionTheme.Colors.textTertiary()()
{
  return static MOSuggestionTheme.Colors.backgroundPrimary()((SEL *)&selRef_tertiaryLabelColor);
}

id static MOSuggestionTheme.Colors.textTertiaryVibrant()()
{
  return static MOSuggestionTheme.Colors.textSecondaryVibrant()(0.4);
}

id static MOSuggestionTheme.Colors.textTertiaryVibrantThirdParty()()
{
  return static MOSuggestionTheme.Colors.textSecondaryVibrant()(0.25);
}

id static MOSuggestionTheme.Colors.textSecondaryVibrant()(double a1)
{
  id v2;
  id v3;

  v2 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  v3 = objc_msgSend(v2, "colorWithAlphaComponent:", a1);

  return v3;
}

id static MOSuggestionTheme.Colors.textQuaternary()()
{
  return static MOSuggestionTheme.Colors.backgroundPrimary()((SEL *)&selRef_quaternaryLabelColor);
}

id static MOSuggestionTheme.Colors.backgroundSecondary()()
{
  return static MOSuggestionTheme.Colors.backgroundPrimary()((SEL *)&selRef_secondarySystemBackgroundColor);
}

id static MOSuggestionTheme.Colors.backgroundTertiary()()
{
  return static MOSuggestionTheme.Colors.backgroundPrimary()((SEL *)&selRef_tertiarySystemBackgroundColor);
}

id static MOSuggestionTheme.Colors.primaryFill()()
{
  return static MOSuggestionTheme.Colors.backgroundPrimary()((SEL *)&selRef_systemFillColor);
}

id static MOSuggestionTheme.Colors.selectedBackgroundColor()()
{
  return static MOSuggestionTheme.Colors.backgroundPrimary()((SEL *)&selRef_secondarySystemFillColor);
}

id static MOSuggestionTheme.Colors.backgroundGroupedTertiary()()
{
  return static MOSuggestionTheme.Colors.backgroundPrimary()((SEL *)&selRef_tertiarySystemGroupedBackgroundColor);
}

id static MOSuggestionTheme.Colors.backgroundPrimary()(SEL *a1)
{
  return objc_msgSend((id)objc_opt_self(UIColor), *a1);
}

void one-time initialization function for contactAsset()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "systemGreenColor");
  v1 = objc_msgSend(v0, "colorWithAlphaComponent:", 0.2);

  static MOSuggestionTheme.Colors.contactAsset = (uint64_t)v1;
}

uint64_t *MOSuggestionTheme.Colors.contactAsset.unsafeMutableAddressor()
{
  if (one-time initialization token for contactAsset != -1)
    swift_once(&one-time initialization token for contactAsset, one-time initialization function for contactAsset);
  return &static MOSuggestionTheme.Colors.contactAsset;
}

id static MOSuggestionTheme.Colors.contactAsset.getter()
{
  return default argument 2 of MOSuggestionWorkoutIconGlyphView.init(image:glyphBackgroundColor:glyphTintColor:)(&one-time initialization token for contactAsset, (id *)&static MOSuggestionTheme.Colors.contactAsset);
}

id static MOSuggestionTheme.Fonts.boldFont()()
{
  return static MOSuggestionTheme.Fonts.footnote()(&UIFontTextStyleHeadline);
}

void static MOSuggestionTheme.Fonts.largeTitle()()
{
  static MOSuggestionTheme.Fonts.footnoteBold()(&UIFontTextStyleLargeTitle);
}

void static MOSuggestionTheme.Fonts.calloutBold()()
{
  static MOSuggestionTheme.Fonts.footnoteBold()(&UIFontTextStyleCallout);
}

id static MOSuggestionTheme.Fonts.bodyFont()()
{
  return static MOSuggestionTheme.Fonts.footnote()(&UIFontTextStyleBody);
}

void static MOSuggestionTheme.Fonts.primaryFontBold()()
{
  static MOSuggestionTheme.Fonts.footnoteBold()(&UIFontTextStyleBody);
}

void static MOSuggestionTheme.Fonts.captionBold()()
{
  static MOSuggestionTheme.Fonts.footnoteBold()(&UIFontTextStyleCaption1);
}

id static MOSuggestionTheme.Fonts.caption()()
{
  return static MOSuggestionTheme.Fonts.footnote()(&UIFontTextStyleCaption1);
}

id static MOSuggestionTheme.Fonts.caption2()()
{
  return static MOSuggestionTheme.Fonts.footnote()(&UIFontTextStyleCaption2);
}

Class static MOSuggestionTheme.Fonts.caption2EmphFont()()
{
  return static MOSuggestionTheme.Fonts.subheaderEmphFont()(&UIFontTextStyleCaption2, (UIFontWeight *)&UIFontWeightSemibold);
}

Class static MOSuggestionTheme.Fonts.bodyEmphFont()()
{
  return static MOSuggestionTheme.Fonts.subheaderEmphFont()(&UIFontTextStyleBody, (UIFontWeight *)&UIFontWeightSemibold);
}

Class static MOSuggestionTheme.Fonts.subheaderEmphFont()(_QWORD *a1, UIFontWeight *a2)
{
  id v3;
  Class isa;

  v3 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", *a1);
  isa = UIFont.withWeight(_:)(*a2).super.isa;

  return isa;
}

id static MOSuggestionTheme.Fonts.footnote()(_QWORD *a1)
{
  return objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", *a1);
}

void static MOSuggestionTheme.Fonts.title3Bold()()
{
  static MOSuggestionTheme.Fonts.footnoteBold()(&UIFontTextStyleTitle3);
}

void static MOSuggestionTheme.Fonts.footnoteBold()(_QWORD *a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;

  v2 = (void *)objc_opt_self(UIFont);
  v3 = objc_msgSend(v2, "preferredFontForTextStyle:", *a1);
  v4 = objc_msgSend(v3, "fontDescriptor");
  v5 = objc_msgSend(v4, "fontDescriptorWithSymbolicTraits:", 2);

  if (v5)
  {
    objc_msgSend(v2, "fontWithDescriptor:size:", v5, 0.0);

  }
  else
  {
    __break(1u);
  }
}

void one-time initialization function for cornerRadius()
{
  static MOSuggestionTheme.Sizes.cornerRadius = 0x4024000000000000;
}

double static MOSuggestionTheme.Sizes.cornerRadius.getter()
{
  return static MOSuggestionSheetInterstitialViewConstants.BUTTON_BOTTOM_MARGIN_LANDSCAPE.getter(&one-time initialization token for cornerRadius, (uint64_t)&static MOSuggestionTheme.Sizes.cornerRadius);
}

void one-time initialization function for gutterMargin()
{
  static MOSuggestionTheme.Sizes.gutterMargin = 0x4010000000000000;
}

uint64_t *MOSuggestionTheme.Sizes.gutterMargin.unsafeMutableAddressor()
{
  if (one-time initialization token for gutterMargin != -1)
    swift_once(&one-time initialization token for gutterMargin, one-time initialization function for gutterMargin);
  return &static MOSuggestionTheme.Sizes.gutterMargin;
}

double static MOSuggestionTheme.Sizes.gutterMargin.getter()
{
  return static MOSuggestionSheetInterstitialViewConstants.BUTTON_BOTTOM_MARGIN_LANDSCAPE.getter(&one-time initialization token for gutterMargin, (uint64_t)&static MOSuggestionTheme.Sizes.gutterMargin);
}

double static MOSuggestionTheme.Sizes.assetGridHeight(assetCount:totalWidth:)(uint64_t a1, double a2)
{
  double result;

  if (!a1)
    return 0.0;
  if (one-time initialization token for gutterMargin != -1)
    swift_once(&one-time initialization token for gutterMargin, one-time initialization function for gutterMargin);
  result = (a2 - *(double *)&static MOSuggestionTheme.Sizes.gutterMargin) * 0.5;
  if (a1 > 5)
    return result + result;
  return result;
}

void *MOSuggestionTheme.Styles.unfocusedAlpha.unsafeMutableAddressor()
{
  return &static MOSuggestionTheme.Styles.unfocusedAlpha;
}

double static MOSuggestionTheme.Styles.unfocusedAlpha.getter()
{
  return 0.45;
}

void *MOSuggestionTheme.Styles.assetGridCornerRadius.unsafeMutableAddressor()
{
  return &static MOSuggestionTheme.Styles.assetGridCornerRadius;
}

void *MOSuggestionTheme.Styles.platterCornerRadius.unsafeMutableAddressor()
{
  return &static MOSuggestionTheme.Styles.platterCornerRadius;
}

float static MOSuggestionTheme.Styles.shadowOpacity.getter()
{
  return 0.1;
}

UIColor __swiftcall UIColor.init(hex:)(Swift::String hex)
{
  void *object;
  uint64_t countAndFlagsBits;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  NSString v15;
  id v16;
  objc_class *v17;
  UIColor v18;
  uint64_t v20;

  object = hex._object;
  countAndFlagsBits = hex._countAndFlagsBits;
  v3 = String.index(_:offsetBy:)(15, 1, hex._countAndFlagsBits, hex._object);
  v4 = specialized Collection.subscript.getter(v3, countAndFlagsBits, (unint64_t)object);
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v11 = swift_bridgeObjectRelease(object);
  static String._fromSubstring(_:)(v4, v6, v8, v10, v11);
  v13 = v12;
  swift_bridgeObjectRelease(v10);
  v14 = objc_allocWithZone((Class)NSScanner);
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(v14, "initWithString:", v15, swift_bridgeObjectRelease(v13).n128_f64[0]);

  v20 = 0;
  if (objc_msgSend(v16, "scanHexLongLong:", &v20))
    v17 = (objc_class *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "initWithRed:green:blue:alpha:", (double)BYTE3(v20) / 255.0, (double)BYTE2(v20) / 255.0, (double)BYTE1(v20) / 255.0, (double)v20 / 255.0);
  else
    v17 = (objc_class *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "initWithRed:green:blue:alpha:", 0.0, 0.0, 0.0, 0.0);
  v18.super.isa = v17;

  return v18;
}

unint64_t specialized Collection.subscript.getter(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;

  v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v3 = a2 & 0xFFFFFFFFFFFFLL;
  if (4 * v3 >= result >> 14)
    return String.subscript.getter();
  __break(1u);
  return result;
}

id specialized static MOSuggestionTheme.Fonts.footnoteEmphShortFont()()
{
  void *v0;
  id v1;
  UIFont v2;
  id v3;
  id v4;
  unsigned int v5;
  id v6;
  id v7;

  v0 = (void *)objc_opt_self(UIFont);
  v1 = objc_msgSend(v0, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  v2.super.isa = UIFont.withWeight(_:)(UIFontWeightSemibold).super.isa;

  v3 = -[objc_class fontDescriptor](v2.super.isa, "fontDescriptor");
  v4 = -[objc_class fontDescriptor](v2.super.isa, "fontDescriptor");
  v5 = objc_msgSend(v4, "symbolicTraits");

  v6 = objc_msgSend(v3, "fontDescriptorWithSymbolicTraits:", v5 | 0x10000);
  if (v6)
  {
    v7 = objc_msgSend(v0, "fontWithDescriptor:size:", v6, 0.0);

  }
  else
  {

    return 0;
  }
  return v7;
}

id specialized static MOSuggestionTheme.Fonts.footnoteShortFont()()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  unsigned int v4;
  id v5;
  id v6;

  v0 = (void *)objc_opt_self(UIFont);
  v1 = objc_msgSend(v0, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  v2 = objc_msgSend(v1, "fontDescriptor");
  v3 = objc_msgSend(v1, "fontDescriptor");
  v4 = objc_msgSend(v3, "symbolicTraits");

  v5 = objc_msgSend(v2, "fontDescriptorWithSymbolicTraits:", v4 | 0x10000);
  if (v5)
  {
    v6 = objc_msgSend(v0, "fontWithDescriptor:size:", v5, 0.0);

  }
  else
  {

    return 0;
  }
  return v6;
}

void specialized static MOSuggestionTheme.Styles.styleViewAsPlatter(view:traitCollection:)(void *a1, uint64_t a2)
{
  id v4;
  void *v5;
  id v6;
  int v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  double v14;
  id v15;
  id v16;
  id v17;
  id v18;

  v4 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  v5 = v4;
  if (a2 == 2)
  {
    v6 = objc_msgSend(v4, "colorWithAlphaComponent:", 0.15);

    v7 = 1050253722;
    v5 = v6;
  }
  else
  {
    v7 = 1036831949;
  }
  objc_msgSend(a1, "setBackgroundColor:", v5);

  objc_msgSend(a1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v8 = objc_msgSend(a1, "layer");
  objc_msgSend(v8, "setMasksToBounds:", 0);

  v9 = objc_msgSend(a1, "layer");
  objc_msgSend(v9, "setCornerRadius:", 8.0);

  v10 = objc_msgSend(a1, "layer");
  v11 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  v12 = objc_msgSend(v11, "CGColor");

  objc_msgSend(v10, "setShadowColor:", v12);
  v13 = objc_msgSend(a1, "layer");
  LODWORD(v14) = v7;
  objc_msgSend(v13, "setShadowOpacity:", v14);

  v15 = objc_msgSend(a1, "layer");
  objc_msgSend(v15, "setShadowOffset:", 0.0, 2.0);

  v16 = objc_msgSend(a1, "layer");
  objc_msgSend(v16, "setShadowRadius:", 4.0);

  v17 = objc_msgSend(a1, "layer");
  objc_msgSend(v17, "setCornerCurve:", kCACornerCurveContinuous);

  v18 = objc_msgSend(a1, "layer");
  objc_msgSend(v18, "setShadowPathIsBounds:", 1);

}

id specialized static MOSuggestionTheme.Fonts.footnoteEmphFontSmallCaps()()
{
  void *v0;
  id v1;
  Class isa;
  id v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  NSString *v12;
  id v13;
  id v14;
  unint64_t v15;
  Class v16;
  id v17;
  id v18;
  Class v19;
  double v20;
  double v21;
  id v22;
  _BYTE v24[64];
  _BYTE v25[80];

  v0 = (void *)objc_opt_self(UIFont);
  v1 = objc_msgSend(v0, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  isa = UIFont.withWeight(_:)(UIFontWeightSemibold).super.isa;

  v3 = -[objc_class fontDescriptor](isa, "fontDescriptor");
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(UIFontDescriptorAttributeName, Any)>);
  inited = swift_initStackObject(v4, v25);
  *(_OWORD *)(inited + 16) = xmmword_10019ED20;
  *(_QWORD *)(inited + 32) = UIFontDescriptorFeatureSettingsAttribute;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<[UIFontDescriptorFeatureKey : Int]>);
  v7 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_10019ED20;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(UIFontDescriptorFeatureKey, Int)>);
  v9 = swift_initStackObject(v8, v24);
  *(_OWORD *)(v9 + 16) = xmmword_10019EEE0;
  v10 = (void *)UIFontFeatureTypeIdentifierKey_ForNewSwiftAPI;
  *(_QWORD *)(v9 + 32) = UIFontFeatureTypeIdentifierKey_ForNewSwiftAPI;
  *(_QWORD *)(v9 + 40) = 38;
  v11 = (void *)UIFontFeatureSelectorIdentifierKey_ForNewSwiftAPI;
  *(_QWORD *)(v9 + 48) = UIFontFeatureSelectorIdentifierKey_ForNewSwiftAPI;
  *(_QWORD *)(v9 + 56) = 1;
  v12 = UIFontDescriptorFeatureSettingsAttribute;
  v13 = v10;
  v14 = v11;
  *(_QWORD *)(v7 + 32) = specialized Dictionary.init(dictionaryLiteral:)(v9);
  *(_QWORD *)(inited + 64) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [[UIFontDescriptorFeatureKey : Int]]);
  *(_QWORD *)(inited + 40) = v7;
  v15 = specialized Dictionary.init(dictionaryLiteral:)(inited);
  type metadata accessor for UIFontDescriptorAttributeName(0);
  lazy protocol witness table accessor for type UIFontDescriptorAttributeName and conformance UIFontDescriptorAttributeName();
  v16 = Dictionary._bridgeToObjectiveC()().super.isa;
  v17 = objc_msgSend(v3, "fontDescriptorByAddingAttributes:", v16, swift_bridgeObjectRelease(v15).n128_f64[0]);

  v18 = objc_msgSend(v0, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  v19 = UIFont.withWeight(_:)(UIFontWeightSemibold).super.isa;

  -[objc_class pointSize](v19, "pointSize");
  v21 = v20;

  v22 = objc_msgSend(v0, "fontWithDescriptor:size:", v17, v21);
  return v22;
}

uint64_t type metadata accessor for MOSuggestionTheme()
{
  return objc_opt_self(_TtC16MomentsUIService17MOSuggestionTheme);
}

uint64_t type metadata accessor for MOSuggestionTheme.Colors()
{
  return objc_opt_self(_TtCC16MomentsUIService17MOSuggestionTheme6Colors);
}

uint64_t type metadata accessor for MOSuggestionTheme.Fonts()
{
  return objc_opt_self(_TtCC16MomentsUIService17MOSuggestionTheme5Fonts);
}

uint64_t type metadata accessor for MOSuggestionTheme.Sizes()
{
  return objc_opt_self(_TtCC16MomentsUIService17MOSuggestionTheme5Sizes);
}

uint64_t type metadata accessor for MOSuggestionTheme.Styles()
{
  return objc_opt_self(_TtCC16MomentsUIService17MOSuggestionTheme6Styles);
}

unint64_t lazy protocol witness table accessor for type UIFontDescriptorAttributeName and conformance UIFontDescriptorAttributeName()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type UIFontDescriptorAttributeName and conformance UIFontDescriptorAttributeName;
  if (!lazy protocol witness table cache variable for type UIFontDescriptorAttributeName and conformance UIFontDescriptorAttributeName)
  {
    type metadata accessor for UIFontDescriptorAttributeName(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for UIFontDescriptorAttributeName, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UIFontDescriptorAttributeName and conformance UIFontDescriptorAttributeName);
  }
  return result;
}

uint64_t MOSuggestionAssetGradientRouteRenderer.__allocating_init(routeLocations:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return MOSuggestionAssetGradientRouteRenderer.init(routeLocations:)(a1);
}

uint64_t MOSuggestionAssetGradientRouteRenderer.routeLocations.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0
                                            + OBJC_IVAR____TtC16MomentsUIService38MOSuggestionAssetGradientRouteRenderer_routeLocations));
}

uint64_t MOSuggestionAssetGradientRouteRenderer.init(routeLocations:)(uint64_t a1)
{
  char *v1;
  void *v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  id v18;
  id v19;
  objc_super v20;
  _QWORD *v21;

  v2 = v1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MomentsUIService38MOSuggestionAssetGradientRouteRenderer_routeLocations] = a1;
  if (!((unint64_t)a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v4)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease(a1);
    v7 = _swiftEmptyArrayStorage;
LABEL_17:
    v18 = objc_msgSend((id)objc_opt_self(MKPolyline), "polylineWithCoordinates:count:", v7 + 4, v4);
    swift_bridgeObjectRelease(v7);
    v20.receiver = v2;
    v20.super_class = (Class)type metadata accessor for MOSuggestionAssetGradientRouteRenderer();
    v19 = objc_msgSendSuper2(&v20, "initWithOverlay:", v18);

    return (uint64_t)v19;
  }
  if (a1 < 0)
    v17 = a1;
  else
    v17 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v4 = _CocoaArrayWrapper.endIndex.getter(v17);
  if (!v4)
    goto LABEL_16;
LABEL_3:
  v21 = _swiftEmptyArrayStorage;
  result = specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    v6 = 0;
    v7 = v21;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a1);
      else
        v8 = *(id *)(a1 + 8 * v6 + 32);
      v9 = v8;
      objc_msgSend(v8, "coordinate");
      v11 = v10;
      v13 = v12;

      v21 = v7;
      v15 = v7[2];
      v14 = v7[3];
      if (v15 >= v14 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
        v7 = v21;
      }
      ++v6;
      v7[2] = v15 + 1;
      v16 = &v7[2 * v15];
      v16[4] = v11;
      v16[5] = v13;
    }
    while (v4 != v6);
    swift_bridgeObjectRelease(a1);
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

double MOSuggestionAssetGradientRouteRenderer.offsetPoint(_:from:)(double a1, double a2, double a3)
{
  return a1 - a3;
}

BOOL MOSuggestionAssetGradientRouteRenderer.hasMinimumDistance(_:from:to:)(double a1, double a2, double a3, double a4, double a5)
{
  return a1 * a1 <= (a4 - a2) * (a4 - a2) + (a5 - a3) * (a5 - a3);
}

Swift::Bool __swiftcall MOSuggestionAssetGradientRouteRenderer.canDrawLine(from:to:within:)(MKMapPoint from, MKMapPoint to, MKMapRect within)
{
  double height;
  double width;
  double y;
  double x;
  MKMapRect v8;
  MKMapRect v9;

  height = within.size.height;
  width = within.size.width;
  y = within.origin.y;
  x = within.origin.x;
  v9.origin.x = fmin(from.x, to.x);
  v9.origin.y = fmin(from.y, to.y);
  v9.size.width = vabdd_f64(from.x, to.x);
  v9.size.height = vabdd_f64(from.y, to.y);
  v8.origin.x = x;
  v8.origin.y = y;
  v8.size.width = width;
  v8.size.height = height;
  return MKMapRectIntersectsRect(v8, v9);
}

void *MOSuggestionAssetGradientRouteRenderer.SpeedColor.slowRed.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetGradientRouteRenderer.SpeedColor.slowRed;
}

double static MOSuggestionAssetGradientRouteRenderer.SpeedColor.slowRed.getter()
{
  return 255.0;
}

void *MOSuggestionAssetGradientRouteRenderer.SpeedColor.slowGreen.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetGradientRouteRenderer.SpeedColor.slowGreen;
}

double static MOSuggestionAssetGradientRouteRenderer.SpeedColor.slowGreen.getter()
{
  return 59.0;
}

void *MOSuggestionAssetGradientRouteRenderer.SpeedColor.slowBlue.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetGradientRouteRenderer.SpeedColor.slowBlue;
}

double static MOSuggestionAssetGradientRouteRenderer.SpeedColor.slowBlue.getter()
{
  return 48.0;
}

void *MOSuggestionAssetGradientRouteRenderer.SpeedColor.averageRed.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetGradientRouteRenderer.SpeedColor.averageRed;
}

void *MOSuggestionAssetGradientRouteRenderer.SpeedColor.averageGreen.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetGradientRouteRenderer.SpeedColor.averageGreen;
}

double static MOSuggestionAssetGradientRouteRenderer.SpeedColor.averageGreen.getter()
{
  return 204.0;
}

void *MOSuggestionAssetGradientRouteRenderer.SpeedColor.averageBlue.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetGradientRouteRenderer.SpeedColor.averageBlue;
}

void *MOSuggestionAssetGradientRouteRenderer.SpeedColor.fastRed.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetGradientRouteRenderer.SpeedColor.fastRed;
}

double static MOSuggestionAssetGradientRouteRenderer.SpeedColor.fastRed.getter()
{
  return 76.0;
}

void *MOSuggestionAssetGradientRouteRenderer.SpeedColor.fastGreen.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetGradientRouteRenderer.SpeedColor.fastGreen;
}

double static MOSuggestionAssetGradientRouteRenderer.SpeedColor.fastGreen.getter()
{
  return 217.0;
}

void *MOSuggestionAssetGradientRouteRenderer.SpeedColor.fastBlue.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetGradientRouteRenderer.SpeedColor.fastBlue;
}

double static MOSuggestionAssetGradientRouteRenderer.SpeedColor.fastBlue.getter()
{
  return 100.0;
}

void *MOSuggestionAssetGradientRouteRenderer.SpeedColor.alpha.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetGradientRouteRenderer.SpeedColor.alpha;
}

double static MOSuggestionAssetGradientRouteRenderer.SpeedColor.alpha.getter()
{
  return 0.85;
}

id static MOSuggestionAssetGradientRouteRenderer.SpeedColor.averageColor.getter()
{
  return objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 1.0, 0.8, 0.0, 0.85);
}

uint64_t MOSuggestionAssetGradientRouteRenderer.draw(_:zoomScale:in:)(uint64_t a1, double a2, double a3, double a4, double a5, MKZoomScale a6)
{
  _QWORD *v6;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  CGFloat v14;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v9 = objc_msgSend(v6, "overlay");
  objc_msgSend(v9, "boundingMapRect");
  v11 = v10;
  v13 = v12;
  swift_unknownObjectRelease(v9);
  v14 = MKRoadWidthAtZoomScale(a6) * 0.666666667;
  objc_msgSend(v6, "applyStrokePropertiesToContext:atZoomScale:", a1, a6);
  v17 = v6;
  v18 = v11;
  v19 = v13;
  return (*(uint64_t (**)(uint64_t, uint64_t (*)(), uint64_t *, CGFloat))((swift_isaMask & *v6)
                                                                                          + 0x78))(a1, partial apply for closure #1 in MOSuggestionAssetGradientRouteRenderer.draw(_:zoomScale:in:), &v16, v14);
}

void MOSuggestionAssetGradientRouteRenderer.draw(lineWidth:in:pointFromMapPoint:)(CGContext *a1, double (*a2)(double, double), uint64_t a3, CGFloat a4)
{
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  double v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char **v20;
  id v21;
  double v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  double v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  MKMapPoint v30;
  MKMapPoint v31;
  double (*v32)(double, double);
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  CGContext *v41;
  uint64_t (*v42)(double, double, double, double, double);
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  unint64_t v45;
  double (*v46)(double, double);
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  CLLocationCoordinate2D v50;
  CLLocationCoordinate2D v51;

  v46 = a2;
  v47 = a3;
  v49 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = a1;
  CGContextSetBlendMode(a1, kCGBlendModeNormal);
  v10 = *(_QWORD *)((char *)v4
                  + OBJC_IVAR____TtC16MomentsUIService38MOSuggestionAssetGradientRouteRenderer_routeLocations);
  if (!((unint64_t)v10 >> 62))
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)((char *)v4
                                       + OBJC_IVAR____TtC16MomentsUIService38MOSuggestionAssetGradientRouteRenderer_routeLocations));
    if (v11)
      goto LABEL_3;
LABEL_27:
    swift_bridgeObjectRelease(v10);
    return;
  }
  if (v10 < 0)
    v39 = *(_QWORD *)((char *)v4
                    + OBJC_IVAR____TtC16MomentsUIService38MOSuggestionAssetGradientRouteRenderer_routeLocations);
  else
    v39 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)((char *)v4
                                     + OBJC_IVAR____TtC16MomentsUIService38MOSuggestionAssetGradientRouteRenderer_routeLocations));
  if (!_CocoaArrayWrapper.endIndex.getter(v39))
    goto LABEL_27;
LABEL_3:
  v45 = v10 & 0xC000000000000001;
  v48 = v4;
  if ((v10 & 0xC000000000000001) != 0)
  {
    v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v10);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(id *)(v10 + 32);
LABEL_6:
    v13 = v12;
    v14 = objc_msgSend(v12, "timestamp", swift_bridgeObjectRelease(v10).n128_f64[0]);
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v14);

    v15 = Date.timeIntervalSinceReferenceDate.getter();
    v16 = *(void (**)(char *, uint64_t))(v7 + 8);
    v16(v9, v49);
    if ((unint64_t)v10 >> 62)
    {
      if (v10 < 0)
        v18 = v10;
      else
        v18 = v10 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v10);
      v17 = _CocoaArrayWrapper.endIndex.getter(v18);
      if (!v17)
        goto LABEL_22;
    }
    else
    {
      v17 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v10);
      if (!v17)
      {
LABEL_22:
        swift_bridgeObjectRelease(v10);

        return;
      }
    }
    if (v17 >= 1)
    {
      v19 = 0;
      v42 = *(uint64_t (**)(double, double, double, double, double))((swift_isaMask & *v48) + 0x68);
      v43 = v17;
      v44 = v16;
      do
      {
        if (v45)
          v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v19, v10);
        else
          v27 = *(id *)(v10 + 8 * v19 + 32);
        v28 = v27;
        v29 = v10;
        objc_msgSend(v13, "coordinate");
        v30 = MKMapPointForCoordinate(v50);
        objc_msgSend(v28, "coordinate");
        v31 = MKMapPointForCoordinate(v51);
        v32 = v46;
        v33 = v46(v30.x, v30.y);
        v35 = v34;
        v36 = v32(v31.x, v31.y);
        v38 = v37;
        if ((v42(a4, v33, v35, v36, v37) & 1) != 0)
        {
          v20 = &selRef_setContentOffset_animated_;
          v21 = objc_msgSend(v28, "timestamp");
          static Date._unconditionallyBridgeFromObjectiveC(_:)(v21);

          v22 = Date.timeIntervalSinceReferenceDate.getter();
          v23 = v49;
          v24 = v44;
          v44(v9, v49);
          objc_msgSend(v28, "speed", v22 - v15);
          MOSuggestionAssetGradientRouteRenderer.drawLine(from:to:at:in:withDashes:lineWidth:)(v41, v22 - v15 > 5.0, v33, v35, v36, v38, v25, a4);

          v13 = v28;
        }
        else
        {
          v23 = v49;
          v20 = &selRef_setContentOffset_animated_;
          v24 = v44;
        }
        ++v19;
        v26 = objc_msgSend(v28, v20[209]);
        static Date._unconditionallyBridgeFromObjectiveC(_:)(v26);

        v15 = Date.timeIntervalSinceReferenceDate.getter();
        v24(v9, v23);
        v10 = v29;
      }
      while (v43 != v19);
      goto LABEL_22;
    }
    goto LABEL_30;
  }
  __break(1u);
LABEL_30:
  __break(1u);
}

void MOSuggestionAssetGradientRouteRenderer.drawLine(from:to:at:in:withDashes:lineWidth:)(CGContext *a1, char a2, double a3, double a4, double a5, double a6, double a7, CGFloat a8)
{
  uint64_t v16;
  uint64_t v17;
  const CGPath *v18;
  id v19;
  CGColor *v20;
  CGPathDrawingMode v21;
  CGMutablePathRef Mutable;
  _QWORD v23[6];

  Mutable = CGPathCreateMutable();
  v23[0] = 0x3FF0000000000000;
  v23[1] = 0;
  v23[2] = 0;
  v23[3] = 0x3FF0000000000000;
  v23[4] = 0;
  v23[5] = 0;
  CGMutablePathRef.move(to:transform:)(v23, a3, a4);
  CGMutablePathRef.addLine(to:transform:)(v23, a5, a6);
  if ((a2 & 1) != 0)
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CGFloat>);
    v17 = swift_allocObject(v16, 48, 7);
    *(_OWORD *)(v17 + 16) = xmmword_10019EEE0;
    *(_QWORD *)(v17 + 32) = 0;
    *(CGFloat *)(v17 + 40) = a8 + a8;
    v18 = (const CGPath *)CGPathRef.copy(dashingWithPhase:lengths:transform:)(0.0);
    swift_bridgeObjectRelease(v17);
    CGContextAddPath(a1, v18);
    CGContextSetLineWidth(a1, a8);
    CGContextSetLineCap(a1, kCGLineCapRound);
    v19 = objc_msgSend((id)objc_opt_self(UIColor), "grayColor");
    v20 = (CGColor *)objc_msgSend(v19, "CGColor");

    CGContextSetStrokeColorWithColor(a1, v20);
    v21 = kCGPathStroke;
  }
  else
  {
    v18 = (const CGPath *)CGPathRef.copy(strokingWithWidth:lineCap:lineJoin:miterLimit:transform:)(1, 1, v23, a8, 10.0);
    CGContextAddPath(a1, v18);
    v20 = (CGColor *)MOSuggestionAssetGradientRouteRenderer.relativeColor(for:)(a7);
    CGContextSetFillColorWithColor(a1, v20);
    v21 = kCGPathFill;
  }

  CGContextDrawPath(a1, v21);
}

uint64_t MOSuggestionAssetGradientRouteRenderer.relativeColor(for:)(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t i;
  id v7;
  void *v8;
  double v9;
  double v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  double *v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  float64x2_t v22;
  float64x2_t *v23;
  uint64_t v24;
  float64x2_t v25;
  float64x2_t v26;
  uint64_t v27;
  double *v28;
  double v29;
  double v30;
  uint64_t v31;
  double *v32;
  double v33;
  double v34;
  uint64_t v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  id v41;
  double v42;
  void *v43;
  id v44;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MomentsUIService38MOSuggestionAssetGradientRouteRenderer_routeLocations);
  if (!((unint64_t)v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(v1
                                       + OBJC_IVAR____TtC16MomentsUIService38MOSuggestionAssetGradientRouteRenderer_routeLocations));
    if (v4)
      goto LABEL_3;
LABEL_37:
    swift_bridgeObjectRelease(v3);
    v13 = *(_QWORD *)&_swiftEmptyArrayStorage[2];
    if (v13)
      goto LABEL_12;
    goto LABEL_38;
  }
  if (v3 < 0)
    v35 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MomentsUIService38MOSuggestionAssetGradientRouteRenderer_routeLocations);
  else
    v35 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(v1
                                     + OBJC_IVAR____TtC16MomentsUIService38MOSuggestionAssetGradientRouteRenderer_routeLocations));
  v4 = _CocoaArrayWrapper.endIndex.getter(v35);
  if (!v4)
    goto LABEL_37;
LABEL_3:
  result = specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
      else
        v7 = *(id *)(v3 + 8 * i + 32);
      v8 = v7;
      objc_msgSend(v7, "speed");
      v10 = v9;

      v12 = *(_QWORD *)&_swiftEmptyArrayStorage[2];
      v11 = *(_QWORD *)&_swiftEmptyArrayStorage[3];
      if (v12 >= v11 >> 1)
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
      *(_QWORD *)&_swiftEmptyArrayStorage[2] = v12 + 1;
      _swiftEmptyArrayStorage[v12 + 4] = v10;
    }
    swift_bridgeObjectRelease(v3);
    v13 = *(_QWORD *)&_swiftEmptyArrayStorage[2];
    if (v13)
    {
LABEL_12:
      v14 = _swiftEmptyArrayStorage[4];
      v15 = v13 - 1;
      if (v13 != 1)
      {
        v16 = &_swiftEmptyArrayStorage[5];
        do
        {
          v17 = *v16++;
          v18 = v17;
          if (v17 < v14)
            v14 = v18;
          --v15;
        }
        while (v15);
      }
      v19 = (double)v13;
      if ((unint64_t)v13 >= 4)
      {
        v20 = v13 & 0x7FFFFFFFFFFFFFFCLL;
        v22 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v19, 0);
        v23 = (float64x2_t *)&_swiftEmptyArrayStorage[6];
        v21 = 0.0;
        v24 = v13 & 0x7FFFFFFFFFFFFFFCLL;
        do
        {
          v25 = vdivq_f64(v23[-1], v22);
          v26 = vdivq_f64(*v23, v22);
          v21 = v21 + v25.f64[0] + v25.f64[1] + v26.f64[0] + v26.f64[1];
          v23 += 2;
          v24 -= 4;
        }
        while (v24);
        if (v13 == v20)
        {
LABEL_24:
          v30 = _swiftEmptyArrayStorage[4];
          v31 = v13 - 1;
          if (v31)
          {
            v32 = &_swiftEmptyArrayStorage[5];
            do
            {
              v33 = *v32++;
              v34 = v33;
              if (v30 < v33)
                v30 = v34;
              --v31;
            }
            while (v31);
          }
          swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
          if (v21 * 0.9 >= a1)
          {
            if (a1 < 0.0 || v21 == 0.0)
              goto LABEL_44;
LABEL_42:
            v36 = (a1 - v14) / (v30 - v14);
            if (v36 >= 0.5)
            {
              v42 = v36 + -0.5 + v36 + -0.5;
              v38 = round(v42 * -179.0 + 255.0);
              v39 = round(v42 * 13.0 + 204.0);
              v40 = v42 * 100.0 + 0.0;
            }
            else
            {
              v37 = v36 + v36;
              v38 = round(v37 * 0.0 + 255.0);
              v39 = round(v37 * 145.0 + 59.0);
              v40 = 48.0 - v37 * 48.0;
            }
            v41 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", v38 / 255.0, v39 / 255.0, round(v40) / 255.0, 0.85);
            goto LABEL_47;
          }
LABEL_39:
          if (a1 < 0.0 || v21 == 0.0 || v21 * 1.1 > a1)
            goto LABEL_44;
          goto LABEL_42;
        }
      }
      else
      {
        v20 = 0;
        v21 = 0.0;
      }
      v27 = v13 - v20;
      v28 = &_swiftEmptyArrayStorage[v20 + 4];
      do
      {
        v29 = *v28++;
        v21 = v21 + v29 / v19;
        --v27;
      }
      while (v27);
      goto LABEL_24;
    }
LABEL_38:
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    v21 = 0.0;
    v14 = 0.0;
    v30 = 0.0;
    if (a1 <= 0.0)
    {
LABEL_44:
      v41 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 1.0, 0.8, 0.0, 0.85);
LABEL_47:
      v43 = v41;
      v44 = objc_msgSend(v41, "CGColor");

      return (uint64_t)v44;
    }
    goto LABEL_39;
  }
  __break(1u);
  return result;
}

id MOSuggestionAssetGradientRouteRenderer.__allocating_init(overlay:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithOverlay:", a1);
  swift_unknownObjectRelease(a1);
  return v3;
}

void MOSuggestionAssetGradientRouteRenderer.init(overlay:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MomentsUIService.MOSuggestionAssetGradientRouteRenderer", 55, "init(overlay:)", 14, 0);
  __break(1u);
}

id MOSuggestionAssetGradientRouteRenderer.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionAssetGradientRouteRenderer();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for MOSuggestionAssetGradientRouteRenderer()
{
  return objc_opt_self(_TtC16MomentsUIService38MOSuggestionAssetGradientRouteRenderer);
}

ValueMetadata *type metadata accessor for MOSuggestionAssetGradientRouteRenderer.SpeedColor()
{
  return &type metadata for MOSuggestionAssetGradientRouteRenderer.SpeedColor;
}

uint64_t partial apply for closure #1 in MOSuggestionAssetGradientRouteRenderer.draw(_:zoomScale:in:)(__n128 a1, __n128 a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(__n128, __n128, double, double))((swift_isaMask & **(_QWORD **)(v2 + 16)) + 0x60))(a1, a2, *(double *)(v2 + 24), *(double *)(v2 + 32));
}

uint64_t key path getter for MOSuggestionSheetCollectionView.callback : MOSuggestionSheetCollectionView@<X0>(_QWORD **a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x58))();
  if (result)
  {
    v5 = result;
    v6 = v4;
    result = swift_allocObject(&unk_1001EBC88, 32, 7);
    *(_QWORD *)(result + 16) = v5;
    *(_QWORD *)(result + 24) = v6;
    v7 = partial apply for thunk for @escaping @callee_guaranteed () -> (@out ());
  }
  else
  {
    v7 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())result;
  return result;
}

uint64_t key path setter for MOSuggestionSheetCollectionView.callback : MOSuggestionSheetCollectionView(uint64_t *a1, _QWORD **a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t (*v7)(uint64_t (*)(), uint64_t);

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject(&unk_1001EBC60, 32, 7);
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed () -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(uint64_t (**)(uint64_t (*)(), uint64_t))((swift_isaMask & **a2) + 0x60);
  outlined copy of (@escaping @callee_guaranteed () -> ())?(v3, v4);
  return v7(v6, v5);
}

uint64_t MOSuggestionSheetCollectionView.callback.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetCollectionView_callback);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetCollectionView_callback, v4, 0, 0);
  v2 = *v1;
  outlined copy of (@escaping @callee_guaranteed () -> ())?(*v1, v1[1]);
  return v2;
}

uint64_t MOSuggestionSheetCollectionView.callback.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetCollectionView_callback);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return outlined consume of (@escaping @callee_guaranteed () -> ())?(v6, v7);
}

uint64_t (*MOSuggestionSheetCollectionView.callback.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetCollectionView_callback, a1, 33, 0);
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

id MOSuggestionSheetCollectionView.reloadDataWithCompletion(callback:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  void (*v5)(uint64_t, uint64_t, __n128);
  __n128 v6;
  objc_super v8;

  v5 = *(void (**)(uint64_t, uint64_t, __n128))((swift_isaMask & *v2) + 0x60);
  v6 = swift_retain(a2);
  v5(a1, a2, v6);
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for MOSuggestionSheetCollectionView();
  objc_msgSendSuper2(&v8, "reloadData");
  return objc_msgSend(v2, "layoutIfNeeded");
}

uint64_t type metadata accessor for MOSuggestionSheetCollectionView()
{
  return objc_opt_self(_TtC16MomentsUIService31MOSuggestionSheetCollectionView);
}

Swift::Void __swiftcall MOSuggestionSheetCollectionView.layoutSubviews()()
{
  _QWORD *v0;
  _QWORD *v1;
  id v2;
  void (*v3)(void);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v7;

  v1 = v0;
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for MOSuggestionSheetCollectionView();
  v2 = objc_msgSendSuper2(&v7, "layoutSubviews");
  v3 = (void (*)(void))(*(uint64_t (**)(id))((swift_isaMask & *v0) + 0x58))(v2);
  if (v3)
  {
    v5 = (uint64_t)v3;
    v6 = v4;
    v3();
    outlined consume of (@escaping @callee_guaranteed () -> ())?(v5, v6);
  }
  (*(void (**)(_QWORD, _QWORD))((swift_isaMask & *v1) + 0x60))(0, 0);
}

id MOSuggestionSheetCollectionView.init(frame:collectionViewLayout:)(void *a1, double a2, double a3, double a4, double a5)
{
  char *v5;
  char *v11;
  objc_class *v12;
  id v13;
  objc_super v15;

  v11 = &v5[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetCollectionView_callback];
  v12 = (objc_class *)type metadata accessor for MOSuggestionSheetCollectionView();
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v15.receiver = v5;
  v15.super_class = v12;
  v13 = objc_msgSendSuper2(&v15, "initWithFrame:collectionViewLayout:", a1, a2, a3, a4, a5);

  return v13;
}

id MOSuggestionSheetCollectionView.init(coder:)(void *a1)
{
  char *v1;
  char *v3;
  objc_class *v4;
  id v5;
  objc_super v7;

  v3 = &v1[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetCollectionView_callback];
  v4 = (objc_class *)type metadata accessor for MOSuggestionSheetCollectionView();
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v7.receiver = v1;
  v7.super_class = v4;
  v5 = objc_msgSendSuper2(&v7, "initWithCoder:", a1);

  return v5;
}

id MOSuggestionSheetCollectionView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionSheetCollectionView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10013DB08()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double MOLinkShareView.intrinsicContentSize.getter()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOLinkShareView();
  objc_msgSendSuper2(&v2, "intrinsicContentSize");
  return 0.0;
}

uint64_t type metadata accessor for MOLinkShareView()
{
  return objc_opt_self(_TtC16MomentsUIService15MOLinkShareView);
}

id MOLinkShareView.init(url:)(uint64_t a1)
{
  return MOLinkShareView.init(url:)(a1, (uint64_t (*)(void))&URL._bridgeToObjectiveC(), (SEL *)&selRef_initWithURL_, (uint64_t (*)(_QWORD))&type metadata accessor for URL);
}

id MOLinkShareView.init(metadata:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for MOLinkShareView();
  v3 = objc_msgSendSuper2(&v5, "initWithMetadata:", a1);

  return v3;
}

id MOLinkShareView.init(frame:)(double a1, double a2, double a3, double a4)
{
  void *v4;
  objc_super v10;

  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for MOLinkShareView();
  return objc_msgSendSuper2(&v10, "initWithFrame:", a1, a2, a3, a4);
}

id MOLinkShareView.init(presentationProperties:)(uint64_t a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for MOLinkShareView();
  v3 = objc_msgSendSuper2(&v5, "initWithPresentationProperties:", a1);
  swift_unknownObjectRelease(a1);
  return v3;
}

id @objc MOLinkShareView.init(metadata:)(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  objc_super v7;

  v7.receiver = a1;
  v7.super_class = (Class)type metadata accessor for MOLinkShareView();
  return objc_msgSendSuper2(&v7, *a4, a3);
}

id MOLinkShareView.init(presentationProperties:url:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSURL *v11;
  void *v12;
  void *v13;
  objc_class *v14;
  id v15;
  objc_super v17;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of URL?(a2, (uint64_t)v8);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v12 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
  {
    URL._bridgeToObjectiveC()(v11);
    v12 = v13;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  }
  v14 = (objc_class *)type metadata accessor for MOLinkShareView();
  v17.receiver = v3;
  v17.super_class = v14;
  v15 = objc_msgSendSuper2(&v17, "initWithPresentationProperties:URL:", a1, v12);
  swift_unknownObjectRelease(a1);

  outlined destroy of URL?(a2);
  return v15;
}

id MOLinkShareView.init(metadataLoadedFrom:)(uint64_t a1)
{
  return MOLinkShareView.init(url:)(a1, (uint64_t (*)(void))&URL._bridgeToObjectiveC(), (SEL *)&selRef_initWithMetadataLoadedFromURL_, (uint64_t (*)(_QWORD))&type metadata accessor for URL);
}

{
  return MOLinkShareView.init(url:)(a1, (uint64_t (*)(void))&URLRequest._bridgeToObjectiveC(), (SEL *)&selRef_initWithMetadataLoadedFromRequest_, (uint64_t (*)(_QWORD))&type metadata accessor for URLRequest);
}

id MOLinkShareView.init(url:)(uint64_t a1, uint64_t (*a2)(void), SEL *a3, uint64_t (*a4)(_QWORD))
{
  void *v4;
  void *v7;
  void *v9;
  id v10;
  uint64_t v11;
  objc_super v13;

  v7 = v4;
  v9 = (void *)a2();
  v13.receiver = v7;
  v13.super_class = (Class)type metadata accessor for MOLinkShareView();
  v10 = objc_msgSendSuper2(&v13, *a3, v9);

  v11 = a4(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(a1, v11);
  return v10;
}

id @objc MOLinkShareView.init(url:)(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t (*a5)(uint64_t), uint64_t (*a6)(uint64_t), SEL *a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  objc_class *v18;
  id v19;
  objc_super v21;

  v12 = a4(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v21 - v14;
  v16 = a5(a3);
  v17 = (void *)a6(v16);
  v18 = (objc_class *)type metadata accessor for MOLinkShareView();
  v21.receiver = a1;
  v21.super_class = v18;
  v19 = objc_msgSendSuper2(&v21, *a7, v17);

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return v19;
}

id MOLinkShareView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOLinkShareView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id MOSuggestionAssetLinkPreviewView.makeUIView(context:)(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  NSURL *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v20;

  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(objc_allocWithZone((Class)LPLinkMetadata), "init");
  v11 = objc_msgSend(a2, "title");
  objc_msgSend(v10, "setTitle:", v11);

  v12 = objc_msgSend(a2, "URL");
  if (v12)
  {
    v13 = v12;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v12);

    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v6, v3);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v9, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
    {
      v15 = 0;
    }
    else
    {
      URL._bridgeToObjectiveC()(v14);
      v15 = v16;
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v9, 1, 1, v3);
    v15 = 0;
  }
  objc_msgSend(v10, "setURL:", v15);

  v17 = objc_msgSend(a2, "iconProvider");
  objc_msgSend(v10, "setIconProvider:", v17);

  v18 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MOLinkShareView()), "initWithFrame:", 0.0, 0.0, 50.0, 50.0);
  objc_msgSend(v18, "setMetadata:", v10);
  objc_msgSend(v18, "_setPreferredSizeClass:", 4);

  return v18;
}

id protocol witness for UIViewRepresentable.makeUIView(context:) in conformance MOSuggestionAssetLinkPreviewView(uint64_t a1)
{
  void **v1;

  return MOSuggestionAssetLinkPreviewView.makeUIView(context:)(a1, *v1);
}

uint64_t protocol witness for UIViewRepresentable.sizeThatFits(_:uiView:context:) in conformance MOSuggestionAssetLinkPreviewView(uint64_t a1, char a2)
{
  return UIViewRepresentable.sizeThatFits(_:uiView:context:)(a1, a2 & 1);
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance MOSuggestionAssetLinkPreviewView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = lazy protocol witness table accessor for type MOSuggestionAssetLinkPreviewView and conformance MOSuggestionAssetLinkPreviewView();
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance MOSuggestionAssetLinkPreviewView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = lazy protocol witness table accessor for type MOSuggestionAssetLinkPreviewView and conformance MOSuggestionAssetLinkPreviewView();
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t protocol witness for static View._viewListCount(inputs:) in conformance MOSuggestionAssetLinkPreviewView()
{
  return static View._viewListCount(inputs:)();
}

void protocol witness for View.body.getter in conformance MOSuggestionAssetLinkPreviewView(uint64_t a1)
{
  unint64_t v2;

  v2 = lazy protocol witness table accessor for type MOSuggestionAssetLinkPreviewView and conformance MOSuggestionAssetLinkPreviewView();
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

void closure #1 in MOSuggestionAssetLinkPreviewProvider.getAssetFor(url:completion:)(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  __n128 v25;
  uint8_t *v26;
  uint64_t v27;
  id v28;
  uint64_t ObjCClassFromMetadata;
  id v30;
  id v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  void (*v35)(void);
  uint8_t *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _DWORD *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(void);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v45 = a5;
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (serverManager._clientConnections != (NSMutableDictionary *)-1)
    swift_once(&serverManager._clientConnections, one-time initialization function for shared);
  v13 = type metadata accessor for Logger(0);
  v14 = __swift_project_value_buffer(v13, (uint64_t)static MOAngelLogger.shared);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(12, -1);
    v43 = a2;
    v19 = v18;
    *(_DWORD *)v18 = 134217984;
    v44 = a4;
    v41 = v18 + 4;
    v42 = v14;
    v20 = URL.absoluteString.getter(v18);
    v22 = v21;
    v23 = a1;
    v24 = String.hashValue.getter(v20);
    v25 = swift_bridgeObjectRelease(v22);
    (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v25);
    v46 = v24;
    a1 = v23;
    a4 = v44;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47, v41);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "[Assets] Link Preview completed fetching data for %ld", v19, 0xCu);
    v26 = v19;
    a2 = v43;
    swift_slowDealloc(v26, -1, -1);

    if (!a1)
      goto LABEL_9;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);

    if (!a1)
      goto LABEL_9;
  }
  if (!a2)
  {
    v27 = MOSuggestionAssetsTypeLinkPreview;
    type metadata accessor for LPLinkMetadata();
    v28 = objc_allocWithZone((Class)MOSuggestionAsset);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v30 = a1;
    v31 = objc_msgSend(v28, "init:type:contentClassType:", v30, v27, ObjCClassFromMetadata);
    a4();

    return;
  }
LABEL_9:
  swift_errorRetain(a2);
  v32 = swift_errorRetain(a2);
  v33 = Logger.logObject.getter(v32);
  v34 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = a4;
    v36 = (uint8_t *)swift_slowAlloc(12, -1);
    v37 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v36 = 138412290;
    if (a2)
    {
      swift_errorRetain(a2);
      v38 = _swift_stdlib_bridgeErrorToNSError(a2);
      v46 = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47, v36 + 4);
    }
    else
    {
      v46 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47, v36 + 4);
      v38 = 0;
    }
    *v37 = v38;
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "[Assets] LPMetadata error: %@", v36, 0xCu);
    v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy(v37, 1, v39);
    swift_slowDealloc(v37, -1, -1);
    swift_slowDealloc(v36, -1, -1);
    a4 = v35;
  }
  else
  {
    swift_errorRelease(a2);
    swift_errorRelease(a2);
  }

  ((void (*)(_QWORD))a4)(0);
}

void specialized MOSuggestionAssetLinkPreviewProvider.getAssetFor(url:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  void **v25;
  __n128 v26;
  uint8_t *v27;
  NSURL *v28;
  void *v29;
  void *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  _DWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  char *v48;
  void **aBlock;
  _QWORD v50[4];
  uint64_t v51;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v47 = v9;
  v48 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)&v41 - v10;
  v12 = objc_msgSend(objc_allocWithZone((Class)LPMetadataProvider), "init");
  if (serverManager._clientConnections != (NSMutableDictionary *)-1)
    swift_once(&serverManager._clientConnections, one-time initialization function for shared);
  v13 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v13, (uint64_t)static MOAngelLogger.shared);
  v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v14 = v46(v11, a1, v6);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(12, -1);
    v43 = a1;
    v18 = v17;
    v45 = v6;
    *(_DWORD *)v17 = 134217984;
    v42 = v17 + 4;
    v19 = URL.absoluteString.getter(v17);
    v21 = v20;
    v22 = String.hashValue.getter(v19);
    v44 = a2;
    v23 = v12;
    v24 = a3;
    v25 = (void **)v22;
    v26 = swift_bridgeObjectRelease(v21);
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v11, v45, v26);
    aBlock = v25;
    a3 = v24;
    v12 = v23;
    a2 = v44;
    v6 = v45;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v50, v42);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "[Assets] Link Preview fetching data for %ld", v18, 0xCu);
    v27 = v18;
    a1 = v43;
    swift_slowDealloc(v27, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
  }

  URL._bridgeToObjectiveC()(v28);
  v30 = v29;
  v31 = v48;
  v46(v48, a1, v6);
  v32 = *(unsigned __int8 *)(v7 + 80);
  v33 = (v32 + 16) & ~v32;
  v34 = (v47 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  v35 = swift_allocObject(&unk_1001EBCD8, v34 + 16, v32 | 7);
  v36 = v6;
  v37 = v35;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v35 + v33, v31, v36);
  v38 = (_QWORD *)(v37 + v34);
  *v38 = a2;
  v38[1] = a3;
  v50[3] = partial apply for closure #1 in MOSuggestionAssetLinkPreviewProvider.getAssetFor(url:completion:);
  v51 = v37;
  aBlock = _NSConcreteStackBlock;
  v50[0] = 1107296256;
  v50[1] = thunk for @escaping @callee_guaranteed (@guaranteed NSNumber?, @guaranteed Error?) -> ();
  v50[2] = &block_descriptor_34;
  v39 = _Block_copy(&aBlock);
  v40 = v51;
  swift_retain(a3);
  objc_msgSend(v12, "startFetchingMetadataForURL:completionHandler:", v30, v39, swift_release(v40).n128_f64[0]);
  _Block_release(v39);

}

unint64_t lazy protocol witness table accessor for type MOSuggestionAssetLinkPreviewView and conformance MOSuggestionAssetLinkPreviewView()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MOSuggestionAssetLinkPreviewView and conformance MOSuggestionAssetLinkPreviewView;
  if (!lazy protocol witness table cache variable for type MOSuggestionAssetLinkPreviewView and conformance MOSuggestionAssetLinkPreviewView)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MOSuggestionAssetLinkPreviewView, &type metadata for MOSuggestionAssetLinkPreviewView);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionAssetLinkPreviewView and conformance MOSuggestionAssetLinkPreviewView);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MOSuggestionAssetLinkPreviewView and conformance MOSuggestionAssetLinkPreviewView;
  if (!lazy protocol witness table cache variable for type MOSuggestionAssetLinkPreviewView and conformance MOSuggestionAssetLinkPreviewView)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MOSuggestionAssetLinkPreviewView, &type metadata for MOSuggestionAssetLinkPreviewView);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionAssetLinkPreviewView and conformance MOSuggestionAssetLinkPreviewView);
  }
  return result;
}

void *associated type witness table accessor for View.Body : View in MOSuggestionAssetLinkPreviewView()
{
  return &protocol witness table for Never;
}

ValueMetadata *type metadata accessor for MOSuggestionAssetLinkPreviewView()
{
  return &type metadata for MOSuggestionAssetLinkPreviewView;
}

uint64_t type metadata accessor for MOSuggestionAssetLinkPreviewProvider()
{
  return objc_opt_self(_TtC16MomentsUIService36MOSuggestionAssetLinkPreviewProvider);
}

uint64_t sub_10013EDA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

void partial apply for closure #1 in MOSuggestionAssetLinkPreviewProvider.getAssetFor(url:completion:)(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  closure #1 in MOSuggestionAssetLinkPreviewProvider.getAssetFor(url:completion:)(a1, a2, v2 + v6, *(void (**)(void))v7, *(_QWORD *)(v7 + 8));
}

uint64_t block_copy_helper_34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_34(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t type metadata accessor for LPLinkMetadata()
{
  unint64_t result;
  uint64_t v1;

  result = lazy cache variable for type metadata for LPLinkMetadata;
  if (!lazy cache variable for type metadata for LPLinkMetadata)
  {
    v1 = objc_opt_self(LPLinkMetadata);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for LPLinkMetadata);
  }
  return result;
}

uint64_t CLLocation.shiftedIfNecessary.getter()
{
  uint64_t v0;

  if (one-time initialization token for shared != -1)
    swift_once(&one-time initialization token for shared, one-time initialization function for shared);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)static MOLocationShifter.shared + 104))(v0);
}

uint64_t MOLocationShifter.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_allocObject(v0, 32, 7);
  MOLocationShifter.init()();
  return v1;
}

uint64_t *MOLocationShifter.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1)
    swift_once(&one-time initialization token for shared, one-time initialization function for shared);
  return &static MOLocationShifter.shared;
}

double static MOLocationShifter.shared.getter()
{
  double result;

  if (one-time initialization token for shared != -1)
    swift_once(&one-time initialization token for shared, one-time initialization function for shared);
  *(_QWORD *)&result = swift_retain(static MOLocationShifter.shared).n128_u64[0];
  return result;
}

Swift::Bool __swiftcall MOLocationShifter.shiftNeeded(_:)(CLLocation a1)
{
  Class isa;
  double v2;
  double v3;
  double v4;

  isa = a1.super.isa;
  -[objc_class coordinate](a1.super.isa, "coordinate");
  v3 = v2;
  -[objc_class coordinate](isa, "coordinate");
  return objc_msgSend((id)objc_opt_self(GEOLocationShifter), "isLocationShiftRequiredForCoordinate:", v3, v4);
}

CLLocation __swiftcall MOLocationShifter.shiftedIfNecessary(_:)(CLLocation a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  id v28;
  id v29;
  Class v30;
  objc_class *v31;
  void *v32;
  objc_class *v33;
  NSObject *v34;
  double v35;
  double v36;
  _QWORD *v37;
  void *v38;
  _QWORD *v39;
  NSObject *v40;
  void *v41;
  uint64_t v42;
  void *v43;
  _QWORD *v44;
  NSObject *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  _BOOL4 v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint8_t *v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  id v76;
  id v77;
  Class v78;
  CLLocation result;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  Class isa;
  char v92[24];
  void **aBlock;
  uint64_t v94;
  void *v95;
  void *v96;
  void *v97;
  _QWORD *v98;

  isa = a1.super.isa;
  v1 = type metadata accessor for DispatchTime(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v80 - v6;
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  -[objc_class coordinate](isa, "coordinate");
  v13 = v12;
  -[objc_class coordinate](isa, "coordinate");
  v15 = v14;
  if (objc_msgSend((id)objc_opt_self(GEOLocationShifter), "isLocationShiftRequiredForCoordinate:", v13, v14))
  {
    v85 = v7;
    v86 = v2;
    v87 = v1;
    v16 = swift_allocObject(&unk_1001EBDD8, 32, 7);
    *(double *)(v16 + 16) = v13;
    *(double *)(v16 + 24) = v15;
    v17 = swift_allocObject(&unk_1001EBE00, 24, 7);
    -[objc_class horizontalAccuracy](isa, "horizontalAccuracy");
    *(_QWORD *)(v17 + 16) = v18;
    v19 = *(void **)(v90 + 16);
    -[objc_class horizontalAccuracy](isa, "horizontalAccuracy");
    v88 = v17 + 16;
    v89 = v16 + 16;
    if (objc_msgSend(v19, "shiftCoordinate:accuracy:shiftedCoordinate:shiftedAccuracy:", v16 + 16, v17 + 16, v13, v15, v20))
    {
      v21 = *(double *)(v16 + 16);
      v22 = *(double *)(v16 + 24);
      -[objc_class altitude](isa, "altitude");
      v24 = v23;
      v25 = *(double *)(v17 + 16);
      -[objc_class verticalAccuracy](isa, "verticalAccuracy");
      v27 = v26;
      v28 = -[objc_class timestamp](isa, "timestamp");
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v28);

      v29 = objc_allocWithZone((Class)CLLocation);
      v30 = Date._bridgeToObjectiveC()().super.isa;
      v31 = (objc_class *)objc_msgSend(v29, "initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:", v30, v21, v22, v24, v25, v27);

      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      swift_release(v16);
      swift_release(v17);
    }
    else
    {
      v82 = v11;
      v83 = v9;
      v84 = v8;
      v34 = dispatch_group_create();
      dispatch_group_enter(v34);
      -[objc_class horizontalAccuracy](isa, "horizontalAccuracy");
      v36 = v35;
      v37 = (_QWORD *)swift_allocObject(&unk_1001EBE28, 40, 7);
      v37[2] = v16;
      v37[3] = v17;
      v37[4] = v34;
      v97 = partial apply for closure #1 in MOLocationShifter.shiftedIfNecessary(_:);
      v98 = v37;
      aBlock = _NSConcreteStackBlock;
      v94 = 1107296256;
      v95 = thunk for @escaping @callee_guaranteed (@unowned GEOLocationCoordinate2D, @unowned Double) -> ();
      v96 = &block_descriptor_35;
      v38 = _Block_copy(&aBlock);
      v39 = v98;
      v81 = v16;
      swift_retain(v16);
      v80 = v17;
      swift_retain(v17);
      v40 = v34;
      swift_release(v39);
      v97 = closure #2 in MOLocationShifter.shiftedIfNecessary(_:);
      v98 = 0;
      aBlock = _NSConcreteStackBlock;
      v94 = 1107296256;
      v95 = thunk for @escaping @callee_guaranteed () -> ();
      v96 = &block_descriptor_9_1;
      v41 = _Block_copy(&aBlock);
      v42 = swift_allocObject(&unk_1001EBEA0, 24, 7);
      *(_QWORD *)(v42 + 16) = v40;
      v97 = partial apply for closure #3 in MOLocationShifter.shiftedIfNecessary(_:);
      v98 = (_QWORD *)v42;
      aBlock = _NSConcreteStackBlock;
      v94 = 1107296256;
      v95 = thunk for @escaping @callee_guaranteed (@guaranteed CGImageRef?) -> ();
      v96 = &block_descriptor_15_2;
      v43 = _Block_copy(&aBlock);
      v44 = v98;
      v45 = v40;
      swift_release(v44);
      objc_msgSend(v19, "shiftCoordinate:accuracy:withCompletionHandler:mustGoToNetworkCallback:errorHandler:callbackQueue:", v38, v41, v43, *(_QWORD *)(v90 + 24), v13, v15, v36);
      _Block_release(v43);
      _Block_release(v41);
      _Block_release(v38);
      static DispatchTime.now()(v46);
      v47 = v85;
      + infix(_:_:)(v5, 5.0);
      v48 = v87;
      v49 = *(void (**)(char *, uint64_t))(v86 + 8);
      v49(v5, v87);
      v50 = OS_dispatch_group.wait(timeout:)(v47) & 1;
      v49(v47, v48);
      if ((static DispatchTimeoutResult.== infix(_:_:)(v50, 0) & 1) == 0)
      {
        if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
          swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
        v51 = type metadata accessor for Logger(0);
        v52 = __swift_project_value_buffer(v51, (uint64_t)static MOAngelLogger.assets);
        v53 = Logger.logObject.getter(v52);
        v54 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v53, v54))
        {
          v55 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v55 = 0;
          _os_log_impl((void *)&_mh_execute_header, v53, v54, "[LocationShifter] Timed out", v55, 2u);
          swift_slowDealloc(v55, -1, -1);
        }

      }
      if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
        swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
      v56 = type metadata accessor for Logger(0);
      v57 = __swift_project_value_buffer(v56, (uint64_t)static MOAngelLogger.assets);
      v58 = Logger.logObject.getter(v57);
      v59 = static os_log_type_t.default.getter();
      v60 = os_log_type_enabled(v58, v59);
      v61 = v84;
      v62 = v83;
      v63 = v82;
      v64 = v81;
      v65 = v80;
      if (v60)
      {
        v66 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v66 = 0;
        _os_log_impl((void *)&_mh_execute_header, v58, v59, "[LocationShifter] Returning shifted location", v66, 2u);
        swift_slowDealloc(v66, -1, -1);
      }

      *(_QWORD *)&v67 = swift_beginAccess(v89, &aBlock, 0, 0).n128_u64[0];
      v68 = *(double *)(v64 + 16);
      v69 = *(double *)(v64 + 24);
      -[objc_class altitude](isa, "altitude", v67);
      v71 = v70;
      *(_QWORD *)&v72 = swift_beginAccess(v88, v92, 0, 0).n128_u64[0];
      v73 = *(double *)(v65 + 16);
      -[objc_class verticalAccuracy](isa, "verticalAccuracy", v72);
      v75 = v74;
      v76 = -[objc_class timestamp](isa, "timestamp");
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v76);

      v77 = objc_allocWithZone((Class)CLLocation);
      v78 = Date._bridgeToObjectiveC()().super.isa;
      v31 = (objc_class *)objc_msgSend(v77, "initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:", v78, v68, v69, v71, v73, v75);

      (*(void (**)(char *, uint64_t))(v62 + 8))(v63, v61);
      swift_release(v64);
      swift_release(v65);

    }
    v33 = v31;
  }
  else
  {
    v33 = isa;
  }
  result._internal = v32;
  result.super.isa = v33;
  return result;
}

void closure #1 in MOLocationShifter.shiftedIfNecessary(_:)(uint64_t a1, uint64_t a2, NSObject *a3, double a4, double a5, double a6)
{
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  _BYTE v18[24];

  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v12 = type metadata accessor for Logger(0);
  v13 = __swift_project_value_buffer(v12, (uint64_t)static MOAngelLogger.assets);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "[LocationShifter] Shifted location async", v16, 2u);
    swift_slowDealloc(v16, -1, -1);
  }

  swift_beginAccess(a1 + 16, v18, 1, 0);
  *(double *)(a1 + 16) = a4;
  *(double *)(a1 + 24) = a5;
  swift_beginAccess(a2 + 16, &v17, 1, 0);
  *(double *)(a2 + 16) = a6;
  dispatch_group_leave(a3);
}

uint64_t thunk for @escaping @callee_guaranteed (@unowned GEOLocationCoordinate2D, @unowned Double) -> ()(uint64_t a1, double a2, double a3, double a4)
{
  void (*v7)(double, double, double);
  uint64_t v8;

  v7 = *(void (**)(double, double, double))(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  swift_retain(v8);
  v7(a2, a3, a4);
  return swift_release(v8);
}

void closure #2 in MOLocationShifter.shiftedIfNecessary(_:)()
{
  uint64_t v0;
  uint64_t v1;
  os_log_type_t v2;
  uint8_t *v3;
  NSObject *oslog;

  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v0 = type metadata accessor for Logger(0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)static MOAngelLogger.assets);
  oslog = Logger.logObject.getter(v1);
  v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v2, "[LocationShifter] Needs to download shifting function", v3, 2u);
    swift_slowDealloc(v3, -1, -1);
  }

}

void closure #3 in MOLocationShifter.shiftedIfNecessary(_:)(uint64_t a1, dispatch_group_t group)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];
  _BYTE v15[8];
  uint64_t v16;

  if (a1)
  {
    swift_errorRetain(a1);
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
      swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    v4 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v4, (uint64_t)static MOAngelLogger.assets);
    swift_errorRetain(a1);
    v5 = swift_errorRetain(a1);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(12, -1);
      v9 = swift_slowAlloc(32, -1);
      v16 = v9;
      *(_DWORD *)v8 = 136315138;
      swift_getErrorValue(a1, v15, v14);
      v10 = Error.localizedDescription.getter(v14[1], v14[2]);
      v12 = v11;
      v13 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, v14, v8 + 4);
      swift_bridgeObjectRelease(v12);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "[LocationShifter] error: %s", v8, 0xCu);
      swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v9, -1, -1);
      swift_slowDealloc(v8, -1, -1);

      swift_errorRelease(a1);
    }
    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      swift_errorRelease(a1);

    }
  }
  dispatch_group_leave(group);
}

__C::CLLocationCoordinate2D __swiftcall MOLocationShifter.shiftedIfNecessary(_:)(__C::CLLocationCoordinate2D a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  __C::CLLocationCoordinate2D result;

  v2 = objc_msgSend(objc_allocWithZone((Class)CLLocation), "initWithLatitude:longitude:", a1.latitude, a1.longitude);
  v3 = (void *)(*(uint64_t (**)(void))(*(_QWORD *)v1 + 104))();
  objc_msgSend(v3, "coordinate");
  v5 = v4;
  v7 = v6;

  v8 = v5;
  v9 = v7;
  result.longitude = v9;
  result.latitude = v8;
  return result;
}

uint64_t MOLocationShifter.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t MOLocationShifter.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t MOLocationShifter.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  _QWORD *v18;

  v1 = v0;
  v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + 16) = objc_msgSend(objc_allocWithZone((Class)GEOLocationShifter), "init");
  v12 = type metadata accessor for OS_dispatch_queue();
  static DispatchQoS.unspecified.getter(v12);
  v18 = _swiftEmptyArrayStorage;
  v13 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes();
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  v15 = lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v18, v14, v15, v6, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v2);
  *(_QWORD *)(v1 + 24) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000002BLL, 0x80000001001A61E0, v11, v8, v5, 0);
  return v1;
}

uint64_t sub_10013FE80()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10013FE90()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10013FEA0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

void partial apply for closure #1 in MOLocationShifter.shiftedIfNecessary(_:)(double a1, double a2, double a3)
{
  uint64_t v3;

  closure #1 in MOLocationShifter.shiftedIfNecessary(_:)(*(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(NSObject **)(v3 + 32), a1, a2, a3);
}

double block_copy_helper_35(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t block_destroy_helper_35(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10013FEF8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void partial apply for closure #3 in MOLocationShifter.shiftedIfNecessary(_:)(uint64_t a1)
{
  uint64_t v1;

  closure #3 in MOLocationShifter.shiftedIfNecessary(_:)(a1, *(dispatch_group_t *)(v1 + 16));
}

uint64_t CLLocationCoordinate2D.shiftedIfNecessary.getter(double a1, double a2)
{
  if (one-time initialization token for shared != -1)
    swift_once(&one-time initialization token for shared, one-time initialization function for shared);
  return (*(uint64_t (**)(double, double))(*(_QWORD *)static MOLocationShifter.shared + 112))(a1, a2);
}

uint64_t type metadata accessor for MOLocationShifter()
{
  return objc_opt_self(_TtC16MomentsUIService17MOLocationShifter);
}

uint64_t *MOMapLocation.LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD.unsafeMutableAddressor()
{
  if (one-time initialization token for LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD != -1)
    swift_once(&one-time initialization token for LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD, one-time initialization function for LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD);
  return &static MOMapLocation.LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD;
}

void *MOMapLocation.METERS_TO_DEGREES.unsafeMutableAddressor()
{
  return &static MOMapLocation.METERS_TO_DEGREES;
}

uint64_t MOMapLocation.__allocating_init(latitude:longitude:title:clusterCount:geoMapItem:confidenceLevel:isWork:enclosingArea:horizontalUncertainty:isScaledDownPOI:poiCateogory:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  char v25;
  uint64_t v26;

  v25 = a4 & 1;
  v26 = swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  MOMapLocation.init(latitude:longitude:title:clusterCount:geoMapItem:confidenceLevel:isWork:enclosingArea:horizontalUncertainty:isScaledDownPOI:poiCateogory:)(a1, a2, a3, v25, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
  return v26;
}

void *MOMapLocation.MEDIUM_AND_HIGH_CONFIDENCE_THRESHOLD.unsafeMutableAddressor()
{
  return &static MOMapLocation.MEDIUM_AND_HIGH_CONFIDENCE_THRESHOLD;
}

uint64_t one-time initialization function for LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD()
{
  void *v0;
  NSString v1;
  id v2;
  uint64_t result;
  uint64_t v4;
  _OWORD v5[2];
  __int128 v6;
  __int128 v7;

  if (one-time initialization token for defaults != -1)
    swift_once(&one-time initialization token for defaults, one-time initialization function for defaults);
  v0 = (void *)static MOAngelDefaultsManager.defaults;
  if (!static MOAngelDefaultsManager.defaults)
  {
    v6 = 0u;
    v7 = 0u;
LABEL_11:
    result = outlined destroy of Any?((uint64_t)&v6, &demangling cache variable for type metadata for Any?);
    goto LABEL_12;
  }
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "objectForKey:", v1);

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)(v5, v2);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  outlined init with take of Any?((uint64_t)v5, (uint64_t)&v6);
  if (!*((_QWORD *)&v7 + 1))
    goto LABEL_11;
  result = swift_dynamicCast(v5, &v6, (char *)&type metadata for Any + 8, &type metadata for Double, 6);
  if ((result & 1) == 0)
  {
LABEL_12:
    v4 = 0x4062C00000000000;
    goto LABEL_13;
  }
  v4 = *(_QWORD *)&v5[0];
LABEL_13:
  static MOMapLocation.LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD = v4;
  return result;
}

double static MOMapLocation.LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD.getter()
{
  if (one-time initialization token for LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD != -1)
    swift_once(&one-time initialization token for LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD, one-time initialization function for LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD);
  return *(double *)&static MOMapLocation.LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD;
}

double static MOMapLocation.METERS_TO_DEGREES.getter()
{
  return 111000.0;
}

double static MOMapLocation.MEDIUM_AND_HIGH_CONFIDENCE_THRESHOLD.getter()
{
  return 0.9;
}

uint64_t key path setter for MOMapLocation.startDate : MOMapLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Date?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 200))(v6);
}

uint64_t MOMapLocation.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  return MOMapLocation.startDate.getter(&OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_startDate, a1);
}

uint64_t MOMapLocation.startDate.setter(uint64_t a1)
{
  return MOMapLocation.startDate.setter(a1, &OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_startDate);
}

uint64_t (*MOMapLocation.startDate.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_startDate, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t key path setter for MOMapLocation.endDate : MOMapLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Date?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 224))(v6);
}

uint64_t MOMapLocation.endDate.getter@<X0>(uint64_t a1@<X8>)
{
  return MOMapLocation.startDate.getter(&OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_endDate, a1);
}

uint64_t MOMapLocation.startDate.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  _BYTE v6[24];

  v4 = v2 + *a1;
  swift_beginAccess(v4, v6, 0, 0);
  return outlined init with copy of Date?(v4, a2);
}

uint64_t MOMapLocation.endDate.setter(uint64_t a1)
{
  return MOMapLocation.startDate.setter(a1, &OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_endDate);
}

uint64_t MOMapLocation.startDate.setter(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  _BYTE v6[24];

  v4 = v2 + *a2;
  swift_beginAccess(v4, v6, 33, 0);
  outlined assign with take of Date?(a1, v4);
  return swift_endAccess(v6);
}

uint64_t (*MOMapLocation.endDate.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_endDate, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

double MOMapLocation.latitude.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_latitude;
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_latitude, v3, 0, 0);
  return *(double *)v1;
}

uint64_t MOMapLocation.latitude.setter(double a1)
{
  uint64_t v1;
  double *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (double *)(v1 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_latitude);
  result = swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_latitude, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*MOMapLocation.latitude.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_latitude, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

double MOMapLocation.longitude.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_longitude;
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_longitude, v3, 0, 0);
  return *(double *)v1;
}

uint64_t MOMapLocation.longitude.setter(double a1)
{
  uint64_t v1;
  double *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (double *)(v1 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_longitude);
  result = swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_longitude, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*MOMapLocation.longitude.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_longitude, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOMapLocation.mapItem.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_mapItem, v2, 0, 0);
  return swift_unknownObjectRetain();
}

uint64_t MOMapLocation.mapItem.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_mapItem);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_unknownObjectRelease(v4);
}

uint64_t (*MOMapLocation.mapItem.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_mapItem, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOMapLocation.clusterCount.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_clusterCount;
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_clusterCount, v3, 0, 0);
  return *(_QWORD *)v1;
}

uint64_t MOMapLocation.clusterCount.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  _BYTE v7[24];

  v5 = v2 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_clusterCount;
  result = swift_beginAccess(v5, v7, 1, 0);
  *(_QWORD *)v5 = a1;
  *(_BYTE *)(v5 + 8) = a2 & 1;
  return result;
}

uint64_t (*MOMapLocation.clusterCount.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_clusterCount, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOMapLocation.title.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_title);
}

uint64_t MOMapLocation.title.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_title);
}

uint64_t (*MOMapLocation.title.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_title, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

double MOMapLocation.confidenceLevel.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_confidenceLevel;
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_confidenceLevel, v3, 0, 0);
  return *(double *)v1;
}

uint64_t MOMapLocation.confidenceLevel.setter(double a1)
{
  uint64_t v1;
  double *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (double *)(v1 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_confidenceLevel);
  result = swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_confidenceLevel, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*MOMapLocation.confidenceLevel.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_confidenceLevel, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOMapLocation.isWork.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_isWork);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_isWork, v3, 0, 0);
  return *v1;
}

uint64_t MOMapLocation.isWork.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_isWork);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*MOMapLocation.isWork.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_isWork, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOMapLocation.userPlaceType.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_userPlaceType;
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_userPlaceType, v3, 0, 0);
  return *(_QWORD *)v1;
}

uint64_t MOMapLocation.userPlaceType.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_userPlaceType);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*MOMapLocation.userPlaceType.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_userPlaceType, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOMapLocation.enclosingArea.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_enclosingArea);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_enclosingArea, v4, 0, 0);
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t MOMapLocation.enclosingArea.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[24];

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_enclosingArea);
  swift_beginAccess(v5, v8, 1, 0);
  v6 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease(v6);
}

uint64_t (*MOMapLocation.enclosingArea.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_enclosingArea, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

double MOMapLocation.horizontalUncertainty.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_horizontalUncertainty;
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_horizontalUncertainty, v3, 0, 0);
  return *(double *)v1;
}

uint64_t MOMapLocation.horizontalUncertainty.setter(double a1)
{
  uint64_t v1;
  double *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (double *)(v1 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_horizontalUncertainty);
  result = swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_horizontalUncertainty, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*MOMapLocation.horizontalUncertainty.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_horizontalUncertainty, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOMapLocation.isScaledDownPOI.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_isScaledDownPOI);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_isScaledDownPOI, v3, 0, 0);
  return *v1;
}

uint64_t MOMapLocation.isScaledDownPOI.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_isScaledDownPOI);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*MOMapLocation.isScaledDownPOI.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_isScaledDownPOI, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOMapLocation.poiCategory.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_poiCategory);
}

uint64_t MOMapLocation.poiCategory.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_poiCategory);
}

uint64_t (*MOMapLocation.poiCategory.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_poiCategory, a1, 33, 0);
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

uint64_t MOMapLocation.init(latitude:longitude:title:clusterCount:geoMapItem:confidenceLevel:isWork:enclosingArea:horizontalUncertainty:isScaledDownPOI:poiCateogory:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v24;
  uint64_t v25;
  double *v26;
  _BYTE *v27;
  _QWORD *v28;
  double *v29;
  _BYTE *v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v44[24];
  _BYTE v45[24];
  _BYTE v46[24];
  _BYTE v47[24];
  _BYTE v48[24];
  _BYTE v49[24];
  _BYTE v50[24];
  _BYTE v51[32];

  v21 = v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_startDate;
  v22 = type metadata accessor for Date(0);
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v23(v21, 1, 1, v22);
  v23(v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_endDate, 1, 1, v22);
  v24 = (uint64_t *)(v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_mapItem);
  *(_QWORD *)(v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_mapItem) = 0;
  v25 = v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_clusterCount;
  *(_QWORD *)v25 = 0;
  *(_BYTE *)(v25 + 8) = 1;
  v26 = (double *)(v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_confidenceLevel);
  *(_QWORD *)(v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_confidenceLevel) = 0;
  v27 = (_BYTE *)(v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_isWork);
  *(_BYTE *)(v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_isWork) = 0;
  *(_QWORD *)(v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_userPlaceType) = -1;
  v28 = (_QWORD *)(v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_enclosingArea);
  *v28 = 0;
  v28[1] = 0;
  v29 = (double *)(v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_horizontalUncertainty);
  *(_QWORD *)(v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_horizontalUncertainty) = 0;
  v30 = (_BYTE *)(v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_isScaledDownPOI);
  *(_BYTE *)(v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_isScaledDownPOI) = 0;
  v31 = (_QWORD *)(v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_poiCategory);
  *v31 = 0;
  v31[1] = 0xE000000000000000;
  *(double *)(v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_latitude) = a9;
  *(double *)(v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_longitude) = a10;
  v32 = (_QWORD *)(v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_title);
  *v32 = a1;
  v32[1] = a2;
  swift_beginAccess(v25, v51, 1, 0);
  *(_QWORD *)v25 = a3;
  *(_BYTE *)(v25 + 8) = a4 & 1;
  swift_beginAccess(v24, v50, 1, 0);
  v33 = *v24;
  *v24 = a5;
  swift_unknownObjectRelease(v33);
  swift_beginAccess(v26, v49, 1, 0);
  *v26 = a11;
  swift_beginAccess(v27, v48, 1, 0);
  *v27 = a6;
  swift_beginAccess(v28, v47, 1, 0);
  v34 = v28[1];
  *v28 = a7;
  v28[1] = a8;
  swift_bridgeObjectRelease(v34);
  swift_beginAccess(v29, v46, 1, 0);
  *v29 = a12;
  swift_beginAccess(v30, v45, 1, 0);
  *v30 = a13;
  swift_beginAccess(v31, v44, 1, 0);
  v35 = v31[1];
  *v31 = a14;
  v31[1] = a15;
  swift_bridgeObjectRelease(v35);
  return v15;
}

uint64_t outlined init with copy of Date?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t MOMapLocation.shiftedIfNecessary.getter()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  id v3;
  uint64_t (*v4)(void);
  uint64_t v5;
  uint64_t v6;
  void *v7;
  double v8;
  double v9;
  id v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  double v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;

  v1 = v0;
  v2 = (*(double (**)(void))(*(_QWORD *)v0 + 240))();
  v3 = objc_msgSend(objc_allocWithZone((Class)CLLocation), "initWithLatitude:longitude:", v2, (*(double (**)(void))(*(_QWORD *)v0 + 264))());
  v4 = *(uint64_t (**)(void))(*(_QWORD *)v0 + 288);
  v5 = v4();
  swift_unknownObjectRelease(v5);
  if (v5)
    goto LABEL_6;
  if (one-time initialization token for shared != -1)
    swift_once(&one-time initialization token for shared, one-time initialization function for shared);
  v6 = static MOLocationShifter.shared;
  if (((*(uint64_t (**)(id))(*(_QWORD *)static MOLocationShifter.shared + 96))(v3) & 1) == 0)
  {
LABEL_6:

    swift_retain(v1);
  }
  else
  {
    v7 = (void *)(*(uint64_t (**)(id))(*(_QWORD *)v6 + 104))(v3);
    objc_msgSend(v7, "coordinate");
    v9 = v8;
    v10 = objc_msgSend(v7, "coordinate");
    v12 = v11;
    v13 = (*(uint64_t (**)(id))(*(_QWORD *)v1 + 336))(v10);
    v27 = v14;
    v28 = v13;
    v15 = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 312))();
    v17 = v16 & 1;
    v18 = v4();
    v19 = (*(double (**)(void))(*(_QWORD *)v1 + 360))();
    v20 = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 384))();
    v21 = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 432))();
    v23 = v22;
    v24 = (*(double (**)(void))(*(_QWORD *)v1 + 456))();
    v25 = type metadata accessor for MOMapLocation(0);
    v1 = swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
    MOMapLocation.init(latitude:longitude:title:clusterCount:geoMapItem:confidenceLevel:isWork:enclosingArea:horizontalUncertainty:isScaledDownPOI:poiCateogory:)(v28, v27, v15, v17, v18, v20 & 1, v21, v23, v9, v12, v19, v24, 0, 0, 0xE000000000000000);

  }
  return v1;
}

uint64_t type metadata accessor for MOMapLocation(uint64_t a1)
{
  uint64_t result;

  result = type metadata singleton initialization cache for MOMapLocation;
  if (!type metadata singleton initialization cache for MOMapLocation)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MOMapLocation);
  return result;
}

uint64_t MOMapLocation.deinit()
{
  uint64_t v0;

  outlined destroy of Any?(v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_startDate, (uint64_t *)&demangling cache variable for type metadata for Date?);
  outlined destroy of Any?(v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_endDate, (uint64_t *)&demangling cache variable for type metadata for Date?);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_mapItem));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_title + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_enclosingArea + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_poiCategory + 8));
  return v0;
}

double MOMapLocation.__deallocating_deinit()
{
  uint64_t v0;
  double result;

  outlined destroy of Any?(v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_startDate, (uint64_t *)&demangling cache variable for type metadata for Date?);
  outlined destroy of Any?(v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_endDate, (uint64_t *)&demangling cache variable for type metadata for Date?);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_mapItem));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_title + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_enclosingArea + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_poiCategory + 8));
  *(_QWORD *)&result = swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52)).n128_u64[0];
  return result;
}

uint64_t sub_10014149C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 192))();
}

uint64_t sub_1001414C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 216))();
}

void sub_1001414F4(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))(**(_QWORD **)a1 + 240))();
}

uint64_t sub_100141524(double *a1, uint64_t a2)
{
  return (*(uint64_t (**)(double))(**(_QWORD **)a2 + 248))(*a1);
}

void sub_100141550(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))(**(_QWORD **)a1 + 264))();
}

uint64_t sub_100141580(double *a1, uint64_t a2)
{
  return (*(uint64_t (**)(double))(**(_QWORD **)a2 + 272))(*a1);
}

uint64_t sub_1001415AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 288))();
  *a2 = result;
  return result;
}

uint64_t sub_1001415DC(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 296);
  v3 = swift_unknownObjectRetain();
  return v2(v3);
}

uint64_t sub_10014160C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 312))();
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_100141644(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(**(_QWORD **)a2 + 320))(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_10014167C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 336))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1001416AC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 344);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

void sub_1001416F0(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))(**(_QWORD **)a1 + 360))();
}

uint64_t sub_100141720(double *a1, uint64_t a2)
{
  return (*(uint64_t (**)(double))(**(_QWORD **)a2 + 368))(*a1);
}

uint64_t sub_10014174C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 384))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_100141780(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 392))(*a1);
}

uint64_t sub_1001417AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 408))();
  *a2 = result;
  return result;
}

uint64_t sub_1001417DC(_QWORD *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 416))(*a1);
}

uint64_t sub_100141808@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 432))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100141838(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 440);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

void sub_10014187C(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))(**(_QWORD **)a1 + 456))();
}

uint64_t sub_1001418AC(double *a1, uint64_t a2)
{
  return (*(uint64_t (**)(double))(**(_QWORD **)a2 + 464))(*a1);
}

uint64_t sub_1001418D8@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 480))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_10014190C(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 488))(*a1);
}

uint64_t sub_100141938@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 504))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100141968(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 512);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t ObjC metadata update function for MOMapLocation()
{
  return type metadata accessor for MOMapLocation(0);
}

void type metadata completion function for MOMapLocation(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[14];

  type metadata accessor for Date?(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = v4[0];
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[4] = "\b";
    v4[5] = &unk_1001A3448;
    v4[6] = &unk_1001A3460;
    v4[7] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[8] = &unk_1001A3478;
    v4[9] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[10] = &unk_1001A3490;
    v4[11] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[12] = &unk_1001A3478;
    v4[13] = &unk_1001A3460;
    swift_updateClassMetadata2(a1, 256, 14, v4, a1 + 80);
  }
}

void type metadata accessor for Date?(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!lazy cache variable for type metadata for Date?)
  {
    v2 = type metadata accessor for Date(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&lazy cache variable for type metadata for Date?);
  }
}

void *MOSuggestionSheetStateOfMindTipCell.reuseIdentifier.unsafeMutableAddressor()
{
  return &static MOSuggestionSheetStateOfMindTipCell.reuseIdentifier;
}

uint64_t MOSuggestionSheetStateOfMindTipCellModel.__allocating_init(publicUI:tip:)(char a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE v7[24];

  v5 = swift_allocObject(v2, 18, 7);
  *(_BYTE *)(v5 + 17) = 2;
  *(_BYTE *)(v5 + 16) = a1;
  swift_beginAccess(v5 + 17, v7, 1, 0);
  *(_BYTE *)(v5 + 17) = a2;
  return v5;
}

unint64_t static MOSuggestionSheetStateOfMindTipCell.reuseIdentifier.getter()
{
  return 0xD000000000000023;
}

double MOSuggestionSheetStateOfMindTipCell.tipModel.getter()
{
  uint64_t v0;
  _QWORD *v1;
  double result;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetStateOfMindTipCell_tipModel);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetStateOfMindTipCell_tipModel, v3, 0, 0);
  *(_QWORD *)&result = swift_retain(*v1).n128_u64[0];
  return result;
}

uint64_t MOSuggestionSheetStateOfMindTipCell.tipModel.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[24];

  v3 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetStateOfMindTipCell_tipModel);
  swift_beginAccess((char *)v1 + OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetStateOfMindTipCell_tipModel, v7, 1, 0);
  v4 = *v3;
  *v3 = a1;
  swift_retain(a1);
  v5 = swift_release(v4);
  (*(void (**)(uint64_t))((swift_isaMask & *v1) + 0x98))(v5);
  return swift_release(a1);
}

uint64_t (*MOSuggestionSheetStateOfMindTipCell.tipModel.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetStateOfMindTipCell_tipModel, a1, 33, 0);
  return MOSuggestionSheetStateOfMindTipCell.tipModel.modify;
}

uint64_t MOSuggestionSheetStateOfMindTipCell.tipModel.modify(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess(a1);
  if ((a2 & 1) == 0)
    return (*(uint64_t (**)(uint64_t))((swift_isaMask & **(_QWORD **)(a1 + 24)) + 0x98))(result);
  return result;
}

void MOSuggestionSheetStateOfMindTipCell.init(coder:)()
{
  char *v0;

  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetStateOfMindTipCell_currentTipView], 0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetStateOfMindTipCell_tipModel] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionSheetStateOfMindTipCell.swift", 58, 2, 25, 0);
  __break(1u);
}

_QWORD *MOSuggestionSheetStateOfMindTipCell.init(frame:)()
{
  char *v0;
  double y;
  double width;
  double height;
  _QWORD *v4;
  void (*v5)(void);
  _QWORD *v6;
  objc_super v8;

  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetStateOfMindTipCell_currentTipView]);
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetStateOfMindTipCell_tipModel] = 0;
  y = CGRectZero.origin.y;
  width = CGRectZero.size.width;
  height = CGRectZero.size.height;
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for MOSuggestionSheetStateOfMindTipCell();
  v4 = objc_msgSendSuper2(&v8, "initWithFrame:", CGRectZero.origin.x, y, width, height);
  v5 = *(void (**)(void))((swift_isaMask & *v4) + 0x98);
  v6 = v4;
  v5();

  return v6;
}

Swift::Void __swiftcall MOSuggestionSheetStateOfMindTipCell.setUpTip()()
{
  _QWORD *v0;
  _QWORD *v1;
  char *v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  char v38[24];
  ValueMetadata *v39;
  unint64_t v40;

  v1 = v0;
  v2 = (char *)v0 + OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetStateOfMindTipCell_currentTipView;
  Strong = swift_unknownObjectWeakLoadStrong((char *)v0 + OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetStateOfMindTipCell_currentTipView);
  if (Strong)
  {
    v4 = (void *)Strong;
    swift_unknownObjectWeakAssign(v2, 0);
    objc_msgSend(v4, "removeFromSuperview");

  }
  v5 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x78))();
  v6 = v5;
  if (v5)
  {
    v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 96))(v5);
    swift_release(v6);
    LOBYTE(v6) = v7 & 1;
  }
  v39 = &type metadata for MOSuggestionStateOfMindTip;
  v40 = lazy protocol witness table accessor for type MOSuggestionStateOfMindTip and conformance MOSuggestionStateOfMindTip();
  v38[0] = v6;
  v8 = swift_allocObject(&unk_1001EBFE0, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16);
  v9 = objc_allocWithZone((Class)type metadata accessor for TipUIView(0));
  v10 = (void *)TipUIView.init(_:arrowEdge:actionHandler:)(v38, 4, partial apply for closure #1 in MOSuggestionSheetStateOfMindTipCell.setUpTip(), v8);
  objc_msgSend(v1, "addSubview:", v10);
  swift_unknownObjectWeakAssign(v2, v10);
  v11 = (void *)objc_opt_self(UIColor);
  v37 = v10;
  v12 = objc_msgSend(v11, "grayColor");
  objc_msgSend(v37, "setTintColor:", v12);

  v13 = objc_msgSend(v37, "superview");
  if (v13)
  {
    v14 = v13;
    objc_msgSend(v37, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v15 = objc_msgSend(v37, "topAnchor");
    v16 = objc_msgSend(v14, "topAnchor");
    v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

    objc_msgSend(v17, "setConstant:", 0.0);
    if (v17)
    {
      v18 = v17;
      objc_msgSend(v18, "setActive:", 1);

    }
  }
  v19 = objc_msgSend(v37, "superview");
  if (v19)
  {
    v20 = v19;
    objc_msgSend(v37, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v21 = objc_msgSend(v37, "bottomAnchor");
    v22 = objc_msgSend(v20, "bottomAnchor");
    v23 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

    if (v23)
    {
      objc_msgSend(v23, "setConstant:", -0.0);
      v24 = v23;
      objc_msgSend(v24, "setActive:", 1);

    }
  }
  v25 = objc_msgSend(v37, "superview");
  if (v25)
  {
    v26 = v25;
    objc_msgSend(v37, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v27 = objc_msgSend(v37, "leadingAnchor");
    v28 = objc_msgSend(v26, "leadingAnchor");
    v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

    objc_msgSend(v29, "setConstant:", 20.0);
    if (v29)
    {
      v30 = v29;
      objc_msgSend(v30, "setActive:", 1);

    }
  }
  v31 = objc_msgSend(v37, "superview");
  if (v31)
  {
    v32 = v31;
    objc_msgSend(v37, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v33 = objc_msgSend(v37, "trailingAnchor");
    v34 = objc_msgSend(v32, "trailingAnchor");
    v35 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

    objc_msgSend(v35, "setConstant:", -20.0);
    if (v35)
    {
      v36 = v35;
      objc_msgSend(v36, "setActive:", 1);

    }
  }
  TipUIView.imageSize.setter(50.0, 50.0);

}

void closure #1 in MOSuggestionSheetStateOfMindTipCell.setUpTip()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _BYTE v9[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v6 = Tips.Action.id.getter();
    v7 = v5;
    if (v6 == 0x656C62616E65 && v5 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease(0xE600000000000000);
    }
    else
    {
      v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x656C62616E65, 0xE600000000000000, v6, v5, 0);
      swift_bridgeObjectRelease(v7);
      if ((v8 & 1) == 0)
      {
LABEL_7:

        return;
      }
    }
    specialized MOSuggestionSheetStateOfMindTipCell.enableButtonTapped()();
    goto LABEL_7;
  }
}

id MOSuggestionSheetStateOfMindTipCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionSheetStateOfMindTipCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

unint64_t MOSuggestionStateOfMindTip.id.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t MOSuggestionStateOfMindTip.title.getter()
{
  return specialized MOSuggestionStateOfMindTip.title.getter();
}

uint64_t MOSuggestionStateOfMindTip.image.getter()
{
  return Image.init(_internalSystemName:)(0xD000000000000011, 0x80000001001A5FB0);
}

_QWORD *MOSuggestionStateOfMindTip.actions.getter(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Tips.Action>);
  v3 = type metadata accessor for Tips.Action(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 72);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = swift_allocObject(v2, v7 + v5, v6 | 7);
  *(_OWORD *)(v8 + 16) = xmmword_10019ED20;
  v9 = swift_allocObject(&unk_1001EC008, 17, 7);
  *(_BYTE *)(v9 + 16) = a1;
  Tips.Action.init(id:perform:_:)(0x656C62616E65, 0xE600000000000000, MOSuggestionInterstitialExpandableListViewCellConstants.init(), 0, partial apply for closure #1 in MOSuggestionStateOfMindTip.actions.getter, v9);
  v10 = _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs18EnumeratedSequenceVySay6TipKit4TipsO6ActionVGG_ALs5NeverOTgq505_sSi6f4Kit4h2O6i34VAEIgynr_Si6offset_AE7elementtAEs5J94OIegnrzr_TR03_s6a4Kit4c3O13D54BuilderV16buildFinalResultySayAC0D0VGAIFZAHSi_AHtXEfU_Tf3nnnpf_nTf1cn_n(v8);
  swift_setDeallocating(v8);
  swift_arrayDestroy(v8 + v7, *(_QWORD *)(v8 + 16), v3);
  swift_deallocClassInstance(v8, 32, 7);
  return v10;
}

uint64_t closure #1 in MOSuggestionStateOfMindTip.actions.getter(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char **v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v2 = LocalizedStringKey.init(stringLiteral:)(0x6553206F74206F47, 0xEE0073676E697474);
  v3 = Text.init(_:tableName:bundle:comment:)(v2);
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = (void *)objc_opt_self(UIColor);
  v11 = &selRef_systemBlueColor;
  if ((a1 & 1) == 0)
    v11 = &selRef_systemIndigoColor;
  v12 = v7 & 1;
  v13 = Color.init(_:)(objc_msgSend(v10, *v11));
  v16 = v13;
  v14 = Text.foregroundStyle<A>(_:)(&v16, v3, v5, v12, v9, &type metadata for Color, &protocol witness table for Color);
  outlined consume of Text.Storage(v3, v5, v12);
  swift_release(v13);
  swift_bridgeObjectRelease(v9);
  return v14;
}

_QWORD *protocol witness for Tip.actions.getter in conformance MOSuggestionStateOfMindTip()
{
  char *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = *v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Tips.Action>);
  v3 = type metadata accessor for Tips.Action(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 72);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = swift_allocObject(v2, v7 + v5, v6 | 7);
  *(_OWORD *)(v8 + 16) = xmmword_10019ED20;
  v9 = swift_allocObject(&unk_1001EC0D0, 17, 7);
  *(_BYTE *)(v9 + 16) = v1;
  Tips.Action.init(id:perform:_:)(0x656C62616E65, 0xE600000000000000, MOSuggestionInterstitialExpandableListViewCellConstants.init(), 0, closure #1 in MOSuggestionStateOfMindTip.actions.getterpartial apply, v9);
  v10 = _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs18EnumeratedSequenceVySay6TipKit4TipsO6ActionVGG_ALs5NeverOTgq505_sSi6f4Kit4h2O6i34VAEIgynr_Si6offset_AE7elementtAEs5J94OIegnrzr_TR03_s6a4Kit4c3O13D54BuilderV16buildFinalResultySayAC0D0VGAIFZAHSi_AHtXEfU_Tf3nnnpf_nTf1cn_n(v8);
  swift_setDeallocating(v8);
  swift_arrayDestroy(v8 + v7, *(_QWORD *)(v8 + 16), v3);
  swift_deallocClassInstance(v8, 32, 7);
  return v10;
}

void protocol witness for Identifiable.id.getter in conformance MOSuggestionStateOfMindTip(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000001ALL;
  a1[1] = 0x80000001001A34D0;
}

uint64_t MOSuggestionSheetStateOfMindTipCellModel.isPublicUI.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t MOSuggestionSheetStateOfMindTipCellModel.tip.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 17, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t MOSuggestionSheetStateOfMindTipCellModel.tip.setter(char a1)
{
  uint64_t v1;
  uint64_t result;
  _BYTE v4[24];

  result = swift_beginAccess(v1 + 17, v4, 1, 0);
  *(_BYTE *)(v1 + 17) = a1;
  return result;
}

uint64_t (*MOSuggestionSheetStateOfMindTipCellModel.tip.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + 17, a1, 33, 0);
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

uint64_t MOSuggestionSheetStateOfMindTipCellModel.init(publicUI:tip:)(char a1, char a2)
{
  uint64_t v2;
  _BYTE v5[24];

  *(_BYTE *)(v2 + 17) = 2;
  *(_BYTE *)(v2 + 16) = a1;
  swift_beginAccess(v2 + 17, v5, 1, 0);
  *(_BYTE *)(v2 + 17) = a2;
  return v2;
}

uint64_t type metadata accessor for MOSuggestionSheetStateOfMindTipCell()
{
  return objc_opt_self(_TtC16MomentsUIService35MOSuggestionSheetStateOfMindTipCell);
}

uint64_t sub_100142A1C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void partial apply for closure #1 in MOSuggestionSheetStateOfMindTipCell.setUpTip()(uint64_t a1)
{
  uint64_t v1;

  closure #1 in MOSuggestionSheetStateOfMindTipCell.setUpTip()(a1, v1);
}

uint64_t MOSuggestionSheetStateOfMindTipCellModel.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 18, 7);
}

_QWORD *_sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs18EnumeratedSequenceVySay6TipKit4TipsO6ActionVGG_ALs5NeverOTgq505_sSi6f4Kit4h2O6i34VAEIgynr_Si6offset_AE7elementtAEs5J94OIegnrzr_TR03_s6a4Kit4c3O13D54BuilderV16buildFinalResultySayAC0D0VGAIFZAHSi_AHtXEfU_Tf3nnnpf_nTf1cn_n(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;

  v2 = type metadata accessor for Tips.Action(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: Tips.Action));
  v6 = __chkstk_darwin(v37);
  v36 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v35 = (uint64_t *)((char *)&v27 - v9);
  __chkstk_darwin(v8);
  v11 = (uint64_t *)((char *)&v27 - v10);
  v38 = _swiftEmptyArrayStorage;
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, 0, 0);
  v12 = v38;
  v13 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain(a1);
  v34 = v13;
  v28 = a1;
  if (v13)
  {
    v14 = 0;
    v15 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v30 = *(_QWORD *)(v3 + 72);
    v31 = v15;
    v16 = a1 + v15;
    v29 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v32 = v3;
    v33 = v2;
    do
    {
      v17 = v37;
      v18 = &v36[*(int *)(v37 + 48)];
      v29(v18, v16, v2);
      v19 = (uint64_t)v35;
      v20 = (char *)v35 + *(int *)(v17 + 48);
      *v35 = v14;
      v21 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
      v21(v20, v18, v2);
      outlined init with take of (offset: Int, element: Tips.Action)(v19, (uint64_t)v11);
      Tips.Action.with(index:)(*v11);
      outlined destroy of (offset: Int, element: Tips.Action)((uint64_t)v11);
      v12 = v38;
      if ((swift_isUniquelyReferenced_nonNull_native(v38) & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v12[2] + 1, 1);
        v12 = v38;
      }
      v23 = v12[2];
      v22 = v12[3];
      if (v23 >= v22 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v23 + 1, 1);
        v12 = v38;
      }
      ++v14;
      v12[2] = v23 + 1;
      v24 = v30;
      v25 = (char *)v12 + v31 + v23 * v30;
      v2 = v33;
      v21(v25, v5, v33);
      v38 = v12;
      v16 += v24;
      v3 = v32;
    }
    while (v34 != v14);
  }
  swift_bridgeObjectRelease(v28);
  return v12;
}

size_t specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(size_t a1, int64_t a2, char a3)
{
  size_t *v3;
  size_t result;

  result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

size_t specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(size_t result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  char *v20;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Tips.Action>);
  v11 = *(_QWORD *)(type metadata accessor for Tips.Action(0) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (_QWORD *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  result = _swift_stdlib_malloc_size_0(v15);
  if (!v12)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v14 == 0x8000000000000000 && v12 == -1)
    goto LABEL_29;
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(result - v14) / v12);
LABEL_19:
  v17 = *(_QWORD *)(type metadata accessor for Tips.Action(0) - 8);
  v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v19 = (char *)v15 + v18;
  v20 = (char *)a4 + v18;
  if ((v5 & 1) != 0)
  {
    if (v15 < a4 || v19 >= &v20[*(_QWORD *)(v17 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack(v19, v20);
    }
    else if (v15 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v19, v20);
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v19);
  }
  swift_release(a4);
  return (size_t)v15;
}

void specialized MOSuggestionSheetStateOfMindTipCell.enableButtonTapped()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  NSURL *v7;
  void *v8;
  void *v9;
  uint64_t v10;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v0);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (v3)
  {
    v4 = v3;
    URL.init(string:)(0xD00000000000002ELL, 0x80000001001AE4B0);
    v5 = type metadata accessor for URL(0);
    v6 = *(_QWORD *)(v5 - 8);
    v8 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v2, 1, v5) != 1)
    {
      URL._bridgeToObjectiveC()(v7);
      v8 = v9;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v2, v5);
    }
    objc_msgSend(v4, "openSensitiveURL:withOptions:", v8, 0);

  }
  else
  {
    __break(1u);
  }
}

uint64_t specialized MOSuggestionStateOfMindTip.title.getter()
{
  id v0;
  Swift::String v1;
  Swift::String v2;
  Swift::String v3;
  unint64_t v4;
  Swift::String v6;
  Swift::String v7;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v7._countAndFlagsBits = 0xD00000000000002ALL;
  v7._object = (void *)0x80000001001AE480;
  v1._object = (void *)0x80000001001AE460;
  v1._countAndFlagsBits = 0xD00000000000001DLL;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v7);

  v6 = v3;
  v4 = lazy protocol witness table accessor for type String and conformance String();
  return Text.init<A>(_:)(&v6, &type metadata for String, v4);
}

uint64_t specialized MOSuggestionStateOfMindTip.message.getter()
{
  id v0;
  Swift::String v1;
  Swift::String v2;
  Swift::String v3;
  unint64_t v4;
  Swift::String v6;
  Swift::String v7;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1._countAndFlagsBits = 0xD000000000000075;
  v7._object = (void *)0x80000001001AE430;
  v1._object = (void *)0x80000001001AE3B0;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v7._countAndFlagsBits = 0xD00000000000002CLL;
  v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v7);

  v6 = v3;
  v4 = lazy protocol witness table accessor for type String and conformance String();
  return Text.init<A>(_:)(&v6, &type metadata for String, v4);
}

uint64_t sub_10014310C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t partial apply for closure #1 in MOSuggestionStateOfMindTip.actions.getter()
{
  uint64_t v0;

  return closure #1 in MOSuggestionStateOfMindTip.actions.getter(*(_BYTE *)(v0 + 16));
}

uint64_t sub_10014316C@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x78))();
  *a2 = result;
  return result;
}

uint64_t sub_1001431AC(_QWORD *a1, _QWORD **a2)
{
  uint64_t (*v2)(__n128);
  __n128 v3;

  v2 = *(uint64_t (**)(__n128))((swift_isaMask & **a2) + 0x80);
  v3 = swift_retain(*a1);
  return v2(v3);
}

uint64_t sub_1001431EC@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 96))();
  *a2 = result;
  return result;
}

uint64_t sub_10014321C(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 104))(*a1);
}

uint64_t storeEnumTagSinglePayload for MOSuggestionStateOfMindTip(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100143294 + 4 * byte_1001A34B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1001432C8 + 4 * byte_1001A34B0[v4]))();
}

uint64_t sub_1001432C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001432D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001432D8);
  return result;
}

uint64_t sub_1001432E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001432ECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1001432F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001432F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MOSuggestionStateOfMindTip()
{
  return &type metadata for MOSuggestionStateOfMindTip;
}

uint64_t type metadata accessor for MOSuggestionSheetStateOfMindTipCellModel()
{
  return objc_opt_self(_TtC16MomentsUIService40MOSuggestionSheetStateOfMindTipCellModel);
}

uint64_t sub_100143334()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t outlined init with take of (offset: Int, element: Tips.Action)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: Tips.Action));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of (offset: Int, element: Tips.Action)(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: Tips.Action));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined consume of Text.Storage(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release(a1);
  else
    return swift_bridgeObjectRelease(a2);
}

void *ProgressIndicatorConstants.STARTLAYEROFFSETDEGREE.unsafeMutableAddressor()
{
  return &static ProgressIndicatorConstants.STARTLAYEROFFSETDEGREE;
}

float static ProgressIndicatorConstants.STARTLAYEROFFSETDEGREE.getter()
{
  return -90.0;
}

void *ProgressIndicatorConstants.FRAME_SIZE.unsafeMutableAddressor()
{
  return &static ProgressIndicatorConstants.FRAME_SIZE;
}

const char *ProgressIndicatorConstants.PLAYBUTTONSYMBOL.unsafeMutableAddressor()
{
  return "play.fill";
}

const char *ProgressIndicatorConstants.PAUSEBUTTONSYMBOL.unsafeMutableAddressor()
{
  return "pause.fill";
}

void *ProgressIndicatorConstants.BORDER_LINE_WIDTH.unsafeMutableAddressor()
{
  return &static ProgressIndicatorConstants.BORDER_LINE_WIDTH;
}

id MOCircularProgressIndicatorView.borderLayer.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_borderLayer);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_borderLayer, v3, 0, 0);
  return *v1;
}

void MOCircularProgressIndicatorView.borderLayer.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_borderLayer);
}

uint64_t (*MOCircularProgressIndicatorView.borderLayer.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_borderLayer, a1, 33, 0);
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

id MOCircularProgressIndicatorView.progressLayer.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_progressLayer);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_progressLayer, v3, 0, 0);
  return *v1;
}

void MOCircularProgressIndicatorView.progressLayer.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_progressLayer);
}

uint64_t (*MOCircularProgressIndicatorView.progressLayer.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_progressLayer, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id MOCircularProgressIndicatorView.playPauseButton.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_playPauseButton);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_playPauseButton, v3, 0, 0);
  return *v1;
}

void MOCircularProgressIndicatorView.playPauseButton.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_playPauseButton);
}

uint64_t (*MOCircularProgressIndicatorView.playPauseButton.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_playPauseButton, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id MOCircularProgressIndicatorView.config.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_config);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_config, v3, 0, 0);
  return *v1;
}

void MOCircularProgressIndicatorView.config.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_config);
}

uint64_t (*MOCircularProgressIndicatorView.config.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_config, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id MOCircularProgressIndicatorView.playButtonConfig.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_playButtonConfig);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_playButtonConfig, v3, 0, 0);
  return *v1;
}

void MOCircularProgressIndicatorView.playButtonConfig.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_playButtonConfig);
}

uint64_t (*MOCircularProgressIndicatorView.playButtonConfig.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_playButtonConfig, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOCircularProgressIndicatorView.mediaAssetID.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_mediaAssetID);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_mediaAssetID, v4, 0, 0);
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t MOCircularProgressIndicatorView.mediaAssetID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[24];

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_mediaAssetID);
  swift_beginAccess(v5, v8, 1, 0);
  v6 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease(v6);
}

uint64_t (*MOCircularProgressIndicatorView.mediaAssetID.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_mediaAssetID, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

_QWORD *MOCircularProgressIndicatorView.__allocating_init(mediaAssetID:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return MOCircularProgressIndicatorView.init(mediaAssetID:)(a1, a2);
}

_QWORD *MOCircularProgressIndicatorView.init(mediaAssetID:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  objc_class *v30;
  id v31;
  uint64_t v32;
  id v33;
  void (*v34)(_QWORD *);
  _QWORD *v35;
  id *v36;
  id v37;
  NSString v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id *v46;
  id v47;
  NSString v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  id v56;
  _QWORD *v57;
  id v58;
  id v59;
  id *v60;
  id v61;
  id v62;
  char **v63;
  void *v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  void *v70;
  id v71;
  id v72;
  id v73;
  id v74;
  void *v75;
  char v79[24];
  char v80[24];
  _QWORD v81[5];
  objc_super v82;
  char v83[24];

  v3 = OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_borderLayer;
  v4 = objc_allocWithZone((Class)CAShapeLayer);
  v5 = v2;
  *(_QWORD *)&v2[v3] = objc_msgSend(v4, "init");
  v6 = OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_progressLayer;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v7 = OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_playPauseButton;
  v8 = type metadata accessor for MOSuggestionSheetOversizedBoundsButton();
  *(_QWORD *)&v5[v7] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8)), "init");
  v9 = OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_config;
  v10 = (void *)objc_opt_self(UIColor);
  v11 = objc_msgSend(v10, "whiteColor");
  v12 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v13 = objc_msgSend(v12, "configurationWithHierarchicalColor:", v11);

  v14 = (void *)objc_opt_self(UIFont);
  v15 = objc_msgSend(v14, "systemFontOfSize:", 15.0);
  v16 = objc_msgSend(v12, "configurationWithFont:", v15);

  v17 = objc_msgSend(v13, "configurationByApplyingConfiguration:", v16);
  *(_QWORD *)&v5[v9] = v17;
  v18 = OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_playButtonConfig;
  v19 = objc_msgSend(v10, "whiteColor");
  v20 = objc_msgSend(v12, "configurationWithHierarchicalColor:", v19);

  v21 = objc_msgSend(v14, "systemFontOfSize:", 15.0);
  v22 = objc_msgSend(v12, "configurationWithFont:", v21);

  v23 = objc_msgSend(v20, "configurationByApplyingConfiguration:", v22);
  *(_QWORD *)&v5[v18] = v23;
  v24 = OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_blurMaterialView;
  v25 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 11);
  v26 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v25);

  *(_QWORD *)&v5[v24] = v26;
  v27 = &v5[OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_mediaAssetID];
  *(_QWORD *)v27 = 0;
  *((_QWORD *)v27 + 1) = 0;
  v28 = OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_borderPath;
  *(_QWORD *)&v5[v28] = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
  swift_beginAccess(v27, v83, 1, 0);
  v29 = *((_QWORD *)v27 + 1);
  *(_QWORD *)v27 = a1;
  *((_QWORD *)v27 + 1) = a2;

  swift_bridgeObjectRelease(v29);
  v30 = (objc_class *)type metadata accessor for MOCircularProgressIndicatorView();
  v82.receiver = v5;
  v82.super_class = v30;
  v31 = objc_msgSendSuper2(&v82, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v32 = one-time initialization token for shared;
  v33 = v31;
  if (v32 != -1)
    swift_once(&one-time initialization token for shared, one-time initialization function for shared);
  v81[3] = v30;
  v81[4] = &protocol witness table for MOCircularProgressIndicatorView;
  v81[0] = v33;
  v34 = *(void (**)(_QWORD *))(*(_QWORD *)static MOMusicPlaybackCoordinator.shared + 216);
  v35 = v33;
  v34(v81);
  __swift_destroy_boxed_opaque_existential_1(v81);
  v36 = (id *)((char *)v35 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_borderLayer);
  swift_beginAccess((char *)v35 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_borderLayer, v81, 0, 0);
  v37 = *v36;
  v38 = String._bridgeToObjectiveC()();
  objc_msgSend(v37, "setName:", v38);

  objc_msgSend(*v36, "setLineWidth:", 2.5);
  v39 = *v36;
  v40 = objc_msgSend(v10, "whiteColor");
  v41 = objc_msgSend(v40, "colorWithAlphaComponent:", 0.6);

  v42 = objc_msgSend(v41, "CGColor");
  objc_msgSend(v39, "setStrokeColor:", v42);

  v43 = *v36;
  v44 = objc_msgSend(v10, "clearColor");
  v45 = objc_msgSend(v44, "CGColor");

  objc_msgSend(v43, "setFillColor:", v45);
  objc_msgSend(*v36, "setLineCap:", kCALineCapRound);
  v46 = (id *)((char *)v35 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_progressLayer);
  swift_beginAccess((char *)v35 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_progressLayer, v80, 0, 0);
  v47 = *v46;
  v48 = String._bridgeToObjectiveC()();
  objc_msgSend(v47, "setName:", v48);

  v49 = *v46;
  v50 = objc_msgSend(v10, "clearColor");
  v51 = objc_msgSend(v50, "CGColor");

  objc_msgSend(v49, "setFillColor:", v51);
  v52 = *v46;
  v53 = objc_msgSend(v10, "whiteColor");
  v54 = objc_msgSend(v53, "CGColor");

  objc_msgSend(v52, "setStrokeColor:", v54);
  objc_msgSend(*v46, "setLineWidth:", 2.5);
  v55 = OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_blurMaterialView;
  objc_msgSend(*(id *)((char *)v35 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_blurMaterialView), "_setCornerRadius:", 15.0);
  objc_msgSend(v35, "addSubview:", *(_QWORD *)((char *)v35 + v55));
  objc_msgSend(*(id *)((char *)v35 + v55), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v56 = *(id *)((char *)v35 + v55);
  v57 = UIView.fillSuper(margin:)(0.0);

  v58 = objc_msgSend(v35, "layer", swift_bridgeObjectRelease(v57).n128_f64[0]);
  objc_msgSend(v58, "addSublayer:", *v36);

  v59 = objc_msgSend(v35, "layer");
  objc_msgSend(v59, "addSublayer:", *v46);

  (*(void (**)(void))((swift_isaMask & *v35) + 0x158))();
  v60 = (id *)((char *)v35 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_playPauseButton);
  objc_msgSend(v35, "addSubview:", *(_QWORD *)((char *)v35 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_playPauseButton), swift_beginAccess((char *)v35 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_playPauseButton, v79, 0, 0).n128_f64[0]);
  objc_msgSend(*v60, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v61 = *v60;
  v62 = objc_msgSend(v61, "superview");
  v63 = &selRef_genericAvatarFor_pointSize_completion_;
  if (v62)
  {
    v64 = v62;
    objc_msgSend(v61, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v65 = objc_msgSend(v61, "centerYAnchor");
    v66 = objc_msgSend(v64, "centerYAnchor");
    v67 = objc_msgSend(v65, "constraintEqualToAnchor:", v66);

    objc_msgSend(v67, "setConstant:", 0.0);
    if (v67)
    {
      v67 = v67;
      objc_msgSend(v67, "setActive:", 1);

      v61 = v67;
    }

    v63 = &selRef_genericAvatarFor_pointSize_completion_;
  }
  else
  {
    v67 = 0;
    v64 = v61;
  }

  v68 = *v60;
  v69 = objc_msgSend(v68, "superview");
  if (v69)
  {
    v70 = v69;
    objc_msgSend(v68, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v71 = objc_msgSend(v68, "centerXAnchor");
    v72 = objc_msgSend(v70, "centerXAnchor");
    v73 = objc_msgSend(v71, v63[101], v72);

    objc_msgSend(v73, "setConstant:", 0.0);
    if (v73)
    {
      v74 = v73;
      objc_msgSend(v74, "setActive:", 1);

      v68 = v35;
      v75 = v74;
    }
    else
    {
      v75 = 0;
      v74 = v35;
    }

    v68 = v74;
  }
  else
  {
    v75 = 0;
    v70 = v35;
  }

  return v35;
}

uint64_t type metadata accessor for MOCircularProgressIndicatorView()
{
  return objc_opt_self(_TtC16MomentsUIService31MOCircularProgressIndicatorView);
}

Swift::Void __swiftcall MOCircularProgressIndicatorView.layoutSubviews()()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  objc_super v5;
  CGRect v6;
  CGRect v7;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for MOCircularProgressIndicatorView();
  objc_msgSendSuper2(&v5, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  CGRectGetMidX(v6);
  objc_msgSend(v0, "bounds");
  CGRectGetMidY(v7);
  MOSuggestionInterstitialExpandableListViewCellConstants.init()();
  v1 = OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_borderPath;
  v2 = objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_borderPath), "addArcWithCenter:radius:startAngle:endAngle:clockwise:", 1);
  v3 = (void *)(*(uint64_t (**)(id))((swift_isaMask & *v0) + 0x90))(v2);
  v4 = objc_msgSend(*(id *)((char *)v0 + v1), "CGPath");
  objc_msgSend(v3, "setPath:", v4);

}

Swift::Void __swiftcall MOCircularProgressIndicatorView.setupPlayPauseButton()()
{
  void *v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD *);
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  NSString v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  NSString v12;
  id v13;
  void *v14;
  uint64_t (*v15)(void);
  void *v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  _QWORD v24[5];

  if (one-time initialization token for shared != -1)
    swift_once(&one-time initialization token for shared, one-time initialization function for shared);
  v1 = static MOMusicPlaybackCoordinator.shared;
  v24[3] = type metadata accessor for MOCircularProgressIndicatorView();
  v24[4] = &protocol witness table for MOCircularProgressIndicatorView;
  v24[0] = v0;
  v2 = *(uint64_t (**)(_QWORD *))(*(_QWORD *)v1 + 352);
  v3 = v0;
  LOBYTE(v2) = v2(v24);
  v4 = __swift_destroy_boxed_opaque_existential_1(v24);
  v5 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0xC0))(v4);
  if ((v2 & 1) != 0)
  {
    v6 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v3) + 0xD8))();
    v7 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v7, v6);

    objc_msgSend(v5, "setImage:forState:", v8, 0);
    v9 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v3) + 0xA8))();
    objc_msgSend(v9, "setHidden:", 0);

    v10 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v3) + 0x90))();
    objc_msgSend(v10, "setHidden:", 0);
  }
  else
  {
    v11 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v3) + 0xF0))();
    v12 = String._bridgeToObjectiveC()();
    v13 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v12, v11);

    objc_msgSend(v5, "setImage:forState:", v13, 0);
    v14 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v3) + 0xA8))();
    objc_msgSend(v14, "setHidden:", 1);

    v10 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v3) + 0x90))();
    objc_msgSend(v10, "setHidden:", 1);
  }

  v15 = *(uint64_t (**)(void))((swift_isaMask & *v3) + 0xC0);
  v16 = (void *)v15();
  v17 = objc_msgSend(v16, "imageView");

  if (v17)
  {
    objc_msgSend(v17, "setContentMode:", 1);

  }
  v18 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v3, "touchPlayback:");
  v19 = (void *)((uint64_t (*)(id))v15)(objc_msgSend(v3, "setUserInteractionEnabled:", 1));
  objc_msgSend(v19, "addGestureRecognizer:", v18);

  v20 = (void *)v15();
  objc_msgSend(v20, "setUserInteractionEnabled:", 1);

  v21 = (void *)v15();
  objc_msgSend(v21, "setDeliversTouchesForGesturesToSuperview:", 0);

  v22 = (void *)v15();
  v23 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  objc_msgSend(v22, "setTintColor:", v23);

}

Swift::Float __swiftcall MOCircularProgressIndicatorView.degreesToRadians(degrees:)(Swift::Float degrees)
{
  return (float)(degrees * 3.1416) / 180.0;
}

Swift::Void __swiftcall MOCircularProgressIndicatorView.setProgress(progress:)(Swift::Float progress)
{
  _QWORD *v1;
  double v3;
  double v4;
  double v5;
  double v6;
  id v7;
  float (*v8)(float);
  double v9;
  id v10;
  void *v11;
  id v12;
  CGRect v13;
  CGRect v14;

  objc_msgSend(v1, "bounds");
  CGRectGetMidX(v13);
  objc_msgSend(v1, "bounds");
  CGRectGetMidY(v14);
  MOSuggestionInterstitialExpandableListViewCellConstants.init()();
  v4 = v3;
  v6 = v5;
  v7 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
  v8 = *(float (**)(float))((swift_isaMask & *v1) + 0x160);
  v9 = v8(-90.0);
  v10 = objc_msgSend(v7, "addArcWithCenter:radius:startAngle:endAngle:clockwise:", 1, v4, v6, 13.75, v9, ((__n128 (*)(float))v8)((float)(progress * 360.0) + -90.0).n128_f32[0]);
  v11 = (void *)(*(uint64_t (**)(id))((swift_isaMask & *v1) + 0xA8))(v10);
  v12 = objc_msgSend(v7, "CGPath");
  objc_msgSend(v11, "setPath:", v12);

}

Swift::Void __swiftcall MOCircularProgressIndicatorView.touchPlayback(_:)(UITapGestureRecognizer a1)
{
  void *v1;
  uint64_t v2;
  void (*v3)(_QWORD *);
  id v4;
  _QWORD v5[5];

  if (one-time initialization token for shared != -1)
    swift_once(&one-time initialization token for shared, one-time initialization function for shared);
  v2 = static MOMusicPlaybackCoordinator.shared;
  v5[3] = type metadata accessor for MOCircularProgressIndicatorView();
  v5[4] = &protocol witness table for MOCircularProgressIndicatorView;
  v5[0] = v1;
  v3 = *(void (**)(_QWORD *))(*(_QWORD *)v2 + 360);
  v4 = v1;
  v3(v5);
  __swift_destroy_boxed_opaque_existential_1(v5);
}

id MOCircularProgressIndicatorView.hitTest(_:with:)(uint64_t a1, double a2, double a3)
{
  _QWORD *v3;
  _QWORD *v4;
  id v8;
  uint64_t (*v9)(void);
  void *v10;
  void *v11;
  id v12;
  char v13;
  id v14;
  objc_super v16;

  v4 = v3;
  v16.receiver = v4;
  v16.super_class = (Class)type metadata accessor for MOCircularProgressIndicatorView();
  v8 = objc_msgSendSuper2(&v16, "hitTest:withEvent:", a1, a2, a3);
  v9 = *(uint64_t (**)(void))((swift_isaMask & *v4) + 0xC0);
  v10 = (void *)v9();
  v11 = v10;
  if (!v8)
  {

    goto LABEL_5;
  }
  type metadata accessor for UIView();
  v12 = v8;
  v13 = static NSObject.== infix(_:_:)(v12);

  if ((v13 & 1) == 0)
  {
LABEL_5:
    v14 = objc_msgSend(v4, "superview");
    goto LABEL_6;
  }
  v14 = (id)v9();
  v8 = v12;
LABEL_6:

  return v14;
}

void MOCircularProgressIndicatorView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MomentsUIService.MOCircularProgressIndicatorView", 48, "init(frame:)", 12, 0);
  __break(1u);
}

id MOCircularProgressIndicatorView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOCircularProgressIndicatorView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t MOCircularProgressIndicatorView.mediaID.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x120))();
}

Swift::Void __swiftcall MOCircularProgressIndicatorView.didReceiveShouldPlayNotification()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  void *v8;
  NSString v9;
  id v10;
  void *v11;
  id v12;

  v1 = v0;
  if (serverManager._clientConnections != (NSMutableDictionary *)-1)
    swift_once(&serverManager._clientConnections, one-time initialization function for shared);
  v2 = type metadata accessor for Logger(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)static MOAngelLogger.shared);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "[MOCircularProgressIndicatorView] Start Playing Notification", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xC0))();
  v8 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xD8))();
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v9, v8);

  objc_msgSend(v7, "setImage:forState:", v10, 0);
  v11 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xA8))();
  objc_msgSend(v11, "setHidden:", 0);

  v12 = (id)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x90))();
  objc_msgSend(v12, "setHidden:", 0);

}

Swift::Void __swiftcall MOCircularProgressIndicatorView.didReceiveShouldStopNotification()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  void *v8;
  NSString v9;
  id v10;
  void *v11;
  void *v12;

  v1 = v0;
  if (serverManager._clientConnections != (NSMutableDictionary *)-1)
    swift_once(&serverManager._clientConnections, one-time initialization function for shared);
  v2 = type metadata accessor for Logger(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)static MOAngelLogger.shared);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "[MOCircularProgressIndicatorView] Stop Playing Notification", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xC0))();
  v8 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xF0))();
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v9, v8);

  objc_msgSend(v7, "setImage:forState:", v10, 0);
  v11 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xA8))();
  objc_msgSend(v11, "setHidden:", 1);

  v12 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x90))();
  objc_msgSend(v12, "setHidden:", 1);

  (*(void (**)(float))((swift_isaMask & *v1) + 0x168))(0.0);
}

Swift::Void __swiftcall MOCircularProgressIndicatorView.didReceiveProgressNotification(_:)(Swift::Float a1)
{
  _QWORD *v1;

  (*(void (**)(float))((swift_isaMask & *v1) + 0x168))(a1);
}

uint64_t protocol witness for MOMusicPlaybackCoordinatorDelegate.mediaID.getter in conformance MOCircularProgressIndicatorView()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x120))();
}

void protocol witness for MOMusicPlaybackCoordinatorDelegate.didReceiveShouldPlayNotification() in conformance MOCircularProgressIndicatorView()
{
  MOCircularProgressIndicatorView.didReceiveShouldPlayNotification()();
}

void protocol witness for MOMusicPlaybackCoordinatorDelegate.didReceiveShouldStopNotification() in conformance MOCircularProgressIndicatorView()
{
  MOCircularProgressIndicatorView.didReceiveShouldStopNotification()();
}

uint64_t protocol witness for MOMusicPlaybackCoordinatorDelegate.didReceiveProgressNotification(_:) in conformance MOCircularProgressIndicatorView()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x168))();
}

void specialized MOCircularProgressIndicatorView.init(coder:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  char *v22;
  uint64_t v23;

  v1 = OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_borderLayer;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v2 = OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_progressLayer;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v3 = OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_playPauseButton;
  type metadata accessor for MOSuggestionSheetOversizedBoundsButton();
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v4 = OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_config;
  v5 = (void *)objc_opt_self(UIColor);
  v6 = objc_msgSend(v5, "whiteColor");
  v7 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v8 = objc_msgSend(v7, "configurationWithHierarchicalColor:", v6);

  v9 = (void *)objc_opt_self(UIFont);
  v10 = objc_msgSend(v9, "systemFontOfSize:", 15.0);
  v11 = objc_msgSend(v7, "configurationWithFont:", v10);

  v12 = objc_msgSend(v8, "configurationByApplyingConfiguration:", v11);
  *(_QWORD *)&v0[v4] = v12;
  v13 = OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_playButtonConfig;
  v14 = objc_msgSend(v5, "whiteColor");
  v15 = objc_msgSend(v7, "configurationWithHierarchicalColor:", v14);

  v16 = objc_msgSend(v9, "systemFontOfSize:", 15.0);
  v17 = objc_msgSend(v7, "configurationWithFont:", v16);

  v18 = objc_msgSend(v15, "configurationByApplyingConfiguration:", v17);
  *(_QWORD *)&v0[v13] = v18;
  v19 = OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_blurMaterialView;
  v20 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 11);
  v21 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v20);

  *(_QWORD *)&v0[v19] = v21;
  v22 = &v0[OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_mediaAssetID];
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;
  v23 = OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_borderPath;
  *(_QWORD *)&v0[v23] = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOCircularProgressIndicatorView.swift", 54, 2, 124, 0);
  __break(1u);
}

uint64_t sub_100145404@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x90))();
  *a2 = result;
  return result;
}

uint64_t sub_100145444(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x98))(*a1);
}

uint64_t sub_100145484@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xA8))();
  *a2 = result;
  return result;
}

uint64_t sub_1001454C4(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0xB0))(*a1);
}

uint64_t sub_100145504@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xC0))();
  *a2 = result;
  return result;
}

uint64_t sub_100145544(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0xC8))(*a1);
}

uint64_t sub_100145584@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xD8))();
  *a2 = result;
  return result;
}

uint64_t sub_1001455C4(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0xE0))(*a1);
}

uint64_t sub_100145604@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xF0))();
  *a2 = result;
  return result;
}

uint64_t sub_100145644(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0xF8))(*a1);
}

uint64_t sub_100145684@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x120))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1001456C4(uint64_t *a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **a2) + 0x128);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

ValueMetadata *type metadata accessor for ProgressIndicatorConstants()
{
  return &type metadata for ProgressIndicatorConstants;
}

_BYTE *MOSuggestionAddedView.__allocating_init(symbolOnly:)(char a1)
{
  objc_class *v1;
  _BYTE *v3;
  _BYTE *v4;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v3[OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_symbolOnly] = a1;
  v4 = v3;
  objc_msgSend(v4, "setClipsToBounds:", 1);
  MOSuggestionAddedView.initAddedView()();

  return v4;
}

uint64_t *MOSuggestionAddedView.font.unsafeMutableAddressor()
{
  if (one-time initialization token for font != -1)
    swift_once(&one-time initialization token for font, one-time initialization function for font);
  return &static MOSuggestionAddedView.font;
}

id static MOSuggestionAddedView.font.getter()
{
  return default argument 2 of MOSuggestionWorkoutIconGlyphView.init(image:glyphBackgroundColor:glyphTintColor:)(&one-time initialization token for font, (id *)&static MOSuggestionAddedView.font);
}

uint64_t *MOSuggestionAddedView.config.unsafeMutableAddressor()
{
  if (one-time initialization token for config != -1)
    swift_once(&one-time initialization token for config, one-time initialization function for config);
  return &static MOSuggestionAddedView.config;
}

id static MOSuggestionAddedView.config.getter()
{
  return default argument 2 of MOSuggestionWorkoutIconGlyphView.init(image:glyphBackgroundColor:glyphTintColor:)(&one-time initialization token for config, (id *)&static MOSuggestionAddedView.config);
}

const char *MOSuggestionAddedView.systemSymbol.unsafeMutableAddressor()
{
  return "checkmark";
}

void *MOSuggestionAddedView.savedSymbol.unsafeMutableAddressor()
{
  return &static MOSuggestionAddedView.savedSymbol;
}

id one-time initialization function for fontColor()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "systemGrayColor");
  static MOSuggestionAddedView.fontColor = (uint64_t)result;
  return result;
}

uint64_t *MOSuggestionAddedView.fontColor.unsafeMutableAddressor()
{
  if (one-time initialization token for fontColor != -1)
    swift_once(&one-time initialization token for fontColor, one-time initialization function for fontColor);
  return &static MOSuggestionAddedView.fontColor;
}

id static MOSuggestionAddedView.fontColor.getter()
{
  return default argument 2 of MOSuggestionWorkoutIconGlyphView.init(image:glyphBackgroundColor:glyphTintColor:)(&one-time initialization token for fontColor, (id *)&static MOSuggestionAddedView.fontColor);
}

id MOSuggestionAddedView.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  objc_super v15;

  v9 = OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_addedLabel;
  v10 = objc_allocWithZone((Class)UILabel);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "init");
  v12 = OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_checkmarkImageView;
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v13 = OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_backgroundView;
  *(_QWORD *)&v11[v13] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v11[OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_symbolOnly] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_symbolOnlyBackgroundRatio] = 0x3FE0000000000000;

  v15.receiver = v11;
  v15.super_class = (Class)type metadata accessor for MOSuggestionAddedView();
  return objc_msgSendSuper2(&v15, "initWithFrame:", a1, a2, a3, a4);
}

void MOSuggestionAddedView.initAddedView()()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  id v3;
  _QWORD *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  char **v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  char **v34;
  id v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  uint64_t v40;
  void *v41;
  id v42;

  v1 = v0;
  v42 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v2 = (void *)objc_opt_self(UIColor);
  v3 = objc_msgSend(v2, "whiteColor");
  objc_msgSend(v42, "setBackgroundColor:", v3);

  objc_msgSend(v42, "setAlpha:", 0.45);
  objc_msgSend(v42, "_setCornerRadius:", 8.0);
  objc_msgSend(v1, "insertSubview:atIndex:", v42, 0);
  v4 = UIView.fillSuper(margin:)(0.0);
  swift_bridgeObjectRelease(v4);
  if (*((_BYTE *)v1 + OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_symbolOnly) != 1)
  {
    v21 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
    objc_msgSend(v21, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v21, "setAxis:", 0);
    objc_msgSend(v21, "setDistribution:", 2);
    objc_msgSend(v21, "setAlignment:", 3);
    objc_msgSend(v1, "addSubview:", v21);
    v16 = v21;
    v22 = objc_msgSend(v2, "systemWhiteColor");
    v23 = objc_msgSend(v22, "colorWithAlphaComponent:", 0.9);

    objc_msgSend(v16, "setBackgroundColor:", v23);
    v24 = objc_msgSend(v16, "layer");
    objc_msgSend(v24, "setCornerRadius:", 12.0);

    objc_msgSend(v16, "setLayoutMarginsRelativeArrangement:", 1);
    objc_msgSend(v16, "setLayoutMargins:", 3.0, 10.0, 3.0, 10.0);
    v25 = objc_msgSend(v16, "superview");
    v26 = &selRef_genericAvatarFor_pointSize_completion_;
    if (v25)
    {
      v27 = v25;
      objc_msgSend(v16, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v28 = objc_msgSend(v16, "centerXAnchor");
      v29 = objc_msgSend(v27, "centerXAnchor");
      v30 = objc_msgSend(v28, "constraintEqualToAnchor:", v29);

      v26 = &selRef_genericAvatarFor_pointSize_completion_;
      objc_msgSend(v30, "setConstant:", 0.0);
      v31 = v30;
      objc_msgSend(v31, "setActive:", 1);

    }
    v32 = objc_msgSend(v16, "superview");
    if (v32)
    {
      v33 = v32;
      objc_msgSend(v16, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v34 = v26;
      v35 = objc_msgSend(v16, "centerYAnchor");
      v36 = objc_msgSend(v33, "centerYAnchor");
      v37 = objc_msgSend(v35, "constraintEqualToAnchor:", v36);

      objc_msgSend(v37, v34[102], 0.0);
      v38 = v37;
      objc_msgSend(v38, "setActive:", 1);

    }
    v39 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_checkmarkImageView);
    if (one-time initialization token for fontColor != -1)
      swift_once(&one-time initialization token for fontColor, one-time initialization function for fontColor);
    v40 = static MOSuggestionAddedView.fontColor;
    objc_msgSend(v39, "setTintColor:", static MOSuggestionAddedView.fontColor);
    objc_msgSend(v16, "addArrangedSubview:", v39);
    v41 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_addedLabel);
    objc_msgSend(v41, "setTextColor:", v40);
    if (one-time initialization token for font != -1)
      swift_once(&one-time initialization token for font, one-time initialization function for font);
    objc_msgSend(v41, "setFont:", static MOSuggestionAddedView.font);
    objc_msgSend(v16, "addArrangedSubview:", v41);
    goto LABEL_20;
  }
  v5 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_backgroundView);
  v6 = objc_msgSend(v2, "whiteColor");
  v7 = objc_msgSend(v6, "colorWithAlphaComponent:", 0.9);

  objc_msgSend(v5, "setBackgroundColor:", v7);
  objc_msgSend(v1, "addSubview:", v5);
  v8 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_checkmarkImageView);
  objc_msgSend(v1, "addSubview:", v8);
  if (one-time initialization token for fontColor != -1)
    swift_once(&one-time initialization token for fontColor, one-time initialization function for fontColor);
  objc_msgSend(v8, "setTintColor:", static MOSuggestionAddedView.fontColor);
  v9 = objc_msgSend(v8, "superview");
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v11 = objc_msgSend(v8, "centerXAnchor");
    v12 = objc_msgSend(v10, "centerXAnchor");
    v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

    objc_msgSend(v13, "setConstant:", 0.0);
    if (v13)
    {
      v14 = v13;
      objc_msgSend(v14, "setActive:", 1);

    }
  }
  v15 = objc_msgSend(v8, "superview");
  if (v15)
  {
    v16 = v15;
    objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v17 = objc_msgSend(v8, "centerYAnchor");
    v18 = objc_msgSend(v16, "centerYAnchor");
    v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

    objc_msgSend(v19, "setConstant:", 0.0);
    if (v19)
    {
      v20 = v19;
      objc_msgSend(v20, "setActive:", 1);

    }
LABEL_20:

  }
  (*(void (**)(_QWORD))((swift_isaMask & *v1) + 0x98))(0);

}

uint64_t type metadata accessor for MOSuggestionAddedView()
{
  return objc_opt_self(_TtC16MomentsUIService21MOSuggestionAddedView);
}

Swift::Void __swiftcall MOSuggestionAddedView.layoutSubviews()()
{
  char *v0;
  CGFloat Width;
  void *v2;
  CGFloat v3;
  objc_super v4;
  CGRect v5;

  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for MOSuggestionAddedView();
  objc_msgSendSuper2(&v4, "layoutSubviews");
  if (v0[OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_symbolOnly] == 1)
  {
    objc_msgSend(v0, "frame");
    Width = CGRectGetWidth(v5);
    v2 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_backgroundView];
    v3 = Width * 0.5 * 0.5;
    MOSuggestionInterstitialExpandableListViewCellConstants.init()();
    objc_msgSend(v2, "setFrame:");
    objc_msgSend(v2, "_setCornerRadius:", v3);
  }
}

Swift::Void __swiftcall MOSuggestionAddedView.updateRepresentation(interactionState:)(MomentsUIService::MOSuggestionCollectionViewInteractionState interactionState)
{
  uint64_t v1;
  void *v3;
  id v4;
  Swift::String v5;
  Swift::String v6;
  void *object;
  NSString v8;
  void *v9;
  Swift::String v10;
  Swift::String v11;
  void *v12;
  NSString v13;
  id v14;
  NSString v15;
  id v16;
  Swift::String v17;
  Swift::String v18;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_addedLabel);
  v4 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  if ((interactionState & 1) == 0)
  {
    v17._countAndFlagsBits = 0xD000000000000024;
    v17._object = (void *)0x80000001001AE630;
    v5._countAndFlagsBits = 0x6465646441;
    v5._object = (void *)0xE500000000000000;
    v6._countAndFlagsBits = 0;
    v6._object = (void *)0xE000000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v17)._object;

    v8 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "setText:", v8, swift_bridgeObjectRelease(object).n128_f64[0]);

    v9 = *(void **)(v1 + OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_checkmarkImageView);
    if (one-time initialization token for config == -1)
      goto LABEL_5;
    goto LABEL_6;
  }
  v18._countAndFlagsBits = 0xD000000000000034;
  v18._object = (void *)0x80000001001AE5F0;
  v10._countAndFlagsBits = 0x6465766153;
  v10._object = (void *)0xE500000000000000;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v4, v11, v18)._object;

  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "setText:", v13, swift_bridgeObjectRelease(v12).n128_f64[0]);

  v9 = *(void **)(v1 + OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_checkmarkImageView);
  if (one-time initialization token for config != -1)
LABEL_6:
    swift_once(&one-time initialization token for config, one-time initialization function for config);
LABEL_5:
  v14 = (id)static MOSuggestionAddedView.config;
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v15, v14);

  objc_msgSend(v9, "setImage:", v16);
}

id MOSuggestionAddedView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionAddedView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void specialized MOSuggestionAddedView.init(coder:)()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_addedLabel;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v2 = OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_checkmarkImageView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v3 = OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_backgroundView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v0[OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_symbolOnly] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_symbolOnlyBackgroundRatio] = 0x3FE0000000000000;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionAddedView.swift", 44, 2, 36, 0);
  __break(1u);
}

_QWORD *MOSuggestionInterstitialListAssetViewModel.__allocating_init(motionAssets:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char **v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _UNKNOWN **v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t i;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  char v45;
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  id v59;
  id v60;
  uint64_t v61;
  _UNKNOWN **v62;
  uint64_t v63;
  char v64;
  void *v65;
  int v66;
  void (*v67)(char *, uint64_t, char *);
  id v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  _QWORD *v77;
  char *v79;
  int v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  id v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  char *v95;
  char *v96;
  void *v97;
  _UNKNOWN **v98;
  char v99;
  id v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  char v110;
  id v111;
  uint64_t v112;
  char v113;
  void (*v114)(char *, char *, char *);
  uint64_t v115;
  uint64_t v116;
  void *v117;
  id v118;
  NSString v119;
  id v120;
  unint64_t v121;
  unint64_t v122;
  _QWORD *v123;
  _QWORD *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  _QWORD *v130;
  unint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unsigned int (*v137)(uint64_t, uint64_t, char *);
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  id v147;
  unint64_t v148;
  _QWORD *v149;
  _QWORD *v150;
  _QWORD *v151;
  unint64_t v152;
  _QWORD *v153;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  _QWORD *v163;
  _QWORD *v164;
  _QWORD *v165;
  _QWORD *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  unint64_t v178;
  _QWORD *v179;
  _QWORD *v180;
  uint64_t v181;
  unint64_t v182;
  unint64_t v183;
  uint64_t v184;
  uint64_t v185;
  NSObject *v186;
  os_log_type_t v187;
  _UNKNOWN **v188;
  uint8_t *v189;
  uint8_t *v190;
  id v191;
  void (*v192)(char *, char *);
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  id v203;
  void (*v204)(char *, char *);
  char *v205;
  uint64_t v206;
  int v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  int v212;
  uint64_t v213;
  __int128 v214;
  uint64_t v215;
  uint64_t v216;
  id v217;
  unsigned int (*v218)(uint64_t, uint64_t, char *);
  void (*v219)(uint64_t, uint64_t, uint64_t, char *);
  id v220;
  id v221;
  char *v222;
  char *v223;
  char *v224;
  char *v225;
  _UNKNOWN **v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  __int128 v231;
  _QWORD *v232;
  _QWORD *v233;
  char v234[24];
  char v235[16];
  uint64_t v236;
  uint64_t v237;
  unint64_t v238;
  void *v239;
  _QWORD *v240;
  unint64_t v241;
  __int128 v242;
  __int128 v243;
  char v244;

  v228 = type metadata accessor for MOSuggestionSheetAssetDateRange(0);
  v229 = *(_QWORD *)(v228 - 8);
  __chkstk_darwin(v228);
  v6 = (char *)&v208 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  v8 = __chkstk_darwin(v7);
  v230 = (char *)&v208 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  *(_QWORD *)&v231 = (char *)&v208 - v10;
  v11 = type metadata accessor for Date(0);
  v12 = *(_UNKNOWN ***)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v208 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v18 = (char *)&v208 - v17;
  if (!((unint64_t)a1 >> 62))
  {
    v19 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if ((unint64_t)v19 > 2)
    {
LABEL_3:
      swift_bridgeObjectRelease(a1);
      if (serverManager._clientConnections != (NSMutableDictionary *)-1)
        swift_once(&serverManager._clientConnections, one-time initialization function for shared);
      v20 = type metadata accessor for Logger(0);
      v21 = __swift_project_value_buffer(v20, (uint64_t)static MOAngelLogger.shared);
      v22 = Logger.logObject.getter(v21);
      v23 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v24 = 0;
        _os_log_impl((void *)&_mh_execute_header, v22, v23, "[MOSuggestionInterstitialListAssetViewModel.motionAssets] Currently only supports 1 pair of motion activity", v24, 2u);
        swift_slowDealloc(v24, -1, -1);
      }

      return 0;
    }
    v241 = (unint64_t)_swiftEmptyArrayStorage;
    if (v19)
      goto LABEL_9;
LABEL_63:
    swift_bridgeObjectRelease(a1);
    v65 = 0;
    goto LABEL_64;
  }
  if (a1 < 0)
    v1 = a1;
  else
    v1 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v2 = _CocoaArrayWrapper.endIndex.getter(v1);
  swift_bridgeObjectRelease(a1);
  if (v2 > 2)
    goto LABEL_3;
  v241 = (unint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRetain(a1);
  v19 = _CocoaArrayWrapper.endIndex.getter(v1);
  swift_bridgeObjectRelease(a1);
  if (!v19)
    goto LABEL_63;
LABEL_9:
  if (v19 < 1)
  {
    __break(1u);
    goto LABEL_81;
  }
  v222 = v6;
  v223 = v15;
  v224 = v18;
  v226 = v12;
  v225 = (char *)v11;
  v232 = 0;
  v233 = 0;
  for (i = 0; i != v19; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
      v28 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
    else
      v28 = *(id *)(a1 + 8 * i + 32);
    v27 = v28;
    v29 = objc_msgSend(v28, "assetType");
    v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeMotionActivity);
    v32 = v31;
    v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
    v35 = v34;
    if (v30 == v33 && v32 == v34)
      v37 = 1;
    else
      v37 = _stringCompareWithSmolCheck(_:_:expecting:)(v30, v32, v33, v34, 0);
    swift_bridgeObjectRelease(v32);
    swift_bridgeObjectRelease(v35);
    if ((v37 & 1) != 0)
    {
      v26 = v27;

      v27 = v233;
      v233 = v26;
      goto LABEL_12;
    }
    v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeGenericMap);
    v40 = v39;
    v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
    if (v38 == v41 && v40 == v42)
    {

      swift_bridgeObjectRelease_n(v40, 2);
    }
    else
    {
      v44 = v42;
      v45 = _stringCompareWithSmolCheck(_:_:expecting:)(v38, v40, v41, v42, 0);

      swift_bridgeObjectRelease(v40);
      swift_bridgeObjectRelease(v44);
      if ((v45 & 1) == 0)
        goto LABEL_12;
    }
    v46 = v27;
    v27 = v232;
    v232 = v46;
LABEL_12:

  }
  swift_bridgeObjectRelease(a1);
  v47 = v233;
  if (!v233)
  {
    v65 = v232;
LABEL_64:
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    v47 = 0;
    goto LABEL_65;
  }
  v48 = v233;
  v3 = &selRef_genericAvatarFor_pointSize_completion_;
  v49 = objc_msgSend(v48, "content");
  v12 = MKPolyline_ptr;
  v50 = objc_opt_self(UIImage);
  v51 = swift_dynamicCastObjCClass(v49, v50);
  if (!v51)
    goto LABEL_41;
  v19 = v51;
  v52 = objc_msgSend(v48, "metadata");
  v6 = (char *)&type metadata for Any;
  v53 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v52, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  specialized _dictionaryDownCastConditional<A, B, C, D>(_:)(v53);
  a1 = v54;
  swift_bridgeObjectRelease(v53);
  if (!a1)
  {
LABEL_41:
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    swift_unknownObjectRelease(v49);

    v65 = v232;
LABEL_65:
    if (serverManager._clientConnections != (NSMutableDictionary *)-1)
      swift_once(&serverManager._clientConnections, one-time initialization function for shared);
    v72 = type metadata accessor for Logger(0);
    v73 = __swift_project_value_buffer(v72, (uint64_t)static MOAngelLogger.shared);
    v74 = Logger.logObject.getter(v73);
    v75 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v74, v75))
    {
      v76 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v76 = 0;
      _os_log_impl((void *)&_mh_execute_header, v74, v75, "[MOSuggestionInterstitialListAssetViewModel.motionAssets] Missing date information", v76, 2u);
      swift_slowDealloc(v76, -1, -1);
    }

    return 0;
  }
  if (!*(_QWORD *)(a1 + 16))
  {
    v242 = 0u;
    v243 = 0u;
    goto LABEL_45;
  }
  v55 = MOSuggestionAssetMetadataKeyMotionActivityTypeEnum;
  v56 = specialized __RawDictionaryStorage.find<A>(_:)(v55);
  if ((v57 & 1) == 0)
  {
    v242 = 0u;
    v243 = 0u;

    goto LABEL_45;
  }
  outlined init with copy of Any(*(_QWORD *)(a1 + 56) + 32 * v56, (uint64_t)&v242);

  if (!*((_QWORD *)&v243 + 1))
  {
LABEL_45:
    swift_unknownObjectRelease(v49);
    swift_bridgeObjectRelease(a1);

    v65 = v232;
    outlined destroy of Any?((uint64_t)&v242, &demangling cache variable for type metadata for Any?);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    goto LABEL_65;
  }
  type metadata accessor for MOSuggestionAssetMotionActivityType(0);
  if ((swift_dynamicCast(&v239, &v242, (char *)&type metadata for Any + 8, v58, 6) & 1) == 0)
  {
    swift_unknownObjectRelease(v49);
    swift_bridgeObjectRelease(a1);

    v65 = v232;
    swift_bridgeObjectRelease(v241);
    goto LABEL_65;
  }
  v221 = v49;
  v59 = v239;
  if (!*(_QWORD *)(a1 + 16))
  {
    v242 = 0u;
    v243 = 0u;
    v15 = v225;
    v62 = v226;
    v63 = v231;
LABEL_54:
    outlined destroy of Any?((uint64_t)&v242, &demangling cache variable for type metadata for Any?);
    ((void (*)(uint64_t, uint64_t, uint64_t, char *))v62[7])(v63, 1, 1, v15);
    goto LABEL_55;
  }
  v220 = v239;
  v60 = MOSuggestionAssetMetadataKeyMotionActivityStartDate;
  v61 = specialized __RawDictionaryStorage.find<A>(_:)(v60);
  v15 = v225;
  v62 = v226;
  v63 = v231;
  if ((v64 & 1) != 0)
  {
    outlined init with copy of Any(*(_QWORD *)(a1 + 56) + 32 * v61, (uint64_t)&v242);
  }
  else
  {
    v242 = 0u;
    v243 = 0u;
  }

  v59 = v220;
  if (!*((_QWORD *)&v243 + 1))
    goto LABEL_54;
  v66 = swift_dynamicCast(v63, &v242, (char *)&type metadata for Any + 8, v15, 6);
  v219 = (void (*)(uint64_t, uint64_t, uint64_t, char *))v62[7];
  v219(v63, v66 ^ 1u, 1, v15);
  v218 = (unsigned int (*)(uint64_t, uint64_t, char *))v62[6];
  if (v218(v63, 1, v15) == 1)
  {
LABEL_55:

    swift_unknownObjectRelease(v221);
    swift_bridgeObjectRelease(a1);

    swift_bridgeObjectRelease(v241);
    v71 = v63;
LABEL_56:
    outlined destroy of Any?(v71, (uint64_t *)&demangling cache variable for type metadata for Date?);
    v65 = v232;
    v47 = v233;
    goto LABEL_65;
  }
  v217 = v48;
  v67 = (void (*)(char *, uint64_t, char *))v62[4];
  v67(v224, v63, v15);
  if (!*(_QWORD *)(a1 + 16))
  {
    v242 = 0u;
    v243 = 0u;
LABEL_78:
    outlined destroy of Any?((uint64_t)&v242, &demangling cache variable for type metadata for Any?);
    v79 = v230;
    v219((uint64_t)v230, 1, 1, v15);
    goto LABEL_79;
  }
  v68 = MOSuggestionAssetMetadataKeyMotionActivityEndDate;
  v69 = specialized __RawDictionaryStorage.find<A>(_:)(v68);
  if ((v70 & 1) != 0)
  {
    outlined init with copy of Any(*(_QWORD *)(a1 + 56) + 32 * v69, (uint64_t)&v242);
  }
  else
  {
    v242 = 0u;
    v243 = 0u;
  }

  v59 = v220;
  if (!*((_QWORD *)&v243 + 1))
    goto LABEL_78;
  v79 = v230;
  v80 = swift_dynamicCast(v230, &v242, (char *)&type metadata for Any + 8, v15, 6);
  v219((uint64_t)v79, v80 ^ 1u, 1, v15);
  if (v218((uint64_t)v79, 1, v15) == 1)
  {
LABEL_79:

    swift_unknownObjectRelease(v221);
    swift_bridgeObjectRelease(a1);

    ((void (*)(char *, char *))v226[1])(v224, v15);
    swift_bridgeObjectRelease(v241);
    v71 = (uint64_t)v79;
    goto LABEL_56;
  }
  v67(v223, (uint64_t)v79, v15);
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetMotionActivityTypeWalking);
  v81 = v59;
  v1 = v82;
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v81);
  v2 = v83;
  if (v11 == v16 && v1 == v83)
  {
    swift_bridgeObjectRelease_n(v1, 2);
    goto LABEL_82;
  }
LABEL_81:
  v84 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v1, v16, v2, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v2);
  if ((v84 & 1) == 0)
  {
    v88 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetMotionActivityTypeRunning);
    v90 = v89;
    v92 = static String._unconditionallyBridgeFromObjectiveC(_:)(v220);
    v93 = v91;
    if (v88 == v92 && v90 == v91)
    {
      swift_bridgeObjectRelease_n(v90, 2);
    }
    else
    {
      v99 = _stringCompareWithSmolCheck(_:_:expecting:)(v88, v90, v92, v91, 0);
      swift_bridgeObjectRelease(v90);
      swift_bridgeObjectRelease(v93);
      if ((v99 & 1) == 0)
      {
        v103 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetMotionActivityTypeRunningWalking);
        v105 = v104;
        v107 = static String._unconditionallyBridgeFromObjectiveC(_:)(v220);
        v108 = v106;
        if (v103 == v107 && v105 == v106)
        {
          swift_bridgeObjectRelease_n(v105, 2);
        }
        else
        {
          v110 = _stringCompareWithSmolCheck(_:_:expecting:)(v103, v105, v107, v106, 0);
          swift_bridgeObjectRelease(v105);
          swift_bridgeObjectRelease(v108);
          if ((v110 & 1) == 0)
          {
            swift_bridgeObjectRelease(a1);
            goto LABEL_135;
          }
        }
        if (*(_QWORD *)(a1 + 16))
        {
          v111 = MOSuggestionAssetMetadataKeyMotionActivityStepCountLocalized;
          v112 = specialized __RawDictionaryStorage.find<A>(_:)(v111);
          if ((v113 & 1) != 0)
          {
            outlined init with copy of Any(*(_QWORD *)(a1 + 56) + 32 * v112, (uint64_t)&v242);
          }
          else
          {
            v242 = 0u;
            v243 = 0u;
          }

        }
        else
        {
          v242 = 0u;
          v243 = 0u;
        }
        swift_bridgeObjectRelease(a1);
        if (*((_QWORD *)&v243 + 1))
        {
          if ((swift_dynamicCast(&v239, &v242, v6 + 8, &type metadata for String, 6) & 1) != 0)
          {
            v94 = v239;
            v77 = v240;
            v212 = 22;
            v109 = 19;
            goto LABEL_120;
          }
LABEL_135:
          v15 = v225;
          v98 = v226;
          v95 = v224;
          v96 = v223;
          v97 = v232;
          goto LABEL_136;
        }
LABEL_134:
        outlined destroy of Any?((uint64_t)&v242, &demangling cache variable for type metadata for Any?);
        goto LABEL_135;
      }
    }
    if (*(_QWORD *)(a1 + 16))
    {
      v100 = MOSuggestionAssetMetadataKeyMotionActivityStepCountLocalized;
      v101 = specialized __RawDictionaryStorage.find<A>(_:)(v100);
      if ((v102 & 1) != 0)
      {
        outlined init with copy of Any(*(_QWORD *)(a1 + 56) + 32 * v101, (uint64_t)&v242);
      }
      else
      {
        v242 = 0u;
        v243 = 0u;
      }

    }
    else
    {
      v242 = 0u;
      v243 = 0u;
    }
    swift_bridgeObjectRelease(a1);
    if (*((_QWORD *)&v243 + 1))
    {
      if ((swift_dynamicCast(&v239, &v242, v6 + 8, &type metadata for String, 6) & 1) != 0)
      {
        v94 = v239;
        v77 = v240;
        v212 = 21;
        v109 = 18;
LABEL_120:
        LODWORD(v230) = v109;
        v15 = v225;
LABEL_121:
        v114 = (void (*)(char *, char *, char *))v226[2];
        v115 = (uint64_t)v222;
        v114(v222, v224, v15);
        v116 = v115 + *(int *)(v228 + 20);
        v114((char *)v116, v223, v15);
        v219(v116, 0, 1, v15);
        v117 = (void *)objc_opt_self(UIColor);
        swift_unknownObjectRetain();
        v118 = objc_msgSend(v117, "redColor");
        v119 = String._bridgeToObjectiveC()();
        v120 = objc_msgSend(v117, "colorNamed:", v119);

        v242 = 0u;
        v243 = 0u;
        v244 = 1;
        v211 = type metadata accessor for MOSuggestionSheetImage();
        swift_allocObject(v211, 105, 7);
        v228 = MOSuggestionSheetImage.init(image:associatedTintColor:associatedBackgroundColor:tileBackgroundColor:shouldBeRounded:squareCrop:extraMargin:)(v19, (uint64_t)v118, 0, v120, 0, (uint64_t)&v242, 0, 1);
        swift_bridgeObjectRetain(v77);
        v233 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, 1, 1, _swiftEmptyArrayStorage);
        v122 = v233[2];
        v121 = v233[3];
        if (v122 >= v121 >> 1)
          v233 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((_QWORD *)(v121 > 1), v122 + 1, 1, v233);
        v123 = v233;
        v233[2] = v122 + 1;
        v124 = &v123[2 * v122];
        v124[4] = v94;
        v124[5] = v77;
        v125 = (char *)objc_msgSend(v217, "identifier");
        v126 = static String._unconditionallyBridgeFromObjectiveC(_:)(v125);
        v128 = v127;

        v239 = (void *)v126;
        v240 = (_QWORD *)v128;
        v237 = 35;
        v238 = 0xE100000000000000;
        v129 = lazy protocol witness table accessor for type String and conformance String();
        v130 = (_QWORD *)StringProtocol.components<A>(separatedBy:)(&v237, &type metadata for String, &type metadata for String, v129, v129);
        v131 = v130[2];
        if (v131)
        {
          v132 = v130;
          v133 = v130[4];
          v6 = (char *)v130[5];
          swift_bridgeObjectRetain(v6);
          swift_bridgeObjectRelease(v128);
          swift_bridgeObjectRelease(v132);
          v134 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MOSuggestionSheetAssetDateRange>);
          v135 = *(unsigned __int8 *)(v229 + 80);
          v136 = (v135 + 32) & ~v135;
          v137 = (unsigned int (*)(uint64_t, uint64_t, char *))(v136 + *(_QWORD *)(v229 + 72));
          v219 = (void (*)(uint64_t, uint64_t, uint64_t, char *))v134;
          v218 = v137;
          v216 = v135 | 7;
          v138 = swift_allocObject(v134, v137, v135 | 7);
          v231 = xmmword_10019ED20;
          *(_OWORD *)(v138 + 16) = xmmword_10019ED20;
          v229 = v136;
          outlined init with copy of MOSuggestionSheetAssetDateRange((uint64_t)v222, v138 + v136);
          v210 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
          v139 = swift_allocObject(v210, 48, 7);
          *(_OWORD *)(v139 + 16) = v231;
          *(_QWORD *)(v139 + 32) = v94;
          *(_QWORD *)(v139 + 40) = v77;
          v215 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
          v140 = swift_allocObject(v215, 40, 7);
          v214 = xmmword_10019EDA0;
          *(_OWORD *)(v140 + 16) = xmmword_10019EDA0;
          v77 = (_QWORD *)v228;
          *(_QWORD *)(v140 + 32) = v228;
          v239 = (void *)v140;
          specialized Array._endMutation()(v140);
          v141 = (uint64_t)v239;
          v142 = type metadata accessor for MOSuggestionInterstitialListAssetViewModel(0);
          v143 = *(unsigned int *)(v142 + 48);
          v144 = *(unsigned __int16 *)(v142 + 52);
          v209 = v142;
          swift_allocObject(v142, v143, v144);
          swift_retain(v77);
          v128 = MOSuggestionInterstitialListAssetViewModel.init(id:subViewModels:topLevelGroupHeading:dates:titles:icons:assetVisualSubType:selectable:isLoadingPlaceHolder:isFallback:)(v133, (uint64_t)v6, 0, 0, 0, v138, v139, v141, (char)v230, 1, 0, 0);
          swift_retain(v128);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v145);
          v125 = *(char **)((v241 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v131 = *(_QWORD *)((v241 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if ((unint64_t)v125 < v131 >> 1)
            goto LABEL_125;
        }
        else
        {
          __break(1u);
        }
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v131 > 1, v125 + 1, 1);
LABEL_125:
        v213 = v128;
        v146 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v125, v128);
        specialized Array._endMutation()(v146);
        v147 = objc_msgSend(v217, "identifier");
        v148 = static String._unconditionallyBridgeFromObjectiveC(_:)(v147);
        v150 = v149;

        v239 = (void *)v148;
        v240 = v150;
        v237 = 35;
        v238 = 0xE100000000000000;
        v151 = (_QWORD *)StringProtocol.components<A>(separatedBy:)(&v237, &type metadata for String, &type metadata for String, v129, v129);
        v152 = v151[2];
        if (v152)
        {
          v153 = v151;
          v148 = v151[4];
          v154 = v151[5];
          swift_bridgeObjectRetain(v154);
          swift_bridgeObjectRelease(v150);
          swift_bridgeObjectRelease(v153);
          HIBYTE(v207) = 0;
          *(_WORD *)((char *)&v207 + 1) = 1;
          LOBYTE(v207) = (_BYTE)v230;
          v155 = (*(uint64_t (**)(unint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))(v227 + 344))(v148, v154, 0, 0, 0, 0, 0, 0, v207);
          v77 = (_QWORD *)v155;
          v156 = v232;
          if (v232)
          {
            swift_retain(v155);
            v6 = v156;
            v157 = objc_msgSend(v6, v3[127]);
            v158 = objc_opt_self(v12[107]);
            v232 = v157;
            v159 = swift_dynamicCastObjCClass(v157, v158);
            if (v159)
            {
              v160 = v159;
              swift_allocObject(v211, 105, 7);
              swift_unknownObjectRetain();
              v230 = (char *)MOSuggestionSheetImage.init(image:associatedTintColor:associatedBackgroundColor:tileBackgroundColor:shouldBeRounded:squareCrop:extraMargin:)(v160, 0, 0, 0, 0, (uint64_t)&v242, 0, 1);
              v227 = MOSuggestionAssetVisualSubType.singularLocalizedString.getter(v212);
              v211 = v161;
              v150 = objc_msgSend(v6, "identifier");
              v162 = static String._unconditionallyBridgeFromObjectiveC(_:)(v150);
              v164 = v163;

              v239 = (void *)v162;
              v240 = v164;
              v237 = 35;
              v238 = 0xE100000000000000;
              v165 = (_QWORD *)StringProtocol.components<A>(separatedBy:)(&v237, &type metadata for String, &type metadata for String, v129, v129);
              v152 = v165[2];
              if (v152)
              {
                v166 = v165;
                v167 = v165[4];
                v168 = v165[5];
                swift_bridgeObjectRetain(v168);
                swift_bridgeObjectRelease(v164);
                swift_bridgeObjectRelease(v166);
                v169 = swift_allocObject(v219, v218, v216);
                *(_OWORD *)(v169 + 16) = v231;
                outlined init with copy of MOSuggestionSheetAssetDateRange((uint64_t)v222, v169 + v229);
                v170 = swift_allocObject(v210, 48, 7);
                *(_OWORD *)(v170 + 16) = v231;
                v171 = v211;
                *(_QWORD *)(v170 + 32) = v227;
                *(_QWORD *)(v170 + 40) = v171;
                v172 = swift_allocObject(v215, 40, 7);
                *(_OWORD *)(v172 + 16) = v214;
                v173 = v230;
                *(_QWORD *)(v172 + 32) = v230;
                v239 = (void *)v172;
                specialized Array._endMutation()(v172);
                v174 = (uint64_t)v239;
                swift_allocObject(v209, *(unsigned int *)(v209 + 48), *(unsigned __int16 *)(v209 + 52));
                swift_bridgeObjectRetain(v171);
                swift_retain(v173);
                v150 = (_QWORD *)MOSuggestionInterstitialListAssetViewModel.init(id:subViewModels:topLevelGroupHeading:dates:titles:icons:assetVisualSubType:selectable:isLoadingPlaceHolder:isFallback:)(v167, v168, 0, 0, 0, v169, v170, v174, v212, 1, 0, 0);
                swift_retain(v150);
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v175);
                v148 = *(_QWORD *)((v241 & 0xFFFFFFFFFFFFFF8) + 0x10);
                v152 = *(_QWORD *)((v241 & 0xFFFFFFFFFFFFFF8) + 0x18);
                if (v148 < v152 >> 1)
                {
LABEL_130:
                  v176 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v148, v150);
                  specialized Array._endMutation()(v176);
                  v178 = v233[2];
                  v177 = v233[3];
                  if (v178 >= v177 >> 1)
                    v233 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((_QWORD *)(v177 > 1), v178 + 1, 1, v233);
                  v179 = v233;
                  v233[2] = v178 + 1;
                  v180 = &v179[2 * v178];
                  v181 = v211;
                  v180[4] = v227;
                  v180[5] = v181;
                  swift_release(v150);
                  swift_release(v230);
                  swift_unknownObjectRelease(v232);

                  v182 = v241;
                  swift_beginAccess(v77 + 2, v234, 1, 0);
                  v183 = v77[2];
                  v77[2] = v182;
                  goto LABEL_142;
                }
LABEL_147:
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v152 > 1, v148 + 1, 1);
                goto LABEL_130;
              }
LABEL_146:
              __break(1u);
              goto LABEL_147;
            }
            swift_unknownObjectRelease(v232);

            v183 = v241;
          }
          else
          {
            v183 = v241;
            swift_retain(v155);
            v6 = 0;
          }
LABEL_142:
          swift_bridgeObjectRelease(v183);
          v193 = MOSuggestionInterstitialListAssetViewModel._groupAssetTypeAndCountDescription(with:)(0);
          v195 = v194;
          swift_beginAccess(v77 + 3, &v239, 1, 0);
          v196 = v77[4];
          v77[3] = v193;
          v77[4] = v195;
          swift_bridgeObjectRelease(v196);
          swift_beginAccess(v77 + 6, &v237, 1, 0);
          v197 = v77[6];
          v77[6] = v233;
          swift_bridgeObjectRelease(v197);
          v198 = swift_allocObject(v215, 40, 7);
          *(_OWORD *)(v198 + 16) = v214;
          v199 = v228;
          *(_QWORD *)(v198 + 32) = v228;
          v236 = v198;
          specialized Array._endMutation()(v198);
          v200 = v236;
          swift_beginAccess(v77 + 7, &v236, 1, 0);
          v201 = v77[7];
          v77[7] = v200;
          swift_retain(v199);
          swift_bridgeObjectRelease(v201);
          v202 = swift_allocObject(v219, v218, v216);
          *(_OWORD *)(v202 + 16) = v231;
          outlined init with take of MOSuggestionSheetAssetDateRange((uint64_t)v222, v202 + v229);

          swift_unknownObjectRelease(v221);
          swift_release(v199);
          swift_release(v213);
          v203 = v217;

          v204 = (void (*)(char *, char *))v226[1];
          v205 = v225;
          v204(v223, v225);
          v204(v224, v205);
          swift_beginAccess(v77 + 5, v235, 1, 0);
          v206 = v77[5];
          v77[5] = v202;
          swift_release(v77);
          swift_bridgeObjectRelease(v206);
          return v77;
        }
        __break(1u);
        goto LABEL_146;
      }
      goto LABEL_135;
    }
    goto LABEL_134;
  }
LABEL_82:
  if (*(_QWORD *)(a1 + 16))
  {
    v85 = MOSuggestionAssetMetadataKeyMotionActivityStepCountLocalized;
    v86 = specialized __RawDictionaryStorage.find<A>(_:)(v85);
    if ((v87 & 1) != 0)
    {
      outlined init with copy of Any(*(_QWORD *)(a1 + 56) + 32 * v86, (uint64_t)&v242);
    }
    else
    {
      v242 = 0u;
      v243 = 0u;
    }

  }
  else
  {
    v242 = 0u;
    v243 = 0u;
  }
  swift_bridgeObjectRelease(a1);
  if (*((_QWORD *)&v243 + 1))
  {
    if ((swift_dynamicCast(&v239, &v242, v6 + 8, &type metadata for String, 6) & 1) != 0)
    {
      v94 = v239;
      v77 = v240;
      v212 = 20;
      LODWORD(v230) = 17;
      goto LABEL_121;
    }
  }
  else
  {
    outlined destroy of Any?((uint64_t)&v242, &demangling cache variable for type metadata for Any?);
  }
  v95 = v224;
  v96 = v223;
  v97 = v232;
  v98 = v226;
LABEL_136:
  swift_bridgeObjectRelease(v241);
  if (serverManager._clientConnections != (NSMutableDictionary *)-1)
    swift_once(&serverManager._clientConnections, one-time initialization function for shared);
  v184 = type metadata accessor for Logger(0);
  v185 = __swift_project_value_buffer(v184, (uint64_t)static MOAngelLogger.shared);
  v186 = Logger.logObject.getter(v185);
  v187 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v186, v187))
  {
    v188 = v98;
    v189 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v189 = 0;
    _os_log_impl((void *)&_mh_execute_header, v186, v187, "[MOSuggestionInterstitialListAssetViewModel.motionAssets] Missing steps/distance information", v189, 2u);
    v190 = v189;
    v98 = v188;
    swift_slowDealloc(v190, -1, -1);
  }

  swift_unknownObjectRelease(v221);
  v191 = v217;

  v192 = (void (*)(char *, char *))v98[1];
  v192(v96, v15);
  v192(v95, v15);
  return 0;
}

uint64_t specialized Collection.first.getter(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v3 = a1;
    else
      v3 = a1 & 0xFFFFFFFFFFFFFF8;
    v4 = __CocoaSet.startIndex.getter(v3);
    v6 = v5;
    v7 = __CocoaSet.endIndex.getter(v3);
    v9 = static __CocoaSet.Index.== infix(_:_:)(v4, v6, v7, v8);
    swift_bridgeObjectRelease(v7);
    if ((v9 & 1) != 0)
      goto LABEL_6;
    goto LABEL_10;
  }
  result = specialized _NativeSet.startIndex.getter(a1);
  if ((v13 & 1) == 0)
  {
    v6 = v12;
    if (*(_DWORD *)(a1 + 36) == (_DWORD)v12)
    {
      v4 = result;
      if (result == 1 << *(_BYTE *)(a1 + 32))
      {
LABEL_6:
        outlined consume of Set<UIScene>.Index._Variant(v4, v6, v2 != 0);
        return 0;
      }
LABEL_10:
      specialized Set.subscript.getter(v4, v6, v2 != 0, a1);
      v10 = v14;
      outlined consume of Set<UIScene>.Index._Variant(v4, v6, v2 != 0);
      return v10;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

{
  uint64_t result;
  int v3;
  char v4;

  result = specialized Set.startIndex.getter(a1);
  if ((v4 & 1) != 0)
    goto LABEL_7;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
    return 0;
  else
    return specialized Set.subscript.getter(result, v3, 0, a1);
}

{
  if (*(_QWORD *)(a1 + 16))
    return swift_bridgeObjectRetain(*(_QWORD *)(a1 + 32));
  else
    return 0;
}

{
  uint64_t result;
  int v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  result = specialized Set.startIndex.getter(a1);
  if ((v4 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
    return 0;
  v5 = specialized Set.subscript.getter(result, v3, 0, a1);
  swift_bridgeObjectRetain(v6);
  return v5;
}

uint64_t specialized Collection.first.getter(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
    return String.subscript.getter(15, a1, a2);
  else
    return 0;
}

uint64_t MOSuggestionInterstitialListAssetViewModel.__allocating_init(mediaAssets:)(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  Swift::OpaquePointer v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  Swift::String v25;
  uint64_t countAndFlagsBits;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  char v61;
  uint64_t ObjCClassMetadata;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  NSObject *v82;
  id v83;
  uint64_t v84;
  int v85;
  char v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  Swift::String v92;
  unint64_t v93;
  unint64_t v94;
  id v95;
  uint64_t v96;
  void *v97;
  void *v98;
  Swift::String v99;
  char v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  Swift::String v113;
  unint64_t v114;
  unint64_t v115;
  id v116;
  uint64_t v117;
  void *v118;
  void *v119;
  Swift::String v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  Swift::String v125;
  unint64_t v126;
  unint64_t v127;
  id v128;
  uint64_t v129;
  void *v130;
  void *v131;
  Swift::String v132;
  id v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  Swift::String v137;
  unint64_t v138;
  unint64_t v139;
  id v140;
  uint64_t v141;
  void *v142;
  void *v143;
  Swift::String v144;
  id v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char v149;
  id v150;
  uint64_t v151;
  char v152;
  id v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char v157;
  id v158;
  uint64_t v159;
  id v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  id v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  Swift::String v168;
  uint64_t v169;
  uint64_t v170;
  id v171;
  id v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  Swift::String v176;
  id v177;
  uint64_t v178;
  void *v179;
  void *v180;
  Swift::String v181;
  NSObject *v182;
  char v183;
  uint64_t v184;
  uint64_t v185;
  NSObject *v186;
  os_log_type_t v187;
  uint8_t *v188;
  NSObject *v189;
  uint64_t v190;
  void *v191;
  NSObject *v192;
  id v193;
  id v194;
  uint64_t v195;
  uint64_t v196;
  int v197;
  id v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  _QWORD *v202;
  _QWORD *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  unint64_t v220;
  unint64_t v221;
  uint64_t v222;
  uint64_t v223;
  NSObject *v224;
  uint64_t v225;
  unint64_t v226;
  unint64_t v227;
  _QWORD *v228;
  _QWORD *v229;
  uint64_t v230;
  uint64_t v231;
  unint64_t v232;
  unint64_t v233;
  uint64_t v234;
  unint64_t v235;
  unint64_t v236;
  _QWORD *v237;
  char v238;
  id v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  Swift::String v243;
  unint64_t v244;
  unint64_t v245;
  id v246;
  uint64_t v247;
  void *v248;
  void *v249;
  Swift::String v250;
  char v251;
  void *v252;
  char v253;
  char v254;
  void *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  int v277;
  _QWORD v278[4];
  uint64_t v279;
  _OWORD *v280;
  __int128 v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  __int128 v286;
  void *object;
  uint64_t v288;
  uint64_t v289;
  int v290;
  NSObject *v291;
  uint64_t v292;
  uint64_t v293;
  int v294;
  uint64_t v295;
  uint64_t v296;
  _QWORD *v297;
  _QWORD *v298;
  char *v299;
  _QWORD *v300;
  char *v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  unint64_t v305;
  uint64_t v306;
  unint64_t v307;
  unsigned __int128 v308;
  __int128 v309;
  char v310[8];
  char v311[24];
  uint64_t v312;
  _QWORD v313[2];
  void *v314;
  unint64_t v315;
  unint64_t v316;
  _OWORD v317[2];
  char v318;

  v289 = type metadata accessor for MOSuggestionSheetAssetDateRange(0);
  v288 = *(_QWORD *)(v289 - 8);
  v3 = __chkstk_darwin(v289);
  v292 = (uint64_t)v278 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v296 = (uint64_t)v278 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v6);
  v8 = (uint64_t)v278 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v303 = type metadata accessor for Date(0);
  v302 = *(_QWORD *)(v303 - 8);
  __chkstk_darwin(v303);
  v299 = (char *)v278 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
    goto LABEL_147;
  v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v11 < 1)
  {
LABEL_151:
    v257 = a1;
    goto LABEL_152;
  }
LABEL_3:
  v304 = v10;
  v300 = (_QWORD *)v8;
  v280 = v1;
  v313[0] = _swiftEmptyArrayStorage;
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v11, 0);
  v8 = 0;
  v12._rawValue = (void *)v313[0];
  v306 = a1;
  v307 = a1 & 0xC000000000000001;
  a1 = 0xE100000000000000;
  do
  {
    if (v307)
      v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v306);
    else
      v13 = *(id *)(v306 + 8 * v8 + 32);
    v14 = v13;
    v15 = objc_msgSend(v13, "identifier");
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v17 = v16;

    *(_QWORD *)&v317[0] = v10;
    *((_QWORD *)&v317[0] + 1) = v17;
    *(_QWORD *)&v308 = 35;
    *((_QWORD *)&v308 + 1) = 0xE100000000000000;
    v1 = v317;
    v305 = lazy protocol witness table accessor for type String and conformance String();
    v18 = (_QWORD *)StringProtocol.components<A>(separatedBy:)(&v308, &type metadata for String, &type metadata for String, v305, v305);
    if (!v18[2])
    {
      __break(1u);
LABEL_147:
      if (a1 < 0)
        v272 = a1;
      else
        v272 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v11 = _CocoaArrayWrapper.endIndex.getter(v272);
      swift_bridgeObjectRelease(a1);
      if (v11 < 1)
        goto LABEL_151;
      goto LABEL_3;
    }
    v19 = v18;
    v20 = v18[4];
    v21 = v18[5];
    swift_bridgeObjectRetain(v21);

    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v19);
    v313[0] = v12._rawValue;
    v23 = *((_QWORD *)v12._rawValue + 2);
    v22 = *((_QWORD *)v12._rawValue + 3);
    if (v23 >= v22 >> 1)
    {
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v23 + 1, 1);
      v12._rawValue = (void *)v313[0];
    }
    ++v8;
    *((_QWORD *)v12._rawValue + 2) = v23 + 1;
    v24 = (char *)v12._rawValue + 16 * v23;
    *((_QWORD *)v24 + 4) = v20;
    *((_QWORD *)v24 + 5) = v21;
  }
  while (v11 != v8);
  v25 = String.init(combinedIdentifiersFrom:)(v12);
  countAndFlagsBits = v25._countAndFlagsBits;
  v315 = (unint64_t)_swiftEmptyArrayStorage;
  v316 = (unint64_t)_swiftEmptyArrayStorage;
  v314 = &_swiftEmptySetSingleton;
  object = v25._object;
  if (v304)
  {
    v27 = v306;
    if (v306 < 0)
      v11 = v306;
    else
      v11 = v306 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v306);
    v28 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(v27);
  }
  else
  {
    v27 = v306;
    v28 = *(_QWORD *)((v306 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v279 = v25._countAndFlagsBits;
  if (!v28)
  {
    swift_bridgeObjectRelease(v27);
    LOBYTE(v27) = 26;
    countAndFlagsBits = (uint64_t)_swiftEmptyArrayStorage;
    v297 = _swiftEmptyArrayStorage;
    v298 = _swiftEmptyArrayStorage;
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
      goto LABEL_125;
LABEL_133:
    if (countAndFlagsBits < 0)
      v256 = countAndFlagsBits;
    else
      v256 = countAndFlagsBits & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(countAndFlagsBits);
    v11 = _CocoaArrayWrapper.endIndex.getter(v256);
    swift_bridgeObjectRelease(countAndFlagsBits);
    if (!v11)
      goto LABEL_137;
LABEL_126:
    if ((countAndFlagsBits & 0xC000000000000001) == 0)
    {
      if (!*(_QWORD *)((countAndFlagsBits & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_158;
      }
      v251 = v27;
      v11 = *(_QWORD *)(countAndFlagsBits + 32);
      swift_retain(v11);
LABEL_129:
      swift_bridgeObjectRelease(countAndFlagsBits);
      v252 = v314;
      specialized Collection.first.getter((uint64_t)v314);
      v254 = v253;
      swift_bridgeObjectRelease(v252);
      if ((v254 & 1) != 0 || v251 == 26)
      {
        swift_bridgeObjectRelease(v298);
        swift_bridgeObjectRelease(v297);
        swift_release(v11);
        v255 = object;
        goto LABEL_138;
      }
      HIBYTE(v277) = 0;
      *(_WORD *)((char *)&v277 + 1) = 1;
      LOBYTE(v277) = v251;
      v258 = (*((uint64_t (**)(uint64_t, void *, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))v280 + 43))(v279, object, 0, 0, 0, 0, 0, 0, v277);
      v8 = v258;
      countAndFlagsBits = v316;
      if (!(v316 >> 62))
      {
        v259 = *(_QWORD *)((v316 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_retain(v258);
        if (v259 >= 2)
          goto LABEL_141;
        goto LABEL_145;
      }
LABEL_158:
      if (countAndFlagsBits < 0)
        v274 = countAndFlagsBits;
      else
        v274 = countAndFlagsBits & 0xFFFFFFFFFFFFFF8;
      swift_retain(v8);
      swift_bridgeObjectRetain(countAndFlagsBits);
      v275 = _CocoaArrayWrapper.endIndex.getter(v274);
      swift_bridgeObjectRelease(countAndFlagsBits);
      if (v275 >= 2)
      {
LABEL_141:
        if (countAndFlagsBits < 0 || (countAndFlagsBits & 0x4000000000000000) != 0)
        {
          v276 = swift_bridgeObjectRetain(countAndFlagsBits);
          v260 = (uint64_t)specialized _copyCollectionToContiguousArray<A>(_:)(v276);
          swift_bridgeObjectRelease(countAndFlagsBits);
        }
        else
        {
          v260 = countAndFlagsBits & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(countAndFlagsBits);
        }
        *(_QWORD *)&v308 = v260;
        specialized MutableCollection<>.sort(by:)((uint64_t *)&v308);
        swift_bridgeObjectRelease(countAndFlagsBits);
        v261 = v308;
        swift_beginAccess(v8 + 16, v310, 1, 0);
        countAndFlagsBits = *(_QWORD *)(v8 + 16);
        *(_QWORD *)(v8 + 16) = v261;
      }
LABEL_145:
      swift_bridgeObjectRelease(countAndFlagsBits);
      v262 = MOSuggestionInterstitialListAssetViewModel._groupAssetTypeAndCountDescription(with:)(0);
      v264 = v263;
      swift_beginAccess(v8 + 24, &v308, 1, 0);
      v265 = *(_QWORD *)(v8 + 32);
      *(_QWORD *)(v8 + 24) = v262;
      *(_QWORD *)(v8 + 32) = v264;
      swift_bridgeObjectRelease(v265);
      swift_beginAccess(v8 + 48, v313, 1, 0);
      v266 = *(_QWORD *)(v8 + 48);
      *(_QWORD *)(v8 + 48) = v298;
      swift_bridgeObjectRelease(v266);
      v267 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      v268 = swift_allocObject(v267, 40, 7);
      *(_OWORD *)(v268 + 16) = xmmword_10019EDA0;
      *(_QWORD *)(v268 + 32) = v11;
      v312 = v268;
      specialized Array._endMutation()(v268);
      v269 = v312;
      swift_beginAccess(v8 + 56, &v312, 1, 0);
      v270 = *(_QWORD *)(v8 + 56);
      *(_QWORD *)(v8 + 56) = v269;
      swift_bridgeObjectRelease(v270);
      swift_beginAccess(v8 + 40, v311, 1, 0);
      v271 = *(_QWORD *)(v8 + 40);
      *(_QWORD *)(v8 + 40) = v297;
      swift_release(v8);
      swift_bridgeObjectRelease(v271);
      return v8;
    }
LABEL_156:
    v251 = v27;
    v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, countAndFlagsBits);
    goto LABEL_129;
  }
  if (v28 < 1)
  {
LABEL_155:
    __break(1u);
    goto LABEL_156;
  }
  v11 = 0;
  v290 = 26;
  v301 = (char *)&type metadata for Any + 8;
  v278[3] = "";
  v278[2] = "erest";
  v286 = xmmword_10019ED20;
  v281 = xmmword_10019EDA0;
  v278[1] = "person.crop.circle";
  v297 = _swiftEmptyArrayStorage;
  v298 = _swiftEmptyArrayStorage;
  v304 = v28;
  do
  {
    if (v307)
      v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v27);
    else
      v29 = *(id *)(v27 + 8 * v11 + 32);
    v30 = v29;
    v31 = objc_msgSend(v29, "assetType");
    v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeLivePhoto);
    v34 = v33;
    v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    if (v32 == v35 && v34 == v36)
      goto LABEL_38;
    v38 = v36;
    v39 = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v34, v35, v36, 0);
    swift_bridgeObjectRelease(v34);
    swift_bridgeObjectRelease(v38);
    if ((v39 & 1) != 0)
      goto LABEL_39;
    v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypePhoto);
    v34 = v41;
    v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    if (v40 == v42 && v34 == v43)
      goto LABEL_38;
    v45 = v43;
    v46 = _stringCompareWithSmolCheck(_:_:expecting:)(v40, v34, v42, v43, 0);
    swift_bridgeObjectRelease(v34);
    swift_bridgeObjectRelease(v45);
    if ((v46 & 1) != 0)
      goto LABEL_39;
    v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeVideo);
    v34 = v48;
    v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    v51 = v49;
    if (v47 == v50 && v34 == v49)
    {
LABEL_38:
      swift_bridgeObjectRelease_n(v34, 2);
LABEL_39:
      v52 = (void *)MOSuggestionAssetsTypePhoto;
      goto LABEL_40;
    }
    v100 = _stringCompareWithSmolCheck(_:_:expecting:)(v47, v34, v50, v49, 0);
    swift_bridgeObjectRelease(v34);
    swift_bridgeObjectRelease(v51);
    v52 = v31;
    if ((v100 & 1) != 0)
      goto LABEL_39;
LABEL_40:
    v8 = v52;

    v53 = MOSuggestionAssetsTypeMediaCoverArt;
    v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
    v56 = v55;
    v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
    if (v54 == v57 && v56 == v58)
    {

      swift_bridgeObjectRelease_n(v56, 2);
LABEL_52:
      v68 = objc_msgSend(v30, "content");
      v69 = objc_opt_self(MOSuggestionAssetMediaItem);
      v70 = swift_dynamicCastObjCClass(v68, v69);
      if (!v70)
      {

        swift_unknownObjectRelease(v68);
        goto LABEL_21;
      }
      v8 = v70;
      v71 = objc_msgSend(v30, "metadata");
      v72 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v71, &type metadata for AnyHashable, v301, &protocol witness table for AnyHashable);

      specialized _dictionaryDownCastConditional<A, B, C, D>(_:)(v72);
      v74 = v73;
      swift_bridgeObjectRelease(v72);
      if (!v74)
      {
        swift_unknownObjectRelease(v68);

        goto LABEL_21;
      }
      if (*(_QWORD *)(v74 + 16))
      {
        v75 = MOSuggestionAssetMetadataKeyMediaStartDate;
        v76 = specialized __RawDictionaryStorage.find<A>(_:)(v75);
        if ((v77 & 1) != 0)
        {
          outlined init with copy of Any(*(_QWORD *)(v74 + 56) + 32 * v76, (uint64_t)&v308);
        }
        else
        {
          v309 = 0u;
          v308 = 0u;
        }

      }
      else
      {
        v309 = 0u;
        v308 = 0u;
      }
      v78 = (uint64_t)v300;
      swift_bridgeObjectRelease(v74);
      if (*((_QWORD *)&v309 + 1))
      {
        v79 = v303;
        v80 = swift_dynamicCast(v78, &v308, (char *)&type metadata for Any + 8, v303, 6);
        v81 = v302;
        v82 = *(NSObject **)(v302 + 56);
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v82)(v78, v80 ^ 1u, 1, v79);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v78, 1, v79) != 1)
        {
          v291 = v82;
          (*(void (**)(char *, uint64_t, uint64_t))(v302 + 32))(v299, v78, v303);
          v83 = objc_msgSend((id)v8, "mediaType");
          v84 = 0;
          v85 = 26;
          v86 = 1;
          v87 = 0;
          switch((unint64_t)v83)
          {
            case 1uLL:
              v121 = objc_msgSend((id)v8, "artistName");
              v122 = static String._unconditionallyBridgeFromObjectiveC(_:)(v121);
              v124 = v123;

              *(_QWORD *)&v308 = v122;
              *((_QWORD *)&v308 + 1) = v124;
              swift_bridgeObjectRetain(v124);
              v125._countAndFlagsBits = 0x20A280E220;
              v125._object = (void *)0xA500000000000000;
              String.append(_:)(v125);
              swift_bridgeObjectRelease(v124);
              v127 = *((_QWORD *)&v308 + 1);
              v126 = v308;
              v128 = objc_msgSend((id)v8, "title");
              v129 = static String._unconditionallyBridgeFromObjectiveC(_:)(v128);
              v131 = v130;

              v308 = __PAIR128__(v127, v126);
              v27 = v306;
              swift_bridgeObjectRetain(v127);
              v132._countAndFlagsBits = v129;
              v132._object = v131;
              String.append(_:)(v132);
              swift_bridgeObjectRelease(v127);
              swift_bridgeObjectRelease(v131);
              v86 = 0;
              v85 = 0;
              v87 = *((_QWORD *)&v308 + 1);
              v84 = v308;
              goto LABEL_94;
            case 2uLL:
            case 5uLL:
              v88 = objc_msgSend((id)v8, "artistName");
              v89 = static String._unconditionallyBridgeFromObjectiveC(_:)(v88);
              v91 = v90;

              *(_QWORD *)&v308 = v89;
              *((_QWORD *)&v308 + 1) = v91;
              swift_bridgeObjectRetain(v91);
              v92._countAndFlagsBits = 0x20A280E220;
              v92._object = (void *)0xA500000000000000;
              String.append(_:)(v92);
              swift_bridgeObjectRelease(v91);
              v94 = *((_QWORD *)&v308 + 1);
              v93 = v308;
              v95 = objc_msgSend((id)v8, "title");
              v96 = static String._unconditionallyBridgeFromObjectiveC(_:)(v95);
              v98 = v97;

              v308 = __PAIR128__(v94, v93);
              v27 = v306;
              swift_bridgeObjectRetain(v94);
              v99._countAndFlagsBits = v96;
              v99._object = v98;
              String.append(_:)(v99);
              swift_bridgeObjectRelease(v94);
              swift_bridgeObjectRelease(v98);
              v86 = 0;
              v87 = *((_QWORD *)&v308 + 1);
              v84 = v308;
              v85 = 2;
              goto LABEL_94;
            case 3uLL:
              goto LABEL_94;
            case 4uLL:
              v133 = objc_msgSend((id)v8, "artistName");
              v134 = static String._unconditionallyBridgeFromObjectiveC(_:)(v133);
              v136 = v135;

              *(_QWORD *)&v308 = v134;
              *((_QWORD *)&v308 + 1) = v136;
              swift_bridgeObjectRetain(v136);
              v137._countAndFlagsBits = 0x20A280E220;
              v137._object = (void *)0xA500000000000000;
              String.append(_:)(v137);
              swift_bridgeObjectRelease(v136);
              v139 = *((_QWORD *)&v308 + 1);
              v138 = v308;
              v140 = objc_msgSend((id)v8, "albumTitle");
              v141 = static String._unconditionallyBridgeFromObjectiveC(_:)(v140);
              v143 = v142;

              v308 = __PAIR128__(v139, v138);
              v27 = v306;
              swift_bridgeObjectRetain(v139);
              v144._countAndFlagsBits = v141;
              v144._object = v143;
              String.append(_:)(v144);
              swift_bridgeObjectRelease(v139);
              swift_bridgeObjectRelease(v143);
              v86 = 0;
              v87 = *((_QWORD *)&v308 + 1);
              v84 = v308;
              v85 = 1;
              goto LABEL_94;
            case 6uLL:
              v145 = objc_msgSend((id)v8, "artistName");
              v146 = static String._unconditionallyBridgeFromObjectiveC(_:)(v145);
              v148 = v147;

              if (v146 || v148 != 0xE000000000000000)
              {
                v152 = _stringCompareWithSmolCheck(_:_:expecting:)(v146, v148, 0, 0xE000000000000000, 0);
                swift_bridgeObjectRelease(v148);
                if ((v152 & 1) == 0)
                {
                  v164 = objc_msgSend((id)v8, "artistName");
                  v165 = static String._unconditionallyBridgeFromObjectiveC(_:)(v164);
                  v167 = v166;

                  *(_QWORD *)&v308 = v165;
                  *((_QWORD *)&v308 + 1) = v167;
                  swift_bridgeObjectRetain(v167);
                  v168._countAndFlagsBits = 0x20A280E220;
                  v168._object = (void *)0xA500000000000000;
                  String.append(_:)(v168);
                  swift_bridgeObjectRelease(v167);
                  v170 = *((_QWORD *)&v308 + 1);
                  v169 = v308;
                  v171 = objc_msgSend((id)v8, "title");
                  goto LABEL_92;
                }
              }
              else
              {
                swift_bridgeObjectRelease(0xE000000000000000);
              }
              v153 = objc_msgSend((id)v8, "albumTitle");
              v154 = static String._unconditionallyBridgeFromObjectiveC(_:)(v153);
              v156 = v155;

              if (!v154 && v156 == 0xE000000000000000)
              {
                swift_bridgeObjectRelease(0xE000000000000000);
LABEL_86:
                v158 = objc_msgSend((id)v8, "title");
                v84 = static String._unconditionallyBridgeFromObjectiveC(_:)(v158);
                v87 = v159;

                v86 = 0;
LABEL_93:
                v85 = 4;
LABEL_94:
                v294 = v85;
                v293 = v84;
                v182 = objc_msgSend((id)v8, "albumArt");
                if (!v182)
                {
                  v183 = specialized FallbackAssetSymbol.init(assetType:mediaType:)(objc_msgSend(v30, "assetType"), (uint64_t)objc_msgSend((id)v8, "mediaType"), 0);
                  v295 = v87;
                  __asm { BR              X9 }
                }
                if (v87)
                {
                  if ((v86 & 1) == 0)
                  {
                    v295 = v87;
                    v27 = v296;
                    v190 = v303;
                    (*(void (**)(uint64_t, char *, uint64_t))(v302 + 16))(v296, v299, v303);
                    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v291)(v27 + *(int *)(v289 + 20), 1, 1, v190);
                    v191 = (void *)objc_opt_self(UIColor);
                    v192 = v182;
                    v193 = objc_msgSend(v191, "whiteColor");
                    v194 = objc_msgSend(v191, "grayColor");
                    memset(v317, 0, sizeof(v317));
                    v318 = 1;
                    v195 = type metadata accessor for MOSuggestionSheetImage();
                    swift_allocObject(v195, 105, 7);
                    v196 = MOSuggestionSheetImage.init(image:associatedTintColor:associatedBackgroundColor:tileBackgroundColor:shouldBeRounded:squareCrop:extraMargin:)((uint64_t)v192, (uint64_t)v193, v194, 0, 0, (uint64_t)v317, 0, 1);
                    v197 = v290;
                    if (v290 == 26)
                      v197 = v294;
                    v290 = v197;
                    v198 = objc_msgSend(v30, "identifier");
                    v199 = static String._unconditionallyBridgeFromObjectiveC(_:)(v198);
                    v201 = v200;

                    *(_QWORD *)&v308 = v199;
                    *((_QWORD *)&v308 + 1) = v201;
                    v313[0] = 35;
                    v313[1] = 0xE100000000000000;
                    countAndFlagsBits = (uint64_t)&v308;
                    v202 = (_QWORD *)StringProtocol.components<A>(separatedBy:)(v313, &type metadata for String, &type metadata for String, v305, v305);
                    if (!v202[2])
                    {
                      __break(1u);
                      goto LABEL_155;
                    }
                    v203 = v202;
                    v291 = v192;
                    v205 = v202[4];
                    v204 = v202[5];
                    v283 = v205;
                    v282 = v204;
                    swift_bridgeObjectRetain(v204);
                    swift_bridgeObjectRelease(v201);
                    swift_bridgeObjectRelease(v203);
                    v206 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MOSuggestionSheetAssetDateRange>);
                    v207 = *(unsigned __int8 *)(v288 + 80);
                    v208 = (v207 + 32) & ~v207;
                    v285 = *(_QWORD *)(v288 + 72);
                    v209 = swift_allocObject(v206, v208 + v285, v207 | 7);
                    *(_OWORD *)(v209 + 16) = v286;
                    v284 = v208;
                    outlined init with copy of MOSuggestionSheetAssetDateRange(v27, v209 + v208);
                    v210 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
                    v211 = swift_allocObject(v210, 48, 7);
                    *(_OWORD *)(v211 + 16) = v286;
                    v212 = v295;
                    *(_QWORD *)(v211 + 32) = v293;
                    *(_QWORD *)(v211 + 40) = v212;
                    v213 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
                    v214 = swift_allocObject(v213, 40, 7);
                    *(_OWORD *)(v214 + 16) = v281;
                    *(_QWORD *)(v214 + 32) = v196;
                    *(_QWORD *)&v308 = v214;
                    specialized Array._endMutation()(v214);
                    v215 = v308;
                    v216 = type metadata accessor for MOSuggestionInterstitialListAssetViewModel(0);
                    swift_allocObject(v216, *(unsigned int *)(v216 + 48), *(unsigned __int16 *)(v216 + 52));
                    swift_bridgeObjectRetain(v212);
                    v217 = v196;
                    swift_retain(v196);
                    v218 = MOSuggestionInterstitialListAssetViewModel.init(id:subViewModels:topLevelGroupHeading:dates:titles:icons:assetVisualSubType:selectable:isLoadingPlaceHolder:isFallback:)(v283, v282, 0, 0, 0, v209, v211, v215, v294, 1, 0, 0);
                    swift_retain(v218);
                    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v219);
                    v221 = *(_QWORD *)((v316 & 0xFFFFFFFFFFFFFF8) + 0x10);
                    v220 = *(_QWORD *)((v316 & 0xFFFFFFFFFFFFFF8) + 0x18);
                    if (v221 >= v220 >> 1)
                      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v220 > 1, v221 + 1, 1);
                    v222 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v221, v218);
                    specialized Array._endMutation()(v222);
                    if ((swift_isUniquelyReferenced_nonNull_native(v298) & 1) == 0)
                      v298 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v298[2] + 1, 1, v298);
                    v223 = v293;
                    v224 = v291;
                    v225 = v217;
                    v227 = v298[2];
                    v226 = v298[3];
                    if (v227 >= v226 >> 1)
                      v298 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((_QWORD *)(v226 > 1), v227 + 1, 1, v298);
                    v228 = v298;
                    v298[2] = v227 + 1;
                    v229 = &v228[2 * v227];
                    v230 = v295;
                    v229[4] = v223;
                    v229[5] = v230;
                    swift_retain(v225);
                    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v231);
                    v233 = *(_QWORD *)((v315 & 0xFFFFFFFFFFFFFF8) + 0x10);
                    v232 = *(_QWORD *)((v315 & 0xFFFFFFFFFFFFFF8) + 0x18);
                    if (v233 >= v232 >> 1)
                      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v232 > 1, v233 + 1, 1);
                    v234 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v233, v225);
                    specialized Array._endMutation()(v234);
                    outlined init with copy of MOSuggestionSheetAssetDateRange(v296, v292);
                    if ((swift_isUniquelyReferenced_nonNull_native(v297) & 1) == 0)
                      v297 = (_QWORD *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v297[2] + 1, 1, (unint64_t)v297);
                    v236 = v297[2];
                    v235 = v297[3];
                    if (v236 >= v235 >> 1)
                      v297 = (_QWORD *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v235 > 1, v236 + 1, 1, (unint64_t)v297);
                    v237 = v297;
                    v297[2] = v236 + 1;
                    outlined init with take of MOSuggestionSheetAssetDateRange(v292, (uint64_t)v237 + v284 + v236 * v285);
                    specialized Set._Variant.insert(_:)((Swift::UInt *)&v308, (Swift::UInt)objc_msgSend((id)v8, "mediaType"));

                    swift_release(v225);
                    swift_release(v218);
                    swift_unknownObjectRelease(v68);

                    outlined destroy of MOSuggestionSheetAssetDateRange(v296);
                    (*(void (**)(char *, uint64_t))(v302 + 8))(v299, v303);
                    v27 = v306;
                    goto LABEL_21;
                  }
                  swift_bridgeObjectRelease(v87);
                }
                if (serverManager._clientConnections != (NSMutableDictionary *)-1)
                  swift_once(&serverManager._clientConnections, one-time initialization function for shared);
                v184 = type metadata accessor for Logger(0);
                v185 = __swift_project_value_buffer(v184, (uint64_t)static MOAngelLogger.shared);
                v186 = Logger.logObject.getter(v185);
                v187 = static os_log_type_t.error.getter();
                v8 = v187;
                if (os_log_type_enabled(v186, v187))
                {
                  v188 = (uint8_t *)swift_slowAlloc(2, -1);
                  *(_WORD *)v188 = 0;
                  _os_log_impl((void *)&_mh_execute_header, v186, (os_log_type_t)v8, "[MOSuggestionInterstitialListAssetViewModel.mediaAssets] Failed to construct valid media asset view model", v188, 2u);
                  swift_slowDealloc(v188, -1, -1);
                  v189 = v182;
                }
                else
                {
                  v189 = v186;
                  v186 = v182;
                }

                swift_unknownObjectRelease(v68);
                (*(void (**)(char *, uint64_t))(v302 + 8))(v299, v303);
LABEL_21:
                v28 = v304;
                goto LABEL_22;
              }
              v157 = _stringCompareWithSmolCheck(_:_:expecting:)(v154, v156, 0, 0xE000000000000000, 0);
              swift_bridgeObjectRelease(v156);
              if ((v157 & 1) != 0)
                goto LABEL_86;
              v172 = objc_msgSend((id)v8, "albumTitle");
              v173 = static String._unconditionallyBridgeFromObjectiveC(_:)(v172);
              v175 = v174;

              *(_QWORD *)&v308 = v173;
              *((_QWORD *)&v308 + 1) = v175;
              swift_bridgeObjectRetain(v175);
              v176._countAndFlagsBits = 0x20A280E220;
              v176._object = (void *)0xA500000000000000;
              String.append(_:)(v176);
              swift_bridgeObjectRelease(v175);
              v170 = *((_QWORD *)&v308 + 1);
              v169 = v308;
              v171 = objc_msgSend((id)v8, "title");
LABEL_92:
              v177 = v171;
              v178 = static String._unconditionallyBridgeFromObjectiveC(_:)(v177);
              v180 = v179;

              *(_QWORD *)&v308 = v169;
              v27 = v306;
              *((_QWORD *)&v308 + 1) = v170;
              swift_bridgeObjectRetain(v170);
              v181._countAndFlagsBits = v178;
              v181._object = v180;
              String.append(_:)(v181);
              swift_bridgeObjectRelease(v170);
              swift_bridgeObjectRelease(v180);
              v86 = 0;
              v87 = *((_QWORD *)&v308 + 1);
              v84 = v308;
              goto LABEL_93;
            case 7uLL:
              v101 = objc_msgSend((id)v8, "artistName");
              v102 = static String._unconditionallyBridgeFromObjectiveC(_:)(v101);
              v104 = v103;

              v105 = objc_msgSend((id)v8, "albumTitle");
              v106 = static String._unconditionallyBridgeFromObjectiveC(_:)(v105);
              v108 = v107;

              if (v102 == v106 && v104 == v108)
              {
                swift_bridgeObjectRelease_n(v104, 2);
              }
              else
              {
                v149 = _stringCompareWithSmolCheck(_:_:expecting:)(v102, v104, v106, v108, 0);
                swift_bridgeObjectRelease(v104);
                swift_bridgeObjectRelease(v108);
                if ((v149 & 1) == 0)
                {
                  v160 = objc_msgSend((id)v8, "artistName");
                  v161 = static String._unconditionallyBridgeFromObjectiveC(_:)(v160);
                  v163 = v162;

                  if (v161 || v163 != 0xE000000000000000)
                  {
                    v238 = _stringCompareWithSmolCheck(_:_:expecting:)(v161, v163, 0, 0xE000000000000000, 0);
                    swift_bridgeObjectRelease(v163);
                    if ((v238 & 1) == 0)
                    {
                      v239 = objc_msgSend((id)v8, "artistName");
                      v240 = static String._unconditionallyBridgeFromObjectiveC(_:)(v239);
                      v242 = v241;

                      *(_QWORD *)&v308 = v240;
                      *((_QWORD *)&v308 + 1) = v242;
                      swift_bridgeObjectRetain(v242);
                      v243._countAndFlagsBits = 0x20A280E220;
                      v243._object = (void *)0xA500000000000000;
                      String.append(_:)(v243);
                      swift_bridgeObjectRelease(v242);
                      v245 = *((_QWORD *)&v308 + 1);
                      v244 = v308;
                      v246 = objc_msgSend((id)v8, "albumTitle");
                      v247 = static String._unconditionallyBridgeFromObjectiveC(_:)(v246);
                      v249 = v248;

                      v308 = __PAIR128__(v245, v244);
                      v27 = v306;
                      swift_bridgeObjectRetain(v245);
                      v250._countAndFlagsBits = v247;
                      v250._object = v249;
                      String.append(_:)(v250);
                      swift_bridgeObjectRelease(v245);
                      swift_bridgeObjectRelease(v249);
                      v86 = 0;
                      v87 = *((_QWORD *)&v308 + 1);
                      v84 = v308;
                      v85 = 5;
                      goto LABEL_94;
                    }
                  }
                  else
                  {
                    swift_bridgeObjectRelease(0xE000000000000000);
                  }
                }
              }
              v150 = objc_msgSend((id)v8, "albumTitle");
              v84 = static String._unconditionallyBridgeFromObjectiveC(_:)(v150);
              v87 = v151;

              v86 = 0;
              v85 = 5;
              goto LABEL_94;
            case 8uLL:
              v109 = objc_msgSend((id)v8, "artistName");
              v110 = static String._unconditionallyBridgeFromObjectiveC(_:)(v109);
              v112 = v111;

              *(_QWORD *)&v308 = v110;
              *((_QWORD *)&v308 + 1) = v112;
              swift_bridgeObjectRetain(v112);
              v113._countAndFlagsBits = 0x20A280E220;
              v113._object = (void *)0xA500000000000000;
              String.append(_:)(v113);
              swift_bridgeObjectRelease(v112);
              v115 = *((_QWORD *)&v308 + 1);
              v114 = v308;
              v116 = objc_msgSend((id)v8, "title");
              v117 = static String._unconditionallyBridgeFromObjectiveC(_:)(v116);
              v119 = v118;

              v308 = __PAIR128__(v115, v114);
              v27 = v306;
              swift_bridgeObjectRetain(v115);
              v120._countAndFlagsBits = v117;
              v120._object = v119;
              String.append(_:)(v120);
              swift_bridgeObjectRelease(v115);
              swift_bridgeObjectRelease(v119);
              v86 = 0;
              v87 = *((_QWORD *)&v308 + 1);
              v84 = v308;
              v85 = 6;
              goto LABEL_94;
            default:
              v87 = 0;
              goto LABEL_94;
          }
        }
      }
      else
      {
        outlined destroy of Any?((uint64_t)&v308, &demangling cache variable for type metadata for Any?);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v302 + 56))(v78, 1, 1, v303);
      }
      swift_unknownObjectRelease(v68);

      outlined destroy of Any?(v78, (uint64_t *)&demangling cache variable for type metadata for Date?);
      goto LABEL_21;
    }
    v60 = v58;
    v61 = _stringCompareWithSmolCheck(_:_:expecting:)(v54, v56, v57, v58, 0);

    swift_bridgeObjectRelease(v56);
    swift_bridgeObjectRelease(v60);
    if ((v61 & 1) != 0)
      goto LABEL_52;
    ObjCClassMetadata = swift_getObjCClassMetadata(objc_msgSend(v30, "contentClassType"));
    if (ObjCClassMetadata == type metadata accessor for MOSuggestionGenericFallBackInfo())
      goto LABEL_52;
    if (serverManager._clientConnections != (NSMutableDictionary *)-1)
      swift_once(&serverManager._clientConnections, one-time initialization function for shared);
    v63 = type metadata accessor for Logger(0);
    v64 = __swift_project_value_buffer(v63, (uint64_t)static MOAngelLogger.shared);
    v65 = Logger.logObject.getter(v64);
    v66 = static os_log_type_t.error.getter();
    v8 = v66;
    if (os_log_type_enabled(v65, v66))
    {
      v67 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v67 = 0;
      _os_log_impl((void *)&_mh_execute_header, v65, (os_log_type_t)v8, "[MOSuggestionInterstitialListAssetViewModel.mediaAssets] Mismatched init for asset type", v67, 2u);
      swift_slowDealloc(v67, -1, -1);
    }

LABEL_22:
    ++v11;
  }
  while (v28 != v11);
  swift_bridgeObjectRelease(v27);
  countAndFlagsBits = v315;
  LOBYTE(v27) = v290;
  if (v315 >> 62)
    goto LABEL_133;
LABEL_125:
  if (*(_QWORD *)((countAndFlagsBits & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_126;
LABEL_137:
  swift_bridgeObjectRelease(object);
  swift_bridgeObjectRelease(countAndFlagsBits);
  v255 = v314;
  swift_bridgeObjectRelease(v298);
  swift_bridgeObjectRelease(v297);
LABEL_138:
  swift_bridgeObjectRelease(v255);
  v257 = v316;
LABEL_152:
  swift_bridgeObjectRelease(v257);
  return 0;
}

uint64_t specialized Set.startIndex.getter(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

void specialized Set.subscript.getter(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  void *v4;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  id v18;
  char v19;
  id v20;
  uint64_t v21;
  void *v22;

  v7 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (__CocoaSet.Index.age.getter(a1, a2) == *(_DWORD *)(a4 + 36))
      {
        v11 = __CocoaSet.Index.element.getter(v7, a2);
        v21 = v11;
        v12 = type metadata accessor for UIScene();
        swift_unknownObjectRetain();
        swift_dynamicCast(&v22, &v21, (char *)&type metadata for Swift.AnyObject + 8, v12, 7);
        v4 = v22;
        swift_unknownObjectRelease(v11);
        v13 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a4 + 40));
        v14 = -1 << *(_BYTE *)(a4 + 32);
        v7 = v13 & ~v14;
        if (((*(_QWORD *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
        {
          v15 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
          v16 = static NSObject.== infix(_:_:)(v15);

          if ((v16 & 1) == 0)
          {
            v17 = ~v14;
            do
            {
              v7 = (v7 + 1) & v17;
              if (((*(_QWORD *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
                goto LABEL_24;
              v18 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
              v19 = static NSObject.== infix(_:_:)(v18);

            }
            while ((v19 & 1) == 0);
          }

LABEL_20:
          v20 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v8 = a4;
  else
    v8 = a4 & 0xFFFFFFFFFFFFFF8;
  v9 = __CocoaSet.element(at:)(a1, a2, v8);
  v21 = v9;
  v10 = type metadata accessor for UIScene();
  swift_unknownObjectRetain();
  swift_dynamicCast(&v22, &v21, (char *)&type metadata for Swift.AnyObject + 8, v10, 7);
  swift_unknownObjectRelease(v9);
}

uint64_t specialized Set.subscript.getter(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * result);
LABEL_8:
  __break(1u);
  return result;
}

{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return *(_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * result);
LABEL_8:
  __break(1u);
  return result;
}

uint64_t specialized _NativeSet.startIndex.getter(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t outlined consume of Set<UIScene>.Index._Variant(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease(result);
  return result;
}

unint64_t type metadata accessor for UIScene()
{
  unint64_t result;
  uint64_t v1;

  result = lazy cache variable for type metadata for UIScene;
  if (!lazy cache variable for type metadata for UIScene)
  {
    v1 = objc_opt_self(UIScene);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for UIScene);
  }
  return result;
}

char *MOSuggestionWorkoutIconGlyphView.__allocating_init(image:glyphBackgroundColor:glyphTintColor:)(void *a1, void *a2, void *a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return MOSuggestionWorkoutIconGlyphView.init(image:glyphBackgroundColor:glyphTintColor:)(a1, a2, a3);
}

id MOSuggestionWorkoutsSnowGlobeView.__allocating_init(icons:glyphBackgroundColor:glyphTintColor:)(uint64_t a1, void *a2, void *a3)
{
  objc_class *v3;
  id v7;
  id v8;

  v7 = objc_allocWithZone(v3);
  v8 = specialized MOSuggestionWorkoutsSnowGlobeView.init(icons:glyphBackgroundColor:glyphTintColor:)(a1, a2, a3);

  return v8;
}

id MOSuggestionWorkoutsSnowGlobeView.__allocating_init(alreadyRoundedIcons:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return MOSuggestionWorkoutsSnowGlobeView.init(alreadyRoundedIcons:)(a1);
}

_QWORD *MOSuggestionActivityIconAssetView.__allocating_init(imageView:name:assignedTileSize:frame:calories:duration:distance:averageHeartRate:)(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13, uint64_t a14, uint64_t a15)
{
  objc_class *v15;
  id v28;

  v28 = objc_allocWithZone(v15);
  return MOSuggestionActivityIconAssetView.init(imageView:name:assignedTileSize:frame:calories:duration:distance:averageHeartRate:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
}

id MOSuggestionWorkoutsSnowGlobeView.init(icons:glyphBackgroundColor:glyphTintColor:)(uint64_t a1, void *a2, void *a3)
{
  id v5;

  v5 = specialized MOSuggestionWorkoutsSnowGlobeView.init(icons:glyphBackgroundColor:glyphTintColor:)(a1, a2, a3);

  return v5;
}

void closure #1 in MOSuggestionWorkoutsSnowGlobeView.init(icons:glyphBackgroundColor:glyphTintColor:)(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  objc_class *v10;
  char *v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  char *v17;
  char *v18;
  id *v19;
  id v20;
  id v21;
  id v22;
  char *v23;
  id v24;
  uint64_t Strong;
  void *v26;
  _QWORD *v27;
  char *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v41[24];
  char v42[24];
  objc_super v43;
  char v44[24];
  char v45[32];

  v5 = a1;
  if (!((unint64_t)a1 >> 62))
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v6)
      goto LABEL_3;
LABEL_20:
    swift_bridgeObjectRelease(v5);
    return;
  }
  if (a1 < 0)
    v34 = a1;
  else
    v34 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v6 = _CocoaArrayWrapper.endIndex.getter(v34);
  if (!v6)
    goto LABEL_20;
LABEL_3:
  if (v6 < 1)
  {
    __break(1u);
  }
  else
  {
    v35 = a4 + 16;
    v36 = v5 & 0xC000000000000001;
    swift_beginAccess(a4 + 16, v45, 0, 0);
    swift_beginAccess(a4 + 16, v44, 0, 0);
    v7 = 0;
    v37 = v6;
    v38 = v5;
    do
    {
      if (v36)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v5);
      else
        v8 = *(id *)(v5 + 8 * v7 + 32);
      v9 = v8;
      v10 = (objc_class *)type metadata accessor for MOSuggestionWorkoutIconGlyphView();
      v11 = (char *)objc_allocWithZone(v10);
      v12 = OBJC_IVAR____TtC16MomentsUIService32MOSuggestionWorkoutIconGlyphView_iconView;
      v13 = objc_allocWithZone((Class)UIImageView);
      v14 = v9;
      v15 = a2;
      v16 = a3;
      v17 = v11;
      *(_QWORD *)&v11[v12] = objc_msgSend(v13, "init");

      v43.receiver = v17;
      v43.super_class = v10;
      v18 = (char *)objc_msgSendSuper2(&v43, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
      objc_msgSend(v18, "setBackgroundColor:", v15);
      v19 = (id *)&v18[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionWorkoutIconGlyphView_iconView];
      swift_beginAccess(&v18[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionWorkoutIconGlyphView_iconView], v42, 0, 0);
      v20 = *v19;
      v21 = objc_msgSend(v14, "imageWithRenderingMode:", 2);
      objc_msgSend(v20, "setImage:", v21);

      objc_msgSend(*v19, "setTintColor:", v16);
      objc_msgSend(*v19, "setContentMode:", 1);
      v22 = *v19;
      v23 = v18;
      v24 = v22;
      objc_msgSend(v23, "addSubview:", v24);

      Strong = swift_unknownObjectWeakLoadStrong(v35);
      if (Strong)
      {
        v26 = (void *)Strong;
        v27 = (_QWORD *)(Strong + OBJC_IVAR____TtC16MomentsUIService33MOSuggestionWorkoutsSnowGlobeView_iconViews);
        swift_beginAccess(Strong + OBJC_IVAR____TtC16MomentsUIService33MOSuggestionWorkoutsSnowGlobeView_iconViews, v41, 33, 0);
        v28 = v23;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v28);
        v30 = *(_QWORD *)((*v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v29 = *(_QWORD *)((*v27 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v30 >= v29 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v29 > 1, v30 + 1, 1);
        v31 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v28);
        specialized Array._endMutation()(v31);
        swift_endAccess(v41);

      }
      v32 = (void *)swift_unknownObjectWeakLoadStrong(v35);
      if (v32)
      {
        v33 = v32;
        objc_msgSend(v32, "addSubview:", v23);

      }
      ++v7;

      v5 = v38;
    }
    while (v37 != v7);
    swift_bridgeObjectRelease(v38);
  }
}

id MOSuggestionWorkoutsSnowGlobeView.init(alreadyRoundedIcons:)(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  objc_class *v9;
  id v10;
  id v11;
  __n128 v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[5];
  uint64_t v25;
  objc_super v26;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v23 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionWorkoutsSnowGlobeView_iconViews] = _swiftEmptyArrayStorage;
  v9 = (objc_class *)type metadata accessor for MOSuggestionWorkoutsSnowGlobeView();
  v26.receiver = v1;
  v26.super_class = v9;
  v10 = objc_msgSendSuper2(&v26, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue, OS_dispatch_queue_ptr);
  v11 = v10;
  v13 = (void *)static OS_dispatch_queue.main.getter(v12);
  v14 = swift_allocObject(&unk_1001EC220, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16);
  v15 = swift_allocObject(&unk_1001EC248, 32, 7);
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = v14;
  aBlock[4] = partial apply for closure #1 in MOSuggestionWorkoutsSnowGlobeView.init(alreadyRoundedIcons:);
  v25 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_36;
  v16 = _Block_copy(aBlock);
  swift_release(v25);
  static DispatchQoS.unspecified.getter(v17);
  aBlock[0] = _swiftEmptyArrayStorage;
  v18 = lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  v20 = lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags], (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v3, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v5, v16);

  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v22);
  return v11;
}

uint64_t closure #1 in MOSuggestionWorkoutsSnowGlobeView.init(alreadyRoundedIcons:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t i;
  id v8;
  void *v9;
  id v10;
  uint64_t Strong;
  void *v12;
  _QWORD *v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  _BYTE v21[24];
  _BYTE v22[24];
  _BYTE v23[24];

  if (!((unint64_t)a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(a1);
    if (v4)
      goto LABEL_3;
    return swift_bridgeObjectRelease(a1);
  }
  if (a1 < 0)
    v20 = a1;
  else
    v20 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  result = _CocoaArrayWrapper.endIndex.getter(v20);
  v4 = result;
  if (!result)
    return swift_bridgeObjectRelease(a1);
LABEL_3:
  if (v4 < 1)
  {
    __break(1u);
  }
  else
  {
    v6 = a2 + 16;
    swift_beginAccess(a2 + 16, v23, 0, 0);
    swift_beginAccess(a2 + 16, v22, 0, 0);
    for (i = 0; i != v4; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      else
        v8 = *(id *)(a1 + 8 * i + 32);
      v9 = v8;
      v10 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v8);
      Strong = swift_unknownObjectWeakLoadStrong(v6);
      if (Strong)
      {
        v12 = (void *)Strong;
        v13 = (_QWORD *)(Strong + OBJC_IVAR____TtC16MomentsUIService33MOSuggestionWorkoutsSnowGlobeView_iconViews);
        swift_beginAccess(Strong + OBJC_IVAR____TtC16MomentsUIService33MOSuggestionWorkoutsSnowGlobeView_iconViews, v21, 33, 0);
        v14 = v10;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
        v16 = *(_QWORD *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v15 = *(_QWORD *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v16 >= v15 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1);
        v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v14);
        specialized Array._endMutation()(v17);
        swift_endAccess(v21);

      }
      v18 = (void *)swift_unknownObjectWeakLoadStrong(v6);
      if (v18)
      {
        v19 = v18;
        objc_msgSend(v18, "addSubview:", v10);

      }
    }
    return swift_bridgeObjectRelease(a1);
  }
  return result;
}

Swift::Void __swiftcall MOSuggestionWorkoutsSnowGlobeView.layoutSubviews()()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  id *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  float64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  unint64_t v23;
  double *v24;
  id v25;
  uint64_t v26;
  NSObject *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id *v43;
  id *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  id v48;
  char v49[24];
  uint64_t v50;
  uint64_t v51;

  v1 = (uint64_t)v0;
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    goto LABEL_37;
  while (1)
  {
    v2 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v2, (uint64_t)static MOAngelLogger.assets);
    v3 = (id *)(id)v1;
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v6 = 134217984;
      v7 = (uint64_t *)((char *)v3 + OBJC_IVAR____TtC16MomentsUIService33MOSuggestionWorkoutsSnowGlobeView_iconViews);
      swift_beginAccess((char *)v3 + OBJC_IVAR____TtC16MomentsUIService33MOSuggestionWorkoutsSnowGlobeView_iconViews, v49, 0, 0);
      v8 = *v7;
      if ((unint64_t)*v7 >> 62)
      {
        v38 = v8 < 0 ? *v7 : v8 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v8);
        v9 = _CocoaArrayWrapper.endIndex.getter(v38);
        swift_bridgeObjectRelease(v8);
      }
      else
      {
        v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v50 = v9;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51, v6 + 4);

      _os_log_impl((void *)&_mh_execute_header, v4, v5, "[MOSuggestionWorkoutsSnowGlobeView] layoutSubviews iconsCount: %ld", v6, 0xCu);
      swift_slowDealloc(v6, -1, -1);

    }
    else
    {

    }
    v10 = (uint64_t *)((char *)v3 + OBJC_IVAR____TtC16MomentsUIService33MOSuggestionWorkoutsSnowGlobeView_iconViews);
    v11 = swift_beginAccess((char *)v3 + OBJC_IVAR____TtC16MomentsUIService33MOSuggestionWorkoutsSnowGlobeView_iconViews, &v50, 0, 0).n128_u64[0];
    v12 = *v10;
    if ((unint64_t)*v10 >> 62)
    {
      if (v12 < 0)
        v36 = *v10;
      else
        v36 = v12 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v10);
      v37 = _CocoaArrayWrapper.endIndex.getter(v36);
      v11 = swift_bridgeObjectRelease(v12).n128_u64[0];
      if (v37 < 2)
        return;
    }
    else if (*(uint64_t *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10) < 2)
    {
      return;
    }
    objc_msgSend(v3, "bounds", *(double *)&v11);
    v14 = v13;
    v16 = v15;
    v17 = *v10;
    if ((unint64_t)*v10 >> 62)
    {
      v39 = v17 < 0 ? *v10 : v17 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v10);
      v18 = _CocoaArrayWrapper.endIndex.getter(v39);
      swift_bridgeObjectRelease(v17);
    }
    else
    {
      v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v19 = specialized static MOSuggestionAssetSnowglobeEffect.layoutRectsFor(targetSize:count:)(v18, v14, v16);
    v1 = *v10;
    v44 = (id *)*v10;
    if ((unint64_t)*v10 >> 62)
    {
      if (v1 < 0)
        v40 = *v10;
      else
        v40 = v1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v44);
      v41 = v40;
      v1 = (uint64_t)v44;
      v20 = _CocoaArrayWrapper.endIndex.getter(v41);
      if (!v20)
      {
LABEL_55:
        swift_bridgeObjectRelease(v19);
        swift_bridgeObjectRelease(v1);
        return;
      }
    }
    else
    {
      v20 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v1);
      if (!v20)
        goto LABEL_55;
    }
    v47 = v1 & 0xC000000000000001;
    if ((v1 & 0xC000000000000001) == 0)
      break;
    v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v1);
LABEL_16:
    v22 = v21;
    v46 = *(_QWORD *)(v19 + 16);
    if (!v46)
    {
LABEL_34:
      swift_bridgeObjectRelease(v1);
      swift_bridgeObjectRelease(v19);

      return;
    }
    v23 = 0;
    v42 = v1 & 0xFFFFFFFFFFFFFF8;
    v24 = (double *)(v19 + 56);
    v45 = v20 - 1;
    v43 = v3;
    while (1)
    {
      v48 = v22;
      v26 = v19;
      v27 = v3;
      v28 = Logger.logObject.getter(v27);
      v29 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = swift_slowAlloc(22, -1);
        *(_DWORD *)v30 = 134218240;
        v31 = v10;
        v32 = *v10;
        if ((unint64_t)*v10 >> 62)
        {
          v35 = v32 < 0 ? *v10 : v32 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v32);
          v33 = _CocoaArrayWrapper.endIndex.getter(v35);
          swift_bridgeObjectRelease(v32);
        }
        else
        {
          v33 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        *(_QWORD *)(v30 + 4) = v33;

        *(_WORD *)(v30 + 12) = 2048;
        *(_QWORD *)(v30 + 14) = v23;
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "[MOSuggestionWorkoutsSnowGlobeView] iconsCount: %ld index: %ld", (uint8_t *)v30, 0x16u);
        swift_slowDealloc(v30, -1, -1);
        v3 = v43;
        v1 = (uint64_t)v44;
        v10 = v31;
      }
      else
      {

        v28 = v27;
      }

      if (v23 >= *(_QWORD *)(v26 + 16))
        break;
      v19 = v26;
      objc_msgSend(v48, "setFrame:", *(v24 - 3), *(v24 - 2), *(v24 - 1), *v24);

      if (v45 == v23)
        goto LABEL_55;
      v34 = v23 + 1;
      if (v47)
      {
        v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v34, v1);
      }
      else
      {
        if (v34 >= *(_QWORD *)(v42 + 16))
          goto LABEL_36;
        v25 = *(id *)(v1 + 8 * v23 + 40);
      }
      v22 = v25;
      ++v23;
      v24 += 4;
      if (v46 == v23)
        goto LABEL_34;
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v21 = *(id *)(v1 + 32);
    goto LABEL_16;
  }
  __break(1u);
}

void MOSuggestionWorkoutsSnowGlobeView.init(coder:)()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionWorkoutsSnowGlobeView_iconViews] = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionActivityIconAssetView.swift", 56, 2, 72, 0);
  __break(1u);
}

void MOSuggestionWorkoutsSnowGlobeView.init(frame:)()
{
  MOSuggestionCutoutView.init(frame:)((uint64_t)"MomentsUIService.MOSuggestionWorkoutsSnowGlobeView", 50);
}

id MOSuggestionWorkoutsSnowGlobeView.__deallocating_deinit()
{
  return MOSuggestionRoundView.__deallocating_deinit(type metadata accessor for MOSuggestionWorkoutsSnowGlobeView);
}

id MOSuggestionWorkoutIconGlyphView.iconView.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionWorkoutIconGlyphView_iconView);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionWorkoutIconGlyphView_iconView, v3, 0, 0);
  return *v1;
}

void MOSuggestionWorkoutIconGlyphView.iconView.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService32MOSuggestionWorkoutIconGlyphView_iconView);
}

uint64_t (*MOSuggestionWorkoutIconGlyphView.iconView.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionWorkoutIconGlyphView_iconView, a1, 33, 0);
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

char *MOSuggestionWorkoutIconGlyphView.init(image:glyphBackgroundColor:glyphTintColor:)(void *a1, void *a2, void *a3)
{
  char *v3;
  uint64_t v7;
  id v8;
  char *v9;
  char *v10;
  id *v11;
  id v12;
  id v13;
  id v14;
  char *v15;
  id v16;
  char v18[24];
  objc_super v19;

  v7 = OBJC_IVAR____TtC16MomentsUIService32MOSuggestionWorkoutIconGlyphView_iconView;
  v8 = objc_allocWithZone((Class)UIImageView);
  v9 = v3;
  *(_QWORD *)&v3[v7] = objc_msgSend(v8, "init");

  v19.receiver = v9;
  v19.super_class = (Class)type metadata accessor for MOSuggestionWorkoutIconGlyphView();
  v10 = (char *)objc_msgSendSuper2(&v19, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v10, "setBackgroundColor:", a2);
  v11 = (id *)&v10[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionWorkoutIconGlyphView_iconView];
  swift_beginAccess(&v10[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionWorkoutIconGlyphView_iconView], v18, 0, 0);
  v12 = *v11;
  v13 = objc_msgSend(a1, "imageWithRenderingMode:", 2);
  objc_msgSend(v12, "setImage:", v13);

  objc_msgSend(*v11, "setTintColor:", a3);
  objc_msgSend(*v11, "setContentMode:", 1);
  v14 = *v11;
  v15 = v10;
  v16 = v14;
  objc_msgSend(v15, "addSubview:", v16);

  return v15;
}

Swift::Void __swiftcall MOSuggestionWorkoutIconGlyphView.layoutSubviews()()
{
  _QWORD *v0;
  double v1;
  id v2;
  id v3;

  objc_msgSend(v0, "bounds");
  v2 = objc_msgSend(v0, "_setCornerRadius:", v1 * 0.5);
  v3 = (id)(*(uint64_t (**)(id))((swift_isaMask & *v0) + 0x58))(v2);
  MOSuggestionInterstitialExpandableListViewCellConstants.init()();
  objc_msgSend(v3, "setFrame:");

}

void MOSuggestionWorkoutIconGlyphView.init(coder:)()
{
  char *v0;
  uint64_t v1;

  v1 = OBJC_IVAR____TtC16MomentsUIService32MOSuggestionWorkoutIconGlyphView_iconView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionActivityIconAssetView.swift", 56, 2, 103, 0);
  __break(1u);
}

void MOSuggestionWorkoutIconGlyphView.init(frame:)()
{
  MOSuggestionCutoutView.init(frame:)((uint64_t)"MomentsUIService.MOSuggestionWorkoutIconGlyphView", 49);
}

id MOSuggestionWorkoutIconGlyphView.__deallocating_deinit()
{
  return MOSuggestionRoundView.__deallocating_deinit(type metadata accessor for MOSuggestionWorkoutIconGlyphView);
}

void closure #1 in variable initialization expression of MOSuggestionActivityIconAssetView.exerciseNameLabel()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v1 = (void *)objc_opt_self(UIFont);
  v2 = objc_msgSend(v1, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  v3 = objc_msgSend(v2, "fontDescriptor");
  v4 = objc_msgSend(v3, "fontDescriptorWithSymbolicTraits:", 2);

  if (v4)
  {
    v5 = objc_msgSend(v1, "fontWithDescriptor:size:", v4, 0.0);

    objc_msgSend(v0, "setFont:", v5);
    v6 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
    objc_msgSend(v0, "setTextColor:", v6);

    objc_msgSend(v0, "setTextAlignment:", 0);
    objc_msgSend(v0, "setLineBreakMode:", 4);
    objc_msgSend(v0, "setNumberOfLines:", 2);
    objc_msgSend(v0, "setAdjustsFontForContentSizeCategory:", 1);
    objc_msgSend(v0, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityMedium);
  }
  else
  {
    __break(1u);
  }
}

id MOSuggestionActivityIconAssetView.exerciseNameLabel.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_exerciseNameLabel);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_exerciseNameLabel, v3, 0, 0);
  return *v1;
}

void MOSuggestionActivityIconAssetView.exerciseNameLabel.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_exerciseNameLabel);
}

uint64_t (*MOSuggestionActivityIconAssetView.exerciseNameLabel.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_exerciseNameLabel, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void closure #1 in variable initialization expression of MOSuggestionActivityIconAssetView.workoutDataLabel()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v1 = (void *)objc_opt_self(UIFont);
  v2 = objc_msgSend(v1, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  v3 = objc_msgSend(v2, "fontDescriptor");
  v4 = objc_msgSend(v3, "fontDescriptorWithSymbolicTraits:", 2);

  if (v4)
  {
    v5 = objc_msgSend(v1, "fontWithDescriptor:size:", v4, 0.0);

    objc_msgSend(v0, "setFont:", v5);
    v6 = objc_msgSend((id)objc_opt_self(UIColor), "tertiaryLabelColor");
    objc_msgSend(v0, "setTextColor:", v6);

    objc_msgSend(v0, "setTextAlignment:", 0);
    objc_msgSend(v0, "setAdjustsFontForContentSizeCategory:", 1);
    objc_msgSend(v0, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityMedium);
  }
  else
  {
    __break(1u);
  }
}

id MOSuggestionActivityIconAssetView.workoutDataLabel.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_workoutDataLabel);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_workoutDataLabel, v3, 0, 0);
  return *v1;
}

void MOSuggestionActivityIconAssetView.workoutDataLabel.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_workoutDataLabel);
}

uint64_t (*MOSuggestionActivityIconAssetView.workoutDataLabel.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_workoutDataLabel, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id MOSuggestionActivityIconAssetView.labelStack.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_labelStack);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_labelStack, v3, 0, 0);
  return *v1;
}

void MOSuggestionActivityIconAssetView.labelStack.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_labelStack);
}

uint64_t (*MOSuggestionActivityIconAssetView.labelStack.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_labelStack, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

_QWORD *MOSuggestionActivityIconAssetView.init(imageView:name:assignedTileSize:frame:calories:duration:distance:averageHeartRate:)(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13, uint64_t a14, uint64_t a15)
{
  void *v15;
  _BYTE *v24;
  NSString v25;
  void *v26;
  id v27;
  NSString v28;
  id v29;
  NSString v30;
  id v31;
  NSString v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  _QWORD *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  __n128 v49;
  objc_super v56;

  v24 = v15;
  v25 = String._bridgeToObjectiveC()();
  v26 = (void *)objc_opt_self(UIColor);
  v27 = objc_msgSend(v26, "colorNamed:", v25);

  if (!v27)
    v27 = objc_msgSend(v26, "systemBlueColor");
  *(_QWORD *)&v24[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_distanceBlue] = v27;
  v28 = String._bridgeToObjectiveC()();
  v29 = objc_msgSend(v26, "colorNamed:", v28);

  if (!v29)
    v29 = objc_msgSend(v26, "systemYellowColor");
  *(_QWORD *)&v24[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_timeYellow] = v29;
  v30 = String._bridgeToObjectiveC()();
  v31 = objc_msgSend(v26, "colorNamed:", v30);

  if (!v31)
    v31 = objc_msgSend(v26, "systemPinkColor");
  *(_QWORD *)&v24[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_movePink] = v31;
  v32 = String._bridgeToObjectiveC()();
  v33 = objc_msgSend(v26, "colorNamed:", v32);

  if (!v33)
    v33 = objc_msgSend(v26, "systemRedColor");
  *(_QWORD *)&v24[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_heartRed] = v33;
  v34 = OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_exerciseNameLabel;
  closure #1 in variable initialization expression of MOSuggestionActivityIconAssetView.exerciseNameLabel();
  *(_QWORD *)&v24[v34] = v35;
  v36 = OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_workoutDataLabel;
  closure #1 in variable initialization expression of MOSuggestionActivityIconAssetView.workoutDataLabel();
  *(_QWORD *)&v24[v36] = v37;
  v38 = OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_labelStack;
  v39 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v39, "setAxis:", 1);
  objc_msgSend(v39, "setAlignment:", 1);
  *(_QWORD *)&v24[v38] = v39;
  v40 = &v24[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_name];
  *v40 = a2;
  v40[1] = a3;
  v24[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_assignedTileSize] = a4;
  v41 = &v24[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_calories];
  *v41 = a5;
  v41[1] = a6;
  *(double *)&v24[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_duration] = a13;
  v42 = &v24[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_distance];
  *v42 = a7;
  v42[1] = a8;
  v43 = &v24[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_averageHeartRate];
  *v43 = a14;
  v43[1] = a15;

  v56.receiver = v24;
  v56.super_class = (Class)type metadata accessor for MOSuggestionActivityIconAssetView();
  v44 = objc_msgSendSuper2(&v56, "initWithFrame:", a9, a10, a11, a12);
  objc_msgSend(v44, "setContentMode:", 1);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UITraitDefinition.Type>);
  v46 = swift_allocObject(v45, 48, 7);
  *(_OWORD *)(v46 + 16) = xmmword_10019ED20;
  *(_QWORD *)(v46 + 32) = type metadata accessor for UITraitUserInterfaceStyle(0);
  *(_QWORD *)(v46 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  v47 = v44;
  v48 = UIView.registerForTraitChanges(_:action:)(v46, "handleTraitChange");
  swift_unknownObjectRelease(v48);

  v49 = swift_bridgeObjectRelease(v46);
  (*(void (**)(void *, __n128))((swift_isaMask & *v47) + 0x108))(a1, v49);

  return v47;
}

Swift::Void __swiftcall MOSuggestionActivityIconAssetView.makeUIView(imageView:)(UIView imageView)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  NSString v9;
  void **v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char *v16;
  char isEscapingClosureAtFileLocation;
  __n128 v18;
  void **v19;
  void *v20;
  id v21;
  int v22;
  _UNKNOWN **v23;
  uint64_t (**v24)();
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  double v31;
  double v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  uint64_t (*v48)(void);
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  id v56;
  id v57;
  char **v58;
  id v59;
  void *v60;
  id v61;
  void *v62;
  id v63;
  id v64;
  id v65;
  id v66;
  Swift::String v67;
  Swift::String v68;
  Swift::String v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  void *v74;
  void *v75;
  __n128 v76;
  void **v77;
  BOOL v78;
  char v79;
  id v80;
  void *v81;
  id v82;
  void *v83;
  id v84;
  id v85;
  id v86;
  _UNKNOWN **v87;
  id v88;
  char *v89;
  void *v90;
  id v91;
  Swift::String v92;
  Swift::String v93;
  Swift::String v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  Swift::String v105;
  Swift::String v106;
  Swift::String v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  char v111;
  void **v112;
  double v113;
  id v114;
  Swift::String v115;
  Swift::String v116;
  Swift::String v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  void *v121;
  uint64_t *v122;
  uint64_t v123;
  unint64_t v124;
  char **v125;
  double v126;
  id v127;
  Swift::String v128;
  Swift::String v129;
  Swift::String v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  void *v134;
  void *v135;
  void *v136;
  __n128 v137;
  unint64_t v138;
  void **v139;
  double v140;
  id v141;
  Swift::String v142;
  Swift::String v143;
  Swift::String v144;
  void *v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  id v150;
  void *v151;
  id v152;
  id v153;
  id v154;
  id v155;
  id v156;
  void *v157;
  id v158;
  id v159;
  id v160;
  id v161;
  id v162;
  void *v163;
  id v164;
  id v165;
  id v166;
  id v167;
  id v168;
  id v169;
  void *v170;
  id v171;
  id v172;
  id v173;
  id v174;
  id v175;
  void *v176;
  id v177;
  id v178;
  id v179;
  id v180;
  id v181;
  void *v182;
  id v183;
  id v184;
  id v185;
  id v186;
  id v187;
  void *v188;
  id v189;
  id v190;
  id v191;
  id v192;
  void *v193;
  id v194;
  id v195;
  id v196;
  id v197;
  char v198;
  void **v199;
  unint64_t v200;
  id v201;
  Swift::String v202;
  Swift::String v203;
  Swift::String v204;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t v207;
  uint64_t v208;
  unint64_t v209;
  uint64_t v210;
  id v211;
  Swift::String v212;
  Swift::String v213;
  Swift::String v214;
  uint64_t v215;
  unint64_t v216;
  uint64_t v217;
  unint64_t v218;
  double v219;
  id v220;
  Swift::String v221;
  Swift::String v222;
  Swift::String v223;
  unint64_t v224;
  uint64_t v225;
  unint64_t v226;
  uint64_t v227;
  void *v228;
  uint64_t v229;
  double v230;
  unint64_t v231;
  void **v232;
  uint64_t v233;
  id v234;
  Swift::String v235;
  Swift::String v236;
  Swift::String v237;
  void *v238;
  uint64_t v239;
  uint64_t v240;
  unint64_t v241;
  uint64_t v242;
  Swift::String v243;
  Swift::String v244;
  Swift::String v245;
  uint64_t v246;
  unint64_t v247;
  void *v248;
  void *v249;
  void *v250;
  id v251;
  id v252;
  id v253;
  id v254;
  void *v255;
  id v256;
  id v257;
  id v258;
  id v259;
  void *v260;
  id v261;
  char **v262;
  void *v263;
  id v264;
  id v265;
  id v266;
  void *v267;
  id v268;
  void *v269;
  id v270;
  id v271;
  id v272;
  void *v273;
  id v274;
  void *v275;
  id v276;
  id v277;
  id v278;
  uint64_t (*v279)(void);
  void *v280;
  id v281;
  void *v282;
  id v283;
  id v284;
  id v285;
  uint64_t (*v286)(void);
  void *v287;
  id v288;
  id v289;
  id v290;
  id v291;
  id v292;
  id v293;
  id v294;
  id v295;
  void *v296;
  void *v297;
  void *v298;
  id v299;
  void *v300;
  id v301;
  id v302;
  id v303;
  void *v304;
  id v305;
  void *v306;
  id v307;
  id v308;
  id v309;
  void *v310;
  id v311;
  void *v312;
  id v313;
  id v314;
  id v315;
  id v316;
  id v317;
  Swift::String v318;
  Swift::String v319;
  Swift::String v320;
  uint64_t v321;
  unint64_t v322;
  uint64_t v323;
  uint64_t v324;
  unint64_t v325;
  unint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  id v330;
  Swift::String v331;
  Swift::String v332;
  Swift::String v333;
  uint64_t v334;
  uint64_t v335;
  unint64_t v336;
  uint64_t v337;
  unint64_t v338;
  unint64_t v339;
  void *v340;
  Swift::String v341;
  Swift::String v342;
  Swift::String v343;
  uint64_t v344;
  unint64_t v345;
  uint64_t v346;
  unint64_t v347;
  unint64_t v348;
  id v349;
  NSString v350;
  id v351;
  id v352;
  Swift::String v353;
  Swift::String v354;
  Swift::String v355;
  uint64_t v356;
  uint64_t v357;
  char *v358;
  _QWORD *v359;
  void ***v360;
  char *v361;
  void **v362;
  void **v363;
  void *v364;
  uint64_t v365;
  uint64_t v366;
  id v367;
  NSString v368;
  double v369;
  uint64_t v370;
  id v371;
  id v372;
  Swift::String v373;
  Swift::String v374;
  Swift::String v375;
  uint64_t v376;
  uint64_t v377;
  unint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  double v382;
  id v383;
  NSString v384;
  id v385;
  uint64_t v386;
  uint64_t v387;
  void *v388;
  uint64_t v389;
  double v390;
  char *v391;
  id v392;
  Swift::String v393;
  Swift::String v394;
  Swift::String v395;
  uint64_t v396;
  unint64_t v397;
  uint64_t v398;
  uint64_t v399;
  double v400;
  id v401;
  id v402;
  NSString v403;
  id v404;
  uint64_t v405;
  uint64_t v406;
  void *v407;
  double v408;
  uint64_t v409;
  id v410;
  Swift::String v411;
  Swift::String v412;
  Swift::String v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  void *v419;
  id v420;
  NSString v421;
  id v422;
  uint64_t v423;
  uint64_t v424;
  id v425;
  id v426;
  Swift::String v427;
  Swift::String v428;
  Swift::String v429;
  uint64_t v430;
  char *v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  id v437;
  NSString v438;
  id v439;
  id v440;
  Swift::String v441;
  Swift::String v442;
  Swift::String v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  id v449;
  uint64_t v450;
  uint64_t v451;
  id v452;
  NSString v453;
  id v454;
  uint64_t v455;
  uint64_t v456;
  id v457;
  id v458;
  Swift::String v459;
  Swift::String v460;
  Swift::String v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  id v466;
  uint64_t v467;
  uint64_t v468;
  id v469;
  NSString v470;
  id v471;
  uint64_t v472;
  uint64_t v473;
  __n128 v474;
  _QWORD *v475;
  void *v476;
  unint64_t v477;
  uint64_t v478;
  id v479;
  Swift::String v480;
  uint64_t v481;
  void **v482;
  void *v483;
  uint64_t v484;
  char *v485;
  uint64_t v486;
  void *v487;
  uint64_t v488;
  id v489;
  uint64_t v490;
  uint64_t v491;
  void **v492;
  uint64_t (*v493)(__n128);
  unint64_t v494;
  void **v495;
  id v496;
  uint64_t v497;
  char *v498;
  __int128 v499;
  void **aBlock;
  uint64_t v501;
  uint64_t (*v502)(uint64_t);
  void *v503;
  uint64_t (*v504)();
  uint64_t v505;
  uint64_t v506;
  unint64_t v507;
  Swift::String v508;
  Swift::String v509;
  Swift::String v510;
  Swift::String v511;
  Swift::String v512;
  Swift::String v513;
  Swift::String v514;
  Swift::String v515;
  Swift::String v516;
  Swift::String v517;
  Swift::String v518;
  Swift::String v519;
  Swift::String v520;
  Swift::String v521;
  Swift::String v522;
  Swift::String v523;
  Swift::String v524;
  Swift::String v525;
  Swift::String v526;
  Swift::String v527;

  v3 = type metadata accessor for CharacterSet(0);
  v488 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v485 = (char *)&v478 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (void *)objc_opt_self(UIColor);
  v6 = objc_msgSend(v5, "blackColor");
  objc_msgSend(v1, "setBackgroundColor:", v6);

  objc_msgSend(v1, "setAccessibilityIgnoresInvertColors:", 1);
  v7 = objc_msgSend(v1, "addSubview:", imageView.super.super.isa);
  *(_QWORD *)&v499 = *(_QWORD *)((swift_isaMask & *v1) + 0xB8);
  v8 = (void *)((uint64_t (*)(id))v499)(v7);
  v9 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setText:", v9);

  v10 = *(void ***)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_calories);
  v494 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_calories + 8);
  v495 = v10;
  v506 = 0;
  v507 = 0xE000000000000000;
  if (one-time initialization token for queue != -1)
    swift_once(&one-time initialization token for queue, one-time initialization function for queue);
  v11 = static MOSuggestionAssetWorkoutProvider.queue;
  v12 = swift_allocObject(&unk_1001EC298, 32, 7);
  *(_QWORD *)(v12 + 16) = &v506;
  *(_QWORD *)(v12 + 24) = v1;
  v13 = swift_allocObject(&unk_1001EC2C0, 32, 7);
  *(_QWORD *)(v13 + 16) = partial apply for closure #1 in MOSuggestionActivityIconAssetView.makeUIView(imageView:);
  *(_QWORD *)(v13 + 24) = v12;
  v484 = v12;
  v504 = partial apply for thunk for @escaping @callee_guaranteed () -> (@out ());
  v505 = v13;
  aBlock = _NSConcreteStackBlock;
  v501 = 1107296256;
  v502 = thunk for @escaping @callee_guaranteed () -> ();
  v503 = &block_descriptor_12_2;
  v14 = _Block_copy(&aBlock);
  v15 = v505;
  v16 = v1;
  swift_retain(v13);
  swift_release(v15);
  dispatch_sync(v11, v14);
  _Block_release(v14);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v13, "", 119, 177, 53, 1);
  v18 = swift_release(v13);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
    JUMPOUT(0x10014F924);
  }
  v19 = *(void ***)&v16[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_averageHeartRate];
  v491 = *(_QWORD *)&v16[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_averageHeartRate + 8];
  v492 = v19;
  v493 = *(uint64_t (**)(__n128))((swift_isaMask & *(_QWORD *)v16) + 0xD0);
  v20 = (void *)v493(v18);
  v21 = objc_msgSend(v5, "systemWhiteColor");
  objc_msgSend(v20, "setTextColor:", v21);

  v497 = v3;
  v498 = v16;
  v22 = v16[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_assignedTileSize];
  v23 = MKPolyline_ptr;
  v24 = off_10020E000;
  switch(v22)
  {
    case 2:
      v150 = -[objc_class superview](imageView.super.super.isa, "superview");
      if (v150)
      {
        v151 = v150;
        -[objc_class setTranslatesAutoresizingMaskIntoConstraints:](imageView.super.super.isa, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v152 = -[objc_class topAnchor](imageView.super.super.isa, "topAnchor");
        v153 = objc_msgSend(v151, "topAnchor");
        v154 = objc_msgSend(v152, "constraintEqualToAnchor:", v153);

        objc_msgSend(v154, "setConstant:", 8.0);
        v155 = v154;
        objc_msgSend(v155, "setActive:", 1);

      }
      v156 = -[objc_class superview](imageView.super.super.isa, "superview");
      if (v156)
      {
        v157 = v156;
        -[objc_class setTranslatesAutoresizingMaskIntoConstraints:](imageView.super.super.isa, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v158 = -[objc_class bottomAnchor](imageView.super.super.isa, "bottomAnchor");
        v159 = objc_msgSend(v157, "bottomAnchor");
        v160 = objc_msgSend(v158, "constraintEqualToAnchor:", v159);

        if (v160)
        {
          objc_msgSend(v160, "setConstant:", -8.0);
          v161 = v160;
          objc_msgSend(v161, "setActive:", 1);

        }
      }
      v162 = -[objc_class superview](imageView.super.super.isa, "superview");
      if (v162)
      {
        v163 = v162;
        -[objc_class setTranslatesAutoresizingMaskIntoConstraints:](imageView.super.super.isa, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v164 = -[objc_class trailingAnchor](imageView.super.super.isa, "trailingAnchor");
        v165 = objc_msgSend(v163, "trailingAnchor");
        v166 = objc_msgSend(v164, "constraintEqualToAnchor:", v165);

        objc_msgSend(v166, "setConstant:", -8.0);
        v167 = v166;
        objc_msgSend(v167, "setActive:", 1);

      }
      v168 = -[objc_class superview](imageView.super.super.isa, "superview");
      if (v168)
        goto LABEL_70;
      goto LABEL_73;
    case 3:
      v169 = -[objc_class superview](imageView.super.super.isa, "superview");
      if (v169)
      {
        v170 = v169;
        -[objc_class setTranslatesAutoresizingMaskIntoConstraints:](imageView.super.super.isa, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v171 = -[objc_class topAnchor](imageView.super.super.isa, "topAnchor");
        v172 = objc_msgSend(v170, "topAnchor");
        v173 = objc_msgSend(v171, "constraintEqualToAnchor:", v172);

        objc_msgSend(v173, "setConstant:", 5.0);
        v174 = v173;
        objc_msgSend(v174, "setActive:", 1);

      }
      v175 = -[objc_class superview](imageView.super.super.isa, "superview");
      if (v175)
      {
        v176 = v175;
        -[objc_class setTranslatesAutoresizingMaskIntoConstraints:](imageView.super.super.isa, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v177 = -[objc_class bottomAnchor](imageView.super.super.isa, "bottomAnchor");
        v178 = objc_msgSend(v176, "bottomAnchor");
        v179 = objc_msgSend(v177, "constraintEqualToAnchor:", v178);

        if (v179)
        {
          objc_msgSend(v179, "setConstant:", -5.0);
          v180 = v179;
          objc_msgSend(v180, "setActive:", 1);

        }
      }
      v181 = -[objc_class superview](imageView.super.super.isa, "superview");
      if (v181)
      {
        v182 = v181;
        -[objc_class setTranslatesAutoresizingMaskIntoConstraints:](imageView.super.super.isa, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v183 = -[objc_class trailingAnchor](imageView.super.super.isa, "trailingAnchor");
        v184 = objc_msgSend(v182, "trailingAnchor");
        v185 = objc_msgSend(v183, "constraintEqualToAnchor:", v184);

        objc_msgSend(v185, "setConstant:", -5.0);
        v186 = v185;
        objc_msgSend(v186, "setActive:", 1);

      }
      v187 = -[objc_class superview](imageView.super.super.isa, "superview");
      if (v187)
      {
        v188 = v187;
        -[objc_class setTranslatesAutoresizingMaskIntoConstraints:](imageView.super.super.isa, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v189 = -[objc_class leadingAnchor](imageView.super.super.isa, "leadingAnchor");
        v190 = objc_msgSend(v188, "leadingAnchor");
        v191 = objc_msgSend(v189, "constraintEqualToAnchor:", v190);

        objc_msgSend(v191, "setConstant:", 5.0);
        v192 = v191;
        objc_msgSend(v192, "setActive:", 1);

      }
      v168 = -[objc_class superview](imageView.super.super.isa, "superview");
      if (v168)
      {
LABEL_70:
        v193 = v168;
        -[objc_class setTranslatesAutoresizingMaskIntoConstraints:](imageView.super.super.isa, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v194 = -[objc_class leadingAnchor](imageView.super.super.isa, "leadingAnchor");
        v195 = objc_msgSend(v193, "leadingAnchor");
        v196 = objc_msgSend(v194, "constraintEqualToAnchor:", v195);

        objc_msgSend(v196, "setConstant:", 8.0);
        if (v196)
        {
          v197 = v196;
          objc_msgSend(v197, "setActive:", 1);

        }
      }
      goto LABEL_73;
    case 4:
    case 6:
    case 7:
      v25 = -[objc_class superview](imageView.super.super.isa, "superview");
      if (v25)
      {
        v26 = v25;
        -[objc_class setTranslatesAutoresizingMaskIntoConstraints:](imageView.super.super.isa, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v27 = -[objc_class topAnchor](imageView.super.super.isa, "topAnchor");
        v28 = objc_msgSend(v26, "topAnchor");
        v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

        objc_msgSend(v29, "setConstant:", 8.0);
        v30 = v29;
        objc_msgSend(v30, "setActive:", 1);

      }
      objc_msgSend(v498, "frame");
      v32 = v31 + -16.0;
      -[objc_class setTranslatesAutoresizingMaskIntoConstraints:](imageView.super.super.isa, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v33 = -[objc_class widthAnchor](imageView.super.super.isa, "widthAnchor");
      v34 = objc_msgSend(v33, "constraintEqualToConstant:", v32);

      objc_msgSend(v34, "setActive:", 1);
      v35 = -[objc_class superview](imageView.super.super.isa, "superview");
      if (v35)
      {
        v36 = v35;
        -[objc_class setTranslatesAutoresizingMaskIntoConstraints:](imageView.super.super.isa, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v37 = -[objc_class bottomAnchor](imageView.super.super.isa, "bottomAnchor");
        v38 = objc_msgSend(v36, "bottomAnchor");
        v39 = objc_msgSend(v37, "constraintEqualToAnchor:", v38);

        if (v39)
        {
          objc_msgSend(v39, "setConstant:", -8.0);
          v40 = v39;
          objc_msgSend(v40, "setActive:", 1);

        }
      }
      LODWORD(v496) = v22;
      v41 = -[objc_class superview](imageView.super.super.isa, "superview");
      if (v41)
      {
        v42 = v41;
        -[objc_class setTranslatesAutoresizingMaskIntoConstraints:](imageView.super.super.isa, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v43 = -[objc_class leadingAnchor](imageView.super.super.isa, "leadingAnchor");
        v44 = objc_msgSend(v42, "leadingAnchor");
        v45 = objc_msgSend(v43, "constraintEqualToAnchor:", v44);

        objc_msgSend(v45, "setConstant:", 8.0);
        v46 = v45;
        objc_msgSend(v46, "setActive:", 1);

      }
      v47 = v498;
      v48 = *(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)v498) + 0xE8);
      v49 = (void *)v48();
      v50 = (void *)((uint64_t (*)(void))v499)();
      objc_msgSend(v49, "addArrangedSubview:", v50);

      v51 = (void *)v48();
      v52 = (void *)((uint64_t (*)(void))v493)();
      objc_msgSend(v51, "addArrangedSubview:", v52);

      v53 = (void *)v48();
      objc_msgSend(v53, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

      v54 = (void *)v48();
      objc_msgSend(v47, "addSubview:", v54);

      v55 = (void *)v48();
      objc_msgSend(v55, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v56 = objc_msgSend(v55, "leadingAnchor");
      v57 = -[objc_class trailingAnchor](imageView.super.super.isa, "trailingAnchor");
      v58 = &selRef_genericAvatarFor_pointSize_completion_;
      v59 = objc_msgSend(v56, "constraintEqualToAnchor:", v57);

      objc_msgSend(v59, "setConstant:", 8.0);
      objc_msgSend(v59, "setActive:", 1);

      v60 = (void *)v48();
      v61 = objc_msgSend(v60, "superview");
      if (v61)
      {
        v62 = v61;
        objc_msgSend(v60, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v63 = objc_msgSend(v60, "centerYAnchor");
        v64 = objc_msgSend(v62, "centerYAnchor");
        v65 = objc_msgSend(v63, "constraintEqualToAnchor:", v64);

        objc_msgSend(v65, "setConstant:", 0.0);
        v24 = off_10020E000;
        if (v65)
        {
          v65 = v65;
          objc_msgSend(v65, "setActive:", 1);

          v60 = v65;
        }

        v58 = &selRef_genericAvatarFor_pointSize_completion_;
      }
      else
      {
        v65 = 0;
        v62 = v60;
        v24 = off_10020E000;
      }

      v81 = (void *)v48();
      v82 = objc_msgSend(v81, "superview");
      if (v82)
      {
        v83 = v82;
        objc_msgSend(v81, v58[47], 0);
        v84 = objc_msgSend(v81, "trailingAnchor");
        v85 = objc_msgSend(v83, "trailingAnchor");
        v86 = objc_msgSend(v84, "constraintEqualToAnchor:", v85);

        objc_msgSend(v86, "setConstant:", -8.0);
        v87 = MKPolyline_ptr;
        if (v86)
        {
          v88 = v86;
          objc_msgSend(v88, "setActive:", 1);

          v89 = v498;
          if ((v496 & 0xFE) != 6)
            goto LABEL_30;
          goto LABEL_76;
        }

        v89 = v498;
      }
      else
      {
        v83 = v81;
        v89 = v498;
        v87 = MKPolyline_ptr;
      }
      v198 = (char)v496;

      if ((v198 & 0xFE) != 6)
      {
LABEL_30:
        v90 = (void *)objc_opt_self(v87[26]);
        v91 = objc_msgSend(v90, "mainBundle");
        v509._countAndFlagsBits = 0xD000000000000018;
        v509._object = (void *)0x80000001001A99D0;
        v92._countAndFlagsBits = 16421;
        v92._object = (void *)0xE200000000000000;
        v93._countAndFlagsBits = 0;
        v93._object = (void *)0xE000000000000000;
        v94 = NSLocalizedString(_:tableName:bundle:value:comment:)(v92, (Swift::String_optional)0, (NSBundle)v91, v93, v509);

        v95 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        v96 = swift_allocObject(v95, 72, 7);
        v499 = xmmword_10019ED20;
        *(_OWORD *)(v96 + 16) = xmmword_10019ED20;
        *(_QWORD *)(v96 + 56) = &type metadata for String;
        v97 = lazy protocol witness table accessor for type String and conformance String();
        *(_QWORD *)(v96 + 64) = v97;
        v98 = v494;
        *(_QWORD *)(v96 + 32) = v495;
        *(_QWORD *)(v96 + 40) = v98;
        swift_bridgeObjectRetain(v98);
        static String.localizedStringWithFormat(_:_:)(v94._countAndFlagsBits, v94._object, v96);
        v100 = v99;
        swift_bridgeObjectRelease(v94._object);
        swift_bridgeObjectRelease(v96);
        v101 = (uint64_t *)((char *)v24[105] + (_QWORD)v89);
        v103 = *v101;
        v102 = v101[1];
        if ((*v101 || v102 != 0xE000000000000000)
          && (_stringCompareWithSmolCheck(_:_:expecting:)(v103, v102, 0, 0xE000000000000000, 0) & 1) == 0)
        {
          v104 = objc_msgSend(v90, "mainBundle", swift_bridgeObjectRelease(v100).n128_f64[0]);
          v510._countAndFlagsBits = 0xD000000000000018;
          v510._object = (void *)0x80000001001A99B0;
          v105._countAndFlagsBits = 16421;
          v105._object = (void *)0xE200000000000000;
          v106._countAndFlagsBits = 0;
          v106._object = (void *)0xE000000000000000;
          v107 = NSLocalizedString(_:tableName:bundle:value:comment:)(v105, (Swift::String_optional)0, (NSBundle)v104, v106, v510);

          v108 = swift_allocObject(v95, 72, 7);
          *(_OWORD *)(v108 + 16) = v499;
          *(_QWORD *)(v108 + 56) = &type metadata for String;
          *(_QWORD *)(v108 + 64) = v97;
          *(_QWORD *)(v108 + 32) = v103;
          *(_QWORD *)(v108 + 40) = v102;
          swift_bridgeObjectRetain(v102);
          static String.localizedStringWithFormat(_:_:)(v107._countAndFlagsBits, v107._object, v108);
          v100 = v109;
          swift_bridgeObjectRelease(v107._object);
          swift_bridgeObjectRelease(v108);
        }
        goto LABEL_148;
      }
LABEL_76:
      v200 = v494;
      v199 = v495;
      if (!v492 && v491 == 0xE000000000000000
        || (_stringCompareWithSmolCheck(_:_:expecting:)(v492, v491, 0, 0xE000000000000000, 0) & 1) != 0
        || !v199 && v200 == 0xE000000000000000
        || (_stringCompareWithSmolCheck(_:_:expecting:)(v199, v200, 0, 0xE000000000000000, 0) & 1) != 0)
      {
        if (!v199 && v200 == 0xE000000000000000
          || (_stringCompareWithSmolCheck(_:_:expecting:)(v199, v200, 0, 0xE000000000000000, 0) & 1) != 0)
        {
          v201 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
          v514._countAndFlagsBits = 0xD000000000000018;
          v514._object = (void *)0x80000001001AE910;
          v202._countAndFlagsBits = 16421;
          v202._object = (void *)0xE200000000000000;
          v203._countAndFlagsBits = 0;
          v203._object = (void *)0xE000000000000000;
          v204 = NSLocalizedString(_:tableName:bundle:value:comment:)(v202, (Swift::String_optional)0, (NSBundle)v201, v203, v514);
          countAndFlagsBits = v204._countAndFlagsBits;
          object = v204._object;

          v207 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
          v208 = swift_allocObject(v207, 72, 7);
          *(_OWORD *)(v208 + 16) = xmmword_10019ED20;
          v210 = v506;
          v209 = v507;
          *(_QWORD *)(v208 + 56) = &type metadata for String;
          *(_QWORD *)(v208 + 64) = lazy protocol witness table accessor for type String and conformance String();
          *(_QWORD *)(v208 + 32) = v210;
          *(_QWORD *)(v208 + 40) = v209;
          goto LABEL_137;
        }
        v211 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v515._countAndFlagsBits = 0xD00000000000001DLL;
        v515._object = (void *)0x80000001001AE8F0;
        v212._countAndFlagsBits = 0x402520B7C2204025;
        v212._object = (void *)0xA800000000000000;
        v213._countAndFlagsBits = 0;
        v213._object = (void *)0xE000000000000000;
        v214 = NSLocalizedString(_:tableName:bundle:value:comment:)(v212, (Swift::String_optional)0, (NSBundle)v211, v213, v515);
        countAndFlagsBits = v214._countAndFlagsBits;
        object = v214._object;

        v215 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        v208 = swift_allocObject(v215, 112, 7);
        *(_OWORD *)(v208 + 16) = xmmword_10019EEE0;
        *(_QWORD *)(v208 + 56) = &type metadata for String;
        v216 = lazy protocol witness table accessor for type String and conformance String();
        *(_QWORD *)(v208 + 32) = v199;
        *(_QWORD *)(v208 + 40) = v200;
        v217 = v506;
        v209 = v507;
        *(_QWORD *)(v208 + 96) = &type metadata for String;
        *(_QWORD *)(v208 + 104) = v216;
        *(_QWORD *)(v208 + 64) = v216;
        *(_QWORD *)(v208 + 72) = v217;
        *(_QWORD *)(v208 + 80) = v209;
        v218 = v200;
      }
      else
      {
        v317 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v519._countAndFlagsBits = 0xD000000000000046;
        v519._object = (void *)0x80000001001AE830;
        v318._object = (void *)0x80000001001AE810;
        v318._countAndFlagsBits = 0x1000000000000012;
        v319._countAndFlagsBits = 0;
        v319._object = (void *)0xE000000000000000;
        v320 = NSLocalizedString(_:tableName:bundle:value:comment:)(v318, (Swift::String_optional)0, (NSBundle)v317, v319, v519);
        countAndFlagsBits = v320._countAndFlagsBits;
        object = v320._object;

        v321 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        v208 = swift_allocObject(v321, 152, 7);
        *(_OWORD *)(v208 + 16) = xmmword_10019F2D0;
        *(_QWORD *)(v208 + 56) = &type metadata for String;
        v322 = lazy protocol witness table accessor for type String and conformance String();
        *(_QWORD *)(v208 + 32) = v199;
        *(_QWORD *)(v208 + 40) = v200;
        v323 = v506;
        v209 = v507;
        *(_QWORD *)(v208 + 96) = &type metadata for String;
        *(_QWORD *)(v208 + 104) = v322;
        *(_QWORD *)(v208 + 64) = v322;
        *(_QWORD *)(v208 + 72) = v323;
        *(_QWORD *)(v208 + 80) = v209;
        *(_QWORD *)(v208 + 136) = &type metadata for String;
        *(_QWORD *)(v208 + 144) = v322;
        v324 = v491;
        *(_QWORD *)(v208 + 112) = v492;
        *(_QWORD *)(v208 + 120) = v324;
        swift_bridgeObjectRetain(v200);
        v218 = v324;
      }
      swift_bridgeObjectRetain(v218);
LABEL_137:
      swift_bridgeObjectRetain(v209);
      static String.localizedStringWithFormat(_:_:)(countAndFlagsBits, object, v208);
      v100 = v325;
      swift_bridgeObjectRelease(object);
      swift_bridgeObjectRelease(v208);
      v327 = *(_QWORD *)&v89[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_distance];
      v326 = *(_QWORD *)&v89[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_distance + 8];
      v328 = HIBYTE(v326) & 0xF;
      if ((v326 & 0x2000000000000000) == 0)
        v328 = v327 & 0xFFFFFFFFFFFFLL;
      if (!v328)
      {
        v24 = off_10020E000;
        v23 = MKPolyline_ptr;
        goto LABEL_149;
      }
      swift_bridgeObjectRelease(v100);
      if ((v200 & 0x2000000000000000) != 0)
        v329 = HIBYTE(v200) & 0xF;
      else
        v329 = (unint64_t)v199 & 0xFFFFFFFFFFFFLL;
      v330 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      if (v329)
      {
        v520._countAndFlagsBits = 0xD000000000000030;
        v520._object = (void *)0x80000001001AE880;
        v331._countAndFlagsBits = 0x402520B7C2204025;
        v331._object = (void *)0xAE00402520B7C220;
        v332._countAndFlagsBits = 0;
        v332._object = (void *)0xE000000000000000;
        v333 = NSLocalizedString(_:tableName:bundle:value:comment:)(v331, (Swift::String_optional)0, (NSBundle)v330, v332, v520);

        v334 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        v335 = swift_allocObject(v334, 152, 7);
        *(_OWORD *)(v335 + 16) = xmmword_10019F2D0;
        *(_QWORD *)(v335 + 56) = &type metadata for String;
        v336 = lazy protocol witness table accessor for type String and conformance String();
        *(_QWORD *)(v335 + 32) = v327;
        *(_QWORD *)(v335 + 40) = v326;
        v337 = v506;
        v338 = v507;
        *(_QWORD *)(v335 + 96) = &type metadata for String;
        *(_QWORD *)(v335 + 104) = v336;
        *(_QWORD *)(v335 + 64) = v336;
        *(_QWORD *)(v335 + 72) = v337;
        *(_QWORD *)(v335 + 80) = v338;
        *(_QWORD *)(v335 + 136) = &type metadata for String;
        *(_QWORD *)(v335 + 144) = v336;
        *(_QWORD *)(v335 + 112) = v199;
        *(_QWORD *)(v335 + 120) = v200;
        swift_bridgeObjectRetain(v200);
        swift_bridgeObjectRetain(v326);
        swift_bridgeObjectRetain(v338);
        static String.localizedStringWithFormat(_:_:)(v333._countAndFlagsBits, v333._object, v335);
        v100 = v339;
        v340 = v333._object;
      }
      else
      {
        v521._countAndFlagsBits = 0xD000000000000025;
        v521._object = (void *)0x80000001001AE8C0;
        v341._countAndFlagsBits = 0x402520B7C2204025;
        v341._object = (void *)0xA800000000000000;
        v342._countAndFlagsBits = 0;
        v342._object = (void *)0xE000000000000000;
        v343 = NSLocalizedString(_:tableName:bundle:value:comment:)(v341, (Swift::String_optional)0, (NSBundle)v330, v342, v521);

        v344 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        v335 = swift_allocObject(v344, 112, 7);
        *(_OWORD *)(v335 + 16) = xmmword_10019EEE0;
        *(_QWORD *)(v335 + 56) = &type metadata for String;
        v345 = lazy protocol witness table accessor for type String and conformance String();
        *(_QWORD *)(v335 + 32) = v327;
        *(_QWORD *)(v335 + 40) = v326;
        v346 = v506;
        v347 = v507;
        *(_QWORD *)(v335 + 96) = &type metadata for String;
        *(_QWORD *)(v335 + 104) = v345;
        *(_QWORD *)(v335 + 64) = v345;
        *(_QWORD *)(v335 + 72) = v346;
        *(_QWORD *)(v335 + 80) = v347;
        swift_bridgeObjectRetain(v326);
        swift_bridgeObjectRetain(v347);
        static String.localizedStringWithFormat(_:_:)(v343._countAndFlagsBits, v343._object, v335);
        v100 = v348;
        v340 = v343._object;
      }
      swift_bridgeObjectRelease(v340);
      swift_bridgeObjectRelease(v335);
      v24 = off_10020E000;
LABEL_148:
      v23 = MKPolyline_ptr;
LABEL_149:
      v349 = objc_allocWithZone((Class)NSMutableAttributedString);
      v350 = String._bridgeToObjectiveC()();
      v351 = objc_msgSend(v349, "initWithString:", v350, swift_bridgeObjectRelease(v100).n128_f64[0]);

      v496 = (id)objc_opt_self(v23[26]);
      v352 = objc_msgSend(v496, "mainBundle");
      v487 = (void *)0x80000001001A98D0;
      v522._object = (void *)0x80000001001A98D0;
      v353._countAndFlagsBits = 16421;
      v353._object = (void *)0xE200000000000000;
      v354._countAndFlagsBits = 0;
      v354._object = (void *)0xE000000000000000;
      v522._countAndFlagsBits = 0xD000000000000010;
      v355 = NSLocalizedString(_:tableName:bundle:value:comment:)(v353, (Swift::String_optional)0, (NSBundle)v352, v354, v522);

      v356 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v357 = swift_allocObject(v356, 72, 7);
      v358 = v89;
      v359 = (_QWORD *)v357;
      v499 = xmmword_10019ED20;
      *(_OWORD *)(v357 + 16) = xmmword_10019ED20;
      v360 = (void ***)((char *)v24[105] + (_QWORD)v358);
      v361 = v358;
      v363 = v360[1];
      v482 = *v360;
      v362 = v482;
      *(_QWORD *)(v357 + 56) = &type metadata for String;
      v364 = (void *)lazy protocol witness table accessor for type String and conformance String();
      v359[8] = v364;
      v359[4] = v362;
      v359[5] = v363;
      v481 = (uint64_t)v363;
      swift_bridgeObjectRetain(v363);
      static String.localizedStringWithFormat(_:_:)(v355._countAndFlagsBits, v355._object, v359);
      v366 = v365;
      swift_bridgeObjectRelease(v355._object);
      v367 = objc_msgSend(v351, "mutableString", swift_bridgeObjectRelease(v359).n128_f64[0]);
      v368 = String._bridgeToObjectiveC()();
      objc_msgSend(v367, "rangeOfString:options:", v368, 1);

      v490 = (uint64_t)NSForegroundColorAttributeName;
      objc_msgSend(v351, "addAttribute:value:range:");
      *(_QWORD *)&v369 = swift_bridgeObjectRelease(v366).n128_u64[0];
      v370 = *(_QWORD *)&v361[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_timeYellow];
      v371 = v496;
      v372 = objc_msgSend(v496, "mainBundle", v369);
      v483 = (void *)0x80000001001A98F0;
      v523._object = (void *)0x80000001001A98F0;
      v373._countAndFlagsBits = 16421;
      v373._object = (void *)0xE200000000000000;
      v374._countAndFlagsBits = 0;
      v374._object = (void *)0xE000000000000000;
      v523._countAndFlagsBits = 0xD000000000000010;
      v375 = NSLocalizedString(_:tableName:bundle:value:comment:)(v373, (Swift::String_optional)0, (NSBundle)v372, v374, v523);

      v376 = v356;
      v486 = v356;
      v377 = swift_allocObject(v356, 72, 7);
      *(_OWORD *)(v377 + 16) = v499;
      v379 = v506;
      v378 = v507;
      *(_QWORD *)(v377 + 56) = &type metadata for String;
      *(_QWORD *)(v377 + 64) = v364;
      *(_QWORD *)(v377 + 32) = v379;
      *(_QWORD *)(v377 + 40) = v378;
      swift_bridgeObjectRetain(v378);
      static String.localizedStringWithFormat(_:_:)(v375._countAndFlagsBits, v375._object, v377);
      v381 = v380;
      swift_bridgeObjectRelease(v375._object);
      *(_QWORD *)&v382 = swift_bridgeObjectRelease(v377).n128_u64[0];
      v479 = v351;
      v383 = objc_msgSend(v351, "mutableString", v382);
      v384 = String._bridgeToObjectiveC()();
      v385 = objc_msgSend(v383, "rangeOfString:options:", v384, 1);
      v387 = v386;

      v388 = v351;
      v389 = v490;
      objc_msgSend(v388, "addAttribute:value:range:", v490, v370, v385, v387);
      *(_QWORD *)&v390 = swift_bridgeObjectRelease(v381).n128_u64[0];
      v391 = v498;
      v480._object = *(void **)&v498[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_movePink];
      v392 = objc_msgSend(v371, "mainBundle", v390);
      v524._object = (void *)0x80000001001A9910;
      v393._countAndFlagsBits = 16421;
      v393._object = (void *)0xE200000000000000;
      v394._countAndFlagsBits = 0;
      v394._object = (void *)0xE000000000000000;
      v524._countAndFlagsBits = 0xD000000000000010;
      v395 = NSLocalizedString(_:tableName:bundle:value:comment:)(v393, (Swift::String_optional)0, (NSBundle)v392, v394, v524);

      v396 = swift_allocObject(v376, 72, 7);
      *(_OWORD *)(v396 + 16) = v499;
      *(_QWORD *)(v396 + 56) = &type metadata for String;
      *(_QWORD *)(v396 + 64) = v364;
      *(_QWORD *)(v396 + 32) = v495;
      v397 = v494;
      *(_QWORD *)(v396 + 40) = v494;
      swift_bridgeObjectRetain(v397);
      static String.localizedStringWithFormat(_:_:)(v395._countAndFlagsBits, v395._object, v396);
      v399 = v398;
      swift_bridgeObjectRelease(v395._object);
      *(_QWORD *)&v400 = swift_bridgeObjectRelease(v396).n128_u64[0];
      v401 = v479;
      v402 = objc_msgSend(v479, "mutableString", v400);
      v403 = String._bridgeToObjectiveC()();
      v404 = objc_msgSend(v402, "rangeOfString:options:", v403, 1);
      v406 = v405;

      v407 = v401;
      objc_msgSend(v401, "addAttribute:value:range:", v389, v480._object, v404, v406);
      *(_QWORD *)&v408 = swift_bridgeObjectRelease(v399).n128_u64[0];
      v409 = *(_QWORD *)&v391[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_heartRed];
      v410 = objc_msgSend(v371, "mainBundle", v408);
      v525._countAndFlagsBits = 0xD000000000000012;
      v480._countAndFlagsBits = 0xD000000000000012;
      v480._object = (void *)0x80000001001AE7F0;
      v525._object = (void *)0x80000001001AE7F0;
      v411._countAndFlagsBits = 0x475641204025;
      v411._object = (void *)0xE600000000000000;
      v412._countAndFlagsBits = 0;
      v412._object = (void *)0xE000000000000000;
      v413 = NSLocalizedString(_:tableName:bundle:value:comment:)(v411, (Swift::String_optional)0, (NSBundle)v410, v412, v525);

      v414 = v486;
      v415 = swift_allocObject(v486, 72, 7);
      *(_OWORD *)(v415 + 16) = v499;
      *(_QWORD *)(v415 + 56) = &type metadata for String;
      *(_QWORD *)(v415 + 64) = v364;
      v489 = v364;
      *(_QWORD *)(v415 + 32) = v492;
      v416 = v491;
      *(_QWORD *)(v415 + 40) = v491;
      swift_bridgeObjectRetain(v416);
      static String.localizedStringWithFormat(_:_:)(v413._countAndFlagsBits, v413._object, v415);
      v418 = v417;
      swift_bridgeObjectRelease(v413._object);
      v419 = v407;
      v420 = objc_msgSend(v407, "mutableString", swift_bridgeObjectRelease(v415).n128_f64[0]);
      v421 = String._bridgeToObjectiveC()();
      v422 = objc_msgSend(v420, "rangeOfString:options:", v421, 1);
      v424 = v423;

      objc_msgSend(v419, "addAttribute:value:range:", v490, v409, v422, v424);
      swift_bridgeObjectRelease(v418);
      v425 = specialized static MOSuggestionTheme.Fonts.footnoteEmphFontSmallCaps()();
      v426 = objc_msgSend(v371, "mainBundle");
      v526._object = v487;
      v427._countAndFlagsBits = 16421;
      v427._object = (void *)0xE200000000000000;
      v428._countAndFlagsBits = 0;
      v428._object = (void *)0xE000000000000000;
      v526._countAndFlagsBits = 0xD000000000000010;
      v429 = NSLocalizedString(_:tableName:bundle:value:comment:)(v427, (Swift::String_optional)0, (NSBundle)v426, v428, v526);

      v430 = swift_allocObject(v414, 72, 7);
      *(_OWORD *)(v430 + 16) = v499;
      aBlock = v482;
      v501 = v481;
      v431 = v485;
      CharacterSet.init(charactersIn:)(0x3736353433323130, 0xEC0000002C2E3938);
      v490 = lazy protocol witness table accessor for type String and conformance String();
      v432 = StringProtocol.trimmingCharacters(in:)(v431, &type metadata for String, v490);
      v434 = v433;
      v488 = *(_QWORD *)(v488 + 8);
      ((void (*)(char *, uint64_t))v488)(v431, v497);
      *(_QWORD *)(v430 + 56) = &type metadata for String;
      *(_QWORD *)(v430 + 64) = v364;
      *(_QWORD *)(v430 + 32) = v432;
      *(_QWORD *)(v430 + 40) = v434;
      static String.localizedStringWithFormat(_:_:)(v429._countAndFlagsBits, v429._object, v430);
      v436 = v435;
      swift_bridgeObjectRelease(v429._object);
      v437 = objc_msgSend(v419, "mutableString", swift_bridgeObjectRelease(v430).n128_f64[0]);
      v438 = String._bridgeToObjectiveC()();
      objc_msgSend(v437, "rangeOfString:options:", v438, 1);

      v487 = NSFontAttributeName;
      objc_msgSend(v419, "addAttribute:value:range:");

      swift_bridgeObjectRelease(v436);
      v439 = specialized static MOSuggestionTheme.Fonts.footnoteEmphFontSmallCaps()();
      v440 = objc_msgSend(v496, "mainBundle");
      v527._object = v483;
      v441._countAndFlagsBits = 16421;
      v441._object = (void *)0xE200000000000000;
      v442._countAndFlagsBits = 0;
      v442._object = (void *)0xE000000000000000;
      v527._countAndFlagsBits = 0xD000000000000010;
      v443 = NSLocalizedString(_:tableName:bundle:value:comment:)(v441, (Swift::String_optional)0, (NSBundle)v440, v442, v527);

      v444 = v486;
      v445 = swift_allocObject(v486, 72, 7);
      *(_OWORD *)(v445 + 16) = v499;
      aBlock = v495;
      v501 = v494;
      CharacterSet.init(charactersIn:)(0x3736353433323130, 0xEC0000002C2E3938);
      v446 = StringProtocol.trimmingCharacters(in:)(v431, &type metadata for String, v490);
      v448 = v447;
      ((void (*)(char *, uint64_t))v488)(v431, v497);
      v449 = v489;
      *(_QWORD *)(v445 + 56) = &type metadata for String;
      *(_QWORD *)(v445 + 64) = v449;
      *(_QWORD *)(v445 + 32) = v446;
      *(_QWORD *)(v445 + 40) = v448;
      static String.localizedStringWithFormat(_:_:)(v443._countAndFlagsBits, v443._object, v445);
      v451 = v450;
      swift_bridgeObjectRelease(v443._object);
      v452 = objc_msgSend(v419, "mutableString", swift_bridgeObjectRelease(v445).n128_f64[0]);
      v453 = String._bridgeToObjectiveC()();
      v454 = objc_msgSend(v452, "rangeOfString:options:", v453, 1);
      v456 = v455;

      objc_msgSend(v419, "addAttribute:value:range:", v487, v439, v454, v456);
      swift_bridgeObjectRelease(v451);
      v457 = specialized static MOSuggestionTheme.Fonts.footnoteEmphFontSmallCaps()();
      v458 = objc_msgSend(v496, "mainBundle");
      v459._countAndFlagsBits = 0x475641204025;
      v459._object = (void *)0xE600000000000000;
      v460._countAndFlagsBits = 0;
      v460._object = (void *)0xE000000000000000;
      v461 = NSLocalizedString(_:tableName:bundle:value:comment:)(v459, (Swift::String_optional)0, (NSBundle)v458, v460, v480);

      v462 = swift_allocObject(v444, 72, 7);
      *(_OWORD *)(v462 + 16) = v499;
      aBlock = v492;
      v501 = v491;
      CharacterSet.init(charactersIn:)(0x3736353433323130, 0xEC0000002C2E3938);
      v463 = StringProtocol.trimmingCharacters(in:)(v431, &type metadata for String, v490);
      v465 = v464;
      ((void (*)(char *, uint64_t))v488)(v431, v497);
      v466 = v489;
      *(_QWORD *)(v462 + 56) = &type metadata for String;
      *(_QWORD *)(v462 + 64) = v466;
      *(_QWORD *)(v462 + 32) = v463;
      *(_QWORD *)(v462 + 40) = v465;
      static String.localizedStringWithFormat(_:_:)(v461._countAndFlagsBits, v461._object, v462);
      v468 = v467;
      swift_bridgeObjectRelease(v461._object);
      v469 = objc_msgSend(v419, "mutableString", swift_bridgeObjectRelease(v462).n128_f64[0]);
      v470 = String._bridgeToObjectiveC()();
      v471 = objc_msgSend(v469, "rangeOfString:options:", v470, 1);
      v473 = v472;

      objc_msgSend(v419, "addAttribute:value:range:", v487, v457, v471, v473);
      v474 = swift_bridgeObjectRelease(v468);
      v475 = v498;
      v476 = (void *)v493(v474);
      objc_msgSend(v476, "setAttributedText:", v419);

      (*(void (**)(void))((swift_isaMask & *v475) + 0x110))();
      v477 = v507;
      swift_release(v484);
      swift_bridgeObjectRelease(v477);
      return;
    case 5:
    case 8:
      LODWORD(v496) = v22;
      v489 = (id)objc_opt_self(NSBundle);
      v66 = objc_msgSend(v489, "mainBundle");
      v508._countAndFlagsBits = 0xD000000000000018;
      v508._object = (void *)0x80000001001AE910;
      v67._countAndFlagsBits = 16421;
      v67._object = (void *)0xE200000000000000;
      v68._countAndFlagsBits = 0;
      v68._object = (void *)0xE000000000000000;
      v69 = NSLocalizedString(_:tableName:bundle:value:comment:)(v67, (Swift::String_optional)0, (NSBundle)v66, v68, v508);

      v487 = (void *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v70 = swift_allocObject(v487, 72, 7);
      *(_OWORD *)(v70 + 16) = xmmword_10019ED20;
      v72 = v506;
      v71 = v507;
      *(_QWORD *)(v70 + 56) = &type metadata for String;
      v73 = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v70 + 64) = v73;
      *(_QWORD *)(v70 + 32) = v72;
      *(_QWORD *)(v70 + 40) = v71;
      swift_bridgeObjectRetain(v71);
      v490 = static String.localizedStringWithFormat(_:_:)(v69._countAndFlagsBits, v69._object, v70);
      v75 = v74;
      swift_bridgeObjectRelease(v69._object);
      v76 = swift_bridgeObjectRelease(v70);
      v77 = v495;
      if (v495)
        v78 = 0;
      else
        v78 = v494 == 0xE000000000000000;
      v79 = v78;
      if (v78)
      {
        v80 = v498;
      }
      else
      {
        v110 = v494;
        v111 = _stringCompareWithSmolCheck(_:_:expecting:)(v495, v494, 0, 0xE000000000000000, 0);
        v80 = v498;
        if ((v111 & 1) == 0)
        {
          v112 = v77;
          *(_QWORD *)&v113 = swift_bridgeObjectRelease(v75).n128_u64[0];
          v114 = objc_msgSend(v489, "mainBundle", v113);
          v511._countAndFlagsBits = 0xD000000000000021;
          v511._object = (void *)0x80000001001A9930;
          v115._countAndFlagsBits = 0x402520B7C2204025;
          v115._object = (void *)0xA800000000000000;
          v116._countAndFlagsBits = 0;
          v116._object = (void *)0xE000000000000000;
          v117 = NSLocalizedString(_:tableName:bundle:value:comment:)(v115, (Swift::String_optional)0, (NSBundle)v114, v116, v511);

          v118 = swift_allocObject(v487, 112, 7);
          *(_OWORD *)(v118 + 16) = xmmword_10019EEE0;
          *(_QWORD *)(v118 + 56) = &type metadata for String;
          *(_QWORD *)(v118 + 64) = v73;
          *(_QWORD *)(v118 + 32) = v112;
          *(_QWORD *)(v118 + 40) = v110;
          v119 = v506;
          v120 = v507;
          *(_QWORD *)(v118 + 96) = &type metadata for String;
          *(_QWORD *)(v118 + 104) = v73;
          *(_QWORD *)(v118 + 72) = v119;
          *(_QWORD *)(v118 + 80) = v120;
          swift_bridgeObjectRetain(v110);
          swift_bridgeObjectRetain(v120);
          v490 = static String.localizedStringWithFormat(_:_:)(v117._countAndFlagsBits, v117._object, v118);
          v75 = v121;
          swift_bridgeObjectRelease(v117._object);
          v76 = swift_bridgeObjectRelease(v118);
          v24 = off_10020E000;
        }
      }
      v122 = (uint64_t *)((char *)v24[105] + (_QWORD)v80);
      v123 = *v122;
      v124 = v122[1];
      if (*v122 || v124 != 0xE000000000000000)
      {
        v125 = &selRef_genericAvatarFor_pointSize_completion_;
        if ((_stringCompareWithSmolCheck(_:_:expecting:)(v123, v124, 0, 0xE000000000000000, 0) & 1) == 0)
        {
          *(_QWORD *)&v126 = swift_bridgeObjectRelease(v75).n128_u64[0];
          v127 = objc_msgSend(v489, "mainBundle", v126);
          v512._countAndFlagsBits = 0xD000000000000021;
          v512._object = (void *)0x80000001001A99F0;
          v128._countAndFlagsBits = 0x402520B7C2204025;
          v128._object = (void *)0xA800000000000000;
          v129._countAndFlagsBits = 0;
          v129._object = (void *)0xE000000000000000;
          v130 = NSLocalizedString(_:tableName:bundle:value:comment:)(v128, (Swift::String_optional)0, (NSBundle)v127, v129, v512);

          v131 = swift_allocObject(v487, 112, 7);
          *(_OWORD *)(v131 + 16) = xmmword_10019EEE0;
          *(_QWORD *)(v131 + 56) = &type metadata for String;
          *(_QWORD *)(v131 + 64) = v73;
          *(_QWORD *)(v131 + 32) = v123;
          *(_QWORD *)(v131 + 40) = v124;
          v132 = v506;
          v133 = v507;
          *(_QWORD *)(v131 + 96) = &type metadata for String;
          *(_QWORD *)(v131 + 104) = v73;
          *(_QWORD *)(v131 + 72) = v132;
          *(_QWORD *)(v131 + 80) = v133;
          swift_bridgeObjectRetain(v124);
          swift_bridgeObjectRetain(v133);
          v490 = static String.localizedStringWithFormat(_:_:)(v130._countAndFlagsBits, v130._object, v131);
          v75 = v134;
          v80 = v498;
          swift_bridgeObjectRelease(v130._object);
          v76 = swift_bridgeObjectRelease(v131);
        }
      }
      else
      {
        v125 = &selRef_genericAvatarFor_pointSize_completion_;
      }
      v135 = (void *)((uint64_t (*)(__n128))v499)(v76);
      objc_msgSend(v80, v125[118], v135);

      v136 = (void *)((uint64_t (*)(void))v493)();
      objc_msgSend(v80, v125[118], v136);

      if ((_DWORD)v496 != 8)
        goto LABEL_104;
      if (!v492 && v491 == 0xE000000000000000
        || (_stringCompareWithSmolCheck(_:_:expecting:)(v492, v491, 0, 0xE000000000000000, 0) & 1) != 0)
      {
        if ((v79 & 1) != 0)
          goto LABEL_91;
      }
      else
      {
        if ((v79 & 1) != 0)
          goto LABEL_91;
        if ((_stringCompareWithSmolCheck(_:_:expecting:)(v495, v494, 0, 0xE000000000000000, 0) & 1) == 0)
        {
          *(_QWORD *)&v219 = swift_bridgeObjectRelease(v75).n128_u64[0];
          v220 = objc_msgSend(v489, "mainBundle", v219);
          v516._countAndFlagsBits = 0xD000000000000046;
          v516._object = (void *)0x80000001001AE830;
          v221._object = (void *)0x80000001001AE810;
          v221._countAndFlagsBits = 0x1000000000000012;
          v222._countAndFlagsBits = 0;
          v222._object = (void *)0xE000000000000000;
          v223 = NSLocalizedString(_:tableName:bundle:value:comment:)(v221, (Swift::String_optional)0, (NSBundle)v220, v222, v516);
          v145 = v223._object;

          v146 = swift_allocObject(v487, 152, 7);
          *(_OWORD *)(v146 + 16) = xmmword_10019F2D0;
          *(_QWORD *)(v146 + 56) = &type metadata for String;
          *(_QWORD *)(v146 + 64) = v73;
          *(_QWORD *)(v146 + 32) = v495;
          v224 = v494;
          *(_QWORD *)(v146 + 40) = v494;
          v225 = v506;
          v226 = v507;
          *(_QWORD *)(v146 + 96) = &type metadata for String;
          *(_QWORD *)(v146 + 104) = v73;
          *(_QWORD *)(v146 + 72) = v225;
          *(_QWORD *)(v146 + 80) = v226;
          *(_QWORD *)(v146 + 136) = &type metadata for String;
          *(_QWORD *)(v146 + 144) = v73;
          v227 = v491;
          *(_QWORD *)(v146 + 112) = v492;
          *(_QWORD *)(v146 + 120) = v227;
          swift_bridgeObjectRetain(v224);
          swift_bridgeObjectRetain(v226);
          swift_bridgeObjectRetain(v227);
          v149 = v223._countAndFlagsBits;
          goto LABEL_90;
        }
      }
      v138 = v494;
      v139 = v495;
      if ((_stringCompareWithSmolCheck(_:_:expecting:)(v495, v494, 0, 0xE000000000000000, 0) & 1) != 0)
        goto LABEL_91;
      *(_QWORD *)&v140 = swift_bridgeObjectRelease(v75).n128_u64[0];
      v141 = objc_msgSend(v489, "mainBundle", v140);
      v513._countAndFlagsBits = 0xD00000000000001DLL;
      v513._object = (void *)0x80000001001AE8F0;
      v142._countAndFlagsBits = 0x402520B7C2204025;
      v142._object = (void *)0xA800000000000000;
      v143._countAndFlagsBits = 0;
      v143._object = (void *)0xE000000000000000;
      v144 = NSLocalizedString(_:tableName:bundle:value:comment:)(v142, (Swift::String_optional)0, (NSBundle)v141, v143, v513);
      v145 = v144._object;

      v146 = swift_allocObject(v487, 112, 7);
      *(_OWORD *)(v146 + 16) = xmmword_10019EEE0;
      *(_QWORD *)(v146 + 56) = &type metadata for String;
      *(_QWORD *)(v146 + 64) = v73;
      *(_QWORD *)(v146 + 32) = v139;
      *(_QWORD *)(v146 + 40) = v138;
      v147 = v506;
      v148 = v507;
      *(_QWORD *)(v146 + 96) = &type metadata for String;
      *(_QWORD *)(v146 + 104) = v73;
      *(_QWORD *)(v146 + 72) = v147;
      *(_QWORD *)(v146 + 80) = v148;
      swift_bridgeObjectRetain(v138);
      swift_bridgeObjectRetain(v148);
      v149 = v144._countAndFlagsBits;
LABEL_90:
      v490 = static String.localizedStringWithFormat(_:_:)(v149, v145, v146);
      v75 = v228;
      swift_bridgeObjectRelease(v145);
      v137 = swift_bridgeObjectRelease(v146);
LABEL_91:
      v229 = HIBYTE(v124) & 0xF;
      if ((v124 & 0x2000000000000000) == 0)
        v229 = v123 & 0xFFFFFFFFFFFFLL;
      if (v229)
      {
        *(_QWORD *)&v230 = swift_bridgeObjectRelease(v75).n128_u64[0];
        v231 = v494;
        v232 = v495;
        if ((v494 & 0x2000000000000000) != 0)
          v233 = HIBYTE(v494) & 0xF;
        else
          v233 = (unint64_t)v495 & 0xFFFFFFFFFFFFLL;
        v234 = objc_msgSend(v489, "mainBundle", v230);
        if (v233)
        {
          v517._countAndFlagsBits = 0xD000000000000030;
          v517._object = (void *)0x80000001001AE880;
          v235._countAndFlagsBits = 0x402520B7C2204025;
          v235._object = (void *)0xAE00402520B7C220;
          v236._countAndFlagsBits = 0;
          v236._object = (void *)0xE000000000000000;
          v237 = NSLocalizedString(_:tableName:bundle:value:comment:)(v235, (Swift::String_optional)0, (NSBundle)v234, v236, v517);
          v238 = v237._object;

          v239 = swift_allocObject(v487, 152, 7);
          *(_OWORD *)(v239 + 16) = xmmword_10019F2D0;
          *(_QWORD *)(v239 + 56) = &type metadata for String;
          *(_QWORD *)(v239 + 64) = v73;
          *(_QWORD *)(v239 + 32) = v123;
          *(_QWORD *)(v239 + 40) = v124;
          v240 = v506;
          v241 = v507;
          *(_QWORD *)(v239 + 96) = &type metadata for String;
          *(_QWORD *)(v239 + 104) = v73;
          *(_QWORD *)(v239 + 72) = v240;
          *(_QWORD *)(v239 + 80) = v241;
          *(_QWORD *)(v239 + 136) = &type metadata for String;
          *(_QWORD *)(v239 + 144) = v73;
          *(_QWORD *)(v239 + 112) = v232;
          *(_QWORD *)(v239 + 120) = v231;
          swift_bridgeObjectRetain(v231);
          swift_bridgeObjectRetain(v124);
          swift_bridgeObjectRetain(v241);
          v242 = v237._countAndFlagsBits;
        }
        else
        {
          v518._countAndFlagsBits = 0xD000000000000025;
          v518._object = (void *)0x80000001001AE8C0;
          v243._countAndFlagsBits = 0x402520B7C2204025;
          v243._object = (void *)0xA800000000000000;
          v244._countAndFlagsBits = 0;
          v244._object = (void *)0xE000000000000000;
          v245 = NSLocalizedString(_:tableName:bundle:value:comment:)(v243, (Swift::String_optional)0, (NSBundle)v234, v244, v518);
          v238 = v245._object;

          v239 = swift_allocObject(v487, 112, 7);
          *(_OWORD *)(v239 + 16) = xmmword_10019EEE0;
          *(_QWORD *)(v239 + 56) = &type metadata for String;
          *(_QWORD *)(v239 + 64) = v73;
          *(_QWORD *)(v239 + 32) = v123;
          *(_QWORD *)(v239 + 40) = v124;
          v246 = v506;
          v247 = v507;
          *(_QWORD *)(v239 + 96) = &type metadata for String;
          *(_QWORD *)(v239 + 104) = v73;
          *(_QWORD *)(v239 + 72) = v246;
          *(_QWORD *)(v239 + 80) = v247;
          swift_bridgeObjectRetain(v124);
          swift_bridgeObjectRetain(v247);
          v242 = v245._countAndFlagsBits;
        }
        v490 = static String.localizedStringWithFormat(_:_:)(v242, v238, v239);
        v75 = v248;
        swift_bridgeObjectRelease(v238);
        v137 = swift_bridgeObjectRelease(v239);
      }
      v249 = (void *)((uint64_t (*)(__n128))v499)(v137);
      v250 = (void *)objc_opt_self(UIFont);
      v251 = objc_msgSend(v250, "preferredFontForTextStyle:", UIFontTextStyleBody);
      v252 = objc_msgSend(v251, "fontDescriptor");
      v253 = objc_msgSend(v252, "fontDescriptorWithSymbolicTraits:", 2);

      if (!v253)
        goto LABEL_151;
      v254 = objc_msgSend(v250, "fontWithDescriptor:size:", v253, 0.0);

      objc_msgSend(v249, "setFont:", v254);
      v255 = (void *)((uint64_t (*)(void))v493)();
      v256 = objc_msgSend(v250, "preferredFontForTextStyle:", UIFontTextStyleBody);
      v257 = objc_msgSend(v256, "fontDescriptor");
      v258 = objc_msgSend(v257, "fontDescriptorWithSymbolicTraits:", 2);

      if (!v258)
        goto LABEL_152;
      v259 = objc_msgSend(v250, "fontWithDescriptor:size:", v258, 0.0);

      objc_msgSend(v255, "setFont:", v259);
LABEL_104:
      v260 = (void *)((uint64_t (*)(void))v499)();
      v261 = objc_msgSend(v260, "superview");
      v262 = &selRef_genericAvatarFor_pointSize_completion_;
      if (v261)
      {
        v263 = v261;
        objc_msgSend(v260, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v264 = objc_msgSend(v260, "topAnchor");
        v265 = objc_msgSend(v263, "topAnchor");
        v266 = objc_msgSend(v264, "constraintEqualToAnchor:", v265);

        objc_msgSend(v266, "setConstant:", 12.0);
        if (v266)
        {
          v266 = v266;
          objc_msgSend(v266, "setActive:", 1);

          v260 = v266;
        }

        v262 = &selRef_genericAvatarFor_pointSize_completion_;
      }
      else
      {
        v266 = 0;
        v263 = v260;
      }

      v267 = (void *)((uint64_t (*)(void))v499)();
      v268 = objc_msgSend(v267, "superview");
      if (v268)
      {
        v269 = v268;
        objc_msgSend(v267, v262[47], 0);
        v270 = objc_msgSend(v267, "leadingAnchor");
        v271 = objc_msgSend(v269, "leadingAnchor");
        v272 = objc_msgSend(v270, "constraintEqualToAnchor:", v271);

        objc_msgSend(v272, "setConstant:", 16.0);
        if (v272)
        {
          v272 = v272;
          objc_msgSend(v272, "setActive:", 1);

          v267 = v272;
        }

        v262 = &selRef_genericAvatarFor_pointSize_completion_;
      }
      else
      {
        v272 = 0;
        v269 = v267;
      }

      v273 = (void *)((uint64_t (*)(void))v499)();
      v274 = objc_msgSend(v273, "superview");
      v496 = v75;
      if (v274)
      {
        v275 = v274;
        objc_msgSend(v273, v262[47], 0);
        v276 = objc_msgSend(v273, "trailingAnchor");
        v277 = objc_msgSend(v275, "trailingAnchor");
        v278 = objc_msgSend(v276, "constraintEqualToAnchor:", v277);

        objc_msgSend(v278, "setConstant:", -16.0);
        if (v278)
        {
          v278 = v278;
          objc_msgSend(v278, "setActive:", 1);

          v273 = v278;
        }

        v262 = &selRef_genericAvatarFor_pointSize_completion_;
      }
      else
      {
        v278 = 0;
        v275 = v273;
      }

      v279 = (uint64_t (*)(void))v499;
      v280 = (void *)((uint64_t (*)(void))v499)();
      objc_msgSend(v280, "setTextAlignment:", 1);

      objc_msgSend(imageView.super.super.isa, v262[47], 0);
      v281 = -[objc_class topAnchor](imageView.super.super.isa, "topAnchor");
      v282 = (void *)v279();
      v283 = objc_msgSend(v282, "bottomAnchor");

      v284 = objc_msgSend(v281, "constraintEqualToAnchor:constant:", v283, 5.0);
      objc_msgSend(v284, "setActive:", 1);

      v285 = -[objc_class bottomAnchor](imageView.super.super.isa, "bottomAnchor");
      v286 = (uint64_t (*)(void))v493;
      v287 = (void *)((uint64_t (*)(void))v493)();
      v288 = objc_msgSend(v287, "topAnchor");

      v89 = v498;
      v289 = objc_msgSend(v285, "constraintEqualToAnchor:constant:", v288, -5.0);

      objc_msgSend(v289, "setActive:", 1);
      v290 = -[objc_class widthAnchor](imageView.super.super.isa, "widthAnchor");
      v291 = -[objc_class heightAnchor](imageView.super.super.isa, "heightAnchor");
      v292 = objc_msgSend(v290, "constraintEqualToAnchor:", v291);

      objc_msgSend(v292, "setActive:", 1);
      v293 = -[objc_class centerXAnchor](imageView.super.super.isa, "centerXAnchor");
      v294 = objc_msgSend(v89, "centerXAnchor");
      v295 = objc_msgSend(v293, "constraintEqualToAnchor:", v294);

      objc_msgSend(v295, "setActive:", 1);
      v296 = (void *)v286();
      objc_msgSend(v296, "setTextAlignment:", 1);

      v297 = (void *)v279();
      objc_msgSend(v297, "setTextAlignment:", 1);

      v298 = (void *)v286();
      v299 = objc_msgSend(v298, "superview");
      if (v299)
      {
        v300 = v299;
        objc_msgSend(v298, v262[47], 0);
        v301 = objc_msgSend(v298, "bottomAnchor");
        v302 = objc_msgSend(v300, "bottomAnchor");
        v303 = objc_msgSend(v301, "constraintEqualToAnchor:", v302);

        if (v303)
        {
          objc_msgSend(v303, "setConstant:", -12.0);
          v303 = v303;
          objc_msgSend(v303, "setActive:", 1);

          v298 = v303;
        }
        v24 = off_10020E000;
        v23 = MKPolyline_ptr;
        v100 = (unint64_t)v496;

      }
      else
      {
        v303 = 0;
        v300 = v298;
        v24 = off_10020E000;
        v23 = MKPolyline_ptr;
        v100 = (unint64_t)v496;
      }

      v304 = (void *)((uint64_t (*)(void))v493)();
      v305 = objc_msgSend(v304, "superview");
      if (v305)
      {
        v306 = v305;
        objc_msgSend(v304, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v307 = objc_msgSend(v304, "leadingAnchor");
        v308 = objc_msgSend(v306, "leadingAnchor");
        v309 = objc_msgSend(v307, "constraintEqualToAnchor:", v308);

        objc_msgSend(v309, "setConstant:", 8.0);
        if (v309)
        {
          v309 = v309;
          objc_msgSend(v309, "setActive:", 1);

          v304 = v309;
        }

      }
      else
      {
        v309 = 0;
        v306 = v304;
      }

      v310 = (void *)((uint64_t (*)(void))v493)();
      v311 = objc_msgSend(v310, "superview");
      if (v311)
      {
        v312 = v311;
        objc_msgSend(v310, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v313 = objc_msgSend(v310, "trailingAnchor");
        v314 = objc_msgSend(v312, "trailingAnchor");
        v315 = objc_msgSend(v313, "constraintEqualToAnchor:", v314);

        objc_msgSend(v315, "setConstant:", -8.0);
        if (v315)
        {
          v316 = v315;
          objc_msgSend(v316, "setActive:", 1);

        }
        else
        {

        }
      }
      else
      {

      }
      goto LABEL_149;
    default:
LABEL_73:
      v100 = 0xE000000000000000;
      v89 = v498;
      goto LABEL_149;
  }
}

void closure #1 in MOSuggestionActivityIconAssetView.makeUIView(imageView:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  double v19;
  id v20;
  void *v21;
  uint64_t countAndFlagsBits;
  void *v23;
  void *object;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  Swift::String v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  _QWORD v44[2];
  _QWORD v45[4];
  uint64_t v46;
  uint64_t v47;

  v43 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MeasurementFormatUnitUsage<NSUnitDuration>);
  v41 = *(_QWORD *)(v3 - 8);
  v42 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FloatingPointFormatStyle<Double>?);
  __chkstk_darwin(v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitDuration><>.FormatStyle.UnitWidth);
  v38 = *(_QWORD *)(v9 - 8);
  v39 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitDuration><>.FormatStyle);
  v40 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitDuration>);
  v37 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = objc_msgSend(objc_allocWithZone((Class)FIUIFormattingManager), "init");
  v19 = *(double *)(a2 + OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_duration);
  v20 = objc_msgSend(v18, "stringWithDuration:durationFormat:", 2, v19);
  if (v20)
  {
    v21 = v20;
    countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    object = v23;

  }
  else
  {
    v25 = objc_msgSend((id)objc_opt_self(NSUnitDuration), "minutes");
    v26 = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSUnitDuration, NSUnitDuration_ptr);
    Measurement.init(value:unit:)(v25, v26, v19);
    static Measurement<>.FormatStyle.UnitWidth.abbreviated.getter(v26);
    v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FloatingPointFormatStyle<Double>);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v8, 1, 1, v27);
    static MeasurementFormatUnitUsage.general.getter(v26);
    static FormatStyle.measurement<A>(width:usage:numberFormatStyle:)(v11, v5, v8, v26);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v5, v42);
    outlined destroy of FloatingPointFormatStyle<Double>?((uint64_t)v8);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v11, v39);
    v28 = lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type Measurement<NSUnitDuration><>.FormatStyle and conformance Measurement<A><>.FormatStyle, &demangling cache variable for type metadata for Measurement<NSUnitDuration><>.FormatStyle, (uint64_t)&protocol conformance descriptor for Measurement<A><>.FormatStyle);
    Measurement<>.formatted<A>(_:)(&v46, v14, v15, v12, v28);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v14, v12);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v17, v15);
    v29 = v47;
    v45[2] = v46;
    v45[3] = v47;
    v45[0] = 32;
    v45[1] = 0xE100000000000000;
    v44[0] = 0;
    v44[1] = 0xE000000000000000;
    v30 = lazy protocol witness table accessor for type String and conformance String();
    StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(v45, v44, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v30, v30, v30);
    v32 = v31;
    swift_bridgeObjectRelease(v29);
    v33 = String.uppercased()();
    countAndFlagsBits = v33._countAndFlagsBits;
    object = v33._object;
    swift_bridgeObjectRelease(v32);

  }
  v34 = v43;
  v35 = v43[1];
  *v43 = countAndFlagsBits;
  v34[1] = (uint64_t)object;
  swift_bridgeObjectRelease(v35);
}

Swift::Void __swiftcall MOSuggestionActivityIconAssetView.adjustForFontSizeChanges()()
{
  _QWORD *v0;
  int v1;
  id v2;
  id v3;
  BOOL v4;
  id v5;

  v1 = *((unsigned __int8 *)v0 + OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_assignedTileSize);
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = objc_msgSend(v2, "preferredContentSizeCategory");

  LOBYTE(v2) = static UIContentSizeCategory.> infix(_:_:)(v3, UIContentSizeCategoryLarge);
  if ((v2 & 1) != 0 && (v1 != 8 ? (v4 = v1 == 6) : (v4 = 1), v4))
  {
    v5 = (id)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xD0))();
    objc_msgSend(v5, "setNumberOfLines:", 3);
  }
  else
  {
    v5 = (id)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xD0))();
    objc_msgSend(v5, "setNumberOfLines:", 1);
  }

}

Swift::Void __swiftcall MOSuggestionActivityIconAssetView.handleTraitChange()()
{
  _QWORD *v0;

  (*(void (**)(void))((swift_isaMask & *v0) + 0x110))();
}

void MOSuggestionActivityIconAssetView.init(frame:)()
{
  MOSuggestionCutoutView.init(frame:)((uint64_t)"MomentsUIService.MOSuggestionActivityIconAssetView", 50);
}

id MOSuggestionActivityIconAssetView.__deallocating_deinit()
{
  return MOSuggestionRoundView.__deallocating_deinit(type metadata accessor for MOSuggestionActivityIconAssetView);
}

id specialized MOSuggestionWorkoutsSnowGlobeView.init(icons:glyphBackgroundColor:glyphTintColor:)(uint64_t a1, void *a2, void *a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  objc_class *v13;
  id v14;
  id v15;
  __n128 v16;
  void *v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  _QWORD *v21;
  id v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[5];
  _QWORD *v32;
  objc_super v33;

  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v30 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v3[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionWorkoutsSnowGlobeView_iconViews] = _swiftEmptyArrayStorage;
  v13 = (objc_class *)type metadata accessor for MOSuggestionWorkoutsSnowGlobeView();
  v33.receiver = v3;
  v33.super_class = v13;
  v14 = objc_msgSendSuper2(&v33, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue, OS_dispatch_queue_ptr);
  v15 = v14;
  v17 = (void *)static OS_dispatch_queue.main.getter(v16);
  v18 = swift_allocObject(&unk_1001EC220, 24, 7);
  swift_unknownObjectWeakInit(v18 + 16);
  v19 = (_QWORD *)swift_allocObject(&unk_1001EC350, 48, 7);
  v19[2] = a1;
  v19[3] = a2;
  v19[4] = a3;
  v19[5] = v18;
  aBlock[4] = partial apply for closure #1 in MOSuggestionWorkoutsSnowGlobeView.init(icons:glyphBackgroundColor:glyphTintColor:);
  v32 = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_25;
  v20 = _Block_copy(aBlock);
  v21 = v32;
  v22 = a2;
  v23 = a3;
  swift_release(v21);
  static DispatchQoS.unspecified.getter(v24);
  aBlock[0] = _swiftEmptyArrayStorage;
  v25 = lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  v27 = lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags], (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v26, v27, v7, v25);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v9, v20);

  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v29);
  return v15;
}

uint64_t type metadata accessor for MOSuggestionWorkoutsSnowGlobeView()
{
  return objc_opt_self(_TtC16MomentsUIService33MOSuggestionWorkoutsSnowGlobeView);
}

uint64_t sub_100150200()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100150224()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t partial apply for closure #1 in MOSuggestionWorkoutsSnowGlobeView.init(alreadyRoundedIcons:)()
{
  uint64_t v0;

  return closure #1 in MOSuggestionWorkoutsSnowGlobeView.init(alreadyRoundedIcons:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

double block_copy_helper_36(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t block_destroy_helper_36(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t type metadata accessor for MOSuggestionWorkoutIconGlyphView()
{
  return objc_opt_self(_TtC16MomentsUIService32MOSuggestionWorkoutIconGlyphView);
}

uint64_t type metadata accessor for MOSuggestionActivityIconAssetView()
{
  return objc_opt_self(_TtC16MomentsUIService33MOSuggestionActivityIconAssetView);
}

void specialized MOSuggestionActivityIconAssetView.init(coder:)()
{
  char *v0;
  NSString v1;
  void *v2;
  id v3;
  NSString v4;
  id v5;
  NSString v6;
  id v7;
  NSString v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;

  v1 = String._bridgeToObjectiveC()();
  v2 = (void *)objc_opt_self(UIColor);
  v3 = objc_msgSend(v2, "colorNamed:", v1);

  if (!v3)
    v3 = objc_msgSend(v2, "systemBlueColor");
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_distanceBlue] = v3;
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v2, "colorNamed:", v4);

  if (!v5)
    v5 = objc_msgSend(v2, "systemYellowColor");
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_timeYellow] = v5;
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v2, "colorNamed:", v6);

  if (!v7)
    v7 = objc_msgSend(v2, "systemPinkColor");
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_movePink] = v7;
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(v2, "colorNamed:", v8);

  if (!v9)
    v9 = objc_msgSend(v2, "systemRedColor");
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_heartRed] = v9;
  v10 = OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_exerciseNameLabel;
  closure #1 in variable initialization expression of MOSuggestionActivityIconAssetView.exerciseNameLabel();
  *(_QWORD *)&v0[v10] = v11;
  v12 = OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_workoutDataLabel;
  closure #1 in variable initialization expression of MOSuggestionActivityIconAssetView.workoutDataLabel();
  *(_QWORD *)&v0[v12] = v13;
  v14 = OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_labelStack;
  v15 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v15, "setAxis:", 1);
  objc_msgSend(v15, "setAlignment:", 1);
  *(_QWORD *)&v0[v14] = v15;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionActivityIconAssetView.swift", 56, 2, 163, 0);
  __break(1u);
}

uint64_t sub_100150540()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void partial apply for closure #1 in MOSuggestionActivityIconAssetView.makeUIView(imageView:)()
{
  uint64_t v0;

  closure #1 in MOSuggestionActivityIconAssetView.makeUIView(imageView:)(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10015056C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10015057C@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x58))();
  *a2 = result;
  return result;
}

uint64_t sub_1001505BC(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x60))(*a1);
}

uint64_t sub_1001505FC@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xB8))();
  *a2 = result;
  return result;
}

uint64_t sub_10015063C(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0xC0))(*a1);
}

uint64_t sub_10015067C@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xD0))();
  *a2 = result;
  return result;
}

uint64_t sub_1001506BC(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0xD8))(*a1);
}

uint64_t sub_1001506FC@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xE8))();
  *a2 = result;
  return result;
}

uint64_t sub_10015073C(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0xF0))(*a1);
}

uint64_t sub_10015079C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void partial apply for closure #1 in MOSuggestionWorkoutsSnowGlobeView.init(icons:glyphBackgroundColor:glyphTintColor:)()
{
  uint64_t v0;

  closure #1 in MOSuggestionWorkoutsSnowGlobeView.init(icons:glyphBackgroundColor:glyphTintColor:)(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40));
}

_QWORD *MOSuggestionSheetPrivacyOverlayView.__allocating_init(frame:clientIdentifier:)(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  objc_class *v6;
  id v13;

  v13 = objc_allocWithZone(v6);
  return MOSuggestionSheetPrivacyOverlayView.init(frame:clientIdentifier:)(a1, a2, a3, a4, a5, a6);
}

_QWORD *MOSuggestionSheetPrivacyOverlayView.init(frame:clientIdentifier:)(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  char *v6;
  char *v11;
  id v12;
  void *v13;
  _QWORD *v14;
  id v15;
  id v16;
  objc_super v18;

  *(_QWORD *)&v6[OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetPrivacyOverlayView_clientIconView] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetPrivacyOverlayView_clientLabel] = 0;
  v11 = &v6[OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetPrivacyOverlayView_currentClientIdentifier];
  *(_QWORD *)v11 = a1;
  *((_QWORD *)v11 + 1) = a2;
  v18.receiver = v6;
  v18.super_class = (Class)type metadata accessor for MOSuggestionSheetPrivacyOverlayView();
  v12 = objc_msgSendSuper2(&v18, "initWithFrame:", a3, a4, a5, a6);
  v13 = (void *)objc_opt_self(UIColor);
  v14 = v12;
  v15 = objc_msgSend(v13, "blackColor");
  v16 = objc_msgSend(v15, "colorWithAlphaComponent:", 0.8);

  objc_msgSend(v14, "setBackgroundColor:", v16);
  (*(void (**)(_QWORD))((swift_isaMask & *v14) + 0xA0))(0);

  return v14;
}

uint64_t type metadata accessor for MOSuggestionSheetPrivacyOverlayView()
{
  return objc_opt_self(_TtC16MomentsUIService35MOSuggestionSheetPrivacyOverlayView);
}

Swift::Void __swiftcall MOSuggestionSheetPrivacyOverlayView.hide(animated:)(Swift::Bool animated)
{
  void *v1;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  double v8;
  id v9;
  _QWORD aBlock[5];
  uint64_t v11;

  v3 = swift_allocObject(&unk_1001EC3A0, 24, 7);
  *(_QWORD *)(v3 + 16) = v1;
  if (animated)
  {
    v4 = (void *)objc_opt_self(UIView);
    aBlock[4] = partial apply for closure #1 in MOSuggestionSheetPrivacyOverlayView.hide(animated:);
    v11 = v3;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = &block_descriptor_37;
    v5 = _Block_copy(aBlock);
    v6 = v11;
    v7 = v1;
    swift_retain(v3);
    swift_release(v6);
    objc_msgSend(v4, "animateWithDuration:animations:", v5, 0.2);
    swift_release(v3);
    _Block_release(v5);
  }
  else
  {
    v9 = objc_msgSend(v1, "layer");
    LODWORD(v8) = 0;
    objc_msgSend(v9, "setOpacity:", v8);
    swift_release(v3);

  }
}

uint64_t sub_100150AFC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void partial apply for closure #1 in MOSuggestionSheetPrivacyOverlayView.hide(animated:)()
{
  uint64_t v0;

  closure #1 in MOSuggestionSheetPrivacyOverlayView.hide(animated:)(*(void **)(v0 + 16), 0.0);
}

double block_copy_helper_37(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t block_destroy_helper_37(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

Swift::Void __swiftcall MOSuggestionSheetPrivacyOverlayView.show(animated:)(Swift::Bool animated)
{
  void *v1;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  double v8;
  id v9;
  _QWORD aBlock[5];
  uint64_t v11;

  v3 = swift_allocObject(&unk_1001EC3F0, 24, 7);
  *(_QWORD *)(v3 + 16) = v1;
  if (animated)
  {
    v4 = (void *)objc_opt_self(UIView);
    aBlock[4] = partial apply for closure #1 in MOSuggestionSheetPrivacyOverlayView.show(animated:);
    v11 = v3;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = &block_descriptor_6_4;
    v5 = _Block_copy(aBlock);
    v6 = v11;
    v7 = v1;
    swift_retain(v3);
    swift_release(v6);
    objc_msgSend(v4, "animateWithDuration:animations:", v5, 0.2);
    swift_release(v3);
    _Block_release(v5);
  }
  else
  {
    v9 = objc_msgSend(v1, "layer");
    LODWORD(v8) = 1.0;
    objc_msgSend(v9, "setOpacity:", v8);
    swift_release(v3);

  }
}

void closure #1 in MOSuggestionSheetPrivacyOverlayView.hide(animated:)(void *a1, float a2)
{
  double v3;
  id v4;

  v4 = objc_msgSend(a1, "layer");
  *(float *)&v3 = a2;
  objc_msgSend(v4, "setOpacity:", v3);

}

void partial apply for closure #1 in MOSuggestionSheetPrivacyOverlayView.show(animated:)()
{
  uint64_t v0;

  closure #1 in MOSuggestionSheetPrivacyOverlayView.hide(animated:)(*(void **)(v0 + 16), 1.0);
}

Swift::Void __swiftcall MOSuggestionSheetPrivacyOverlayView.updateClientLabel()()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  double v12;
  double v13;
  id v14;
  _QWORD *v15;
  id v16;
  id v17;
  NSString v18;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  _QWORD aBlock[5];
  uint64_t v24;

  v1 = v0;
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetPrivacyOverlayView_currentClientIdentifier];
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetPrivacyOverlayView_currentClientIdentifier
                    + 8];
  v4 = objc_allocWithZone((Class)LSApplicationRecord);
  swift_bridgeObjectRetain(v2);
  v5 = @nonobjc LSApplicationRecord.init(bundleIdentifier:allowPlaceholder:)(v3, v2, 1);
  v6 = v5;
  if (v5)
  {
    v7 = objc_msgSend(v5, "localizedName");
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v10 = v9;

  }
  else
  {
    v8 = 0;
    v10 = 0;
  }
  v11 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v11, "scale");
  v13 = v12;

  v14 = objc_msgSend(objc_allocWithZone((Class)ISImageDescriptor), "initWithSize:scale:", 350.0, 350.0, v13);
  v15 = (_QWORD *)swift_allocObject(&unk_1001EC440, 40, 7);
  v15[2] = v1;
  v15[3] = v8;
  v15[4] = v10;
  v16 = objc_allocWithZone((Class)ISIcon);
  swift_bridgeObjectRetain(v2);
  v17 = v1;
  v18 = String._bridgeToObjectiveC()();
  v19 = objc_msgSend(v16, "initWithBundleIdentifier:", v18, swift_bridgeObjectRelease(v2).n128_f64[0]);

  v20 = swift_allocObject(&unk_1001EC468, 32, 7);
  *(_QWORD *)(v20 + 16) = partial apply for closure #1 in MOSuggestionSheetPrivacyOverlayView.updateClientLabel();
  *(_QWORD *)(v20 + 24) = v15;
  aBlock[4] = partial apply for closure #1 in MOSuggestionAssetAppIconProvider.getAssetFor(bundleIdentifier:completion:);
  v24 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed CGImageRef?) -> ();
  aBlock[3] = &block_descriptor_15_3;
  v21 = _Block_copy(aBlock);
  v22 = v24;
  swift_retain(v15);
  objc_msgSend(v19, "getCGImageForImageDescriptor:completion:", v14, v21, swift_release(v22).n128_f64[0]);
  _Block_release(v21);

  swift_release(v15);
}

uint64_t closure #1 in MOSuggestionSheetPrivacyOverlayView.updateClientLabel()(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  __n128 v14;
  void *v15;
  _QWORD *v16;
  void *v17;
  _QWORD *v18;
  id v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[5];
  _QWORD *v29;

  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v27 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for OS_dispatch_queue();
  v15 = (void *)static OS_dispatch_queue.main.getter(v14);
  v16 = (_QWORD *)swift_allocObject(&unk_1001EC4B8, 48, 7);
  v16[2] = a1;
  v16[3] = a2;
  v16[4] = a3;
  v16[5] = a4;
  aBlock[4] = partial apply for closure #1 in closure #1 in MOSuggestionSheetPrivacyOverlayView.updateClientLabel();
  v29 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_21_2;
  v17 = _Block_copy(aBlock);
  v18 = v29;
  swift_bridgeObjectRetain(a4);
  v19 = a1;
  v20 = a2;
  swift_release(v18);
  static DispatchQoS.unspecified.getter(v21);
  aBlock[0] = _swiftEmptyArrayStorage;
  v22 = lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  v24 = lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v23, v24, v8, v22);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v10, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v26);
}

void closure #1 in closure #1 in MOSuggestionSheetPrivacyOverlayView.updateClientLabel()(void *a1, _QWORD *a2, uint64_t a3, NSString a4)
{
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;

  if (a1)
  {
    v6 = a1;
    v20 = objc_msgSend(v6, "content");
    v7 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v20);
    v8 = OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetPrivacyOverlayView_clientIconView;
    v9 = *(void **)((char *)a2 + OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetPrivacyOverlayView_clientIconView);
    *(_QWORD *)((char *)a2 + OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetPrivacyOverlayView_clientIconView) = v7;

    v10 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
    v11 = OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetPrivacyOverlayView_clientLabel;
    v12 = *(void **)((char *)a2 + OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetPrivacyOverlayView_clientLabel);
    *(_QWORD *)((char *)a2 + OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetPrivacyOverlayView_clientLabel) = v10;

    v13 = *(void **)((char *)a2 + v11);
    if (v13)
    {
      v14 = v13;
      if (a4)
        a4 = String._bridgeToObjectiveC()();
      objc_msgSend(v13, "setText:", a4);

    }
    v15 = *(void **)((char *)a2 + v8);
    if (v15)
    {
      v16 = *(void **)((char *)a2 + v11);
      if (v16)
      {
        v17 = v15;
        v18 = v16;
        objc_msgSend(a2, "addSubview:", v17);
        v19 = objc_msgSend(a2, "addSubview:", v18);
        (*(void (**)(id))((swift_isaMask & *a2) + 0xB8))(v19);

      }
    }

  }
}

Swift::Void __swiftcall MOSuggestionSheetPrivacyOverlayView.layoutIconAndLabels()()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetPrivacyOverlayView_clientIconView);
  if (v1)
  {
    v2 = *(void **)(v0 + OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetPrivacyOverlayView_clientLabel);
    if (v2)
    {
      v3 = v1;
      v4 = v2;
      objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v5 = objc_msgSend(v3, "heightAnchor");
      v6 = objc_msgSend(v5, "constraintEqualToConstant:", 35.0);

      objc_msgSend(v6, "setActive:", 1);
      v7 = objc_msgSend(v3, "widthAnchor");
      v8 = objc_msgSend(v7, "constraintEqualToConstant:", 35.0);

      objc_msgSend(v8, "setActive:", 1);
      v9 = objc_msgSend(v3, "superview");
      if (v9)
      {
        v10 = v9;
        objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v11 = objc_msgSend(v3, "leadingAnchor");
        v12 = objc_msgSend(v10, "leadingAnchor");
        v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

        objc_msgSend(v13, "setConstant:", 25.0);
        v14 = v13;
        objc_msgSend(v14, "setActive:", 1);

      }
      v15 = objc_msgSend(v3, "superview");
      if (v15)
      {
        v16 = v15;
        objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v17 = objc_msgSend(v3, "topAnchor");
        v18 = objc_msgSend(v16, "topAnchor");
        v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

        objc_msgSend(v19, "setConstant:", 60.0);
        v20 = v19;
        objc_msgSend(v20, "setActive:", 1);

      }
      objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v21 = objc_msgSend(v4, "topAnchor");
      v22 = objc_msgSend(v3, "topAnchor");
      v23 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

      objc_msgSend(v23, "setActive:", 1);
      v24 = objc_msgSend(v4, "bottomAnchor");
      v25 = objc_msgSend(v3, "bottomAnchor");
      v26 = objc_msgSend(v24, "constraintEqualToAnchor:", v25);

      objc_msgSend(v26, "setActive:", 1);
      v27 = objc_msgSend(v4, "leadingAnchor");
      v28 = objc_msgSend(v3, "trailingAnchor");
      v29 = objc_msgSend(v27, "constraintEqualToAnchor:constant:", v28, 10.0);

      objc_msgSend(v29, "setActive:", 1);
      v30 = objc_msgSend(v4, "superview");
      if (v30)
      {
        v31 = v30;
        objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v32 = objc_msgSend(v4, "trailingAnchor");
        v33 = objc_msgSend(v31, "trailingAnchor");
        v34 = objc_msgSend(v32, "constraintEqualToAnchor:", v33);

        objc_msgSend(v34, "setConstant:", 25.0);
        v35 = v34;
        objc_msgSend(v35, "setActive:", 1);

      }
      v36 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
      objc_msgSend(v4, "setTextColor:", v36);

    }
  }
}

void MOSuggestionSheetPrivacyOverlayView.init(coder:)()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetPrivacyOverlayView_clientIconView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetPrivacyOverlayView_clientLabel] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionSheetPrivacyOverlayView.swift", 58, 2, 86, 0);
  __break(1u);
}

void MOSuggestionSheetPrivacyOverlayView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MomentsUIService.MOSuggestionSheetPrivacyOverlayView", 52, "init(frame:)", 12, 0);
  __break(1u);
}

id MOSuggestionSheetPrivacyOverlayView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionSheetPrivacyOverlayView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1001519D4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t partial apply for closure #1 in MOSuggestionSheetPrivacyOverlayView.updateClientLabel()(void *a1)
{
  uint64_t v1;

  return closure #1 in MOSuggestionSheetPrivacyOverlayView.updateClientLabel()(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_100151A0C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100151A30()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void partial apply for closure #1 in closure #1 in MOSuggestionSheetPrivacyOverlayView.updateClientLabel()()
{
  uint64_t v0;

  closure #1 in closure #1 in MOSuggestionSheetPrivacyOverlayView.updateClientLabel()(*(void **)(v0 + 16), *(_QWORD **)(v0 + 24), *(_QWORD *)(v0 + 32), *(NSString *)(v0 + 40));
}

void *MOSuggestionCarouselAssetCell.checkPlatterViewMargin.unsafeMutableAddressor()
{
  return &static MOSuggestionCarouselAssetCell.checkPlatterViewMargin;
}

__int128 *MOSuggestionCarouselAssetCell.checkPlatterViewSize.unsafeMutableAddressor()
{
  if (one-time initialization token for checkPlatterViewSize != -1)
    swift_once(&one-time initialization token for checkPlatterViewSize, one-time initialization function for checkPlatterViewSize);
  return &static MOSuggestionCarouselAssetCell.checkPlatterViewSize;
}

void *MOSuggestionCarouselAssetCell.reuseIdentifier.unsafeMutableAddressor()
{
  return &static MOSuggestionCarouselAssetCell.reuseIdentifier;
}

unint64_t static MOSuggestionCarouselAssetCell.reuseIdentifier.getter()
{
  return 0xD00000000000001DLL;
}

double static MOSuggestionCarouselAssetCell.checkPlatterViewSize.getter()
{
  if (one-time initialization token for checkPlatterViewSize != -1)
    swift_once(&one-time initialization token for checkPlatterViewSize, one-time initialization function for checkPlatterViewSize);
  return *(double *)&static MOSuggestionCarouselAssetCell.checkPlatterViewSize;
}

double MOSuggestionCarouselAssetCell.assetViewModel.getter()
{
  uint64_t v0;
  _QWORD *v1;
  double result;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_assetViewModel);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_assetViewModel, v3, 0, 0);
  *(_QWORD *)&result = swift_retain(*v1).n128_u64[0];
  return result;
}

uint64_t MOSuggestionCarouselAssetCell.assetViewModel.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[24];

  v3 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_assetViewModel);
  swift_beginAccess((char *)v1 + OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_assetViewModel, v7, 1, 0);
  v4 = *v3;
  *v3 = a1;
  swift_retain(a1);
  v5 = swift_release(v4);
  (*(void (**)(uint64_t))((swift_isaMask & *v1) + 0xF0))(v5);
  return swift_release(a1);
}

uint64_t (*MOSuggestionCarouselAssetCell.assetViewModel.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_assetViewModel, a1, 33, 0);
  return MOSuggestionCarouselAssetCell.assetViewModel.modify;
}

uint64_t MOSuggestionCarouselAssetCell.assetViewModel.modify(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess(a1);
  if ((a2 & 1) == 0)
    return (*(uint64_t (**)(uint64_t))((swift_isaMask & **(_QWORD **)(a1 + 24)) + 0xF0))(result);
  return result;
}

void *MOSuggestionCarouselAssetCell.keyColor.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_keyColor);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_keyColor, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void MOSuggestionCarouselAssetCell.keyColor.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  id v5;
  void *v6;
  _QWORD *v7;
  void (*v8)(id);
  id v9;
  _QWORD *v10;
  _BYTE v11[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_keyColor);
  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_keyColor, v11, 1, 0);
  v4 = *v3;
  *v3 = a1;
  v5 = a1;

  v6 = *v3;
  if (*v3)
  {
    v7 = *(_QWORD **)(v1 + OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_checkPlatterView);
    if (v7)
    {
      v8 = *(void (**)(id))((swift_isaMask & *v7) + 0x88);
      v9 = v6;
      v10 = v7;
      v8(v9);

      v5 = v10;
    }
  }

}

void (*MOSuggestionCarouselAssetCell.keyColor.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_keyColor;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return MOSuggestionCarouselAssetCell.keyColor.modify;
}

void MOSuggestionCarouselAssetCell.keyColor.modify(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  _QWORD *v6;
  void (*v7)(id);
  id v8;
  _QWORD *v9;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = v3[3];
    v5 = *(void **)(v4 + v3[4]);
    if (v5)
    {
      v6 = *(_QWORD **)(v4 + OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_checkPlatterView);
      if (v6)
      {
        v7 = *(void (**)(id))((swift_isaMask & *v6) + 0x88);
        v8 = v5;
        v9 = v6;
        v7(v8);

      }
    }
  }
  free(v3);
}

id MOSuggestionCarouselAssetCell.isSelected.getter()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionCarouselAssetCell();
  return objc_msgSendSuper2(&v2, "isSelected");
}

uint64_t type metadata accessor for MOSuggestionCarouselAssetCell()
{
  return objc_opt_self(_TtC16MomentsUIService29MOSuggestionCarouselAssetCell);
}

void MOSuggestionCarouselAssetCell.isSelected.setter(char a1)
{
  char *v1;
  void *v3;
  _QWORD *v4;
  id v5;
  objc_super v6;

  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for MOSuggestionCarouselAssetCell();
  objc_msgSendSuper2(&v6, "setSelected:", a1 & 1);
  v3 = *(void **)&v1[OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_checkPlatterView];
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v1, "isSelected");
    (*(void (**)(id))((swift_isaMask & *v4) + 0xA0))(v5);

  }
}

Swift::Void __swiftcall MOSuggestionCarouselAssetCell.layoutSubviews()()
{
  char *v0;
  id v1;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionCarouselAssetCell();
  objc_msgSendSuper2(&v2, "layoutSubviews");
  v1 = *(id *)&v0[OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_assetView];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v1, "setFrame:");

}

Swift::Void __swiftcall MOSuggestionCarouselAssetCell.setAssetViewModel()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = v0;
  v2 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0xA8);
  v3 = v2();
  if (v3)
  {
    v4 = v3;
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 808))(1);
    swift_release(v4);
  }
  v6 = *(id *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_assetView);
  v5 = v2();
  (*(void (**)(uint64_t))((swift_isaMask & *v6) + 0xA0))(v5);

}

void MOSuggestionCarouselAssetCell.addSelectButton()()
{
  char *v0;
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  double v5;
  id v6;
  id v7;
  double v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  _QWORD *v24;

  if (one-time initialization token for checkPlatterViewSize != -1)
    swift_once(&one-time initialization token for checkPlatterViewSize, one-time initialization function for checkPlatterViewSize);
  v1 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CanvasAssetAccessoryView()), "initWithFrame:", 0.0, 0.0, static MOSuggestionSheetMosaicCell.checkPlatterViewSize);
  v2 = OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_checkPlatterView;
  v3 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_checkPlatterView];
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_checkPlatterView] = v1;

  v4 = *(void **)&v0[v2];
  if (v4)
  {
    v24 = v4;
    objc_msgSend(v24, "setUserInteractionEnabled:", 0);
    objc_msgSend(v0, "addSubview:", v24);
    if (one-time initialization token for checkPlatterViewSize != -1)
      swift_once(&one-time initialization token for checkPlatterViewSize, one-time initialization function for checkPlatterViewSize);
    v5 = *(double *)&static MOSuggestionCarouselAssetCell.checkPlatterViewSize;
    objc_msgSend(v24, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v6 = objc_msgSend(v24, "widthAnchor");
    v7 = objc_msgSend(v6, "constraintEqualToConstant:", v5);

    objc_msgSend(v7, "setActive:", 1);
    v8 = *((double *)&static MOSuggestionCarouselAssetCell.checkPlatterViewSize + 1);
    objc_msgSend(v24, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v9 = objc_msgSend(v24, "heightAnchor");
    v10 = objc_msgSend(v9, "constraintEqualToConstant:", v8);

    objc_msgSend(v10, "setActive:", 1);
    v11 = objc_msgSend(v24, "superview");
    v12 = v24;
    if (v11)
    {
      objc_msgSend(v24, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v13 = objc_msgSend(v24, "bottomAnchor");
      v14 = objc_msgSend(v11, "bottomAnchor");
      v15 = objc_msgSend(v13, "constraintEqualToAnchor:", v14);

      if (v15)
      {
        objc_msgSend(v15, "setConstant:", -8.0);
        v16 = v15;
        objc_msgSend(v16, "setActive:", 1);

      }
      v12 = v24;
    }
    v17 = objc_msgSend(v12, "superview");
    if (v17)
    {
      v18 = v17;
      objc_msgSend(v24, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v19 = objc_msgSend(v24, "trailingAnchor");
      v20 = objc_msgSend(v18, "trailingAnchor");
      v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

      objc_msgSend(v21, "setConstant:", -8.0);
      v22 = v21;
      objc_msgSend(v22, "setActive:", 1);

    }
    v23 = objc_msgSend(v0, "isSelected");
    (*(void (**)(id))((swift_isaMask & *v24) + 0x70))(v23);

  }
}

Swift::Void __swiftcall MOSuggestionCarouselAssetCell.prepareForReuse()()
{
  char *v0;
  _QWORD *v1;
  void (*v2)(void);
  _QWORD *v3;
  objc_super v4;

  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for MOSuggestionCarouselAssetCell();
  objc_msgSendSuper2(&v4, "prepareForReuse");
  v1 = *(_QWORD **)&v0[OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_assetView];
  v2 = *(void (**)(void))((swift_isaMask & *v1) + 0xC8);
  v3 = v1;
  v2();

}

id MOSuggestionCarouselAssetCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionCarouselAssetCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

char *specialized MOSuggestionCarouselAssetCell.init(frame:)()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  double y;
  double width;
  double height;
  char *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  char *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  double v18;
  id v19;
  id v20;
  id v21;
  id v22;
  objc_super v24;

  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_checkPlatterView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_blurEffectView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_assetViewModel] = 0;
  v1 = OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_assetView;
  type metadata accessor for MOSuggestionSheetAssetView();
  v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, "init");
  *(_QWORD *)&v3[OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_keyColor] = 0;

  y = CGRectZero.origin.y;
  width = CGRectZero.size.width;
  height = CGRectZero.size.height;
  v24.receiver = v3;
  v24.super_class = (Class)type metadata accessor for MOSuggestionCarouselAssetCell();
  v7 = (char *)objc_msgSendSuper2(&v24, "initWithFrame:", CGRectZero.origin.x, y, width, height);
  v8 = *(_QWORD *)&v7[OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_assetView];
  v9 = v7;
  objc_msgSend(v9, "addSubview:", v8);
  v10 = (void *)objc_opt_self(UIColor);
  v11 = v9;
  v12 = objc_msgSend(v10, "clearColor");
  objc_msgSend(v11, "setBackgroundColor:", v12);

  objc_msgSend(v11, "setClipsToBounds:", 0);
  v13 = objc_msgSend(v11, "layer");
  objc_msgSend(v13, "setCornerRadius:", 11.0);

  MOSuggestionCarouselAssetCell.addSelectButton()();
  v14 = objc_msgSend(v11, "layer");
  v15 = objc_msgSend(v10, "blackColor");
  v16 = objc_msgSend(v15, "CGColor");

  objc_msgSend(v14, "setShadowColor:", v16);
  v17 = objc_msgSend(v11, "layer");
  LODWORD(v18) = 1036831949;
  objc_msgSend(v17, "setShadowOpacity:", v18);

  v19 = objc_msgSend(v11, "layer");
  objc_msgSend(v19, "setShadowOffset:", 0.0, 2.0);

  v20 = objc_msgSend(v11, "layer");
  objc_msgSend(v20, "setShadowRadius:", 4.0);

  v21 = objc_msgSend(v11, "layer");
  objc_msgSend(v21, "setCornerCurve:", kCACornerCurveContinuous);

  v22 = objc_msgSend(v11, "layer");
  objc_msgSend(v22, "setShadowPathIsBounds:", 1);

  return v11;
}

void specialized MOSuggestionCarouselAssetCell.init(coder:)()
{
  char *v0;
  uint64_t v1;

  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_checkPlatterView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_blurEffectView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_assetViewModel] = 0;
  v1 = OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_assetView;
  type metadata accessor for MOSuggestionSheetAssetView();
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_keyColor] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionCarouselAssetCell.swift", 52, 2, 58, 0);
  __break(1u);
}

uint64_t sub_100152B40@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xA8))();
  *a2 = result;
  return result;
}

uint64_t sub_100152B80(_QWORD *a1, _QWORD **a2)
{
  uint64_t (*v2)(__n128);
  __n128 v3;

  v2 = *(uint64_t (**)(__n128))((swift_isaMask & **a2) + 0xB0);
  v3 = swift_retain(*a1);
  return v2(v3);
}

uint64_t sub_100152BC0@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xD8))();
  *a2 = result;
  return result;
}

uint64_t sub_100152C00(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0xE0);
  v4 = *a1;
  return v3(v2);
}

double MOSuggestionPickerBadgeIconView.C1_1.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_C1_1);
}

double MOSuggestionPickerBadgeIconView.C1_2.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_C1_2);
}

id MOSuggestionPickerBadgeIconView.suggestionsImageView.getter()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_suggestionsImageView));
}

id MOSuggestionPickerBadgeIconView.privacyImageView.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_privacyImageView);
}

Swift::Void __swiftcall MOSuggestionPickerBadgeIconView.flipToPrivacyIconAfterDelay()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  void *v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[5];
  uint64_t v31;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v29 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v27 = *(_QWORD *)(v5 - 8);
  v28 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchTime(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v26 - v13;
  type metadata accessor for OS_dispatch_queue();
  v16 = (void *)static OS_dispatch_queue.main.getter(v15);
  static DispatchTime.now()(v16);
  + infix(_:_:)(v12, 1.0);
  v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  v17(v12, v8);
  v18 = swift_allocObject(&unk_1001EC538, 24, 7);
  *(_QWORD *)(v18 + 16) = v0;
  aBlock[4] = partial apply for closure #1 in MOSuggestionPickerBadgeIconView.flipToPrivacyIconAfterDelay();
  v31 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_38;
  v19 = _Block_copy(aBlock);
  v20 = v31;
  v21 = v1;
  swift_release(v20);
  static DispatchQoS.unspecified.getter(v22);
  aBlock[0] = _swiftEmptyArrayStorage;
  v23 = lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  v25 = lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v24, v25, v2, v23);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v14, v7, v4, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v28);
  v17(v14, v8);
}

void closure #1 in MOSuggestionPickerBadgeIconView.flipToPrivacyIconAfterDelay()(char *a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  char *v10;
  id v11;
  _QWORD v12[5];
  uint64_t v13;

  v2 = *(double *)&a1[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_C1_1];
  v3 = *(double *)&a1[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_C1_1 + 8];
  v4 = *(double *)&a1[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_C1_2];
  v5 = *(double *)&a1[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_C1_2 + 8];
  v6 = swift_allocObject(&unk_1001EC588, 32, 7);
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = 2097408;
  v7 = objc_allocWithZone((Class)UIViewPropertyAnimator);
  v12[4] = partial apply for closure #1 in closure #1 in MOSuggestionPickerBadgeIconView.flipToPrivacyIconAfterDelay();
  v13 = v6;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = thunk for @escaping @callee_guaranteed () -> ();
  v12[3] = &block_descriptor_6_5;
  v8 = _Block_copy(v12);
  v9 = v13;
  v10 = a1;
  swift_release(v9);
  v11 = objc_msgSend(v7, "initWithDuration:controlPoint1:controlPoint2:animations:", v8, 0.5, v2, v3, v4, v5);
  _Block_release(v8);
  objc_msgSend(v11, "startAnimation");

}

id MOSuggestionPickerBadgeIconView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionPickerBadgeIconView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

char *specialized MOSuggestionPickerBadgeIconView.init(frame:)()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSString v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  NSString v14;
  id v15;
  id v16;
  double y;
  double width;
  double height;
  char *v20;
  uint64_t v21;
  void *v22;
  char *v23;
  id v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  objc_super v30;

  v1 = &v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_C1_1];
  MOSuggestionInterstitialExpandableListViewCellConstants.init()();
  *(_QWORD *)v1 = v2;
  *((_QWORD *)v1 + 1) = v3;
  v4 = &v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_C1_2];
  MOSuggestionInterstitialExpandableListViewCellConstants.init()();
  *(_QWORD *)v4 = v5;
  *((_QWORD *)v4 + 1) = v6;
  v7 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_suggestionsImageView;
  v8 = v0;
  v9 = String._bridgeToObjectiveC()();
  v10 = (void *)objc_opt_self(UIImage);
  v11 = objc_msgSend(v10, "imageNamed:", v9);

  v12 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v11);
  *(_QWORD *)&v0[v7] = v12;
  v13 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_privacyImageView;
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v10, "imageNamed:", v14);

  v16 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v15);
  *(_QWORD *)&v8[v13] = v16;

  y = CGRectZero.origin.y;
  width = CGRectZero.size.width;
  height = CGRectZero.size.height;
  v30.receiver = v8;
  v30.super_class = (Class)type metadata accessor for MOSuggestionPickerBadgeIconView();
  v20 = (char *)objc_msgSendSuper2(&v30, "initWithFrame:", CGRectZero.origin.x, y, width, height);
  v21 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_suggestionsImageView;
  v22 = *(void **)&v20[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_suggestionsImageView];
  v23 = v20;
  objc_msgSend(v22, "setAutoresizingMask:", 18);
  v24 = v22;
  objc_msgSend(v23, "bounds");
  objc_msgSend(v24, "setFrame:");

  objc_msgSend(v23, "addSubview:", *(_QWORD *)&v20[v21]);
  v25 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_privacyImageView;
  v26 = *(void **)&v23[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_privacyImageView];
  objc_msgSend(v26, "setAutoresizingMask:", 18);
  v27 = v26;
  objc_msgSend(v23, "bounds");
  objc_msgSend(v27, "setFrame:");

  v28 = *(void **)&v23[v25];
  objc_msgSend(v28, "setHidden:", 1);
  objc_msgSend(v23, "addSubview:", v28);

  return v23;
}

void specialized MOSuggestionPickerBadgeIconView.init(coder:)()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  NSString v13;
  id v14;
  id v15;

  v1 = &v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_C1_1];
  MOSuggestionInterstitialExpandableListViewCellConstants.init()();
  *(_QWORD *)v1 = v2;
  *((_QWORD *)v1 + 1) = v3;
  v4 = &v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_C1_2];
  MOSuggestionInterstitialExpandableListViewCellConstants.init()();
  *(_QWORD *)v4 = v5;
  *((_QWORD *)v4 + 1) = v6;
  v7 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_suggestionsImageView;
  v8 = String._bridgeToObjectiveC()();
  v9 = (void *)objc_opt_self(UIImage);
  v10 = objc_msgSend(v9, "imageNamed:", v8);

  v11 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v10);
  *(_QWORD *)&v0[v7] = v11;
  v12 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_privacyImageView;
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v9, "imageNamed:", v13);

  v15 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v14);
  *(_QWORD *)&v0[v12] = v15;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionPickerBadgeIconView.swift", 54, 2, 32, 0);
  __break(1u);
}

uint64_t sub_100153500()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void partial apply for closure #1 in MOSuggestionPickerBadgeIconView.flipToPrivacyIconAfterDelay()()
{
  uint64_t v0;

  closure #1 in MOSuggestionPickerBadgeIconView.flipToPrivacyIconAfterDelay()(*(char **)(v0 + 16));
}

double block_copy_helper_38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t block_destroy_helper_38(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t type metadata accessor for MOSuggestionPickerBadgeIconView()
{
  return objc_opt_self(_TtC16MomentsUIService31MOSuggestionPickerBadgeIconView);
}

uint64_t sub_100153564()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id partial apply for closure #1 in closure #1 in MOSuggestionPickerBadgeIconView.flipToPrivacyIconAfterDelay()()
{
  uint64_t v0;

  return objc_msgSend((id)objc_opt_self(UIView), "transitionFromView:toView:duration:options:completion:", *(_QWORD *)(*(_QWORD *)(v0 + 16)+ OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_suggestionsImageView), *(_QWORD *)(*(_QWORD *)(v0 + 16)+ OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_privacyImageView), *(_QWORD *)(v0 + 24), 0, 0.5);
}

__int128 *NewEntryHeaderConstants.HEADER_LABEL.unsafeMutableAddressor()
{
  if (one-time initialization token for HEADER_LABEL != -1)
    swift_once(&one-time initialization token for HEADER_LABEL, one-time initialization function for HEADER_LABEL);
  return &static NewEntryHeaderConstants.HEADER_LABEL;
}

void static NewEntryHeaderConstants.HEADER_FONT.getter()
{
  void *v0;
  id v1;
  id v2;
  id v3;

  v0 = (void *)objc_opt_self(UIFont);
  v1 = objc_msgSend(v0, "preferredFontForTextStyle:", UIFontTextStyleTitle3);
  v2 = objc_msgSend(v1, "fontDescriptor");
  v3 = objc_msgSend(v2, "fontDescriptorWithSymbolicTraits:", 2);

  if (v3)
  {
    objc_msgSend(v0, "fontWithDescriptor:size:", v3, 0.0);

  }
  else
  {
    __break(1u);
  }
}

void *MOSuggestionCollectionViewBlankEntrySectionHeaderView.reuseIdentifier.unsafeMutableAddressor()
{
  return &static MOSuggestionCollectionViewBlankEntrySectionHeaderView.reuseIdentifier;
}

void *MOSuggestionCollectionViewOnboardingSectionHeaderView.reuseIdentifier.unsafeMutableAddressor()
{
  return &static MOSuggestionCollectionViewOnboardingSectionHeaderView.reuseIdentifier;
}

void *NewEntryHeaderConstants.HORIZONTAL_MARGIN.unsafeMutableAddressor()
{
  return &static NewEntryHeaderConstants.HORIZONTAL_MARGIN;
}

double static NewEntryHeaderConstants.HORIZONTAL_MARGIN.getter()
{
  return 24.0;
}

void *NewEntryHeaderConstants.SEGMENTED_CONTROL_TOP_PADDING.unsafeMutableAddressor()
{
  return &static NewEntryHeaderConstants.SEGMENTED_CONTROL_TOP_PADDING;
}

void *NewEntryHeaderConstants.BUTTON_HEIGHT.unsafeMutableAddressor()
{
  return &static NewEntryHeaderConstants.BUTTON_HEIGHT;
}

double static NewEntryHeaderConstants.BUTTON_HEIGHT.getter()
{
  return 44.0;
}

void one-time initialization function for HEADER_LABEL()
{
  id v0;
  Swift::String v1;
  Swift::String v2;
  Swift::String v3;
  Swift::String v4;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v4._countAndFlagsBits = 0xD000000000000045;
  v4._object = (void *)0x80000001001AF070;
  v1._object = (void *)0x80000001001AF050;
  v1._countAndFlagsBits = 0xD000000000000017;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  static NewEntryHeaderConstants.HEADER_LABEL = (__int128)v3;
}

uint64_t static NewEntryHeaderConstants.HEADER_LABEL.getter()
{
  uint64_t v0;

  if (one-time initialization token for HEADER_LABEL != -1)
    swift_once(&one-time initialization token for HEADER_LABEL, one-time initialization function for HEADER_LABEL);
  v0 = static NewEntryHeaderConstants.HEADER_LABEL;
  swift_bridgeObjectRetain(*((_QWORD *)&static NewEntryHeaderConstants.HEADER_LABEL + 1));
  return v0;
}

unint64_t static MOSuggestionCollectionViewBlankEntrySectionHeaderView.reuseIdentifier.getter()
{
  return 0xD000000000000035;
}

uint64_t MOSuggestionCollectionViewBlankEntrySectionHeaderView.segmentedDelegate.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_segmentedDelegate, v2, 0, 0);
  return swift_unknownObjectRetain();
}

uint64_t MOSuggestionCollectionViewBlankEntrySectionHeaderView.segmentedDelegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  _BYTE v8[24];

  v5 = (uint64_t *)(v2
                 + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_segmentedDelegate);
  swift_beginAccess(v5, v8, 1, 0);
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  return swift_unknownObjectRelease(v6);
}

uint64_t (*MOSuggestionCollectionViewBlankEntrySectionHeaderView.segmentedDelegate.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_segmentedDelegate, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionCollectionViewBlankEntrySectionHeaderView.newEntryDelegate.getter@<X0>(uint64_t a1@<X8>)
{
  return MOSuggestionCollectionViewBlankEntrySectionHeaderView.newEntryDelegate.getter(&OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_newEntryDelegate, a1);
}

uint64_t outlined init with copy of MOSuggestionSheetNewEntryButtonDelegate?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionSheetNewEntryButtonDelegate?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t MOSuggestionCollectionViewBlankEntrySectionHeaderView.newEntryDelegate.setter(uint64_t a1)
{
  return MOSuggestionCollectionViewBlankEntrySectionHeaderView.newEntryDelegate.setter(a1, &OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_newEntryDelegate);
}

uint64_t outlined assign with take of MOSuggestionSheetNewEntryButtonDelegate?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionSheetNewEntryButtonDelegate?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*MOSuggestionCollectionViewBlankEntrySectionHeaderView.newEntryDelegate.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_newEntryDelegate, a1, 33, 0);
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

uint64_t MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipShown.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipShown);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipShown, v3, 0, 0);
  return *v1;
}

uint64_t MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipShown.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1
               + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipShown);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipShown.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipShown, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void closure #1 in variable initialization expression of MOSuggestionCollectionViewBlankEntrySectionHeaderView.headerLabel()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  NSString v6;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v0, "setNumberOfLines:", 2);
  objc_msgSend(v0, "setAdjustsFontSizeToFitWidth:", 1);
  objc_msgSend(v0, "setAdjustsFontForContentSizeCategory:", 1);
  v1 = (void *)objc_opt_self(UIFont);
  v2 = objc_msgSend(v1, "preferredFontForTextStyle:", UIFontTextStyleTitle3);
  v3 = objc_msgSend(v2, "fontDescriptor");
  v4 = objc_msgSend(v3, "fontDescriptorWithSymbolicTraits:", 2);

  if (v4)
  {
    v5 = objc_msgSend(v1, "fontWithDescriptor:size:", v4, 0.0);

    objc_msgSend(v0, "setFont:", v5);
    if (one-time initialization token for HEADER_LABEL != -1)
      swift_once(&one-time initialization token for HEADER_LABEL, one-time initialization function for HEADER_LABEL);
    v6 = String._bridgeToObjectiveC()();
    objc_msgSend(v0, "setText:", v6);

    objc_msgSend(v0, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityLarge);
    objc_msgSend(v0, "setHidden:", 1);
  }
  else
  {
    __break(1u);
  }
}

id closure #1 in variable initialization expression of MOSuggestionCollectionViewBlankEntrySectionHeaderView.suggestionSegmentedControl()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  id v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  id v11;
  Class isa;
  id v13;
  void *v14;
  id v15;
  id v16;
  Swift::String v18;
  Swift::String v19;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Any>);
  v1 = swift_allocObject(v0, 96, 7);
  *(_OWORD *)(v1 + 16) = xmmword_10019EEE0;
  v2 = (void *)objc_opt_self(NSBundle);
  v3 = objc_msgSend(v2, "mainBundle");
  v18._object = (void *)0xEB00000000646564;
  v4._countAndFlagsBits = 0x6E656D6D6F636552;
  v4._object = (void *)0xEB00000000646564;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v18._countAndFlagsBits = 0x6E656D6D6F636552;
  v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v18);

  *(_QWORD *)(v1 + 56) = &type metadata for String;
  *(Swift::String *)(v1 + 32) = v6;
  v7 = objc_msgSend(v2, "mainBundle");
  v19._object = (void *)0xE600000000000000;
  v8._countAndFlagsBits = 0x746E65636552;
  v8._object = (void *)0xE600000000000000;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v19._countAndFlagsBits = 0x746E65636552;
  v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v19);

  *(_QWORD *)(v1 + 88) = &type metadata for String;
  *(Swift::String *)(v1 + 64) = v10;
  v11 = objc_allocWithZone((Class)UISegmentedControl);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v13 = objc_msgSend(v11, "initWithItems:", isa, swift_bridgeObjectRelease(v1).n128_f64[0]);

  objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v14 = (void *)objc_opt_self(UIColor);
  v15 = v13;
  v16 = objc_msgSend(v14, "secondarySystemBackgroundColor");
  objc_msgSend(v15, "setBackgroundColor:", v16);

  objc_msgSend(v15, "setSelectedSegmentIndex:", 0);
  objc_msgSend(v15, "setHidden:", 1);
  return v15;
}

void MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipModel.didset()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  Class isa;
  void *v6;
  id v7;
  void *v8;
  char *v9;
  uint64_t v10;
  id v11;
  _QWORD *v12;
  void (*v13)(__n128);
  __n128 v14;
  void *v15;
  char v16[24];

  v1 = v0;
  v2 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipView;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipView])
  {
    v3 = (void *)objc_opt_self(NSLayoutConstraint);
    v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipConstraints];
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint, NSLayoutConstraint_ptr);
    swift_bridgeObjectRetain(v4);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v3, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

    v6 = *(void **)&v1[v2];
    if (v6)
    {
      v7 = v6;
      objc_msgSend(v7, "removeFromSuperview");
      v8 = *(void **)&v1[v2];
      *(_QWORD *)&v1[v2] = 0;

    }
    objc_msgSend(v1, "setNeedsLayout");
  }
  v9 = &v1[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipModel];
  swift_beginAccess(&v1[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipModel], v16, 0, 0);
  v10 = *(_QWORD *)v9;
  if (*(_QWORD *)v9)
  {
    type metadata accessor for MOSuggestionPrivacyTipCell();
    v11 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    v12 = objc_msgSend(v11, "init", swift_retain(v10).n128_f64[0]);
    v13 = *(void (**)(__n128))((swift_isaMask & *v12) + 0x88);
    v14 = swift_retain(v10);
    v13(v14);
    objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v12, "setHidden:", 1);
    v15 = *(void **)&v1[v2];
    *(_QWORD *)&v1[v2] = v12;
    swift_release(v10);

  }
}

double MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipModel.getter()
{
  return MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipModel.getter(&OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipModel);
}

uint64_t MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipModel.setter(uint64_t a1)
{
  return MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipModel.setter(a1, &OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipModel, (void (*)(uint64_t))MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipModel.didset);
}

uint64_t (*MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipModel.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipModel, a1, 33, 0);
  return MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipModel.modify;
}

uint64_t MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipModel.modify(uint64_t a1, char a2)
{
  return MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipModel.modify(a1, a2, (uint64_t (*)(uint64_t))MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipModel.didset);
}

void MOSuggestionCollectionViewBlankEntrySectionHeaderView.stateOfMindTipModel.didset()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  Class isa;
  void *v6;
  id v7;
  void *v8;
  char *v9;
  uint64_t v10;
  id v11;
  _QWORD *v12;
  void (*v13)(__n128);
  __n128 v14;
  void *v15;
  _QWORD *v16;
  char v17[24];

  v1 = v0;
  v2 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_stateOfMindTipView;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_stateOfMindTipView])
  {
    v3 = (void *)objc_opt_self(NSLayoutConstraint);
    v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_stateOfMindTipConstraints];
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint, NSLayoutConstraint_ptr);
    swift_bridgeObjectRetain(v4);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v3, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

    v6 = *(void **)&v1[v2];
    if (v6)
    {
      v7 = v6;
      objc_msgSend(v7, "removeFromSuperview");
      v8 = *(void **)&v1[v2];
      *(_QWORD *)&v1[v2] = 0;

    }
    objc_msgSend(v1, "setNeedsLayout");
  }
  v9 = &v1[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_stateOfMindTipModel];
  swift_beginAccess(&v1[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_stateOfMindTipModel], v17, 0, 0);
  v10 = *(_QWORD *)v9;
  if (*(_QWORD *)v9)
  {
    type metadata accessor for MOSuggestionSheetStateOfMindTipCell();
    v11 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    v12 = objc_msgSend(v11, "init", swift_retain(v10).n128_f64[0]);
    v13 = *(void (**)(__n128))((swift_isaMask & *v12) + 0x80);
    v14 = swift_retain(v10);
    v13(v14);
    objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v12, "setHidden:", 1);
    v15 = *(void **)&v1[v2];
    *(_QWORD *)&v1[v2] = v12;
    v16 = v12;

    objc_msgSend(v1, "setNeedsLayout");
    swift_release(v10);

  }
}

double MOSuggestionCollectionViewBlankEntrySectionHeaderView.stateOfMindTipModel.getter()
{
  return MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipModel.getter(&OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_stateOfMindTipModel);
}

uint64_t MOSuggestionCollectionViewBlankEntrySectionHeaderView.stateOfMindTipModel.setter(uint64_t a1)
{
  return MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipModel.setter(a1, &OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_stateOfMindTipModel, (void (*)(uint64_t))MOSuggestionCollectionViewBlankEntrySectionHeaderView.stateOfMindTipModel.didset);
}

uint64_t MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipModel.setter(uint64_t a1, _QWORD *a2, void (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[24];

  v6 = (uint64_t *)(v3 + *a2);
  swift_beginAccess(v6, v10, 1, 0);
  v7 = *v6;
  *v6 = a1;
  swift_retain(a1);
  v8 = swift_release(v7);
  a3(v8);
  return swift_release(a1);
}

uint64_t (*MOSuggestionCollectionViewBlankEntrySectionHeaderView.stateOfMindTipModel.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_stateOfMindTipModel, a1, 33, 0);
  return MOSuggestionCollectionViewBlankEntrySectionHeaderView.stateOfMindTipModel.modify;
}

uint64_t MOSuggestionCollectionViewBlankEntrySectionHeaderView.stateOfMindTipModel.modify(uint64_t a1, char a2)
{
  return MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipModel.modify(a1, a2, (uint64_t (*)(uint64_t))MOSuggestionCollectionViewBlankEntrySectionHeaderView.stateOfMindTipModel.didset);
}

uint64_t MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipModel.modify(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result;

  result = swift_endAccess(a1);
  if ((a2 & 1) == 0)
    return a3(result);
  return result;
}

uint64_t MOSuggestionCollectionViewBlankEntrySectionHeaderView.usePublicUI.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_usePublicUI);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_usePublicUI, v3, 0, 0);
  return *v1;
}

uint64_t MOSuggestionCollectionViewBlankEntrySectionHeaderView.usePublicUI.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1
               + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_usePublicUI);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*MOSuggestionCollectionViewBlankEntrySectionHeaderView.usePublicUI.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_usePublicUI, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

Swift::Void __swiftcall MOSuggestionCollectionViewBlankEntrySectionHeaderView.setPublicUI(_:)(Swift::Bool a1)
{
  _QWORD *v1;

  if (((*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x198))() & 1) != a1)
  {
    if (a1)
      MOSuggestionCollectionViewBlankEntrySectionHeaderView.set3PConstraints()();
    else
      MOSuggestionCollectionViewBlankEntrySectionHeaderView.set1PConstraints()();
    (*(void (**)(Swift::Bool))((swift_isaMask & *v1) + 0x1A0))(a1);
    objc_msgSend(v1, "setNeedsLayout");
  }
}

Swift::Void __swiftcall MOSuggestionCollectionViewBlankEntrySectionHeaderView.activateTipConstraints()()
{
  char *v0;
  void *v1;
  char *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  Class isa;

  v1 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_stateOfMindTipView];
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    objc_msgSend(v0, "addSubview:", v3);
    v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v5 = swift_allocObject(v4, 64, 7);
    *(_OWORD *)(v5 + 16) = xmmword_10019ED40;
    v6 = objc_msgSend(v3, "topAnchor");
    v7 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_suggestionSegmentedControl], "bottomAnchor");
    v8 = objc_msgSend(v6, "constraintEqualToAnchor:constant:", v7, 24.0);

    *(_QWORD *)(v5 + 32) = v8;
    v9 = objc_msgSend(v3, "bottomAnchor");
    v10 = objc_msgSend(v2, "bottomAnchor");
    v11 = objc_msgSend(v9, "constraintLessThanOrEqualToAnchor:", v10);

    *(_QWORD *)(v5 + 40) = v11;
    v12 = objc_msgSend(v3, "leadingAnchor");
    v13 = objc_msgSend(v2, "leadingAnchor");
    v14 = objc_msgSend(v12, "constraintEqualToAnchor:constant:", v13, 0.0);

    *(_QWORD *)(v5 + 48) = v14;
    v15 = objc_msgSend(v3, "trailingAnchor");
    v16 = objc_msgSend(v2, "trailingAnchor");
    v17 = objc_msgSend(v15, "constraintEqualToAnchor:constant:", v16, 0.0);

    *(_QWORD *)(v5 + 56) = v17;
    specialized Array._endMutation()(v18);
    v19 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_stateOfMindTipConstraints;
    v20 = *(_QWORD *)&v2[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_stateOfMindTipConstraints];
    *(_QWORD *)&v2[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_stateOfMindTipConstraints] = v5;
    swift_bridgeObjectRelease(v20);
    v21 = (void *)objc_opt_self(NSLayoutConstraint);
    v22 = *(_QWORD *)&v2[v19];
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint, NSLayoutConstraint_ptr);
    swift_bridgeObjectRetain(v22);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v21, "activateConstraints:", isa, swift_bridgeObjectRelease(v22).n128_f64[0]);

  }
}

Swift::Void __swiftcall MOSuggestionCollectionViewBlankEntrySectionHeaderView.activatePrivacyTipConstraints()()
{
  char *v0;
  void *v1;
  char *v2;
  uint64_t (*v3)(void);
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  Class isa;
  id v24;

  v1 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipView];
  if (v1)
  {
    v2 = v0;
    v3 = *(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)v0) + 0xF0);
    v24 = v1;
    if ((v3() & 1) != 0)
    {

    }
    else
    {
      objc_msgSend(v0, "addSubview:", v24);
      v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      v5 = swift_allocObject(v4, 64, 7);
      *(_OWORD *)(v5 + 16) = xmmword_10019ED40;
      v6 = objc_msgSend(v24, "topAnchor");
      v7 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_suggestionSegmentedControl], "bottomAnchor");
      v8 = objc_msgSend(v6, "constraintEqualToAnchor:constant:", v7, 24.0);

      *(_QWORD *)(v5 + 32) = v8;
      v9 = objc_msgSend(v24, "bottomAnchor");
      v10 = objc_msgSend(v2, "bottomAnchor");
      v11 = objc_msgSend(v9, "constraintLessThanOrEqualToAnchor:", v10);

      *(_QWORD *)(v5 + 40) = v11;
      v12 = objc_msgSend(v24, "leadingAnchor");
      v13 = objc_msgSend(v2, "leadingAnchor");
      v14 = objc_msgSend(v12, "constraintEqualToAnchor:constant:", v13, 0.0);

      *(_QWORD *)(v5 + 48) = v14;
      v15 = objc_msgSend(v24, "trailingAnchor");
      v16 = objc_msgSend(v2, "trailingAnchor");
      v17 = objc_msgSend(v15, "constraintEqualToAnchor:constant:", v16, 0.0);

      *(_QWORD *)(v5 + 56) = v17;
      specialized Array._endMutation()(v18);
      v19 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipConstraints;
      v20 = *(_QWORD *)&v2[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipConstraints];
      *(_QWORD *)&v2[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipConstraints] = v5;
      swift_bridgeObjectRelease(v20);
      v21 = (void *)objc_opt_self(NSLayoutConstraint);
      v22 = *(_QWORD *)&v2[v19];
      type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint, NSLayoutConstraint_ptr);
      swift_bridgeObjectRetain(v22);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v21, "activateConstraints:", isa, swift_bridgeObjectRelease(v22).n128_f64[0]);

    }
  }
}

Swift::Void __swiftcall MOSuggestionCollectionViewBlankEntrySectionHeaderView.updateSelectedSegment(withSegment:)(MomentsUIService::SegmentType withSegment)
{
  void *v1;
  char v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  char isEscapingClosureAtFileLocation;
  _QWORD v10[5];
  uint64_t v11;

  v2 = withSegment & 1;
  v3 = (void *)objc_opt_self(UIView);
  v4 = swift_allocObject(&unk_1001EC5F8, 25, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_BYTE *)(v4 + 24) = v2;
  v5 = swift_allocObject(&unk_1001EC620, 32, 7);
  *(_QWORD *)(v5 + 16) = partial apply for closure #1 in MOSuggestionCollectionViewBlankEntrySectionHeaderView.updateSelectedSegment(withSegment:);
  *(_QWORD *)(v5 + 24) = v4;
  v10[4] = partial apply for thunk for @escaping @callee_guaranteed () -> (@out ());
  v11 = v5;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = thunk for @escaping @callee_guaranteed () -> ();
  v10[3] = &block_descriptor_39;
  v6 = _Block_copy(v10);
  v7 = v11;
  v8 = v1;
  swift_retain(v5);
  objc_msgSend(v3, "performWithoutAnimation:", v6, swift_release(v7).n128_f64[0]);
  _Block_release(v6);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v5, "", 138, 127, 40, 1);
  swift_release(v4);
  swift_release(v5);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

void MOSuggestionCollectionViewBlankEntrySectionHeaderView.set1PConstraints()()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  Class isa;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  Class v58;

  v1 = v0;
  v2 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_layoutConstrains;
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_layoutConstrains];
  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v56 = v3;
    else
      v56 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v56);
    swift_bridgeObjectRelease(v3);
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v4)
  {
    v5 = (void *)objc_opt_self(NSLayoutConstraint);
    v6 = *(_QWORD *)((char *)v1 + v2);
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint, NSLayoutConstraint_ptr);
    swift_bridgeObjectRetain(v6);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v5, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v6).n128_f64[0]);

    v8 = *(_QWORD *)((char *)v1 + v2);
    *(_QWORD *)((char *)v1 + v2) = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v8);
  }
  v9 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_newEntryButton;
  objc_msgSend(v1, "addSubview:", *(_QWORD *)((char *)v1+ OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_newEntryButton));
  v10 = *(void **)((char *)v1
                 + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_headerLabel);
  objc_msgSend(v1, "addSubview:", v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v12 = swift_allocObject(v11, 136, 7);
  *(_OWORD *)(v12 + 16) = xmmword_10019F0B0;
  v13 = objc_msgSend(*(id *)((char *)v1 + v9), "topAnchor");
  v57 = (char *)v2;
  v14 = objc_msgSend(v1, "topAnchor");
  v15 = objc_msgSend(v13, "constraintEqualToAnchor:", v14);

  *(_QWORD *)(v12 + 32) = v15;
  v16 = objc_msgSend(*(id *)((char *)v1 + v9), "centerXAnchor");
  v17 = objc_msgSend(v1, "centerXAnchor");
  v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

  *(_QWORD *)(v12 + 40) = v18;
  v19 = objc_msgSend(*(id *)((char *)v1 + v9), "heightAnchor");
  v20 = objc_msgSend(v19, "constraintEqualToConstant:", 44.0);

  *(_QWORD *)(v12 + 48) = v20;
  v21 = objc_msgSend(*(id *)((char *)v1 + v9), "leadingAnchor");
  v22 = objc_msgSend(v1, "leadingAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:constant:", v22, 24.0);

  *(_QWORD *)(v12 + 56) = v23;
  v24 = objc_msgSend(*(id *)((char *)v1 + v9), "trailingAnchor");
  v25 = objc_msgSend(v1, "trailingAnchor");
  v26 = objc_msgSend(v24, "constraintEqualToAnchor:constant:", v25, -24.0);

  *(_QWORD *)(v12 + 64) = v26;
  v27 = objc_msgSend(v10, "topAnchor");
  v28 = objc_msgSend(*(id *)((char *)v1 + v9), "bottomAnchor");
  v29 = objc_msgSend(v27, "constraintEqualToAnchor:constant:", v28, 24.0);

  *(_QWORD *)(v12 + 72) = v29;
  v30 = objc_msgSend(v10, "leadingAnchor");
  v31 = objc_msgSend(v1, "leadingAnchor");
  v32 = objc_msgSend(v30, "constraintEqualToAnchor:constant:", v31, 24.0);

  *(_QWORD *)(v12 + 80) = v32;
  v33 = objc_msgSend(v10, "trailingAnchor");
  v34 = objc_msgSend(v1, "trailingAnchor");
  v35 = objc_msgSend(v33, "constraintLessThanOrEqualToAnchor:", v34);

  *(_QWORD *)(v12 + 88) = v35;
  v36 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_suggestionSegmentedControl;
  v37 = objc_msgSend(*(id *)((char *)v1+ OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_suggestionSegmentedControl), "topAnchor");
  v38 = objc_msgSend(v10, "bottomAnchor");
  v39 = objc_msgSend(v37, "constraintEqualToAnchor:constant:", v38, 8.0);

  *(_QWORD *)(v12 + 96) = v39;
  v40 = objc_msgSend(*(id *)((char *)v1 + v36), "centerXAnchor");
  v41 = objc_msgSend(v1, "centerXAnchor");
  v42 = objc_msgSend(v40, "constraintEqualToAnchor:", v41);

  *(_QWORD *)(v12 + 104) = v42;
  v43 = objc_msgSend(*(id *)((char *)v1 + v36), "bottomAnchor");
  v44 = objc_msgSend(v1, "bottomAnchor");
  v45 = objc_msgSend(v43, "constraintLessThanOrEqualToAnchor:", v44);

  *(_QWORD *)(v12 + 112) = v45;
  v46 = objc_msgSend(*(id *)((char *)v1 + v36), "leadingAnchor");
  v47 = objc_msgSend(v1, "leadingAnchor");
  v48 = objc_msgSend(v46, "constraintEqualToAnchor:constant:", v47, 24.0);

  *(_QWORD *)(v12 + 120) = v48;
  v49 = objc_msgSend(*(id *)((char *)v1 + v36), "trailingAnchor");
  v50 = objc_msgSend(v1, "trailingAnchor");
  v51 = objc_msgSend(v49, "constraintEqualToAnchor:constant:", v50, -24.0);

  *(_QWORD *)(v12 + 128) = v51;
  specialized Array._endMutation()(v52);
  v53 = *(_QWORD *)&v57[(_QWORD)v1];
  *(_QWORD *)&v57[(_QWORD)v1] = v12;
  swift_bridgeObjectRelease(v53);
  v54 = (void *)objc_opt_self(NSLayoutConstraint);
  v55 = *(_QWORD *)&v57[(_QWORD)v1];
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint, NSLayoutConstraint_ptr);
  swift_bridgeObjectRetain(v55);
  v58 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v54, "activateConstraints:", v58, swift_bridgeObjectRelease(v55).n128_f64[0]);

}

void MOSuggestionCollectionViewBlankEntrySectionHeaderView.set3PConstraints()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  Class isa;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  Class v32;

  v1 = v0;
  v2 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_layoutConstrains;
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_layoutConstrains];
  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v31 = v3;
    else
      v31 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v31);
    swift_bridgeObjectRelease(v3);
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v4)
  {
    v5 = (void *)objc_opt_self(NSLayoutConstraint);
    v6 = *(_QWORD *)&v1[v2];
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint, NSLayoutConstraint_ptr);
    swift_bridgeObjectRetain(v6);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v5, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v6).n128_f64[0]);

    v8 = *(_QWORD *)&v1[v2];
    *(_QWORD *)&v1[v2] = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v8);
  }
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_newEntryButton], "removeFromSuperview");
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_headerLabel], "removeFromSuperview");
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v10 = swift_allocObject(v9, 72, 7);
  *(_OWORD *)(v10 + 16) = xmmword_1001A0A10;
  v11 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_suggestionSegmentedControl;
  v12 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_suggestionSegmentedControl], "topAnchor");
  v13 = objc_msgSend(v1, "topAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(v10 + 32) = v14;
  v15 = objc_msgSend(*(id *)&v1[v11], "centerXAnchor");
  v16 = objc_msgSend(v1, "centerXAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v10 + 40) = v17;
  v18 = objc_msgSend(*(id *)&v1[v11], "bottomAnchor");
  v19 = objc_msgSend(v1, "bottomAnchor");
  v20 = objc_msgSend(v18, "constraintLessThanOrEqualToAnchor:", v19);

  *(_QWORD *)(v10 + 48) = v20;
  v21 = objc_msgSend(*(id *)&v1[v11], "leadingAnchor");
  v22 = objc_msgSend(v1, "leadingAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:constant:", v22, 24.0);

  *(_QWORD *)(v10 + 56) = v23;
  v24 = objc_msgSend(*(id *)&v1[v11], "trailingAnchor");
  v25 = objc_msgSend(v1, "trailingAnchor");
  v26 = objc_msgSend(v24, "constraintEqualToAnchor:constant:", v25, -24.0);

  *(_QWORD *)(v10 + 64) = v26;
  specialized Array._endMutation()(v27);
  v28 = *(_QWORD *)&v1[v2];
  *(_QWORD *)&v1[v2] = v10;
  swift_bridgeObjectRelease(v28);
  v29 = (void *)objc_opt_self(NSLayoutConstraint);
  v30 = *(_QWORD *)&v1[v2];
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint, NSLayoutConstraint_ptr);
  swift_bridgeObjectRetain(v30);
  v32 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v29, "activateConstraints:", v32, swift_bridgeObjectRelease(v30).n128_f64[0]);

}

uint64_t sub_1001556E8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

id partial apply for closure #1 in MOSuggestionCollectionViewBlankEntrySectionHeaderView.updateSelectedSegment(withSegment:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(unsigned __int8 *)(v0 + 24);
  v3 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_suggestionSegmentedControl;
  objc_msgSend(*(id *)(v1+ OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_suggestionSegmentedControl), "setSelectedSegmentIndex:", v2);
  return objc_msgSend(*(id *)(v1 + v3), "layoutIfNeeded");
}

uint64_t sub_100155750()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double block_copy_helper_39(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t block_destroy_helper_39(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

char *MOSuggestionCollectionViewBlankEntrySectionHeaderView.init(frame:)(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  objc_super v22;

  v9 = &v4[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_segmentedDelegate];
  *v9 = 0;
  v9[1] = 0;
  v10 = &v4[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_newEntryDelegate];
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((_QWORD *)v10 + 4) = 0;
  v4[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipShown] = 0;
  v11 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_headerLabel;
  v12 = v4;
  closure #1 in variable initialization expression of MOSuggestionCollectionViewBlankEntrySectionHeaderView.headerLabel();
  *(_QWORD *)&v4[v11] = v13;
  v14 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_suggestionSegmentedControl;
  *(_QWORD *)&v12[v14] = closure #1 in variable initialization expression of MOSuggestionCollectionViewBlankEntrySectionHeaderView.suggestionSegmentedControl();
  v15 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_newEntryButton;
  type metadata accessor for MOSuggestionSheetNewEntryButton();
  *(_QWORD *)&v12[v15] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  *(_QWORD *)&v12[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipView] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipModel] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_stateOfMindTipView] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_stateOfMindTipModel] = 0;
  v12[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_usePublicUI] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_layoutConstrains] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v12[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v12[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_stateOfMindTipConstraints] = _swiftEmptyArrayStorage;

  v22.receiver = v12;
  v22.super_class = (Class)type metadata accessor for MOSuggestionCollectionViewBlankEntrySectionHeaderView();
  v16 = (char *)objc_msgSendSuper2(&v22, "initWithFrame:", a1, a2, a3, a4);
  v17 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_suggestionSegmentedControl;
  v18 = *(_QWORD *)&v16[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_suggestionSegmentedControl];
  v19 = v16;
  objc_msgSend(v19, "addSubview:", v18);
  v20 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_newEntryButton;
  objc_msgSend(*(id *)&v19[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_newEntryButton], "addTarget:action:forControlEvents:", v19, "pressedNewEntryButton", 64);
  objc_msgSend(*(id *)&v16[v17], "addTarget:action:forControlEvents:", v19, "pressedSegmentControl", 4096);
  objc_msgSend(*(id *)&v19[v20], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(*(id *)&v19[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_headerLabel], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(*(id *)&v16[v17], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  MOSuggestionCollectionViewBlankEntrySectionHeaderView.set1PConstraints()();

  return v19;
}

uint64_t type metadata accessor for MOSuggestionSheetNewEntryButton()
{
  return objc_opt_self(_TtC16MomentsUIService31MOSuggestionSheetNewEntryButton);
}

uint64_t type metadata accessor for MOSuggestionCollectionViewBlankEntrySectionHeaderView()
{
  return objc_opt_self(_TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView);
}

Swift::Void __swiftcall MOSuggestionCollectionViewBlankEntrySectionHeaderView.pressedSegmentControl()()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  v1 = objc_msgSend(*(id *)((char *)v0+ OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_suggestionSegmentedControl), "selectedSegmentIndex");
  if (v1)
  {
    if (v1 != (id)1)
      return;
    v2 = 1;
  }
  else
  {
    v2 = 0;
  }
  v3 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xC0))();
  if (v3)
  {
    v5 = v3;
    v6 = v4;
    ObjectType = swift_getObjectType(v3);
    (*(void (**)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 8))(v2, 0, 0, ObjectType, v6);
    swift_unknownObjectRelease(v5);
  }
}

Swift::Void __swiftcall MOSuggestionCollectionViewBlankEntrySectionHeaderView.pressedNewEntryButton()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  NSString v4;
  void *v5;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;
  _QWORD aBlock[3];
  void *v10;
  void (__swiftcall *v11)();
  uint64_t v12;

  (*(void (**)(_QWORD *__return_ptr))((swift_isaMask & *v0) + 0xD8))(aBlock);
  if (v10)
  {
    outlined init with copy of MOProtectedAppsManagerDelegate((uint64_t)aBlock, (uint64_t)v6);
    outlined destroy of MOSuggestionSheetNewEntryButtonDelegate?((uint64_t)aBlock);
    v1 = v7;
    v2 = v8;
    __swift_project_boxed_opaque_existential_1(v6, v7);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
    __swift_destroy_boxed_opaque_existential_1(v6);
  }
  else
  {
    outlined destroy of MOSuggestionSheetNewEntryButtonDelegate?((uint64_t)aBlock);
  }
  v3 = objc_msgSend(objc_allocWithZone((Class)MOPromptManager), "init");
  v4 = String._bridgeToObjectiveC()();
  v11 = MOSuggestionInterstitialExpandableListViewCellConstants.init();
  v12 = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed CGImageRef?) -> ();
  v10 = &block_descriptor_6_6;
  v5 = _Block_copy(aBlock);
  objc_msgSend(v3, "triggerFeedbackAssistantFlow:handler:", v4, v5);
  _Block_release(v5);

}

id MOSuggestionCollectionViewBlankEntrySectionHeaderView.__deallocating_deinit()
{
  return MOSuggestionRoundView.__deallocating_deinit(type metadata accessor for MOSuggestionCollectionViewBlankEntrySectionHeaderView);
}

Swift::Void __swiftcall MOSuggestionCollectionViewBlankEntrySectionHeaderView.shouldUpdateHeader(newEntryButtonOnly:)(Swift::Bool newEntryButtonOnly)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __n128 v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD aBlock[5];
  uint64_t v20;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue, OS_dispatch_queue_ptr);
  v11 = (void *)static OS_dispatch_queue.main.getter(v10);
  v12 = swift_allocObject(&unk_1001EC698, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16);
  v13 = swift_allocObject(&unk_1001EC6C0, 25, 7);
  *(_QWORD *)(v13 + 16) = v12;
  *(_BYTE *)(v13 + 24) = newEntryButtonOnly;
  aBlock[4] = partial apply for closure #1 in MOSuggestionCollectionViewBlankEntrySectionHeaderView.shouldUpdateHeader(newEntryButtonOnly:);
  v20 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_15_4;
  v14 = _Block_copy(aBlock);
  swift_release(v20);
  static DispatchQoS.unspecified.getter(v15);
  aBlock[0] = _swiftEmptyArrayStorage;
  v16 = lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  v18 = lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v17, v18, v2, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void closure #1 in MOSuggestionCollectionViewBlankEntrySectionHeaderView.shouldUpdateHeader(newEntryButtonOnly:)(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  _BYTE v19[24];
  _BYTE v20[24];
  _BYTE v21[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v21, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = objc_retain(*(id *)(Strong
                           + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_suggestionSegmentedControl));

    objc_msgSend(v6, "setHidden:", a2 & 1);
  }
  swift_beginAccess(v3, v20, 0, 0);
  v7 = swift_unknownObjectWeakLoadStrong(v3);
  if (v7)
  {
    v8 = (void *)v7;
    v9 = objc_retain(*(id *)(v7
                           + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_headerLabel));

    objc_msgSend(v9, "setHidden:", a2 & 1);
  }
  swift_beginAccess(v3, v19, 0, 0);
  v10 = swift_unknownObjectWeakLoadStrong(v3);
  if (v10)
  {
    v11 = (void *)v10;
    v12 = *(void **)(v10
                   + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipView);
    v13 = v12;

    if (v12)
    {
      objc_msgSend(v13, "setHidden:", a2 & 1);

    }
  }
  swift_beginAccess(v3, &v18, 0, 0);
  v14 = swift_unknownObjectWeakLoadStrong(v3);
  if (v14)
  {
    v15 = (void *)v14;
    v16 = *(void **)(v14
                   + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_stateOfMindTipView);
    v17 = v16;

    if (v16)
    {
      objc_msgSend(v17, "setHidden:", a2 & 1);

    }
  }
}

Swift::Void __swiftcall MOSuggestionCollectionViewBlankEntrySectionHeaderView.showTip(tipType:)(MomentsUIService::MOSuggestionTipType tipType)
{
  _QWORD *v1;
  uint64_t v2;

  if (tipType == MomentsUIService_MOSuggestionTipType_privacy)
  {
    v2 = 56;
  }
  else
  {
    if (tipType != MomentsUIService_MOSuggestionTipType_stateOfMind)
      return;
    v2 = 55;
  }
  (*(void (**)(void))((swift_isaMask & *v1) + 8 * v2))();
}

Swift::Void __swiftcall MOSuggestionCollectionViewBlankEntrySectionHeaderView.removeTip(tipType:)(MomentsUIService::MOSuggestionTipType tipType)
{
  char *v1;
  void *v2;
  uint64_t v3;
  Class v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  Class isa;
  void **v9;
  void *v10;
  id v11;
  void *v12;

  if (tipType == MomentsUIService_MOSuggestionTipType_stateOfMind)
  {
    v6 = (void *)objc_opt_self(NSLayoutConstraint);
    v7 = *(_QWORD *)&v1[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_stateOfMindTipConstraints];
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint, NSLayoutConstraint_ptr);
    swift_bridgeObjectRetain(v7);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v6, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v7).n128_f64[0]);

    v5 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_stateOfMindTipView;
  }
  else
  {
    if (tipType != MomentsUIService_MOSuggestionTipType_privacy)
      return;
    v2 = (void *)objc_opt_self(NSLayoutConstraint);
    v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipConstraints];
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint, NSLayoutConstraint_ptr);
    swift_bridgeObjectRetain(v3);
    v4 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v2, "deactivateConstraints:", v4, swift_bridgeObjectRelease(v3).n128_f64[0]);

    v5 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipView;
  }
  v9 = (void **)&v1[v5];
  v10 = *(void **)&v1[v5];
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v11, "removeFromSuperview");
    v12 = *v9;
    *v9 = 0;

  }
  objc_msgSend(v1, "setNeedsLayout");
}

unint64_t static MOSuggestionCollectionViewOnboardingSectionHeaderView.reuseIdentifier.getter()
{
  return 0xD000000000000035;
}

uint64_t MOSuggestionCollectionViewOnboardingSectionHeaderView.newEntryDelegate.getter@<X0>(uint64_t a1@<X8>)
{
  return MOSuggestionCollectionViewBlankEntrySectionHeaderView.newEntryDelegate.getter(&OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_newEntryDelegate, a1);
}

uint64_t MOSuggestionCollectionViewBlankEntrySectionHeaderView.newEntryDelegate.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  _BYTE v6[24];

  v4 = v2 + *a1;
  swift_beginAccess(v4, v6, 0, 0);
  return outlined init with copy of MOSuggestionSheetNewEntryButtonDelegate?(v4, a2);
}

uint64_t MOSuggestionCollectionViewOnboardingSectionHeaderView.newEntryDelegate.setter(uint64_t a1)
{
  return MOSuggestionCollectionViewBlankEntrySectionHeaderView.newEntryDelegate.setter(a1, &OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_newEntryDelegate);
}

uint64_t MOSuggestionCollectionViewBlankEntrySectionHeaderView.newEntryDelegate.setter(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  _BYTE v6[24];

  v4 = v2 + *a2;
  swift_beginAccess(v4, v6, 33, 0);
  outlined assign with take of MOSuggestionSheetNewEntryButtonDelegate?(a1, v4);
  return swift_endAccess(v6);
}

uint64_t (*MOSuggestionCollectionViewOnboardingSectionHeaderView.newEntryDelegate.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_newEntryDelegate, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

double MOSuggestionCollectionViewOnboardingSectionHeaderView.onboardingTipModel.getter()
{
  return MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipModel.getter(&OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipModel);
}

double MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipModel.getter(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  double result;
  _BYTE v4[24];

  v2 = (_QWORD *)(v1 + *a1);
  swift_beginAccess(v2, v4, 0, 0);
  *(_QWORD *)&result = swift_retain(*v2).n128_u64[0];
  return result;
}

double MOSuggestionCollectionViewOnboardingSectionHeaderView.onboardingTipModel.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  _BYTE v13[24];

  v3 = (uint64_t *)(v1
                 + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipModel);
  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipModel, v13, 1, 0);
  v4 = *v3;
  *v3 = a1;
  swift_retain(a1);
  swift_release(v4);
  v5 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipView;
  v6 = *(void **)(v1
                + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipView);
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v7, "removeFromSuperview");
    v8 = *(void **)(v1 + v5);
    *(_QWORD *)(v1 + v5) = 0;

  }
  v9 = *v3;
  if (v9)
  {
    swift_retain(v9);
    MOSuggestionCollectionViewOnboardingSectionHeaderView.setupOnboardingTip(tipModel:)(v10);
    swift_release(a1);
    v11 = v9;
  }
  else
  {
    v11 = a1;
  }
  *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  return result;
}

void (*MOSuggestionCollectionViewOnboardingSectionHeaderView.onboardingTipModel.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipModel;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return MOSuggestionCollectionViewOnboardingSectionHeaderView.onboardingTipModel.modify;
}

void MOSuggestionCollectionViewOnboardingSectionHeaderView.onboardingTipModel.modify(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = v3[3];
    v5 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipView;
    v6 = *(void **)(v4
                  + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipView);
    if (v6)
    {
      v7 = v6;
      objc_msgSend(v7, "removeFromSuperview");
      v8 = *(void **)(v4 + v5);
      *(_QWORD *)(v4 + v5) = 0;

      v4 = v3[3];
    }
    v9 = v3[4];
    v10 = *(_QWORD *)(v4 + v9);
    if (v10)
    {
      swift_retain(*(_QWORD *)(v4 + v9));
      MOSuggestionCollectionViewOnboardingSectionHeaderView.setupOnboardingTip(tipModel:)(v11);
      swift_release(v10);
    }
  }
  free(v3);
}

Swift::Void __swiftcall MOSuggestionCollectionViewOnboardingSectionHeaderView.setPublicUI(_:)(Swift::Bool a1)
{
  char *v1;

  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_newEntryButton], "setHidden:", a1);
  objc_msgSend(v1, "setNeedsDisplay");
}

char *MOSuggestionCollectionViewOnboardingSectionHeaderView.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  uint64_t v10;
  id v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  Class isa;
  objc_super v37;

  v9 = &v4[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_newEntryDelegate];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  v10 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_newEntryButton;
  type metadata accessor for MOSuggestionSheetNewEntryButton();
  v11 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v12 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v11, "init");
  *(_QWORD *)&v12[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipView] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v12[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipModel] = 0;

  v37.receiver = v12;
  v37.super_class = (Class)type metadata accessor for MOSuggestionCollectionViewOnboardingSectionHeaderView();
  v13 = (char *)objc_msgSendSuper2(&v37, "initWithFrame:", a1, a2, a3, a4);
  v14 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_newEntryButton;
  v15 = *(_QWORD *)&v13[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_newEntryButton];
  v16 = v13;
  objc_msgSend(v16, "addSubview:", v15);
  objc_msgSend(*(id *)&v13[v14], "addTarget:action:forControlEvents:", v16, "pressedNewEntryButton", 64);
  v17 = (void *)objc_opt_self(NSLayoutConstraint);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v19 = swift_allocObject(v18, 72, 7);
  *(_OWORD *)(v19 + 16) = xmmword_1001A0A10;
  v20 = objc_msgSend(*(id *)&v13[v14], "centerXAnchor");
  v21 = objc_msgSend(v16, "centerXAnchor");
  v22 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);

  *(_QWORD *)(v19 + 32) = v22;
  v23 = objc_msgSend(*(id *)&v13[v14], "heightAnchor");
  v24 = objc_msgSend(v23, "constraintEqualToConstant:", 44.0);

  *(_QWORD *)(v19 + 40) = v24;
  v25 = objc_msgSend(*(id *)&v13[v14], "topAnchor");
  v26 = objc_msgSend(v16, "topAnchor");
  v27 = objc_msgSend(v25, "constraintEqualToAnchor:", v26);

  *(_QWORD *)(v19 + 48) = v27;
  v28 = objc_msgSend(*(id *)&v13[v14], "leadingAnchor");
  v29 = objc_msgSend(v16, "leadingAnchor");
  v30 = objc_msgSend(v28, "constraintEqualToAnchor:constant:", v29, 24.0);

  *(_QWORD *)(v19 + 56) = v30;
  v31 = objc_msgSend(*(id *)&v13[v14], "trailingAnchor");
  v32 = objc_msgSend(v16, "trailingAnchor");
  v33 = objc_msgSend(v31, "constraintEqualToAnchor:constant:", v32, -24.0);

  *(_QWORD *)(v19 + 64) = v33;
  specialized Array._endMutation()(v34);
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v17, "activateConstraints:", isa, swift_bridgeObjectRelease(v19).n128_f64[0]);

  return v16;
}

double MOSuggestionCollectionViewOnboardingSectionHeaderView.setupOnboardingTip(tipModel:)(uint64_t a1)
{
  char *v1;
  char *v2;
  _QWORD *v4;
  void (*v5)(__n128);
  __n128 v6;
  void *v7;
  _QWORD *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  double result;
  uint64_t v28;

  v2 = v1;
  type metadata accessor for MOSuggestionSheetOnboardingTipCell();
  v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v5 = *(void (**)(__n128))((swift_isaMask & *v4) + 0x60);
  v6 = swift_retain(a1);
  v5(v6);
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v7 = *(void **)&v2[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipView];
  *(_QWORD *)&v2[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipView] = v4;
  v8 = v4;

  LODWORD(v7) = *(unsigned __int8 *)(a1 + 32);
  v9 = objc_msgSend(v8, "topAnchor");
  if ((_DWORD)v7 == 1)
  {
    v10 = objc_msgSend(v2, "topAnchor");
    v11 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v10, 12.0);
  }
  else
  {
    v10 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_newEntryButton], "bottomAnchor");
    v11 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v10, 24.0);
  }
  v12 = v11;

  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v14 = swift_allocObject(v13, 64, 7);
  *(_OWORD *)(v14 + 16) = xmmword_10019ED40;
  *(_QWORD *)(v14 + 32) = v12;
  v15 = v12;
  v16 = objc_msgSend(v8, "bottomAnchor");
  v17 = objc_msgSend(v2, "bottomAnchor");
  v18 = objc_msgSend(v16, "constraintLessThanOrEqualToAnchor:", v17);

  *(_QWORD *)(v14 + 40) = v18;
  v19 = objc_msgSend(v8, "leadingAnchor");
  v20 = objc_msgSend(v2, "leadingAnchor");
  v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

  *(_QWORD *)(v14 + 48) = v21;
  v22 = objc_msgSend(v8, "trailingAnchor");
  v23 = objc_msgSend(v2, "trailingAnchor");
  v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

  *(_QWORD *)(v14 + 56) = v24;
  v28 = v14;
  specialized Array._endMutation()(v25);
  v26 = *(_QWORD *)&v2[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipConstraints];
  *(_QWORD *)&v2[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipConstraints] = v28;

  *(_QWORD *)&result = swift_bridgeObjectRelease(v26).n128_u64[0];
  return result;
}

Swift::Void __swiftcall MOSuggestionCollectionViewOnboardingSectionHeaderView.activateOnboardingConstraints()()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  Class isa;

  v1 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipView];
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v0, "addSubview:", v2);
    v3 = (void *)objc_opt_self(NSLayoutConstraint);
    v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipConstraints];
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint, NSLayoutConstraint_ptr);
    swift_bridgeObjectRetain(v4);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v3, "activateConstraints:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

  }
}

Swift::Void __swiftcall MOSuggestionCollectionViewOnboardingSectionHeaderView.pressedNewEntryButton()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[3];
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[5];

  (*(void (**)(_QWORD *__return_ptr))((swift_isaMask & *v0) + 0x78))(v6);
  if (v6[3])
  {
    outlined init with copy of MOProtectedAppsManagerDelegate((uint64_t)v6, (uint64_t)v3);
    outlined destroy of MOSuggestionSheetNewEntryButtonDelegate?((uint64_t)v6);
    v1 = v4;
    v2 = v5;
    __swift_project_boxed_opaque_existential_1(v3, v4);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
    __swift_destroy_boxed_opaque_existential_1(v3);
  }
  else
  {
    outlined destroy of MOSuggestionSheetNewEntryButtonDelegate?((uint64_t)v6);
  }
}

Swift::Void __swiftcall MOSuggestionCollectionViewOnboardingSectionHeaderView.removeTip(tipType:)(MomentsUIService::MOSuggestionTipType tipType)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;

  if (tipType == MomentsUIService_MOSuggestionTipType_onboarding)
  {
    v2 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipView;
    v3 = *(void **)(v1
                  + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipView);
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v4, "removeFromSuperview");
      v5 = *(id *)(v1 + v2);
      *(_QWORD *)(v1 + v2) = 0;

    }
  }
}

Swift::Void __swiftcall MOSuggestionCollectionViewOnboardingSectionHeaderView.showTip(tipType:)(MomentsUIService::MOSuggestionTipType tipType)
{
  _QWORD *v1;

  if (tipType == MomentsUIService_MOSuggestionTipType_onboarding)
    (*(void (**)(void))((swift_isaMask & *v1) + 0x108))();
}

id MOSuggestionCollectionViewOnboardingSectionHeaderView.__deallocating_deinit()
{
  return MOSuggestionRoundView.__deallocating_deinit(type metadata accessor for MOSuggestionCollectionViewOnboardingSectionHeaderView);
}

uint64_t protocol witness for MOSuggestionCollectionViewBlankEntrySectionHeaderViewDelegate.shouldUpdateHeader(newEntryButtonOnly:) in conformance MOSuggestionCollectionViewOnboardingSectionHeaderView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x120))();
}

uint64_t protocol witness for MOSuggestionCollectionViewBlankEntrySectionHeaderViewDelegate.showTip(tipType:) in conformance MOSuggestionCollectionViewOnboardingSectionHeaderView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x128))();
}

uint64_t protocol witness for MOSuggestionCollectionViewBlankEntrySectionHeaderViewDelegate.removeTip(tipType:) in conformance MOSuggestionCollectionViewOnboardingSectionHeaderView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x118))();
}

id MOSuggestionSheetNewEntryButton.init(frame:)(double a1, double a2, double a3, double a4)
{
  void *v4;
  id v9;
  objc_super v11;

  v11.receiver = v4;
  v11.super_class = (Class)type metadata accessor for MOSuggestionSheetNewEntryButton();
  v9 = objc_msgSendSuper2(&v11, "initWithFrame:", a1, a2, a3, a4);
  MOSuggestionSheetNewEntryButton.sharedInit()();

  return v9;
}

id MOSuggestionSheetNewEntryButton.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  objc_super v7;

  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for MOSuggestionSheetNewEntryButton();
  v3 = objc_msgSendSuper2(&v7, "initWithCoder:", a1);
  v4 = v3;
  if (v3)
  {
    v5 = v3;
    MOSuggestionSheetNewEntryButton.sharedInit()();

  }
  return v4;
}

uint64_t MOSuggestionSheetNewEntryButton.sharedInit()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  id v15;
  NSString v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  Swift::String v23;
  Swift::String v24;
  Swift::String v25;
  uint64_t v26;
  uint64_t inited;
  NSString *v28;
  id v29;
  uint64_t v30;
  NSString *v31;
  id v32;
  unint64_t v33;
  void *v34;
  uint64_t v35;
  char *v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v44;
  id v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  id v52;
  char v53[120];
  Swift::String v54;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  __chkstk_darwin(v0);
  v51 = (char *)&v44 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for UIButton.Configuration.CornerStyle(0);
  v47 = *(_QWORD *)(v2 - 8);
  v48 = v2;
  __chkstk_darwin(v2);
  v46 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AttributedString?);
  __chkstk_darwin(v7);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UIButton.Configuration(0);
  v49 = *(_QWORD *)(v10 - 8);
  v50 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (void *)objc_opt_self(UIFont);
  v14 = objc_msgSend(v13, "preferredFontForTextStyle:", UIFontTextStyleHeadline);
  v15 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:", v14);

  v16 = String._bridgeToObjectiveC()();
  v45 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v16, v15);

  static UIButton.Configuration.filled()(v17);
  v18 = (void *)objc_opt_self(UIColor);
  v19 = objc_msgSend(v18, "systemIndigoColor");
  v20 = objc_msgSend(v18, "systemIndigoColor");
  v21 = objc_msgSend(v20, "colorWithAlphaComponent:", 0.15);

  v22 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v54._countAndFlagsBits = 0xD000000000000019;
  v54._object = (void *)0x80000001001AEFE0;
  v23._countAndFlagsBits = 0x72746E452077654ELL;
  v23._object = (void *)0xE900000000000079;
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  v25 = NSLocalizedString(_:tableName:bundle:value:comment:)(v23, (Swift::String_optional)0, (NSBundle)v22, v24, v54);

  v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(NSAttributedStringKey, Any)>);
  inited = swift_initStackObject(v26, v53);
  *(_OWORD *)(inited + 16) = xmmword_10019EEE0;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v28 = NSFontAttributeName;
  v29 = objc_msgSend(v13, "preferredFontForTextStyle:", UIFontTextStyleHeadline);
  v30 = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIFont, UIFont_ptr);
  *(_QWORD *)(inited + 40) = v29;
  *(_QWORD *)(inited + 64) = v30;
  *(_QWORD *)(inited + 72) = NSForegroundColorAttributeName;
  *(_QWORD *)(inited + 104) = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIColor, UIColor_ptr);
  *(_QWORD *)(inited + 80) = v19;
  v31 = NSForegroundColorAttributeName;
  v32 = v19;
  v33 = specialized Dictionary.init(dictionaryLiteral:)(inited);
  AttributeContainer.init(_:)(v33);
  v34 = v45;
  AttributedString.init(_:attributes:)(v25._countAndFlagsBits, v25._object, v6);
  v35 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v9, 0, 1, v35);
  UIButton.Configuration.attributedTitle.setter(v9);
  v36 = v46;
  (*(void (**)(char *, _QWORD, uint64_t))(v47 + 104))(v46, enum case for UIButton.Configuration.CornerStyle.large(_:), v48);
  UIButton.Configuration.cornerStyle.setter(v36);
  if (v34)
    v37 = objc_msgSend(v34, "imageWithTintColor:renderingMode:", v32, 1);
  else
    v37 = 0;
  UIButton.Configuration.image.setter(v37);
  v38 = v21;
  UIButton.Configuration.baseBackgroundColor.setter(v21);
  v39 = v52;
  objc_msgSend(v52, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v41 = v49;
  v40 = v50;
  v42 = v51;
  (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v51, v12, v50);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v42, 0, 1, v40);
  UIButton.configuration.setter(v42);
  objc_msgSend(v39, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityLarge);

  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v12, v40);
}

id MOSuggestionSheetNewEntryButton.__deallocating_deinit()
{
  return MOSuggestionRoundView.__deallocating_deinit(type metadata accessor for MOSuggestionSheetNewEntryButton);
}

void specialized MOSuggestionCollectionViewBlankEntrySectionHeaderView.init(coder:)()
{
  _BYTE *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = &v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_segmentedDelegate];
  *v1 = 0;
  v1[1] = 0;
  v2 = &v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_newEntryDelegate];
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_QWORD *)v2 + 4) = 0;
  v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipShown] = 0;
  v3 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_headerLabel;
  closure #1 in variable initialization expression of MOSuggestionCollectionViewBlankEntrySectionHeaderView.headerLabel();
  *(_QWORD *)&v0[v3] = v4;
  v5 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_suggestionSegmentedControl;
  *(_QWORD *)&v0[v5] = closure #1 in variable initialization expression of MOSuggestionCollectionViewBlankEntrySectionHeaderView.suggestionSegmentedControl();
  v6 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_newEntryButton;
  type metadata accessor for MOSuggestionSheetNewEntryButton();
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipModel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_stateOfMindTipView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_stateOfMindTipModel] = 0;
  v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_usePublicUI] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_layoutConstrains] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_stateOfMindTipConstraints] = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionCollectionViewBlankEntrySectionHeaderView.swift", 76, 2, 231, 0);
  __break(1u);
}

uint64_t outlined destroy of MOSuggestionSheetNewEntryButtonDelegate?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionSheetNewEntryButtonDelegate?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001578A8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001578CC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void partial apply for closure #1 in MOSuggestionCollectionViewBlankEntrySectionHeaderView.shouldUpdateHeader(newEntryButtonOnly:)()
{
  uint64_t v0;

  closure #1 in MOSuggestionCollectionViewBlankEntrySectionHeaderView.shouldUpdateHeader(newEntryButtonOnly:)(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t type metadata accessor for MOSuggestionCollectionViewOnboardingSectionHeaderView()
{
  return objc_opt_self(_TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView);
}

void specialized MOSuggestionCollectionViewOnboardingSectionHeaderView.init(coder:)()
{
  char *v0;
  char *v1;
  uint64_t v2;

  v1 = &v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_newEntryDelegate];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_QWORD *)v1 + 4) = 0;
  v2 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_newEntryButton;
  type metadata accessor for MOSuggestionSheetNewEntryButton();
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipModel] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionCollectionViewBlankEntrySectionHeaderView.swift", 76, 2, 355, 0);
  __break(1u);
}

uint64_t sub_1001579E4@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xC0))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100157A24(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **a2) + 0xC8);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t sub_100157A74(_QWORD **a1)
{
  return (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xD8))();
}

uint64_t sub_100157AAC(uint64_t a1, _QWORD **a2)
{
  _BYTE v4[40];

  outlined init with copy of MOSuggestionSheetNewEntryButtonDelegate?(a1, (uint64_t)v4);
  return (*(uint64_t (**)(_BYTE *))((swift_isaMask & **a2) + 0xE0))(v4);
}

uint64_t sub_100157AFC@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xF0))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_100157B40(unsigned __int8 *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(_QWORD))((swift_isaMask & **a2) + 0xF8))(*a1);
}

uint64_t sub_100157B7C@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x150))();
  *a2 = result;
  return result;
}

uint64_t sub_100157BBC(_QWORD *a1, _QWORD **a2)
{
  uint64_t (*v2)(__n128);
  __n128 v3;

  v2 = *(uint64_t (**)(__n128))((swift_isaMask & **a2) + 0x158);
  v3 = swift_retain(*a1);
  return v2(v3);
}

uint64_t sub_100157BFC@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x180))();
  *a2 = result;
  return result;
}

uint64_t sub_100157C3C(_QWORD *a1, _QWORD **a2)
{
  uint64_t (*v2)(__n128);
  __n128 v3;

  v2 = *(uint64_t (**)(__n128))((swift_isaMask & **a2) + 0x188);
  v3 = swift_retain(*a1);
  return v2(v3);
}

uint64_t sub_100157C7C@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x198))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_100157CC0(unsigned __int8 *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(_QWORD))((swift_isaMask & **a2) + 0x1A0))(*a1);
}

uint64_t sub_100157CFC(_QWORD **a1)
{
  return (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x78))();
}

uint64_t sub_100157D34(uint64_t a1, _QWORD **a2)
{
  _BYTE v4[40];

  outlined init with copy of MOSuggestionSheetNewEntryButtonDelegate?(a1, (uint64_t)v4);
  return (*(uint64_t (**)(_BYTE *))((swift_isaMask & **a2) + 0x80))(v4);
}

uint64_t sub_100157D84@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xD8))();
  *a2 = result;
  return result;
}

uint64_t sub_100157DC4(_QWORD *a1, _QWORD **a2)
{
  uint64_t (*v2)(__n128);
  __n128 v3;

  v2 = *(uint64_t (**)(__n128))((swift_isaMask & **a2) + 0xE0);
  v3 = swift_retain(*a1);
  return v2(v3);
}

ValueMetadata *type metadata accessor for NewEntryHeaderConstants()
{
  return &type metadata for NewEntryHeaderConstants;
}

void specialized RangeReplaceableCollection<>.removeLast()()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  v2 = v0[1];
  if ((v2 & 0x2000000000000000) == 0)
  {
    v3 = v1 & 0xFFFFFFFFFFFFLL;
    if ((v1 & 0xFFFFFFFFFFFFLL) != 0)
      goto LABEL_5;
    __break(1u);
  }
  v3 = HIBYTE(v2) & 0xF;
  if (!v3)
  {
    __break(1u);
    return;
  }
LABEL_5:
  v4 = 7;
  if (((v2 >> 60) & ((v1 & 0x800000000000000) == 0)) != 0)
    v4 = 11;
  v5 = String.index(before:)(v4 | (v3 << 16));
  String.remove(at:)(v5);
}

Swift::String __swiftcall String.init(combinedIdentifiersFrom:)(Swift::OpaquePointer combinedIdentifiersFrom)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  void **v6;
  void *v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  Swift::String result;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v2 = *((_QWORD *)combinedIdentifiersFrom._rawValue + 2);
  if (v2 == 1)
  {
    v4 = *((_QWORD *)combinedIdentifiersFrom._rawValue + 4);
    v3 = *((_QWORD *)combinedIdentifiersFrom._rawValue + 5);
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRelease(combinedIdentifiersFrom._rawValue);
    v16 = v4;
    v17 = v3;
    v5 = &v16;
  }
  else
  {
    v16 = 0;
    v17 = 0xE000000000000000;
    if (v2)
    {
      v6 = (void **)((char *)combinedIdentifiersFrom._rawValue + 40);
      do
      {
        v7 = *v6;
        v14 = (uint64_t)*(v6 - 1);
        v15 = (unint64_t)v7;
        swift_bridgeObjectRetain_n(v7, 2);
        v8._countAndFlagsBits = 38;
        v8._object = (void *)0xE100000000000000;
        String.append(_:)(v8);
        swift_bridgeObjectRelease(v7);
        v9._countAndFlagsBits = v14;
        v9._object = v7;
        String.append(_:)(v9);
        swift_bridgeObjectRelease(v7);
        v6 += 2;
        --v2;
      }
      while (v2);
    }
    swift_bridgeObjectRelease(combinedIdentifiersFrom._rawValue);
    specialized RangeReplaceableCollection<>.removeLast()();
    swift_bridgeObjectRelease(v10);
    v14 = v16;
    v15 = v17;
    v5 = &v14;
  }
  v11 = String.init<A>(_:)(v5, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
  result._object = v12;
  result._countAndFlagsBits = v11;
  return result;
}

int64_t MOSuggestionInterstitialListAssetViewModel.__allocating_init(photoAssets:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  _QWORD *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  char v68;
  uint64_t ObjCClassMetadata;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  uint8_t *v73;
  int v74;
  char v75;
  int v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  id v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  void (*v92)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v93)(uint64_t, uint64_t, uint64_t);
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  char v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  unint64_t v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  unint64_t v135;
  _QWORD *v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  unint64_t v141;
  void *v142;
  uint64_t v143;
  uint64_t v144;
  id v145;
  unint64_t v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  int v170;
  __int128 v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t countAndFlagsBits;
  uint64_t *v177;
  __int128 v178;
  uint64_t v179;
  uint64_t v180;
  id v181;
  id v182;
  void *object;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  _QWORD *v188;
  _QWORD *v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  unint64_t v197;
  uint64_t v198;
  unint64_t v199;
  __int128 v200;
  __int128 v201;
  char v202[8];
  char v203[16];
  uint64_t v204;
  id v205[2];
  uint64_t v206;
  unint64_t v207;
  uint64_t v208;
  _QWORD v209[3];
  char v210;

  v185 = type metadata accessor for MOSuggestionSheetAssetDateRange(0);
  v184 = *(_QWORD *)(v185 - 8);
  v3 = __chkstk_darwin(v185);
  v186 = (uint64_t)&v171 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v191 = (uint64_t)&v171 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v6);
  v192 = (char *)&v171 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v194 = type metadata accessor for Date(0);
  v193 = *(_QWORD *)(v194 - 8);
  __chkstk_darwin(v194);
  v187 = (char *)&v171 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
    goto LABEL_116;
  v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v10 < 1)
  {
LABEL_120:
    v149 = a1;
    goto LABEL_121;
  }
LABEL_3:
  v197 = v9;
  v177 = v1;
  v205[0] = _swiftEmptyArrayStorage;
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v10, 0);
  v9 = 0;
  v11 = v205[0];
  v199 = a1 & 0xC000000000000001;
  v198 = a1;
  do
  {
    if (v199)
      v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, a1);
    else
      v12 = *(id *)(a1 + 8 * v9 + 32);
    v13 = v12;
    v14 = objc_msgSend(v12, "identifier");
    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v17 = v16;

    v208 = v15;
    v209[0] = v17;
    *(_QWORD *)&v200 = 35;
    *((_QWORD *)&v200 + 1) = 0xE100000000000000;
    v18 = lazy protocol witness table accessor for type String and conformance String();
    v1 = &v208;
    v19 = (_QWORD *)StringProtocol.components<A>(separatedBy:)(&v200, &type metadata for String, &type metadata for String, v18, v18);
    if (!v19[2])
    {
      __break(1u);
LABEL_116:
      if (a1 < 0)
        v164 = a1;
      else
        v164 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v10 = _CocoaArrayWrapper.endIndex.getter(v164);
      swift_bridgeObjectRelease(a1);
      if (v10 < 1)
        goto LABEL_120;
      goto LABEL_3;
    }
    v20 = v19;
    v21 = v19[4];
    v22 = (_QWORD *)v19[5];
    swift_bridgeObjectRetain(v22);

    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v20);
    v205[0] = v11;
    v24 = v11[2];
    v23 = v11[3];
    if (v24 >= v23 >> 1)
    {
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v23 > 1, v24 + 1, 1);
      v11 = v205[0];
    }
    ++v9;
    v11[2] = v24 + 1;
    v25 = &v11[2 * v24];
    v25[4] = v21;
    v25[5] = v22;
    a1 = v198;
  }
  while (v10 != v9);
  v26 = String.init(combinedIdentifiersFrom:)((Swift::OpaquePointer)v11);
  v206 = (uint64_t)_swiftEmptyArrayStorage;
  v207 = (unint64_t)_swiftEmptyArrayStorage;
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v27 = type metadata accessor for Logger(0);
  v28 = __swift_project_value_buffer(v27, (uint64_t)static MOAngelLogger.assets);
  v29 = swift_bridgeObjectRetain(a1);
  v190 = v28;
  v30 = Logger.logObject.getter(v29);
  v31 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v32 = 134217984;
    a1 = v198;
    v208 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v208, v209, v32 + 4);
    swift_bridgeObjectRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "[MOSuggestionInterstitialListAssetViewModel.photoAssets] Processing count=%ld", v32, 0xCu);
    swift_slowDealloc(v32, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease(a1);
  }
  if (v197)
  {
    if (a1 < 0)
      v34 = a1;
    else
      v34 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v33 = _CocoaArrayWrapper.endIndex.getter(v34);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v33 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  object = v26._object;
  countAndFlagsBits = v26._countAndFlagsBits;
  if (!v33)
  {
    v22 = _swiftEmptyArrayStorage;
    LODWORD(v197) = 26;
    v189 = _swiftEmptyArrayStorage;
LABEL_98:
    swift_bridgeObjectRelease(a1);
    v33 = v206;
    if ((unint64_t)v206 >> 62)
    {
      if (v206 < 0)
        v166 = v206;
      else
        v166 = v206 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v206);
      v148 = _CocoaArrayWrapper.endIndex.getter(v166);
      swift_bridgeObjectRelease(v33);
    }
    else
    {
      v148 = *(_QWORD *)((v206 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    LOBYTE(a1) = v197;
    if (v148)
    {
      if ((v33 & 0xC000000000000001) != 0)
        goto LABEL_129;
      if (*(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v148 = *(_QWORD *)(v33 + 32);
        swift_retain(v148);
        goto LABEL_104;
      }
      __break(1u);
      goto LABEL_131;
    }
    swift_bridgeObjectRelease(v189);
    swift_bridgeObjectRelease(v22);
    swift_bridgeObjectRelease(object);
LABEL_107:
    swift_bridgeObjectRelease(v33);
    v149 = v207;
LABEL_121:
    swift_bridgeObjectRelease(v149);
    return 0;
  }
  if (v33 < 1)
    goto LABEL_128;
  v10 = 0;
  v22 = _swiftEmptyArrayStorage;
  LODWORD(v197) = 26;
  v195 = (char *)&type metadata for Any + 8;
  v178 = xmmword_10019ED20;
  v171 = xmmword_10019EDA0;
  v189 = _swiftEmptyArrayStorage;
  v196 = v33;
  while (2)
  {
    if (v199)
      v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, a1);
    else
      v35 = *(id *)(a1 + 8 * v10 + 32);
    v36 = v35;
    v37 = objc_msgSend(v35, "assetType", (_QWORD)v171, *((_QWORD *)&v171 + 1));
    v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeLivePhoto);
    v40 = v39;
    v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
    if (v38 == v41 && v40 == v42)
      goto LABEL_43;
    v44 = v42;
    v45 = _stringCompareWithSmolCheck(_:_:expecting:)(v38, v40, v41, v42, 0);
    swift_bridgeObjectRelease(v40);
    swift_bridgeObjectRelease(v44);
    if ((v45 & 1) != 0)
    {
LABEL_44:
      v58 = (void *)MOSuggestionAssetsTypePhoto;
      goto LABEL_45;
    }
    v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypePhoto);
    v40 = v47;
    v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
    if (v46 == v48 && v40 == v49)
    {
LABEL_43:
      swift_bridgeObjectRelease_n(v40, 2);
      goto LABEL_44;
    }
    v51 = v49;
    v52 = _stringCompareWithSmolCheck(_:_:expecting:)(v46, v40, v48, v49, 0);
    swift_bridgeObjectRelease(v40);
    swift_bridgeObjectRelease(v51);
    if ((v52 & 1) != 0)
      goto LABEL_44;
    v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeVideo);
    v40 = v54;
    v56 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
    v57 = v55;
    if (v53 == v56 && v40 == v55)
      goto LABEL_43;
    v102 = _stringCompareWithSmolCheck(_:_:expecting:)(v53, v40, v56, v55, 0);
    swift_bridgeObjectRelease(v40);
    swift_bridgeObjectRelease(v57);
    v58 = v37;
    if ((v102 & 1) != 0)
      goto LABEL_44;
LABEL_45:
    v59 = v58;

    v60 = MOSuggestionAssetsTypePhoto;
    v61 = static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
    v63 = v62;
    v64 = static String._unconditionallyBridgeFromObjectiveC(_:)(v60);
    if (v61 == v64 && v63 == v65)
    {

      swift_bridgeObjectRelease_n(v63, 2);
    }
    else
    {
      v67 = v65;
      v68 = _stringCompareWithSmolCheck(_:_:expecting:)(v61, v63, v64, v65, 0);

      swift_bridgeObjectRelease(v63);
      swift_bridgeObjectRelease(v67);
      if ((v68 & 1) == 0)
      {
        ObjCClassMetadata = swift_getObjCClassMetadata(objc_msgSend(v36, "contentClassType"));
        v70 = type metadata accessor for MOSuggestionGenericFallBackInfo();
        if (ObjCClassMetadata != v70)
        {
          v71 = Logger.logObject.getter(v70);
          v72 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v71, v72))
          {
            v73 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v73 = 0;
            _os_log_impl((void *)&_mh_execute_header, v71, v72, "[MOSuggestionInterstitialListAssetViewModel.photoAssets] Mismatched init for asset type", v73, 2u);
            swift_slowDealloc(v73, -1, -1);
          }

          goto LABEL_26;
        }
      }
    }
    v74 = specialized MOSuggestionAssetVisualSubType.init(assetType:mediaType:motionActivityType:)(objc_msgSend(v36, "assetType"), 0, 1, 0);
    v75 = v74;
    v76 = v197;
    if (v197 == 26)
      v76 = v74;
    LODWORD(v197) = v76;
    v77 = objc_msgSend(v36, "metadata");
    v78 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v77, &type metadata for AnyHashable, v195, &protocol witness table for AnyHashable);

    specialized _dictionaryDownCastConditional<A, B, C, D>(_:)(v78);
    v80 = v79;
    swift_bridgeObjectRelease(v78);
    if (!v80)
    {
LABEL_26:

      goto LABEL_27;
    }
    if (v75 == 26)
    {
      swift_bridgeObjectRelease(v80);
      goto LABEL_26;
    }
    v81 = objc_msgSend(v36, "content");
    v82 = objc_opt_self(UIImage);
    v83 = swift_dynamicCastObjCClass(v81, v82);
    if (!v83)
    {
      swift_bridgeObjectRelease(v80);

      swift_unknownObjectRelease(v81);
      goto LABEL_27;
    }
    if (!*(_QWORD *)(v80 + 16))
    {
      v201 = 0u;
      v200 = 0u;
LABEL_71:
      outlined destroy of Any?((uint64_t)&v200, &demangling cache variable for type metadata for Any?);
      v88 = (uint64_t)v192;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v193 + 56))(v192, 1, 1, v194);
      goto LABEL_72;
    }
    v84 = (void *)v83;
    v85 = MOSuggestionAssetMetadataKeyPhotoTakenDate;
    v86 = specialized __RawDictionaryStorage.find<A>(_:)(v85);
    if ((v87 & 1) != 0)
    {
      outlined init with copy of Any(*(_QWORD *)(v80 + 56) + 32 * v86, (uint64_t)&v200);
    }
    else
    {
      v201 = 0u;
      v200 = 0u;
    }

    if (!*((_QWORD *)&v201 + 1))
      goto LABEL_71;
    v182 = v84;
    v88 = (uint64_t)v192;
    v89 = v194;
    v90 = swift_dynamicCast(v192, &v200, (char *)&type metadata for Any + 8, v194, 6);
    v188 = v22;
    v91 = v193;
    v92 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v193 + 56);
    v92(v88, v90 ^ 1u, 1, v89);
    v93 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48);
    v22 = v188;
    if (v93(v88, 1, v89) == 1)
    {
LABEL_72:
      swift_unknownObjectRelease(v81);
      swift_bridgeObjectRelease(v80);

      outlined destroy of Any?(v88, (uint64_t *)&demangling cache variable for type metadata for Date?);
      a1 = v198;
      goto LABEL_27;
    }
    v181 = v81;
    v22 = (_QWORD *)v193;
    v94 = v187;
    v95 = v194;
    (*(void (**)(char *, uint64_t, uint64_t))(v193 + 32))(v187, v88, v194);
    v96 = v191;
    ((void (*)(uint64_t, char *, uint64_t))v22[2])(v191, v94, v95);
    v92(v96 + *(int *)(v185 + 20), 1, 1, v95);
    v180 = MOSuggestionAssetVisualSubType.singularLocalizedString.getter(v75);
    v179 = v97;
    if (*(_QWORD *)(v80 + 16))
    {
      v98 = MOSuggestionAssetMetadataKeyPhotoBestSquareCropRect;
      v99 = specialized __RawDictionaryStorage.find<A>(_:)(v98);
      v100 = (uint64_t)v182;
      if ((v101 & 1) != 0)
      {
        outlined init with copy of Any(*(_QWORD *)(v80 + 56) + 32 * v99, (uint64_t)&v200);
      }
      else
      {
        v201 = 0u;
        v200 = 0u;
      }

      LOBYTE(a1) = (_BYTE)v181;
    }
    else
    {
      v201 = 0u;
      v200 = 0u;
      LOBYTE(a1) = (_BYTE)v181;
      v100 = (uint64_t)v182;
    }
    swift_bridgeObjectRelease(v80);
    if (*((_QWORD *)&v201 + 1))
    {
      v103 = type metadata accessor for MOSuggestionAssetPhotoCropRect();
      if ((swift_dynamicCast(v205, &v200, (char *)&type metadata for Any + 8, v103, 6) & 1) != 0)
      {
        v182 = v205[0];
        objc_msgSend(v205[0], "cgRect");
        v108 = 0;
        goto LABEL_83;
      }
    }
    else
    {
      outlined destroy of Any?((uint64_t)&v200, &demangling cache variable for type metadata for Any?);
    }
    v182 = 0;
    v108 = 1;
    v104 = 0;
    v105 = 0;
    v106 = 0;
    v107 = 0;
LABEL_83:
    v208 = v104;
    v209[0] = v105;
    v209[1] = v106;
    v209[2] = v107;
    v210 = v108;
    v109 = type metadata accessor for MOSuggestionSheetImage();
    swift_allocObject(v109, 105, 7);
    swift_unknownObjectRetain();
    v110 = MOSuggestionSheetImage.init(image:associatedTintColor:associatedBackgroundColor:tileBackgroundColor:shouldBeRounded:squareCrop:extraMargin:)(v100, 0, 0, 0, 0, (uint64_t)&v208, 0, 1);
    v111 = objc_msgSend(v36, "identifier");
    v112 = static String._unconditionallyBridgeFromObjectiveC(_:)(v111);
    v114 = v113;

    *(_QWORD *)&v200 = v112;
    *((_QWORD *)&v200 + 1) = v114;
    v205[0] = (id)35;
    v205[1] = (id)0xE100000000000000;
    v33 = (uint64_t)&v200;
    v115 = (_QWORD *)StringProtocol.components<A>(separatedBy:)(v205, &type metadata for String, &type metadata for String, v18, v18);
    if (v115[2])
    {
      v116 = v115;
      v117 = v115[5];
      v173 = v115[4];
      swift_bridgeObjectRetain(v117);
      swift_bridgeObjectRelease(v114);
      swift_bridgeObjectRelease(v116);
      v118 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MOSuggestionSheetAssetDateRange>);
      v119 = *(unsigned __int8 *)(v184 + 80);
      v120 = (v119 + 32) & ~v119;
      v175 = *(_QWORD *)(v184 + 72);
      v121 = swift_allocObject(v118, v120 + v175, v119 | 7);
      *(_OWORD *)(v121 + 16) = v178;
      v174 = v120;
      outlined init with copy of MOSuggestionSheetAssetDateRange(v191, v121 + v120);
      v122 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
      v123 = swift_allocObject(v122, 48, 7);
      *(_OWORD *)(v123 + 16) = v178;
      v124 = v179;
      *(_QWORD *)(v123 + 32) = v180;
      *(_QWORD *)(v123 + 40) = v124;
      v125 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      v126 = swift_allocObject(v125, 40, 7);
      *(_OWORD *)(v126 + 16) = v171;
      *(_QWORD *)(v126 + 32) = v110;
      *(_QWORD *)&v200 = v126;
      specialized Array._endMutation()(v126);
      v172 = v200;
      v127 = type metadata accessor for MOSuggestionInterstitialListAssetViewModel(0);
      swift_allocObject(v127, *(unsigned int *)(v127 + 48), *(unsigned __int16 *)(v127 + 52));
      swift_bridgeObjectRetain(v124);
      swift_retain(v110);
      v128 = MOSuggestionInterstitialListAssetViewModel.init(id:subViewModels:topLevelGroupHeading:dates:titles:icons:assetVisualSubType:selectable:isLoadingPlaceHolder:isFallback:)(v173, v117, 0, 0, 0, v121, v123, v172, v75, 1, 0, 0);
      swift_retain(v128);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v129);
      v131 = *(_QWORD *)((v207 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v130 = *(_QWORD *)((v207 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v131 >= v130 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v130 > 1, v131 + 1, 1);
      v132 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v131, v128);
      specialized Array._endMutation()(v132);
      if ((swift_isUniquelyReferenced_nonNull_native(v189) & 1) == 0)
        v189 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v189[2] + 1, 1, v189);
      v134 = v189[2];
      v133 = v189[3];
      v173 = v128;
      if (v134 >= v133 >> 1)
        v189 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((_QWORD *)(v133 > 1), v134 + 1, 1, v189);
      v135 = (unint64_t)v188;
      v136 = v189;
      v189[2] = v134 + 1;
      v137 = &v136[2 * v134];
      v138 = v179;
      v137[4] = v180;
      v137[5] = v138;
      swift_retain(v110);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v139);
      v141 = *(_QWORD *)((v206 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v140 = *(_QWORD *)((v206 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v141 >= v140 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v140 > 1, v141 + 1, 1);
      v142 = v182;
      v143 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v141, v110);
      specialized Array._endMutation()(v143);
      outlined init with copy of MOSuggestionSheetAssetDateRange(v191, v186);
      v144 = v110;
      if ((swift_isUniquelyReferenced_nonNull_native(v135) & 1) == 0)
        v135 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v135 + 16) + 1, 1, v135);
      v145 = v181;
      v147 = *(_QWORD *)(v135 + 16);
      v146 = *(_QWORD *)(v135 + 24);
      if (v147 >= v146 >> 1)
        v135 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v146 > 1, v147 + 1, 1, v135);
      *(_QWORD *)(v135 + 16) = v147 + 1;
      outlined init with take of MOSuggestionSheetAssetDateRange(v186, v135 + v174 + v147 * v175);

      v22 = (_QWORD *)v135;
      swift_unknownObjectRelease(v145);
      swift_release(v144);
      swift_release(v173);

      outlined destroy of MOSuggestionSheetAssetDateRange(v191);
      (*(void (**)(char *, uint64_t))(v193 + 8))(v187, v194);
      a1 = v198;
LABEL_27:
      if (v196 == ++v10)
        goto LABEL_98;
      continue;
    }
    break;
  }
  __break(1u);
LABEL_128:
  __break(1u);
LABEL_129:
  v148 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v33);
LABEL_104:
  swift_bridgeObjectRelease(v33);
  if (a1 == 26)
  {
    swift_bridgeObjectRelease(v189);
    swift_bridgeObjectRelease(v22);
    swift_release(v148);
    v33 = (uint64_t)object;
    goto LABEL_107;
  }
  HIBYTE(v170) = 0;
  *(_WORD *)((char *)&v170 + 1) = 1;
  LOBYTE(v170) = a1;
  v150 = ((uint64_t (*)(uint64_t, void *, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))v177[43])(countAndFlagsBits, object, 0, 0, 0, 0, 0, 0, v170);
  v10 = v150;
  v33 = v207;
  if (v207 >> 62)
  {
LABEL_131:
    if (v33 < 0)
      v167 = v33;
    else
      v167 = v33 & 0xFFFFFFFFFFFFFF8;
    swift_retain(v10);
    swift_bridgeObjectRetain(v33);
    v168 = _CocoaArrayWrapper.endIndex.getter(v167);
    swift_bridgeObjectRelease(v33);
    if (v168 >= 2)
      goto LABEL_110;
    goto LABEL_114;
  }
  v151 = *(_QWORD *)((v207 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_retain(v150);
  if (v151 >= 2)
  {
LABEL_110:
    if (v33 < 0 || (v33 & 0x4000000000000000) != 0)
    {
      v169 = swift_bridgeObjectRetain(v33);
      v152 = (uint64_t)specialized _copyCollectionToContiguousArray<A>(_:)(v169);
      swift_bridgeObjectRelease(v33);
    }
    else
    {
      v152 = v33 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v33);
    }
    *(_QWORD *)&v200 = v152;
    specialized MutableCollection<>.sort(by:)((uint64_t *)&v200);
    swift_bridgeObjectRelease(v33);
    v153 = v200;
    swift_beginAccess(v10 + 16, v202, 1, 0);
    v33 = *(_QWORD *)(v10 + 16);
    *(_QWORD *)(v10 + 16) = v153;
  }
LABEL_114:
  swift_bridgeObjectRelease(v33);
  v154 = MOSuggestionInterstitialListAssetViewModel._groupAssetTypeAndCountDescription(with:)(0);
  v156 = v155;
  swift_beginAccess(v10 + 24, &v200, 1, 0);
  v157 = *(_QWORD *)(v10 + 32);
  *(_QWORD *)(v10 + 24) = v154;
  *(_QWORD *)(v10 + 32) = v156;
  swift_bridgeObjectRelease(v157);
  swift_beginAccess(v10 + 48, v205, 1, 0);
  v158 = *(_QWORD *)(v10 + 48);
  *(_QWORD *)(v10 + 48) = v189;
  swift_bridgeObjectRelease(v158);
  v159 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v160 = swift_allocObject(v159, 40, 7);
  *(_OWORD *)(v160 + 16) = xmmword_10019EDA0;
  *(_QWORD *)(v160 + 32) = v148;
  v204 = v160;
  specialized Array._endMutation()(v160);
  v161 = v204;
  swift_beginAccess(v10 + 56, &v204, 1, 0);
  v162 = *(_QWORD *)(v10 + 56);
  *(_QWORD *)(v10 + 56) = v161;
  swift_bridgeObjectRelease(v162);
  swift_beginAccess(v10 + 40, v203, 1, 0);
  v163 = *(_QWORD *)(v10 + 40);
  *(_QWORD *)(v10 + 40) = v22;
  swift_release(v10);
  swift_bridgeObjectRelease(v163);
  return v10;
}

const char *String.MULTI_ID_SEPERATOR.unsafeMutableAddressor()
{
  return "&";
}

uint64_t static String.MULTI_ID_SEPERATOR.getter()
{
  return 38;
}

unint64_t type metadata accessor for MOSuggestionAssetPhotoCropRect()
{
  unint64_t result;
  uint64_t v1;

  result = lazy cache variable for type metadata for MOSuggestionAssetPhotoCropRect;
  if (!lazy cache variable for type metadata for MOSuggestionAssetPhotoCropRect)
  {
    v1 = objc_opt_self(MOSuggestionAssetPhotoCropRect);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetPhotoCropRect);
  }
  return result;
}

uint64_t property wrapper backing initializer of MOSecureWindow.controller(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = a1;
  v1 = type metadata accessor for MOAngelControllerWrapper(0);
  return Published.init(initialValue:)(&v3, v1);
}

uint64_t key path getter for MOSecureWindow.controller : MOSecureWindow@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x60))();
  *a2 = result;
  return result;
}

uint64_t key path setter for MOSecureWindow.controller : MOSecureWindow(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x68))(*a1);
}

uint64_t MOSecureWindow.controller.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1001A3980);
  v2 = swift_getKeyPath(&unk_1001A39A8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

uint64_t sub_1001594B0@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x60))();
  *a2 = result;
  return result;
}

uint64_t sub_1001594F0(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x68))(*a1);
}

uint64_t MOSecureWindow.controller.setter(uint64_t a1)
{
  void *v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_1001A3980);
  v4 = swift_getKeyPath(&unk_1001A39A8);
  v6 = a1;
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

void (*MOSecureWindow.controller.modify(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_1001A3980);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_1001A39A8);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return MOAngelControllerWrapper.isVisible.modify;
}

uint64_t key path setter for MOSecureWindow.$controller : MOSecureWindow(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<MOAngelControllerWrapper>.Publisher);
  __chkstk_darwin(v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))((swift_isaMask & **a2) + 0x80))(v6);
}

uint64_t MOSecureWindow.$controller.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService14MOSecureWindow__controller, v3, 33, 0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<MOAngelControllerWrapper>);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

uint64_t MOSecureWindow.$controller.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v10[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<MOAngelControllerWrapper>.Publisher);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService14MOSecureWindow__controller, v10, 33, 0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<MOAngelControllerWrapper>);
  Published.projectedValue.setter(v6, v7);
  swift_endAccess(v10);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

void (*MOSecureWindow.$controller.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<MOAngelControllerWrapper>.Publisher);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC16MomentsUIService14MOSecureWindow__controller;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<MOAngelControllerWrapper>);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return MOAngelControllerWrapper.$isVisible.modify;
}

uint64_t MOSecureWindow.clientConnectionId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return outlined init with copy of UUID?(v1 + OBJC_IVAR____TtC16MomentsUIService14MOSecureWindow_clientConnectionId, a1);
}

_QWORD *MOSecureWindow.__allocating_init(windowScene:session:clientConnection:)(void *a1, void *a2, uint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return MOSecureWindow.init(windowScene:session:clientConnection:)(a1, a2, a3);
}

_QWORD *MOSecureWindow.init(windowScene:session:clientConnection:)(void *a1, void *a2, uint64_t a3)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  objc_class *v14;
  id v15;
  char *v16;
  objc_class *v17;
  id v18;
  void *v19;
  _QWORD *v20;
  id v21;
  id v22;
  uint64_t (*v23)(id);
  _QWORD *v24;
  id v25;
  char *v26;
  _QWORD *result;
  void *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  Class isa;
  void *v41;
  void *v42;
  uint64_t (*v43)(uint64_t);
  id v44;
  void *v45;
  objc_super v46;
  id v47;

  v45 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
  __chkstk_darwin(v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<MOAngelControllerWrapper>);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = &v3[OBJC_IVAR____TtC16MomentsUIService14MOSecureWindow__controller];
  v14 = (objc_class *)type metadata accessor for MOAngelControllerWrapper(0);
  v15 = objc_allocWithZone(v14);
  v16 = v3;
  v47 = objc_msgSend(v15, "init");
  Published.init(initialValue:)(&v47, v14);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v12, v9);
  outlined init with copy of UUID?(a3, (uint64_t)&v16[OBJC_IVAR____TtC16MomentsUIService14MOSecureWindow_clientConnectionId]);

  v17 = (objc_class *)type metadata accessor for MOSecureWindow(0);
  v46.receiver = v16;
  v46.super_class = v17;
  v18 = objc_msgSendSuper2(&v46, "initWithWindowScene:", a1);
  v19 = (void *)objc_opt_self(UIColor);
  v20 = v18;
  v21 = objc_msgSend(v19, "clearColor");
  objc_msgSend(v20, "setBackgroundColor:", v21);

  objc_msgSend(v20, "setOpaque:", 0);
  objc_msgSend(v20, "makeKeyAndVisible");
  v22 = objc_msgSend(v20, "setClipsToBounds:", 1);
  v23 = *(uint64_t (**)(id))((swift_isaMask & *v20) + 0x60);
  v24 = (_QWORD *)v23(v22);
  v25 = objc_allocWithZone((Class)type metadata accessor for MOAngelRootViewController());
  v26 = MOAngelRootViewController.init(_:)(v24);
  result = objc_msgSend(v26, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  v28 = result;
  type metadata accessor for UIColor();
  v29 = static Color.clear.getter();
  v30 = (void *)UIColor.init(_:)(v29);
  objc_msgSend(v28, "setBackgroundColor:", v30);

  result = objc_msgSend(v26, "view");
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v31 = result;
  v43 = (uint64_t (*)(uint64_t))v23;
  v44 = a1;
  v32 = objc_msgSend(result, "layer");

  objc_msgSend(v32, "setAllowsHitTesting:", 0);
  v33 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v26);
  objc_msgSend(v20, "setRootViewController:", v33);
  result = objc_msgSend(v20, "_rootSheetPresentationController");
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  v34 = result;
  objc_msgSend(result, "_setShouldScaleDownBehindDescendantSheets:", 0);

  v35 = objc_msgSend((id)objc_opt_self(MOSuggestionsUIServerManager), "sharedInstance");
  v36 = a3;
  outlined init with copy of UUID?(a3, (uint64_t)v8);
  v37 = type metadata accessor for UUID(0);
  v38 = *(_QWORD *)(v37 - 8);
  v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48))(v8, 1, v37);
  isa = 0;
  if ((_DWORD)v39 != 1)
  {
    isa = UUID._bridgeToObjectiveC()().super.isa;
    v39 = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v8, v37);
  }
  v41 = (void *)v43(v39);
  v42 = v45;
  objc_msgSend(v35, "didConnectToSecureWindowWithSession:connectionId:delegate:", v45, isa, v41);

  outlined destroy of UUID?(v36);
  return v20;
}

uint64_t type metadata accessor for MOSecureWindow(uint64_t a1)
{
  uint64_t result;

  result = type metadata singleton initialization cache for MOSecureWindow;
  if (!type metadata singleton initialization cache for MOSecureWindow)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MOSecureWindow);
  return result;
}

unint64_t type metadata accessor for UIColor()
{
  unint64_t result;
  uint64_t v1;

  result = lazy cache variable for type metadata for UIColor;
  if (!lazy cache variable for type metadata for UIColor)
  {
    v1 = objc_opt_self(UIColor);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for UIColor);
  }
  return result;
}

Swift::Void __swiftcall MOSecureWindow.didDisconnect()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  Class isa;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
  __chkstk_darwin(v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of UUID?(v0 + OBJC_IVAR____TtC16MomentsUIService14MOSecureWindow_clientConnectionId, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    outlined destroy of UUID?((uint64_t)v3);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
    v8 = objc_msgSend((id)objc_opt_self(MOSuggestionsUIServerManager), "sharedInstance");
    isa = UUID._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v8, "didDisonnectToSecureWindowForConnectionId:", isa);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

void MOSecureWindow.init(coder:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  objc_class *v6;
  uint64_t v7;
  id v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<MOAngelControllerWrapper>);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = &v0[OBJC_IVAR____TtC16MomentsUIService14MOSecureWindow__controller];
  v6 = (objc_class *)type metadata accessor for MOAngelControllerWrapper(0);
  v8 = objc_msgSend(objc_allocWithZone(v6), "init");
  Published.init(initialValue:)(&v8, v6);
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v4, v1);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "MomentsUIService/MOSecureWindow.swift", 37, 2, 41, 0);
  __break(1u);
}

id MOSecureWindow.__allocating_init(windowScene:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithWindowScene:", a1);

  return v3;
}

void MOSecureWindow.init(windowScene:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MomentsUIService.MOSecureWindow", 31, "init(windowScene:)", 18, 0);
  __break(1u);
}

void MOSecureWindow.init(frame:)()
{
  MOSecureWindow.init(frame:)((uint64_t)"init(frame:)", 12);
}

id MOSecureWindow.__allocating_init(contentRect:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), "initWithContentRect:", a1, a2, a3, a4);
}

void MOSecureWindow.init(contentRect:)()
{
  MOSecureWindow.init(frame:)((uint64_t)"init(contentRect:)", 18);
}

void MOSecureWindow.init(frame:)(uint64_t a1, uint64_t a2)
{
  _swift_stdlib_reportUnimplementedInitializer("MomentsUIService.MOSecureWindow", 31, a1, a2, 0);
  __break(1u);
}

void @objc MOSecureWindow.init(frame:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _swift_stdlib_reportUnimplementedInitializer("MomentsUIService.MOSecureWindow", 31, a3, a4, 0);
  __break(1u);
}

id MOSecureWindow.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSecureWindow(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10015A28C(_QWORD **a1)
{
  return (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x78))();
}

uint64_t ObjC metadata update function for MOSecureWindow()
{
  return type metadata accessor for MOSecureWindow(0);
}

void type metadata completion function for MOSecureWindow(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  type metadata accessor for Published<MOAngelControllerWrapper>(319, &lazy cache variable for type metadata for Published<MOAngelControllerWrapper>, type metadata accessor for MOAngelControllerWrapper, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    type metadata accessor for Published<MOAngelControllerWrapper>(319, (unint64_t *)&lazy cache variable for type metadata for UUID?, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 2, v6, a1 + 80);
    }
  }
}

void type metadata accessor for Published<MOAngelControllerWrapper>(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

void *MOSuggestionInterstitialSupplementaryCheckmarkView.reuseIdentifier.unsafeMutableAddressor()
{
  return &static MOSuggestionInterstitialSupplementaryCheckmarkView.reuseIdentifier;
}

Swift::Void __swiftcall MOSuggestionInterstitialSupplementaryCheckmarkView.updateState(selected:)(Swift::Bool selected)
{
  uint64_t v1;

  (*(void (**)(Swift::Bool))((swift_isaMask & **(_QWORD **)(v1
                                                                     + OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_checkmarkView))
                                      + 0xA0))(selected);
}

unint64_t static MOSuggestionInterstitialSupplementaryCheckmarkView.reuseIdentifier.getter()
{
  return 0xD000000000000032;
}

id MOSuggestionInterstitialSupplementaryCheckmarkView.checkmarkView.getter()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_checkmarkView));
}

void MOSuggestionInterstitialSupplementaryCheckmarkView.init(coder:)()
{
  char *v0;
  uint64_t v1;

  v1 = OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_checkmarkView;
  if (one-time initialization token for CHECK_PLATTER_VIEW_SIZE != -1)
    swift_once(&one-time initialization token for CHECK_PLATTER_VIEW_SIZE, one-time initialization function for CHECK_PLATTER_VIEW_SIZE);
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MOSuggestionInterstitialCarouselCheckMarkView()), "initWithFrame:", 0.0, 0.0, static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE);
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_keyColor] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionInterstitialSupplementaryCheckmarkView.swift", 73, 2, 31, 0);
  __break(1u);
}

void *MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_keyColor);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_keyColor, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor.setter(void *a1)
{
  uint64_t v1;
  id *v3;
  id v4;
  id v5;
  _BYTE v6[24];

  v3 = (id *)(v1 + OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_keyColor);
  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_keyColor, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  v5 = a1;

  if (*v3)
    (*(void (**)(id))((swift_isaMask & **(_QWORD **)(v1
                                                              + OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_checkmarkView))
                               + 0x88))(*v3);

}

void (*MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_keyColor;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor.modify;
}

void MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor.modify(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  void *v5;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = v3[3];
    v5 = *(void **)(v4 + v3[4]);
    if (v5)
      (*(void (**)(void *))((swift_isaMask & **(_QWORD **)(v4
                                                                    + OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_checkmarkView))
                                     + 0x88))(v5);
  }
  free(v3);
}

id MOSuggestionInterstitialSupplementaryCheckmarkView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionInterstitialSupplementaryCheckmarkView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

char *specialized MOSuggestionInterstitialSupplementaryCheckmarkView.init(frame:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  char *v6;
  id v7;
  uint64_t v8;
  void *v9;
  double v10;
  id v11;
  id v12;
  id v13;
  double v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  char **v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  char **v30;
  id v31;
  id v32;
  id v33;
  objc_super v35;

  v1 = OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_checkmarkView;
  v2 = one-time initialization token for CHECK_PLATTER_VIEW_SIZE;
  v3 = v0;
  if (v2 != -1)
    swift_once(&one-time initialization token for CHECK_PLATTER_VIEW_SIZE, one-time initialization function for CHECK_PLATTER_VIEW_SIZE);
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MOSuggestionInterstitialCarouselCheckMarkView()), "initWithFrame:", 0.0, 0.0, static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE);
  *(_QWORD *)&v3[OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_keyColor] = 0;

  v35.receiver = v3;
  v35.super_class = (Class)type metadata accessor for MOSuggestionInterstitialSupplementaryCheckmarkView();
  v4 = objc_msgSendSuper2(&v35, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v5 = (void *)objc_opt_self(UIColor);
  v6 = (char *)v4;
  v7 = objc_msgSend(v5, "clearColor");
  objc_msgSend(v6, "setBackgroundColor:", v7);

  v8 = OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_checkmarkView;
  v9 = *(void **)&v6[OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_checkmarkView];
  objc_msgSend(v6, "addSubview:", v9);
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v10 = *(double *)&static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE;
  v11 = v9;
  objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v12 = objc_msgSend(v11, "widthAnchor");
  v13 = objc_msgSend(v12, "constraintEqualToConstant:", v10);

  objc_msgSend(v13, "setActive:", 1);
  v14 = *((double *)&static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE + 1);
  v15 = *(id *)&v6[v8];
  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v16 = objc_msgSend(v15, "heightAnchor");
  v17 = objc_msgSend(v16, "constraintEqualToConstant:", v14);

  objc_msgSend(v17, "setActive:", 1);
  v18 = *(id *)&v6[v8];
  v19 = objc_msgSend(v18, "superview");
  v20 = &selRef_genericAvatarFor_pointSize_completion_;
  if (v19)
  {
    v21 = v19;
    objc_msgSend(v18, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v22 = objc_msgSend(v18, "centerYAnchor");
    v23 = objc_msgSend(v21, "centerYAnchor");
    v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

    objc_msgSend(v24, "setConstant:", 0.0);
    if (v24)
    {
      v24 = v24;
      objc_msgSend(v24, "setActive:", 1);

      v18 = v24;
    }

    v20 = &selRef_genericAvatarFor_pointSize_completion_;
  }
  else
  {
    v24 = 0;
    v21 = v18;
  }

  v25 = *(id *)&v6[v8];
  v26 = objc_msgSend(v25, "superview");
  if (v26)
  {
    v27 = v26;
    objc_msgSend(v25, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v28 = objc_msgSend(v25, "centerXAnchor");
    v29 = objc_msgSend(v27, "centerXAnchor");
    v30 = v20;
    v31 = v29;
    v32 = objc_msgSend(v28, v30[101], v29);

    objc_msgSend(v32, "setConstant:", 0.0);
    if (v32)
    {
      v32 = v32;
      objc_msgSend(v32, "setActive:", 1);

      v25 = v32;
    }

  }
  else
  {
    v32 = 0;
    v27 = v25;
  }

  objc_msgSend(v6, "setUserInteractionEnabled:", 0);
  v33 = *(id *)&v6[v8];
  objc_msgSend(v33, "setUserInteractionEnabled:", 0);

  return v6;
}

uint64_t type metadata accessor for MOSuggestionInterstitialSupplementaryCheckmarkView()
{
  return objc_opt_self(_TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView);
}

uint64_t sub_10015AD08@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x60))();
  *a2 = result;
  return result;
}

uint64_t sub_10015AD48(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0x68);
  v4 = *a1;
  return v3(v2);
}

_QWORD *specialized static MOSuggestionSheetAssetViewModel.placeholders(count:parent:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  unint64_t v25;
  _OWORD v26[2];
  char v27;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>?);
  __chkstk_darwin(v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  result = (_QWORD *)__chkstk_darwin(v10);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = (unint64_t)_swiftEmptyArrayStorage;
  if (a1 < 0)
  {
    __break(1u);
  }
  else if (a1)
  {
    memset(v26, 0, sizeof(v26));
    v27 = 1;
    v14 = type metadata accessor for URL(0);
    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
    v24 = v14;
    do
    {
      v23(v13, 1, 1, v24);
      v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v9, 1, 1, v15);
      v16 = type metadata accessor for Date(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v6, 1, 1, v16);
      v17 = type metadata accessor for MOSuggestionSheetAssetViewModel(0);
      swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
      swift_retain(a2);
      v18 = MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(0x6C6F686563616C70, 0xEB00000000726564, a2, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, (uint64_t)v13, 0, 0, 0, 0xE000000000000000, 0,
              0xE000000000000000,
              0,
              0xE000000000000000,
              0,
              0,
              0,
              0xE000000000000000,
              0,
              0xE000000000000000,
              0,
              0,
              0,
              0,
              0,
              0,
              0xE000000000000000,
              (uint64_t)v9,
              0,
              0xE000000000000000,
              0,
              0,
              0,
              0xE000000000000000,
              0,
              0xE000000000000000,
              0,
              (uint64_t)v26,
              (uint64_t)v26,
              (uint64_t)v26,
              11,
              0,
              0,
              0,
              0,
              0,
              1,
              1,
              0,
              0,
              0xE000000000000000,
              1,
              0,
              0xE000000000000000,
              0);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v18);
      v20 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v19 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v20 >= v19 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1);
      v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v18);
      specialized Array._endMutation()(v21);
      --a1;
    }
    while (a1);
    return (_QWORD *)v25;
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

_QWORD *specialized static MOSuggestionSheetAssetViewModel.PLACEHOLDER_VIEW_MODEL(parent:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD v16[2];
  char v17;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v2);
  v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>?);
  __chkstk_darwin(v5);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v8);
  v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v7, 1, 1, v12);
  memset(v16, 0, sizeof(v16));
  v17 = 1;
  v13 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v4, 1, 1, v13);
  v14 = type metadata accessor for MOSuggestionSheetAssetViewModel(0);
  swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  swift_retain(a1);
  return MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(0x6C6F686563616C70, 0xEB00000000726564, a1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, (uint64_t)v10, 0, 0, 0, 0xE000000000000000, 0,
           0xE000000000000000,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           (uint64_t)v7,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0xE000000000000000,
           0,
           (uint64_t)v16,
           (uint64_t)v16,
           (uint64_t)v16,
           11,
           0,
           0,
           0,
           0,
           0,
           1,
           1,
           0,
           0,
           0xE000000000000000,
           1,
           0,
           0xE000000000000000,
           0);
}

void *MOSceneDelegate.window.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService15MOSceneDelegate_window);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService15MOSceneDelegate_window, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void MOSceneDelegate.window.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC16MomentsUIService15MOSceneDelegate_window);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*MOSceneDelegate.window.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService15MOSceneDelegate_window, a1, 33, 0);
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

Swift::Void __swiftcall MOSceneDelegate.scene(_:willConnectTo:options:)(UIScene _, UISceneSession willConnectTo, UISceneConnectionOptions options)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  objc_class *v24;
  id v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  double v31;
  id v32;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  char *v38;
  id v39;
  objc_class *v40;
  _QWORD *v41;
  id *v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  Class isa;
  uint64_t v50;
  id v51;
  _WORD v52[8];
  _QWORD v53[5];
  __int128 v54;
  __int128 v55;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v47 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v47 - v14;
  v16 = -[objc_class _fbsScene](options.super.isa, "_fbsScene");
  if (v16)
  {
    v17 = v16;
    v18 = objc_msgSend(v16, "identityToken");

  }
  else
  {
    v18 = 0;
  }
  v51 = objc_msgSend(objc_allocWithZone((Class)UISceneConfiguration), "init");
  v19 = objc_opt_self(UIWindowScene);
  v20 = swift_dynamicCastObjCClass(_.super.super.isa, v19);
  if (!v20)
  {

    return;
  }
  v21 = (void *)v20;
  isa = willConnectTo.super.isa;
  v50 = v3;
  v48 = v18;
  v22 = type metadata accessor for UUID(0);
  v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v23(v15, 1, 1, v22);
  v24 = _.super.super.isa;
  v25 = -[objc_class userActivities](options.super.isa, "userActivities");
  v26 = type metadata accessor for NSUserActivity();
  v27 = lazy protocol witness table accessor for type NSUserActivity and conformance NSObject();
  v28 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v25, v26, v27);

  specialized Sequence.first(where:)(v28);
  v30 = v29;
  *(_QWORD *)&v31 = swift_bridgeObjectRelease(v28).n128_u64[0];
  if (v30)
  {
    v32 = objc_msgSend(v30, "userInfo", v31);
    if (v32)
    {
      v33 = v32;
      v34 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v32, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      strcpy((char *)v52, "connectionId");
      HIBYTE(v52[6]) = 0;
      v52[7] = -5120;
      AnyHashable.init<A>(_:)(v53, v52, &type metadata for String, &protocol witness table for String);
      if (*(_QWORD *)(v34 + 16) && (v35 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v53), (v36 & 1) != 0))
      {
        outlined init with copy of Any(*(_QWORD *)(v34 + 56) + 32 * v35, (uint64_t)&v54);
      }
      else
      {
        v54 = 0u;
        v55 = 0u;
      }

      outlined destroy of AnyHashable((uint64_t)v53);
      outlined destroy of Any?((uint64_t)v15, &demangling cache variable for type metadata for UUID?);
      swift_bridgeObjectRelease(v34);
      if (*((_QWORD *)&v55 + 1))
      {
        v37 = swift_dynamicCast(v13, &v54, (char *)&type metadata for Any + 8, v22, 6) ^ 1;
        v38 = v13;
LABEL_16:
        v23(v38, v37, 1, v22);
        outlined init with take of UUID?((uint64_t)v13, (uint64_t)v15);
        goto LABEL_17;
      }
    }
    else
    {
      outlined destroy of Any?((uint64_t)v15, &demangling cache variable for type metadata for UUID?);

      v54 = 0u;
      v55 = 0u;
    }
    outlined destroy of Any?((uint64_t)&v54, &demangling cache variable for type metadata for Any?);
    v38 = v13;
    v37 = 1;
    goto LABEL_16;
  }
LABEL_17:
  outlined init with copy of UUID?((uint64_t)v15, (uint64_t)v10);
  v39 = objc_allocWithZone((Class)type metadata accessor for MOSecureWindow(0));
  v40 = v24;
  v41 = MOSecureWindow.init(windowScene:session:clientConnection:)(v21, isa, (uint64_t)v10);
  v42 = (id *)(v50 + OBJC_IVAR____TtC16MomentsUIService15MOSceneDelegate_window);
  swift_beginAccess(v50 + OBJC_IVAR____TtC16MomentsUIService15MOSceneDelegate_window, v53, 1, 0);
  v43 = *v42;
  *v42 = v41;

  if (*v42)
  {
    objc_msgSend(*v42, "makeKeyAndVisible");
    if (*v42)
      objc_msgSend(*v42, "setHidden:", 0);
  }
  v44 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v45 = objc_msgSend(v44, "delegate");

  if (v45)
  {
    v46 = type metadata accessor for MOAppDelegate();
    swift_dynamicCastClassUnconditional(v45, v46, 0, 0, 0);
    objc_msgSend(v21, "_setKeepContextAssociationInBackground:", 1);

    swift_unknownObjectRelease(v45);
    outlined destroy of Any?((uint64_t)v15, &demangling cache variable for type metadata for UUID?);
  }
  else
  {
    __break(1u);
  }
}

unint64_t type metadata accessor for NSUserActivity()
{
  unint64_t result;
  uint64_t v1;

  result = lazy cache variable for type metadata for NSUserActivity;
  if (!lazy cache variable for type metadata for NSUserActivity)
  {
    v1 = objc_opt_self(NSUserActivity);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for NSUserActivity);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type NSUserActivity and conformance NSObject()
{
  unint64_t result;
  unint64_t v1;

  result = lazy protocol witness table cache variable for type NSUserActivity and conformance NSObject;
  if (!lazy protocol witness table cache variable for type NSUserActivity and conformance NSObject)
  {
    v1 = type metadata accessor for NSUserActivity();
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type NSUserActivity and conformance NSObject);
  }
  return result;
}

void specialized Sequence.first(where:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[5];
  void *v35;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    v3 = swift_bridgeObjectRetain(a1);
    v4 = __CocoaSet.makeIterator()(v2, v3);
    v5 = type metadata accessor for NSUserActivity();
    v6 = lazy protocol witness table accessor for type NSUserActivity and conformance NSObject();
    v7 = Set.Iterator.init(_cocoa:)(v34, v4, v5, v6);
    v1 = v34[0];
    v32 = v34[1];
    v8 = v34[2];
    v9 = v34[3];
    v10 = v34[4];
  }
  else
  {
    v11 = -1 << *(_BYTE *)(a1 + 32);
    v32 = a1 + 56;
    v12 = ~v11;
    v13 = -v11;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v10 = v14 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain(a1);
    v8 = v12;
    v9 = 0;
  }
  v30 = v8;
  v31 = (unint64_t)(v8 + 64) >> 6;
  if ((v1 & 0x8000000000000000) == 0)
    goto LABEL_14;
LABEL_11:
  v15 = __CocoaSet.Iterator.next()(v7);
  if (!v15)
    goto LABEL_39;
  v16 = v15;
  v33 = v15;
  v17 = type metadata accessor for NSUserActivity();
  swift_unknownObjectRetain();
  swift_dynamicCast(&v35, &v33, (char *)&type metadata for Swift.AnyObject + 8, v17, 7);
  v18 = v35;
  swift_unknownObjectRelease(v16);
  v19 = v9;
  v20 = v10;
  if (!v18)
    goto LABEL_39;
  while (1)
  {
    v25 = objc_msgSend(v18, "activityType", v30);
    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v28 = v27;

    if (v26 == 0xD000000000000028 && v28 == 0x80000001001AF2C0)
    {
      swift_bridgeObjectRelease(0x80000001001AF2C0);
      goto LABEL_39;
    }
    v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v28, 0xD000000000000028, 0x80000001001AF2C0, 0);
    swift_bridgeObjectRelease(v28);
    if ((v29 & 1) != 0)
      goto LABEL_39;

    v9 = v19;
    v10 = v20;
    if (v1 < 0)
      goto LABEL_11;
LABEL_14:
    if (!v10)
      break;
    v20 = (v10 - 1) & v10;
    v21 = __clz(__rbit64(v10)) | (v9 << 6);
    v19 = v9;
LABEL_32:
    v18 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v21);
    if (!v18)
      goto LABEL_39;
  }
  v22 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    return;
  }
  if (v22 >= v31)
    goto LABEL_39;
  v23 = *(_QWORD *)(v32 + 8 * v22);
  v19 = v9 + 1;
  if (v23)
    goto LABEL_31;
  v19 = v9 + 2;
  if (v9 + 2 >= v31)
    goto LABEL_39;
  v23 = *(_QWORD *)(v32 + 8 * v19);
  if (v23)
    goto LABEL_31;
  v19 = v9 + 3;
  if (v9 + 3 >= v31)
    goto LABEL_39;
  v23 = *(_QWORD *)(v32 + 8 * v19);
  if (v23)
    goto LABEL_31;
  v19 = v9 + 4;
  if (v9 + 4 >= v31)
    goto LABEL_39;
  v23 = *(_QWORD *)(v32 + 8 * v19);
  if (v23)
    goto LABEL_31;
  v19 = v9 + 5;
  if (v9 + 5 >= v31)
    goto LABEL_39;
  v23 = *(_QWORD *)(v32 + 8 * v19);
  if (v23)
  {
LABEL_31:
    v20 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v19 << 6);
    goto LABEL_32;
  }
  v24 = v9 + 6;
  while (v31 != v24)
  {
    v23 = *(_QWORD *)(v32 + 8 * v24++);
    if (v23)
    {
      v19 = v24 - 1;
      goto LABEL_31;
    }
  }
LABEL_39:
  outlined consume of Set<String>.Iterator._Variant(v1);
}

Swift::Void __swiftcall MOSceneDelegate.sceneDidDisconnect(_:)(UIScene a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  objc_class *v6;
  id v7;
  id v8;
  uint64_t v9;
  _QWORD **v10;
  _QWORD *v11;
  void (*v12)(void);
  _QWORD *v13;
  _BYTE v14[24];

  v3 = objc_opt_self(UIWindowScene);
  v4 = swift_dynamicCastObjCClass(a1.super.super.isa, v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = a1.super.super.isa;
    objc_msgSend(v5, "_setBackgroundStyle:", 1);
    v7 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v8 = objc_msgSend(v7, "delegate");

    if (v8)
    {
      v9 = type metadata accessor for MOAppDelegate();
      swift_dynamicCastClassUnconditional(v8, v9, 0, 0, 0);
      v10 = (_QWORD **)(v1 + OBJC_IVAR____TtC16MomentsUIService15MOSceneDelegate_window);
      swift_beginAccess(v10, v14, 0, 0);
      v11 = *v10;
      if (*v10)
      {
        v12 = *(void (**)(void))((swift_isaMask & *v11) + 0x98);
        v13 = v11;
        v12();

      }
      swift_unknownObjectRelease(v8);
    }
    else
    {
      __break(1u);
    }
  }
}

id MOSceneDelegate.init()()
{
  char *v0;
  objc_class *ObjectType;
  objc_super v3;

  ObjectType = (objc_class *)swift_getObjectType(v0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService15MOSceneDelegate_window] = 0;
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, "init");
}

uint64_t type metadata accessor for MOSceneDelegate()
{
  return objc_opt_self(_TtC16MomentsUIService15MOSceneDelegate);
}

void *MOSuggestionSheetOversizedBoundsButton.enlargementPercentage.unsafeMutableAddressor()
{
  return &static MOSuggestionSheetOversizedBoundsButton.enlargementPercentage;
}

double static MOSuggestionSheetOversizedBoundsButton.enlargementPercentage.getter()
{
  return 1.5;
}

BOOL MOSuggestionSheetOversizedBoundsButton.point(inside:with:)(CGFloat a1, CGFloat a2)
{
  void *v2;
  double v5;
  double v6;
  double v7;
  double v8;
  CGPoint v10;
  CGRect v11;
  CGRect v12;

  objc_msgSend(v2, "bounds");
  v6 = v5;
  objc_msgSend(v2, "bounds");
  v8 = v7;
  objc_msgSend(v2, "bounds");
  v12 = CGRectInset(v11, v6 * -1.5, v8 * -1.5);
  v10.x = a1;
  v10.y = a2;
  return CGRectContainsPoint(v12, v10);
}

id MOSuggestionSheetOversizedBoundsButton.init(frame:)(double a1, double a2, double a3, double a4)
{
  void *v4;
  objc_super v10;

  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for MOSuggestionSheetOversizedBoundsButton();
  return objc_msgSendSuper2(&v10, "initWithFrame:", a1, a2, a3, a4);
}

uint64_t type metadata accessor for MOSuggestionSheetOversizedBoundsButton()
{
  return objc_opt_self(_TtC16MomentsUIService38MOSuggestionSheetOversizedBoundsButton);
}

id MOSuggestionSheetOversizedBoundsButton.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for MOSuggestionSheetOversizedBoundsButton();
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id MOSuggestionSheetOversizedBoundsButton.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionSheetOversizedBoundsButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t PropertyDescriptor.className.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for PropertyDescriptor(0) + 20));
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t type metadata accessor for PropertyDescriptor(uint64_t a1)
{
  uint64_t result;

  result = type metadata singleton initialization cache for PropertyDescriptor;
  if (!type metadata singleton initialization cache for PropertyDescriptor)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PropertyDescriptor);
  return result;
}

uint64_t PropertyDescriptor.name.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for PropertyDescriptor(0) + 24));
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t PropertyDescriptor.stringValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  _BYTE v4[32];

  v1 = type metadata accessor for PropertyDescriptor(0);
  outlined init with copy of Any(v0 + *(int *)(v1 + 28), (uint64_t)v4);
  if (swift_dynamicCast(&v3, v4, (char *)&type metadata for Any + 8, &type metadata for String, 6))
    return v3;
  else
    return 0;
}

uint64_t PropertyDescriptor.classPropertyValues.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[32];

  v1 = type metadata accessor for PropertyDescriptor(0);
  result = 0;
  v3 = (_QWORD *)(v0 + *(int *)(v1 + 20));
  v4 = v3[1];
  if (*v3 != 0x7961727241534ELL || v4 != 0xE700000000000000)
  {
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(*v3, v4, 0x7961727241534ELL, 0xE700000000000000, 0) & 1) != 0)
    {
      return 0;
    }
    else
    {
      outlined init with copy of Any(v0 + *(int *)(v1 + 28), (uint64_t)v8);
      v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PropertyDescriptor]);
      if (swift_dynamicCast(&v7, v8, (char *)&type metadata for Any + 8, v6, 6))
        return v7;
      else
        return 0;
    }
  }
  return result;
}

uint64_t PropertyDescriptor.nestedArrayValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v7;
  _BYTE v8[32];

  v1 = type metadata accessor for PropertyDescriptor(0);
  v2 = (_QWORD *)(v0 + *(int *)(v1 + 20));
  v3 = v2[1];
  v4 = *v2 == 0x7961727241534ELL && v3 == 0xE700000000000000;
  if (!v4
    && (_stringCompareWithSmolCheck(_:_:expecting:)(*v2, v3, 0x7961727241534ELL, 0xE700000000000000, 0) & 1) == 0)
  {
    return 0;
  }
  outlined init with copy of Any(v0 + *(int *)(v1 + 28), (uint64_t)v8);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PropertyDescriptor]);
  if (swift_dynamicCast(&v7, v8, (char *)&type metadata for Any + 8, v5, 6))
    return v7;
  else
    return 0;
}

uint64_t PropertyDescriptor.nestedDictionaryValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _BYTE v5[32];

  v1 = type metadata accessor for PropertyDescriptor(0);
  outlined init with copy of Any(v0 + *(int *)(v1 + 28), (uint64_t)v5);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : PropertyDescriptor]);
  if (swift_dynamicCast(&v4, v5, (char *)&type metadata for Any + 8, v2, 6))
    return v4;
  else
    return 0;
}

uint64_t PropertyDescriptor.fullDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v18;
  id v19;
  double *v20[3];
  uint64_t v21;

  v0 = type metadata accessor for String.Encoding(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  PropertyDescriptor.buildFullDescriptionJson()(v20);
  v3 = (void *)objc_opt_self(NSJSONSerialization);
  v4 = v21;
  v5 = __swift_project_boxed_opaque_existential_1(v20, v21);
  v6 = _bridgeAnythingToObjectiveC<A>(_:)(v5, v4);
  v19 = 0;
  v7 = objc_msgSend(v3, "dataWithJSONObject:options:error:", v6, 1, &v19);
  swift_unknownObjectRelease(v6);
  v8 = v19;
  if (!v7)
  {
    v15 = v8;
    v16 = _convertNSErrorToError(_:)(v8);

    swift_willThrow();
    swift_errorRelease(v16);
LABEL_5:
    v12 = 0;
    goto LABEL_6;
  }
  v9 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v11 = v10;

  static String.Encoding.utf8.getter();
  v12 = String.init(data:encoding:)(v9, v11, v2);
  v14 = v13;
  outlined consume of Data._Representation(v9, v11);
  if (!v14)
    goto LABEL_5;
LABEL_6:
  __swift_destroy_boxed_opaque_existential_1(v20);
  return v12;
}

uint64_t PropertyDescriptor.buildFullDescriptionJson()@<X0>(double **a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double *v20;
  __n128 v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int64_t v31;
  int64_t v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t i;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  char v48;
  unint64_t v49;
  uint64_t v50;
  _BOOL8 v51;
  uint64_t v52;
  char v53;
  unint64_t v54;
  char v55;
  unint64_t v56;
  char v57;
  char v58;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v60;
  uint64_t *v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  __n128 v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  unint64_t v80;
  uint64_t v81;
  _BOOL8 v82;
  uint64_t v83;
  char v84;
  unint64_t v85;
  char v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t result;
  double **v91;
  double *v92;
  unint64_t v93;
  double **v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  _OWORD v100[2];
  _OWORD v101[2];

  v3 = type metadata accessor for PropertyDescriptor(0);
  v97 = *(_QWORD *)(v3 - 8);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v96 = (uint64_t)&v94 - v8;
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v94 - v10;
  v12 = (_QWORD *)(v1 + *(int *)(v9 + 20));
  v13 = v12[1];
  v14 = *v12 == 0x7961727241534ELL && v13 == 0xE700000000000000;
  if (v14
    || (_stringCompareWithSmolCheck(_:_:expecting:)(*v12, v13, 0x7961727241534ELL, 0xE700000000000000, 0) & 1) != 0)
  {
    outlined init with copy of Any(v1 + *(int *)(v3 + 28), (uint64_t)v101);
    v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PropertyDescriptor]);
    if ((swift_dynamicCast(v100, v101, (char *)&type metadata for Any + 8, v15, 6) & 1) != 0)
    {
      v16 = *(_QWORD *)&v100[0];
      v17 = *(_QWORD *)(*(_QWORD *)&v100[0] + 16);
      if (v17)
      {
        v18 = *(_QWORD *)&v100[0]
            + ((*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80));
        v19 = *(_QWORD *)(v97 + 72);
        v20 = _swiftEmptyArrayStorage;
        do
        {
          outlined init with copy of PropertyDescriptor(v18, (uint64_t)v11);
          PropertyDescriptor.buildFullDescriptionJson()(v101, v21);
          if ((swift_isUniquelyReferenced_nonNull_native(v20) & 1) == 0)
            v20 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((_QWORD *)v20 + 2) + 1, 1, v20);
          v23 = *((_QWORD *)v20 + 2);
          v22 = *((_QWORD *)v20 + 3);
          if (v23 >= v22 >> 1)
            v20 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((double *)(v22 > 1), v23 + 1, 1, v20);
          *((_QWORD *)v20 + 2) = v23 + 1;
          outlined init with take of Any(v101, &v20[4 * v23 + 4]);
          outlined destroy of PropertyDescriptor((uint64_t)v11);
          v18 += v19;
          --v17;
        }
        while (v17);
        swift_bridgeObjectRelease(v16);
      }
      else
      {
        swift_bridgeObjectRelease(*(_QWORD *)&v100[0]);
        v20 = _swiftEmptyArrayStorage;
      }
      result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Any]);
      a1[3] = (double *)result;
      *a1 = v20;
      return result;
    }
  }
  v24 = v1 + *(int *)(v3 + 28);
  outlined init with copy of Any(v24, (uint64_t)v101);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : PropertyDescriptor]);
  if (swift_dynamicCast(v100, v101, (char *)&type metadata for Any + 8, v25, 6))
  {
    v94 = a1;
    v26 = *(_QWORD **)&v100[0];
    v27 = *(_QWORD *)(*(_QWORD *)&v100[0] + 64);
    v98 = *(_QWORD *)&v100[0] + 64;
    v28 = 1 << *(_BYTE *)(*(_QWORD *)&v100[0] + 32);
    v29 = -1;
    if (v28 < 64)
      v29 = ~(-1 << v28);
    v30 = v29 & v27;
    v31 = (unint64_t)(v28 + 63) >> 6;
    swift_bridgeObjectRetain(*(_QWORD *)&v100[0]);
    v32 = 0;
    v33 = &_swiftEmptyDictionarySingleton;
    v95 = v26;
    if (v30)
      goto LABEL_22;
LABEL_23:
    while (2)
    {
      v36 = v32 + 1;
      if (__OFADD__(v32, 1))
      {
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        __break(1u);
LABEL_97:
        result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
        __break(1u);
        return result;
      }
      if (v36 < v31)
      {
        v37 = *(_QWORD *)(v98 + 8 * v36);
        ++v32;
        if (v37)
          goto LABEL_40;
        v32 = v36 + 1;
        if (v36 + 1 >= v31)
          break;
        v37 = *(_QWORD *)(v98 + 8 * v32);
        if (v37)
          goto LABEL_40;
        v32 = v36 + 2;
        if (v36 + 2 >= v31)
          break;
        v37 = *(_QWORD *)(v98 + 8 * v32);
        if (v37)
          goto LABEL_40;
        v32 = v36 + 3;
        if (v36 + 3 >= v31)
          break;
        v37 = *(_QWORD *)(v98 + 8 * v32);
        if (v37)
          goto LABEL_40;
        v32 = v36 + 4;
        if (v36 + 4 >= v31)
          break;
        v37 = *(_QWORD *)(v98 + 8 * v32);
        if (v37)
        {
LABEL_40:
          v30 = (v37 - 1) & v37;
          for (i = __clz(__rbit64(v37)) + (v32 << 6); ; i = v34 | (v32 << 6))
          {
            v39 = (uint64_t *)(v26[6] + 16 * i);
            v41 = *v39;
            v40 = v39[1];
            v42 = v26[2];
            swift_bridgeObjectRetain(v40);
            if (v42)
            {
              v43 = specialized __RawDictionaryStorage.find<A>(_:)(v41, v40);
              if ((v44 & 1) != 0)
                break;
            }
            swift_bridgeObjectRetain(v33);
            v56 = specialized __RawDictionaryStorage.find<A>(_:)(v41, v40);
            v58 = v57;
            swift_bridgeObjectRelease(v33);
            if ((v58 & 1) != 0)
            {
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v33);
              v99 = v33;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                specialized _NativeDictionary.copy()();
                v33 = v99;
              }
              swift_bridgeObjectRelease(*(_QWORD *)(v33[6] + 16 * v56 + 8));
              outlined init with take of Any((_OWORD *)(v33[7] + 32 * v56), v100);
              specialized _NativeDictionary._delete(at:)(v56, (uint64_t)v33);
              swift_bridgeObjectRelease(0x8000000000000000);
            }
            else
            {
              memset(v100, 0, sizeof(v100));
            }
            swift_bridgeObjectRelease(v40);
            outlined destroy of Any?((uint64_t)v100);
            if (!v30)
              goto LABEL_23;
LABEL_22:
            v34 = __clz(__rbit64(v30));
            v30 &= v30 - 1;
          }
          v45 = v96;
          outlined init with copy of PropertyDescriptor(v26[7] + *(_QWORD *)(v97 + 72) * v43, v96);
          PropertyDescriptor.buildFullDescriptionJson()(v101, v46);
          outlined destroy of PropertyDescriptor(v45);
          outlined init with take of Any(v101, v100);
          v47 = swift_isUniquelyReferenced_nonNull_native(v33);
          v99 = v33;
          v49 = specialized __RawDictionaryStorage.find<A>(_:)(v41, v40);
          v50 = v33[2];
          v51 = (v48 & 1) == 0;
          v52 = v50 + v51;
          if (__OFADD__(v50, v51))
            goto LABEL_92;
          v53 = v48;
          if (v33[3] < v52)
          {
            specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v52, v47);
            v54 = specialized __RawDictionaryStorage.find<A>(_:)(v41, v40);
            if ((v53 & 1) != (v55 & 1))
              goto LABEL_97;
            v49 = v54;
            v33 = v99;
            if ((v53 & 1) == 0)
              goto LABEL_56;
LABEL_54:
            v60 = (_QWORD *)(v33[7] + 32 * v49);
            __swift_destroy_boxed_opaque_existential_1(v60);
            outlined init with take of Any(v100, v60);
            goto LABEL_58;
          }
          if ((v47 & 1) != 0)
          {
            v33 = v99;
            if ((v48 & 1) != 0)
              goto LABEL_54;
          }
          else
          {
            specialized _NativeDictionary.copy()();
            v33 = v99;
            if ((v53 & 1) != 0)
              goto LABEL_54;
          }
LABEL_56:
          v33[(v49 >> 6) + 8] |= 1 << v49;
          v61 = (uint64_t *)(v33[6] + 16 * v49);
          *v61 = v41;
          v61[1] = v40;
          outlined init with take of Any(v100, (_OWORD *)(v33[7] + 32 * v49));
          v62 = v33[2];
          v63 = __OFADD__(v62, 1);
          v64 = v62 + 1;
          if (v63)
            goto LABEL_93;
          v33[2] = v64;
          swift_bridgeObjectRetain(v40);
LABEL_58:
          swift_bridgeObjectRelease(v40);
          swift_bridgeObjectRelease(0x8000000000000000);
          v26 = v95;
          if (!v30)
            continue;
          goto LABEL_22;
        }
        v38 = v36 + 5;
        if (v38 < v31)
        {
          v37 = *(_QWORD *)(v98 + 8 * v38);
          if (v37)
          {
            v32 = v38;
            goto LABEL_40;
          }
          while (1)
          {
            v32 = v38 + 1;
            if (__OFADD__(v38, 1))
              goto LABEL_96;
            if (v32 >= v31)
              goto LABEL_81;
            v37 = *(_QWORD *)(v98 + 8 * v32);
            ++v38;
            if (v37)
              goto LABEL_40;
          }
        }
      }
      break;
    }
LABEL_81:
    swift_release(v26);
    swift_bridgeObjectRelease(v26);
    result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Any]);
    v91 = v94;
    v94[3] = (double *)result;
    *v91 = (double *)v33;
    return result;
  }
  v65 = v12[1];
  v66 = *v12 == 0x7961727241534ELL && v65 == 0xE700000000000000;
  if (v66
    || (_stringCompareWithSmolCheck(_:_:expecting:)(*v12, v65, 0x7961727241534ELL, 0xE700000000000000, 0) & 1) != 0
    || (outlined init with copy of Any(v24, (uint64_t)v101),
        v67 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PropertyDescriptor]),
        (swift_dynamicCast(v100, v101, (char *)&type metadata for Any + 8, v67, 6) & 1) == 0))
  {
    outlined init with copy of Any(v24, (uint64_t)v101);
    result = swift_dynamicCast(v100, v101, (char *)&type metadata for Any + 8, &type metadata for String, 6);
    if ((_DWORD)result)
    {
      v93 = *((_QWORD *)&v100[0] + 1);
      v92 = *(double **)&v100[0];
    }
    else
    {
      v92 = 0;
      v93 = 0xE000000000000000;
    }
    a1[3] = (double *)&type metadata for String;
    *a1 = v92;
    a1[1] = (double *)v93;
    return result;
  }
  v68 = *(_QWORD *)(*(_QWORD *)&v100[0] + 16);
  if (v68)
  {
    v94 = a1;
    v69 = *(_QWORD *)&v100[0]
        + ((*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80));
    v70 = *(_QWORD *)(v97 + 72);
    v96 = *(_QWORD *)&v100[0];
    v97 = v70;
    v71 = &_swiftEmptyDictionarySingleton;
    v98 = v3;
    while (1)
    {
      outlined init with copy of PropertyDescriptor(v69, (uint64_t)v6);
      v73 = (uint64_t *)&v6[*(int *)(v3 + 24)];
      v75 = *v73;
      v74 = v73[1];
      v76 = swift_bridgeObjectRetain(v74);
      v77 = (uint64_t)v6;
      PropertyDescriptor.buildFullDescriptionJson()(v101, v76);
      outlined init with take of Any(v101, v100);
      v78 = swift_isUniquelyReferenced_nonNull_native(v71);
      v99 = v71;
      v80 = specialized __RawDictionaryStorage.find<A>(_:)(v75, v74);
      v81 = v71[2];
      v82 = (v79 & 1) == 0;
      v83 = v81 + v82;
      if (__OFADD__(v81, v82))
        goto LABEL_94;
      v84 = v79;
      if (v71[3] >= v83)
      {
        if ((v78 & 1) != 0)
        {
          v71 = v99;
          if ((v79 & 1) == 0)
            goto LABEL_77;
        }
        else
        {
          specialized _NativeDictionary.copy()();
          v71 = v99;
          if ((v84 & 1) == 0)
            goto LABEL_77;
        }
      }
      else
      {
        specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v83, v78);
        v85 = specialized __RawDictionaryStorage.find<A>(_:)(v75, v74);
        if ((v84 & 1) != (v86 & 1))
          goto LABEL_97;
        v80 = v85;
        v71 = v99;
        if ((v84 & 1) == 0)
        {
LABEL_77:
          v71[(v80 >> 6) + 8] |= 1 << v80;
          v87 = (uint64_t *)(v71[6] + 16 * v80);
          *v87 = v75;
          v87[1] = v74;
          outlined init with take of Any(v100, (_OWORD *)(v71[7] + 32 * v80));
          v88 = v71[2];
          v63 = __OFADD__(v88, 1);
          v89 = v88 + 1;
          if (v63)
            goto LABEL_95;
          v71[2] = v89;
          swift_bridgeObjectRetain(v74);
          goto LABEL_69;
        }
      }
      v72 = (_QWORD *)(v71[7] + 32 * v80);
      __swift_destroy_boxed_opaque_existential_1(v72);
      outlined init with take of Any(v100, v72);
LABEL_69:
      swift_bridgeObjectRelease(v74);
      swift_bridgeObjectRelease(0x8000000000000000);
      v6 = (char *)v77;
      outlined destroy of PropertyDescriptor(v77);
      v3 = v98;
      v69 += v97;
      if (!--v68)
      {
        swift_bridgeObjectRelease(v96);
        a1 = v94;
        goto LABEL_90;
      }
    }
  }
  swift_bridgeObjectRelease(*(_QWORD *)&v100[0]);
  v71 = &_swiftEmptyDictionarySingleton;
LABEL_90:
  result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Any]);
  a1[3] = (double *)result;
  *a1 = (double *)v71;
  return result;
}

uint64_t static PropertyDescriptor.from(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  double *v19;
  uint64_t v20;
  void *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  void *v39;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v41;
  unint64_t v42;
  uint64_t v43;
  _BOOL8 v44;
  uint64_t v45;
  char v46;
  unint64_t v47;
  char v48;
  uint64_t *v49;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  void *v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  void *v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t *v68;
  uint64_t result;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  int *v73;
  uint64_t v74;
  char *v75;
  _QWORD *v76;
  uint64_t v77;
  void *v78;
  _OWORD v79[2];
  _QWORD v80[2];
  _OWORD v81[2];
  __int128 v82;
  _QWORD *v83;
  __int128 v84;
  uint64_t v85;

  v4 = (int *)type metadata accessor for PropertyDescriptor(0);
  v5 = *((_QWORD *)v4 - 1);
  v6 = __chkstk_darwin(v4);
  v77 = (uint64_t)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v70 - v9;
  __chkstk_darwin(v8);
  v12 = (char *)&v70 - v11;
  v76 = (_QWORD *)type metadata accessor for NSFastEnumerationIterator(0);
  v75 = (char *)*(v76 - 1);
  __chkstk_darwin(v76);
  v14 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_msgSend(a1, "propertyValue");
  _bridgeAnyObjectToAny(_:)(&v84, v15);
  swift_unknownObjectRelease(v15);
  v16 = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for NSArray, NSArray_ptr);
  if (swift_dynamicCast(&v82, &v84, (char *)&type metadata for Any + 8, v16, 6))
  {
    v72 = a1;
    v73 = v4;
    v74 = a2;
    v17 = (void *)v82;
    v18 = NSArray.makeIterator()();
    NSFastEnumerationIterator.next()(&v84, v18);
    if (v85)
    {
      v19 = _swiftEmptyArrayStorage;
      do
      {
        outlined init with take of Any(&v84, &v82);
        v20 = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for PrettyPropertyDescription, &off_1001E2298);
        swift_dynamicCast(v81, &v82, (char *)&type metadata for Any + 8, v20, 7);
        v21 = *(void **)&v81[0];
        static PropertyDescriptor.from(_:)(*(_QWORD *)&v81[0]);

        if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
          v19 = (double *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((_QWORD *)v19 + 2) + 1, 1, (unint64_t)v19);
        v23 = *((_QWORD *)v19 + 2);
        v22 = *((_QWORD *)v19 + 3);
        if (v23 >= v22 >> 1)
          v19 = (double *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v23 + 1, 1, (unint64_t)v19);
        *((_QWORD *)v19 + 2) = v23 + 1;
        v24 = outlined init with take of PropertyDescriptor((uint64_t)v12, (uint64_t)v19+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v23);
        NSFastEnumerationIterator.next()(&v84, v24);
      }
      while (v85);
    }
    else
    {
      v19 = _swiftEmptyArrayStorage;
    }
    (*((void (**)(char *, _QWORD *))v75 + 1))(v14, v76);
    v85 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PropertyDescriptor]);

    *(_QWORD *)&v84 = v19;
    a2 = v74;
    v4 = v73;
    a1 = v72;
    goto LABEL_35;
  }
  v25 = objc_msgSend(a1, "propertyValue");
  _bridgeAnyObjectToAny(_:)(&v84, v25);
  swift_unknownObjectRelease(v25);
  v26 = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for NSDictionary, NSDictionary_ptr);
  if (!swift_dynamicCast(&v82, &v84, (char *)&type metadata for Any + 8, v26, 6))
  {
    v53 = objc_msgSend(a1, "propertyValue");
    _bridgeAnyObjectToAny(_:)(&v84, v53);
    swift_unknownObjectRelease(v53);
    v54 = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for PrettyPropertyDescription, &off_1001E2298);
    if (swift_dynamicCast(&v82, &v84, (char *)&type metadata for Any + 8, v54, 6))
    {
      v55 = (void *)v82;
      v85 = (uint64_t)v4;
      __swift_allocate_boxed_opaque_existential_1(&v84);
      static PropertyDescriptor.from(_:)(v55);

    }
    else
    {
      v56 = objc_msgSend(a1, "propertyValue");
      _bridgeAnyObjectToAny(_:)(v81, v56);
      swift_unknownObjectRelease(v56);
      v83 = &type metadata for String;
      swift_dynamicCast(&v82, v81, (char *)&type metadata for Any + 8, &type metadata for String, 7);
      outlined init with take of Any(&v82, &v84);
    }
LABEL_35:
    v57 = objc_msgSend(a1, "className");
    v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(v57);
    v60 = v59;

    v61 = objc_msgSend(a1, "propertyName");
    if (v61)
    {
      v62 = v61;
      v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(v61);
      v65 = v64;

    }
    else
    {
      v63 = 0;
      v65 = 0xE000000000000000;
    }
    v66 = outlined init with copy of Any((uint64_t)&v84, a2 + v4[7]);
    UUID.init()(v66);
    v67 = (uint64_t *)(a2 + v4[5]);
    *v67 = v58;
    v67[1] = v60;
    v68 = (uint64_t *)(a2 + v4[6]);
    *v68 = v63;
    v68[1] = v65;
    return __swift_destroy_boxed_opaque_existential_1(&v84);
  }
  v76 = (_QWORD *)v82;
  v27 = objc_msgSend((id)v82, "allKeys");
  v75 = (char *)&type metadata for Any + 8;
  v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v27, (char *)&type metadata for Any + 8);

  v29 = *(_QWORD *)(v28 + 16);
  if (!v29)
  {
    swift_bridgeObjectRelease(v28);
    v31 = &_swiftEmptyDictionarySingleton;
LABEL_34:
    v85 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : PropertyDescriptor]);

    *(_QWORD *)&v84 = v31;
    goto LABEL_35;
  }
  v72 = a1;
  v73 = v4;
  v74 = a2;
  v71 = v28;
  v30 = v28 + 32;
  v31 = &_swiftEmptyDictionarySingleton;
  while (1)
  {
    outlined init with copy of Any(v30, (uint64_t)&v84);
    outlined init with copy of Any((uint64_t)&v84, (uint64_t)&v82);
    swift_dynamicCast(v80, &v82, v75, &type metadata for String, 7);
    v33 = v80[0];
    v32 = v80[1];
    v34 = v85;
    v35 = __swift_project_boxed_opaque_existential_1(&v84, v85);
    v36 = _bridgeAnythingToObjectiveC<A>(_:)(v35, v34);
    v37 = objc_msgSend(v76, "__swift_objectForKeyedSubscript:", v36);
    swift_unknownObjectRelease(v36);
    if (!v37)
      break;
    _bridgeAnyObjectToAny(_:)(v79, v37);
    swift_unknownObjectRelease(v37);
    outlined init with take of Any(v79, v81);
    v38 = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for PrettyPropertyDescription, &off_1001E2298);
    swift_dynamicCast(&v78, v81, (char *)&type metadata for Any + 8, v38, 7);
    v39 = v78;
    static PropertyDescriptor.from(_:)(v78);

    outlined init with take of PropertyDescriptor((uint64_t)v10, v77);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v31);
    *(_QWORD *)&v81[0] = v31;
    v42 = specialized __RawDictionaryStorage.find<A>(_:)(v33, v32);
    v43 = v31[2];
    v44 = (v41 & 1) == 0;
    v45 = v43 + v44;
    if (__OFADD__(v43, v44))
    {
      __break(1u);
LABEL_40:
      __break(1u);
      break;
    }
    v46 = v41;
    if (v31[3] >= v45)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v31 = *(_QWORD **)&v81[0];
        if ((v41 & 1) != 0)
          goto LABEL_13;
      }
      else
      {
        specialized _NativeDictionary.copy()();
        v31 = *(_QWORD **)&v81[0];
        if ((v46 & 1) != 0)
          goto LABEL_13;
      }
    }
    else
    {
      specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v45, isUniquelyReferenced_nonNull_native);
      v47 = specialized __RawDictionaryStorage.find<A>(_:)(v33, v32);
      if ((v46 & 1) != (v48 & 1))
        goto LABEL_42;
      v42 = v47;
      v31 = *(_QWORD **)&v81[0];
      if ((v46 & 1) != 0)
      {
LABEL_13:
        outlined assign with take of PropertyDescriptor(v77, v31[7] + *(_QWORD *)(v5 + 72) * v42);
        goto LABEL_14;
      }
    }
    v31[(v42 >> 6) + 8] |= 1 << v42;
    v49 = (uint64_t *)(v31[6] + 16 * v42);
    *v49 = v33;
    v49[1] = v32;
    outlined init with take of PropertyDescriptor(v77, v31[7] + *(_QWORD *)(v5 + 72) * v42);
    v50 = v31[2];
    v51 = __OFADD__(v50, 1);
    v52 = v50 + 1;
    if (v51)
      goto LABEL_40;
    v31[2] = v52;
    swift_bridgeObjectRetain(v32);
LABEL_14:
    swift_bridgeObjectRelease(v32);
    swift_bridgeObjectRelease(0x8000000000000000);
    __swift_destroy_boxed_opaque_existential_1(&v84);
    v30 += 32;
    if (!--v29)
    {
      swift_bridgeObjectRelease(v71);
      a2 = v74;
      v4 = v73;
      a1 = v72;
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_42:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

uint64_t outlined init with take of PropertyDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PropertyDescriptor(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined assign with take of PropertyDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PropertyDescriptor(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for PropertyDescriptor(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v21);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = *((_QWORD *)v18 + 3);
    *(uint64_t *)((char *)a1 + v16 + 24) = v19;
    v20 = **(void (***)(char *, char *, uint64_t))(v19 - 8);
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v15);
    v20(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for PropertyDescriptor(uint64_t a1, int *a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[6] + 8));
  return __swift_destroy_boxed_opaque_existential_1((_QWORD *)(a1 + a2[7]));
}

uint64_t initializeWithCopy for PropertyDescriptor(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_QWORD *)(v17 + 24);
  *(_QWORD *)(a1 + v15 + 24) = v18;
  v19 = **(void (***)(uint64_t, uint64_t, uint64_t))(v18 - 8);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v14);
  v19(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for PropertyDescriptor(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v10 = v9[1];
  v11 = v8[1];
  v8[1] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v15 = v14[1];
  v16 = v13[1];
  v13[1] = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  __swift_assign_boxed_opaque_existential_0((_QWORD *)(a1 + a3[7]), (_QWORD *)(a2 + a3[7]));
  return a1;
}

_QWORD *__swift_assign_boxed_opaque_existential_0(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v10 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v10 + 82) & 2) != 0)
      {
        v12 = *result;
        v13 = *a2;
        swift_retain(*a2);
        result = (_QWORD *)swift_release(v12);
        *v3 = v13;
      }
      else
      {
        return (_QWORD *)(*(uint64_t (**)(_QWORD *, _QWORD *, _QWORD))(v10 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        v11 = *result;
        if ((v8 & 0x20000) != 0)
        {
          v15 = *a2;
          *v3 = *a2;
          swift_retain(v15);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (_QWORD *)swift_release(v11);
      }
      else
      {
        (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v6 + 32))(v16, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          v14 = *a2;
          *v3 = *a2;
          v9 = swift_retain(v14);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (_QWORD *)(*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v6 + 8))(v16, v4, v9);
      }
    }
  }
  return result;
}

uint64_t initializeWithTake for PropertyDescriptor(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = (_OWORD *)(a1 + v8);
  v10 = (_OWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  return a1;
}

uint64_t assignWithTake for PropertyDescriptor(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  __int128 v22;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  v12 = v8[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease(v12);
  v13 = a3[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  v18 = v14[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease(v18);
  v19 = a3[7];
  v20 = (_OWORD *)(a1 + v19);
  v21 = (_OWORD *)(a2 + v19);
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(a1 + v19));
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  return a1;
}

uint64_t getEnumTagSinglePayload for PropertyDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10015DDAC);
}

uint64_t sub_10015DDAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for PropertyDescriptor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10015DE38);
}

uint64_t sub_10015DE38(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata completion function for PropertyDescriptor(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_1001A3AE8;
    v4[2] = &unk_1001A3AE8;
    v4[3] = &unk_1001A3B00;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t outlined init with copy of PropertyDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PropertyDescriptor(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of PropertyDescriptor(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PropertyDescriptor(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

Swift::Void __swiftcall MOSuggestionCollectionViewModel.initiateAuthentication()()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  NSString v17;
  id v18;
  _QWORD *v19;
  void *v20;
  _QWORD *v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[3];
  ValueMetadata *v27;
  uint64_t (*v28)(char, uint64_t);
  _QWORD *v29;

  v27 = &type metadata for MOAppProtectionFeatureFlags;
  v1 = lazy protocol witness table accessor for type MOAppProtectionFeatureFlags and conformance MOAppProtectionFeatureFlags();
  v28 = (uint64_t (*)(char, uint64_t))v1;
  v2 = isFeatureEnabled(_:)(aBlock);
  v3 = __swift_destroy_boxed_opaque_existential_1(aBlock);
  if ((v2 & 1) != 0)
  {
    v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v0 + 496))(v3);
    v5 = swift_allocObject(&unk_1001EC850, 24, 7);
    swift_weakInit(v5 + 16);
    v27 = &type metadata for MOAppProtectionFeatureFlags;
    v28 = (uint64_t (*)(char, uint64_t))v1;
    swift_retain_n(v5, 2);
    v6 = isFeatureEnabled(_:)(aBlock);
    __swift_destroy_boxed_opaque_existential_1(aBlock);
    if ((v6 & 1) != 0)
    {
      v7 = swift_allocObject(&unk_1001EC878, 24, 7);
      *(_QWORD *)(v7 + 16) = 0;
      v8 = swift_allocObject(&unk_1001EC8A0, 17, 7);
      *(_BYTE *)(v8 + 16) = 0;
      v9 = (_QWORD *)swift_allocObject(&unk_1001EC8C8, 56, 7);
      v9[2] = v7;
      v9[3] = v4;
      v9[4] = v8;
      v9[5] = partial apply for closure #1 in MOSuggestionCollectionViewModel.initiateAuthentication();
      v9[6] = v5;
      v10 = *(_QWORD *)(v4 + 16);
      if (v10)
      {
        v11 = (void *)objc_opt_self(APApplication);
        swift_bridgeObjectRetain_n(v4, 2);
        v23 = v7;
        swift_retain(v7);
        swift_retain(v8);
        v24 = v5;
        swift_retain(v5);
        v25 = v4;
        v12 = (_QWORD *)(v4 + 40);
        do
        {
          v14 = *(v12 - 1);
          v13 = *v12;
          v15 = one-time initialization token for accessGuard;
          swift_bridgeObjectRetain(*v12);
          if (v15 != -1)
            swift_once(&one-time initialization token for accessGuard, one-time initialization function for accessGuard);
          v12 += 2;
          v16 = (void *)static MOProtectedAppsManager.accessGuard;
          v17 = String._bridgeToObjectiveC()();
          v18 = objc_msgSend(v11, "applicationWithBundleIdentifier:", v17);

          v19 = (_QWORD *)swift_allocObject(&unk_1001EC8F0, 56, 7);
          v19[2] = v14;
          v19[3] = v13;
          v19[4] = v8;
          v19[5] = partial apply for closure #1 in static MOProtectedAppsManager.requestAccess(appSources:completion:);
          v19[6] = v9;
          v28 = partial apply for closure #2 in static MOProtectedAppsManager.requestAccess(appSources:completion:);
          v29 = v19;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned Bool, @guaranteed Error?) -> ();
          v27 = (ValueMetadata *)&block_descriptor_40;
          v20 = _Block_copy(aBlock);
          v21 = v29;
          swift_retain(v8);
          swift_retain(v9);
          objc_msgSend(v16, "authenticateForSubject:completion:", v18, v20, swift_release(v21).n128_f64[0]);
          _Block_release(v20);

          --v10;
        }
        while (v10);
        swift_release(v8);
        swift_release(v9);
        v4 = v25;
        swift_bridgeObjectRelease(v25);
        v7 = v23;
        v5 = v24;
      }
      else
      {
        swift_bridgeObjectRetain(v4);
        swift_retain(v7);
        swift_retain(v8);
        swift_retain(v5);
        swift_release(v8);
        swift_release(v9);
      }
      swift_release(v5);
    }
    else
    {
      closure #1 in MOSuggestionCollectionViewModel.initiateAuthentication()(0, v5);
      v7 = v5;
    }
    swift_release(v7);
    v22 = swift_bridgeObjectRelease(v4);
    swift_release_n(v5, 2, v22);
  }
}

uint64_t sub_10015E2F0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void MOSuggestionCollectionViewModel.validateConditions(additionalBundleIds:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v8;
  uint64_t v9;
  void (*v10)(__n128);
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t *, __n128);
  __n128 v25;
  void (*v26)(uint64_t *, _QWORD);
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  void *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  NSString v65;
  id v66;
  _QWORD *v67;
  void *v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  int64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t aBlock[3];
  ValueMetadata *v83;
  uint64_t (*v84)(void *, uint64_t);
  _QWORD *v85;
  char v86[24];

  v4 = v3;
  v83 = &type metadata for MOAppProtectionFeatureFlags;
  v73 = lazy protocol witness table accessor for type MOAppProtectionFeatureFlags and conformance MOAppProtectionFeatureFlags();
  v84 = (uint64_t (*)(void *, uint64_t))v73;
  v8 = isFeatureEnabled(_:)(aBlock);
  v9 = __swift_destroy_boxed_opaque_existential_1(aBlock);
  if ((v8 & 1) != 0)
  {
    v72 = a3;
    if (one-time initialization token for allFixedApps != -1)
      goto LABEL_50;
    while (1)
    {
      swift_beginAccess(&static MOProtectedAppSource.allFixedApps, v86, 0, 0);
      v10 = *(void (**)(__n128))(*(_QWORD *)v4 + 504);
      v11 = swift_bridgeObjectRetain(static MOProtectedAppSource.allFixedApps);
      v10(v11);
      v71 = a2;
      if (!a1)
      {
LABEL_31:
        if (one-time initialization token for filtering != -1)
          swift_once(&one-time initialization token for filtering, one-time initialization function for filtering);
        v34 = type metadata accessor for Logger(0);
        __swift_project_value_buffer(v34, (uint64_t)static MOAngelLogger.filtering);
        v35 = swift_retain_n(v4, 2);
        v36 = v4;
        v37 = Logger.logObject.getter(v35);
        v38 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v37, v38))
        {
          v39 = (uint8_t *)swift_slowAlloc(12, -1);
          v40 = swift_slowAlloc(32, -1);
          aBlock[0] = v40;
          *(_DWORD *)v39 = 136315138;
          v41 = (*(uint64_t (**)(void))(*(_QWORD *)v36 + 496))();
          v42 = a2;
          v43 = Array.debugDescription.getter(v41, &type metadata for MOProtectedAppSource);
          v45 = v44;
          swift_bridgeObjectRelease(v41);
          v46 = v43;
          a2 = v42;
          v81 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v46, v45, aBlock);
          v47 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, aBlock, v39 + 4);
          swift_release_n(v36, 2, v47);
          swift_bridgeObjectRelease(v45);
          _os_log_impl((void *)&_mh_execute_header, v37, v38, "[validateConditions] targetProtectedApps=%s", v39, 0xCu);
          swift_arrayDestroy(v40, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v40, -1, -1);
          swift_slowDealloc(v39, -1, -1);

        }
        else
        {

          v48 = swift_release_n(v36, 2, v49);
        }
        v50 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v36 + 496))(v48);
        v51 = swift_allocObject(&unk_1001EC850, 24, 7);
        swift_weakInit(v51 + 16);
        v52 = (_QWORD *)swift_allocObject(&unk_1001EC940, 40, 7);
        v52[2] = v51;
        v52[3] = a2;
        v53 = v72;
        v52[4] = v72;
        v83 = &type metadata for MOAppProtectionFeatureFlags;
        v84 = (uint64_t (*)(void *, uint64_t))v73;
        swift_retain(v51);
        outlined copy of (@escaping @callee_guaranteed () -> ())?(a2, v72);
        swift_retain(v51);
        outlined copy of (@escaping @callee_guaranteed () -> ())?(a2, v72);
        v54 = isFeatureEnabled(_:)(aBlock);
        __swift_destroy_boxed_opaque_existential_1(aBlock);
        if ((v54 & 1) != 0)
        {
          v55 = swift_allocObject(&unk_1001EC878, 24, 7);
          *(_QWORD *)(v55 + 16) = 0;
          v56 = swift_allocObject(&unk_1001EC8A0, 17, 7);
          *(_BYTE *)(v56 + 16) = 1;
          v57 = (_QWORD *)swift_allocObject(&unk_1001EC968, 56, 7);
          v57[2] = v55;
          v57[3] = v50;
          v57[4] = v56;
          v57[5] = partial apply for closure #1 in MOSuggestionCollectionViewModel.validateConditions(additionalBundleIds:completion:);
          v57[6] = v52;
          v58 = *(_QWORD *)(v50 + 16);
          if (v58)
          {
            v78 = v51;
            v59 = (void *)objc_opt_self(APApplication);
            swift_bridgeObjectRetain_n(v50, 2);
            v74 = v55;
            swift_retain(v55);
            swift_retain(v56);
            v76 = v52;
            swift_retain(v52);
            v80 = v50;
            v60 = (_QWORD *)(v50 + 40);
            do
            {
              v62 = *(v60 - 1);
              v61 = *v60;
              v63 = one-time initialization token for accessGuard;
              swift_bridgeObjectRetain(*v60);
              if (v63 != -1)
                swift_once(&one-time initialization token for accessGuard, one-time initialization function for accessGuard);
              v60 += 2;
              v64 = (void *)static MOProtectedAppsManager.accessGuard;
              v65 = String._bridgeToObjectiveC()();
              v66 = objc_msgSend(v59, "applicationWithBundleIdentifier:", v65);

              v67 = (_QWORD *)swift_allocObject(&unk_1001EC990, 56, 7);
              v67[2] = v56;
              v67[3] = v62;
              v67[4] = v61;
              v67[5] = partial apply for closure #1 in static MOProtectedAppsManager.requiresChallenge(appSources:completion:);
              v67[6] = v57;
              v84 = partial apply for closure #2 in static MOProtectedAppsManager.requiresChallenge(appSources:completion:);
              v85 = v67;
              aBlock[0] = (uint64_t)_NSConcreteStackBlock;
              aBlock[1] = 1107296256;
              aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed NSNumber?, @guaranteed Error?) -> ();
              v83 = (ValueMetadata *)&block_descriptor_27_1;
              v68 = _Block_copy(aBlock);
              v69 = v85;
              swift_retain(v56);
              swift_retain(v57);
              objc_msgSend(v64, "getIsChallengeCurrentlyRequiredForSubject:completion:", v66, v68, swift_release(v69).n128_f64[0]);
              _Block_release(v68);

              --v58;
            }
            while (v58);
            swift_release(v56);
            swift_release(v57);
            v50 = v80;
            swift_bridgeObjectRelease(v80);
            a2 = v71;
            v53 = v72;
            v52 = v76;
            v51 = v78;
            v55 = v74;
          }
          else
          {
            swift_bridgeObjectRetain(v50);
            swift_retain(v55);
            swift_retain(v56);
            swift_retain(v52);
            swift_release(v56);
            swift_release(v57);
          }
          swift_release(v51);
          swift_release(v52);
          v70 = (_QWORD *)v55;
        }
        else
        {
          closure #1 in MOSuggestionCollectionViewModel.validateConditions(additionalBundleIds:completion:)(1, v51, (void (*)(__n128))a2);
          swift_release(v51);
          v70 = v52;
        }
        swift_release(v70);
        outlined consume of (@escaping @callee_guaranteed () -> ())?(a2, v53);
        swift_bridgeObjectRelease(v50);
        swift_release(v51);
        return;
      }
      v75 = a1 + 56;
      v12 = 1 << *(_BYTE *)(a1 + 32);
      v13 = -1;
      if (v12 < 64)
        v13 = ~(-1 << v12);
      v14 = v13 & *(_QWORD *)(a1 + 56);
      v77 = (unint64_t)(v12 + 63) >> 6;
      swift_bridgeObjectRetain(a1);
      a2 = 0;
      v79 = v4;
      if (v14)
      {
LABEL_7:
        v15 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v16 = v15 | (a2 << 6);
        goto LABEL_22;
      }
      while (1)
      {
        v17 = a2 + 1;
        if (__OFADD__(a2, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v17 >= v77)
          goto LABEL_30;
        v18 = *(_QWORD *)(v75 + 8 * v17);
        ++a2;
        if (!v18)
        {
          a2 = v17 + 1;
          if (v17 + 1 >= v77)
            goto LABEL_30;
          v18 = *(_QWORD *)(v75 + 8 * a2);
          if (!v18)
          {
            a2 = v17 + 2;
            if (v17 + 2 >= v77)
              goto LABEL_30;
            v18 = *(_QWORD *)(v75 + 8 * a2);
            if (!v18)
              break;
          }
        }
LABEL_21:
        v14 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (a2 << 6);
LABEL_22:
        v20 = a1;
        v21 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v16);
        v23 = *v21;
        v22 = v21[1];
        v24 = *(uint64_t (**)(uint64_t *, __n128))(*(_QWORD *)v4 + 512);
        v25 = swift_bridgeObjectRetain(v22);
        v26 = (void (*)(uint64_t *, _QWORD))v24(aBlock, v25);
        v28 = v27;
        v29 = (_QWORD *)*v27;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v27);
        *v28 = v29;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v29 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v29[2] + 1, 1, v29);
          *v28 = v29;
        }
        v32 = v29[2];
        v31 = v29[3];
        if (v32 >= v31 >> 1)
        {
          v29 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((_QWORD *)(v31 > 1), v32 + 1, 1, v29);
          *v28 = v29;
        }
        a1 = v20;
        v29[2] = v32 + 1;
        v33 = &v29[2 * v32];
        v33[4] = v23;
        v33[5] = v22;
        v26(aBlock, 0);
        v4 = v79;
        if (v14)
          goto LABEL_7;
      }
      v19 = v17 + 3;
      if (v19 >= v77)
      {
LABEL_30:
        swift_release(a1);
        a2 = v71;
        goto LABEL_31;
      }
      v18 = *(_QWORD *)(v75 + 8 * v19);
      if (v18)
        break;
      while (1)
      {
        a2 = v19 + 1;
        if (__OFADD__(v19, 1))
          break;
        if (a2 >= v77)
          goto LABEL_30;
        v18 = *(_QWORD *)(v75 + 8 * a2);
        ++v19;
        if (v18)
          goto LABEL_21;
      }
LABEL_49:
      __break(1u);
LABEL_50:
      swift_once(&one-time initialization token for allFixedApps, one-time initialization function for allFixedApps);
    }
    a2 = v19;
    goto LABEL_21;
  }
  if (a2)
    ((void (*)(uint64_t))a2)(v9);
}

void closure #1 in MOSuggestionCollectionViewModel.validateConditions(additionalBundleIds:completion:)(char a1, uint64_t a2, void (*a3)(__n128))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t Strong;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  Swift::OpaquePointer v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  _BYTE v35[24];
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[24];
  _QWORD v40[3];
  uint64_t v41;
  _BYTE v42[24];

  v4 = a2 + 16;
  if ((a1 & 1) != 0)
  {
    if (one-time initialization token for filtering != -1)
      swift_once(&one-time initialization token for filtering, one-time initialization function for filtering);
    v14 = type metadata accessor for Logger(0);
    v15 = __swift_project_value_buffer(v14, (uint64_t)static MOAngelLogger.filtering);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Authentication not required", v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }

    swift_beginAccess(v4, v42, 0, 0);
    Strong = swift_weakLoadStrong(v4);
    if (Strong)
    {
      v20 = Strong;
      (*(void (**)(_QWORD *__return_ptr))(*(_QWORD *)Strong + 400))(v40);
      swift_release(v20);
      if (v41)
      {
        outlined init with copy of MOProtectedAppsManagerDelegate((uint64_t)v40, (uint64_t)v36);
        outlined destroy of MOSuggestionCollectionViewDelegate?((uint64_t)v40);
        v21 = v37;
        v22 = v38;
        __swift_project_boxed_opaque_existential_1(v36, v37);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 8))(1, v21, v22);
        __swift_destroy_boxed_opaque_existential_1(v36);
      }
      else
      {
        outlined destroy of MOSuggestionCollectionViewDelegate?((uint64_t)v40);
      }
    }
    swift_beginAccess(v4, v40, 0, 0);
    v27 = swift_weakLoadStrong(v4);
    if (v27)
    {
      v26 = v27;
      (*(void (**)(_QWORD))(*(_QWORD *)v27 + 528))(0);
      goto LABEL_24;
    }
  }
  else
  {
    if (one-time initialization token for filtering != -1)
      swift_once(&one-time initialization token for filtering, one-time initialization function for filtering);
    v5 = type metadata accessor for Logger(0);
    v6 = __swift_project_value_buffer(v5, (uint64_t)static MOAngelLogger.filtering);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Authentication required", v9, 2u);
      swift_slowDealloc(v9, -1, -1);
    }

    swift_beginAccess(v4, v42, 0, 0);
    v10 = swift_weakLoadStrong(v4);
    if (v10)
    {
      v11 = v10;
      (*(void (**)(_QWORD *__return_ptr))(*(_QWORD *)v10 + 400))(v40);
      swift_release(v11);
      if (v41)
      {
        outlined init with copy of MOProtectedAppsManagerDelegate((uint64_t)v40, (uint64_t)v36);
        outlined destroy of MOSuggestionCollectionViewDelegate?((uint64_t)v40);
        v12 = v37;
        v13 = v38;
        __swift_project_boxed_opaque_existential_1(v36, v37);
        (*(void (**)(_QWORD, uint64_t, uint64_t))(v13 + 8))(0, v12, v13);
        __swift_destroy_boxed_opaque_existential_1(v36);
      }
      else
      {
        outlined destroy of MOSuggestionCollectionViewDelegate?((uint64_t)v40);
      }
    }
    swift_beginAccess(v4, v40, 0, 0);
    v23 = swift_weakLoadStrong(v4);
    if (v23)
    {
      v24 = v23;
      (*(void (**)(uint64_t))(*(_QWORD *)v23 + 528))(1);
      swift_release(v24);
    }
    swift_beginAccess(v4, v35, 0, 0);
    v25 = swift_weakLoadStrong(v4);
    if (v25)
    {
      v26 = v25;
      MOSuggestionCollectionViewModel.initiateAuthentication()();
LABEL_24:
      swift_release(v26);
    }
  }
  swift_beginAccess(v4, v36, 0, 0);
  v28 = swift_weakLoadStrong(v4);
  if (v28)
  {
    v30 = v28;
    v31._rawValue = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v28 + 496))(v28);
    swift_release(v30);
    swift_beginAccess(v4, v39, 0, 0);
    v32 = swift_weakLoadStrong(v4);
    if (v32)
    {
      v33 = v32;
      v34 = *(id *)(v32 + 200);
      swift_release(v33);
      MOProtectedAppsManager.subscribeToChanges(apps:)(v31);

    }
    v29 = swift_bridgeObjectRelease(v31._rawValue);
  }
  if (a3)
    a3(v29);
}

double closure #1 in MOSuggestionCollectionViewModel.initiateAuthentication()(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double result;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[3];
  uint64_t v29;
  _BYTE v30[24];

  v2 = a2 + 16;
  if ((a1 & 1) != 0)
  {
    if (one-time initialization token for filtering != -1)
      swift_once(&one-time initialization token for filtering, one-time initialization function for filtering);
    v12 = type metadata accessor for Logger(0);
    v13 = __swift_project_value_buffer(v12, (uint64_t)static MOAngelLogger.filtering);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Authentication failed", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }

    swift_beginAccess(v2, v30, 0, 0);
    Strong = swift_weakLoadStrong(v2);
    if (Strong)
    {
      v18 = Strong;
      (*(void (**)(_QWORD *__return_ptr))(*(_QWORD *)Strong + 400))(v28);
      swift_release(v18);
      if (v29)
      {
        outlined init with copy of MOProtectedAppsManagerDelegate((uint64_t)v28, (uint64_t)v25);
        outlined destroy of MOSuggestionCollectionViewDelegate?((uint64_t)v28);
        v19 = v26;
        v20 = v27;
        __swift_project_boxed_opaque_existential_1(v25, v26);
        (*(void (**)(_QWORD, uint64_t, uint64_t))(v20 + 8))(0, v19, v20);
        __swift_destroy_boxed_opaque_existential_1(v25);
      }
      else
      {
        outlined destroy of MOSuggestionCollectionViewDelegate?((uint64_t)v28);
      }
    }
    swift_beginAccess(v2, v28, 0, 0);
    v24 = swift_weakLoadStrong(v2);
    if (v24)
    {
      v23 = v24;
      (*(void (**)(uint64_t))(*(_QWORD *)v24 + 528))(1);
      goto LABEL_22;
    }
  }
  else
  {
    if (one-time initialization token for filtering != -1)
      swift_once(&one-time initialization token for filtering, one-time initialization function for filtering);
    v3 = type metadata accessor for Logger(0);
    v4 = __swift_project_value_buffer(v3, (uint64_t)static MOAngelLogger.filtering);
    v5 = Logger.logObject.getter(v4);
    v6 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Authentication succeeded", v7, 2u);
      swift_slowDealloc(v7, -1, -1);
    }

    swift_beginAccess(v2, v30, 0, 0);
    v8 = swift_weakLoadStrong(v2);
    if (v8)
    {
      v9 = v8;
      (*(void (**)(_QWORD *__return_ptr))(*(_QWORD *)v8 + 400))(v28);
      swift_release(v9);
      if (v29)
      {
        outlined init with copy of MOProtectedAppsManagerDelegate((uint64_t)v28, (uint64_t)v25);
        outlined destroy of MOSuggestionCollectionViewDelegate?((uint64_t)v28);
        v10 = v26;
        v11 = v27;
        __swift_project_boxed_opaque_existential_1(v25, v26);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 8))(1, v10, v11);
        __swift_destroy_boxed_opaque_existential_1(v25);
      }
      else
      {
        outlined destroy of MOSuggestionCollectionViewDelegate?((uint64_t)v28);
      }
    }
    swift_beginAccess(v2, v28, 0, 0);
    v21 = swift_weakLoadStrong(v2);
    if (v21)
    {
      v23 = v21;
      (*(void (**)(_QWORD))(*(_QWORD *)v21 + 528))(0);
LABEL_22:
      *(_QWORD *)&result = swift_release(v23).n128_u64[0];
    }
  }
  return result;
}

double partial apply for closure #1 in MOSuggestionCollectionViewModel.initiateAuthentication()(char a1)
{
  uint64_t v1;

  return closure #1 in MOSuggestionCollectionViewModel.initiateAuthentication()(a1 & 1, v1);
}

uint64_t sub_10015F1FC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10015F20C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10015F220()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

double block_copy_helper_40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t block_destroy_helper_40(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10015F26C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  if (v0[3])
    swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void partial apply for closure #1 in MOSuggestionCollectionViewModel.validateConditions(additionalBundleIds:completion:)(char a1)
{
  uint64_t v1;

  closure #1 in MOSuggestionCollectionViewModel.validateConditions(additionalBundleIds:completion:)(a1 & 1, *(_QWORD *)(v1 + 16), *(void (**)(__n128))(v1 + 24));
}

uint64_t sub_10015F2B4()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

Swift::Void __swiftcall MOSuggestionCollectionViewModel.didChangeProtectionStatus()()
{
  uint64_t v0;

  (*(void (**)(void))(*(_QWORD *)v0 + 720))();
}

uint64_t protocol witness for MOProtectedAppsManagerDelegate.didChangeProtectionStatus() in conformance MOSuggestionCollectionViewModel()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 720))();
}

uint64_t outlined destroy of MOSuggestionCollectionViewDelegate?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionCollectionViewDelegate?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *AssetViewConstants.MEDIUM_TOP.unsafeMutableAddressor()
{
  return &static AssetViewConstants.MEDIUM_TOP;
}

void *AssetViewConstants.MEDIUM_BOTTOM.unsafeMutableAddressor()
{
  return &static AssetViewConstants.MEDIUM_BOTTOM;
}

void *AssetViewConstants.SMALL_MARGIN.unsafeMutableAddressor()
{
  return &static AssetViewConstants.SMALL_MARGIN;
}

void *AssetViewConstants.EXTRA_SMALL_MARGIN.unsafeMutableAddressor()
{
  return &static AssetViewConstants.EXTRA_SMALL_MARGIN;
}

void *AssetViewConstants.LARGE_LABEL_MARGIN.unsafeMutableAddressor()
{
  return &static AssetViewConstants.LARGE_LABEL_MARGIN;
}

void *AssetViewConstants.LARGE_MARGIN.unsafeMutableAddressor()
{
  return &static AssetViewConstants.LARGE_MARGIN;
}

void *AssetViewConstants.MEDIUM_LEADING.unsafeMutableAddressor()
{
  return &static AssetViewConstants.MEDIUM_LEADING;
}

void *AssetViewConstants.MEDIUM_TRAILING.unsafeMutableAddressor()
{
  return &static AssetViewConstants.MEDIUM_TRAILING;
}

void *AssetViewConstants.MEDIUM_WIDE_IMAGE_TEXT_MARGIN.unsafeMutableAddressor()
{
  return &static AssetViewConstants.MEDIUM_WIDE_IMAGE_TEXT_MARGIN;
}

void *AssetViewConstants.CORNER_RADIUS.unsafeMutableAddressor()
{
  return &static AssetViewConstants.CORNER_RADIUS;
}

_QWORD *MOSuggestionSheetMediaAssetView.__allocating_init(mediaAssetID:mediaPreviewURL:image:mediaType:sizeType:title:subtitle:assignedTileSize:bgColor:associatedColors:colorVariant:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, __int128 a12, uint64_t a13)
{
  objc_class *v13;
  id v19;

  v19 = objc_allocWithZone(v13);
  return specialized MOSuggestionSheetMediaAssetView.init(mediaAssetID:mediaPreviewURL:image:mediaType:sizeType:title:subtitle:assignedTileSize:bgColor:associatedColors:colorVariant:)(a1, a2, a3, a4, a5, a7, a8, a9, a10, a11, (void *)a12, *((uint64_t *)&a12 + 1), a13);
}

void *AssetViewConstants.FULL_IMAGE_TEXT_MARGIN.unsafeMutableAddressor()
{
  return &static AssetViewConstants.FULL_IMAGE_TEXT_MARGIN;
}

double static AssetViewConstants.FULL_IMAGE_TEXT_MARGIN.getter()
{
  return 16.0;
}

void *AssetViewConstants.MEDIUM_IMAGE_TEXT_MARGIN.unsafeMutableAddressor()
{
  return &static AssetViewConstants.MEDIUM_IMAGE_TEXT_MARGIN;
}

void *AssetViewConstants.SMALL_IMAGE_TEXT_MARGIN.unsafeMutableAddressor()
{
  return &static AssetViewConstants.SMALL_IMAGE_TEXT_MARGIN;
}

double static AssetViewConstants.SOURCE_BADGE_MARGIN_SMALL.getter()
{
  return 6.0;
}

void *AssetViewConstants.PLAY_PLATTER_MARGIN.unsafeMutableAddressor()
{
  return &static AssetViewConstants.PLAY_PLATTER_MARGIN;
}

void *AssetViewConstants.MEDIUM_WIDE_TRAILING.unsafeMutableAddressor()
{
  return &static AssetViewConstants.MEDIUM_WIDE_TRAILING;
}

void *AssetViewConstants.SOURCE_BADGE_EDGE_LENGTH.unsafeMutableAddressor()
{
  return &static AssetViewConstants.SOURCE_BADGE_EDGE_LENGTH;
}

double static AssetViewConstants.SOURCE_BADGE_EDGE_LENGTH.getter()
{
  return 15.0;
}

void *AssetViewConstants.SOURCE_BADGE_EDGE_LENGTH_FULLSCREEN_THIRD_PARTY.unsafeMutableAddressor()
{
  return &static AssetViewConstants.SOURCE_BADGE_EDGE_LENGTH_FULLSCREEN_THIRD_PARTY;
}

void *AssetViewConstants.SOURCE_BADGE_EDGE_PADDING.unsafeMutableAddressor()
{
  return &static AssetViewConstants.SOURCE_BADGE_EDGE_PADDING;
}

void *AssetViewConstants.SOURCE_BADGE_CORNER_RADIUS.unsafeMutableAddressor()
{
  return &static AssetViewConstants.SOURCE_BADGE_CORNER_RADIUS;
}

double static AssetViewConstants.SOURCE_BADGE_CORNER_RADIUS.getter()
{
  return 3.0;
}

void *AssetViewConstants.SOURCE_BADGE_MARGIN_SMALL.unsafeMutableAddressor()
{
  return &static AssetViewConstants.SOURCE_BADGE_MARGIN_SMALL;
}

void *AssetViewConstants.SOURCE_BADGE_MARGIN_LARGE.unsafeMutableAddressor()
{
  return &static AssetViewConstants.SOURCE_BADGE_MARGIN_LARGE;
}

void *AssetViewConstants.SOURCE_BADGE_MARGIN_FULLSCREEN_THIRD_PARTY.unsafeMutableAddressor()
{
  return &static AssetViewConstants.SOURCE_BADGE_MARGIN_FULLSCREEN_THIRD_PARTY;
}

double static AssetViewConstants.SOURCE_BADGE_MARGIN_FULLSCREEN_THIRD_PARTY.getter()
{
  return 18.0;
}

void *AssetViewConstants.LABEL_VIEW_INSET_LARGE_THIRD_PARTY.unsafeMutableAddressor()
{
  return &static AssetViewConstants.LABEL_VIEW_INSET_LARGE_THIRD_PARTY;
}

double static AssetViewConstants.LABEL_VIEW_INSET_LARGE_THIRD_PARTY.getter()
{
  return 13.0;
}

void *AssetViewConstants.EXTRA_LARGE_ICON.unsafeMutableAddressor()
{
  return &static AssetViewConstants.EXTRA_LARGE_ICON;
}

double static AssetViewConstants.EXTRA_LARGE_ICON.getter()
{
  return 90.0;
}

void *AssetViewConstants.LARGE_ICON.unsafeMutableAddressor()
{
  return &static AssetViewConstants.LARGE_ICON;
}

void *AssetViewConstants.SMALL_ICON.unsafeMutableAddressor()
{
  return &static AssetViewConstants.SMALL_ICON;
}

void *AssetViewConstants.MEDIUM_ICON.unsafeMutableAddressor()
{
  return &static AssetViewConstants.MEDIUM_ICON;
}

void *AssetViewConstants.LARGE_ICON_SIZE.unsafeMutableAddressor()
{
  return &static AssetViewConstants.LARGE_ICON_SIZE;
}

double static AssetViewConstants.LARGE_ICON_SIZE.getter()
{
  return 62.0;
}

void *AssetViewConstants.FULL_IMAGE_TEXT_MARGIN_THRID_PARTY.unsafeMutableAddressor()
{
  return &static AssetViewConstants.FULL_IMAGE_TEXT_MARGIN_THRID_PARTY;
}

void *AssetViewConstants.APP_ICON_CORNER_RADIUS.unsafeMutableAddressor()
{
  return &static AssetViewConstants.APP_ICON_CORNER_RADIUS;
}

uint64_t MOSuggestionSheetMediaAssetView.assignedTileSize.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_assignedTileSize);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_assignedTileSize, v3, 0, 0);
  return *v1;
}

uint64_t MOSuggestionSheetMediaAssetView.assignedTileSize.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_assignedTileSize);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*MOSuggestionSheetMediaAssetView.assignedTileSize.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_assignedTileSize, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetMediaAssetView.mediaAssetID.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_mediaAssetID);
}

uint64_t MOSuggestionSheetMediaAssetView.mediaAssetID.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_mediaAssetID);
}

uint64_t (*MOSuggestionSheetMediaAssetView.mediaAssetID.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_mediaAssetID, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t key path setter for MOSuggestionSheetMediaAssetView.mediaPreviewURL : MOSuggestionSheetMediaAssetView(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of URL?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))((swift_isaMask & **a2) + 0x138))(v6);
}

uint64_t MOSuggestionSheetMediaAssetView.mediaPreviewURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_mediaPreviewURL;
  swift_beginAccess(v3, v5, 0, 0);
  return outlined init with copy of URL?(v3, a1);
}

uint64_t MOSuggestionSheetMediaAssetView.mediaPreviewURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_mediaPreviewURL;
  swift_beginAccess(v3, v5, 33, 0);
  outlined assign with take of URL?(a1, v3);
  return swift_endAccess(v5);
}

uint64_t (*MOSuggestionSheetMediaAssetView.mediaPreviewURL.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_mediaPreviewURL, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void *MOSuggestionSheetMediaAssetView.image.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_image);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_image, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void MOSuggestionSheetMediaAssetView.image.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_image);
}

uint64_t (*MOSuggestionSheetMediaAssetView.image.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_image, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetMediaAssetView.mediaType.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_mediaType;
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_mediaType, v3, 0, 0);
  return *(_QWORD *)v1;
}

uint64_t MOSuggestionSheetMediaAssetView.mediaType.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_mediaType);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*MOSuggestionSheetMediaAssetView.mediaType.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_mediaType, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetMediaAssetView.title.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_title);
}

uint64_t MOSuggestionSheetMediaAssetView.title.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_title);
}

uint64_t (*MOSuggestionSheetMediaAssetView.title.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_title, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetMediaAssetView.subtitle.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_subtitle);
}

uint64_t MOSuggestionSheetMediaAssetView.subtitle.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_subtitle);
}

uint64_t (*MOSuggestionSheetMediaAssetView.subtitle.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_subtitle, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void *MOSuggestionSheetMediaAssetView.bgColor.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_bgColor);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_bgColor, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void MOSuggestionSheetMediaAssetView.bgColor.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_bgColor);
}

uint64_t (*MOSuggestionSheetMediaAssetView.bgColor.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_bgColor, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetMediaAssetView.bgColorVariant.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_bgColorVariant;
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_bgColorVariant, v3, 0, 0);
  return *(_QWORD *)v1;
}

uint64_t MOSuggestionSheetMediaAssetView.bgColorVariant.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_bgColorVariant);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*MOSuggestionSheetMediaAssetView.bgColorVariant.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_bgColorVariant, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetMediaAssetView.associatedColors.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_associatedColors);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_associatedColors, v3, 0, 0);
  return swift_bridgeObjectRetain(*v1);
}

uint64_t MOSuggestionSheetMediaAssetView.associatedColors.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_associatedColors);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_bridgeObjectRelease(v4);
}

uint64_t (*MOSuggestionSheetMediaAssetView.associatedColors.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_associatedColors, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void *MOSuggestionSheetMediaAssetView.circularProgressIndicator.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_circularProgressIndicator);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_circularProgressIndicator, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void MOSuggestionSheetMediaAssetView.circularProgressIndicator.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_circularProgressIndicator);
}

uint64_t (*MOSuggestionSheetMediaAssetView.circularProgressIndicator.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_circularProgressIndicator, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

_QWORD *MOSuggestionSheetMediaAssetView.init(mediaAssetID:mediaPreviewURL:image:mediaType:sizeType:title:subtitle:assignedTileSize:bgColor:associatedColors:colorVariant:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, void *a12, uint64_t a13, uint64_t a14)
{
  return specialized MOSuggestionSheetMediaAssetView.init(mediaAssetID:mediaPreviewURL:image:mediaType:sizeType:title:subtitle:assignedTileSize:bgColor:associatedColors:colorVariant:)(a1, a2, a3, a4, a5, a7, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t MOSuggestionSheetMediaAssetView.sourceImageMargin.getter()
{
  _QWORD *v0;
  int v1;

  v1 = (*(unsigned __int8 (**)(void))((swift_isaMask & *v0) + 0x100))();
  if ((v1 - 4) < 4)
    return 0x4018000000000000;
  if (v1 == 8)
    return 0x4024000000000000;
  if (v1 == 2)
    return 0x4018000000000000;
  return 0;
}

uint64_t MOSuggestionSheetMediaAssetView.sourceImageMarginThirdParty.getter()
{
  _QWORD *v0;

  if ((*(unsigned __int8 (**)(void))((swift_isaMask & *v0) + 0x100))() == 8)
    return 0x4032000000000000;
  else
    return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x318))();
}

uint64_t MOSuggestionSheetMediaAssetView.sourceImageLengthThirdParty.getter()
{
  _QWORD *v0;
  int v1;

  v1 = (*(unsigned __int8 (**)(void))((swift_isaMask & *v0) + 0x100))();
  if ((v1 - 4) < 4)
    return 0x402E000000000000;
  if (v1 == 8)
    return 0x404E000000000000;
  if (v1 == 2)
    return 0x402E000000000000;
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x318))();
}

uint64_t MOSuggestionSheetMediaAssetView.sourceImageCornerRadiusThirdParty.getter()
{
  _QWORD *v0;
  int v1;

  v1 = (*(unsigned __int8 (**)(void))((swift_isaMask & *v0) + 0x100))();
  if ((v1 - 4) < 4)
    return 0x4008000000000000;
  if (v1 == 8)
    return 0x401C000000000000;
  if (v1 == 2)
    return 0x4008000000000000;
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x318))();
}

Swift::Void __swiftcall MOSuggestionSheetMediaAssetView.addSourceImage()()
{
  _QWORD *v0;
  uint64_t v1;
  char v2;
  double v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  char **v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  double v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;

  v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x318))();
  if ((v2 & 1) == 0)
  {
    v3 = *(double *)&v1;
    v4 = MOSuggestionSheetMediaAssetView.sourceSymbolImage.getter();
    if (v4)
    {
      v5 = v4;
      if ((*((_BYTE *)v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_needsFallback) & 1) == 0)
      {
        v6 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_sourceImageView;
        v55 = v4;
        objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_sourceImageView), "setImage:");
        v7 = *(void **)((char *)v0 + v6);
        v8 = (void *)objc_opt_self(UIColor);
        v9 = v7;
        v10 = objc_msgSend(v8, "whiteColor");
        objc_msgSend(v9, "setTintColor:", v10);

        v11 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_sourceBlurContainerView;
        objc_msgSend(*(id *)((char *)v0+ OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_sourceBlurContainerView), "_setCornerRadius:", 3.0);
        objc_msgSend(v0, "addSubview:", *(_QWORD *)((char *)v0 + v11));
        v12 = objc_msgSend(*(id *)((char *)v0 + v11), "contentView");
        objc_msgSend(v12, "addSubview:", *(_QWORD *)((char *)v0 + v6));

        v13 = &selRef_genericAvatarFor_pointSize_completion_;
        objc_msgSend(*(id *)((char *)v0 + v6), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v14 = *(id *)((char *)v0 + v6);
        v15 = objc_msgSend(v14, "superview");
        if (v15)
        {
          v16 = v15;
          objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
          v17 = objc_msgSend(v14, "leadingAnchor");
          v18 = objc_msgSend(v16, "leadingAnchor");
          v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

          objc_msgSend(v19, "setConstant:", 2.4);
          if (v19)
          {
            v19 = v19;
            objc_msgSend(v19, "setActive:", 1);

            v14 = v19;
          }

          v13 = &selRef_genericAvatarFor_pointSize_completion_;
        }
        else
        {
          v19 = 0;
          v16 = v14;
        }

        v20 = *(id *)((char *)v0 + v6);
        v21 = objc_msgSend(v20, "superview");
        if (v21)
        {
          v22 = v21;
          objc_msgSend(v20, v13[47], 0);
          v23 = objc_msgSend(v20, "trailingAnchor");
          v24 = objc_msgSend(v22, "trailingAnchor");
          v25 = objc_msgSend(v23, "constraintEqualToAnchor:", v24);

          objc_msgSend(v25, "setConstant:", -2.4);
          if (v25)
          {
            v25 = v25;
            objc_msgSend(v25, "setActive:", 1);

            v20 = v25;
          }

          v13 = &selRef_genericAvatarFor_pointSize_completion_;
        }
        else
        {
          v25 = 0;
          v22 = v20;
        }

        v26 = *(id *)((char *)v0 + v6);
        v27 = objc_msgSend(v26, "superview");
        if (v27)
        {
          v28 = v27;
          objc_msgSend(v26, v13[47], 0);
          v29 = objc_msgSend(v26, "topAnchor");
          v30 = objc_msgSend(v28, "topAnchor");
          v31 = objc_msgSend(v29, "constraintEqualToAnchor:", v30);

          objc_msgSend(v31, "setConstant:", 2.0);
          if (v31)
          {
            v31 = v31;
            objc_msgSend(v31, "setActive:", 1);

            v26 = v31;
          }

          v13 = &selRef_genericAvatarFor_pointSize_completion_;
        }
        else
        {
          v31 = 0;
          v28 = v26;
        }

        v32 = *(id *)((char *)v0 + v6);
        v33 = objc_msgSend(v32, "superview");
        if (v33)
        {
          v34 = v33;
          objc_msgSend(v32, v13[47], 0);
          v35 = objc_msgSend(v32, "bottomAnchor");
          v36 = objc_msgSend(v34, "bottomAnchor");
          v37 = objc_msgSend(v35, "constraintEqualToAnchor:", v36);

          if (v37)
          {
            objc_msgSend(v37, "setConstant:", -2.4);
            v37 = v37;
            objc_msgSend(v37, "setActive:", 1);

            v32 = v37;
          }

          v13 = &selRef_genericAvatarFor_pointSize_completion_;
        }
        else
        {
          v37 = 0;
          v34 = v32;
        }
        v38 = v3;

        objc_msgSend(*(id *)((char *)v0 + v11), v13[47], 0);
        v39 = *(id *)((char *)v0 + v11);
        v40 = objc_msgSend(v39, "superview");
        if (v40)
        {
          v41 = v40;
          objc_msgSend(v39, v13[47], 0);
          v42 = objc_msgSend(v39, "leadingAnchor");
          v43 = objc_msgSend(v41, "leadingAnchor");
          v44 = objc_msgSend(v42, "constraintEqualToAnchor:", v43);

          objc_msgSend(v44, "setConstant:", v38);
          if (v44)
          {
            v44 = v44;
            objc_msgSend(v44, "setActive:", 1);

            v39 = v44;
          }

          v13 = &selRef_genericAvatarFor_pointSize_completion_;
        }
        else
        {
          v44 = 0;
          v41 = v39;
        }

        v45 = *(id *)((char *)v0 + v11);
        v46 = objc_msgSend(v45, "superview");
        if (v46)
        {
          v47 = v46;
          objc_msgSend(v45, v13[47], 0);
          v48 = objc_msgSend(v45, "bottomAnchor");
          v49 = objc_msgSend(v47, "bottomAnchor");
          v50 = objc_msgSend(v48, "constraintEqualToAnchor:", v49);

          if (v50)
          {
            objc_msgSend(v50, "setConstant:", -v38);
            v50 = v50;
            objc_msgSend(v50, "setActive:", 1);

            v45 = v50;
          }

        }
        else
        {
          v50 = 0;
          v47 = v45;
        }

        v51 = objc_msgSend(*(id *)((char *)v0 + v11), "widthAnchor");
        v52 = objc_msgSend(v51, "constraintEqualToConstant:", 15.0);

        objc_msgSend(v52, "setActive:", 1);
        v53 = objc_msgSend(*(id *)((char *)v0 + v11), "heightAnchor");
        v54 = objc_msgSend(v53, "constraintEqualToConstant:", 15.0);

        objc_msgSend(v54, "setActive:", 1);
        v5 = v54;
      }

    }
  }
}

Swift::Void __swiftcall MOSuggestionSheetMediaAssetView.addSourceAppImageBadge(unmaskedAppIcon:)(UIImage unmaskedAppIcon)
{
  _QWORD *v1;
  uint64_t v3;
  char v4;
  double v5;
  uint64_t v6;
  char v7;
  double v8;
  uint64_t v9;
  char v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  id v15;
  id v16;
  char **v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  char **v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;

  *(double *)&v3 = COERCE_DOUBLE((*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x320))());
  if ((v4 & 1) == 0)
  {
    v5 = *(double *)&v3;
    v6 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x328))();
    if ((v7 & 1) == 0)
    {
      v8 = *(double *)&v6;
      *(double *)&v9 = COERCE_DOUBLE((*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x330))());
      if ((v10 & 1) == 0)
      {
        v11 = v5;
        v12 = v8;
        v13 = *(double *)&v9;
        v14 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_sourceImageView;
        objc_msgSend(*(id *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_sourceImageView), "setImage:", unmaskedAppIcon.super.isa);
        objc_msgSend(*(id *)((char *)v1 + v14), "_setCornerRadius:", v13);
        objc_msgSend(*(id *)((char *)v1 + v14), "setClipsToBounds:", 1);
        objc_msgSend(v1, "addSubview:", *(_QWORD *)((char *)v1 + v14));
        objc_msgSend(*(id *)((char *)v1 + v14), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v15 = *(id *)((char *)v1 + v14);
        v16 = objc_msgSend(v15, "superview");
        v17 = &selRef_genericAvatarFor_pointSize_completion_;
        if (v16)
        {
          v18 = v16;
          objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
          v19 = objc_msgSend(v15, "leadingAnchor");
          v20 = objc_msgSend(v18, "leadingAnchor");
          v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

          objc_msgSend(v21, "setConstant:", v11);
          if (v21)
          {
            v21 = v21;
            v17 = &selRef_genericAvatarFor_pointSize_completion_;
            objc_msgSend(v21, "setActive:", 1);

            v15 = v21;
          }
          else
          {
            v17 = &selRef_genericAvatarFor_pointSize_completion_;
          }

        }
        else
        {
          v21 = 0;
          v18 = v15;
        }

        v22 = *(id *)((char *)v1 + v14);
        v23 = objc_msgSend(v22, "superview");
        if (v23)
        {
          v24 = v23;
          v25 = v17;
          objc_msgSend(v22, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
          v26 = objc_msgSend(v22, "bottomAnchor");
          v27 = objc_msgSend(v24, "bottomAnchor");
          v28 = objc_msgSend(v26, "constraintEqualToAnchor:", v27);

          if (v28)
          {
            objc_msgSend(v28, "setConstant:", -v11);
            v28 = v28;
            v17 = v25;
            objc_msgSend(v28, v25[93], 1);

            v22 = v28;
          }
          else
          {
            v17 = v25;
          }

        }
        else
        {
          v28 = 0;
          v24 = v22;
        }

        v29 = objc_msgSend(*(id *)((char *)v1 + v14), "widthAnchor");
        v30 = objc_msgSend(v29, "constraintEqualToConstant:", v12);

        objc_msgSend(v30, v17[93], 1);
        v31 = objc_msgSend(*(id *)((char *)v1 + v14), "heightAnchor");
        v32 = objc_msgSend(v31, "constraintEqualToConstant:", v12);

        objc_msgSend(v32, v17[93], 1);
      }
    }
  }
}

UIImageView __swiftcall MOSuggestionSheetMediaAssetView.createCoverArt()()
{
  _QWORD *v0;
  id v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  unsigned __int8 (*v6)(void);
  uint64_t *v7;
  id v8;
  uint64_t v9;
  id v10;
  NSString v11;
  id v12;
  id v13;

  v1 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v2 = v1;
  if (*((_BYTE *)v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_needsFallback) == 1)
  {
    objc_msgSend(v1, "setContentMode:", 4);
    v3 = one-time initialization token for BACKGROUND_COLOR;
    v4 = v2;
    if (v3 != -1)
      swift_once(&one-time initialization token for BACKGROUND_COLOR, one-time initialization function for BACKGROUND_COLOR);
    objc_msgSend(v4, "setBackgroundColor:", static FallbackConstants.BACKGROUND_COLOR);

    if (one-time initialization token for IMAGE_TINT_COLOR != -1)
      swift_once(&one-time initialization token for IMAGE_TINT_COLOR, one-time initialization function for IMAGE_TINT_COLOR);
    v5 = objc_msgSend(v4, "setTintColor:", static FallbackConstants.IMAGE_TINT_COLOR);
    v6 = *(unsigned __int8 (**)(void))((swift_isaMask & *v0) + 0x100);
    if (((unsigned __int8 (*)(id))v6)(v5) == 6 || v6() == 5 || v6() == 8)
    {
      if (one-time initialization token for BIG_SYMBOL != -1)
        swift_once(&one-time initialization token for BIG_SYMBOL, one-time initialization function for BIG_SYMBOL);
      v7 = &static FallbackConstants.BIG_SYMBOL;
    }
    else
    {
      if (one-time initialization token for SMALL_SYMBOL != -1)
        swift_once(&one-time initialization token for SMALL_SYMBOL, one-time initialization function for SMALL_SYMBOL);
      v7 = &static FallbackConstants.SMALL_SYMBOL;
    }
    v8 = (id)*v7;
    v9 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_fallbackSymbol + 8);
    v10 = (id)*v7;
    if (v9)
    {
      swift_bridgeObjectRetain(v9);
      v11 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v9);
    }
    else
    {
      v11 = 0;
    }
    v13 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:withConfiguration:", v11, v8);

    objc_msgSend(v4, "setImage:", v13);
  }
  else
  {
    objc_msgSend(v1, "setContentMode:", 2);
    v12 = objc_msgSend(v2, "setClipsToBounds:", 1);
    v13 = (id)(*(uint64_t (**)(id))((swift_isaMask & *v0) + 0x148))(v12);
    objc_msgSend(v2, "setImage:", v13);
  }

  return (UIImageView)v2;
}

id MOSuggestionSheetMediaAssetView.blendColor(baseColor:overlayColor:opacity:)(void *a1, void *a2, double a3)
{
  double v4;
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;

  if (a3 <= 0.0)
    return a1;
  v12 = 0.0;
  v13 = 0.0;
  v10 = 0;
  v11 = 0.0;
  v8 = 0.0;
  v9 = 0.0;
  v6 = 0;
  v7 = 0.0;
  v4 = 1.0 / (a3 + 1.0);
  objc_msgSend(a1, "getRed:green:blue:alpha:", &v13, &v12, &v11, &v10);
  objc_msgSend(a2, "getRed:green:blue:alpha:", &v9, &v8, &v7, &v6);
  return objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", v4 * v13 + (1.0 - v4) * v9, v4 * v12 + (1.0 - v4) * v8, v4 * v11 + (1.0 - v4) * v7, 1.0);
}

Swift::Void __swiftcall MOSuggestionSheetMediaAssetView.addCoverArtAndMetadataForThirdParty(horizontal:)(Swift::Bool horizontal)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t (*v3)(__n128);
  void *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t (*v7)(void);
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  id v22;
  __n128 v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  void *v31;
  char v32;
  double v33;
  char v34;
  id v35;
  id v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(void);
  id v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  NSString v45;
  id v46;
  void *v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  id v52;
  Class isa;
  void *v54;
  void *v55;
  id v56;
  void *v57;
  void *v58;
  id v59;
  uint64_t v60;
  void *v61;
  void *v62;
  id v63;
  id v64;
  id v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  NSString v70;
  id v71;
  id v72;
  id v73;
  id v74;
  uint64_t v75;
  void (*v76)(void);
  id v77;
  uint64_t v78;
  double v79;
  uint64_t v80;
  NSString v81;
  char **v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unsigned __int8 v87;
  double v88;
  id v89;
  id v90;
  void *v91;
  double v92;
  id v93;
  id v94;
  void *v95;
  double v96;
  __n128 v97;
  uint64_t v98;
  void *v99;
  void *v100;
  id v101;
  id v102;
  void *v103;
  void *v104;
  void *v105;
  void *v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  uint64_t v118;
  int v119;
  void *v120;
  void *v121;
  BOOL v122;
  uint64_t v123;
  double v124;
  const UIFontTextStyle *v125;
  UIFontTextStyle v126;
  id v127;
  id v128;
  id v129;
  id v130;
  id v131;
  id v132;
  id v133;
  id v134;
  void *v135;
  uint64_t v136;
  char *v137;
  id v138;
  double v139;
  NSString v140;
  char **v141;
  id v142;
  id v143;
  void *v144;
  id v145;
  id v146;
  id v147;
  void *v148;
  id v149;
  id v150;
  void *v151;
  id v152;
  id v153;
  id v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  void *v162;
  uint64_t v163;
  id v164;
  NSString v165;
  double v166;
  id v167;
  id v168;
  void *v169;
  id v170;
  id v171;
  id v172;
  id v173;
  id v174;
  id v175;
  id v176;
  void *v177;
  id v178;
  id v179;
  id v180;
  id v181;
  id v182;
  void *v183;
  id v184;
  id v185;
  id v186;
  void *v187;
  id v188;
  id v189;
  id v190;
  id v191;
  id v192;
  id v193;
  id v194;
  void *v195;
  id v196;
  id v197;
  id v198;
  id v199;
  id v200;
  id v201;
  id v202;
  id v203;
  uint64_t (*v204)(__n128);
  uint64_t (*v205)(void);
  uint64_t (*v206)(void);
  void *v207;
  _QWORD *v208;
  uint64_t (*v209)(void);
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;

  v2 = v1;
  v3 = *(uint64_t (**)(__n128))((swift_isaMask & *v1) + 0x100);
  if (((unsigned __int8 (*)(Swift::Bool))v3)(horizontal) == 3)
  {
    v4 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x348))();
    objc_msgSend(v2, "addSubview:", v4);
    v5 = UIView.fillSuper(margin:)(0.0);

    swift_bridgeObjectRelease(v5);
    return;
  }
  type metadata accessor for ThirdPartyMediaColorEffectView();
  v6 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v7 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0x1A8);
  v8 = (void *)v7();

  v208 = v6;
  if (v8)
  {
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
      swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    v9 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v9, (uint64_t)static MOAngelLogger.assets);
    v10 = v2;
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc(22, -1);
      v14 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v13 = 138412546;
      v15 = v7();
      v16 = v15;
      v204 = v3;
      if (v15)
        v211 = v15;
      else
        v211 = 0;
      v24 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v211, &v212, v13 + 4);
      *v14 = v16;
      *(_WORD *)(v13 + 12) = 2048;
      v211 = (*(uint64_t (**)(__n128))((swift_isaMask & *v10) + 0x1C0))(v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v211, &v212, v13 + 14);

      _os_log_impl((void *)&_mh_execute_header, v11, v12, "[MOSuggestionSheetMediaAssetView] bgColor %@ and variant %lu", (uint8_t *)v13, 0x16u);
      v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy(v14, 1, v25);
      swift_slowDealloc(v14, -1, -1);
      swift_slowDealloc(v13, -1, -1);

      v6 = v208;
    }
    else
    {

    }
    v26 = v7();
    v27 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v6) + 0x80))(v26);
    v28 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v10) + 0x1C0))(v27);
    (*(void (**)(uint64_t, _QWORD))((swift_isaMask & *v6) + 0x98))(v28, 0);
    objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v10, "addSubview:", v6);
    v29 = UIView.fillSuper(margin:)(0.0);
    v23 = swift_bridgeObjectRelease(v29);
  }
  else
  {
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
      swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    v17 = type metadata accessor for Logger(0);
    v18 = __swift_project_value_buffer(v17, (uint64_t)static MOAngelLogger.assets);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "[MOSuggestionSheetMediaAssetView] bgColor is empty, use default color.", v21, 2u);
      swift_slowDealloc(v21, -1, -1);
    }

    v22 = objc_msgSend((id)objc_opt_self(UIColor), "systemGrayColor");
    objc_msgSend(v2, "_setBackgroundColor:", v22);

  }
  v30 = v3(v23);
  if (v30 != 2)
    v30 = ((uint64_t (*)(void))v3)();
  v31 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0x348))(v30);
  v32 = ((uint64_t (*)(void))v3)();
  v33 = 3.0;
  if (v32 != 2)
  {
    v34 = ((uint64_t (*)(double))v3)(3.0);
    v33 = 8.0;
    if (v34 == 3)
      v33 = 3.0;
  }
  objc_msgSend(v31, "_setCornerRadius:", v33, v204);
  v35 = objc_msgSend(v2, "traitCollection");
  v36 = objc_msgSend(v35, "preferredContentSizeCategory");

  v37 = static UIContentSizeCategory.> infix(_:_:)(v36, UIContentSizeCategoryLarge);
  v38 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_labelStackView;
  if (((unsigned __int8 (*)(id))v3)(objc_msgSend(*(id *)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_labelStackView), "setAxis:", 1)) == 8)objc_msgSend(*(id *)((char *)v2 + v38), "setSpacing:", 2.0);
  objc_msgSend(*(id *)((char *)v2 + v38), "setAlignment:", 1);
  v210 = v38;
  objc_msgSend(*(id *)((char *)v2 + v38), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v39 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_titleLabel;
  v40 = *(void (**)(void))((swift_isaMask & *v2) + 0x178);
  v41 = *(id *)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_titleLabel);
  v206 = (uint64_t (*)(void))v40;
  v40();
  if (v42)
  {
    v44 = v42;
    v45 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v43 = swift_bridgeObjectRelease(v44).n128_u64[0];
  }
  else
  {
    v45 = 0;
  }
  objc_msgSend(v41, "setText:", v45, v43);

  v46 = objc_msgSend(*(id *)((char *)v2 + v39), "setNumberOfLines:", 2);
  if ((v37 & 1) != 0 && (((unsigned __int8 (*)(id))v3)(v46) == 2 || ((unsigned __int8 (*)(void))v3)() == 4))
    objc_msgSend(*(id *)((char *)v2 + v39), "setNumberOfLines:", 1);
  objc_msgSend(*(id *)((char *)v2 + v39), "setLineBreakMode:", 4);
  v207 = v31;
  if (((unsigned __int8 (*)(id))v3)(objc_msgSend(*(id *)((char *)v2 + v39), "setMaximumContentSizeCategory:")) == 8)
  {
    v47 = *(void **)((char *)v2 + v39);
    v48 = (void *)objc_opt_self(UIFont);
    v49 = v47;
    v50 = objc_msgSend(v48, "preferredFontForTextStyle:", UIFontTextStyleBody);
    v51 = objc_msgSend(v50, "fontDescriptor");
    v52 = objc_msgSend(v51, "fontDescriptorWithSymbolicTraits:", 2);

    if (!v52)
    {
      __break(1u);
LABEL_138:
      __break(1u);
      goto LABEL_139;
    }
    isa = (Class)objc_msgSend(v48, "fontWithDescriptor:size:", v52, 0.0);

  }
  else
  {
    if (((unsigned __int8 (*)(void))v3)() == 7 || ((unsigned __int8 (*)(void))v3)() == 5)
    {
      v54 = *(void **)((char *)v2 + v39);
      v55 = (void *)objc_opt_self(UIFont);
      v49 = v54;
      v56 = objc_msgSend(v55, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
    }
    else
    {
      v57 = *(void **)((char *)v2 + v39);
      v58 = (void *)objc_opt_self(UIFont);
      v49 = v57;
      v56 = objc_msgSend(v58, "preferredFontForTextStyle:", UIFontTextStyleCaption2);
    }
    v59 = v56;
    isa = UIFont.withWeight(_:)(UIFontWeightSemibold).super.isa;

  }
  objc_msgSend(v49, "setFont:", isa);
  v60 = v210;

  v61 = *(void **)((char *)v2 + v39);
  v62 = (void *)objc_opt_self(UIColor);
  v63 = v61;
  v64 = objc_msgSend(v62, "whiteColor");
  v65 = objc_msgSend(v64, "colorWithAlphaComponent:", 0.6);

  objc_msgSend(v63, "setTextColor:", v65);
  v66 = objc_msgSend(*(id *)((char *)v2 + v39), "layer");
  static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterPlusL);
  v68 = v67;
  v69 = objc_allocWithZone((Class)CAFilter);
  v70 = String._bridgeToObjectiveC()();
  v71 = objc_msgSend(v69, "initWithType:", v70, swift_bridgeObjectRelease(v68).n128_f64[0]);

  objc_msgSend(v66, "setCompositingFilter:", v71);
  v209 = *(uint64_t (**)(void))((swift_isaMask & *v2) + 0x1C0);
  if (v209() == 1)
  {
    v72 = *(id *)((char *)v2 + v39);
    v73 = objc_msgSend(v62, "blackColor");
    v74 = objc_msgSend(v73, "colorWithAlphaComponent:", 0.6);

    objc_msgSend(v72, "setTextColor:", v74);
  }
  objc_msgSend(*(id *)((char *)v2 + v39), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(*(id *)((char *)v2 + v39), "setAdjustsFontForContentSizeCategory:", 1);
  v75 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_subtitleLabel;
  v76 = *(void (**)(void))((swift_isaMask & *v2) + 0x190);
  v77 = objc_retain(*(id *)((char *)v2
                          + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_subtitleLabel));
  v205 = (uint64_t (*)(void))v76;
  v76();
  if (v78)
  {
    v80 = v78;
    v81 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v79 = swift_bridgeObjectRelease(v80).n128_u64[0];
  }
  else
  {
    v81 = 0;
  }
  v82 = &selRef_genericAvatarFor_pointSize_completion_;
  objc_msgSend(v77, "setText:", v81, v79);

  if ((v37 & 1) != 0)
    goto LABEL_58;
  v83 = v206();
  if (!v84)
    goto LABEL_58;
  v85 = v83;
  v86 = v84;
  v87 = ((uint64_t (*)(void))v3)() - 2;
  if (v87 > 8u)
    v88 = 287.0;
  else
    v88 = dbl_1001A3D38[(char)v87];
  v89 = *(id *)((char *)v2 + v39);
  v90 = objc_msgSend(v89, "font");
  if (!v90)
    goto LABEL_138;
  v91 = v90;
  v92 = specialized UILabel.estimatedHeight(forWidth:text:ofFont:)(0, 0xE000000000000000, v90, v88);

  v93 = *(id *)((char *)v2 + v39);
  v94 = objc_msgSend(v93, "font");
  if (!v94)
  {
LABEL_139:
    __break(1u);
    JUMPOUT(0x1001629D0);
  }
  v95 = v94;
  v96 = specialized UILabel.estimatedHeight(forWidth:text:ofFont:)(v85, v86, v94, v88);

  v97 = swift_bridgeObjectRelease(v86);
  v60 = v210;
  if (v3(v97) == 2 || ((unsigned __int8 (*)(void))v3)() == 4)
  {
    v82 = &selRef_genericAvatarFor_pointSize_completion_;
    if (v92 >= v96)
    {
LABEL_55:
      v98 = 2;
      goto LABEL_59;
    }
  }
  else
  {
    v82 = &selRef_genericAvatarFor_pointSize_completion_;
    if (((unsigned __int8 (*)(void))v3)() != 3 || v92 >= v96)
      goto LABEL_55;
  }
LABEL_58:
  v98 = 1;
LABEL_59:
  objc_msgSend(*(id *)((char *)v2 + v75), "setNumberOfLines:", v98);
  objc_msgSend(*(id *)((char *)v2 + v75), "setLineBreakMode:", 4);
  if (((unsigned __int8 (*)(id))v3)(objc_msgSend(*(id *)((char *)v2 + v75), "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityMedium)) == 8)
  {
    v99 = *(void **)((char *)v2 + v75);
    v100 = (void *)objc_opt_self(UIFont);
    v101 = v99;
    v102 = objc_msgSend(v100, "preferredFontForTextStyle:", UIFontTextStyleBody);
  }
  else if (((unsigned __int8 (*)(void))v3)() == 7 || ((unsigned __int8 (*)(void))v3)() == 5)
  {
    v103 = *(void **)((char *)v2 + v75);
    v104 = (void *)objc_opt_self(UIFont);
    v101 = v103;
    v102 = objc_msgSend(v104, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  }
  else
  {
    v105 = *(void **)((char *)v2 + v75);
    v106 = (void *)objc_opt_self(UIFont);
    v101 = v105;
    v102 = objc_msgSend(v106, "preferredFontForTextStyle:", UIFontTextStyleCaption2);
  }
  v107 = v102;
  objc_msgSend(v101, "setFont:", v107);

  if (((unsigned __int8 (*)(void))v3)() == 4 || ((unsigned __int8 (*)(void))v3)() == 2)
  {
    v108 = *(id *)((char *)v2 + v75);
    v109 = objc_msgSend(v62, "whiteColor");
    v110 = objc_msgSend(v109, v82[39], 0.25);

    objc_msgSend(v108, "setTextColor:", v110);
    if (v209() == 1)
    {
      v111 = *(id *)((char *)v2 + v75);
      v112 = objc_msgSend(v62, "blackColor");
      v113 = objc_msgSend(v112, v82[39], 0.4);
LABEL_71:
      v117 = v113;

      objc_msgSend(v111, "setTextColor:", v117);
    }
  }
  else
  {
    v114 = *(id *)((char *)v2 + v75);
    v115 = objc_msgSend(v62, "whiteColor");
    v116 = objc_msgSend(v115, v82[39], 0.6);

    objc_msgSend(v114, "setTextColor:", v116);
    if (v209() == 1)
    {
      v111 = *(id *)((char *)v2 + v75);
      v112 = objc_msgSend(v62, "blackColor");
      v113 = objc_msgSend(v112, v82[39], 0.6);
      goto LABEL_71;
    }
  }
  objc_msgSend(*(id *)((char *)v2 + v75), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(*(id *)((char *)v2 + v75), "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(*(id *)((char *)v2 + v60), "addArrangedSubview:", *(_QWORD *)((char *)v2 + v39));
  objc_msgSend(*(id *)((char *)v2 + v60), "addArrangedSubview:", *(_QWORD *)((char *)v2 + v75));
  if (((unsigned __int8 (*)(id))v3)(objc_msgSend(*(id *)((char *)v2 + v60), "setCustomSpacing:afterView:", *(_QWORD *)((char *)v2 + v39), 3.0)) == 5
    || ((unsigned __int8 (*)(void))v3)() == 8)
  {
    v118 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_categoryLabel;
    objc_msgSend(*(id *)((char *)v2 + v60), "addArrangedSubview:", *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_categoryLabel));
    v119 = ((unsigned __int8 (*)(id))v3)(objc_msgSend(*(id *)((char *)v2 + v118), "setNumberOfLines:", 1));
    v120 = *(void **)((char *)v2 + v118);
    v121 = (void *)objc_opt_self(UIFont);
    v122 = v119 == 8;
    v123 = v210;
    if (v122)
      v124 = 10.0;
    else
      v124 = 6.0;
    v125 = &UIFontTextStyleCaption2;
    if (v122)
      v125 = &UIFontTextStyleBody;
    v126 = *v125;
    v127 = v120;
    v128 = objc_msgSend(v121, "preferredFontForTextStyle:", v126);
    objc_msgSend(v127, "setFont:", v128);

    objc_msgSend(*(id *)((char *)v2 + v210), "setCustomSpacing:afterView:", *(_QWORD *)((char *)v2 + v75), v124);
    v129 = *(id *)((char *)v2 + v118);
    v130 = objc_msgSend(v62, "whiteColor");
    v131 = objc_msgSend(v130, "colorWithAlphaComponent:", 0.25);

    objc_msgSend(v129, "setTextColor:", v131);
    if (v209() == 1)
    {
      v132 = *(id *)((char *)v2 + v118);
      v133 = objc_msgSend(v62, "blackColor");
      v134 = objc_msgSend(v133, "colorWithAlphaComponent:", 0.25);

      objc_msgSend(v132, "setTextColor:", v134);
    }
    v135 = *(void **)((char *)v2 + v118);
    v136 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_category + 8);
    v137 = (char *)v208;
    v138 = v135;
    if (v136)
    {
      swift_bridgeObjectRetain(v136);
      v140 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v139 = swift_bridgeObjectRelease(v136).n128_u64[0];
    }
    else
    {
      v140 = 0;
    }
    v141 = &selRef_genericAvatarFor_pointSize_completion_;
    objc_msgSend(v135, "setText:", v140, v139);

    objc_msgSend(*(id *)((char *)v2 + v118), "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityMedium);
    objc_msgSend(*(id *)((char *)v2 + v118), "setAdjustsFontForContentSizeCategory:", 1);
    goto LABEL_85;
  }
  v155 = v205();
  if (!v156)
    goto LABEL_98;
  v157 = v155;
  v158 = v156;
  swift_bridgeObjectRelease(v156);
  v159 = HIBYTE(v158) & 0xF;
  if ((v158 & 0x2000000000000000) == 0)
    v159 = v157 & 0xFFFFFFFFFFFFLL;
  if (v159)
  {
LABEL_98:
    ((void (*)(uint64_t))v205)(v155);
    v161 = v160;
    swift_bridgeObjectRelease(v160);
    v137 = (char *)v208;
    v123 = v210;
    v141 = &selRef_genericAvatarFor_pointSize_completion_;
    if (v161)
      goto LABEL_85;
    v162 = *(void **)((char *)v2 + v75);
    v163 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_category + 8);
    if (v163)
      goto LABEL_100;
LABEL_125:
    v192 = v162;
    v165 = 0;
    goto LABEL_126;
  }
  v162 = *(void **)((char *)v2 + v75);
  v163 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_category + 8);
  v137 = (char *)v208;
  v141 = &selRef_genericAvatarFor_pointSize_completion_;
  if (!v163)
    goto LABEL_125;
LABEL_100:
  v164 = v162;
  swift_bridgeObjectRetain(v163);
  v165 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v166 = swift_bridgeObjectRelease(v163).n128_u64[0];
LABEL_126:
  objc_msgSend(v162, "setText:", v165, v166);

  v123 = v210;
LABEL_85:
  switch(((unsigned __int8 (*)(id))v3)(objc_msgSend(*(id *)&v137[OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_contentView], v141[118], *(_QWORD *)((char *)v2 + v123))))
  {
    case 2u:
    case 4u:
      v149 = *(id *)((char *)v2 + v123);
      v150 = objc_msgSend(v149, "superview");
      if (v150)
      {
        v151 = v150;
        objc_msgSend(v149, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v152 = objc_msgSend(v149, "leadingAnchor");
        v153 = objc_msgSend(v151, "leadingAnchor");
        v154 = objc_msgSend(v152, "constraintEqualToAnchor:", v153);

        objc_msgSend(v154, "setConstant:", 6.6);
        if (v154)
        {
          v154 = v154;
          objc_msgSend(v154, "setActive:", 1);

          v149 = v154;
        }
        v148 = v207;

      }
      else
      {
        v154 = 0;
        v151 = v149;
        v148 = v207;
      }

      v181 = *(id *)((char *)v2 + v210);
      v182 = objc_msgSend(v181, "superview");
      if (v182)
      {
        v183 = v182;
        objc_msgSend(v181, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v184 = objc_msgSend(v181, "trailingAnchor");
        v185 = objc_msgSend(v183, "trailingAnchor");
        v186 = objc_msgSend(v184, "constraintEqualToAnchor:", v185);

        objc_msgSend(v186, "setConstant:", -6.0);
        if (v186)
        {
          v186 = v186;
          objc_msgSend(v186, "setActive:", 1);

          v181 = v186;
        }

      }
      else
      {
        v186 = 0;
        v183 = v181;
      }

      v173 = *(id *)((char *)v2 + v210);
      v174 = objc_msgSend(v173, "superview");
      if (!v174)
        goto LABEL_123;
      goto LABEL_121;
    case 5u:
    case 6u:
    case 7u:
      v142 = *(id *)((char *)v2 + v123);
      v143 = objc_msgSend(v142, "superview");
      if (v143)
      {
        v144 = v143;
        objc_msgSend(v142, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v145 = objc_msgSend(v142, "leadingAnchor");
        v146 = objc_msgSend(v144, "leadingAnchor");
        v147 = objc_msgSend(v145, "constraintEqualToAnchor:", v146);

        objc_msgSend(v147, "setConstant:", 14.3);
        if (v147)
        {
          v147 = v147;
          objc_msgSend(v147, "setActive:", 1);

          v142 = v147;
        }
        v148 = v207;

      }
      else
      {
        v147 = 0;
        v144 = v142;
        v148 = v207;
      }

      v167 = *(id *)((char *)v2 + v210);
      v168 = objc_msgSend(v167, "superview");
      if (v168)
      {
        v169 = v168;
        objc_msgSend(v167, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v170 = objc_msgSend(v167, "trailingAnchor");
        v171 = objc_msgSend(v169, "trailingAnchor");
        v172 = objc_msgSend(v170, "constraintEqualToAnchor:", v171);

        objc_msgSend(v172, "setConstant:", -13.0);
        if (v172)
        {
          v172 = v172;
          objc_msgSend(v172, "setActive:", 1);

          v167 = v172;
        }

      }
      else
      {
        v172 = 0;
        v169 = v167;
      }

      v173 = *(id *)((char *)v2 + v210);
      v174 = objc_msgSend(v173, "superview");
      if (v174)
      {
LABEL_121:
        v187 = v174;
        objc_msgSend(v173, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v188 = objc_msgSend(v173, "topAnchor");
        v189 = objc_msgSend(v187, "topAnchor");
        v190 = objc_msgSend(v188, "constraintEqualToAnchor:", v189);

        objc_msgSend(v190, "setConstant:", 13.0);
        v191 = v190;
        objc_msgSend(v191, "setActive:", 1);

        goto LABEL_122;
      }
LABEL_123:

      break;
    case 8u:
      v175 = *(id *)((char *)v2 + v123);
      v176 = objc_msgSend(v175, "superview");
      if (v176)
      {
        v177 = v176;
        objc_msgSend(v175, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v178 = objc_msgSend(v175, "leadingAnchor");
        v179 = objc_msgSend(v177, "leadingAnchor");
        v180 = objc_msgSend(v178, "constraintEqualToAnchor:", v179);

        objc_msgSend(v180, "setConstant:", 18.0);
        if (v180)
        {
          v180 = v180;
          objc_msgSend(v180, "setActive:", 1);

          v175 = v180;
        }

      }
      else
      {
        v180 = 0;
        v177 = v175;
      }

      v193 = *(id *)((char *)v2 + v210);
      v194 = objc_msgSend(v193, "superview");
      if (v194)
      {
        v195 = v194;
        objc_msgSend(v193, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v196 = objc_msgSend(v193, "trailingAnchor");
        v197 = objc_msgSend(v195, "trailingAnchor");
        v198 = objc_msgSend(v196, "constraintEqualToAnchor:", v197);

        objc_msgSend(v198, "setConstant:", -18.0);
        if (v198)
        {
          v198 = v198;
          objc_msgSend(v198, "setActive:", 1);

          v193 = v198;
        }

      }
      else
      {
        v198 = 0;
        v195 = v193;
      }

      v199 = *(id *)((char *)v2 + v210);
      v200 = objc_msgSend(v199, "superview");
      if (v200)
      {
        v187 = v200;
        objc_msgSend(v199, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v201 = objc_msgSend(v199, "topAnchor");
        v202 = objc_msgSend(v187, "topAnchor");
        v203 = objc_msgSend(v201, "constraintEqualToAnchor:", v202);

        objc_msgSend(v203, "setConstant:", 23.4);
        v191 = v203;
        objc_msgSend(v191, "setActive:", 1);

LABEL_122:
      }
      else
      {

LABEL_136:
      }
      break;
    default:

      goto LABEL_136;
  }
}

Swift::Void __swiftcall MOSuggestionSheetMediaAssetView.addCoverArtAndMetadata()()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  _QWORD *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  void *v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  void *v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  void *v67;
  id v68;
  id v69;
  id v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(void);
  id v75;
  uint64_t v76;
  double v77;
  uint64_t v78;
  NSString v79;
  void *v80;
  void *v81;
  id v82;
  id v83;
  UIFont v84;
  id v85;
  id v86;
  id v87;
  void *v88;
  void *v89;
  id v90;
  id v91;
  id v92;
  uint64_t v93;
  void (*v94)(void);
  id v95;
  uint64_t v96;
  double v97;
  uint64_t v98;
  NSString v99;
  id v100;
  id v101;
  unsigned __int8 (*v102)(void);
  id v103;
  id v104;
  void *v105;
  double v106;
  id v107;
  uint64_t v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  void *v114;
  uint64_t v115;
  id v116;
  double v117;
  NSString v118;
  id v119;
  uint64_t (*v120)(void);
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  id v124;
  _QWORD *v125;
  void (*v126)(_QWORD *);
  _QWORD *v127;
  id v128;
  id v129;
  id v130;
  id v131;
  id v132;
  id v133;
  id v134;
  id v135;
  id v136;
  id v137;
  double v138;
  id v139;
  id v140;
  id v141;
  id v142;
  double v143;
  id v144;
  id v145;
  id v146;
  id v147;
  id v148;
  id v149;
  void *v150;
  id v151;
  id v152;
  id v153;
  void *v154;
  void *v155;
  void *v156;
  void *v157;
  void *v158;
  uint64_t v159;
  id v160;
  id v161;
  id v162;
  id v163;
  void *v164;
  char *v165;
  id v166;

  v1 = v0;
  v159 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_needsFallback;
  if ((*((_BYTE *)v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_needsFallback) & 1) == 0)
  {
    v2 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x348))();
    objc_msgSend(v1, "addSubview:", v2);
    v3 = UIView.fillSuper(margin:)(0.0);

    swift_bridgeObjectRelease(v3);
  }
  v162 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 16);
  v4 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v162);
  objc_msgSend(v1, "addSubview:", v4);
  v5 = objc_msgSend(v4, "superview");
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v7 = objc_msgSend(v4, "trailingAnchor");
    v8 = objc_msgSend(v6, "trailingAnchor");
    v9 = objc_msgSend(v7, "constraintEqualToAnchor:", v8);

    objc_msgSend(v9, "setConstant:", 0.0);
    if (v9)
    {
      v10 = v9;
      objc_msgSend(v10, "setActive:", 1);

    }
  }
  v11 = objc_msgSend(v4, "superview");
  if (v11)
  {
    v12 = v11;
    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v13 = objc_msgSend(v4, "bottomAnchor");
    v14 = objc_msgSend(v12, "bottomAnchor");
    v15 = objc_msgSend(v13, "constraintEqualToAnchor:", v14);

    if (v15)
    {
      objc_msgSend(v15, "setConstant:", -0.0);
      v16 = v15;
      objc_msgSend(v16, "setActive:", 1);

    }
  }
  v17 = objc_msgSend(v4, "superview");
  if (v17)
  {
    v18 = v17;
    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v19 = objc_msgSend(v4, "topAnchor");
    v20 = objc_msgSend(v18, "topAnchor");
    v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

    objc_msgSend(v21, "setConstant:", 0.0);
    if (v21)
    {
      v22 = v21;
      objc_msgSend(v22, "setActive:", 1);

    }
  }
  v161 = v4;
  v23 = objc_msgSend(v4, "widthAnchor");
  v24 = objc_msgSend(v1, "widthAnchor");
  v25 = objc_msgSend(v23, "constraintEqualToAnchor:multiplier:", v24, 0.5);

  objc_msgSend(v25, "setActive:", 1);
  v26 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x348))();
  objc_msgSend(v1, "addSubview:", v26);
  v27 = objc_msgSend(v26, "superview");
  v164 = v26;
  if (v27)
  {
    v28 = v27;
    objc_msgSend(v26, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v29 = objc_msgSend(v26, "leadingAnchor");
    v30 = objc_msgSend(v28, "leadingAnchor");
    v31 = objc_msgSend(v29, "constraintEqualToAnchor:", v30);

    objc_msgSend(v31, "setConstant:", 0.0);
    v32 = v31;
    v26 = v164;
    v33 = v32;
    objc_msgSend(v32, "setActive:", 1);

  }
  v34 = objc_msgSend(v26, "superview");
  if (v34)
  {
    v35 = v34;
    objc_msgSend(v26, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v36 = objc_msgSend(v26, "topAnchor");
    v37 = objc_msgSend(v35, "topAnchor");
    v38 = objc_msgSend(v36, "constraintEqualToAnchor:", v37);

    objc_msgSend(v38, "setConstant:", 0.0);
    v39 = v38;
    v26 = v164;
    v40 = v39;
    objc_msgSend(v39, "setActive:", 1);

  }
  v41 = objc_msgSend(v26, "superview");
  if (v41)
  {
    v42 = v41;
    objc_msgSend(v26, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v43 = objc_msgSend(v26, "bottomAnchor");
    v44 = objc_msgSend(v42, "bottomAnchor");
    v45 = objc_msgSend(v43, "constraintEqualToAnchor:", v44);

    if (v45)
    {
      objc_msgSend(v45, "setConstant:", -0.0);
      v46 = v45;
      objc_msgSend(v46, "setActive:", 1);

    }
    v26 = v164;
  }
  v47 = objc_msgSend(v26, "widthAnchor");
  v48 = objc_msgSend(v1, "widthAnchor");
  v49 = objc_msgSend(v47, "constraintEqualToAnchor:multiplier:", v48, 0.5);

  objc_msgSend(v49, "setActive:", 1);
  v160 = objc_msgSend((id)objc_opt_self(UIVibrancyEffect), "effectForBlurEffect:style:", v162, 4);
  v50 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v160);
  objc_msgSend(v1, "addSubview:", v50);
  objc_msgSend(v50, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v51 = objc_msgSend(v50, "leadingAnchor");
  v52 = objc_msgSend(v26, "trailingAnchor");
  v53 = objc_msgSend(v51, "constraintEqualToAnchor:", v52);

  objc_msgSend(v53, "setConstant:", 0.0);
  objc_msgSend(v53, "setActive:", 1);

  v54 = objc_msgSend(v50, "superview");
  if (v54)
  {
    v55 = v54;
    objc_msgSend(v50, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v56 = objc_msgSend(v50, "trailingAnchor");
    v57 = objc_msgSend(v55, "trailingAnchor");
    v58 = objc_msgSend(v56, "constraintEqualToAnchor:", v57);

    objc_msgSend(v58, "setConstant:", 0.0);
    v59 = v58;
    objc_msgSend(v59, "setActive:", 1);

  }
  v60 = objc_msgSend(v50, "superview");
  if (v60)
  {
    v61 = v60;
    objc_msgSend(v50, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v62 = objc_msgSend(v50, "bottomAnchor");
    v63 = objc_msgSend(v61, "bottomAnchor");
    v64 = objc_msgSend(v62, "constraintEqualToAnchor:", v63);

    if (v64)
    {
      objc_msgSend(v64, "setConstant:", -0.0);
      v65 = v64;
      objc_msgSend(v65, "setActive:", 1);

    }
  }
  v66 = objc_msgSend(v50, "superview");
  if (v66)
  {
    v67 = v66;
    objc_msgSend(v50, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v68 = objc_msgSend(v50, "topAnchor");
    v69 = objc_msgSend(v67, "topAnchor");
    v70 = objc_msgSend(v68, "constraintEqualToAnchor:", v69);

    objc_msgSend(v70, "setConstant:", 0.0);
    v71 = v70;
    objc_msgSend(v71, "setActive:", 1);

  }
  v72 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_labelStackView;
  objc_msgSend(*(id *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_labelStackView), "setAxis:", 1);
  objc_msgSend(*(id *)((char *)v1 + v72), "setSpacing:", 2.0);
  objc_msgSend(*(id *)((char *)v1 + v72), "setAlignment:", 1);
  v165 = (char *)v72;
  objc_msgSend(*(id *)((char *)v1 + v72), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v73 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_titleLabel;
  v74 = *(void (**)(void))((swift_isaMask & *v1) + 0x178);
  v75 = *(id *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_titleLabel);
  v74();
  v163 = v50;
  if (v76)
  {
    v78 = v76;
    v79 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v77 = swift_bridgeObjectRelease(v78).n128_u64[0];
  }
  else
  {
    v79 = 0;
  }
  objc_msgSend(v75, "setText:", v79, v77);

  objc_msgSend(*(id *)((char *)v1 + v73), "setNumberOfLines:", 3);
  objc_msgSend(*(id *)((char *)v1 + v73), "setLineBreakMode:", 4);
  objc_msgSend(*(id *)((char *)v1 + v73), "setMaximumContentSizeCategory:");
  v80 = *(void **)((char *)v1 + v73);
  v81 = (void *)objc_opt_self(UIFont);
  v82 = v80;
  v83 = objc_msgSend(v81, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  v84.super.isa = UIFont.withWeight(_:)(UIFontWeightSemibold).super.isa;

  v85 = -[objc_class fontDescriptor](v84.super.isa, "fontDescriptor");
  v86 = objc_msgSend(v85, "fontDescriptorWithSymbolicTraits:", 2);

  if (v86)
  {
    v87 = objc_msgSend(v81, "fontWithDescriptor:size:", v86, 0.0);

    objc_msgSend(v82, "setFont:", v87);
    v88 = *(void **)((char *)v1 + v73);
    v89 = (void *)objc_opt_self(UIColor);
    v90 = v88;
    v91 = objc_msgSend(v89, "whiteColor");
    v92 = objc_msgSend(v91, "colorWithAlphaComponent:", 0.7);

    objc_msgSend(v90, "setTextColor:", v92);
    objc_msgSend(*(id *)((char *)v1 + v73), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v93 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_subtitleLabel;
    v94 = *(void (**)(void))((swift_isaMask & *v1) + 0x190);
    v95 = objc_retain(*(id *)((char *)v1
                            + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_subtitleLabel));
    v94();
    if (v96)
    {
      v98 = v96;
      v99 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v97 = swift_bridgeObjectRelease(v98).n128_u64[0];
    }
    else
    {
      v99 = 0;
    }
    objc_msgSend(v95, "setText:", v99, v97);

    objc_msgSend(*(id *)((char *)v1 + v93), "setNumberOfLines:", 1);
    objc_msgSend(*(id *)((char *)v1 + v93), "setLineBreakMode:", 4);
    objc_msgSend(*(id *)((char *)v1 + v93), "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityMedium);
    v100 = *(id *)((char *)v1 + v93);
    v101 = objc_msgSend(v81, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
    objc_msgSend(v100, "setFont:", v101);

    v102 = *(unsigned __int8 (**)(void))((swift_isaMask & *v1) + 0x100);
    v103 = *(id *)((char *)v1 + v93);
    LODWORD(v101) = v102();
    v104 = objc_msgSend(v89, "whiteColor");
    v105 = v104;
    v106 = 0.7;
    if ((_DWORD)v101 != 6)
      v106 = 0.4;
    v107 = objc_msgSend(v104, "colorWithAlphaComponent:", v106);

    objc_msgSend(v103, "setTextColor:", v107);
    objc_msgSend(*(id *)((char *)v1 + v93), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(*(id *)&v165[(_QWORD)v1], "addArrangedSubview:", *(_QWORD *)((char *)v1 + v73));
    if (((unsigned __int8 (*)(id))v102)(objc_msgSend(*(id *)&v165[(_QWORD)v1], "addArrangedSubview:", *(_QWORD *)((char *)v1 + v93))) == 6)
    {
      objc_msgSend(*(id *)&v165[(_QWORD)v1], "setCustomSpacing:afterView:", *(_QWORD *)((char *)v1 + v93), 5.0);
      v108 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_categoryLabel;
      objc_msgSend(*(id *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_categoryLabel), "setNumberOfLines:", 1);
      v109 = *(id *)((char *)v1 + v108);
      v110 = objc_msgSend(v81, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
      objc_msgSend(v109, "setFont:", v110);

      v111 = *(id *)((char *)v1 + v108);
      v112 = objc_msgSend(v89, "whiteColor");
      v113 = objc_msgSend(v112, "colorWithAlphaComponent:", 0.4);

      objc_msgSend(v111, "setTextColor:", v113);
      v114 = *(void **)((char *)v1 + v108);
      v115 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_category + 8);
      v116 = v114;
      if (v115)
      {
        swift_bridgeObjectRetain(v115);
        v118 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v117 = swift_bridgeObjectRelease(v115).n128_u64[0];
      }
      else
      {
        v118 = 0;
      }
      objc_msgSend(v114, "setText:", v118, v117);

      objc_msgSend(*(id *)((char *)v1 + v108), "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityMedium);
      v119 = objc_msgSend(*(id *)&v165[(_QWORD)v1], "addArrangedSubview:", *(_QWORD *)((char *)v1 + v108));
      v120 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0x160);
      if ((((uint64_t (*)(id))v120)(v119) == 1 || v120() == 4) && (*((_BYTE *)v1 + v159) & 1) == 0)
      {
        v121 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x118))();
        v123 = v122;
        v124 = objc_allocWithZone((Class)type metadata accessor for MOCircularProgressIndicatorView());
        v125 = MOCircularProgressIndicatorView.init(mediaAssetID:)(v121, v123);
        v126 = *(void (**)(_QWORD *))((swift_isaMask & *v1) + 0x300);
        v127 = v125;
        v126(v125);
        objc_msgSend(v1, "addSubview:", v127);
        objc_msgSend(v127, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        objc_msgSend(v127, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v128 = objc_msgSend(v127, "topAnchor");
        v129 = objc_msgSend(v163, "topAnchor");
        v130 = objc_msgSend(v128, "constraintEqualToAnchor:constant:", v129, 7.0);

        objc_msgSend(v130, "setActive:", 1);
        objc_msgSend(v127, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v131 = objc_msgSend(v127, "leadingAnchor");
        v132 = objc_msgSend(v163, "leadingAnchor");
        v133 = objc_msgSend(v131, "constraintEqualToAnchor:constant:", v132, 7.0);

        objc_msgSend(v133, "setActive:", 1);
        objc_msgSend(v127, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v134 = objc_msgSend(v127, "widthAnchor");
        v135 = objc_msgSend(v134, "constraintEqualToConstant:", 30.0);

        objc_msgSend(v135, "setActive:", 1);
        objc_msgSend(v127, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v136 = objc_msgSend(v127, "heightAnchor");
        v137 = objc_msgSend(v136, "constraintEqualToConstant:", 30.0);

        objc_msgSend(v137, "setActive:", 1);
      }
    }
    if (v102() == 4)
      v138 = 8.0;
    else
      v138 = 12.0;
    objc_msgSend(v1, "addSubview:", *(_QWORD *)&v165[(_QWORD)v1]);
    v139 = *(id *)&v165[(_QWORD)v1];
    objc_msgSend(v139, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v140 = objc_msgSend(v139, "leadingAnchor");
    v141 = objc_msgSend(v163, "leadingAnchor");
    v142 = objc_msgSend(v140, "constraintEqualToAnchor:constant:", v141, v138);

    objc_msgSend(v142, "setActive:", 1);
    v143 = -v138;
    v144 = *(id *)&v165[(_QWORD)v1];
    objc_msgSend(v144, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v145 = objc_msgSend(v144, "trailingAnchor");
    v146 = objc_msgSend(v163, "trailingAnchor");
    v147 = objc_msgSend(v145, "constraintEqualToAnchor:constant:", v146, v143);

    objc_msgSend(v147, "setActive:", 1);
    v148 = *(id *)&v165[(_QWORD)v1];
    v149 = objc_msgSend(v148, "superview");
    if (v149)
    {
      v150 = v149;
      objc_msgSend(v148, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v151 = objc_msgSend(v148, "bottomAnchor");
      v152 = objc_msgSend(v150, "bottomAnchor");
      v153 = objc_msgSend(v151, "constraintEqualToAnchor:", v152);

      v154 = v162;
      if (v153)
      {
        objc_msgSend(v153, "setConstant:", v143);
        v166 = v153;
        objc_msgSend(v166, "setActive:", 1);

        v148 = v166;
      }
      else
      {
        v166 = 0;
      }
      v157 = v160;
      v156 = v161;
      v155 = v163;
      v158 = v164;

    }
    else
    {
      v166 = 0;
      v150 = v148;
      v154 = v162;
      v155 = v163;
      v157 = v160;
      v156 = v161;
      v158 = v164;
    }

  }
  else
  {
    __break(1u);
  }
}

id MOSuggestionSheetMediaAssetView.sourceSymbolImage.getter()
{
  _QWORD *v0;
  unint64_t v1;
  id v2;
  NSString v3;

  v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x160))();
  v2 = 0;
  if (v1 <= 8 && (((1 << v1) & 0x1C0) != 0 || ((1 << v1) & 0x12) != 0 || ((1 << v1) & 0x24) != 0))
  {
    v3 = String._bridgeToObjectiveC()();
    v2 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v3);

  }
  return v2;
}

void MOSuggestionSheetMediaAssetView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MomentsUIService.MOSuggestionSheetMediaAssetView", 48, "init(frame:)", 12, 0);
  __break(1u);
}

id MOSuggestionSheetMediaAssetView.__deallocating_deinit()
{
  return MOSuggestionSheetMediaAssetView.__deallocating_deinit(0, (uint64_t (*)(void))type metadata accessor for MOSuggestionSheetMediaAssetView);
}

id ThirdPartyMediaColorEffectView.contentView.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_contentView);
}

void *ThirdPartyMediaColorEffectView.fillColor.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_fillColor);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_fillColor, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void ThirdPartyMediaColorEffectView.fillColor.setter(void *a1)
{
  MOSuggestionPickerPrivacyBadge.iconView.setter(a1, &OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_fillColor);
}

uint64_t (*ThirdPartyMediaColorEffectView.fillColor.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_fillColor, a1, 33, 0);
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

uint64_t ThirdPartyMediaColorEffectView.colorVariant.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_colorVariant;
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_colorVariant, v3, 0, 0);
  return *(_QWORD *)v1;
}

uint64_t ThirdPartyMediaColorEffectView.colorVariant.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  _BYTE v7[24];

  v5 = v2 + OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_colorVariant;
  result = swift_beginAccess(v5, v7, 1, 0);
  *(_QWORD *)v5 = a1;
  *(_BYTE *)(v5 + 8) = a2 & 1;
  return result;
}

uint64_t (*ThirdPartyMediaColorEffectView.colorVariant.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_colorVariant, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

char *ThirdPartyMediaColorEffectView.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void *v17;
  char *v18;
  id v19;
  void *v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  id v25;
  void *v26;
  objc_super v28;

  v9 = OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_contentView;
  v10 = objc_allocWithZone((Class)UIView);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "init");
  v12 = OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_fillView;
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v13 = OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_overlayView;
  *(_QWORD *)&v11[v13] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_fillColor] = 0;
  v14 = &v11[OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_colorVariant];
  *(_QWORD *)v14 = 0;
  v14[8] = 1;

  v28.receiver = v11;
  v28.super_class = (Class)type metadata accessor for ThirdPartyMediaColorEffectView();
  v15 = (char *)objc_msgSendSuper2(&v28, "initWithFrame:", a1, a2, a3, a4);
  v16 = OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_fillView;
  v17 = *(void **)&v15[OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_fillView];
  v18 = v15;
  v19 = v17;
  objc_msgSend(v18, "bounds");
  objc_msgSend(v19, "setFrame:");

  v20 = *(void **)&v15[v16];
  objc_msgSend(v20, "setAutoresizingMask:", 18);
  objc_msgSend(v20, "setContentMode:", 2);
  objc_msgSend(v18, "addSubview:", v20);
  v21 = OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_overlayView;
  v22 = *(id *)&v18[OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_overlayView];
  objc_msgSend(v18, "bounds");
  objc_msgSend(v22, "setFrame:");

  v23 = *(void **)&v18[v21];
  objc_msgSend(v23, "setAutoresizingMask:", 18);
  objc_msgSend(v18, "addSubview:", v23);
  v24 = OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_contentView;
  v25 = *(id *)&v18[OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_contentView];
  objc_msgSend(v18, "bounds");
  objc_msgSend(v25, "setFrame:");

  v26 = *(void **)&v18[v24];
  objc_msgSend(v26, "setAutoresizingMask:", 18);
  objc_msgSend(v18, "addSubview:", v26);

  return v18;
}

uint64_t ThirdPartyMediaColorEffectView.init(coder:)(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;

  v3 = OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_contentView;
  v4 = objc_allocWithZone((Class)UIView);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  v6 = OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_fillView;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v7 = OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_overlayView;
  v8 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");

  *(_QWORD *)&v5[v7] = v8;
  v9 = OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_fillColor;
  *(_QWORD *)&v5[OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_fillColor] = 0;
  v10 = &v5[OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_colorVariant];
  *(_QWORD *)v10 = 0;
  v10[8] = 1;

  v11 = *(void **)&v5[v9];
  v12 = type metadata accessor for ThirdPartyMediaColorEffectView();
  swift_deallocPartialClassInstance(v5, v12, 49, 7);
  return 0;
}

Swift::Void __swiftcall ThirdPartyMediaColorEffectView.layoutSubviews()()
{
  _QWORD *v0;
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  char v5;
  void *v6;
  id v7;
  id v8;
  _QWORD *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  objc_super v14;

  v14.receiver = v0;
  v14.super_class = (Class)type metadata accessor for ThirdPartyMediaColorEffectView();
  v1 = objc_msgSendSuper2(&v14, "layoutSubviews");
  v2 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_fillView);
  v3 = (void *)(*(uint64_t (**)(id))((swift_isaMask & *v0) + 0x78))(v1);
  objc_msgSend(v2, "setBackgroundColor:", v3);

  v4 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x90))();
  if ((v5 & 1) != 0 || v4 == 3)
  {
    objc_msgSend(v0, "setOverrideUserInterfaceStyle:", 2);
    v6 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_overlayView);
    v10 = objc_msgSend((id)objc_opt_self(UIColor), "systemWhiteColor");
    v11 = objc_msgSend(v10, "colorWithAlphaComponent:", 0.13);
LABEL_7:
    v8 = v11;

    objc_msgSend(v6, "setBackgroundColor:", v8);
    v9 = &kCAFilterPlusL;
    goto LABEL_8;
  }
  if (v4 == 2)
  {
    objc_msgSend(v0, "setOverrideUserInterfaceStyle:", 2);
    v6 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_overlayView);
    v10 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlackColor");
    v11 = objc_msgSend(v10, "colorWithAlphaComponent:", 0.6);
    goto LABEL_7;
  }
  if (v4 != 1)
    return;
  objc_msgSend(v0, "setOverrideUserInterfaceStyle:", 1);
  v6 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_overlayView);
  v7 = objc_msgSend((id)objc_opt_self(UIColor), "systemWhiteColor");
  v8 = objc_msgSend(v7, "colorWithAlphaComponent:", 0.78);

  objc_msgSend(v6, "setBackgroundColor:", v8);
  v9 = &kCAFilterPlusD;
LABEL_8:

  v12 = objc_msgSend(v6, "layer");
  objc_msgSend(v12, "setCompositingFilter:", 0);

  v13 = objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_contentView), "layer");
  objc_msgSend(v13, "setCompositingFilter:", *v9);

}

id ThirdPartyMediaColorEffectView.__deallocating_deinit(uint64_t a1)
{
  return MOSuggestionSheetMediaAssetView.__deallocating_deinit(a1, type metadata accessor for ThirdPartyMediaColorEffectView);
}

id MOSuggestionSheetMediaAssetView.__deallocating_deinit(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, "dealloc");
}

_QWORD *specialized MOSuggestionSheetMediaAssetView.init(mediaAssetID:mediaPreviewURL:image:mediaType:sizeType:title:subtitle:assignedTileSize:bgColor:associatedColors:colorVariant:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, void *a11, uint64_t a12, uint64_t a13)
{
  char *v13;
  uint64_t *v14;
  char *v15;
  uint64_t v16;
  void **v17;
  char *v18;
  char *v19;
  void **v20;
  uint64_t v21;
  id v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  Swift::String *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  _UNKNOWN **v44;
  char **v45;
  id v46;
  Swift::String v47;
  Swift::String v48;
  Swift::String v49;
  void *object;
  void *v51;
  objc_class *v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  NSBundle v56;
  uint64_t v57;
  unint64_t v58;
  objc_class *v59;
  uint64_t v60;
  Swift::String v61;
  void *v62;
  unint64_t v63;
  NSBundle v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  Swift::String v68;
  double y;
  double width;
  double height;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  NSMutableDictionary *connectionProperties;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  uint8_t *v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  char v87;
  unint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  void *v92;
  _QWORD *v93;
  id v94;
  _QWORD *v95;
  void **v96;
  void *v97;
  _QWORD *v98;
  id v99;
  void *v100;
  char **v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  void *v107;
  char **v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  double v117;
  UIAccessibilityTraits v118;
  _QWORD *v119;
  unint64_t v120;
  UIAccessibilityTraits v121;
  void *v122;
  _QWORD *v123;
  id v124;
  Swift::String v125;
  Swift::String v126;
  void *v127;
  NSString v128;
  void (*v129)(void);
  id v130;
  unint64_t v132;
  unint64_t v133;
  char *v134;
  uint64_t v135;
  char *v136;
  char *v137;
  _QWORD *v141;
  Swift::String *v142;
  unint64_t v143;
  void *v144;
  uint64_t v150;
  uint64_t v151[3];
  objc_super v152;
  char v153[24];
  char v154[24];
  char v155[24];
  char v156[24];
  _BYTE v157[24];
  char v158[24];
  char v159[32];
  Swift::String v160;
  Swift::String v161;

  v14 = (uint64_t *)&v13[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_mediaAssetID];
  *v14 = 0;
  v14[1] = 0;
  v15 = &v13[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_mediaPreviewURL];
  v135 = (uint64_t)&v13[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_mediaPreviewURL];
  v16 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = (void **)&v13[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_image];
  *(_QWORD *)&v13[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_image] = 0;
  v18 = &v13[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_title];
  *(_QWORD *)v18 = 0;
  *((_QWORD *)v18 + 1) = 0;
  v19 = &v13[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_subtitle];
  *(_QWORD *)v19 = 0;
  *((_QWORD *)v19 + 1) = 0;
  v20 = (void **)&v13[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_bgColor];
  *(_QWORD *)&v13[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_bgColor] = 0;
  v136 = &v13[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_bgColorVariant];
  *(_QWORD *)&v13[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_bgColorVariant] = 0;
  v137 = &v13[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_associatedColors];
  *(_QWORD *)&v13[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_associatedColors] = 0;
  v21 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_coverArtView;
  v22 = objc_allocWithZone((Class)UIImageView);
  v23 = v13;
  *(_QWORD *)&v13[v21] = objc_msgSend(v22, "init");
  v24 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_titleLabel;
  *(_QWORD *)&v23[v24] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v25 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_subtitleLabel;
  *(_QWORD *)&v23[v25] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v26 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_categoryLabel;
  *(_QWORD *)&v23[v26] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v27 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_labelStackView;
  *(_QWORD *)&v23[v27] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v28 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_imageView;
  *(_QWORD *)&v23[v28] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v29 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_sourceBlurContainerView;
  v30 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 16);
  v31 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v30);

  *(_QWORD *)&v23[v29] = v31;
  v32 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_sourceImageView;
  *(_QWORD *)&v23[v32] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v33 = (Swift::String *)&v23[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_category];
  v33->_countAndFlagsBits = 0;
  v33->_object = 0;
  v142 = v33;
  v34 = &v23[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_fallbackSymbol];
  *(_QWORD *)v34 = 0;
  *((_QWORD *)v34 + 1) = 0;
  v134 = v34;
  v35 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_needsFallback;
  v23[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_needsFallback] = 0;
  *(_QWORD *)&v23[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_circularProgressIndicator] = 0;
  swift_beginAccess(v14, v159, 1, 0);
  v36 = v14[1];
  *v14 = a1;
  v14[1] = a2;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRelease(v36);
  swift_beginAccess(v17, v158, 1, 0);
  v37 = *v17;
  *v17 = a4;
  v38 = a4;

  *(_QWORD *)&v23[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_mediaType] = a5;
  swift_beginAccess(v135, v157, 33, 0);
  outlined assign with copy of URL?(a3, v135);
  swift_endAccess(v157);
  swift_beginAccess(v18, v157, 1, 0);
  v39 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v18 = a6;
  *((_QWORD *)v18 + 1) = a7;
  swift_bridgeObjectRelease(v39);
  swift_beginAccess(v19, v156, 1, 0);
  v40 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v19 = a8;
  *((_QWORD *)v19 + 1) = a9;
  swift_bridgeObjectRelease(v40);
  swift_beginAccess(v20, v155, 1, 0);
  v41 = *v20;
  *v20 = a11;
  v42 = a11;

  swift_beginAccess(v136, v154, 1, 0);
  *(_QWORD *)v136 = a13;
  swift_beginAccess(v137, v153, 1, 0);
  v43 = *(_QWORD *)v137;
  *(_QWORD *)v137 = a12;
  swift_bridgeObjectRelease(v43);
  v23[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_assignedTileSize] = a10;
  if (!*v17)
    v23[v35] = 1;
  v144 = v38;
  v44 = MKPolyline_ptr;
  v45 = &selRef_genericAvatarFor_pointSize_completion_;
  switch(a5)
  {
    case 1:
      v52 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v53 = 0xD000000000000013;
      v132 = 0x80000001001AF610;
      v54 = 1735290707;
      v55 = 0xE400000000000000;
      v56.super.isa = v52;
      v57 = 0;
      v58 = 0xE000000000000000;
      goto LABEL_8;
    case 2:
    case 5:
      v46 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v160._countAndFlagsBits = 0xD000000000000016;
      v160._object = (void *)0x80000001001AF630;
      v47._countAndFlagsBits = 0x74736163646F50;
      v47._object = (void *)0xE700000000000000;
      v48._countAndFlagsBits = 0;
      v48._object = (void *)0xE000000000000000;
      v49 = NSLocalizedString(_:tableName:bundle:value:comment:)(v47, (Swift::String_optional)0, (NSBundle)v46, v48, v160);

      object = v142->_object;
      *v142 = v49;
      swift_bridgeObjectRelease(object);
      v51 = (void *)*((_QWORD *)v134 + 1);
      *(_OWORD *)v134 = xmmword_1001A3B60;
      goto LABEL_14;
    case 3:
      v59 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v133 = 0x80000001001AF5F0;
      v60 = 0x6F65646956;
      goto LABEL_11;
    case 4:
      v52 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v132 = 0x80000001001AF5D0;
      v54 = 0x6D75626C41;
      v55 = 0xE500000000000000;
      v56.super.isa = v52;
      v57 = 0;
      v58 = 0xE000000000000000;
      v53 = 0xD000000000000014;
LABEL_8:
      v61 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v54, (Swift::String_optional)0, v56, *(Swift::String *)&v57, *(Swift::String *)&v53);

      v62 = v142->_object;
      *v142 = v61;
      swift_bridgeObjectRelease(v62);
      v51 = (void *)*((_QWORD *)v134 + 1);
      *(_OWORD *)v134 = xmmword_1001A3B50;
      goto LABEL_14;
    case 7:
      v59 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v133 = 0x80000001001AF5D0;
      v60 = 0x6D75626C41;
      goto LABEL_11;
    case 8:
      v59 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v67 = 0xD000000000000015;
      v133 = 0x80000001001AF5B0;
      v60 = 0x747369747241;
      v63 = 0xE600000000000000;
      v64.super.isa = v59;
      v65 = 0;
      v66 = 0xE000000000000000;
      goto LABEL_13;
    default:
      v59 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v133 = 0x80000001001AF560;
      v60 = 0x616964654DLL;
LABEL_11:
      v63 = 0xE500000000000000;
      v64.super.isa = v59;
      v65 = 0;
      v66 = 0xE000000000000000;
      v67 = 0xD000000000000014;
LABEL_13:
      v68 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v60, (Swift::String_optional)0, v64, *(Swift::String *)&v65, *(Swift::String *)(&v133 - 1));

      v51 = v142->_object;
      *v142 = v68;
LABEL_14:

      swift_bridgeObjectRelease(v51);
      y = CGRectZero.origin.y;
      width = CGRectZero.size.width;
      height = CGRectZero.size.height;
      v152.receiver = v23;
      v152.super_class = (Class)type metadata accessor for MOSuggestionSheetMediaAssetView(0);
      v72 = objc_msgSendSuper2(&v152, "initWithFrame:", CGRectZero.origin.x, y, width, height);
      v73 = v72;
      v75 = a3;
      v74 = a5;
      v143 = a5 - 6;
      if ((unint64_t)(a5 - 6) >= 3)
      {
        v90 = v72;
        v87 = a10;
      }
      else
      {
        connectionProperties = serverManager._connectionProperties;
        v141 = v72;
        v77 = v72;
        if (connectionProperties != (NSMutableDictionary *)-1)
          swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
        v78 = type metadata accessor for Logger(0);
        v79 = __swift_project_value_buffer(v78, (uint64_t)static MOAngelLogger.assets);
        v80 = Logger.logObject.getter(v79);
        v81 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v80, v81))
        {
          v82 = (uint8_t *)swift_slowAlloc(12, -1);
          v83 = swift_slowAlloc(32, -1);
          v151[0] = v83;
          *(_DWORD *)v82 = 136315138;
          v84 = MOSuggestionAssetTileSize.description.getter(a10);
          v86 = v85;
          v150 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v84, v85, v151);
          v87 = a10;
          v45 = &selRef_genericAvatarFor_pointSize_completion_;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v150, v151, v82 + 4);
          v88 = v86;
          v75 = a3;
          swift_bridgeObjectRelease(v88);
          _os_log_impl((void *)&_mh_execute_header, v80, v81, "[MOSuggestionSheetMediaAssetView] assignedTileSize=%s", v82, 0xCu);
          swift_arrayDestroy(v83, 1, (char *)&type metadata for Any + 8);
          v89 = v83;
          v44 = MKPolyline_ptr;
          swift_slowDealloc(v89, -1, -1);
          swift_slowDealloc(v82, -1, -1);

          v74 = a5;
        }
        else
        {

          v74 = a5;
          v87 = a10;
        }
        v73 = v141;
      }
      switch(v87)
      {
        case 2:
        case 3:
        case 5:
        case 8:
          if (v143 > 2)
          {
            v92 = (void *)(*(uint64_t (**)(_QWORD *))((swift_isaMask & *v73) + 0x348))(v90);
            objc_msgSend(v73, "addSubview:", v92);
            v93 = UIView.fillSuper(margin:)(0.0);

            swift_bridgeObjectRelease(v93);
          }
          else
          {
            (*(void (**)(_QWORD))((swift_isaMask & *v73) + 0x358))(0);
          }
          if (v87 != 5 && v87 != 8
            || v74 != 4 && v74 != 1
            || (*((_BYTE *)v73 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_needsFallback) & 1) != 0)
          {
            goto LABEL_45;
          }
          v94 = objc_allocWithZone((Class)type metadata accessor for MOCircularProgressIndicatorView());
          v95 = MOCircularProgressIndicatorView.init(mediaAssetID:)(a1, a2);
          v96 = (void **)((char *)v73
                        + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_circularProgressIndicator);
          swift_beginAccess((char *)v73 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_circularProgressIndicator, v151, 1, 0);
          v97 = *v96;
          *v96 = v95;
          v98 = v95;

          objc_msgSend(v73, "addSubview:", v98);
          objc_msgSend(v98, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
          v99 = objc_msgSend(v98, "superview");
          if (v99)
          {
            v100 = v99;
            v101 = v45;
            objc_msgSend(v98, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
            v102 = objc_msgSend(v98, "topAnchor");
            v103 = objc_msgSend(v100, "topAnchor");
            v104 = objc_msgSend(v102, "constraintEqualToAnchor:", v103);

            objc_msgSend(v104, "setConstant:", 7.0);
            if (v104)
            {
              v105 = v104;
              objc_msgSend(v105, "setActive:", 1);

            }
            v45 = v101;
          }
          v106 = objc_msgSend(v98, "superview");
          if (v106)
          {
            v107 = v106;
            v108 = v45;
            objc_msgSend(v98, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
            v109 = objc_msgSend(v98, "leadingAnchor");
            v110 = objc_msgSend(v107, "leadingAnchor");
            v111 = objc_msgSend(v109, "constraintEqualToAnchor:", v110);

            objc_msgSend(v111, "setConstant:", 7.0);
            if (v111)
            {
              v112 = v111;
              objc_msgSend(v112, "setActive:", 1);

            }
            v45 = v108;
          }
          objc_msgSend(v98, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
          v113 = objc_msgSend(v98, "widthAnchor");
          v114 = objc_msgSend(v113, "constraintEqualToConstant:", 30.0);

          objc_msgSend(v114, "setActive:", 1);
          objc_msgSend(v98, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
          v115 = objc_msgSend(v98, "heightAnchor");
          v116 = objc_msgSend(v115, "constraintEqualToConstant:", 30.0);

          objc_msgSend(v116, "setActive:", 1);
          v75 = a3;
          v44 = MKPolyline_ptr;
          goto LABEL_46;
        case 4:
        case 6:
          v91 = swift_isaMask & *v73;
          if (v143 <= 2)
            goto LABEL_44;
          (*(void (**)(_QWORD *))((swift_isaMask & *v73) + 0x360))(v90);
          goto LABEL_45;
        case 7:
          if (v143 <= 2)
          {
            v91 = swift_isaMask & *v73;
LABEL_44:
            (*(void (**)(uint64_t))(v91 + 856))(1);
          }
          goto LABEL_45;
        default:
LABEL_45:
          *(_QWORD *)&v117 = swift_bridgeObjectRelease(a2).n128_u64[0];
LABEL_46:
          objc_msgSend(v73, "setIsAccessibilityElement:", 1, v117);
          v118 = UIAccessibilityTraitImage;
          v119 = v73;
          v120 = (unint64_t)objc_msgSend(v119, "accessibilityTraits");
          if ((v118 & ~v120) != 0)
            v121 = v118;
          else
            v121 = 0;
          objc_msgSend(v119, "setAccessibilityTraits:", v121 | v120);

          objc_msgSend(v119, "setAccessibilityIgnoresInvertColors:", 1);
          v122 = (void *)objc_opt_self(v44[26]);
          v123 = v119;
          v124 = objc_msgSend(v122, v45[72]);
          v161._countAndFlagsBits = 0xD000000000000024;
          v161._object = (void *)0x80000001001AF580;
          v125._countAndFlagsBits = 0x616964654DLL;
          v125._object = (void *)0xE500000000000000;
          v126._countAndFlagsBits = 0;
          v126._object = (void *)0xE000000000000000;
          v127 = NSLocalizedString(_:tableName:bundle:value:comment:)(v125, (Swift::String_optional)0, (NSBundle)v124, v126, v161)._object;

          v128 = String._bridgeToObjectiveC()();
          objc_msgSend(v123, "setAccessibilityLabel:", v128, swift_bridgeObjectRelease(v127).n128_f64[0]);

          if (v143 > 2)
          {
            (*(void (**)(void))((swift_isaMask & *v123) + 0x338))();
            v130 = v144;
          }
          else
          {
            if (!a4)
              goto LABEL_54;
            v129 = *(void (**)(void))((swift_isaMask & *v123) + 0x340);
            v130 = v144;
            v129();

            v42 = v130;
          }

LABEL_54:
          outlined destroy of URL?(v75);
          return v123;
      }
  }
}

uint64_t outlined assign with take of URL?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for ThirdPartyMediaColorEffectView()
{
  return objc_opt_self(_TtC16MomentsUIService30ThirdPartyMediaColorEffectView);
}

void specialized MOSuggestionSheetMediaAssetView.init(coder:)()
{
  _BYTE *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  v1 = &v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_mediaAssetID];
  *v1 = 0;
  v1[1] = 0;
  v2 = &v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_mediaPreviewURL];
  v3 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_image] = 0;
  v4 = &v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_title];
  *v4 = 0;
  v4[1] = 0;
  v5 = &v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_subtitle];
  *v5 = 0;
  v5[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_bgColor] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_bgColorVariant] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_associatedColors] = 0;
  v6 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_coverArtView;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v7 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_titleLabel;
  *(_QWORD *)&v0[v7] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v8 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_subtitleLabel;
  *(_QWORD *)&v0[v8] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v9 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_categoryLabel;
  *(_QWORD *)&v0[v9] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v10 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_labelStackView;
  *(_QWORD *)&v0[v10] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v11 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_imageView;
  *(_QWORD *)&v0[v11] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v12 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_sourceBlurContainerView;
  v13 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 16);
  v14 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v13);

  *(_QWORD *)&v0[v12] = v14;
  v15 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_sourceImageView;
  *(_QWORD *)&v0[v15] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v16 = &v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_category];
  *v16 = 0;
  v16[1] = 0;
  v17 = &v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_fallbackSymbol];
  *v17 = 0;
  v17[1] = 0;
  v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_needsFallback] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_circularProgressIndicator] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionSheetMediaAssetView.swift", 54, 2, 554, 0);
  __break(1u);
}

uint64_t type metadata accessor for MOSuggestionSheetMediaAssetView(uint64_t a1)
{
  uint64_t result;

  result = type metadata singleton initialization cache for MOSuggestionSheetMediaAssetView;
  if (!type metadata singleton initialization cache for MOSuggestionSheetMediaAssetView)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MOSuggestionSheetMediaAssetView);
  return result;
}

uint64_t sub_100165C84@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x100))();
  *a2 = result;
  return result;
}

uint64_t sub_100165CC4(unsigned __int8 *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(_QWORD))((swift_isaMask & **a2) + 0x108))(*a1);
}

uint64_t sub_100165D00@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x118))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100165D40(uint64_t *a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **a2) + 0x120);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t sub_100165D94(_QWORD **a1)
{
  return (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x130))();
}

uint64_t sub_100165DD0@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x148))();
  *a2 = result;
  return result;
}

uint64_t sub_100165E10(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0x150);
  v4 = *a1;
  return v3(v2);
}

uint64_t sub_100165E5C@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x160))();
  *a2 = result;
  return result;
}

uint64_t sub_100165E9C(_QWORD *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(_QWORD))((swift_isaMask & **a2) + 0x168))(*a1);
}

uint64_t sub_100165ED8@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x178))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100165F18(uint64_t *a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **a2) + 0x180);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t sub_100165F6C@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x190))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100165FAC(uint64_t *a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **a2) + 0x198);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t sub_100166000@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x1A8))();
  *a2 = result;
  return result;
}

uint64_t sub_100166040(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0x1B0);
  v4 = *a1;
  return v3(v2);
}

uint64_t sub_10016608C@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x1C0))();
  *a2 = result;
  return result;
}

uint64_t sub_1001660CC(_QWORD *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(_QWORD))((swift_isaMask & **a2) + 0x1C8))(*a1);
}

uint64_t sub_100166108@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x1D8))();
  *a2 = result;
  return result;
}

uint64_t sub_100166148(_QWORD *a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0x1E0);
  v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

uint64_t sub_100166188@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x2F8))();
  *a2 = result;
  return result;
}

uint64_t sub_1001661C8(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0x300);
  v4 = *a1;
  return v3(v2);
}

uint64_t sub_100166214@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x78))();
  *a2 = result;
  return result;
}

uint64_t sub_100166254(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0x80);
  v4 = *a1;
  return v3(v2);
}

uint64_t sub_1001662A0@<X0>(_QWORD **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x90))();
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_1001662E8(uint64_t a1, _QWORD **a2)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))((swift_isaMask & **a2) + 0x98))(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

ValueMetadata *type metadata accessor for AssetViewConstants()
{
  return &type metadata for AssetViewConstants;
}

uint64_t ObjC metadata update function for MOSuggestionSheetMediaAssetView()
{
  return type metadata accessor for MOSuggestionSheetMediaAssetView(0);
}

void type metadata completion function for MOSuggestionSheetMediaAssetView(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[22];

  v4[0] = &unk_1001A3CB0;
  v4[1] = &unk_1001A3CC8;
  type metadata accessor for URL?(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = &unk_1001A3CE0;
    v4[4] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[5] = &unk_1001A3CC8;
    v4[6] = &unk_1001A3CC8;
    v4[7] = &unk_1001A3CE0;
    v4[8] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[9] = &unk_1001A3CE0;
    v4[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[11] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[12] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[13] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[14] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[15] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[16] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[17] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[18] = &unk_1001A3CC8;
    v4[19] = &unk_1001A3CC8;
    v4[20] = &unk_1001A3CF8;
    v4[21] = &unk_1001A3CE0;
    swift_updateClassMetadata2(a1, 256, 22, v4, a1 + 80);
  }
}

void type metadata accessor for URL?(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!lazy cache variable for type metadata for URL?)
  {
    v2 = type metadata accessor for URL(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&lazy cache variable for type metadata for URL?);
  }
}

uint64_t outlined assign with copy of URL?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void *MOSuggestionCollectionViewCell.paddingTitle.unsafeMutableAddressor()
{
  return &static MOSuggestionCollectionViewCell.paddingTitle;
}

void *MOSuggestionCollectionViewCell.paddingSubTitle.unsafeMutableAddressor()
{
  return &static MOSuggestionCollectionViewCell.paddingSubTitle;
}

Swift::String __swiftcall Date.getFullDateNumber()()
{
  uint64_t v0;
  void *v1;
  Swift::String result;

  v0 = Date.getFullDateNumber()(&one-time initialization token for fullDateFormatter, (void **)&static MODateFormatter.fullDateFormatter);
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

uint64_t *MOSuggestionCollectionViewCellConstants.ONE_DAY.unsafeMutableAddressor()
{
  if (one-time initialization token for ONE_DAY != -1)
    swift_once(&one-time initialization token for ONE_DAY, one-time initialization function for ONE_DAY);
  return &static MOSuggestionCollectionViewCellConstants.ONE_DAY;
}

Swift::String __swiftcall Date.getRelativeDate()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  void (*v18)(char *, char *, uint64_t);
  void (*v19)(char *, uint64_t);
  void (*v20)(char *, uint64_t);
  char v21;
  char *v22;
  void *v23;
  Class v24;
  NSDate v25;
  id v26;
  void *v27;
  Class isa;
  id v29;
  uint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  Class v35;
  id v36;
  uint64_t v37;
  void *v38;
  void *v39;
  double v40;
  void *v41;
  char v42;
  __n128 v43;
  void *v44;
  void *v45;
  uint64_t v46;
  void *v47;
  Swift::String result;
  double v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  char *v52;

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v49 - v7;
  v9 = type metadata accessor for Calendar(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v49 - v15;
  static Calendar.current.getter(v14);
  v17 = ((uint64_t (*)())Calendar.isDateInToday(_:))();
  v18 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v52 = v16;
  v18(v13, v16, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v8, v1, v2);
  if ((v17 & 1) == 0)
  {
    v21 = Calendar.isDateInYesterday(_:)(v8);
    v19 = *(void (**)(char *, uint64_t))(v3 + 8);
    v19(v8, v2);
    v20 = *(void (**)(char *, uint64_t))(v10 + 8);
    v20(v13, v9);
    if ((v21 & 1) != 0)
      goto LABEL_4;
    v50 = v20;
    v51 = v9;
    if (one-time initialization token for dayNameFormatter != -1)
      swift_once(&one-time initialization token for dayNameFormatter, one-time initialization function for dayNameFormatter);
    v27 = (void *)static MODateFormatter.dayNameFormatter;
    isa = Date._bridgeToObjectiveC()().super.isa;
    v29 = objc_msgSend(v27, "stringFromDate:", isa);

    v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
    v32 = v31;

    v33 = (void *)static MODateFormatter.dayNameFormatter;
    static Date.now.getter(v34);
    v35 = Date._bridgeToObjectiveC()().super.isa;
    v19(v6, v2);
    v36 = objc_msgSend(v33, "stringFromDate:", v35);

    v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
    v39 = v38;

    v40 = fabs(Date.timeIntervalSinceNow.getter());
    v22 = v52;
    if (one-time initialization token for ONE_WEEK != -1)
    {
      v49 = v40;
      swift_once(&one-time initialization token for ONE_WEEK, one-time initialization function for ONE_WEEK);
      v40 = v49;
    }
    if (v40 >= *(double *)&static MOSuggestionCollectionViewCellConstants.ONE_WEEK)
    {
      v41 = v39;
      v20 = v50;
      v9 = v51;
    }
    else
    {
      v20 = v50;
      v9 = v51;
      if (v30 != v37 || (v41 = v32, v32 != v39))
      {
        v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v30, v32, v37, v39, 0);
        v43 = swift_bridgeObjectRelease(v39);
        if ((v42 & 1) == 0)
          goto LABEL_22;
        goto LABEL_18;
      }
    }
    swift_bridgeObjectRelease(v41);
LABEL_18:
    swift_bridgeObjectRelease(v32);
    if (one-time initialization token for fullDateFormatter != -1)
      swift_once(&one-time initialization token for fullDateFormatter, one-time initialization function for fullDateFormatter);
    v44 = (void *)static MODateFormatter.fullDateFormatter;
    v25.super.isa = Date._bridgeToObjectiveC()().super.isa;
    v26 = objc_msgSend(v44, "stringFromDate:", v25.super.isa);
    goto LABEL_21;
  }
  v19 = *(void (**)(char *, uint64_t))(v3 + 8);
  v19(v8, v2);
  v20 = *(void (**)(char *, uint64_t))(v10 + 8);
  v20(v13, v9);
LABEL_4:
  v22 = v52;
  if (one-time initialization token for relativeDateFormatter != -1)
    swift_once(&one-time initialization token for relativeDateFormatter, one-time initialization function for relativeDateFormatter);
  v23 = (void *)static MODateFormatter.relativeDateFormatter;
  v24 = Date._bridgeToObjectiveC()().super.isa;
  static Date.now.getter(v24);
  v25.super.isa = Date._bridgeToObjectiveC()().super.isa;
  v19(v6, v2);
  v26 = objc_msgSend(v23, "localizedStringForDate:relativeToDate:", v24, v25.super.isa);

LABEL_21:
  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v32 = v45;

LABEL_22:
  ((void (*)(char *, uint64_t, __n128))v20)(v22, v9, v43);
  v46 = v30;
  v47 = v32;
  result._object = v47;
  result._countAndFlagsBits = v46;
  return result;
}

void *MOSuggestionCollectionViewCell.reuseIdentifier.unsafeMutableAddressor()
{
  return &static MOSuggestionCollectionViewCell.reuseIdentifier;
}

void *MOSuggestionCollectionViewDateSectionHeaderView.reuseIdentifier.unsafeMutableAddressor()
{
  return &static MOSuggestionCollectionViewDateSectionHeaderView.reuseIdentifier;
}

void one-time initialization function for ONE_DAY()
{
  static MOSuggestionCollectionViewCellConstants.ONE_DAY = 0x40F5180000000000;
}

double static MOSuggestionCollectionViewCellConstants.ONE_DAY.getter()
{
  return static MOSuggestionSheetInterstitialViewConstants.BUTTON_BOTTOM_MARGIN_LANDSCAPE.getter(&one-time initialization token for ONE_DAY, (uint64_t)&static MOSuggestionCollectionViewCellConstants.ONE_DAY);
}

double one-time initialization function for ONE_WEEK()
{
  double result;

  if (one-time initialization token for ONE_DAY != -1)
    swift_once(&one-time initialization token for ONE_DAY, one-time initialization function for ONE_DAY);
  result = *(double *)&static MOSuggestionCollectionViewCellConstants.ONE_DAY * 7.0;
  *(double *)&static MOSuggestionCollectionViewCellConstants.ONE_WEEK = *(double *)&static MOSuggestionCollectionViewCellConstants.ONE_DAY
                                                                      * 7.0;
  return result;
}

uint64_t *MOSuggestionCollectionViewCellConstants.ONE_WEEK.unsafeMutableAddressor()
{
  if (one-time initialization token for ONE_WEEK != -1)
    swift_once(&one-time initialization token for ONE_WEEK, one-time initialization function for ONE_WEEK);
  return &static MOSuggestionCollectionViewCellConstants.ONE_WEEK;
}

double static MOSuggestionCollectionViewCellConstants.ONE_WEEK.getter()
{
  return static MOSuggestionSheetInterstitialViewConstants.BUTTON_BOTTOM_MARGIN_LANDSCAPE.getter(&one-time initialization token for ONE_WEEK, (uint64_t)&static MOSuggestionCollectionViewCellConstants.ONE_WEEK);
}

unint64_t static MOSuggestionCollectionViewCell.reuseIdentifier.getter()
{
  return 0xD00000000000001ELL;
}

void *MOSuggestionCollectionViewCell.titleBaselineOffset.unsafeMutableAddressor()
{
  return &static MOSuggestionCollectionViewCell.titleBaselineOffset;
}

void *MOSuggestionCollectionViewCell.subtitleBaselineOffset.unsafeMutableAddressor()
{
  return &static MOSuggestionCollectionViewCell.subtitleBaselineOffset;
}

double static MOSuggestionCollectionViewCell.paddingSubTitle.getter()
{
  return 1.0;
}

id closure #1 in variable initialization expression of MOSuggestionCollectionViewCell.titleLabel()
{
  return closure #1 in variable initialization expression of MOSuggestionCollectionViewCell.titleLabel((SEL *)&selRef_labelColor);
}

id closure #1 in variable initialization expression of MOSuggestionCollectionViewCell.subtitleLabel()
{
  return closure #1 in variable initialization expression of MOSuggestionCollectionViewCell.titleLabel((SEL *)&selRef_secondaryLabelColor);
}

id closure #1 in variable initialization expression of MOSuggestionCollectionViewCell.titleLabel(SEL *a1)
{
  id v2;
  id v3;

  v2 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v2, "setLineBreakMode:", 4);
  objc_msgSend(v2, "setNumberOfLines:", 2);
  v3 = objc_msgSend((id)objc_opt_self(UIColor), *a1);
  objc_msgSend(v2, "setTextColor:", v3);

  objc_msgSend(v2, "setTextAlignment:", 4);
  objc_msgSend(v2, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v2, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityExtraExtraLarge);
  return v2;
}

uint64_t key path setter for MOSuggestionCollectionViewCell.accessoryButtonAction : MOSuggestionCollectionViewCell(uint64_t *a1, _QWORD **a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t (*)(), uint64_t, __n128);
  __n128 v7;

  v3 = *a1;
  v4 = a1[1];
  v5 = swift_allocObject(&unk_1001ECB88, 32, 7);
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = v4;
  v6 = *(uint64_t (**)(uint64_t (*)(), uint64_t, __n128))((swift_isaMask & **a2) + 0xB8);
  v7 = swift_retain(v4);
  return v6(partial apply for thunk for @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> (), v5, v7);
}

uint64_t MOSuggestionCollectionViewCell.accessoryButtonAction.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_accessoryButtonAction);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_accessoryButtonAction, v4, 0, 0);
  v2 = *v1;
  swift_retain(v1[1]);
  return v2;
}

uint64_t MOSuggestionCollectionViewCell.accessoryButtonAction.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, __n128);
  __n128 v10;
  _BYTE v12[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_accessoryButtonAction);
  swift_beginAccess(v2 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_accessoryButtonAction, v12, 1, 0);
  v6 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  swift_retain(a2);
  swift_release(v6);
  v7 = *v5;
  v8 = v5[1];
  v9 = *(void (**)(uint64_t, uint64_t, __n128))((swift_isaMask & **(_QWORD **)(v2
                                                                                      + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_journalButton))
                                                       + 0x68);
  v10 = swift_retain(v8);
  v9(v7, v8, v10);
  return swift_release(a2);
}

void (*MOSuggestionCollectionViewCell.accessoryButtonAction.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_accessoryButtonAction;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return MOSuggestionCollectionViewCell.accessoryButtonAction.modify;
}

void MOSuggestionCollectionViewCell.accessoryButtonAction.modify(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, __n128);
  __n128 v9;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = v3[3];
    v5 = (uint64_t *)(v4 + v3[4]);
    v6 = *v5;
    v7 = v5[1];
    v8 = *(void (**)(uint64_t, uint64_t, __n128))((swift_isaMask & **(_QWORD **)(v4
                                                                                        + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_journalButton))
                                                         + 0x68);
    v9 = swift_retain(v7);
    v8(v6, v7, v9);
  }
  free(v3);
}

void *MOSuggestionCollectionViewCell.gridViewHeightAnchor.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_gridViewHeightAnchor);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_gridViewHeightAnchor, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void MOSuggestionCollectionViewCell.gridViewHeightAnchor.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_gridViewHeightAnchor);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*MOSuggestionCollectionViewCell.gridViewHeightAnchor.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_gridViewHeightAnchor, a1, 33, 0);
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

double MOSuggestionCollectionViewCell.heightMultiplier.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_heightMultiplier;
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_heightMultiplier, v3, 0, 0);
  return *(double *)v1;
}

void MOSuggestionCollectionViewCell.heightMultiplier.setter(double a1)
{
  _QWORD *v1;
  double *v3;
  uint64_t v4;
  double v5;
  uint64_t (*v6)(uint64_t);
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  _BYTE v16[24];

  v3 = (double *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_heightMultiplier);
  v4 = swift_beginAccess((char *)v1 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_heightMultiplier, v16, 1, 0);
  v5 = *v3;
  *v3 = a1;
  if (v5 != a1)
  {
    v6 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0xC8);
    v7 = (void *)v6(v4);
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v7, "setActive:", 0);

    }
    v9 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_assetGridView);
    v10 = objc_msgSend(v9, "heightAnchor");
    v11 = objc_msgSend(v9, "widthAnchor");
    v12 = objc_msgSend(v10, "constraintEqualToAnchor:multiplier:", v11, *v3);

    v13 = (*(uint64_t (**)(id))((swift_isaMask & *v1) + 0xD0))(v12);
    v14 = (void *)v6(v13);
    if (v14)
    {
      v15 = v14;
      objc_msgSend(v14, "setActive:", 1);

    }
  }
}

void (*MOSuggestionCollectionViewCell.heightMultiplier.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_heightMultiplier;
  v3[4] = v1;
  v3[5] = v4;
  v5 = (_QWORD *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  v3[3] = *v5;
  return MOSuggestionCollectionViewCell.heightMultiplier.modify;
}

void MOSuggestionCollectionViewCell.heightMultiplier.modify(uint64_t a1, char a2)
{
  _QWORD *v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t (*v7)(void);
  void *v8;
  void *v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;

  v2 = *(_QWORD **)a1;
  v3 = *(double *)(*(_QWORD *)a1 + 24);
  if ((a2 & 1) != 0)
  {
    MOSuggestionCollectionViewCell.heightMultiplier.setter(v3);
  }
  else
  {
    v5 = v2[4];
    v4 = v2[5];
    v6 = *(double *)(v5 + v4);
    *(double *)(v5 + v4) = v3;
    if (v6 != v3)
    {
      v7 = *(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)v2[4]) + 0xC8);
      v8 = (void *)v7();
      if (v8)
      {
        v9 = v8;
        objc_msgSend(v8, "setActive:", 0);

      }
      v10 = (_QWORD *)v2[4];
      v11 = v2[5];
      v12 = *(void **)((char *)v10 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_assetGridView);
      v13 = objc_msgSend(v12, "heightAnchor");
      v14 = objc_msgSend(v12, "widthAnchor");
      v15 = objc_msgSend(v13, "constraintEqualToAnchor:multiplier:", v14, *(double *)((char *)v10 + v11));

      v16 = (*(uint64_t (**)(id))((swift_isaMask & *v10) + 0xD0))(v15);
      v17 = (void *)((uint64_t (*)(uint64_t))v7)(v16);
      if (v17)
      {
        v18 = v17;
        objc_msgSend(v17, "setActive:", 1);

      }
    }
  }
  free(v2);
}

void MOSuggestionCollectionViewCell.cellViewModel.didset()
{
  _QWORD *v0;
  _QWORD *v1;
  char *v2;
  uint64_t Strong;
  unsigned __int8 *v4;
  void *v5;
  void (*v6)(void);
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  id v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  id v22;
  id v23;
  char v24;
  uint64_t (*v25)(void);
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  __n128 v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  __n128 v47;
  uint64_t (*v48)(void);
  uint64_t v49;
  uint64_t v50;
  char v51[24];

  v1 = v0;
  v2 = (char *)v0 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_cellViewModel;
  swift_beginAccess((char *)v0 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_cellViewModel, v51, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v4 = (unsigned __int8 *)Strong;
    v5 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_titleLabel);
    v6 = *(void (**)(void))(*(_QWORD *)Strong + 176);
    v6();
    v8 = v7;
    v9 = String._bridgeToObjectiveC()();
    objc_msgSend(v5, "setText:", v9, swift_bridgeObjectRelease(v8).n128_f64[0]);

    v10 = specialized static MOSuggestionTheme.Fonts.footnoteEmphShortFont()();
    UILabel.setLineSpacing(lineSpacing:lineHeightMultiple:baselineOffset:font:)(v10, 0.0, 0.95, 0.0);

    v11 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_subtitleLabel);
    (*(void (**)(void))(*(_QWORD *)v4 + 376))();
    v13 = v12;
    v14 = String._bridgeToObjectiveC()();
    objc_msgSend(v11, "setText:", v14, swift_bridgeObjectRelease(v13).n128_f64[0]);

    v15 = specialized static MOSuggestionTheme.Fonts.footnoteShortFont()();
    UILabel.setLineSpacing(lineSpacing:lineHeightMultiple:baselineOffset:font:)(v15, 0.0, 0.95, 0.0);

    v16 = (*(uint64_t (**)(void))(*(_QWORD *)v4 + 224))();
    v17 = (*(uint64_t (**)(_QWORD))((swift_isaMask & *v1) + 0x188))(v16 & 1);
    v18 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 248))(v17);
    v19 = (*(uint64_t (**)(_QWORD))((swift_isaMask & *v1) + 0x190))(v18 & 1);
    v20 = *(_QWORD **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_assetGridView);
    v21 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 392))(v19);
    (*(void (**)(uint64_t))((swift_isaMask & *v20) + 0x110))(v21);
    v22 = objc_msgSend(v1, "traitCollection");
    v23 = objc_msgSend(v22, "preferredContentSizeCategory");

    v24 = static UIContentSizeCategory.> infix(_:_:)(v23, UIContentSizeCategoryLarge);
    v25 = *(uint64_t (**)(void))(*(_QWORD *)v4 + 400);
    if ((v25() & 1) != 0
      && ((v26 = 0.25, (v24 & 1) == 0) || ((*(uint64_t (**)(void))(*(_QWORD *)v4 + 328))() & 1) != 0))
    {
      v27 = 0;
    }
    else
    {
      v27 = 1;
      v26 = 0.5;
    }
    (*(void (**)(double))((swift_isaMask & *v1) + 0xE8))(v26);
    v28 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v20) + 0x140))(v27);
    v29 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x198))(v28);
    v30 = (_QWORD *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x110))(v29);
    (*(void (**)(_QWORD))((swift_isaMask & *v30) + 0x70))(v4[80]);

    (*(void (**)(_QWORD))((swift_isaMask & **(_QWORD **)((char *)v1
                                                                  + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_journalButton))
                                   + 0x98))(v4[80]);
    if (serverManager._clientConnections != (NSMutableDictionary *)-1)
      swift_once(&serverManager._clientConnections, one-time initialization function for shared);
    v31 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v31, (uint64_t)static MOAngelLogger.shared);
    swift_retain_n(v4);
    v32 = v1;
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = swift_slowAlloc(28, -1);
      v48 = v25;
      v36 = swift_slowAlloc(32, -1);
      v50 = v36;
      *(_DWORD *)v35 = 136315650;
      v37 = ((uint64_t (*)(void))v6)();
      v39 = v38;
      v49 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v38, &v50);
      v40 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v35 + 4);
      swift_release_n(v4, v40);
      v41 = swift_bridgeObjectRelease(v39);
      *(_WORD *)(v35 + 12) = 2048;
      v49 = (*(double (**)(__n128))((swift_isaMask & *v32) + 0xE0))(v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v35 + 14);

      *(_WORD *)(v35 + 22) = 1024;
      LOBYTE(v39) = v48();
      swift_release(v4);
      LODWORD(v49) = v39 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, (char *)&v49 + 4, v35 + 24);
      swift_release(v4);
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "[MOSuggestionCollectionViewCell] cellViewModel set, title=%s, heightMultiplier=%f, isCondensedHeight=%{BOOL}d", (uint8_t *)v35, 0x1Cu);
      swift_arrayDestroy(v36, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v36, -1, -1);
      swift_slowDealloc(v35, -1, -1);
      swift_release(v4);

    }
    else
    {

      swift_release_n(v4, v47);
    }
  }
  else
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1)
      swift_once(&serverManager._clientConnections, one-time initialization function for shared);
    v42 = type metadata accessor for Logger(0);
    v43 = __swift_project_value_buffer(v42, (uint64_t)static MOAngelLogger.shared);
    v44 = Logger.logObject.getter(v43);
    v45 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v46 = 0;
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "[MOSuggestionCollectionViewCell] cellViewModel cleared or nil", v46, 2u);
      swift_slowDealloc(v46, -1, -1);
    }

  }
}

uint64_t MOSuggestionCollectionViewCell.cellViewModel.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_cellViewModel;
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_cellViewModel, v3, 0, 0);
  return swift_weakLoadStrong(v1);
}

double MOSuggestionCollectionViewCell.cellViewModel.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double result;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_cellViewModel;
  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_cellViewModel, v5, 1, 0);
  swift_weakAssign(v3, a1);
  MOSuggestionCollectionViewCell.cellViewModel.didset();
  *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  return result;
}

void (*MOSuggestionCollectionViewCell.cellViewModel.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_cellViewModel;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  v3[3] = swift_weakLoadStrong(v5);
  return MOSuggestionCollectionViewCell.cellViewModel.modify;
}

void MOSuggestionCollectionViewCell.cellViewModel.modify(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  swift_weakAssign(*(_QWORD *)(*(_QWORD *)a1 + 32) + *(_QWORD *)(*(_QWORD *)a1 + 40), v4);
  if ((a2 & 1) != 0)
  {
    swift_release(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_release(v4);
    MOSuggestionCollectionViewCell.cellViewModel.didset();
  }
  free(v3);
}

id MOSuggestionCollectionViewCell.photoMemoryBanner.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_photoMemoryBanner);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_photoMemoryBanner, v3, 0, 0);
  return *v1;
}

void MOSuggestionCollectionViewCell.photoMemoryBanner.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_photoMemoryBanner);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*MOSuggestionCollectionViewCell.photoMemoryBanner.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_photoMemoryBanner, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionCollectionViewCell.bannerHiddenConstraints.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter(&OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_bannerHiddenConstraints);
}

uint64_t MOSuggestionCollectionViewCell.bannerHiddenConstraints.setter(uint64_t a1)
{
  return MOSuggestionAssetMapsClusterer.skipRows.setter(a1, &OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_bannerHiddenConstraints);
}

uint64_t (*MOSuggestionCollectionViewCell.bannerHiddenConstraints.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_bannerHiddenConstraints, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionCollectionViewCell.bannerPresentConstraints.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter(&OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_bannerPresentConstraints);
}

uint64_t MOSuggestionCollectionViewCell.bannerPresentConstraints.setter(uint64_t a1)
{
  return MOSuggestionAssetMapsClusterer.skipRows.setter(a1, &OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_bannerPresentConstraints);
}

uint64_t (*MOSuggestionCollectionViewCell.bannerPresentConstraints.modify(uint64_t a1))()
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_bannerPresentConstraints, a1, 33, 0);
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

char *MOSuggestionCollectionViewCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  objc_class *v19;
  _BYTE *v20;
  _QWORD *v21;
  id v22;
  void (__swiftcall **v23)();
  uint64_t v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  void (*v28)(uint64_t);
  char *v29;
  _QWORD *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  char *v36;
  id v37;
  uint64_t v38;
  void *v39;
  id v40;
  void *v41;
  char *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char v49[24];
  objc_super v50;
  objc_super v51;

  v9 = OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_assetGridView;
  type metadata accessor for MOSuggestionSheetAssetGridView();
  v10 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "init");
  v12 = OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_titleLabel;
  *(_QWORD *)&v11[v12] = closure #1 in variable initialization expression of MOSuggestionCollectionViewCell.titleLabel((SEL *)&selRef_labelColor);
  v13 = OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_gridContainerView;
  v14 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v15 = objc_msgSend(v14, "traitCollection");
  v16 = objc_msgSend(v15, "userInterfaceStyle");

  specialized static MOSuggestionTheme.Styles.styleViewAsPlatter(view:traitCollection:)(v14, (uint64_t)v16);
  *(_QWORD *)&v11[v13] = v14;
  v17 = OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_subtitleLabel;
  *(_QWORD *)&v11[v17] = closure #1 in variable initialization expression of MOSuggestionCollectionViewCell.titleLabel((SEL *)&selRef_secondaryLabelColor);
  v18 = OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_journalButton;
  v19 = (objc_class *)type metadata accessor for MOSuggestionSheetJournalButton();
  v20 = objc_allocWithZone(v19);
  v21 = &v20[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionSheetJournalButton_buttonTapped];
  *v21 = 0;
  v21[1] = 0;
  v20[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionSheetJournalButton_singleCellAsset] = 0;
  v51.receiver = v20;
  v51.super_class = v19;
  v22 = objc_msgSendSuper2(&v51, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  MOSuggestionSheetJournalButton.sharedInit()();

  *(_QWORD *)&v11[v18] = v22;
  v23 = (void (__swiftcall **)())&v11[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_accessoryButtonAction];
  *v23 = MOSuggestionInterstitialExpandableListViewCellConstants.init();
  v23[1] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_gridViewHeightAnchor] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_heightMultiplier] = 0x3FE0000000000000;
  swift_weakInit(&v11[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_cellViewModel]);
  v24 = OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_photoMemoryBanner;
  type metadata accessor for MOSuggestionPhotoMemoryBanner();
  *(_QWORD *)&v11[v24] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_bannerHiddenConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v11[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_bannerPresentConstraints] = _swiftEmptyArrayStorage;

  v50.receiver = v11;
  v50.super_class = (Class)type metadata accessor for MOSuggestionCollectionViewCell();
  v25 = (char *)objc_msgSendSuper2(&v50, "initWithFrame:", a1, a2, a3, a4);
  v26 = OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_assetGridView;
  v27 = *(_QWORD **)&v25[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_assetGridView];
  v28 = *(void (**)(uint64_t))((swift_isaMask & *v27) + 0x128);
  v29 = v25;
  v30 = v27;
  v28(1);

  v31 = objc_msgSend(v29, "contentView");
  objc_msgSend(v31, "addSubview:", *(_QWORD *)&v25[v26]);

  v32 = objc_msgSend(v29, "contentView");
  objc_msgSend(v32, "addSubview:", *(_QWORD *)&v29[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_titleLabel]);

  v33 = objc_msgSend(v29, "contentView");
  objc_msgSend(v33, "addSubview:", *(_QWORD *)&v29[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_subtitleLabel]);

  v34 = objc_msgSend(v29, "contentView");
  objc_msgSend(v34, "addSubview:", *(_QWORD *)&v29[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_journalButton]);

  v35 = objc_msgSend(v29, "contentView");
  v36 = &v29[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_photoMemoryBanner];
  objc_msgSend(v35, "addSubview:", *(_QWORD *)&v29[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_photoMemoryBanner], swift_beginAccess(&v29[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_photoMemoryBanner], v49, 0, 0).n128_f64[0]);

  v37 = objc_msgSend(v29, "contentView");
  v38 = OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_gridContainerView;
  objc_msgSend(v37, "addSubview:", *(_QWORD *)&v29[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_gridContainerView]);

  v39 = *(void **)&v29[v38];
  objc_msgSend(v39, "addSubview:", *(_QWORD *)v36);
  v40 = objc_msgSend(v39, "addSubview:", *(_QWORD *)&v25[v26]);
  (*(void (**)(id))((swift_isaMask & *(_QWORD *)v29) + 0x160))(v40);
  v41 = (void *)objc_opt_self(UIColor);
  v42 = v29;
  v43 = objc_msgSend(v41, "clearColor");
  objc_msgSend(v42, "setBackgroundColor:", v43);

  objc_msgSend(v42, "setClipsToBounds:", 0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UITraitDefinition.Type>);
  v45 = swift_allocObject(v44, 48, 7);
  *(_OWORD *)(v45 + 16) = xmmword_10019ED20;
  *(_QWORD *)(v45 + 32) = type metadata accessor for UITraitUserInterfaceStyle(0);
  *(_QWORD *)(v45 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  v46 = v42;
  v47 = UIView.registerForTraitChanges(_:action:)(v45, "handleTraitChange");
  swift_unknownObjectRelease(v47);
  swift_bridgeObjectRelease(v45);

  return v46;
}

Swift::Void __swiftcall MOSuggestionCollectionViewCell.handleTraitChange()()
{
  char *v0;
  void *v1;
  id v2;
  id v3;

  v1 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_gridContainerView];
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = objc_msgSend(v2, "userInterfaceStyle");

  specialized static MOSuggestionTheme.Styles.styleViewAsPlatter(view:traitCollection:)(v1, (uint64_t)v3);
}

Swift::Void __swiftcall MOSuggestionCollectionViewCell.setupConstraints()()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t (*v21)(void);
  void *v22;
  id v23;
  id v24;
  id v25;
  uint64_t (*v26)(_QWORD *);
  void (*v27)(_QWORD *, _QWORD);
  _QWORD *v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  uint64_t (*v38)(_QWORD *, _QWORD);
  _QWORD *v39;
  _QWORD *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  char **v51;
  void *v52;
  id v53;
  void *v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  void (*v61)(_QWORD *, _QWORD);
  _QWORD *v62;
  _QWORD *v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  id v67;
  void *v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  void *v74;
  id v75;
  id v76;
  id v77;
  id v78;
  char *v79;
  id v80;
  void *v81;
  id v82;
  id v83;
  id v84;
  id v85;
  void *v86;
  id v87;
  id v88;
  id v89;
  uint64_t v90;
  void *v91;
  void *v92;
  uint64_t v93;
  char *v94;
  void *v95;
  char **v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  void *v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  uint64_t v123;
  uint64_t v124;
  Class isa;
  uint64_t v126;
  void *v127;
  id v128;
  id v129;
  id v130;
  id v131;
  id v132;
  id v133;
  id v134;
  id v135;
  id v136;
  id v137;
  id v138;
  id v139;
  uint64_t v140;
  uint64_t v141;
  Class v142;
  uint64_t v143;
  id v144;
  _QWORD v145[4];

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_gridContainerView];
  v3 = objc_msgSend(v2, "superview");
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v5 = objc_msgSend(v2, "topAnchor");
    v6 = objc_msgSend(v4, "topAnchor");
    v7 = objc_msgSend(v5, "constraintEqualToAnchor:", v6);

    objc_msgSend(v7, "setConstant:", 4.0);
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v8, "setActive:", 1);

    }
  }
  v9 = objc_msgSend(v2, "superview");
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v11 = objc_msgSend(v2, "leadingAnchor");
    v12 = objc_msgSend(v10, "leadingAnchor");
    v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

    objc_msgSend(v13, "setConstant:", 4.0);
    if (v13)
    {
      v14 = v13;
      objc_msgSend(v14, "setActive:", 1);

    }
  }
  v15 = objc_msgSend(v2, "superview");
  if (v15)
  {
    v16 = v15;
    objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v17 = objc_msgSend(v2, "trailingAnchor");
    v18 = objc_msgSend(v16, "trailingAnchor");
    v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

    objc_msgSend(v19, "setConstant:", -4.0);
    if (v19)
    {
      v20 = v19;
      objc_msgSend(v20, "setActive:", 1);

    }
  }
  v21 = *(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)v1) + 0x110);
  v22 = (void *)v21();
  v23 = objc_msgSend(v22, "topAnchor");

  v24 = objc_msgSend(v2, "topAnchor");
  v25 = objc_msgSend(v23, "constraintEqualToAnchor:constant:", v24, 4.0);

  v26 = *(uint64_t (**)(_QWORD *))((swift_isaMask & *(_QWORD *)v1) + 0x150);
  v27 = (void (*)(_QWORD *, _QWORD))v26(v145);
  v29 = v28;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v27);
  v31 = *(_QWORD *)((*v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v30 = *(_QWORD *)((*v29 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v31 >= v30 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1);
  v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v25);
  specialized Array._endMutation()(v32);
  v27(v145, 0);
  v33 = *(void **)&v1[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_assetGridView];
  v34 = objc_msgSend(v33, "topAnchor");
  v35 = (void *)v21();
  v36 = objc_msgSend(v35, "bottomAnchor");

  v37 = objc_msgSend(v34, "constraintEqualToAnchor:", v36);
  v38 = (uint64_t (*)(_QWORD *, _QWORD))v26(v145);
  v40 = v39;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v38);
  v42 = *(_QWORD *)((*v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v41 = *(_QWORD *)((*v40 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v42 >= v41 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v41 > 1, v42 + 1, 1);
  v43 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v42, v37);
  specialized Array._endMutation()(v43);
  v44 = v38(v145, 0);
  v45 = (void *)((uint64_t (*)(uint64_t))v21)(v44);
  v46 = objc_msgSend(v45, "superview");
  if (v46)
  {
    v47 = v46;
    objc_msgSend(v45, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v48 = objc_msgSend(v45, "leadingAnchor");
    v49 = objc_msgSend(v47, "leadingAnchor");
    v50 = objc_msgSend(v48, "constraintEqualToAnchor:", v49);

    objc_msgSend(v50, "setConstant:", 4.0);
    if (v50)
    {
      v50 = v50;
      objc_msgSend(v50, "setActive:", 1);

      v45 = v50;
    }
    v51 = &selRef_genericAvatarFor_pointSize_completion_;

  }
  else
  {
    v50 = 0;
    v47 = v45;
    v51 = &selRef_genericAvatarFor_pointSize_completion_;
  }

  v52 = (void *)v21();
  v53 = objc_msgSend(v52, "superview");
  if (v53)
  {
    v54 = v53;
    objc_msgSend(v52, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v55 = objc_msgSend(v52, "trailingAnchor");
    v56 = objc_msgSend(v54, "trailingAnchor");
    v57 = objc_msgSend(v55, "constraintEqualToAnchor:", v56);

    objc_msgSend(v57, "setConstant:", -4.0);
    if (v57)
    {
      v57 = v57;
      objc_msgSend(v57, "setActive:", 1);

      v52 = v57;
    }
    v51 = &selRef_genericAvatarFor_pointSize_completion_;

  }
  else
  {
    v57 = 0;
    v54 = v52;
  }

  v58 = objc_msgSend(v33, v51[98]);
  v59 = objc_msgSend(v2, v51[98]);
  v60 = objc_msgSend(v58, "constraintEqualToAnchor:", v59);

  v61 = (void (*)(_QWORD *, _QWORD))(*(uint64_t (**)(_QWORD *))((swift_isaMask & *(_QWORD *)v1)
                                                                                   + 0x138))(v145);
  v63 = v62;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v61);
  v65 = *(_QWORD *)((*v63 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v64 = *(_QWORD *)((*v63 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v65 >= v64 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v64 > 1, v65 + 1, 1);
  v66 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v65, v60);
  specialized Array._endMutation()(v66);
  v61(v145, 0);
  v67 = objc_msgSend(v33, "superview");
  if (v67)
  {
    v68 = v67;
    objc_msgSend(v33, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v69 = objc_msgSend(v33, "leadingAnchor");
    v70 = objc_msgSend(v68, "leadingAnchor");
    v71 = objc_msgSend(v69, "constraintEqualToAnchor:", v70);

    objc_msgSend(v71, "setConstant:", 0.0);
    if (v71)
    {
      v72 = v71;
      objc_msgSend(v72, "setActive:", 1);

    }
  }
  v73 = objc_msgSend(v33, "superview");
  if (v73)
  {
    v74 = v73;
    objc_msgSend(v33, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v75 = objc_msgSend(v33, "trailingAnchor");
    v76 = objc_msgSend(v74, "trailingAnchor");
    v77 = objc_msgSend(v75, "constraintEqualToAnchor:", v76);

    objc_msgSend(v77, "setConstant:", 0.0);
    if (v77)
    {
      v78 = v77;
      objc_msgSend(v78, "setActive:", 1);

    }
  }
  v79 = v1;
  v80 = objc_msgSend(v33, "superview");
  if (v80)
  {
    v81 = v80;
    objc_msgSend(v33, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v82 = objc_msgSend(v33, "bottomAnchor");
    v83 = objc_msgSend(v81, "bottomAnchor");
    v84 = objc_msgSend(v82, "constraintEqualToAnchor:", v83);

    if (v84)
    {
      objc_msgSend(v84, "setConstant:", -0.0);
      v85 = v84;
      objc_msgSend(v85, "setActive:", 1);

    }
  }
  v86 = v2;
  v87 = objc_msgSend(v33, "heightAnchor");
  v88 = objc_msgSend(v33, "widthAnchor");
  (*(void (**)(void))((swift_isaMask & *(_QWORD *)v79) + 0xE0))();
  v89 = objc_msgSend(v87, "constraintEqualToAnchor:multiplier:", v88);

  v90 = (*(uint64_t (**)(id))((swift_isaMask & *(_QWORD *)v79) + 0xD0))(v89);
  v91 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *(_QWORD *)v79) + 0xC8))(v90);
  if (v91)
  {
    v92 = v91;
    objc_msgSend(v91, "setActive:", 1);

  }
  v144 = (id)objc_opt_self(NSLayoutConstraint);
  v143 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v93 = swift_allocObject(v143, 104, 7);
  *(_OWORD *)(v93 + 16) = xmmword_10019EF60;
  v94 = v79;
  v95 = *(void **)&v79[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_titleLabel];
  v96 = v51;
  v97 = objc_msgSend(v95, v51[98]);
  v98 = objc_msgSend(v86, "bottomAnchor");
  v99 = objc_msgSend(v97, "constraintEqualToAnchor:constant:", v98, 8.0);

  *(_QWORD *)(v93 + 32) = v99;
  v100 = objc_msgSend(v95, "leadingAnchor");
  v101 = objc_msgSend(v94, "leadingAnchor");
  v102 = objc_msgSend(v100, "constraintEqualToAnchor:constant:", v101, 5.0);

  *(_QWORD *)(v93 + 40) = v102;
  v103 = objc_msgSend(v95, "trailingAnchor");
  v104 = *(void **)&v94[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_journalButton];
  v105 = objc_msgSend(v104, "leadingAnchor");
  v106 = objc_msgSend(v103, "constraintEqualToAnchor:constant:", v105, -4.0);

  *(_QWORD *)(v93 + 48) = v106;
  v107 = objc_msgSend(v104, v96[98]);
  v108 = objc_msgSend(v86, "bottomAnchor");
  v109 = objc_msgSend(v107, "constraintEqualToAnchor:constant:", v108, 10.0);

  *(_QWORD *)(v93 + 56) = v109;
  v110 = objc_msgSend(v104, "leadingAnchor");
  v111 = objc_msgSend(v95, "trailingAnchor");
  v112 = objc_msgSend(v110, "constraintEqualToAnchor:", v111);

  *(_QWORD *)(v93 + 64) = v112;
  v113 = objc_msgSend(v104, "trailingAnchor");
  v114 = objc_msgSend(v86, "trailingAnchor");
  v115 = objc_msgSend(v113, "constraintEqualToAnchor:constant:", v114, -3.0);

  *(_QWORD *)(v93 + 72) = v115;
  v116 = objc_msgSend(v104, "heightAnchor");
  v117 = objc_msgSend(v104, "widthAnchor");
  v118 = objc_msgSend(v116, "constraintEqualToAnchor:", v117);

  *(_QWORD *)(v93 + 80) = v118;
  v119 = objc_msgSend(v104, "widthAnchor");
  v120 = objc_msgSend(v119, "constraintGreaterThanOrEqualToConstant:", 27.0);

  *(_QWORD *)(v93 + 88) = v120;
  v121 = objc_msgSend(v104, "widthAnchor");
  v122 = objc_msgSend(v121, "constraintLessThanOrEqualToConstant:", 40.0);

  *(_QWORD *)(v93 + 96) = v122;
  v145[0] = v93;
  specialized Array._endMutation()(v123);
  v124 = v145[0];
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v144, "activateConstraints:", isa, swift_bridgeObjectRelease(v124).n128_f64[0]);

  v126 = swift_allocObject(v143, 64, 7);
  *(_OWORD *)(v126 + 16) = xmmword_10019ED40;
  v127 = *(void **)&v94[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_subtitleLabel];
  v128 = objc_msgSend(v127, "topAnchor");
  v129 = objc_msgSend(v95, "bottomAnchor");
  v130 = objc_msgSend(v128, "constraintEqualToAnchor:constant:", v129, 1.0);

  *(_QWORD *)(v126 + 32) = v130;
  v131 = objc_msgSend(v127, "leadingAnchor");
  v132 = objc_msgSend(v95, "leadingAnchor");
  v133 = objc_msgSend(v131, "constraintEqualToAnchor:", v132);

  *(_QWORD *)(v126 + 40) = v133;
  v134 = objc_msgSend(v127, "trailingAnchor");
  v135 = objc_msgSend(v95, "trailingAnchor");
  v136 = objc_msgSend(v134, "constraintEqualToAnchor:", v135);

  *(_QWORD *)(v126 + 48) = v136;
  v137 = objc_msgSend(v127, "bottomAnchor");
  v138 = objc_msgSend(v94, "bottomAnchor");
  v139 = objc_msgSend(v137, "constraintLessThanOrEqualToAnchor:", v138);

  *(_QWORD *)(v126 + 56) = v139;
  v145[0] = v126;
  specialized Array._endMutation()(v140);
  v141 = v145[0];
  v142 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v144, "activateConstraints:", v142, swift_bridgeObjectRelease(v141).n128_f64[0]);

}

Swift::Void __swiftcall MOSuggestionCollectionViewCell.prepareForReuse()()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  NSString v3;
  void *v4;
  NSString v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  objc_super v11;

  v1 = v0;
  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for MOSuggestionCollectionViewCell();
  objc_msgSendSuper2(&v11, "prepareForReuse");
  v2 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_titleLabel);
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setText:", v3);

  v4 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_subtitleLabel);
  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(v4, "setText:", v5);

  v6 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xF8))();
  if (v6)
  {
    v8 = v6;
    (*(void (**)(_QWORD))(*(_QWORD *)v6 + 304))(0);
    v7 = swift_release(v8);
  }
  (*(void (**)(_QWORD, __n128))((swift_isaMask & *v1) + 0x100))(0, v7);
  v9 = *(_QWORD **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_assetGridView);
  (*(void (**)(_QWORD, _QWORD, _QWORD))((swift_isaMask & *v9) + 0x158))(0, 0, 0);
  v10 = (*(uint64_t (**)(_QWORD))((swift_isaMask & *v9) + 0x188))(0);
  (*(void (**)(uint64_t, double))((swift_isaMask & *v1) + 0xE8))(v10, 0.5);
}

void MOSuggestionCollectionViewCell.setAssetViewModels(_:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double *v23;
  uint64_t v24;
  uint64_t (*v25)(__n128);
  __n128 v26;
  uint64_t v27;
  uint64_t (*v28)(__n128);
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  void (*v32)(__n128);
  __n128 v33;
  void *v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSString v40;
  _BYTE v41[24];
  double *v42;

  v2 = v1;
  v4 = *(_QWORD **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_assetGridView);
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v24 = a1;
    else
      v24 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = _CocoaArrayWrapper.endIndex.getter(v24);
    if (v5)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease(a1);
    v23 = _swiftEmptyArrayStorage;
    goto LABEL_16;
  }
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v5)
    goto LABEL_15;
LABEL_3:
  v42 = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)(v5);
  if (v5 < 0)
  {
    __break(1u);
    return;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    v6 = 0;
    do
    {
      v7 = v6 + 1;
      v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a1);
      v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for MOWeakReference<MOSuggestionSheetAssetViewModel>);
      v10 = swift_allocObject(v9, 24, 7);
      v11 = swift_weakInit(v10 + 16);
      swift_beginAccess(v11, v41, 1, 0);
      swift_weakAssign(v10 + 16, v8);
      v12 = swift_unknownObjectRelease(v8);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v12);
      v13 = *((_QWORD *)v42 + 2);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v13);
      v14 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v10);
      specialized ContiguousArray._endMutation()(v14);
      v6 = v7;
    }
    while (v5 != v7);
  }
  else
  {
    v15 = (uint64_t *)(a1 + 32);
    do
    {
      v16 = *v15++;
      v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for MOWeakReference<MOSuggestionSheetAssetViewModel>);
      v18 = swift_allocObject(v17, 24, 7);
      v19 = swift_weakInit(v18 + 16);
      swift_beginAccess(v19, v41, 1, 0);
      v20 = swift_weakAssign(v18 + 16, v16);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v20);
      v21 = *((_QWORD *)v42 + 2);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v21);
      v22 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v18);
      specialized ContiguousArray._endMutation()(v22);
      --v5;
    }
    while (v5);
  }
  v23 = v42;
  swift_bridgeObjectRelease(a1);
LABEL_16:
  v25 = *(uint64_t (**)(__n128))((swift_isaMask & *v4) + 0x158);
  v26 = swift_bridgeObjectRetain(v23);
  v27 = v25(v26);
  v28 = *(uint64_t (**)(__n128))((swift_isaMask & *v2) + 0xF8);
  v29 = ((uint64_t (*)(uint64_t))v28)(v27);
  if (v29)
  {
    v31 = v29;
    v32 = *(void (**)(__n128))(*(_QWORD *)v29 + 304);
    v33 = swift_bridgeObjectRetain(a1);
    v32(v33);
    v30 = swift_release(v31);
  }
  v34 = *(void **)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_subtitleLabel);
  v35 = v28(v30);
  if (v35)
  {
    v37 = v35;
    (*(void (**)(uint64_t))(*(_QWORD *)v35 + 376))(v35);
    v39 = v38;
    swift_release(v37);
    v40 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v36 = swift_bridgeObjectRelease(v39).n128_u64[0];
  }
  else
  {
    v40 = 0;
  }
  objc_msgSend(v34, "setText:", v40, v36);

}

Swift::Void __swiftcall MOSuggestionCollectionViewCell.updateCell(with:)(Swift::OpaquePointer with)
{
  uint64_t v1;

  MOSuggestionCollectionViewCell.setAssetViewModels(_:)((uint64_t)with._rawValue);
  (*(void (**)(void))((swift_isaMask & **(_QWORD **)(v1
                                                   + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_assetGridView))
                    + 0x1C8))();
}

Swift::Void __swiftcall MOSuggestionCollectionViewCell.updateCell(with:index:)(Swift::OpaquePointer with, Swift::Int index)
{
  uint64_t v2;

  MOSuggestionCollectionViewCell.setAssetViewModels(_:)((uint64_t)with._rawValue);
  (*(void (**)(Swift::Int))((swift_isaMask & **(_QWORD **)(v2
                                                                    + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_assetGridView))
                                     + 0x1D0))(index);
}

uint64_t MOSuggestionCollectionViewCell.updateCell(with:index:)(uint64_t a1, unint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t (*v8)(_BYTE *, _QWORD);
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  double v21;
  NSString v22;
  uint64_t v23;
  uint64_t v24;
  char v25[24];
  _BYTE v26[32];

  v3 = v2;
  v6 = *(_QWORD **)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_assetGridView);
  v8 = (uint64_t (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))((swift_isaMask & *v6) + 0x160))(v26);
  if (*v7)
  {
    v9 = v7;
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for MOWeakReference<MOSuggestionSheetAssetViewModel>);
    v11 = swift_allocObject(v10, 24, 7);
    v12 = swift_weakInit(v11 + 16);
    swift_beginAccess(v12, v25, 1, 0);
    swift_weakAssign(v11 + 16, a1);
    v13 = *v9;
    swift_retain_n(a1);
    result = swift_isUniquelyReferenced_nonNull_bridgeObject(v13);
    *v9 = v13;
    if (!(_DWORD)result || v13 < 0 || (v13 & 0x4000000000000000) != 0)
    {
      result = specialized _ArrayBuffer._consumeAndCreateNew()(v13);
      v13 = result;
      *v9 = result;
    }
    if ((a2 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
    {
      v15 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 8 * a2 + 0x20);
      *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 8 * a2 + 0x20) = v11;
      swift_release(v15);
      specialized Array._endMutation()(v16);
      swift_release_n(a1, v17);
      goto LABEL_9;
    }
    __break(1u);
    return result;
  }
LABEL_9:
  v18 = v8(v26, 0);
  v19 = *(void **)((char *)v3 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_subtitleLabel);
  v20 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0xF8))(v18);
  v22 = (NSString)v20;
  if (v20)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v20 + 376))(v20);
    v24 = v23;
    swift_release(v22);
    v22 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v21 = swift_bridgeObjectRelease(v24).n128_u64[0];
  }
  objc_msgSend(v19, "setText:", v22, v21);

  return (*(uint64_t (**)(unint64_t))((swift_isaMask & *v6) + 0x1D0))(a2);
}

Swift::Void __swiftcall MOSuggestionCollectionViewCell.setAddedVisibility(applyAdded:)(Swift::Bool applyAdded)
{
  uint64_t v1;
  _BOOL8 v2;
  _QWORD *v3;

  v2 = applyAdded;
  v3 = *(_QWORD **)(v1 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_assetGridView);
  (*(void (**)(_QWORD))((swift_isaMask & *v3) + 0x1B0))(0);
  (*(void (**)(_BOOL8))((swift_isaMask & *v3) + 0x188))(v2);
}

Swift::Void __swiftcall MOSuggestionCollectionViewCell.setQuickAddedVisibility(_:)(Swift::Bool_optional a1)
{
  uint64_t v1;
  _QWORD *v2;

  if (a1.value)
  {
    v2 = *(_QWORD **)(v1 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_assetGridView);
    (*(void (**)(uint64_t))((swift_isaMask & *v2) + 0x1B0))(1);
    (*(void (**)(uint64_t))((swift_isaMask & *v2) + 0x188))(1);
  }
}

Swift::Void __swiftcall MOSuggestionCollectionViewCell.setPhotoMemoryBannerVisibility()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  Class isa;
  uint64_t v8;
  Class v9;
  void *v10;
  uint64_t v11;
  Class v12;
  uint64_t v13;
  Class v14;

  v1 = v0;
  v2 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xF8))();
  if (v2)
  {
    v3 = v2;
    v4 = (*(uint64_t (**)(void))(*(_QWORD *)v2 + 320))();
    v5 = (void *)objc_opt_self(NSLayoutConstraint);
    if ((v4 & 1) != 0)
    {
      v6 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x140))();
      type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint, NSLayoutConstraint_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v5, "activateConstraints:", isa, swift_bridgeObjectRelease(v6).n128_f64[0]);

      v8 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x128))();
      v9 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v5, "deactivateConstraints:", v9, swift_bridgeObjectRelease(v8).n128_f64[0]);

      v10 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x110))();
      objc_msgSend(v10, "setHidden:", 0);
    }
    else
    {
      v11 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x128))();
      type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint, NSLayoutConstraint_ptr);
      v12 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v5, "activateConstraints:", v12, swift_bridgeObjectRelease(v11).n128_f64[0]);

      v13 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x140))();
      v14 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v5, "deactivateConstraints:", v14, swift_bridgeObjectRelease(v13).n128_f64[0]);

      v10 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x110))();
      objc_msgSend(v10, "setHidden:", 1);
    }

    swift_release(v3);
  }
}

id MOSuggestionCollectionViewCell.hitTest(_:with:)(uint64_t a1, double a2, double a3)
{
  void *v3;
  id v7;
  id v8;
  objc_super v10;

  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for MOSuggestionCollectionViewCell();
  v7 = objc_msgSendSuper2(&v10, "hitTest:withEvent:", a1, a2, a3);
  if (v7)
  {
    type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for UIButton, UIButton_ptr);
    if ((objc_msgSend(v7, "isKindOfClass:", swift_getObjCClassFromMetadata()) & 1) == 0)
    {
      type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for PHLivePhotoView, PHLivePhotoView_ptr);
      if ((objc_msgSend(v7, "isKindOfClass:", swift_getObjCClassFromMetadata()) & 1) == 0)
      {

        v8 = v3;
        return v3;
      }
    }
  }
  return v7;
}

id MOSuggestionCollectionViewCell.__deallocating_deinit(uint64_t a1)
{
  return MOSuggestionSheetMediaAssetView.__deallocating_deinit(a1, type metadata accessor for MOSuggestionCollectionViewCell);
}

unint64_t static MOSuggestionCollectionViewDateSectionHeaderView.reuseIdentifier.getter()
{
  return 0xD00000000000002FLL;
}

id closure #1 in variable initialization expression of MOSuggestionCollectionViewDateSectionHeaderView.dateLabel()
{
  id v0;
  id v1;
  Class isa;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v0, "setNumberOfLines:", 1);
  objc_msgSend(v0, "setAdjustsFontSizeToFitWidth:", 1);
  objc_msgSend(v0, "setAdjustsFontForContentSizeCategory:", 1);
  v1 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleTitle3);
  isa = UIFont.withWeight(_:)(UIFontWeightRegular).super.isa;

  objc_msgSend(v0, "setFont:", isa);
  return v0;
}

id MOSuggestionCollectionViewDateSectionHeaderView.dateLabel.getter()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC16MomentsUIService47MOSuggestionCollectionViewDateSectionHeaderView_dateLabel));
}

uint64_t key path setter for MOSuggestionCollectionViewDateSectionHeaderView.date : MOSuggestionCollectionViewDateSectionHeaderView(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Date?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))((swift_isaMask & **a2) + 0x68))(v6);
}

uint64_t MOSuggestionCollectionViewDateSectionHeaderView.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC16MomentsUIService47MOSuggestionCollectionViewDateSectionHeaderView_date;
  swift_beginAccess(v3, v5, 0, 0);
  return outlined init with copy of Date?(v3, a1);
}

uint64_t MOSuggestionCollectionViewDateSectionHeaderView.date.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t)v1 + OBJC_IVAR____TtC16MomentsUIService47MOSuggestionCollectionViewDateSectionHeaderView_date;
  swift_beginAccess((char *)v1 + OBJC_IVAR____TtC16MomentsUIService47MOSuggestionCollectionViewDateSectionHeaderView_date, v6, 33, 0);
  outlined assign with copy of Date?(a1, v3);
  v4 = swift_endAccess(v6);
  (*(void (**)(uint64_t))((swift_isaMask & *v1) + 0x78))(v4);
  return outlined destroy of Date?(a1);
}

uint64_t (*MOSuggestionCollectionViewDateSectionHeaderView.date.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC16MomentsUIService47MOSuggestionCollectionViewDateSectionHeaderView_date, a1, 33, 0);
  return MOSuggestionCollectionViewDateSectionHeaderView.date.modify;
}

uint64_t MOSuggestionCollectionViewDateSectionHeaderView.date.modify(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess(a1);
  if ((a2 & 1) == 0)
    return (*(uint64_t (**)(uint64_t))((swift_isaMask & **(_QWORD **)(a1 + 24)) + 0x78))(result);
  return result;
}

void MOSuggestionCollectionViewDateSectionHeaderView.init(coder:)()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;

  v1 = OBJC_IVAR____TtC16MomentsUIService47MOSuggestionCollectionViewDateSectionHeaderView_dateLabel;
  *(_QWORD *)&v0[v1] = closure #1 in variable initialization expression of MOSuggestionCollectionViewDateSectionHeaderView.dateLabel();
  v2 = &v0[OBJC_IVAR____TtC16MomentsUIService47MOSuggestionCollectionViewDateSectionHeaderView_date];
  v3 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionCollectionViewCell.swift", 53, 2, 283, 0);
  __break(1u);
}

Swift::Void __swiftcall MOSuggestionCollectionViewDateSectionHeaderView.setUpDate()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  Class isa;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  NSString v21;
  void *v22;
  Class v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  void *v28;
  Class v29;
  id v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  __n128 v39;
  _QWORD v40[2];
  _QWORD v41[2];
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v2);
  v4 = (char *)v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))((swift_isaMask & *v0) + 0x60))(v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    outlined destroy of Date?((uint64_t)v4);
    objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService47MOSuggestionCollectionViewDateSectionHeaderView_dateLabel), "setText:", 0);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
  if (one-time initialization token for fullDateFormatter != -1)
    swift_once(&one-time initialization token for fullDateFormatter, one-time initialization function for fullDateFormatter);
  v10 = (void *)static MODateFormatter.fullDateFormatter;
  isa = Date._bridgeToObjectiveC()().super.isa;
  v12 = objc_msgSend(v10, "stringFromDate:", isa);

  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  v44 = v13;
  v45 = v15;
  v42 = 8236;
  v43 = 0xE200000000000000;
  v41[0] = 32;
  v41[1] = 0xE100000000000000;
  v16 = lazy protocol witness table accessor for type String and conformance String();
  v17 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(&v42, v41, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v16, v16, v16);
  v19 = v18;
  swift_bridgeObjectRelease(v15);
  v20 = *(void **)((char *)v1
                 + OBJC_IVAR____TtC16MomentsUIService47MOSuggestionCollectionViewDateSectionHeaderView_dateLabel);
  v21 = String._bridgeToObjectiveC()();
  v40[1] = v20;
  objc_msgSend(v20, "setText:", v21);

  v44 = v17;
  v45 = v19;
  if (one-time initialization token for dayNameFormatter != -1)
    swift_once(&one-time initialization token for dayNameFormatter, one-time initialization function for dayNameFormatter);
  v22 = (void *)static MODateFormatter.dayNameFormatter;
  v23 = Date._bridgeToObjectiveC()().super.isa;
  v24 = objc_msgSend(v22, "stringFromDate:", v23);

  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v27 = v26;

  v42 = v25;
  v43 = v27;
  LOBYTE(v25) = StringProtocol.contains<A>(_:)(&v42, &type metadata for String, &type metadata for String, v16, v16);
  swift_bridgeObjectRelease(v27);
  if ((v25 & 1) != 0)
  {
    swift_bridgeObjectRelease(v19);
    v28 = (void *)static MODateFormatter.dayNameFormatter;
    v29 = Date._bridgeToObjectiveC()().super.isa;
    v30 = objc_msgSend(v28, "stringFromDate:", v29);

    v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
    v33 = v32;

    v34 = v31;
  }
  else
  {
    v44 = v17;
    v45 = v19;
    v42 = 32;
    v43 = 0xE100000000000000;
    v35 = (_QWORD *)StringProtocol.components<A>(separatedBy:)(&v42, &type metadata for String, &type metadata for String, v16, v16);
    swift_bridgeObjectRelease(v19);
    if (!v35[2])
    {
      v38 = v35;
      goto LABEL_12;
    }
    v36 = v35[4];
    v33 = (_QWORD *)v35[5];
    swift_bridgeObjectRetain(v33);
    swift_bridgeObjectRelease(v35);
    v34 = v36;
  }
  v37 = v33;
  UILabel.styleDateWithWeekday(weekday:)(*(Swift::String *)&v34);
  v38 = v33;
LABEL_12:
  v39 = swift_bridgeObjectRelease(v38);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v9, v5, v39);
}

Swift::String __swiftcall Date.getDayName()()
{
  uint64_t v0;
  void *v1;
  Swift::String result;

  v0 = Date.getFullDateNumber()(&one-time initialization token for dayNameFormatter, (void **)&static MODateFormatter.dayNameFormatter);
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

id MOSuggestionCollectionViewDateSectionHeaderView.__deallocating_deinit()
{
  return MOSuggestionSheetMediaAssetView.__deallocating_deinit(0, (uint64_t (*)(void))type metadata accessor for MOSuggestionCollectionViewDateSectionHeaderView);
}

Swift::String __swiftcall Date.getMonthName()()
{
  uint64_t v0;
  void *v1;
  Swift::String result;

  v0 = Date.getFullDateNumber()(&one-time initialization token for monthNameFormatter, (void **)&static MODateFormatter.monthNameFormatter);
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

Swift::String __swiftcall Date.getMonthDayNumber()()
{
  uint64_t v0;
  void *v1;
  Swift::String result;

  v0 = Date.getFullDateNumber()(&one-time initialization token for monthDayNumberFormatter, (void **)&static MODateFormatter.monthDayNumberFormatter);
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

uint64_t Date.getFullDateNumber()(_QWORD *a1, void **a2)
{
  void *v3;
  Class isa;
  id v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v3 = *a2;
  isa = Date._bridgeToObjectiveC()().super.isa;
  v5 = objc_msgSend(v3, "stringFromDate:", isa);

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  return v6;
}

double specialized static MOSuggestionCollectionViewCell.calculateLabelHeight(width:)(double a1)
{
  id v2;
  objc_class *v3;
  Class isa;
  id v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  id v11;

  v2 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v2, "setAdjustsFontForContentSizeCategory:", 1);
  v3 = (objc_class *)specialized static MOSuggestionTheme.Fonts.footnoteEmphShortFont()();
  if (!v3)
  {
    v11 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleFootnote);
    isa = UIFont.withWeight(_:)(UIFontWeightSemibold).super.isa;

    v5 = specialized static MOSuggestionTheme.Fonts.footnoteShortFont()();
    if (v5)
      goto LABEL_4;
    goto LABEL_3;
  }
  isa = v3;
  v5 = specialized static MOSuggestionTheme.Fonts.footnoteShortFont()();
  if (!v5)
LABEL_3:
    v5 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleFootnote);
LABEL_4:
  v6 = v5;
  v7 = specialized UILabel.estimatedHeight(forWidth:text:ofFont:)(0, 0xE000000000000000, isa, a1);
  v8 = v7 + v7;
  v9 = specialized UILabel.estimatedHeight(forWidth:text:ofFont:)(0, 0xE000000000000000, v6, a1);

  return v8 + v9 + 8.0 + 1.0;
}

uint64_t type metadata accessor for MOSuggestionCollectionViewCell()
{
  return objc_opt_self(_TtC16MomentsUIService30MOSuggestionCollectionViewCell);
}

void specialized MOSuggestionCollectionViewCell.init(coder:)()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  objc_class *v10;
  _BYTE *v11;
  _QWORD *v12;
  id v13;
  void (__swiftcall **v14)();
  uint64_t v15;
  objc_super v16;

  v1 = v0;
  v2 = OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_assetGridView;
  type metadata accessor for MOSuggestionSheetAssetGridView();
  *(_QWORD *)&v1[v2] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v3 = OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_titleLabel;
  *(_QWORD *)&v1[v3] = closure #1 in variable initialization expression of MOSuggestionCollectionViewCell.titleLabel((SEL *)&selRef_labelColor);
  v4 = OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_gridContainerView;
  v5 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v6 = objc_msgSend(v5, "traitCollection");
  v7 = objc_msgSend(v6, "userInterfaceStyle");

  specialized static MOSuggestionTheme.Styles.styleViewAsPlatter(view:traitCollection:)(v5, (uint64_t)v7);
  *(_QWORD *)&v1[v4] = v5;
  v8 = OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_subtitleLabel;
  *(_QWORD *)&v1[v8] = closure #1 in variable initialization expression of MOSuggestionCollectionViewCell.titleLabel((SEL *)&selRef_secondaryLabelColor);
  v9 = OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_journalButton;
  v10 = (objc_class *)type metadata accessor for MOSuggestionSheetJournalButton();
  v11 = objc_allocWithZone(v10);
  v12 = &v11[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionSheetJournalButton_buttonTapped];
  *v12 = 0;
  v12[1] = 0;
  v11[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionSheetJournalButton_singleCellAsset] = 0;
  v16.receiver = v11;
  v16.super_class = v10;
  v13 = objc_msgSendSuper2(&v16, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  MOSuggestionSheetJournalButton.sharedInit()();

  *(_QWORD *)&v1[v9] = v13;
  v14 = (void (__swiftcall **)())&v1[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_accessoryButtonAction];
  *v14 = MOSuggestionInterstitialExpandableListViewCellConstants.init();
  v14[1] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_gridViewHeightAnchor] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_heightMultiplier] = 0x3FE0000000000000;
  swift_weakInit(&v1[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_cellViewModel]);
  v15 = OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_photoMemoryBanner;
  type metadata accessor for MOSuggestionPhotoMemoryBanner();
  *(_QWORD *)&v1[v15] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_bannerHiddenConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_bannerPresentConstraints] = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001001A6460, "MomentsUIService/MOSuggestionCollectionViewCell.swift", 53, 2, 128, 0);
  __break(1u);
}

char *specialized MOSuggestionCollectionViewDateSectionHeaderView.init(frame:)()
{
  char *v0;
  uint64_t v1;
  char *v2;
  char *v3;
  uint64_t v4;
  double y;
  double width;
  double height;
  char *v8;
  uint64_t v9;
  void *v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  Class isa;
  objc_super v30;

  v1 = OBJC_IVAR____TtC16MomentsUIService47MOSuggestionCollectionViewDateSectionHeaderView_dateLabel;
  v2 = v0;
  *(_QWORD *)&v0[v1] = closure #1 in variable initialization expression of MOSuggestionCollectionViewDateSectionHeaderView.dateLabel();
  v3 = &v2[OBJC_IVAR____TtC16MomentsUIService47MOSuggestionCollectionViewDateSectionHeaderView_date];
  v4 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);

  y = CGRectZero.origin.y;
  width = CGRectZero.size.width;
  height = CGRectZero.size.height;
  v30.receiver = v2;
  v30.super_class = (Class)type metadata accessor for MOSuggestionCollectionViewDateSectionHeaderView(0);
  v8 = (char *)objc_msgSendSuper2(&v30, "initWithFrame:", CGRectZero.origin.x, y, width, height);
  v9 = OBJC_IVAR____TtC16MomentsUIService47MOSuggestionCollectionViewDateSectionHeaderView_dateLabel;
  v10 = *(void **)&v8[OBJC_IVAR____TtC16MomentsUIService47MOSuggestionCollectionViewDateSectionHeaderView_dateLabel];
  v11 = v8;
  objc_msgSend(v11, "addSubview:", v10);
  v12 = (void *)objc_opt_self(NSLayoutConstraint);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v14 = swift_allocObject(v13, 64, 7);
  *(_OWORD *)(v14 + 16) = xmmword_10019ED40;
  v15 = objc_msgSend(v10, "topAnchor");
  v16 = objc_msgSend(v11, "topAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v14 + 32) = v17;
  v18 = objc_msgSend(*(id *)&v8[v9], "bottomAnchor");
  v19 = objc_msgSend(v11, "bottomAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

  *(_QWORD *)(v14 + 40) = v20;
  v21 = objc_msgSend(*(id *)&v8[v9], "leadingAnchor");
  v22 = objc_msgSend(v11, "leadingAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:constant:", v22, 24.0);

  *(_QWORD *)(v14 + 48) = v23;
  v24 = objc_msgSend(*(id *)&v8[v9], "trailingAnchor");
  v25 = objc_msgSend(v11, "trailingAnchor");
  v26 = objc_msgSend(v24, "constraintEqualToAnchor:constant:", v25, -10.0);

  *(_QWORD *)(v14 + 56) = v26;
  specialized Array._endMutation()(v27);
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v12, "activateConstraints:", isa, swift_bridgeObjectRelease(v14).n128_f64[0]);

  return v11;
}

uint64_t type metadata accessor for MOSuggestionCollectionViewDateSectionHeaderView(uint64_t a1)
{
  uint64_t result;

  result = type metadata singleton initialization cache for MOSuggestionCollectionViewDateSectionHeaderView;
  if (!type metadata singleton initialization cache for MOSuggestionCollectionViewDateSectionHeaderView)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MOSuggestionCollectionViewDateSectionHeaderView);
  return result;
}

uint64_t sub_10016AD94@<X0>(_QWORD **a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xB0))();
  v5 = v4;
  result = swift_allocObject(&unk_1001ECBB0, 32, 7);
  *(_QWORD *)(result + 16) = v3;
  *(_QWORD *)(result + 24) = v5;
  *a2 = partial apply for thunk for @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> ();
  a2[1] = (uint64_t (*)())result;
  return result;
}

uint64_t sub_10016AE08@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xC8))();
  *a2 = result;
  return result;
}

uint64_t sub_10016AE48(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0xD0);
  v4 = *a1;
  return v3(v2);
}

void sub_10016AE94(_QWORD **a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))((swift_isaMask & **a1) + 0xE0))();
}

uint64_t sub_10016AED4(double *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(double))((swift_isaMask & **a2) + 0xE8))(*a1);
}

uint64_t sub_10016AF10@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xF8))();
  *a2 = result;
  return result;
}

uint64_t sub_10016AF50(_QWORD *a1, _QWORD **a2)
{
  uint64_t (*v2)(__n128);
  __n128 v3;

  v2 = *(uint64_t (**)(__n128))((swift_isaMask & **a2) + 0x100);
  v3 = swift_retain(*a1);
  return v2(v3);
}

uint64_t sub_10016AF90@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x110))();
  *a2 = result;
  return result;
}

uint64_t sub_10016AFD0(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x118))(*a1);
}

uint64_t sub_10016B010@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x128))();
  *a2 = result;
  return result;
}

uint64_t sub_10016B050(_QWORD *a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0x130);
  v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

uint64_t sub_10016B090@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x140))();
  *a2 = result;
  return result;
}

uint64_t sub_10016B0D0(_QWORD *a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0x148);
  v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

uint64_t sub_10016B110(_QWORD **a1)
{
  return (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x60))();
}

uint64_t type metadata accessor for MOSuggestionCollectionViewCellConstants()
{
  return objc_opt_self(_TtC16MomentsUIService39MOSuggestionCollectionViewCellConstants);
}

uint64_t ObjC metadata update function for MOSuggestionCollectionViewDateSectionHeaderView()
{
  return type metadata accessor for MOSuggestionCollectionViewDateSectionHeaderView(0);
}

void type metadata completion function for MOSuggestionCollectionViewDateSectionHeaderView(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  type metadata accessor for Date?(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
  }
}

uint64_t sub_10016B1F0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t MOSuggestionAssetMediaItem.primaryTitle.getter()
{
  void *v0;
  id v1;
  SEL *v2;
  char **v3;
  id v4;
  uint64_t v5;

  v1 = objc_msgSend(v0, "mediaType");
  v2 = (SEL *)&selRef_albumTitle;
  v3 = &selRef_artistName;
  if (v1 != (id)5)
    v3 = &selRef_title;
  if (v1 != (id)4)
    v2 = (SEL *)v3;
  v4 = objc_msgSend(v0, *v2);
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);

  return v5;
}

void one-time initialization function for Bag()
{
  NSString v0;
  NSString v1;
  id v2;

  v0 = String._bridgeToObjectiveC()();
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend((id)objc_opt_self(AMSBag), "bagForProfile:profileVersion:", v0, v1);

  static Constants.Bag = (uint64_t)v2;
}

int64x2_t one-time initialization function for DefaultArtworkSize()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4079000000000000uLL);
  static Constants.DefaultArtworkSize = (__int128)result;
  return result;
}

int64x2_t one-time initialization function for HighQualityArtworkSize()
{
  int64x2_t result;

  result = vdupq_n_s64(0x408F400000000000uLL);
  static Constants.HighQualityArtworkSize = (__int128)result;
  return result;
}

uint64_t MOSuggestionAssetMediaItemType.mediaTaskType.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = 207;
  v2 = 301;
  if (a1 != 2)
    v2 = 0;
  if (a1 != 3)
    v1 = v2;
  if (a1 == 1)
    return 203;
  else
    return v1;
}

uint64_t MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10016B3DC + 4 * byte_1001A3E30[a1]))(0x6C7070612E6D6F63, 0xEC00000076742E65);
}

unint64_t sub_10016B3DC()
{
  return 0xD000000000000012;
}

unint64_t sub_10016B40C()
{
  return 0xD000000000000029;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_10016B494@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10016B4F8 + 4 * byte_1001A3E38[a1]))(0xD000000000000012);
}

uint64_t sub_10016B4F8(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  char v3;

  v2 = 0x80000001001A5AF0;
  if (a1 == 0xD000000000000012 && v1 == 0x80000001001A5AF0)
  {
    v3 = 1;
    v2 = v1;
  }
  else
  {
    v3 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0xD000000000000012, 0x80000001001A5AF0, 0);
  }
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v2);
  return v3 & 1;
}

void protocol witness for Hashable.hashValue.getter in conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X9 }
}

Swift::Int sub_10016B600()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0xD000000000000012, 0x80000001001A5AF0);
  swift_bridgeObjectRelease(0x80000001001A5AF0);
  return Hasher._finalize()();
}

void protocol witness for Hashable.hash(into:) in conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications()
{
  __asm { BR              X10 }
}

uint64_t sub_10016B6C4(uint64_t a1)
{
  String.hash(into:)(a1, 0xD000000000000012, 0x80000001001A5AF0);
  return swift_bridgeObjectRelease(0x80000001001A5AF0);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  _QWORD v3[9];

  v2 = *v1;
  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X9 }
}

Swift::Int sub_10016B77C()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0xD000000000000012, 0x80000001001A5AF0);
  swift_bridgeObjectRelease(0x80000001001A5AF0);
  return Hasher._finalize()();
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = specialized MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_10016B860 + 4 * byte_1001A3E48[*v0]))();
}

void sub_10016B860(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x80000001001A5AF0;
}

void sub_10016B880(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
  a1[1] = 0xEF636973754D2E65;
}

void sub_10016B898(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000029;
  a1[1] = 0x80000001001A6050;
}

BOOL MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications.init(rawValue:)(Swift::String string)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications.init(rawValue:), v2);
  swift_bridgeObjectRelease(object);
  return v3 != 0;
}

unint64_t MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications.rawValue.getter()
{
  return 0xD000000000000012;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  String.hash(into:)(v1, 0xD000000000000012, 0x80000001001A6080);
  return Hasher._finalize()();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications(uint64_t a1)
{
  return String.hash(into:)(a1, 0xD000000000000012, 0x80000001001A6080);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  String.hash(into:)(v2, 0xD000000000000012, 0x80000001001A6080);
  return Hasher._finalize()();
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of protocol witness for RawRepresentable.init(rawValue:) in conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications, v3);
  result = swift_bridgeObjectRelease(v4);
  *a2 = v5 != 0;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x80000001001A6080;
}

uint64_t MOSuggestionAssetMediaCoverArtQueryInput.trackIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 56));
  return v1;
}

uint64_t MOSuggestionAssetMediaCoverArtQueryInput.trackIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v2 + 56));
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

void (__swiftcall *MOSuggestionAssetMediaCoverArtQueryInput.trackIdentifier.modify())()
{
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

uint64_t MOSuggestionAssetMediaCoverArtQueryInput.bundleIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 72));
  return v1;
}

uint64_t MOSuggestionAssetMediaCoverArtQueryInput.bundleIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v2 + 72));
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return result;
}

void (__swiftcall *MOSuggestionAssetMediaCoverArtQueryInput.bundleIdentifier.modify())()
{
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

uint64_t MOSuggestionAssetMediaCoverArtQueryInput.type.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

uint64_t MOSuggestionAssetMediaCoverArtQueryInput.type.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = result;
  return result;
}

void (__swiftcall *MOSuggestionAssetMediaCoverArtQueryInput.type.modify())()
{
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

uint64_t MOSuggestionAssetMediaCoverArtQueryInput.isFirstParty.getter()
{
  uint64_t v0;
  unint64_t v1;
  _QWORD v3[2];
  __int128 v4;

  v4 = *(_OWORD *)(v0 + 64);
  v3[0] = 0x6C7070612E6D6F63;
  v3[1] = 0xE900000000000065;
  v1 = lazy protocol witness table accessor for type String and conformance String();
  return StringProtocol.contains<A>(_:)(v3, &type metadata for String, &type metadata for String, v1, v1) & 1;
}

__n128 MOSuggestionAssetMediaCoverArtQueryInput.init(title:albumTitle:artistName:trackIdentifier:bundleIdentifier:type:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, unint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, __n128 *a9@<X8>, __n128 a10, unint64_t a11)
{
  __n128 result;

  result = a10;
  a9->n128_u64[0] = a1;
  a9->n128_u64[1] = a2;
  a9[1].n128_u64[0] = a3;
  a9[1].n128_u64[1] = a4;
  a9[2].n128_u64[0] = a5;
  a9[2].n128_u64[1] = a6;
  a9[3].n128_u64[0] = a7;
  a9[3].n128_u64[1] = a8;
  a9[4] = a10;
  a9[5].n128_u64[0] = a11;
  return result;
}

uint64_t one-time initialization function for sharedSongProvider(uint64_t a1)
{
  return one-time initialization function for sharedSongProvider(a1, type metadata accessor for MOSuggestionAssetSongAlbumArtProvider, &static MOSuggestionMediaCoverArtProviders.sharedSongProvider);
}

uint64_t MOSuggestionAssetMediaAlbumArtProvider.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_allocObject(v0, 72, 7);
  MOSuggestionAssetMediaAlbumArtProvider.init()();
  return v1;
}

uint64_t *MOSuggestionMediaCoverArtProviders.sharedSongProvider.unsafeMutableAddressor()
{
  if (one-time initialization token for sharedSongProvider != -1)
    swift_once(&one-time initialization token for sharedSongProvider, one-time initialization function for sharedSongProvider);
  return &static MOSuggestionMediaCoverArtProviders.sharedSongProvider;
}

double static MOSuggestionMediaCoverArtProviders.sharedSongProvider.getter()
{
  return static MOSuggestionMediaCoverArtProviders.sharedSongProvider.getter(&one-time initialization token for sharedSongProvider, &static MOSuggestionMediaCoverArtProviders.sharedSongProvider);
}

uint64_t one-time initialization function for sharedPodcastProvider(uint64_t a1)
{
  return one-time initialization function for sharedSongProvider(a1, type metadata accessor for MOSuggestionAssetPodcastAlbumArtProvider, &static MOSuggestionMediaCoverArtProviders.sharedPodcastProvider);
}

uint64_t one-time initialization function for sharedSongProvider(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = a2();
  v5 = swift_allocObject(v4, 72, 7);
  result = MOSuggestionAssetMediaAlbumArtProvider.init()();
  *a3 = v5;
  return result;
}

uint64_t *MOSuggestionMediaCoverArtProviders.sharedPodcastProvider.unsafeMutableAddressor()
{
  if (one-time initialization token for sharedPodcastProvider != -1)
    swift_once(&one-time initialization token for sharedPodcastProvider, one-time initialization function for sharedPodcastProvider);
  return &static MOSuggestionMediaCoverArtProviders.sharedPodcastProvider;
}

double static MOSuggestionMediaCoverArtProviders.sharedPodcastProvider.getter()
{
  return static MOSuggestionMediaCoverArtProviders.sharedSongProvider.getter(&one-time initialization token for sharedPodcastProvider, &static MOSuggestionMediaCoverArtProviders.sharedPodcastProvider);
}

double static MOSuggestionMediaCoverArtProviders.sharedSongProvider.getter(_QWORD *a1, _QWORD *a2)
{
  double result;

  if (*a1 != -1)
    swift_once();
  *(_QWORD *)&result = swift_retain(*a2).n128_u64[0];
  return result;
}

void *MOSuggestionAssetMediaAlbumArtProvider.DEFAULT_CACHE_COUNT_LIMIT.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetMediaAlbumArtProvider.DEFAULT_CACHE_COUNT_LIMIT;
}

uint64_t static MOSuggestionAssetMediaAlbumArtProvider.DEFAULT_CACHE_COUNT_LIMIT.getter()
{
  return 7;
}

void *MOSuggestionAssetMediaAlbumArtProvider.DEFAULT_BATCH_REQUEST_QUIESCENT_INTERVAL.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetMediaAlbumArtProvider.DEFAULT_BATCH_REQUEST_QUIESCENT_INTERVAL;
}

void *MOSuggestionAssetMediaAlbumArtProvider.DEFAULT_RETRY_COUNT.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetMediaAlbumArtProvider.DEFAULT_RETRY_COUNT;
}

uint64_t MOSuggestionAssetMediaAlbumArtProvider.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double *v20;

  v1 = v0;
  v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v18 = *(_QWORD *)(v2 - 8);
  v19 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + 16) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v1 + 24) = _swiftEmptyArrayStorage;
  *(_BYTE *)(v1 + 32) = 0;
  v11 = objc_msgSend(objc_allocWithZone((Class)NSCache), "init");
  *(_QWORD *)(v1 + 40) = v11;
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue, OS_dispatch_queue_ptr);
  static DispatchQoS.utility.getter();
  v20 = _swiftEmptyArrayStorage;
  v12 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  v14 = lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A], &demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v20, v13, v14, v5, v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v19);
  *(_QWORD *)(v1 + 48) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000030, 0x80000001001A6230, v10, v7, v4, 0);
  *(_QWORD *)(v1 + 56) = &_swiftEmptySetSingleton;
  *(_QWORD *)(v1 + 64) = objc_msgSend(objc_allocWithZone((Class)MOConfigurationManagerBase), "init");
  v15 = v11;
  objc_msgSend(v15, "setCountLimit:", MOSuggestionAssetMediaAlbumArtProvider.dynamicCacheCount.getter());

  return v1;
}

uint64_t MOSuggestionAssetMediaAlbumArtProvider.dynamicCacheCount.getter()
{
  return MOSuggestionAssetMediaAlbumArtProvider.dynamicCacheCount.getter(0x80000001001AF860, 7, "[MOSuggestionAssetMediaAlbumArtProvider] dynamicCacheCount=%d");
}

void MOSuggestionAssetMediaAlbumArtProvider.fetchAssetWithPossibleBatching(queryInput:tileSize:completion:)(uint64_t *a1, char a2, void (*a3)(id), uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  NSString v24;
  id v25;
  id v26;
  id v27;
  id v28;
  double v29;
  uint64_t v30;
  id v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  double **v57;
  double *v58;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v60;
  unint64_t v61;
  double *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  double **v67;
  double *v68;
  char v69;
  unint64_t v70;
  unint64_t v71;
  double *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  double v81;
  char *v82;
  void (*v83)(char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  uint64_t v98;
  id v99;
  double v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  double *v121;
  uint64_t v122;
  uint64_t aBlock[5];
  uint64_t v124;

  v5 = v4;
  v10 = a1[1];
  v112 = *a1;
  v113 = v10;
  v11 = a1[3];
  v114 = a1[2];
  v115 = v11;
  v12 = a1[5];
  v13 = a1[6];
  v116 = a1[4];
  v117 = v12;
  v14 = a1[7];
  v15 = a1[9];
  v118 = a1[8];
  v119 = v15;
  v120 = a1[10];
  v16 = type metadata accessor for DispatchWorkItemFlags(0);
  v110 = *(_QWORD *)(v16 - 8);
  v111 = v16;
  __chkstk_darwin(v16);
  v109 = (char *)&v98 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for DispatchQoS(0);
  v107 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  v106 = (char *)&v98 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = type metadata accessor for DispatchTime(0);
  v103 = *(_QWORD *)(v105 - 8);
  v19 = __chkstk_darwin(v105);
  v102 = (char *)&v98 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v104 = (char *)&v98 - v21;
  if (v14)
  {
    v101 = a4;
    v22 = *(void **)(v5 + 40);
    v23 = objc_allocWithZone((Class)NSString);
    swift_bridgeObjectRetain_n(v14, 2);
    v24 = String._bridgeToObjectiveC()();
    v25 = objc_msgSend(v23, "initWithString:", v24, swift_bridgeObjectRelease(v14).n128_f64[0]);

    v26 = objc_msgSend(v22, "objectForKey:", v25);
    if (v26)
    {
      v27 = objc_msgSend(v26, "content");
      v28 = objc_msgSend(v27, "albumArt");

      if (v28)
      {
        objc_msgSend(v28, "size");
        if ((a2 - 2) > 8u)
          v29 = 300.0;
        else
          v29 = dbl_1001A4158[(char)(a2 - 2)];
        if (one-time initialization token for DefaultArtworkSize != -1)
        {
          v100 = v29;
          swift_once(&one-time initialization token for DefaultArtworkSize, one-time initialization function for DefaultArtworkSize);
          v29 = v100;
        }
        if (v29 < *(double *)&static Constants.DefaultArtworkSize)
        {
          if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
            swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
          v30 = type metadata accessor for Logger(0);
          __swift_project_value_buffer(v30, (uint64_t)static MOAngelLogger.assets);
          v31 = v28;
          swift_bridgeObjectRetain(v14);
          v32 = v31;
          v33 = Logger.logObject.getter(v32);
          v34 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v33, v34))
          {
            v35 = swift_slowAlloc(22, -1);
            v36 = v26;
            v37 = swift_slowAlloc(64, -1);
            aBlock[0] = v37;
            *(_DWORD *)v35 = 136315394;
            swift_bridgeObjectRetain(v14);
            v121 = (double *)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v14, aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, &v122, v35 + 4);
            swift_bridgeObjectRelease_n(v14, 3);
            *(_WORD *)(v35 + 12) = 2080;
            v38 = CGSize.debugDescription.getter(objc_msgSend(v32, "size"));
            v40 = v39;
            v121 = (double *)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v38, v39, aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, &v122, v35 + 14);

            swift_bridgeObjectRelease(v40);
            _os_log_impl((void *)&_mh_execute_header, v33, v34, "[MOSuggestionAssetMediaAlbumArtProvider] Early cache hit trackID=%s quality=%s", (uint8_t *)v35, 0x16u);
            swift_arrayDestroy(v37, 2, (char *)&type metadata for Any + 8);
            v41 = v37;
            v26 = v36;
            swift_slowDealloc(v41, -1, -1);
            swift_slowDealloc(v35, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n(v14, 2);
          }
          v97 = v26;
          a3(v26);

          return;
        }

      }
      swift_beginAccess(v5 + 56, aBlock, 33, 0);
      swift_bridgeObjectRetain(v14);
      specialized Set._Variant.insert(_:)((uint64_t *)&v121, v13, v14);
      swift_endAccess(aBlock);
      swift_bridgeObjectRelease(v122);
      if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
        swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
      v42 = type metadata accessor for Logger(0);
      __swift_project_value_buffer(v42, (uint64_t)static MOAngelLogger.assets);
      v43 = swift_bridgeObjectRetain_n(v14, 2);
      v44 = Logger.logObject.getter(v43);
      v45 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v44, v45))
      {
        v46 = swift_slowAlloc(12, -1);
        v100 = *(double *)&a3;
        v47 = (uint8_t *)v46;
        v48 = swift_slowAlloc(32, -1);
        v99 = v26;
        v49 = v48;
        aBlock[0] = v48;
        *(_DWORD *)v47 = 136315138;
        swift_bridgeObjectRetain(v14);
        v121 = (double *)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v14, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, &v122, v47 + 4);
        swift_bridgeObjectRelease_n(v14, 3);
        _os_log_impl((void *)&_mh_execute_header, v44, v45, "[MOSuggestionAssetMediaAlbumArtProvider] Cache quality insufficient trackID=%s", v47, 0xCu);
        swift_arrayDestroy(v49, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v49, -1, -1);
        v50 = v47;
        a3 = *(void (**)(id))&v100;
        swift_slowDealloc(v50, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v14, 2);
      }
    }
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
      swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    v51 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v51, (uint64_t)static MOAngelLogger.assets);
    swift_bridgeObjectRetain(v14);
    v53 = Logger.logObject.getter(v52);
    v54 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v53, v54))
    {
      v100 = *(double *)&a3;
      v55 = (uint8_t *)swift_slowAlloc(12, -1);
      v56 = swift_slowAlloc(32, -1);
      aBlock[0] = v56;
      *(_DWORD *)v55 = 136315138;
      swift_bridgeObjectRetain(v14);
      v121 = (double *)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v14, aBlock);
      a3 = *(void (**)(id))&v100;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, &v122, v55 + 4);
      swift_bridgeObjectRelease_n(v14, 3);
      _os_log_impl((void *)&_mh_execute_header, v53, v54, "[MOSuggestionAssetMediaAlbumArtProvider] Adding batch request trackID=%s", v55, 0xCu);
      swift_arrayDestroy(v56, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v56, -1, -1);
      swift_slowDealloc(v55, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v14, 2);
    }
    a4 = v101;
  }
  if ((*(_BYTE *)(v5 + 32) & 1) != 0)
  {
    v57 = (double **)(v5 + 24);
    swift_beginAccess(v5 + 24, aBlock, 33, 0);
    v58 = *(double **)(v5 + 24);
    outlined retain of MOSuggestionAssetMediaCoverArtQueryInput(a1);
    swift_retain(a4);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v58);
    *(_QWORD *)(v5 + 24) = v58;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v58 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((_QWORD *)v58 + 2) + 1, 1, v58);
      *v57 = v58;
    }
    v61 = *((_QWORD *)v58 + 2);
    v60 = *((_QWORD *)v58 + 3);
    if (v61 >= v60 >> 1)
    {
      v58 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((double *)(v60 > 1), v61 + 1, 1, v58);
      *v57 = v58;
    }
    *((_QWORD *)v58 + 2) = v61 + 1;
    v62 = &v58[14 * v61];
    v63 = v113;
    *((_QWORD *)v62 + 4) = v112;
    *((_QWORD *)v62 + 5) = v63;
    v64 = v115;
    *((_QWORD *)v62 + 6) = v114;
    *((_QWORD *)v62 + 7) = v64;
    v65 = v117;
    *((_QWORD *)v62 + 8) = v116;
    *((_QWORD *)v62 + 9) = v65;
    *((_QWORD *)v62 + 10) = v13;
    *((_QWORD *)v62 + 11) = v14;
    v66 = v119;
    *((_QWORD *)v62 + 12) = v118;
    *((_QWORD *)v62 + 13) = v66;
    *((_QWORD *)v62 + 14) = v120;
    *((_QWORD *)v62 + 15) = a3;
    *((_QWORD *)v62 + 16) = a4;
    v62[17] = 0.0;
    swift_endAccess(aBlock);
  }
  else
  {
    v67 = (double **)(v5 + 16);
    swift_beginAccess(v5 + 16, aBlock, 33, 0);
    v68 = *(double **)(v5 + 16);
    outlined retain of MOSuggestionAssetMediaCoverArtQueryInput(a1);
    swift_retain(a4);
    v69 = swift_isUniquelyReferenced_nonNull_native(v68);
    *(_QWORD *)(v5 + 16) = v68;
    if ((v69 & 1) == 0)
    {
      v68 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((_QWORD *)v68 + 2) + 1, 1, v68);
      *v67 = v68;
    }
    v71 = *((_QWORD *)v68 + 2);
    v70 = *((_QWORD *)v68 + 3);
    if (v71 >= v70 >> 1)
    {
      v68 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((double *)(v70 > 1), v71 + 1, 1, v68);
      *v67 = v68;
    }
    *((_QWORD *)v68 + 2) = v71 + 1;
    v72 = &v68[14 * v71];
    v73 = v113;
    *((_QWORD *)v72 + 4) = v112;
    *((_QWORD *)v72 + 5) = v73;
    v74 = v115;
    *((_QWORD *)v72 + 6) = v114;
    *((_QWORD *)v72 + 7) = v74;
    v75 = v117;
    *((_QWORD *)v72 + 8) = v116;
    *((_QWORD *)v72 + 9) = v75;
    *((_QWORD *)v72 + 10) = v13;
    *((_QWORD *)v72 + 11) = v14;
    v76 = v119;
    *((_QWORD *)v72 + 12) = v118;
    *((_QWORD *)v72 + 13) = v76;
    *((_QWORD *)v72 + 14) = v120;
    *((_QWORD *)v72 + 15) = a3;
    *((_QWORD *)v72 + 16) = a4;
    v72[17] = 0.0;
    v77 = *(_QWORD *)(v5 + 16);
    v78 = swift_endAccess(aBlock);
    v79 = *(_QWORD *)(v77 + 16);
    v120 = *(_QWORD *)(v5 + 48);
    v80 = v102;
    static DispatchTime.now()(v78);
    v81 = MOSuggestionAssetMediaAlbumArtProvider.dynamicBatchRequestInterval.getter();
    v82 = v104;
    + infix(_:_:)(v80, v81);
    v83 = *(void (**)(char *, uint64_t))(v103 + 8);
    v84 = v105;
    v83(v80, v105);
    v85 = swift_allocObject(&unk_1001ECC38, 24, 7);
    swift_weakInit(v85 + 16);
    v86 = swift_allocObject(&unk_1001ECC60, 32, 7);
    *(_QWORD *)(v86 + 16) = v85;
    *(_QWORD *)(v86 + 24) = v79;
    aBlock[4] = (uint64_t)partial apply for closure #1 in MOSuggestionAssetMediaAlbumArtProvider.fetchAssetWithPossibleBatching(queryInput:tileSize:completion:);
    v124 = v86;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = (uint64_t)&block_descriptor_41;
    v87 = _Block_copy(aBlock);
    swift_retain(v85);
    v88 = v106;
    static DispatchQoS.unspecified.getter(v89);
    v121 = _swiftEmptyArrayStorage;
    v90 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v91 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    v92 = lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    v93 = v109;
    v94 = v91;
    v95 = v111;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v121, v94, v92, v111, v90);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v82, v88, v93, v87);
    _Block_release(v87);
    (*(void (**)(char *, uint64_t))(v110 + 8))(v93, v95);
    (*(void (**)(char *, uint64_t))(v107 + 8))(v88, v108);
    v83(v82, v84);
    v96 = v124;
    swift_release(v85);
    swift_release(v96);
  }
}

double MOSuggestionAssetMediaAlbumArtProvider.dynamicBatchRequestInterval.getter()
{
  uint64_t v0;
  void *v1;
  NSString v2;
  double v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  double v11;
  uint64_t v12;

  v1 = *(void **)(v0 + 64);
  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "getDoubleSettingForKey:withFallback:", v2, 1.5);
  v4 = v3;

  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v5 = type metadata accessor for Logger(0);
  v6 = __swift_project_value_buffer(v5, (uint64_t)static MOAngelLogger.assets);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v9 = 134217984;
    v11 = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12, v9 + 4);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "[MOSuggestionAssetMediaAlbumArtProvider] dynamicBatchRequestInterval=%f", v9, 0xCu);
    swift_slowDealloc(v9, -1, -1);
  }

  return v4;
}

double closure #1 in MOSuggestionAssetMediaAlbumArtProvider.fetchAssetWithPossibleBatching(queryInput:tileSize:completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  _BYTE v20[24];
  _BYTE v21[24];
  _BYTE v22[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v22, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    swift_beginAccess(Strong + 16, v21, 1, 0);
    if (*(_QWORD *)(*(_QWORD *)(v5 + 16) + 16) == a2)
    {
      if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
        swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
      v6 = type metadata accessor for Logger(0);
      v7 = __swift_project_value_buffer(v6, (uint64_t)static MOAngelLogger.assets);
      v8 = Logger.logObject.getter(v7);
      v9 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v10 = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "[MOSuggestionAssetMediaAlbumArtProvider] Met quiescent criteria", v10, 2u);
        swift_slowDealloc(v10, -1, -1);
      }

      if (*(_BYTE *)(v5 + 32) == 1)
      {
        v11 = *(_QWORD *)(v5 + 16);
        swift_beginAccess(v5 + 24, v20, 33, 0);
        swift_bridgeObjectRetain(v11);
        specialized Array.append<A>(contentsOf:)(v12);
        swift_endAccess(v20);
        v13 = *(_QWORD *)(v5 + 16);
        *(_QWORD *)(v5 + 16) = _swiftEmptyArrayStorage;
        swift_release(v5);
        *(_QWORD *)&result = swift_bridgeObjectRelease(v13).n128_u64[0];
        return result;
      }
      MOSuggestionAssetMediaAlbumArtProvider.fireBatchOperation()();
    }
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  else
  {
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
      swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    v15 = type metadata accessor for Logger(0);
    v16 = __swift_project_value_buffer(v15, (uint64_t)static MOAngelLogger.assets);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "[MOSuggestionAssetMediaAlbumArtProvider] Invalid media query task type", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

  }
  return result;
}

void MOSuggestionAssetMediaAlbumArtProvider.fireBatchOperation()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_QWORD);
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  NSString v28;
  NSString v29;
  id v30;
  void *v31;
  double *v32;
  Class isa;
  id v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char v46[24];
  void **aBlock;
  uint64_t v48;
  uint64_t (*v49)();
  void *v50;
  void *v51;
  uint64_t v52;
  _QWORD v53[2];
  void *v54;
  char v55[32];

  v1 = v0;
  swift_beginAccess(v0 + 16, v55, 0, 0);
  if (*(_QWORD *)(*(_QWORD *)(v0 + 16) + 16))
  {
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
      swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    v2 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v2, (uint64_t)static MOAngelLogger.assets);
    swift_retain(v0);
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = swift_slowAlloc(22, -1);
      *(_DWORD *)v6 = 134218240;
      aBlock = *(void ***)(*(_QWORD *)(v1 + 16) + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v48, v6 + 4);
      *(_WORD *)(v6 + 12) = 2048;
      swift_beginAccess(v1 + 24, v46, 0, 0);
      aBlock = *(void ***)(*(_QWORD *)(v1 + 24) + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v48, v6 + 14);
      swift_release(v1);
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "[MOSuggestionAssetMediaAlbumArtProvider] Starting batch operation activeCount=%ld staleCount=%ld", (uint8_t *)v6, 0x16u);
      swift_slowDealloc(v6, -1, -1);

    }
    else
    {

      swift_release(v1);
    }
    *(_BYTE *)(v1 + 32) = 1;
    v12 = swift_allocObject(&unk_1001ECF08, 24, 7);
    *(_QWORD *)(v12 + 16) = specialized Dictionary.init(dictionaryLiteral:)((uint64_t)_swiftEmptyArrayStorage);
    v54 = &_swiftEmptySetSingleton;
    v13 = *(_QWORD *)(v1 + 16);
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v42 = v12;
      v43 = v1;
      swift_bridgeObjectRetain(v13);
      v44 = lazy protocol witness table accessor for type String and conformance String();
      v41 = v13;
      v15 = (uint64_t *)(v13 + 72);
      do
      {
        v17 = *(v15 - 4);
        v18 = *(v15 - 2);
        v19 = *v15;
        v45 = v15[1];
        v20 = v15[2];
        v21 = v15[4];
        v22 = (void (*)(_QWORD))v15[6];
        v23 = v15[7];
        aBlock = (void **)v15[3];
        v48 = v21;
        v53[0] = 0x6C7070612E6D6F63;
        v53[1] = 0xE900000000000065;
        swift_bridgeObjectRetain(v17);
        swift_bridgeObjectRetain(v18);
        swift_bridgeObjectRetain(v19);
        swift_bridgeObjectRetain(v20);
        swift_bridgeObjectRetain(v21);
        swift_retain(v23);
        if ((StringProtocol.contains<A>(_:)(v53, &type metadata for String, &type metadata for String, v44, v44) & 1) != 0
          && v20)
        {
          swift_bridgeObjectRetain(v20);
          specialized Set._Variant.insert(_:)((uint64_t *)&aBlock, v45, v20);
          swift_release(v23);
          swift_bridgeObjectRelease(v21);
          swift_bridgeObjectRelease(v20);
          swift_bridgeObjectRelease(v19);
          swift_bridgeObjectRelease(v18);
          swift_bridgeObjectRelease(v17);
          v16 = v48;
        }
        else
        {
          v22(0);
          swift_release(v23);
          swift_bridgeObjectRelease(v21);
          swift_bridgeObjectRelease(v20);
          swift_bridgeObjectRelease(v19);
          swift_bridgeObjectRelease(v18);
          v16 = v17;
        }
        swift_bridgeObjectRelease(v16);
        v15 += 14;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease(v41);
      v12 = v42;
      v1 = v43;
    }
    v24 = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 256))();
    if (one-time initialization token for Bag != -1)
      swift_once(&one-time initialization token for Bag, one-time initialization function for Bag);
    v25 = (void *)static Constants.Bag;
    v26 = objc_allocWithZone((Class)AMSMediaTask);
    v27 = v25;
    v28 = String._bridgeToObjectiveC()();
    v29 = String._bridgeToObjectiveC()();
    v30 = objc_msgSend(v26, "initWithType:clientIdentifier:clientVersion:bag:", v24, v28, v29, v27);

    v31 = v54;
    v32 = specialized _copyCollectionToContiguousArray<A>(_:)((uint64_t)v54);
    swift_bridgeObjectRelease(v31);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v30, "setItemIdentifiers:", isa, swift_release(v32).n128_f64[0]);

    v34 = objc_msgSend(v30, "perform");
    v35 = swift_allocObject(&unk_1001ECC38, 24, 7);
    swift_weakInit(v35 + 16);
    v51 = partial apply for closure #1 in MOSuggestionAssetMediaAlbumArtProvider.fireBatchOperation();
    v52 = v35;
    aBlock = _NSConcreteStackBlock;
    v48 = 1107296256;
    v49 = thunk for @escaping @callee_guaranteed (@guaranteed Error) -> ();
    v50 = &block_descriptor_10_0;
    v36 = _Block_copy(&aBlock);
    objc_msgSend(v34, "addErrorBlock:", v36, swift_release(v52).n128_f64[0]);
    _Block_release(v36);
    v37 = swift_allocObject(&unk_1001ECC38, 24, 7);
    swift_weakInit(v37 + 16);
    v38 = swift_allocObject(&unk_1001ECF58, 32, 7);
    *(_QWORD *)(v38 + 16) = v37;
    *(_QWORD *)(v38 + 24) = v12;
    v51 = partial apply for closure #2 in MOSuggestionAssetMediaAlbumArtProvider.fireBatchOperation();
    v52 = v38;
    aBlock = _NSConcreteStackBlock;
    v48 = 1107296256;
    v49 = thunk for @escaping @callee_guaranteed (@guaranteed Error) -> ();
    v50 = &block_descriptor_17_1;
    v39 = _Block_copy(&aBlock);
    v40 = v52;
    swift_retain(v12);
    objc_msgSend(v34, "addSuccessBlock:", v39, swift_release(v40).n128_f64[0]);
    _Block_release(v39);
    swift_release(v12);

  }
  else
  {
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
      swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    v7 = type metadata accessor for Logger(0);
    v8 = __swift_project_value_buffer(v7, (uint64_t)static MOAngelLogger.assets);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "[MOSuggestionAssetMediaAlbumArtProvider] No active requets to fire", v11, 2u);
      swift_slowDealloc(v11, -1, -1);
    }

  }
}

uint64_t MOSuggestionAssetMediaAlbumArtProvider.mediaTaskType()()
{
  return 203;
}

uint64_t MOSuggestionAssetMediaAlbumArtProvider.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  return v0;
}

uint64_t MOSuggestionAssetMediaAlbumArtProvider.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  return swift_deallocClassInstance(v0, 72, 7);
}

double MOSuggestionAssetMediaAlbumArtProvider.handleStaleRequests()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  double v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double *v29;
  _QWORD aBlock[5];
  uint64_t v31;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v28 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v26 = *(_QWORD *)(v4 - 8);
  v27 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchTime(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v24 - v13;
  v24 = *(_QWORD *)(v0 + 48);
  static DispatchTime.now()(v12);
  v15 = MOSuggestionAssetMediaAlbumArtProvider.dynamicBatchRequestInterval.getter();
  + infix(_:_:)(v11, v15);
  v25 = *(void (**)(char *, uint64_t))(v8 + 8);
  v25(v11, v7);
  v16 = swift_allocObject(&unk_1001ECC38, 24, 7);
  swift_weakInit(v16 + 16);
  aBlock[4] = partial apply for closure #1 in MOSuggestionAssetMediaAlbumArtProvider.handleStaleRequests();
  v31 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_21_3;
  v17 = _Block_copy(aBlock);
  swift_retain(v16);
  static DispatchQoS.unspecified.getter(v18);
  v29 = _swiftEmptyArrayStorage;
  v19 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  v21 = lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v29, v20, v21, v1, v19);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v14, v6, v3, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v27);
  v25(v14, v7);
  v22 = v31;
  swift_release(v16);
  *(_QWORD *)&result = swift_release(v22).n128_u64[0];
  return result;
}

double closure #1 in MOSuggestionAssetMediaAlbumArtProvider.handleStaleRequests()(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double result;
  uint64_t v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v4 = Strong;
    MOSuggestionAssetMediaAlbumArtProvider._handleStaleRequests()();
    *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  }
  return result;
}

uint64_t MOSuggestionAssetMediaAlbumArtProvider._handleStaleRequests()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  NSString v10;
  signed int v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  signed int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  __n128 v28;
  uint64_t v29;
  __n128 v30;
  unint64_t v31;
  unint64_t v32;
  double *v33;
  uint64_t v34;
  __n128 v35;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *log;
  uint64_t v41;
  os_log_type_t type;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  double *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  _BYTE v56[24];
  _BYTE v57[32];

  swift_beginAccess(v0 + 24, v57, 1, 0);
  v49 = *(double **)(v0 + 24);
  swift_beginAccess(v0 + 16, v56, 1, 0);
  v1 = *(_QWORD *)(v0 + 16);
  v51 = *(_QWORD *)(v1 + 16);
  if (v51)
  {
    v37 = (uint64_t *)(v0 + 16);
    v39 = v0;
    v43 = *(id *)(v0 + 64);
    swift_bridgeObjectRetain(v49);
    swift_bridgeObjectRetain(v1);
    v38 = v1;
    v2 = (uint64_t *)(v1 + 72);
    do
    {
      v5 = *(v2 - 4);
      v6 = *(v2 - 2);
      v47 = *(v2 - 3);
      v48 = *(v2 - 5);
      v7 = *v2;
      v8 = v2[2];
      v50 = v2[1];
      v9 = v2[4];
      v45 = v2[3];
      v46 = *(v2 - 1);
      v44 = v2[5];
      v54 = *((_OWORD *)v2 + 3);
      v53 = v2[8];
      swift_bridgeObjectRetain(v8);
      v52 = v9;
      swift_bridgeObjectRetain(v9);
      swift_retain(*((_QWORD *)&v54 + 1));
      swift_bridgeObjectRetain(v5);
      swift_bridgeObjectRetain(v6);
      swift_bridgeObjectRetain(v7);
      v10 = String._bridgeToObjectiveC()();
      v11 = objc_msgSend(v43, "getIntegerSettingForKey:withFallback:", v10, 3);

      if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
        swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
      v12 = type metadata accessor for Logger(0);
      v13 = __swift_project_value_buffer(v12, (uint64_t)static MOAngelLogger.assets);
      v14 = Logger.logObject.getter(v13);
      v15 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = v7;
        v17 = v6;
        v18 = v5;
        v19 = v11;
        v20 = swift_slowAlloc(8, -1);
        *(_DWORD *)v20 = 67109120;
        *(_DWORD *)(v20 + 4) = v19;
        _os_log_impl((void *)&_mh_execute_header, v14, v15, "[MOSuggestionAssetMediaAlbumArtProvider] dynamicRetryCount=%d", (uint8_t *)v20, 8u);
        v21 = v20;
        v11 = v19;
        v5 = v18;
        v6 = v17;
        v7 = v16;
        swift_slowDealloc(v21, -1, -1);
      }

      if (v53 >= v11)
      {
        v3 = *((_QWORD *)&v54 + 1);
        ((void (*)(_QWORD))v54)(0);
        v4 = v52;
      }
      else
      {
        swift_bridgeObjectRetain_n(v5, 4);
        swift_bridgeObjectRetain_n(v6, 4);
        swift_bridgeObjectRetain_n(v7, 4);
        swift_bridgeObjectRetain_n(v8, 4);
        v4 = v52;
        swift_bridgeObjectRetain_n(v52, 4);
        v22 = *((_QWORD *)&v54 + 1);
        v23 = swift_retain_n(*((_QWORD *)&v54 + 1));
        v24 = Logger.logObject.getter(v23);
        type = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v24, type))
        {
          v25 = swift_slowAlloc(22, -1);
          log = v24;
          v41 = swift_slowAlloc(32, -1);
          v55 = v41;
          *(_DWORD *)v25 = 136315394;
          if (v8)
            v26 = v50;
          else
            v26 = 7104878;
          if (v8)
            v27 = v8;
          else
            v27 = 0xE300000000000000;
          swift_bridgeObjectRetain(v8);
          v4 = v52;
          *(_QWORD *)(v25 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v27, &v55);
          swift_release_n(*((_QWORD *)&v54 + 1), v28);
          swift_bridgeObjectRelease_n(v52, 2);
          swift_bridgeObjectRelease_n(v8, 2);
          swift_bridgeObjectRelease_n(v7, 2);
          swift_bridgeObjectRelease_n(v6, 2);
          swift_bridgeObjectRelease_n(v5, 2);
          swift_bridgeObjectRelease(v27);
          *(_WORD *)(v25 + 12) = 2048;
          swift_release(*((_QWORD *)&v54 + 1));
          swift_bridgeObjectRelease(v52);
          swift_bridgeObjectRelease(v8);
          swift_bridgeObjectRelease(v7);
          swift_bridgeObjectRelease(v6);
          swift_bridgeObjectRelease(v5);
          *(_QWORD *)(v25 + 14) = v53;
          swift_release(*((_QWORD *)&v54 + 1));
          swift_bridgeObjectRelease(v52);
          swift_bridgeObjectRelease(v8);
          swift_bridgeObjectRelease(v7);
          swift_bridgeObjectRelease(v6);
          swift_bridgeObjectRelease(v5);
          _os_log_impl((void *)&_mh_execute_header, log, type, "[MOSuggestionAssetMediaAlbumArtProvider] Queueing trackId=%s, numRetries=%ld", (uint8_t *)v25, 0x16u);
          swift_arrayDestroy(v41, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v41, -1, -1);
          v29 = v25;
          v22 = *((_QWORD *)&v54 + 1);
          swift_slowDealloc(v29, -1, -1);

        }
        else
        {

          swift_release_n(*((_QWORD *)&v54 + 1), v30);
          swift_bridgeObjectRelease_n(v52, 4);
          swift_bridgeObjectRelease_n(v8, 4);
          swift_bridgeObjectRelease_n(v7, 4);
          swift_bridgeObjectRelease_n(v6, 4);
          swift_bridgeObjectRelease_n(v5, 4);
        }
        swift_bridgeObjectRetain(v5);
        swift_bridgeObjectRetain(v6);
        swift_bridgeObjectRetain(v7);
        swift_bridgeObjectRetain(v8);
        swift_bridgeObjectRetain(v4);
        swift_retain(v22);
        if ((swift_isUniquelyReferenced_nonNull_native(v49) & 1) == 0)
          v49 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((_QWORD *)v49 + 2) + 1, 1, v49);
        v32 = *((_QWORD *)v49 + 2);
        v31 = *((_QWORD *)v49 + 3);
        if (v32 >= v31 >> 1)
          v49 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((double *)(v31 > 1), v32 + 1, 1, v49);
        *((_QWORD *)v49 + 2) = v32 + 1;
        v33 = &v49[14 * v32];
        *((_QWORD *)v33 + 4) = v48;
        *((_QWORD *)v33 + 5) = v5;
        *((_QWORD *)v33 + 6) = v47;
        *((_QWORD *)v33 + 7) = v6;
        *((_QWORD *)v33 + 8) = v46;
        *((_QWORD *)v33 + 9) = v7;
        *((_QWORD *)v33 + 10) = v50;
        *((_QWORD *)v33 + 11) = v8;
        *((_QWORD *)v33 + 12) = v45;
        *((_QWORD *)v33 + 13) = v4;
        *((_QWORD *)v33 + 14) = v44;
        *(_OWORD *)(v33 + 15) = v54;
        *((_QWORD *)v33 + 17) = v53 + 1;
        v3 = *((_QWORD *)&v54 + 1);
      }
      v2 += 14;
      swift_release(v3);
      swift_bridgeObjectRelease(v4);
      swift_bridgeObjectRelease(v8);
      swift_bridgeObjectRelease(v7);
      swift_bridgeObjectRelease(v6);
      swift_bridgeObjectRelease(v5);
      --v51;
    }
    while (v51);
    swift_bridgeObjectRelease(v38);
    v1 = *v37;
    v0 = v39;
  }
  else
  {
    swift_bridgeObjectRetain(v49);
  }
  *(_BYTE *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 16) = v49;
  swift_bridgeObjectRelease(v1);
  v34 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 24) = _swiftEmptyArrayStorage;
  v35 = swift_bridgeObjectRelease(v34);
  return MOSuggestionAssetMediaAlbumArtProvider.fireBatchOperation()(v35);
}

uint64_t MOSuggestionAssetMediaAlbumArtProvider.dynamicRetryCount.getter()
{
  return MOSuggestionAssetMediaAlbumArtProvider.dynamicCacheCount.getter(0x80000001001AF8A0, 3, "[MOSuggestionAssetMediaAlbumArtProvider] dynamicRetryCount=%d");
}

uint64_t MOSuggestionAssetMediaAlbumArtProvider.dynamicCacheCount.getter(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v3;
  void *v6;
  NSString v7;
  signed int v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  signed int v15;
  uint64_t v16;

  v6 = *(void **)(v3 + 64);
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v6, "getIntegerSettingForKey:withFallback:", v7, a2);

  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v9 = type metadata accessor for Logger(0);
  v10 = __swift_project_value_buffer(v9, (uint64_t)static MOAngelLogger.assets);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v13 = 67109120;
    v15 = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v13 + 4);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, a3, v13, 8u);
    swift_slowDealloc(v13, -1, -1);
  }

  return v8;
}

double closure #1 in MOSuggestionAssetMediaAlbumArtProvider.fireBatchOperation()(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t Strong;
  double result;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  _BYTE v18[8];
  uint64_t v19[3];

  v3 = a2 + 16;
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v4 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v4, (uint64_t)static MOAngelLogger.assets);
  swift_errorRetain(a1);
  v5 = swift_errorRetain(a1);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v19[0] = v9;
    *(_DWORD *)v8 = 136315138;
    swift_getErrorValue(a1, v18, v17);
    v10 = Error.localizedDescription.getter(v17[1], v17[2]);
    v12 = v11;
    v16 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, v17, v8 + 4);
    swift_bridgeObjectRelease(v12);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "[MOSuggestionAssetMediaAlbumArtProvider] AMSMedia promise error: %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }

  swift_beginAccess(v3, v19, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v15 = Strong;
    MOSuggestionAssetMediaAlbumArtProvider.handleStaleRequests()();
    *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  }
  return result;
}

double closure #2 in MOSuggestionAssetMediaAlbumArtProvider.fireBatchOperation()(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t Strong;
  _QWORD *v30;
  id v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  __n128 v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  unint64_t v51;
  char v52;
  uint64_t v53;
  id v54;
  Class v55;
  id v56;
  uint64_t v57;
  __int128 *v58;
  uint64_t v59;
  id v60;
  void (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  unsigned int (*v65)(uint64_t, uint64_t, uint64_t, __n128);
  void (*v66)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  __n128 v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  char v75;
  __n128 v76;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __n128 v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  void *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  NSObject *v95;
  os_log_type_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  __n128 v101;
  void (*v102)(char *, uint64_t, __n128);
  void *v103;
  void (*v104)(char *, uint64_t);
  uint64_t v105;
  uint64_t v106;
  id v107;
  NSObject *v108;
  os_log_type_t v109;
  uint8_t *v110;
  void *v111;
  id v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  double result;
  _QWORD *v117;
  uint64_t v118;
  objc_class *v119;
  _QWORD *v120;
  __n128 v121;
  uint64_t v122;
  char *v123;
  char *v124;
  unint64_t v125;
  uint64_t *v126;
  char *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  char *v131;
  _QWORD *v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  int v136;
  void *v137;
  id v138;
  id v139;
  NSString v140;
  id v141;
  id v142;
  uint64_t *v143;
  __n128 v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  char v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  void (*v153)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v154;
  uint64_t v155;
  NSObject *v156;
  os_log_type_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t *v160;
  uint64_t v161;
  uint64_t v162;
  __n128 v163;
  unsigned int (*v164)(uint64_t, uint64_t, uint64_t, __n128);
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  void (*v169)(char *, char *, uint64_t);
  uint64_t v170;
  unint64_t v171;
  uint64_t *v172;
  uint64_t v173;
  uint64_t v174;
  NSObject *v175;
  os_log_type_t v176;
  uint64_t v177;
  uint64_t v178;
  void (*v179)(id);
  id v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  NSObject *v184;
  os_log_type_t v185;
  _BOOL4 v186;
  uint8_t *v187;
  uint64_t v188;
  id v189;
  uint64_t v190;
  unint64_t v191;
  Class v192;
  id v193;
  char *v194;
  uint64_t v195;
  uint64_t *v196;
  char *v197;
  char *v198;
  NSString v199;
  NSString v200;
  NSString v201;
  __n128 v202;
  int v203;
  void *v204;
  void *v205;
  char *v206;
  id v207;
  void *v208;
  void *v209;
  char *v210;
  void *v211;
  uint64_t v212;
  id v213;
  uint64_t ObjCClassFromMetadata;
  id v215;
  void *v216;
  id v217;
  id v218;
  uint64_t v219;
  NSString v220;
  id v221;
  id v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  __n128 v226;
  uint64_t v227;
  uint64_t v228;
  NSObject *v229;
  os_log_type_t v230;
  uint8_t *v231;
  _QWORD *v232;
  uint64_t v233;
  char *v234;
  char *v235;
  _QWORD *v236;
  uint64_t v237;
  char *v238;
  int v239;
  id v240;
  uint64_t v241;
  unint64_t v242;
  void (*v243)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  void (*v244)(char *, unint64_t, uint64_t, __n128);
  unsigned int (*v245)(uint64_t, uint64_t, uint64_t, __n128);
  void (*v246)(char *, char *, uint64_t);
  __n128 v247;
  char *v248;
  uint64_t *v249;
  char *v250;
  NSString v251;
  uint64_t v252;
  char *v253;
  uint64_t v254;
  char *v255;
  _QWORD *v256;
  uint64_t *v257;
  uint64_t v258;
  Class isa;
  void *v260;
  char *v261;
  char *v262;
  char *v263;
  char *v264;
  uint64_t v265;
  char v266;
  uint64_t v267;
  unint64_t v268;
  NSURL v269;
  __int128 v270;
  __int128 v271;
  char v272[8];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v235 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v255 = (char *)&v235 - v11;
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v235 - v13;
  v15 = __chkstk_darwin(v12);
  v261 = (char *)&v235 - v16;
  __chkstk_darwin(v15);
  v18 = (char *)&v235 - v17;
  v19 = type metadata accessor for URL(0);
  v258 = *(_QWORD *)(v19 - 8);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v235 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v20);
  v262 = (char *)&v235 - v24;
  v25 = __chkstk_darwin(v23);
  v27 = (char *)&v235 - v26;
  __chkstk_darwin(v25);
  v263 = (char *)&v235 - v28;
  a2 += 16;
  swift_beginAccess(a2, v272, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (!Strong)
    goto LABEL_60;
  v30 = (_QWORD *)Strong;
  v248 = v22;
  v31 = objc_msgSend(a1, "responseDictionary");
  if (!v31)
    goto LABEL_58;
  v32 = v31;
  v33 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v31, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v269.super.isa = (Class)1635017060;
  v269._urlString = (NSString *)0xE400000000000000;
  AnyHashable.init<A>(_:)(&v269._clients, &v269, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v33 + 16)
    && (v34 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&v269._clients), (v35 & 1) != 0))
  {
    outlined init with copy of Any(*(_QWORD *)(v33 + 56) + 32 * v34, (uint64_t)&v270);
  }
  else
  {
    v270 = 0u;
    v271 = 0u;
  }
  swift_bridgeObjectRelease(v33);
  outlined destroy of AnyHashable((uint64_t)&v269._clients);
  if (!*((_QWORD *)&v271 + 1))
  {
    swift_release(v30);
    outlined destroy of Any?((uint64_t)&v270, &demangling cache variable for type metadata for Any?);
    goto LABEL_60;
  }
  v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [[AnyHashable : Any]]);
  if ((swift_dynamicCast(&v269, &v270, (char *)&type metadata for Any + 8, v36, 6) & 1) == 0)
  {
LABEL_58:
    swift_release(v30);
LABEL_60:
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
      swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    v106 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v106, (uint64_t)static MOAngelLogger.assets);
    v107 = a1;
    v108 = Logger.logObject.getter(v107);
    v109 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v108, v109))
    {
      v110 = (uint8_t *)swift_slowAlloc(12, -1);
      v111 = (void *)swift_slowAlloc(32, -1);
      v269._clients = v111;
      *(_DWORD *)v110 = 136315138;
      v112 = objc_msgSend(v107, "debugDescription");
      v113 = static String._unconditionallyBridgeFromObjectiveC(_:)(v112);
      v115 = v114;

      *(_QWORD *)&v270 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v113, v115, (uint64_t *)&v269._clients);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v270, (char *)&v270 + 8, v110 + 4);

      swift_bridgeObjectRelease(v115);
      _os_log_impl((void *)&_mh_execute_header, v108, v109, "[MOSuggestionAssetMediaAlbumArtProvider] Did not decode AMS result struct correctly result=%s", v110, 0xCu);
      swift_arrayDestroy(v111, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v111, -1, -1);
      swift_slowDealloc(v110, -1, -1);

    }
    else
    {

    }
    return result;
  }
  v250 = v14;
  v254 = v19;
  v238 = v9;
  v256 = v30;
  v249 = (uint64_t *)(a3 + 16);
  isa = v269.super.isa;
  v37 = *((_QWORD *)v269.super.isa + 2);
  if (v37)
  {
    v38 = (uint64_t *)((char *)isa + 32);
    v257 = v256 + 7;
    v39 = swift_beginAccess(v256 + 7, &v269, 0, 0);
    v264 = (char *)&type metadata for Any + 8;
    v39.n128_u64[0] = 136315138;
    v247 = v39;
    v253 = v18;
    v251 = v27;
    do
    {
      v40 = *v38;
      v267 = 0x7475626972747461;
      v268 = 0xEA00000000007365;
      swift_bridgeObjectRetain(v40);
      AnyHashable.init<A>(_:)(&v269._clients, &v267, &type metadata for String, &protocol witness table for String);
      if (*(_QWORD *)(v40 + 16)
        && (v41 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&v269._clients), (v42 & 1) != 0))
      {
        outlined init with copy of Any(*(_QWORD *)(v40 + 56) + 32 * v41, (uint64_t)&v270);
      }
      else
      {
        v270 = 0u;
        v271 = 0u;
      }
      outlined destroy of AnyHashable((uint64_t)&v269._clients);
      if (*((_QWORD *)&v271 + 1))
      {
        v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [AnyHashable : Any]);
        if ((swift_dynamicCast(&v267, &v270, v264, v43, 6) & 1) != 0)
        {
          v44 = v267;
          v267 = 25705;
          v268 = 0xE200000000000000;
          AnyHashable.init<A>(_:)(&v269._clients, &v267, &type metadata for String, &protocol witness table for String);
          if (*(_QWORD *)(v40 + 16)
            && (v45 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&v269._clients), (v46 & 1) != 0))
          {
            outlined init with copy of Any(*(_QWORD *)(v40 + 56) + 32 * v45, (uint64_t)&v270);
          }
          else
          {
            v270 = 0u;
            v271 = 0u;
          }
          swift_bridgeObjectRelease(v40);
          outlined destroy of AnyHashable((uint64_t)&v269._clients);
          if (*((_QWORD *)&v271 + 1))
          {
            if ((swift_dynamicCast(&v267, &v270, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
            {
              v48 = v267;
              v47 = (void *)v268;
              v49 = *v257;
              swift_bridgeObjectRetain(*v257);
              v252 = v48;
              v260 = v47;
              v50 = specialized Set.contains(_:)(v48, (uint64_t)v47, v49);
              swift_bridgeObjectRelease(v49);
              v267 = 0x6B726F77747261;
              v268 = 0xE700000000000000;
              AnyHashable.init<A>(_:)(&v269._clients, &v267, &type metadata for String, &protocol witness table for String);
              if (*(_QWORD *)(v44 + 16)
                && (v51 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&v269._clients), (v52 & 1) != 0))
              {
                outlined init with copy of Any(*(_QWORD *)(v44 + 56) + 32 * v51, (uint64_t)&v270);
              }
              else
              {
                v270 = 0u;
                v271 = 0u;
              }
              swift_bridgeObjectRelease(v44);
              outlined destroy of AnyHashable((uint64_t)&v269._clients);
              if (*((_QWORD *)&v271 + 1))
              {
                if ((swift_dynamicCast(&v267, &v270, (char *)&type metadata for Any + 8, v43, 6) & 1) != 0)
                {
                  v53 = v267;
                  v54 = objc_allocWithZone((Class)AMSMediaArtwork);
                  v55 = Dictionary._bridgeToObjectiveC()().super.isa;
                  v56 = objc_msgSend(v54, "initWithDictionary:", v55, swift_bridgeObjectRelease(v53).n128_f64[0]);

                  v57 = (uint64_t)v251;
                  if ((v50 & 1) != 0)
                  {
                    v58 = &static Constants.HighQualityArtworkSize;
                    v59 = v258;
                    if (one-time initialization token for HighQualityArtworkSize != -1)
                    {
                      swift_once(&one-time initialization token for HighQualityArtworkSize, one-time initialization function for HighQualityArtworkSize);
                      v58 = &static Constants.HighQualityArtworkSize;
                    }
                  }
                  else
                  {
                    v58 = &static Constants.DefaultArtworkSize;
                    v59 = v258;
                    if (one-time initialization token for DefaultArtworkSize != -1)
                    {
                      swift_once(&one-time initialization token for DefaultArtworkSize, one-time initialization function for DefaultArtworkSize);
                      v58 = &static Constants.DefaultArtworkSize;
                    }
                  }
                  v60 = objc_msgSend(v56, "URLWithSize:", *(double *)v58, *((double *)v58 + 1));

                  if (v60)
                  {
                    static URL._unconditionallyBridgeFromObjectiveC(_:)(v60);

                    v61 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 32);
                    v62 = v59;
                    v63 = v254;
                    v61(v18, v57, v254);
                    v64 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v62 + 56);
                    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v64)(v18, 0, 1, v63);
                    v65 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v62 + 48);
                    if (((unsigned int (*)(char *, uint64_t, uint64_t))v65)(v18, 1, v63) != 1)
                    {
                      v245 = v65;
                      v66 = v64;
                      v67 = v263;
                      v68 = v254;
                      v244 = (void (*)(char *, unint64_t, uint64_t, __n128))v61;
                      v61(v263, (uint64_t)v18, v254);
                      v69 = (uint64_t)v261;
                      v246 = *(void (**)(char *, char *, uint64_t))(v258 + 16);
                      v246(v261, v67, v68);
                      v243 = v66;
                      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v66)(v69, 0, 1, v68);
                      v70 = v249;
                      v71 = swift_beginAccess(v249, &v269._clients, 33, 0);
                      if (v245(v69, 1, v68, v71) == 1)
                      {
                        outlined destroy of Any?(v69, &demangling cache variable for type metadata for URL?);
                        v72 = *v70;
                        swift_bridgeObjectRetain(*v70);
                        v73 = specialized __RawDictionaryStorage.find<A>(_:)(v252, (uint64_t)v260);
                        v75 = v74;
                        v76 = swift_bridgeObjectRelease(v72);
                        if ((v75 & 1) != 0)
                        {
                          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v70);
                          v78 = *v70;
                          *(_QWORD *)&v270 = *v70;
                          *v70 = 0x8000000000000000;
                          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                          {
                            specialized _NativeDictionary.copy()();
                            v78 = v270;
                          }
                          v79 = *(_QWORD *)(*(_QWORD *)(v78 + 48) + 16 * v73 + 8);
                          v80 = v78;
                          v252 = v78;
                          v81 = swift_bridgeObjectRelease(v79);
                          v82 = *(_QWORD *)(v80 + 56) + *(_QWORD *)(v258 + 72) * v73;
                          v83 = (uint64_t)v250;
                          v84 = v254;
                          v244(v250, v82, v254, v81);
                          v85 = v73;
                          v86 = v252;
                          specialized _NativeDictionary._delete(at:)(v85, v252);
                          v87 = *v70;
                          *v70 = v86;
                          v76 = swift_bridgeObjectRelease(v87);
                          v88 = 0;
                        }
                        else
                        {
                          v88 = 1;
                          v84 = v254;
                          v83 = (uint64_t)v250;
                        }
                        v92 = v262;
                        v243(v83, v88, 1, v84, v76);
                        swift_bridgeObjectRelease(v260);
                        outlined destroy of Any?(v83, &demangling cache variable for type metadata for URL?);
                      }
                      else
                      {
                        ((void (*)(uint64_t, uint64_t, uint64_t))v244)(v57, v69, v68);
                        v89 = swift_isUniquelyReferenced_nonNull_native(*v70);
                        *(_QWORD *)&v270 = *v70;
                        *v70 = 0x8000000000000000;
                        v90 = v260;
                        specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v57, v252, (uint64_t)v260, v89);
                        v91 = *v70;
                        *v70 = v270;
                        swift_bridgeObjectRelease(v90);
                        swift_bridgeObjectRelease(v91);
                        v92 = v262;
                      }
                      swift_endAccess(&v269._clients);
                      if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
                        swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
                      v93 = type metadata accessor for Logger(0);
                      __swift_project_value_buffer(v93, (uint64_t)static MOAngelLogger.assets);
                      v94 = ((uint64_t (*)(char *, char *, uint64_t))v246)(v92, v263, v254);
                      v95 = Logger.logObject.getter(v94);
                      v96 = static os_log_type_t.default.getter();
                      if (os_log_type_enabled(v95, v96))
                      {
                        v97 = swift_slowAlloc(12, -1);
                        v260 = (void *)swift_slowAlloc(32, -1);
                        v269._clients = v260;
                        *(_DWORD *)v97 = v247.n128_u32[0];
                        v98 = URL.debugDescription.getter();
                        v100 = v99;
                        *(_QWORD *)(v97 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v98, v99, (uint64_t *)&v269._clients);
                        v101 = swift_bridgeObjectRelease(v100);
                        v102 = *(void (**)(char *, uint64_t, __n128))(v258 + 8);
                        v102(v262, v254, v101);
                        _os_log_impl((void *)&_mh_execute_header, v95, v96, "[MOSuggestionAssetMediaAlbumArtProvider] Obtained %s", (uint8_t *)v97, 0xCu);
                        v103 = v260;
                        swift_arrayDestroy(v260, 1, (char *)&type metadata for Any + 8);
                        swift_slowDealloc(v103, -1, -1);
                        swift_slowDealloc(v97, -1, -1);

                        ((void (*)(char *, uint64_t))v102)(v263, v254);
                      }
                      else
                      {

                        v104 = *(void (**)(char *, uint64_t))(v258 + 8);
                        v105 = v254;
                        v104(v92, v254);
                        v104(v263, v105);
                      }
                      goto LABEL_12;
                    }
                  }
                  else
                  {
                    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56))(v18, 1, 1, v254);
                  }
                  swift_bridgeObjectRelease(v260);
                  outlined destroy of Any?((uint64_t)v18, &demangling cache variable for type metadata for URL?);
                }
                else
                {
                  swift_bridgeObjectRelease(v260);
                }
              }
              else
              {
                swift_bridgeObjectRelease(v260);
                outlined destroy of Any?((uint64_t)&v270, &demangling cache variable for type metadata for Any?);
              }
            }
            else
            {
              swift_bridgeObjectRelease(v44);
            }
          }
          else
          {
            swift_bridgeObjectRelease(v44);
            outlined destroy of Any?((uint64_t)&v270, &demangling cache variable for type metadata for Any?);
          }
        }
        else
        {
          swift_bridgeObjectRelease(v40);
        }
      }
      else
      {
        swift_bridgeObjectRelease(v40);
        outlined destroy of Any?((uint64_t)&v270, &demangling cache variable for type metadata for Any?);
      }
LABEL_12:
      ++v38;
      --v37;
    }
    while (v37);
  }
  swift_bridgeObjectRelease(isa);
  v117 = v256;
  swift_beginAccess(v256 + 2, &v269._clients, 1, 0);
  v118 = v117[2];
  v119 = *(objc_class **)(v118 + 16);
  if (!v119)
    goto LABEL_106;
  v120 = v256 + 7;
  swift_bridgeObjectRetain(v118);
  v236 = v120;
  v121 = swift_beginAccess(v120, &v270, 0, 0);
  v246 = 0;
  v235 = &v266;
  v237 = v118;
  v122 = v118 + 64;
  v121.n128_u64[0] = 136315138;
  v247 = v121;
  v245 = (unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))((char *)&type metadata for Any + 8);
  do
  {
    v125 = *(_QWORD *)(v122 + 24);
    if (!v125)
      goto LABEL_69;
    isa = v119;
    v126 = *(uint64_t **)(v122 - 24);
    v251 = *(NSString *)(v122 - 32);
    v127 = *(char **)(v122 - 8);
    v252 = *(_QWORD *)(v122 - 16);
    v128 = *(char **)(v122 + 8);
    v253 = *(char **)v122;
    v129 = *(_QWORD *)(v122 + 16);
    v130 = *(char **)(v122 + 40);
    v250 = *(char **)(v122 + 48);
    v131 = *(char **)(v122 + 64);
    v260 = *(void **)(v122 + 56);
    v132 = v256;
    v133 = v256[7];
    swift_bridgeObjectRetain(v133);
    swift_bridgeObjectRetain(v126);
    v263 = v127;
    swift_bridgeObjectRetain(v127);
    v264 = v128;
    swift_bridgeObjectRetain(v128);
    swift_bridgeObjectRetain_n(v125, 2);
    v261 = v130;
    swift_bridgeObjectRetain(v130);
    v262 = v131;
    v134 = v131;
    v135 = v129;
    swift_retain(v134);
    v136 = specialized Set.contains(_:)(v129, v125, v133);
    swift_bridgeObjectRelease(v133);
    v137 = (void *)v132[5];
    v138 = objc_allocWithZone((Class)NSString);
    swift_bridgeObjectRetain(v125);
    v139 = v137;
    v140 = String._bridgeToObjectiveC()();
    v141 = objc_msgSend(v138, "initWithString:", v140, swift_bridgeObjectRelease(v125).n128_f64[0]);

    v142 = objc_msgSend(v139, "objectForKey:", v141);
    if (v142)
    {
      if ((v136 & 1) == 0)
      {
        if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
          swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
        v154 = type metadata accessor for Logger(0);
        __swift_project_value_buffer(v154, (uint64_t)static MOAngelLogger.assets);
        swift_bridgeObjectRetain(v125);
        v156 = Logger.logObject.getter(v155);
        v157 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v156, v157))
        {
          v158 = swift_slowAlloc(12, -1);
          v159 = v135;
          v160 = v126;
          v161 = swift_slowAlloc(32, -1);
          v267 = v161;
          *(_DWORD *)v158 = v247.n128_u32[0];
          swift_bridgeObjectRetain(v125);
          *(_QWORD *)(v158 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v159, v125, &v267);
          swift_bridgeObjectRelease_n(v125, 3);
          _os_log_impl((void *)&_mh_execute_header, v156, v157, "[MOSuggestionAssetMediaAlbumArtProvider] Cache hit trackID=%s", (uint8_t *)v158, 0xCu);
          swift_arrayDestroy(v161, 1, (char *)&type metadata for Any + 8);
          v162 = v161;
          v126 = v160;
          swift_slowDealloc(v162, -1, -1);
          swift_slowDealloc(v158, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n(v125, 2);
        }
        v179 = (void (*)(id))v260;
        v119 = isa;
        v180 = v142;
        v181 = v262;
        v179(v142);
        swift_release(v181);
        swift_bridgeObjectRelease(v261);
        swift_bridgeObjectRelease(v125);
        swift_bridgeObjectRelease(v264);
        swift_bridgeObjectRelease(v263);
        swift_bridgeObjectRelease(v126);

        goto LABEL_69;
      }

    }
    v143 = v249;
    v144 = swift_beginAccess(v249, &v267, 32, 0);
    v145 = *v143;
    v146 = *(_QWORD *)(*v143 + 16);
    v257 = v126;
    if (!v146)
    {
      v151 = (uint64_t)v255;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v258 + 56))(v255, 1, 1, v254, v144);
LABEL_84:
      outlined destroy of Any?(v151, &demangling cache variable for type metadata for URL?);
      swift_endAccess(&v267);
LABEL_87:
      v172 = v257;
      if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
        swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
      v173 = type metadata accessor for Logger(0);
      __swift_project_value_buffer(v173, (uint64_t)static MOAngelLogger.assets);
      swift_bridgeObjectRetain(v125);
      v175 = Logger.logObject.getter(v174);
      v176 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v175, v176))
      {
        v177 = swift_slowAlloc(12, -1);
        v178 = swift_slowAlloc(32, -1);
        v267 = v178;
        *(_DWORD *)v177 = v247.n128_u32[0];
        swift_bridgeObjectRetain(v125);
        *(_QWORD *)(v177 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v135, v125, &v267);
        swift_bridgeObjectRelease_n(v125, 3);
        _os_log_impl((void *)&_mh_execute_header, v175, v176, "[MOSuggestionAssetMediaAlbumArtProvider] Artwork failed for trackID=%s", (uint8_t *)v177, 0xCu);
        swift_arrayDestroy(v178, 1, v245);
        swift_slowDealloc(v178, -1, -1);
        swift_slowDealloc(v177, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v125, 2);
      }
      v123 = v261;
      v119 = isa;
      v124 = v262;
      ((void (*)(_QWORD))v260)(0);
      swift_release(v124);
      swift_bridgeObjectRelease(v123);
      swift_bridgeObjectRelease(v125);
      swift_bridgeObjectRelease(v264);
      swift_bridgeObjectRelease(v263);
      swift_bridgeObjectRelease(v172);
      goto LABEL_69;
    }
    swift_bridgeObjectRetain(v125);
    v147 = specialized __RawDictionaryStorage.find<A>(_:)(v135, v125);
    v148 = v258;
    if ((v149 & 1) != 0)
    {
      v150 = *(_QWORD *)(v145 + 56) + *(_QWORD *)(v258 + 72) * v147;
      v151 = (uint64_t)v255;
      v152 = v254;
      (*(void (**)(char *, unint64_t, uint64_t))(v258 + 16))(v255, v150, v254);
      v153 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v148 + 56);
      v153(v151, 0, 1, v152);
    }
    else
    {
      v153 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v258 + 56);
      v151 = (uint64_t)v255;
      v152 = v254;
      v153((uint64_t)v255, 1, 1, v254);
    }
    v163 = swift_bridgeObjectRelease(v125);
    v164 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v148 + 48);
    if (v164(v151, 1, v152, v163) == 1)
      goto LABEL_84;
    v244 = (void (*)(char *, unint64_t, uint64_t, __n128))v164;
    v165 = v248;
    v166 = v151;
    v167 = v254;
    (*(void (**)(char *, uint64_t, uint64_t))(v148 + 32))(v248, v166, v254);
    swift_endAccess(&v267);
    v168 = v148;
    v169 = v246;
    v170 = Data.init(contentsOf:options:)(v165, 0);
    if (v169)
    {
      swift_errorRelease(v169);
      (*(void (**)(char *, uint64_t))(v168 + 8))(v165, v167);
      v246 = 0;
      goto LABEL_87;
    }
    v241 = v170;
    v242 = v171;
    v246 = 0;
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
      swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    v182 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v182, (uint64_t)static MOAngelLogger.assets);
    v183 = swift_bridgeObjectRetain_n(v125, 2);
    v184 = Logger.logObject.getter(v183);
    v185 = static os_log_type_t.default.getter();
    v186 = os_log_type_enabled(v184, v185);
    v243 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))v135;
    if (v186)
    {
      v187 = (uint8_t *)swift_slowAlloc(12, -1);
      v188 = swift_slowAlloc(32, -1);
      v267 = v188;
      *(_DWORD *)v187 = v247.n128_u32[0];
      v240 = v187 + 4;
      swift_bridgeObjectRetain(v125);
      v265 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v135, v125, &v267);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v265, v235, v240);
      swift_bridgeObjectRelease_n(v125, 3);
      _os_log_impl((void *)&_mh_execute_header, v184, v185, "[MOSuggestionAssetMediaAlbumArtProvider] Downloading Artwork for trackID=%s", v187, 0xCu);
      swift_arrayDestroy(v188, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v188, -1, -1);
      swift_slowDealloc(v187, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v125, 2);
    }
    v189 = objc_allocWithZone((Class)UIImage);
    v190 = v241;
    v191 = v242;
    outlined copy of Data._Representation(v241, v242);
    v192 = Data._bridgeToObjectiveC()().super.isa;
    v193 = objc_msgSend(v189, "initWithData:", v192);
    outlined consume of Data._Representation(v190, v191);

    v194 = v238;
    v195 = v254;
    v153((uint64_t)v238, 1, 1, v254);
    swift_bridgeObjectRetain(v125);
    v196 = v257;
    swift_bridgeObjectRetain(v257);
    v197 = v263;
    swift_bridgeObjectRetain(v263);
    v198 = v264;
    swift_bridgeObjectRetain(v264);
    v240 = v193;
    v251 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v196);
    v199 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v197);
    v200 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v198);
    v201 = String._bridgeToObjectiveC()();
    v202 = swift_bridgeObjectRelease(v125);
    v203 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v244)(v194, 1, v195, v202);
    v239 = v136;
    if (v203 == 1)
    {
      v204 = 0;
    }
    else
    {
      URL._bridgeToObjectiveC()((NSURL *)((char *)&v269.super.isa + 4));
      v204 = v205;
      (*(void (**)(char *, uint64_t))(v258 + 8))(v194, v195);
    }
    v206 = v250;
    v207 = objc_allocWithZone((Class)MOSuggestionAssetMediaItem);
    v234 = v206;
    v208 = v251;
    v209 = v240;
    v210 = (char *)objc_msgSend(v207, "initTitle:albumTitle:artistName:albumArt:trackIdentifier:previewURL:mediaType:", v251, v199, v200, v240, v201, v204, v234);

    v211 = v209;
    v212 = MOSuggestionAssetsTypeMediaCoverArt;
    type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MOSuggestionAssetMediaItem, MOSuggestionAssetMediaItem_ptr);
    v213 = objc_allocWithZone((Class)MOSuggestionAsset);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v253 = v210;
    v215 = objc_msgSend(v213, "init:type:contentClassType:", v210, v212, ObjCClassFromMetadata);
    v216 = (void *)v256[5];
    v217 = objc_allocWithZone((Class)NSString);
    swift_bridgeObjectRetain(v125);
    v218 = v216;
    v219 = (uint64_t)v243;
    v220 = String._bridgeToObjectiveC()();
    v221 = objc_msgSend(v217, "initWithString:", v220, swift_bridgeObjectRelease(v125).n128_f64[0]);

    objc_msgSend(v218, "setObject:forKey:", v215, v221);
    v222 = v215;
    v223 = v262;
    ((void (*)(id))v260)(v215);

    if ((v239 & 1) != 0)
    {
      swift_beginAccess(v236, &v267, 33, 0);
      specialized Set._Variant.remove(_:)(v219, v125);
      v225 = v224;
      swift_endAccess(&v267);

      swift_release(v223);
      swift_bridgeObjectRelease(v261);
      swift_bridgeObjectRelease(v125);
      swift_bridgeObjectRelease(v264);
      swift_bridgeObjectRelease(v263);
      swift_bridgeObjectRelease(v257);
      outlined consume of Data._Representation(v241, v242);
      v226 = swift_bridgeObjectRelease(v225);
      (*(void (**)(char *, uint64_t, __n128))(v258 + 8))(v248, v254, v226);
      swift_bridgeObjectRelease(v125);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v258 + 8))(v248, v254);
      outlined consume of Data._Representation(v241, v242);
      swift_release(v223);
      swift_bridgeObjectRelease(v261);
      swift_bridgeObjectRelease(v264);
      swift_bridgeObjectRelease(v263);
      swift_bridgeObjectRelease(v257);
      swift_bridgeObjectRelease_n(v125, 2);

    }
    v119 = isa;
LABEL_69:
    v122 += 112;
    v119 = (objc_class *)((char *)v119 - 1);
  }
  while (v119);
  swift_bridgeObjectRelease(v237);
LABEL_106:
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v227 = type metadata accessor for Logger(0);
  v228 = __swift_project_value_buffer(v227, (uint64_t)static MOAngelLogger.assets);
  v229 = Logger.logObject.getter(v228);
  v230 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v229, v230))
  {
    v231 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v231 = 0;
    _os_log_impl((void *)&_mh_execute_header, v229, v230, "[MOSuggestionAssetMediaAlbumArtProvider] Finished executing all active requests", v231, 2u);
    swift_slowDealloc(v231, -1, -1);
  }

  v232 = v256;
  v233 = v256[2];
  v256[2] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v233);
  MOSuggestionAssetMediaAlbumArtProvider.handleStaleRequests()();
  *(_QWORD *)&result = swift_release(v232).n128_u64[0];
  return result;
}

uint64_t MOSuggestionAssetPodcastAlbumArtProvider.mediaTaskType()()
{
  return 301;
}

void *MOSuggestionAssetMediaAlbumArtProvider.BatchRequestIntervalKey.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetMediaAlbumArtProvider.BatchRequestIntervalKey;
}

unint64_t static MOSuggestionAssetMediaAlbumArtProvider.BatchRequestIntervalKey.getter()
{
  return 0xD00000000000003BLL;
}

void *MOSuggestionAssetMediaAlbumArtProvider.CacheCountKey.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetMediaAlbumArtProvider.CacheCountKey;
}

unint64_t static MOSuggestionAssetMediaAlbumArtProvider.CacheCountKey.getter()
{
  return 0xD000000000000031;
}

void *MOSuggestionAssetMediaAlbumArtProvider.RetryCountKey.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetMediaAlbumArtProvider.RetryCountKey;
}

unint64_t static MOSuggestionAssetMediaAlbumArtProvider.RetryCountKey.getter()
{
  return 0xD000000000000031;
}

void *MOSuggestionAssetMediaAlbumArtProvider.PredefinedAppNum.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetMediaAlbumArtProvider.PredefinedAppNum;
}

uint64_t static MOSuggestionAssetMediaAlbumArtProvider.PredefinedAppNum.getter()
{
  return 15;
}

void *MOSuggestionAssetMediaAlbumArtProvider.ThirdPartyAppColorHashvalueKeyPrefix.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetMediaAlbumArtProvider.ThirdPartyAppColorHashvalueKeyPrefix;
}

unint64_t static MOSuggestionAssetMediaAlbumArtProvider.ThirdPartyAppColorHashvalueKeyPrefix.getter()
{
  return 0xD000000000000035;
}

void *MOSuggestionAssetMediaAlbumArtProvider.ThirdPartyAppColorFallbackKey.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetMediaAlbumArtProvider.ThirdPartyAppColorFallbackKey;
}

unint64_t static MOSuggestionAssetMediaAlbumArtProvider.ThirdPartyAppColorFallbackKey.getter()
{
  return 0xD000000000000041;
}

void one-time initialization function for ThirdPartyAppColorHashDefaultValues()
{
  static MOSuggestionAssetMediaAlbumArtProvider.ThirdPartyAppColorHashDefaultValues = (uint64_t)&outlined read-only object #0 of one-time initialization function for ThirdPartyAppColorHashDefaultValues;
}

uint64_t *MOSuggestionAssetMediaAlbumArtProvider.ThirdPartyAppColorHashDefaultValues.unsafeMutableAddressor()
{
  if (one-time initialization token for ThirdPartyAppColorHashDefaultValues != -1)
    swift_once(&one-time initialization token for ThirdPartyAppColorHashDefaultValues, one-time initialization function for ThirdPartyAppColorHashDefaultValues);
  return &static MOSuggestionAssetMediaAlbumArtProvider.ThirdPartyAppColorHashDefaultValues;
}

double static MOSuggestionAssetMediaAlbumArtProvider.ThirdPartyAppColorHashDefaultValues.getter()
{
  double result;

  if (one-time initialization token for ThirdPartyAppColorHashDefaultValues != -1)
    swift_once(&one-time initialization token for ThirdPartyAppColorHashDefaultValues, one-time initialization function for ThirdPartyAppColorHashDefaultValues);
  *(_QWORD *)&result = swift_bridgeObjectRetain(static MOSuggestionAssetMediaAlbumArtProvider.ThirdPartyAppColorHashDefaultValues).n128_u64[0];
  return result;
}

void *MOSuggestionAssetMediaAlbumArtProvider.ThirdPartyAppColorFallbackDefaultValue.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetMediaAlbumArtProvider.ThirdPartyAppColorFallbackDefaultValue;
}

unint64_t static MOSuggestionAssetMediaAlbumArtProvider.ThirdPartyAppColorFallbackDefaultValue.getter()
{
  return 0xD000000000000040;
}

double *MOSuggestionAssetMediaAlbumArtProvider.thirdPartyAppPredefinedColors.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  double *v6;
  uint64_t v7;
  Swift::String v8;
  void *object;
  unint64_t v10;
  NSString v11;
  NSString v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  double *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  double *v31;
  uint64_t v32;
  unint64_t v33;

  if (one-time initialization token for ThirdPartyAppColorHashDefaultValues != -1)
    swift_once(&one-time initialization token for ThirdPartyAppColorHashDefaultValues, one-time initialization function for ThirdPartyAppColorHashDefaultValues);
  v1 = *(_QWORD *)(static MOSuggestionAssetMediaAlbumArtProvider.ThirdPartyAppColorHashDefaultValues + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v2 = *(void **)(v0 + 64);
  swift_bridgeObjectRetain(static MOSuggestionAssetMediaAlbumArtProvider.ThirdPartyAppColorHashDefaultValues);
  v3 = 0;
  v30 = v4;
  v5 = (uint64_t *)(v4 + 40);
  v6 = _swiftEmptyArrayStorage;
  do
  {
    v7 = *v5;
    v32 = v3;
    swift_bridgeObjectRetain(v7);
    v8._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = v8._object;
    v32 = 0xD000000000000035;
    v33 = 0x80000001001AF8E0;
    String.append(_:)(v8);
    swift_bridgeObjectRelease(object);
    v10 = v33;
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v10);
    v12 = String._bridgeToObjectiveC()();
    v13 = objc_msgSend(v2, "getStringSettingForKey:withFallback:", v11, v12, swift_bridgeObjectRelease(v7).n128_f64[0]);

    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v16 = v15;

    swift_bridgeObjectRetain(v16);
    if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
      v6 = (double *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
    v18 = *((_QWORD *)v6 + 2);
    v17 = *((_QWORD *)v6 + 3);
    if (v18 >= v17 >> 1)
      v6 = (double *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((_QWORD *)(v17 > 1), v18 + 1, 1, v6);
    *((_QWORD *)v6 + 2) = v18 + 1;
    v19 = &v6[2 * v18];
    *((_QWORD *)v19 + 4) = v14;
    *((_QWORD *)v19 + 5) = v16;
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
      swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    v20 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v20, (uint64_t)static MOAngelLogger.assets);
    swift_bridgeObjectRetain(v16);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc(12, -1);
      v31 = v6;
      v25 = v2;
      v26 = v1;
      v27 = swift_slowAlloc(32, -1);
      v32 = v27;
      *(_DWORD *)v24 = 136315138;
      swift_bridgeObjectRetain(v16);
      *(_QWORD *)(v24 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v16, &v32);
      swift_bridgeObjectRelease_n(v16, 3);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "[MOSuggestionAssetMediaAlbumArtProvider] ThirdPartyAppPredefinedColors=%s", (uint8_t *)v24, 0xCu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      v28 = v27;
      v1 = v26;
      v2 = v25;
      v6 = v31;
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v24, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v16, 2);
    }
    ++v3;
    v5 += 2;
  }
  while (v1 != v3);
  swift_bridgeObjectRelease(v30);
  return v6;
}

uint64_t MOSuggestionAssetMediaAlbumArtProvider.thirdPartyAppColorFallbackValue.getter()
{
  uint64_t v0;
  void *v1;
  NSString v2;
  NSString v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v1 = *(void **)(v0 + 64);
  v2 = String._bridgeToObjectiveC()();
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v1, "getStringSettingForKey:withFallback:", v2, v3);

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;

  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v8 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v8, (uint64_t)static MOAngelLogger.assets);
  v9 = swift_bridgeObjectRetain_n(v7, 2);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v16 = v13;
    *(_DWORD *)v12 = 136315138;
    swift_bridgeObjectRetain(v7);
    v15 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v5, v7, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v12 + 4);
    swift_bridgeObjectRelease_n(v7, 3);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "[MOSuggestionAssetMediaAlbumArtProvider] ThirdPartyAppColorFallbackValue=%s", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v7, 2);
  }
  return v5;
}

uint64_t specialized static MOSuggestionAssetMediaCoverArtQueryInput.typeFromBundleId(_:)(uint64_t a1, uint64_t a2)
{
  unint64_t v5;
  unint64_t v6;
  _QWORD v7[4];

  if (a1 == 0x6C7070612E6D6F63 && a2 == 0xEC00000076742E65
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x6C7070612E6D6F63, 0xEC00000076742E65, a1, a2, 0) & 1) != 0)
  {
    return 3;
  }
  if (a1 == 0xD000000000000012 && a2 == 0x80000001001A5AF0
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x80000001001A5AF0, a1, a2, 0) & 1) != 0)
  {
    return 2;
  }
  if (a1 == 0x6C7070612E6D6F63 && a2 == 0xEF636973754D2E65
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x6C7070612E6D6F63, 0xEF636973754D2E65, a1, a2, 0) & 1) != 0
    || a1 == 0xD000000000000029 && a2 == 0x80000001001A6050
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000029, 0x80000001001A6050, a1, a2, 0) & 1) != 0)
  {
    return 1;
  }
  v7[2] = a1;
  v7[3] = a2;
  v7[0] = 0x6C7070612E6D6F63;
  v7[1] = 0xEA00000000002E65;
  v5 = lazy protocol witness table accessor for type String and conformance String();
  v6 = lazy protocol witness table accessor for type String and conformance String();
  if ((BidirectionalCollection<>.starts<A>(with:)(v7, &type metadata for String, &type metadata for String, v5, v6) & 1) != 0)
    return 0;
  else
    return 6;
}

unint64_t specialized MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications.init(rawValue:)(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications.init(rawValue:), v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

uint64_t specialized static MOSuggestionAssetMediaCoverArtQueryInput.typeFromBundleMediaType(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOMediaPlayMetaDataKeyPlayerMediaTypeSong[0]);
  v4 = v3;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v2 == v5 && v4 == v6)
  {
    v10 = 1;
    goto LABEL_8;
  }
  v8 = v6;
  v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, v4, v5, v6, 0);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v8);
  if ((v9 & 1) == 0)
  {
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOMediaPlayMetaDataKeyPlayerMediaTypeSongAlbum[0]);
    v4 = v14;
    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v13 == v15 && v4 == v16)
    {
      v10 = 4;
    }
    else
    {
      v18 = v16;
      v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v4, v15, v16, 0);
      swift_bridgeObjectRelease(v4);
      swift_bridgeObjectRelease(v18);
      if ((v19 & 1) != 0)
        return 4;
      v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOMediaPlayMetaDataKeyPlayerMediaTypePodcastEpisode[0]);
      v4 = v21;
      v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
      v24 = v22;
      if (v20 == v23 && v4 == v22)
      {
        v10 = 2;
      }
      else
      {
        v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v4, v23, v22, 0);
        swift_bridgeObjectRelease(v4);
        swift_bridgeObjectRelease(v24);
        if ((v25 & 1) != 0)
          return 2;
        v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOMediaPlayMetaDataKeyPlayerMediaTypePodcastArtist[0]);
        v4 = v27;
        v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
        v30 = v28;
        if (v26 == v29 && v4 == v28)
        {
          v10 = 5;
        }
        else
        {
          v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v4, v29, v28, 0);
          swift_bridgeObjectRelease(v4);
          swift_bridgeObjectRelease(v30);
          if ((v31 & 1) != 0)
            return 5;
          v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOMediaPlayMetaDataKeyPlayerMediaTypeThirdPartyMedia[0]);
          v4 = v33;
          v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
          v36 = v34;
          if (v32 == v35 && v4 == v34)
          {
            v10 = 6;
          }
          else
          {
            v37 = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v4, v35, v34, 0);
            swift_bridgeObjectRelease(v4);
            swift_bridgeObjectRelease(v36);
            if ((v37 & 1) != 0)
              return 6;
            v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOMediaPlayMetaDataKeyPlayerMediaTypeThirdPartyMediaAlbum[0]);
            v4 = v39;
            v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
            v42 = v40;
            if (v38 != v41 || v4 != v40)
            {
              v43 = _stringCompareWithSmolCheck(_:_:expecting:)(v38, v4, v41, v40, 0);
              swift_bridgeObjectRelease(v4);
              swift_bridgeObjectRelease(v42);
              if ((v43 & 1) != 0)
                return 7;
              v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOMediaPlayMetaDataKeyPlayerMediaTypeThirdPartyMediaArtist);
              v4 = v45;
              v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
              v11 = v46;
              if (v44 == v47 && v4 == v46)
              {
                v10 = 8;
              }
              else if ((_stringCompareWithSmolCheck(_:_:expecting:)(v44, v4, v47, v46, 0) & 1) != 0)
              {
                v10 = 8;
              }
              else
              {
                v10 = 0;
              }
              goto LABEL_9;
            }
            v10 = 7;
          }
        }
      }
    }
LABEL_8:
    v11 = v4;
LABEL_9:
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(v11);
    return v10;
  }
  return 1;
}

_QWORD *outlined retain of MOSuggestionAssetMediaCoverArtQueryInput(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  v5 = a1[9];
  swift_bridgeObjectRetain(a1[7]);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t sub_100170B6C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100170B90()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

double partial apply for closure #1 in MOSuggestionAssetMediaAlbumArtProvider.fetchAssetWithPossibleBatching(queryInput:tileSize:completion:)()
{
  uint64_t v0;

  return closure #1 in MOSuggestionAssetMediaAlbumArtProvider.fetchAssetWithPossibleBatching(queryInput:tileSize:completion:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

double block_copy_helper_41(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t block_destroy_helper_41(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t lazy protocol witness table accessor for type MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications and conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications and conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications;
  if (!lazy protocol witness table cache variable for type MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications and conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications, &type metadata for MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications and conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications and conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications and conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications;
  if (!lazy protocol witness table cache variable for type MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications and conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications, &type metadata for MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications and conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications);
  }
  return result;
}

uint64_t destroy for MOSuggestionAssetMediaCoverArtQueryInput(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(a1[7]);
  return swift_bridgeObjectRelease(a1[9]);
}

_QWORD *initializeWithCopy for MOSuggestionAssetMediaCoverArtQueryInput(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  a1[10] = a2[10];
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  return a1;
}

_QWORD *assignWithCopy for MOSuggestionAssetMediaCoverArtQueryInput(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  v8 = a2[5];
  v9 = a1[5];
  a1[5] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  a1[6] = a2[6];
  v10 = a2[7];
  v11 = a1[7];
  a1[7] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  a1[8] = a2[8];
  v12 = a2[9];
  v13 = a1[9];
  a1[9] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  a1[10] = a2[10];
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

_QWORD *assignWithTake for MOSuggestionAssetMediaCoverArtQueryInput(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = a2[7];
  v11 = a1[7];
  a1[6] = a2[6];
  a1[7] = v10;
  swift_bridgeObjectRelease(v11);
  v12 = a2[9];
  v13 = a1[9];
  a1[8] = a2[8];
  a1[9] = v12;
  swift_bridgeObjectRelease(v13);
  a1[10] = a2[10];
  return a1;
}

uint64_t getEnumTagSinglePayload for MOSuggestionAssetMediaCoverArtQueryInput(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MOSuggestionAssetMediaCoverArtQueryInput(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MOSuggestionAssetMediaCoverArtQueryInput()
{
  return &type metadata for MOSuggestionAssetMediaCoverArtQueryInput;
}

uint64_t storeEnumTagSinglePayload for MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100170F94 + 4 * byte_1001A3E51[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100170FC8 + 4 * byte_1001A3E4C[v4]))();
}

uint64_t sub_100170FC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100170FD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100170FD8);
  return result;
}

uint64_t sub_100170FE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100170FECLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100170FF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100170FF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications()
{
  return &type metadata for MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications;
}

uint64_t storeEnumTagSinglePayload for MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100171054 + 4 * byte_1001A3E56[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100171074 + 4 * byte_1001A3E5B[v4]))();
}

_BYTE *sub_100171054(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100171074(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10017107C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100171084(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10017108C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100171094(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications()
{
  return &type metadata for MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications;
}

ValueMetadata *type metadata accessor for MOSuggestionMediaCoverArtProviders()
{
  return &type metadata for MOSuggestionMediaCoverArtProviders;
}

uint64_t type metadata accessor for MOSuggestionAssetMediaAlbumArtProvider()
{
  return objc_opt_self(_TtC16MomentsUIService38MOSuggestionAssetMediaAlbumArtProvider);
}

uint64_t type metadata accessor for MOSuggestionAssetPodcastAlbumArtProvider()
{
  return objc_opt_self(_TtC16MomentsUIService40MOSuggestionAssetPodcastAlbumArtProvider);
}

uint64_t type metadata accessor for MOSuggestionAssetSongAlbumArtProvider()
{
  return objc_opt_self(_TtC16MomentsUIService37MOSuggestionAssetSongAlbumArtProvider);
}

uint64_t destroy for MOSuggestionAssetMediaAlbumArtProvider.QueuableRequest(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(a1[7]);
  swift_bridgeObjectRelease(a1[9]);
  return swift_release(a1[12]);
}

_QWORD *initializeWithCopy for MOSuggestionAssetMediaAlbumArtProvider.QueuableRequest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v10 = a2[12];
  v9 = a2[13];
  a1[12] = v10;
  a1[13] = v9;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_retain(v10);
  return a1;
}

_QWORD *assignWithCopy for MOSuggestionAssetMediaAlbumArtProvider.QueuableRequest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  v8 = a2[5];
  v9 = a1[5];
  a1[5] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  a1[6] = a2[6];
  v10 = a2[7];
  v11 = a1[7];
  a1[7] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  a1[8] = a2[8];
  v12 = a2[9];
  v13 = a1[9];
  a1[9] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  a1[10] = a2[10];
  v14 = a2[12];
  v15 = a1[12];
  a1[11] = a2[11];
  a1[12] = v14;
  swift_retain(v14);
  swift_release(v15);
  a1[13] = a2[13];
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for MOSuggestionAssetMediaAlbumArtProvider.QueuableRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v10;
  swift_bridgeObjectRelease(v11);
  v12 = *(_QWORD *)(a2 + 72);
  v13 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v12;
  swift_bridgeObjectRelease(v13);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v14 = *(_QWORD *)(a1 + 96);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release(v14);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for MOSuggestionAssetMediaAlbumArtProvider.QueuableRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MOSuggestionAssetMediaAlbumArtProvider.QueuableRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MOSuggestionAssetMediaAlbumArtProvider.QueuableRequest()
{
  return &type metadata for MOSuggestionAssetMediaAlbumArtProvider.QueuableRequest;
}

uint64_t sub_10017145C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

double partial apply for closure #1 in MOSuggestionAssetMediaAlbumArtProvider.fireBatchOperation()(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in MOSuggestionAssetMediaAlbumArtProvider.fireBatchOperation()(a1, v1);
}

uint64_t sub_100171488()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double partial apply for closure #2 in MOSuggestionAssetMediaAlbumArtProvider.fireBatchOperation()(void *a1)
{
  uint64_t v1;

  return closure #2 in MOSuggestionAssetMediaAlbumArtProvider.fireBatchOperation()(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

double outlined copy of Data._Representation(uint64_t a1, unint64_t a2)
{
  double result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain(a1);
  }
  *(_QWORD *)&result = swift_retain(a2 & 0x3FFFFFFFFFFFFFFFLL).n128_u64[0];
  return result;
}

double partial apply for closure #1 in MOSuggestionAssetMediaAlbumArtProvider.handleStaleRequests()()
{
  uint64_t v0;

  return closure #1 in MOSuggestionAssetMediaAlbumArtProvider.handleStaleRequests()(v0);
}

void specialized Dictionary.subscript.setter(uint64_t a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  _OWORD v8[2];

  v3 = v2;
  if (*(_QWORD *)(a1 + 24))
  {
    outlined init with take of Any((_OWORD *)a1, v8);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
    v7 = *v2;
    *v2 = 0x8000000000000000;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v8, a2, isUniquelyReferenced_nonNull_native);
    v6 = *v2;
    *v3 = v7;

    swift_bridgeObjectRelease(v6);
  }
  else
  {
    outlined destroy of Any?(a1, &demangling cache variable for type metadata for Any?);
    specialized Dictionary._Variant.removeValue(forKey:)((uint64_t)a2, v8);

    outlined destroy of Any?((uint64_t)v8, &demangling cache variable for type metadata for Any?);
  }
}

double specialized Dictionary.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date??);
  __chkstk_darwin(v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v11);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    outlined destroy of Any?(a1, (uint64_t *)&demangling cache variable for type metadata for Date??);
    specialized Dictionary._Variant.removeValue(forKey:)(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease(a3);
    outlined destroy of Any?((uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for Date??);
  }
  else
  {
    outlined init with take of Date?(a1, (uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for Date?);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
    v19 = *v4;
    *v4 = 0x8000000000000000;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    v17 = *v4;
    *v4 = v19;
    swift_bridgeObjectRelease(a3);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v17).n128_u64[0];
  }
  return result;
}

uint64_t MOEventBundle.isSingleAsset.getter()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = (uint64_t)MOEventBundle._orderedAssetReferences()();
  if (result)
  {
    v1 = result;
    if ((unint64_t)result >> 62)
    {
      if (result >= 0)
        result &= 0xFFFFFFFFFFFFFF8uLL;
      v2 = _CocoaArrayWrapper.endIndex.getter(result);
    }
    else
    {
      v2 = *(_QWORD *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v1);
    return v2 == 1;
  }
  return result;
}

uint64_t *MOSuggestionAssetCacheManager.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1)
    swift_once(&one-time initialization token for shared, one-time initialization function for shared);
  return &static MOSuggestionAssetCacheManager.shared;
}

unint64_t MOEventBundle.orderedAssetReferencesForTransfer.getter()
{
  return (unint64_t)MOEventBundle.orderedAssetReferencesForPreview(max:)(13);
}

void specialized Sequence.compactMap<A>(_:)(uint64_t a1, _QWORD *a2, _QWORD *a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v27;
  id v28;
  unint64_t v29;

  v8 = v7;
  v29 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
    goto LABEL_17;
  v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v10; v10 = _CocoaArrayWrapper.endIndex.getter(v20))
  {
    v11 = 4;
    while (1)
    {
      v13 = (a1 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11 - 4, a1)
          : *(id *)(a1 + 8 * v11);
      v14 = v13;
      v15 = v11 - 3;
      if (__OFADD__(v11 - 4, 1))
        break;
      v28 = v13;
      closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)(&v28, a2, a3, a4, a5, a6, a7, &v27);
      if (v8)
      {
        swift_bridgeObjectRelease(a1);

        swift_bridgeObjectRelease(v29);
        return;
      }

      v17 = v27;
      if (v27)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v16);
        v19 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v18 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v19 >= v18 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
        v12 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v17);
        specialized Array._endMutation()(v12);
      }
      ++v11;
      if (v15 == v10)
        goto LABEL_21;
    }
    __break(1u);
LABEL_17:
    if (a1 < 0)
      v20 = a1;
    else
      v20 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_21:
  swift_bridgeObjectRelease(a1);
}

void specialized _dictionaryUpCast<A, B, C, D>(_:)(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  _OWORD v35[4];
  _OWORD v36[2];
  _OWORD v37[3];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<MOUsageContextType, Any>);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v32 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v31 = (unint64_t)(63 - v4) >> 6;
  v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain(a1);
  swift_retain(v3);
  v33 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v33 << 6);
      goto LABEL_28;
    }
    v11 = v33 + 1;
    if (__OFADD__(v33, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v31)
      goto LABEL_37;
    v12 = *(_QWORD *)(v32 + 8 * v11);
    v13 = v33 + 1;
    if (!v12)
    {
      v13 = v33 + 2;
      if (v33 + 2 >= v31)
        goto LABEL_37;
      v12 = *(_QWORD *)(v32 + 8 * v13);
      if (!v12)
      {
        v13 = v33 + 3;
        if (v33 + 3 >= v31)
          goto LABEL_37;
        v12 = *(_QWORD *)(v32 + 8 * v13);
        if (!v12)
        {
          v13 = v33 + 4;
          if (v33 + 4 >= v31)
            goto LABEL_37;
          v12 = *(_QWORD *)(v32 + 8 * v13);
          if (!v12)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    v33 = v13;
LABEL_28:
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v10);
    *(_QWORD *)&v37[0] = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v10);
    *(_QWORD *)&v36[0] = v15;
    v16 = *(id *)&v37[0];
    swift_bridgeObjectRetain(v15);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [UUID : [AnyHashable : Any]?]);
    swift_dynamicCast((char *)v37 + 8, v36, v17, (char *)&type metadata for Any + 8, 7);
    v18 = *(_QWORD *)&v37[0];
    outlined init with take of Any((_OWORD *)((char *)v37 + 8), v35);
    outlined init with take of Any(v35, v37);
    outlined init with take of Any(v37, v36);
    v19 = v3[5];
    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v22 = v21;
    Hasher.init(_seed:)(&v34, v19);
    String.hash(into:)(&v34, v20, v22);
    v23 = Hasher._finalize()();
    swift_bridgeObjectRelease(v22);
    v24 = -1 << *((_BYTE *)v3 + 32);
    v25 = v23 & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)&v7[8 * (v25 >> 6)]) != 0)
    {
      v8 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)&v7[8 * (v25 >> 6)])) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)&v7[8 * v26];
      }
      while (v30 == -1);
      v8 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)&v7[(v8 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v8;
    *(_QWORD *)(v3[6] + 8 * v8) = v18;
    outlined init with take of Any(v36, (_OWORD *)(v3[7] + 32 * v8));
    ++v3[2];
  }
  v14 = v33 + 5;
  if (v33 + 5 >= v31)
  {
LABEL_37:
    swift_release(v3);
    outlined consume of Set<String>.Iterator._Variant(a1);
    return;
  }
  v12 = *(_QWORD *)(v32 + 8 * v14);
  if (v12)
  {
    v13 = v33 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v31)
      goto LABEL_37;
    v12 = *(_QWORD *)(v32 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
}

{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  Swift::Int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  _OWORD v37[4];
  _OWORD v38[2];
  _OWORD v39[3];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<NSAttributedStringKey, Any>);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v34 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v33 = (unint64_t)(63 - v4) >> 6;
  v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain(a1);
  swift_retain(v3);
  v35 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v35 << 6);
      goto LABEL_28;
    }
    v11 = v35 + 1;
    if (__OFADD__(v35, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v33)
      goto LABEL_37;
    v12 = *(_QWORD *)(v34 + 8 * v11);
    v13 = v35 + 1;
    if (!v12)
    {
      v13 = v35 + 2;
      if (v35 + 2 >= v33)
        goto LABEL_37;
      v12 = *(_QWORD *)(v34 + 8 * v13);
      if (!v12)
      {
        v13 = v35 + 3;
        if (v35 + 3 >= v33)
          goto LABEL_37;
        v12 = *(_QWORD *)(v34 + 8 * v13);
        if (!v12)
        {
          v13 = v35 + 4;
          if (v35 + 4 >= v33)
            goto LABEL_37;
          v12 = *(_QWORD *)(v34 + 8 * v13);
          if (!v12)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    v35 = v13;
LABEL_28:
    v16 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v10);
    *(_QWORD *)&v39[0] = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v10);
    v15 = *(void **)&v39[0];
    *(_QWORD *)&v38[0] = v16;
    v17 = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIFont, UIFont_ptr);
    v18 = v15;
    v19 = v16;
    swift_dynamicCast((char *)v39 + 8, v38, v17, (char *)&type metadata for Any + 8, 7);
    v20 = *(_QWORD *)&v39[0];
    outlined init with take of Any((_OWORD *)((char *)v39 + 8), v37);
    outlined init with take of Any(v37, v39);
    outlined init with take of Any(v39, v38);
    v21 = v3[5];
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v24 = v23;
    Hasher.init(_seed:)(&v36, v21);
    String.hash(into:)(&v36, v22, v24);
    v25 = Hasher._finalize()();
    swift_bridgeObjectRelease(v24);
    v26 = -1 << *((_BYTE *)v3 + 32);
    v27 = v25 & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)&v7[8 * (v27 >> 6)]) != 0)
    {
      v8 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)&v7[8 * (v27 >> 6)])) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)&v7[8 * v28];
      }
      while (v32 == -1);
      v8 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(_QWORD *)&v7[(v8 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v8;
    *(_QWORD *)(v3[6] + 8 * v8) = v20;
    outlined init with take of Any(v38, (_OWORD *)(v3[7] + 32 * v8));
    ++v3[2];
  }
  v14 = v35 + 5;
  if (v35 + 5 >= v33)
  {
LABEL_37:
    swift_release(v3);
    outlined consume of Set<String>.Iterator._Variant(a1);
    return;
  }
  v12 = *(_QWORD *)(v34 + 8 * v14);
  if (v12)
  {
    v13 = v35 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v33)
      goto LABEL_37;
    v12 = *(_QWORD *)(v34 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
}

{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  _OWORD v34[2];
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  _OWORD v38[2];
  _OWORD v39[2];
  _OWORD v40[2];
  uint64_t v41;
  _OWORD v42[2];
  uint64_t v43;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<AnyHashable, Any>);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v30 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v29 = (unint64_t)(63 - v4) >> 6;
  v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain(a1);
  swift_retain(v3);
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v29)
      goto LABEL_37;
    v14 = *(_QWORD *)(v30 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v29)
        goto LABEL_37;
      v14 = *(_QWORD *)(v30 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v29)
          goto LABEL_37;
        v14 = *(_QWORD *)(v30 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v29)
            goto LABEL_37;
          v14 = *(_QWORD *)(v30 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = *(void **)(*(_QWORD *)(a1 + 48) + 8 * v12);
    outlined init with copy of Any(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v42 + 8);
    *(_QWORD *)&v42[0] = v17;
    v40[0] = v42[0];
    v40[1] = v42[1];
    v41 = v43;
    *(_QWORD *)&v39[0] = v17;
    type metadata accessor for MOSuggestionAssetMetadataKey(0);
    v19 = v18;
    v20 = v17;
    swift_dynamicCast(&v31, v39, v19, &type metadata for AnyHashable, 7);
    outlined init with take of Any((_OWORD *)((char *)v40 + 8), v34);
    v35 = v31;
    v36 = v32;
    v37 = v33;
    outlined init with take of Any(v34, v38);
    v31 = v35;
    v32 = v36;
    v33 = v37;
    outlined init with take of Any(v38, v39);
    outlined init with take of Any(v39, &v35);
    v21 = AnyHashable._rawHashValue(seed:)(v3[5]);
    v22 = -1 << *((_BYTE *)v3 + 32);
    v23 = v21 & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)&v7[8 * (v23 >> 6)]) != 0)
    {
      v9 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)&v7[8 * (v23 >> 6)])) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)&v7[8 * v24];
      }
      while (v28 == -1);
      v9 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)&v7[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    v10 = v3[6] + 40 * v9;
    *(_OWORD *)v10 = v31;
    *(_OWORD *)(v10 + 16) = v32;
    *(_QWORD *)(v10 + 32) = v33;
    outlined init with take of Any(&v35, (_OWORD *)(v3[7] + 32 * v9));
    ++v3[2];
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v29)
  {
LABEL_37:
    swift_release(v3);
    outlined consume of Set<String>.Iterator._Variant(a1);
    return;
  }
  v14 = *(_QWORD *)(v30 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v29)
      goto LABEL_37;
    v14 = *(_QWORD *)(v30 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
}

{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  void *v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  _OWORD v40[2];
  _OWORD v41[2];
  _OWORD v42[2];
  uint64_t v43;
  _OWORD v44[2];
  uint64_t v45;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<AnyHashable, Any>);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v31 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v30 = (unint64_t)(63 - v4) >> 6;
  v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain(a1);
  swift_retain(v3);
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v30)
      goto LABEL_37;
    v14 = *(_QWORD *)(v31 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v30)
        goto LABEL_37;
      v14 = *(_QWORD *)(v31 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v30)
          goto LABEL_37;
        v14 = *(_QWORD *)(v31 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v30)
            goto LABEL_37;
          v14 = *(_QWORD *)(v31 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = *(void **)(*(_QWORD *)(a1 + 48) + 8 * v12);
    outlined init with copy of Date?(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v44 + 8, &demangling cache variable for type metadata for Any?);
    *(_QWORD *)&v44[0] = v17;
    v42[0] = v44[0];
    v42[1] = v44[1];
    v43 = v45;
    v32 = v17;
    type metadata accessor for MOSuggestionAssetMetadataKey(0);
    v19 = v18;
    v20 = v17;
    swift_dynamicCast(&v33, &v32, v19, &type metadata for AnyHashable, 7);
    outlined init with take of Date?((uint64_t)v42 + 8, (uint64_t)v41, &demangling cache variable for type metadata for Any?);
    v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Any?);
    swift_dynamicCast(v36, v41, v21, (char *)&type metadata for Any + 8, 7);
    v37 = v33;
    v38 = v34;
    v39 = v35;
    outlined init with take of Any(v36, v40);
    v33 = v37;
    v34 = v38;
    v35 = v39;
    outlined init with take of Any(v40, v41);
    outlined init with take of Any(v41, &v37);
    v22 = AnyHashable._rawHashValue(seed:)(v3[5]);
    v23 = -1 << *((_BYTE *)v3 + 32);
    v24 = v22 & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)&v7[8 * (v24 >> 6)]) != 0)
    {
      v9 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)&v7[8 * (v24 >> 6)])) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)&v7[8 * v25];
      }
      while (v29 == -1);
      v9 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)&v7[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    v10 = v3[6] + 40 * v9;
    *(_OWORD *)v10 = v33;
    *(_OWORD *)(v10 + 16) = v34;
    *(_QWORD *)(v10 + 32) = v35;
    outlined init with take of Any(&v37, (_OWORD *)(v3[7] + 32 * v9));
    ++v3[2];
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v30)
  {
LABEL_37:
    swift_release(v3);
    outlined consume of Set<String>.Iterator._Variant(a1);
    return;
  }
  v14 = *(_QWORD *)(v31 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v30)
      goto LABEL_37;
    v14 = *(_QWORD *)(v31 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
}

uint64_t MOEventBundle.maxAssetDisplayCount.getter()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8[2];
  _QWORD *v9;

  result = (unint64_t)MOEventBundle.orderedAssetReferencesForPreview(max:)(13);
  v1 = result;
  if (!result)
    return v1;
  v9 = &_swiftEmptySetSingleton;
  if (!((unint64_t)result >> 62))
  {
    v2 = *(_QWORD *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_4;
LABEL_14:
    swift_bridgeObjectRelease(v1);
    v7 = &_swiftEmptySetSingleton;
LABEL_15:
    v1 = v7[2];
    swift_bridgeObjectRelease(v7);
    return v1;
  }
  if (result >= 0)
    result &= 0xFFFFFFFFFFFFFF8uLL;
  result = _CocoaArrayWrapper.endIndex.getter(result);
  v2 = result;
  if (!result)
    goto LABEL_14;
LABEL_4:
  if (v2 >= 1)
  {
    v3 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
      {
        v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v1);
      }
      else
      {
        v4 = *(_QWORD *)(v1 + 8 * v3 + 32);
        swift_retain(v4);
      }
      ++v3;
      v5 = (*(uint64_t (**)(void))(*(_QWORD *)v4 + 304))();
      specialized Set._Variant.insert(_:)(v8, v5, v6);
      swift_release(v4);
      swift_bridgeObjectRelease(v8[1]);
    }
    while (v2 != v3);
    swift_bridgeObjectRelease(v1);
    v7 = v9;
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

Swift::OpaquePointer_optional __swiftcall MOEventBundle.orderedAssetReferencesForPreview(max:)(Swift::Int max)
{
  unint64_t v1;
  Swift::Bool v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  void *v17;
  char v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v31[2];
  _QWORD *v32;
  unint64_t v33;
  Swift::OpaquePointer_optional result;

  v1 = (unint64_t)MOEventBundle._orderedAssetReferences()();
  if (v1)
  {
    v3 = v1;
    v33 = (unint64_t)_swiftEmptyArrayStorage;
    v32 = &_swiftEmptySetSingleton;
    v4 = v1 & 0xFFFFFFFFFFFFFF8;
    if (v1 >> 62)
      goto LABEL_23;
    for (i = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10); i; i = _CocoaArrayWrapper.endIndex.getter(v29))
    {
      v6 = 0;
      v7 = (void *)0xE000000000000000;
      v8 = 4;
      while (1)
      {
        v9 = v8 - 4;
        if ((v3 & 0xC000000000000001) == 0)
          break;
        v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8 - 4, v3);
        v11 = v10;
        v12 = v8 - 3;
        if (__OFADD__(v9, 1))
          goto LABEL_22;
LABEL_10:
        v13 = v32;
        if (v32[2] >= max)
        {
          v14 = (*(uint64_t (**)(void))(*(_QWORD *)v11 + 304))();
          if (v14 == v6 && v15 == v7)
          {
            v10 = swift_bridgeObjectRelease(v7);
          }
          else
          {
            v17 = v15;
            v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, v6, v7, 0);
            v10 = swift_bridgeObjectRelease(v17);
            if ((v18 & 1) == 0)
            {
              swift_bridgeObjectRelease(v13);
              swift_bridgeObjectRelease(v3);
              swift_release(v11);
              goto LABEL_28;
            }
          }
        }
        v19 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 304);
        v20 = v19(v10);
        specialized Set._Variant.insert(_:)(v31, v20, v21);
        swift_bridgeObjectRelease(v31[1]);
        swift_retain(v11);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v22);
        v24 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v23 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v24 >= v23 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v23 > 1, v24 + 1, 1);
        v25 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v11);
        v26 = specialized Array._endMutation()(v25);
        v6 = v19(v26);
        v28 = v27;
        swift_release(v11);
        swift_bridgeObjectRelease(v7);
        v7 = v28;
        ++v8;
        if (v12 == i)
        {
          swift_bridgeObjectRelease(v28);
          swift_bridgeObjectRelease(v3);
          v7 = v32;
          goto LABEL_28;
        }
      }
      v11 = *(_QWORD *)(v3 + 8 * v8);
      swift_retain(v11);
      v12 = v8 - 3;
      if (!__OFADD__(v9, 1))
        goto LABEL_10;
LABEL_22:
      __break(1u);
LABEL_23:
      if (v3 >= 0)
        v29 = v4;
      else
        v29 = v3;
    }
    swift_bridgeObjectRelease(v3);
    v7 = &_swiftEmptySetSingleton;
LABEL_28:
    swift_bridgeObjectRelease(v7);
    v1 = v33;
  }
  result.value._rawValue = (void *)v1;
  result.is_nil = v2;
  return result;
}

unint64_t MOEventBundle.typeSortedAssetReferencesForInterstitial.getter()
{
  unint64_t result;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  result = (unint64_t)MOEventBundle.orderedAssetReferencesForPreview(max:)(13);
  if (result)
  {
    v1 = result;
    if (result >> 62)
    {
      swift_bridgeObjectRetain(result);
      v2 = (uint64_t)specialized _copyCollectionToContiguousArray<A>(_:)(v3);
      swift_bridgeObjectRelease(v1);
    }
    else
    {
      v2 = result & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(result);
    }
    v4 = v2;
    specialized MutableCollection<>.sort(by:)(&v4);
    swift_bridgeObjectRelease(v1);
    return v4;
  }
  return result;
}

id MOResource.packedMetadata.getter()
{
  void *v0;
  id result;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  void *v6;
  Class isa;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15[4];

  result = objc_msgSend(v0, "data");
  if (result)
  {
    v2 = result;
    v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)(result);
    v5 = v4;

    v6 = (void *)objc_opt_self(NSJSONSerialization);
    isa = Data._bridgeToObjectiveC()().super.isa;
    v15[0] = 0;
    v8 = objc_msgSend(v6, "JSONObjectWithData:options:error:", isa, 0, v15);

    v9 = v15[0];
    if (v8)
    {
      v10 = v15[0];
      _bridgeAnyObjectToAny(_:)(v15, v8);
      outlined consume of Data._Representation(v3, v5);
      swift_unknownObjectRelease(v8);
      v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Swift.AnyObject]);
      if ((swift_dynamicCast(&v14, v15, (char *)&type metadata for Any + 8, v11, 6) & 1) != 0)
        return (id)v14;
    }
    else
    {
      v12 = v15[0];
      v13 = _convertNSErrorToError(_:)(v9);

      swift_willThrow();
      outlined consume of Data._Representation(v3, v5);
      swift_errorRelease(v13);
    }
    return 0;
  }
  return result;
}

uint64_t AppBgColor.bgColor.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain(a3);
  return a2;
}

uint64_t AppBgColor.bgColor.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v2 + 16));
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t AppBgColor.isColorHashUnchanged.getter(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return a4 & 1;
}

uint64_t MOSuggestionAssetCacheWorkoutInput.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return outlined init with copy of Date?(v1, a1, (uint64_t *)&demangling cache variable for type metadata for Date?);
}

uint64_t MOSuggestionAssetCacheWorkoutInput.startDate.setter(uint64_t a1)
{
  uint64_t v1;

  return outlined assign with take of Date?(a1, v1);
}

uint64_t MOSuggestionAssetCacheWorkoutInput.endDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MOSuggestionAssetCacheWorkoutInput(0);
  return outlined init with copy of Date?(v1 + *(int *)(v3 + 20), a1, (uint64_t *)&demangling cache variable for type metadata for Date?);
}

uint64_t MOSuggestionAssetCacheWorkoutInput.endDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for MOSuggestionAssetCacheWorkoutInput(0) + 20);
  return outlined assign with take of Date?(a1, v3);
}

void (__swiftcall *MOSuggestionAssetCacheWorkoutInput.endDate.modify())()
{
  type metadata accessor for MOSuggestionAssetCacheWorkoutInput(0);
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

uint64_t MOSuggestionAssetCacheWorkoutInput.workoutType.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MOSuggestionAssetCacheWorkoutInput(0) + 24));
}

uint64_t MOSuggestionAssetCacheWorkoutInput.workoutType.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MOSuggestionAssetCacheWorkoutInput(0);
  v6 = v2 + *(int *)(result + 24);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

void (__swiftcall *MOSuggestionAssetCacheWorkoutInput.workoutType.modify())()
{
  type metadata accessor for MOSuggestionAssetCacheWorkoutInput(0);
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

uint64_t MOSuggestionAssetCacheWorkoutInput.isIndoors.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MOSuggestionAssetCacheWorkoutInput(0) + 28));
}

uint64_t MOSuggestionAssetCacheWorkoutInput.isIndoors.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MOSuggestionAssetCacheWorkoutInput(0);
  *(_BYTE *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

void (__swiftcall *MOSuggestionAssetCacheWorkoutInput.isIndoors.modify())()
{
  type metadata accessor for MOSuggestionAssetCacheWorkoutInput(0);
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

void MOSuggestionAssetCacheWorkoutInput.init(_:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  double v41;
  void *v42;
  uint64_t v43;
  NSString v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[2];
  double v51;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v4);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date(0);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
  v8(a2, 1, 1, v7);
  v9 = (int *)type metadata accessor for MOSuggestionAssetCacheWorkoutInput(0);
  v10 = a2 + v9[5];
  v11 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v8)(v10, 1, 1, v7);
  v12 = a2 + v9[6];
  *(_QWORD *)v12 = 0;
  *(_BYTE *)(v12 + 8) = 1;
  v13 = v9[7];
  *(_BYTE *)(a2 + v13) = 2;
  v14 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 256))(v11);
  if (!v14)
  {
    swift_release(a1);
    return;
  }
  v15 = v14;
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOWorkoutMetaDataKeyStartDate"));
  v18 = v17;
  if (!*(_QWORD *)(v15 + 16) || (v19 = specialized __RawDictionaryStorage.find<A>(_:)(v16, v17), (v20 & 1) == 0))
  {
    swift_release(a1);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(v18);
    return;
  }
  v49 = v13;
  v21 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v19);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease(v18);
  v50[0] = v21;
  if ((swift_dynamicCast(&v51, v50, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Double, 6) & 1) == 0)
    goto LABEL_17;
  v22 = v51;
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOWorkoutMetaDataKeyEndDate"));
  v25 = v24;
  if (!*(_QWORD *)(v15 + 16))
    goto LABEL_18;
  v26 = specialized __RawDictionaryStorage.find<A>(_:)(v23, v24);
  if ((v27 & 1) == 0)
    goto LABEL_18;
  v28 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v26);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease(v25);
  v50[0] = v28;
  if ((swift_dynamicCast(&v51, v50, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Double, 6) & 1) == 0)
  {
LABEL_17:
    swift_release(a1);
    v46 = v15;
LABEL_19:
    swift_bridgeObjectRelease(v46);
    return;
  }
  v29 = v51;
  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOWorkoutMetaDataKeyActivityType"));
  v25 = v31;
  if (!*(_QWORD *)(v15 + 16) || (v32 = specialized __RawDictionaryStorage.find<A>(_:)(v30, v31), (v33 & 1) == 0))
  {
LABEL_18:
    swift_release(a1);
    swift_bridgeObjectRelease(v15);
    v46 = v25;
    goto LABEL_19;
  }
  v34 = *(double *)(*(_QWORD *)(v15 + 56) + 8 * v32);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease(v25);
  v51 = v34;
  if ((swift_dynamicCast(v50, &v51, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for String, 6) & 1) == 0)
    goto LABEL_17;
  v47 = v50[0];
  v48 = v50[1];
  v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOWorkoutMetaDataKeyIsIndoors"));
  v37 = v36;
  if (*(_QWORD *)(v15 + 16))
  {
    v38 = specialized __RawDictionaryStorage.find<A>(_:)(v35, v36);
    if ((v39 & 1) != 0)
    {
      v40 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v38);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease(v37);
      swift_bridgeObjectRelease(v15);
      v50[0] = v40;
      if ((swift_dynamicCast(&v51, v50, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Int, 6) & 1) != 0)
      {
        v41 = v51;
        Date.init(timeIntervalSince1970:)(v22);
        v8((uint64_t)v6, 0, 1, v7);
        outlined assign with take of Date?((uint64_t)v6, a2);
        Date.init(timeIntervalSince1970:)(v29);
        v8((uint64_t)v6, 0, 1, v7);
        outlined assign with take of Date?((uint64_t)v6, v10);
        v42 = (void *)objc_opt_self(HKWorkout);
        v43 = v48;
        v44 = String._bridgeToObjectiveC()();
        v45 = objc_msgSend(v42, "_workoutActivityTypeFromString:", v44, swift_bridgeObjectRelease(v43).n128_f64[0]);

        swift_release(a1);
        *(_QWORD *)v12 = v45;
        *(_BYTE *)(v12 + 8) = 0;
        *(_BYTE *)(a2 + v49) = *(_QWORD *)&v41 == 1;
        return;
      }
      swift_release(a1);
      v46 = v48;
      goto LABEL_19;
    }
  }
  swift_bridgeObjectRelease(v48);
  swift_bridgeObjectRelease(v37);
  swift_bridgeObjectRelease(v15);
  swift_release(a1);
}

void MOSuggestionAssetCacheWorkoutInput.init(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  Class isa;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  void *v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  void *v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  id v42;
  void *v43;
  NSString v44;
  id v45;
  id v46;
  uint64_t v47;
  id v48;
  _QWORD v49[2];
  id v50[4];

  v48 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v3);
  v5 = (char *)&v49[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Date(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
  v7(a2, 1, 1, v6);
  v8 = (int *)type metadata accessor for MOSuggestionAssetCacheWorkoutInput(0);
  v9 = a2 + v8[5];
  v7(v9, 1, 1, v6);
  v10 = a2 + v8[6];
  *(_QWORD *)v10 = 0;
  *(_BYTE *)(v10 + 8) = 1;
  *(_BYTE *)(a2 + v8[7]) = 2;
  v11 = objc_msgSend(v48, "data");
  if (!v11)
    goto LABEL_17;
  v12 = v11;
  v13 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v15 = v14;

  v16 = (void *)objc_opt_self(NSJSONSerialization);
  isa = Data._bridgeToObjectiveC()().super.isa;
  v50[0] = 0;
  v18 = objc_msgSend(v16, "JSONObjectWithData:options:error:", isa, 0, v50);

  v19 = v50[0];
  if (!v18)
  {
    v46 = v50[0];
    v47 = _convertNSErrorToError(_:)(v19);

    swift_willThrow();
    outlined consume of Data._Representation(v13, v15);
    swift_errorRelease(v47);
    goto LABEL_17;
  }
  v20 = v50[0];
  _bridgeAnyObjectToAny(_:)(v50, v18);
  outlined consume of Data._Representation(v13, v15);
  swift_unknownObjectRelease(v18);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Swift.AnyObject]);
  if ((swift_dynamicCast(v49, v50, (char *)&type metadata for Any + 8, v21, 6) & 1) == 0)
  {
LABEL_17:

    return;
  }
  v22 = v49[0];
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOWorkoutMetaDataKeyStartDate"));
  v25 = v24;
  if (!*(_QWORD *)(v22 + 16))
    goto LABEL_16;
  v26 = specialized __RawDictionaryStorage.find<A>(_:)(v23, v24);
  if ((v27 & 1) == 0)
    goto LABEL_16;
  v28 = *(void **)(*(_QWORD *)(v22 + 56) + 8 * v26);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease(v25);
  v50[0] = v28;
  if ((swift_dynamicCast(v49, v50, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Double, 6) & 1) == 0)
  {
LABEL_18:

    goto LABEL_19;
  }
  v29 = *(double *)v49;
  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOWorkoutMetaDataKeyEndDate"));
  v25 = v31;
  if (!*(_QWORD *)(v22 + 16) || (v32 = specialized __RawDictionaryStorage.find<A>(_:)(v30, v31), (v33 & 1) == 0))
  {
LABEL_16:
    swift_bridgeObjectRelease(v22);
    swift_bridgeObjectRelease(v25);
    goto LABEL_17;
  }
  v34 = *(void **)(*(_QWORD *)(v22 + 56) + 8 * v32);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease(v25);
  v50[0] = v34;
  if ((swift_dynamicCast(v49, v50, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Double, 6) & 1) == 0)
    goto LABEL_18;
  v35 = *(double *)v49;
  v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOWorkoutMetaDataKeyActivityType"));
  v38 = v37;
  if (*(_QWORD *)(v22 + 16))
  {
    v39 = specialized __RawDictionaryStorage.find<A>(_:)(v36, v37);
    if ((v40 & 1) != 0)
    {
      v41 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 8 * v39);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease(v38);
      swift_bridgeObjectRelease(v22);
      v49[0] = v41;
      if ((swift_dynamicCast(v50, v49, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for String, 6) & 1) != 0)
      {
        v42 = v50[1];
        Date.init(timeIntervalSince1970:)(v29);
        v7((uint64_t)v5, 0, 1, v6);
        outlined assign with take of Date?((uint64_t)v5, a2);
        Date.init(timeIntervalSince1970:)(v35);
        v7((uint64_t)v5, 0, 1, v6);
        outlined assign with take of Date?((uint64_t)v5, v9);
        v43 = (void *)objc_opt_self(HKWorkout);
        v44 = String._bridgeToObjectiveC()();
        v45 = objc_msgSend(v43, "_workoutActivityTypeFromString:", v44, swift_bridgeObjectRelease(v42).n128_f64[0]);

        *(_QWORD *)v10 = v45;
        *(_BYTE *)(v10 + 8) = 0;
        return;
      }
      goto LABEL_17;
    }
  }

  swift_bridgeObjectRelease(v38);
LABEL_19:
  swift_bridgeObjectRelease(v22);
}

MomentsUIService::MOSuggestionAssetCacheManager::CachedAssetCost_optional __swiftcall MOSuggestionAssetCacheManager.CachedAssetCost.init(rawValue:)(Swift::Int rawValue)
{
  char v1;
  MomentsUIService::MOSuggestionAssetCacheManager::CachedAssetCost_optional v2;

  if (rawValue == 10)
    v1 = 2;
  else
    v1 = 3;
  if (rawValue == 3)
    v2.value = MomentsUIService_MOSuggestionAssetCacheManager_CachedAssetCost_medium;
  else
    v2.value = v1;
  if (rawValue == 1)
    return 0;
  else
    return v2;
}

uint64_t MOSuggestionAssetCacheManager.CachedAssetCost.rawValue.getter(char a1)
{
  return qword_1001A43B8[a1];
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance MOSuggestionAssetCacheManager.CachedAssetCost(char *a1, char *a2)
{
  return qword_1001A43B8[*a1] == qword_1001A43B8[*a2];
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance MOSuggestionAssetCacheManager.CachedAssetCost()
{
  char *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(qword_1001A43B8[v1]);
  return Hasher._finalize()();
}

void protocol witness for Hashable.hash(into:) in conformance MOSuggestionAssetCacheManager.CachedAssetCost()
{
  char *v0;

  Hasher._combine(_:)(qword_1001A43B8[*v0]);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance MOSuggestionAssetCacheManager.CachedAssetCost(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(qword_1001A43B8[v2]);
  return Hasher._finalize()();
}

uint64_t *protocol witness for RawRepresentable.init(rawValue:) in conformance MOSuggestionAssetCacheManager.CachedAssetCost@<X0>(uint64_t *result@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  char v3;
  char v4;
  char v5;

  v2 = *result;
  if (*result == 1)
    v3 = 0;
  else
    v3 = 3;
  if (v2 == 3)
    v4 = 1;
  else
    v4 = v3;
  if (v2 == 10)
    v5 = 2;
  else
    v5 = v4;
  *a2 = v5;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance MOSuggestionAssetCacheManager.CachedAssetCost(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_1001A43B8[*v1];
}

_QWORD *MOSuggestionAssetCacheManager.__allocating_init()()
{
  uint64_t v0;
  _QWORD *v1;
  id v2;
  uint64_t v3;

  v1 = (_QWORD *)swift_allocObject(v0, 56, 7);
  v2 = objc_msgSend(objc_allocWithZone((Class)NSCache), "init");
  v1[2] = v2;
  v1[3] = &_swiftEmptySetSingleton;
  v1[4] = &_swiftEmptyDictionarySingleton;
  v1[5] = 0;
  v3 = type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider();
  swift_allocObject(v3, 48, 7);
  v1[6] = MOSuggestionAssetPhotoLivePhotoVideosProvider.init()();
  objc_msgSend(v2, "setCountLimit:", 30);
  objc_msgSend(v2, "setTotalCostLimit:", 80);
  return v1;
}

double static MOSuggestionAssetCacheManager.shared.getter()
{
  double result;

  if (one-time initialization token for shared != -1)
    swift_once(&one-time initialization token for shared, one-time initialization function for shared);
  *(_QWORD *)&result = swift_retain(static MOSuggestionAssetCacheManager.shared).n128_u64[0];
  return result;
}

uint64_t one-time initialization function for defaultQueue(uint64_t a1)
{
  return one-time initialization function for defaultQueue(a1, (void (*)(void))&static DispatchQoS.userInitiated.getter, &static MOSuggestionAssetCacheManager.defaultQueue);
}

uint64_t one-time initialization function for lowPriorityQueue(uint64_t a1)
{
  return one-time initialization function for defaultQueue(a1, (void (*)(void))&static DispatchQoS.utility.getter, &static MOSuggestionAssetCacheManager.lowPriorityQueue);
}

uint64_t one-time initialization function for defaultQueue(uint64_t a1, void (*a2)(void), uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  _QWORD *v20;

  v5 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue, OS_dispatch_queue_ptr);
  a2();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v8);
  v20 = _swiftEmptyArrayStorage;
  v15 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  v17 = lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A], &demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v20, v16, v17, v5, v15);
  result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000038, 0x80000001001AFCC0, v14, v7, v11, 0);
  *a3 = result;
  return result;
}

void *MOSuggestionAssetCacheManager.maxAssetDisplayCount.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetCacheManager.maxAssetDisplayCount;
}

uint64_t MOSuggestionAssetCacheManager.MOSuggestionAssetCompletionResultHolder.order.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

void *MOSuggestionAssetCacheManager.predefinedBgColorDict.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  Swift::String v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  _BYTE v14[72];

  v1 = *(void **)(v0 + 40);
  if (!v1)
  {
    v2 = v0;
    v3 = type metadata accessor for MOSuggestionAssetMediaAlbumArtProvider();
    swift_initStackObject(v3, v14);
    v4 = MOSuggestionAssetMediaAlbumArtProvider.init()();
    v5 = MOSuggestionAssetMediaAlbumArtProvider.thirdPartyAppPredefinedColors.getter();
    v6 = MOSuggestionAssetMediaAlbumArtProvider.thirdPartyAppColorFallbackValue.getter();
    v8 = v7;
    v9._countAndFlagsBits = v6;
    v9._object = v8;
    v10 = (unint64_t)MOSuggestionAssetCacheManager.getPredefinedAppBgColorDict(predefinedColors:colorFallbackValue:)((Swift::OpaquePointer)v5, v9);
    swift_release(v4);
    swift_bridgeObjectRelease(v5);
    swift_bridgeObjectRelease(v8);
    v11 = *(_QWORD *)(v2 + 40);
    *(_QWORD *)(v2 + 40) = v10;
    swift_bridgeObjectRelease(v11);
    v1 = *(void **)(v2 + 40);
  }
  if (v1)
    v12 = v1;
  else
    v12 = &_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRetain(v1);
  return v12;
}

Swift::OpaquePointer_optional __swiftcall MOSuggestionAssetCacheManager.getPredefinedAppBgColorDict(predefinedColors:colorFallbackValue:)(Swift::OpaquePointer predefinedColors, Swift::String colorFallbackValue)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  dispatch_group_t v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  void **v22;
  unint64_t v23;
  unint64_t v24;
  void **v25;
  void *v26;
  unint64_t v27;
  uint64_t v28;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  _BOOL4 v34;
  uint64_t v35;
  uint64_t v36;
  void **v37;
  void *v38;
  void *v39;
  NSObject *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t v45;
  id v46;
  NSObject *v47;
  NSString v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  char *v54;
  void (*v55)(char *, uint64_t);
  NSObject *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  Swift::Bool v63;
  uint64_t v64;
  void *v65;
  void *v66;
  uint64_t v67;
  void *rawValue;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  __int128 v75;
  Swift::String v76;
  uint64_t v77;
  NSObject *v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  void **v82;
  uint64_t v83;
  void **aBlock;
  uint64_t v85;
  void (*v86)(uint64_t, void *);
  void *v87;
  uint64_t (*v88)(uint64_t);
  uint64_t v89;
  _QWORD v90[3];
  Swift::OpaquePointer_optional result;

  v76 = colorFallbackValue;
  v3 = type metadata accessor for DispatchTime(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v73 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v8 = (char *)&v67 - v7;
  v9 = swift_allocObject(&unk_1001ED028, 24, 7);
  v77 = v9;
  *(_QWORD *)(v9 + 16) = &_swiftEmptyDictionarySingleton;
  v10 = v9 + 16;
  v11 = dispatch_group_create();
  v12 = v11;
  v13 = *((_QWORD *)predefinedColors._rawValue + 2);
  v78 = v11;
  v81 = v13;
  if (v13)
  {
    v69 = v8;
    v70 = v4;
    v71 = v10;
    v72 = v3;
    v80 = (char *)predefinedColors._rawValue + 32;
    rawValue = predefinedColors._rawValue;
    swift_bridgeObjectRetain(predefinedColors._rawValue);
    v79 = lazy protocol witness table accessor for type String and conformance String();
    v14 = 0;
    *(_QWORD *)&v15 = 136315138;
    v75 = v15;
    v74 = (char *)&type metadata for Any + 8;
    while (1)
    {
      v16 = (uint64_t *)&v80[16 * v14];
      v17 = v16[1];
      v82 = (void **)*v16;
      v83 = v14;
      aBlock = v82;
      v85 = v17;
      v90[0] = 44;
      v90[1] = 0xE100000000000000;
      swift_bridgeObjectRetain(v17);
      v18 = StringProtocol.components<A>(separatedBy:)(v90, &type metadata for String, &type metadata for String, v79, v79);
      v19 = v18;
      v20 = *(_QWORD *)(v18 + 16);
      if (v20)
      {
        v21 = (_QWORD *)(v18 + 40);
        v22 = (void **)_swiftEmptyArrayStorage;
        do
        {
          v27 = *(v21 - 1);
          v26 = (void *)*v21;
          v28 = HIBYTE(*v21) & 0xFLL;
          if ((*v21 & 0x2000000000000000) == 0)
            v28 = v27 & 0xFFFFFFFFFFFFLL;
          if (v28)
          {
            swift_bridgeObjectRetain(*v21);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v22);
            aBlock = v22;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, (int64_t)v22[2] + 1, 1);
              v22 = aBlock;
            }
            v24 = (unint64_t)v22[2];
            v23 = (unint64_t)v22[3];
            if (v24 >= v23 >> 1)
            {
              specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v23 > 1, v24 + 1, 1);
              v22 = aBlock;
            }
            v22[2] = (void *)(v24 + 1);
            v25 = &v22[2 * v24];
            v25[4] = (void *)v27;
            v25[5] = v26;
          }
          v21 += 2;
          --v20;
        }
        while (v20);
      }
      else
      {
        v22 = (void **)_swiftEmptyArrayStorage;
      }
      swift_bridgeObjectRelease(v19);
      if (0xAAAAAAAAAAAAAAABLL * (unint64_t)v22[2] + 0x7FFFFFFFFFFFFFFFLL < 0x5555555555555555)
      {
        swift_bridgeObjectRelease(v17);
        if (!v22[2])
        {
          __break(1u);
LABEL_36:
          swift_once(&serverManager._clientConnections, one-time initialization function for shared);
LABEL_29:
          v58 = type metadata accessor for Logger(0);
          v59 = __swift_project_value_buffer(v58, (uint64_t)static MOAngelLogger.shared);
          v60 = Logger.logObject.getter(v59);
          v61 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v60, v61))
          {
            v62 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v62 = 0;
            _os_log_impl((void *)&_mh_execute_header, v60, v61, "[getPreDefinedAppBgColorDict] timed out while fetching bg colors", v62, 2u);
            swift_slowDealloc(v62, -1, -1);
            swift_release(v77);

          }
          else
          {
            swift_release(v77);

          }
          v65 = 0;
          goto LABEL_34;
        }
        v38 = v22[4];
        v39 = v22[5];
        swift_bridgeObjectRetain(v39);
        v40 = v78;
        dispatch_group_enter(v78);
        v41 = swift_allocObject(&unk_1001ED050, 24, 7);
        swift_weakInit(v41 + 16);
        v42 = (_QWORD *)swift_allocObject(&unk_1001ED078, 80, 7);
        countAndFlagsBits = v76._countAndFlagsBits;
        v42[2] = v22;
        v42[3] = countAndFlagsBits;
        object = v76._object;
        v42[4] = v76._object;
        v42[5] = v41;
        v45 = v77;
        v42[6] = v77;
        v42[7] = v38;
        v42[8] = v39;
        v42[9] = v40;
        v46 = objc_allocWithZone((Class)ISIcon);
        swift_bridgeObjectRetain(v39);
        swift_bridgeObjectRetain(object);
        swift_retain(v41);
        swift_retain(v45);
        v47 = v40;
        v48 = String._bridgeToObjectiveC()();
        v49 = objc_msgSend(v46, "initWithBundleIdentifier:", v48);

        if (one-time initialization token for iconDescriptor != -1)
          swift_once(&one-time initialization token for iconDescriptor, one-time initialization function for iconDescriptor);
        v50 = static MOSuggestionAssetAppIconProvider.iconDescriptor;
        objc_msgSend((id)static MOSuggestionAssetAppIconProvider.iconDescriptor, "setShouldApplyMask:", 0);
        v51 = swift_allocObject(&unk_1001ED0A0, 32, 7);
        *(_QWORD *)(v51 + 16) = partial apply for closure #2 in MOSuggestionAssetCacheManager.getPredefinedAppBgColorDict(predefinedColors:colorFallbackValue:);
        *(_QWORD *)(v51 + 24) = v42;
        v88 = partial apply for closure #1 in static MOSuggestionAssetAppIconProvider.getImageFor(bundleIdentifier:completion:);
        v89 = v51;
        aBlock = _NSConcreteStackBlock;
        v85 = 1107296256;
        v86 = thunk for @escaping @callee_guaranteed (@guaranteed CGImageRef?) -> ();
        v87 = &block_descriptor_42;
        v52 = _Block_copy(&aBlock);
        v53 = v89;
        swift_retain(v42);
        objc_msgSend(v49, "getCGImageForImageDescriptor:completion:", v50, v52, swift_release(v53).n128_f64[0]);
        _Block_release(v52);
        swift_bridgeObjectRelease(v39);
        swift_release(v41);
        swift_release(v42);

        v35 = v83;
      }
      else
      {
        swift_release(v22);
        if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
          swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
        v30 = type metadata accessor for Logger(0);
        __swift_project_value_buffer(v30, (uint64_t)static MOAngelLogger.assets);
        swift_bridgeObjectRetain(v17);
        v32 = Logger.logObject.getter(v31);
        v33 = static os_log_type_t.error.getter();
        v34 = os_log_type_enabled(v32, v33);
        v35 = v83;
        if (v34)
        {
          v36 = swift_slowAlloc(12, -1);
          v37 = (void **)swift_slowAlloc(32, -1);
          aBlock = v37;
          *(_DWORD *)v36 = v75;
          swift_bridgeObjectRetain(v17);
          *(_QWORD *)(v36 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)((uint64_t)v82, v17, (uint64_t *)&aBlock);
          swift_bridgeObjectRelease_n(v17, 3);
          _os_log_impl((void *)&_mh_execute_header, v32, v33, "[MOSuggestionAssetCacheManager] predefinedColorsString invalid entry, %s", (uint8_t *)v36, 0xCu);
          swift_arrayDestroy(v37, 1, v74);
          swift_slowDealloc(v37, -1, -1);
          swift_slowDealloc(v36, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n(v17, 2);
        }
      }
      v14 = v35 + 1;
      if (v14 == v81)
      {
        swift_bridgeObjectRelease(rawValue);
        v12 = v78;
        v3 = v72;
        v10 = v71;
        v4 = v70;
        v8 = v69;
        break;
      }
    }
  }
  v54 = v73;
  static DispatchTime.now()(v11);
  + infix(_:_:)(v54, 5.0);
  v55 = *(void (**)(char *, uint64_t))(v4 + 8);
  v55(v54, v3);
  v56 = v12;
  v57 = OS_dispatch_group.wait(timeout:)(v8) & 1;
  v55(v8, v3);
  if ((static DispatchTimeoutResult.== infix(_:_:)(v57, 1) & 1) != 0)
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1)
      goto LABEL_36;
    goto LABEL_29;
  }

  swift_beginAccess(v10, &aBlock, 0, 0);
  v64 = v77;
  v65 = *(void **)(v77 + 16);
  swift_bridgeObjectRetain(v65);
  swift_release(v64);
LABEL_34:
  v66 = v65;
  result.value._rawValue = v66;
  result.is_nil = v63;
  return result;
}

uint64_t MOSuggestionAssetCacheManager.init()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 16) = objc_msgSend(objc_allocWithZone((Class)NSCache), "init");
  *(_QWORD *)(v0 + 24) = &_swiftEmptySetSingleton;
  *(_QWORD *)(v0 + 32) = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)(v0 + 40) = 0;
  v1 = type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider();
  swift_allocObject(v1, 48, 7);
  *(_QWORD *)(v0 + 48) = MOSuggestionAssetPhotoLivePhotoVideosProvider.init()();
  objc_msgSend(*(id *)(v0 + 16), "setCountLimit:", 30);
  objc_msgSend(*(id *)(v0 + 16), "setTotalCostLimit:", 80);
  return v0;
}

void MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4, void (*a5)(_QWORD), uint64_t a6)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(_QWORD);
  uint64_t v43;
  double *v44;
  _QWORD aBlock[5];
  uint64_t v46;

  v42 = a5;
  v41 = a6;
  v38 = a4;
  v37 = a3;
  v33 = type metadata accessor for DispatchWorkItemFlags(0);
  v36 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v34 = *(_QWORD *)(v9 - 8);
  v35 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!((unint64_t)a1 >> 62))
  {
    v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v12)
      goto LABEL_3;
LABEL_14:
    v42(0);
    return;
  }
  if (a1 < 0)
    v29 = a1;
  else
    v29 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v12 = _CocoaArrayWrapper.endIndex.getter(v29);
  swift_bridgeObjectRelease(a1);
  if (!v12)
    goto LABEL_14;
LABEL_3:
  (*(void (**)(uint64_t))(*(_QWORD *)v43 + 248))(a1);
  v40 = swift_allocObject(&unk_1001ED0F0, 24, 7);
  *(_QWORD *)(v40 + 16) = _swiftEmptyArrayStorage;
  v39 = swift_allocObject(&unk_1001ED118, 24, 7);
  *(_QWORD *)(v39 + 16) = 0;
  if (v12 < 1)
  {
    __break(1u);
  }
  else
  {
    v31 = a1 & 0xC000000000000001;
    swift_bridgeObjectRetain(a1);
    v13 = 0;
    v32 = v12;
    do
    {
      if (v31)
      {
        v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13, a1);
      }
      else
      {
        v14 = *(_QWORD *)(a1 + 8 * v13 + 32);
        swift_retain(v14);
      }
      v15 = v13 + 1;
      v16 = swift_allocObject(&unk_1001ED050, 24, 7);
      swift_weakInit(v16 + 16);
      v17 = swift_allocObject(&unk_1001ED140, 88, 7);
      *(_QWORD *)(v17 + 16) = v16;
      *(_QWORD *)(v17 + 24) = v14;
      *(_BYTE *)(v17 + 32) = v38;
      v19 = v39;
      v18 = v40;
      *(_QWORD *)(v17 + 40) = v13;
      *(_QWORD *)(v17 + 48) = v18;
      *(_QWORD *)(v17 + 56) = v19;
      *(_QWORD *)(v17 + 64) = a1;
      v20 = v41;
      *(_QWORD *)(v17 + 72) = v42;
      *(_QWORD *)(v17 + 80) = v20;
      aBlock[4] = partial apply for closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:);
      v46 = v17;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
      aBlock[3] = &block_descriptor_22_1;
      v21 = _Block_copy(aBlock);
      swift_retain_n(v14);
      swift_bridgeObjectRetain(a1);
      swift_retain(v16);
      swift_retain(v18);
      swift_retain(v19);
      swift_retain(v20);
      static DispatchQoS.unspecified.getter(v22);
      v44 = _swiftEmptyArrayStorage;
      v23 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
      v25 = lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
      v26 = v33;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v44, v24, v25, v33, v23);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v21);
      _Block_release(v21);
      swift_release_n(v14, v27);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v26);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v35);
      v28 = v46;
      swift_release(v16);
      swift_release(v28);
      v13 = v15;
    }
    while (v32 != v15);
    swift_release(v40);
    swift_release(v39);
    swift_bridgeObjectRelease(a1);
  }
}

double closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(uint64_t a1, uint64_t a2, unsigned int a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(double *, __n128), _QWORD *a9)
{
  uint64_t v16;
  uint64_t Strong;
  double result;
  _QWORD *v19;
  _BYTE v20[24];

  v16 = a1 + 16;
  swift_beginAccess(a1 + 16, v20, 0, 0);
  Strong = swift_weakLoadStrong(v16);
  if (Strong)
  {
    v19 = (_QWORD *)Strong;
    swift_retain(a2);
    swift_retain(a5);
    swift_retain(a6);
    swift_bridgeObjectRetain(a7);
    swift_retain(a9);
    specialized MOSuggestionAssetCacheManager.retrieveAssetFor(_:withTypes:cacheType:completion:)(a2, 0, a3, v19, a2, a3, a5, a4, a6, a7, a8, a9);
    swift_release(v19);
    swift_release(a2);
    swift_release(a5);
    swift_release(a6);
    swift_bridgeObjectRelease(a7);
    *(_QWORD *)&result = swift_release(a9).n128_u64[0];
  }
  return result;
}

void closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(void *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(double *, __n128))
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  NSMutableDictionary *connectionProperties;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  __n128 v43;
  __n128 v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v58;
  Class isa;
  int v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  double **v76;
  double *v77;
  char v78;
  unint64_t v79;
  unint64_t v80;
  double *v81;
  uint64_t v82;
  __n128 v83;
  uint64_t ObjCClassMetadata;
  double **v85;
  double *v86;
  id v87;
  char v88;
  unint64_t v89;
  unint64_t v90;
  double *v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  double **v95;
  double *v96;
  id v97;
  char v98;
  unint64_t v99;
  unint64_t v100;
  double *v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  double **v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  double *v113;
  __n128 v114;
  double **v115;
  double *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  int v123;
  void (*v124)(double *, __n128);
  id v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  double **v129;
  uint64_t v130;
  _OWORD v131[2];
  __int128 v132;
  _QWORD *v133;
  uint64_t v134[7];

  v124 = a8;
  v127 = a5;
  v128 = a7;
  v126 = a6;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
  __chkstk_darwin(v12);
  v14 = (char *)&v120 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for UUID(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v120 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = (double **)(a4 + 16);
  if (a1)
  {
    connectionProperties = serverManager._connectionProperties;
    v125 = a1;
    if (connectionProperties != (NSMutableDictionary *)-1)
      swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    v20 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v20, (uint64_t)static MOAngelLogger.assets);
    v21 = swift_retain_n(a2);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.default.getter();
    v24 = os_log_type_enabled(v22, v23);
    v123 = a3;
    if (v24)
    {
      v25 = (uint8_t *)swift_slowAlloc(12, -1);
      v26 = swift_slowAlloc(32, -1);
      v121 = v18;
      v27 = v26;
      v134[0] = v26;
      v122 = v16;
      *(_DWORD *)v25 = 136315138;
      v28 = (*(uint64_t (**)(void))(*(_QWORD *)a2 + 312))();
      v30 = v29;
      *(_QWORD *)&v132 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v29, v134);
      v16 = v122;
      v31 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v132, (char *)&v132 + 8, v25 + 4);
      swift_release_n(a2, v31);
      swift_bridgeObjectRelease(v30);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "[MOSuggestionAssetCacheManager] Successfully fetched %s", v25, 0xCu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      v32 = v27;
      v18 = v121;
      swift_slowDealloc(v32, -1, -1);
      swift_slowDealloc(v25, -1, -1);

    }
    else
    {

      v33 = swift_release_n(a2, v44);
    }
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 192))(v33);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    {
      outlined destroy of Any?((uint64_t)v14, &demangling cache variable for type metadata for UUID?);
      v45 = v125;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
      v45 = v125;
      v46 = objc_msgSend(v125, "metadata");
      v47 = v15;
      v48 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v46, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      v49 = (void *)MOSuggestionAssetMetadataKeyTransferID;
      *(_QWORD *)&v132 = MOSuggestionAssetMetadataKeyTransferID;
      type metadata accessor for MOSuggestionAssetMetadataKey(0);
      v51 = v50;
      v52 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionAssetMetadataKey and conformance MOSuggestionAssetMetadataKey, (uint64_t (*)(uint64_t))type metadata accessor for MOSuggestionAssetMetadataKey, (uint64_t)&protocol conformance descriptor for MOSuggestionAssetMetadataKey);
      v53 = v49;
      v54 = AnyHashable.init<A>(_:)(v134, &v132, v51, v52);
      v55 = UUID.uuidString.getter(v54);
      v133 = &type metadata for String;
      *(_QWORD *)&v132 = v55;
      *((_QWORD *)&v132 + 1) = v56;
      outlined init with take of Any(&v132, v131);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v48);
      v130 = v48;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v131, (uint64_t)v134, isUniquelyReferenced_nonNull_native);
      v58 = v130;
      swift_bridgeObjectRelease(0x8000000000000000);
      outlined destroy of AnyHashable((uint64_t)v134);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v45, "addMetadata:", isa, swift_bridgeObjectRelease(v58).n128_f64[0]);

      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v47);
    }
    v60 = v123;
    v61 = objc_msgSend(v45, "assetType");
    v62 = MOSuggestionAssetsTypeMultiPinMap;
    v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(v61);
    v65 = v64;
    v67 = static String._unconditionallyBridgeFromObjectiveC(_:)(v62);
    v68 = v66;
    if (v63 == v67 && v65 == v66)
    {

      swift_bridgeObjectRelease_n(v65, 2);
    }
    else
    {
      v69 = _stringCompareWithSmolCheck(_:_:expecting:)(v63, v65, v67, v66, 0);

      swift_bridgeObjectRelease(v65);
      swift_bridgeObjectRelease(v68);
      if ((v69 & 1) == 0)
      {
        v70 = v125;
        if ((v60 - 2) >= 9)
        {
LABEL_34:
          ObjCClassMetadata = swift_getObjCClassMetadata(objc_msgSend(v70, "contentClassType"));
          if (ObjCClassMetadata == type metadata accessor for MOSuggestionGenericFallBackInfo())
            goto LABEL_40;
        }
LABEL_35:
        v85 = v129;
        swift_beginAccess(v129, v134, 33, 0);
        v86 = *v85;
        v87 = v70;
        v88 = swift_isUniquelyReferenced_nonNull_native(v86);
        *v85 = v86;
        if ((v88 & 1) == 0)
        {
          v86 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((_QWORD *)v86 + 2) + 1, 1, v86);
          *v129 = v86;
        }
        v90 = *((_QWORD *)v86 + 2);
        v89 = *((_QWORD *)v86 + 3);
        if (v90 >= v89 >> 1)
        {
          v86 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((double *)(v89 > 1), v90 + 1, 1, v86);
          *v129 = v86;
        }
        *((_QWORD *)v86 + 2) = v90 + 1;
        v91 = &v86[2 * v90];
        v92 = v127;
        *((_QWORD *)v91 + 4) = v87;
        *((_QWORD *)v91 + 5) = v92;
        swift_endAccess(v134);

        goto LABEL_53;
      }
    }
    v70 = v125;
    if ((v60 - 2) >= 9)
    {
      if ((v60 & 1) == 0)
      {
        v71 = specialized static MOSuggestionAssetCacheManager.mappedLocationPreviewAssets(_:)(v125);
        if (v71)
        {
          v72 = v71;
          if ((unint64_t)v71 >> 62)
          {
            if (v71 >= 0)
              v71 &= 0xFFFFFFFFFFFFFF8uLL;
            v73 = _CocoaArrayWrapper.endIndex.getter(v71);
            if (v73)
              goto LABEL_23;
          }
          else
          {
            v73 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v73)
            {
LABEL_23:
              if (v73 < 1)
              {
                __break(1u);
                swift_release(*(_QWORD *)&v131[0]);
                __break(1u);
                return;
              }
              if ((v72 & 0xC000000000000001) != 0)
              {
                v74 = 0;
                do
                {
                  v75 = specialized _ArrayBuffer._getElementSlowPath(_:)(v74, v72);
                  v76 = v129;
                  swift_beginAccess(v129, v134, 33, 0);
                  v77 = *v76;
                  swift_unknownObjectRetain();
                  v78 = swift_isUniquelyReferenced_nonNull_native(v77);
                  *v76 = v77;
                  if ((v78 & 1) == 0)
                  {
                    v77 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((_QWORD *)v77 + 2) + 1, 1, v77);
                    *v129 = v77;
                  }
                  v80 = *((_QWORD *)v77 + 2);
                  v79 = *((_QWORD *)v77 + 3);
                  if (v80 >= v79 >> 1)
                  {
                    v77 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((double *)(v79 > 1), v80 + 1, 1, v77);
                    *v129 = v77;
                  }
                  ++v74;
                  *((_QWORD *)v77 + 2) = v80 + 1;
                  v81 = &v77[2 * v80];
                  v82 = v127;
                  *((_QWORD *)v81 + 4) = v75;
                  *((_QWORD *)v81 + 5) = v82;
                  swift_endAccess(v134);
                  swift_unknownObjectRelease(v75);
                }
                while (v73 != v74);
              }
              else
              {
                v93 = 0;
                do
                {
                  v94 = *(void **)(v72 + 8 * v93 + 32);
                  v95 = v129;
                  swift_beginAccess(v129, v134, 33, 0);
                  v96 = *v95;
                  v97 = v94;
                  v98 = swift_isUniquelyReferenced_nonNull_native(v96);
                  *v95 = v96;
                  if ((v98 & 1) == 0)
                  {
                    v96 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((_QWORD *)v96 + 2) + 1, 1, v96);
                    *v129 = v96;
                  }
                  v100 = *((_QWORD *)v96 + 2);
                  v99 = *((_QWORD *)v96 + 3);
                  if (v100 >= v99 >> 1)
                  {
                    v96 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((double *)(v99 > 1), v100 + 1, 1, v96);
                    *v129 = v96;
                  }
                  ++v93;
                  *((_QWORD *)v96 + 2) = v100 + 1;
                  v101 = &v96[2 * v100];
                  v102 = v127;
                  *((_QWORD *)v101 + 4) = v97;
                  *((_QWORD *)v101 + 5) = v102;
                  swift_endAccess(v134);

                }
                while (v73 != v93);
              }

              goto LABEL_52;
            }
          }

LABEL_52:
          swift_bridgeObjectRelease(v72);
          goto LABEL_53;
        }
LABEL_40:

        goto LABEL_53;
      }
      goto LABEL_34;
    }
    goto LABEL_35;
  }
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v34 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v34, (uint64_t)static MOAngelLogger.assets);
  v35 = swift_retain_n(a2);
  v36 = Logger.logObject.getter(v35);
  v37 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc(12, -1);
    v39 = swift_slowAlloc(32, -1);
    v134[0] = v39;
    *(_DWORD *)v38 = 136315138;
    v40 = (*(uint64_t (**)(void))(*(_QWORD *)a2 + 312))();
    v42 = v41;
    *(_QWORD *)&v132 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v40, v41, v134);
    v43 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v132, (char *)&v132 + 8, v38 + 4);
    swift_release_n(a2, v43);
    swift_bridgeObjectRelease(v42);
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "[MOSuggestionAssetCacheManager] Failed retrieval for %s", v38, 0xCu);
    swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1, -1);
    swift_slowDealloc(v38, -1, -1);

  }
  else
  {

    swift_release_n(a2, v83);
  }
LABEL_53:
  v103 = (uint64_t *)(v126 + 16);
  swift_beginAccess(v126 + 16, v134, 1, 0);
  v104 = *v103 + 1;
  if (__OFADD__(*v103, 1))
  {
    __break(1u);
  }
  else
  {
    *v103 = v104;
    if (!((unint64_t)v128 >> 62))
    {
      if (v104 != *(_QWORD *)((v128 & 0xFFFFFFFFFFFFF8) + 0x10))
        return;
      goto LABEL_56;
    }
  }
  v117 = v128;
  if (v128 < 0)
    v118 = v128;
  else
    v118 = v128 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v128);
  v119 = _CocoaArrayWrapper.endIndex.getter(v118);
  swift_bridgeObjectRelease(v117);
  if (v104 == v119)
  {
LABEL_56:
    v105 = v129;
    swift_beginAccess(v129, &v132, 0, 0);
    *(_QWORD *)&v131[0] = *v105;
    v106 = *(_QWORD *)&v131[0];
    swift_bridgeObjectRetain_n(*(_QWORD *)&v131[0], 2);
    specialized MutableCollection<>.sort(by:)((uint64_t *)v131, specialized _ContiguousArrayBuffer._consumeAndCreateNew(), (uint64_t (*)(_QWORD *))specialized UnsafeMutableBufferPointer._stableSortImpl(by:));
    swift_bridgeObjectRelease(v106);
    v107 = *(_QWORD *)&v131[0];
    v108 = *(_QWORD *)(*(_QWORD *)&v131[0] + 16);
    if (v108)
    {
      *(_QWORD *)&v131[0] = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)(v108);
      v109 = 32;
      do
      {
        v110 = *(id *)(v107 + v109);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v110);
        v111 = *(_QWORD *)(*(_QWORD *)&v131[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v111);
        v112 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v111, v110);
        specialized ContiguousArray._endMutation()(v112);
        v109 += 16;
        --v108;
      }
      while (v108);
      v113 = *(double **)&v131[0];
      v114 = swift_release(v107);
    }
    else
    {
      v114 = swift_release(*(_QWORD *)&v131[0]);
      v113 = _swiftEmptyArrayStorage;
    }
    v124(v113, v114);
    swift_bridgeObjectRelease(v113);
    v115 = v129;
    swift_beginAccess(v129, v131, 1, 0);
    v116 = *v115;
    *v115 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v116);
  }
}

Swift::OpaquePointer_optional __swiftcall MOSuggestionAssetCacheManager.authorizedAssetPrototypes(_:)(Swift::OpaquePointer_optional result)
{
  _QWORD *v1;
  uint64_t rawValue;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(__n128);
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  NSString v23;
  id v24;
  id v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  _QWORD v32[2];
  _QWORD v33[2];
  _BYTE v34[24];
  unint64_t v35;

  if (result.value._rawValue)
  {
    rawValue = (uint64_t)result.value._rawValue;
    v3 = (uint64_t)result.value._rawValue & 0xFFFFFFFFFFFFFF8;
    if ((unint64_t)result.value._rawValue >> 62)
      goto LABEL_18;
    v4 = *(_QWORD *)(((uint64_t)result.value._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(result.value._rawValue);
    if (v4)
    {
      v35 = (unint64_t)_swiftEmptyArrayStorage;
      while (1)
      {
        v31 = v1 + 3;
        swift_beginAccess(v1 + 3, v34, 0, 0);
        v5 = 0;
        while (1)
        {
          if ((rawValue & 0xC000000000000001) != 0)
          {
            v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, rawValue);
          }
          else
          {
            v6 = *(_QWORD *)(rawValue + 8 * v5 + 32);
            swift_retain(v6);
          }
          v7 = *v31;
          v8 = *(uint64_t (**)(__n128))(*(_QWORD *)v6 + 288);
          v9 = swift_bridgeObjectRetain(*v31);
          v10 = v8(v9);
          v12 = v11;
          v33[0] = v10;
          v33[1] = v11;
          v32[0] = 35;
          v32[1] = 0xE100000000000000;
          v13 = lazy protocol witness table accessor for type String and conformance String();
          v1 = v33;
          v14 = (_QWORD *)StringProtocol.components<A>(separatedBy:)(v32, &type metadata for String, &type metadata for String, v13, v13);
          v3 = v14[2];
          if (!v3)
            break;
          v15 = v14;
          v17 = v14[4];
          v16 = v14[5];
          swift_bridgeObjectRetain(v16);
          swift_bridgeObjectRelease(v12);
          swift_bridgeObjectRelease(v15);
          LOBYTE(v15) = specialized Set.contains(_:)(v17, v16, v7);
          swift_bridgeObjectRelease(v16);
          v18 = swift_bridgeObjectRelease(v7);
          if ((v15 & 1) != 0)
          {
            v19 = (void *)(*(uint64_t (**)(__n128))(*(_QWORD *)v6 + 120))(v18);
            ((void (*)(void))v8)();
            v21 = v20;
            v22 = objc_allocWithZone((Class)MOSuggestionAssetPrototype);
            v23 = String._bridgeToObjectiveC()();
            v24 = objc_msgSend(v22, "init:identifier:", v19, v23, swift_bridgeObjectRelease(v21).n128_f64[0]);

            v25 = v24;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25);
            v27 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v26 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v27 >= v26 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v26 > 1, v27 + 1, 1);
            v28 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, v25);
            specialized Array._endMutation()(v28);
            swift_release(v6);

          }
          else
          {
            swift_release(v6);
          }
          if (v4 == ++v5)
          {
            swift_bridgeObjectRelease(rawValue);
            result.value._rawValue = (void *)v35;
            return result;
          }
        }
        __break(1u);
LABEL_18:
        v29 = rawValue >= 0 ? v3 : rawValue;
        swift_bridgeObjectRetain(rawValue);
        if (_CocoaArrayWrapper.endIndex.getter(v29) <= 0)
          break;
        v35 = (unint64_t)_swiftEmptyArrayStorage;
        swift_bridgeObjectRetain(rawValue);
        v30 = _CocoaArrayWrapper.endIndex.getter(v29);
        swift_bridgeObjectRelease(rawValue);
        if (!v30)
        {
          swift_bridgeObjectRelease(rawValue);
          result.value._rawValue = _swiftEmptyArrayStorage;
          return result;
        }
        if (v30 < 1)
        {
          __break(1u);
          break;
        }
        v4 = v30;
      }
    }
    swift_bridgeObjectRelease(rawValue);
    result.value._rawValue = 0;
  }
  return result;
}

Swift::Void __swiftcall MOSuggestionAssetCacheManager.submitMediaMetrics(_:)(Swift::OpaquePointer_optional a1)
{
  uint64_t rawValue;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  __n128 v38;
  __n128 v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t (*v54)(__n128);
  __n128 v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  int64_t v71;
  uint64_t v72;
  int64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE *v77;

  if (a1.value._rawValue)
  {
    rawValue = (uint64_t)a1.value._rawValue;
    v2 = (uint64_t)a1.value._rawValue & 0xFFFFFFFFFFFFFF8;
    if ((unint64_t)a1.value._rawValue >> 62)
      goto LABEL_69;
    v3 = *(_QWORD *)(((uint64_t)a1.value._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1.value._rawValue);
    if (v3)
    {
      v77 = &_swiftEmptySetSingleton;
LABEL_5:
      v4 = 4;
      while (1)
      {
        v5 = v4 - 4;
        if ((rawValue & 0xC000000000000001) == 0)
          break;
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4 - 4, rawValue);
        v7 = v4 - 3;
        if (__OFADD__(v5, 1))
          goto LABEL_67;
LABEL_13:
        v8 = (void *)(*(uint64_t (**)(void))(*(_QWORD *)v6 + 120))();
        v9 = MOSuggestionAssetsTypeMediaCoverArt;
        v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
        v12 = v11;
        v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
        if (v10 == v13 && v12 == v14)
        {

          v18 = swift_bridgeObjectRelease_n(v12, 2);
        }
        else
        {
          v16 = v14;
          v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v13, v14, 0);

          swift_bridgeObjectRelease(v12);
          v19 = swift_bridgeObjectRelease(v16);
          if ((v17 & 1) == 0)
          {
            swift_release(v6);
            goto LABEL_7;
          }
        }
        v20 = (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)v6 + 256))(v18, v19);
        if (!v20)
          goto LABEL_25;
        v21 = v20;
        v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOMediaPlayMetaDataKeyPlayerBundleID"));
        v24 = v23;
        if (!*(_QWORD *)(v21 + 16) || (v25 = specialized __RawDictionaryStorage.find<A>(_:)(v22, v23), (v26 & 1) == 0))
        {
          swift_bridgeObjectRelease(rawValue);
          swift_bridgeObjectRelease(v24);
          v28 = v21;
LABEL_27:
          swift_bridgeObjectRelease(v28);
          swift_bridgeObjectRelease(v77);
          if (serverManager._connectionProperties == (NSMutableDictionary *)-1)
          {
LABEL_28:
            v29 = type metadata accessor for Logger(0);
            __swift_project_value_buffer(v29, (uint64_t)static MOAngelLogger.assets);
            v30 = swift_retain_n(v6);
            v31 = Logger.logObject.getter(v30);
            v32 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v31, v32))
            {
              v33 = (uint8_t *)swift_slowAlloc(12, -1);
              v34 = swift_slowAlloc(32, -1);
              v74 = v34;
              *(_DWORD *)v33 = 136315138;
              v35 = (*(uint64_t (**)(void))(*(_QWORD *)v6 + 312))();
              v37 = v36;
              v76 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v36, &v74);
              v38 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, &v77, v33 + 4);
              swift_release_n(v6, v38);
              swift_bridgeObjectRelease(v37);
              _os_log_impl((void *)&_mh_execute_header, v31, v32, "[MOSuggestionAssetCacheManager] Metrics has empty metaData or bundleId for media asset, %s", v33, 0xCu);
              swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v34, -1, -1);
              swift_slowDealloc(v33, -1, -1);
              swift_release(v6);

            }
            else
            {

              swift_release_n(v6, v39);
            }
            return;
          }
LABEL_77:
          swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
          goto LABEL_28;
        }
        v27 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v25);
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease(v24);
        swift_bridgeObjectRelease(v21);
        v76 = v27;
        if ((swift_dynamicCast(&v74, &v76, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for String, 6) & 1) == 0)
        {
LABEL_25:
          v28 = rawValue;
          goto LABEL_27;
        }
        specialized Set._Variant.insert(_:)(&v74, v74, v75);
        swift_release(v6);
        swift_bridgeObjectRelease(v75);
LABEL_7:
        ++v4;
        if (v7 == v3)
        {
          swift_bridgeObjectRelease(rawValue);
          v40 = v77;
          goto LABEL_32;
        }
      }
      v6 = *(_QWORD *)(rawValue + 8 * v4);
      swift_retain(v6);
      v7 = v4 - 3;
      if (!__OFADD__(v5, 1))
        goto LABEL_13;
LABEL_67:
      __break(1u);
      while (1)
      {
        __break(1u);
LABEL_69:
        v68 = rawValue >= 0 ? v2 : rawValue;
        swift_bridgeObjectRetain(rawValue);
        if (_CocoaArrayWrapper.endIndex.getter(v68) <= 0)
          break;
        v77 = &_swiftEmptySetSingleton;
        swift_bridgeObjectRetain(rawValue);
        v3 = _CocoaArrayWrapper.endIndex.getter(v68);
        swift_bridgeObjectRelease(rawValue);
        if (v3)
          goto LABEL_5;
        swift_bridgeObjectRelease(rawValue);
        v40 = &_swiftEmptySetSingleton;
LABEL_32:
        v70 = v40 + 56;
        v41 = 1 << v40[32];
        v42 = -1;
        if (v41 < 64)
          v42 = ~(-1 << v41);
        v6 = v42 & *((_QWORD *)v40 + 7);
        v71 = (unint64_t)(v41 + 63) >> 6;
        swift_bridgeObjectRetain(v40);
        v44 = 0;
        v45 = v69;
        v72 = v43;
        if (v6)
        {
          while (1)
          {
            v46 = __clz(__rbit64(v6));
            v6 &= v6 - 1;
            v73 = v44;
            v47 = v46 | (v44 << 6);
LABEL_52:
            v51 = (uint64_t *)(*(_QWORD *)(v43 + 48) + 16 * v47);
            v52 = *v51;
            v53 = v51[1];
            v54 = *(uint64_t (**)(__n128))(*(_QWORD *)v45 + 216);
            v55 = swift_bridgeObjectRetain(v53);
            v56 = v54(v55);
            if (!*(_QWORD *)(v56 + 16))
              goto LABEL_56;
            swift_bridgeObjectRetain(v53);
            v57 = specialized __RawDictionaryStorage.find<A>(_:)(v52, v53);
            if ((v58 & 1) == 0)
              break;
            v59 = *(_QWORD *)(v56 + 56) + 32 * v57;
            v60 = *(_QWORD *)(v59 + 16);
            rawValue = *(unsigned __int8 *)(v59 + 24);
            swift_bridgeObjectRetain(v60);
            swift_bridgeObjectRelease(v53);
            swift_bridgeObjectRelease(v56);
            v61 = 1;
            v62 = rawValue;
LABEL_57:
            swift_bridgeObjectRetain(v53);
            MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.send()();
            swift_bridgeObjectRelease(v53);
            if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
              swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
            v63 = type metadata accessor for Logger(0);
            __swift_project_value_buffer(v63, (uint64_t)static MOAngelLogger.assets);
            swift_bridgeObjectRetain(v60);
            swift_bridgeObjectRetain(v53);
            v65 = Logger.logObject.getter(v64);
            v66 = static os_log_type_t.info.getter();
            if (os_log_type_enabled(v65, v66))
            {
              v67 = swift_slowAlloc(24, -1);
              rawValue = swift_slowAlloc(32, -1);
              v74 = rawValue;
              *(_DWORD *)v67 = 136315650;
              swift_bridgeObjectRetain(v53);
              *(_QWORD *)(v67 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v52, v53, &v74);
              swift_bridgeObjectRelease_n(v53, 3);
              *(_WORD *)(v67 + 12) = 1024;
              if (v60)
                swift_bridgeObjectRelease(v60);
              else
                v62 = 1;
              v44 = v73;
              *(_DWORD *)(v67 + 14) = v62;
              swift_bridgeObjectRelease(v60);
              *(_WORD *)(v67 + 18) = 1024;
              *(_DWORD *)(v67 + 20) = v61;
              _os_log_impl((void *)&_mh_execute_header, v65, v66, "[MOSuggestionAssetCacheManager] Submit metrics for media asset, bundleId %s, appIconUnchanged, %{BOOL}d, predefinedApp, %{BOOL}d", (uint8_t *)v67, 0x18u);
              swift_arrayDestroy(rawValue, 1, (char *)&type metadata for Any + 8);
              swift_slowDealloc(rawValue, -1, -1);
              swift_slowDealloc(v67, -1, -1);

              v45 = v69;
              v43 = v72;
              if (!v6)
                goto LABEL_38;
            }
            else
            {

              swift_bridgeObjectRelease_n(v53, 2);
              swift_bridgeObjectRelease_n(v60, 2);
              v43 = v72;
              v44 = v73;
              if (!v6)
                goto LABEL_38;
            }
          }
          swift_bridgeObjectRelease(v53);
LABEL_56:
          swift_bridgeObjectRelease(v56);
          v62 = 0;
          v60 = 0;
          v61 = 0;
          rawValue = 1;
          goto LABEL_57;
        }
LABEL_38:
        v2 = v44 + 1;
        if (!__OFADD__(v44, 1))
        {
          if (v2 < v71)
          {
            v48 = *(_QWORD *)&v70[8 * v2];
            v49 = v44 + 1;
            if (v48)
              goto LABEL_51;
            v49 = v44 + 2;
            if (v44 + 2 < v71)
            {
              v48 = *(_QWORD *)&v70[8 * v49];
              if (v48)
                goto LABEL_51;
              v49 = v44 + 3;
              if (v44 + 3 < v71)
              {
                v48 = *(_QWORD *)&v70[8 * v49];
                if (v48)
                  goto LABEL_51;
                v50 = v44 + 4;
                if (v44 + 4 < v71)
                {
                  v48 = *(_QWORD *)&v70[8 * v50];
                  if (!v48)
                  {
                    while (1)
                    {
                      v49 = v50 + 1;
                      if (__OFADD__(v50, 1))
                        break;
                      if (v49 >= v71)
                        goto LABEL_65;
                      v48 = *(_QWORD *)&v70[8 * v49];
                      ++v50;
                      if (v48)
                        goto LABEL_51;
                    }
                    __break(1u);
                    goto LABEL_77;
                  }
                  v49 = v44 + 4;
LABEL_51:
                  v6 = (v48 - 1) & v48;
                  v73 = v49;
                  v47 = __clz(__rbit64(v48)) + (v49 << 6);
                  goto LABEL_52;
                }
              }
            }
          }
LABEL_65:
          swift_release(v43);
          swift_bridgeObjectRelease(v77);
          return;
        }
      }
    }
    swift_bridgeObjectRelease(rawValue);
  }
}

NSCountedSet_optional __swiftcall MOSuggestionAssetCacheManager.authorizedAssetCountsForAnalytics(_:)(Swift::OpaquePointer a1)
{
  Swift::Bool v1;
  _QWORD *v2;
  int64_t v4;
  id v5;
  objc_class *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(__n128);
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  char v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  NSString v35;
  unint64_t rawValue;
  unint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t *v40;
  _QWORD v41[2];
  _QWORD v42[2];
  _BYTE v43[24];
  NSCountedSet_optional result;

  v4 = (unint64_t)a1._rawValue >> 62;
  if ((unint64_t)a1._rawValue >> 62)
    goto LABEL_30;
  if (*(uint64_t *)(((unint64_t)a1._rawValue & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
  {
    do
    {
      v5 = objc_msgSend(objc_allocWithZone((Class)NSCountedSet), "init");
      if (v4)
      {
        if ((uint64_t)a1._rawValue < 0)
          rawValue = (unint64_t)a1._rawValue;
        else
          rawValue = (unint64_t)a1._rawValue & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a1._rawValue);
        v6 = (objc_class *)_CocoaArrayWrapper.endIndex.getter(rawValue);
        v4 = (int64_t)v6;
        if (!v6)
        {
LABEL_28:
          swift_bridgeObjectRelease(a1._rawValue);
          goto LABEL_35;
        }
      }
      else
      {
        v4 = *(_QWORD *)(((unint64_t)a1._rawValue & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(a1._rawValue);
        if (!v4)
          goto LABEL_28;
      }
      if (v4 < 1)
      {
        __break(1u);
        goto LABEL_37;
      }
      v39 = v5;
      v40 = v2 + 3;
      swift_beginAccess(v2 + 3, v43, 0, 0);
      v7 = 0;
      while (1)
      {
        if (((unint64_t)a1._rawValue & 0xC000000000000001) != 0)
        {
          v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, a1._rawValue);
        }
        else
        {
          v8 = *((_QWORD *)a1._rawValue + v7 + 4);
          swift_retain(v8);
        }
        v9 = *v40;
        v10 = *(uint64_t (**)(__n128))(*(_QWORD *)v8 + 288);
        v11 = swift_bridgeObjectRetain(*v40);
        v12 = v10(v11);
        v14 = v13;
        v42[0] = v12;
        v42[1] = v13;
        v41[0] = 35;
        v41[1] = 0xE100000000000000;
        v15 = lazy protocol witness table accessor for type String and conformance String();
        v2 = v42;
        v16 = (_QWORD *)StringProtocol.components<A>(separatedBy:)(v41, &type metadata for String, &type metadata for String, v15, v15);
        if (!v16[2])
          break;
        v17 = v16;
        v18 = v4;
        v19 = v16[4];
        v20 = v16[5];
        swift_bridgeObjectRetain(v20);
        swift_bridgeObjectRelease(v14);
        swift_bridgeObjectRelease(v17);
        LOBYTE(v17) = specialized Set.contains(_:)(v19, v20, v9);
        swift_bridgeObjectRelease(v20);
        v21 = swift_bridgeObjectRelease(v9);
        if ((v17 & 1) != 0)
        {
          v22 = (void *)(*(uint64_t (**)(__n128))(*(_QWORD *)v8 + 120))(v21);
          v23 = MOSuggestionAssetsTypeGenericMap;
          v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
          v26 = v25;
          v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
          if (v24 == v27 && v26 == v28)
          {
            swift_bridgeObjectRelease_n(v26, 2);
          }
          else
          {
            v30 = v28;
            v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v26, v27, v28, 0);
            swift_bridgeObjectRelease(v26);
            swift_bridgeObjectRelease(v30);
            if ((v31 & 1) == 0)
              goto LABEL_22;
          }
          v32 = MOSuggestionAssetsTypeMultiPinMap;

          v22 = v32;
LABEL_22:
          static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
          v34 = v33;
          v35 = String._bridgeToObjectiveC()();
          objc_msgSend(v39, "addObject:", v35, swift_bridgeObjectRelease(v34).n128_f64[0]);
          swift_release(v8);

          goto LABEL_8;
        }
        swift_release(v8);
LABEL_8:
        ++v7;
        v4 = v18;
        if (v18 == v7)
        {
          swift_bridgeObjectRelease(a1._rawValue);
          v5 = v39;
          goto LABEL_35;
        }
      }
      __break(1u);
LABEL_30:
      if ((uint64_t)a1._rawValue < 0)
        v37 = (unint64_t)a1._rawValue;
      else
        v37 = (unint64_t)a1._rawValue & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1._rawValue);
      v38 = _CocoaArrayWrapper.endIndex.getter(v37);
      swift_bridgeObjectRelease(a1._rawValue);
    }
    while (v38 >= 1);
  }
  v5 = 0;
LABEL_35:
  v6 = (objc_class *)v5;
LABEL_37:
  result.value.super.super.super.isa = v6;
  result.is_nil = v1;
  return result;
}

Swift::Void __swiftcall MOSuggestionAssetCacheManager.markEligibleForTransfer(_:)(Swift::String a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  NSObject *oslog;
  uint64_t v21[3];
  uint64_t v22;
  unint64_t v23;

  v4 = v1;
  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  if ((a1._countAndFlagsBits || a1._object != (void *)0xE000000000000000)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(a1._countAndFlagsBits, a1._object, 0, 0xE000000000000000, 0) & 1) == 0
    && (countAndFlagsBits != 0x6C6F686563616C70 || object != (void *)0xEB00000000726564)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(countAndFlagsBits, object, 0x6C6F686563616C70, 0xEB00000000726564, 0) & 1) == 0)
  {
    v21[0] = countAndFlagsBits;
    v21[1] = (uint64_t)object;
    v22 = 35;
    v23 = 0xE100000000000000;
    v11 = lazy protocol witness table accessor for type String and conformance String();
    v12 = (_QWORD *)StringProtocol.components<A>(separatedBy:)(&v22, &type metadata for String, &type metadata for String, v11, v11);
    if (v12[2])
    {
      v13 = v12;
      v2 = v12[4];
      v3 = v12[5];
      swift_bridgeObjectRetain(v3);
      swift_bridgeObjectRelease(v13);
      if (serverManager._connectionProperties == (NSMutableDictionary *)-1)
      {
LABEL_14:
        v14 = type metadata accessor for Logger(0);
        __swift_project_value_buffer(v14, (uint64_t)static MOAngelLogger.assets);
        v15 = swift_bridgeObjectRetain_n(object, 2);
        v16 = Logger.logObject.getter(v15);
        v17 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v16, v17))
        {
          v18 = (uint8_t *)swift_slowAlloc(12, -1);
          v19 = swift_slowAlloc(32, -1);
          v21[0] = v19;
          *(_DWORD *)v18 = 136315138;
          swift_bridgeObjectRetain(object);
          v22 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(countAndFlagsBits, (unint64_t)object, v21);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v18 + 4);
          swift_bridgeObjectRelease_n(object, 3);
          _os_log_impl((void *)&_mh_execute_header, v16, v17, "[MOSuggestionAssetCacheManager] Marking asset as authorized for transfer %s", v18, 0xCu);
          swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v19, -1, -1);
          swift_slowDealloc(v18, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n(object, 2);
        }
        swift_beginAccess(v4 + 24, v21, 33, 0);
        specialized Set._Variant.insert(_:)(&v22, v2, v3);
        swift_endAccess(v21);
        swift_bridgeObjectRelease(v23);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    goto LABEL_14;
  }
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v7 = type metadata accessor for Logger(0);
  v8 = __swift_project_value_buffer(v7, (uint64_t)static MOAngelLogger.assets);
  oslog = Logger.logObject.getter(v8);
  v9 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v9, "[MOSuggestionAssetCacheManager] Failed to mark as authorized for transfer, blank ID", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

}

Swift::Void __swiftcall MOSuggestionAssetCacheManager.markEligibleForTransfer(_:reflectionPromptIndex:)(Swift::String _, Swift::Int reflectionPromptIndex)
{
  _QWORD *v2;
  _QWORD *v3;
  void *object;
  uint64_t countAndFlagsBits;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];

  v3 = v2;
  object = _._object;
  countAndFlagsBits = _._countAndFlagsBits;
  (*(void (**)(void))(*v2 + 264))();
  swift_beginAccess(v2 + 4, v10, 33, 0);
  swift_bridgeObjectRetain(object);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v2[4]);
  v9 = v2[4];
  v2[4] = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(reflectionPromptIndex, countAndFlagsBits, (uint64_t)object, isUniquelyReferenced_nonNull_native);
  v8 = v2[4];
  v3[4] = v9;
  swift_bridgeObjectRelease(object);
  swift_bridgeObjectRelease(v8);
  swift_endAccess(v10);
}

void MOSuggestionAssetCacheManager.markEligibleForTransfer(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = (unint64_t)MOEventBundle.orderedAssetReferencesForPreview(max:)(13);
  if (v1)
  {
    v2 = v1;
    if ((unint64_t)v1 >> 62)
    {
      if (v1 >= 0)
        v1 &= 0xFFFFFFFFFFFFFF8uLL;
      v3 = _CocoaArrayWrapper.endIndex.getter(v1);
      if (!v3)
        goto LABEL_14;
    }
    else
    {
      v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v3)
      {
LABEL_14:
        swift_bridgeObjectRelease(v2);
        return;
      }
    }
    if (v3 >= 1)
    {
      v4 = 0;
      v5 = *(void (**)(uint64_t))(*(_QWORD *)v0 + 264);
      do
      {
        if ((v2 & 0xC000000000000001) != 0)
        {
          v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
        }
        else
        {
          v6 = *(_QWORD *)(v2 + 8 * v4 + 32);
          swift_retain(v6);
        }
        ++v4;
        v7 = (*(uint64_t (**)(void))(*(_QWORD *)v6 + 296))();
        v9 = v8;
        v5(v7);
        swift_release(v6);
        swift_bridgeObjectRelease(v9);
      }
      while (v3 != v4);
      goto LABEL_14;
    }
    __break(1u);
  }
}

Swift::Void __swiftcall MOSuggestionAssetCacheManager.clearEligibleAssetMarkings()()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v2[24];

  swift_beginAccess(v0 + 24, v2, 1, 0);
  v1 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 24) = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease(v1);
}

Swift::Void __swiftcall MOSuggestionAssetCacheManager.dumpMemory()()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + 16), "removeAllObjects");
}

double MOSuggestionAssetCacheManager.preCache(_:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  double result;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_QWORD *, _QWORD, uint64_t, uint64_t, void (*)(uint64_t), uint64_t);
  id v10;

  v2 = v1;
  v4 = MOEventBundle._orderedAssetReferences()();
  if (v4)
  {
    v6 = v4;
    if (one-time initialization token for lowPriorityQueue != -1)
      swift_once(&one-time initialization token for lowPriorityQueue, one-time initialization function for lowPriorityQueue);
    v7 = static MOSuggestionAssetCacheManager.lowPriorityQueue;
    v8 = swift_allocObject(&unk_1001ED190, 24, 7);
    *(_QWORD *)(v8 + 16) = a1;
    v9 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t, void (*)(uint64_t), uint64_t))(*(_QWORD *)v2 + 232);
    v10 = a1;
    v9(v6, 0, v7, 5, partial apply for closure #1 in MOSuggestionAssetCacheManager.preCache(_:), v8);
    swift_bridgeObjectRelease(v6);
    *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  }
  return result;
}

void closure #1 in MOSuggestionAssetCacheManager.preCache(_:)(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint8_t *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;

  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v7 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v7, (uint64_t)static MOAngelLogger.assets);
  v18 = a2;
  v8 = Logger.logObject.getter(v18);
  v9 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v20 = v11;
    *(_DWORD *)v10 = 136315138;
    v17 = v10 + 4;
    v12 = objc_msgSend(v18, "bundleIdentifier");
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v12);

    v13 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v14 = dispatch thunk of CustomStringConvertible.description.getter(v3, v13);
    v16 = v15;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v19 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v16, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v17);

    swift_bridgeObjectRelease(v16);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "[MOSuggestionAssetCacheManager] Successfully pre-cached bundleId=%s", v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

  }
}

uint64_t MOSuggestionAssetCacheManager.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));
  return v0;
}

uint64_t MOSuggestionAssetCacheManager.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocClassInstance(v0, 56, 7);
}

uint64_t closure #1 in MOSuggestionAssetCacheManager.retrieveAssetFor(_:withTypes:cacheType:completion:)(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(__n128);
  __n128 v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  __n128 v19;
  unint64_t v20;
  __n128 v21;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[24];
  uint64_t v26;

  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v7 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v7, (uint64_t)static MOAngelLogger.assets);
  v8 = swift_retain_n(a1);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v26 = v12;
    *(_DWORD *)v11 = 136315138;
    swift_beginAccess(a1 + 16, v25, 0, 0);
    v13 = *(_QWORD *)(a1 + 16);
    v14 = *(uint64_t (**)(__n128))(*(_QWORD *)v13 + 312);
    v15 = swift_retain(v13);
    v16 = v14(v15);
    v23 = a4;
    v18 = v17;
    swift_release(v13);
    v24 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v18, &v26);
    v19 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, v25, v11 + 4);
    swift_release_n(a1, v19);
    v20 = v18;
    a4 = v23;
    swift_bridgeObjectRelease(v20);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "[MOSuggestionAssetCacheManager] Cache hit for %s", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

  }
  else
  {

    swift_release_n(a1, v21);
  }
  return a2(a4);
}

void closure #1 in MOSuggestionAssetCacheManager.fetchAndCachePhotoLivePhotoVideosFromProvider(_:cacheType:completion:)(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, void (*a5)(id))
{
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  int v14;
  __n128 v15;
  void (*v16)(__n128);
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t ObjCClassMetadata;
  uint64_t Strong;
  uint64_t v31;
  id v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  NSString v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(__n128);
  __n128 v46;
  void *v47;
  id v48;
  _BYTE v49[24];

  if (!a1)
    goto LABEL_21;
  v10 = a1 & 0xFFFFFFFFFFFFFF8;
  if (!((unint64_t)a1 >> 62))
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v11)
      goto LABEL_4;
    goto LABEL_20;
  }
  if (a1 >= 0)
    v38 = a1 & 0xFFFFFFFFFFFFFF8;
  else
    v38 = a1;
  swift_bridgeObjectRetain(a1);
  if (!_CocoaArrayWrapper.endIndex.getter(v38))
  {
LABEL_20:
    swift_bridgeObjectRelease(a1);
LABEL_21:
    v39 = (*(uint64_t (**)(void))(*(_QWORD *)a2 + 312))();
    v41 = v40;
    v42 = type metadata accessor for MOSuggestionGenericFallBackInfo();
    v43 = swift_allocObject(v42, 32, 7);
    *(_QWORD *)(v43 + 24) = 0;
    *(_QWORD *)(v43 + 16) = 0;
    swift_beginAccess(v43 + 16, v49, 1, 0);
    v44 = *(_QWORD *)(v43 + 24);
    *(_QWORD *)(v43 + 16) = v39;
    *(_QWORD *)(v43 + 24) = v41;
    swift_bridgeObjectRelease(v44);
    MOSuggestionGenericFallBackInfo.description()();
    v45 = *(uint64_t (**)(__n128))(*(_QWORD *)a2 + 120);
    v46 = swift_retain(v43);
    v47 = (void *)v45(v46);
    v48 = objc_msgSend(objc_allocWithZone((Class)MOSuggestionAsset), "init:type:contentClassType:", v43, v47, swift_getObjCClassFromMetadata());
    swift_release(v43);

    v37 = v48;
    a5(v48);
    swift_release(v43);
    goto LABEL_22;
  }
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
LABEL_7:
    v13 = v12;
    v14 = a3;
    v15 = swift_bridgeObjectRelease(a1);
    v16 = *(void (**)(__n128))(*(_QWORD *)a2 + 288);
    v16(v15);
    v18 = v17;
    v19 = String._bridgeToObjectiveC()();
    objc_msgSend(v13, "addIdentifier:", v19, swift_bridgeObjectRelease(v18).n128_f64[0]);

    if ((v14 - 2) <= 8)
    {
      v20 = objc_msgSend(v13, "assetType");
      v21 = MOSuggestionAssetsTypeLivePhoto;
      v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
      v24 = v23;
      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      v27 = v25;
      if (v22 == v26 && v24 == v25)
      {

        swift_bridgeObjectRelease_n(v24, 2);
        goto LABEL_12;
      }
      v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v26, v25, 0);

      swift_bridgeObjectRelease(v24);
      swift_bridgeObjectRelease(v27);
      if ((v28 & 1) != 0)
      {
LABEL_12:
        ObjCClassMetadata = swift_getObjCClassMetadata(objc_msgSend(v13, "contentClassType"));
        if (ObjCClassMetadata == type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for PHLivePhoto, PHLivePhoto_ptr))
        {
          swift_beginAccess(a4 + 16, v49, 0, 0);
          Strong = swift_weakLoadStrong(a4 + 16);
          if (Strong)
          {
            v31 = Strong;
            v32 = *(id *)(Strong + 16);
            v33 = swift_release(v31);
            v16(v33);
            v35 = v34;
            v36 = String._bridgeToObjectiveC()();
            objc_msgSend(v32, "setObject:forKey:cost:", v13, v36, 1, swift_bridgeObjectRelease(v35).n128_f64[0]);

          }
        }
      }
    }
    v37 = v13;
    a5(v13);
LABEL_22:

    return;
  }
  if (*(_QWORD *)(v10 + 16))
  {
    v12 = *(id *)(a1 + 32);
    goto LABEL_7;
  }
  __break(1u);
}

void closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheRingsFromProvider(_:completion:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(id))
{
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t ObjCClassFromMetadata;
  id v12;
  id v13;
  void (*v14)(void);
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  uint64_t Strong;
  uint64_t v19;
  id v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  NSString v24;
  id v25;
  _BYTE v26[24];

  if (a2)
  {
    v8 = a4 + 16;
    v9 = MOSuggestionAssetsTypeActivityRings;
    type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for HKActivitySummary, HKActivitySummary_ptr);
    v10 = objc_allocWithZone((Class)MOSuggestionAsset);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v12 = a2;
    v13 = objc_msgSend(v10, "init:type:contentClassType:", v12, v9, ObjCClassFromMetadata);
    v14 = *(void (**)(void))(*(_QWORD *)a3 + 288);
    v14();
    v16 = v15;
    v17 = String._bridgeToObjectiveC()();
    objc_msgSend(v13, "addIdentifier:", v17, swift_bridgeObjectRelease(v16).n128_f64[0]);

    swift_beginAccess(v8, v26, 0, 0);
    Strong = swift_weakLoadStrong(v8);
    if (Strong)
    {
      v19 = Strong;
      v20 = *(id *)(Strong + 16);
      v21 = swift_release(v19);
      ((void (*)(__n128))v14)(v21);
      v23 = v22;
      v24 = String._bridgeToObjectiveC()();
      objc_msgSend(v20, "setObject:forKey:cost:", v13, v24, 1, swift_bridgeObjectRelease(v23).n128_f64[0]);

    }
    v25 = v13;
    a5(v13);

  }
  else
  {
    a5(0);
  }
}

void closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:)(_QWORD *a1, _QWORD *a2, char *a3, uint64_t a4, void *a5, double *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned __int8 a19, uint64_t a20,void (*a21)(_QWORD),uint8_t *a22)
{
  void *v22;
  double v23;
  _QWORD *v31;
  uint64_t inited;
  uint64_t v33;
  BOOL v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  void *v39;
  double *v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  void *object;
  NSString v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  id v71;
  id v72;
  double *v73;
  char *v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  unint64_t v92;
  void *v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  void *v100;
  id v101;
  id v102;
  char isUniquelyReferenced_nonNull_native;
  id v104;
  id v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  NSString v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  id v120;
  id v121;
  id v122;
  id v123;
  uint64_t v124;
  uint64_t v125;
  NSString v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  Class v130;
  id v131;
  void *v132;
  uint64_t v133;
  id v134;
  uint64_t v135;
  char v136;
  id v137;
  double v138;
  double v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;
  id v144;
  uint64_t v145;
  uint64_t v146;
  NSString v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  Class isa;
  __n128 v152;
  uint64_t v153;
  _QWORD *v154;
  _QWORD *v155;
  id v156;
  id v157;
  double *v158;
  char *v159;
  uint64_t *v160;
  uint64_t *v161;
  uint64_t *v162;
  uint64_t *v163;
  void **v164;
  uint64_t *v165;
  uint64_t v166;
  void **v167;
  void *v168;
  uint64_t *v169;
  char v170[24];
  char v171[24];
  char v172[24];
  char v173[24];
  char v174[24];
  uint64_t v175;
  _OWORD v176[2];
  uint64_t v177[3];
  __int128 v178;
  _QWORD *v179;
  char v180[24];
  char v181[24];
  char v182[24];
  char v183[24];
  char v184[24];
  char v185[24];
  char v186[24];
  char v187[24];
  char v188[24];
  char v189[24];
  char v190[432];
  uint64_t v191;
  char v192[24];
  char v193[24];
  char v194[32];

  v31 = a1;
  inited = (uint64_t)(a1 + 2);
  swift_beginAccess(a1 + 2, v194, 1, 0);
  v33 = v31[2];
  v34 = __OFADD__(v33, 1);
  v35 = (char *)(v33 + 1);
  if (v34)
  {
    __break(1u);
    goto LABEL_36;
  }
  *(_QWORD *)inited = v35;
  v36 = a2[2];
  if (v36 + 0x4000000000000000 < 0)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v34 = __OFADD__(a3, 2 * v36);
  v37 = &a3[2 * v36];
  if (v34)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if (v35 != v37)
    return;
  v38 = a13;
  v166 = a8 + 16;
  v167 = (void **)(a9 + 16);
  v165 = (uint64_t *)(a10 + 16);
  swift_beginAccess(a4 + 16, v193, 0, 0);
  v39 = *(void **)(a4 + 16);
  if (v39 && a5)
  {
    v40 = a6 + 2;
    v41 = objc_allocWithZone((Class)HKQuantityFormattingParameters);
    v42 = v39;
    v43 = a5;
    v44 = objc_msgSend(v41, "init");
    objc_msgSend(v44, "setPreferredUnit:", v42);
    objc_msgSend(v44, "setPrecision:", 0);
    swift_beginAccess(v40, v173, 0, 0);
    v45 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v42, *v40);
    v46 = objc_msgSend(v45, "localizedStringForType:parameters:", v43, v44);
    static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
    v48 = v47;

    object = String.uppercased()()._object;
    swift_bridgeObjectRelease(v48);
    v50 = String._bridgeToObjectiveC()();
    v51 = objc_msgSend(v50, "trimmedString", swift_bridgeObjectRelease(object).n128_f64[0]);

    if (v51)
    {
      v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
      v54 = v53;

    }
    else
    {
      v52 = 0;
      v54 = 0;
    }
    swift_beginAccess(a7 + 16, v172, 1, 0);
    v55 = *(_QWORD *)(a7 + 24);
    *(_QWORD *)(a7 + 16) = v52;
    *(_QWORD *)(a7 + 24) = v54;
    objc_msgSend(v45, "doubleValueForUnit:", v42, swift_bridgeObjectRelease(v55).n128_f64[0]);
    v57 = v56;

    swift_beginAccess(v166, v171, 1, 0);
    *(_QWORD *)(a8 + 16) = v57;
    *(_BYTE *)(a8 + 24) = 0;
    swift_beginAccess(v167, v170, 1, 0);
    v58 = *v167;
    *v167 = v45;

    v38 = a13;
  }
  v59 = (_QWORD *)(a12 + 16);
  v169 = (uint64_t *)(v38 + 16);
  swift_beginAccess(v165, v192, 0, 0);
  v60 = *v165;
  if (*v165 < 1)
  {
    v23 = 0.0;
  }
  else
  {
    swift_beginAccess(a11 + 16, v174, 0, 0);
    v23 = *(double *)(a11 + 16) / (double)v60;
  }
  v160 = (uint64_t *)(a14 + 16);
  v161 = (uint64_t *)(a15 + 16);
  v162 = (uint64_t *)(a16 + 16);
  v163 = (uint64_t *)(a17 + 16);
  v164 = (void **)(a18 + 16);
  v61 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(MOSuggestionAssetMetadataKey, Any)>);
  inited = swift_initStackObject(v61, v190);
  *(_OWORD *)(inited + 16) = xmmword_1001A01C0;
  a2 = (_QWORD *)MOSuggestionAssetMetadataKeyWorkoutGroupTotalTime;
  *(_QWORD *)(inited + 32) = MOSuggestionAssetMetadataKeyWorkoutGroupTotalTime;
  swift_beginAccess(v59, v189, 0, 0);
  *(_QWORD *)(inited + 40) = *v59;
  v31 = (_QWORD *)MOSuggestionAssetMetadataKeyWorkoutGroupTotalCalories;
  *(_QWORD *)(inited + 64) = &type metadata for Double;
  *(_QWORD *)(inited + 72) = v31;
  swift_beginAccess(v166, v188, 0, 0);
  v62 = *(_QWORD *)(a8 + 16);
  v63 = *(_BYTE *)(a8 + 24);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Double?);
  *(_QWORD *)(inited + 80) = v62;
  *(_BYTE *)(inited + 88) = v63;
  v22 = (void *)MOSuggestionAssetMetadataKeyWorkoutGroupTotalCaloriesQuantity;
  *(_QWORD *)(inited + 104) = v64;
  *(_QWORD *)(inited + 112) = v22;
  swift_beginAccess(v167, v187, 0, 0);
  a3 = (char *)*v167;
  v65 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for HKQuantity?);
  *(_QWORD *)(inited + 120) = a3;
  a5 = (void *)MOSuggestionAssetMetadataKeyWorkoutGroupTotalCaloriesWithUnit;
  *(_QWORD *)(inited + 144) = v65;
  *(_QWORD *)(inited + 152) = a5;
  swift_beginAccess(a7 + 16, v186, 0, 0);
  v66 = *(_QWORD *)(a7 + 16);
  a4 = *(_QWORD *)(a7 + 24);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
  *(_QWORD *)(inited + 160) = v66;
  *(_QWORD *)(inited + 168) = a4;
  a6 = (double *)MOSuggestionAssetMetadataKeyWorkoutGroupCount;
  *(_QWORD *)(inited + 184) = v67;
  *(_QWORD *)(inited + 192) = a6;
  swift_beginAccess(v169, v185, 0, 0);
  a7 = *v169;
  if (!((unint64_t)*v169 >> 62))
  {
    v68 = *(_QWORD *)((a7 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a4);
    v69 = a2;
    v70 = v31;
    v71 = v22;
    v72 = a5;
    v73 = a6;
    v74 = a3;
    goto LABEL_16;
  }
LABEL_38:
  if (a7 < 0)
    v153 = a7;
  else
    v153 = a7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a4);
  v154 = a2;
  v155 = v31;
  v156 = v22;
  v157 = a5;
  v158 = a6;
  swift_bridgeObjectRetain(a7);
  v159 = a3;
  v68 = _CocoaArrayWrapper.endIndex.getter(v153);
  swift_bridgeObjectRelease(a7);
LABEL_16:
  *(_QWORD *)(inited + 200) = v68;
  v75 = MOSuggestionAssetMetadataKeyWorkoutGroupAverageHeartrate;
  v168 = (void *)MOSuggestionAssetMetadataKeyWorkoutGroupAverageHeartrate;
  *(_QWORD *)(inited + 224) = &type metadata for Int;
  *(_QWORD *)(inited + 232) = v75;
  *(double *)(inited + 240) = v23;
  v76 = (void *)MOSuggestionAssetMetadataKeyWorkoutGroupTypes;
  *(_QWORD *)(inited + 264) = &type metadata for Double;
  *(_QWORD *)(inited + 272) = v76;
  swift_beginAccess(v160, v184, 0, 0);
  v77 = *v160;
  v78 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
  *(_QWORD *)(inited + 280) = v77;
  v79 = (void *)MOSuggestionAssetMetadataKeyWorkoutGroupTypeEnumValues;
  *(_QWORD *)(inited + 304) = v78;
  *(_QWORD *)(inited + 312) = v79;
  swift_beginAccess(v161, v183, 0, 0);
  v80 = *v161;
  v81 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [UInt]);
  *(_QWORD *)(inited + 320) = v80;
  v82 = (void *)MOSuggestionAssetMetadataKeyWorkoutGroupStartDates;
  *(_QWORD *)(inited + 344) = v81;
  *(_QWORD *)(inited + 352) = v82;
  swift_beginAccess(v162, v182, 0, 0);
  v83 = *v162;
  v84 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [Date]);
  *(_QWORD *)(inited + 360) = v83;
  v85 = (void *)MOSuggestionAssetMetadataKeyWorkoutGroupEndDates;
  *(_QWORD *)(inited + 384) = v84;
  *(_QWORD *)(inited + 392) = v85;
  swift_beginAccess(v163, v181, 0, 0);
  v86 = *v163;
  *(_QWORD *)(inited + 424) = v84;
  *(_QWORD *)(inited + 400) = v86;
  v87 = v168;
  v88 = v76;
  swift_bridgeObjectRetain(v77);
  v89 = v79;
  swift_bridgeObjectRetain(v80);
  v90 = v82;
  swift_bridgeObjectRetain(v83);
  v91 = v85;
  swift_bridgeObjectRetain(v86);
  v92 = specialized Dictionary.init(dictionaryLiteral:)(inited);
  v191 = v92;
  swift_beginAccess(v164, v180, 0, 0);
  v93 = *v164;
  if (*v164 && v23 > 0.0)
  {
    v94 = objc_allocWithZone((Class)HKHealthStore);
    v95 = v93;
    v96 = objc_msgSend(v94, "init");
    v97 = objc_msgSend(objc_allocWithZone((Class)FIUIUnitManager), "initWithHealthStore:", v96);

    v98 = objc_msgSend(objc_allocWithZone((Class)FIUIFormattingManager), "initWithUnitManager:", v97);
    if (v98)
    {
      v99 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v95, v23);
      v100 = (void *)MOSuggestionAssetMetadataKeyWorkoutGroupAverageHeartrateQuantity;
      v179 = (_QWORD *)type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for HKQuantity, HKQuantity_ptr);
      *(_QWORD *)&v178 = v99;
      outlined init with take of Any(&v178, v176);
      v101 = v100;
      v102 = v99;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v92);
      v177[0] = v92;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v176, v101, isUniquelyReferenced_nonNull_native);
      v191 = v177[0];

      swift_bridgeObjectRelease(0x8000000000000000);
      v104 = MOSuggestionAssetMetadataKeyWorkoutAverageHeartRateWithUnit;
      v105 = objc_msgSend(v98, "localizedStringWithHeartRate:unitStyle:", v102, 1);
      if (!v105)
      {
        __break(1u);
        return;
      }
      v106 = v105;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v105);
      v108 = v107;

      v109 = String.uppercased()()._object;
      swift_bridgeObjectRelease(v108);
      v110 = String._bridgeToObjectiveC()();
      v111 = objc_msgSend(v110, "trimmedString", swift_bridgeObjectRelease(v109).n128_f64[0]);

      if (v111)
      {
        v112 = static String._unconditionallyBridgeFromObjectiveC(_:)(v111);
        v114 = v113;

        v179 = &type metadata for String;
        *(_QWORD *)&v178 = v112;
        *((_QWORD *)&v178 + 1) = v114;
        outlined init with take of Any(&v178, v176);
        v115 = v191;
        v116 = swift_isUniquelyReferenced_nonNull_native(v191);
        v177[0] = v115;
        specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v176, v104, v116);
        v191 = v177[0];

        swift_bridgeObjectRelease(0x8000000000000000);
        goto LABEL_24;
      }
      specialized Dictionary._Variant.removeValue(forKey:)((uint64_t)v104, &v178);

      outlined destroy of Any?((uint64_t)&v178, &demangling cache variable for type metadata for Any?);
    }

  }
LABEL_24:
  if (a19 - 4 >= 7 && a19 != 2)
  {
    if (a19 != 3)
    {
      v137 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      objc_msgSend(v137, "scale");
      v139 = v138;

      swift_beginAccess(v169, &v178, 0, 0);
      v140 = *v169;
      swift_bridgeObjectRetain(*v169);
      v142 = (void *)specialized static MOSuggestionAssetSnowglobeEffect.imageFor(images:targetSize:)(v141, v139 * 300.0, v139 * 300.0);
      swift_bridgeObjectRelease(v140);
      if (v142)
      {
        v143 = MOSuggestionAssetsTypeWorkoutGroup;
        type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIImage, UIImage_ptr);
        v144 = objc_msgSend(objc_allocWithZone((Class)MOSuggestionAsset), "init:type:contentClassType:", v142, v143, swift_getObjCClassFromMetadata());
        (*(void (**)(void))(*(_QWORD *)a20 + 288))();
        v146 = v145;
        v147 = String._bridgeToObjectiveC()();
        objc_msgSend(v144, "addIdentifier:", v147, swift_bridgeObjectRelease(v146).n128_f64[0]);

        v148 = v191;
        specialized _dictionaryUpCast<A, B, C, D>(_:)(v191);
        v150 = v149;
        swift_bridgeObjectRelease(v148);
        isa = Dictionary._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v144, "addMetadata:", isa, swift_bridgeObjectRelease(v150).n128_f64[0]);

        specialized static MOSuggestionAssetCacheManager.wrapImageAssetInURLIfNecessary(asset:cacheType:completion:)(v144, a19, a21, a22);
      }
      else
      {
        v152 = swift_bridgeObjectRelease(v191);
        ((void (*)(_QWORD, __n128))a21)(0, v152);
      }
      return;
    }
    v132 = (void *)MOSuggestionAssetMetadataKeyWorkoutGroupIcons;
    swift_beginAccess(v169, v177, 0, 0);
    v133 = *v169;
    v179 = (_QWORD *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [UIImage]);
    *(_QWORD *)&v178 = v133;
    outlined init with take of Any(&v178, v176);
    v134 = v132;
    swift_bridgeObjectRetain(v133);
    v135 = v191;
    v136 = swift_isUniquelyReferenced_nonNull_native(v191);
    v175 = v135;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v176, v134, v136);
    v191 = v175;

    swift_bridgeObjectRelease(0x8000000000000000);
  }
  swift_beginAccess(v169, &v178, 0, 0);
  v117 = *v169;
  v118 = one-time initialization token for exerciseGreen;
  swift_bridgeObjectRetain(*v169);
  if (v118 != -1)
    swift_once(&one-time initialization token for exerciseGreen, one-time initialization function for exerciseGreen);
  v119 = (void *)static MOSuggestionTheme.Colors.exerciseGreen;
  v120 = objc_msgSend((id)static MOSuggestionTheme.Colors.exerciseGreen, "colorWithAlphaComponent:", 0.18);
  objc_allocWithZone((Class)type metadata accessor for MOSuggestionWorkoutsSnowGlobeView());
  v121 = v119;
  v122 = specialized MOSuggestionWorkoutsSnowGlobeView.init(icons:glyphBackgroundColor:glyphTintColor:)(v117, v120, v121);

  v123 = objc_msgSend(objc_allocWithZone((Class)MOSuggestionAsset), "init:type:contentClassType:", v122, MOSuggestionAssetsTypeWorkoutGroup, swift_getObjCClassFromMetadata());
  (*(void (**)(void))(*(_QWORD *)a20 + 288))();
  v125 = v124;
  v126 = String._bridgeToObjectiveC()();
  objc_msgSend(v123, "addIdentifier:", v126, swift_bridgeObjectRelease(v125).n128_f64[0]);

  v127 = v191;
  specialized _dictionaryUpCast<A, B, C, D>(_:)(v191);
  v129 = v128;
  swift_bridgeObjectRelease(v127);
  v130 = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v123, "addMetadata:", v130, swift_bridgeObjectRelease(v129).n128_f64[0]);

  v131 = v123;
  a21(v123);

}

uint64_t closure #3 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(void))
{
  id v8;
  void *v9;
  void *v10;
  _BYTE v12[24];

  v8 = a3;
  v9 = specialized Dictionary.subscript.getter(v8, a1);

  if (v9)
  {
    swift_beginAccess(a4 + 16, v12, 1, 0);
    v10 = *(void **)(a4 + 16);
    *(_QWORD *)(a4 + 16) = v9;

  }
  return a5();
}

void closure #5 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t (*a9)(void), uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v22;
  id v23;
  uint64_t v24;

  if (a1)
  {
    v22 = swift_allocObject(&unk_1001EDDF0, 136, 7);
    *(_QWORD *)(v22 + 16) = a2;
    *(_QWORD *)(v22 + 24) = a3;
    *(_QWORD *)(v22 + 32) = a4;
    *(_QWORD *)(v22 + 40) = a5;
    *(_QWORD *)(v22 + 48) = a6;
    *(_QWORD *)(v22 + 56) = a1;
    *(_BYTE *)(v22 + 64) = a7;
    *(_QWORD *)(v22 + 72) = a8;
    *(_QWORD *)(v22 + 80) = a9;
    *(_QWORD *)(v22 + 88) = a10;
    *(_QWORD *)(v22 + 96) = a11;
    *(_QWORD *)(v22 + 104) = a12;
    *(_QWORD *)(v22 + 112) = a13;
    *(_QWORD *)(v22 + 120) = a14;
    *(_QWORD *)(v22 + 128) = a15;
    v23 = a1;
    swift_retain(a2);
    swift_retain(a3);
    swift_retain(a4);
    swift_retain(a5);
    swift_retain(a6);
    swift_retain(a8);
    swift_retain(a10);
    swift_retain(a11);
    swift_retain(a12);
    swift_retain(a13);
    swift_retain(a14);
    swift_retain(a15);
    HKWorkout.packedSuggestionAssetMetadata(completion:)((uint64_t)partial apply for closure #1 in closure #5 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:), v22);

    swift_release(v22);
  }
  else
  {
    v24 = a9();
    ((void (*)(uint64_t))a9)(v24);
  }
}

void closure #1 in closure #5 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, int a8, uint64_t a9, uint64_t (*a10)(uint64_t), uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  id v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  char v45;
  uint64_t *v46;
  __int128 *v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  void (*v51)(uint64_t, char *, uint64_t);
  char *v52;
  id v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  unsigned int v59;
  id v60;
  uint64_t v61;
  char v62;
  __n128 v63;
  _QWORD *v64;
  _QWORD *v65;
  char isUniquelyReferenced_nonNull_native;
  unint64_t *v67;
  unint64_t v68;
  unint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  unint64_t v73;
  char v74;
  unint64_t *v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  double **v86;
  unint64_t v87;
  unint64_t v88;
  double *v89;
  char v90;
  unint64_t v91;
  unint64_t v92;
  double **v93;
  id v94;
  uint64_t v95;
  char v96;
  __n128 v97;
  void (*v98)(uint64_t, uint64_t, __n128);
  uint64_t v99;
  char v100;
  double *v101;
  char v102;
  int v103;
  double *v104;
  unint64_t v105;
  unint64_t v106;
  id v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  double v111;
  char *v112;
  uint64_t v113;
  double v114;
  id v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  void *v119;
  void *v120;
  id v121;
  double v122;
  double v123;
  id v124;
  uint64_t v125;
  char v126;
  double v127;
  double *v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  NSObject *v132;
  os_log_type_t v133;
  uint8_t *v134;
  void (*v135)(uint64_t, uint64_t);
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  NSObject *v139;
  os_log_type_t v140;
  char *v141;
  uint8_t *v142;
  void (*v143)(uint64_t, uint64_t);
  uint64_t v144;
  void (*v145)(uint64_t, uint64_t);
  uint64_t v146;
  uint64_t v147;
  void (*v148)(uint64_t, char *, uint64_t);
  unsigned int (*v149)(char *, uint64_t, uint64_t);
  void (*v150)(char *, uint64_t, uint64_t, uint64_t);
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  int v160;
  id v161;
  uint64_t v162;
  uint64_t (*v163)(uint64_t);
  char v164[24];
  char v165[24];
  _QWORD v166[3];
  _QWORD v167[3];
  __int128 v168;
  __int128 v169;

  v160 = a8;
  v161 = a7;
  v159 = a6;
  v158 = a5;
  v157 = a4;
  v19 = a10;
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v148 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v25 = (char *)&v148 - v24;
  v26 = type metadata accessor for Date(0);
  v27 = __chkstk_darwin(v26);
  v29 = (char *)&v148 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __chkstk_darwin(v27);
  v32 = (char *)&v148 - v31;
  v33 = __chkstk_darwin(v30);
  v34 = __chkstk_darwin(v33);
  v38 = (char *)&v148 - v37;
  if (!*(_QWORD *)(a1 + 16))
  {
    v168 = 0u;
    v169 = 0u;
    goto LABEL_10;
  }
  v154 = v36;
  v155 = v35;
  v156 = v34;
  v162 = a11;
  v163 = a10;
  v39 = MOSuggestionAssetMetadataKeyWorkoutType;
  v40 = specialized __RawDictionaryStorage.find<A>(_:)(v39);
  if ((v41 & 1) == 0)
  {
    v168 = 0u;
    v169 = 0u;

    v19 = v163;
    goto LABEL_10;
  }
  outlined init with copy of Any(*(_QWORD *)(a1 + 56) + 32 * v40, (uint64_t)&v168);

  v19 = v163;
  if (!*((_QWORD *)&v169 + 1))
  {
LABEL_10:
    v46 = &demangling cache variable for type metadata for Any?;
    v47 = &v168;
LABEL_11:
    v42 = outlined destroy of Any?((uint64_t)v47, v46);
    goto LABEL_12;
  }
  v42 = swift_dynamicCast(v167, &v168, (char *)&type metadata for Any + 8, &type metadata for String, 6);
  if ((v42 & 1) == 0)
  {
LABEL_12:
    v19(v42);
    return;
  }
  v153 = v167[1];
  if (!*(_QWORD *)(a1 + 16))
  {
    v168 = 0u;
    v169 = 0u;
LABEL_20:
    outlined destroy of Any?((uint64_t)&v168, &demangling cache variable for type metadata for Any?);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v155 + 56))(v25, 1, 1, v156);
    goto LABEL_21;
  }
  v152 = v167[0];
  v43 = MOSuggestionAssetMetadataKeyWorkoutWorkoutStartTime;
  v44 = specialized __RawDictionaryStorage.find<A>(_:)(v43);
  if ((v45 & 1) != 0)
  {
    outlined init with copy of Any(*(_QWORD *)(a1 + 56) + 32 * v44, (uint64_t)&v168);
  }
  else
  {
    v168 = 0u;
    v169 = 0u;
  }

  if (!*((_QWORD *)&v169 + 1))
    goto LABEL_20;
  v151 = v38;
  v48 = v156;
  v49 = swift_dynamicCast(v25, &v168, (char *)&type metadata for Any + 8, v156, 6);
  v50 = v155;
  v150 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v155 + 56);
  v150(v25, v49 ^ 1u, 1, v48);
  v149 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
  if (v149(v25, 1, v48) == 1)
  {
LABEL_21:
    swift_bridgeObjectRelease(v153);
    v56 = outlined destroy of Any?((uint64_t)v25, (uint64_t *)&demangling cache variable for type metadata for Date?);
    v163(v56);
    return;
  }
  v51 = *(void (**)(uint64_t, char *, uint64_t))(v50 + 32);
  v52 = v151;
  v148 = v51;
  v51((uint64_t)v151, v25, v48);
  if (!*(_QWORD *)(a1 + 16))
  {
    v168 = 0u;
    v169 = 0u;
LABEL_29:
    outlined destroy of Any?((uint64_t)&v168, &demangling cache variable for type metadata for Any?);
    v57 = v156;
    v150(v23, 1, 1, v156);
    v19 = v163;
    goto LABEL_30;
  }
  v53 = MOSuggestionAssetMetadataKeyWorkoutWorkoutEndTime;
  v54 = specialized __RawDictionaryStorage.find<A>(_:)(v53);
  if ((v55 & 1) != 0)
  {
    outlined init with copy of Any(*(_QWORD *)(a1 + 56) + 32 * v54, (uint64_t)&v168);
  }
  else
  {
    v168 = 0u;
    v169 = 0u;
  }

  if (!*((_QWORD *)&v169 + 1))
    goto LABEL_29;
  v57 = v156;
  v58 = swift_dynamicCast(v23, &v168, (char *)&type metadata for Any + 8, v156, 6);
  v150(v23, v58 ^ 1u, 1, v57);
  v59 = v149(v23, 1, v57);
  v19 = v163;
  if (v59 == 1)
  {
LABEL_30:
    v63 = swift_bridgeObjectRelease(v153);
    (*(void (**)(char *, uint64_t, __n128))(v155 + 8))(v52, v57, v63);
    v46 = (uint64_t *)&demangling cache variable for type metadata for Date?;
    v47 = (__int128 *)v23;
    goto LABEL_11;
  }
  v148((uint64_t)v154, v23, v57);
  if (!*(_QWORD *)(a1 + 16))
  {
    v168 = 0u;
    v169 = 0u;
LABEL_54:
    swift_bridgeObjectRelease(v153);
    outlined destroy of Any?((uint64_t)&v168, &demangling cache variable for type metadata for Any?);
LABEL_56:
    v98 = *(void (**)(uint64_t, uint64_t, __n128))(v155 + 8);
    v99 = v156;
    v98((uint64_t)v154, v156, v97);
    v42 = ((uint64_t (*)(char *, uint64_t))v98)(v151, v99);
    goto LABEL_12;
  }
  v60 = MOSuggestionAssetMetadataKeyWorkoutHKType;
  v61 = specialized __RawDictionaryStorage.find<A>(_:)(v60);
  if ((v62 & 1) != 0)
  {
    outlined init with copy of Any(*(_QWORD *)(a1 + 56) + 32 * v61, (uint64_t)&v168);
  }
  else
  {
    v168 = 0u;
    v169 = 0u;
  }

  if (!*((_QWORD *)&v169 + 1))
    goto LABEL_54;
  if ((swift_dynamicCast(v167, &v168, (char *)&type metadata for Any + 8, &type metadata for UInt, 6) & 1) == 0)
  {
    v97 = swift_bridgeObjectRelease(v153);
    goto LABEL_56;
  }
  v64 = (_QWORD *)(a2 + 16);
  v150 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v167[0];
  swift_beginAccess(a2 + 16, &v168, 33, 0);
  v65 = (_QWORD *)*v64;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v64);
  *v64 = v65;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v65 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v65[2] + 1, 1, v65);
    *v64 = v65;
  }
  v67 = (unint64_t *)(a3 + 16);
  v69 = v65[2];
  v68 = v65[3];
  if (v69 >= v68 >> 1)
  {
    v65 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((_QWORD *)(v68 > 1), v69 + 1, 1, v65);
    *v64 = v65;
  }
  v65[2] = v69 + 1;
  v70 = &v65[2 * v69];
  v71 = v153;
  v70[4] = v152;
  v70[5] = v71;
  swift_endAccess(&v168);
  v72 = *(void (**)(char *, char *, uint64_t))(v155 + 16);
  v72(v32, v52, v156);
  swift_beginAccess(a3 + 16, &v168, 33, 0);
  v73 = *v67;
  v74 = swift_isUniquelyReferenced_nonNull_native(*v67);
  *v67 = v73;
  if ((v74 & 1) == 0)
  {
    v73 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v73 + 16) + 1, 1, v73);
    *v67 = v73;
  }
  v75 = (unint64_t *)(v157 + 16);
  v77 = *(_QWORD *)(v73 + 16);
  v76 = *(_QWORD *)(v73 + 24);
  v78 = v155;
  if (v77 >= v76 >> 1)
  {
    v147 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v76 > 1, v77 + 1, 1, v73);
    v78 = v155;
    v73 = v147;
    *v67 = v147;
  }
  *(_QWORD *)(v73 + 16) = v77 + 1;
  v79 = (*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
  v80 = v73 + v79;
  v81 = *(_QWORD *)(v78 + 72);
  v82 = v32;
  v83 = v156;
  v148(v80 + v81 * v77, v82, v156);
  swift_endAccess(&v168);
  v72(v29, v154, v83);
  swift_beginAccess(v75, &v168, 33, 0);
  v84 = *v75;
  v85 = swift_isUniquelyReferenced_nonNull_native(*v75);
  *v75 = v84;
  if ((v85 & 1) == 0)
  {
    v84 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v84 + 16) + 1, 1, v84);
    *v75 = v84;
  }
  v86 = (double **)(v158 + 16);
  v88 = *(_QWORD *)(v84 + 16);
  v87 = *(_QWORD *)(v84 + 24);
  if (v88 >= v87 >> 1)
  {
    v84 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v87 > 1, v88 + 1, 1, v84);
    *v75 = v84;
  }
  *(_QWORD *)(v84 + 16) = v88 + 1;
  v148(v84 + v79 + v88 * v81, v29, v156);
  swift_endAccess(&v168);
  swift_beginAccess(v86, &v168, 33, 0);
  v89 = *v86;
  v90 = swift_isUniquelyReferenced_nonNull_native(*v86);
  *v86 = v89;
  if ((v90 & 1) == 0)
  {
    v89 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((_QWORD *)v89 + 2) + 1, 1, v89);
    *v86 = v89;
  }
  v92 = *((_QWORD *)v89 + 2);
  v91 = *((_QWORD *)v89 + 3);
  if (v92 >= v91 >> 1)
  {
    v89 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((double *)(v91 > 1), v92 + 1, 1, v89);
    *v86 = v89;
  }
  v93 = (double **)(v159 + 16);
  *((_QWORD *)v89 + 2) = v92 + 1;
  *(_QWORD *)&v89[v92 + 4] = v150;
  swift_endAccess(&v168);
  if (!*(_QWORD *)(a1 + 16))
  {
    v168 = 0u;
    v169 = 0u;
LABEL_62:
    outlined destroy of Any?((uint64_t)&v168, &demangling cache variable for type metadata for Any?);
    goto LABEL_63;
  }
  v94 = MOSuggestionAssetMetadataKeyWorkoutIsIndoors;
  v95 = specialized __RawDictionaryStorage.find<A>(_:)(v94);
  if ((v96 & 1) != 0)
  {
    outlined init with copy of Any(*(_QWORD *)(a1 + 56) + 32 * v95, (uint64_t)&v168);
  }
  else
  {
    v168 = 0u;
    v169 = 0u;
  }

  if (!*((_QWORD *)&v169 + 1))
    goto LABEL_62;
  if ((swift_dynamicCast(v167, &v168, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) != 0)
  {
    v100 = v167[0];
    goto LABEL_64;
  }
LABEL_63:
  v100 = 0;
LABEL_64:
  swift_beginAccess(v93, &v168, 33, 0);
  v101 = *v93;
  v102 = swift_isUniquelyReferenced_nonNull_native(*v93);
  *v93 = v101;
  if ((v102 & 1) == 0)
  {
    v101 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((_QWORD *)v101 + 2) + 1, 1, v101);
    *v93 = v101;
  }
  v103 = v160;
  v104 = (double *)(a12 + 16);
  v106 = *((_QWORD *)v101 + 2);
  v105 = *((_QWORD *)v101 + 3);
  if (v106 >= v105 >> 1)
  {
    v101 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((double *)(v105 > 1), v106 + 1, 1, v101);
    *v93 = v101;
  }
  *((_QWORD *)v101 + 2) = v106 + 1;
  *((_BYTE *)v101 + v106 + 32) = v100;
  swift_endAccess(&v168);
  v107 = objc_msgSend(v161, "workoutActivityType");
  v108 = (v103 - 11) < 0xFFFFFFF7;
  swift_retain(a9);
  v109 = v162;
  swift_retain(v162);
  v19 = v163;
  specialized MOSuggestionAssetSystemIconImageProvider.getAssetFor(workoutType:size:renderGlyph:isIndoors:completion:)((uint64_t)v107, 5, v108, v100, a9, v163);
  swift_release(a9);
  swift_release(v109);
  v111 = Date.timeIntervalSinceReferenceDate.getter(v110);
  v112 = v151;
  v114 = v111 - Date.timeIntervalSinceReferenceDate.getter(v113);
  swift_beginAccess(v104, v167, 1, 0);
  *v104 = v114 + *v104;
  if (!*(_QWORD *)(a1 + 16))
  {
    v168 = 0u;
    v169 = 0u;
LABEL_77:
    outlined destroy of Any?((uint64_t)&v168, &demangling cache variable for type metadata for Any?);
    goto LABEL_80;
  }
  v115 = MOSuggestionAssetMetadataKeyWorkoutCaloriesBurntQuantity;
  v116 = specialized __RawDictionaryStorage.find<A>(_:)(v115);
  if ((v117 & 1) != 0)
  {
    outlined init with copy of Any(*(_QWORD *)(a1 + 56) + 32 * v116, (uint64_t)&v168);
  }
  else
  {
    v168 = 0u;
    v169 = 0u;
  }

  if (!*((_QWORD *)&v169 + 1))
    goto LABEL_77;
  v118 = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for HKQuantity, HKQuantity_ptr);
  if ((swift_dynamicCast(v166, &v168, (char *)&type metadata for Any + 8, v118, 6) & 1) != 0)
  {
    v119 = (void *)v166[0];
    swift_beginAccess(a13 + 16, v165, 0, 0);
    v120 = *(void **)(a13 + 16);
    if (v120)
    {
      v121 = v120;
      objc_msgSend(v119, "doubleValueForUnit:", v121);
      v123 = v122;

      swift_beginAccess(a14 + 16, v164, 1, 0);
      *(double *)(a14 + 16) = v123 + *(double *)(a14 + 16);
    }
    else
    {

    }
    v112 = v151;
  }
LABEL_80:
  if (!*(_QWORD *)(a1 + 16))
  {
    v168 = 0u;
    v169 = 0u;
LABEL_93:
    outlined destroy of Any?((uint64_t)&v168, &demangling cache variable for type metadata for Any?);
    goto LABEL_94;
  }
  v124 = MOSuggestionAssetMetadataKeyWorkoutAverageHeartRate;
  v125 = specialized __RawDictionaryStorage.find<A>(_:)(v124);
  if ((v126 & 1) != 0)
  {
    outlined init with copy of Any(*(_QWORD *)(a1 + 56) + 32 * v125, (uint64_t)&v168);
  }
  else
  {
    v168 = 0u;
    v169 = 0u;
  }

  if (!*((_QWORD *)&v169 + 1))
    goto LABEL_93;
  if ((swift_dynamicCast(v166, &v168, (char *)&type metadata for Any + 8, &type metadata for Double, 6) & 1) == 0)
  {
LABEL_94:
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
      swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    v137 = type metadata accessor for Logger(0);
    v138 = __swift_project_value_buffer(v137, (uint64_t)static MOAngelLogger.assets);
    v139 = Logger.logObject.getter(v138);
    v140 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v139, v140))
    {
      v141 = v112;
      v142 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v142 = 0;
      _os_log_impl((void *)&_mh_execute_header, v139, v140, "workout group avg heart rate ignored from average", v142, 2u);
      swift_slowDealloc(v142, -1, -1);

      v143 = *(void (**)(uint64_t, uint64_t))(v155 + 8);
      v144 = v156;
      v143((uint64_t)v154, v156);
      v42 = ((uint64_t (*)(char *, uint64_t))v143)(v141, v144);
    }
    else
    {

      v145 = *(void (**)(uint64_t, uint64_t))(v155 + 8);
      v146 = v156;
      v145((uint64_t)v154, v156);
      v42 = ((uint64_t (*)(char *, uint64_t))v145)(v112, v146);
    }
    goto LABEL_12;
  }
  v127 = *(double *)v166;
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v128 = (double *)(a15 + 16);
  v129 = (_QWORD *)(a16 + 16);
  v130 = type metadata accessor for Logger(0);
  v131 = __swift_project_value_buffer(v130, (uint64_t)static MOAngelLogger.assets);
  v132 = Logger.logObject.getter(v131);
  v133 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v132, v133))
  {
    v134 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v134 = 134217984;
    *(double *)&v168 = v127;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v168, (char *)&v168 + 8, v134 + 4);
    _os_log_impl((void *)&_mh_execute_header, v132, v133, "workout group avg heart rate += %f", v134, 0xCu);
    swift_slowDealloc(v134, -1, -1);
  }

  v135 = *(void (**)(uint64_t, uint64_t))(v155 + 8);
  v136 = v156;
  v135((uint64_t)v154, v156);
  v135((uint64_t)v151, v136);
  swift_beginAccess(v128, &v168, 1, 0);
  *v128 = v127 + *v128;
  swift_beginAccess(v129, v166, 1, 0);
  if (!__OFADD__(*v129, 1))
  {
    ++*v129;
    goto LABEL_12;
  }
  __break(1u);
}

uint64_t closure #1 in closure #1 in closure #5 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  void *v4;
  _QWORD *v5;
  id v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _BYTE v11[24];

  if (a1)
  {
    v4 = (void *)a1;
    v5 = (_QWORD *)(a2 + 16);
    swift_beginAccess(a2 + 16, v11, 33, 0);
    v6 = v4;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v6);
    v8 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v7 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v8 >= v7 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v7 > 1, v8 + 1, 1);
    v9 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v6);
    specialized Array._endMutation()(v9);
    a1 = swift_endAccess(v11);
  }
  return a3(a1);
}

void closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(id), uint8_t *a11)
{
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  _QWORD *v25;
  void **v26;
  void *v27;
  void *v28;
  id v29;
  id *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  Class isa;
  void (*v40)(void);
  uint64_t v41;
  uint64_t v42;
  NSString v43;
  uint64_t Strong;
  uint64_t v45;
  id v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  NSString v50;
  double v51;
  uint64_t v52;
  id v53;
  _BYTE v54[24];
  _BYTE v55[24];
  _BYTE v56[24];
  _BYTE v57[24];
  _BYTE v58[24];
  _BYTE v59[24];
  _BYTE v60[32];

  v19 = (_QWORD *)(a1 + 16);
  swift_beginAccess(a1 + 16, v60, 1, 0);
  v20 = *(_QWORD *)(a1 + 16);
  v21 = __OFADD__(v20, 1);
  v22 = v20 + 1;
  if (v21)
  {
    __break(1u);
    return;
  }
  *v19 = v22;
  if (v22 == a2)
  {
    v23 = (uint64_t *)(a3 + 16);
    swift_beginAccess(v23, v59, 0, 0);
    v24 = *v23;
    if (*v23)
    {
      v25 = (_QWORD *)(a4 + 16);
      v26 = (void **)(a5 + 16);
      swift_beginAccess(a4 + 16, v58, 0, 0);
      v27 = *(void **)(a4 + 16);
      swift_beginAccess(v26, v57, 0, 0);
      v28 = *v26;
      if ((a6 - 2) >= 9u)
      {
        if ((a6 & 1) != 0 || !v27)
          goto LABEL_10;
      }
      else if (!v27)
      {
LABEL_10:
        v30 = (id *)(a7 + 16);
        swift_beginAccess(v30, v56, 0, 0);
        v29 = *v30;
LABEL_11:
        v31 = objc_allocWithZone((Class)MOSuggestionAssetWorkout);
        v32 = v28;
        swift_bridgeObjectRetain(v24);
        v33 = v27;
        v34 = objc_msgSend(v31, "init:route:renderedRouteMap:icon:", 0, v33, v32, v29);

        v35 = MOSuggestionAssetsTypeWorkout;
        type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetWorkout, MOSuggestionAssetWorkout_ptr);
        v36 = objc_msgSend(objc_allocWithZone((Class)MOSuggestionAsset), "init:type:contentClassType:", v34, v35, swift_getObjCClassFromMetadata());
        specialized _dictionaryUpCast<A, B, C, D>(_:)(v24);
        v38 = v37;
        swift_bridgeObjectRelease(v24);
        isa = Dictionary._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v36, "addMetadata:", isa, swift_bridgeObjectRelease(v38).n128_f64[0]);

        v40 = *(void (**)(void))(*(_QWORD *)a8 + 288);
        v40();
        v42 = v41;
        v43 = String._bridgeToObjectiveC()();
        objc_msgSend(v36, "addIdentifier:", v43, swift_bridgeObjectRelease(v42).n128_f64[0]);

        if (a6 - 2 >= 6 && a6 - 9 > 1)
        {
          specialized static MOSuggestionAssetCacheManager.wrapWorkoutAssetInURLIfNecessary(asset:cacheType:completion:)(v36, a6, (void (*)(_QWORD))a10, a11);
        }
        else
        {
          swift_beginAccess(a9 + 16, v55, 0, 0);
          Strong = swift_weakLoadStrong(a9 + 16);
          if (Strong)
          {
            v45 = Strong;
            v46 = *(id *)(Strong + 16);
            v47 = swift_release(v45);
            ((void (*)(__n128))v40)(v47);
            v49 = v48;
            v50 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(v49);
            *(_QWORD *)&v51 = swift_beginAccess(v25, v54, 0, 0).n128_u64[0];
            if (*v25)
              v52 = 3;
            else
              v52 = 1;
            objc_msgSend(v46, "setObject:forKey:cost:", v36, v50, v52, v51);

          }
          v53 = v36;
          a10(v36);

        }
        return;
      }
      v29 = 0;
      goto LABEL_11;
    }
  }
}

void closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(id))
{
  _QWORD *v10;
  id v11;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(__n128);
  __n128 v21;
  void *v22;
  id v23;
  id v24;
  _BYTE v25[24];

  if (a1)
  {
    v10 = (_QWORD *)swift_allocObject(&unk_1001ED670, 40, 7);
    v10[2] = a2;
    v10[3] = a3;
    v10[4] = a4;
    v11 = a1;
    swift_retain(a2);
    swift_retain(a4);
    HKWorkout.packedSuggestionAssetMetadata(completion:)((uint64_t)partial apply for closure #1 in closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:), (uint64_t)v10);

    swift_release(v10);
  }
  else
  {
    v14 = (*(uint64_t (**)(void))(*(_QWORD *)a5 + 312))();
    v16 = v15;
    v17 = type metadata accessor for MOSuggestionGenericFallBackInfo();
    v18 = swift_allocObject(v17, 32, 7);
    *(_QWORD *)(v18 + 24) = 0;
    *(_QWORD *)(v18 + 16) = 0;
    swift_beginAccess(v18 + 16, v25, 1, 0);
    v19 = *(_QWORD *)(v18 + 24);
    *(_QWORD *)(v18 + 16) = v14;
    *(_QWORD *)(v18 + 24) = v16;
    swift_bridgeObjectRelease(v19);
    MOSuggestionGenericFallBackInfo.description()();
    v20 = *(uint64_t (**)(__n128))(*(_QWORD *)a5 + 120);
    v21 = swift_retain(v18);
    v22 = (void *)v20(v21);
    v23 = objc_msgSend(objc_allocWithZone((Class)MOSuggestionAsset), "init:type:contentClassType:", v18, v22, swift_getObjCClassFromMetadata());
    swift_release(v18);

    v24 = v23;
    a6(v23);
    swift_release(v18);

  }
}

uint64_t closure #1 in closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  swift_beginAccess(a2 + 16, v9, 1, 0);
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a2 + 16) = a1;
  swift_bridgeObjectRelease(v6);
  v7 = swift_bridgeObjectRetain(a1);
  return a3(v7);
}

void closure #4 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:)(void *a1, double a2, uint64_t a3, void *a4, void (*a5)(void), uint64_t a6, uint64_t a7, int a8, uint64_t a9)
{
  double v9;
  double v10;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  id v36;
  id v37;
  double v38;
  void (*v39)(char *, uint64_t);
  id v40;
  id v41;
  double v42;
  uint64_t v43;
  double v44;
  double v45;
  uint64_t v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void **v70;
  void *v71;
  id v72;
  unsigned __int8 v73;
  void (*v74)(void);
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD v87[2];
  id v88;
  int v89;
  uint64_t v90;
  void (*v91)(void);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _BYTE v96[16];

  v90 = a9;
  v94 = a7;
  v17 = type metadata accessor for Date(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)v87 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v19);
  v24 = (char *)v87 - v23;
  if (!a1)
    goto LABEL_26;
  v89 = a8;
  v91 = a5;
  v92 = a6;
  v25 = a1;
  v26 = objc_msgSend(v25, "locationReadings");
  v93 = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for CLLocation, CLLocation_ptr);
  v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v26, v93);

  if ((unint64_t)v27 >> 62)
  {
    if (v27 < 0)
      v66 = v27;
    else
      v66 = v27 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v27);
    v28 = _CocoaArrayWrapper.endIndex.getter(v66);
    swift_bridgeObjectRelease(v27);
  }
  else
  {
    v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)&v29 = swift_bridgeObjectRelease(v27).n128_u64[0];
  if (v28 < 2)
  {

    a5 = v91;
LABEL_26:
    ((void (*)(uint64_t))a5)(v22);
    return;
  }
  v30 = objc_msgSend(v25, "locationReadings", v29);
  v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v30, v93);

  if ((unint64_t)v31 >> 62)
  {
    if (v31 < 0)
      v67 = v31;
    else
      v67 = v31 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v31);
    v68 = _CocoaArrayWrapper.endIndex.getter(v67);
    swift_bridgeObjectRelease(v31);
    if (!v68)
      goto LABEL_44;
  }
  else if (!*(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_44:
    swift_bridgeObjectRelease(v31);
    goto LABEL_45;
  }
  if ((v31 & 0xC000000000000001) != 0)
  {
    v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v31);
  }
  else
  {
    if (!*(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_39;
    }
    v32 = *(id *)(v31 + 32);
  }
  v88 = v32;
  v33 = objc_msgSend(v25, "locationReadings", swift_bridgeObjectRelease(v31).n128_f64[0]);
  v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v33, v93);

  if (!((unint64_t)v31 >> 62))
  {
    v34 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v34)
      goto LABEL_12;
    goto LABEL_43;
  }
LABEL_39:
  if (v31 < 0)
    v69 = v31;
  else
    v69 = v31 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v31);
  v34 = _CocoaArrayWrapper.endIndex.getter(v69);
  swift_bridgeObjectRelease(v31);
  if (!v34)
  {
LABEL_43:

    goto LABEL_44;
  }
LABEL_12:
  v35 = v34 - 1;
  if (__OFSUB__(v34, 1))
  {
    __break(1u);
  }
  else
  {
    v87[1] = a4;
    if ((v31 & 0xC000000000000001) == 0)
    {
      if ((v35 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v35 < *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v36 = *(id *)(v31 + 8 * v35 + 32);
        goto LABEL_17;
      }
      __break(1u);
      goto LABEL_56;
    }
  }
  v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v35, v31);
LABEL_17:
  a4 = v36;
  v37 = objc_msgSend(v36, "timestamp", swift_bridgeObjectRelease(v31).n128_f64[0]);
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v37);

  v38 = ((double (*)(void))Date.timeIntervalSinceReferenceDate.getter)();
  v39 = *(void (**)(char *, uint64_t))(v18 + 8);
  v39(v24, v17);
  v40 = v88;
  v41 = objc_msgSend(v88, "timestamp");
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v41);

  v42 = ((double (*)(void))Date.timeIntervalSinceReferenceDate.getter)();
  v43 = ((uint64_t (*)(char *, uint64_t))v39)(v21, v17);
  v44 = v38 - v42;
  v45 = Date.timeIntervalSinceReferenceDate.getter(v43);
  v47 = v45 - Date.timeIntervalSinceReferenceDate.getter(v46);
  objc_msgSend(v40, "coordinate");
  v49 = v48;
  objc_msgSend(a4, "coordinate");
  v51 = (v49 - v50) * (v49 - v50);
  objc_msgSend(v40, "coordinate");
  v53 = v52;
  objc_msgSend(a4, "coordinate");
  v10 = v51 + (v53 - v54) * (v53 - v54);
  v9 = v44 / v47;
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
LABEL_56:
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v55 = fabs(v9);
  v56 = sqrt(v10);
  v57 = type metadata accessor for Logger(0);
  v58 = __swift_project_value_buffer(v57, (uint64_t)static MOAngelLogger.assets);
  v59 = Logger.logObject.getter(v58);
  v60 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v59, v60))
  {
    v61 = swift_slowAlloc(32, -1);
    *(_DWORD *)v61 = 134218496;
    v95 = *(_QWORD *)&v55;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, v96, v61 + 4);
    *(_WORD *)(v61 + 12) = 2048;
    v95 = *(_QWORD *)&v56;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, v96, v61 + 14);
    *(_WORD *)(v61 + 22) = 2048;
    v95 = 0x3F7DAE6076B981DBLL;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, v96, v61 + 24);
    _os_log_impl((void *)&_mh_execute_header, v59, v60, "[MOSuggestionAssetCacheManager] routeDurationPercentage=%f, routeDistance=%f, threshold=%f", (uint8_t *)v61, 0x20u);
    swift_slowDealloc(v61, -1, -1);
  }

  if (v55 < a2 && v56 < 0.00724637681)
  {
    v63 = Logger.logObject.getter(v62);
    v64 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v63, v64))
    {
      v65 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v65 = 134217984;
      v95 = *(_QWORD *)&v55;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, v96, v65 + 4);
      _os_log_impl((void *)&_mh_execute_header, v63, v64, "[MOSuggestionAssetCacheManager] Duration of route is less than threshold, falling back to icon, routeDurationPercentage=%f", v65, 0xCu);
      swift_slowDealloc(v65, -1, -1);
    }

    v91();
    return;
  }

LABEL_45:
  v70 = (void **)(v94 + 16);
  swift_beginAccess(v94 + 16, &v95, 1, 0);
  v71 = *v70;
  *v70 = a1;
  v72 = v25;

  v73 = v89;
  if ((v89 - 2) > 8u)
  {
    v91();

  }
  else
  {
    v74 = v91;
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
      swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    v75 = type metadata accessor for Logger(0);
    v76 = __swift_project_value_buffer(v75, (uint64_t)static MOAngelLogger.assets);
    v77 = Logger.logObject.getter(v76);
    v78 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v77, v78))
    {
      v79 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v79 = 0;
      _os_log_impl((void *)&_mh_execute_header, v77, v78, "[MOSuggestionAssetCacheManager] Sheet only, rendering route", v79, 2u);
      swift_slowDealloc(v79, -1, -1);
    }

    v80 = type metadata accessor for MOSuggestionAssetMapSnapshotProvider();
    swift_allocObject(v80, 56, 7);
    v81 = MOSuggestionAssetMapSnapshotProvider.init(targetQueue:)(0);
    v82 = objc_msgSend(v72, "locationReadings");
    v83 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v82, v93);

    v84 = (_QWORD *)swift_allocObject(&unk_1001ED648, 40, 7);
    v85 = v90;
    v84[2] = v90;
    v84[3] = v74;
    v86 = v92;
    v84[4] = v92;
    swift_retain(v85);
    swift_retain(v86);
    MOSuggestionAssetMapSnapshotProvider.getRouteMapFor(_:size:completion:)(v83, v73, (uint64_t)partial apply for closure #1 in closure #4 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:), (uint64_t)v84);
    swift_release(v81);
    swift_bridgeObjectRelease(v83);
    swift_release(v84);

  }
}

uint64_t closure #1 in closure #4 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:)(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  void *v6;
  id v7;
  _BYTE v9[24];

  if (a1)
  {
    swift_beginAccess(a2 + 16, v9, 1, 0);
    v6 = *(void **)(a2 + 16);
    *(_QWORD *)(a2 + 16) = a1;
    v7 = a1;

  }
  return a3();
}

void specialized closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheMediaArtworkFromProvider(_:cacheType:completion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t a10, void (*a11)(id), uint8_t *a12, unsigned __int8 a13)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t Strong;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  char v34;
  id v35;
  NSString v36;
  double v37;
  double v38;
  double v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t, _QWORD *);
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  id v69;
  void (*v70)(void);
  uint64_t v71;
  uint64_t v72;
  NSString v73;
  id v74;
  uint64_t v75;
  id v76;
  void *v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  uint64_t v88;
  double v89;
  uint64_t v90;
  uint64_t inited;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  id v98;
  unint64_t v99;
  Class isa;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  __n128 v105;
  uint64_t v106;
  uint64_t v107;
  NSString v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  id v119;
  uint64_t v120;
  id v121;
  void (*v122)(id);
  uint8_t *v123;
  _QWORD *v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t *v127;
  uint64_t v128;
  double v129[2];
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD v133[3];
  _BYTE v134[24];
  _BYTE v135[24];
  char v136[24];
  char v137[24];

  v127 = a8;
  v128 = a3;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v112 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  if (!a1)
  {
    a11(0);
    return;
  }
  v124 = (uint64_t *)((char *)&v112 - v22);
  v121 = a1;
  v23 = a2 + 16;
  swift_beginAccess(a2 + 16, v137, 0, 0);
  Strong = swift_weakLoadStrong(a2 + 16);
  v122 = a11;
  v123 = a12;
  if (!Strong)
    goto LABEL_11;
  v25 = Strong;
  v26 = a7;
  v27 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)Strong + 216))(Strong);
  swift_release(v25);
  if (!*(_QWORD *)(v27 + 16)
    || (swift_bridgeObjectRetain(a4),
        specialized __RawDictionaryStorage.find<A>(_:)(v128, a4),
        v29 = v28,
        swift_bridgeObjectRelease(a4),
        (v29 & 1) == 0))
  {
    swift_bridgeObjectRelease(v27);
    a7 = v26;
LABEL_11:
    swift_bridgeObjectRetain(a6);
    goto LABEL_12;
  }
  swift_bridgeObjectRelease(v27);
  swift_beginAccess(v23, &v131, 0, 0);
  v30 = swift_weakLoadStrong(v23);
  if (!v30)
  {
LABEL_52:
    v130 = 0;
    goto LABEL_53;
  }
  v31 = v30;
  v32 = (_QWORD *)(*(uint64_t (**)(void))(*(_QWORD *)v30 + 216))();
  swift_release(v31);
  if (!v32[2])
  {
LABEL_51:
    swift_bridgeObjectRelease(v32);
    goto LABEL_52;
  }
  a7 = v26;
  swift_bridgeObjectRetain(a4);
  v33 = specialized __RawDictionaryStorage.find<A>(_:)(v128, a4);
  if ((v34 & 1) == 0)
  {
LABEL_50:
    swift_bridgeObjectRelease(a4);
    goto LABEL_51;
  }
  a6 = *(_QWORD *)(v32[7] + 32 * v33 + 16);
  swift_bridgeObjectRetain(a6);
  swift_bridgeObjectRelease(a4);
  swift_bridgeObjectRelease(v32);
LABEL_12:
  v130 = 0;
  if (a6)
  {
    v125 = a7 + 16;
    v35 = objc_allocWithZone((Class)NSScanner);
    v36 = String._bridgeToObjectiveC()();
    v32 = objc_msgSend(v35, "initWithString:", v36, swift_bridgeObjectRelease(a6).n128_f64[0]);

    objc_msgSend(v32, "scanHexLongLong:", &v130);
    v37 = (double)BYTE2(v130) / 255.0;
    v38 = (double)BYTE1(v130) / 255.0;
    v39 = (double)v130 / 255.0;
    v40 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", v37, v38, v39, 1.0);
    swift_beginAccess(v23, v136, 0, 0);
    v41 = swift_weakLoadStrong(v23);
    if (v41)
    {
      v42 = v41;
      v32 = (_QWORD *)(*(uint64_t (**)(void))(*(_QWORD *)v41 + 216))();
      swift_release(v42);
      if (v32[2])
      {
        swift_bridgeObjectRetain(a4);
        specialized __RawDictionaryStorage.find<A>(_:)(v128, a4);
        v44 = v43;
        swift_bridgeObjectRelease(a4);
        if ((v44 & 1) != 0)
        {
          swift_bridgeObjectRelease(v32);
          swift_beginAccess(v23, v135, 0, 0);
          v45 = swift_weakLoadStrong(v23);
          if (v45)
          {
            v46 = v45;
            v47 = (*(uint64_t (**)(void))(*(_QWORD *)v45 + 216))();
            swift_release(v46);
            if (*(_QWORD *)(v47 + 16))
            {
              swift_bridgeObjectRetain(a4);
              v48 = specialized __RawDictionaryStorage.find<A>(_:)(v128, a4);
              if ((v49 & 1) != 0)
                v126 = *(_QWORD **)(*(_QWORD *)(v47 + 56) + 32 * v48);
              else
                v126 = 0;
              v110 = v125;
              v51 = v49 ^ 1;
              swift_bridgeObjectRelease(a4);
            }
            else
            {
              v126 = 0;
              v51 = 1;
              v110 = v125;
            }
            swift_bridgeObjectRelease(v47);
            v109 = v126;
          }
          else
          {
            v109 = 0;
            v51 = 1;
            v110 = v125;
          }
          swift_beginAccess(v110, v134, 1, 0);
          v126 = v109;
          *(_QWORD *)(a7 + 16) = v109;
          *(_BYTE *)(a7 + 24) = v51 & 1;
          goto LABEL_26;
        }
      }
      swift_bridgeObjectRelease(v32);
    }
    swift_beginAccess(v23, v135, 0, 0);
    v50 = swift_weakLoadStrong(v23);
    if (!v50)
    {
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    swift_release(v50);
    swift_beginAccess(v125, v134, 1, 0);
    v51 = 0;
    if (v39 * 0.0722 + v37 * 0.2126 + v38 * 0.7152 <= 0.1)
    {
      v52 = 3;
      v53 = 3;
    }
    else
    {
      v52 = 2;
      v53 = 2;
    }
    v126 = (_QWORD *)v53;
    *(_QWORD *)(a7 + 16) = v52;
    *(_BYTE *)(a7 + 24) = 0;
LABEL_26:
    v119 = v40;
    v120 = a4;
    v112 = v23;
    v32 = (_QWORD *)type metadata accessor for URL(0);
    v54 = *(void (**)(char *, uint64_t, uint64_t, _QWORD *))(*(v32 - 1) + 56);
    v55 = v124;
    v54((char *)v124, 1, 1, v32);
    v54(v21, 1, 1, v32);
    v118 = v21;
    if ((v51 & 1) == 0)
    {
      v117 = a10;
      v125 = a9;
      v56 = *v127;
      v57 = v127[1];
      v58 = v127[3];
      v114 = v127[2];
      v115 = v56;
      v59 = v127[5];
      v113 = v127[4];
      v60 = v127[7];
      v116 = v127[6];
      v61 = v127[10];
      v62 = objc_allocWithZone((Class)MOSuggestionAssetMediaItem);
      v63 = v121;
      v64 = v121;
      v65 = v119;
      v127 = (uint64_t *)v119;
      swift_bridgeObjectRetain(v57);
      swift_bridgeObjectRetain(v58);
      swift_bridgeObjectRetain(v59);
      swift_bridgeObjectRetain(v60);
      v111 = v60;
      v66 = v125;
      v67 = @nonobjc MOSuggestionAssetMediaItem.init(title:albumTitle:artistName:albumArt:trackIdentifier:previewURL:mediaType:imageURL:bgColor:bgColorVariant:)(v115, v57, v114, v58, v113, v59, v63, v116, v111, (uint64_t)v55, v61, (uint64_t)v118, v65, (uint64_t)v126);
      v68 = MOSuggestionAssetsTypeMediaCoverArt;
      type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MOSuggestionAssetMediaItem, MOSuggestionAssetMediaItem_ptr);
      v69 = objc_msgSend(objc_allocWithZone((Class)MOSuggestionAsset), "init:type:contentClassType:", v67, v68, swift_getObjCClassFromMetadata());
      v70 = *(void (**)(void))(*(_QWORD *)v66 + 288);
      v70();
      v72 = v71;
      v73 = String._bridgeToObjectiveC()();
      objc_msgSend(v69, "addIdentifier:", v73, swift_bridgeObjectRelease(v72).n128_f64[0]);

      v74 = objc_allocWithZone((Class)LSApplicationRecord);
      v75 = v120;
      swift_bridgeObjectRetain(v120);
      v76 = @nonobjc LSApplicationRecord.init(bundleIdentifier:allowPlaceholder:)(v128, v75, 1);
      v77 = v76;
      if (v76)
      {
        v78 = objc_msgSend(v76, "localizedName");
        v79 = static String._unconditionallyBridgeFromObjectiveC(_:)(v78);
        v81 = v80;

      }
      else
      {
        v79 = 0;
        v81 = 0;
      }
      v82 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOMediaPlayMetaDataKeyPlayerStartDate"));
      v84 = v83;
      v85 = v117;
      if (*(_QWORD *)(v117 + 16) && (v86 = specialized __RawDictionaryStorage.find<A>(_:)(v82, v83), (v87 & 1) != 0))
      {
        v88 = *(_QWORD *)(*(_QWORD *)(v85 + 56) + 8 * v86);
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease(v84);
        v133[0] = v88;
        if ((swift_dynamicCast(v129, v133, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Double, 6) & 1) != 0)
        {
          if (!v81)
          {
            v122(0);
LABEL_40:

            return;
          }
          v89 = v129[0];
          v90 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(AnyHashable, Any)>);
          inited = swift_initStackObject(v90, &v132);
          *(_OWORD *)(inited + 16) = xmmword_10019EEE0;
          v124 = (_QWORD *)(inited + 32);
          v126 = (_QWORD *)(inited + 72);
          v92 = (void *)MOSuggestionAssetMetadataKeyMediaStartDate;
          v133[0] = MOSuggestionAssetMetadataKeyMediaStartDate;
          type metadata accessor for MOSuggestionAssetMetadataKey(0);
          v94 = v93;
          v95 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionAssetMetadataKey and conformance MOSuggestionAssetMetadataKey, (uint64_t (*)(uint64_t))type metadata accessor for MOSuggestionAssetMetadataKey, (uint64_t)&protocol conformance descriptor for MOSuggestionAssetMetadataKey);
          v128 = v79;
          v96 = v95;
          v97 = v92;
          AnyHashable.init<A>(_:)(v124, v133, v94, v96);
          *(_QWORD *)(inited + 96) = type metadata accessor for Date(0);
          __swift_allocate_boxed_opaque_existential_1(v126);
          Date.init(timeIntervalSinceReferenceDate:)(v89);
          v133[0] = MOSuggestionAssetMetadataKeyMediaThirdPartyAppeName;
          v98 = MOSuggestionAssetMetadataKeyMediaThirdPartyAppeName;
          AnyHashable.init<A>(_:)((_QWORD *)(inited + 104), v133, v94, v96);
          *(_QWORD *)(inited + 168) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
          *(_QWORD *)(inited + 144) = v128;
          *(_QWORD *)(inited + 152) = v81;
          v99 = specialized Dictionary.init(dictionaryLiteral:)(inited);
          isa = Dictionary._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v69, "addMetadata:", isa, swift_bridgeObjectRelease(v99).n128_f64[0]);

LABEL_37:
          v101 = v112;
          swift_beginAccess(v112, v133, 0, 0);
          v102 = swift_weakLoadStrong(v101);
          if (v102)
          {
            v103 = v102;
            v104 = *(id *)(v102 + 16);
            v105 = swift_release(v103);
            ((void (*)(__n128))v70)(v105);
            v107 = v106;
            v108 = String._bridgeToObjectiveC()();
            objc_msgSend(v104, "setObject:forKey:cost:", v69, v108, 1, swift_bridgeObjectRelease(v107).n128_f64[0]);

          }
          specialized static MOSuggestionAssetCacheManager.wrapMediaItemAssetInURLIfNecessary(asset:cacheType:completion:)(v69, a13, v122, v123);
          goto LABEL_40;
        }
      }
      else
      {
        swift_bridgeObjectRelease(v84);
      }
      swift_bridgeObjectRelease(v81);
      goto LABEL_37;
    }
    __break(1u);
    goto LABEL_49;
  }
LABEL_53:
  __break(1u);
}

void closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheMediaArtworkFromProvider(_:cacheType:completion:)(void *a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, void (*a5)(id), uint8_t *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(void);
  id v24;
  uint64_t v25;
  uint64_t v26;
  NSString v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  uint64_t inited;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  unint64_t v42;
  Class isa;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSString v47;
  NSString v48;
  NSString v49;
  __n128 v50;
  NSURL *v51;
  void *v52;
  void *v53;
  id v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  __n128 v67;
  __n128 v68;
  void (*v69)(id);
  _QWORD v70[2];
  uint64_t v71;
  void (*v72)(id);
  uint8_t *v73;
  char v74[104];
  uint64_t v75;
  double v76;
  _QWORD v77[4];

  v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v20);
  v22 = (char *)v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v23 = *(void (**)(void))(*(_QWORD *)a2 + 288);
    v24 = a1;
    v23();
    v26 = v25;
    v27 = String._bridgeToObjectiveC()();
    objc_msgSend(v24, "addIdentifier:", v27, swift_bridgeObjectRelease(v26).n128_f64[0]);

    v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOMediaPlayMetaDataKeyPlayerStartDate"));
    v30 = v29;
    if (*(_QWORD *)(a3 + 16) && (v31 = specialized __RawDictionaryStorage.find<A>(_:)(v28, v29), (v32 & 1) != 0))
    {
      v33 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v31);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease(v30);
      v77[0] = v33;
      if ((swift_dynamicCast(&v76, v77, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Double, 6) & 1) != 0)
      {
        v34 = v76;
        v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(AnyHashable, Any)>);
        inited = swift_initStackObject(v35, v74);
        *(_OWORD *)(inited + 16) = xmmword_10019ED20;
        v37 = (void *)MOSuggestionAssetMetadataKeyMediaStartDate;
        v77[0] = MOSuggestionAssetMetadataKeyMediaStartDate;
        type metadata accessor for MOSuggestionAssetMetadataKey(0);
        v39 = v38;
        v40 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionAssetMetadataKey and conformance MOSuggestionAssetMetadataKey, (uint64_t (*)(uint64_t))type metadata accessor for MOSuggestionAssetMetadataKey, (uint64_t)&protocol conformance descriptor for MOSuggestionAssetMetadataKey);
        v41 = v37;
        AnyHashable.init<A>(_:)((_QWORD *)(inited + 32), v77, v39, v40);
        *(_QWORD *)(inited + 96) = type metadata accessor for Date(0);
        __swift_allocate_boxed_opaque_existential_1((_QWORD *)(inited + 72));
        Date.init(timeIntervalSinceReferenceDate:)(v34);
        v42 = specialized Dictionary.init(dictionaryLiteral:)(inited);
        isa = Dictionary._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v24, "addMetadata:", isa, swift_bridgeObjectRelease(v42).n128_f64[0]);

      }
    }
    else
    {
      swift_bridgeObjectRelease(v30);
    }
    specialized static MOSuggestionAssetCacheManager.wrapMediaItemAssetInURLIfNecessary(asset:cacheType:completion:)(v24, a4, a5, a6);
  }
  else
  {
    v71 = a2;
    v72 = a5;
    v73 = a6;
    v70[1] = a11;
    v44 = type metadata accessor for URL(0);
    v45 = *(_QWORD *)(v44 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56))(v22, 1, 1, v44);
    swift_beginAccess(a13 + 16, v77, 0, 0);
    v46 = *(_QWORD *)(a13 + 16);
    swift_bridgeObjectRetain(a8);
    swift_bridgeObjectRetain(a10);
    swift_bridgeObjectRetain(a12);
    v47 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a8);
    v48 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a10);
    v49 = String._bridgeToObjectiveC()();
    v50 = swift_bridgeObjectRelease(a12);
    v52 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v45 + 48))(v22, 1, v44, v50) != 1)
    {
      URL._bridgeToObjectiveC()(v51);
      v52 = v53;
      (*(void (**)(char *, uint64_t))(v45 + 8))(v22, v44);
    }
    v54 = objc_msgSend(objc_allocWithZone((Class)MOSuggestionAssetMediaItem), "initTitle:albumTitle:artistName:albumArt:trackIdentifier:previewURL:mediaType:", v47, v48, v49, 0, 0, v52, v46);

    v55 = MOSuggestionAssetsTypeMediaCoverArt;
    type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MOSuggestionAssetMediaItem, MOSuggestionAssetMediaItem_ptr);
    v56 = objc_msgSend(objc_allocWithZone((Class)MOSuggestionAsset), "init:type:contentClassType:", v54, v55, swift_getObjCClassFromMetadata());
    v57 = v71;
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
      swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    v58 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v58, (uint64_t)static MOAngelLogger.assets);
    v59 = swift_retain_n(v57);
    v60 = Logger.logObject.getter(v59);
    v61 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v60, v61))
    {
      v62 = (uint8_t *)swift_slowAlloc(12, -1);
      v63 = swift_slowAlloc(32, -1);
      v76 = *(double *)&v63;
      *(_DWORD *)v62 = 136315138;
      v64 = (*(uint64_t (**)(void))(*(_QWORD *)v57 + 312))();
      v66 = v65;
      v75 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v64, v65, (uint64_t *)&v76);
      v67 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, &v76, v62 + 4);
      swift_release_n(v57, v67);
      swift_bridgeObjectRelease(v66);
      _os_log_impl((void *)&_mh_execute_header, v60, v61, "[MOSuggestionAssetCacheManager] Using fallback media image for: %s", v62, 0xCu);
      swift_arrayDestroy(v63, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v63, -1, -1);
      swift_slowDealloc(v62, -1, -1);

    }
    else
    {

      swift_release_n(v57, v68);
    }
    v69 = v72;
    v24 = v56;
    v69(v56);

  }
}

void closure #2 in MOSuggestionAssetCacheManager.getPredefinedAppBgColorDict(predefinedColors:colorFallbackValue:)(UIImage a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *object, uint64_t a8, dispatch_group_t group)
{
  Swift::String v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t Strong;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  Swift::String v72;

  if (!a1.super.isa)
    goto LABEL_43;
  v16 = hashImage(image:)(a1);
  v17 = *(_QWORD *)(a2 + 16);
  if (v17 < 4)
  {
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  v66 = (uint64_t)object;
  v67 = *(_QWORD *)(a2 + 16);
  object = v16._object;
  v63 = a8;
  v64 = a5 + 16;
  v62 = (uint64_t *)(a6 + 16);
  v18 = (unsigned __int128)((uint64_t)(v17 - 1) * (__int128)0x5555555555555556) >> 64;
  a8 = v18 + (v18 >> 63) - 1;
  v19 = lazy protocol witness table accessor for type String and conformance String();
  v20 = 0;
  v21 = 0;
  v65 = a2;
  v68 = a2 + 32;
  v22 = a8;
  while (1)
  {
    v72 = v16;
    v70 = a3;
    v71 = a4;
    if (StringProtocol.caseInsensitiveCompare<A>(_:)(&v70, &type metadata for String, &type metadata for String, v19, v19))
    {
      v72 = v16;
      v24 = 3 * v20;
      if ((unsigned __int128)(v20 * (__int128)3) >> 64 != (3 * v20) >> 63)
        goto LABEL_51;
      v23 = __OFADD__(v24, 3);
      v25 = v24 + 3;
      if (v23)
        goto LABEL_52;
      if (v25 >= v67)
        goto LABEL_53;
      v26 = (uint64_t *)(v68 + 16 * v25);
      v28 = *v26;
      v27 = v26[1];
      v70 = v28;
      v71 = v27;
      if (StringProtocol.caseInsensitiveCompare<A>(_:)(&v70, &type metadata for String, &type metadata for String, v19, v19))
      {
        if (a8 == v20)
          goto LABEL_14;
        goto LABEL_5;
      }
    }
    v21 = 1;
    v22 = v20;
    if (a8 == v20)
      break;
LABEL_5:
    v23 = __OFADD__(v20++, 1);
    if (v23)
    {
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
      goto LABEL_54;
    }
  }
  v22 = a8;
LABEL_14:
  a8 = a5 + 16;
  swift_beginAccess(v64, &v72, 0, 0);
  Strong = swift_weakLoadStrong(v64);
  if (!Strong)
  {
LABEL_63:
    __break(1u);
    return;
  }
  v30 = 3 * v22;
  if ((unsigned __int128)(v22 * (__int128)3) >> 64 != (3 * v22) >> 63)
    goto LABEL_55;
  v31 = v30 + 1;
  if (__OFADD__(v30, 1))
    goto LABEL_56;
  if (v31 >= v67)
    goto LABEL_57;
  v32 = Strong;
  v33 = (uint64_t *)(v68 + 16 * v31);
  v34 = *v33;
  v35 = v33[1];
  if (*v33 == 0x746867696CLL && v35 == 0xE500000000000000)
  {
    swift_release(Strong);
    v36 = 1;
    a8 = v63;
    v37 = v65;
  }
  else
  {
    a8 = v63;
    v37 = v65;
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x746867696CLL, 0xE500000000000000, v34, v35, 0) & 1) != 0)
    {
      swift_release(v32);
      v36 = 1;
    }
    else if (v34 == 1802658148 && v35 == 0xE400000000000000
           || (_stringCompareWithSmolCheck(_:_:expecting:)(1802658148, 0xE400000000000000, v34, v35, 0) & 1) != 0)
    {
      swift_release(v32);
      v36 = 2;
    }
    else if (v34 == 0x6B72614479726576 && v35 == 0xE800000000000000)
    {
      swift_release(v32);
      v36 = 3;
    }
    else
    {
      v61 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6B72614479726576, 0xE800000000000000, v34, v35, 0);
      swift_release(v32);
      if ((v61 & 1) != 0)
        v36 = 3;
      else
        v36 = 0;
    }
  }
  v38 = v30 + 2;
  if (__OFADD__(v30, 2))
  {
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    goto LABEL_31;
  }
  if (v38 >= v67)
    goto LABEL_59;
  v39 = (uint64_t *)(v68 + 16 * v38);
  v40 = *v39;
  v41 = v39[1];
  swift_beginAccess(v62, &v70, 33, 0);
  swift_bridgeObjectRetain(v41);
  swift_bridgeObjectRetain(a8);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v62);
  v69 = *v62;
  *v62 = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v36, v40, v41, v21 & 1, v66, a8, isUniquelyReferenced_nonNull_native);
  v43 = *v62;
  *v62 = v69;
  swift_bridgeObjectRelease(a8);
  swift_bridgeObjectRelease(v43);
  swift_endAccess(&v70);
  if ((v21 & 1) == 0)
  {
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
      swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    v51 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v51, (uint64_t)static MOAngelLogger.assets);
    swift_bridgeObjectRetain_n(a8, 2);
    swift_bridgeObjectRetain_n(v37, 2);
    swift_bridgeObjectRetain(v16._object);
    v46 = Logger.logObject.getter(v52);
    v53 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v46, v53))
    {

      swift_bridgeObjectRelease_n(v37, 2);
      goto LABEL_42;
    }
    v54 = v30;
    v55 = swift_slowAlloc(32, -1);
    v56 = swift_slowAlloc(96, -1);
    v70 = v56;
    *(_DWORD *)v55 = 136315650;
    swift_bridgeObjectRetain(a8);
    v69 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v66, a8, &v70);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70, v55 + 4);
    swift_bridgeObjectRelease_n(a8, 3);
    *(_WORD *)(v55 + 12) = 2080;
    swift_bridgeObjectRetain(v16._object);
    v69 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16._countAndFlagsBits, (unint64_t)v16._object, &v70);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70, v55 + 14);
    swift_bridgeObjectRelease_n(v16._object, 3);
    *(_WORD *)(v55 + 22) = 2080;
    v57 = v54 + 3;
    if (__OFADD__(v54, 3))
    {
      __break(1u);
    }
    else if (v57 < v67)
    {
      v58 = (uint64_t *)(v68 + 16 * v57);
      v59 = *v58;
      v60 = v58[1];
      swift_bridgeObjectRetain(v60);
      v69 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v59, v60, &v70);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70, v55 + 24);
      swift_bridgeObjectRelease_n(v65, 2);
      swift_bridgeObjectRelease(v60);
      _os_log_impl((void *)&_mh_execute_header, v46, v53, "[MOSuggestionAssetCacheManager] app icon background color hash value changed, bundleId, %s, new hashValue, %s, old hashValue, %s", (uint8_t *)v55, 0x20u);
      swift_arrayDestroy(v56, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v56, -1, -1);
      v50 = v55;
      goto LABEL_39;
    }
    __break(1u);
    goto LABEL_63;
  }
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    goto LABEL_60;
LABEL_31:
  v44 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v44, (uint64_t)static MOAngelLogger.assets);
  swift_bridgeObjectRetain_n(a8, 2);
  swift_bridgeObjectRetain(object);
  v46 = Logger.logObject.getter(v45);
  v47 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v46, v47))
  {
    v48 = swift_slowAlloc(22, -1);
    v49 = swift_slowAlloc(64, -1);
    v70 = v49;
    *(_DWORD *)v48 = 136315394;
    swift_bridgeObjectRetain(a8);
    v69 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v66, a8, &v70);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70, v48 + 4);
    swift_bridgeObjectRelease_n(a8, 3);
    *(_WORD *)(v48 + 12) = 2080;
    swift_bridgeObjectRetain(object);
    v69 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16._countAndFlagsBits, (unint64_t)object, &v70);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70, v48 + 14);
    swift_bridgeObjectRelease_n(object, 3);
    _os_log_impl((void *)&_mh_execute_header, v46, v47, "[MOSuggestionAssetCacheManager] app icon background color hash value unchanged, bundleId, %s, hashValue, %s", (uint8_t *)v48, 0x16u);
    swift_arrayDestroy(v49, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v49, -1, -1);
    v50 = v48;
LABEL_39:
    swift_slowDealloc(v50, -1, -1);

  }
  else
  {

LABEL_42:
    swift_bridgeObjectRelease_n(object, 2);
    swift_bridgeObjectRelease_n(a8, 2);
  }
LABEL_43:
  dispatch_group_leave(group);
}

Swift::String __swiftcall hashImage(image:)(UIImage image)
{
  CGImage *v1;
  CGImage *v2;
  CGDataProvider *countAndFlagsBits;
  CFDataRef v4;
  unint64_t v5;
  void *object;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  Class isa;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  Swift::String v14;
  Swift::String result;
  __int128 v16;

  v1 = (CGImage *)-[objc_class CGImage](image.super.isa, "CGImage");
  if (!v1)
  {
LABEL_5:
    countAndFlagsBits = 0;
    goto LABEL_6;
  }
  v2 = v1;
  countAndFlagsBits = CGImageGetDataProvider(v1);

  if (countAndFlagsBits)
  {
    v4 = CGDataProviderCopyData(countAndFlagsBits);

    if (v4)
    {
      v16 = xmmword_1001A41D0;
      static Data._conditionallyBridgeFromObjectiveC(_:result:)(v4, &v16);

      v5 = *((_QWORD *)&v16 + 1);
      if (*((_QWORD *)&v16 + 1) >> 60 != 15)
      {
        v9 = v16;
        isa = Data._bridgeToObjectiveC()().super.isa;
        v11 = (void *)digest(input:)(isa);

        hexStringFromData(input:)(v11);
        v13 = v12;

        v14 = String.uppercased()();
        countAndFlagsBits = (CGDataProvider *)v14._countAndFlagsBits;
        object = v14._object;
        swift_bridgeObjectRelease(v13);
        outlined consume of Data?(v9, v5);
        goto LABEL_7;
      }
    }
    goto LABEL_5;
  }
LABEL_6:
  object = (void *)0xE000000000000000;
LABEL_7:
  v7 = (uint64_t)countAndFlagsBits;
  v8 = object;
  result._object = v8;
  result._countAndFlagsBits = v7;
  return result;
}

void closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheAppIconsFromProvider(_:completion:)(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v6;
  void (*v7)(void);
  id v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  uint64_t Strong;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  id v19;
  _BYTE v20[24];

  if (a1)
  {
    v6 = a3 + 16;
    v7 = *(void (**)(void))(*(_QWORD *)a2 + 288);
    v8 = a1;
    v7();
    v10 = v9;
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v10);
    objc_msgSend(v8, "addIdentifier:", v11);

    swift_beginAccess(v6, v20, 0, 0);
    Strong = swift_weakLoadStrong(v6);
    if (Strong)
    {
      v13 = Strong;
      v14 = *(id *)(Strong + 16);
      v15 = swift_release(v13);
      ((void (*)(uint64_t))v7)(v15);
      v17 = v16;
      v18 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v17);
      objc_msgSend(v14, "setObject:forKey:cost:", v8, v18, 1);

    }
    v19 = v8;
    ((void (*)(void *))a4)(a1);

  }
  else
  {
    a4();
  }
}

void specialized closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheGenericMapSnapshots(_:cacheType:completion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  uint64_t v8;
  void (*v9)(void);
  id v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  uint64_t v14;
  uint64_t v15;
  Class isa;
  uint64_t Strong;
  uint64_t v18;
  id v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  id v24;
  _BYTE v25[24];

  if (a1)
  {
    v8 = a4 + 16;
    v9 = *(void (**)(void))(*(_QWORD *)a2 + 288);
    v10 = a1;
    v9();
    v12 = v11;
    v13 = String._bridgeToObjectiveC()();
    objc_msgSend(v10, "addIdentifier:", v13, swift_bridgeObjectRelease(v12).n128_f64[0]);

    specialized _dictionaryUpCast<A, B, C, D>(_:)(a3);
    v15 = v14;
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v10, "addMetadata:", isa, swift_bridgeObjectRelease(v15).n128_f64[0]);

    swift_beginAccess(v8, v25, 0, 0);
    Strong = swift_weakLoadStrong(v8);
    if (Strong)
    {
      v18 = Strong;
      v19 = *(id *)(Strong + 16);
      v20 = swift_release(v18);
      ((void (*)(__n128))v9)(v20);
      v22 = v21;
      v23 = String._bridgeToObjectiveC()();
      objc_msgSend(v19, "setObject:forKey:cost:", v10, v23, 1, swift_bridgeObjectRelease(v22).n128_f64[0]);

    }
    v24 = v10;
    ((void (*)(void *))a5)(a1);

  }
  else
  {
    a5();
  }
}

void closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)(id *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(__n128);
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  double v64;
  uint64_t *v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t *v75;
  uint64_t v76[2];

  v73 = a6;
  v74 = a7;
  v71 = a4;
  v75 = a8;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date??);
  __chkstk_darwin(v13);
  v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  v17 = objc_msgSend(*a1, "name");
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v20 = v19;

  objc_msgSend(v16, "placeNameConfidence");
  v22 = v21;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a2);
  v76[0] = *a2;
  *a2 = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v18, v20, isUniquelyReferenced_nonNull_native, v22);
  v24 = *a2;
  *a2 = v76[0];
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v24);
  type metadata accessor for MOMapLocation(0);
  v25 = v16;
  v26 = MOMapLocation.__allocating_init(fromResource:)(v25);
  v27 = v26;
  if (!v26)
    goto LABEL_13;
  v72 = v8;
  v28 = *(uint64_t (**)(__n128))(*(_QWORD *)v26 + 432);
  v29 = ((uint64_t (*)(uint64_t))v28)(v26);
  if (!v30)
  {
LABEL_12:
    v46 = objc_msgSend(v25, "name", v31);
    v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
    v49 = v48;

    v50 = (*(uint64_t (**)(void))(*(_QWORD *)v27 + 504))();
    v52 = v51;
    v53 = swift_isUniquelyReferenced_nonNull_native(*a5);
    v76[0] = *a5;
    *a5 = 0x8000000000000000;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v50, v52, v47, v49, v53);
    v54 = *a5;
    *a5 = v76[0];
    swift_bridgeObjectRelease(v49);
    v55 = objc_msgSend(v25, "name", swift_bridgeObjectRelease(v54).n128_f64[0]);
    v56 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
    v58 = v57;

    (*(void (**)(void))(*(_QWORD *)v27 + 192))();
    v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v15, 0, 1, v59);
    v60 = objc_msgSend(v25, "name", specialized Dictionary.subscript.setter((uint64_t)v15, v56, v58));
    v61 = static String._unconditionallyBridgeFromObjectiveC(_:)(v60);
    v63 = v62;

    v64 = (*(double (**)(void))(*(_QWORD *)v27 + 456))();
    v65 = v74;
    v66 = swift_isUniquelyReferenced_nonNull_native(*v74);
    v76[0] = *v65;
    *v65 = 0x8000000000000000;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v61, v63, v66, v64);
    v67 = *v65;
    *v65 = v76[0];
    swift_bridgeObjectRelease(v63);
    swift_bridgeObjectRelease(v67);
LABEL_13:
    *v75 = v27;
    return;
  }
  v32 = v29;
  v33 = v30;
  if (v29)
    v34 = 0;
  else
    v34 = v30 == 0xE000000000000000;
  if (v34 || (_stringCompareWithSmolCheck(_:_:expecting:)(v29, v30, 0, 0xE000000000000000, 0) & 1) != 0)
  {
    v35 = v33;
LABEL_11:
    *(_QWORD *)&v31 = swift_bridgeObjectRelease(v35).n128_u64[0];
    goto LABEL_12;
  }
  v36 = objc_msgSend(v25, "name");
  v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
  v69 = v38;
  v70 = v37;

  v39 = swift_isUniquelyReferenced_nonNull_native(*a3);
  v76[0] = *a3;
  *a3 = 0x8000000000000000;
  v40 = v33;
  v41 = v69;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v32, v40, v70, v69, v39);
  v42 = *a3;
  *a3 = v76[0];
  swift_bridgeObjectRelease(v41);
  v43 = swift_bridgeObjectRelease(v42);
  v44 = v28(v43);
  if (v45)
  {
    specialized Set._Variant.insert(_:)(v76, v44, v45);
    v35 = v76[1];
    goto LABEL_11;
  }
  __break(1u);
}

void closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)(uint64_t a1, NSObject *p_ivars, uint64_t isa, uint64_t a4, int64_t a5, uint64_t a6, void (*a7)(id), uint64_t a8, uint64_t a9, unsigned __int8 a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  NSObject *v21;
  BOOL v22;
  uint64_t (*v23)(__n128);
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Swift::Int v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  BOOL v40;
  __n128 v41;
  uint64_t (*v42)(__n128);
  void *v43;
  void *v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  BOOL v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  os_log_type_t v71;
  uint64_t v72;
  double v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  __n128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  uint64_t v85;
  int v86;
  __n128 v87;
  uint64_t v88;
  __n128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(__n128);
  __n128 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  NSObject *v105;
  os_log_type_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  __n128 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  double *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  int64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  double *v135;
  uint64_t v136;
  unint64_t v137;
  unint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t inited;
  void *v143;
  uint64_t v144;
  void *v145;
  void *v146;
  uint64_t countAndFlagsBits;
  void *object;
  id v149;
  id v150;
  void *v151;
  id v152;
  id v153;
  id v154;
  Swift::String v155;
  Swift::String v156;
  Swift::String v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  void (*v162)(uint64_t, _QWORD, uint64_t (*)(uint64_t), _QWORD *, __n128);
  __n128 v163;
  id v164;
  uint64_t v165;
  id v166;
  uint64_t v167;
  uint64_t v168;
  NSString v169;
  uint64_t v170;
  uint64_t v171;
  Class v172;
  id v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t *v177;
  uint64_t v178;
  uint64_t v181;
  uint64_t v182;
  int v183;
  NSObject *log;
  int v185;
  unint64_t v188;
  NSObject *v189;
  uint64_t (*v190)(void);
  uint64_t v191;
  uint64_t *v192;
  uint64_t v193;
  unint64_t v194;
  int64_t v195;
  NSObject *v196;
  char v197[24];
  char v198[24];
  char v199[24];
  char v200[24];
  char v201[112];
  char v202[24];
  _QWORD v203[3];
  uint64_t v204;
  _BYTE v205[16];
  uint64_t v206;
  _QWORD v207[2];
  uint64_t v208[9];
  char v209[24];
  char v210[24];
  char v211[32];
  Swift::String v212;

  v177 = (uint64_t *)(a1 + 16);
  swift_beginAccess(a1 + 16, v211, 0, 0);
  v181 = a1;
  v17 = *(_QWORD *)(a1 + 16);
  v191 = v17;
  if ((unint64_t)v17 >> 62)
  {
LABEL_114:
    if (v17 < 0)
      v130 = v17;
    else
      v130 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v17);
    v18 = _CocoaArrayWrapper.endIndex.getter(v130);
  }
  else
  {
    v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v17);
  }
  v19 = p_ivars + 2;
  v192 = (uint64_t *)(a6 + 16);
  v188 = (unint64_t)a5 >> 62;
  v195 = a5;
  v196 = p_ivars + 2;
  if (v18)
  {
    p_ivars = (isa + 16);
    isa = v191;
    swift_beginAccess(v19, v210, 0, 0);
    v189 = p_ivars;
    swift_beginAccess(p_ivars, v209, 0, 0);
    v20 = a5;
    a5 = 0;
    v178 = v20 & 0xFFFFFFFFFFFFFF8;
    if (v20 >= 0)
      v20 &= 0xFFFFFFFFFFFFFF8uLL;
    v176 = v20;
    v193 = v18;
    while (1)
    {
      while (1)
      {
        if ((v191 & 0xC000000000000001) != 0)
        {
          v17 = specialized _ArrayBuffer._getElementSlowPath(_:)(a5, v191);
          v21 = v17;
          v22 = __OFADD__(a5++, 1);
          if (v22)
            goto LABEL_112;
        }
        else
        {
          v21 = *(NSObject **)(v191 + 32 + 8 * a5);
          swift_retain(v21);
          v22 = __OFADD__(a5++, 1);
          if (v22)
          {
LABEL_112:
            __break(1u);
LABEL_113:
            __break(1u);
            goto LABEL_114;
          }
        }
        isa = (uint64_t)v19->isa;
        v23 = (uint64_t (*)(__n128))*((_QWORD *)v21->isa + 42);
        v24 = swift_bridgeObjectRetain(v19->isa);
        v25 = v23(v24);
        v27 = v26;
        if (*(_QWORD *)(isa + 16))
        {
          v28 = v25;
          Hasher.init(_seed:)(v208, *(_QWORD *)(isa + 40));
          String.hash(into:)(v208, v28, v27);
          v29 = Hasher._finalize()();
          v30 = -1 << *(_BYTE *)(isa + 32);
          v31 = v29 & ~v30;
          p_ivars = (isa + 56);
          if (((*(_QWORD *)(isa + 56 + ((v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) != 0)
          {
            v32 = *(_QWORD *)(isa + 48);
            v33 = (_QWORD *)(v32 + 16 * v31);
            v34 = v33[1];
            v35 = *v33 == v28 && v34 == v27;
            if (v35 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v33, v34, v28, v27, 0) & 1) != 0)
            {
LABEL_19:
              swift_bridgeObjectRelease(v27);
              v36 = isa;
LABEL_33:
              swift_bridgeObjectRelease(v36);
              goto LABEL_35;
            }
            v37 = ~v30;
            while (1)
            {
              v31 = (v31 + 1) & v37;
              if (((*(unint64_t *)((char *)&p_ivars->isa + ((v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
                break;
              v38 = (_QWORD *)(v32 + 16 * v31);
              v39 = v38[1];
              v40 = *v38 == v28 && v39 == v27;
              if (v40 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v38, v39, v28, v27, 0) & 1) != 0)
                goto LABEL_19;
            }
          }
        }
        swift_bridgeObjectRelease(v27);
        v41 = swift_bridgeObjectRelease(isa);
        v42 = (uint64_t (*)(__n128))*((_QWORD *)v21->isa + 36);
        p_ivars = v21;
        v43 = (void *)v42(v41);
        if (v43)
          break;
LABEL_35:
        swift_release(v21);
LABEL_36:
        v19 = v196;
        v18 = v193;
        if (a5 == v193)
          goto LABEL_61;
      }
      v44 = v43;
      p_ivars = &MOSuggestionCollectionViewCellConstants.ivars;
      v45 = objc_msgSend(v43, "name");
      if (!v45)
      {
        swift_unknownObjectRelease(v44);
        goto LABEL_35;
      }
      v46 = v45;
      v190 = (uint64_t (*)(void))v42;
      v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
      v49 = v48;

      isa = (uint64_t)v189->isa;
      v50 = objc_msgSend(v44, "name", swift_bridgeObjectRetain(v189->isa).n128_f64[0]);
      if (!v50)
      {
        __break(1u);
        return;
      }
      v51 = v50;
      v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
      v54 = v53;

      p_ivars = specialized Set.contains(_:)(v52, v54, isa);
      swift_bridgeObjectRelease(v54);
      swift_bridgeObjectRelease(isa);
      if ((p_ivars & 1) != 0)
      {
        swift_unknownObjectRelease(v44);
        v36 = v49;
        goto LABEL_33;
      }
      v55 = (_QWORD *)(a6 + 16);
      if ((specialized static MOSuggestionAssetCacheManager.shouldDropUninterestingPOI(_:mapItem:location:)(a4, v44) & 1) == 0)
        goto LABEL_164;
      if (v188)
      {
        swift_bridgeObjectRetain(v195);
        v56 = _CocoaArrayWrapper.endIndex.getter(v176);
        swift_bridgeObjectRelease(v195);
      }
      else
      {
        v56 = *(_QWORD *)(v178 + 16);
      }
      v57 = v56 <= 2;
      v55 = (_QWORD *)(a6 + 16);
      if (v57)
      {
LABEL_164:
        if ((*((double (**)(void))v21->isa + 45))() > 0.9 && (v59 = v190()) != 0)
        {
          swift_unknownObjectRelease(v59);
          swift_beginAccess(v55, v208, 33, 0);
          swift_retain(v21);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v60);
          v61 = *v55 & 0xFFFFFFFFFFFFFF8;
          v63 = *(_QWORD *)(v61 + 0x10);
          v62 = *(_QWORD *)(v61 + 24);
          if (v63 >= v62 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v62 > 1, v63 + 1, 1);
          v64 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v63, v21);
          specialized Array._endMutation()(v64);
          v65 = swift_endAccess(v208);
          v66 = ((uint64_t (*)(uint64_t))v23)(v65);
          v68 = v67;
          swift_beginAccess(v196, v208, 33, 0);
          specialized Set._Variant.insert(_:)(&v206, v66, v68);
          swift_endAccess(v208);
          swift_bridgeObjectRelease(v207[0]);
          swift_beginAccess(v189, v208, 33, 0);
          swift_bridgeObjectRetain(v49);
          specialized Set._Variant.insert(_:)(&v206, v47, v49);
          swift_endAccess(v208);
          swift_bridgeObjectRelease(v207[0]);
          isa = 0;
          v58 = 0;
        }
        else
        {
          v58 = 0;
          isa = 1;
        }
      }
      else
      {
        isa = 1;
        v58 = 1;
      }
      if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
        swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
      v69 = type metadata accessor for Logger(0);
      __swift_project_value_buffer(v69, (uint64_t)static MOAngelLogger.assets);
      swift_retain_n(v21);
      swift_unknownObjectRetain_n(v44, 2);
      swift_bridgeObjectRetain(v49);
      p_ivars = Logger.logObject.getter(v70);
      v71 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(p_ivars, v71))
      {

        swift_unknownObjectRelease_n(v44, 3);
        swift_bridgeObjectRelease_n(v49, 2);
        swift_release_n(v21, v87);
        goto LABEL_36;
      }
      log = p_ivars;
      v185 = isa;
      isa = swift_slowAlloc(50, -1);
      v182 = swift_slowAlloc(32, -1);
      v208[0] = v182;
      *(_DWORD *)isa = 134219266;
      v183 = v58;
      v72 = String.hashValue.getter(v47);
      swift_bridgeObjectRelease(v49);
      v206 = v72;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v206, v207, isa + 4);
      *(_QWORD *)&v73 = swift_bridgeObjectRelease(v49).n128_u64[0];
      *(_WORD *)(isa + 12) = 2080;
      v74 = objc_msgSend(v44, "_poiCategory", v73);
      v206 = (uint64_t)v74;
      v75 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for GEOPOICategory?);
      v76 = Optional.debugDescription.getter(v75);
      v78 = v77;

      v206 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v76, v78, v208);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v206, v207, isa + 14);
      swift_unknownObjectRelease_n(v44, 2);
      v79 = swift_bridgeObjectRelease(v78);
      *(_WORD *)(isa + 22) = 2048;
      v80 = v23(v79);
      v82 = v81;
      v83 = String.hashValue.getter(v80);
      swift_release(v21);
      swift_bridgeObjectRelease(v82);
      v206 = v83;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v206, v207, isa + 24);
      swift_release(v21);
      *(_WORD *)(isa + 32) = 1024;
      LODWORD(v206) = v183;
      v84 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v206, (char *)&v206 + 4, isa + 34);
      *(_WORD *)(isa + 38) = 1024;
      if ((*((double (**)(__n128))v21->isa + 45))(v84) <= 0.9)
        break;
      v85 = v190();
      swift_release(v21);
      if (!v85)
        goto LABEL_57;
      swift_unknownObjectRelease(v85);
      v86 = 1;
LABEL_58:
      v19 = v196;
      v18 = v193;
      LODWORD(v206) = v86;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v206, (char *)&v206 + 4, isa + 40);
      swift_release(v21);
      *(_WORD *)(isa + 44) = 1024;
      LODWORD(v206) = v185;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v206, (char *)&v206 + 4, isa + 46);
      p_ivars = log;
      _os_log_impl((void *)&_mh_execute_header, log, v71, "[POIClustering] mapItemName=%ld, mapItemPOICategory=%s, poiLocationName=%ld, shouldDropAirportInTrip=%{BOOL}d, shouldUseMarker=%{BOOL}d, shouldDropPOI=%{BOOL}d", (uint8_t *)isa, 0x32u);
      swift_arrayDestroy(v182, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v182, -1, -1);
      swift_slowDealloc(isa, -1, -1);
      swift_release(v21);
      swift_unknownObjectRelease(v44);

      if (a5 == v193)
      {
LABEL_61:
        swift_bridgeObjectRelease(v191);
        a5 = v195;
        if (v188)
          goto LABEL_80;
LABEL_62:
        isa = *(_QWORD *)((a5 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(a5);
        if (isa)
          goto LABEL_63;
        goto LABEL_84;
      }
    }
    swift_release(v21);
LABEL_57:
    v86 = 0;
    goto LABEL_58;
  }
  swift_bridgeObjectRelease(v191);
  if (!v188)
    goto LABEL_62;
LABEL_80:
  if (a5 < 0)
    v112 = a5;
  else
    v112 = a5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a5);
  isa = _CocoaArrayWrapper.endIndex.getter(v112);
  if (isa)
  {
LABEL_63:
    v194 = a5 & 0xC000000000000001;
    swift_beginAccess(v19, v208, 0, 0);
    v88 = 4;
    do
    {
      p_ivars = (v88 - 4);
      if (v194)
      {
        v17 = specialized _ArrayBuffer._getElementSlowPath(_:)(v88 - 4, a5);
        v90 = v17;
        v91 = v88 - 3;
        if (__OFADD__(p_ivars, 1))
          goto LABEL_113;
      }
      else
      {
        v90 = *(_QWORD *)(a5 + 8 * v88);
        swift_retain(v90);
        v91 = v88 - 3;
        if (__OFADD__(p_ivars, 1))
          goto LABEL_113;
      }
      v92 = (uint64_t)v19->isa;
      v93 = *(uint64_t (**)(__n128))(*(_QWORD *)v90 + 336);
      v94 = swift_bridgeObjectRetain(v92);
      v95 = v93(v94);
      v97 = v96;
      v98 = specialized Set.contains(_:)(v95, v96, v92);
      swift_bridgeObjectRelease(v97);
      swift_bridgeObjectRelease(v92);
      if ((v98 & 1) == 0)
      {
        swift_beginAccess(v192, &v206, 33, 0);
        swift_retain(v90);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v99);
        v101 = *(_QWORD *)((*v192 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v100 = *(_QWORD *)((*v192 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v101 >= v100 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v100 > 1, v101 + 1, 1);
        v102 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v101, v90);
        specialized Array._endMutation()(v102);
        swift_endAccess(&v206);
      }
      if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
        swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
      v103 = type metadata accessor for Logger(0);
      __swift_project_value_buffer(v103, (uint64_t)static MOAngelLogger.assets);
      v104 = swift_retain_n(v90);
      v105 = Logger.logObject.getter(v104);
      v106 = static os_log_type_t.default.getter();
      v18 = v106;
      if (os_log_type_enabled(v105, v106))
      {
        v107 = swift_slowAlloc(18, -1);
        *(_DWORD *)v107 = 134218240;
        v108 = ((uint64_t (*)(void))v93)();
        v110 = v109;
        v111 = String.hashValue.getter(v108);
        swift_release(v90);
        swift_bridgeObjectRelease(v110);
        *(_QWORD *)(v107 + 4) = v111;
        swift_release(v90);
        *(_WORD *)(v107 + 12) = 1024;
        *(_DWORD *)(v107 + 14) = (v98 & 1) == 0;
        _os_log_impl((void *)&_mh_execute_header, v105, (os_log_type_t)v18, "[POIClustering] visitLocationName=%ld, shouldAddVisit=%{BOOL}d", (uint8_t *)v107, 0x12u);
        swift_slowDealloc(v107, -1, -1);
        swift_release(v90);

      }
      else
      {

        swift_release_n(v90, v89);
      }
      a5 = v195;
      v19 = v196;
      ++v88;
    }
    while (v91 != isa);
  }
LABEL_84:
  swift_bridgeObjectRelease(a5);
  v113 = swift_beginAccess(v192, &v206, 0, 0);
  v114 = *v192;
  if ((unint64_t)*v192 >> 62)
  {
    if (v114 < 0)
      v131 = *v192;
    else
      v131 = v114 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v114);
    v115 = _CocoaArrayWrapper.endIndex.getter(v131);
    v113 = swift_bridgeObjectRelease(v114);
  }
  else
  {
    v115 = *(_QWORD *)((v114 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v115 <= 0)
  {
    ((void (*)(_QWORD, __n128))a7)(0, v113);
    return;
  }
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v116 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v116, (uint64_t)static MOAngelLogger.assets);
  swift_bridgeObjectRetain_n(a5, 2);
  swift_retain(a6);
  swift_retain(v181);
  v118 = Logger.logObject.getter(v117);
  LOBYTE(v119) = static os_log_type_t.info.getter();
  if (!os_log_type_enabled((os_log_t)v118, (os_log_type_t)v119))
  {

    swift_release(v181);
    swift_release(a6);
    swift_bridgeObjectRelease_n(a5, 2);
    goto LABEL_103;
  }
  v120 = swift_slowAlloc(32, -1);
  *(_DWORD *)v120 = 134218496;
  swift_beginAccess(v192, v198, 0, 0);
  v18 = *v192;
  if ((unint64_t)*v192 >> 62)
    goto LABEL_153;
  v121 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v204 = v121;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v204, v205, v120 + 4);
    swift_release(a6);
    *(_WORD *)(v120 + 12) = 2048;
    swift_beginAccess(v177, v197, 0, 0);
    v122 = *v177;
    if ((unint64_t)*v177 >> 62)
    {
      v175 = v122 < 0 ? *v177 : v122 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v122);
      v123 = _CocoaArrayWrapper.endIndex.getter(v175);
      swift_bridgeObjectRelease(v122);
    }
    else
    {
      v123 = *(_QWORD *)((v122 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v204 = v123;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v204, v205, v120 + 14);
    swift_release(v181);
    *(_WORD *)(v120 + 22) = 2048;
    if (v188)
    {
      v124 = a5 < 0 ? a5 : a5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a5);
      v18 = _CocoaArrayWrapper.endIndex.getter(v124);
      swift_bridgeObjectRelease(a5);
    }
    else
    {
      v18 = *(_QWORD *)((a5 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(a5);
    v204 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v204, v205, v120 + 24);
    swift_bridgeObjectRelease(a5);
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v118, (os_log_type_t)v119, "[MOPOIAnnotationView] count %ld, poiCount=%ld, visitCount=%ld", (uint8_t *)v120, 0x20u);
    swift_slowDealloc(v120, -1, -1);

LABEL_103:
    swift_beginAccess(v192, &v204, 0, 0);
    v118 = *v192;
    if ((unint64_t)*v192 >> 62)
    {
      if (v118 < 0)
        v132 = *v192;
      else
        v132 = v118 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v118);
      v120 = _CocoaArrayWrapper.endIndex.getter(v132);
      if (!v120)
      {
LABEL_126:
        swift_bridgeObjectRelease(v118);
        v119 = _swiftEmptyArrayStorage;
        goto LABEL_127;
      }
    }
    else
    {
      v120 = *(_QWORD *)((v118 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v118);
      if (!v120)
        goto LABEL_126;
    }
    v203[0] = _swiftEmptyArrayStorage;
    v119 = (double *)v203;
    specialized ContiguousArray.reserveCapacity(_:)(v120);
    if (v120 < 0)
    {
      __break(1u);
      goto LABEL_152;
    }
    v18 = 0;
    a5 = v118 & 0xC000000000000001;
    do
    {
      if (a5)
      {
        v125 = specialized _ArrayBuffer._getElementSlowPath(_:)(v18, v118);
      }
      else
      {
        v125 = *(_QWORD *)(v118 + 8 * v18 + 32);
        swift_retain(v125);
      }
      ++v18;
      v126 = (*(uint64_t (**)(void))(*(_QWORD *)v125 + 536))();
      swift_release(v125);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v127);
      v128 = *(_QWORD *)(v203[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v128);
      v129 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v128, v126);
      specialized ContiguousArray._endMutation()(v129);
    }
    while (v120 != v18);
    v119 = (double *)v203[0];
    swift_bridgeObjectRelease(v118);
LABEL_127:
    swift_beginAccess(v192, v203, 1, 0);
    v133 = *v192;
    *v192 = (uint64_t)v119;
    swift_bridgeObjectRelease(v133);
    swift_beginAccess(v192, v202, 0, 0);
    v120 = *v192;
    if ((unint64_t)*v192 >> 62)
    {
      if (v120 < 0)
        v140 = *v192;
      else
        v140 = v120 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v120, 2);
      v118 = _CocoaArrayWrapper.endIndex.getter(v140);
      if (!v118)
      {
LABEL_144:
        v135 = _swiftEmptyArrayStorage;
        goto LABEL_145;
      }
    }
    else
    {
      v118 = *(_QWORD *)((v120 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n(v120, 2);
      if (!v118)
        goto LABEL_144;
    }
    if (v118 >= 1)
      break;
LABEL_152:
    __break(1u);
LABEL_153:
    if (v18 < 0)
      v174 = v18;
    else
      v174 = v18 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v18);
    v121 = _CocoaArrayWrapper.endIndex.getter(v174);
    swift_bridgeObjectRelease(v18);
  }
  v134 = 0;
  v135 = _swiftEmptyArrayStorage;
  do
  {
    if ((v120 & 0xC000000000000001) != 0)
    {
      v136 = specialized _ArrayBuffer._getElementSlowPath(_:)(v134, v120);
    }
    else
    {
      v136 = *(_QWORD *)(v120 + 8 * v134 + 32);
      swift_retain(v136);
    }
    v137 = MOMapLocation.transferrableMetadata.getter();
    swift_release(v136);
    if ((swift_isUniquelyReferenced_nonNull_native(v135) & 1) == 0)
      v135 = (double *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((_QWORD *)v135 + 2) + 1, 1, v135);
    v139 = *((_QWORD *)v135 + 2);
    v138 = *((_QWORD *)v135 + 3);
    if (v139 >= v138 >> 1)
      v135 = (double *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((_QWORD *)(v138 > 1), v139 + 1, 1, v135);
    ++v134;
    *((_QWORD *)v135 + 2) = v139 + 1;
    *(_QWORD *)&v135[v139 + 4] = v137;
  }
  while (v118 != v134);
LABEL_145:
  swift_bridgeObjectRelease_n(v120, 2);
  v141 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(MOSuggestionAssetMetadataKey, Any?)>);
  inited = swift_initStackObject(v141, v201);
  *(_OWORD *)(inited + 16) = xmmword_10019EEE0;
  v143 = (void *)MOSuggestionAssetMetadataKeyMultiPinMapLocations;
  *(_QWORD *)(inited + 32) = MOSuggestionAssetMetadataKeyMultiPinMapLocations;
  v144 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [[MOSuggestionAssetMetadataKey : Any?]]);
  *(_QWORD *)(inited + 40) = v135;
  v145 = (void *)MOSuggestionAssetMetadataKeyMultiPinMapRepresentativeArea;
  *(_QWORD *)(inited + 64) = v144;
  *(_QWORD *)(inited + 72) = v145;
  swift_beginAccess(a9 + 16, v200, 0, 0);
  countAndFlagsBits = specialized Collection.first.getter(*(_QWORD *)(a9 + 16));
  *(_QWORD *)(inited + 104) = &type metadata for String;
  if (v146)
  {
    object = v146;
    v149 = v143;
    v150 = v145;
  }
  else
  {
    v151 = (void *)objc_opt_self(NSBundle);
    v152 = v143;
    v153 = v145;
    v154 = objc_msgSend(v151, "mainBundle");
    v212._object = (void *)0x80000001001AFDC0;
    v155._countAndFlagsBits = 0x206E776F6E6B6E55;
    v155._object = (void *)0xEC00000061657241;
    v156._countAndFlagsBits = 0;
    v156._object = (void *)0xE000000000000000;
    v212._countAndFlagsBits = 0xD000000000000051;
    v157 = NSLocalizedString(_:tableName:bundle:value:comment:)(v155, (Swift::String_optional)(unint64_t)countAndFlagsBits, (NSBundle)v154, v156, v212);
    countAndFlagsBits = v157._countAndFlagsBits;
    object = v157._object;

  }
  *(_QWORD *)(inited + 80) = countAndFlagsBits;
  *(_QWORD *)(inited + 88) = object;
  v158 = specialized Dictionary.init(dictionaryLiteral:)(inited);
  if ((a10 - 2) > 8u)
  {
    v164 = objc_msgSend(objc_allocWithZone((Class)NSNull), "init");
    v165 = MOSuggestionAssetsTypeMultiPinMap;
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIImage, UIImage_ptr);
    v166 = objc_msgSend(objc_allocWithZone((Class)MOSuggestionAsset), "init:type:contentClassType:", v164, v165, swift_getObjCClassFromMetadata());

    (*(void (**)(void))(*(_QWORD *)a13 + 288))();
    v168 = v167;
    v169 = String._bridgeToObjectiveC()();
    objc_msgSend(v166, "addIdentifier:", v169, swift_bridgeObjectRelease(v168).n128_f64[0]);

    specialized _dictionaryUpCast<A, B, C, D>(_:)(v158);
    v171 = v170;
    swift_bridgeObjectRelease(v158);
    v172 = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v166, "addMetadata:", v172, swift_bridgeObjectRelease(v171).n128_f64[0]);

    v173 = v166;
    a7(v166);

  }
  else
  {
    swift_beginAccess(v192, v199, 0, 0);
    v159 = *v192;
    v160 = swift_allocObject(&unk_1001ED050, 24, 7);
    swift_weakInit(v160 + 16);
    v161 = (_QWORD *)swift_allocObject(&unk_1001EDAF8, 56, 7);
    v161[2] = a13;
    v161[3] = v158;
    v161[4] = v160;
    v161[5] = a7;
    v161[6] = a8;
    v162 = *(void (**)(uint64_t, _QWORD, uint64_t (*)(uint64_t), _QWORD *, __n128))(*(_QWORD *)a11 + 184);
    swift_bridgeObjectRetain(v159);
    swift_retain(a13);
    swift_retain(v160);
    v163 = swift_retain(a8);
    v162(v159, a10, partial apply for closure #3 in closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:), v161, v163);
    swift_bridgeObjectRelease(v159);
    swift_release(v160);
    swift_release(v161);
  }
}

void closure #3 in closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void *))
{
  uint64_t v9;
  void (*v10)(void);
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  uint64_t v15;
  uint64_t v16;
  Class isa;
  uint64_t Strong;
  uint64_t v19;
  id v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  NSString v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(__n128);
  __n128 v33;
  void *v34;
  id v35;
  _BYTE v36[24];

  if (a1)
  {
    v9 = a4 + 16;
    v10 = *(void (**)(void))(*(_QWORD *)a2 + 288);
    v11 = a1;
    v10();
    v13 = v12;
    v14 = String._bridgeToObjectiveC()();
    objc_msgSend(v11, "addIdentifier:", v14, swift_bridgeObjectRelease(v13).n128_f64[0]);

    specialized _dictionaryUpCast<A, B, C, D>(_:)(a3);
    v16 = v15;
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v11, "addMetadata:", isa, swift_bridgeObjectRelease(v16).n128_f64[0]);

    swift_beginAccess(v9, v36, 0, 0);
    Strong = swift_weakLoadStrong(v9);
    if (Strong)
    {
      v19 = Strong;
      v20 = *(id *)(Strong + 16);
      v21 = swift_release(v19);
      ((void (*)(__n128))v10)(v21);
      v23 = v22;
      v24 = String._bridgeToObjectiveC()();
      objc_msgSend(v20, "setObject:forKey:cost:", v11, v24, 10, swift_bridgeObjectRelease(v23).n128_f64[0]);

    }
    v25 = v11;
    a5(a1);
  }
  else
  {
    v26 = (*(uint64_t (**)(void))(*(_QWORD *)a2 + 312))();
    v28 = v27;
    v29 = type metadata accessor for MOSuggestionGenericFallBackInfo();
    v30 = swift_allocObject(v29, 32, 7);
    *(_QWORD *)(v30 + 24) = 0;
    *(_QWORD *)(v30 + 16) = 0;
    swift_beginAccess(v30 + 16, v36, 1, 0);
    v31 = *(_QWORD *)(v30 + 24);
    *(_QWORD *)(v30 + 16) = v26;
    *(_QWORD *)(v30 + 24) = v28;
    swift_bridgeObjectRelease(v31);
    MOSuggestionGenericFallBackInfo.description()();
    v32 = *(uint64_t (**)(__n128))(*(_QWORD *)a2 + 120);
    v33 = swift_retain(v30);
    v34 = (void *)v32(v33);
    v35 = objc_msgSend(objc_allocWithZone((Class)MOSuggestionAsset), "init:type:contentClassType:", v30, v34, swift_getObjCClassFromMetadata());
    swift_release(v30);

    v25 = v35;
    a5(v35);
    swift_release(v30);
  }

}

double closure #3 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double result;
  uint64_t v18;
  double *v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v18 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for defaultQueue != -1)
    swift_once(&one-time initialization token for defaultQueue, one-time initialization function for defaultQueue);
  v11 = swift_allocObject(&unk_1001EDAA8, 32, 7);
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  aBlock[4] = partial apply for thunk for @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> ();
  v21 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_204;
  v12 = _Block_copy(aBlock);
  swift_retain(a2);
  static DispatchQoS.unspecified.getter(v13);
  v19 = _swiftEmptyArrayStorage;
  v14 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  v16 = lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v19, v15, v16, v4, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

void closure #4 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void (*a11)(__n128))
{
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  unint64_t v40;
  char v41;
  uint64_t *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  char v90;
  double v91;
  uint64_t v92;
  void *v93;
  double v94;
  double v95;
  double v96;
  double v97;
  double v98;
  double v99;
  double v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  __n128 v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _BYTE v120[24];
  _BYTE v121[32];

  v117 = a8;
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date??);
  __chkstk_darwin(v18);
  v20 = (char *)&v109 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  v21 = *(_QWORD *)(v118 - 8);
  v22 = __chkstk_darwin(v118);
  v115 = (uint64_t)&v109 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v119 = (uint64_t)&v109 - v24;
  v25 = (uint64_t *)(a2 + 16);
  swift_beginAccess(a2 + 16, v121, 1, 0);
  v26 = *(_QWORD *)(a2 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (v27)
  {
    __break(1u);
    goto LABEL_39;
  }
  v116 = a3;
  a3 = a10;
  *v25 = v28;
  if (a1)
  {
    v113 = a10;
    v114 = a1;
    v29 = (uint64_t *)(a5 + 16);
    v30 = (uint64_t *)(a6 + 16);
    swift_unknownObjectRetain();
    v31 = objc_msgSend(a4, "name");
    v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    v111 = v33;
    v112 = v32;

    v34 = objc_msgSend(a4, "name");
    v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
    v37 = v36;

    swift_beginAccess(v29, v120, 32, 0);
    v38 = *v29;
    v39 = 0.0;
    if (*(_QWORD *)(*v29 + 16))
    {
      v40 = specialized __RawDictionaryStorage.find<A>(_:)(v35, v37);
      if ((v41 & 1) != 0)
        v39 = *(double *)(*(_QWORD *)(v38 + 56) + 8 * v40);
    }
    v42 = (uint64_t *)(a7 + 16);
    swift_bridgeObjectRelease(v37);
    swift_endAccess(v120);
    v43 = objc_msgSend(a4, "name");
    v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
    v46 = v45;

    swift_beginAccess(v30, v120, 32, 0);
    v47 = *v30;
    if (*(_QWORD *)(*v30 + 16) && (v48 = specialized __RawDictionaryStorage.find<A>(_:)(v44, v46), (v49 & 1) != 0))
    {
      v50 = (uint64_t *)(*(_QWORD *)(v47 + 56) + 16 * v48);
      v51 = *v50;
      v109 = v50[1];
      v110 = v51;
      swift_bridgeObjectRetain(v109);
    }
    else
    {
      v109 = 0;
      v110 = 0;
    }
    v52 = (uint64_t *)(v117 + 16);
    swift_bridgeObjectRelease(v46);
    swift_endAccess(v120);
    v53 = objc_msgSend(a4, "name");
    v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
    v56 = v55;

    swift_beginAccess(v42, v120, 32, 0);
    v57 = *v42;
    if (*(_QWORD *)(*v42 + 16) && (v58 = specialized __RawDictionaryStorage.find<A>(_:)(v54, v56), (v59 & 1) != 0))
    {
      v60 = (uint64_t *)(*(_QWORD *)(v57 + 56) + 16 * v58);
      v61 = *v60;
      v62 = v60[1];
      swift_endAccess(v120);
      swift_bridgeObjectRetain(v62);
      *(_QWORD *)&v63 = swift_bridgeObjectRelease(v56).n128_u64[0];
      if (v62)
        v64 = v61;
      else
        v64 = 0;
      v117 = v64;
    }
    else
    {
      swift_endAccess(v120);
      *(_QWORD *)&v63 = swift_bridgeObjectRelease(v56).n128_u64[0];
      v117 = 0;
      v62 = 0;
    }
    v65 = objc_msgSend(a4, "name", v63, v109, v110);
    v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(v65);
    v68 = v67;

    swift_beginAccess(v52, v120, 32, 0);
    v69 = *v52;
    if (*(_QWORD *)(*v52 + 16) && (v70 = specialized __RawDictionaryStorage.find<A>(_:)(v66, v68), (v71 & 1) != 0))
    {
      outlined init with copy of Date?(*(_QWORD *)(v69 + 56) + *(_QWORD *)(v21 + 72) * v70, (uint64_t)v20, (uint64_t *)&demangling cache variable for type metadata for Date?);
      v72 = 0;
    }
    else
    {
      v72 = 1;
    }
    v73 = v118;
    v74 = (uint64_t *)(a9 + 16);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v20, v72, 1, v118);
    swift_bridgeObjectRelease(v68);
    swift_endAccess(v120);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v20, 1, v73) == 1)
    {
      outlined destroy of Any?((uint64_t)v20, (uint64_t *)&demangling cache variable for type metadata for Date??);
      a3 = v113;
    }
    else
    {
      v75 = (uint64_t)v20;
      v76 = v115;
      outlined init with take of Date?(v75, v115, (uint64_t *)&demangling cache variable for type metadata for Date?);
      v77 = type metadata accessor for Date(0);
      v78 = *(_QWORD *)(v77 - 8);
      v79 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v76, 1, v77);
      a3 = v113;
      if (v79 != 1)
      {
        v81 = v119;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 32))(v119, v76, v77);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v78 + 56))(v81, 0, 1, v77);
LABEL_27:
        v82 = (_QWORD *)(v116 + 16);
        v83 = objc_msgSend(a4, "name");
        v84 = static String._unconditionallyBridgeFromObjectiveC(_:)(v83);
        v86 = v85;

        swift_beginAccess(v74, v120, 32, 0);
        v87 = *v74;
        if (*(_QWORD *)(v87 + 16) && (v88 = specialized __RawDictionaryStorage.find<A>(_:)(v84, v86), (v89 & 1) != 0))
        {
          v90 = 0;
          v91 = *(double *)(*(_QWORD *)(v87 + 56) + 8 * v88);
        }
        else
        {
          v91 = 0.0;
          v90 = 1;
        }
        swift_bridgeObjectRelease(v86);
        type metadata accessor for MOMapLocation(0);
        swift_endAccess(v120);
        v92 = v114;
        v93 = (void *)swift_unknownObjectRetain();
        v101 = MOMapLocation.__allocating_init(fromGEOMapItem:title:confidenceLevel:enclosingArea:poiCategory:startDate:horizontalUncertainty:)(v93, v112, v111, v110, v109, v117, v62, v119, v39, v94, v95, v96, v97, v98, v99, v100, v91, v90);
        swift_beginAccess(v82, v120, 33, 0);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v102);
        v104 = *(_QWORD *)((*v82 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v103 = *(_QWORD *)((*v82 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v104 >= v103 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v103 > 1, v104 + 1, 1);
        v105 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v104, v101);
        specialized Array._endMutation()(v105);
        swift_endAccess(v120);
        swift_unknownObjectRelease(v92);
        goto LABEL_34;
      }
      outlined destroy of Any?(v76, (uint64_t *)&demangling cache variable for type metadata for Date?);
    }
    v80 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56))(v119, 1, 1, v80);
    goto LABEL_27;
  }
LABEL_34:
  v106 = swift_beginAccess(v25, v120, 0, 0);
  a6 = *v25;
  if (!((unint64_t)a3 >> 62))
  {
    if (a6 != *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10))
      return;
    goto LABEL_36;
  }
LABEL_39:
  if (a3 < 0)
    v107 = a3;
  else
    v107 = a3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a3);
  v108 = _CocoaArrayWrapper.endIndex.getter(v107);
  v106 = swift_bridgeObjectRelease(a3);
  if (a6 == v108)
LABEL_36:
    a11(v106);
}

void closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheLinkPreviews(_:completion:)(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void), double a5)
{
  uint64_t v8;
  void (*v9)(void);
  id v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  uint64_t v14;
  uint64_t inited;
  void *v16;
  id v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Class isa;
  uint64_t Strong;
  uint64_t v23;
  id v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  id v29;
  uint64_t v30;
  _BYTE v31[72];

  if (a1)
  {
    v8 = a3 + 16;
    v9 = *(void (**)(void))(*(_QWORD *)a2 + 288);
    v10 = a1;
    v9();
    v12 = v11;
    v13 = String._bridgeToObjectiveC()();
    objc_msgSend(v10, "addIdentifier:", v13, swift_bridgeObjectRelease(v12).n128_f64[0]);

    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(MOSuggestionAssetMetadataKey, Any)>);
    inited = swift_initStackObject(v14, v31);
    *(_OWORD *)(inited + 16) = xmmword_10019ED20;
    v16 = (void *)MOSuggestionAssetMetadataKeyLinkPreviewGeneratedDate;
    *(_QWORD *)(inited + 32) = MOSuggestionAssetMetadataKeyLinkPreviewGeneratedDate;
    *(_QWORD *)(inited + 64) = type metadata accessor for Date(0);
    __swift_allocate_boxed_opaque_existential_1((_QWORD *)(inited + 40));
    v17 = v16;
    Date.init(timeIntervalSinceReferenceDate:)(a5);
    v18 = specialized Dictionary.init(dictionaryLiteral:)(inited);
    specialized _dictionaryUpCast<A, B, C, D>(_:)(v18);
    v20 = v19;
    swift_bridgeObjectRelease(v18);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v10, "addMetadata:", isa, swift_bridgeObjectRelease(v20).n128_f64[0]);

    swift_beginAccess(v8, &v30, 0, 0);
    Strong = swift_weakLoadStrong(v8);
    if (Strong)
    {
      v23 = Strong;
      v24 = *(id *)(Strong + 16);
      v25 = swift_release(v23);
      ((void (*)(__n128))v9)(v25);
      v27 = v26;
      v28 = String._bridgeToObjectiveC()();
      objc_msgSend(v24, "setObject:forKey:cost:", v10, v28, 1, swift_bridgeObjectRelease(v27).n128_f64[0]);

    }
    v29 = v10;
    ((void (*)(void *))a4)(a1);

  }
  else
  {
    a4();
  }
}

void specialized closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheMotionActivityFromProvider(_:cacheType:completion:)(void *a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, void (*a6)(void), uint8_t *a7)
{
  uint64_t v14;
  id v15;
  uint64_t ObjCClassFromMetadata;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  Class isa;
  void (*v22)(void);
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  uint64_t v26;
  uint64_t Strong;
  uint64_t v28;
  id v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  _BYTE v34[24];

  if (a1)
  {
    v14 = MOSuggestionAssetsTypeMotionActivity;
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIImage, UIImage_ptr);
    v15 = objc_allocWithZone((Class)MOSuggestionAsset);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v17 = a1;
    v18 = objc_msgSend(v15, "init:type:contentClassType:", v17, v14, ObjCClassFromMetadata);
    specialized _dictionaryUpCast<A, B, C, D>(_:)(a2);
    v20 = v19;
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v18, "addMetadata:", isa, swift_bridgeObjectRelease(v20).n128_f64[0]);

    v22 = *(void (**)(void))(*(_QWORD *)a3 + 288);
    v22();
    v24 = v23;
    v25 = String._bridgeToObjectiveC()();
    objc_msgSend(v18, "addIdentifier:", v25, swift_bridgeObjectRelease(v24).n128_f64[0]);

    if ((a4 - 2) < 9u)
    {
      v26 = a5 + 16;
      swift_beginAccess(v26, v34, 0, 0);
      Strong = swift_weakLoadStrong(v26);
      if (Strong)
      {
        v28 = Strong;
        v29 = *(id *)(Strong + 16);
        v30 = swift_release(v28);
        ((void (*)(__n128))v22)(v30);
        v32 = v31;
        v33 = String._bridgeToObjectiveC()();
        objc_msgSend(v29, "setObject:forKey:cost:", v18, v33, 1, swift_bridgeObjectRelease(v32).n128_f64[0]);

      }
    }
    specialized static MOSuggestionAssetCacheManager.wrapImageAssetInURLIfNecessary(asset:cacheType:completion:)(v18, a4, (void (*)(_QWORD))a6, a7);

  }
  else
  {
    a6();
  }
}

_QWORD *MOEventBundle._orderedAssetReferences()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  char **__ptr32 *v11;
  __n128 v12;
  uint64_t v13;
  id v14;
  _QWORD *v15;
  id v16;
  void *v17;
  double v18;
  _QWORD *v19;
  id v20;
  void *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  id v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  id v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  id v38;
  id v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;
  id v49;
  id v50;
  _QWORD *v51;
  void *v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t *v56;
  id v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  NSObject *v64;
  os_log_type_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  id v70;
  char *v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  char **__ptr32 *v84;
  id v85;
  _QWORD *v86;
  id v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  id v94;
  unint64_t v95;
  unint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  _QWORD *v101;
  id *v102;
  uint64_t v103;
  _QWORD *v104;
  id v105;
  id v106;
  id v107;
  void *v108;
  _QWORD *v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  void *v113;
  Class isa;
  id v115;
  id v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  char v124;
  void *v125;
  uint64_t v126;
  void *v127;
  uint64_t v128;
  _QWORD *v129;
  id v130;
  unint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  void *v136;
  uint64_t v137;
  id v138;
  id v139;
  uint64_t *v140;
  uint64_t v141;
  unint64_t v142;
  unint64_t v143;
  _QWORD *v144;
  void *v145;
  id v146;
  uint64_t v147;
  unint64_t v148;
  unint64_t v149;
  _QWORD *v150;
  id v151;
  unint64_t v152;
  unint64_t v153;
  uint64_t v154;
  double v155;
  uint64_t v156;
  unint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char v162;
  id v163;
  id v164;
  void *v165;
  id v166;
  void *v167;
  uint64_t v168;
  void *v169;
  uint64_t v170;
  id v171;
  unint64_t v172;
  unint64_t v173;
  _QWORD *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  id v180;
  NSObject *v181;
  os_log_type_t v182;
  uint8_t *v183;
  id v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  unint64_t v190;
  void *v191;
  _QWORD *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  id v196;
  uint64_t v197;
  id v198;
  id v199;
  id v200;
  uint64_t v201;
  _QWORD *v202;
  unint64_t v203;
  unint64_t v204;
  _QWORD *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  _QWORD *v209;
  id v210;
  NSObject *v211;
  os_log_type_t v212;
  uint64_t v213;
  _BOOL4 v214;
  uint64_t v215;
  uint64_t v216;
  void *v217;
  void *v218;
  id v219;
  id v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  unint64_t v225;
  unint64_t v226;
  char *v227;
  void *v228;
  uint64_t v229;
  id v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  unint64_t v235;
  unint64_t v236;
  _QWORD *v237;
  id v238;
  void *v239;
  void *v240;
  uint64_t v241;
  uint64_t v242;
  id v243;
  unint64_t v244;
  unint64_t v245;
  _QWORD *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  _QWORD *v250;
  id v251;
  NSObject *v252;
  os_log_type_t v253;
  _BOOL4 v254;
  uint64_t v255;
  id v256;
  char *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  unint64_t v261;
  unint64_t v262;
  unint64_t v263;
  uint64_t v264;
  _QWORD *v265;
  __n128 v266;
  void *v267;
  uint64_t v268;
  __n128 v269;
  uint64_t v270;
  uint64_t v271;
  __n128 v272;
  uint64_t v273;
  id v274;
  NSObject *v275;
  os_log_type_t v276;
  int v277;
  uint64_t v278;
  uint64_t v279;
  id v280;
  id v281;
  char *v282;
  uint64_t v283;
  uint64_t v284;
  unint64_t v285;
  unint64_t v286;
  char *v287;
  unint64_t v288;
  uint64_t v289;
  uint64_t v290;
  unint64_t v291;
  unint64_t v292;
  __n128 v293;
  uint64_t v294;
  void *v295;
  uint64_t v296;
  uint64_t v297;
  __n128 v298;
  os_log_t v299;
  _QWORD *v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v309;
  char *v310;
  __n128 v311;
  char *v312;
  const __CFString *v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  id v317;
  __n128 v318;
  id v319;
  id v320;
  __n128 v321;
  void *v322;
  _QWORD *v323;
  char *v324;
  os_log_t v325;
  _QWORD *v326;
  _QWORD *v327;
  uint64_t v328;
  uint64_t v329;
  void *v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  id v337[4];
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  char v346;
  char v347;
  char v348[24];
  _QWORD *v349;
  uint64_t v350;
  _BYTE v351[16];
  uint64_t v352;
  uint64_t v353;

  v1 = v0;
  v2 = type metadata accessor for UUID(0);
  v328 = *(_QWORD *)(v2 - 8);
  v329 = v2;
  __chkstk_darwin(v2);
  v324 = (char *)&v309 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(v0, "resources");
  if (v4)
  {
    v5 = v4;
    v6 = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MOResource, MOResource_ptr);
    v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

    if ((unint64_t)v7 >> 62)
      goto LABEL_126;
    v8 = (void *)(v7 & 0xFFFFFFFFFFFFFF8);
    if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      v335 = (uint64_t)_swiftEmptyArrayStorage;
      v336 = (uint64_t)_swiftEmptyArrayStorage;
      v333 = -1;
      v334 = (uint64_t)_swiftEmptyArrayStorage;
      swift_bridgeObjectRetain(v7);
      while (1)
      {
        v337[0] = v8;
        specialized MutableCollection<>.sort(by:)((uint64_t *)v337);
        swift_bridgeObjectRelease(v7);
        v9 = (unint64_t)v337[0];
        v314 = 0;
        if (((unint64_t)v337[0] & 0x8000000000000000) != 0
          || ((unint64_t)v337[0] & 0x4000000000000000) != 0)
        {
          v193 = swift_bridgeObjectRetain(v337[0]);
          v10 = _CocoaArrayWrapper.endIndex.getter(v193);
          swift_release(v9);
        }
        else
        {
          v10 = *((_QWORD *)v337[0] + 2);
        }
        v11 = &off_10019C000;
        if (!v10)
          break;
        v325 = (os_log_t)(v9 & 0xC000000000000001);
        v12 = swift_beginAccess(&v333, &v352, 1, 0);
        v13 = 0;
        v14 = 0;
        v317 = 0;
        v15 = _swiftEmptyArrayStorage;
        v315 = -1;
        v312 = (char *)&type metadata for Any + 8;
        v313 = CFSTR("MOActivityMetaDataMotionType");
        v12.n128_u64[0] = 136315394;
        v311 = v12;
        v310 = (char *)&type metadata for Swift.AnyObject + 8;
        v12.n128_u64[0] = 134218242;
        v318 = v12;
        v316 = -1;
        v322 = v1;
        v323 = (_QWORD *)v10;
        v321.n128_u64[0] = v9;
        while (1)
        {
          v16 = v325
              ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v9)
              : *(id *)(v9 + 8 * v13 + 32);
          v17 = v16;
          v7 = v13 + 1;
          if (__OFADD__(v13, 1))
            break;
          objc_msgSend(v16, "priorityScore");
          v330 = (void *)(v13 + 1);
          if (v18 >= 20000.0)
          {
            v326 = v15;
            v327 = (_QWORD *)v13;
            if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
              swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
            v30 = type metadata accessor for Logger(0);
            __swift_project_value_buffer(v30, (uint64_t)static MOAngelLogger.assets);
            v31 = v1;
            v32 = v17;
            v33 = Logger.logObject.getter(v32);
            v34 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v33, v34))
            {
              v35 = swift_slowAlloc(22, -1);
              v36 = v32;
              v320 = v32;
              v37 = v35;
              v319 = (id)swift_slowAlloc(32, -1);
              v337[0] = v319;
              *(_DWORD *)v37 = v318.n128_u32[0];
              *(_QWORD *)(v37 + 4) = objc_msgSend(v36, "type");

              *(_WORD *)(v37 + 12) = 2080;
              v38 = objc_msgSend(v31, "bundleIdentifier");
              v39 = v14;
              v40 = v324;
              static UUID._unconditionallyBridgeFromObjectiveC(_:)(v38);

              v41 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
              v42 = v329;
              v43 = dispatch thunk of CustomStringConvertible.description.getter(v329, v41);
              v45 = v44;
              v46 = v40;
              v14 = v39;
              v10 = (uint64_t)v323;
              v47 = v42;
              v11 = &off_10019C000;
              (*(void (**)(char *, uint64_t))(v328 + 8))(v46, v47);
              *(_QWORD *)(v37 + 14) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v43, v45, (uint64_t *)v337);

              v48 = v45;
              v9 = v321.n128_u64[0];
              swift_bridgeObjectRelease(v48);
              _os_log_impl((void *)&_mh_execute_header, v33, v34, "[MOEventBundle] Filtering out resource type=%lu, bundleIdentifier=%s", (uint8_t *)v37, 0x16u);
              v49 = v319;
              swift_arrayDestroy(v319, 1, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v49, -1, -1);
              swift_slowDealloc(v37, -1, -1);

            }
            else
            {

            }
            v15 = v326;
            v1 = v322;
LABEL_12:
            v13 = (uint64_t)v327;
          }
          else
          {
            switch((unint64_t)objc_msgSend(v17, "type"))
            {
              case 2uLL:
                v319 = v14;
                v19 = (_QWORD *)v13;
                v20 = MOResource.photoType.getter();
                if (v20)
                {
                  v21 = v20;
                  v22 = type metadata accessor for MOSuggestionAssetReference(0);
                  v23 = (_QWORD *)swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
                  v23[5] = 0;
                  v23[4] = 0;
                  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v328 + 56))((uint64_t)v23 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID, 1, 1, v329);
                  *(_QWORD *)((char *)v23 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = v17;
                  swift_beginAccess(v23 + 4, &v340, 1, 0);
                  v24 = v23[5];
                  v23[4] = 0;
                  v23[5] = 0;
                  v25 = v17;
                  v26 = v21;
                  swift_bridgeObjectRelease(v24);
                  v23[2] = v26;
                  v23[3] = 0;
                  if ((swift_isUniquelyReferenced_nonNull_native(v15) & 1) == 0)
                    v15 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v15[2] + 1, 1, v15);
                  v28 = v15[2];
                  v27 = v15[3];
                  if (v28 >= v27 >> 1)
                    v15 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((_QWORD *)(v27 > 1), v28 + 1, 1, v15);
                  v15[2] = v28 + 1;
                  v29 = &v15[2 * v28];
                  v29[4] = v23;
                  v29[5] = v19;

                  v13 = (uint64_t)v19;
                  v11 = &off_10019C000;
LABEL_75:
                  v9 = v321.n128_u64[0];
                  v10 = (uint64_t)v323;
                  v14 = v319;
                }
                else
                {

                  v14 = v319;
                }
                break;
              case 3uLL:
                v50 = v14;
                v51 = (_QWORD *)v13;
                v52 = (void *)MOSuggestionAssetsTypeMediaCoverArt;
                v61 = type metadata accessor for MOSuggestionAssetReference(0);
                v54 = (_QWORD *)swift_allocObject(v61, *(unsigned int *)(v61 + 48), *(unsigned __int16 *)(v61 + 52));
                v54[5] = 0;
                v54[4] = 0;
                v55 = v54 + 4;
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v328 + 56))((uint64_t)v54 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID, 1, 1, v329);
                *(_QWORD *)((char *)v54 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = v17;
                v56 = &v341;
                goto LABEL_49;
              case 4uLL:
                v50 = v14;
                v51 = (_QWORD *)v13;
                v52 = (void *)MOSuggestionAssetsTypeLinkPreview;
                v53 = type metadata accessor for MOSuggestionAssetReference(0);
                v54 = (_QWORD *)swift_allocObject(v53, *(unsigned int *)(v53 + 48), *(unsigned __int16 *)(v53 + 52));
                v54[5] = 0;
                v54[4] = 0;
                v55 = v54 + 4;
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v328 + 56))((uint64_t)v54 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID, 1, 1, v329);
                *(_QWORD *)((char *)v54 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = v17;
                v56 = &v342;
                goto LABEL_49;
              case 6uLL:
                v84 = v11;
                v85 = v14;
                v86 = (_QWORD *)v13;
                v87 = v17;
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v87);
                v89 = *(_QWORD *)((v335 & 0xFFFFFFFFFFFFFF8) + 0x10);
                v88 = *(_QWORD *)((v335 & 0xFFFFFFFFFFFFFF8) + 0x18);
                if (v89 >= v88 >> 1)
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v88 > 1, v89 + 1, 1);
                v90 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v89, v87);
                specialized Array._endMutation()(v90);

                v13 = (uint64_t)v86;
                v14 = v85;
                v11 = v84;
                v1 = v322;
                v10 = (uint64_t)v323;
                break;
              case 7uLL:
                v50 = v14;
                v51 = (_QWORD *)v13;
                v52 = (void *)MOSuggestionAssetsTypeAppIcon;
                v91 = type metadata accessor for MOSuggestionAssetReference(0);
                v54 = (_QWORD *)swift_allocObject(v91, *(unsigned int *)(v91 + 48), *(unsigned __int16 *)(v91 + 52));
                v54[5] = 0;
                v54[4] = 0;
                v55 = v54 + 4;
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v328 + 56))((uint64_t)v54 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID, 1, 1, v329);
                *(_QWORD *)((char *)v54 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = v17;
                v56 = &v343;
                goto LABEL_49;
              case 9uLL:
                v319 = v14;
                v327 = (_QWORD *)v13;
                v57 = objc_msgSend(v1, "promptLanguages");
                if (v57)
                {
                  v58 = v57;
                  v59 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v57, &type metadata for String);

                }
                else
                {
                  v59 = 0;
                }
                v134 = type metadata accessor for MOEvergreenAssetReference(0);
                v135 = (_QWORD *)swift_allocObject(v134, *(unsigned int *)(v134 + 48), *(unsigned __int16 *)(v134 + 52));
                *(_QWORD *)((char *)v135 + OBJC_IVAR____TtC16MomentsUIService25MOEvergreenAssetReference_prompts) = 0;
                v136 = (void *)MOSuggestionAssetsTypeReflectionPrompt;
                v135[5] = 0;
                v135[4] = 0;
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v328 + 56))((uint64_t)v135 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID, 1, 1, v329);
                *(_QWORD *)((char *)v135 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = v17;
                swift_beginAccess(v135 + 4, &v345, 1, 0);
                v137 = v135[5];
                v135[4] = 0;
                v135[5] = 0;
                v138 = v17;
                v139 = v136;
                swift_bridgeObjectRelease(v137);
                v135[2] = v139;
                v135[3] = 0;
                v140 = (_QWORD *)((char *)v135 + OBJC_IVAR____TtC16MomentsUIService25MOEvergreenAssetReference_prompts);
                swift_beginAccess((char *)v135 + OBJC_IVAR____TtC16MomentsUIService25MOEvergreenAssetReference_prompts, &v344, 1, 0);
                v141 = *v140;
                *v140 = v59;
                swift_bridgeObjectRelease(v141);
                if ((swift_isUniquelyReferenced_nonNull_native(v15) & 1) == 0)
                  v15 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v15[2] + 1, 1, v15);
                v11 = &off_10019C000;
                v143 = v15[2];
                v142 = v15[3];
                if (v143 >= v142 >> 1)
                  v15 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((_QWORD *)(v142 > 1), v143 + 1, 1, v15);
                v15[2] = v143 + 1;
                v144 = &v15[2 * v143];
                v13 = (uint64_t)v327;
                v144[4] = v135;
                v144[5] = v13;

                goto LABEL_75;
              case 0xAuLL:
                v327 = (_QWORD *)v13;
                if (v333 == -1)
                {
                  v333 = (uint64_t)v327;
                  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
                    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
                  v62 = type metadata accessor for Logger(0);
                  __swift_project_value_buffer(v62, (uint64_t)static MOAngelLogger.assets);
                  v63 = v1;
                  v64 = Logger.logObject.getter(v63);
                  v65 = static os_log_type_t.debug.getter();
                  v66 = v65;
                  if (os_log_type_enabled(v64, v65))
                  {
                    v67 = swift_slowAlloc(22, -1);
                    v326 = v15;
                    v68 = v67;
                    v320 = (id)swift_slowAlloc(32, -1);
                    v337[0] = v320;
                    *(_DWORD *)v68 = v311.n128_u32[0];
                    v69 = objc_msgSend(v63, "bundleIdentifier");
                    LODWORD(v319) = v66;
                    v70 = v69;
                    v71 = v324;
                    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v69);

                    v72 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
                    v73 = v14;
                    v74 = v329;
                    v75 = dispatch thunk of CustomStringConvertible.description.getter(v329, v72);
                    v77 = v76;
                    v78 = v71;
                    v1 = v322;
                    v79 = v74;
                    v14 = v73;
                    v11 = &off_10019C000;
                    (*(void (**)(char *, uint64_t))(v328 + 8))(v78, v79);
                    *(_QWORD *)(v68 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v75, v77, (uint64_t *)v337);

                    v80 = v77;
                    v9 = v321.n128_u64[0];
                    swift_bridgeObjectRelease(v80);
                    *(_WORD *)(v68 + 12) = 2048;
                    *(_QWORD *)(v68 + 14) = v333;
                    _os_log_impl((void *)&_mh_execute_header, v64, (os_log_type_t)v319, "[MOEventBundle] (debug) bundleIdentifier=%s setting singleWorkoutIndex=%ld", (uint8_t *)v68, 0x16u);
                    v81 = v320;
                    swift_arrayDestroy(v320, 1, v312);
                    swift_slowDealloc(v81, -1, -1);
                    v82 = v68;
                    v15 = v326;
                    swift_slowDealloc(v82, -1, -1);

                  }
                  else
                  {

                  }
                }
                v151 = v17;
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v151);
                v153 = *(_QWORD *)((v334 & 0xFFFFFFFFFFFFFF8) + 0x10);
                v152 = *(_QWORD *)((v334 & 0xFFFFFFFFFFFFFF8) + 0x18);
                if (v153 >= v152 >> 1)
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v152 > 1, v153 + 1, 1);
                v154 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v153, v151);
                specialized Array._endMutation()(v154);

                v10 = (uint64_t)v323;
                goto LABEL_12;
              case 0xBuLL:
                if (objc_msgSend(v1, "bundleSuperType") != (id)3)
                  goto LABEL_44;
                v50 = v14;
                v51 = (_QWORD *)v13;
                v52 = (void *)MOSuggestionAssetsTypeContactPhoto;
                v83 = type metadata accessor for MOSuggestionAssetReference(0);
                v54 = (_QWORD *)swift_allocObject(v83, *(unsigned int *)(v83 + 48), *(unsigned __int16 *)(v83 + 52));
                v54[5] = 0;
                v54[4] = 0;
                v55 = v54 + 4;
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v328 + 56))((uint64_t)v54 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID, 1, 1, v329);
                *(_QWORD *)((char *)v54 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = v17;
                v56 = (uint64_t *)&v346;
LABEL_49:
                swift_beginAccess(v55, v56, 1, 0);
                v92 = v54[5];
                *v55 = 0;
                v54[5] = 0;
                v93 = v17;
                v94 = v52;
                swift_bridgeObjectRelease(v92);
                v54[2] = v94;
                v54[3] = 0;
                if ((swift_isUniquelyReferenced_nonNull_native(v15) & 1) == 0)
                  v15 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v15[2] + 1, 1, v15);
                v96 = v15[2];
                v95 = v15[3];
                if (v96 >= v95 >> 1)
                  v15 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((_QWORD *)(v95 > 1), v96 + 1, 1, v15);
                v15[2] = v96 + 1;
                v97 = &v15[2 * v96];
                v97[4] = v54;
                v97[5] = v51;
                v13 = (uint64_t)v51;

                v9 = v321.n128_u64[0];
                v10 = (uint64_t)v323;
LABEL_54:
                v14 = v50;
                v11 = &off_10019C000;
                break;
              case 0xCuLL:
                v50 = v14;
                v128 = v315;
                v129 = (_QWORD *)v13;
                if (v315 == -1)
                  v128 = v13;
                v315 = v128;
                v130 = v17;
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v130);
                v132 = *(_QWORD *)((v336 & 0xFFFFFFFFFFFFFF8) + 0x10);
                v131 = *(_QWORD *)((v336 & 0xFFFFFFFFFFFFFF8) + 0x18);
                if (v132 >= v131 >> 1)
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v131 > 1, v132 + 1, 1);
                v133 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v132, v130);
                specialized Array._endMutation()(v133);

                v10 = (uint64_t)v323;
                v13 = (uint64_t)v129;
                goto LABEL_54;
              case 0xDuLL:
                v98 = v316;
                v327 = (_QWORD *)v13;
                if (v316 == -1)
                  v98 = v13;
                v316 = v98;
                v99 = (void *)MOSuggestionAssetsTypeMotionActivity;
                v100 = type metadata accessor for MOSuggestionAssetReference(0);
                v101 = (_QWORD *)swift_allocObject(v100, *(unsigned int *)(v100 + 48), *(unsigned __int16 *)(v100 + 52));
                v101[5] = 0;
                v101[4] = 0;
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v328 + 56))((uint64_t)v101 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID, 1, 1, v329);
                v102 = (id *)((char *)v101 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource);
                *(_QWORD *)((char *)v101 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = v17;
                swift_beginAccess(v101 + 4, &v339, 1, 0);
                v103 = v101[5];
                v101[4] = 0;
                v101[5] = 0;
                v104 = v17;
                v105 = v99;
                swift_bridgeObjectRelease(v103);
                v101[2] = v105;
                v101[3] = 0;
                swift_beginAccess(v102, &v338, 0, 0);
                v106 = *v102;
                v107 = objc_msgSend(v106, "data");
                if (!v107)
                {

                  v14 = 0;
                  v11 = &off_10019C000;
                  v9 = v321.n128_u64[0];
                  goto LABEL_78;
                }
                v108 = v107;
                v326 = v104;
                v109 = v15;
                v110 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
                v112 = v111;

                v113 = (void *)objc_opt_self(NSJSONSerialization);
                isa = Data._bridgeToObjectiveC()().super.isa;
                v337[0] = 0;
                v115 = objc_msgSend(v113, "JSONObjectWithData:options:error:", isa, 0, v337);

                v116 = v337[0];
                if (!v115)
                {
                  v145 = v14;
                  v146 = v337[0];
                  v147 = _convertNSErrorToError(_:)(v116);

                  swift_willThrow();
                  outlined consume of Data._Representation(v110, v112);
                  swift_errorRelease(v147);

                  v14 = 0;
                  v314 = 0;
LABEL_81:
                  v11 = &off_10019C000;
                  v15 = v109;
                  v9 = v321.n128_u64[0];
                  goto LABEL_82;
                }
                v117 = v337[0];
                _bridgeAnyObjectToAny(_:)(v337, v115);
                outlined consume of Data._Representation(v110, v112);
                swift_unknownObjectRelease(v115);
                v118 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Swift.AnyObject]);
                if ((swift_dynamicCast(&v350, v337, (char *)&type metadata for Any + 8, v118, 6) & 1) == 0)
                {

                  v14 = 0;
                  goto LABEL_81;
                }
                v119 = v350;

                v120 = static String._unconditionallyBridgeFromObjectiveC(_:)(v313);
                v122 = v121;
                v11 = &off_10019C000;
                v15 = v109;
                v9 = v321.n128_u64[0];
                if (*(_QWORD *)(v119 + 16))
                {
                  v123 = specialized __RawDictionaryStorage.find<A>(_:)(v120, v121);
                  v104 = v326;
                  if ((v124 & 1) != 0)
                  {
                    v125 = *(void **)(*(_QWORD *)(v119 + 56) + 8 * v123);
                    swift_unknownObjectRetain();
                    swift_bridgeObjectRelease(v122);
                    swift_bridgeObjectRelease(v119);
                    v337[0] = v125;
                    type metadata accessor for MOWorkoutMotionActivityAction(0);
                    if ((swift_dynamicCast(&v350, v337, v310, v126, 6) & 1) != 0)
                    {
                      v127 = (void *)v350;

                      v14 = v127;
LABEL_78:
                      v13 = (uint64_t)v327;
                      goto LABEL_83;
                    }
                  }
                  else
                  {
                    swift_bridgeObjectRelease(v122);
                    swift_bridgeObjectRelease(v119);
                  }

                  v14 = 0;
                  goto LABEL_78;
                }
                swift_bridgeObjectRelease(v121);
                swift_bridgeObjectRelease(v119);

                v14 = 0;
LABEL_82:
                v104 = v326;
                v13 = (uint64_t)v327;
LABEL_83:
                swift_retain(v101);
                if ((swift_isUniquelyReferenced_nonNull_native(v15) & 1) == 0)
                  v15 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v15[2] + 1, 1, v15);
                v149 = v15[2];
                v148 = v15[3];
                if (v149 >= v148 >> 1)
                  v15 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((_QWORD *)(v148 > 1), v149 + 1, 1, v15);
                v15[2] = v149 + 1;
                v150 = &v15[2 * v149];
                v150[4] = v101;
                v150[5] = v13;
                swift_release(v101);

                v1 = v322;
                v10 = (uint64_t)v323;
                break;
              case 0xEuLL:

                v317 = v17;
                goto LABEL_14;
              case 0x10uLL:
                v50 = v14;
                v51 = (_QWORD *)v13;
                v52 = (void *)MOSuggestionAssetsTypeStateOfMindAsset;
                v60 = type metadata accessor for MOSuggestionAssetReference(0);
                v54 = (_QWORD *)swift_allocObject(v60, *(unsigned int *)(v60 + 48), *(unsigned __int16 *)(v60 + 52));
                v54[5] = 0;
                v54[4] = 0;
                v55 = v54 + 4;
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v328 + 56))((uint64_t)v54 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID, 1, 1, v329);
                *(_QWORD *)((char *)v54 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = v17;
                v56 = (uint64_t *)&v347;
                goto LABEL_49;
              default:
LABEL_44:

                goto LABEL_14;
            }
          }
          v7 = (uint64_t)v330;
LABEL_14:
          ++v13;
          if (v7 == v10)
          {
            *(_QWORD *)&v155 = swift_release(v9).n128_u64[0];
            v156 = v334;
            if (!((unint64_t)v334 >> 62))
              goto LABEL_96;
LABEL_100:
            if (v156 < 0)
              v158 = v156;
            else
              v158 = v156 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v156);
            v159 = _CocoaArrayWrapper.endIndex.getter(v158);
            swift_bridgeObjectRelease(v156);
            if (v159 < 2)
              goto LABEL_104;
LABEL_97:
            if (objc_msgSend(v1, "interfaceType", v155) != (id)12)
              goto LABEL_104;
            v157 = objc_msgSend(v1, "bundleSubType") == (id)202;
            goto LABEL_105;
          }
        }
        __break(1u);
LABEL_126:
        if (v7 < 0)
          v176 = v7;
        else
          v176 = v7 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v7);
        v177 = _CocoaArrayWrapper.endIndex.getter(v176);
        swift_bridgeObjectRelease(v7);
        if (!v177)
          goto LABEL_131;
        v335 = (uint64_t)_swiftEmptyArrayStorage;
        v336 = (uint64_t)_swiftEmptyArrayStorage;
        v333 = -1;
        v334 = (uint64_t)_swiftEmptyArrayStorage;
        v178 = swift_bridgeObjectRetain(v7);
        v8 = specialized _copyCollectionToContiguousArray<A>(_:)(v178);
        swift_bridgeObjectRelease(v7);
      }
      *(_QWORD *)&v155 = swift_release(v9).n128_u64[0];
      v14 = 0;
      v317 = 0;
      v315 = -1;
      v156 = (uint64_t)_swiftEmptyArrayStorage;
      v316 = -1;
      v15 = _swiftEmptyArrayStorage;
      if ((unint64_t)_swiftEmptyArrayStorage >> 62)
        goto LABEL_100;
LABEL_96:
      if (*(uint64_t *)((v156 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2)
        goto LABEL_97;
LABEL_104:
      v157 = 0;
LABEL_105:
      v160 = v336;
      if ((unint64_t)v336 >> 62)
      {
        if (v336 < 0)
          v194 = v336;
        else
          v194 = v336 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v336);
        v161 = _CocoaArrayWrapper.endIndex.getter(v194);
        swift_bridgeObjectRelease(v160);
      }
      else
      {
        v161 = *(_QWORD *)((v336 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      if (v161 < 1)
        v162 = 1;
      else
        v162 = v157;
      if ((v162 & 1) != 0)
      {
LABEL_153:
        if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
          swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
        v207 = type metadata accessor for Logger(0);
        v208 = __swift_project_value_buffer(v207, (uint64_t)static MOAngelLogger.assets);
        v209 = (_QWORD *)v333;
        v210 = v1;
        v330 = (void *)v208;
        v211 = Logger.logObject.getter(v210);
        v212 = static os_log_type_t.debug.getter();
        v213 = v212;
        v214 = os_log_type_enabled(v211, v212);
        v319 = v14;
        if (v214)
        {
          v215 = swift_slowAlloc(22, -1);
          v327 = v209;
          v216 = v215;
          v217 = (void *)swift_slowAlloc(32, -1);
          v326 = v15;
          v218 = v217;
          v337[0] = v217;
          *(_DWORD *)v216 = *((_QWORD *)v11 + 271);
          v325 = (os_log_t)(v216 + 4);
          v219 = objc_msgSend(v210, "bundleIdentifier");
          v220 = v210;
          v221 = v324;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)(v219);

          v222 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
          v223 = v329;
          v224 = dispatch thunk of CustomStringConvertible.description.getter(v329, v222);
          v226 = v225;
          v227 = v221;
          v210 = v220;
          (*(void (**)(char *, uint64_t))(v328 + 8))(v227, v223);
          v350 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v224, v226, (uint64_t *)v337);
          v11 = &off_10019C000;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v350, v351, v325);

          swift_bridgeObjectRelease(v226);
          *(_WORD *)(v216 + 12) = 2048;
          v350 = (uint64_t)v327;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v350, v351, v216 + 14);
          _os_log_impl((void *)&_mh_execute_header, v211, (os_log_type_t)v213, "[MOEventBundle] (debug) bundleIdentifier=%s singleWorkoutIndex=%ld", (uint8_t *)v216, 0x16u);
          swift_arrayDestroy(v218, 1, (char *)&type metadata for Any + 8);
          v228 = v218;
          v15 = v326;
          swift_slowDealloc(v228, -1, -1);
          swift_slowDealloc(v216, -1, -1);

        }
        else
        {

        }
        v229 = v334;
        if ((unint64_t)v334 >> 62)
        {
          if (v334 < 0)
            v247 = v334;
          else
            v247 = v334 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v334);
          v248 = _CocoaArrayWrapper.endIndex.getter(v247);
          swift_bridgeObjectRelease(v229);
          if (v248 >= 2)
            goto LABEL_160;
          swift_bridgeObjectRetain(v229);
          v230 = (id)_CocoaArrayWrapper.endIndex.getter(v247);
          if (v230)
            goto LABEL_166;
        }
        else
        {
          v230 = *(id *)((v334 & 0xFFFFFFFFFFFFF8) + 0x10);
          if ((unint64_t)v230 > 1)
          {
LABEL_160:
            v231 = type metadata accessor for MOWorkoutGroupAssetReference(0);
            swift_allocObject(v231, *(unsigned int *)(v231 + 48), *(unsigned __int16 *)(v231 + 52));
            v232 = swift_bridgeObjectRetain(v229);
            v233 = MOWorkoutGroupAssetReference.init(workoutResources:)(v232);
            swift_beginAccess(&v333, v337, 0, 0);
            v234 = v333;
            swift_retain(v233);
            if ((swift_isUniquelyReferenced_nonNull_native(v15) & 1) == 0)
              v15 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v15[2] + 1, 1, v15);
            v236 = v15[2];
            v235 = v15[3];
            if (v236 >= v235 >> 1)
              v15 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((_QWORD *)(v235 > 1), v236 + 1, 1, v15);
            v15[2] = v236 + 1;
            v237 = &v15[2 * v236];
            v237[4] = v233;
            v237[5] = v234;
            swift_release(v233);
            goto LABEL_179;
          }
          swift_bridgeObjectRetain(v334);
          if (v230)
          {
LABEL_166:
            if ((v229 & 0xC000000000000001) != 0)
            {
              v238 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v229);
            }
            else
            {
              if (!*(_QWORD *)((v229 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
                goto LABEL_198;
              }
              v238 = *(id *)(v229 + 32);
            }
            v239 = v238;
            swift_bridgeObjectRelease(v229);
            v240 = (void *)MOSuggestionAssetsTypeWorkout;
            v241 = type metadata accessor for MOSuggestionAssetReference(0);
            v229 = swift_allocObject(v241, *(unsigned int *)(v241 + 48), *(unsigned __int16 *)(v241 + 52));
            *(_QWORD *)(v229 + 32) = 0;
            *(_QWORD *)(v229 + 40) = 0;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v328 + 56))(v229 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID, 1, 1, v329);
            *(_QWORD *)(v229 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = v239;
            swift_beginAccess(v229 + 32, v337, 1, 0);
            v242 = *(_QWORD *)(v229 + 40);
            *(_QWORD *)(v229 + 32) = 0;
            *(_QWORD *)(v229 + 40) = 0;
            v230 = v239;
            v243 = v240;
            swift_bridgeObjectRelease(v242);
            *(_QWORD *)(v229 + 16) = v243;
            *(_QWORD *)(v229 + 24) = 0;
            swift_beginAccess(&v333, &v350, 0, 0);
            v213 = v333;
            if ((swift_isUniquelyReferenced_nonNull_native(v15) & 1) != 0)
            {
LABEL_170:
              v245 = v15[2];
              v244 = v15[3];
              if (v245 >= v244 >> 1)
                v15 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((_QWORD *)(v244 > 1), v245 + 1, 1, v15);
              v15[2] = v245 + 1;
              v246 = &v15[2 * v245];
              v246[4] = v229;
              v246[5] = v213;

              v11 = &off_10019C000;
              goto LABEL_179;
            }
LABEL_198:
            v15 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v15[2] + 1, 1, v15);
            goto LABEL_170;
          }
        }
        swift_bridgeObjectRelease(v229);
LABEL_179:
        v349 = v15;
        swift_bridgeObjectRetain_n(v15, 2);
        v249 = v314;
        specialized MutableCollection<>.sort(by:)((uint64_t *)&v349, (uint64_t (*)(uint64_t))specialized _ContiguousArrayBuffer._consumeAndCreateNew(), specialized UnsafeMutableBufferPointer._stableSortImpl(by:));
        if (v249)
        {
          swift_release(v349);
          __break(1u);
          JUMPOUT(0x100180878);
        }
        swift_bridgeObjectRelease_n(v15, 2);
        v250 = v349;
        swift_retain_n(v349, 3);
        v251 = v210;
        v252 = Logger.logObject.getter(v251);
        v253 = static os_log_type_t.default.getter();
        v254 = os_log_type_enabled(v252, v253);
        v323 = v250;
        if (v254)
        {
          v255 = swift_slowAlloc(22, -1);
          v327 = (_QWORD *)swift_slowAlloc(32, -1);
          v349 = v327;
          *(_DWORD *)v255 = *((_QWORD *)v11 + 271);
          v256 = objc_msgSend(v251, "bundleIdentifier");
          v257 = v324;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)(v256);

          v258 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
          v259 = v329;
          v260 = dispatch thunk of CustomStringConvertible.description.getter(v329, v258);
          v262 = v261;
          (*(void (**)(char *, uint64_t))(v328 + 8))(v257, v259);
          v331 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v260, v262, (uint64_t *)&v349);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v331, &v332, v255 + 4);

          v263 = v262;
          v250 = v323;
          swift_bridgeObjectRelease(v263);
          *(_WORD *)(v255 + 12) = 2048;
          v264 = v250[2];
          swift_release(v250);
          v331 = v264;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v331, &v332, v255 + 14);
          swift_release(v250);
          _os_log_impl((void *)&_mh_execute_header, v252, v253, "[MOEventBundle] Building asset references bundleIdentifier=%s expectedAssetReferenceCount=%ld", (uint8_t *)v255, 0x16u);
          v265 = v327;
          swift_arrayDestroy(v327, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v265, -1, -1);
          swift_slowDealloc(v255, -1, -1);

        }
        else
        {

          swift_release_n(v250, 2, v266);
        }
        v267 = v251;
        v268 = v250[2];
        if (!v268)
          goto LABEL_193;
        v269 = swift_retain(v250);
        v270 = 4;
        v269.n128_u64[0] = 136315650;
        v321 = v269;
        v320 = (char *)&type metadata for Any + 8;
        v322 = v267;
        v271 = v329;
        do
        {
          v273 = v250[v270];
          swift_retain_n(v273, 5);
          v274 = v267;
          v275 = Logger.logObject.getter(v274);
          v276 = static os_log_type_t.info.getter();
          v277 = v276;
          if (os_log_type_enabled(v275, v276))
          {
            v278 = swift_slowAlloc(32, -1);
            LODWORD(v327) = v277;
            v279 = v278;
            v326 = (_QWORD *)swift_slowAlloc(64, -1);
            v349 = v326;
            *(_DWORD *)v279 = v321.n128_u32[0];
            v280 = objc_msgSend(v274, "bundleIdentifier");
            v325 = v275;
            v281 = v280;
            v282 = v324;
            static UUID._unconditionallyBridgeFromObjectiveC(_:)(v280);

            v283 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
            v284 = dispatch thunk of CustomStringConvertible.description.getter(v271, v283);
            v286 = v285;
            v287 = v282;
            v250 = v323;
            (*(void (**)(char *, uint64_t))(v328 + 8))(v287, v271);
            *(_QWORD *)(v279 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v284, v286, (uint64_t *)&v349);

            v288 = v286;
            v267 = v322;
            v289 = swift_bridgeObjectRelease(v288);
            *(_WORD *)(v279 + 12) = 2080;
            v290 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v273 + 312))(v289);
            v292 = v291;
            *(_QWORD *)(v279 + 14) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v290, v291, (uint64_t *)&v349);
            swift_release_n(v273, 2, v293);
            v294 = swift_bridgeObjectRelease(v292);
            *(_WORD *)(v279 + 22) = 2048;
            v295 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v273 + 216))(v294);
            objc_msgSend(v295, "priorityScore");
            v297 = v296;

            *(_QWORD *)(v279 + 24) = v297;
            swift_release_n(v273, 2, v298);
            v299 = v325;
            _os_log_impl((void *)&_mh_execute_header, v325, (os_log_type_t)v327, "[MOEventBundle] (bundleIdentifier=%s) -- expected asset reference: %s priorityScore: %f", (uint8_t *)v279, 0x20u);
            v300 = v326;
            swift_arrayDestroy(v326, 2, v320);
            swift_slowDealloc(v300, -1, -1);
            swift_slowDealloc(v279, -1, -1);
            swift_release(v273);

          }
          else
          {

            swift_release_n(v273, 5, v272);
          }
          v270 += 2;
          --v268;
        }
        while (v268);
        swift_release(v250);
        v301 = v250[2];
        if (v301)
        {
          v349 = _swiftEmptyArrayStorage;
          specialized ContiguousArray.reserveCapacity(_:)(v301);
          v302 = 4;
          do
          {
            v303 = v250[v302];
            swift_retain(v303);
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v304);
            v305 = v349[2];
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v305);
            v306 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v305, v303);
            specialized ContiguousArray._endMutation()(v306);
            v302 += 2;
            --v301;
          }
          while (v301);
          v192 = v349;
          swift_release(v250);

        }
        else
        {
LABEL_193:
          swift_release(v250);

          v192 = _swiftEmptyArrayStorage;
        }
        swift_bridgeObjectRelease(v334);
        swift_bridgeObjectRelease(v335);
        v307 = v336;
        swift_release(v250);
        swift_bridgeObjectRelease(v307);
        return v192;
      }
      if (v316 == -1)
      {
LABEL_148:
        v196 = v14;
        v197 = v335;
        v198 = v317;
        v199 = v317;
        swift_bridgeObjectRetain(v197);
        swift_bridgeObjectRetain(v160);
        v200 = objc_msgSend(v1, "interfaceType");
        v201 = type metadata accessor for MOMultiMapAssetReference(0);
        swift_allocObject(v201, *(unsigned int *)(v201 + 48), *(unsigned __int16 *)(v201 + 52));
        v202 = specialized MOMultiMapAssetReference.init(locationResources:weatherResource:pointOfInterestResources:bundleType:)(v160, v198, v197, (uint64_t)v200);

        swift_retain(v202);
        if ((swift_isUniquelyReferenced_nonNull_native(v15) & 1) == 0)
          v15 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v15[2] + 1, 1, v15);
        v204 = v15[2];
        v203 = v15[3];
        v14 = v196;
        if (v204 >= v203 >> 1)
          v15 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((_QWORD *)(v203 > 1), v204 + 1, 1, v15);
        v11 = &off_10019C000;
        v15[2] = v204 + 1;
        v205 = &v15[2 * v204];
        v206 = v315;
        v205[4] = v202;
        v205[5] = v206;
        swift_release(v202);
        goto LABEL_153;
      }
      if ((unint64_t)v160 >> 62)
      {
        if (v160 < 0)
          v195 = v160;
        else
          v195 = v160 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v160);
        v163 = (id)_CocoaArrayWrapper.endIndex.getter(v195);
        if (v163)
        {
LABEL_114:
          if ((v160 & 0xC000000000000001) != 0)
          {
            v164 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v160);
          }
          else
          {
            if (!*(_QWORD *)((v160 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
LABEL_201:
              v15 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v15[2] + 1, 1, v15);
LABEL_121:
              v173 = v15[2];
              v172 = v15[3];
              if (v173 >= v172 >> 1)
                v15 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((_QWORD *)(v172 > 1), v173 + 1, 1, v15);
              v15[2] = v173 + 1;
              v174 = &v15[2 * v173];
              v175 = v316;
              v174[4] = v160;
              v174[5] = v175;

              v11 = &off_10019C000;
              goto LABEL_153;
            }
            v164 = *(id *)(v160 + 32);
          }
          v165 = v164;
          swift_bridgeObjectRelease(v160);
          v166 = objc_msgSend(v165, "placeName");
          if (v166)
          {
            v167 = v166;

            goto LABEL_148;
          }
          if (!v14)
          {

            goto LABEL_148;
          }
          v168 = type metadata accessor for MOGenericMapAssetReference(0);
          v160 = swift_allocObject(v168, *(unsigned int *)(v168 + 48), *(unsigned __int16 *)(v168 + 52));
          *(_QWORD *)(v160 + OBJC_IVAR____TtC16MomentsUIService26MOGenericMapAssetReference_associatedMotionType) = v14;
          v169 = (void *)MOSuggestionAssetsTypeGenericMap;
          *(_QWORD *)(v160 + 32) = 0;
          *(_QWORD *)(v160 + 40) = 0;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v328 + 56))(v160 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID, 1, 1, v329);
          *(_QWORD *)(v160 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = v165;
          swift_beginAccess(v160 + 32, v348, 1, 0);
          v170 = *(_QWORD *)(v160 + 40);
          *(_QWORD *)(v160 + 32) = 0;
          *(_QWORD *)(v160 + 40) = 0;
          v157 = (unint64_t)v14;
          v163 = v165;
          v171 = v169;
          swift_bridgeObjectRelease(v170);
          *(_QWORD *)(v160 + 16) = v171;
          *(_QWORD *)(v160 + 24) = 0;

          if ((swift_isUniquelyReferenced_nonNull_native(v15) & 1) != 0)
            goto LABEL_121;
          goto LABEL_201;
        }
      }
      else
      {
        v163 = *(id *)((v160 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v160);
        if (v163)
          goto LABEL_114;
      }
      swift_bridgeObjectRelease(v160);
      goto LABEL_148;
    }
LABEL_131:
    swift_bridgeObjectRelease(v7);
  }
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v179 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v179, (uint64_t)static MOAngelLogger.assets);
  v180 = v1;
  v181 = Logger.logObject.getter(v180);
  v182 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v181, v182))
  {
    v183 = (uint8_t *)swift_slowAlloc(12, -1);
    v330 = (void *)swift_slowAlloc(32, -1);
    v337[0] = v330;
    *(_DWORD *)v183 = 136315138;
    v327 = v183 + 4;
    v184 = objc_msgSend(v180, "bundleIdentifier");
    v185 = v324;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v184);

    v186 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v187 = v329;
    v188 = dispatch thunk of CustomStringConvertible.description.getter(v329, v186);
    v190 = v189;
    (*(void (**)(char *, uint64_t))(v328 + 8))(v185, v187);
    v352 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v188, v190, (uint64_t *)v337);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v352, &v353, v327);

    swift_bridgeObjectRelease(v190);
    _os_log_impl((void *)&_mh_execute_header, v181, v182, "[MOEventBundle] No assets for bundleIdentifier=%s", v183, 0xCu);
    v191 = v330;
    swift_arrayDestroy(v330, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v191, -1, -1);
    swift_slowDealloc(v183, -1, -1);

  }
  else
  {

  }
  return 0;
}

BOOL closure #1 in MOEventBundle.typeSortedAssetReferencesForInterstitial.getter(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  void *v5;
  uint64_t (*v6)(void);
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t inited;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  void *v45;
  uint64_t v46;
  char v47;
  char v48;
  void *v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  uint64_t v79;
  double v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  uint64_t v100;
  double v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  void *v109;
  char v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  void *v121;
  void *v122;
  void *v123;
  void *v124;
  id v125;
  id v126;
  double v127;
  uint64_t v128;
  char v129[120];

  v2 = *a1;
  v3 = *a2;
  v4 = *(uint64_t (**)(void))(*(_QWORD *)*a1 + 120);
  v5 = (void *)v4();
  v126 = (id)specialized static MOSuggestionAssetReference.consolidatedType(_:)((uint64_t)v5);

  v6 = *(uint64_t (**)(void))(*(_QWORD *)v3 + 120);
  v7 = (void *)v6();
  v125 = (id)specialized static MOSuggestionAssetReference.consolidatedType(_:)((uint64_t)v7);

  v8 = (void *)v4();
  v9 = (void *)v6();
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v12 = v11;
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  if (v10 == v13 && v12 == v14)
  {

LABEL_15:
    v18 = swift_bridgeObjectRelease_n(v12, 2);
LABEL_16:
    v55 = (void *)((uint64_t (*)(uint64_t))v4)(v18);
    v56 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeMediaCoverArt);
    v58 = v57;
    v59 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
    if (v56 == v59 && v58 == v60)
    {
      swift_bridgeObjectRelease_n(v58, 2);
    }
    else
    {
      v62 = v60;
      v63 = _stringCompareWithSmolCheck(_:_:expecting:)(v56, v58, v59, v60, 0);
      swift_bridgeObjectRelease(v58);
      swift_bridgeObjectRelease(v62);
      if ((v63 & 1) == 0)
      {
        v64 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypePhoto);
        v66 = v65;
        v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
        v69 = v67;
        if (v64 == v68 && v66 == v67)
          goto LABEL_23;
        v87 = _stringCompareWithSmolCheck(_:_:expecting:)(v64, v66, v68, v67, 0);
        swift_bridgeObjectRelease(v66);
        swift_bridgeObjectRelease(v69);
        if ((v87 & 1) != 0)
          goto LABEL_38;
        v88 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeLivePhoto);
        v66 = v89;
        v91 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
        v92 = v90;
        if (v88 == v91 && v66 == v90)
        {
LABEL_23:
          swift_bridgeObjectRelease_n(v66, 2);
        }
        else
        {
          v93 = _stringCompareWithSmolCheck(_:_:expecting:)(v88, v66, v91, v90, 0);
          swift_bridgeObjectRelease(v66);
          swift_bridgeObjectRelease(v92);
          if ((v93 & 1) == 0)
          {
            v113 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeVideo);
            v115 = v114;
            v117 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
            v118 = v116;
            if (v113 == v117 && v115 == v116)
            {

              swift_bridgeObjectRelease_n(v115, 2);
            }
            else
            {
              v119 = _stringCompareWithSmolCheck(_:_:expecting:)(v113, v115, v117, v116, 0);

              swift_bridgeObjectRelease(v115);
              swift_bridgeObjectRelease(v118);
              if ((v119 & 1) == 0)
                goto LABEL_55;
            }
LABEL_39:
            v94 = (*(uint64_t (**)(void))(*(_QWORD *)v2 + 256))();
            if (v94)
            {
              v71 = v94;
              v95 = (*(uint64_t (**)(void))(*(_QWORD *)v3 + 256))();
              if (v95)
              {
                v73 = v95;
                v96 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOPhotoResourceLocalTime"));
                v76 = v97;
                if (*(_QWORD *)(v71 + 16))
                {
                  v98 = specialized __RawDictionaryStorage.find<A>(_:)(v96, v97);
                  if ((v99 & 1) != 0)
                  {
                    v100 = *(_QWORD *)(*(_QWORD *)(v71 + 56) + 8 * v98);
                    swift_unknownObjectRetain();
                    swift_bridgeObjectRelease(v76);
                    swift_bridgeObjectRelease(v71);
                    v128 = v100;
                    if ((swift_dynamicCast(&v127, &v128, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Double, 6) & 1) != 0)
                    {
                      v101 = v127;
                      v102 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOPhotoResourceLocalTime"));
                      v83 = v103;
                      if (*(_QWORD *)(v73 + 16))
                      {
                        v104 = specialized __RawDictionaryStorage.find<A>(_:)(v102, v103);
                        if ((v105 & 1) != 0)
                        {
                          v106 = *(_QWORD *)(*(_QWORD *)(v73 + 56) + 8 * v104);
                          swift_unknownObjectRetain();
                          swift_bridgeObjectRelease(v83);
                          swift_bridgeObjectRelease(v73);

                          v128 = v106;
                          if ((swift_dynamicCast(&v127, &v128, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Double, 6) & 1) != 0)return v101 < v127;
                          return 0;
                        }
                      }
LABEL_52:
                      swift_bridgeObjectRelease(v83);
                      goto LABEL_53;
                    }
                    goto LABEL_53;
                  }
                }
                goto LABEL_48;
              }
              goto LABEL_49;
            }
            goto LABEL_55;
          }
        }
LABEL_38:

        goto LABEL_39;
      }
    }

    v70 = (*(uint64_t (**)(void))(*(_QWORD *)v2 + 256))();
    if (v70)
    {
      v71 = v70;
      v72 = (*(uint64_t (**)(void))(*(_QWORD *)v3 + 256))();
      if (v72)
      {
        v73 = v72;
        v74 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOMediaPlayMetaDataKeyPlayerStartDate"));
        v76 = v75;
        if (*(_QWORD *)(v71 + 16))
        {
          v77 = specialized __RawDictionaryStorage.find<A>(_:)(v74, v75);
          if ((v78 & 1) != 0)
          {
            v79 = *(_QWORD *)(*(_QWORD *)(v71 + 56) + 8 * v77);
            swift_unknownObjectRetain();
            swift_bridgeObjectRelease(v76);
            swift_bridgeObjectRelease(v71);
            v128 = v79;
            if ((swift_dynamicCast(&v127, &v128, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Double, 6) & 1) != 0)
            {
              v80 = v127;
              v81 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOMediaPlayMetaDataKeyPlayerStartDate"));
              v83 = v82;
              if (*(_QWORD *)(v73 + 16))
              {
                v84 = specialized __RawDictionaryStorage.find<A>(_:)(v81, v82);
                if ((v85 & 1) != 0)
                {
                  v86 = *(_QWORD *)(*(_QWORD *)(v73 + 56) + 8 * v84);
                  swift_unknownObjectRetain();
                  swift_bridgeObjectRelease(v83);
                  swift_bridgeObjectRelease(v73);

                  v128 = v86;
                  if ((swift_dynamicCast(&v127, &v128, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Double, 6) & 1) != 0)return v80 < v127;
                  return 0;
                }
              }
              goto LABEL_52;
            }
LABEL_53:
            v108 = v73;
            goto LABEL_54;
          }
        }
LABEL_48:

        swift_bridgeObjectRelease(v76);
        swift_bridgeObjectRelease(v71);
        swift_bridgeObjectRelease(v73);
        v107 = v125;
LABEL_56:

        return 0;
      }
LABEL_49:
      v108 = v71;
LABEL_54:
      swift_bridgeObjectRelease(v108);
    }
LABEL_55:

    v107 = v126;
    goto LABEL_56;
  }
  v16 = v14;
  v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v13, v14, 0);

  swift_bridgeObjectRelease(v12);
  v18 = swift_bridgeObjectRelease(v16);
  if ((v17 & 1) != 0)
    goto LABEL_16;
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v126);
  v12 = v20;
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v125);
  if (v19 == v21 && v12 == v22)
    goto LABEL_15;
  v24 = v22;
  v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v12, v21, v22, 0);
  swift_bridgeObjectRelease(v12);
  v18 = swift_bridgeObjectRelease(v24);
  if ((v25 & 1) != 0)
    goto LABEL_16;
  v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<MOSuggestionAssetsType>);
  inited = swift_initStackObject(v26, v129);
  *(_OWORD *)(inited + 16) = xmmword_1001A01C0;
  v28 = (void *)MOSuggestionAssetsTypeMultiPinMap;
  *(_QWORD *)(inited + 32) = MOSuggestionAssetsTypeMultiPinMap;
  v120 = inited + 32;
  v29 = (void *)MOSuggestionAssetsTypeVideo;
  v30 = (void *)MOSuggestionAssetsTypeLivePhoto;
  *(_QWORD *)(inited + 40) = MOSuggestionAssetsTypeVideo;
  *(_QWORD *)(inited + 48) = v30;
  v31 = (void *)MOSuggestionAssetsTypePhoto;
  v32 = (void *)MOSuggestionAssetsTypeWorkoutGroup;
  *(_QWORD *)(inited + 56) = MOSuggestionAssetsTypePhoto;
  *(_QWORD *)(inited + 64) = v32;
  v121 = (void *)MOSuggestionAssetsTypeWorkout;
  v33 = MOSuggestionAssetsTypeContactPhoto;
  v123 = (void *)MOSuggestionAssetsTypeContactPhoto;
  *(_QWORD *)(inited + 72) = MOSuggestionAssetsTypeWorkout;
  *(_QWORD *)(inited + 80) = v33;
  v122 = (void *)MOSuggestionAssetsTypeMotionActivity;
  v34 = MOSuggestionAssetsTypeGenericMap;
  v124 = (void *)MOSuggestionAssetsTypeGenericMap;
  *(_QWORD *)(inited + 88) = MOSuggestionAssetsTypeMotionActivity;
  *(_QWORD *)(inited + 96) = v34;
  v35 = (void *)MOSuggestionAssetsTypeMediaCoverArt;
  *(_QWORD *)(inited + 104) = MOSuggestionAssetsTypeMediaCoverArt;
  v36 = v28;
  v37 = v29;
  v38 = v30;
  v39 = v31;
  v40 = v32;
  v41 = v121;
  v42 = v123;
  v43 = v122;
  v44 = v124;
  v45 = (void *)((uint64_t (*)(void *))v4)(v35);
  v46 = specialized Collection<>.firstIndex(of:)((uint64_t)v45, inited);
  v48 = v47;

  if ((v48 & 1) == 0)
  {
    v49 = (void *)v6();
    v50 = specialized Collection<>.firstIndex(of:)((uint64_t)v49, inited);
    v52 = v51;

    if ((v52 & 1) == 0)
    {

      swift_setDeallocating(inited);
      type metadata accessor for MOSuggestionAssetsType(0);
      swift_arrayDestroy(v120, 10, v53);
      return v46 < v50;
    }
  }
  v109 = (void *)v6();
  specialized Collection<>.firstIndex(of:)((uint64_t)v109, inited);
  v111 = v110;

  swift_setDeallocating(inited);
  type metadata accessor for MOSuggestionAssetsType(0);
  swift_arrayDestroy(v120, 10, v112);
  return (v111 & 1) == 0;
}

void *MOEventBundle.uniqueAssetTypes.getter()
{
  uint64_t v0;
  void *result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;

  v0 = (unint64_t)MOEventBundle.orderedAssetReferencesForPreview(max:)(13);
  result = &_swiftEmptySetSingleton;
  if (!v0)
    return result;
  v8 = &_swiftEmptySetSingleton;
  if (!((unint64_t)v0 >> 62))
  {
    v2 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_4;
LABEL_15:
    swift_bridgeObjectRelease(v0);
    return &_swiftEmptySetSingleton;
  }
  if (v0 >= 0)
    v6 = v0 & 0xFFFFFFFFFFFFFF8;
  else
    v6 = v0;
  result = (void *)_CocoaArrayWrapper.endIndex.getter(v6);
  v2 = (uint64_t)result;
  if (!result)
    goto LABEL_15;
LABEL_4:
  if (v2 < 1)
  {
    __break(1u);
  }
  else
  {
    v3 = 0;
    do
    {
      if ((v0 & 0xC000000000000001) != 0)
      {
        v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v0);
      }
      else
      {
        v4 = *(_QWORD *)(v0 + 8 * v3 + 32);
        swift_retain(v4);
      }
      ++v3;
      v5 = (void *)(*(uint64_t (**)(void))(*(_QWORD *)v4 + 120))();
      specialized Set._Variant.insert(_:)(&v7, v5);
      swift_release(v4);

    }
    while (v2 != v3);
    swift_bridgeObjectRelease(v0);
    return v8;
  }
  return result;
}

id MOResource.photoType.getter()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  Class isa;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  char v33;
  id *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  _QWORD v50[2];
  id v51[4];

  v1 = v0;
  v2 = objc_msgSend(v0, "data");
  if (v2)
  {
    v3 = v2;
    v4 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    v6 = v5;

    v7 = (void *)objc_opt_self(NSJSONSerialization);
    isa = Data._bridgeToObjectiveC()().super.isa;
    v51[0] = 0;
    v9 = objc_msgSend(v7, "JSONObjectWithData:options:error:", isa, 0, v51);

    v10 = v51[0];
    if (v9)
    {
      v11 = v51[0];
      _bridgeAnyObjectToAny(_:)(v51, v9);
      outlined consume of Data._Representation(v4, v6);
      swift_unknownObjectRelease(v9);
      v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Swift.AnyObject]);
      if ((swift_dynamicCast(v50, v51, (char *)&type metadata for Any + 8, v12, 6) & 1) != 0)
      {
        v13 = v50[0];
        v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOPhotoResourceTypeKey"));
        v16 = v15;
        if (*(_QWORD *)(v13 + 16) && (v17 = specialized __RawDictionaryStorage.find<A>(_:)(v14, v15), (v18 & 1) != 0))
        {
          v19 = *(void **)(*(_QWORD *)(v13 + 56) + 8 * v17);
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease(v16);
          swift_bridgeObjectRelease(v13);
          v51[0] = v19;
          type metadata accessor for MOPhotoResourceType(0);
          if ((swift_dynamicCast(v50, v51, (char *)&type metadata for Swift.AnyObject + 8, v20, 6) & 1) != 0)
          {
            v21 = (void *)v50[0];
            v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOPhotoResourceTypeStillPhoto[0]);
            v24 = v23;
            v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
            v27 = v25;
            if (v22 == v26 && v24 == v25)
            {
              swift_bridgeObjectRelease_n(v24, 2);
LABEL_15:
              v34 = (id *)&MOSuggestionAssetsTypePhoto;
LABEL_21:
              v31 = *v34;

              return v31;
            }
            v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v26, v25, 0);
            swift_bridgeObjectRelease(v24);
            swift_bridgeObjectRelease(v27);
            if ((v33 & 1) != 0)
              goto LABEL_15;
            v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOPhotoResourceTypeLivePhoto[0]);
            v37 = v36;
            v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
            v40 = v38;
            if (v35 == v39 && v37 == v38)
            {
              swift_bridgeObjectRelease_n(v37, 2);
LABEL_20:
              v34 = (id *)&MOSuggestionAssetsTypeLivePhoto;
              goto LABEL_21;
            }
            v41 = _stringCompareWithSmolCheck(_:_:expecting:)(v35, v37, v39, v38, 0);
            swift_bridgeObjectRelease(v37);
            swift_bridgeObjectRelease(v40);
            if ((v41 & 1) != 0)
              goto LABEL_20;
            v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOPhotoResourceTypeVideo[0]);
            v44 = v43;
            v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
            v47 = v45;
            if (v42 == v46 && v44 == v45)
            {
              swift_bridgeObjectRelease_n(v44, 2);
LABEL_26:
              v34 = (id *)&MOSuggestionAssetsTypeVideo;
              goto LABEL_21;
            }
            v48 = _stringCompareWithSmolCheck(_:_:expecting:)(v42, v44, v46, v45, 0);
            swift_bridgeObjectRelease(v44);
            swift_bridgeObjectRelease(v47);
            if ((v48 & 1) != 0)
              goto LABEL_26;

            return 0;
          }
        }
        else
        {
          swift_bridgeObjectRelease(v16);
          swift_bridgeObjectRelease(v13);
        }
      }
    }
    else
    {
      v28 = v51[0];
      v29 = _convertNSErrorToError(_:)(v10);

      swift_willThrow();
      outlined consume of Data._Representation(v4, v6);
      swift_errorRelease(v29);
    }
  }
  v30 = objc_msgSend(v1, "assets");
  if (!v30)
    return 0;

  v31 = (id)MOSuggestionAssetsTypePhoto;
  v32 = MOSuggestionAssetsTypePhoto;
  return v31;
}

Swift::Bool __swiftcall MOEventBundle.isSingleAssetType()()
{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  uint64_t v13;
  void *v14;
  uint64_t (*v15)(void);
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char v24;
  uint64_t v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  id v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  Swift::Bool v38;
  uint64_t v40;
  unint64_t v41;
  uint64_t (*v42)(void);
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  char v52;
  uint64_t v53;
  id v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  id v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint8_t *v73;
  uint64_t v74;
  uint64_t v75;

  v2 = v0;
  v3 = type metadata accessor for UUID(0);
  v69 = *(_QWORD *)(v3 - 8);
  v70 = v3;
  __chkstk_darwin(v3);
  v68 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t)MOEventBundle._orderedAssetReferences()();
  if (!v5)
  {
LABEL_17:
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
      goto LABEL_44;
    goto LABEL_18;
  }
  v6 = v5;
  v7 = v5 & 0xFFFFFFFFFFFFFF8;
  if ((unint64_t)v5 >> 62)
  {
    if (v5 >= 0)
      v5 &= 0xFFFFFFFFFFFFFF8uLL;
    v8 = _CocoaArrayWrapper.endIndex.getter(v5);
    if (!v8)
      goto LABEL_16;
  }
  else
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v8)
    {
LABEL_16:
      swift_bridgeObjectRelease(v6);
      goto LABEL_17;
    }
  }
  v71 = v6 & 0xC000000000000001;
  v72 = v8;
  if ((v6 & 0xC000000000000001) != 0)
  {
    v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
    v12 = *(uint64_t (**)(void))(*(_QWORD *)v11 + 120);
    v1 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
    v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 120))(v1);
  }
  else
  {
    if (!*(_QWORD *)(v7 + 16))
    {
      __break(1u);
      goto LABEL_51;
    }
    v1 = *(_QWORD *)(v6 + 32);
    v9 = *(uint64_t (**)(void))(*(_QWORD *)v1 + 120);
    v10 = swift_retain_n(v1);
    v11 = v1;
    v12 = v9;
    v13 = ((uint64_t (*)(uint64_t))v9)(v10);
  }
  v14 = (void *)v13;
  v73 = (uint8_t *)v11;
  v15 = v12;
  v16 = (void *)v12();
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v19 = v18;
  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  if (v17 == v20 && v19 == v21)
  {

    swift_bridgeObjectRelease_n(v19, 2);
  }
  else
  {
    v23 = v21;
    v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v19, v20, v21, 0);

    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v23);
    if ((v24 & 1) == 0)
    {
LABEL_37:
      swift_bridgeObjectRelease(v6);
      if (serverManager._connectionProperties == (NSMutableDictionary *)-1)
      {
LABEL_38:
        v53 = type metadata accessor for Logger(0);
        __swift_project_value_buffer(v53, (uint64_t)static MOAngelLogger.assets);
        v54 = v2;
        v55 = Logger.logObject.getter(v54);
        v56 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v55, v56))
        {
          v57 = (uint8_t *)swift_slowAlloc(12, -1);
          v72 = swift_slowAlloc(32, -1);
          v75 = v72;
          *(_DWORD *)v57 = 136315138;
          v71 = (unint64_t)(v57 + 4);
          v58 = objc_msgSend(v54, "bundleIdentifier");
          v59 = v68;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)(v58);

          v60 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
          v61 = v70;
          v62 = dispatch thunk of CustomStringConvertible.description.getter(v70, v60);
          v64 = v63;
          (*(void (**)(char *, uint64_t))(v69 + 8))(v59, v61);
          v74 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v62, v64, &v75);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v74, &v75, v71);

          swift_bridgeObjectRelease(v64);
          _os_log_impl((void *)&_mh_execute_header, v55, v56, "[MOEventBundle] isSingleAssetType=false bundleIdentifier=%s", v57, 0xCu);
          v65 = v72;
          swift_arrayDestroy(v72, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v65, -1, -1);
          swift_slowDealloc(v57, -1, -1);

          swift_release(v73);
          swift_release(v1);
        }
        else
        {

          swift_release(v73);
          swift_release(v1);

        }
        return 0;
      }
LABEL_51:
      swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
      goto LABEL_38;
    }
  }
  v66 = v2;
  v67 = v7;
  swift_release(v1);
  if (v72 == 1)
  {
LABEL_15:
    swift_release(v73);
    v2 = v66;
    goto LABEL_16;
  }
  v40 = 5;
  while (1)
  {
    v41 = v40 - 4;
    if (!v71)
      break;
    v1 = specialized _ArrayBuffer._getElementSlowPath(_:)(v40 - 4, v6);
    v42 = v15;
    v2 = (void *)(v40 - 3);
    if (__OFADD__(v41, 1))
      goto LABEL_42;
LABEL_31:
    v43 = (void *)(*(uint64_t (**)(void))(*(_QWORD *)v1 + 120))();
    v44 = (void *)v42();
    v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
    v47 = v46;
    v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
    if (v45 == v48 && v47 == v49)
    {

      swift_bridgeObjectRelease_n(v47, 2);
    }
    else
    {
      v51 = v49;
      v52 = _stringCompareWithSmolCheck(_:_:expecting:)(v45, v47, v48, v49, 0);

      swift_bridgeObjectRelease(v47);
      swift_bridgeObjectRelease(v51);
      if ((v52 & 1) == 0)
      {
        v2 = v66;
        goto LABEL_37;
      }
    }
    swift_release(v1);
    ++v40;
    if (v2 == (void *)v72)
      goto LABEL_15;
  }
  if (v41 >= *(_QWORD *)(v67 + 16))
    goto LABEL_43;
  v42 = v15;
  v1 = *(_QWORD *)(v6 + 8 * v40);
  swift_retain(v1);
  v2 = (void *)(v40 - 3);
  if (!__OFADD__(v41, 1))
    goto LABEL_31;
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
LABEL_18:
  v25 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v25, (uint64_t)static MOAngelLogger.assets);
  v26 = v2;
  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)swift_slowAlloc(12, -1);
    v30 = swift_slowAlloc(32, -1);
    v75 = v30;
    *(_DWORD *)v29 = 136315138;
    v73 = v29 + 4;
    v31 = objc_msgSend(v26, "bundleIdentifier");
    v32 = v68;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v31);

    v33 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v34 = v70;
    v35 = dispatch thunk of CustomStringConvertible.description.getter(v70, v33);
    v37 = v36;
    (*(void (**)(char *, uint64_t))(v69 + 8))(v32, v34);
    v74 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v37, &v75);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v74, &v75, v73);

    swift_bridgeObjectRelease(v37);
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "[MOEventBundle] isSingleAssetType=true bundleIdentifier=%s", v29, 0xCu);
    v38 = 1;
    swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1, -1);
    swift_slowDealloc(v29, -1, -1);

  }
  else
  {

    return 1;
  }
  return v38;
}

uint64_t digest(input:)(void *a1)
{
  uint64_t v2;
  unsigned __int8 *v3;
  id v4;
  id v5;
  unint64_t v6;
  id v7;
  uint64_t result;

  v2 = static Array._allocateBufferUninitialized(minimumCapacity:)(32, &type metadata for UInt8);
  *(_QWORD *)(v2 + 16) = 32;
  *(_OWORD *)(v2 + 32) = 0u;
  v3 = (unsigned __int8 *)(v2 + 32);
  *(_OWORD *)(v2 + 48) = 0u;
  v4 = objc_retainAutorelease(a1);
  v5 = objc_msgSend(v4, "bytes");
  v6 = (unint64_t)objc_msgSend(v4, "length");
  if ((v6 & 0x8000000000000000) != 0)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, 2, 3451, 0);
  }
  else
  {
    if (!HIDWORD(v6))
    {
      CC_SHA256(v5, v6, v3);
      v7 = objc_msgSend(objc_allocWithZone((Class)NSData), "initWithBytes:length:", v3, 32);
      swift_bridgeObjectRelease(v2);
      return (uint64_t)v7;
    }
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Not enough bits to represent the passed value", 45, 2, "Swift/Integers.swift", 20, 2, 3455, 0);
  }
  __break(1u);
  return result;
}

uint64_t hexStringFromData(input:)(void *a1)
{
  double *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  Swift::String v9;
  void *object;

  v2 = (double *)specialized Array.init(repeating:count:)(0, (size_t)objc_msgSend(a1, "length"));
  v3 = objc_msgSend(a1, "length");
  if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
    v2 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((_QWORD *)v2 + 2), 0, v2);
  objc_msgSend(a1, "getBytes:length:", v2 + 4, v3);
  v4 = *((_QWORD *)v2 + 2);
  if (v4)
  {
    v5 = 0;
    do
    {
      v6 = *((_BYTE *)v2 + v5++ + 32);
      v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v8 = swift_allocObject(v7, 72, 7);
      *(_OWORD *)(v8 + 16) = xmmword_10019ED20;
      *(_QWORD *)(v8 + 56) = &type metadata for UInt8;
      *(_QWORD *)(v8 + 64) = &protocol witness table for UInt8;
      *(_BYTE *)(v8 + 32) = v6;
      v9._countAndFlagsBits = String.init(format:_:)(2016555045, 0xE400000000000000, v8);
      object = v9._object;
      String.append(_:)(v9);
      swift_bridgeObjectRelease(object);
    }
    while (v4 != v5);
  }
  swift_bridgeObjectRelease(v2);
  return 0;
}

id @nonobjc MOSuggestionAssetMediaItem.init(title:albumTitle:artistName:albumArt:trackIdentifier:previewURL:mediaType:imageURL:bgColor:bgColorVariant:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  NSString v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(uint64_t, uint64_t, uint64_t);
  NSURL *v22;
  void *v23;
  void *v24;
  NSURL *v25;
  void *v26;
  void *v27;
  id v28;
  NSString v30;
  NSString v31;
  void *v32;
  void *v33;
  NSString v34;

  v31 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  v34 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a6);
  v33 = a7;
  if (a9)
  {
    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a9);
  }
  else
  {
    v18 = 0;
  }
  v19 = type metadata accessor for URL(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  v23 = 0;
  if (v21(a10, 1, v19) != 1)
  {
    URL._bridgeToObjectiveC()(v22);
    v23 = v24;
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(a10, v19);
  }
  if (v21(a12, 1, v19) == 1)
  {
    v26 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v25);
    v26 = v27;
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(a12, v19);
  }
  v28 = objc_msgSend(v32, "initTitle:albumTitle:artistName:albumArt:trackIdentifier:previewURL:mediaType:imageURL:bgColor:bgColorVariant:", v31, v30, v34, v33, v18, v23, a11, v26, a13, a14);

  return v28;
}

uint64_t specialized _merge<A>(low:mid:high:buffer:by:)(void **__src, id *a2, unint64_t a3, void **a4)
{
  id *v5;
  void **v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  void **v14;
  void *v15;
  id v16;
  id v17;
  double v18;
  double v19;
  double v20;
  double v21;
  id *v22;
  id *v23;
  id *v24;
  void **v25;
  id *v26;
  id *v27;
  void *v28;
  id v29;
  id v30;
  double v31;
  double v32;
  double v33;
  double v34;
  uint64_t result;
  char *v37;
  void **v38;
  id *v39;

  v5 = a2;
  v6 = __src;
  v7 = (char *)a2 - (char *)__src;
  v8 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v8 = (char *)a2 - (char *)__src;
  v9 = v8 >> 3;
  v10 = a3 - (_QWORD)a2;
  v11 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v11 = a3 - (_QWORD)a2;
  v12 = v11 >> 3;
  v39 = __src;
  v38 = a4;
  if (v9 >= v11 >> 3)
  {
    if (v10 < -7)
      goto LABEL_46;
    if (a4 != a2 || &a2[v12] <= a4)
      memmove(a4, a2, 8 * v12);
    v23 = &a4[v12];
    v37 = (char *)v23;
    v39 = v5;
    if (v6 >= v5 || v10 < 8)
      goto LABEL_45;
    v24 = (id *)(a3 - 8);
    v25 = v5;
    while (1)
    {
      v26 = v24 + 1;
      v27 = v23 - 1;
      v28 = *--v25;
      v29 = *(v23 - 1);
      v30 = v28;
      objc_msgSend(v29, "priorityScore");
      v32 = v31;
      objc_msgSend(v30, "priorityScore");
      v34 = v33;

      if (v32 < v34)
        break;
      v37 = (char *)(v23 - 1);
      if (v26 < v23 || v24 >= v23)
      {
        *v24 = *v27;
        v25 = v5;
        --v23;
        goto LABEL_43;
      }
      if (v26 != v23)
        *v24 = *v27;
      v25 = v5;
      --v23;
      if (v5 <= v6)
        goto LABEL_45;
LABEL_44:
      --v24;
      v5 = v25;
      if (v23 <= a4)
        goto LABEL_45;
    }
    if (v26 != v5 || v24 >= v5)
      *v24 = *v25;
    v39 = v25;
LABEL_43:
    if (v25 <= v6)
      goto LABEL_45;
    goto LABEL_44;
  }
  if (v7 >= -7)
  {
    if (a4 != __src || &__src[v9] <= a4)
      memmove(a4, __src, 8 * v9);
    v13 = &a4[v9];
    v37 = (char *)v13;
    if ((unint64_t)v5 < a3 && v7 >= 8)
    {
      v14 = a4;
      do
      {
        v15 = *v14;
        v16 = *v5;
        v17 = v15;
        objc_msgSend(v16, "priorityScore");
        v19 = v18;
        objc_msgSend(v17, "priorityScore");
        v21 = v20;

        if (v19 >= v21)
        {
          if (v6 != v14)
            *v6 = *v14;
          v38 = ++v14;
          v22 = v5;
        }
        else
        {
          v22 = v5 + 1;
          if (v6 < v5 || v6 >= v22 || v6 != v5)
            *v6 = *v5;
        }
        ++v6;
        if (v14 >= v13)
          break;
        v5 = v22;
      }
      while ((unint64_t)v22 < a3);
      v39 = v6;
    }
LABEL_45:
    specialized $defer #1 <A>() in _merge<A>(low:mid:high:buffer:by:)((void **)&v39, (const void **)&v38, &v37);
    return 1;
  }
LABEL_46:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

char *specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Range<Int>>);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 16 * v8);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

uint64_t specialized $defer #1 <A>() in _merge<A>(low:mid:high:buffer:by:)(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return specialized $defer #1 <A>() in _merge<A>(low:mid:high:buffer:by:)(a1, a2, a3, type metadata accessor for MOSuggestionAssetMapsClusterer.Cluster);
}

{
  return specialized $defer #1 <A>() in _merge<A>(low:mid:high:buffer:by:)(a1, a2, a3, type metadata accessor for MOSuggestionSheetAssetDateRange);
}

char *specialized $defer #1 <A>() in _merge<A>(low:mid:high:buffer:by:)(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;
  char v9;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    v9 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v9, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;
  char v9;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 31;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -32)
  {
    v9 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v9, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 5;
    if (result != v3 || result >= &v3[32 * v7])
      return (char *)memmove(result, v3, 32 * v7);
  }
  return result;
}

{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;
  char v9;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    v9 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v9, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

uint64_t specialized $defer #1 <A>() in _merge<A>(low:mid:high:buffer:by:)(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  v4 = *a1;
  v5 = *a2;
  v6 = *a3;
  result = a4(0);
  v8 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1)
    goto LABEL_14;
  if (v9 / v8 < 0)
  {
LABEL_15:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
    return swift_arrayInitWithTakeFrontToBack(v4, v5);
  if (v4 != v5)
    return swift_arrayInitWithTakeBackToFront(v4, v5);
  return result;
}

char *specialized _ArrayBuffer._consumeAndCreateNew()(uint64_t a1)
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t type metadata accessor for MOSuggestionAssetCacheWorkoutInput(uint64_t a1)
{
  uint64_t result;

  result = type metadata singleton initialization cache for MOSuggestionAssetCacheWorkoutInput;
  if (!type metadata singleton initialization cache for MOSuggestionAssetCacheWorkoutInput)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MOSuggestionAssetCacheWorkoutInput);
  return result;
}

uint64_t sub_1001840F0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100184114()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100184138()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));

  return swift_deallocObject(v0, 80, 7);
}

void partial apply for closure #2 in MOSuggestionAssetCacheManager.getPredefinedAppBgColorDict(predefinedColors:colorFallbackValue:)(UIImage a1)
{
  uint64_t v1;

  closure #2 in MOSuggestionAssetCacheManager.getPredefinedAppBgColorDict(predefinedColors:colorFallbackValue:)(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(void **)(v1 + 56), *(_QWORD *)(v1 + 64), *(dispatch_group_t *)(v1 + 72));
}

double block_copy_helper_42(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t block_destroy_helper_42(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1001841CC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001841DC()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[6]);
  swift_release(v0[7]);
  swift_bridgeObjectRelease(v0[8]);
  swift_release(v0[10]);
  return swift_deallocObject(v0, 88, 7);
}

double partial apply for closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)()
{
  uint64_t v0;

  return closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(void **)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(void (**)(double *, __n128))(v0 + 72), *(_QWORD **)(v0 + 80));
}

void partial apply for closure #1 in MOSuggestionAssetCacheManager.preCache(_:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in MOSuggestionAssetCacheManager.preCache(_:)(a1, *(void **)(v1 + 16));
}

uint64_t outlined consume of Data?(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return outlined consume of Data._Representation(result, a2);
  return result;
}

unint64_t lazy protocol witness table accessor for type MOSuggestionAssetCacheManager.CachedAssetCost and conformance MOSuggestionAssetCacheManager.CachedAssetCost()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MOSuggestionAssetCacheManager.CachedAssetCost and conformance MOSuggestionAssetCacheManager.CachedAssetCost;
  if (!lazy protocol witness table cache variable for type MOSuggestionAssetCacheManager.CachedAssetCost and conformance MOSuggestionAssetCacheManager.CachedAssetCost)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MOSuggestionAssetCacheManager.CachedAssetCost, &type metadata for MOSuggestionAssetCacheManager.CachedAssetCost);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionAssetCacheManager.CachedAssetCost and conformance MOSuggestionAssetCacheManager.CachedAssetCost);
  }
  return result;
}

uint64_t destroy for AppBgColor(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
}

uint64_t initializeWithCopy for AppBgColor(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for AppBgColor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AppBgColor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v4);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppBgColor(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppBgColor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppBgColor()
{
  return &type metadata for AppBgColor;
}

uint64_t *initializeBufferWithCopyOfBuffer for MOSuggestionAssetCacheWorkoutInput(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v11);
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v12 = a3[5];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    if (v9((uint64_t *)((char *)a2 + v12), 1, v7))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
    v16 = a3[6];
    v17 = a3[7];
    v18 = (char *)a1 + v16;
    v19 = (char *)a2 + v16;
    *(_QWORD *)v18 = *(_QWORD *)v19;
    v18[8] = v19[8];
    *((_BYTE *)a1 + v17) = *((_BYTE *)a2 + v17);
  }
  return a1;
}

uint64_t destroy for MOSuggestionAssetCacheWorkoutInput(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t result;

  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v7 = a1 + *(int *)(a2 + 20);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v7, 1, v4);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  return result;
}

char *initializeWithCopy for MOSuggestionAssetCacheWorkoutInput(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = a3[5];
  v11 = &a1[v10];
  v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  v14 = a3[6];
  v15 = a3[7];
  v16 = &a1[v14];
  v17 = &a2[v14];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v16[8] = v17[8];
  a1[v15] = a2[v15];
  return a1;
}

char *assignWithCopy for MOSuggestionAssetCacheWorkoutInput(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = v8(&a1[v12], 1, v6);
  v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
LABEL_13:
  v18 = a3[6];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = *(_QWORD *)v20;
  v19[8] = v20[8];
  *(_QWORD *)v19 = v21;
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

char *initializeWithTake for MOSuggestionAssetCacheWorkoutInput(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = a3[5];
  v11 = &a1[v10];
  v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  v14 = a3[6];
  v15 = a3[7];
  v16 = &a1[v14];
  v17 = &a2[v14];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v16[8] = v17[8];
  a1[v15] = a2[v15];
  return a1;
}

char *assignWithTake for MOSuggestionAssetCacheWorkoutInput(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = v8(&a1[v12], 1, v6);
  v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
LABEL_13:
  v18 = a3[6];
  v19 = a3[7];
  v20 = &a1[v18];
  v21 = &a2[v18];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v20[8] = v21[8];
  a1[v19] = a2[v19];
  return a1;
}

uint64_t getEnumTagSinglePayload for MOSuggestionAssetCacheWorkoutInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100184CF0);
}

uint64_t sub_100184CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;
  int v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 2)
    v10 = ((v9 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v10 = -2;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for MOSuggestionAssetCacheWorkoutInput(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100184D98);
}

uint64_t sub_100184D98(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 28)) = a2 + 2;
  return result;
}

void type metadata completion function for MOSuggestionAssetCacheWorkoutInput(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  type metadata accessor for Date?(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = v4[0];
    v4[2] = "\t";
    v4[3] = &unk_1001A4320;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

uint64_t type metadata accessor for MOSuggestionAssetCacheManager()
{
  return objc_opt_self(_TtC16MomentsUIService29MOSuggestionAssetCacheManager);
}

uint64_t storeEnumTagSinglePayload for MOSuggestionAssetCacheManager.CachedAssetCost(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100184EFC + 4 * byte_1001A4205[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100184F30 + 4 * byte_1001A4200[v4]))();
}

uint64_t sub_100184F30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100184F38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100184F40);
  return result;
}

uint64_t sub_100184F4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100184F54);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100184F58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100184F60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MOSuggestionAssetCacheManager.CachedAssetCost()
{
  return &type metadata for MOSuggestionAssetCacheManager.CachedAssetCost;
}

_QWORD *initializeBufferWithCopyOfBuffer for MOSuggestionAssetCacheManager.MOSuggestionAssetCompletionResultHolder(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  return a1;
}

uint64_t assignWithCopy for MOSuggestionAssetCacheManager.MOSuggestionAssetCompletionResultHolder(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for MOSuggestionAssetCacheManager.MOSuggestionAssetCompletionResultHolder(uint64_t a1, _QWORD *a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for MOSuggestionAssetCacheManager.MOSuggestionAssetCompletionResultHolder(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MOSuggestionAssetCacheManager.MOSuggestionAssetCompletionResultHolder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MOSuggestionAssetCacheManager.MOSuggestionAssetCompletionResultHolder()
{
  return &type metadata for MOSuggestionAssetCacheManager.MOSuggestionAssetCompletionResultHolder;
}

uint64_t specialized _ContiguousArrayBuffer._consumeAndCreateNew()(_QWORD *a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, a1[2], 0, a1);
}

{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, a1[2], 0, a1);
}

{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, a1[2], 0, a1);
}

{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, a1[2], 0, a1);
}

uint64_t specialized _ContiguousArrayBuffer._consumeAndCreateNew()(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(a1 + 16), 0, a1);
}

{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(a1 + 16), 0, a1);
}

void specialized closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(id), uint8_t *a11)
{
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  void **v25;
  void **v26;
  void *v27;
  void *v28;
  id v29;
  id *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  Class isa;
  void (*v40)(void);
  uint64_t v41;
  uint64_t v42;
  NSString v43;
  uint64_t Strong;
  uint64_t v45;
  id v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  NSString v50;
  double v51;
  uint64_t v52;
  id v53;
  __n128 v54;
  void (*v55)(id);
  _BYTE v56[24];
  _BYTE v57[24];
  _BYTE v58[24];
  _BYTE v59[24];
  _BYTE v60[24];
  _BYTE v61[24];
  _BYTE v62[32];

  v19 = (_QWORD *)(a1 + 16);
  swift_beginAccess(a1 + 16, v62, 1, 0);
  v20 = *(_QWORD *)(a1 + 16);
  v21 = __OFADD__(v20, 1);
  v22 = v20 + 1;
  if (v21)
  {
    __break(1u);
    return;
  }
  *v19 = v22;
  if (v22 == a2)
  {
    v23 = (uint64_t *)(a3 + 16);
    swift_beginAccess(v23, v61, 0, 0);
    v24 = *v23;
    if (*v23)
    {
      v25 = (void **)(a4 + 16);
      v26 = (void **)(a5 + 16);
      swift_beginAccess(v25, v60, 0, 0);
      v27 = *v25;
      swift_beginAccess(v26, v59, 0, 0);
      v28 = *v26;
      if ((a6 - 2) >= 9u)
      {
        if ((a6 & 1) != 0 || !v27)
          goto LABEL_10;
      }
      else if (!v27)
      {
LABEL_10:
        v30 = (id *)(a7 + 16);
        swift_beginAccess(v30, v58, 0, 0);
        v29 = *v30;
        goto LABEL_11;
      }
      v29 = 0;
LABEL_11:
      v55 = a10;
      v31 = objc_allocWithZone((Class)MOSuggestionAssetWorkout);
      v32 = v28;
      swift_retain(a11);
      swift_bridgeObjectRetain(v24);
      v33 = v27;
      v34 = objc_msgSend(v31, "init:route:renderedRouteMap:icon:", 0, v33, v32, v29);

      v35 = MOSuggestionAssetsTypeWorkout;
      type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetWorkout, MOSuggestionAssetWorkout_ptr);
      v36 = objc_msgSend(objc_allocWithZone((Class)MOSuggestionAsset), "init:type:contentClassType:", v34, v35, swift_getObjCClassFromMetadata());
      specialized _dictionaryUpCast<A, B, C, D>(_:)(v24);
      v38 = v37;
      swift_bridgeObjectRelease(v24);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v36, "addMetadata:", isa, swift_bridgeObjectRelease(v38).n128_f64[0]);

      v40 = *(void (**)(void))(*(_QWORD *)a8 + 288);
      v40();
      v42 = v41;
      v43 = String._bridgeToObjectiveC()();
      objc_msgSend(v36, "addIdentifier:", v43, swift_bridgeObjectRelease(v42).n128_f64[0]);

      if (a6 - 2 >= 6 && a6 - 9 >= 2)
      {
        swift_retain(a11);
        specialized static MOSuggestionAssetCacheManager.wrapWorkoutAssetInURLIfNecessary(asset:cacheType:completion:)(v36, a6, (void (*)(_QWORD))a10, a11);

        swift_release_n(a11, v54);
      }
      else
      {
        swift_beginAccess(a9 + 16, v57, 0, 0);
        Strong = swift_weakLoadStrong(a9 + 16);
        if (Strong)
        {
          v45 = Strong;
          v46 = *(id *)(Strong + 16);
          v47 = swift_release(v45);
          ((void (*)(__n128))v40)(v47);
          v49 = v48;
          v50 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v49);
          *(_QWORD *)&v51 = swift_beginAccess(v25, v56, 0, 0).n128_u64[0];
          if (*v25)
            v52 = 3;
          else
            v52 = 1;
          objc_msgSend(v46, "setObject:forKey:cost:", v36, v50, v52, v51, a10);

        }
        v53 = v36;
        v55(v36);
        swift_release(a11);

      }
    }
  }
}

uint64_t specialized static MOSuggestionAssetCacheManager.mappedLocationPreviewAssets(_:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  double v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  char v37;
  double v38;
  id v39;
  uint64_t v40;
  char v41;
  double v42;
  id v43;
  uint64_t v44;
  char v45;
  char *v46;
  uint64_t *v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *inited;
  void *v53;
  id v54;
  uint64_t v55;
  char v56;
  id v57;
  _OWORD *v58;
  _OWORD *v59;
  void *v60;
  id v61;
  uint64_t v62;
  char v63;
  id v64;
  _OWORD *v65;
  _OWORD *v66;
  void *v67;
  id v68;
  uint64_t v69;
  char v70;
  id v71;
  _OWORD *v72;
  _OWORD *v73;
  void *v74;
  id v75;
  uint64_t v76;
  char v77;
  id v78;
  _OWORD *v79;
  _OWORD *v80;
  void *v81;
  id v82;
  uint64_t v83;
  char v84;
  id v85;
  _OWORD *v86;
  _OWORD *v87;
  void *v88;
  id v89;
  uint64_t v90;
  char v91;
  id v92;
  _OWORD *v93;
  void *v94;
  id v95;
  id v96;
  uint64_t v97;
  id v98;
  _OWORD *v99;
  unint64_t v100;
  char v101;
  _OWORD *v102;
  _OWORD *v103;
  void *v104;
  id v105;
  uint64_t v106;
  char v107;
  id v108;
  _OWORD *v109;
  id v110;
  uint64_t v111;
  char v112;
  double v113;
  id v114;
  Class isa;
  _OWORD *v116;
  uint64_t v117;
  id v118;
  uint64_t ObjCClassFromMetadata;
  id v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  Class v124;
  id v125;
  unint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  _OWORD *v134;
  __int128 v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  uint64_t v149;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v2);
  v4 = (char *)&v133 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v133 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(a1, "assetType");
  v10 = MOSuggestionAssetsTypeMultiPinMap;
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v13 = v12;
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  if (v11 == v14 && v13 == v15)
  {

    swift_bridgeObjectRelease_n(v13, 2);
  }
  else
  {
    v17 = v15;
    v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v14, v15, 0);

    swift_bridgeObjectRelease(v13);
    *(_QWORD *)&v19 = swift_bridgeObjectRelease(v17).n128_u64[0];
    if ((v18 & 1) == 0)
      return 0;
  }
  v141 = v8;
  v149 = (uint64_t)_swiftEmptyArrayStorage;
  v20 = objc_msgSend(a1, "metadata", v19);
  v21 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v20, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v22 = (void *)MOSuggestionAssetMetadataKeyMultiPinMapLocations;
  v144 = MOSuggestionAssetMetadataKeyMultiPinMapLocations;
  type metadata accessor for MOSuggestionAssetMetadataKey(0);
  v24 = v23;
  v25 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionAssetMetadataKey and conformance MOSuggestionAssetMetadataKey, (uint64_t (*)(uint64_t))type metadata accessor for MOSuggestionAssetMetadataKey, (uint64_t)&protocol conformance descriptor for MOSuggestionAssetMetadataKey);
  v26 = v22;
  v139 = v25;
  v140 = v24;
  AnyHashable.init<A>(_:)(&v145, &v144, v24, v25);
  if (*(_QWORD *)(v21 + 16) && (v27 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&v145), (v28 & 1) != 0))
  {
    outlined init with copy of Any(*(_QWORD *)(v21 + 56) + 32 * v27, (uint64_t)&v147);
  }
  else
  {
    v147 = 0u;
    v148 = 0u;
  }
  swift_bridgeObjectRelease(v21);
  outlined destroy of AnyHashable((uint64_t)&v145);
  if (*((_QWORD *)&v148 + 1))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [[MOSuggestionAssetMetadataKey : Any]]);
    if ((swift_dynamicCast(&v144, &v147, (char *)&type metadata for Any + 8, v29, 6) & 1) != 0)
    {
      v138 = v6;
      v30 = v144;
      v31 = *(_QWORD *)(v144 + 16);
      if (v31)
      {
        v137 = v5;
        v32 = 0;
        v142 = (char *)&type metadata for Any + 8;
        v135 = xmmword_1001A2EC0;
        while (1)
        {
          v33 = *(_QWORD *)(v30 + 8 * v32 + 32);
          if (!*(_QWORD *)(v33 + 16))
            break;
          v34 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewVisitLatitude;
          swift_bridgeObjectRetain(*(_QWORD *)(v30 + 8 * v32 + 32));
          v35 = v34;
          v36 = specialized __RawDictionaryStorage.find<A>(_:)(v35);
          if ((v37 & 1) != 0)
          {
            outlined init with copy of Any(*(_QWORD *)(v33 + 56) + 32 * v36, (uint64_t)&v145);
          }
          else
          {
            v145 = 0u;
            v146 = 0u;
          }

          if (!*((_QWORD *)&v146 + 1))
            goto LABEL_35;
          if ((swift_dynamicCast(&v147, &v145, v142, &type metadata for Double, 6) & 1) != 0)
          {
            if (!*(_QWORD *)(v33 + 16))
            {
              v145 = 0u;
              v146 = 0u;
LABEL_35:
              swift_bridgeObjectRelease(v33);
              goto LABEL_36;
            }
            v38 = *(double *)&v147;
            v39 = MOSuggestionAssetMetadataKeyLocationPreviewVisitLongitude;
            v40 = specialized __RawDictionaryStorage.find<A>(_:)(v39);
            if ((v41 & 1) != 0)
            {
              outlined init with copy of Any(*(_QWORD *)(v33 + 56) + 32 * v40, (uint64_t)&v145);
            }
            else
            {
              v145 = 0u;
              v146 = 0u;
            }

            if (!*((_QWORD *)&v146 + 1))
              goto LABEL_35;
            if ((swift_dynamicCast(&v147, &v145, (char *)&type metadata for Any + 8, &type metadata for Double, 6) & 1) != 0)
            {
              if (*(_QWORD *)(v33 + 16))
              {
                v42 = *(double *)&v147;
                v43 = MOSuggestionAssetMetadataKeyLocationPreviewVisitStartTime;
                v44 = specialized __RawDictionaryStorage.find<A>(_:)(v43);
                if ((v45 & 1) != 0)
                {
                  outlined init with copy of Any(*(_QWORD *)(v33 + 56) + 32 * v44, (uint64_t)&v145);
                }
                else
                {
                  v145 = 0u;
                  v146 = 0u;
                }

                if (*((_QWORD *)&v146 + 1))
                {
                  v48 = v137;
                  v49 = swift_dynamicCast(v4, &v145, (char *)&type metadata for Any + 8, v137, 6);
                  v50 = v138;
                  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v138 + 56))(v4, v49 ^ 1u, 1, v48);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v4, 1, v48) != 1)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v138 + 32))(v141, v4, v137);
                    v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(MOSuggestionAssetMetadataKey, Any?)>);
                    inited = (_QWORD *)swift_initStackObject(v51, &v143);
                    *((_OWORD *)inited + 1) = v135;
                    v53 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewPlaceName;
                    v136 = inited;
                    inited[4] = MOSuggestionAssetMetadataKeyLocationPreviewPlaceName;
                    if (*(_QWORD *)(v33 + 16))
                    {
                      v134 = inited + 5;
                      v54 = v53;
                      v55 = specialized __RawDictionaryStorage.find<A>(_:)(v54);
                      if ((v56 & 1) != 0)
                      {
                        outlined init with copy of Any(*(_QWORD *)(v33 + 56) + 32 * v55, (uint64_t)v134);
                      }
                      else
                      {
                        v58 = v134;
                        *v134 = 0u;
                        v58[1] = 0u;
                      }

                    }
                    else
                    {
                      *(_OWORD *)(inited + 5) = 0u;
                      *(_OWORD *)(inited + 7) = 0u;
                      v57 = v53;
                    }
                    v59 = v136 + 10;
                    v60 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewTypeOfPlace;
                    v136[9] = MOSuggestionAssetMetadataKeyLocationPreviewTypeOfPlace;
                    if (*(_QWORD *)(v33 + 16))
                    {
                      v134 = v59;
                      v61 = v60;
                      v62 = specialized __RawDictionaryStorage.find<A>(_:)(v61);
                      if ((v63 & 1) != 0)
                      {
                        outlined init with copy of Any(*(_QWORD *)(v33 + 56) + 32 * v62, (uint64_t)v134);
                      }
                      else
                      {
                        v65 = v134;
                        *v134 = 0u;
                        v65[1] = 0u;
                      }

                    }
                    else
                    {
                      *v59 = 0u;
                      v59[1] = 0u;
                      v64 = v60;
                    }
                    v66 = v136 + 15;
                    v67 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewCityName;
                    v136[14] = MOSuggestionAssetMetadataKeyLocationPreviewCityName;
                    if (*(_QWORD *)(v33 + 16))
                    {
                      v134 = v66;
                      v68 = v67;
                      v69 = specialized __RawDictionaryStorage.find<A>(_:)(v68);
                      if ((v70 & 1) != 0)
                      {
                        outlined init with copy of Any(*(_QWORD *)(v33 + 56) + 32 * v69, (uint64_t)v134);
                      }
                      else
                      {
                        v72 = v134;
                        *v134 = 0u;
                        v72[1] = 0u;
                      }

                    }
                    else
                    {
                      *v66 = 0u;
                      v66[1] = 0u;
                      v71 = v67;
                    }
                    v73 = v136 + 20;
                    v74 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewVisitStartTime;
                    v136[19] = MOSuggestionAssetMetadataKeyLocationPreviewVisitStartTime;
                    if (*(_QWORD *)(v33 + 16))
                    {
                      v134 = v73;
                      v75 = v74;
                      v76 = specialized __RawDictionaryStorage.find<A>(_:)(v75);
                      if ((v77 & 1) != 0)
                      {
                        outlined init with copy of Any(*(_QWORD *)(v33 + 56) + 32 * v76, (uint64_t)v134);
                      }
                      else
                      {
                        v79 = v134;
                        *v134 = 0u;
                        v79[1] = 0u;
                      }

                    }
                    else
                    {
                      *v73 = 0u;
                      v73[1] = 0u;
                      v78 = v74;
                    }
                    v80 = v136 + 25;
                    v81 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewVisitEndTime;
                    v136[24] = MOSuggestionAssetMetadataKeyLocationPreviewVisitEndTime;
                    if (*(_QWORD *)(v33 + 16))
                    {
                      v134 = v80;
                      v82 = v81;
                      v83 = specialized __RawDictionaryStorage.find<A>(_:)(v82);
                      if ((v84 & 1) != 0)
                      {
                        outlined init with copy of Any(*(_QWORD *)(v33 + 56) + 32 * v83, (uint64_t)v134);
                      }
                      else
                      {
                        v86 = v134;
                        *v134 = 0u;
                        v86[1] = 0u;
                      }

                    }
                    else
                    {
                      *v80 = 0u;
                      v80[1] = 0u;
                      v85 = v81;
                    }
                    v87 = v136 + 30;
                    v88 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewVisitMapItem;
                    v136[29] = MOSuggestionAssetMetadataKeyLocationPreviewVisitMapItem;
                    if (*(_QWORD *)(v33 + 16))
                    {
                      v134 = v87;
                      v89 = v88;
                      v90 = specialized __RawDictionaryStorage.find<A>(_:)(v89);
                      if ((v91 & 1) != 0)
                      {
                        outlined init with copy of Any(*(_QWORD *)(v33 + 56) + 32 * v90, (uint64_t)v134);
                      }
                      else
                      {
                        v93 = v134;
                        *v134 = 0u;
                        v93[1] = 0u;
                      }

                    }
                    else
                    {
                      *v87 = 0u;
                      v87[1] = 0u;
                      v92 = v88;
                    }
                    v134 = v136 + 35;
                    v94 = (void *)MOSuggestionAssetMetadataKeyMultiPinMapRepresentativeArea;
                    v136[34] = MOSuggestionAssetMetadataKeyMultiPinMapRepresentativeArea;
                    v95 = v94;
                    v96 = objc_msgSend(a1, "metadata");
                    v97 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v96, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

                    *(_QWORD *)&v147 = MOSuggestionAssetMetadataKeyMultiPinMapRepresentativeArea;
                    v98 = MOSuggestionAssetMetadataKeyMultiPinMapRepresentativeArea;
                    AnyHashable.init<A>(_:)(&v145, &v147, v140, v139);
                    if (*(_QWORD *)(v97 + 16))
                    {
                      v99 = v134;
                      v100 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&v145);
                      if ((v101 & 1) != 0)
                      {
                        outlined init with copy of Any(*(_QWORD *)(v97 + 56) + 32 * v100, (uint64_t)v99);
                      }
                      else
                      {
                        *v99 = 0u;
                        v99[1] = 0u;
                      }
                    }
                    else
                    {
                      v102 = v134;
                      *v134 = 0u;
                      v102[1] = 0u;
                    }
                    swift_bridgeObjectRelease(v97);
                    outlined destroy of AnyHashable((uint64_t)&v145);
                    v103 = v136 + 40;
                    v104 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewVisitHorizontalUncertainty;
                    v136[39] = MOSuggestionAssetMetadataKeyLocationPreviewVisitHorizontalUncertainty;
                    if (*(_QWORD *)(v33 + 16))
                    {
                      v134 = v103;
                      v105 = v104;
                      v106 = specialized __RawDictionaryStorage.find<A>(_:)(v105);
                      if ((v107 & 1) != 0)
                      {
                        outlined init with copy of Any(*(_QWORD *)(v33 + 56) + 32 * v106, (uint64_t)v134);
                      }
                      else
                      {
                        v109 = v134;
                        *v134 = 0u;
                        v109[1] = 0u;
                      }

                    }
                    else
                    {
                      *v103 = 0u;
                      v103[1] = 0u;
                      v108 = v104;
                    }
                    v136 = (_QWORD *)specialized Dictionary.init(dictionaryLiteral:)((uint64_t)v136);
                    if (*(_QWORD *)(v33 + 16))
                    {
                      v110 = MOSuggestionAssetMetadataKeyLocationPreviewVisitHorizontalUncertainty;
                      v111 = specialized __RawDictionaryStorage.find<A>(_:)(v110);
                      if ((v112 & 1) != 0)
                      {
                        outlined init with copy of Any(*(_QWORD *)(v33 + 56) + 32 * v111, (uint64_t)&v145);
                      }
                      else
                      {
                        v145 = 0u;
                        v146 = 0u;
                      }

                    }
                    else
                    {
                      v145 = 0u;
                      v146 = 0u;
                    }
                    swift_bridgeObjectRelease(v33);
                    v133 = v4;
                    if (*((_QWORD *)&v146 + 1))
                    {
                      if (swift_dynamicCast(&v147, &v145, (char *)&type metadata for Any + 8, &type metadata for Double, 6))
                      {
                        v113 = *(double *)&v147;
LABEL_102:
                        v114 = objc_allocWithZone((Class)CLLocation);
                        isa = Date._bridgeToObjectiveC()().super.isa;
                        v116 = objc_msgSend(v114, "initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:", isa, v38, v42, 0.0, v113, 0.0);

                        v117 = MOSuggestionAssetsTypeLocationPreview;
                        type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for CLLocation, CLLocation_ptr);
                        v118 = objc_allocWithZone((Class)MOSuggestionAsset);
                        ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
                        v134 = v116;
                        v120 = objc_msgSend(v118, "init:type:contentClassType:", v116, v117, ObjCClassFromMetadata);
                        v121 = v136;
                        specialized _dictionaryUpCast<A, B, C, D>(_:)((uint64_t)v136);
                        v123 = v122;
                        swift_bridgeObjectRelease(v121);
                        v124 = Dictionary._bridgeToObjectiveC()().super.isa;
                        objc_msgSend(v120, "addMetadata:", v124, swift_bridgeObjectRelease(v123).n128_f64[0]);

                        v125 = v120;
                        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v125);
                        v127 = *(_QWORD *)((v149 & 0xFFFFFFFFFFFFFF8) + 0x10);
                        v126 = *(_QWORD *)((v149 & 0xFFFFFFFFFFFFFF8) + 0x18);
                        if (v127 >= v126 >> 1)
                          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v126 > 1, v127 + 1, 1);
                        v128 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v127, v125);
                        specialized Array._endMutation()(v128);

                        (*(void (**)(char *, uint64_t))(v138 + 8))(v141, v137);
                        v4 = v133;
                        goto LABEL_17;
                      }
                    }
                    else
                    {
                      outlined destroy of Any?((uint64_t)&v145, &demangling cache variable for type metadata for Any?);
                    }
                    v113 = 0.0;
                    goto LABEL_102;
                  }
LABEL_46:
                  swift_bridgeObjectRelease(v33);
                  v46 = v4;
                  v47 = (uint64_t *)&demangling cache variable for type metadata for Date?;
LABEL_37:
                  outlined destroy of Any?((uint64_t)v46, v47);
                  goto LABEL_17;
                }
              }
              else
              {
                v145 = 0u;
                v146 = 0u;
              }
              outlined destroy of Any?((uint64_t)&v145, &demangling cache variable for type metadata for Any?);
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v138 + 56))(v4, 1, 1, v137);
              goto LABEL_46;
            }
          }
          swift_bridgeObjectRelease(v33);
LABEL_17:
          if (v31 == ++v32)
            goto LABEL_106;
        }
        v145 = 0u;
        v146 = 0u;
LABEL_36:
        v46 = (char *)&v145;
        v47 = &demangling cache variable for type metadata for Any?;
        goto LABEL_37;
      }
LABEL_106:
      swift_bridgeObjectRelease(v30);
    }
  }
  else
  {
    outlined destroy of Any?((uint64_t)&v147, &demangling cache variable for type metadata for Any?);
  }
  v129 = v149;
  if ((unint64_t)v149 >> 62)
  {
    if (v149 < 0)
      v131 = v149;
    else
      v131 = v149 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v149);
    v132 = _CocoaArrayWrapper.endIndex.getter(v131);
    swift_bridgeObjectRelease(v129);
    if (v132 < 1)
      goto LABEL_109;
  }
  else if (*(uint64_t *)((v149 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
  {
LABEL_109:
    swift_bridgeObjectRelease(v129);
    return 0;
  }
  return v129;
}

uint64_t specialized MOSuggestionAssetCacheManager.isInQueryList(_:reference:)(uint64_t a1, uint64_t a2)
{
  uint64_t (*v3)(void);
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  char v28;
  id v29;
  char v30;
  id *v31;
  id v32;
  void *v33;
  char v34;
  id v36;
  char v37;
  id v38;
  char v39;
  char v40;
  __n128 v41;
  id v42;
  char v43;

  if (!a1)
    return 1;
  v3 = *(uint64_t (**)(void))(*(_QWORD *)a2 + 120);
  v4 = (void *)v3();
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypePhoto);
  v7 = v6;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  if (v5 == v8 && v7 == v9)
  {
    swift_bridgeObjectRelease_n(v7, 2);
LABEL_16:

    v27 = MOSuggestionAssetsTypePhoto;
    v28 = specialized Sequence<>.contains(_:)((uint64_t)v27, a1);

    if ((v28 & 1) != 0)
      return 1;
    v29 = MOSuggestionAssetsTypeLivePhoto;
    v30 = specialized Sequence<>.contains(_:)((uint64_t)v29, a1);

    if ((v30 & 1) != 0)
      return 1;
    v31 = (id *)&MOSuggestionAssetsTypeVideo;
    goto LABEL_19;
  }
  v11 = v9;
  v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v11);
  if ((v12 & 1) != 0)
    goto LABEL_16;
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeWorkout);
  v15 = v14;
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  if (v13 == v16 && v15 == v17)
  {
    swift_bridgeObjectRelease_n(v15, 2);
LABEL_22:

    v36 = MOSuggestionAssetsTypeWorkout;
    v37 = specialized Sequence<>.contains(_:)((uint64_t)v36, a1);

    if ((v37 & 1) != 0)
      return 1;
    v38 = MOSuggestionAssetsTypeActivityRings;
    v39 = specialized Sequence<>.contains(_:)((uint64_t)v38, a1);

    if ((v39 & 1) != 0)
      return 1;
    v31 = (id *)&MOSuggestionAssetsTypeRoutePreview;
    goto LABEL_19;
  }
  v19 = v17;
  v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, v16, v17, 0);
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v19);
  if ((v20 & 1) != 0)
    goto LABEL_22;
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeLocationPreview);
  v23 = v22;
  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v26 = v24;
  if (v21 == v25 && v23 == v24)
  {

    swift_bridgeObjectRelease_n(v23, 2);
  }
  else
  {
    v40 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v23, v25, v24, 0);

    swift_bridgeObjectRelease(v23);
    v41 = swift_bridgeObjectRelease(v26);
    if ((v40 & 1) == 0)
    {
      v32 = (id)((uint64_t (*)(__n128))v3)(v41);
      goto LABEL_20;
    }
  }
  v42 = MOSuggestionAssetsTypeLocationPreview;
  v43 = specialized Sequence<>.contains(_:)((uint64_t)v42, a1);

  if ((v43 & 1) == 0)
  {
    v31 = (id *)&MOSuggestionAssetsTypeMapSnapshot;
LABEL_19:
    v32 = *v31;
LABEL_20:
    v33 = v32;
    v34 = specialized Sequence<>.contains(_:)((uint64_t)v32, a1);

    return v34 & 1;
  }
  return 1;
}

double specialized MOSuggestionAssetCacheManager.fetchAndCachePhotoLivePhotoVideosFromProvider(_:cacheType:completion:)(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(double *, __n128), uint64_t a11)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(__n128);
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, _QWORD, void (*)(uint64_t), uint64_t, __n128);
  __n128 v31;
  double result;
  int v33;
  uint64_t v34;

  v17 = a11;
  v18 = swift_allocObject(&unk_1001ED3F0, 80, 7);
  *(_QWORD *)(v18 + 16) = a4;
  v33 = a5;
  *(_BYTE *)(v18 + 24) = a5;
  *(_QWORD *)(v18 + 32) = a6;
  *(_QWORD *)(v18 + 40) = a7;
  v34 = a7;
  *(_QWORD *)(v18 + 48) = a8;
  *(_QWORD *)(v18 + 56) = a9;
  *(_QWORD *)(v18 + 64) = a10;
  *(_QWORD *)(v18 + 72) = a11;
  v19 = swift_allocObject(&unk_1001ED418, 32, 7);
  *(_QWORD *)(v19 + 16) = partial apply for closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:);
  *(_QWORD *)(v19 + 24) = v18;
  v20 = *(uint64_t (**)(__n128))(*(_QWORD *)a1 + 264);
  swift_retain(a4);
  swift_retain(a6);
  swift_retain(a8);
  swift_bridgeObjectRetain(a9);
  swift_retain(a11);
  v21 = swift_retain(v18);
  v22 = v20(v21);
  if (v23)
  {
    v24 = v22;
    v25 = v23;
    v26 = *(_QWORD *)(a3 + 48);
    v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    v28 = swift_allocObject(v27, 48, 7);
    *(_OWORD *)(v28 + 16) = xmmword_10019ED20;
    *(_QWORD *)(v28 + 32) = v24;
    *(_QWORD *)(v28 + 40) = v25;
    v29 = swift_allocObject(&unk_1001ED050, 24, 7);
    swift_weakInit(v29 + 16);
    v17 = swift_allocObject(&unk_1001ED440, 56, 7);
    *(_QWORD *)(v17 + 16) = a1;
    *(_BYTE *)(v17 + 24) = a2;
    *(_QWORD *)(v17 + 32) = v29;
    *(_QWORD *)(v17 + 40) = partial apply for thunk for @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> ();
    *(_QWORD *)(v17 + 48) = v19;
    v30 = *(void (**)(uint64_t, _QWORD, void (*)(uint64_t), uint64_t, __n128))(*(_QWORD *)v26 + 160);
    swift_retain(a1);
    swift_retain(v29);
    v31 = swift_retain(v19);
    v30(v28, a2, partial apply for closure #1 in MOSuggestionAssetCacheManager.fetchAndCachePhotoLivePhotoVideosFromProvider(_:cacheType:completion:), v17, v31);
    swift_release(v18);
    swift_release(v19);
    swift_bridgeObjectRelease(v28);
    swift_release(v29);
  }
  else
  {
    swift_retain(a4);
    swift_retain(a6);
    swift_retain(a8);
    swift_bridgeObjectRetain(a9);
    swift_retain(a11);
    closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, a4, v33, a6, v34, a8, a9, a10);
    swift_release(v18);
    swift_release(v19);
    swift_release(a4);
    swift_release(a6);
    swift_release(a8);
    swift_bridgeObjectRelease(a9);
  }
  *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  return result;
}

double specialized MOSuggestionAssetCacheManager.fetchAndCacheRingsFromProvider(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(double *, __n128), uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, char *, _QWORD, void (*)(uint64_t, void *), _QWORD *, __n128);
  __n128 v53;
  __n128 v54;
  void (*v55)(char *, uint64_t, __n128);
  double result;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  void (*v62)(double *, __n128);
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v71 = a6;
  v72 = a8;
  v57 = a2;
  v70 = a1;
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  v15 = __chkstk_darwin(v14);
  v60 = (uint64_t)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v18 = (char *)&v57 - v17;
  v19 = type metadata accessor for Date(0);
  v68 = *(_QWORD **)(v19 - 8);
  v20 = __chkstk_darwin(v19);
  v58 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v61 = (char *)&v57 - v22;
  v59 = type metadata accessor for MOSuggestionAssetCacheWorkoutInput(0);
  __chkstk_darwin(v59);
  v24 = (char *)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = swift_allocObject(&unk_1001ED468, 80, 7);
  *(_QWORD *)(v25 + 16) = a3;
  v63 = a4;
  *(_BYTE *)(v25 + 24) = a4;
  v26 = v71;
  v27 = v72;
  *(_QWORD *)(v25 + 32) = a5;
  *(_QWORD *)(v25 + 40) = v26;
  *(_QWORD *)(v25 + 48) = a7;
  *(_QWORD *)(v25 + 56) = v27;
  v62 = a9;
  *(_QWORD *)(v25 + 64) = a9;
  *(_QWORD *)(v25 + 72) = a10;
  v28 = swift_allocObject(&unk_1001ED490, 32, 7);
  *(_QWORD *)(v28 + 16) = partial apply for closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:);
  *(_QWORD *)(v28 + 24) = v25;
  v69 = v28;
  v64 = a3;
  swift_retain(a3);
  v65 = a5;
  swift_retain(a5);
  v66 = a7;
  swift_retain(a7);
  swift_bridgeObjectRetain(v27);
  v67 = a10;
  swift_retain(a10);
  swift_retain(v25);
  swift_retain(v70);
  v29 = v68;
  MOSuggestionAssetCacheWorkoutInput.init(_:)(v30, (uint64_t)v24);
  outlined init with copy of Date?((uint64_t)v24, (uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for Date?);
  v31 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v29[6];
  if (v31((uint64_t)v18, 1, v19) == 1)
  {
    v32 = (uint64_t)v18;
  }
  else
  {
    v33 = (uint64_t)v24;
    v34 = (void (*)(char *, char *, uint64_t))v29[4];
    v35 = v61;
    v36 = v18;
    v37 = v19;
    v34(v61, v36, v19);
    v32 = v60;
    outlined init with copy of Date?(v33 + *(int *)(v59 + 20), v60, (uint64_t *)&demangling cache variable for type metadata for Date?);
    if (v31(v32, 1, v19) != 1)
    {
      v44 = v58;
      v34(v58, (char *)v32, v19);
      v45 = type metadata accessor for MOSuggestionAssetActivityRingsProvider(0);
      swift_allocObject(v45, *(unsigned int *)(v45 + 48), *(unsigned __int16 *)(v45 + 52));
      v46 = MOSuggestionAssetActivityRingsProvider.init()();
      v47 = swift_allocObject(&unk_1001ED050, 24, 7);
      swift_weakInit(v47 + 16);
      v48 = swift_allocObject(&unk_1001ED4B8, 48, 7);
      v72 = v33;
      v49 = (_QWORD *)v48;
      v51 = v69;
      v50 = v70;
      v49[2] = v70;
      v49[3] = v47;
      v49[4] = partial apply for specialized closure #1 in MOAngelControllerWrapper.continuationWrapper<A>(action:);
      v49[5] = v51;
      v52 = *(void (**)(char *, char *, _QWORD, void (*)(uint64_t, void *), _QWORD *, __n128))(*(_QWORD *)v46 + 304);
      swift_retain(v50);
      swift_retain(v47);
      v53 = swift_retain(v51);
      v52(v35, v44, 0, partial apply for closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheRingsFromProvider(_:completion:), v49, v53);
      swift_release(v46);
      v54 = swift_release(v49);
      v55 = (void (*)(char *, uint64_t, __n128))v29[1];
      v55(v44, v37, v54);
      ((void (*)(char *, uint64_t))v55)(v35, v37);
      outlined destroy of MOSuggestionAssetCacheWorkoutInput(v72);
      swift_release(v25);
      swift_release(v51);
      v43 = v47;
      goto LABEL_7;
    }
    ((void (*)(char *, uint64_t))v29[1])(v35, v19);
    v24 = (char *)v33;
  }
  outlined destroy of Any?(v32, (uint64_t *)&demangling cache variable for type metadata for Date?);
  v38 = v64;
  swift_retain(v64);
  v39 = v65;
  swift_retain(v65);
  v40 = v66;
  swift_retain(v66);
  v41 = v72;
  swift_bridgeObjectRetain(v72);
  v42 = v67;
  swift_retain(v67);
  closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, v38, v63, v39, v71, v40, v41, v62);
  swift_release(v38);
  swift_release(v39);
  swift_release(v40);
  swift_bridgeObjectRelease(v41);
  swift_release(v42);
  outlined destroy of MOSuggestionAssetCacheWorkoutInput((uint64_t)v24);
  swift_release(v25);
  v43 = v69;
LABEL_7:
  *(_QWORD *)&result = swift_release(v43).n128_u64[0];
  return result;
}

double specialized MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:)(uint64_t a1, int a2, void *a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(double *, __n128), uint64_t a11)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(void);
  void *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  double result;
  uint64_t v60;
  _QWORD *v61;
  void (*v62)(char *, char *, uint64_t);
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(_QWORD, _QWORD, _QWORD);
  unsigned int v68;
  _QWORD *v69;
  uint64_t *v70;
  char *v71;
  char *v72;
  int v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  double v88;
  id v89;
  _QWORD *v90;
  uint8_t *v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  id v95;
  _QWORD *v96;
  void (*v97)(char *, char *, uint64_t);
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  void (*v108)(uint64_t, char *, uint64_t);
  void (**v109)();
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  __n128 v119;
  void (*v120)(char *, uint64_t, __n128);
  __n128 v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  int v130;
  char *v131;
  uint64_t v132;
  uint64_t *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  _QWORD *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t inited;
  char *v144;
  uint8_t *v145;
  uint64_t v146;
  uint64_t v147;
  void (*v148)(double *, __n128);
  char v149[32];
  char v150[8];

  v125 = a3;
  v130 = a2;
  v148 = a10;
  v142 = a9;
  inited = a11;
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  v18 = __chkstk_darwin(v17);
  v133 = (uint64_t *)((char *)&v122 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v18);
  v144 = (char *)&v122 - v20;
  v135 = type metadata accessor for Date(0);
  v137 = *(_QWORD **)(v135 - 8);
  v21 = __chkstk_darwin(v135);
  v129 = (char *)&v122 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v21);
  v128 = (char *)&v122 - v24;
  v25 = __chkstk_darwin(v23);
  v131 = (char *)&v122 - v26;
  v127 = v27;
  __chkstk_darwin(v25);
  v134 = (char *)&v122 - v28;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
  __chkstk_darwin(v29);
  v31 = (char *)&v122 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = type metadata accessor for UUID(0);
  v32 = *(_QWORD *)(v147 - 8);
  __chkstk_darwin(v147);
  v136 = (uint64_t)&v122 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = type metadata accessor for MOSuggestionAssetCacheWorkoutInput(0);
  __chkstk_darwin(v132);
  v35 = (char *)&v122 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = swift_allocObject(&unk_1001ED4E0, 80, 7);
  *(_QWORD *)(v36 + 16) = a4;
  LODWORD(v138) = a5;
  *(_BYTE *)(v36 + 24) = a5;
  *(_QWORD *)(v36 + 32) = a6;
  *(_QWORD *)(v36 + 40) = a7;
  v139 = (_QWORD *)a7;
  v38 = v142;
  v37 = inited;
  *(_QWORD *)(v36 + 48) = a8;
  *(_QWORD *)(v36 + 56) = v38;
  *(_QWORD *)(v36 + 64) = v148;
  *(_QWORD *)(v36 + 72) = v37;
  v39 = swift_allocObject(&unk_1001ED508, 32, 7);
  *(_QWORD *)(v39 + 16) = partial apply for closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:);
  *(_QWORD *)(v39 + 24) = v36;
  v145 = (uint8_t *)v36;
  v146 = v39;
  v40 = v36;
  v41 = a4;
  swift_retain_n(v40);
  swift_retain(a4);
  v140 = a6;
  swift_retain(a6);
  v141 = a8;
  v42 = v37;
  v43 = v38;
  swift_retain(a8);
  swift_bridgeObjectRetain(v38);
  swift_retain(v42);
  swift_retain(a1);
  MOSuggestionAssetCacheWorkoutInput.init(_:)(v44, (uint64_t)v35);
  v45 = *(uint64_t (**)(void))(*(_QWORD *)a1 + 216);
  v126 = a1;
  v46 = (void *)v45();
  MOResource.workoutUUID.getter((uint64_t)v31);

  v47 = v147;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v31, 1, v147) == 1)
  {
    v48 = &demangling cache variable for type metadata for UUID?;
    v49 = (uint64_t)v31;
LABEL_5:
    outlined destroy of Any?(v49, v48);
    goto LABEL_6;
  }
  v50 = v136;
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v136, v31, v47);
  v51 = (uint64_t)v144;
  outlined init with copy of Date?((uint64_t)v35, (uint64_t)v144, (uint64_t *)&demangling cache variable for type metadata for Date?);
  v52 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v137[6];
  v53 = v51;
  v54 = v135;
  if (v52(v53, 1, v135) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v50, v47);
    v48 = (uint64_t *)&demangling cache variable for type metadata for Date?;
    v49 = (uint64_t)v144;
    goto LABEL_5;
  }
  v124 = v32;
  v60 = (uint64_t)v35;
  v61 = v137;
  v62 = (void (*)(char *, char *, uint64_t))v137[4];
  v63 = v134;
  v62(v134, v144, v54);
  v64 = v132;
  v65 = *(int *)(v132 + 20);
  v144 = (char *)v60;
  v66 = v60 + v65;
  v67 = (void (*)(_QWORD, _QWORD, _QWORD))v133;
  outlined init with copy of Date?(v66, (uint64_t)v133, (uint64_t *)&demangling cache variable for type metadata for Date?);
  v68 = v52((uint64_t)v67, 1, v54);
  v69 = v61;
  if (v68 == 1)
  {
    ((void (*)(char *, uint64_t))v61[1])(v63, v54);
    (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v136, v147);
    outlined destroy of Any?((uint64_t)v67, (uint64_t *)&demangling cache variable for type metadata for Date?);
    v35 = v144;
  }
  else
  {
    v70 = (uint64_t *)v62;
    v71 = v131;
    v133 = v70;
    ((void (*)(char *, _QWORD, uint64_t))v70)(v131, v67, v54);
    v35 = v144;
    v72 = &v144[*(int *)(v64 + 24)];
    if ((v72[8] & 1) == 0)
    {
      v73 = v144[*(int *)(v64 + 28)];
      if (v73 != 2)
      {
        v138 = *(_QWORD *)v72;
        LODWORD(v139) = v73 & 1;
        v75 = swift_allocObject(&unk_1001ED118, 24, 7);
        *(_QWORD *)(v75 + 16) = 0;
        v76 = swift_allocObject(&unk_1001ED530, 24, 7);
        *(_QWORD *)(v76 + 16) = 0;
        v77 = v76;
        v78 = swift_allocObject(&unk_1001ED558, 24, 7);
        *(_QWORD *)(v78 + 16) = 0;
        v79 = swift_allocObject(&unk_1001ED558, 24, 7);
        *(_QWORD *)(v79 + 16) = 0;
        v80 = swift_allocObject(&unk_1001ED580, 24, 7);
        *(_QWORD *)(v80 + 16) = 0;
        v81 = v80;
        v142 = v80;
        v82 = swift_allocObject(&unk_1001ED050, 24, 7);
        swift_weakInit(v82 + 16);
        v83 = swift_allocObject(&unk_1001ED5A8, 104, 7);
        *(_QWORD *)(v83 + 16) = v75;
        *(_QWORD *)(v83 + 24) = 3;
        v148 = (void (*)(double *, __n128))v75;
        *(_QWORD *)(v83 + 32) = v81;
        *(_QWORD *)(v83 + 40) = v77;
        v84 = v77;
        *(_QWORD *)(v83 + 48) = v78;
        *(_BYTE *)(v83 + 56) = v130;
        v141 = v79;
        v85 = v126;
        *(_QWORD *)(v83 + 64) = v79;
        *(_QWORD *)(v83 + 72) = v85;
        *(_QWORD *)(v83 + 80) = v82;
        *(_QWORD *)(v83 + 88) = partial apply for specialized closure #1 in MOAngelControllerWrapper.continuationWrapper<A>(action:);
        v122 = v82;
        v86 = v146;
        *(_QWORD *)(v83 + 96) = v146;
        v140 = type metadata accessor for MOSuggestionAssetWorkoutProvider();
        inited = swift_initStackObject(v140, v150);
        *(_QWORD *)(inited + 16) = -1;
        v125 = objc_allocWithZone((Class)HKHealthStore);
        swift_retain_n(v85);
        swift_retain_n(v75);
        v87 = v142;
        swift_retain_n(v142);
        v123 = v84;
        swift_retain_n(v84);
        v132 = v78;
        swift_retain_n(v78);
        swift_retain_n(v79);
        swift_retain_n(v86);
        *(_QWORD *)&v88 = swift_retain(v82).n128_u64[0];
        v89 = objc_msgSend(v125, "init", v88);
        *(_QWORD *)(inited + 24) = v89;
        v90 = (_QWORD *)swift_allocObject(&unk_1001ED5D0, 64, 7);
        v90[2] = v87;
        v90[3] = partial apply for closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:);
        v90[4] = v83;
        v90[5] = v85;
        v90[6] = partial apply for specialized closure #1 in MOAngelControllerWrapper.continuationWrapper<A>(action:);
        v90[7] = v86;
        swift_retain(v85);
        swift_retain(v87);
        swift_retain(v86);
        swift_retain(v83);
        MOSuggestionAssetWorkoutProvider.getWorkout(workoutUUID:completion:)(v136, (uint64_t)partial apply for closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:), (uint64_t)v90);
        swift_release(v90);
        v91 = v145;
        swift_retain(v145);
        v92 = v141;
        swift_retain(v141);
        swift_retain(v83);
        specialized MOSuggestionAssetSystemIconImageProvider.getAssetFor(workoutType:size:renderGlyph:isIndoors:completion:)(v138, v130, 0, (char)v139, v92, (uint64_t)v148, 3, v87, v84, v78, v130, v92, v85, v122, (void (*)(id))partial apply for closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:), v91);
        swift_release(v83);
        swift_release(v86);
        swift_release(v91);
        v93 = type metadata accessor for MOSuggestionAssetWorkoutRouteProvider();
        v94 = (_QWORD *)swift_allocObject(v93, 40, 7);
        v95 = objc_msgSend(objc_allocWithZone((Class)HKHealthStore), "init");
        v139 = v94;
        v94[2] = v95;
        v94[3] = _swiftEmptyArrayStorage;
        v94[4] = 0;
        v96 = v137;
        v97 = (void (*)(char *, char *, uint64_t))v137[2];
        v98 = v128;
        v97(v128, v71, v54);
        v97(v129, v134, v54);
        v99 = *((unsigned __int8 *)v96 + 80);
        v100 = (v99 + 16) & ~v99;
        v101 = (v127 + v99 + v100) & ~v99;
        v102 = (v127 + v101 + 7) & 0xFFFFFFFFFFFFFFF8;
        v103 = (v102 + 15) & 0xFFFFFFFFFFFFFFF8;
        v104 = (v103 + 39) & 0xFFFFFFFFFFFFFFF8;
        v105 = swift_allocObject(&unk_1001ED5F8, v104 + 8, v99 | 7);
        v106 = v98;
        v107 = v54;
        v108 = (void (*)(uint64_t, char *, uint64_t))v133;
        ((void (*)(uint64_t, char *, uint64_t))v133)(v105 + v100, v106, v54);
        v108(v105 + v101, v129, v54);
        *(_QWORD *)(v105 + v102) = 0x3FD51EB851EB851FLL;
        v109 = (void (**)())(v105 + v103);
        *v109 = partial apply for closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:);
        v109[1] = (void (*)())v83;
        v110 = v105 + ((v103 + 23) & 0xFFFFFFFFFFFFFFF8);
        v111 = v123;
        *(_QWORD *)v110 = v123;
        *(_BYTE *)(v110 + 8) = v130;
        v112 = v132;
        *(_QWORD *)(v105 + v104) = v132;
        v113 = swift_initStackObject(v140, v149);
        *(_QWORD *)(v113 + 16) = -1;
        v114 = objc_allocWithZone((Class)HKHealthStore);
        swift_retain(v111);
        v115 = v112;
        swift_retain(v112);
        *(_QWORD *)(v113 + 24) = objc_msgSend(v114, "init", swift_retain(v83).n128_f64[0]);
        v116 = (_QWORD *)swift_allocObject(&unk_1001ED620, 40, 7);
        v116[2] = partial apply for closure #4 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:);
        v116[3] = v105;
        v117 = (uint64_t)v139;
        v116[4] = v139;
        swift_retain(v105);
        swift_retain(v117);
        v118 = v136;
        MOSuggestionAssetWorkoutProvider.getWorkout(workoutUUID:completion:)(v136, (uint64_t)partial apply for closure #1 in MOSuggestionAssetWorkoutRouteProvider.getAsset(workoutUUID:completion:), (uint64_t)v116);
        swift_release(v116);
        swift_setDeallocating(v113);

        swift_release(v83);
        swift_release(inited);
        swift_release(v117);
        v119 = swift_release(v105);
        v120 = (void (*)(char *, uint64_t, __n128))v137[1];
        v120(v131, v107, v119);
        ((void (*)(char *, uint64_t))v120)(v134, v107);
        (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v118, v147);
        outlined destroy of MOSuggestionAssetCacheWorkoutInput((uint64_t)v144);
        swift_release(v141);
        v121 = swift_release(v142);
        swift_release_n(v145, v121);
        swift_release(v146);
        swift_release(v148);
        swift_release(v111);
        v58 = v115;
        goto LABEL_7;
      }
    }
    v74 = (void (*)(char *, uint64_t))v69[1];
    v74(v71, v54);
    v74(v63, v54);
    (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v136, v147);
  }
LABEL_6:
  swift_retain(v41);
  v55 = v140;
  swift_retain(v140);
  v56 = v141;
  swift_retain(v141);
  swift_bridgeObjectRetain(v43);
  swift_retain(v42);
  closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, v41, v138, v55, (uint64_t)v139, v56, v43, v148);
  swift_release(v41);
  swift_release(v55);
  swift_release(v56);
  swift_bridgeObjectRelease(v43);
  swift_release(v42);
  outlined destroy of MOSuggestionAssetCacheWorkoutInput((uint64_t)v35);
  swift_release_n(v145, v57);
  v58 = v146;
LABEL_7:
  *(_QWORD *)&result = swift_release(v58).n128_u64[0];
  return result;
}

uint64_t specialized MOSuggestionAssetCacheManager.fetchAndCacheMotionActivityFromProvider(_:cacheType:completion:)(uint64_t a1, int a2, CGContext *a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(double *, __n128), uint64_t a11)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  __n128 v40;
  __n128 v41;
  uint64_t v42;
  char v43;
  id v44;
  Swift::String v45;
  Swift::String v46;
  Swift::String v47;
  uint64_t countAndFlagsBits;
  void *object;
  id *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  char *v68;
  char v69;
  id v70;
  Swift::String v71;
  Swift::String v72;
  Swift::String v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v85;
  void *v86;
  id v87;
  char v88;
  uint64_t v89;
  void *v90;
  _QWORD *v91;
  id v92;
  id v93;
  id v94;
  char v95;
  uint64_t v96;
  void *v97;
  id v98;
  char v99;
  uint64_t v100;
  void *v101;
  id v102;
  char v103;
  uint64_t v104;
  void *v105;
  id v106;
  char v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  char v113;
  uint64_t v114;
  double v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  char v120;
  uint64_t v121;
  double v122;
  void *v123;
  uint64_t v124;
  id v125;
  uint64_t v126;
  char v127;
  uint64_t v128;
  void *v129;
  id v130;
  char v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t inited;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  id v152;
  void (*v153)(uint64_t, uint64_t, uint64_t, void (*)(void *), uint64_t, __n128);
  __n128 v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t v171;
  unint64_t v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  unint64_t v176;
  unsigned __int8 v177;
  CGContext *v178;
  CGContext *v179;
  NSString v180;
  void *v181;
  id v182;
  id v183;
  id v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  id v188;
  id v189;
  id v190;
  char *v191;
  uint64_t v192;
  id v193;
  id v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  Class isa;
  uint64_t v199;
  uint64_t v200;
  NSString v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  id v206;
  void *v207;
  __n128 v208;
  __n128 v209;
  __n128 v210;
  uint64_t v211;
  __n128 v212;
  __n128 v213;
  __n128 v214;
  __n128 v215;
  char v217;
  Swift::String v218;
  Swift::String v219;
  Swift::String v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  CGContext *v227;
  CGContext *v228;
  CGContext *v229;
  unsigned __int8 v230;
  CGContext *v231;
  id v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  double v236;
  double v237;
  double v238;
  float64_t v239;
  CGContext *v240;
  CGContext *v241;
  void *v242;
  uint64_t v243;
  id v244;
  unsigned __int8 v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  Class v249;
  uint64_t v250;
  uint64_t v251;
  NSString v252;
  uint64_t v253;
  uint64_t v254;
  __n128 v255;
  __n128 v256;
  __n128 v257;
  id v258;
  uint64_t v259;
  uint64_t v260;
  NSObject *v261;
  os_log_type_t v262;
  uint8_t *v263;
  uint8_t *v264;
  uint64_t v265;
  char v266;
  Swift::String v267;
  Swift::String v268;
  Swift::String v269;
  void *v270;
  uint64_t v271;
  uint64_t v272;
  NSObject *v273;
  os_log_type_t v274;
  _BOOL4 v275;
  id v276;
  uint8_t *v277;
  uint8_t *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  __n128 v282;
  __n128 v283;
  __n128 v284;
  uint64_t v285;
  uint64_t v286;
  id v287;
  uint64_t v288;
  uint64_t v289;
  id v290;
  char *v291;
  uint64_t v292;
  char *v293;
  uint64_t v294;
  CGContext *v295;
  CGContext *v296;
  int v297;
  void (*v298)(double *, __n128);
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  _OWORD v306[2];
  __int128 v307;
  _QWORD *v308;
  Swift::String v309;
  Swift::String v310;
  Swift::String v311;
  Swift::String v312;

  v295 = a3;
  LODWORD(v296) = a2;
  v294 = type metadata accessor for CharacterSet(0);
  v292 = *(_QWORD *)(v294 - 8);
  v17 = __chkstk_darwin(v294);
  v293 = (char *)&v285 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v291 = (char *)&v285 - v19;
  v20 = swift_allocObject(&unk_1001ED698, 80, 7);
  *(_QWORD *)(v20 + 16) = a4;
  v297 = a5;
  *(_BYTE *)(v20 + 24) = a5;
  *(_QWORD *)(v20 + 32) = a6;
  *(_QWORD *)(v20 + 40) = a7;
  v298 = a10;
  v299 = a7;
  *(_QWORD *)(v20 + 48) = a8;
  *(_QWORD *)(v20 + 56) = a9;
  *(_QWORD *)(v20 + 64) = a10;
  *(_QWORD *)(v20 + 72) = a11;
  v21 = swift_allocObject(&unk_1001ED6C0, 32, 7);
  *(_QWORD *)(v21 + 16) = partial apply for closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:);
  *(_QWORD *)(v21 + 24) = v20;
  v300 = v21;
  v22 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 256);
  v303 = a4;
  swift_retain_n(a4);
  v304 = a6;
  swift_retain_n(a6);
  swift_retain_n(a8);
  v302 = a9;
  swift_bridgeObjectRetain_n(a9, 5);
  v301 = a11;
  swift_retain_n(a11);
  v23 = swift_retain_n(v20);
  v24 = v22(v23);
  if (!v24)
    goto LABEL_7;
  v25 = v24;
  v26 = (*(uint64_t (**)(void))(*(_QWORD *)a1 + 280))();
  if (!v26)
  {
    swift_bridgeObjectRelease(v25);
LABEL_7:
    v35 = v303;
    swift_retain(v303);
    v36 = v304;
    swift_retain(v304);
    swift_retain(a8);
    v37 = v302;
    swift_bridgeObjectRetain(v302);
    v38 = v301;
    swift_retain(v301);
    closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, v35, v297, v36, v299, a8, v37, v298);
    swift_release_n(v20, v39);
    v40 = swift_release(v300);
    swift_release_n(v35, v40);
    swift_release_n(v36, v41);
    swift_release(a8);
    swift_bridgeObjectRelease(v37);
    v42 = v38;
LABEL_52:
    v212 = swift_release(v42);
    goto LABEL_53;
  }
  v27 = (void *)v26;
  v289 = a8;
  v28 = specialized Dictionary.init(dictionaryLiteral:)((uint64_t)_swiftEmptyArrayStorage);
  v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOWorkoutMotionActivityActionWalk[0]);
  v31 = v30;
  v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v34 = v32;
  v290 = v27;
  v288 = v28;
  if (v29 == v33 && v31 == v32)
  {
    swift_bridgeObjectRelease_n(v31, 2);
LABEL_9:
    v44 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v309._countAndFlagsBits = 0xD00000000000001FLL;
    v309._object = (void *)0x80000001001AFD80;
    v45._countAndFlagsBits = 1802264919;
    v45._object = (void *)0xE400000000000000;
    v46._countAndFlagsBits = 0;
    v46._object = (void *)0xE000000000000000;
    v47 = NSLocalizedString(_:tableName:bundle:value:comment:)(v45, (Swift::String_optional)0, (NSBundle)v44, v46, v309);
    countAndFlagsBits = v47._countAndFlagsBits;
    object = v47._object;
    v50 = (id *)&MOSuggestionAssetMotionActivityTypeWalking;
    goto LABEL_10;
  }
  v43 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v31, v33, v32, 0);
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v34);
  if ((v43 & 1) != 0)
    goto LABEL_9;
  v156 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOWorkoutMotionActivityActionRun[0]);
  v158 = v157;
  v160 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v161 = v159;
  if (v156 == v160 && v158 == v159)
  {
    swift_bridgeObjectRelease_n(v158, 2);
LABEL_57:
    v44 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v311._object = (void *)0x80000001001AFD60;
    v218._countAndFlagsBits = 7238994;
    v218._object = (void *)0xE300000000000000;
    v219._countAndFlagsBits = 0;
    v219._object = (void *)0xE000000000000000;
    v311._countAndFlagsBits = 0xD00000000000001ELL;
    v220 = NSLocalizedString(_:tableName:bundle:value:comment:)(v218, (Swift::String_optional)0, (NSBundle)v44, v219, v311);
    countAndFlagsBits = v220._countAndFlagsBits;
    object = v220._object;
    v50 = (id *)&MOSuggestionAssetMotionActivityTypeRunning;
    goto LABEL_10;
  }
  v217 = _stringCompareWithSmolCheck(_:_:expecting:)(v156, v158, v160, v159, 0);
  swift_bridgeObjectRelease(v158);
  swift_bridgeObjectRelease(v161);
  if ((v217 & 1) != 0)
    goto LABEL_57;
  v221 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOWorkoutMotionActivityActionRunAndWalk[0]);
  v223 = v222;
  v225 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v226 = v224;
  if (v221 == v225 && v223 == v224)
  {
    swift_bridgeObjectRelease_n(v223, 2);
  }
  else
  {
    v266 = _stringCompareWithSmolCheck(_:_:expecting:)(v221, v223, v225, v224, 0);
    swift_bridgeObjectRelease(v223);
    swift_bridgeObjectRelease(v226);
    if ((v266 & 1) == 0)
    {
      v51 = 0;
      goto LABEL_17;
    }
  }
  v44 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v312._countAndFlagsBits = 0xD000000000000025;
  v312._object = (void *)0x80000001001AFD00;
  v267._countAndFlagsBits = 0x61572026206E7552;
  v267._object = (void *)0xEA00000000006B6CLL;
  v268._countAndFlagsBits = 0;
  v268._object = (void *)0xE000000000000000;
  v269 = NSLocalizedString(_:tableName:bundle:value:comment:)(v267, (Swift::String_optional)0, (NSBundle)v44, v268, v312);
  countAndFlagsBits = v269._countAndFlagsBits;
  object = v269._object;
  v50 = (id *)&MOSuggestionAssetMotionActivityTypeRunningWalking;
LABEL_10:

  v51 = *v50;
  v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOActivityMetaDataKeyStepCount"));
  v54 = v53;
  if (*(_QWORD *)(v25 + 16) && (v55 = specialized __RawDictionaryStorage.find<A>(_:)(v52, v53), (v56 & 1) != 0))
  {
    v57 = *(_QWORD *)(*(_QWORD *)(v25 + 56) + 8 * v55);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease(v54);
    *(_QWORD *)&v306[0] = v57;
    if ((swift_dynamicCast(&v307, v306, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for String, 6) & 1) != 0)
    {
      v286 = countAndFlagsBits;
      v287 = v51;
      v58 = *((_QWORD *)&v307 + 1);
      v285 = v307;
      v59 = v291;
      v60 = static CharacterSet.decimalDigits.getter();
      v61 = v293;
      CharacterSet.inverted.getter(v60);
      v62 = *(void (**)(char *, uint64_t))(v292 + 8);
      v63 = v294;
      v62(v59, v294);
      v64 = lazy protocol witness table accessor for type String and conformance String();
      v65 = StringProtocol.trimmingCharacters(in:)(v61, &type metadata for String, v64);
      v67 = v66;
      v62(v61, v63);
      v68 = (char *)specialized FixedWidthInteger.init(_:)(v65, v67);
      if ((v69 & 1) != 0)
      {
        swift_bridgeObjectRelease(object);
        swift_bridgeObjectRelease(v58);
        v51 = v287;
        goto LABEL_17;
      }
      v293 = v68;
      v70 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v310._countAndFlagsBits = 0xD00000000000002DLL;
      v310._object = (void *)0x80000001001AFD30;
      v71._countAndFlagsBits = 0x7370657473204025;
      v71._object = (void *)0xE800000000000000;
      v72._countAndFlagsBits = 0;
      v72._object = (void *)0xE000000000000000;
      v73 = NSLocalizedString(_:tableName:bundle:value:comment:)(v71, (Swift::String_optional)0, (NSBundle)v70, v72, v310);

      v74 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v75 = swift_allocObject(v74, 72, 7);
      *(_OWORD *)(v75 + 16) = xmmword_10019ED20;
      *(_QWORD *)(v75 + 56) = &type metadata for String;
      *(_QWORD *)(v75 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v75 + 32) = v285;
      *(_QWORD *)(v75 + 40) = v58;
      v76 = static String.localizedStringWithFormat(_:_:)(v73._countAndFlagsBits, v73._object, v75);
      v294 = a1;
      v77 = v76;
      v79 = v78;
      swift_bridgeObjectRelease(v73._object);
      swift_bridgeObjectRelease(v75);
      v80 = (void *)MOSuggestionAssetMetadataKeyMotionActivityType;
      v308 = &type metadata for String;
      v81 = v286;
      *(_QWORD *)&v307 = v286;
      *((_QWORD *)&v307 + 1) = object;
      outlined init with take of Any(&v307, v306);
      v82 = v80;
      swift_bridgeObjectRetain(object);
      v83 = v288;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v288);
      v305 = v83;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v306, v82, isUniquelyReferenced_nonNull_native);
      v85 = v305;

      swift_bridgeObjectRelease(0x8000000000000000);
      v86 = (void *)MOSuggestionAssetMetadataKeyMotionActivityTypeLocalized;
      v308 = &type metadata for String;
      *(_QWORD *)&v307 = v81;
      *((_QWORD *)&v307 + 1) = object;
      outlined init with take of Any(&v307, v306);
      v87 = v86;
      v88 = swift_isUniquelyReferenced_nonNull_native(v85);
      v305 = v85;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v306, v87, v88);
      v89 = v305;

      swift_bridgeObjectRelease(0x8000000000000000);
      v90 = (void *)MOSuggestionAssetMetadataKeyMotionActivityTypeEnum;
      type metadata accessor for MOSuggestionAssetMotionActivityType(0);
      v308 = v91;
      v92 = v287;
      *(_QWORD *)&v307 = v287;
      outlined init with take of Any(&v307, v306);
      v93 = v90;
      v94 = v92;
      v95 = swift_isUniquelyReferenced_nonNull_native(v89);
      v305 = v89;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v306, v93, v95);
      v96 = v305;

      swift_bridgeObjectRelease(0x8000000000000000);
      v97 = (void *)MOSuggestionAssetMetadataKeyMotionActivityStepCount;
      v308 = &type metadata for String;
      *(_QWORD *)&v307 = v77;
      *((_QWORD *)&v307 + 1) = v79;
      outlined init with take of Any(&v307, v306);
      v98 = v97;
      swift_bridgeObjectRetain(v79);
      v99 = swift_isUniquelyReferenced_nonNull_native(v96);
      v305 = v96;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v306, v98, v99);
      v100 = v305;

      swift_bridgeObjectRelease(0x8000000000000000);
      v101 = (void *)MOSuggestionAssetMetadataKeyMotionActivityStepCountLocalized;
      v308 = &type metadata for String;
      *(_QWORD *)&v307 = v77;
      *((_QWORD *)&v307 + 1) = v79;
      a1 = v294;
      v51 = v92;
      outlined init with take of Any(&v307, v306);
      v102 = v101;
      v103 = swift_isUniquelyReferenced_nonNull_native(v100);
      v305 = v100;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v306, v102, v103);
      v104 = v305;

      swift_bridgeObjectRelease(0x8000000000000000);
      v105 = (void *)MOSuggestionAssetMetadataKeyMotionActivityNumberOfSteps;
      v308 = &type metadata for Int;
      *(_QWORD *)&v307 = v293;
      outlined init with take of Any(&v307, v306);
      v106 = v105;
      v107 = swift_isUniquelyReferenced_nonNull_native(v104);
      v305 = v104;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v306, v106, v107);
      v288 = v305;

      v108 = 0x8000000000000000;
    }
    else
    {
      v108 = (unint64_t)object;
    }
  }
  else
  {
    swift_bridgeObjectRelease(object);
    v108 = v54;
  }
  swift_bridgeObjectRelease(v108);
LABEL_17:
  v109 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOActivityMetaDataKeyStartDate"));
  v111 = v110;
  a8 = v289;
  if (*(_QWORD *)(v25 + 16) && (v112 = specialized __RawDictionaryStorage.find<A>(_:)(v109, v110), (v113 & 1) != 0))
  {
    v114 = *(_QWORD *)(*(_QWORD *)(v25 + 56) + 8 * v112);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease(v111);
    *(_QWORD *)&v307 = v114;
    if ((swift_dynamicCast(v306, &v307, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Double, 6) & 1) != 0)
    {
      v115 = *(double *)v306;
      v116 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOActivityMetaDataKeyEndDate"));
      v118 = v117;
      if (*(_QWORD *)(v25 + 16) && (v119 = specialized __RawDictionaryStorage.find<A>(_:)(v116, v117), (v120 & 1) != 0))
      {
        v121 = *(_QWORD *)(*(_QWORD *)(v25 + 56) + 8 * v119);
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease(v118);
        swift_bridgeObjectRelease(v25);
        *(_QWORD *)&v307 = v121;
        if ((swift_dynamicCast(v306, &v307, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Double, 6) & 1) == 0)goto LABEL_26;
        v122 = *(double *)v306;
        v123 = (void *)MOSuggestionAssetMetadataKeyMotionActivityStartDate;
        v124 = type metadata accessor for Date(0);
        v308 = (_QWORD *)v124;
        __swift_allocate_boxed_opaque_existential_1(&v307);
        v125 = v123;
        Date.init(timeIntervalSince1970:)(v115);
        outlined init with take of Any(&v307, v306);
        v126 = v288;
        v127 = swift_isUniquelyReferenced_nonNull_native(v288);
        v305 = v126;
        specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v306, v125, v127);
        v128 = v305;

        swift_bridgeObjectRelease(0x8000000000000000);
        v129 = (void *)MOSuggestionAssetMetadataKeyMotionActivityEndDate;
        v308 = (_QWORD *)v124;
        __swift_allocate_boxed_opaque_existential_1(&v307);
        v130 = v129;
        Date.init(timeIntervalSince1970:)(v122);
        outlined init with take of Any(&v307, v306);
        v131 = swift_isUniquelyReferenced_nonNull_native(v128);
        v305 = v128;
        specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v306, v130, v131);
        v288 = v305;

        v132 = 0x8000000000000000;
      }
      else
      {
        swift_bridgeObjectRelease(v118);
        v132 = v25;
      }
    }
    else
    {
      v132 = v25;
    }
  }
  else
  {
    swift_bridgeObjectRelease(v25);
    v132 = v111;
  }
  swift_bridgeObjectRelease(v132);
LABEL_26:
  if (!v51)
    goto LABEL_40;
  v133 = MOSuggestionAssetMotionActivityTypeRunning;
  v134 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
  v136 = v135;
  v138 = static String._unconditionallyBridgeFromObjectiveC(_:)(v133);
  v139 = v137;
  if (v134 == v138 && v136 == v137)
  {
LABEL_29:
    swift_bridgeObjectRelease_n(v136, 2);
    goto LABEL_31;
  }
  v140 = _stringCompareWithSmolCheck(_:_:expecting:)(v134, v136, v138, v137, 0);
  swift_bridgeObjectRelease(v136);
  swift_bridgeObjectRelease(v139);
  if ((v140 & 1) == 0)
  {
    v162 = MOSuggestionAssetMotionActivityTypeWalking;
    v163 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
    v136 = v164;
    v166 = static String._unconditionallyBridgeFromObjectiveC(_:)(v162);
    v167 = v165;
    if (v163 != v166 || v136 != v165)
    {
      v168 = _stringCompareWithSmolCheck(_:_:expecting:)(v163, v136, v166, v165, 0);
      swift_bridgeObjectRelease(v136);
      swift_bridgeObjectRelease(v167);
      if ((v168 & 1) == 0)
        goto LABEL_40;
      goto LABEL_31;
    }
    goto LABEL_29;
  }
LABEL_31:
  v141 = specialized static MOSuggestionAssetSystemSymbolProvider.symbolName(type:)((uint64_t)v290);
  if (v142)
  {
    v143 = v141;
    v144 = v142;
    v145 = type metadata accessor for MOSuggestionAssetSystemSymbolProvider();
    inited = swift_initStaticObject(v145, &unk_1002070E0);
    v147 = swift_allocObject(&unk_1001ED050, 24, 7);
    swift_weakInit(v147 + 16);
    v148 = swift_allocObject(&unk_1001ED6E8, 64, 7);
    *(_QWORD *)(v148 + 16) = v288;
    *(_QWORD *)(v148 + 24) = a1;
    v149 = v296;
    *(_BYTE *)(v148 + 32) = (_BYTE)v296;
    *(_QWORD *)(v148 + 40) = v147;
    *(_QWORD *)(v148 + 48) = partial apply for specialized closure #1 in MOAngelControllerWrapper.continuationWrapper<A>(action:);
    v150 = v300;
    *(_QWORD *)(v148 + 56) = v300;
    v151 = a1;
    v152 = v51;
    v153 = *(void (**)(uint64_t, uint64_t, uint64_t, void (*)(void *), uint64_t, __n128))(*(_QWORD *)inited + 80);
    swift_retain(v151);
    swift_retain(v147);
    v154 = swift_retain(v150);
    v153(v143, v144, v149, partial apply for specialized closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheMotionActivityFromProvider(_:cacheType:completion:), v148, v154);
    v51 = v152;
    swift_release(v20);
    swift_release(v150);
    swift_bridgeObjectRelease(v144);
    swift_release(v147);
    v155 = v148;
    a8 = v289;
    swift_release(v155);
LABEL_49:

LABEL_50:
    v38 = v301;
    v37 = v302;
    v35 = v303;
LABEL_51:

    swift_release(v304);
    swift_release(v35);
    v42 = v20;
    goto LABEL_52;
  }
LABEL_40:
  v169 = specialized static MOSuggestionAssetSystemSymbolProvider.symbolName(type:)((uint64_t)MOWorkoutMotionActivityActionWalk[0]);
  if (!v170)
  {
    swift_release(v20);
    swift_release(v300);
    swift_bridgeObjectRelease(v288);
    goto LABEL_49;
  }
  v171 = v169;
  v172 = v170;
  v294 = a1;
  v173 = specialized static MOSuggestionAssetSystemSymbolProvider.symbolName(type:)((uint64_t)MOWorkoutMotionActivityActionRun[0]);
  if (!v174)
  {
    swift_release(v20);
    swift_release(v300);
    swift_bridgeObjectRelease(v288);

    swift_bridgeObjectRelease(v172);
    goto LABEL_50;
  }
  v175 = v173;
  v176 = v174;
  v177 = v296;
  if (v296 - 2 < 7
    || v296 == 10
    || (v227 = specialized static MOSuggestionAssetSystemSymbolProvider.getMotionAcrtivityAssetFor(symbol:size:glyphOnly:)(v171, v172, v296, 0)) == 0)
  {
LABEL_43:
    v178 = specialized static MOSuggestionAssetSystemSymbolProvider.getMotionAcrtivityAssetFor(symbol:size:glyphOnly:)(v171, v172, v177, 1);
    swift_bridgeObjectRelease(v172);
    if (v178)
    {
      v179 = specialized static MOSuggestionAssetSystemSymbolProvider.getMotionAcrtivityAssetFor(symbol:size:glyphOnly:)(v175, v176, v177, 1);
      swift_bridgeObjectRelease(v176);
      if (v179)
      {
        v180 = String._bridgeToObjectiveC()();
        v181 = (void *)objc_opt_self(UIColor);
        v182 = objc_msgSend(v181, "colorNamed:", v180);

        if (v182)
        {
          v183 = objc_msgSend(v181, "systemWhiteColor");
          v184 = objc_msgSend(v183, "colorWithAlphaComponent:", 0.55);

          v185 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
          v186 = swift_allocObject(v185, 48, 7);
          *(_OWORD *)(v186 + 16) = xmmword_10019F870;
          *(_QWORD *)(v186 + 32) = v179;
          *(_QWORD *)(v186 + 40) = v178;
          *(_QWORD *)&v307 = v186;
          specialized Array._endMutation()(v186);
          v187 = v307;
          v188 = objc_allocWithZone((Class)type metadata accessor for MOSuggestionWorkoutsSnowGlobeView());
          v296 = v179;
          v295 = v178;
          v189 = v184;
          v190 = v182;
          v191 = (char *)specialized MOSuggestionWorkoutsSnowGlobeView.init(icons:glyphBackgroundColor:glyphTintColor:)(v187, v189, v190);
          v293 = v191;

          v192 = MOSuggestionAssetsTypeMotionActivity;
          v193 = objc_allocWithZone((Class)MOSuggestionAsset);
          a8 = v289;
          v194 = objc_msgSend(v193, "init:type:contentClassType:", v191, v192, swift_getObjCClassFromMetadata());
          v195 = v288;
          specialized _dictionaryUpCast<A, B, C, D>(_:)(v288);
          v197 = v196;
          swift_bridgeObjectRelease(v195);
          isa = Dictionary._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v194, "addMetadata:", isa, swift_bridgeObjectRelease(v197).n128_f64[0]);

          (*(void (**)(void))(*(_QWORD *)v294 + 288))();
          v200 = v199;
          v201 = String._bridgeToObjectiveC()();
          objc_msgSend(v194, "addIdentifier:", v201, swift_bridgeObjectRelease(v200).n128_f64[0]);

          v202 = v303;
          v203 = v304;
          swift_retain(v303);
          swift_retain(v203);
          swift_retain(a8);
          v204 = v302;
          swift_bridgeObjectRetain(v302);
          v287 = v51;
          v205 = v301;
          swift_retain(v301);
          v206 = v194;
          v207 = v194;
          v38 = v205;
          closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(v207, v202, v297, v203, v299, a8, v204, v298);
          swift_release_n(v20, v208);
          swift_release(v300);

          v35 = v202;
          v37 = v204;

          swift_release_n(v202, v209);
          swift_release_n(v203, v210);
          swift_release(a8);
          v211 = v204;
LABEL_47:
          swift_bridgeObjectRelease(v211);
          swift_release(v205);

          goto LABEL_53;
        }

      }
      else
      {

      }
    }
    else
    {
      swift_bridgeObjectRelease(v176);
    }
    swift_bridgeObjectRelease(v288);
    v35 = v303;
    v258 = v290;
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
      swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
    v259 = type metadata accessor for Logger(0);
    v260 = __swift_project_value_buffer(v259, (uint64_t)static MOAngelLogger.assets);
    v261 = Logger.logObject.getter(v260);
    v262 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v261, v262))
    {
      v263 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v263 = 0;
      _os_log_impl((void *)&_mh_execute_header, v261, v262, "Failed to generate asset for motion activity", v263, 2u);
      v264 = v263;
      v35 = v303;
      swift_slowDealloc(v264, -1, -1);
    }

    swift_retain(v35);
    v265 = v304;
    swift_retain(v304);
    swift_retain(a8);
    v37 = v302;
    swift_bridgeObjectRetain(v302);
    v38 = v301;
    swift_retain(v301);
    closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, v35, v297, v265, v299, a8, v37, v298);
    swift_release(v20);
    swift_release(v300);

    swift_release(v35);
    swift_release(v265);
    swift_release(a8);
    swift_bridgeObjectRelease(v37);
    swift_release(v38);
    goto LABEL_51;
  }
  v228 = v227;
  v229 = specialized static MOSuggestionAssetSystemSymbolProvider.getMotionAcrtivityAssetFor(symbol:size:glyphOnly:)(v175, v176, v177, 0);
  v230 = v177;
  if (!v229)
  {

    goto LABEL_43;
  }
  v231 = v229;
  swift_bridgeObjectRelease(v172);
  swift_bridgeObjectRelease(v176);
  v232 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v232, "scale");

  v233 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v234 = swift_allocObject(v233, 48, 7);
  *(_OWORD *)(v234 + 16) = xmmword_10019F870;
  *(_QWORD *)(v234 + 32) = v231;
  *(_QWORD *)(v234 + 40) = v228;
  *(_QWORD *)&v307 = v234;
  specialized Array._endMutation()(v234);
  v235 = v307;
  MOSuggestionInterstitialExpandableListViewCellConstants.init()();
  v237 = v236;
  v239 = v238;
  v240 = v228;
  v241 = v231;
  v242 = (void *)specialized static MOSuggestionAssetSnowglobeEffect.imageFor(images:targetSize:)(v235, v237, v239);
  swift_bridgeObjectRelease(v235);
  if (v242)
  {
    v243 = MOSuggestionAssetsTypeMotionActivity;
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIImage, UIImage_ptr);
    v244 = objc_msgSend(objc_allocWithZone((Class)MOSuggestionAsset), "init:type:contentClassType:", v242, v243, swift_getObjCClassFromMetadata());
    v295 = v241;
    v245 = v230;
    v246 = v288;
    specialized _dictionaryUpCast<A, B, C, D>(_:)(v288);
    v248 = v247;
    swift_bridgeObjectRelease(v246);
    v249 = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v244, "addMetadata:", v249, swift_bridgeObjectRelease(v248).n128_f64[0]);

    (*(void (**)(void))(*(_QWORD *)v294 + 288))();
    v251 = v250;
    v252 = String._bridgeToObjectiveC()();
    objc_msgSend(v244, "addIdentifier:", v252, swift_bridgeObjectRelease(v251).n128_f64[0]);

    a8 = v289;
    v253 = v303;
    v254 = v304;
    swift_retain(v303);
    swift_retain(v254);
    swift_retain(a8);
    v37 = v302;
    swift_bridgeObjectRetain(v302);
    v287 = v51;
    v205 = v301;
    swift_retain(v301);
    swift_retain(v20);
    specialized static MOSuggestionAssetCacheManager.wrapImageAssetInURLIfNecessary(asset:cacheType:completion:)(v244, v245, v253, v297, v254, v299, a8, v37, v298, v205);
    swift_release(v300);

    v35 = v253;
    v38 = v205;

    swift_release_n(v20, v255);
    swift_release_n(v253, v256);
    swift_release_n(v254, v257);
    swift_release(a8);
    v211 = v37;
    goto LABEL_47;
  }
  swift_bridgeObjectRelease(v288);
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v270 = v51;
  v271 = type metadata accessor for Logger(0);
  v272 = __swift_project_value_buffer(v271, (uint64_t)static MOAngelLogger.assets);
  v273 = Logger.logObject.getter(v272);
  v274 = static os_log_type_t.error.getter();
  v275 = os_log_type_enabled(v273, v274);
  v276 = v290;
  if (v275)
  {
    v277 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v277 = 0;
    _os_log_impl((void *)&_mh_execute_header, v273, v274, "Failed to generate snowglobe motion activity", v277, 2u);
    v278 = v277;
    a8 = v289;
    swift_slowDealloc(v278, -1, -1);
  }

  v279 = v303;
  swift_retain(v303);
  v280 = v304;
  swift_retain(v304);
  swift_retain(a8);
  v37 = v302;
  swift_bridgeObjectRetain(v302);
  v281 = v301;
  swift_retain(v301);
  closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, v279, v297, v280, v299, a8, v37, v298);
  swift_release_n(v20, v282);
  swift_release(v300);

  v35 = v279;
  v38 = v281;

  swift_release_n(v279, v283);
  swift_release_n(v280, v284);
  swift_release(a8);
  swift_bridgeObjectRelease(v37);
  swift_release(v281);

LABEL_53:
  swift_release_n(v304, v212);
  swift_release_n(v35, v213);
  swift_release_n(v38, v214);
  swift_bridgeObjectRelease_n(v37, 4);
  return swift_release_n(a8, v215);
}

double specialized MOSuggestionAssetCacheManager.fetchAndCacheMediaArtworkFromProvider(_:cacheType:completion:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(double *, __n128), uint64_t a11)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(__n128);
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  __CFString *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  NSObject *v93;
  os_log_type_t v94;
  uint64_t v95;
  uint8_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  __n128 v104;
  __n128 v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  NSString v109;
  NSString v110;
  NSString v111;
  NSURL *v112;
  void *v113;
  void *v114;
  id v115;
  uint64_t v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  double result;
  uint64_t *v122;
  uint64_t v123;
  unint64_t v124;
  char v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  __int128 v138;
  uint64_t v139;
  __int128 v140;
  id v141;
  NSString v142;
  id v143;
  uint64_t v144;
  uint64_t v145;
  void *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  void (*v156)(__int128 *, uint64_t, void (*)(void *), uint64_t, __n128);
  __n128 v157;
  char v158;
  uint64_t v159;
  __CFString *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char v166;
  __CFString *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char v173;
  uint64_t v174;
  __int128 v175;
  uint64_t v176;
  __int128 v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  void (*v185)(double *, __n128);
  int v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  void *aBlock;
  _QWORD v193[4];
  uint64_t v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  uint64_t v200;
  char v201;
  uint64_t v202;
  uint64_t v203;

  v182 = a3;
  LODWORD(v183) = a2;
  v17 = a11;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v18);
  v184 = (char *)&v174 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = swift_allocObject(&unk_1001ED710, 80, 7);
  *(_QWORD *)(v20 + 16) = a4;
  v186 = a5;
  *(_BYTE *)(v20 + 24) = a5;
  *(_QWORD *)(v20 + 32) = a6;
  *(_QWORD *)(v20 + 40) = a7;
  v187 = a7;
  *(_QWORD *)(v20 + 48) = a8;
  *(_QWORD *)(v20 + 56) = a9;
  v185 = a10;
  *(_QWORD *)(v20 + 64) = a10;
  *(_QWORD *)(v20 + 72) = a11;
  v21 = swift_allocObject(&unk_1001ED738, 32, 7);
  *(_QWORD *)(v21 + 16) = partial apply for closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:);
  *(_QWORD *)(v21 + 24) = v20;
  v191 = v21;
  v22 = *(uint64_t (**)(__n128))(*(_QWORD *)a1 + 256);
  v188 = a4;
  swift_retain(a4);
  v190 = a6;
  swift_retain(a6);
  swift_retain(a8);
  v189 = a9;
  swift_bridgeObjectRetain(a9);
  swift_retain(a11);
  v23 = swift_retain(v20);
  v24 = v22(v23);
  if (!v24)
    goto LABEL_34;
  v25 = v24;
  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOMediaPlayMetaDataKeyPlayerTitle"));
  v28 = v27;
  if (*(_QWORD *)(v25 + 16))
  {
    v29 = specialized __RawDictionaryStorage.find<A>(_:)(v26, v27);
    if ((v30 & 1) != 0)
    {
      v31 = a1;
      v32 = *(_QWORD *)(*(_QWORD *)(v25 + 56) + 8 * v29);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease(v28);
      aBlock = (void *)v32;
      if ((swift_dynamicCast(&v195, &aBlock, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for String, 6) & 1) == 0)
      {
LABEL_32:
        v89 = v25;
        goto LABEL_33;
      }
      v33 = v195;
      v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOMediaPlayMetaDataKeyPlayerTrackID"));
      v36 = v35;
      if (*(_QWORD *)(v25 + 16) && (v37 = specialized __RawDictionaryStorage.find<A>(_:)(v34, v35), (v38 & 1) != 0))
      {
        v181 = *((_QWORD *)&v33 + 1);
        v39 = *(_QWORD *)(*(_QWORD *)(v25 + 56) + 8 * v37);
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease(v36);
        aBlock = (void *)v39;
        if ((swift_dynamicCast(&v195, &aBlock, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for String, 6) & 1) == 0)
        {
          v90 = &v203;
LABEL_31:
          swift_bridgeObjectRelease(*(v90 - 32));
          goto LABEL_32;
        }
        v179 = v33;
        v40 = *((_QWORD *)&v195 + 1);
        v178 = v195;
        v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOMediaPlayMetaDataKeyPlayerBundleID"));
        v36 = v42;
        v43 = v181;
        if (*(_QWORD *)(v25 + 16))
        {
          v180 = v40;
          v44 = specialized __RawDictionaryStorage.find<A>(_:)(v41, v42);
          if ((v45 & 1) != 0)
          {
            v46 = *(_QWORD *)(*(_QWORD *)(v25 + 56) + 8 * v44);
            swift_unknownObjectRetain();
            swift_bridgeObjectRelease(v36);
            aBlock = (void *)v46;
            if ((swift_dynamicCast(&v195, &aBlock, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for String, 6) & 1) != 0)
            {
              v47 = v195;
              v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOMediaPlayMetaDataKeyPlayerArtist"));
              v50 = v49;
              if (!*(_QWORD *)(v25 + 16)
                || (v51 = specialized __RawDictionaryStorage.find<A>(_:)(v48, v49), (v52 & 1) == 0))
              {
                swift_bridgeObjectRelease(*((_QWORD *)&v47 + 1));
                swift_bridgeObjectRelease(v180);
                swift_bridgeObjectRelease(v25);
                swift_bridgeObjectRelease(v50);
                v89 = v181;
                goto LABEL_33;
              }
              *((_QWORD *)&v177 + 1) = *((_QWORD *)&v47 + 1);
              v53 = *(_QWORD *)(*(_QWORD *)(v25 + 56) + 8 * v51);
              swift_unknownObjectRetain();
              swift_bridgeObjectRelease(v50);
              aBlock = (void *)v53;
              if (swift_dynamicCast(&v195, &aBlock, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for String, 6))
              {
                *(_QWORD *)&v177 = v47;
                v54 = *((_QWORD *)&v195 + 1);
                v176 = v195;
                v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOMediaPlayMetaDataKeyPlayerBgColor"));
                v57 = v56;
                v58 = *((_QWORD *)&v177 + 1);
                if (!*(_QWORD *)(v25 + 16)
                  || (v59 = specialized __RawDictionaryStorage.find<A>(_:)(v55, v56), (v60 & 1) == 0))
                {
                  swift_bridgeObjectRelease(v58);
                  swift_bridgeObjectRelease(v180);
                  swift_bridgeObjectRelease(v25);
                  swift_bridgeObjectRelease(v57);
                  swift_bridgeObjectRelease(v181);
                  v89 = v54;
                  goto LABEL_33;
                }
                v61 = *(_QWORD *)(*(_QWORD *)(v25 + 56) + 8 * v59);
                swift_unknownObjectRetain();
                swift_bridgeObjectRelease(v57);
                aBlock = (void *)v61;
                if (swift_dynamicCast(&v195, &aBlock, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for String, 6))
                {
                  v175 = v195;
                  v62 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOMediaPlayMetaDataKeyPlayerAlbumName"));
                  v64 = v63;
                  if (!*(_QWORD *)(v25 + 16)
                    || (v65 = specialized __RawDictionaryStorage.find<A>(_:)(v62, v63), (v66 & 1) == 0))
                  {
                    swift_bridgeObjectRelease(*((_QWORD *)&v175 + 1));
                    swift_bridgeObjectRelease(v180);
                    swift_bridgeObjectRelease(v25);
                    swift_bridgeObjectRelease(v64);
                    swift_bridgeObjectRelease(v181);
                    swift_bridgeObjectRelease(v54);
                    v89 = *((_QWORD *)&v177 + 1);
                    goto LABEL_33;
                  }
                  v67 = *(_QWORD *)(*(_QWORD *)(v25 + 56) + 8 * v65);
                  swift_unknownObjectRetain();
                  swift_bridgeObjectRelease(v64);
                  aBlock = (void *)v67;
                  if (swift_dynamicCast(&v195, &aBlock, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for String, 6))
                  {
                    v68 = *((_QWORD *)&v195 + 1);
                    v189 = v195;
                    v69 = swift_allocObject(&unk_1001ED118, 24, 7);
                    v70 = specialized static MOSuggestionAssetMediaCoverArtQueryInput.typeFromBundleId(_:)(v177, *((uint64_t *)&v177 + 1));
                    *(_QWORD *)(v69 + 16) = v70;
                    v71 = swift_allocObject(&unk_1001ED760, 32, 7);
                    *(_QWORD *)(v71 + 16) = 0;
                    v190 = v71;
                    *(_BYTE *)(v71 + 24) = 0;
                    v72 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOMediaPlayMetaDataKeyPlayerMediaTypeKey"));
                    v74 = v73;
                    v75 = *(_QWORD *)(v25 + 16);
                    if (v70 == 6)
                    {
                      if (v75)
                      {
                        v76 = specialized __RawDictionaryStorage.find<A>(_:)(v72, v73);
                        if ((v77 & 1) != 0)
                        {
                          v78 = *(_QWORD *)(*(_QWORD *)(v25 + 56) + 8 * v76);
                          swift_unknownObjectRetain();
                          swift_bridgeObjectRelease(v74);
                          *(_QWORD *)&v195 = v78;
                          type metadata accessor for MOMediaPlayMetaDataKeyPlayerMediaType(0);
                          if ((swift_dynamicCast(&aBlock, &v195, (char *)&type metadata for Swift.AnyObject + 8, v79, 6) & 1) == 0)goto LABEL_61;
                          v80 = aBlock;
                          v81 = MOMediaPlayMetaDataKeyPlayerMediaTypeThirdPartyMedia[0];
                          v82 = static String._unconditionallyBridgeFromObjectiveC(_:)(aBlock);
                          v84 = v83;
                          v86 = static String._unconditionallyBridgeFromObjectiveC(_:)(v81);
                          v87 = v85;
                          if (v82 == v86 && v84 == v85)
                            goto LABEL_26;
                          v158 = _stringCompareWithSmolCheck(_:_:expecting:)(v82, v84, v86, v85, 0);
                          swift_bridgeObjectRelease(v84);
                          swift_bridgeObjectRelease(v87);
                          if ((v158 & 1) != 0)
                            goto LABEL_75;
                          v160 = MOMediaPlayMetaDataKeyPlayerMediaTypeThirdPartyMediaAlbum[0];
                          v161 = static String._unconditionallyBridgeFromObjectiveC(_:)(v80);
                          v84 = v162;
                          v164 = static String._unconditionallyBridgeFromObjectiveC(_:)(v160);
                          v165 = v163;
                          if (v161 == v164 && v84 == v163)
                            goto LABEL_26;
                          v166 = _stringCompareWithSmolCheck(_:_:expecting:)(v161, v84, v164, v163, 0);
                          swift_bridgeObjectRelease(v84);
                          swift_bridgeObjectRelease(v165);
                          if ((v166 & 1) != 0)
                            goto LABEL_75;
                          v167 = MOMediaPlayMetaDataKeyPlayerMediaTypeThirdPartyMediaArtist;
                          v168 = static String._unconditionallyBridgeFromObjectiveC(_:)(v80);
                          v84 = v169;
                          v171 = static String._unconditionallyBridgeFromObjectiveC(_:)(v167);
                          v172 = v170;
                          if (v168 == v171 && v84 == v170)
                          {
LABEL_26:
                            swift_bridgeObjectRelease_n(v84, 2);
                          }
                          else
                          {
                            v173 = _stringCompareWithSmolCheck(_:_:expecting:)(v168, v84, v171, v170, 0);
                            swift_bridgeObjectRelease(v84);
                            swift_bridgeObjectRelease(v172);
                            if ((v173 & 1) == 0)
                            {

LABEL_61:
                              v130 = *(_QWORD *)(v69 + 16);
                              *(_QWORD *)&v195 = v179;
                              *((_QWORD *)&v195 + 1) = v181;
                              *(_QWORD *)&v196 = v189;
                              *((_QWORD *)&v196 + 1) = v68;
                              *(_QWORD *)&v197 = v176;
                              *((_QWORD *)&v197 + 1) = v54;
                              *(_QWORD *)&v198 = v178;
                              *((_QWORD *)&v198 + 1) = v180;
                              v199 = v177;
                              v200 = v130;
                              if ((unint64_t)(v130 - 6) > 2)
                              {
                                swift_bridgeObjectRetain(v181);
                                swift_bridgeObjectRetain(v68);
                                swift_bridgeObjectRetain(v54);
                                swift_bridgeObjectRelease(*((_QWORD *)&v175 + 1));
                                v148 = *(_QWORD *)(v69 + 16);
                                if (v148 == 4 || v148 == 1)
                                {
                                  if (one-time initialization token for sharedSongProvider != -1)
                                    swift_once(&one-time initialization token for sharedSongProvider, one-time initialization function for sharedSongProvider);
                                  v149 = &static MOSuggestionMediaCoverArtProviders.sharedSongProvider;
                                }
                                else
                                {
                                  if (one-time initialization token for sharedPodcastProvider != -1)
                                    swift_once(&one-time initialization token for sharedPodcastProvider, one-time initialization function for sharedPodcastProvider);
                                  v149 = &static MOSuggestionMediaCoverArtProviders.sharedPodcastProvider;
                                }
                                v150 = *v149;
                                swift_retain(*v149);
                                v151 = swift_allocObject(&unk_1001ED788, 112, 7);
                                v152 = v31;
                                *(_QWORD *)(v151 + 16) = v31;
                                *(_QWORD *)(v151 + 24) = v25;
                                v153 = v183;
                                *(_BYTE *)(v151 + 32) = v183;
                                v154 = v191;
                                *(_QWORD *)(v151 + 40) = partial apply for specialized closure #1 in MOAngelControllerWrapper.continuationWrapper<A>(action:);
                                *(_QWORD *)(v151 + 48) = v154;
                                v155 = v181;
                                *(_QWORD *)(v151 + 56) = v179;
                                *(_QWORD *)(v151 + 64) = v155;
                                *(_QWORD *)(v151 + 72) = v189;
                                *(_QWORD *)(v151 + 80) = v68;
                                *(_QWORD *)(v151 + 88) = v176;
                                *(_QWORD *)(v151 + 96) = v54;
                                *(_QWORD *)(v151 + 104) = v69;
                                v156 = *(void (**)(__int128 *, uint64_t, void (*)(void *), uint64_t, __n128))(*(_QWORD *)v150 + 248);
                                swift_retain(v152);
                                swift_retain(v154);
                                v157 = swift_retain(v69);
                                v156(&v195, v153, partial apply for closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheMediaArtworkFromProvider(_:cacheType:completion:), v151, v157);
                                swift_release(v20);
                                swift_release(v154);
                                swift_release(v69);
                                swift_release(v190);
                                swift_release(v150);
                                swift_release(v151);
                                swift_bridgeObjectRelease(*((_QWORD *)&v177 + 1));
                                swift_bridgeObjectRelease(v180);
                                swift_bridgeObjectRelease(v54);
                                swift_bridgeObjectRelease(v68);
                                *(_QWORD *)&result = swift_bridgeObjectRelease(v155).n128_u64[0];
                              }
                              else
                              {
                                v131 = swift_allocObject(&unk_1001ED050, 24, 7);
                                swift_weakInit(v131 + 16);
                                v132 = swift_allocObject(&unk_1001ED7B0, 185, 7);
                                v133 = v177;
                                *(_QWORD *)(v132 + 16) = v131;
                                *(_QWORD *)(v132 + 24) = v133;
                                v134 = *((_QWORD *)&v177 + 1);
                                v135 = v175;
                                *(_QWORD *)(v132 + 32) = *((_QWORD *)&v177 + 1);
                                *(_QWORD *)(v132 + 40) = v135;
                                v137 = v190;
                                v136 = v191;
                                *(_QWORD *)(v132 + 48) = *((_QWORD *)&v175 + 1);
                                *(_QWORD *)(v132 + 56) = v137;
                                v138 = v198;
                                *(_OWORD *)(v132 + 96) = v197;
                                *(_OWORD *)(v132 + 112) = v138;
                                *(_OWORD *)(v132 + 128) = v199;
                                v139 = v200;
                                v140 = v196;
                                *(_OWORD *)(v132 + 64) = v195;
                                *(_OWORD *)(v132 + 80) = v140;
                                *(_QWORD *)(v132 + 144) = v139;
                                *(_QWORD *)(v132 + 152) = v31;
                                *(_QWORD *)(v132 + 160) = v25;
                                *(_QWORD *)(v132 + 168) = partial apply for specialized closure #1 in MOAngelControllerWrapper.continuationWrapper<A>(action:);
                                *(_QWORD *)(v132 + 176) = v136;
                                *(_BYTE *)(v132 + 184) = v183;
                                v141 = objc_allocWithZone((Class)ISIcon);
                                swift_bridgeObjectRetain_n(v134, 2);
                                swift_retain(v31);
                                swift_retain(v131);
                                swift_retain(v137);
                                swift_retain(v136);
                                v142 = String._bridgeToObjectiveC()();
                                v143 = objc_msgSend(v141, "initWithBundleIdentifier:", v142);

                                if (one-time initialization token for iconDescriptor != -1)
                                  swift_once(&one-time initialization token for iconDescriptor, one-time initialization function for iconDescriptor);
                                v144 = static MOSuggestionAssetAppIconProvider.iconDescriptor;
                                objc_msgSend((id)static MOSuggestionAssetAppIconProvider.iconDescriptor, "setShouldApplyMask:", 0);
                                v145 = swift_allocObject(&unk_1001ED7D8, 32, 7);
                                *(_QWORD *)(v145 + 16) = partial apply for specialized closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheMediaArtworkFromProvider(_:cacheType:completion:);
                                *(_QWORD *)(v145 + 24) = v132;
                                v193[3] = closure #1 in static MOSuggestionAssetAppIconProvider.getImageFor(bundleIdentifier:shouldApplyMask:completion:)partial apply;
                                v194 = v145;
                                aBlock = _NSConcreteStackBlock;
                                v193[0] = 1107296256;
                                v193[1] = thunk for @escaping @callee_guaranteed (@guaranteed CGImageRef?) -> ();
                                v193[2] = &block_descriptor_136;
                                v146 = _Block_copy(&aBlock);
                                v147 = v194;
                                swift_retain(v132);
                                objc_msgSend(v143, "getCGImageForImageDescriptor:completion:", v144, v146, swift_release(v147).n128_f64[0]);
                                _Block_release(v146);
                                swift_release(v20);
                                swift_release(v191);
                                swift_release(v69);
                                swift_release(v190);
                                swift_release(v131);
                                swift_release(v132);
                                swift_bridgeObjectRelease(*((_QWORD *)&v177 + 1));

                              }
                              return result;
                            }
                          }
LABEL_75:
                          v159 = specialized static MOSuggestionAssetMediaCoverArtQueryInput.typeFromBundleMediaType(_:)((uint64_t)v80);

                          *(_QWORD *)(v69 + 16) = v159;
                          goto LABEL_61;
                        }
                      }
                    }
                    else if (v75)
                    {
                      v124 = specialized __RawDictionaryStorage.find<A>(_:)(v72, v73);
                      if ((v125 & 1) != 0)
                      {
                        v126 = *(_QWORD *)(*(_QWORD *)(v25 + 56) + 8 * v124);
                        swift_unknownObjectRetain();
                        swift_bridgeObjectRelease(v74);
                        *(_QWORD *)&v195 = v126;
                        type metadata accessor for MOMediaPlayMetaDataKeyPlayerMediaType(0);
                        if ((swift_dynamicCast(&aBlock, &v195, (char *)&type metadata for Swift.AnyObject + 8, v127, 6) & 1) != 0)
                        {
                          v128 = aBlock;
                          v129 = specialized static MOSuggestionAssetMediaCoverArtQueryInput.typeFromBundleMediaType(_:)((uint64_t)aBlock);

                          *(_QWORD *)(v69 + 16) = v129;
                        }
                        goto LABEL_61;
                      }
                    }
                    swift_bridgeObjectRelease(v74);
                    goto LABEL_61;
                  }
                  swift_bridgeObjectRelease(v181);
                  swift_bridgeObjectRelease(v54);
                  swift_bridgeObjectRelease(*((_QWORD *)&v177 + 1));
                  v122 = (uint64_t *)&v199;
                  goto LABEL_48;
                }
                swift_bridgeObjectRelease(v181);
                v123 = v54;
              }
              else
              {
                v123 = v181;
              }
              swift_bridgeObjectRelease(v123);
              v122 = (uint64_t *)&v201;
            }
            else
            {
              v122 = &v203;
            }
LABEL_48:
            swift_bridgeObjectRelease(*(v122 - 32));
            v90 = &v202;
            goto LABEL_31;
          }
          swift_bridgeObjectRelease(v43);
          v88 = v180;
        }
        else
        {
          swift_bridgeObjectRelease(v181);
          v88 = v40;
        }
      }
      else
      {
        v88 = *((_QWORD *)&v33 + 1);
      }
      swift_bridgeObjectRelease(v88);
      swift_bridgeObjectRelease(v25);
      v89 = v36;
LABEL_33:
      swift_bridgeObjectRelease(v89);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v28);
LABEL_34:
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v91 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v91, (uint64_t)static MOAngelLogger.assets);
  v92 = swift_retain_n(a1);
  v93 = Logger.logObject.getter(v92);
  v94 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v93, v94))
  {
    v183 = a11;
    v95 = a8;
    v96 = (uint8_t *)swift_slowAlloc(12, -1);
    v97 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v195 = v97;
    *(_DWORD *)v96 = 136315138;
    v98 = a1;
    v99 = ((uint64_t (*)(void))v22)();
    if (v99)
    {
      v100 = v99;
      v101 = Dictionary.debugDescription.getter(v99, &type metadata for String, (char *)&type metadata for Swift.AnyObject + 8, &protocol witness table for String);
      v103 = v102;
      swift_bridgeObjectRelease(v100);
    }
    else
    {
      v103 = 0xE300000000000000;
      v101 = 7104878;
    }
    aBlock = (void *)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v101, v103, (uint64_t *)&v195);
    v105 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v193, v96 + 4);
    swift_release_n(v98, v105);
    swift_bridgeObjectRelease(v103);
    _os_log_impl((void *)&_mh_execute_header, v93, v94, "[MOSuggestionAssetCacheManager] Incomplete media metadata for artwork fetch %s", v96, 0xCu);
    swift_arrayDestroy(v97, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v97, -1, -1);
    swift_slowDealloc(v96, -1, -1);

    a8 = v95;
    v17 = v183;
  }
  else
  {

    swift_release_n(a1, v104);
  }
  v106 = type metadata accessor for URL(0);
  v107 = *(_QWORD *)(v106 - 8);
  v108 = v184;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v107 + 56))(v184, 1, 1, v106);
  v109 = String._bridgeToObjectiveC()();
  v110 = String._bridgeToObjectiveC()();
  v111 = String._bridgeToObjectiveC()();
  v113 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48))(v108, 1, v106) != 1)
  {
    URL._bridgeToObjectiveC()(v112);
    v113 = v114;
    (*(void (**)(char *, uint64_t))(v107 + 8))(v108, v106);
  }
  v115 = objc_msgSend(objc_allocWithZone((Class)MOSuggestionAssetMediaItem), "initTitle:albumTitle:artistName:albumArt:trackIdentifier:previewURL:mediaType:", v109, v110, v111, 0, 0, v113, 0);

  v116 = MOSuggestionAssetsTypeMediaCoverArt;
  type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MOSuggestionAssetMediaItem, MOSuggestionAssetMediaItem_ptr);
  v117 = objc_msgSend(objc_allocWithZone((Class)MOSuggestionAsset), "init:type:contentClassType:", v115, v116, swift_getObjCClassFromMetadata());
  v118 = v188;
  swift_retain(v188);
  v119 = v190;
  swift_retain(v190);
  swift_retain(a8);
  v120 = v189;
  swift_bridgeObjectRetain(v189);
  swift_retain(v17);
  closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(v117, v118, v186, v119, v187, a8, v120, v185);
  swift_release(v20);
  swift_release(v191);

  swift_release(v118);
  swift_release(v119);
  swift_release(a8);
  swift_bridgeObjectRelease(v120);
  *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  return result;
}

double specialized MOSuggestionAssetCacheManager.fetchAndCacheAppIconsFromProvider(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(double *, __n128), _QWORD *a10)
{
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(__n128);
  __n128 v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, void (*)(void *), _QWORD *, __n128);
  __n128 v30;
  double result;
  int v32;
  uint64_t v33;

  v17 = a10;
  v18 = swift_allocObject(&unk_1001ED828, 80, 7);
  *(_QWORD *)(v18 + 16) = a3;
  v32 = a4;
  *(_BYTE *)(v18 + 24) = a4;
  *(_QWORD *)(v18 + 32) = a5;
  *(_QWORD *)(v18 + 40) = a6;
  v33 = a6;
  *(_QWORD *)(v18 + 48) = a7;
  *(_QWORD *)(v18 + 56) = a8;
  *(_QWORD *)(v18 + 64) = a9;
  *(_QWORD *)(v18 + 72) = a10;
  v19 = swift_allocObject(&unk_1001ED850, 32, 7);
  *(_QWORD *)(v19 + 16) = partial apply for closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:);
  *(_QWORD *)(v19 + 24) = v18;
  v20 = *(uint64_t (**)(__n128))(*(_QWORD *)a1 + 216);
  swift_retain(a3);
  swift_retain(a5);
  swift_retain(a7);
  swift_bridgeObjectRetain(a8);
  swift_retain(a10);
  v21 = swift_retain(v18);
  v22 = (void *)v20(v21);
  v23 = objc_msgSend(v22, "assets");

  if (v23)
  {
    v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v26 = v25;

    if (one-time initialization token for shared != -1)
      swift_once(&one-time initialization token for shared, one-time initialization function for shared);
    v27 = static MOSuggestionAssetAppIconProvider.shared;
    v28 = swift_allocObject(&unk_1001ED050, 24, 7);
    swift_weakInit(v28 + 16);
    v17 = (_QWORD *)swift_allocObject(&unk_1001ED878, 48, 7);
    v17[2] = a1;
    v17[3] = v28;
    v17[4] = partial apply for specialized closure #1 in MOAngelControllerWrapper.continuationWrapper<A>(action:);
    v17[5] = v19;
    v29 = *(void (**)(uint64_t, uint64_t, void (*)(void *), _QWORD *, __n128))(*(_QWORD *)v27 + 88);
    swift_retain(a1);
    swift_retain(v28);
    v30 = swift_retain(v19);
    v29(v24, v26, partial apply for closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheAppIconsFromProvider(_:completion:), v17, v30);
    swift_release(v18);
    swift_release(v19);
    swift_bridgeObjectRelease(v26);
    swift_release(v28);
  }
  else
  {
    swift_retain(a3);
    swift_retain(a5);
    swift_retain(a7);
    swift_bridgeObjectRetain(a8);
    swift_retain(a10);
    closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, a3, v32, a5, v33, a7, a8, a9);
    swift_release(v18);
    swift_release(v19);
    swift_release(a3);
    swift_release(a5);
    swift_release(a7);
    swift_bridgeObjectRelease(a8);
  }
  *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  return result;
}

uint64_t specialized MOSuggestionAssetCacheManager.fetchAndCacheReflectionsPromptsFromProvider(_:isProxyForClient:completion:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(double *, __n128), void *a11)
{
  NSString v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(__n128);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t (*v51)(__n128);
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  __n128 v60;
  __n128 v61;
  __n128 v62;
  __n128 v63;
  uint64_t v64;
  void (*v65)(double *, __n128);
  __n128 v66;
  NSString v67;
  __n128 v68;
  __n128 v69;
  __n128 v70;
  __n128 v71;
  NSString v73;
  __n128 v74;
  __n128 v75;
  __n128 v76;
  __n128 v77;
  NSString v78;
  __n128 v79;
  __n128 v80;
  __n128 v81;
  __n128 v82;
  NSString v83;
  __n128 v84;
  __n128 v85;
  __n128 v86;
  __n128 v87;
  NSString v88;
  __n128 v89;
  __n128 v90;
  __n128 v91;
  __n128 v92;
  NSString v93;
  __n128 v94;
  __n128 v95;
  __n128 v96;
  __n128 v97;
  NSString v98;
  id v99;
  id v100;
  Class isa;
  uint64_t v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  NSString v106;
  id v107;
  __n128 v108;
  __n128 v109;
  __n128 v110;
  __n128 v111;
  __n128 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  uint64_t (*v117)(void);
  uint64_t v118;
  id v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD v123[3];
  char v124[24];
  uint64_t v125;

  v18 = a11;
  v19 = type metadata accessor for MOEvergreenAssetReference(0);
  v20 = swift_dynamicCastClass(a1, v19);
  if (!v20)
  {
    swift_retain_n(a4);
    swift_retain_n(a6);
    swift_retain_n(a8);
    swift_bridgeObjectRetain_n(a9, 4);
    swift_retain_n(a11);
    v23 = a4;
    v24 = a9;
LABEL_12:
    swift_retain(v23);
    swift_retain(a6);
    swift_retain(a8);
    swift_bridgeObjectRetain(v24);
    swift_retain(a11);
    closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, v23, a5, a6, a7, a8, v24, a10);
LABEL_28:
    swift_release_n(v23, v48);
    swift_release_n(a6, v66);
    swift_release(a8);
    swift_bridgeObjectRelease(v24);
    v67 = v18;
    goto LABEL_29;
  }
  v116 = a2;
  v113 = a3;
  v121 = a7;
  v21 = *(uint64_t (**)(__n128))(*(_QWORD *)v20 + 344);
  v22 = v20;
  v23 = a4;
  swift_retain_n(a4);
  swift_retain_n(a6);
  swift_retain_n(a8);
  v24 = a9;
  swift_bridgeObjectRetain_n(a9, 4);
  swift_retain_n(a11);
  v25 = swift_retain(a1);
  v115 = v22;
  v26 = v21(v25);
  if (!v26)
  {
    swift_release(a1);
    a7 = v121;
    goto LABEL_12;
  }
  v27 = (_QWORD *)v26;
  v120 = a1;
  v28 = v121;
  if ((v116 & 1) == 0)
    goto LABEL_17;
  v117 = *(uint64_t (**)(void))(*(_QWORD *)a1 + 288);
  v29 = v117();
  v31 = v30;
  swift_beginAccess(v113 + 32, v124, 0, 0);
  v32 = *(_QWORD *)(v113 + 32);
  if (!*(_QWORD *)(v32 + 16))
  {
    v49 = v31;
LABEL_15:
    swift_bridgeObjectRelease(v49);
    goto LABEL_16;
  }
  swift_bridgeObjectRetain(v32);
  v33 = specialized __RawDictionaryStorage.find<A>(_:)(v29, v31);
  if ((v34 & 1) == 0)
  {
    swift_bridgeObjectRelease(v31);
    v49 = v32;
    goto LABEL_15;
  }
  v35 = *(_QWORD *)(*(_QWORD *)(v32 + 56) + 8 * v33);
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v32);
  v36 = v27[2];
  if ((uint64_t)v35 < (uint64_t)v36)
  {
    v114 = v113 + 32;
    v37 = v27;
    v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    v39 = swift_allocObject(v38, 48, 7);
    v40 = (__n128)xmmword_10019ED20;
    *(_OWORD *)(v39 + 16) = xmmword_10019ED20;
    if ((v35 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v35 < v36)
    {
      v27 = (_QWORD *)v39;
      v41 = &v37[2 * v35];
      v43 = v41[4];
      v42 = v41[5];
      swift_bridgeObjectRetain(v42);
      v44 = swift_bridgeObjectRelease(v37);
      v27[4] = v43;
      v27[5] = v42;
      v45 = ((uint64_t (*)(__n128))v117)(v44);
      v47 = v46;
      swift_beginAccess(v114, v123, 33, 0);
      specialized Dictionary._Variant.removeValue(forKey:)(v45, v47);
      swift_endAccess(v123);
      swift_bridgeObjectRelease(v47);
      v28 = v121;
      goto LABEL_17;
    }
    __break(1u);
LABEL_45:
    swift_release_n(a11, v40);
    swift_bridgeObjectRelease_n(a9, 5);
    swift_release_n(a8, v110);
    swift_release_n(a6, v111);
    swift_release_n(v23, v112);
    __break(1u);
    JUMPOUT(0x10018AC80);
  }
LABEL_16:
  swift_retain(v23);
  swift_retain(a6);
  swift_retain(a8);
  swift_bridgeObjectRetain(a9);
  swift_retain(a11);
  v28 = v121;
  closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, v23, a5, a6, v121, a8, a9, a10);
  swift_release(v23);
  swift_release(a6);
  swift_release(a8);
  swift_bridgeObjectRelease(a9);
  swift_release(a11);
LABEL_17:
  v50 = v27;
  v51 = *(uint64_t (**)(__n128))(*(_QWORD *)v115 + 256);
  v52 = swift_retain(v120);
  v53 = v51(v52);
  swift_release(v120);
  if (!v53)
  {
    v64 = (uint64_t)v50;
    goto LABEL_26;
  }
  v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOEvergreenMetaDataKeyEvergreenType);
  v56 = (id)v55;
  if (!*(_QWORD *)(v53 + 16) || (v57 = specialized __RawDictionaryStorage.find<A>(_:)(v54, v55), (v58 & 1) == 0))
  {
LABEL_24:
    swift_bridgeObjectRelease(v50);
    swift_bridgeObjectRelease(v56);
    v64 = v53;
LABEL_26:
    swift_bridgeObjectRelease(v64);
    v65 = a10;
LABEL_27:
    swift_retain(v23);
    swift_retain(a6);
    swift_retain(a8);
    swift_bridgeObjectRetain(a9);
    swift_retain(v18);
    closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, v23, a5, a6, v28, a8, a9, v65);
    v48 = swift_release(v120);
    goto LABEL_28;
  }
  v59 = *(_QWORD *)(*(_QWORD *)(v53 + 56) + 8 * v57);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease(v56);
  swift_bridgeObjectRelease(v53);
  v123[0] = v59;
  if ((swift_dynamicCast(&v125, v123, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for UInt, 6) & 1) == 0)
  {
    swift_bridgeObjectRelease(v50);
    v18 = a11;
    v65 = a10;
    goto LABEL_27;
  }
  v118 = v125;
  switch(v125)
  {
    case 1:
      v18 = String._bridgeToObjectiveC()();
      v56 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v18);

      if (v56)
        goto LABEL_42;
      swift_release_n(a11, v60);
      swift_bridgeObjectRelease_n(a9, 5);
      swift_release_n(a8, v61);
      swift_release_n(a6, v62);
      swift_release_n(v23, v63);
      __break(1u);
      goto LABEL_24;
    case 2:
      v73 = String._bridgeToObjectiveC()();
      v56 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v73);

      if (v56)
        goto LABEL_42;
      swift_release_n(a11, v74);
      swift_bridgeObjectRelease_n(a9, 5);
      swift_release_n(a8, v75);
      swift_release_n(a6, v76);
      swift_release_n(v23, v77);
      __break(1u);
LABEL_33:
      v78 = String._bridgeToObjectiveC()();
      v56 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v78);

      if (!v56)
      {
        swift_release_n(a11, v79);
        swift_bridgeObjectRelease_n(a9, 5);
        swift_release_n(a8, v80);
        swift_release_n(a6, v81);
        swift_release_n(v23, v82);
        __break(1u);
LABEL_35:
        v83 = String._bridgeToObjectiveC()();
        v56 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v83);

        if (!v56)
        {
          swift_release_n(a11, v84);
          swift_bridgeObjectRelease_n(a9, 5);
          swift_release_n(a8, v85);
          swift_release_n(a6, v86);
          swift_release_n(v23, v87);
          __break(1u);
LABEL_37:
          v88 = String._bridgeToObjectiveC()();
          v56 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v88);

          if (!v56)
          {
            swift_release_n(a11, v89);
            swift_bridgeObjectRelease_n(a9, 5);
            swift_release_n(a8, v90);
            swift_release_n(a6, v91);
            swift_release_n(v23, v92);
            __break(1u);
LABEL_39:
            v93 = String._bridgeToObjectiveC()();
            v56 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v93);

            if (!v56)
            {
              swift_release_n(a11, v94);
              swift_bridgeObjectRelease_n(a9, 5);
              swift_release_n(a8, v95);
              swift_release_n(a6, v96);
              swift_release_n(v23, v97);
              __break(1u);
LABEL_41:
              v98 = String._bridgeToObjectiveC()();
              v56 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v98);

              if (!v56)
                goto LABEL_45;
            }
          }
        }
      }
LABEL_42:
      v99 = objc_allocWithZone((Class)MOSuggestionAssetReflectionPrompt);
      v100 = v56;
      isa = Array._bridgeToObjectiveC()().super.isa;
      v119 = objc_msgSend(v99, "initWithReflectionPrompts:icon:type:", isa, v100, v118, swift_bridgeObjectRelease(v50).n128_f64[0]);

      v102 = MOSuggestionAssetsTypeReflectionPrompt;
      type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MOSuggestionAssetReflectionPrompt, MOSuggestionAssetReflectionPrompt_ptr);
      v103 = objc_msgSend(objc_allocWithZone((Class)MOSuggestionAsset), "init:type:contentClassType:", v119, v102, swift_getObjCClassFromMetadata());
      (*(void (**)(id))(*(_QWORD *)v120 + 288))(v103);
      v105 = v104;
      v106 = String._bridgeToObjectiveC()();
      objc_msgSend(v103, "addIdentifier:", v106, swift_bridgeObjectRelease(v105).n128_f64[0]);

      swift_retain(v23);
      swift_retain(a6);
      swift_retain(a8);
      swift_bridgeObjectRetain(a9);
      swift_retain(a11);
      v107 = v103;
      closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(v103, v23, a5, a6, v121, a8, a9, a10);

      swift_release(v120);
      v18 = a11;
      swift_release_n(v23, v108);
      swift_release_n(a6, v109);
      swift_release(a8);
      swift_bridgeObjectRelease(a9);
      v67 = a11;
      break;
    case 3:
      goto LABEL_33;
    case 4:
      goto LABEL_35;
    case 5:
      goto LABEL_37;
    case 6:
      goto LABEL_39;
    default:
      goto LABEL_41;
  }
LABEL_29:
  v68 = swift_release(v67);
  swift_release_n(a6, v68);
  swift_release_n(v23, v69);
  swift_release_n(v18, v70);
  swift_bridgeObjectRelease_n(v24, 4);
  return swift_release_n(a8, v71);
}

uint64_t specialized MOSuggestionAssetCacheManager.fetchAndCacheLocationsPreviews(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(double *, __n128), uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  char v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  double v51;
  uint64_t v52;
  void *v53;
  void (*v54)(double *, __n128);
  unint64_t v55;
  char v56;
  uint64_t v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  uint64_t v64;
  id v65;
  id v66;
  uint64_t ObjCClassFromMetadata;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  void *v71;
  id v72;
  uint64_t v73;
  void *v74;
  id v75;
  void *v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  id v81;
  unint64_t v82;
  char v83;
  _OWORD *v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(double *, __n128);
  uint64_t v93;
  uint64_t v94;
  __n128 v95;
  __n128 v96;
  __n128 v97;
  __n128 v98;
  __n128 v99;
  __n128 v100;
  __n128 v101;
  __n128 v102;
  uint64_t v104;
  double v105;
  void *v106;
  id v107;
  __n128 v108;
  uint64_t v109;
  void (*v110)(char *, uint64_t, __n128);
  double v111;
  id v112;
  id v113;
  double v114;
  double v115;
  _QWORD *v116;
  uint64_t v117;
  _QWORD *boxed_opaque_existential_1;
  void (*v119)(_QWORD *, char *, uint64_t);
  void *v120;
  _QWORD *v121;
  id v122;
  id v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  Class isa;
  double v128;
  id v129;
  uint64_t v130;
  uint64_t v131;
  NSString v132;
  id v133;
  uint64_t v134;
  uint64_t v135;
  NSString v136;
  id v137;
  id v138;
  id v139;
  id v140;
  double v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  int v148;
  void (*v149)(double *, __n128);
  uint64_t v150;
  __int128 v151;
  uint64_t ObjectType;
  uint64_t v153;
  double v154[2];

  v150 = a6;
  v142 = a2;
  v16 = type metadata accessor for Date(0);
  v144 = *(_QWORD *)(v16 - 8);
  v145 = v16;
  v17 = __chkstk_darwin(v16);
  v146 = (char *)&v138 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v147 = (char *)&v138 - v19;
  v20 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 256);
  swift_retain_n(a3);
  swift_retain_n(a5);
  swift_retain_n(a7);
  swift_bridgeObjectRetain_n(a8, 4);
  v21 = swift_retain_n(a10);
  v143 = a1;
  v22 = v20(v21);
  if (v22)
  {
    v23 = v22;
    v148 = a4;
    v149 = a9;
    v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(kMOResourcePlaceKeyStartDate);
    v26 = v25;
    if (!*(_QWORD *)(v23 + 16))
    {
      swift_bridgeObjectRelease(v23);
      swift_bridgeObjectRelease(v26);
      v94 = v150;
      v28 = v148;
LABEL_28:
      swift_retain(a3);
      swift_retain(a5);
      swift_retain(a7);
      swift_bridgeObjectRetain(a8);
      swift_retain(a10);
      v86 = a3;
      v87 = v28;
      v88 = a5;
      v89 = v94;
      v90 = a7;
      v91 = a8;
      v92 = v149;
      goto LABEL_29;
    }
    v27 = specialized __RawDictionaryStorage.find<A>(_:)(v24, v25);
    v28 = v148;
    if ((v29 & 1) == 0)
      goto LABEL_24;
    v30 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v27);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease(v26);
    *(_QWORD *)&v151 = v30;
    if ((swift_dynamicCast(v154, &v151, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Double, 6) & 1) != 0)
    {
      v31 = v154[0];
      v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(kMOResourcePlaceKeyEndDate);
      v26 = v33;
      if (!*(_QWORD *)(v23 + 16))
        goto LABEL_24;
      v34 = specialized __RawDictionaryStorage.find<A>(_:)(v32, v33);
      if ((v35 & 1) == 0)
        goto LABEL_24;
      v36 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v34);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease(v26);
      *(_QWORD *)&v151 = v36;
      if ((swift_dynamicCast(v154, &v151, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Double, 6) & 1) != 0)
      {
        v37 = v154[0];
        v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(kMOResourcePlaceKeyPlaceUserType);
        v26 = v39;
        if (*(_QWORD *)(v23 + 16))
        {
          v40 = specialized __RawDictionaryStorage.find<A>(_:)(v38, v39);
          if ((v41 & 1) != 0)
          {
            v42 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v40);
            swift_unknownObjectRetain();
            swift_bridgeObjectRelease(v26);
            *(_QWORD *)&v151 = v42;
            if ((swift_dynamicCast(v154, &v151, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Int, 6) & 1) != 0)
            {
              v43 = v154[0];
              Date.init(timeIntervalSinceReferenceDate:)(v31);
              Date.init(timeIntervalSinceReferenceDate:)(v37);
              v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(kMOResourcePlaceKeyLocation);
              v46 = v45;
              if (!*(_QWORD *)(v23 + 16)
                || (v141 = v43, v47 = specialized __RawDictionaryStorage.find<A>(_:)(v44, v45), (v48 & 1) == 0))
              {
                swift_bridgeObjectRelease(v23);
                v104 = v46;
LABEL_37:
                swift_bridgeObjectRelease(v104);
                v54 = v149;
                goto LABEL_38;
              }
              v49 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v47);
              swift_unknownObjectRetain();
              swift_bridgeObjectRelease(v46);
              *(_QWORD *)&v151 = v49;
              v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Swift.AnyObject]);
              if ((swift_dynamicCast(v154, &v151, (char *)&type metadata for Swift.AnyObject + 8, v50, 6) & 1) != 0)
              {
                v51 = v154[0];
                v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(kRTLocationLatitude);
                v54 = v149;
                if (*(_QWORD *)(*(_QWORD *)&v51 + 16))
                {
                  v140 = v53;
                  v55 = specialized __RawDictionaryStorage.find<A>(_:)(v52, (uint64_t)v53);
                  if ((v56 & 1) != 0)
                  {
                    v57 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v51 + 56) + 8 * v55);
                    swift_unknownObjectRetain();
                    swift_bridgeObjectRelease(v140);
                    *(_QWORD *)&v151 = v57;
                    if ((swift_dynamicCast(v154, &v151, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Double, 6) & 1) != 0)
                    {
                      v58 = v154[0];
                      v59 = static String._unconditionallyBridgeFromObjectiveC(_:)(kRTLocationLongitude);
                      v61 = v60;
                      if (*(_QWORD *)(*(_QWORD *)&v51 + 16)
                        && (v62 = specialized __RawDictionaryStorage.find<A>(_:)(v59, v60), (v63 & 1) != 0))
                      {
                        v64 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v51 + 56) + 8 * v62);
                        swift_unknownObjectRetain();
                        swift_bridgeObjectRelease(v61);
                        swift_bridgeObjectRelease(*(_QWORD *)&v51);
                        *(_QWORD *)&v151 = v64;
                        if ((swift_dynamicCast(v154, &v151, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Double, 6) & 1) != 0)
                        {
                          v65 = objc_msgSend(objc_allocWithZone((Class)CLLocation), "initWithLatitude:longitude:", v58, v154[0]);
                          v139 = (id)MOSuggestionAssetsTypeLocationPreview;
                          type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for CLLocation, CLLocation_ptr);
                          v66 = objc_allocWithZone((Class)MOSuggestionAsset);
                          ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
                          v140 = v65;
                          v139 = objc_msgSend(v66, "init:type:contentClassType:", v65, v139, ObjCClassFromMetadata);
                          v68 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(MOSuggestionAssetMetadataKey, Any)>);
                          *(double *)&v69 = COERCE_DOUBLE(swift_initStackObject(v68, &v153));
                          *(_OWORD *)(v69 + 16) = xmmword_1001A01D0;
                          v70 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewPlaceName;
                          *(_QWORD *)(v69 + 32) = MOSuggestionAssetMetadataKeyLocationPreviewPlaceName;
                          v71 = (void *)(*(uint64_t (**)(void *))(*(_QWORD *)v143 + 216))(v70);
                          v72 = objc_msgSend(v71, "name");

                          v73 = static String._unconditionallyBridgeFromObjectiveC(_:)(v72);
                          v138 = v74;

                          v75 = v138;
                          *(_QWORD *)(v69 + 40) = v73;
                          *(_QWORD *)(v69 + 48) = v75;
                          v76 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewTypeOfPlace;
                          *(_QWORD *)(v69 + 64) = &type metadata for String;
                          *(_QWORD *)(v69 + 72) = v76;
                          *(double *)(v69 + 80) = v141;
                          v77 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewCityName;
                          *(_QWORD *)(v69 + 104) = &type metadata for Int;
                          *(_QWORD *)(v69 + 112) = v77;
                          v141 = *(double *)&v69;
                          v138 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(kMOResourcePlaceKeyCityName);
                          v79 = v78;
                          if (*(_QWORD *)(v23 + 16))
                          {
                            v80 = v76;
                            v81 = v77;
                            v82 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v138, v79);
                            if ((v83 & 1) != 0)
                            {
                              v84 = (_OWORD *)(*(_QWORD *)&v141 + 120);
                              v85 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v82);
                              swift_unknownObjectRetain();
                              swift_bridgeObjectRelease(v79);
                              swift_bridgeObjectRelease(v23);
                              ObjectType = swift_getObjectType(v85);
                              *(_QWORD *)&v151 = v85;
                              outlined init with take of Any(&v151, v84);
LABEL_45:
                              v115 = v141;
                              v116 = (_QWORD *)(*(_QWORD *)&v141 + 160);
                              v138 = (id)MOSuggestionAssetMetadataKeyLocationPreviewVisitStartTime;
                              *(_QWORD *)(*(_QWORD *)&v141 + 152) = MOSuggestionAssetMetadataKeyLocationPreviewVisitStartTime;
                              v117 = v145;
                              *(_QWORD *)(*(_QWORD *)&v115 + 184) = v145;
                              boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v116);
                              v119 = *(void (**)(_QWORD *, char *, uint64_t))(v144 + 16);
                              v119(boxed_opaque_existential_1, v147, v117);
                              v120 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewVisitEndTime;
                              *(_QWORD *)(*(_QWORD *)&v115 + 192) = MOSuggestionAssetMetadataKeyLocationPreviewVisitEndTime;
                              *(_QWORD *)(*(_QWORD *)&v115 + 224) = v117;
                              v121 = __swift_allocate_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)&v115 + 200));
                              v119(v121, v146, v117);
                              v122 = v138;
                              v123 = v120;
                              v124 = specialized Dictionary.init(dictionaryLiteral:)(*(uint64_t *)&v115);
                              specialized _dictionaryUpCast<A, B, C, D>(_:)(v124);
                              v126 = v125;
                              swift_bridgeObjectRelease(v124);
                              isa = Dictionary._bridgeToObjectiveC()().super.isa;
                              *(_QWORD *)&v128 = swift_bridgeObjectRelease(v126).n128_u64[0];
                              v129 = v139;
                              objc_msgSend(v139, "addMetadata:", isa, v128);

                              v141 = *(double *)(*(_QWORD *)v143 + 288);
                              (*(void (**)(void))&v141)();
                              v131 = v130;
                              v132 = String._bridgeToObjectiveC()();
                              objc_msgSend(v129, "addIdentifier:", v132, swift_bridgeObjectRelease(v131).n128_f64[0]);

                              v133 = *(id *)(v142 + 16);
                              (*(void (**)(void))&v141)();
                              v135 = v134;
                              v136 = String._bridgeToObjectiveC()();
                              objc_msgSend(v133, "setObject:forKey:cost:", v129, v136, 1, swift_bridgeObjectRelease(v135).n128_f64[0]);

                              swift_retain(a3);
                              swift_retain(a5);
                              swift_retain(a7);
                              swift_bridgeObjectRetain(a8);
                              swift_retain(a10);
                              v137 = v129;
                              closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(v129, a3, v148, a5, v150, a7, a8, v149);

                              goto LABEL_39;
                            }
                          }
                          else
                          {
                            v112 = v76;
                            v113 = v77;
                          }
                          swift_bridgeObjectRelease(v79);
                          swift_bridgeObjectRelease(v23);
                          v114 = v141;
                          *(_QWORD *)(*(_QWORD *)&v141 + 144) = &type metadata for String;
                          *(_QWORD *)(*(_QWORD *)&v114 + 120) = 0;
                          *(_QWORD *)(*(_QWORD *)&v114 + 128) = 0xE000000000000000;
                          goto LABEL_45;
                        }
                        v111 = *(double *)&v23;
                      }
                      else
                      {
                        swift_bridgeObjectRelease(v23);
                        swift_bridgeObjectRelease(v61);
                        v111 = v51;
                      }
                      swift_bridgeObjectRelease(*(_QWORD *)&v111);
                      v54 = v149;
                      v28 = v148;
LABEL_38:
                      swift_retain(a3);
                      swift_retain(a5);
                      swift_retain(a7);
                      swift_bridgeObjectRetain(a8);
                      swift_retain(a10);
                      closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, a3, v28, a5, v150, a7, a8, v54);
LABEL_39:
                      swift_release(a3);
                      swift_release(a5);
                      swift_release(a7);
                      swift_bridgeObjectRelease(a8);
                      v108 = swift_release(a10);
                      v109 = v145;
                      v110 = *(void (**)(char *, uint64_t, __n128))(v144 + 8);
                      v110(v146, v145, v108);
                      ((void (*)(char *, uint64_t))v110)(v147, v109);
                      swift_release(a10);
                      swift_bridgeObjectRelease(a8);
                      swift_release(a7);
                      swift_release(a5);
                      v99 = swift_release(a3);
                      goto LABEL_30;
                    }
                    swift_bridgeObjectRelease(*(_QWORD *)&v51);
                    goto LABEL_36;
                  }
                  swift_bridgeObjectRelease(*(_QWORD *)&v51);
                  swift_bridgeObjectRelease(v23);
                  v107 = v140;
                }
                else
                {
                  v105 = v51;
                  v106 = v53;
                  swift_bridgeObjectRelease(*(_QWORD *)&v105);
                  swift_bridgeObjectRelease(v23);
                  v107 = v106;
                }
                swift_bridgeObjectRelease(v107);
                goto LABEL_38;
              }
LABEL_36:
              v104 = v23;
              goto LABEL_37;
            }
            goto LABEL_26;
          }
        }
LABEL_24:
        swift_bridgeObjectRelease(v23);
        v93 = v26;
LABEL_27:
        swift_bridgeObjectRelease(v93);
        v94 = v150;
        goto LABEL_28;
      }
    }
LABEL_26:
    v93 = v23;
    goto LABEL_27;
  }
  swift_retain(a3);
  swift_retain(a5);
  swift_retain(a7);
  swift_bridgeObjectRetain(a8);
  swift_retain(a10);
  v86 = a3;
  v87 = a4;
  v88 = a5;
  v89 = v150;
  v90 = a7;
  v91 = a8;
  v92 = a9;
LABEL_29:
  closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, v86, v87, v88, v89, v90, v91, v92);
  swift_release_n(a3, v95);
  swift_release_n(a5, v96);
  swift_release_n(a7, v97);
  swift_bridgeObjectRelease_n(a8, 2);
  swift_release_n(a10, v98);
LABEL_30:
  swift_release_n(a10, v99);
  swift_bridgeObjectRelease_n(a8, 3);
  swift_release_n(a7, v100);
  swift_release_n(a5, v101);
  return swift_release_n(a3, v102);
}

void specialized MOSuggestionAssetCacheManager.fetchAndCacheLinkPreviews(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(double *, __n128), uint64_t a10)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(__n128);
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(double *, __n128);
  int v72;
  _QWORD v73[2];
  _QWORD v74[2];

  v59 = a2;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v17);
  v62 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for URL(0);
  v63 = *(_QWORD *)(v19 - 8);
  v64 = v19;
  __chkstk_darwin(v19);
  v60 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = swift_allocObject(&unk_1001ED8A0, 80, 7);
  *(_QWORD *)(v21 + 16) = a3;
  v72 = a4;
  *(_BYTE *)(v21 + 24) = a4;
  *(_QWORD *)(v21 + 32) = a5;
  *(_QWORD *)(v21 + 40) = a6;
  v22 = a6;
  *(_QWORD *)(v21 + 48) = a7;
  *(_QWORD *)(v21 + 56) = a8;
  v71 = a9;
  *(_QWORD *)(v21 + 64) = a9;
  *(_QWORD *)(v21 + 72) = a10;
  v23 = swift_allocObject(&unk_1001ED8C8, 32, 7);
  *(_QWORD *)(v23 + 16) = partial apply for closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:);
  *(_QWORD *)(v23 + 24) = v21;
  v24 = *(uint64_t (**)(__n128))(*(_QWORD *)a1 + 256);
  v66 = a3;
  swift_retain(a3);
  v67 = a5;
  v25 = a5;
  v26 = v22;
  swift_retain(v25);
  v68 = a7;
  swift_retain(a7);
  v69 = a8;
  swift_bridgeObjectRetain(a8);
  v70 = a10;
  swift_retain(a10);
  v27 = swift_retain(v21);
  v61 = a1;
  v28 = v24(v27);
  if (!v28)
    goto LABEL_15;
  v29 = v28;
  v65 = v26;
  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("sharedContentURL"));
  v32 = v31;
  if (!*(_QWORD *)(v29 + 16) || (v33 = specialized __RawDictionaryStorage.find<A>(_:)(v30, v31), (v34 & 1) == 0))
  {
    swift_bridgeObjectRelease(v29);
    v49 = v32;
    goto LABEL_13;
  }
  v35 = *(_QWORD *)(*(_QWORD *)(v29 + 56) + 8 * v33);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease(v32);
  v74[0] = v35;
  if ((swift_dynamicCast(v73, v74, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for String, 6) & 1) == 0)
  {
LABEL_12:
    v49 = v29;
    goto LABEL_13;
  }
  v37 = v73[0];
  v36 = v73[1];
  v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("sharedContentStartDate"));
  v40 = v39;
  if (!*(_QWORD *)(v29 + 16) || (v41 = specialized __RawDictionaryStorage.find<A>(_:)(v38, v39), (v42 & 1) == 0))
  {
    swift_bridgeObjectRelease(v36);
    swift_bridgeObjectRelease(v40);
    goto LABEL_12;
  }
  v43 = *(_QWORD *)(*(_QWORD *)(v29 + 56) + 8 * v41);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease(v40);
  swift_bridgeObjectRelease(v29);
  v73[0] = v43;
  if ((swift_dynamicCast(v74, v73, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Double, 6) & 1) != 0)
  {
    v44 = v74[0];
    v45 = (uint64_t)v62;
    URL.init(string:)(v37, v36);
    v46 = swift_bridgeObjectRelease(v36);
    v48 = v63;
    v47 = v64;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v63 + 48))(v45, 1, v64, v46) != 1)
    {
      v55 = (uint64_t)v60;
      (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(v60, v45, v47);
      v54 = swift_allocObject(&unk_1001ED050, 24, 7);
      swift_weakInit(v54 + 16);
      v56 = (_QWORD *)swift_allocObject(&unk_1001ED8F0, 56, 7);
      v57 = v61;
      v56[2] = v61;
      v56[3] = v44;
      v56[4] = v54;
      v56[5] = partial apply for specialized closure #1 in MOAngelControllerWrapper.continuationWrapper<A>(action:);
      v56[6] = v23;
      swift_retain(v57);
      swift_retain(v54);
      swift_retain(v23);
      specialized MOSuggestionAssetLinkPreviewProvider.getAssetFor(url:completion:)(v55, (uint64_t)partial apply for closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheLinkPreviews(_:completion:), (uint64_t)v56);
      v58 = swift_release(v56);
      (*(void (**)(uint64_t, uint64_t, __n128))(v48 + 8))(v55, v47, v58);
      swift_release(v21);
      swift_release(v23);
      goto LABEL_16;
    }
    outlined destroy of Any?(v45, &demangling cache variable for type metadata for URL?);
    goto LABEL_14;
  }
  v49 = v36;
LABEL_13:
  swift_bridgeObjectRelease(v49);
LABEL_14:
  v26 = v65;
LABEL_15:
  v50 = v66;
  swift_retain(v66);
  v51 = v67;
  swift_retain(v67);
  v52 = v68;
  swift_retain(v68);
  v53 = v69;
  swift_bridgeObjectRetain(v69);
  v54 = v70;
  swift_retain(v70);
  closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, v50, v72, v51, v26, v52, v53, v71);
  swift_release(v21);
  swift_release(v23);
  swift_release(v50);
  swift_release(v51);
  swift_release(v52);
  swift_bridgeObjectRelease(v53);
LABEL_16:
  swift_release(v54);
}

uint64_t specialized closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheContactPhotoFromProvider(_:cacheType:completion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void (*a15)(double *, __n128), uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSString v29;
  uint64_t v30;
  uint64_t inited;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  uint64_t v40;
  void *v41;
  id v42;
  unint64_t v43;
  Class isa;
  uint64_t v45;
  uint64_t Strong;
  uint64_t v47;
  id v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  NSString v52;
  __n128 v53;
  __n128 v54;
  __n128 v55;
  __n128 v56;
  void (*v58)(void);
  uint64_t v62;
  uint64_t v63;
  _QWORD v65[3];
  _BYTE v66[256];

  v16 = a16;
  v17 = a11;
  v18 = a9;
  if (a1)
  {
    swift_retain_n(a9);
    swift_retain_n(a11);
    swift_retain_n(a13);
    swift_bridgeObjectRetain_n(a14, 2);
    swift_retain_n(a16);
    v23 = a1;
    v24 = a2;
    v25 = specialized static MOSuggestionAssetContactProfilePictureProvider.getFirstNameFor(idInput:)();
    v62 = v26;
    v63 = v25;
    v58 = *(void (**)(void))(*(_QWORD *)a4 + 288);
    v58();
    v28 = v27;
    v29 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "addIdentifier:", v29, swift_bridgeObjectRelease(v28).n128_f64[0]);

    v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(AnyHashable, Any)>);
    inited = swift_initStackObject(v30, v66);
    *(_OWORD *)(inited + 16) = xmmword_10019F2D0;
    v32 = (void *)MOSuggestionAssetMetadataKeyContactName;
    v65[0] = MOSuggestionAssetMetadataKeyContactName;
    type metadata accessor for MOSuggestionAssetMetadataKey(0);
    v34 = v33;
    v35 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionAssetMetadataKey and conformance MOSuggestionAssetMetadataKey, (uint64_t (*)(uint64_t))type metadata accessor for MOSuggestionAssetMetadataKey, (uint64_t)&protocol conformance descriptor for MOSuggestionAssetMetadataKey);
    v36 = v32;
    AnyHashable.init<A>(_:)((_QWORD *)(inited + 32), v65, v34, v35);
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 72) = a5;
    *(_QWORD *)(inited + 80) = a6;
    v37 = (void *)MOSuggestionAssetMetadataKeyContactIdentifier;
    v65[0] = MOSuggestionAssetMetadataKeyContactIdentifier;
    swift_bridgeObjectRetain(a6);
    v38 = v37;
    AnyHashable.init<A>(_:)((_QWORD *)(inited + 104), v65, v34, v35);
    *(_QWORD *)(inited + 168) = &type metadata for String;
    *(_QWORD *)(inited + 144) = v24;
    *(_QWORD *)(inited + 152) = a3;
    v39 = (void *)MOSuggestionAssetMetadataKeyContactFirstName;
    v65[0] = MOSuggestionAssetMetadataKeyContactFirstName;
    v40 = a3;
    v41 = v23;
    swift_bridgeObjectRetain(v40);
    v42 = v39;
    AnyHashable.init<A>(_:)((_QWORD *)(inited + 176), v65, v34, v35);
    *(_QWORD *)(inited + 240) = &type metadata for String;
    *(_QWORD *)(inited + 216) = v63;
    *(_QWORD *)(inited + 224) = v62;
    v43 = specialized Dictionary.init(dictionaryLiteral:)(inited);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v23, "addMetadata:", isa, swift_bridgeObjectRelease(v43).n128_f64[0]);

    v45 = a13;
    if ((a7 - 2) < 9u)
    {
      swift_beginAccess(a8, v65, 0, 0);
      Strong = swift_weakLoadStrong(a8);
      if (Strong)
      {
        v47 = Strong;
        v48 = *(id *)(Strong + 16);
        v49 = swift_release(v47);
        ((void (*)(__n128))v58)(v49);
        v51 = v50;
        v52 = String._bridgeToObjectiveC()();
        objc_msgSend(v48, "setObject:forKey:cost:", v41, v52, 3, swift_bridgeObjectRelease(v51).n128_f64[0]);

      }
    }
    v18 = a9;
    swift_retain(a9);
    v17 = a11;
    swift_retain(a11);
    swift_retain(a13);
    swift_bridgeObjectRetain(a14);
    v16 = a16;
    swift_retain(a16);
    specialized static MOSuggestionAssetCacheManager.wrapImageAssetInURLIfNecessary(asset:cacheType:completion:)(v41, a7, a9, a10, a11, a12, a13, a14, a15, a16);

    swift_release_n(a9, v53);
    swift_release_n(a11, v54);
    swift_release_n(a13, v55);
    swift_bridgeObjectRelease_n(a14, 2);
    swift_release(a16);
  }
  else
  {
    swift_retain(a13);
    swift_bridgeObjectRetain_n(a14, 2);
    swift_retain_n(a16);
    swift_retain(a9);
    swift_retain(a11);
    closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, a9, a10, a11, a12, a13, a14, a15);
    swift_bridgeObjectRelease(a14);
    v45 = a13;
  }
  swift_bridgeObjectRelease(a14);
  swift_release(v45);
  swift_release(v17);
  v56 = swift_release(v18);
  return swift_release_n(v16, v56);
}

uint64_t specialized MOSuggestionAssetCacheManager.fetchAndCacheContactPhotoFromProvider(_:cacheType:completion:)(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(double *, __n128), uint64_t a11)
{
  uint64_t (*v15)(void);
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  NSString v28;
  Class isa;
  id v30;
  id v31;
  void *v32;
  double v33;
  uint64_t v34;
  __n128 v35;
  __n128 v36;
  __n128 v37;
  __n128 v38;
  __n128 v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  void *v45;
  uint64_t v46;
  id v47;
  __n128 v48;
  __n128 v49;
  __n128 v50;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  unsigned __int8 v56;
  id v60;
  _BYTE v61[8];

  v15 = *(uint64_t (**)(void))(*(_QWORD *)a1 + 216);
  swift_retain_n(a4);
  swift_retain_n(a6);
  swift_retain_n(a8);
  swift_bridgeObjectRetain_n(a9, 4);
  v16 = swift_retain_n(a11);
  v17 = (void *)((uint64_t (*)(uint64_t))v15)(v16);
  v18 = objc_msgSend(v17, "personName");

  if (v18)
  {
    v56 = a2;
    v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v20 = v19;

    v21 = (void *)v15();
    v22 = objc_msgSend(v21, "contactIdentifier");

    if (v22)
    {
      v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
      v25 = v24;

      swift_weakInit(v61);
      v26 = objc_allocWithZone((Class)CNContactStore);
      swift_bridgeObjectRetain(v25);
      v27 = objc_msgSend(v26, "init", swift_retain(a1).n128_f64[0]);
      v53 = v23;
      v28 = String._bridgeToObjectiveC()();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
      isa = Array._bridgeToObjectiveC()().super.isa;
      v60 = 0;
      v55 = v27;
      v30 = objc_msgSend(v27, "unifiedContactWithIdentifier:keysToFetch:error:", v28, isa, &v60);

      v31 = v60;
      if (v30)
      {
        v32 = v30;
        if ((v56 - 2) >= 9u)
          v33 = 300.0;
        else
          v33 = dbl_1001A43D0[(char)(v56 - 2)];
        v42 = one-time initialization token for sharedFetcher;
        v43 = v60;
        if (v42 != -1)
          swift_once(&one-time initialization token for sharedFetcher, one-time initialization function for sharedFetcher);
        v44 = objc_msgSend((id)static MOSuggestionAssetContactProfilePictureProvider.sharedFetcher, "avatarForContact:size:", v32, v33, v33);
        if (v44)
        {
          v45 = v44;
          v52 = v32;
          v46 = MOSuggestionAssetsTypeContactPhoto;
          type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIImage, UIImage_ptr);
          v47 = objc_msgSend(objc_allocWithZone((Class)MOSuggestionAsset), "init:type:contentClassType:", v45, v46, swift_getObjCClassFromMetadata());
          v34 = a4;
          swift_retain(a4);
          swift_retain(a6);
          swift_retain(a8);
          swift_bridgeObjectRetain(a9);
          swift_retain(a11);
          specialized closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheContactPhotoFromProvider(_:cacheType:completion:)(v47, v53, v25, a1, v54, v20, v56, (uint64_t)v61, a4, a5, a6, a7, a8, a9, a10, a11);
          swift_bridgeObjectRelease(v20);
          swift_release(a1);
          swift_bridgeObjectRelease_n(v25, 2);

          swift_release(a4);
          swift_release(a6);
          swift_release(a8);
          swift_bridgeObjectRelease(a9);
          swift_release(a11);
LABEL_16:
          swift_weakDestroy(v61);
          swift_release(a11);
          swift_bridgeObjectRelease(a9);
          swift_release(a8);
          swift_release(a6);
          v39 = swift_release(v34);
          goto LABEL_17;
        }
        v34 = a4;
        swift_retain(a4);
        swift_retain(a6);
        swift_retain(a8);
        swift_bridgeObjectRetain(a9);
        swift_retain(a11);
        closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, a4, a5, a6, a7, a8, a9, a10);
        swift_bridgeObjectRelease(v25);

      }
      else
      {
        v40 = v60;
        v41 = _convertNSErrorToError(_:)(v31);

        swift_willThrow();
        swift_errorRelease(v41);
        v34 = a4;
        swift_retain(a4);
        swift_retain(a6);
        swift_retain(a8);
        swift_bridgeObjectRetain(a9);
        swift_retain(a11);
        closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, a4, a5, a6, a7, a8, a9, a10);
        swift_bridgeObjectRelease(v25);
        v32 = v55;
      }

      swift_release(v34);
      swift_release(a6);
      swift_release(a8);
      swift_bridgeObjectRelease(a9);
      swift_release(a11);
      swift_bridgeObjectRelease(v20);
      swift_release(a1);
      swift_bridgeObjectRelease(v25);
      goto LABEL_16;
    }
    swift_bridgeObjectRelease(v20);
  }
  v34 = a4;
  swift_retain(a4);
  swift_retain(a6);
  swift_retain(a8);
  swift_bridgeObjectRetain(a9);
  swift_retain(a11);
  closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, a4, a5, a6, a7, a8, a9, a10);
  swift_release_n(a4, v35);
  swift_release_n(a6, v36);
  swift_release_n(a8, v37);
  swift_bridgeObjectRelease_n(a9, 2);
  swift_release_n(a11, v38);
LABEL_17:
  swift_release_n(a11, v39);
  swift_bridgeObjectRelease_n(a9, 3);
  swift_release_n(a8, v48);
  swift_release_n(a6, v49);
  return swift_release_n(v34, v50);
}

double specialized MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(double *, __n128), uint64_t a11)
{
  void (*v17)(double *, __n128);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t (*v24)(__n128);
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  void *v50;
  _QWORD *v51;
  id v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  double result;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  void (*v69)(id, void (*)(uint64_t), _QWORD *, __n128);
  uint64_t (*v70)(__n128);
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v17 = a10;
  v18 = a11;
  v19 = swift_allocObject(&unk_1001ED918, 80, 7);
  *(_QWORD *)(v19 + 16) = a4;
  *(_BYTE *)(v19 + 24) = a5;
  *(_QWORD *)(v19 + 32) = a6;
  *(_QWORD *)(v19 + 40) = a7;
  v83 = a7;
  *(_QWORD *)(v19 + 48) = a8;
  *(_QWORD *)(v19 + 56) = a9;
  *(_QWORD *)(v19 + 64) = a10;
  *(_QWORD *)(v19 + 72) = a11;
  v20 = swift_allocObject(&unk_1001ED940, 32, 7);
  *(_QWORD *)(v20 + 16) = partial apply for closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:);
  *(_QWORD *)(v20 + 24) = v19;
  v21 = type metadata accessor for MOMultiMapAssetReference(0);
  v22 = swift_dynamicCastClass(a1, v21);
  if (v22)
  {
    v23 = a5;
    v66 = v20;
    v24 = *(uint64_t (**)(__n128))(*(_QWORD *)v22 + 360);
    v25 = v22;
    swift_retain(a4);
    swift_retain(a6);
    swift_retain(a8);
    swift_bridgeObjectRetain(a9);
    swift_retain(a11);
    swift_retain(v19);
    v65 = a1;
    v26 = swift_retain(a1);
    v71 = v25;
    v27 = v24(v26);
    v28 = v27;
    if ((unint64_t)v27 >> 62)
    {
      if (v27 >= 0)
        v27 &= 0xFFFFFFFFFFFFFF8uLL;
      v29 = _CocoaArrayWrapper.endIndex.getter(v27);
    }
    else
    {
      v29 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v28);
    if (v29 >= 1)
    {
      v80 = swift_allocObject(&unk_1001ED968, 24, 7);
      *(_QWORD *)(v80 + 16) = specialized Dictionary.init(dictionaryLiteral:)((uint64_t)_swiftEmptyArrayStorage);
      v79 = swift_allocObject(&unk_1001ED990, 24, 7);
      *(_QWORD *)(v79 + 16) = specialized Dictionary.init(dictionaryLiteral:)((uint64_t)_swiftEmptyArrayStorage);
      v78 = swift_allocObject(&unk_1001ED990, 24, 7);
      *(_QWORD *)(v78 + 16) = specialized Dictionary.init(dictionaryLiteral:)((uint64_t)_swiftEmptyArrayStorage);
      v77 = swift_allocObject(&unk_1001ED9B8, 24, 7);
      *(_QWORD *)(v77 + 16) = specialized Dictionary.init(dictionaryLiteral:)((uint64_t)_swiftEmptyArrayStorage);
      v76 = swift_allocObject(&unk_1001ED968, 24, 7);
      *(_QWORD *)(v76 + 16) = specialized Dictionary.init(dictionaryLiteral:)((uint64_t)_swiftEmptyArrayStorage);
      v64 = swift_allocObject(&unk_1001ED9E0, 24, 7);
      *(_QWORD *)(v64 + 16) = &_swiftEmptySetSingleton;
      v30 = ((uint64_t (*)(void))v24)();
      specialized Sequence.compactMap<A>(_:)(v30, (_QWORD *)(v80 + 16), (_QWORD *)(v79 + 16), v64 + 16, (_QWORD *)(v78 + 16), v77 + 16, (uint64_t *)(v76 + 16));
      v32 = v31;
      swift_bridgeObjectRelease(v30);
      v33 = swift_allocObject(&unk_1001EDA08, 24, 7);
      *(_QWORD *)(v33 + 16) = _swiftEmptyArrayStorage;
      v34 = swift_allocObject(&unk_1001EDA08, 24, 7);
      *(_QWORD *)(v34 + 16) = _swiftEmptyArrayStorage;
      v35 = v34;
      v67 = v34;
      v36 = swift_allocObject(&unk_1001ED9E0, 24, 7);
      *(_QWORD *)(v36 + 16) = &_swiftEmptySetSingleton;
      v37 = swift_allocObject(&unk_1001ED9E0, 24, 7);
      *(_QWORD *)(v37 + 16) = &_swiftEmptySetSingleton;
      v38 = type metadata accessor for MOSuggestionAssetMapSnapshotProvider();
      swift_allocObject(v38, 56, 7);
      v39 = MOSuggestionAssetMapSnapshotProvider.init(targetQueue:)(0);
      v40 = swift_allocObject(&unk_1001EDA30, 120, 7);
      *(_QWORD *)(v40 + 16) = v33;
      *(_QWORD *)(v40 + 24) = v36;
      *(_QWORD *)(v40 + 32) = v37;
      *(_QWORD *)(v40 + 40) = v71;
      *(_QWORD *)(v40 + 48) = v32;
      *(_QWORD *)(v40 + 56) = v35;
      *(_QWORD *)(v40 + 64) = partial apply for specialized closure #1 in MOAngelControllerWrapper.continuationWrapper<A>(action:);
      *(_QWORD *)(v40 + 72) = v66;
      *(_QWORD *)(v40 + 80) = v64;
      *(_BYTE *)(v40 + 88) = a2;
      *(_QWORD *)(v40 + 96) = v39;
      *(_QWORD *)(v40 + 104) = a3;
      *(_QWORD *)(v40 + 112) = v65;
      v41 = swift_allocObject(&unk_1001EDA58, 32, 7);
      *(_QWORD *)(v41 + 16) = partial apply for closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:);
      *(_QWORD *)(v41 + 24) = v40;
      v84 = v41;
      v70 = *(uint64_t (**)(__n128))(*(_QWORD *)v71 + 408);
      swift_retain_n(v65);
      v75 = v33;
      swift_retain(v33);
      swift_retain(v36);
      v62 = v37;
      v42 = v37;
      v43 = v67;
      swift_retain(v42);
      swift_retain(v67);
      swift_retain(v66);
      swift_retain(v64);
      v82 = v39;
      swift_retain(v39);
      swift_retain(a3);
      v63 = v40;
      v44 = swift_retain(v40);
      v45 = v70(v44);
      if (v45)
      {
        v46 = v45;
        v74 = v45;
        if ((unint64_t)v45 >> 62)
        {
          if (v45 >= 0)
            v54 = v45 & 0xFFFFFFFFFFFFFF8;
          else
            v54 = v45;
          swift_bridgeObjectRetain(v45);
          v55 = _CocoaArrayWrapper.endIndex.getter(v54);
          swift_bridgeObjectRelease(v46);
          if (v55 > 0)
          {
            v61 = v19;
            v72 = swift_allocObject(&unk_1001ED118, 24, 7);
            *(_QWORD *)(v72 + 16) = 0;
            swift_bridgeObjectRetain(v46);
            v56 = _CocoaArrayWrapper.endIndex.getter(v54);
            if (v56)
            {
              if (v56 >= 1)
              {
                v47 = v56;
                v69 = *(void (**)(id, void (*)(uint64_t), _QWORD *, __n128))(*(_QWORD *)v82 + 176);
                v46 = v74;
LABEL_9:
                v48 = 0;
                v68 = v46 & 0xC000000000000001;
                do
                {
                  if (v68)
                    v49 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v48, v74);
                  else
                    v49 = *(id *)(v74 + 8 * v48 + 32);
                  v50 = v49;
                  ++v48;
                  v51 = (_QWORD *)swift_allocObject(&unk_1001EDA80, 104, 7);
                  v51[2] = v72;
                  v51[3] = v75;
                  v51[4] = v50;
                  v51[5] = v80;
                  v51[6] = v79;
                  v51[7] = v78;
                  v51[8] = v77;
                  v51[9] = v76;
                  v51[10] = v74;
                  v51[11] = partial apply for closure #3 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:);
                  v51[12] = v84;
                  swift_retain(v75);
                  swift_bridgeObjectRetain(v74);
                  swift_retain(v72);
                  v52 = v50;
                  swift_retain(v80);
                  swift_retain(v79);
                  swift_retain(v78);
                  swift_retain(v77);
                  swift_retain(v76);
                  v53 = swift_retain(v84);
                  v69(v52, partial apply for closure #4 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:), v51, v53);

                  swift_release(v51);
                }
                while (v47 != v48);
                goto LABEL_27;
              }
              __break(1u);
            }
LABEL_27:
            swift_release(v82);
            v43 = v67;
            swift_release(v65);
            swift_release(v36);
            swift_release(v62);
            swift_release(v72);
            swift_bridgeObjectRelease_n(v74, 2);
            v19 = v61;
            v57 = v66;
            v58 = v63;
            v59 = v84;
LABEL_30:
            swift_release(v59);
            swift_release(v58);
            swift_release(v19);
            swift_release(v57);
            swift_release(v80);
            swift_release(v79);
            swift_release(v78);
            swift_release(v77);
            swift_release(v76);
            swift_release(v64);
            swift_release(v75);
            goto LABEL_31;
          }
        }
        else
        {
          v47 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v47)
          {
            v61 = v19;
            v72 = swift_allocObject(&unk_1001ED118, 24, 7);
            *(_QWORD *)(v72 + 16) = 0;
            v69 = *(void (**)(id, void (*)(uint64_t), _QWORD *, __n128))(*(_QWORD *)v82 + 176);
            swift_bridgeObjectRetain(v46);
            goto LABEL_9;
          }
        }
        swift_bridgeObjectRelease(v46);
      }
      closure #3 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)((uint64_t)partial apply for closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:), v40);
      swift_release(v36);
      swift_release(v62);
      swift_release(v84);
      swift_release(v40);
      v59 = v82;
      v58 = v65;
      v57 = v66;
      goto LABEL_30;
    }
    a5 = v23;
    swift_release(a1);
    v20 = v66;
    v18 = a11;
    v17 = a10;
  }
  else
  {
    swift_retain(a4);
    swift_retain(a6);
    swift_retain(a8);
    swift_bridgeObjectRetain(a9);
    swift_retain(a11);
    swift_retain(v19);
  }
  swift_retain(a4);
  swift_retain(a6);
  swift_retain(a8);
  swift_bridgeObjectRetain(a9);
  swift_retain(v18);
  closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, a4, a5, a6, v83, a8, a9, v17);
  swift_release(v19);
  swift_release(v20);
  swift_release(a4);
  swift_release(a6);
  swift_release(a8);
  swift_bridgeObjectRelease(a9);
  v43 = v18;
LABEL_31:
  *(_QWORD *)&result = swift_release(v43).n128_u64[0];
  return result;
}

uint64_t specialized closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:)(_QWORD *a1, _QWORD *a2, char *a3, void **a4, uint64_t inited, double *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned __int8 a19, uint64_t a20,uint64_t a21,unsigned __int8 a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void (*a27)(double *, __n128),uint64_t a28)
{
  void *v28;
  double v29;
  _QWORD *v37;
  char **v38;
  uint64_t v39;
  BOOL v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void **v49;
  uint64_t *v50;
  void *v51;
  double *v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  void *object;
  NSString v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void **v82;
  double *v83;
  char *v84;
  _QWORD *v85;
  _QWORD *v86;
  id v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  unint64_t v105;
  void *v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  void *v113;
  id v114;
  id v115;
  char v116;
  id v117;
  id v118;
  __n128 v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  NSString v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  id v134;
  id v135;
  id v136;
  id v137;
  id v138;
  uint64_t v139;
  uint64_t v140;
  NSString v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  Class v145;
  id v146;
  __n128 v147;
  __n128 v148;
  uint64_t v149;
  __n128 v150;
  uint64_t v151;
  __n128 v152;
  __n128 v153;
  __n128 v154;
  __n128 v155;
  uint64_t result;
  void *v157;
  uint64_t v158;
  id v159;
  uint64_t v160;
  char isUniquelyReferenced_nonNull_native;
  id v162;
  double v163;
  double v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  id v169;
  uint64_t v170;
  uint64_t v171;
  NSString v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  Class isa;
  void *v177;
  void *v178;
  void *v179;
  __n128 v180;
  __n128 v181;
  __n128 v182;
  uint64_t v183;
  void **v184;
  double *v185;
  char *v186;
  _QWORD *v187;
  _QWORD *v188;
  id v189;
  __n128 v190;
  __n128 v191;
  __n128 v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t *v197;
  uint64_t *v198;
  uint64_t *v199;
  uint64_t *v200;
  void **v201;
  uint64_t v202;
  void **v203;
  uint64_t v204;
  void *v205;
  uint64_t v206;
  uint64_t *v207;
  char v208[24];
  char v209[24];
  char v210[24];
  char v211[24];
  char v212[24];
  uint64_t v213;
  _OWORD v214[2];
  uint64_t v215[3];
  __int128 v216;
  _QWORD *v217;
  char v218[24];
  char v219[24];
  char v220[24];
  char v221[24];
  char v222[24];
  char v223[24];
  char v224[24];
  char v225[24];
  char v226[24];
  char v227[24];
  char v228[432];
  uint64_t v229;
  char v230[24];
  char v231[24];
  char v232[32];

  v37 = a1;
  v38 = (char **)(a1 + 2);
  swift_beginAccess(a1 + 2, v232, 1, 0);
  v39 = v37[2];
  v40 = __OFADD__(v39, 1);
  v41 = (char *)(v39 + 1);
  if (v40)
  {
    __break(1u);
    goto LABEL_40;
  }
  *v38 = v41;
  v42 = a2[2];
  if (v42 + 0x4000000000000000 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v40 = __OFADD__(a3, 2 * v42);
  v43 = &a3[2 * v42];
  if (v40)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v44 = a28;
  v46 = a25;
  v45 = a26;
  v47 = a23;
  v48 = a21;
  if (v41 != v43)
  {
    swift_bridgeObjectRetain_n(a26, 2);
    swift_retain_n(a28);
    swift_retain_n(a21);
    swift_retain_n(a23);
    swift_retain_n(a25);
LABEL_32:
    swift_release_n(v44, v67);
    swift_bridgeObjectRelease_n(v45, 2);
    swift_release_n(v46, v153);
    swift_release_n(v47, v154);
    return swift_release_n(v48, v155);
  }
  v206 = a26;
  v49 = a4 + 2;
  v202 = a8 + 16;
  v203 = (void **)(a9 + 16);
  v204 = a7 + 16;
  v50 = (uint64_t *)(a10 + 16);
  swift_beginAccess(v49, v231, 0, 0);
  v51 = *v49;
  v195 = a23;
  v196 = a21;
  v193 = a28;
  v194 = a25;
  if (v51 && inited)
  {
    v52 = a6 + 2;
    v53 = objc_allocWithZone((Class)HKQuantityFormattingParameters);
    swift_retain_n(a21);
    swift_retain_n(a23);
    swift_retain_n(a25);
    swift_bridgeObjectRetain_n(a26, 3);
    swift_retain_n(a28);
    v54 = (id)inited;
    v55 = v51;
    v56 = objc_msgSend(v53, "init");
    objc_msgSend(v56, "setPreferredUnit:", v55);
    objc_msgSend(v56, "setPrecision:", 0);
    swift_beginAccess(v52, v211, 0, 0);
    v57 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v55, *v52);
    v58 = objc_msgSend(v57, "localizedStringForType:parameters:", v54, v56);
    static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
    v60 = v59;

    object = String.uppercased()()._object;
    swift_bridgeObjectRelease(v60);
    v62 = String._bridgeToObjectiveC()();
    v63 = objc_msgSend(v62, "trimmedString", swift_bridgeObjectRelease(object).n128_f64[0]);

    if (v63)
    {
      v64 = static String._unconditionallyBridgeFromObjectiveC(_:)(v63);
      v66 = v65;

    }
    else
    {
      v64 = 0;
      v66 = 0;
    }
    swift_beginAccess(v204, v210, 1, 0);
    v68 = *(_QWORD *)(a7 + 24);
    *(_QWORD *)(a7 + 16) = v64;
    *(_QWORD *)(a7 + 24) = v66;
    objc_msgSend(v57, "doubleValueForUnit:", v55, swift_bridgeObjectRelease(v68).n128_f64[0]);
    v70 = v69;

    swift_beginAccess(v202, v209, 1, 0);
    *(_QWORD *)(a8 + 16) = v70;
    *(_BYTE *)(a8 + 24) = 0;
    swift_beginAccess(v203, v208, 1, 0);
    v71 = *v203;
    *v203 = v57;

    v50 = (uint64_t *)(a10 + 16);
  }
  else
  {
    swift_retain_n(a21);
    swift_retain_n(a23);
    swift_retain_n(a25);
    swift_bridgeObjectRetain_n(a26, 3);
    swift_retain_n(a28);
  }
  v72 = (_QWORD *)(a12 + 16);
  v207 = (uint64_t *)(a13 + 16);
  swift_beginAccess(v50, v230, 0, 0);
  v73 = *v50;
  if (*v50 < 1)
  {
    v29 = 0.0;
  }
  else
  {
    swift_beginAccess(a11 + 16, v212, 0, 0);
    v29 = *(double *)(a11 + 16) / (double)v73;
  }
  v197 = (uint64_t *)(a14 + 16);
  v198 = (uint64_t *)(a15 + 16);
  v199 = (uint64_t *)(a16 + 16);
  v200 = (uint64_t *)(a17 + 16);
  v201 = (void **)(a18 + 16);
  v74 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(MOSuggestionAssetMetadataKey, Any)>);
  inited = swift_initStackObject(v74, v228);
  *(_OWORD *)(inited + 16) = xmmword_1001A01C0;
  a4 = (void **)MOSuggestionAssetMetadataKeyWorkoutGroupTotalTime;
  *(_QWORD *)(inited + 32) = MOSuggestionAssetMetadataKeyWorkoutGroupTotalTime;
  swift_beginAccess(v72, v227, 0, 0);
  *(_QWORD *)(inited + 40) = *v72;
  a6 = (double *)MOSuggestionAssetMetadataKeyWorkoutGroupTotalCalories;
  *(_QWORD *)(inited + 64) = &type metadata for Double;
  *(_QWORD *)(inited + 72) = a6;
  swift_beginAccess(v202, v226, 0, 0);
  v75 = *(_QWORD *)(a8 + 16);
  v76 = *(_BYTE *)(a8 + 24);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Double?);
  *(_QWORD *)(inited + 80) = v75;
  *(_BYTE *)(inited + 88) = v76;
  a3 = (char *)MOSuggestionAssetMetadataKeyWorkoutGroupTotalCaloriesQuantity;
  *(_QWORD *)(inited + 104) = v77;
  *(_QWORD *)(inited + 112) = a3;
  swift_beginAccess(v203, v225, 0, 0);
  v28 = *v203;
  v78 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for HKQuantity?);
  *(_QWORD *)(inited + 120) = v28;
  a2 = (_QWORD *)MOSuggestionAssetMetadataKeyWorkoutGroupTotalCaloriesWithUnit;
  *(_QWORD *)(inited + 144) = v78;
  *(_QWORD *)(inited + 152) = a2;
  swift_beginAccess(v204, v224, 0, 0);
  v79 = *(_QWORD *)(a7 + 16);
  a8 = *(_QWORD *)(a7 + 24);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
  *(_QWORD *)(inited + 160) = v79;
  *(_QWORD *)(inited + 168) = a8;
  v37 = (_QWORD *)MOSuggestionAssetMetadataKeyWorkoutGroupCount;
  *(_QWORD *)(inited + 184) = v80;
  *(_QWORD *)(inited + 192) = v37;
  swift_beginAccess(v207, v223, 0, 0);
  a7 = *v207;
  if (!((unint64_t)*v207 >> 62))
  {
    v81 = *(_QWORD *)((a7 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a8);
    v82 = a4;
    v83 = a6;
    v84 = a3;
    v85 = a2;
    v86 = v37;
    v87 = v28;
    goto LABEL_18;
  }
LABEL_42:
  if (a7 < 0)
    v183 = a7;
  else
    v183 = a7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a8);
  v184 = a4;
  v185 = a6;
  v186 = a3;
  v187 = a2;
  v188 = v37;
  swift_bridgeObjectRetain(a7);
  v189 = v28;
  v81 = _CocoaArrayWrapper.endIndex.getter(v183);
  swift_bridgeObjectRelease(a7);
LABEL_18:
  *(_QWORD *)(inited + 200) = v81;
  v88 = MOSuggestionAssetMetadataKeyWorkoutGroupAverageHeartrate;
  v205 = (void *)MOSuggestionAssetMetadataKeyWorkoutGroupAverageHeartrate;
  *(_QWORD *)(inited + 224) = &type metadata for Int;
  *(_QWORD *)(inited + 232) = v88;
  *(double *)(inited + 240) = v29;
  v89 = (void *)MOSuggestionAssetMetadataKeyWorkoutGroupTypes;
  *(_QWORD *)(inited + 264) = &type metadata for Double;
  *(_QWORD *)(inited + 272) = v89;
  swift_beginAccess(v197, v222, 0, 0);
  v90 = *v197;
  v91 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
  *(_QWORD *)(inited + 280) = v90;
  v92 = (void *)MOSuggestionAssetMetadataKeyWorkoutGroupTypeEnumValues;
  *(_QWORD *)(inited + 304) = v91;
  *(_QWORD *)(inited + 312) = v92;
  swift_beginAccess(v198, v221, 0, 0);
  v93 = *v198;
  v94 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [UInt]);
  *(_QWORD *)(inited + 320) = v93;
  v95 = (void *)MOSuggestionAssetMetadataKeyWorkoutGroupStartDates;
  *(_QWORD *)(inited + 344) = v94;
  *(_QWORD *)(inited + 352) = v95;
  swift_beginAccess(v199, v220, 0, 0);
  v96 = *v199;
  v97 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [Date]);
  *(_QWORD *)(inited + 360) = v96;
  v98 = (void *)MOSuggestionAssetMetadataKeyWorkoutGroupEndDates;
  *(_QWORD *)(inited + 384) = v97;
  *(_QWORD *)(inited + 392) = v98;
  swift_beginAccess(v200, v219, 0, 0);
  v99 = *v200;
  *(_QWORD *)(inited + 424) = v97;
  *(_QWORD *)(inited + 400) = v99;
  v100 = v205;
  v101 = v89;
  swift_bridgeObjectRetain(v90);
  v102 = v92;
  swift_bridgeObjectRetain(v93);
  v103 = v95;
  swift_bridgeObjectRetain(v96);
  v104 = v98;
  swift_bridgeObjectRetain(v99);
  v105 = specialized Dictionary.init(dictionaryLiteral:)(inited);
  v229 = v105;
  swift_beginAccess(v201, v218, 0, 0);
  v106 = *v201;
  if (!*v201 || v29 <= 0.0)
  {
LABEL_26:
    if (a19 - 4 >= 7 && a19 != 2)
    {
      if (a19 != 3)
      {
        v162 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
        objc_msgSend(v162, "scale");
        v164 = v163;

        swift_beginAccess(v207, &v216, 0, 0);
        v165 = *v207;
        swift_bridgeObjectRetain(*v207);
        v167 = specialized static MOSuggestionAssetSnowglobeEffect.imageFor(images:targetSize:)(v166, v164 * 300.0, v164 * 300.0);
        swift_bridgeObjectRelease(v165);
        if (v167)
        {
          v168 = MOSuggestionAssetsTypeWorkoutGroup;
          type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIImage, UIImage_ptr);
          v169 = objc_msgSend(objc_allocWithZone((Class)MOSuggestionAsset), "init:type:contentClassType:", v167, v168, swift_getObjCClassFromMetadata());
          (*(void (**)(void))(*(_QWORD *)a20 + 288))();
          v171 = v170;
          v172 = String._bridgeToObjectiveC()();
          objc_msgSend(v169, "addIdentifier:", v172, swift_bridgeObjectRelease(v171).n128_f64[0]);

          v173 = v229;
          specialized _dictionaryUpCast<A, B, C, D>(_:)(v229);
          v175 = v174;
          swift_bridgeObjectRelease(v173);
          isa = Dictionary._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v169, "addMetadata:", isa, swift_bridgeObjectRelease(v175).n128_f64[0]);

          v48 = v196;
          swift_retain(v196);
          swift_retain(v195);
          swift_retain(v194);
          v45 = v206;
          swift_bridgeObjectRetain(v206);
          v177 = (void *)v167;
          v44 = v193;
          swift_retain(v193);
          v47 = v195;
          v178 = v169;
          v179 = v169;
          v46 = v194;
          specialized static MOSuggestionAssetCacheManager.wrapImageAssetInURLIfNecessary(asset:cacheType:completion:)(v179, a19, v196, a22, v195, a24, v194, v206, a27, v193);

          swift_release_n(v196, v180);
          swift_release_n(v195, v181);
          v151 = v194;
          goto LABEL_31;
        }
        swift_bridgeObjectRelease(v229);
        v48 = v196;
        swift_retain(v196);
        swift_retain(v195);
        v46 = v194;
        swift_retain(v194);
        v45 = v206;
        swift_bridgeObjectRetain(v206);
        v44 = v193;
        swift_retain(v193);
        v47 = v195;
        closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, v196, a22, v195, a24, v194, v206, a27);
        swift_release_n(v196, v182);
        v149 = v195;
LABEL_30:
        swift_release_n(v149, v148);
        v151 = v46;
LABEL_31:
        swift_release_n(v151, v150);
        swift_bridgeObjectRelease_n(v45, 2);
        swift_release_n(v44, v152);
        goto LABEL_32;
      }
      v157 = (void *)MOSuggestionAssetMetadataKeyWorkoutGroupIcons;
      swift_beginAccess(v207, v215, 0, 0);
      v158 = *v207;
      v217 = (_QWORD *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [UIImage]);
      *(_QWORD *)&v216 = v158;
      outlined init with take of Any(&v216, v214);
      v159 = v157;
      swift_bridgeObjectRetain(v158);
      v160 = v229;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v229);
      v213 = v160;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v214, v159, isUniquelyReferenced_nonNull_native);
      v229 = v213;

      swift_bridgeObjectRelease(0x8000000000000000);
    }
    swift_beginAccess(v207, &v216, 0, 0);
    v131 = *v207;
    v132 = one-time initialization token for exerciseGreen;
    swift_bridgeObjectRetain(*v207);
    if (v132 != -1)
      swift_once(&one-time initialization token for exerciseGreen, one-time initialization function for exerciseGreen);
    v133 = (void *)static MOSuggestionTheme.Colors.exerciseGreen;
    v134 = objc_msgSend((id)static MOSuggestionTheme.Colors.exerciseGreen, "colorWithAlphaComponent:", 0.18);
    v135 = objc_allocWithZone((Class)type metadata accessor for MOSuggestionWorkoutsSnowGlobeView());
    v136 = v133;
    v137 = specialized MOSuggestionWorkoutsSnowGlobeView.init(icons:glyphBackgroundColor:glyphTintColor:)(v131, v134, v136);

    v138 = objc_msgSend(objc_allocWithZone((Class)MOSuggestionAsset), "init:type:contentClassType:", v137, MOSuggestionAssetsTypeWorkoutGroup, swift_getObjCClassFromMetadata());
    (*(void (**)(void))(*(_QWORD *)a20 + 288))();
    v140 = v139;
    v141 = String._bridgeToObjectiveC()();
    objc_msgSend(v138, "addIdentifier:", v141, swift_bridgeObjectRelease(v140).n128_f64[0]);

    v142 = v229;
    specialized _dictionaryUpCast<A, B, C, D>(_:)(v229);
    v144 = v143;
    swift_bridgeObjectRelease(v142);
    v145 = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v138, "addMetadata:", v145, swift_bridgeObjectRelease(v144).n128_f64[0]);

    v48 = v196;
    swift_retain(v196);
    swift_retain(v195);
    v46 = v194;
    swift_retain(v194);
    v45 = v206;
    swift_bridgeObjectRetain(v206);
    v44 = v193;
    swift_retain(v193);
    v146 = v138;
    v47 = v195;
    closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(v138, v196, a22, v195, a24, v194, v206, a27);

    swift_release_n(v196, v147);
    v149 = v195;
    goto LABEL_30;
  }
  v107 = objc_allocWithZone((Class)HKHealthStore);
  v108 = v106;
  v109 = objc_msgSend(v107, "init");
  v110 = objc_msgSend(objc_allocWithZone((Class)FIUIUnitManager), "initWithHealthStore:", v109);

  v111 = objc_msgSend(objc_allocWithZone((Class)FIUIFormattingManager), "initWithUnitManager:", v110);
  if (!v111)
  {
LABEL_25:

    goto LABEL_26;
  }
  v112 = objc_msgSend((id)objc_opt_self(HKQuantity), "quantityWithUnit:doubleValue:", v108, v29);
  v113 = (void *)MOSuggestionAssetMetadataKeyWorkoutGroupAverageHeartrateQuantity;
  v217 = (_QWORD *)type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for HKQuantity, HKQuantity_ptr);
  *(_QWORD *)&v216 = v112;
  outlined init with take of Any(&v216, v214);
  v114 = v113;
  v115 = v112;
  v116 = swift_isUniquelyReferenced_nonNull_native(v105);
  v215[0] = v105;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v214, v114, v116);
  v229 = v215[0];

  swift_bridgeObjectRelease(0x8000000000000000);
  v117 = MOSuggestionAssetMetadataKeyWorkoutAverageHeartRateWithUnit;
  v118 = objc_msgSend(v111, "localizedStringWithHeartRate:unitStyle:", v115, 1);
  if (v118)
  {
    v120 = v118;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v118);
    v122 = v121;

    v123 = String.uppercased()()._object;
    swift_bridgeObjectRelease(v122);
    v124 = String._bridgeToObjectiveC()();
    v125 = objc_msgSend(v124, "trimmedString", swift_bridgeObjectRelease(v123).n128_f64[0]);

    if (v125)
    {
      v126 = static String._unconditionallyBridgeFromObjectiveC(_:)(v125);
      v128 = v127;

      v217 = &type metadata for String;
      *(_QWORD *)&v216 = v126;
      *((_QWORD *)&v216 + 1) = v128;
      outlined init with take of Any(&v216, v214);
      v129 = v229;
      v130 = swift_isUniquelyReferenced_nonNull_native(v229);
      v215[0] = v129;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v214, v117, v130);
      v229 = v215[0];

      swift_bridgeObjectRelease(0x8000000000000000);
      goto LABEL_26;
    }
    specialized Dictionary._Variant.removeValue(forKey:)((uint64_t)v117, &v216);

    outlined destroy of Any?((uint64_t)&v216, &demangling cache variable for type metadata for Any?);
    goto LABEL_25;
  }
  swift_release_n(v193, v119);
  swift_bridgeObjectRelease_n(v206, 4);
  swift_release_n(v194, v190);
  swift_release_n(v195, v191);
  result = swift_release_n(v196, v192);
  __break(1u);
  return result;
}

uint64_t specialized MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:)(uint64_t a1, int a2, uint64_t a3, int a4, double *a5, void *a6, uint64_t a7, uint64_t a8, void (*a9)(double *, __n128), uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(__n128);
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char **v37;
  unint64_t v38;
  uint64_t v39;
  double *v40;
  unint64_t v41;
  id v42;
  void *v43;
  id v44;
  __n128 v45;
  void *v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  void *v50;
  Class isa;
  id v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  id v65;
  uint64_t v66;
  char *v67;
  char *v68;
  unint64_t v69;
  unint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  double *v82;
  uint64_t v83;
  id v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  double *v90;
  void *v91;
  id v92;
  double *v93;
  double v94;
  uint64_t v95;
  uint64_t inited;
  uint64_t v97;
  uint64_t (*v98)(__n128);
  _QWORD *v99;
  void *v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  double *v104;
  void **v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t (*v113)(__n128);
  uint64_t v114;
  Class v115;
  _QWORD *v116;
  uint64_t v117;
  void *v118;
  _QWORD *v119;
  uint64_t (*v120)(__n128);
  double v121;
  char *v122;
  id v123;
  id v124;
  id v125;
  id v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  id v131;
  uint64_t v132;
  id v133;
  void *v134;
  void *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void **v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  double *v145;
  void **v146;
  uint64_t v147;
  __n128 v148;
  char *v149;
  Class v150;
  _QWORD *v151;
  uint64_t v152;
  void *v153;
  _QWORD *v154;
  id v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  char *v175;
  Class v176;
  id v177;
  id v178;
  uint64_t v179;
  id v180;
  void *v181;
  id v182;
  const void *v183;
  double v184;
  __CFString *v185;
  uint64_t v186;
  char *v187;
  __n128 v188;
  __n128 v189;
  __n128 v190;
  __n128 v191;
  unint64_t v193;
  id v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  id v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  double *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  _QWORD *v211;
  double *v212;
  uint64_t v213;
  char *v214;
  void (*v215)(double *, __n128);
  void (*v216)(char *, char *, uint64_t, __n128);
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  id v221;
  int v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  id v228;
  __CFString *v229;
  char *v230;
  char *v231;
  char *v232;
  char *v233;
  unint64_t v234;
  uint64_t v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  char v239[8];
  char v240[8];
  uint64_t aBlock;
  uint64_t v242;
  void *v243;
  void *v244;
  uint64_t (*v245)();
  _QWORD *v246;

  v222 = a2;
  v213 = a1;
  v16 = a10;
  v237 = type metadata accessor for UUID(0);
  v223 = *(_QWORD *)(v237 - 8);
  v17 = __chkstk_darwin(v237);
  v236 = (char *)&v198 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v233 = (char *)&v198 - v20;
  __chkstk_darwin(v19);
  v232 = (char *)&v198 - v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v198 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v214 = (char *)&v198 - v26;
  v27 = swift_allocObject(&unk_1001EDB20, 80, 7);
  *(_QWORD *)(v27 + 16) = a3;
  LODWORD(v216) = a4;
  *(_BYTE *)(v27 + 24) = a4;
  *(_QWORD *)(v27 + 32) = a5;
  *(_QWORD *)(v27 + 40) = a6;
  v228 = a6;
  *(_QWORD *)(v27 + 48) = a7;
  *(_QWORD *)(v27 + 56) = a8;
  v215 = a9;
  *(_QWORD *)(v27 + 64) = a9;
  *(_QWORD *)(v27 + 72) = a10;
  v28 = v213;
  v29 = swift_allocObject(&unk_1001EDB48, 32, 7);
  *(_QWORD *)(v29 + 16) = partial apply for closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:);
  *(_QWORD *)(v29 + 24) = v27;
  v30 = type metadata accessor for MOWorkoutGroupAssetReference(0);
  v31 = swift_dynamicCastClass(v28, v30);
  if (v31)
  {
    v201 = v29;
    v32 = *(uint64_t (**)(__n128))(*(_QWORD *)v31 + 344);
    v206 = a3;
    swift_retain_n(a3);
    v205 = a5;
    swift_retain_n(a5);
    v204 = a7;
    swift_retain_n(a7);
    v203 = a8;
    swift_bridgeObjectRetain_n(a8, 3);
    v209 = a10;
    swift_retain_n(a10);
    v202 = v27;
    swift_retain_n(v27);
    v33 = swift_retain(v28);
    v34 = v32(v33);
    v35 = v34;
    if ((unint64_t)v34 >> 62)
    {
      if (v34 < 0)
        v32 = (uint64_t (*)(__n128))v34;
      else
        v32 = (uint64_t (*)(__n128))(v34 & 0xFFFFFFFFFFFFFF8);
      swift_bridgeObjectRetain(v34);
      v36 = _CocoaArrayWrapper.endIndex.getter(v32);
    }
    else
    {
      v36 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v34);
    }
    v37 = (char **)v223;
    v38 = v237;
    if (v36)
    {
      if (v36 >= 1)
      {
        v39 = 0;
        v230 = 0;
        v235 = v35;
        v234 = v35 & 0xC000000000000001;
        v229 = CFSTR("MOWorkoutMetaDataKeyWorkoutID");
        v40 = _swiftEmptyArrayStorage;
        v231 = (char *)&type metadata for Any + 8;
        v227 = (uint64_t)&type metadata for Swift.AnyObject + 8;
        while (1)
        {
          v41 = (unint64_t)v40;
          if (v234)
            v42 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v39, v235);
          else
            v42 = *(id *)(v235 + 8 * v39 + 32);
          v43 = v42;
          v44 = objc_msgSend(v42, "data");
          if (!v44)
            goto LABEL_22;
          v46 = v44;
          v47 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v44);
          v49 = v48;

          v50 = (void *)objc_opt_self(NSJSONSerialization);
          isa = Data._bridgeToObjectiveC()().super.isa;
          aBlock = 0;
          v52 = objc_msgSend(v50, "JSONObjectWithData:options:error:", isa, 0, &aBlock);

          v53 = aBlock;
          if (!v52)
            break;
          v54 = (id)aBlock;
          _bridgeAnyObjectToAny(_:)(&aBlock, v52);
          outlined consume of Data._Representation(v47, v49);
          swift_unknownObjectRelease(v52);
          v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Swift.AnyObject]);
          if ((swift_dynamicCast(&v238, &aBlock, v231, v55, 6) & 1) == 0)
            goto LABEL_20;
          v56 = v238;
          v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(v229);
          v59 = v58;
          v38 = v237;
          if (!*(_QWORD *)(v56 + 16)
            || (v60 = specialized __RawDictionaryStorage.find<A>(_:)(v57, v58), (v61 & 1) == 0))
          {
            swift_bridgeObjectRelease(v59);
            v45 = swift_bridgeObjectRelease(v56);
            goto LABEL_22;
          }
          v62 = *(_QWORD *)(*(_QWORD *)(v56 + 56) + 8 * v60);
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease(v59);
          swift_bridgeObjectRelease(v56);
          v238 = v62;
          if ((swift_dynamicCast(&aBlock, &v238, v227, &type metadata for String, 6) & 1) == 0)
            goto LABEL_22;
          v63 = v242;
          UUID.init(uuidString:)(aBlock, v242);

          v64 = swift_bridgeObjectRelease(v63);
LABEL_23:
          v40 = (double *)v41;
          if (((unsigned int (*)(char *, uint64_t, unint64_t, __n128))v37[6])(v25, 1, v38, v64) == 1)
          {
            outlined destroy of Any?((uint64_t)v25, &demangling cache variable for type metadata for UUID?);
          }
          else
          {
            v67 = v37[4];
            v68 = v233;
            ((void (*)(char *, char *, unint64_t))v67)(v233, v25, v38);
            ((void (*)(char *, char *, unint64_t))v67)(v236, v68, v38);
            if ((swift_isUniquelyReferenced_nonNull_native(v41) & 1) == 0)
              v40 = (double *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v41 + 16) + 1, 1, v41);
            v70 = *((_QWORD *)v40 + 2);
            v69 = *((_QWORD *)v40 + 3);
            if (v70 >= v69 >> 1)
              v40 = (double *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v69 > 1, v70 + 1, 1, (unint64_t)v40);
            *((_QWORD *)v40 + 2) = v70 + 1;
            ((void (*)(char *, char *, unint64_t))v67)((char *)v40+ ((*((unsigned __int8 *)v37 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v37 + 80))+ (_QWORD)v37[9] * v70, v236, v38);
          }
          if (v36 == ++v39)
          {
            v35 = v235;
            swift_bridgeObjectRelease(v235);
            v212 = v40;
            goto LABEL_32;
          }
        }
        v65 = (id)aBlock;
        v66 = _convertNSErrorToError(_:)(v53);

        swift_willThrow();
        outlined consume of Data._Representation(v47, v49);
        swift_errorRelease(v66);
        v230 = 0;
LABEL_20:
        v38 = v237;
LABEL_22:
        ((void (*)(char *, uint64_t, uint64_t, unint64_t, __n128))v37[7])(v25, 1, 1, v38, v45);

        goto LABEL_23;
      }
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRelease(v35);
      v212 = _swiftEmptyArrayStorage;
LABEL_32:
      swift_bridgeObjectRelease(v35);
      v227 = swift_allocObject(&unk_1001EDB70, 24, 7);
      *(_QWORD *)(v227 + 16) = _swiftEmptyArrayStorage;
      v226 = swift_allocObject(&unk_1001ED118, 24, 7);
      *(_QWORD *)(v226 + 16) = 0;
      v236 = (char *)swift_allocObject(&unk_1001ED118, 24, 7);
      *((_QWORD *)v236 + 2) = 0;
      v225 = swift_allocObject(&unk_1001ED118, 24, 7);
      *(_QWORD *)(v225 + 16) = 0;
      v224 = swift_allocObject(&unk_1001ED118, 24, 7);
      *(_QWORD *)(v224 + 16) = 0;
      v211 = (_QWORD *)swift_allocObject(&unk_1001ED118, 24, 7);
      v211[2] = 0;
      v72 = swift_allocObject(&unk_1001EDB98, 24, 7);
      *(_QWORD *)(v72 + 16) = 0;
      v73 = swift_allocObject(&unk_1001EDBC0, 32, 7);
      *(_QWORD *)(v73 + 16) = 0;
      *(_QWORD *)(v73 + 24) = 0;
      v74 = swift_allocObject(&unk_1001ED760, 32, 7);
      *(_QWORD *)(v74 + 16) = 0;
      *(_BYTE *)(v74 + 24) = 1;
      v75 = swift_allocObject(&unk_1001EDBE8, 24, 7);
      *(_QWORD *)(v75 + 16) = 0;
      v221 = objc_msgSend(objc_allocWithZone((Class)HKQuantityType), "initWithIdentifier:", HKQuantityTypeIdentifierActiveEnergyBurned);
      v200 = objc_msgSend(objc_allocWithZone((Class)HKQuantityType), "initWithIdentifier:", HKQuantityTypeIdentifierHeartRate);
      v76 = swift_allocObject(&unk_1001EDC10, 24, 7);
      *(_QWORD *)(v76 + 16) = _swiftEmptyArrayStorage;
      v77 = swift_allocObject(&unk_1001EDC38, 24, 7);
      *(_QWORD *)(v77 + 16) = _swiftEmptyArrayStorage;
      v233 = (char *)swift_allocObject(&unk_1001EDC60, 24, 7);
      *((_QWORD *)v233 + 2) = _swiftEmptyArrayStorage;
      v78 = swift_allocObject(&unk_1001EDC88, 24, 7);
      *(_QWORD *)(v78 + 16) = _swiftEmptyArrayStorage;
      v79 = swift_allocObject(&unk_1001EDC88, 24, 7);
      *(_QWORD *)(v79 + 16) = _swiftEmptyArrayStorage;
      v80 = swift_allocObject(&unk_1001EDB98, 24, 7);
      *(_QWORD *)(v80 + 16) = 0;
      v81 = swift_allocObject(&unk_1001EDCB0, 192, 7);
      v82 = v212;
      *(_QWORD *)(v81 + 16) = v211;
      *(_QWORD *)(v81 + 24) = v82;
      *(_QWORD *)(v81 + 32) = 2;
      *(_QWORD *)(v81 + 40) = v72;
      v234 = v72;
      v83 = v73;
      v84 = v221;
      v85 = v236;
      *(_QWORD *)(v81 + 48) = v221;
      *(_QWORD *)(v81 + 56) = v85;
      *(_QWORD *)(v81 + 64) = v73;
      *(_QWORD *)(v81 + 72) = v74;
      v86 = v224;
      *(_QWORD *)(v81 + 80) = v75;
      *(_QWORD *)(v81 + 88) = v86;
      v87 = v226;
      *(_QWORD *)(v81 + 96) = v225;
      *(_QWORD *)(v81 + 104) = v87;
      *(_QWORD *)(v81 + 112) = v227;
      *(_QWORD *)(v81 + 120) = v76;
      *(_QWORD *)(v81 + 128) = v77;
      *(_QWORD *)(v81 + 136) = v78;
      *(_QWORD *)(v81 + 144) = v79;
      *(_QWORD *)(v81 + 152) = v80;
      *(_BYTE *)(v81 + 160) = v222;
      v88 = v213;
      *(_QWORD *)(v81 + 168) = v213;
      *(_QWORD *)(v81 + 176) = partial apply for specialized closure #1 in MOAngelControllerWrapper.continuationWrapper<A>(action:);
      v89 = v201;
      v235 = v81;
      *(_QWORD *)(v81 + 184) = v201;
      v90 = v82;
      v208 = v83;
      v207 = v74;
      v210 = v75;
      v220 = v76;
      v219 = v77;
      v218 = v78;
      v217 = v79;
      v199 = v80;
      if (!v84)
      {
        swift_retain(v206);
        swift_retain(v205);
        swift_retain(v204);
        swift_bridgeObjectRetain(v203);
        swift_retain(v209);
        v212 = v90;
        swift_retain(v202);
        swift_retain(v88);
        swift_bridgeObjectRetain(v90);
        swift_retain(v89);
        swift_retain(v80);
        swift_retain(v79);
        swift_retain(v78);
        swift_retain(v77);
        swift_retain(v76);
        swift_retain(v227);
        swift_retain(v226);
        swift_retain(v225);
        swift_retain(v224);
        swift_retain(v210);
        v102 = v207;
        swift_retain(v207);
        v103 = v208;
        swift_retain(v208);
        v104 = (double *)v236;
        swift_retain(v236);
        v105 = (void **)v234;
        swift_retain(v234);
        swift_retain(v211);
        v106 = v203;
        v107 = v204;
        v108 = (uint64_t)v228;
        v109 = v206;
        v195 = v79;
        v196 = v80;
        v110 = v210;
        v111 = (uint64_t)v205;
        specialized closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:)(v211, v212, (char *)2, v105, 0, v104, v103, v102, v210, v224, v225, v226, v227, v220, v219, v218, v195, v196, v222,
          v213,
          v206,
          v216,
          (uint64_t)v205,
          (uint64_t)v228,
          v204,
          v203,
          v215,
          v209);
        swift_release(v202);
        swift_release(v109);
        swift_release(v111);
        swift_release(v107);
        swift_bridgeObjectRelease(v106);
        swift_release(v209);
        v38 = (unint64_t)v105;
        a5 = v104;
        v37 = &selRef_genericAvatarFor_pointSize_completion_;
        v99 = (_QWORD *)&unk_10019E000;
        goto LABEL_48;
      }
      v91 = v84;
      v231 = (char *)objc_allocWithZone((Class)HKHealthStore);
      v92 = v91;
      swift_retain(v88);
      v32 = (uint64_t (*)(__n128))v92;
      swift_bridgeObjectRetain(v90);
      swift_retain(v89);
      swift_retain(v80);
      swift_retain(v79);
      swift_retain(v78);
      swift_retain(v77);
      swift_retain(v76);
      swift_retain(v227);
      swift_retain(v226);
      swift_retain(v225);
      swift_retain(v224);
      swift_retain(v210);
      swift_retain(v207);
      swift_retain(v208);
      v93 = (double *)v236;
      swift_retain(v236);
      v38 = v234;
      swift_retain(v234);
      *(_QWORD *)&v94 = swift_retain(v211).n128_u64[0];
      v37 = &selRef_genericAvatarFor_pointSize_completion_;
      v231 = (char *)objc_msgSend(v231, "init", v94);
      v95 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      inited = swift_initStackObject(v95, v239);
      *(_OWORD *)(inited + 16) = xmmword_10019EDA0;
      *(_QWORD *)(inited + 32) = v32;
      aBlock = inited;
      specialized Array._endMutation()(inited);
      v35 = aBlock;
      a5 = v93;
      if (!((unint64_t)aBlock >> 62))
      {
        v97 = *(_QWORD *)((aBlock & 0xFFFFFFFFFFFFF8) + 0x10);
        v98 = v32;
        v99 = (_QWORD *)&unk_10019E000;
        if (!v97)
        {
LABEL_46:
          v101 = &_swiftEmptySetSingleton;
          goto LABEL_47;
        }
LABEL_35:
        specialized Set.init(_nonEmptyArrayLiteral:)(v35);
        v101 = v100;
LABEL_47:
        swift_bridgeObjectRelease(v35);
        type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for HKQuantityType, HKQuantityType_ptr);
        lazy protocol witness table accessor for type HKQuantityType and conformance NSObject();
        v115 = Set._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v101);
        v116 = (_QWORD *)swift_allocObject(&unk_1001EDDA0, 48, 7);
        v116[2] = v32;
        v116[3] = v38;
        v117 = v235;
        v116[4] = partial apply for closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:);
        v116[5] = v117;
        v245 = (uint64_t (*)())partial apply for closure #3 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:);
        v246 = v116;
        aBlock = (uint64_t)_NSConcreteStackBlock;
        v242 = v99[418];
        v243 = thunk for @escaping @callee_guaranteed (@guaranteed [HKQuantityType : HKUnit], @guaranteed Error?) -> ();
        v244 = &block_descriptor_272;
        v118 = _Block_copy(&aBlock);
        v119 = v246;
        v120 = v32;
        swift_retain(v38);
        swift_retain(v117);
        *(_QWORD *)&v121 = swift_release(v119).n128_u64[0];
        v122 = v231;
        objc_msgSend(v231, "preferredUnitsForQuantityTypes:completion:", v115, v118, v121);
        _Block_release(v118);

        v108 = (uint64_t)v228;
        v110 = v210;
LABEL_48:
        v123 = v200;
        if (v200)
        {
          v124 = objc_allocWithZone((Class)HKHealthStore);
          v125 = v123;
          v126 = objc_msgSend(v124, v37[24]);
          v127 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
          v128 = swift_initStackObject(v127, v240);
          *(_OWORD *)(v128 + 16) = xmmword_10019EDA0;
          *(_QWORD *)(v128 + 32) = v125;
          aBlock = v128;
          specialized Array._endMutation()(v128);
          v129 = aBlock;
          if ((unint64_t)aBlock >> 62)
          {
            if (aBlock < 0)
              v193 = aBlock;
            else
              v193 = aBlock & 0xFFFFFFFFFFFFFF8;
            v194 = v125;
            swift_bridgeObjectRetain(v129);
            v130 = _CocoaArrayWrapper.endIndex.getter(v193);
            swift_bridgeObjectRelease(v129);
          }
          else
          {
            v130 = *(_QWORD *)((aBlock & 0xFFFFFFFFFFFFF8) + 0x10);
            v131 = v125;
          }
          v132 = v199;
          v133 = v221;
          if (v130)
          {
            specialized Set.init(_nonEmptyArrayLiteral:)(v129);
            v135 = v134;
          }
          else
          {
            v135 = &_swiftEmptySetSingleton;
          }
          swift_bridgeObjectRelease(v129);
          type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for HKQuantityType, HKQuantityType_ptr);
          lazy protocol witness table accessor for type HKQuantityType and conformance NSObject();
          v150 = Set._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v135);
          v151 = (_QWORD *)swift_allocObject(&unk_1001EDD50, 48, 7);
          v151[2] = v125;
          v151[3] = v132;
          v152 = v235;
          v151[4] = partial apply for closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:);
          v151[5] = v152;
          v245 = partial apply for closure #4 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:);
          v246 = v151;
          aBlock = (uint64_t)_NSConcreteStackBlock;
          v242 = v99[418];
          v243 = thunk for @escaping @callee_guaranteed (@guaranteed [HKQuantityType : HKUnit], @guaranteed Error?) -> ();
          v244 = &block_descriptor_266;
          v153 = _Block_copy(&aBlock);
          v154 = v246;
          swift_retain(v132);
          swift_retain(v152);
          v155 = v125;
          objc_msgSend(v126, "preferredUnitsForQuantityTypes:completion:", v150, v153, swift_release(v154).n128_f64[0]);
          _Block_release(v153);

          v145 = v212;
          v149 = (char *)*((_QWORD *)v212 + 2);
          if (v149)
          {
LABEL_57:
            v156 = (char *)v145
                 + ((*(unsigned __int8 *)(v223 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v223 + 80));
            v215 = *(void (**)(double *, __n128))(v223 + 72);
            v216 = *(void (**)(char *, char *, uint64_t, __n128))(v223 + 16);
            v157 = v99[418];
            v158 = v237;
            v159 = v223;
            v160 = v214;
            v161 = v224;
            while (1)
            {
              v216(v160, v156, v158, v148);
              v162 = *(char **)(v159 + 56);
              ((void (*)(char *, _QWORD, uint64_t, uint64_t))v162)(v160, 0, 1, v158);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v159 + 48))(v160, 1, v158) == 1)
                goto LABEL_61;
              v214 = v162;
              (*(void (**)(char *, char *, uint64_t))(v159 + 32))(v232, v160, v158);
              v229 = (__CFString *)objc_msgSend(objc_allocWithZone((Class)HKHealthStore), "init");
              v163 = swift_allocObject(&unk_1001EDCD8, 128, 7);
              v231 = v149;
              v164 = v220;
              v165 = v218;
              *(_QWORD *)(v163 + 16) = v220;
              *(_QWORD *)(v163 + 24) = v165;
              v166 = v217;
              v167 = v219;
              *(_QWORD *)(v163 + 32) = v217;
              *(_QWORD *)(v163 + 40) = v167;
              *(_QWORD *)(v163 + 48) = v233;
              *(_BYTE *)(v163 + 56) = v222;
              v230 = v156;
              v168 = v227;
              *(_QWORD *)(v163 + 64) = v227;
              *(_QWORD *)(v163 + 72) = partial apply for closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:);
              v169 = v226;
              *(_QWORD *)(v163 + 80) = v235;
              *(_QWORD *)(v163 + 88) = v169;
              v170 = v236;
              *(_QWORD *)(v163 + 96) = v234;
              *(_QWORD *)(v163 + 104) = v170;
              v171 = v225;
              *(_QWORD *)(v163 + 112) = v225;
              *(_QWORD *)(v163 + 120) = v161;
              v228 = (id)objc_opt_self(HKQuery);
              swift_retain(v166);
              swift_retain(v165);
              swift_retain(v167);
              v172 = v164;
              v173 = v231;
              swift_retain(v172);
              swift_retain(v168);
              swift_retain(v169);
              v174 = v171;
              v133 = v221;
              swift_retain(v174);
              swift_retain(v161);
              swift_retain(v236);
              swift_retain(v234);
              swift_retain(v235);
              swift_retain(v233);
              v175 = v232;
              v176 = UUID._bridgeToObjectiveC()().super.isa;
              v177 = objc_msgSend(v228, "predicateForObjectWithUUID:", v176);

              v178 = objc_msgSend((id)objc_opt_self(HKObjectType), "workoutType");
              v179 = swift_allocObject(&unk_1001EDD00, 32, 7);
              *(_QWORD *)(v179 + 16) = partial apply for closure #5 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:);
              *(_QWORD *)(v179 + 24) = v163;
              v180 = objc_allocWithZone((Class)HKSampleQuery);
              v245 = (uint64_t (*)())partial apply for closure #1 in MOSuggestionAssetWorkoutProvider.getWorkout(workoutUUID:completion:);
              v246 = (_QWORD *)v179;
              aBlock = (uint64_t)_NSConcreteStackBlock;
              v242 = v157;
              v243 = thunk for @escaping @callee_guaranteed (@guaranteed HKSampleQuery, @guaranteed [HKSample]?, @guaranteed Error?) -> ();
              v244 = &block_descriptor_260;
              v181 = _Block_copy(&aBlock);
              v182 = objc_msgSend(v180, "initWithSampleType:predicate:limit:sortDescriptors:resultsHandler:", v178, v177, 1, 0, v181, swift_retain(v163).n128_f64[0]);

              v183 = v181;
              v159 = v223;
              _Block_release(v183);
              *(_QWORD *)&v184 = swift_release(v246).n128_u64[0];
              v185 = v229;
              -[__CFString executeQuery:](v229, "executeQuery:", v182, v184);

              v186 = v163;
              v158 = v237;
              swift_release(v186);

              v187 = v230;
              (*(void (**)(char *, uint64_t))(v159 + 8))(v175, v158);
              v156 = (char *)v215 + (_QWORD)v187;
              v149 = v173 - 1;
              if (!v149)
              {
                ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v214)(v160, 1, 1, v158, v148);
                goto LABEL_61;
              }
            }
          }
        }
        else
        {
          v136 = v206;
          swift_retain(v206);
          v137 = (uint64_t)v205;
          swift_retain(v205);
          v138 = v204;
          swift_retain(v204);
          v139 = v203;
          swift_bridgeObjectRetain(v203);
          v140 = (void **)v38;
          v141 = v108;
          v142 = v209;
          swift_retain(v209);
          v143 = v110;
          v144 = v202;
          swift_retain(v202);
          v197 = v141;
          v145 = v212;
          v146 = v140;
          v133 = v221;
          specialized closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:)(v211, v212, (char *)2, v146, (uint64_t)v221, a5, v208, v207, v143, v224, v225, v226, v227, v220, v219, v218, v217, v199, v222,
            v213,
            v136,
            v216,
            v137,
            v197,
            v138,
            v139,
            v215,
            v142);
          swift_release(v144);
          swift_release(v136);
          v147 = v137;
          v99 = (_QWORD *)&unk_10019E000;
          swift_release(v147);
          swift_release(v138);
          swift_bridgeObjectRelease(v139);
          v148 = swift_release(v142);
          v149 = (char *)*((_QWORD *)v145 + 2);
          if (v149)
            goto LABEL_57;
        }
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v223 + 56))(v214, 1, 1, v237, v148);
LABEL_61:

        swift_bridgeObjectRelease(v212);
        v27 = v202;
        swift_release(v202);
        swift_release(v201);
        swift_release(v227);
        swift_release(v226);
        swift_release(v236);
        swift_release(v225);
        swift_release(v224);
        swift_release(v211);
        swift_release(v234);
        swift_release(v208);
        swift_release(v207);
        swift_release(v210);
        swift_release(v220);
        swift_release(v219);
        swift_release(v233);
        swift_release(v218);
        swift_release(v217);
        swift_release(v199);
        swift_release(v213);

        v71 = swift_release(v235);
        a3 = v206;
        a5 = v205;
        a7 = v204;
        a8 = v203;
        v16 = v209;
        goto LABEL_62;
      }
    }
    if (v35 < 0)
      v112 = v35;
    else
      v112 = v35 & 0xFFFFFFFFFFFFFF8;
    v113 = v32;
    swift_bridgeObjectRetain(v35);
    v114 = _CocoaArrayWrapper.endIndex.getter(v112);
    swift_bridgeObjectRelease(v35);
    v99 = &unk_10019E000;
    if (!v114)
      goto LABEL_46;
    goto LABEL_35;
  }
  swift_retain_n(a3);
  swift_retain_n(a5);
  swift_retain_n(a7);
  swift_bridgeObjectRetain_n(a8, 3);
  swift_retain_n(a10);
  swift_retain_n(v27);
  closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, a3, (int)v216, (uint64_t)a5, (uint64_t)v228, a7, a8, v215);
  swift_release(v27);
  v71 = swift_release(v29);
LABEL_62:
  swift_release_n(v16, v71);
  swift_bridgeObjectRelease_n(a8, 2);
  swift_release_n(a7, v188);
  swift_release_n(a5, v189);
  swift_release_n(a3, v190);
  return swift_release_n(v27, v191);
}

uint64_t specialized MOSuggestionAssetCacheManager.fetchAndCacheGenericMapSnapshots(_:cacheType:completion:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(double *, __n128), uint64_t a11)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(__n128);
  __n128 v27;
  void *v28;
  uint64_t v29;
  uint64_t (*v30)(void);
  unint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  __n128 v44;
  __n128 v45;
  uint64_t v46;
  char v47;
  void *v48;
  void *v49;
  uint64_t v50;
  id v51;
  id v52;
  char v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned __int8 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  void *v68;
  void **v69;
  void *v70;
  uint64_t v71;
  id v72;
  id v73;
  id v74;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v76;
  void (*v77)(double *, __n128);
  _QWORD *v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(id, void (*)(void *), uint64_t, __n128);
  __n128 v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __n128 v90;
  __n128 v91;
  __n128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  double v96;
  double v97;
  double v98;
  id v99;
  Class isa;
  id v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  Class v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  __n128 v113;
  __n128 v114;
  __n128 v115;
  __n128 v116;
  __n128 v117;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  int v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  id v138;
  uint64_t v139;
  void (*v140)(double *, __n128);
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _BYTE v145[32];
  _QWORD v146[3];
  uint64_t v147;

  v132 = a3;
  v134 = a2;
  v17 = a9;
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v18);
  v135 = (char *)&v126 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = type metadata accessor for Date(0);
  v136 = *(_QWORD *)(v133 - 8);
  __chkstk_darwin(v133);
  v131 = (char *)&v126 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = swift_allocObject(&unk_1001EDE18, 80, 7);
  *(_QWORD *)(v21 + 16) = a4;
  LODWORD(v138) = a5;
  *(_BYTE *)(v21 + 24) = a5;
  *(_QWORD *)(v21 + 32) = a6;
  *(_QWORD *)(v21 + 40) = a7;
  v139 = a7;
  v140 = a10;
  *(_QWORD *)(v21 + 48) = a8;
  *(_QWORD *)(v21 + 56) = a9;
  *(_QWORD *)(v21 + 64) = a10;
  *(_QWORD *)(v21 + 72) = a11;
  v22 = swift_allocObject(&unk_1001EDE40, 32, 7);
  *(_QWORD *)(v22 + 16) = partial apply for closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:);
  *(_QWORD *)(v22 + 24) = v21;
  v23 = type metadata accessor for MOGenericMapAssetReference(0);
  v143 = a4;
  swift_retain(a4);
  v142 = a6;
  swift_retain(a6);
  swift_retain(a8);
  swift_bridgeObjectRetain(a9);
  v141 = a11;
  swift_retain(a11);
  v24 = swift_dynamicCastClass(a1, v23);
  if (!v24)
  {
    swift_retain_n(v143);
    swift_retain_n(v142);
    swift_retain_n(a8);
    swift_bridgeObjectRetain_n(a9, 4);
    swift_retain_n(v141);
    swift_retain(v21);
LABEL_8:
    v39 = v143;
    swift_retain(v143);
    v40 = v142;
    swift_retain(v142);
    swift_retain(a8);
    swift_bridgeObjectRetain(a9);
    v41 = v141;
    swift_retain(v141);
    closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, v39, (int)v138, v40, v139, a8, a9, v140);
    swift_release(v21);
    v42 = v22;
    goto LABEL_9;
  }
  v25 = v24;
  v137 = v22;
  type metadata accessor for MOMapLocation(0);
  v26 = *(uint64_t (**)(__n128))(*(_QWORD *)a1 + 216);
  swift_retain_n(v143);
  swift_retain_n(v142);
  swift_retain_n(a8);
  swift_bridgeObjectRetain_n(a9, 4);
  swift_retain_n(v141);
  swift_retain(v21);
  v27 = swift_retain(a1);
  v28 = (void *)v26(v27);
  v29 = MOMapLocation.__allocating_init(fromResource:)(v28);
  if (!v29)
  {
    swift_release(a1);
    v22 = v137;
    goto LABEL_8;
  }
  v129 = a1;
  v30 = *(uint64_t (**)(void))(*(_QWORD *)v29 + 536);
  v128 = v29;
  v130 = v30();
  v31 = MOMapLocation.transferrableMetadata.getter();
  v32 = (void *)(*(uint64_t (**)(void))(*(_QWORD *)v25 + 344))();
  v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOWorkoutMotionActivityActionRun[0]);
  v35 = v34;
  v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
  v38 = v36;
  if (v33 != v37 || v35 != v36)
  {
    v47 = _stringCompareWithSmolCheck(_:_:expecting:)(v33, v35, v37, v36, 0);
    swift_bridgeObjectRelease(v35);
    swift_bridgeObjectRelease(v38);
    if ((v47 & 1) != 0)
      goto LABEL_11;
    v60 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOWorkoutMotionActivityActionWalk[0]);
    v62 = v61;
    v64 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    v65 = v63;
    v59 = (uint64_t)v135;
    if (v60 == v64 && v62 == v63)
    {
      swift_bridgeObjectRelease_n(v62, 2);
    }
    else
    {
      v66 = _stringCompareWithSmolCheck(_:_:expecting:)(v60, v62, v64, v63, 0);
      swift_bridgeObjectRelease(v62);
      swift_bridgeObjectRelease(v65);
      if ((v66 & 1) == 0)
      {
        v119 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOWorkoutMotionActivityActionRunAndWalk[0]);
        v121 = v120;
        v123 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
        v124 = v122;
        if (v119 == v123 && v121 == v122)
        {

          swift_bridgeObjectRelease_n(v121, 2);
        }
        else
        {
          v125 = _stringCompareWithSmolCheck(_:_:expecting:)(v119, v121, v123, v122, 0);

          swift_bridgeObjectRelease(v121);
          swift_bridgeObjectRelease(v124);
          if ((v125 & 1) == 0)
          {
            swift_bridgeObjectRelease(v31);
            v39 = v143;
            swift_retain(v143);
            v40 = v142;
            swift_retain(v142);
            swift_retain(a8);
            swift_bridgeObjectRetain(a9);
            v41 = v141;
            swift_retain(v141);
            closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, v39, (int)v138, v40, v139, a8, a9, v140);
            swift_release(v21);
            swift_release(v137);
            swift_release(v128);
            swift_release(v130);
            v42 = v129;
            goto LABEL_9;
          }
        }
        v67 = a9;
        v68 = (void *)MOSuggestionAssetMetadataKeyMotionActivityTypeEnum;
        v69 = (void **)&MOSuggestionAssetMotionActivityTypeRunningWalking;
        goto LABEL_17;
      }
    }

    v67 = a9;
    v68 = (void *)MOSuggestionAssetMetadataKeyMotionActivityTypeEnum;
    v69 = (void **)&MOSuggestionAssetMotionActivityTypeWalking;
LABEL_17:
    v70 = *v69;
    type metadata accessor for MOSuggestionAssetMotionActivityType(0);
    v147 = v71;
    v146[0] = v70;
    outlined init with take of Date?((uint64_t)v146, (uint64_t)v145, &demangling cache variable for type metadata for Any?);
    v72 = v68;
    v17 = v67;
    v73 = v72;
    v74 = v70;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v31);
    v144 = v31;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)v145, v73, isUniquelyReferenced_nonNull_native);
    v127 = v144;

    v54 = swift_bridgeObjectRelease(0x8000000000000000);
    v55 = v136;
    v56 = v137;
    v57 = v129;
    v58 = v134;
    goto LABEL_18;
  }
  swift_bridgeObjectRelease_n(v35, 2);
LABEL_11:

  v48 = (void *)MOSuggestionAssetMetadataKeyMotionActivityTypeEnum;
  v49 = (void *)MOSuggestionAssetMotionActivityTypeRunning;
  type metadata accessor for MOSuggestionAssetMotionActivityType(0);
  v147 = v50;
  v146[0] = v49;
  outlined init with take of Date?((uint64_t)v146, (uint64_t)v145, &demangling cache variable for type metadata for Any?);
  v51 = v48;
  v52 = v49;
  v53 = swift_isUniquelyReferenced_nonNull_native(v31);
  v144 = v31;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)v145, v51, v53);
  v127 = v144;

  v54 = swift_bridgeObjectRelease(0x8000000000000000);
  v55 = v136;
  v56 = v137;
  v57 = v129;
  v58 = v134;
  v59 = (uint64_t)v135;
LABEL_18:
  if ((v58 - 2) < 9u)
  {
    v76 = type metadata accessor for MOSuggestionAssetMapSnapshotProvider();
    swift_allocObject(v76, 56, 7);
    v139 = MOSuggestionAssetMapSnapshotProvider.init(targetQueue:)(0);
    v77 = (void (*)(double *, __n128))swift_allocObject(&unk_1001ED050, 24, 7);
    v140 = v77;
    swift_weakInit((char *)v77 + 16);
    v78 = (_QWORD *)swift_allocObject(&unk_1001EDE68, 56, 7);
    v79 = v127;
    v78[2] = v57;
    v78[3] = v79;
    v78[4] = v77;
    v78[5] = partial apply for specialized closure #1 in MOAngelControllerWrapper.continuationWrapper<A>(action:);
    v78[6] = v56;
    swift_retain_n(v57);
    swift_retain_n(v77);
    swift_retain_n(v56);
    swift_bridgeObjectRetain(v79);
    v80 = specialized MOSuggestionAssetMapSnapshotProvider.makeOptionsForArea(for:size:)(v130, v58);
    v138 = v80;
    v81 = swift_allocObject(&unk_1001EDE90, 32, 7);
    *(_QWORD *)(v81 + 16) = partial apply for specialized closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheGenericMapSnapshots(_:cacheType:completion:);
    *(_QWORD *)(v81 + 24) = v78;
    v82 = v139;
    v83 = v17;
    v84 = *(void (**)(id, void (*)(void *), uint64_t, __n128))(*(_QWORD *)v139 + 200);
    v85 = swift_retain(v78);
    v86 = v80;
    v87 = v82;
    v84(v86, partial apply for closure #1 in MOSuggestionAssetMapSnapshotProvider.getGenericMapFor(location:size:completion:), v81, v85);
    v17 = v83;
    v88 = v142;
    v89 = v143;
    swift_release(a8);
    swift_release(v88);
    swift_release(v89);
    swift_release(v21);
    v90 = swift_release(v87);
    swift_release_n(v137, v90);
    swift_release_n(v140, v91);
    swift_bridgeObjectRelease(v79);
    swift_release(v78);
    swift_release(v128);
    v92 = swift_release(v130);
    swift_release_n(v129, v92);

    v46 = v81;
    goto LABEL_23;
  }
  (*(void (**)(__n128))(*(_QWORD *)v130 + 192))(v54);
  v93 = v133;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v59, 1, v133) != 1)
  {
    v94 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 32))(v131, v59, v93);
    v95 = v130;
    v96 = (*(double (**)(uint64_t))(*(_QWORD *)v130 + 240))(v94);
    v97 = (*(double (**)(void))(*(_QWORD *)v95 + 264))();
    v98 = (*(double (**)(void))(*(_QWORD *)v95 + 456))();
    v99 = objc_allocWithZone((Class)CLLocation);
    isa = Date._bridgeToObjectiveC()().super.isa;
    v101 = objc_msgSend(v99, "initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:", isa, v96, v97, 0.0, v98, 0.0);

    v102 = MOSuggestionAssetsTypeGenericMap;
    type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for CLLocation, CLLocation_ptr);
    v103 = objc_msgSend(objc_allocWithZone((Class)MOSuggestionAsset), "init:type:contentClassType:", v101, v102, swift_getObjCClassFromMetadata());
    v104 = v127;
    specialized _dictionaryUpCast<A, B, C, D>(_:)(v127);
    v106 = v105;
    swift_bridgeObjectRelease(v104);
    v107 = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v103, "addMetadata:", v107, swift_bridgeObjectRelease(v106).n128_f64[0]);

    v108 = v143;
    swift_retain(v143);
    v109 = v142;
    swift_retain(v142);
    swift_retain(a8);
    swift_bridgeObjectRetain(v17);
    v110 = v95;
    v111 = v141;
    swift_retain(v141);
    v112 = v103;
    closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(v103, v108, (int)v138, v109, v139, a8, v17, v140);

    swift_release(v128);
    swift_release(v110);
    swift_release(v129);
    swift_release(v108);
    swift_release(v109);
    swift_release(a8);
    swift_bridgeObjectRelease(v17);
    v113 = swift_release(v111);
    (*(void (**)(char *, uint64_t, __n128))(v136 + 8))(v131, v133, v113);
    swift_release(a8);
    swift_release(v109);
    swift_release(v108);
    swift_release(v21);
    v46 = v137;
    goto LABEL_23;
  }
  swift_bridgeObjectRelease(v127);
  outlined destroy of Any?(v59, (uint64_t *)&demangling cache variable for type metadata for Date?);
  v39 = v143;
  swift_retain(v143);
  v40 = v142;
  swift_retain(v142);
  swift_retain(a8);
  swift_bridgeObjectRetain(v17);
  v41 = v141;
  swift_retain(v141);
  closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, v39, (int)v138, v40, v139, a8, v17, v140);
  swift_release(v21);
  swift_release(v56);
  swift_release(v128);
  swift_release(v130);
  v42 = v57;
LABEL_9:
  v43 = swift_release(v42);
  swift_release_n(v39, v43);
  swift_release_n(v40, v44);
  swift_release_n(a8, v45);
  swift_bridgeObjectRelease(v17);
  v46 = v41;
LABEL_23:
  v114 = swift_release(v46);
  swift_release_n(a8, v114);
  swift_release_n(v142, v115);
  swift_release_n(v143, v116);
  swift_release_n(v141, v117);
  return swift_bridgeObjectRelease_n(v17, 4);
}

uint64_t specialized closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheStateOfMindFromProvider(_:cacheType:completion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, uint64_t a7, uint64_t a8, double a9, double a10, unsigned __int8 a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void (*a16)(double *, __n128), uint64_t a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  NSString v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  __n128 v82;
  void *v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  id v89;
  id v90;
  __n128 v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  __n128 v95;
  void *v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  __n128 v103;
  uint64_t v104;
  __n128 v105;
  id v106;
  id v107;
  __n128 v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  __n128 v112;
  void *v113;
  id v114;
  uint64_t v115;
  uint64_t v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  char v122;
  uint64_t v123;
  id v124;
  unint64_t v125;
  Class isa;
  uint64_t Strong;
  uint64_t v128;
  id v129;
  __n128 v130;
  uint64_t v131;
  uint64_t v132;
  NSString v133;
  __n128 v134;
  __n128 v135;
  __n128 v136;
  __n128 v137;
  uint64_t result;
  __n128 v139;
  __n128 v140;
  __n128 v141;
  __n128 v142;
  __n128 v143;
  __n128 v144;
  __n128 v145;
  __n128 v146;
  __n128 v147;
  __n128 v148;
  __n128 v149;
  __n128 v150;
  __n128 v151;
  __n128 v152;
  __n128 v153;
  __n128 v154;
  __n128 v155;
  __n128 v156;
  __n128 v157;
  __n128 v158;
  __n128 v159;
  __n128 v160;
  __n128 v161;
  __n128 v162;
  void (*v163)(void);
  id v165;
  uint64_t v166;
  id v167;
  id v168;
  uint64_t v169;
  uint64_t v170;
  id v171;
  uint64_t v172;
  void *v173;
  unint64_t v174;
  id v175;
  uint64_t v176;
  void *v177;
  uint64_t v178;
  id v179;
  uint64_t v180;
  id v181;
  uint64_t v182;
  id v183;
  uint64_t v184;
  id v185;
  id v186;
  uint64_t v189;
  void *v190;
  id v191;
  void *v192;
  void *v193;
  __int128 v194;
  __int128 v195;
  _OWORD v196[2];

  v17 = a8;
  v18 = a17;
  v19 = a14;
  v20 = a15;
  v21 = (void *)a12;
  if (!a1)
  {
    swift_retain(a14);
    swift_bridgeObjectRetain_n(a15, 2);
    swift_retain_n(a17);
    swift_retain(v17);
    swift_retain(a12);
    closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, v17, a11, a12, a13, a14, a15, a16);
    swift_bridgeObjectRelease(a15);
LABEL_52:
    swift_bridgeObjectRelease(v20);
    swift_release(v19);
    swift_release(v21);
    v137 = swift_release(v17);
    return swift_release_n(v18, v137);
  }
  swift_retain_n(a8);
  swift_retain_n(a12);
  swift_retain_n(a14);
  swift_bridgeObjectRetain_n(a15, 2);
  swift_retain_n(a17);
  v189 = a2;
  v191 = a1;
  v184 = a3;
  v28 = (id)HKUILocalizedStringForValenceClassificationAndReflectiveInterval(a2, a3);
  v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v180 = v30;
  v182 = v29;

  v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOStateOfMindMetaDataKeyLabel"));
  v33 = v32;
  if (*(_QWORD *)(a4 + 16) && (v34 = specialized __RawDictionaryStorage.find<A>(_:)(v31, v32), (v35 & 1) != 0))
  {
    v36 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v34);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease(v33);
    *(_QWORD *)&v196[0] = v36;
    v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Int]);
    if (swift_dynamicCast(&v194, v196, (char *)&type metadata for Swift.AnyObject + 8, v37, 6))
      v38 = v194;
    else
      v38 = 0;
  }
  else
  {
    swift_bridgeObjectRelease(v33);
    v38 = 0;
  }
  v39 = specialized static MOSuggestionAssetStateOfMindProvider.getLabelsLocalized(labelResource:)(v38);
  v172 = v40;
  v174 = v39;
  v176 = v42;
  v178 = v41;
  swift_bridgeObjectRelease(v38);
  v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOStateOfMindMetaDataKeyDomain"));
  v45 = v44;
  v169 = v17;
  if (*(_QWORD *)(a4 + 16) && (v46 = specialized __RawDictionaryStorage.find<A>(_:)(v43, v44), (v47 & 1) != 0))
  {
    v48 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v46);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease(v45);
    *(_QWORD *)&v196[0] = v48;
    v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Int]);
    if (swift_dynamicCast(&v194, v196, (char *)&type metadata for Swift.AnyObject + 8, v49, 6))
      v50 = v194;
    else
      v50 = 0;
  }
  else
  {
    swift_bridgeObjectRelease(v45);
    v50 = 0;
  }
  v51 = specialized static MOSuggestionAssetStateOfMindProvider.getDomainsLocalized(domainResource:)(v50);
  v53 = v52;
  v170 = v54;
  v56 = v55;
  swift_bridgeObjectRelease(v50);
  type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for CAGradientLayer, CAGradientLayer_ptr);
  v57 = (void *)static CAGradientLayer.gradientLayerForValence(_:style:)(1, a9);
  v192 = (void *)static CAGradientLayer.gradientLayerForValence(_:style:)(2, a9);
  v163 = *(void (**)(void))(*(_QWORD *)a5 + 288);
  v163();
  v59 = v58;
  v60 = String._bridgeToObjectiveC()();
  objc_msgSend(v191, "addIdentifier:", v60, swift_bridgeObjectRelease(v59).n128_f64[0]);

  v61 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(AnyHashable, Any)>);
  v62 = swift_allocObject(v61, 1040, 7);
  *(_OWORD *)(v62 + 16) = xmmword_1001A41E0;
  v63 = (void *)MOSuggestionAssetMetadataKeyStateOfMindValenceClassificationAndReflectiveIntervalLocalized;
  *(_QWORD *)&v196[0] = MOSuggestionAssetMetadataKeyStateOfMindValenceClassificationAndReflectiveIntervalLocalized;
  type metadata accessor for MOSuggestionAssetMetadataKey(0);
  v65 = v64;
  v66 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionAssetMetadataKey and conformance MOSuggestionAssetMetadataKey, (uint64_t (*)(uint64_t))type metadata accessor for MOSuggestionAssetMetadataKey, (uint64_t)&protocol conformance descriptor for MOSuggestionAssetMetadataKey);
  v168 = v63;
  AnyHashable.init<A>(_:)((_QWORD *)(v62 + 32), v196, v65, v66);
  *(_QWORD *)(v62 + 96) = &type metadata for String;
  *(_QWORD *)(v62 + 72) = v182;
  *(_QWORD *)(v62 + 80) = v180;
  *(_QWORD *)&v196[0] = MOSuggestionAssetMetadataKeyStateOfMindReflectiveInterval;
  v183 = MOSuggestionAssetMetadataKeyStateOfMindReflectiveInterval;
  AnyHashable.init<A>(_:)((_QWORD *)(v62 + 104), v196, v65, v66);
  *(_QWORD *)(v62 + 168) = &type metadata for Int;
  *(_QWORD *)(v62 + 144) = v184;
  *(_QWORD *)&v196[0] = MOSuggestionAssetMetadataKeyStateOfMindValence;
  v185 = MOSuggestionAssetMetadataKeyStateOfMindValence;
  AnyHashable.init<A>(_:)((_QWORD *)(v62 + 176), v196, v65, v66);
  *(_QWORD *)(v62 + 240) = &type metadata for Double;
  *(double *)(v62 + 216) = a9;
  *(_QWORD *)&v196[0] = MOSuggestionAssetMetadataKeyStateOfMindLabelsLocalized;
  v181 = MOSuggestionAssetMetadataKeyStateOfMindLabelsLocalized;
  AnyHashable.init<A>(_:)((_QWORD *)(v62 + 248), v196, v65, v66);
  *(_QWORD *)(v62 + 312) = &type metadata for String;
  *(_QWORD *)(v62 + 288) = v174;
  *(_QWORD *)(v62 + 296) = v172;
  *(_QWORD *)&v196[0] = MOSuggestionAssetMetadataKeyStateOfMindLabelsLocalizedShortened;
  v175 = MOSuggestionAssetMetadataKeyStateOfMindLabelsLocalizedShortened;
  AnyHashable.init<A>(_:)((_QWORD *)(v62 + 320), v196, v65, v66);
  *(_QWORD *)(v62 + 384) = &type metadata for String;
  *(_QWORD *)(v62 + 360) = v178;
  *(_QWORD *)(v62 + 368) = v176;
  *(_QWORD *)&v196[0] = MOSuggestionAssetMetadataKeyStateOfMindDomainsLocalized;
  v179 = MOSuggestionAssetMetadataKeyStateOfMindDomainsLocalized;
  AnyHashable.init<A>(_:)((_QWORD *)(v62 + 392), v196, v65, v66);
  *(_QWORD *)(v62 + 456) = &type metadata for String;
  *(_QWORD *)(v62 + 432) = v51;
  *(_QWORD *)(v62 + 440) = v53;
  *(_QWORD *)&v196[0] = MOSuggestionAssetMetadataKeyStateOfMindDomainsLocalizedShortened;
  v67 = MOSuggestionAssetMetadataKeyStateOfMindDomainsLocalizedShortened;
  AnyHashable.init<A>(_:)((_QWORD *)(v62 + 464), v196, v65, v66);
  *(_QWORD *)(v62 + 528) = &type metadata for String;
  *(_QWORD *)(v62 + 504) = v170;
  *(_QWORD *)(v62 + 512) = v56;
  *(_QWORD *)&v196[0] = MOSuggestionAssetMetadataKeyStateOfMindLabels;
  v68 = MOSuggestionAssetMetadataKeyStateOfMindLabels;
  AnyHashable.init<A>(_:)((_QWORD *)(v62 + 536), v196, v65, v66);
  v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOStateOfMindMetaDataKeyLabel"));
  v71 = v70;
  v72 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Swift.AnyObject?);
  *(_QWORD *)(v62 + 600) = v72;
  if (*(_QWORD *)(a4 + 16) && (specialized __RawDictionaryStorage.find<A>(_:)(v69, v71), (v73 & 1) != 0))
    v74 = swift_unknownObjectRetain();
  else
    v74 = 0;
  *(_QWORD *)(v62 + 576) = v74;
  swift_bridgeObjectRelease(v71);
  *(_QWORD *)&v196[0] = MOSuggestionAssetMetadataKeyStateOfMindDomains;
  v186 = MOSuggestionAssetMetadataKeyStateOfMindDomains;
  AnyHashable.init<A>(_:)((_QWORD *)(v62 + 608), v196, v65, v66);
  v75 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOStateOfMindMetaDataKeyDomain"));
  v77 = v76;
  *(_QWORD *)(v62 + 672) = v72;
  v177 = v67;
  v173 = v68;
  if (*(_QWORD *)(a4 + 16) && (specialized __RawDictionaryStorage.find<A>(_:)(v75, v76), (v78 & 1) != 0))
    v79 = swift_unknownObjectRetain();
  else
    v79 = 0;
  *(_QWORD *)(v62 + 648) = v79;
  swift_bridgeObjectRelease(v77);
  *(_QWORD *)&v196[0] = MOSuggestionAssetMetadataKeyStateOfMindValenceClassification;
  v171 = MOSuggestionAssetMetadataKeyStateOfMindValenceClassification;
  AnyHashable.init<A>(_:)((_QWORD *)(v62 + 680), v196, v65, v66);
  *(_QWORD *)(v62 + 744) = &type metadata for Int;
  *(_QWORD *)(v62 + 720) = v189;
  *(_QWORD *)&v196[0] = MOSuggestionAssetMetadataKeyStateOfMindAssociatedColorsLight;
  v167 = MOSuggestionAssetMetadataKeyStateOfMindAssociatedColorsLight;
  AnyHashable.init<A>(_:)((_QWORD *)(v62 + 752), v196, v65, v66);
  v21 = (void *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v80 = swift_allocObject(v21, 48, 7);
  *(_OWORD *)(v80 + 16) = xmmword_10019F870;
  v81 = objc_msgSend(v57, "colors");
  if (!v81)
  {
    swift_release_n(a17, v82);
    swift_bridgeObjectRelease_n(a15, 3);
    swift_release_n(a14, v139);
    swift_release_n(a12, v140);
    swift_release_n(v169, v141);
    __break(1u);
LABEL_54:
    swift_release_n(a17, v85);
    swift_bridgeObjectRelease_n(a15, 3);
    swift_release_n(a14, v142);
    swift_release_n(a12, v143);
    swift_release_n(v169, v144);
    __break(1u);
    goto LABEL_55;
  }
  v83 = v81;
  v84 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v81, (char *)&type metadata for Any + 8);

  if (*(_QWORD *)(v84 + 16))
  {
    outlined init with copy of Any(v84 + 32, (uint64_t)&v194);
  }
  else
  {
    v194 = 0u;
    v195 = 0u;
  }
  v166 = v72;
  v190 = v57;
  v85 = swift_bridgeObjectRelease(v84);
  if (!*((_QWORD *)&v195 + 1))
    goto LABEL_54;
  outlined init with take of Any(&v194, v196);
  type metadata accessor for CGColorRef(0);
  v87 = v86;
  swift_dynamicCast(&v193, v196, (char *)&type metadata for Any + 8, v86, 7);
  v88 = v193;
  v89 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithCGColor:", v193);

  *(_QWORD *)(v80 + 32) = v89;
  v90 = objc_msgSend(v190, "colors");
  if (!v90)
  {
LABEL_55:
    swift_release_n(a17, v91);
    swift_bridgeObjectRelease_n(a15, 3);
    swift_release_n(a14, v145);
    swift_release_n(a12, v146);
    swift_release_n(v169, v147);
    __break(1u);
LABEL_56:
    swift_release_n(a17, v95);
    swift_bridgeObjectRelease_n(a15, 3);
    swift_release_n(a14, v148);
    swift_release_n(a12, v149);
    swift_release_n(v169, v150);
    __break(1u);
    goto LABEL_57;
  }
  v92 = v90;
  v93 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v90, (char *)&type metadata for Any + 8);

  v94 = *(_QWORD *)(v93 + 16);
  if (v94)
  {
    outlined init with copy of Any(v93 + 32 * v94, (uint64_t)&v194);
  }
  else
  {
    v194 = 0u;
    v195 = 0u;
  }
  v95 = swift_bridgeObjectRelease(v93);
  if (!*((_QWORD *)&v195 + 1))
    goto LABEL_56;
  outlined init with take of Any(&v194, v196);
  swift_dynamicCast(&v193, v196, (char *)&type metadata for Any + 8, v87, 7);
  v96 = v193;
  v97 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithCGColor:", v193);

  *(_QWORD *)(v80 + 40) = v97;
  *(_QWORD *)&v196[0] = v80;
  specialized Array._endMutation()(v98);
  v99 = *(_QWORD *)&v196[0];
  v100 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [UIColor]);
  *(_QWORD *)(v62 + 816) = v100;
  *(_QWORD *)(v62 + 792) = v99;
  *(_QWORD *)&v196[0] = MOSuggestionAssetMetadataKeyStateOfMindAssociatedColorsDark;
  v165 = MOSuggestionAssetMetadataKeyStateOfMindAssociatedColorsDark;
  AnyHashable.init<A>(_:)((_QWORD *)(v62 + 824), v196, v65, v66);
  v101 = swift_allocObject(v21, 48, 7);
  *(_OWORD *)(v101 + 16) = xmmword_10019F870;
  v102 = objc_msgSend(v192, "colors");
  if (!v102)
  {
LABEL_57:
    swift_release_n(a17, v103);
    swift_bridgeObjectRelease_n(a15, 3);
    swift_release_n(a14, v151);
    swift_release_n(a12, v152);
    swift_release_n(v169, v153);
    __break(1u);
LABEL_58:
    swift_release_n(a17, v105);
    swift_bridgeObjectRelease_n(a15, 3);
    swift_release_n(a14, v154);
    swift_release_n(a12, v155);
    swift_release_n(v169, v156);
    __break(1u);
    goto LABEL_59;
  }
  v21 = v102;
  v104 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v102, (char *)&type metadata for Any + 8);

  if (*(_QWORD *)(v104 + 16))
  {
    outlined init with copy of Any(v104 + 32, (uint64_t)&v194);
  }
  else
  {
    v194 = 0u;
    v195 = 0u;
  }
  v105 = swift_bridgeObjectRelease(v104);
  if (!*((_QWORD *)&v195 + 1))
    goto LABEL_58;
  outlined init with take of Any(&v194, v196);
  swift_dynamicCast(&v193, v196, (char *)&type metadata for Any + 8, v87, 7);
  v21 = v193;
  v106 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithCGColor:", v193);

  *(_QWORD *)(v101 + 32) = v106;
  v107 = objc_msgSend(v192, "colors");
  if (!v107)
  {
LABEL_59:
    swift_release_n(a17, v108);
    swift_bridgeObjectRelease_n(a15, 3);
    swift_release_n(a14, v157);
    swift_release_n(a12, v158);
    swift_release_n(v169, v159);
    __break(1u);
    goto LABEL_60;
  }
  v109 = v107;
  v110 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v107, (char *)&type metadata for Any + 8);

  v111 = *(_QWORD *)(v110 + 16);
  if (v111)
  {
    outlined init with copy of Any(v110 + 32 * v111, (uint64_t)&v194);
  }
  else
  {
    v194 = 0u;
    v195 = 0u;
  }
  v21 = (void *)a12;
  v112 = swift_bridgeObjectRelease(v110);
  if (*((_QWORD *)&v195 + 1))
  {

    outlined init with take of Any(&v194, v196);
    swift_dynamicCast(&v193, v196, (char *)&type metadata for Any + 8, v87, 7);
    v113 = v193;
    v114 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithCGColor:", v193);

    *(_QWORD *)(v101 + 40) = v114;
    *(_QWORD *)&v196[0] = v101;
    specialized Array._endMutation()(v115);
    v116 = *(_QWORD *)&v196[0];
    *(_QWORD *)(v62 + 888) = v100;
    *(_QWORD *)(v62 + 864) = v116;
    *(_QWORD *)&v196[0] = MOSuggestionAssetMetadataKeyStateOfMindIdentifier;
    v117 = MOSuggestionAssetMetadataKeyStateOfMindIdentifier;
    AnyHashable.init<A>(_:)((_QWORD *)(v62 + 896), v196, v65, v66);
    v118 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOStateOfMindMetaDataKeyStateOfMindID"));
    v120 = v119;
    *(_QWORD *)(v62 + 960) = v166;
    if (*(_QWORD *)(a4 + 16))
    {
      specialized __RawDictionaryStorage.find<A>(_:)(v118, v119);
      v17 = v169;
      v121 = a11;
      if ((v122 & 1) != 0)
        v123 = swift_unknownObjectRetain();
      else
        v123 = 0;
    }
    else
    {
      v123 = 0;
      v17 = v169;
      v121 = a11;
    }
    *(_QWORD *)(v62 + 936) = v123;
    swift_bridgeObjectRelease(v120);
    *(_QWORD *)&v196[0] = MOSuggestionAssetMetadataKeyStateOfMindStartDate;
    v124 = MOSuggestionAssetMetadataKeyStateOfMindStartDate;
    AnyHashable.init<A>(_:)((_QWORD *)(v62 + 968), v196, v65, v66);
    *(_QWORD *)(v62 + 1032) = type metadata accessor for Date(0);
    __swift_allocate_boxed_opaque_existential_1((_QWORD *)(v62 + 1008));
    Date.init(timeIntervalSince1970:)(a10);
    v125 = specialized Dictionary.init(dictionaryLiteral:)(v62);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v191, "addMetadata:", isa, swift_bridgeObjectRelease(v125).n128_f64[0]);

    if ((a6 - 2) <= 8u)
    {
      swift_beginAccess(a7, v196, 0, 0);
      Strong = swift_weakLoadStrong(a7);
      if (Strong)
      {
        v128 = Strong;
        v129 = *(id *)(Strong + 16);
        v130 = swift_release(v128);
        ((void (*)(__n128))v163)(v130);
        v132 = v131;
        v133 = String._bridgeToObjectiveC()();
        objc_msgSend(v129, "setObject:forKey:cost:", v191, v133, 1, swift_bridgeObjectRelease(v132).n128_f64[0]);

      }
    }
    swift_retain(v17);
    swift_retain(a12);
    v19 = a14;
    swift_retain(a14);
    v20 = a15;
    swift_bridgeObjectRetain(a15);
    v18 = a17;
    swift_retain(a17);
    specialized static MOSuggestionAssetCacheManager.wrapImageAssetInURLPairIfNecessary(asset:cacheType:completion:)(v191, a6, v17, v121, a12, a13, a14, a15, a16, a17);

    swift_release_n(v17, v134);
    swift_release_n(a12, v135);
    swift_release_n(a14, v136);
    swift_bridgeObjectRelease_n(a15, 2);
    swift_release(a17);
    goto LABEL_52;
  }
LABEL_60:
  swift_release_n(a17, v112);
  swift_bridgeObjectRelease_n(a15, 3);
  swift_release_n(a14, v160);
  swift_release_n(v21, v161);
  result = swift_release_n(v169, v162);
  __break(1u);
  return result;
}

void specialized MOSuggestionAssetCacheManager.fetchAndCacheStateOfMindFromProvider(_:cacheType:completion:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(double *, __n128), uint64_t a11)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t ObjCClassFromMetadata;
  void *v53;
  void *v54;
  id v55;
  uint64_t v56;
  __n128 v57;
  __n128 v58;
  __n128 v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  void (*v71)(double *, __n128);
  int v72;
  uint64_t v73;
  uint64_t v74;

  v72 = a5;
  v68 = a3;
  v69 = a2;
  v71 = a10;
  v16 = type metadata accessor for StateOfMindVisualization.ValenceImageProvider.ImageScale(0);
  v63 = *(_QWORD *)(v16 - 8);
  v64 = v16;
  __chkstk_darwin(v16);
  v66 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = type metadata accessor for StateOfMindVisualization.ValenceImageProvider(0);
  v65 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v19 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 256);
  swift_retain_n(a4);
  swift_retain_n(a6);
  swift_retain_n(a8);
  swift_bridgeObjectRetain_n(a9, 2);
  v21 = swift_retain_n(a11);
  v22 = v20(v21);
  if (!v22)
    goto LABEL_17;
  v23 = v22;
  v70 = a7;
  v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOStateOfMindMetaDataKeyValenceClassification"));
  v26 = v25;
  if (!*(_QWORD *)(v23 + 16))
    goto LABEL_15;
  v27 = specialized __RawDictionaryStorage.find<A>(_:)(v24, v25);
  if ((v28 & 1) == 0)
    goto LABEL_15;
  v29 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v27);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease(v26);
  v74 = v29;
  if ((swift_dynamicCast(&v73, &v74, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Int, 6) & 1) == 0)
    goto LABEL_19;
  v30 = v73;
  v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOStateOfMindMetaDataKeyValence"));
  v26 = v32;
  if (!*(_QWORD *)(v23 + 16))
    goto LABEL_15;
  v62 = v30;
  v33 = specialized __RawDictionaryStorage.find<A>(_:)(v31, v32);
  if ((v34 & 1) == 0)
    goto LABEL_15;
  v35 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v33);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease(v26);
  v74 = v35;
  if ((swift_dynamicCast(&v73, &v74, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Double, 6) & 1) == 0)
    goto LABEL_19;
  v36 = *(double *)&v73;
  v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOStateOfMindMetaDataKeyStartDate"));
  v26 = v38;
  if (!*(_QWORD *)(v23 + 16))
    goto LABEL_15;
  v39 = specialized __RawDictionaryStorage.find<A>(_:)(v37, v38);
  if ((v40 & 1) == 0)
    goto LABEL_15;
  v41 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v39);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease(v26);
  v74 = v41;
  if ((swift_dynamicCast(&v73, &v74, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Double, 6) & 1) == 0)
  {
LABEL_19:
    v56 = v23;
    goto LABEL_16;
  }
  v42 = *(double *)&v73;
  v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MOStateOfMindMetaDataKeyReflectiveInterval"));
  v26 = v44;
  if (!*(_QWORD *)(v23 + 16) || (v45 = specialized __RawDictionaryStorage.find<A>(_:)(v43, v44), (v46 & 1) == 0))
  {
LABEL_15:
    swift_bridgeObjectRelease(v23);
    v56 = v26;
LABEL_16:
    swift_bridgeObjectRelease(v56);
    a7 = v70;
LABEL_17:
    swift_retain(a4);
    swift_retain(a6);
    swift_retain(a8);
    swift_bridgeObjectRetain(a9);
    swift_retain(a11);
    closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, a4, v72, a6, a7, a8, a9, v71);
    swift_release_n(a4, v57);
    swift_release_n(a6, v58);
    swift_release_n(a8, v59);
    swift_bridgeObjectRelease_n(a9, 2);
    swift_release_n(a11, v60);
    goto LABEL_18;
  }
  v47 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v45);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease(v26);
  v74 = v47;
  if ((swift_dynamicCast(&v73, &v74, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Int, 6) & 1) == 0)
    goto LABEL_19;
  v61 = v73;
  swift_weakInit(&v74);
  v48 = v66;
  (*(void (**)(char *, _QWORD, uint64_t))(v63 + 104))(v66, enum case for StateOfMindVisualization.ValenceImageProvider.ImageScale.confirmationView(_:), v64);
  swift_retain(a1);
  v49 = StateOfMindVisualization.ValenceImageProvider.init(valence:imageScale:)(v48, v36);
  v68 = StateOfMindVisualization.ValenceImageProvider.uiImage.getter(v49);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v19, v67);
  v50 = MOSuggestionAssetsTypeStateOfMindAsset;
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIImage, UIImage_ptr);
  v51 = objc_allocWithZone((Class)MOSuggestionAsset);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v53 = v51;
  v54 = (void *)v68;
  v55 = objc_msgSend(v53, "init:type:contentClassType:", v68, v50, ObjCClassFromMetadata);
  swift_retain(a4);
  swift_retain(a6);
  swift_retain(a8);
  swift_bridgeObjectRetain(a9);
  swift_retain(a11);
  specialized closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheStateOfMindFromProvider(_:cacheType:completion:)(v55, v62, v61, v23, a1, v69, (uint64_t)&v74, a4, v36, v42, v72, a6, v70, a8, a9, v71, a11);
  swift_release(a1);
  swift_bridgeObjectRelease(v23);

  swift_release(a4);
  swift_release(a6);
  swift_release(a8);
  swift_bridgeObjectRelease(a9);
  swift_release(a11);
  swift_weakDestroy(&v74);
  swift_release(a11);
  swift_bridgeObjectRelease(a9);
  swift_release(a8);
  swift_release(a6);
  swift_release(a4);
LABEL_18:
  swift_release(a11);
  swift_bridgeObjectRelease(a9);
  swift_release(a8);
  swift_release(a6);
  swift_release(a4);
}

uint64_t specialized MOSuggestionAssetCacheManager.buildCacheAndReturnAsset(_:cacheType:completion:)(uint64_t a1, unsigned int a2, void *a3, uint64_t a4, int a5, double *a6, void *a7, uint64_t a8, uint64_t a9, void (*a10)(double *, __n128), _QWORD *a11)
{
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  __n128 v39;
  __n128 v40;
  __n128 v41;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char v148;

  v15 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 120);
  swift_retain_n(a4);
  swift_retain_n(a6);
  swift_retain_n(a8);
  swift_bridgeObjectRetain_n(a9, 15);
  v16 = swift_retain_n(a11);
  v17 = (void *)v15(v16);
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypePhoto);
  v20 = v19;
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  if (v18 == v21 && v20 == v22)
    goto LABEL_13;
  v24 = v22;
  v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, v21, v22, 0);
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v24);
  if ((v25 & 1) != 0)
    goto LABEL_14;
  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeLivePhoto);
  v20 = v27;
  v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  if (v26 == v28 && v20 == v29)
    goto LABEL_13;
  v31 = v29;
  v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v20, v28, v29, 0);
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v31);
  if ((v32 & 1) != 0)
  {
LABEL_14:

    swift_retain(a4);
    swift_retain(a6);
    swift_retain(a8);
    swift_bridgeObjectRetain(a9);
    swift_retain(a11);
    v38.n128_f64[0] = specialized MOSuggestionAssetCacheManager.fetchAndCachePhotoLivePhotoVideosFromProvider(_:cacheType:completion:)(a1, a2, (uint64_t)a3, a4, a5, (uint64_t)a6, (uint64_t)a7, a8, a9, a10, (uint64_t)a11);
    goto LABEL_15;
  }
  v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeVideo);
  v20 = v34;
  v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v37 = v35;
  if (v33 == v36 && v20 == v35)
  {
LABEL_13:
    swift_bridgeObjectRelease_n(v20, 2);
    goto LABEL_14;
  }
  v43 = _stringCompareWithSmolCheck(_:_:expecting:)(v33, v20, v36, v35, 0);
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v37);
  if ((v43 & 1) != 0)
    goto LABEL_14;
  v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeActivityRings);
  v46 = v45;
  v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  if (v44 == v48 && v46 == v47)
  {
    swift_bridgeObjectRelease_n(v46, 2);
LABEL_21:

    swift_retain(a4);
    swift_retain(a6);
    swift_retain(a8);
    swift_bridgeObjectRetain(a9);
    swift_retain(a11);
    v38.n128_f64[0] = specialized MOSuggestionAssetCacheManager.fetchAndCacheRingsFromProvider(_:completion:)(a1, (uint64_t)a3, a4, a5, (uint64_t)a6, (uint64_t)a7, a8, a9, a10, (uint64_t)a11);
    goto LABEL_15;
  }
  v49 = v44;
  v50 = v47;
  v51 = _stringCompareWithSmolCheck(_:_:expecting:)(v49, v46, v48, v47, 0);
  swift_bridgeObjectRelease(v46);
  swift_bridgeObjectRelease(v50);
  if ((v51 & 1) != 0)
    goto LABEL_21;
  v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeWorkout);
  v54 = v53;
  v56 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  if (v52 == v56 && v54 == v55)
  {
    swift_bridgeObjectRelease_n(v54, 2);
LABEL_26:

    swift_retain(a4);
    swift_retain(a6);
    swift_retain(a8);
    swift_bridgeObjectRetain(a9);
    swift_retain(a11);
    v38.n128_f64[0] = specialized MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:)(a1, a2, a3, a4, a5, (uint64_t)a6, (uint64_t)a7, a8, a9, a10, (uint64_t)a11);
    goto LABEL_15;
  }
  v57 = v52;
  v58 = v55;
  v59 = _stringCompareWithSmolCheck(_:_:expecting:)(v57, v54, v56, v55, 0);
  swift_bridgeObjectRelease(v54);
  swift_bridgeObjectRelease(v58);
  if ((v59 & 1) != 0)
    goto LABEL_26;
  v60 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeMotionActivity);
  v62 = v61;
  v64 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  if (v60 == v64 && v62 == v63)
  {
    swift_bridgeObjectRelease_n(v62, 2);
LABEL_31:

    swift_retain(a4);
    swift_retain(a6);
    swift_retain(a8);
    swift_bridgeObjectRetain(a9);
    swift_retain(a11);
    specialized MOSuggestionAssetCacheManager.fetchAndCacheMotionActivityFromProvider(_:cacheType:completion:)(a1, a2, (CGContext *)a3, a4, a5, (uint64_t)a6, (uint64_t)a7, a8, a9, a10, (uint64_t)a11);
    goto LABEL_15;
  }
  v65 = v60;
  v66 = v63;
  v67 = _stringCompareWithSmolCheck(_:_:expecting:)(v65, v62, v64, v63, 0);
  swift_bridgeObjectRelease(v62);
  swift_bridgeObjectRelease(v66);
  if ((v67 & 1) != 0)
    goto LABEL_31;
  v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeMediaCoverArt);
  v70 = v69;
  v72 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  if (v68 == v72 && v70 == v71)
  {
    swift_bridgeObjectRelease_n(v70, 2);
LABEL_36:

    swift_retain(a4);
    swift_retain(a6);
    swift_retain(a8);
    swift_bridgeObjectRetain(a9);
    swift_retain(a11);
    v38.n128_f64[0] = specialized MOSuggestionAssetCacheManager.fetchAndCacheMediaArtworkFromProvider(_:cacheType:completion:)(a1, a2, (uint64_t)a3, a4, a5, (uint64_t)a6, (uint64_t)a7, a8, a9, a10, (uint64_t)a11);
    goto LABEL_15;
  }
  v73 = v68;
  v74 = v71;
  v75 = _stringCompareWithSmolCheck(_:_:expecting:)(v73, v70, v72, v71, 0);
  swift_bridgeObjectRelease(v70);
  swift_bridgeObjectRelease(v74);
  if ((v75 & 1) != 0)
    goto LABEL_36;
  v76 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeAppIcon);
  v78 = v77;
  v80 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  if (v76 == v80 && v78 == v79)
  {
    swift_bridgeObjectRelease_n(v78, 2);
LABEL_41:

    swift_retain(a4);
    swift_retain(a6);
    swift_retain(a8);
    swift_bridgeObjectRetain(a9);
    swift_retain(a11);
    v38.n128_f64[0] = specialized MOSuggestionAssetCacheManager.fetchAndCacheAppIconsFromProvider(_:completion:)(a1, (uint64_t)a3, a4, a5, (uint64_t)a6, (uint64_t)a7, a8, a9, a10, a11);
    goto LABEL_15;
  }
  v81 = v76;
  v82 = v79;
  v83 = _stringCompareWithSmolCheck(_:_:expecting:)(v81, v78, v80, v79, 0);
  swift_bridgeObjectRelease(v78);
  swift_bridgeObjectRelease(v82);
  if ((v83 & 1) != 0)
    goto LABEL_41;
  v84 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeReflectionPrompt);
  v86 = v85;
  v88 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  if (v84 == v88 && v86 == v87)
  {
    swift_bridgeObjectRelease_n(v86, 2);
LABEL_46:

    swift_retain(a4);
    swift_retain(a6);
    swift_retain(a8);
    swift_bridgeObjectRetain(a9);
    swift_retain(a11);
    specialized MOSuggestionAssetCacheManager.fetchAndCacheReflectionsPromptsFromProvider(_:isProxyForClient:completion:)(a1, (a2 - 11) < 0xF7u, (uint64_t)a3, a4, a5, (uint64_t)a6, (uint64_t)a7, a8, a9, a10, a11);
    goto LABEL_15;
  }
  v89 = v84;
  v90 = v87;
  v91 = _stringCompareWithSmolCheck(_:_:expecting:)(v89, v86, v88, v87, 0);
  swift_bridgeObjectRelease(v86);
  swift_bridgeObjectRelease(v90);
  if ((v91 & 1) != 0)
    goto LABEL_46;
  v92 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeLocationPreview);
  v94 = v93;
  v96 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  if (v92 == v96 && v94 == v95)
  {
    swift_bridgeObjectRelease_n(v94, 2);
LABEL_51:

    swift_retain(a4);
    swift_retain(a6);
    swift_retain(a8);
    swift_bridgeObjectRetain(a9);
    swift_retain(a11);
    specialized MOSuggestionAssetCacheManager.fetchAndCacheLocationsPreviews(_:completion:)(a1, (uint64_t)a3, a4, a5, (uint64_t)a6, (uint64_t)a7, a8, a9, a10, (uint64_t)a11);
    goto LABEL_15;
  }
  v97 = v92;
  v98 = v95;
  v99 = _stringCompareWithSmolCheck(_:_:expecting:)(v97, v94, v96, v95, 0);
  swift_bridgeObjectRelease(v94);
  swift_bridgeObjectRelease(v98);
  if ((v99 & 1) != 0)
    goto LABEL_51;
  v100 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeLinkPreview);
  v102 = v101;
  v104 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  if (v100 == v104 && v102 == v103)
  {
    swift_bridgeObjectRelease_n(v102, 2);
LABEL_56:

    swift_retain(a4);
    swift_retain(a6);
    swift_retain(a8);
    swift_bridgeObjectRetain(a9);
    swift_retain(a11);
    specialized MOSuggestionAssetCacheManager.fetchAndCacheLinkPreviews(_:completion:)(a1, (uint64_t)a3, a4, a5, (uint64_t)a6, (uint64_t)a7, a8, a9, a10, (uint64_t)a11);
    goto LABEL_15;
  }
  v105 = v100;
  v106 = v103;
  v107 = _stringCompareWithSmolCheck(_:_:expecting:)(v105, v102, v104, v103, 0);
  swift_bridgeObjectRelease(v102);
  swift_bridgeObjectRelease(v106);
  if ((v107 & 1) != 0)
    goto LABEL_56;
  v108 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeContactPhoto);
  v110 = v109;
  v112 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  if (v108 == v112 && v110 == v111)
  {
    swift_bridgeObjectRelease_n(v110, 2);
LABEL_61:

    swift_retain(a4);
    swift_retain(a6);
    swift_retain(a8);
    swift_bridgeObjectRetain(a9);
    swift_retain(a11);
    specialized MOSuggestionAssetCacheManager.fetchAndCacheContactPhotoFromProvider(_:cacheType:completion:)(a1, a2, (uint64_t)a3, a4, a5, (uint64_t)a6, (uint64_t)a7, a8, a9, a10, (uint64_t)a11);
    goto LABEL_15;
  }
  v113 = v108;
  v114 = v111;
  v115 = _stringCompareWithSmolCheck(_:_:expecting:)(v113, v110, v112, v111, 0);
  swift_bridgeObjectRelease(v110);
  swift_bridgeObjectRelease(v114);
  if ((v115 & 1) != 0)
    goto LABEL_61;
  v116 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeMultiPinMap);
  v118 = v117;
  v120 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  if (v116 == v120 && v118 == v119)
  {
    swift_bridgeObjectRelease_n(v118, 2);
LABEL_66:

    swift_retain(a4);
    swift_retain(a6);
    swift_retain(a8);
    swift_bridgeObjectRetain(a9);
    swift_retain(a11);
    v38.n128_f64[0] = specialized MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)(a1, a2, (uint64_t)a3, a4, a5, (uint64_t)a6, (uint64_t)a7, a8, a9, a10, (uint64_t)a11);
    goto LABEL_15;
  }
  v121 = v116;
  v122 = v119;
  v123 = _stringCompareWithSmolCheck(_:_:expecting:)(v121, v118, v120, v119, 0);
  swift_bridgeObjectRelease(v118);
  swift_bridgeObjectRelease(v122);
  if ((v123 & 1) != 0)
    goto LABEL_66;
  v124 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeWorkoutGroup);
  v126 = v125;
  v128 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  if (v124 == v128 && v126 == v127)
  {
    swift_bridgeObjectRelease_n(v126, 2);
LABEL_71:

    swift_retain(a4);
    swift_retain(a6);
    swift_retain(a8);
    swift_bridgeObjectRetain(a9);
    swift_retain(a11);
    specialized MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:)(a1, a2, a4, a5, a6, a7, a8, a9, a10, (uint64_t)a11);
    goto LABEL_15;
  }
  v129 = v124;
  v130 = v127;
  v131 = _stringCompareWithSmolCheck(_:_:expecting:)(v129, v126, v128, v127, 0);
  swift_bridgeObjectRelease(v126);
  swift_bridgeObjectRelease(v130);
  if ((v131 & 1) != 0)
    goto LABEL_71;
  v132 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeGenericMap);
  v134 = v133;
  v136 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  if (v132 == v136 && v134 == v135)
  {
    swift_bridgeObjectRelease_n(v134, 2);
LABEL_76:

    swift_retain(a4);
    swift_retain(a6);
    swift_retain(a8);
    swift_bridgeObjectRetain(a9);
    swift_retain(a11);
    specialized MOSuggestionAssetCacheManager.fetchAndCacheGenericMapSnapshots(_:cacheType:completion:)(a1, a2, (uint64_t)a3, a4, a5, (uint64_t)a6, (uint64_t)a7, a8, a9, a10, (uint64_t)a11);
    goto LABEL_15;
  }
  v137 = v132;
  v138 = v135;
  v139 = _stringCompareWithSmolCheck(_:_:expecting:)(v137, v134, v136, v135, 0);
  swift_bridgeObjectRelease(v134);
  swift_bridgeObjectRelease(v138);
  if ((v139 & 1) != 0)
    goto LABEL_76;
  v140 = static String._unconditionallyBridgeFromObjectiveC(_:)(MOSuggestionAssetsTypeStateOfMindAsset);
  v142 = v141;
  v144 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v145 = v143;
  if (v140 == v144 && v142 == v143)
  {

    swift_bridgeObjectRelease_n(v142, 2);
  }
  else
  {
    v146 = v140;
    v147 = v142;
    v148 = _stringCompareWithSmolCheck(_:_:expecting:)(v146, v142, v144, v143, 0);

    swift_bridgeObjectRelease(v147);
    swift_bridgeObjectRelease(v145);
    if ((v148 & 1) == 0)
    {
      swift_retain(a4);
      swift_retain(a6);
      swift_retain(a8);
      swift_bridgeObjectRetain(a9);
      swift_retain(a11);
      closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, a4, a5, (uint64_t)a6, (uint64_t)a7, a8, a9, a10);
      goto LABEL_15;
    }
  }
  swift_retain(a4);
  swift_retain(a6);
  swift_retain(a8);
  swift_bridgeObjectRetain(a9);
  swift_retain(a11);
  specialized MOSuggestionAssetCacheManager.fetchAndCacheStateOfMindFromProvider(_:cacheType:completion:)(a1, a2, (uint64_t)a3, a4, a5, (uint64_t)a6, (uint64_t)a7, a8, a9, a10, (uint64_t)a11);
LABEL_15:
  swift_release_n(a11, v38);
  swift_bridgeObjectRelease_n(a9, 16);
  swift_release_n(a4, v39);
  swift_release_n(a6, v40);
  return swift_release_n(a8, v41);
}

double specialized MOSuggestionAssetCacheManager.retrieveAssetFor(_:withTypes:cacheType:completion:)(uint64_t a1, uint64_t a2, unsigned int a3, _QWORD *a4, uint64_t a5, int a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, void (*a11)(double *, __n128), _QWORD *a12)
{
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(__n128);
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  void **v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  __n128 v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  char v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  _QWORD *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  Swift::String v82;
  void *v83;
  uint64_t v84;
  uint64_t (*v85)();
  uint64_t v86;
  uint64_t v87;
  Swift::String v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  NSObject *v92;
  os_log_type_t v93;
  int v94;
  uint8_t *v95;
  uint64_t v96;
  uint64_t (*v97)(__n128);
  __n128 v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  __n128 v105;
  uint8_t *v106;
  void **v107;
  __n128 v108;
  void *v109;
  uint64_t v110;
  void (*v111)(__n128);
  id v112;
  __n128 v113;
  uint64_t v114;
  uint64_t v115;
  NSString v116;
  id v117;
  uint64_t v118;
  id v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unsigned int v127;
  unsigned int v128;
  char v129;
  uint64_t v130;
  uint64_t v131;
  NSObject *v132;
  os_log_type_t v133;
  uint8_t *v134;
  void **v135;
  uint64_t v136;
  uint64_t (*v137)(__n128);
  __n128 v138;
  uint64_t v139;
  unint64_t v140;
  unint64_t v141;
  uint64_t v142;
  __n128 v143;
  __n128 v144;
  uint64_t v145;
  uint64_t v146;
  double *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  __n128 v152;
  __n128 v153;
  __n128 v154;
  __n128 v155;
  double result;
  __n128 v157;
  void *v158;
  _QWORD *v159;
  void *v160;
  _QWORD *v161;
  id v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint8_t *v173;
  uint8_t *v174;
  void **v175;
  int v176;
  int v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  void (*v184)(double *, __n128);
  int v185;
  void *v186;
  uint64_t v187;
  _QWORD *v188;
  uint64_t v189;
  uint64_t v190;
  double *v191;
  uint64_t v192;
  _QWORD *v193;
  unsigned int v194;
  char v195[24];
  char v196[24];
  char v197[24];
  void **aBlock;
  unint64_t v199;
  uint64_t (*v200)(uint64_t);
  void *v201;
  uint64_t (*v202)();
  _QWORD *v203;
  uint64_t v204;
  uint64_t v205;
  char v206[8];

  v193 = a4;
  v194 = a3;
  v187 = a2;
  v17 = a12;
  v183 = type metadata accessor for DispatchWorkItemFlags(0);
  v182 = *(_QWORD *)(v183 - 8);
  __chkstk_darwin(v183);
  v181 = (char *)&v172 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v180 = type metadata accessor for DispatchQoS(0);
  v179 = *(_QWORD *)(v180 - 8);
  __chkstk_darwin(v180);
  v178 = (char *)&v172 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = swift_allocObject(&unk_1001ED350, 80, 7);
  *(_QWORD *)(v20 + 16) = a5;
  v185 = a6;
  *(_BYTE *)(v20 + 24) = a6;
  *(_QWORD *)(v20 + 32) = a7;
  *(_QWORD *)(v20 + 40) = a8;
  v186 = a8;
  *(_QWORD *)(v20 + 48) = a9;
  *(_QWORD *)(v20 + 56) = a10;
  v184 = a11;
  *(_QWORD *)(v20 + 64) = a11;
  *(_QWORD *)(v20 + 72) = a12;
  v21 = *(uint64_t (**)(__n128))(*(_QWORD *)a1 + 120);
  v192 = a5;
  swift_retain_n(a5);
  v191 = (double *)a7;
  swift_retain_n(a7);
  v190 = a9;
  swift_retain_n(a9);
  v189 = a10;
  swift_bridgeObjectRetain_n(a10, 2);
  v22 = swift_retain_n(a12);
  v23 = (void *)((uint64_t (*)(uint64_t))v21)(v22);
  v24 = MOSuggestionAssetsTypeReflectionPrompt;
  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
  v27 = v26;
  v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v30 = v28;
  if (v25 == v29 && v27 == v28)
  {

    v31 = swift_bridgeObjectRelease_n(v27, 2);
  }
  else
  {
    v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v25, v27, v29, v28, 0);

    swift_bridgeObjectRelease(v27);
    v33 = swift_bridgeObjectRelease(v30);
    if ((v32 & 1) == 0)
      v31 = (*(uint64_t (**)(_QWORD, __n128))(*(_QWORD *)a1 + 328))(v194, v33);
  }
  v34 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 296))(v31);
  v36 = v35;
  v37 = v194 - 11;
  if ((v194 - 11) > 0xF6u)
  {
    swift_bridgeObjectRelease(v35);
  }
  else
  {
    v38 = v34;
    v188 = a12;
    v39 = v193;
    swift_beginAccess(v193 + 3, v195, 0, 0);
    v40 = v39[3];
    swift_bridgeObjectRetain(v40);
    v41 = specialized Set.contains(_:)(v38, v36, v40);
    swift_bridgeObjectRelease(v40);
    if ((v41 & 1) == 0)
    {
      swift_bridgeObjectRelease(v36);
      if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
        swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
      v57 = type metadata accessor for Logger(0);
      __swift_project_value_buffer(v57, (uint64_t)static MOAngelLogger.assets);
      v58 = swift_retain_n(a1);
      v59 = Logger.logObject.getter(v58);
      v60 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v59, v60))
      {
        v61 = (uint8_t *)swift_slowAlloc(12, -1);
        v62 = (void **)swift_slowAlloc(32, -1);
        aBlock = v62;
        *(_DWORD *)v61 = 136315138;
        v63 = (*(uint64_t (**)(void))(*(_QWORD *)a1 + 312))();
        v65 = v64;
        v205 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v63, v64, (uint64_t *)&aBlock);
        v66 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v205, v206, v61 + 4);
        swift_release_n(a1, v66);
        swift_bridgeObjectRelease(v65);
        _os_log_impl((void *)&_mh_execute_header, v59, v60, "[MOSuggestionAssetCacheManager] Cache retrieval blocked for %s", v61, 0xCu);
        swift_arrayDestroy(v62, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v62, -1, -1);
        swift_slowDealloc(v61, -1, -1);

      }
      else
      {

        swift_release_n(a1, v67);
      }
      v17 = v188;
      v68 = v192;
      v69 = (uint64_t)v191;
      v70 = v190;
      v71 = v189;
      closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, v192, v185, (uint64_t)v191, (uint64_t)v186, v190, v189, v184);
      swift_bridgeObjectRelease(v71);
      swift_release(v70);
      swift_release(v69);
      v56 = v68;
      goto LABEL_22;
    }
    swift_beginAccess(v39 + 3, &aBlock, 33, 0);
    specialized Set._Variant.remove(_:)(v38, v36);
    v43 = v42;
    swift_endAccess(&aBlock);
    swift_bridgeObjectRelease(v36);
    swift_bridgeObjectRelease(v43);
    v17 = v188;
  }
  if ((specialized MOSuggestionAssetCacheManager.isInQueryList(_:reference:)(v187, a1) & 1) == 0)
  {
    swift_bridgeObjectRelease(v189);
    swift_release(v190);
    swift_release(v191);
    v56 = v192;
LABEL_22:
    swift_release(v56);
    v72 = (_QWORD *)v20;
    goto LABEL_47;
  }
  v44 = swift_allocObject(&unk_1001ED378, 24, 7);
  v187 = v44;
  *(_QWORD *)(v44 + 16) = a1;
  v45 = v44 + 16;
  v46 = swift_retain(a1);
  v177 = v37;
  if (v37 < 0xF7u)
  {
    v47 = (void *)v21(v46);
    v48 = MOSuggestionAssetsTypeMapSnapshot;
    v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
    v51 = v50;
    v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
    v54 = v52;
    if (v49 == v53 && v51 == v52)
    {

      v55 = swift_bridgeObjectRelease_n(v51, 2);
LABEL_24:
      v74 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 216))(v55);
      v75 = (void *)MOSuggestionAssetsTypeLocationPreview;
      v76 = type metadata accessor for MOSuggestionAssetReference(0);
      v77 = (_QWORD *)swift_allocObject(v76, *(unsigned int *)(v76 + 48), *(unsigned __int16 *)(v76 + 52));
      v77[4] = 0;
      v77[5] = 0;
      v78 = (char *)v77 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID;
      v79 = type metadata accessor for UUID(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v78, 1, 1, v79);
      *(_QWORD *)((char *)v77 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = v74;
      swift_beginAccess(v77 + 4, v197, 1, 0);
      v80 = v77[5];
      v77[4] = 0;
      v77[5] = 0;
      v81 = v75;
      swift_bridgeObjectRelease(v80);
      v77[2] = v81;
      v77[3] = 0;
      aBlock = 0;
      v199 = 0xE000000000000000;
      v82._countAndFlagsBits = 0x5954454843414323;
      v82._object = (void *)0xEA00000000004550;
      String.append(_:)(v82);
      LOBYTE(v205) = v194;
      _print_unlocked<A, B>(_:_:)(&v205, &aBlock, &type metadata for MOSuggestionAssetTileSize, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v84 = (uint64_t)aBlock;
      v83 = (void *)v199;
      if (!v77[5])
      {
        *((_OWORD *)v77 + 2) = xmmword_1001A41F0;
        swift_bridgeObjectRelease(0);
      }
      v85 = MOSuggestionSheetAssetViewModel.image.modify((uint64_t)&aBlock);
      v87 = v187;
      if (*(_QWORD *)(v86 + 8))
      {
        v88._countAndFlagsBits = v84;
        v88._object = v83;
        String.append(_:)(v88);
      }
      ((void (*)(void ***, _QWORD))v85)(&aBlock, 0);
      swift_bridgeObjectRelease(v83);
      v89 = *(_QWORD *)v45;
      *(_QWORD *)v45 = v77;
      swift_retain(v77);
      swift_release(v89);
      if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
        swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
      v90 = type metadata accessor for Logger(0);
      __swift_project_value_buffer(v90, (uint64_t)static MOAngelLogger.assets);
      v91 = swift_retain_n(v87);
      v92 = Logger.logObject.getter(v91);
      v93 = static os_log_type_t.info.getter();
      v94 = v93;
      if (os_log_type_enabled(v92, v93))
      {
        v176 = v94;
        v95 = (uint8_t *)swift_slowAlloc(12, -1);
        v175 = (void **)swift_slowAlloc(32, -1);
        aBlock = v175;
        v174 = v95;
        *(_DWORD *)v95 = 136315138;
        v173 = v95 + 4;
        swift_beginAccess(v45, v196, 0, 0);
        v96 = *(_QWORD *)(v87 + 16);
        v97 = *(uint64_t (**)(__n128))(*(_QWORD *)v96 + 312);
        v98 = swift_retain(v96);
        v99 = v97(v98);
        v100 = v17;
        v101 = v99;
        v103 = v102;
        swift_release(v96);
        v104 = v101;
        v17 = v100;
        v205 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v104, v103, (uint64_t *)&aBlock);
        v105 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v205, v206, v173);
        swift_release_n(v87, v105);
        swift_bridgeObjectRelease(v103);
        v106 = v174;
        _os_log_impl((void *)&_mh_execute_header, v92, (os_log_type_t)v176, "[MOSuggestionAssetCacheManager] Dynamic assetIdentifier swap --> %s", v174, 0xCu);
        v107 = v175;
        swift_arrayDestroy(v175, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v107, -1, -1);
        swift_slowDealloc(v106, -1, -1);
        swift_release(v77);

      }
      else
      {

        swift_release_n(v87, v108);
        swift_release(v77);
      }
      goto LABEL_33;
    }
    v73 = _stringCompareWithSmolCheck(_:_:expecting:)(v49, v51, v53, v52, 0);

    swift_bridgeObjectRelease(v51);
    swift_bridgeObjectRelease(v54);
    if ((v73 & 1) != 0)
      goto LABEL_24;
  }
LABEL_33:
  v188 = v17;
  v109 = (void *)v193[2];
  swift_beginAccess(v45, &v205, 0, 0);
  v110 = *(_QWORD *)v45;
  v111 = *(void (**)(__n128))(**(_QWORD **)v45 + 288);
  v112 = v109;
  v113 = swift_retain(v110);
  v111(v113);
  v115 = v114;
  swift_release(v110);
  v116 = String._bridgeToObjectiveC()();
  v117 = objc_msgSend(v112, "objectForKey:", v116, swift_bridgeObjectRelease(v115).n128_f64[0]);

  v118 = v187;
  if (v117)
  {
    v119 = objc_msgSend(v117, "assetType");
    v120 = MOSuggestionAssetsTypeLivePhoto;
    v121 = static String._unconditionallyBridgeFromObjectiveC(_:)(v119);
    v123 = v122;
    v125 = static String._unconditionallyBridgeFromObjectiveC(_:)(v120);
    v126 = v124;
    if (v121 == v125 && v123 == v124)
    {
      v127 = v177;

      swift_bridgeObjectRelease_n(v123, 2);
      if (v127 > 0xF6)
      {
LABEL_49:
        type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue, OS_dispatch_queue_ptr);
        v158 = (void *)static OS_dispatch_queue.main.getter(v157);
        v159 = (_QWORD *)swift_allocObject(&unk_1001ED3A0, 48, 7);
        v159[2] = v118;
        v159[3] = partial apply for closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:);
        v159[4] = v20;
        v159[5] = v117;
        v202 = partial apply for closure #1 in MOSuggestionAssetCacheManager.retrieveAssetFor(_:withTypes:cacheType:completion:);
        v203 = v159;
        aBlock = _NSConcreteStackBlock;
        v199 = 1107296256;
        v200 = thunk for @escaping @callee_guaranteed () -> ();
        v201 = &block_descriptor_37;
        v160 = _Block_copy(&aBlock);
        v161 = v203;
        swift_retain(v118);
        swift_retain(v20);
        v162 = v117;
        swift_release(v161);
        v163 = v178;
        static DispatchQoS.unspecified.getter(v164);
        aBlock = (void **)_swiftEmptyArrayStorage;
        v165 = lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v166 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
        v167 = lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
        v168 = v118;
        v169 = v181;
        v170 = v166;
        v171 = v183;
        dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v170, v167, v183, v165);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v163, v169, v160);
        _Block_release(v160);

        (*(void (**)(char *, uint64_t))(v182 + 8))(v169, v171);
        (*(void (**)(char *, uint64_t))(v179 + 8))(v163, v180);
        swift_bridgeObjectRelease(v189);
        swift_release(v190);
        swift_release(v191);
        swift_release(v192);
        swift_release(v20);
        swift_release(v168);
        v17 = v188;
        goto LABEL_48;
      }
    }
    else
    {
      v128 = v177;
      v129 = _stringCompareWithSmolCheck(_:_:expecting:)(v121, v123, v125, v124, 0);

      swift_bridgeObjectRelease(v123);
      swift_bridgeObjectRelease(v126);
      if (v128 > 0xF6 || (v129 & 1) == 0)
        goto LABEL_49;
    }

  }
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v130 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v130, (uint64_t)static MOAngelLogger.assets);
  v131 = swift_retain_n(v118);
  v132 = Logger.logObject.getter(v131);
  v133 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v132, v133))
  {
    v134 = (uint8_t *)swift_slowAlloc(12, -1);
    v135 = (void **)swift_slowAlloc(32, -1);
    *(_DWORD *)v134 = 136315138;
    aBlock = v135;
    v136 = *(_QWORD *)(v118 + 16);
    v137 = *(uint64_t (**)(__n128))(*(_QWORD *)v136 + 312);
    v138 = swift_retain(v136);
    v139 = v137(v138);
    v141 = v140;
    swift_release(v136);
    v142 = v139;
    v118 = v187;
    v204 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v142, v141, (uint64_t *)&aBlock);
    v143 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v204, &v205, v134 + 4);
    swift_release_n(v118, v143);
    swift_bridgeObjectRelease(v141);
    _os_log_impl((void *)&_mh_execute_header, v132, v133, "[MOSuggestionAssetCacheManager] Building cache for %s", v134, 0xCu);
    swift_arrayDestroy(v135, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v135, -1, -1);
    swift_slowDealloc(v134, -1, -1);

  }
  else
  {

    swift_release_n(v118, v144);
  }
  v17 = v188;
  v145 = *(_QWORD *)(v118 + 16);
  v146 = v192;
  swift_retain(v192);
  v147 = v191;
  swift_retain(v191);
  v148 = v190;
  swift_retain(v190);
  v149 = v118;
  v150 = v189;
  swift_bridgeObjectRetain(v189);
  swift_retain(v17);
  swift_retain(v20);
  swift_retain(v145);
  specialized MOSuggestionAssetCacheManager.buildCacheAndReturnAsset(_:cacheType:completion:)(v151, v194, v193, v146, v185, v147, v186, v148, v150, v184, v17);
  swift_release(v149);
  v152 = swift_release(v145);
  swift_release_n(v20, v152);
  swift_release_n(v146, v153);
  swift_release_n(v147, v154);
  swift_release_n(v148, v155);
  swift_bridgeObjectRelease_n(v150, 2);
  v72 = v17;
LABEL_47:
  swift_release(v72);
LABEL_48:
  *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  return result;
}

uint64_t sub_10019357C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001935A0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t partial apply for closure #1 in MOSuggestionAssetCacheManager.retrieveAssetFor(_:withTypes:cacheType:completion:)()
{
  uint64_t v0;

  return closure #1 in MOSuggestionAssetCacheManager.retrieveAssetFor(_:withTypes:cacheType:completion:)(*(_QWORD *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

void partial apply for closure #1 in MOSuggestionAssetCacheManager.fetchAndCachePhotoLivePhotoVideosFromProvider(_:cacheType:completion:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in MOSuggestionAssetCacheManager.fetchAndCachePhotoLivePhotoVideosFromProvider(_:cacheType:completion:)(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void (**)(id))(v1 + 40));
}

uint64_t outlined destroy of MOSuggestionAssetCacheWorkoutInput(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MOSuggestionAssetCacheWorkoutInput(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void partial apply for closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheRingsFromProvider(_:completion:)(uint64_t a1, void *a2)
{
  uint64_t v2;

  closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheRingsFromProvider(_:completion:)(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void (**)(id))(v2 + 32));
}

uint64_t sub_100193650()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  swift_release(v0[8]);
  swift_release(v0[9]);
  swift_release(v0[10]);
  swift_release(v0[12]);
  return swift_deallocObject(v0, 104, 7);
}

void partial apply for closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:)()
{
  uint64_t v0;

  closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(void (**)(id))(v0 + 88), *(uint8_t **)(v0 + 96));
}

uint64_t sub_1001936EC()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

void partial apply for closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:)(void *a1)
{
  uint64_t v1;

  closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:)(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(void (**)(id))(v1 + 48));
}

uint64_t sub_100193738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void (*v10)(uint64_t, uint64_t);

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = (v5 + v3 + v4) & ~v3;
  v8 = (((v5 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 39) & 0xFFFFFFFFFFFFFFF8;
  v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v10(v0 + v4, v1);
  v10(v0 + v7, v1);
  swift_release(*(_QWORD *)(v0 + v8 + 8));
  swift_release(*(_QWORD *)(v0 + ((v8 + 23) & 0xFFFFFFFFFFFFF8)));
  swift_release(*(_QWORD *)(v0 + v9));
  return swift_deallocObject(v0, v9 + 8, v6);
}

void partial apply for closure #4 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v3 = *(_QWORD *)(type metadata accessor for Date(0) - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 16) & ~v4;
  v6 = *(_QWORD *)(v3 + 64);
  v7 = (v6 + v4 + v5) & ~v4;
  v8 = (v6 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  closure #4 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:)(a1, *(double *)(v1 + v8), v1 + v5, (void *)(v1 + v7), *(void (**)(void))(v1 + v9), *(_QWORD *)(v1 + v9 + 8), *(_QWORD *)(v1 + ((v9 + 23) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v1 + ((v9 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v1 + ((v9 + 39) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10019389C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t partial apply for closure #1 in closure #4 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:)(void *a1)
{
  uint64_t v1;

  return closure #1 in closure #4 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:)(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(void))(v1 + 24));
}

uint64_t partial apply for closure #1 in closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:)(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:)(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24));
}

uint64_t sub_1001938EC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100193910()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

void partial apply for specialized closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheMotionActivityFromProvider(_:cacheType:completion:)(void *a1)
{
  uint64_t v1;

  specialized closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheMotionActivityFromProvider(_:cacheType:completion:)(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 40), *(void (**)(void))(v1 + 48), *(uint8_t **)(v1 + 56));
}

uint64_t sub_100193964()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100193974()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_release(v0[6]);
  swift_bridgeObjectRelease(v0[8]);
  swift_bridgeObjectRelease(v0[10]);
  swift_bridgeObjectRelease(v0[12]);
  swift_release(v0[13]);
  return swift_deallocObject(v0, 112, 7);
}

void partial apply for closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheMediaArtworkFromProvider(_:cacheType:completion:)(void *a1)
{
  uint64_t v1;

  closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheMediaArtworkFromProvider(_:cacheType:completion:)(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), *(void (**)(id))(v1 + 40), *(uint8_t **)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104));
}

uint64_t sub_100193A08()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[6]);
  swift_release(v0[7]);
  swift_bridgeObjectRelease(v0[9]);
  swift_bridgeObjectRelease(v0[11]);
  swift_bridgeObjectRelease(v0[13]);
  swift_bridgeObjectRelease(v0[15]);
  swift_bridgeObjectRelease(v0[17]);
  swift_release(v0[19]);
  swift_bridgeObjectRelease(v0[20]);
  swift_release(v0[22]);
  return swift_deallocObject(v0, 185, 7);
}

void partial apply for specialized closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheMediaArtworkFromProvider(_:cacheType:completion:)(void *a1)
{
  uint64_t v1;

  specialized closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheMediaArtworkFromProvider(_:cacheType:completion:)(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), (uint64_t *)(v1 + 64), *(_QWORD *)(v1 + 152), *(_QWORD *)(v1 + 160), *(void (**)(id))(v1 + 168), *(uint8_t **)(v1 + 176), *(_BYTE *)(v1 + 184));
}

uint64_t objectdestroy_59Tm()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

void partial apply for closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheAppIconsFromProvider(_:completion:)(void *a1)
{
  uint64_t v1;

  closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheAppIconsFromProvider(_:completion:)(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(void))(v1 + 32));
}

void partial apply for closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheLinkPreviews(_:completion:)(void *a1)
{
  uint64_t v1;

  closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheLinkPreviews(_:completion:)(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 32), *(void (**)(void))(v1 + 40), *(double *)(v1 + 24));
}

uint64_t sub_100193B30()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_bridgeObjectRelease(v0[6]);
  swift_release(v0[7]);
  swift_release(v0[9]);
  swift_release(v0[10]);
  swift_release(v0[12]);
  swift_release(v0[13]);
  swift_release(v0[14]);
  return swift_deallocObject(v0, 120, 7);
}

void partial apply for closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)()
{
  uint64_t v0;

  closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)(*(_QWORD *)(v0 + 16), *(NSObject **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(void (**)(id))(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_BYTE *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
}

double partial apply for closure #3 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)()
{
  uint64_t v0;

  return closure #3 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100193BF8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));

  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 64));
  swift_release(*(_QWORD *)(v0 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  swift_release(*(_QWORD *)(v0 + 96));
  return swift_deallocObject(v0, 104, 7);
}

void partial apply for closure #4 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)(uint64_t a1)
{
  uint64_t v1;

  closure #4 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(void (**)(__n128))(v1 + 88));
}

uint64_t partial apply for closure #3 in closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)(uint64_t a1)
{
  return partial apply for closure #3 in closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))closure #3 in closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:));
}

uint64_t specialized static MOSuggestionAssetCacheManager.shouldDropUninterestingPOI(_:mapItem:location:)(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  __n128 v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;

  if (serverManager._connectionProperties != (NSMutableDictionary *)-1)
    swift_once(&serverManager._connectionProperties, one-time initialization function for assets);
  v4 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v4, (uint64_t)static MOAngelLogger.assets);
  swift_retain(a1);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc(18, -1);
    *(_DWORD *)v8 = 67109376;
    BYTE4(v101) = specialized static MOAngelDefaultsManager.BOOLeanValueFor(_:)() & 1;
    HIDWORD(v101) = BYTE4(v101);
    v9 = UnsafeMutableRawBufferPointer.copyMemory(from:)((char *)&v101 + 4, &v102, v8 + 4);
    *(_WORD *)(v8 + 8) = 2048;
    v100 = (*(uint64_t (**)(__n128))(*(_QWORD *)a1 + 144))(v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v100, &v101, v8 + 10);
    swift_release(a1);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "[POIClustering] [DEFAULTS] shouldDropUninterestingPOI=%{BOOL}d, bundleType=%lu", (uint8_t *)v8, 0x12u);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

    swift_release(a1);
  }
  if ((specialized static MOAngelDefaultsManager.BOOLeanValueFor(_:)() & 1) == 0
    || (*(uint64_t (**)(void))(*(_QWORD *)a1 + 144))() != 13
    || (v10 = objc_msgSend(a2, "_poiCategory")) == 0)
  {
    v24 = 0;
    return v24 & 1;
  }
  v11 = v10;
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(GEOPOICategoryAirport);
  v14 = v13;
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v17 = v15;
  if (v12 == v16 && v14 == v15)
    goto LABEL_14;
  v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, v16, v15, 0);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v17);
  if ((v18 & 1) != 0)
  {
LABEL_15:

    v24 = 1;
    return v24 & 1;
  }
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(GEOPOICategoryAirportGate);
  v14 = v20;
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v23 = v21;
  if (v19 == v22 && v14 == v21)
    goto LABEL_14;
  v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v14, v22, v21, 0);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v23);
  if ((v26 & 1) != 0)
    goto LABEL_15;
  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(GEOPOICategoryAirportTerminal);
  v14 = v28;
  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v31 = v29;
  if (v27 == v30 && v14 == v29)
    goto LABEL_14;
  v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v14, v30, v29, 0);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v31);
  if ((v32 & 1) != 0)
    goto LABEL_15;
  v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(GEOPOICategoryATM);
  v14 = v34;
  v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v37 = v35;
  if (v33 == v36 && v14 == v35)
    goto LABEL_14;
  v38 = _stringCompareWithSmolCheck(_:_:expecting:)(v33, v14, v36, v35, 0);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v37);
  if ((v38 & 1) != 0)
    goto LABEL_15;
  v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(GEOPOICategoryBank);
  v14 = v40;
  v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v43 = v41;
  if (v39 == v42 && v14 == v41)
    goto LABEL_14;
  v44 = _stringCompareWithSmolCheck(_:_:expecting:)(v39, v14, v42, v41, 0);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v43);
  if ((v44 & 1) != 0)
    goto LABEL_15;
  v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(GEOPOICategoryCarRental);
  v14 = v46;
  v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v49 = v47;
  if (v45 == v48 && v14 == v47)
    goto LABEL_14;
  v50 = _stringCompareWithSmolCheck(_:_:expecting:)(v45, v14, v48, v47, 0);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v49);
  if ((v50 & 1) != 0)
    goto LABEL_15;
  v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(GEOPOICategoryEVCharger);
  v14 = v52;
  v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v55 = v53;
  if (v51 == v54 && v14 == v53)
    goto LABEL_14;
  v56 = _stringCompareWithSmolCheck(_:_:expecting:)(v51, v14, v54, v53, 0);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v55);
  if ((v56 & 1) != 0)
    goto LABEL_15;
  v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(GEOPOICategoryLaundry);
  v14 = v58;
  v60 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v61 = v59;
  if (v57 == v60 && v14 == v59)
    goto LABEL_14;
  v62 = _stringCompareWithSmolCheck(_:_:expecting:)(v57, v14, v60, v59, 0);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v61);
  if ((v62 & 1) != 0)
    goto LABEL_15;
  v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(GEOPOICategoryParking);
  v14 = v64;
  v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v67 = v65;
  if (v63 == v66 && v14 == v65)
    goto LABEL_14;
  v68 = _stringCompareWithSmolCheck(_:_:expecting:)(v63, v14, v66, v65, 0);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v67);
  if ((v68 & 1) != 0)
    goto LABEL_15;
  v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(GEOPOICategoryPharmacy);
  v14 = v70;
  v72 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v73 = v71;
  if (v69 == v72 && v14 == v71)
    goto LABEL_14;
  v74 = _stringCompareWithSmolCheck(_:_:expecting:)(v69, v14, v72, v71, 0);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v73);
  if ((v74 & 1) != 0)
    goto LABEL_15;
  v75 = static String._unconditionallyBridgeFromObjectiveC(_:)(GEOPOICategoryPolice);
  v14 = v76;
  v78 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v79 = v77;
  if (v75 == v78 && v14 == v77)
    goto LABEL_14;
  v80 = _stringCompareWithSmolCheck(_:_:expecting:)(v75, v14, v78, v77, 0);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v79);
  if ((v80 & 1) != 0)
    goto LABEL_15;
  v81 = static String._unconditionallyBridgeFromObjectiveC(_:)(GEOPOICategoryPostOffice);
  v14 = v82;
  v84 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v85 = v83;
  if (v81 == v84 && v14 == v83)
    goto LABEL_14;
  v86 = _stringCompareWithSmolCheck(_:_:expecting:)(v81, v14, v84, v83, 0);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v85);
  if ((v86 & 1) != 0)
    goto LABEL_15;
  v87 = static String._unconditionallyBridgeFromObjectiveC(_:)(GEOPOICategoryPublicTransport);
  v14 = v88;
  v90 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v91 = v89;
  if (v87 == v90 && v14 == v89)
  {
LABEL_14:
    swift_bridgeObjectRelease_n(v14, 2);
    goto LABEL_15;
  }
  v92 = _stringCompareWithSmolCheck(_:_:expecting:)(v87, v14, v90, v89, 0);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v91);
  if ((v92 & 1) != 0)
    goto LABEL_15;
  v93 = static String._unconditionallyBridgeFromObjectiveC(_:)(GEOPOICategoryRestroom);
  v95 = v94;
  v97 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v98 = v96;
  if (v93 == v97 && v95 == v96)
    v24 = 1;
  else
    v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v93, v95, v97, v96, 0);
  v99 = v11;

  swift_bridgeObjectRelease(v95);
  swift_bridgeObjectRelease(v98);
  return v24 & 1;
}

uint64_t sub_10019443C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100194460()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100194484()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));

  swift_release(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 64));
  swift_release(*(_QWORD *)(v0 + 72));
  swift_release(*(_QWORD *)(v0 + 80));
  swift_release(*(_QWORD *)(v0 + 88));
  swift_release(*(_QWORD *)(v0 + 96));
  swift_release(*(_QWORD *)(v0 + 104));
  swift_release(*(_QWORD *)(v0 + 112));
  swift_release(*(_QWORD *)(v0 + 120));
  swift_release(*(_QWORD *)(v0 + 128));
  swift_release(*(_QWORD *)(v0 + 136));
  swift_release(*(_QWORD *)(v0 + 144));
  swift_release(*(_QWORD *)(v0 + 152));
  swift_release(*(_QWORD *)(v0 + 168));
  swift_release(*(_QWORD *)(v0 + 184));
  return swift_deallocObject(v0, 192, 7);
}

void partial apply for closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:)()
{
  uint64_t v0;

  closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:)(*(_QWORD **)(v0 + 16), *(_QWORD **)(v0 + 24), *(char **)(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48), *(double **)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_BYTE *)(v0 + 160),
    *(_QWORD *)(v0 + 168),
    *(void (**)(_QWORD))(v0 + 176),
    *(uint8_t **)(v0 + 184));
}

uint64_t sub_100194594()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  swift_release(v0[8]);
  swift_release(v0[10]);
  swift_release(v0[11]);
  swift_release(v0[12]);
  swift_release(v0[13]);
  swift_release(v0[14]);
  swift_release(v0[15]);
  return swift_deallocObject(v0, 128, 7);
}

void partial apply for closure #5 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:)(void *a1)
{
  uint64_t v1;

  closure #5 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:)(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_BYTE *)(v1 + 56), *(_QWORD *)(v1 + 64), *(uint64_t (**)(void))(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120));
}

uint64_t objectdestroy_262Tm()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t partial apply for closure #3 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return closure #3 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:)(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(uint64_t (**)(void))(v2 + 32));
}

uint64_t sub_1001946B4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));

  swift_release(*(_QWORD *)(v0 + 72));
  swift_release(*(_QWORD *)(v0 + 88));
  swift_release(*(_QWORD *)(v0 + 96));
  swift_release(*(_QWORD *)(v0 + 104));
  swift_release(*(_QWORD *)(v0 + 112));
  swift_release(*(_QWORD *)(v0 + 120));
  swift_release(*(_QWORD *)(v0 + 128));
  return swift_deallocObject(v0, 136, 7);
}

void partial apply for closure #1 in closure #5 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in closure #5 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:)(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(void **)(v1 + 56), *(unsigned __int8 *)(v1 + 64), *(_QWORD *)(v1 + 72), *(uint64_t (**)(uint64_t))(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 128));
}

uint64_t objectdestroy_27Tm()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[6]);
  swift_bridgeObjectRelease(v0[7]);
  swift_release(v0[9]);
  return swift_deallocObject(v0, 80, 7);
}

void partial apply for closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(void *a1)
{
  uint64_t v1;

  closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(a1, *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(void (**)(double *, __n128))(v1 + 64));
}

uint64_t partial apply for specialized closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheGenericMapSnapshots(_:cacheType:completion:)(uint64_t a1)
{
  return partial apply for closure #3 in closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))specialized closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheGenericMapSnapshots(_:cacheType:completion:));
}

uint64_t partial apply for closure #3 in closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

objc_class *one-time initialization function for resourceBundle()
{
  uint64_t ObjCClassFromMetadata;
  objc_class *result;

  type metadata accessor for ResourceBundleClass();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  resourceBundle.super.isa = result;
  return result;
}

uint64_t one-time initialization function for creativity()
{
  uint64_t v0;

  v0 = type metadata accessor for ColorResource(0);
  __swift_allocate_value_buffer(v0, static ColorResource.creativity);
  __swift_project_value_buffer(v0, (uint64_t)static ColorResource.creativity);
  if (one-time initialization token for resourceBundle != -1)
    swift_once(&one-time initialization token for resourceBundle, one-time initialization function for resourceBundle);
  return ColorResource.init(name:bundle:)(0x6976697461657243, 0xEA00000000007974, resourceBundle.super.isa);
}

uint64_t ColorResource.creativity.unsafeMutableAddressor()
{
  return MOAngelLogger.shared.unsafeMutableAddressor(&one-time initialization token for creativity, (uint64_t (*)(_QWORD))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.creativity, (uint64_t)one-time initialization function for creativity);
}

uint64_t static ColorResource.creativity.getter@<X0>(uint64_t a1@<X8>)
{
  return static MOAngelLogger.shared.getter(&one-time initialization token for creativity, (uint64_t (*)(_QWORD))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.creativity, (uint64_t)one-time initialization function for creativity, a1);
}

uint64_t one-time initialization function for gratitude()
{
  uint64_t v0;

  v0 = type metadata accessor for ColorResource(0);
  __swift_allocate_value_buffer(v0, static ColorResource.gratitude);
  __swift_project_value_buffer(v0, (uint64_t)static ColorResource.gratitude);
  if (one-time initialization token for resourceBundle != -1)
    swift_once(&one-time initialization token for resourceBundle, one-time initialization function for resourceBundle);
  return ColorResource.init(name:bundle:)(0x6475746974617247, 0xE900000000000065, resourceBundle.super.isa);
}

uint64_t ColorResource.gratitude.unsafeMutableAddressor()
{
  return MOAngelLogger.shared.unsafeMutableAddressor(&one-time initialization token for gratitude, (uint64_t (*)(_QWORD))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.gratitude, (uint64_t)one-time initialization function for gratitude);
}

uint64_t static ColorResource.gratitude.getter@<X0>(uint64_t a1@<X8>)
{
  return static MOAngelLogger.shared.getter(&one-time initialization token for gratitude, (uint64_t (*)(_QWORD))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.gratitude, (uint64_t)one-time initialization function for gratitude, a1);
}

uint64_t one-time initialization function for kindness()
{
  uint64_t v0;

  v0 = type metadata accessor for ColorResource(0);
  __swift_allocate_value_buffer(v0, static ColorResource.kindness);
  __swift_project_value_buffer(v0, (uint64_t)static ColorResource.kindness);
  if (one-time initialization token for resourceBundle != -1)
    swift_once(&one-time initialization token for resourceBundle, one-time initialization function for resourceBundle);
  return ColorResource.init(name:bundle:)(0x7373656E646E694BLL, 0xE800000000000000, resourceBundle.super.isa);
}

uint64_t ColorResource.kindness.unsafeMutableAddressor()
{
  return MOAngelLogger.shared.unsafeMutableAddressor(&one-time initialization token for kindness, (uint64_t (*)(_QWORD))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.kindness, (uint64_t)one-time initialization function for kindness);
}

uint64_t static ColorResource.kindness.getter@<X0>(uint64_t a1@<X8>)
{
  return static MOAngelLogger.shared.getter(&one-time initialization token for kindness, (uint64_t (*)(_QWORD))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.kindness, (uint64_t)one-time initialization function for kindness, a1);
}

uint64_t one-time initialization function for purpose()
{
  uint64_t v0;

  v0 = type metadata accessor for ColorResource(0);
  __swift_allocate_value_buffer(v0, static ColorResource.purpose);
  __swift_project_value_buffer(v0, (uint64_t)static ColorResource.purpose);
  if (one-time initialization token for resourceBundle != -1)
    swift_once(&one-time initialization token for resourceBundle, one-time initialization function for resourceBundle);
  return ColorResource.init(name:bundle:)(0x65736F70727550, 0xE700000000000000, resourceBundle.super.isa);
}

uint64_t ColorResource.purpose.unsafeMutableAddressor()
{
  return MOAngelLogger.shared.unsafeMutableAddressor(&one-time initialization token for purpose, (uint64_t (*)(_QWORD))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.purpose, (uint64_t)one-time initialization function for purpose);
}

uint64_t static ColorResource.purpose.getter@<X0>(uint64_t a1@<X8>)
{
  return static MOAngelLogger.shared.getter(&one-time initialization token for purpose, (uint64_t (*)(_QWORD))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.purpose, (uint64_t)one-time initialization function for purpose, a1);
}

uint64_t one-time initialization function for resilience()
{
  uint64_t v0;

  v0 = type metadata accessor for ColorResource(0);
  __swift_allocate_value_buffer(v0, static ColorResource.resilience);
  __swift_project_value_buffer(v0, (uint64_t)static ColorResource.resilience);
  if (one-time initialization token for resourceBundle != -1)
    swift_once(&one-time initialization token for resourceBundle, one-time initialization function for resourceBundle);
  return ColorResource.init(name:bundle:)(0x6E65696C69736552, 0xEA00000000006563, resourceBundle.super.isa);
}

uint64_t ColorResource.resilience.unsafeMutableAddressor()
{
  return MOAngelLogger.shared.unsafeMutableAddressor(&one-time initialization token for resilience, (uint64_t (*)(_QWORD))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.resilience, (uint64_t)one-time initialization function for resilience);
}

uint64_t static ColorResource.resilience.getter@<X0>(uint64_t a1@<X8>)
{
  return static MOAngelLogger.shared.getter(&one-time initialization token for resilience, (uint64_t (*)(_QWORD))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.resilience, (uint64_t)one-time initialization function for resilience, a1);
}

uint64_t one-time initialization function for wisdom()
{
  uint64_t v0;

  v0 = type metadata accessor for ColorResource(0);
  __swift_allocate_value_buffer(v0, static ColorResource.wisdom);
  __swift_project_value_buffer(v0, (uint64_t)static ColorResource.wisdom);
  if (one-time initialization token for resourceBundle != -1)
    swift_once(&one-time initialization token for resourceBundle, one-time initialization function for resourceBundle);
  return ColorResource.init(name:bundle:)(0x6D6F64736957, 0xE600000000000000, resourceBundle.super.isa);
}

uint64_t ColorResource.wisdom.unsafeMutableAddressor()
{
  return MOAngelLogger.shared.unsafeMutableAddressor(&one-time initialization token for wisdom, (uint64_t (*)(_QWORD))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.wisdom, (uint64_t)one-time initialization function for wisdom);
}

uint64_t static ColorResource.wisdom.getter@<X0>(uint64_t a1@<X8>)
{
  return static MOAngelLogger.shared.getter(&one-time initialization token for wisdom, (uint64_t (*)(_QWORD))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.wisdom, (uint64_t)one-time initialization function for wisdom, a1);
}

uint64_t one-time initialization function for wisdomText()
{
  uint64_t v0;

  v0 = type metadata accessor for ColorResource(0);
  __swift_allocate_value_buffer(v0, static ColorResource.wisdomText);
  __swift_project_value_buffer(v0, (uint64_t)static ColorResource.wisdomText);
  if (one-time initialization token for resourceBundle != -1)
    swift_once(&one-time initialization token for resourceBundle, one-time initialization function for resourceBundle);
  return ColorResource.init(name:bundle:)(0x65546D6F64736957, 0xEA00000000007478, resourceBundle.super.isa);
}

uint64_t ColorResource.wisdomText.unsafeMutableAddressor()
{
  return MOAngelLogger.shared.unsafeMutableAddressor(&one-time initialization token for wisdomText, (uint64_t (*)(_QWORD))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.wisdomText, (uint64_t)one-time initialization function for wisdomText);
}

uint64_t static ColorResource.wisdomText.getter@<X0>(uint64_t a1@<X8>)
{
  return static MOAngelLogger.shared.getter(&one-time initialization token for wisdomText, (uint64_t (*)(_QWORD))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.wisdomText, (uint64_t)one-time initialization function for wisdomText, a1);
}

uint64_t one-time initialization function for distanceBlue()
{
  uint64_t v0;

  v0 = type metadata accessor for ColorResource(0);
  __swift_allocate_value_buffer(v0, static ColorResource.distanceBlue);
  __swift_project_value_buffer(v0, (uint64_t)static ColorResource.distanceBlue);
  if (one-time initialization token for resourceBundle != -1)
    swift_once(&one-time initialization token for resourceBundle, one-time initialization function for resourceBundle);
  return ColorResource.init(name:bundle:)(0x65636E6174736964, 0xEC00000065756C42, resourceBundle.super.isa);
}

uint64_t ColorResource.distanceBlue.unsafeMutableAddressor()
{
  return MOAngelLogger.shared.unsafeMutableAddressor(&one-time initialization token for distanceBlue, (uint64_t (*)(_QWORD))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.distanceBlue, (uint64_t)one-time initialization function for distanceBlue);
}

uint64_t static ColorResource.distanceBlue.getter@<X0>(uint64_t a1@<X8>)
{
  return static MOAngelLogger.shared.getter(&one-time initialization token for distanceBlue, (uint64_t (*)(_QWORD))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.distanceBlue, (uint64_t)one-time initialization function for distanceBlue, a1);
}

uint64_t one-time initialization function for exerciseGreen()
{
  uint64_t v0;

  v0 = type metadata accessor for ColorResource(0);
  __swift_allocate_value_buffer(v0, static ColorResource.exerciseGreen);
  __swift_project_value_buffer(v0, (uint64_t)static ColorResource.exerciseGreen);
  if (one-time initialization token for resourceBundle != -1)
    swift_once(&one-time initialization token for resourceBundle, one-time initialization function for resourceBundle);
  return ColorResource.init(name:bundle:)(0x6573696372657865, 0xED00006E65657247, resourceBundle.super.isa);
}

uint64_t ColorResource.exerciseGreen.unsafeMutableAddressor()
{
  return MOAngelLogger.shared.unsafeMutableAddressor(&one-time initialization token for exerciseGreen, (uint64_t (*)(_QWORD))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.exerciseGreen, (uint64_t)one-time initialization function for exerciseGreen);
}

uint64_t static ColorResource.exerciseGreen.getter@<X0>(uint64_t a1@<X8>)
{
  return static MOAngelLogger.shared.getter(&one-time initialization token for exerciseGreen, (uint64_t (*)(_QWORD))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.exerciseGreen, (uint64_t)one-time initialization function for exerciseGreen, a1);
}

uint64_t one-time initialization function for exerciseGreenFaded()
{
  uint64_t v0;

  v0 = type metadata accessor for ColorResource(0);
  __swift_allocate_value_buffer(v0, static ColorResource.exerciseGreenFaded);
  __swift_project_value_buffer(v0, (uint64_t)static ColorResource.exerciseGreenFaded);
  if (one-time initialization token for resourceBundle != -1)
    swift_once(&one-time initialization token for resourceBundle, one-time initialization function for resourceBundle);
  return ColorResource.init(name:bundle:)(0xD000000000000012, 0x80000001001AFE70, resourceBundle.super.isa);
}

uint64_t ColorResource.exerciseGreenFaded.unsafeMutableAddressor()
{
  return MOAngelLogger.shared.unsafeMutableAddressor(&one-time initialization token for exerciseGreenFaded, (uint64_t (*)(_QWORD))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.exerciseGreenFaded, (uint64_t)one-time initialization function for exerciseGreenFaded);
}

uint64_t static ColorResource.exerciseGreenFaded.getter@<X0>(uint64_t a1@<X8>)
{
  return static MOAngelLogger.shared.getter(&one-time initialization token for exerciseGreenFaded, (uint64_t (*)(_QWORD))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.exerciseGreenFaded, (uint64_t)one-time initialization function for exerciseGreenFaded, a1);
}

uint64_t one-time initialization function for heartRed()
{
  uint64_t v0;

  v0 = type metadata accessor for ColorResource(0);
  __swift_allocate_value_buffer(v0, static ColorResource.heartRed);
  __swift_project_value_buffer(v0, (uint64_t)static ColorResource.heartRed);
  if (one-time initialization token for resourceBundle != -1)
    swift_once(&one-time initialization token for resourceBundle, one-time initialization function for resourceBundle);
  return ColorResource.init(name:bundle:)(0x6465527472616568, 0xE800000000000000, resourceBundle.super.isa);
}

uint64_t ColorResource.heartRed.unsafeMutableAddressor()
{
  return MOAngelLogger.shared.unsafeMutableAddressor(&one-time initialization token for heartRed, (uint64_t (*)(_QWORD))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.heartRed, (uint64_t)one-time initialization function for heartRed);
}

uint64_t static ColorResource.heartRed.getter@<X0>(uint64_t a1@<X8>)
{
  return static MOAngelLogger.shared.getter(&one-time initialization token for heartRed, (uint64_t (*)(_QWORD))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.heartRed, (uint64_t)one-time initialization function for heartRed, a1);
}

uint64_t one-time initialization function for motionBackground()
{
  uint64_t v0;

  v0 = type metadata accessor for ColorResource(0);
  __swift_allocate_value_buffer(v0, static ColorResource.motionBackground);
  __swift_project_value_buffer(v0, (uint64_t)static ColorResource.motionBackground);
  if (one-time initialization token for resourceBundle != -1)
    swift_once(&one-time initialization token for resourceBundle, one-time initialization function for resourceBundle);
  return ColorResource.init(name:bundle:)(0xD000000000000010, 0x80000001001A61C0, resourceBundle.super.isa);
}

uint64_t ColorResource.motionBackground.unsafeMutableAddressor()
{
  return MOAngelLogger.shared.unsafeMutableAddressor(&one-time initialization token for motionBackground, (uint64_t (*)(_QWORD))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.motionBackground, (uint64_t)one-time initialization function for motionBackground);
}

uint64_t static ColorResource.motionBackground.getter@<X0>(uint64_t a1@<X8>)
{
  return static MOAngelLogger.shared.getter(&one-time initialization token for motionBackground, (uint64_t (*)(_QWORD))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.motionBackground, (uint64_t)one-time initialization function for motionBackground, a1);
}

uint64_t one-time initialization function for motionFootsteps()
{
  uint64_t v0;

  v0 = type metadata accessor for ColorResource(0);
  __swift_allocate_value_buffer(v0, static ColorResource.motionFootsteps);
  __swift_project_value_buffer(v0, (uint64_t)static ColorResource.motionFootsteps);
  if (one-time initialization token for resourceBundle != -1)
    swift_once(&one-time initialization token for resourceBundle, one-time initialization function for resourceBundle);
  return ColorResource.init(name:bundle:)(0x6F466E6F69746F6DLL, 0xEF7370657473746FLL, resourceBundle.super.isa);
}

uint64_t ColorResource.motionFootsteps.unsafeMutableAddressor()
{
  return MOAngelLogger.shared.unsafeMutableAddressor(&one-time initialization token for motionFootsteps, (uint64_t (*)(_QWORD))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.motionFootsteps, (uint64_t)one-time initialization function for motionFootsteps);
}

uint64_t static ColorResource.motionFootsteps.getter@<X0>(uint64_t a1@<X8>)
{
  return static MOAngelLogger.shared.getter(&one-time initialization token for motionFootsteps, (uint64_t (*)(_QWORD))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.motionFootsteps, (uint64_t)one-time initialization function for motionFootsteps, a1);
}

uint64_t one-time initialization function for movePink()
{
  uint64_t v0;

  v0 = type metadata accessor for ColorResource(0);
  __swift_allocate_value_buffer(v0, static ColorResource.movePink);
  __swift_project_value_buffer(v0, (uint64_t)static ColorResource.movePink);
  if (one-time initialization token for resourceBundle != -1)
    swift_once(&one-time initialization token for resourceBundle, one-time initialization function for resourceBundle);
  return ColorResource.init(name:bundle:)(0x6B6E695065766F6DLL, 0xE800000000000000, resourceBundle.super.isa);
}

uint64_t ColorResource.movePink.unsafeMutableAddressor()
{
  return MOAngelLogger.shared.unsafeMutableAddressor(&one-time initialization token for movePink, (uint64_t (*)(_QWORD))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.movePink, (uint64_t)one-time initialization function for movePink);
}

uint64_t static ColorResource.movePink.getter@<X0>(uint64_t a1@<X8>)
{
  return static MOAngelLogger.shared.getter(&one-time initialization token for movePink, (uint64_t (*)(_QWORD))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.movePink, (uint64_t)one-time initialization function for movePink, a1);
}

uint64_t one-time initialization function for standBlue()
{
  uint64_t v0;

  v0 = type metadata accessor for ColorResource(0);
  __swift_allocate_value_buffer(v0, static ColorResource.standBlue);
  __swift_project_value_buffer(v0, (uint64_t)static ColorResource.standBlue);
  if (one-time initialization token for resourceBundle != -1)
    swift_once(&one-time initialization token for resourceBundle, one-time initialization function for resourceBundle);
  return ColorResource.init(name:bundle:)(0x756C42646E617473, 0xE900000000000065, resourceBundle.super.isa);
}

uint64_t ColorResource.standBlue.unsafeMutableAddressor()
{
  return MOAngelLogger.shared.unsafeMutableAddressor(&one-time initialization token for standBlue, (uint64_t (*)(_QWORD))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.standBlue, (uint64_t)one-time initialization function for standBlue);
}

uint64_t static ColorResource.standBlue.getter@<X0>(uint64_t a1@<X8>)
{
  return static MOAngelLogger.shared.getter(&one-time initialization token for standBlue, (uint64_t (*)(_QWORD))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.standBlue, (uint64_t)one-time initialization function for standBlue, a1);
}

uint64_t one-time initialization function for timeYellow()
{
  uint64_t v0;

  v0 = type metadata accessor for ColorResource(0);
  __swift_allocate_value_buffer(v0, static ColorResource.timeYellow);
  __swift_project_value_buffer(v0, (uint64_t)static ColorResource.timeYellow);
  if (one-time initialization token for resourceBundle != -1)
    swift_once(&one-time initialization token for resourceBundle, one-time initialization function for resourceBundle);
  return ColorResource.init(name:bundle:)(0x6C6C6559656D6974, 0xEA0000000000776FLL, resourceBundle.super.isa);
}

uint64_t ColorResource.timeYellow.unsafeMutableAddressor()
{
  return MOAngelLogger.shared.unsafeMutableAddressor(&one-time initialization token for timeYellow, (uint64_t (*)(_QWORD))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.timeYellow, (uint64_t)one-time initialization function for timeYellow);
}

uint64_t static ColorResource.timeYellow.getter@<X0>(uint64_t a1@<X8>)
{
  return static MOAngelLogger.shared.getter(&one-time initialization token for timeYellow, (uint64_t (*)(_QWORD))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.timeYellow, (uint64_t)one-time initialization function for timeYellow, a1);
}

uint64_t one-time initialization function for journalingSuggestionsIcon()
{
  uint64_t v0;

  v0 = type metadata accessor for ImageResource(0);
  __swift_allocate_value_buffer(v0, static ImageResource.journalingSuggestionsIcon);
  __swift_project_value_buffer(v0, (uint64_t)static ImageResource.journalingSuggestionsIcon);
  if (one-time initialization token for resourceBundle != -1)
    swift_once(&one-time initialization token for resourceBundle, one-time initialization function for resourceBundle);
  return ImageResource.init(name:bundle:)(0xD000000000000019, 0x80000001001A6210, resourceBundle.super.isa);
}

uint64_t ImageResource.journalingSuggestionsIcon.unsafeMutableAddressor()
{
  return MOAngelLogger.shared.unsafeMutableAddressor(&one-time initialization token for journalingSuggestionsIcon, (uint64_t (*)(_QWORD))&type metadata accessor for ImageResource, (uint64_t)static ImageResource.journalingSuggestionsIcon, (uint64_t)one-time initialization function for journalingSuggestionsIcon);
}

uint64_t static ImageResource.journalingSuggestionsIcon.getter@<X0>(uint64_t a1@<X8>)
{
  return static MOAngelLogger.shared.getter(&one-time initialization token for journalingSuggestionsIcon, (uint64_t (*)(_QWORD))&type metadata accessor for ImageResource, (uint64_t)static ImageResource.journalingSuggestionsIcon, (uint64_t)one-time initialization function for journalingSuggestionsIcon, a1);
}

uint64_t one-time initialization function for momentMockup()
{
  uint64_t v0;

  v0 = type metadata accessor for ImageResource(0);
  __swift_allocate_value_buffer(v0, static ImageResource.momentMockup);
  __swift_project_value_buffer(v0, (uint64_t)static ImageResource.momentMockup);
  if (one-time initialization token for resourceBundle != -1)
    swift_once(&one-time initialization token for resourceBundle, one-time initialization function for resourceBundle);
  return ImageResource.init(name:bundle:)(0x6F4D746E656D6F4DLL, 0xEC00000070756B63, resourceBundle.super.isa);
}

uint64_t ImageResource.momentMockup.unsafeMutableAddressor()
{
  return MOAngelLogger.shared.unsafeMutableAddressor(&one-time initialization token for momentMockup, (uint64_t (*)(_QWORD))&type metadata accessor for ImageResource, (uint64_t)static ImageResource.momentMockup, (uint64_t)one-time initialization function for momentMockup);
}

uint64_t static ImageResource.momentMockup.getter@<X0>(uint64_t a1@<X8>)
{
  return static MOAngelLogger.shared.getter(&one-time initialization token for momentMockup, (uint64_t (*)(_QWORD))&type metadata accessor for ImageResource, (uint64_t)static ImageResource.momentMockup, (uint64_t)one-time initialization function for momentMockup, a1);
}

uint64_t one-time initialization function for privacyIcon()
{
  uint64_t v0;

  v0 = type metadata accessor for ImageResource(0);
  __swift_allocate_value_buffer(v0, static ImageResource.privacyIcon);
  __swift_project_value_buffer(v0, (uint64_t)static ImageResource.privacyIcon);
  if (one-time initialization token for resourceBundle != -1)
    swift_once(&one-time initialization token for resourceBundle, one-time initialization function for resourceBundle);
  return ImageResource.init(name:bundle:)(0x4979636176697250, 0xEB000000006E6F63, resourceBundle.super.isa);
}

uint64_t ImageResource.privacyIcon.unsafeMutableAddressor()
{
  return MOAngelLogger.shared.unsafeMutableAddressor(&one-time initialization token for privacyIcon, (uint64_t (*)(_QWORD))&type metadata accessor for ImageResource, (uint64_t)static ImageResource.privacyIcon, (uint64_t)one-time initialization function for privacyIcon);
}

uint64_t static ImageResource.privacyIcon.getter@<X0>(uint64_t a1@<X8>)
{
  return static MOAngelLogger.shared.getter(&one-time initialization token for privacyIcon, (uint64_t (*)(_QWORD))&type metadata accessor for ImageResource, (uint64_t)static ImageResource.privacyIcon, (uint64_t)one-time initialization function for privacyIcon, a1);
}

uint64_t one-time initialization function for momentsPrivacy80Masked()
{
  uint64_t v0;

  v0 = type metadata accessor for ImageResource(0);
  __swift_allocate_value_buffer(v0, static ImageResource.momentsPrivacy80Masked);
  __swift_project_value_buffer(v0, (uint64_t)static ImageResource.momentsPrivacy80Masked);
  if (one-time initialization token for resourceBundle != -1)
    swift_once(&one-time initialization token for resourceBundle, one-time initialization function for resourceBundle);
  return ImageResource.init(name:bundle:)(0xD000000000000018, 0x80000001001A86C0, resourceBundle.super.isa);
}

uint64_t ImageResource.momentsPrivacy80Masked.unsafeMutableAddressor()
{
  return MOAngelLogger.shared.unsafeMutableAddressor(&one-time initialization token for momentsPrivacy80Masked, (uint64_t (*)(_QWORD))&type metadata accessor for ImageResource, (uint64_t)static ImageResource.momentsPrivacy80Masked, (uint64_t)one-time initialization function for momentsPrivacy80Masked);
}

uint64_t static ImageResource.momentsPrivacy80Masked.getter@<X0>(uint64_t a1@<X8>)
{
  return static MOAngelLogger.shared.getter(&one-time initialization token for momentsPrivacy80Masked, (uint64_t (*)(_QWORD))&type metadata accessor for ImageResource, (uint64_t)static ImageResource.momentsPrivacy80Masked, (uint64_t)one-time initialization function for momentsPrivacy80Masked, a1);
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self(_TtC16MomentsUIServiceP33_0DAF8935F464D715A5FAAF08CEFB557419ResourceBundleClass);
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UTF8String");
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UUIDString");
}

id objc_msgSend_absoluteString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "absoluteString");
}

id objc_msgSend_activate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activate");
}

id objc_msgSend_activationState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activationState");
}

id objc_msgSend_addConnection_withId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addConnection:withId:");
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObject:");
}

id objc_msgSend_addObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:");
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allKeys");
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "array");
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_authorizationStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authorizationStatus");
}

id objc_msgSend_avatarImageForContacts_scope_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "avatarImageForContacts:scope:");
}

id objc_msgSend_baseBundle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "baseBundle");
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLValue");
}

id objc_msgSend_BOOLeanValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLeanValue");
}

id objc_msgSend_brokenPipeState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "brokenPipeState");
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleIdentifier");
}

id objc_msgSend_clientWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientWithIdentifier:");
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "code");
}

id objc_msgSend_componentsSeparatedByCharactersInSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsSeparatedByCharactersInSet:");
}

id objc_msgSend_componentsSeparatedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsSeparatedByString:");
}

id objc_msgSend_configurationForDefaultMainDisplayMonitor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationForDefaultMainDisplayMonitor");
}

id objc_msgSend_configureConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureConnection:");
}

id objc_msgSend_connectionHost(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectionHost");
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsObject:");
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copy");
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "count");
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_currentContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentContext");
}

id objc_msgSend_currentHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentHandler");
}

id objc_msgSend_currentState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentState");
}

id objc_msgSend_currentViewState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentViewState");
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultCenter");
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "delegate");
}

id objc_msgSend_describeArray_withName_withDepth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "describeArray:withName:withDepth:");
}

id objc_msgSend_describeComplexObject_withName_withDepth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "describeComplexObject:withName:withDepth:");
}

id objc_msgSend_describeDictionary_withName_withDepth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "describeDictionary:withName:withDepth:");
}

id objc_msgSend_describeSimpleObject_withName_withDepth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "describeSimpleObject:withName:withDepth:");
}

id objc_msgSend_describingPropertyNamed_withClassName_andValue_andRecursiveDepth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "describingPropertyNamed:withClassName:andValue:andRecursiveDepth:");
}

id objc_msgSend_describingPropertyNamed_withClassType_andValue_andRecursiveDepth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "describingPropertyNamed:withClassType:andValue:andRecursiveDepth:");
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "description");
}

id objc_msgSend_destroyScene_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "destroyScene:");
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionary");
}

id objc_msgSend_dictionaryWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithDictionary:");
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:count:");
}

id objc_msgSend_didGrantSandboxAccessFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didGrantSandboxAccessFor:");
}

id objc_msgSend_didReceivePresentationRequestWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didReceivePresentationRequestWithOptions:");
}

id objc_msgSend_didReceiveStateUpdateRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didReceiveStateUpdateRequest:");
}

id objc_msgSend_didReceiveUpdateRequestWithState_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didReceiveUpdateRequestWithState:animated:");
}

id objc_msgSend_doTrialSetup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doTrialSetup");
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "domain");
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doubleValue");
}

id objc_msgSend_elements(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "elements");
}

id objc_msgSend_endowmentNamespaces(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endowmentNamespaces");
}

id objc_msgSend_enumerateKeysAndObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateKeysAndObjectsUsingBlock:");
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:userInfo:");
}

id objc_msgSend_experimentIdentifiersWithNamespaceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "experimentIdentifiersWithNamespaceName:");
}

id objc_msgSend_extractClassFrom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "extractClassFrom:");
}

id objc_msgSend_extractHardwareAndSoftwareMetadata(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "extractHardwareAndSoftwareMetadata");
}

id objc_msgSend_extractValueFrom_belongingTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "extractValueFrom:belongingTo:");
}

id objc_msgSend_factor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "factor");
}

id objc_msgSend_factorLevelsWithNamespaceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "factorLevelsWithNamespaceName:");
}

id objc_msgSend_fileSystemRepresentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileSystemRepresentation");
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstObject");
}

id objc_msgSend_getBoolDefaultsForKey_withFallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getBoolDefaultsForKey:withFallback:");
}

id objc_msgSend_getBoolTrialLevelForKey_withFallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getBoolTrialLevelForKey:withFallback:");
}

id objc_msgSend_getBuildVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getBuildVersion");
}

id objc_msgSend_getClientConnectionPropertiesFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getClientConnectionPropertiesFor:");
}

id objc_msgSend_getClientProxyFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getClientProxyFor:");
}

id objc_msgSend_getClientRemoteProcessFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getClientRemoteProcessFor:");
}

id objc_msgSend_getConnectionHostId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getConnectionHostId:");
}

id objc_msgSend_getConnectionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getConnectionIdentifier:");
}

id objc_msgSend_getDoubleDefaultsForKey_withFallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getDoubleDefaultsForKey:withFallback:");
}

id objc_msgSend_getDoubleTrialLevelForKey_withFallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getDoubleTrialLevelForKey:withFallback:");
}

id objc_msgSend_getFloatDefaultsForKey_withFallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getFloatDefaultsForKey:withFallback:");
}

id objc_msgSend_getFloatTrialLevelForKey_withFallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getFloatTrialLevelForKey:withFallback:");
}

id objc_msgSend_getHWModel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getHWModel");
}

id objc_msgSend_getIntegerDefaultsForKey_withFallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getIntegerDefaultsForKey:withFallback:");
}

id objc_msgSend_getIntegerTrialLevelForKey_withFallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getIntegerTrialLevelForKey:withFallback:");
}

id objc_msgSend_getNotificationSettingsWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getNotificationSettingsWithCompletionHandler:");
}

id objc_msgSend_getProductType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getProductType");
}

id objc_msgSend_getProductVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getProductVersion");
}

id objc_msgSend_getPropertiesForConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getPropertiesForConnection:");
}

id objc_msgSend_getProxyFor_withBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getProxyFor:withBlock:");
}

id objc_msgSend_getRemoteProcessIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getRemoteProcessIdentifier:");
}

id objc_msgSend_getStringDefaultsForKey_withFallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getStringDefaultsForKey:withFallback:");
}

id objc_msgSend_getStringTrialLevelForKey_withFallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getStringTrialLevelForKey:withFallback:");
}

id objc_msgSend_getTrialExperimentIdentifiers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getTrialExperimentIdentifiers");
}

id objc_msgSend_handleFailureInMethod_object_file_lineNumber_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFailureInMethod:object:file:lineNumber:description:");
}

id objc_msgSend_handleForIdentifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleForIdentifier:error:");
}

id objc_msgSend_hasEntitlement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasEntitlement:");
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPrefix:");
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identifier");
}

id objc_msgSend_initWithActivityType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithActivityType:");
}

id objc_msgSend_initWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:");
}

id objc_msgSend_initWithClassName_propertyName_andPropertyValue_andRecursiveDepth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithClassName:propertyName:andPropertyValue:andRecursiveDepth:");
}

id objc_msgSend_initWithDefaultsManager_enableTrialClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDefaultsManager:enableTrialClient:");
}

id objc_msgSend_initWithSuiteName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSuiteName:");
}

id objc_msgSend_initWithTargetSceneIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTargetSceneIdentity:");
}

id objc_msgSend_initWithUniverse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUniverse:");
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "integerValue");
}

id objc_msgSend_interfaceWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interfaceWithIdentifier:");
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidate");
}

id objc_msgSend_isConnectingProcessAuthorized_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isConnectingProcessAuthorized:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isInternalBuild(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isInternalBuild");
}

id objc_msgSend_isSeedBuild(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSeedBuild");
}

id objc_msgSend_isVisibleClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isVisibleClient:");
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastObject");
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "length");
}

id objc_msgSend_levelForFactor_withNamespaceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "levelForFactor:withNamespaceName:");
}

id objc_msgSend_levelOneOfCase(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "levelOneOfCase");
}

id objc_msgSend_listenerWithConfigurator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "listenerWithConfigurator:");
}

id objc_msgSend_longValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "longValue");
}

id objc_msgSend_mainScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainScreen");
}

id objc_msgSend_metadata(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "metadata");
}

id objc_msgSend_monitorWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "monitorWithConfiguration:");
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "name");
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithBool:");
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInt:");
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInteger:");
}

id objc_msgSend_objCType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objCType");
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndexedSubscript:");
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:");
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKeyedSubscript:");
}

id objc_msgSend_onLockNotification(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onLockNotification");
}

id objc_msgSend_onboardingFlowCompletionStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onboardingFlowCompletionStatus");
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "path");
}

id objc_msgSend_pendingPresentationOptions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingPresentationOptions");
}

id objc_msgSend_performSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSelector:");
}

id objc_msgSend_performTask_suggestion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performTask:suggestion:");
}

id objc_msgSend_pid(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pid");
}

id objc_msgSend_postNotificationName_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:");
}

id objc_msgSend_protocolForProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "protocolForProtocol:");
}

id objc_msgSend_refresh(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refresh");
}

id objc_msgSend_registerApplicationsForDataAccess_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerApplicationsForDataAccess:");
}

id objc_msgSend_registerForLayoutMonitorForBackgroundStateNotifications(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerForLayoutMonitorForBackgroundStateNotifications");
}

id objc_msgSend_registerForLockNotifications(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerForLockNotifications");
}

id objc_msgSend_remoteProcess(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteProcess");
}

id objc_msgSend_remoteTarget(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteTarget");
}

id objc_msgSend_removeConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeConnection:");
}

id objc_msgSend_removeConnectionId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeConnectionId:");
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObject:");
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectForKey:");
}

id objc_msgSend_renderAvatarsForContacts_scope_imageHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renderAvatarsForContacts:scope:imageHandler:");
}

id objc_msgSend_renderMonogramForString_scope_imageHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renderMonogramForString:scope:imageHandler:");
}

id objc_msgSend_requestAuthorizationWithOptions_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestAuthorizationWithOptions:completionHandler:");
}

id objc_msgSend_requestNotificationAuthIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestNotificationAuthIfNeeded");
}

id objc_msgSend_requestSceneSessionActivation_userActivity_options_errorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestSceneSessionActivation:userActivity:options:errorHandler:");
}

id objc_msgSend_requestSceneSessionDestruction_options_errorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestSceneSessionDestruction:options:errorHandler:");
}

id objc_msgSend_requestedTypes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestedTypes");
}

id objc_msgSend_responseQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "responseQueue");
}

id objc_msgSend_scale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scale");
}

id objc_msgSend_sceneIdentityToken(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sceneIdentityToken");
}

id objc_msgSend_scopeWithPointSize_scale_rightToLeft_style_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scopeWithPointSize:scale:rightToLeft:style:");
}

id objc_msgSend_session(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "session");
}

id objc_msgSend_setActivationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivationHandler:");
}

id objc_msgSend_setActivationState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivationState:");
}

id objc_msgSend_setAssets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssets:");
}

id objc_msgSend_setBrokenPipeState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBrokenPipeState:");
}

id objc_msgSend_setClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClient:");
}

id objc_msgSend_setClientMessagingExpectation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientMessagingExpectation:");
}

id objc_msgSend_setConnectionHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionHost:");
}

id objc_msgSend_setCurrentViewState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentViewState:");
}

id objc_msgSend_setDateStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateStyle:");
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegate:");
}

id objc_msgSend_setDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDomain:");
}

id objc_msgSend_setFDefaultsManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFDefaultsManager:");
}

id objc_msgSend_setInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInterface:");
}

id objc_msgSend_setInterfaceTarget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInterfaceTarget:");
}

id objc_msgSend_setInterruptionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInterruptionHandler:");
}

id objc_msgSend_setInvalidationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInvalidationHandler:");
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKey:");
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKeyedSubscript:");
}

id objc_msgSend_setPendingPresentationOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPendingPresentationOptions:");
}

id objc_msgSend_setPlacement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlacement:");
}

id objc_msgSend_setRequiredUserInfoKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequiredUserInfoKeys:");
}

id objc_msgSend_setResponseQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResponseQueue:");
}

id objc_msgSend_setSceneIdentityToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSceneIdentityToken:");
}

id objc_msgSend_setServer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServer:");
}

id objc_msgSend_setService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setService:");
}

id objc_msgSend_setServiceQuality_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServiceQuality:");
}

id objc_msgSend_setSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSession:");
}

id objc_msgSend_setTargetQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTargetQueue:");
}

id objc_msgSend_setTimeStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeStyle:");
}

id objc_msgSend_setTransitionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransitionHandler:");
}

id objc_msgSend_setUnfulfilledUpdateIsAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnfulfilledUpdateIsAnimated:");
}

id objc_msgSend_setUnfulfilledUpdateState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnfulfilledUpdateState:");
}

id objc_msgSend_setUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserInfo:");
}

id objc_msgSend_setWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithArray:");
}

id objc_msgSend_setupListener(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupListener");
}

id objc_msgSend_sharedApplication(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedApplication");
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedInstance");
}

id objc_msgSend_sheetCancelled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sheetCancelled");
}

id objc_msgSend_showBlankComposeView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showBlankComposeView");
}

id objc_msgSend_standardUserDefaults(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "standardUserDefaults");
}

id objc_msgSend_stringByAppendingString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingString:");
}

id objc_msgSend_stringFromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromDate:");
}

id objc_msgSend_stringRepresentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringRepresentation");
}

id objc_msgSend_stringValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringValue");
}

id objc_msgSend_stringWithCString_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithCString:encoding:");
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithFormat:");
}

id objc_msgSend_stringWithUTF8String_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithUTF8String:");
}

id objc_msgSend_substringFromIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringFromIndex:");
}

id objc_msgSend_substringWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringWithRange:");
}

id objc_msgSend_suggestionIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "suggestionIdentifier");
}

id objc_msgSend_taskState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "taskState");
}

id objc_msgSend_unfulfilledUpdateIsAnimated(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unfulfilledUpdateIsAnimated");
}

id objc_msgSend_unfulfilledUpdateState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unfulfilledUpdateState");
}

id objc_msgSend_unsignedIntValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unsignedIntValue");
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInfo");
}

id objc_msgSend_userInitiated(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInitiated");
}

id objc_msgSend_userInterfaceLayoutDirection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInterfaceLayoutDirection");
}

id objc_msgSend_valueForEntitlement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForEntitlement:");
}

id objc_msgSend_valueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForKey:");
}

id objc_msgSend_whitespaceCharacterSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "whitespaceCharacterSet");
}

id objc_msgSend_willReturnAssetsForSuggestion_withTypes_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willReturnAssetsForSuggestion:withTypes:completion:");
}

id objc_msgSend_willReturnAssetsForSuggestion_withTypes_onAssetsCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willReturnAssetsForSuggestion:withTypes:onAssetsCallback:");
}
