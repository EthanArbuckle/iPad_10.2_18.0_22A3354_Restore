uint64_t sub_10008D660(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  v4 = *(_QWORD *)(a1 + 96);
  v5 = *(_OWORD *)(a1 + 48);
  v6 = *(_OWORD *)(a1 + 64);
  v7 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v5;
  *(_OWORD *)(a2 + 64) = v6;
  *(_OWORD *)(a2 + 80) = v7;
  *(_QWORD *)(a2 + 96) = v4;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_10008D6BC()
{
  uint64_t v0;

  return sub_100089EB0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

double sub_10008D6E4()
{
  uint64_t v0;
  double result;

  result = *(double *)(v0 + 24);
  *(double *)(*(_QWORD *)(v0 + 16) + 16) = result;
  return result;
}

uint64_t sub_10008D6F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v2 + 208);
  *(_QWORD *)(v2 + 208) = v1;
  swift_retain(v1);
  return swift_release(v3);
}

uint64_t sub_10008D72C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_100004F7C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

void sub_10008D770()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void **)(v0 + 24);
  v3 = *(void **)(v1 + 560);
  *(_QWORD *)(v1 + 560) = v2;
  v4 = v2;

}

double sub_10008D7D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10008B678(v2, a2);
}

double sub_10008D7EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10008B728(v2, a2);
}

double sub_10008D80C()
{
  uint64_t v0;
  double result;

  result = *(double *)(v0 + 24);
  *(double *)(*(_QWORD *)(v0 + 16) + 144) = result;
  return result;
}

double sub_10008D824()
{
  uint64_t v0;
  double result;

  result = *(double *)(v0 + 24);
  *(double *)(*(_QWORD *)(v0 + 16) + 152) = result;
  return result;
}

void sub_10008D83C()
{
  sub_10008CE64();
}

void sub_10008D850()
{
  sub_10008D0EC();
}

void sub_10008D864()
{
  sub_10008CE94();
}

uint64_t sub_10008D878()
{
  return sub_10004510C();
}

uint64_t sub_10008D88C()
{
  return sub_10008D19C();
}

uint64_t sub_10008D8A0()
{
  return sub_10008CE4C();
}

uint64_t sub_10008D8B4()
{
  return sub_10008D6BC();
}

double sub_10008D8C8()
{
  return sub_10008D6E4();
}

ValueMetadata *type metadata accessor for AmbientSceneAnimator()
{
  return &type metadata for AmbientSceneAnimator;
}

void sub_10008D8EC(void *a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  void **v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;

  v2 = (void *)objc_opt_self(UIView);
  v3 = swift_allocObject(&unk_10010C4E8, 24, 7);
  *(_QWORD *)(v3 + 16) = a1;
  v15 = sub_10008DC4C;
  v16 = v3;
  v11 = _NSConcreteStackBlock;
  v12 = 1107296256;
  v13 = sub_1000A5684;
  v14 = &unk_10010C500;
  v4 = _Block_copy(&v11);
  v5 = v16;
  v6 = a1;
  swift_release(v5);
  v7 = swift_allocObject(&unk_10010C538, 24, 7);
  *(_QWORD *)(v7 + 16) = v6;
  v15 = sub_10008DC88;
  v16 = v7;
  v11 = _NSConcreteStackBlock;
  v12 = 1107296256;
  v13 = sub_10008DA38;
  v14 = &unk_10010C550;
  v8 = _Block_copy(&v11);
  v9 = v16;
  v10 = v6;
  swift_release(v9);
  objc_msgSend(v2, "animateWithDuration:animations:completion:", v4, v8, 0.3);
  _Block_release(v8);
  _Block_release(v4);
}

uint64_t sub_10008DA38(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v4(a2);
  return swift_release(v3);
}

id sub_10008DA74()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 120.0, 16.0, 0.0, 0.0);
  qword_10011B198 = (uint64_t)result;
  return result;
}

id sub_10008DABC()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 120.0, 20.0, 0.0, 0.0);
  qword_10011B1A0 = (uint64_t)result;
  return result;
}

id sub_10008DB04()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 120.0, 20.0, 0.0, 0.0);
  qword_10011B1A8 = (uint64_t)result;
  return result;
}

id sub_10008DB4C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 200.0, 27.0, 0.0, 0.0);
  qword_10011B1B0 = (uint64_t)result;
  return result;
}

void sub_10008DB94()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  v1 = objc_msgSend(v0, "CGColor");

  qword_10011B1B8 = (uint64_t)v1;
}

id sub_10008DBF4(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_listeningView)+ OBJC_IVAR____TtC16MusicRecognition20AmbientListeningView_listeningLabel), "setAlpha:", 0.8);
}

uint64_t sub_10008DC28()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_10008DC4C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_listeningView), "setAlpha:", 0.0);
}

uint64_t sub_10008DC70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10008DC80(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_10008DC88()
{
  uint64_t v0;
  char *v1;

  v1 = *(char **)(v0 + 16);
  sub_10008DCB0(v1);
  sub_10008E170(v1);
}

void sub_10008DCB0(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  double v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  double v11;
  id v12;
  id v13;
  id v14;
  id v15;
  CGFloat v16;
  void *v17;
  CGFloat ty;
  char *v19;
  id v20;
  CGFloat v21;
  void *v22;
  CGFloat v23;
  char *v24;
  CGFloat v25;
  id v26;
  void *v27;
  CGFloat v28;
  char *v29;
  id v30;
  CGAffineTransform v31;
  CGAffineTransform aBlock;

  v2 = *(_QWORD *)&a1[OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_matchView];
  v3 = OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_albumArtImageView;
  v4 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                             + OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_albumArtImageView), "layer"));
  if (qword_100116248 != -1)
    swift_once(&qword_100116248, sub_10008DB94);
  objc_msgSend(v4, "setBackgroundColor:", qword_10011B1B8);

  v5 = objc_msgSend(*(id *)(v2 + v3), "layer");
  LODWORD(v6) = 0;
  objc_msgSend(v5, "setOpacity:", v6);

  v7 = *(id *)(v2 + v3);
  objc_msgSend(v7, "transform");
  CGAffineTransformScale(&v31, &aBlock, 0.9, 0.9);
  aBlock = v31;
  objc_msgSend(v7, "setTransform:", &aBlock);

  v8 = OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_placeholderArtworkView;
  v9 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_placeholderArtworkView), "layer");
  objc_msgSend(v9, "setBackgroundColor:", qword_10011B1B8);

  v10 = objc_msgSend(*(id *)(v2 + v8), "layer");
  LODWORD(v11) = 0;
  objc_msgSend(v10, "setOpacity:", v11);

  v12 = *(id *)(v2 + v8);
  objc_msgSend(v12, "transform");
  CGAffineTransformScale(&v31, &aBlock, 0.9, 0.9);
  aBlock = v31;
  objc_msgSend(v12, "setTransform:", &aBlock);

  v13 = sub_1000CB5CC();
  objc_msgSend(v13, "setConstant:", 0.0);

  v14 = sub_1000CB5E0();
  objc_msgSend(v14, "setConstant:", 0.0);

  if (qword_100116228 != -1)
    swift_once(&qword_100116228, sub_10008DA74);
  v15 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", qword_10011B198, 0.0);
  v16 = COERCE_DOUBLE(swift_allocObject(&unk_10010C768, 24, 7));
  *(_QWORD *)(*(_QWORD *)&v16 + 16) = a1;
  *(_QWORD *)&aBlock.tx = sub_10008EAD4;
  aBlock.ty = v16;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_1000A5684;
  *(_QWORD *)&aBlock.d = &unk_10010C780;
  v17 = _Block_copy(&aBlock);
  ty = aBlock.ty;
  v19 = a1;
  objc_msgSend(v15, "addAnimations:", v17, swift_release(*(_QWORD *)&ty).n128_f64[0]);
  _Block_release(v17);
  if (qword_100116230 != -1)
    swift_once(&qword_100116230, sub_10008DABC);
  v20 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", qword_10011B1A0, 0.0);
  v21 = COERCE_DOUBLE(swift_allocObject(&unk_10010C7B8, 24, 7));
  *(_QWORD *)(*(_QWORD *)&v21 + 16) = v19;
  *(_QWORD *)&aBlock.tx = sub_10008EAE4;
  aBlock.ty = v21;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_1000A5684;
  *(_QWORD *)&aBlock.d = &unk_10010C7D0;
  v22 = _Block_copy(&aBlock);
  v23 = aBlock.ty;
  v24 = v19;
  objc_msgSend(v20, "addAnimations:", v22, swift_release(*(_QWORD *)&v23).n128_f64[0]);
  _Block_release(v22);
  v25 = COERCE_DOUBLE(swift_allocObject(&unk_10010C808, 24, 7));
  *(_QWORD *)(*(_QWORD *)&v25 + 16) = v24;
  v26 = objc_allocWithZone((Class)UIViewPropertyAnimator);
  *(_QWORD *)&aBlock.tx = sub_10008EAEC;
  aBlock.ty = v25;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_1000A5684;
  *(_QWORD *)&aBlock.d = &unk_10010C820;
  v27 = _Block_copy(&aBlock);
  v28 = aBlock.ty;
  v29 = v24;
  swift_release(*(_QWORD *)&v28);
  v30 = objc_msgSend(v26, "initWithDuration:curve:animations:", 3, v27, 0.84);
  _Block_release(v27);
  objc_msgSend(v15, "startAnimation");
  objc_msgSend(v20, "startAnimationAfterDelay:", 0.16);
  objc_msgSend(v30, "startAnimation");

}

void sub_10008E170(char *a1)
{
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  CGFloat v6;
  void *v7;
  CGFloat ty;
  char *v9;
  id v10;
  CGFloat v11;
  void *v12;
  CGFloat v13;
  char *v14;
  void *v15;
  CGFloat v16;
  void *v17;
  CGFloat v18;
  char *v19;
  CGAffineTransform v20;
  CGAffineTransform aBlock;

  v2 = *(_QWORD *)&a1[OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_matchView];
  v3 = *(id *)(v2 + OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_titleLabel);
  objc_msgSend(v3, "transform");
  CGAffineTransformTranslate(&v20, &aBlock, 0.0, 70.0);
  aBlock = v20;
  objc_msgSend(v3, "setTransform:", &aBlock);

  v4 = *(id *)(v2 + OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_artistLabel);
  objc_msgSend(v4, "transform");
  CGAffineTransformTranslate(&v20, &aBlock, 0.0, 80.0);
  aBlock = v20;
  objc_msgSend(v4, "setTransform:", &aBlock);

  if (qword_100116238 != -1)
    swift_once(&qword_100116238, sub_10008DB04);
  v5 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", qword_10011B1A8, 0.0);
  v6 = COERCE_DOUBLE(swift_allocObject(&unk_10010C588, 24, 7));
  *(_QWORD *)(*(_QWORD *)&v6 + 16) = a1;
  *(_QWORD *)&aBlock.tx = sub_10008E81C;
  aBlock.ty = v6;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_1000A5684;
  *(_QWORD *)&aBlock.d = &unk_10010C5A0;
  v7 = _Block_copy(&aBlock);
  ty = aBlock.ty;
  v9 = a1;
  objc_msgSend(v5, "addAnimations:", v7, swift_release(*(_QWORD *)&ty).n128_f64[0]);
  _Block_release(v7);
  if (qword_100116240 != -1)
    swift_once(&qword_100116240, sub_10008DB4C);
  v10 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", qword_10011B1B0, 0.0);
  v11 = COERCE_DOUBLE(swift_allocObject(&unk_10010C5D8, 24, 7));
  *(_QWORD *)(*(_QWORD *)&v11 + 16) = v9;
  *(_QWORD *)&aBlock.tx = sub_10008E828;
  aBlock.ty = v11;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_1000A5684;
  *(_QWORD *)&aBlock.d = &unk_10010C5F0;
  v12 = _Block_copy(&aBlock);
  v13 = aBlock.ty;
  v14 = v9;
  objc_msgSend(v10, "addAnimations:", v12, swift_release(*(_QWORD *)&v13).n128_f64[0]);
  _Block_release(v12);
  objc_msgSend(v5, "startAnimationAfterDelay:", 0.3);
  objc_msgSend(v10, "startAnimationAfterDelay:", 0.4);
  v15 = (void *)objc_opt_self(UIView);
  v16 = COERCE_DOUBLE(swift_allocObject(&unk_10010C628, 24, 7));
  *(_QWORD *)(*(_QWORD *)&v16 + 16) = v14;
  *(_QWORD *)&aBlock.tx = sub_10008EA6C;
  aBlock.ty = v16;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_1000A5684;
  *(_QWORD *)&aBlock.d = &unk_10010C640;
  v17 = _Block_copy(&aBlock);
  v18 = aBlock.ty;
  v19 = v14;
  swift_release(*(_QWORD *)&v18);
  objc_msgSend(v15, "animateKeyframesWithDuration:delay:options:animations:completion:", 0, v17, 0, 1.25, 0.25);

  _Block_release(v17);
}

id sub_10008E51C(uint64_t a1)
{
  void *v1;
  _QWORD v3[6];

  v1 = *(void **)(*(_QWORD *)(a1 + OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_noMatchView)
                + OBJC_IVAR____TtC16MusicRecognition18AmbientNoMatchView_titleLabel);
  v3[0] = 0x3FF0000000000000;
  v3[1] = 0;
  v3[2] = 0;
  v3[3] = 0x3FF0000000000000;
  v3[4] = 0;
  v3[5] = 0;
  return objc_msgSend(v1, "setTransform:", v3);
}

void sub_10008E574(void *a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  void **v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  void *v14;
  id (*v15)();
  uint64_t v16;

  v2 = (void *)objc_opt_self(UIView);
  v3 = swift_allocObject(&unk_10010C858, 24, 7);
  *(_QWORD *)(v3 + 16) = a1;
  v15 = sub_10008EB68;
  v16 = v3;
  v11 = _NSConcreteStackBlock;
  v12 = 1107296256;
  v13 = sub_1000A5684;
  v14 = &unk_10010C870;
  v4 = _Block_copy(&v11);
  v5 = v16;
  v6 = a1;
  swift_release(v5);
  objc_msgSend(v2, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v4, 0.0, 0.3);
  _Block_release(v4);
  v7 = swift_allocObject(&unk_10010C8A8, 24, 7);
  *(_QWORD *)(v7 + 16) = v6;
  v15 = sub_10008EAF4;
  v16 = v7;
  v11 = _NSConcreteStackBlock;
  v12 = 1107296256;
  v13 = sub_1000A5684;
  v14 = &unk_10010C8C0;
  v8 = _Block_copy(&v11);
  v9 = v16;
  v10 = v6;
  swift_release(v9);
  objc_msgSend(v2, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v8, 0.3, 0.7);
  _Block_release(v8);
}

id sub_10008E6E4(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_matchView);
  v2 = *(void **)(v1 + OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_albumArtImageView);
  v5 = 0x3FF0000000000000;
  v6 = 0;
  v7 = 0;
  v8 = 0x3FF0000000000000;
  v9 = 0;
  v10 = 0;
  objc_msgSend(v2, "setTransform:", &v5);
  v3 = *(void **)(v1 + OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_placeholderArtworkView);
  v5 = 0x3FF0000000000000;
  v6 = 0;
  v7 = 0;
  v8 = 0x3FF0000000000000;
  v9 = 0;
  v10 = 0;
  return objc_msgSend(v3, "setTransform:", &v5);
}

void sub_10008E774(uint64_t a1)
{
  uint64_t v1;
  id v2;
  double v3;
  double v4;
  id v5;

  v1 = *(_QWORD *)(a1 + OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_matchView);
  v2 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_albumArtImageView), "layer"));
  LODWORD(v3) = 1.0;
  objc_msgSend(v2, "setOpacity:", v3);

  v5 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_placeholderArtworkView), "layer");
  LODWORD(v4) = 1.0;
  objc_msgSend(v5, "setOpacity:", v4);

}

id sub_10008E81C()
{
  return sub_10008E834(&OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_titleLabel);
}

id sub_10008E828()
{
  return sub_10008E834(&OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_artistLabel);
}

id sub_10008E834(_QWORD *a1)
{
  uint64_t v1;
  void *v2;
  _QWORD v4[6];

  v2 = *(void **)(*(_QWORD *)(*(_QWORD *)(v1 + 16)
                            + OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_matchView)
                + *a1);
  v4[0] = 0x3FF0000000000000;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = 0x3FF0000000000000;
  v4[4] = 0;
  v4[5] = 0;
  return objc_msgSend(v2, "setTransform:", v4);
}

void sub_10008E888(void *a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  void **v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  void *v18;
  id (*v19)();
  uint64_t v20;

  v2 = (void *)objc_opt_self(UIView);
  v3 = swift_allocObject(&unk_10010C678, 24, 7);
  *(_QWORD *)(v3 + 16) = a1;
  v19 = sub_10008EA74;
  v20 = v3;
  v15 = _NSConcreteStackBlock;
  v16 = 1107296256;
  v17 = sub_1000A5684;
  v18 = &unk_10010C690;
  v4 = _Block_copy(&v15);
  v5 = v20;
  v6 = a1;
  swift_release(v5);
  objc_msgSend(v2, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v4, 0.0, 1.0);
  _Block_release(v4);
  v7 = swift_allocObject(&unk_10010C6C8, 24, 7);
  *(_QWORD *)(v7 + 16) = v6;
  v19 = sub_10008EA80;
  v20 = v7;
  v15 = _NSConcreteStackBlock;
  v16 = 1107296256;
  v17 = sub_1000A5684;
  v18 = &unk_10010C6E0;
  v8 = _Block_copy(&v15);
  v9 = v20;
  v10 = v6;
  swift_release(v9);
  objc_msgSend(v2, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v8, 0.05, 0.9);
  _Block_release(v8);
  v11 = swift_allocObject(&unk_10010C718, 24, 7);
  *(_QWORD *)(v11 + 16) = v10;
  v19 = sub_10008EAB8;
  v20 = v11;
  v15 = _NSConcreteStackBlock;
  v16 = 1107296256;
  v17 = sub_1000A5684;
  v18 = &unk_10010C730;
  v12 = _Block_copy(&v15);
  v13 = v20;
  v14 = v10;
  swift_release(v13);
  objc_msgSend(v2, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v12, 0.2, 0.8);
  _Block_release(v12);
}

void sub_10008EA6C()
{
  uint64_t v0;

  sub_10008E888(*(void **)(v0 + 16));
}

id sub_10008EA74()
{
  return sub_10008EA8C(&OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_titleLabel);
}

id sub_10008EA80()
{
  return sub_10008EA8C(&OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_artistLabel);
}

id sub_10008EA8C(_QWORD *a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v1 + 16)+ OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_matchView)+ *a1), "setAlpha:", 1.0);
}

id sub_10008EAB8()
{
  return sub_10008EB10(&OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_matchView, &OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_shazamCountStackView, &OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_appleMusicButton);
}

id sub_10008EAD4()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "layoutIfNeeded");
}

id sub_10008EAE4()
{
  uint64_t v0;

  return sub_10008E6E4(*(_QWORD *)(v0 + 16));
}

void sub_10008EAEC()
{
  uint64_t v0;

  sub_10008E774(*(_QWORD *)(v0 + 16));
}

id sub_10008EAF4()
{
  return sub_10008EB10(&OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_noMatchView, &OBJC_IVAR____TtC16MusicRecognition18AmbientNoMatchView_titleLabel, &OBJC_IVAR____TtC16MusicRecognition18AmbientNoMatchView_retryButton);
}

id sub_10008EB10(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(v3 + 16) + *a1);
  objc_msgSend(*(id *)(v5 + *a2), "setAlpha:", 1.0);
  return objc_msgSend(*(id *)(v5 + *a3), "setAlpha:", 1.0);
}

uint64_t sub_10008EBFC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100004F7C(&qword_100116D98);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MainActor(0);
  v2[5] = v4;
  v2[6] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  return swift_task_switch(sub_10008EC90, v5, v6);
}

uint64_t sub_10008EC90()
{
  uint64_t v0;
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  Swift::String v14;
  Swift::String v15;
  NSString v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v27;

  v1 = objc_msgSend(*(id *)(v0 + 16), "artist", swift_release(*(_QWORD *)(v0 + 48)).n128_f64[0]);
  if (v1)
  {
    v2 = v1;
    v3 = *(void **)(v0 + 16);
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
    v6 = v5;

    v7 = objc_msgSend(v3, "title");
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)(v0 + 24);
      v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
      v12 = v11;

      v13 = *(void **)(v9 + OBJC_IVAR____TtC16MusicRecognition9MatchView_stackView);
      v27 = v4;
      v14._countAndFlagsBits = 8236;
      v14._object = (void *)0xE200000000000000;
      String.append(_:)(v14);
      v15._countAndFlagsBits = v10;
      v15._object = v12;
      String.append(_:)(v15);
      swift_bridgeObjectRelease(v12);
      v16 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v6);
      objc_msgSend(v13, "setAccessibilityLabel:", v16, v27);

    }
    else
    {
      swift_bridgeObjectRelease(v6);
    }
  }
  v17 = *(_QWORD *)(v0 + 32);
  v19 = *(void **)(v0 + 16);
  v18 = *(_QWORD *)(v0 + 24);
  v20 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v17, 1, 1, v20);
  v21 = swift_allocObject(&unk_10010C8F8, 24, 7);
  swift_unknownObjectWeakInit(v21 + 16, v18);
  swift_retain(v21);
  v22 = v19;
  v23 = static MainActor.shared.getter(v22);
  v24 = (_QWORD *)swift_allocObject(&unk_10010C920, 48, 7);
  v24[2] = v23;
  v24[3] = &protocol witness table for MainActor;
  v24[4] = v21;
  v24[5] = v22;
  swift_release(v21);
  v25 = sub_1000A5724(v17, (uint64_t)&unk_10011B298, (uint64_t)v24);
  swift_release(v25);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10008EE70(char a1)
{
  uint64_t v1;
  char v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  Class v6;
  uint64_t v7;
  uint64_t v8;
  char **v9;
  Class isa;
  uint64_t v11;
  NSArray v12;

  v2 = ~a1;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC16MusicRecognition9MatchView_appleMusicButton), "setHidden:", (a1 & 1) == 0);
  v3 = (void *)objc_opt_self(NSLayoutConstraint);
  v4 = sub_100004F7C(&qword_100116D90);
  v5 = swift_allocObject(v4, 40, 7);
  *(_OWORD *)(v5 + 16) = xmmword_1000D3AA0;
  *(_QWORD *)(v5 + 32) = sub_10008F230();
  specialized Array._endMutation()();
  sub_100010498(0, (unint64_t *)&qword_1001177E0, NSLayoutConstraint_ptr);
  if ((v2 & 1) != 0)
  {
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v5);
    objc_msgSend(v3, "deactivateConstraints:", isa);

    v11 = swift_allocObject(v4, 40, 7);
    *(_OWORD *)(v11 + 16) = xmmword_1000D3AA0;
    *(_QWORD *)(v11 + 32) = sub_10008F320();
    specialized Array._endMutation()();
    v8 = v11;
    v12.super.isa = Array._bridgeToObjectiveC()().super.isa;
    v9 = &selRef_activateConstraints_;
  }
  else
  {
    v6 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v5);
    objc_msgSend(v3, "activateConstraints:", v6);

    v7 = swift_allocObject(v4, 40, 7);
    *(_OWORD *)(v7 + 16) = xmmword_1000D3AA0;
    *(_QWORD *)(v7 + 32) = sub_10008F320();
    specialized Array._endMutation()();
    v8 = v7;
    v12.super.isa = Array._bridgeToObjectiveC()().super.isa;
    v9 = &selRef_deactivateConstraints_;
  }
  swift_bridgeObjectRelease(v8);
  objc_msgSend(v3, *v9, v12.super.isa);

}

id sub_10008F090()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.552941176, 0.552941176, 0.576470588, 1.0);
  qword_10011B1C0 = (uint64_t)result;
  return result;
}

id sub_10008F0D8()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.329411765, 0.125490196, 0.129411765, 1.0);
  qword_10011B1C8 = (uint64_t)result;
  return result;
}

id sub_10008F128()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.996078431, 0.376470588, 0.537254902, 1.0);
  qword_10011B1D0 = (uint64_t)result;
  return result;
}

void sub_10008F178()
{
  strcpy((char *)&qword_10011B1D8, "appleMusicLogo");
  unk_10011B1E7 = -18;
}

void sub_10008F1A8()
{
  qword_10011B1E8 = 0x7472616D75626C61;
  unk_10011B1F0 = 0xE800000000000000;
}

void sub_10008F1CC()
{
  qword_10011B1F8 = 0x6B63616C62;
  unk_10011B200 = 0xE500000000000000;
}

void sub_10008F1EC()
{
  qword_10011B208 = 0x676E6964616F6CLL;
  unk_10011B210 = 0xE700000000000000;
}

void sub_10008F210()
{
  qword_10011B218 = 0x646564616F6CLL;
  unk_10011B220 = 0xE600000000000000;
}

id sub_10008F230()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC16MusicRecognition9MatchView____lazy_storage___stackViewTrailingAnchorWithAppleMusicButton;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC16MusicRecognition9MatchView____lazy_storage___stackViewTrailingAnchorWithAppleMusicButton);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC16MusicRecognition9MatchView____lazy_storage___stackViewTrailingAnchorWithAppleMusicButton);
  }
  else
  {
    v4 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                               + OBJC_IVAR____TtC16MusicRecognition9MatchView_stackView), "layoutMarginsGuide"));
    v5 = objc_msgSend(v4, "trailingAnchor");

    v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                               + OBJC_IVAR____TtC16MusicRecognition9MatchView_appleMusicButton), "leadingAnchor"));
    v7 = objc_msgSend(v5, "constraintEqualToAnchor:constant:", v6, -8.0);

    v8 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

id sub_10008F320()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;

  v1 = OBJC_IVAR____TtC16MusicRecognition9MatchView____lazy_storage___stackViewTrailingAnchorWithoutAppleMusicButton;
  v2 = *(void **)&v0[OBJC_IVAR____TtC16MusicRecognition9MatchView____lazy_storage___stackViewTrailingAnchorWithoutAppleMusicButton];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC16MusicRecognition9MatchView____lazy_storage___stackViewTrailingAnchorWithoutAppleMusicButton];
  }
  else
  {
    v4 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC16MusicRecognition9MatchView_stackView], "layoutMarginsGuide");
    v5 = objc_msgSend(v4, "trailingAnchor");

    v6 = objc_msgSend(v0, "layoutMarginsGuide");
    v7 = objc_msgSend(v6, "trailingAnchor");

    v8 = objc_msgSend(v5, "constraintEqualToAnchor:constant:", v7, -8.0);
    v9 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v8;
    v3 = v8;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

void sub_10008F41C(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  objc_class *ObjectType;
  void *v12;
  char *v13;
  id v14;
  id v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  objc_super v23;

  ObjectType = (objc_class *)swift_getObjectType(v6, a6);
  v12 = (void *)objc_opt_self(NSBundle);
  v13 = v6;
  v14 = objc_msgSend(v12, "mainBundle");
  v15 = objc_allocWithZone((Class)BSUICAPackageView);
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v15, "initWithPackageName:inBundle:", v16, v14);

  if (v17)
  {
    *(_QWORD *)&v13[OBJC_IVAR____TtC16MusicRecognition9MatchView_albumArtView] = v17;
    v18 = OBJC_IVAR____TtC16MusicRecognition9MatchView_titleLabel;
    *(_QWORD *)&v13[v18] = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v19 = OBJC_IVAR____TtC16MusicRecognition9MatchView_artistLabel;
    *(_QWORD *)&v13[v19] = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v20 = OBJC_IVAR____TtC16MusicRecognition9MatchView_stackView;
    *(_QWORD *)&v13[v20] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v21 = OBJC_IVAR____TtC16MusicRecognition9MatchView_appleMusicButton;
    *(_QWORD *)&v13[v21] = objc_msgSend(objc_allocWithZone((Class)UIButton), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    *(_QWORD *)&v13[OBJC_IVAR____TtC16MusicRecognition9MatchView____lazy_storage___stackViewTrailingAnchorWithAppleMusicButton] = 0;
    *(_QWORD *)&v13[OBJC_IVAR____TtC16MusicRecognition9MatchView____lazy_storage___stackViewTrailingAnchorWithoutAppleMusicButton] = 0;

    v23.receiver = v13;
    v23.super_class = ObjectType;
    v22 = objc_msgSendSuper2(&v23, "initWithFrame:", a1, a2, a3, a4);
    sub_10008F624();

  }
  else
  {
    __break(1u);
  }
}

void sub_10008F624()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  Swift::String v5;
  Swift::String v6;
  void *object;
  NSString v8;
  void *v9;
  NSString v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  double v15;
  NSString v16;
  id v17;
  double v18;
  NSString v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  void *v55;
  Class isa;
  Swift::String v57;

  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v1 = *(void **)&v0[OBJC_IVAR____TtC16MusicRecognition9MatchView_stackView];
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v0, "addSubview:", v1);
  v2 = *(void **)&v0[OBJC_IVAR____TtC16MusicRecognition9MatchView_titleLabel];
  objc_msgSend(v1, "addArrangedSubview:", v2);
  v3 = *(void **)&v0[OBJC_IVAR____TtC16MusicRecognition9MatchView_artistLabel];
  objc_msgSend(v1, "addArrangedSubview:", v3);
  objc_msgSend(v1, "setAxis:", 1);
  objc_msgSend(v1, "setDistribution:", 0);
  objc_msgSend(v1, "setAlignment:", 0);
  v4 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v57._object = (void *)0xE000000000000000;
  v5._object = (void *)0x80000001000DC190;
  v5._countAndFlagsBits = 0xD000000000000031;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v57._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v57)._object;

  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v1, "setAccessibilityHint:", v8);

  objc_msgSend(v1, "setIsAccessibilityElement:", 1);
  v9 = *(void **)&v0[OBJC_IVAR____TtC16MusicRecognition9MatchView_albumArtView];
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v0, "addSubview:", v9);
  if (qword_1001161B0 != -1)
    swift_once(&qword_1001161B0, sub_100080534);
  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setAccessibilityIdentifier:", v10);

  objc_msgSend(v9, "setIsAccessibilityElement:", 0);
  v11 = objc_msgSend(v9, "layer");
  objc_msgSend(v11, "setCompositingFilter:", kCAFilterScreenBlendMode);

  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v12 = (void *)objc_opt_self(UIFont);
  v13 = objc_msgSend(v12, "systemFontOfSize:weight:", 16.0, UIFontWeightSemibold);
  objc_msgSend(v2, "setFont:", v13);

  v14 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  objc_msgSend(v2, "setTextColor:", v14);

  objc_msgSend(v2, "setNumberOfLines:", 2);
  LODWORD(v15) = 1132068864;
  objc_msgSend(v2, "setContentCompressionResistancePriority:forAxis:", 0, v15);
  if (qword_1001161A8 != -1)
    swift_once(&qword_1001161A8, sub_10008050C);
  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setAccessibilityIdentifier:", v16);

  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v17 = objc_msgSend(v12, "systemFontOfSize:weight:", 16.0, UIFontWeightMedium);
  objc_msgSend(v3, "setFont:", v17);

  if (qword_100116250 != -1)
    swift_once(&qword_100116250, sub_10008F090);
  objc_msgSend(v3, "setTextColor:", qword_10011B1C0);
  LODWORD(v18) = 1132068864;
  objc_msgSend(v3, "setContentCompressionResistancePriority:forAxis:", 0, v18);
  if (qword_1001161A0 != -1)
    swift_once(&qword_1001161A0, sub_1000804E0);
  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "setAccessibilityIdentifier:", v19);

  sub_100090160();
  sub_100090594();
  v20 = 0.0;
  if ((sub_10009DC2C() & 1) != 0)
    v21 = -5.0;
  else
    v21 = 0.0;
  if ((sub_10009DC2C() & 1) != 0)
    v20 = -2.0;
  if ((sub_10009DC2C() & 1) != 0)
    v22 = -26.0;
  else
    v22 = -17.0;
  v55 = (void *)objc_opt_self(NSLayoutConstraint);
  v23 = sub_100004F7C(&qword_100116D90);
  v24 = swift_allocObject(v23, 120, 7);
  *(_OWORD *)(v24 + 16) = xmmword_1000D6100;
  v25 = objc_msgSend(v9, "leadingAnchor");
  v26 = objc_msgSend(v0, "leadingAnchor");
  v27 = objc_msgSend(v25, "constraintEqualToAnchor:", v26);

  *(_QWORD *)(v24 + 32) = v27;
  v28 = objc_msgSend(v9, "widthAnchor");
  v29 = objc_msgSend(v0, "heightAnchor");
  v30 = objc_msgSend(v28, "constraintEqualToAnchor:constant:", v29, v21);

  *(_QWORD *)(v24 + 40) = v30;
  v31 = objc_msgSend(v9, "heightAnchor");
  v32 = objc_msgSend(v0, "heightAnchor");
  v33 = objc_msgSend(v31, "constraintEqualToAnchor:constant:", v32, v21);

  *(_QWORD *)(v24 + 48) = v33;
  v34 = objc_msgSend(v9, "centerYAnchor");
  v35 = objc_msgSend(v0, "centerYAnchor");
  v36 = objc_msgSend(v34, "constraintEqualToAnchor:", v35);

  *(_QWORD *)(v24 + 56) = v36;
  v37 = objc_msgSend(v1, "centerYAnchor");
  v38 = objc_msgSend(v0, "centerYAnchor");
  v39 = objc_msgSend(v37, "constraintEqualToAnchor:constant:", v38, -1.0);

  *(_QWORD *)(v24 + 64) = v39;
  v40 = objc_msgSend(v1, "leadingAnchor");
  v41 = objc_msgSend(v9, "trailingAnchor");
  v42 = objc_msgSend(v40, "constraintEqualToAnchor:constant:", v41, -3.0);

  *(_QWORD *)(v24 + 72) = v42;
  *(_QWORD *)(v24 + 80) = sub_10008F230();
  v43 = *(void **)&v0[OBJC_IVAR____TtC16MusicRecognition9MatchView_appleMusicButton];
  v44 = objc_msgSend(v43, "trailingAnchor");
  v45 = objc_msgSend(v0, "trailingAnchor");
  v46 = objc_msgSend(v44, "constraintEqualToAnchor:constant:", v45, v22);

  *(_QWORD *)(v24 + 88) = v46;
  v47 = objc_msgSend(v43, "centerYAnchor");
  v48 = objc_msgSend(v0, "centerYAnchor");
  v49 = objc_msgSend(v47, "constraintEqualToAnchor:constant:", v48, v20);

  *(_QWORD *)(v24 + 96) = v49;
  v50 = objc_msgSend(v43, "widthAnchor");
  v51 = objc_msgSend(v50, "constraintEqualToConstant:", 80.0);

  *(_QWORD *)(v24 + 104) = v51;
  v52 = objc_msgSend(v43, "heightAnchor");
  v53 = objc_msgSend(v52, "constraintEqualToConstant:", 30.0);

  *(_QWORD *)(v24 + 112) = v53;
  specialized Array._endMutation()(v54);
  sub_100010498(0, (unint64_t *)&qword_1001177E0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v24);
  objc_msgSend(v55, "activateConstraints:", isa);

}

void sub_10008FF48(void *a1, uint64_t a2)
{
  void *v2;
  void *v3;
  objc_class *ObjectType;
  void *v6;
  char *v7;
  id v8;
  id v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  objc_super v18;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v6 = (void *)objc_opt_self(NSBundle);
  v7 = v3;
  v8 = objc_msgSend(v6, "mainBundle");
  v9 = objc_allocWithZone((Class)BSUICAPackageView);
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v9, "initWithPackageName:inBundle:", v10, v8);

  if (v11)
  {
    *(_QWORD *)&v7[OBJC_IVAR____TtC16MusicRecognition9MatchView_albumArtView] = v11;
    v12 = OBJC_IVAR____TtC16MusicRecognition9MatchView_titleLabel;
    *(_QWORD *)&v7[v12] = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v13 = OBJC_IVAR____TtC16MusicRecognition9MatchView_artistLabel;
    *(_QWORD *)&v7[v13] = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v14 = OBJC_IVAR____TtC16MusicRecognition9MatchView_stackView;
    *(_QWORD *)&v7[v14] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v15 = OBJC_IVAR____TtC16MusicRecognition9MatchView_appleMusicButton;
    *(_QWORD *)&v7[v15] = objc_msgSend(objc_allocWithZone((Class)UIButton), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    *(_QWORD *)&v7[OBJC_IVAR____TtC16MusicRecognition9MatchView____lazy_storage___stackViewTrailingAnchorWithAppleMusicButton] = 0;
    *(_QWORD *)&v7[OBJC_IVAR____TtC16MusicRecognition9MatchView____lazy_storage___stackViewTrailingAnchorWithoutAppleMusicButton] = 0;

    v18.receiver = v7;
    v18.super_class = ObjectType;
    v16 = objc_msgSendSuper2(&v18, "initWithCoder:", a1);
    if (v16)
    {
      v17 = v16;
      sub_10008F624();

    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100090160()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  NSString v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  NSString v19;
  void *v20;
  id v21;
  Swift::String v22;
  Swift::String v23;
  void *object;
  NSString v25;
  id v26;
  Swift::String v27;
  Swift::String v28;
  void *v29;
  NSString v30;
  uint64_t v32;
  uint64_t v33;
  Swift::String v34;
  Swift::String v35;

  v1 = sub_100004F7C(&qword_10011A9B0);
  __chkstk_darwin(v1);
  v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UIButton.Configuration.CornerStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for UIButton.Configuration(0);
  v8 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void **)&v0[OBJC_IVAR____TtC16MusicRecognition9MatchView_appleMusicButton];
  objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  static UIButton.Configuration.filled()(objc_msgSend(v0, "addSubview:", v11));
  if (qword_100116268 != -1)
    swift_once(&qword_100116268, sub_10008F178);
  v12 = unk_10011B1E0;
  swift_bridgeObjectRetain(unk_10011B1E0);
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  v14 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v13);

  if (v14)
  {
    if (qword_100116260 != -1)
      swift_once(&qword_100116260, sub_10008F128);
    v15 = objc_msgSend(v14, "imageWithTintColor:", qword_10011B1D0);

  }
  else
  {
    v15 = 0;
  }
  UIButton.Configuration.image.setter(v15);
  if (qword_100116258 != -1)
    swift_once(&qword_100116258, sub_10008F0D8);
  v16 = qword_10011B1C8;
  v17 = (id)qword_10011B1C8;
  UIButton.Configuration.baseBackgroundColor.setter(v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v4);
  UIButton.Configuration.cornerStyle.setter(v7);
  v18 = v33;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v3, v10, v33);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v3, 0, 1, v18);
  UIButton.configuration.setter(v3);
  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v11, "setAccessibilityIdentifier:", v19);

  v20 = (void *)objc_opt_self(NSBundle);
  v21 = objc_msgSend(v20, "mainBundle");
  v22._countAndFlagsBits = 0xD00000000000001FLL;
  v34._object = (void *)0xE000000000000000;
  v22._object = (void *)0x80000001000DC1F0;
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  v34._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, (Swift::String_optional)0, (NSBundle)v21, v23, v34)._object;

  v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v11, "setAccessibilityLabel:", v25);

  v26 = objc_msgSend(v20, "mainBundle");
  v27._countAndFlagsBits = 0xD000000000000031;
  v35._object = (void *)0xE000000000000000;
  v27._object = (void *)0x80000001000DC210;
  v28._countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  v35._countAndFlagsBits = 0;
  v29 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, (Swift::String_optional)0, (NSBundle)v26, v28, v35)._object;

  v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v29);
  objc_msgSend(v11, "setAccessibilityHint:", v30);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v18);
}

id sub_100090594()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  Class isa;
  uint64_t v8;
  id v9;
  uint64_t v10;
  Class v11;

  v1 = v0;
  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v3 = sub_100004F7C(&qword_100116D90);
  v4 = swift_allocObject(v3, 40, 7);
  *(_OWORD *)(v4 + 16) = xmmword_1000D3AA0;
  v5 = sub_10008F230();
  *(_QWORD *)(v4 + 32) = v5;
  specialized Array._endMutation()(v5);
  v6 = v4;
  sub_100010498(0, (unint64_t *)&qword_1001177E0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v6);
  objc_msgSend(v2, "deactivateConstraints:", isa);

  v8 = swift_allocObject(v3, 40, 7);
  *(_OWORD *)(v8 + 16) = xmmword_1000D3AA0;
  v9 = sub_10008F320();
  *(_QWORD *)(v8 + 32) = v9;
  specialized Array._endMutation()(v9);
  v10 = v8;
  v11 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v10);
  objc_msgSend(v2, "activateConstraints:", v11);

  return objc_msgSend(v1, "setNeedsLayout");
}

uint64_t sub_1000906E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5[18] = a4;
  v5[19] = a5;
  v6 = type metadata accessor for URL(0);
  v5[20] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[21] = v7;
  v5[22] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100004F7C((uint64_t *)&unk_100118CE0);
  v5[23] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ContinuousClock(0);
  v5[24] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v5[25] = v10;
  v5[26] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MainActor(0);
  v5[27] = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  v5[28] = v12;
  v5[29] = v13;
  return swift_task_switch(sub_1000907C0, v12, v13);
}

uint64_t sub_1000907C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  id v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  char *v14;

  v1 = *(_QWORD *)(v0 + 144) + 16;
  swift_beginAccess(v1, v0 + 112, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 240) = Strong;
  if (Strong)
  {
    v3 = OBJC_IVAR____TtC16MusicRecognition9MatchView_albumArtView;
    *(_QWORD *)(v0 + 248) = OBJC_IVAR____TtC16MusicRecognition9MatchView_albumArtView;
    v4 = qword_100116278;
    v5 = *(id *)(Strong + v3);
    if (v4 != -1)
      swift_once(&qword_100116278, sub_10008F1CC);
    v6 = String._bridgeToObjectiveC()();
    objc_msgSend(v5, "setState:", v6);

    v7 = static Duration.seconds(_:)(0.2);
    v9 = v8;
    ContinuousClock.init()();
    v14 = (char *)&dword_100118C10 + dword_100118C10;
    v10 = (_QWORD *)swift_task_alloc(unk_100118C14);
    *(_QWORD *)(v0 + 256) = v10;
    *v10 = v0;
    v10[1] = sub_10009093C;
    return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))v14)(v7, v9, 0, 0, 1);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 216));
    v12 = *(_QWORD *)(v0 + 176);
    v13 = *(_QWORD *)(v0 + 184);
    swift_task_dealloc(*(_QWORD *)(v0 + 208));
    swift_task_dealloc(v13);
    swift_task_dealloc(v12);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10009093C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 256);
  v5 = *(_QWORD *)(*v1 + 200);
  v4 = *(_QWORD *)(*v1 + 208);
  v6 = *(_QWORD *)(*v1 + 192);
  *(_QWORD *)(*v1 + 264) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v0)
    v7 = sub_100090DFC;
  else
    v7 = sub_1000909C4;
  return swift_task_switch(v7, *(_QWORD *)(v2 + 224), *(_QWORD *)(v2 + 232));
}

uint64_t sub_1000909C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  NSString v5;
  uint64_t v6;
  id v7;
  NSString v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void *v20;
  void *v21;
  uint64_t v22;
  NSString v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  void *v34;
  void *v35;
  NSString v36;
  uint64_t v37;
  uint64_t v38;

  v2 = *(_QWORD *)(v0 + 240);
  v1 = *(_QWORD *)(v0 + 248);
  v3 = qword_100116280;
  v4 = *(id *)(v2 + v1);
  if (v3 != -1)
  {
    swift_once(&qword_100116280, sub_10008F1EC);
    v2 = *(_QWORD *)(v0 + 240);
    v1 = *(_QWORD *)(v0 + 248);
  }
  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(v4, "setState:", v5);

  v6 = qword_100116270;
  v7 = *(id *)(v2 + v1);
  if (v6 != -1)
    swift_once(&qword_100116270, sub_10008F1A8);
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(v7, "publishedObjectWithName:", v8);

  if (v9)
  {
    _bridgeAnyObjectToAny(_:)((_QWORD *)(v0 + 48), v9);
    swift_unknownObjectRelease(v9);
  }
  else
  {
    *(_OWORD *)(v0 + 48) = 0u;
    *(_OWORD *)(v0 + 64) = 0u;
  }
  sub_100091180(v0 + 48, v0 + 16);
  if (*(_QWORD *)(v0 + 40))
  {
    v10 = sub_100010498(0, qword_10011B2A0, CALayer_ptr);
    if ((swift_dynamicCast(v0 + 136, v0 + 16, (char *)&type metadata for Any + 8, v10, 6) & 1) != 0)
    {
      v11 = *(void **)(v0 + 152);
      *(_QWORD *)(v0 + 272) = *(_QWORD *)(v0 + 136);
      v12 = objc_msgSend(v11, "artworkURL");
      v13 = *(_QWORD *)(v0 + 184);
      if (v12)
      {
        v14 = v12;
        v16 = *(_QWORD *)(v0 + 168);
        v15 = *(_QWORD *)(v0 + 176);
        v17 = *(_QWORD *)(v0 + 160);
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v12);

        (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v13, v15, v17);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v17);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v13, 1, v17) != 1)
        {
          sub_10000526C(*(_QWORD *)(v0 + 184), (uint64_t *)&unk_100118CE0);
          v18 = (_QWORD *)swift_task_alloc(dword_10011D844);
          *(_QWORD *)(v0 + 280) = v18;
          *v18 = v0;
          v18[1] = sub_100090E5C;
          return sub_1000C96A4();
        }
      }
      else
      {
        (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 168) + 56))(*(_QWORD *)(v0 + 184), 1, 1, *(_QWORD *)(v0 + 160));
      }
      v22 = *(_QWORD *)(v0 + 184);
      swift_release(*(_QWORD *)(v0 + 216));
      sub_10000526C(v22, (uint64_t *)&unk_100118CE0);
      v23 = String._bridgeToObjectiveC()();
      v24 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v23);

      if (v24)
      {
        v25 = objc_msgSend(v24, "CGImage");

        if (v25)
        {
          type metadata accessor for CGImage(0);
          v27 = v26;
          *(_QWORD *)(v0 + 104) = v26;
          *(_QWORD *)(v0 + 80) = v25;
          v28 = sub_10000C9C8((_QWORD *)(v0 + 80), v26);
          v24 = (id)_bridgeAnythingToObjectiveC<A>(_:)(v28, v27);
          _s16MusicRecognition11AnyPlaylistVwxx_0((_QWORD *)(v0 + 80));
        }
        else
        {
          v24 = 0;
        }
      }
      v30 = *(_QWORD *)(v0 + 240);
      v29 = *(_QWORD *)(v0 + 248);
      objc_msgSend(*(id *)(v0 + 272), "setContents:", v24);
      swift_unknownObjectRelease(v24);
      v31 = *(void **)(v30 + v29);
      v32 = qword_100116288;
      v33 = v31;
      if (v32 != -1)
        swift_once(&qword_100116288, sub_10008F210);
      v34 = *(void **)(v0 + 272);
      v35 = *(void **)(v0 + 240);
      v36 = String._bridgeToObjectiveC()();
      objc_msgSend(v33, "setState:", v36);

    }
    else
    {
      v21 = *(void **)(v0 + 240);
      swift_release(*(_QWORD *)(v0 + 216));

    }
  }
  else
  {
    v20 = *(void **)(v0 + 240);
    swift_release(*(_QWORD *)(v0 + 216));

    sub_10000526C(v0 + 16, &qword_10011A350);
  }
  v37 = *(_QWORD *)(v0 + 176);
  v38 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 208));
  swift_task_dealloc(v38);
  swift_task_dealloc(v37);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100090DFC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 184);
  swift_release(*(_QWORD *)(v0 + 216));

  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100090E5C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 280);
  *(_QWORD *)(*v1 + 288) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_100090EB4, *(_QWORD *)(v2 + 224), *(_QWORD *)(v2 + 232));
}

uint64_t sub_100090EB4()
{
  uint64_t v0;
  id v1;
  double v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  void *v13;
  NSString v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(id *)(v0 + 288);
  *(_QWORD *)&v2 = swift_release(*(_QWORD *)(v0 + 216)).n128_u64[0];
  if (v1)
  {
    v3 = *(void **)(v0 + 288);
    v1 = objc_msgSend(v3, "CGImage", v2);

    if (v1)
    {
      type metadata accessor for CGImage(0);
      v5 = v4;
      *(_QWORD *)(v0 + 104) = v4;
      *(_QWORD *)(v0 + 80) = v1;
      v6 = sub_10000C9C8((_QWORD *)(v0 + 80), v4);
      v1 = (id)_bridgeAnythingToObjectiveC<A>(_:)(v6, v5);
      _s16MusicRecognition11AnyPlaylistVwxx_0((_QWORD *)(v0 + 80));
    }
  }
  v8 = *(_QWORD *)(v0 + 240);
  v7 = *(_QWORD *)(v0 + 248);
  objc_msgSend(*(id *)(v0 + 272), "setContents:", v1, v2);
  swift_unknownObjectRelease(v1);
  v9 = *(void **)(v8 + v7);
  v10 = qword_100116288;
  v11 = v9;
  if (v10 != -1)
    swift_once(&qword_100116288, sub_10008F210);
  v12 = *(void **)(v0 + 272);
  v13 = *(void **)(v0 + 240);
  v14 = String._bridgeToObjectiveC()();
  objc_msgSend(v11, "setState:", v14);

  v15 = *(_QWORD *)(v0 + 176);
  v16 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 208));
  swift_task_dealloc(v16);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for MatchView()
{
  return objc_opt_self(_TtC16MusicRecognition9MatchView);
}

uint64_t sub_1000910B0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000910D4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100091108(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_10011B294);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1000101B8;
  return sub_1000906E0(a1, v4, v5, v7, v6);
}

uint64_t sub_100091180(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004F7C(&qword_10011A350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for HistoryView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100018E38(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HistoryView);
}

uint64_t sub_1000911D4(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_1000DEA88, 1);
}

uint64_t sub_100091208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

uint64_t sub_100091220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v10 = type metadata accessor for _ConditionalContent.Storage(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))((char *)&v14 - v11, a1, a2);
  swift_storeEnumTagMultiPayload(v12, v10, 0);
  return _ConditionalContent<>.init(storage:)(v12, a2, a3, a4, a5);
}

uint64_t sub_1000912E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v10 = type metadata accessor for _ConditionalContent.Storage(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))((char *)&v14 - v11, a1, a3);
  swift_storeEnumTagMultiPayload(v12, v10, 1);
  return _ConditionalContent<>.init(storage:)(v12, a2, a3, a4, a5);
}

uint64_t sub_1000913A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;

  v9 = (int *)type metadata accessor for ShazamUpsellOverlayModifier(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100004F7C((uint64_t *)&unk_100118CE0);
  __chkstk_darwin(v12);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ShazamUpsellViewModel(0);
  __chkstk_darwin(v15);
  v17 = (uint64_t *)((char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100007C8C(a1, (uint64_t)v14, (uint64_t *)&unk_100118CE0);
  sub_10007416C((uint64_t)v14, v17);
  v18 = &v11[v9[6]];
  *(_QWORD *)v18 = swift_getKeyPath(&unk_1000D62C8, v19);
  v20 = sub_100004F7C(&qword_100116698);
  swift_storeEnumTagMultiPayload(v18, v20, 0);
  v21 = &v11[v9[7]];
  *(_QWORD *)v21 = swift_getKeyPath(&unk_1000D62F8, v22);
  v23 = sub_100004F7C(&qword_100116688);
  swift_storeEnumTagMultiPayload(v21, v23, 0);
  v29 = 0x4051800000000000;
  sub_100011F44(a2, a3);
  v24 = sub_10006BCD4();
  ScaledMetric.init(wrappedValue:)(&v29, &type metadata for Double, v24);
  sub_10000B4D4((uint64_t)v17, (uint64_t)v11, type metadata accessor for ShazamUpsellViewModel);
  v25 = (uint64_t *)&v11[v9[5]];
  *v25 = a2;
  v25[1] = a3;
  v26 = sub_100004F7C(&qword_10011B350);
  sub_10000B4D4((uint64_t)v11, a4 + *(int *)(v26 + 36), type metadata accessor for ShazamUpsellOverlayModifier);
  return sub_100007C8C(v4, a4, &qword_10011B368);
}

uint64_t sub_1000915B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _BOOL8 v20;
  int v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t WitnessTable;
  char *v27;
  void (*v28)(char *, char *, uint64_t);
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  _OWORD v74[10];
  _QWORD *v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  _QWORD *v86;
  unint64_t v87;
  uint64_t v88;

  v9 = type metadata accessor for LibraryListView(0, a2, a3, a4);
  v71 = *(char **)(v9 - 8);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v62 - v13;
  v15 = type metadata accessor for _ConditionalContent(0, &type metadata for LibraryEmptyView, v9);
  v72 = *(_QWORD *)(v15 - 8);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v62 - v17;
  v19 = sub_10005FD60(v16);
  v73 = a5;
  if (v19 > 1u)
  {
    v22 = sub_10005FFC0();
    v23 = (_QWORD *)swift_allocObject(&unk_10010C948, 40, 7);
    v70 = v15;
    v24 = (uint64_t)v23;
    v23[2] = a2;
    v23[3] = a3;
    v23[4] = a1;
    swift_retain(a1);
    swift_retain(v22);
    sub_100027B74(v25, 0, (uint64_t)sub_100092F08, v24, (uint64_t)v12);
    WitnessTable = swift_getWitnessTable(&unk_1000D2FD8, v9);
    v27 = v71;
    v28 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v71 + 2);
    v28(v14, v12, v9);
    v29 = (void (*)(char *, uint64_t))*((_QWORD *)v27 + 1);
    v29(v12, v9);
    v28(v12, v14, v9);
    v30 = v73;
    v31 = sub_100092F18();
    sub_1000912E4((uint64_t)v12, (uint64_t)&type metadata for LibraryEmptyView, v9, v31, WitnessTable);
    v29(v12, v9);
    v29(v14, v9);
    v32 = v70;
  }
  else
  {
    v71 = v18;
    v20 = sub_10005FDF4(v19);
    if (v20)
      v21 = 1;
    else
      v21 = sub_10005FE14(v20);
    LODWORD(v70) = v21;
    v33 = (_QWORD *)swift_allocObject(&unk_10010C970, 40, 7);
    v33[2] = a2;
    v33[3] = a3;
    v33[4] = a1;
    v34 = (_QWORD *)swift_allocObject(&unk_10010C998, 40, 7);
    v34[2] = a2;
    v34[3] = a3;
    v34[4] = a1;
    swift_retain_n(a1, 2);
    v35 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000015, 0x80000001000DC250);
    v67 = v36;
    v68 = v35;
    v66 = v37;
    v69 = v38;
    v39 = LocalizedStringKey.init(stringLiteral:)(0xD00000000000001BLL, 0x80000001000DC270);
    v63 = v40;
    v64 = v39;
    v42 = v41;
    v65 = v43;
    v44 = LocalizedStringKey.init(stringLiteral:)(0x4C5F4D415A414853, 0xEE00474E4944414FLL);
    v46 = v45;
    v48 = v47;
    v49 = v15;
    v51 = v50;
    v52 = LocalizedStringKey.init(stringLiteral:)(0x535F4D415A414853, 0xEB0000000054524FLL);
    *(_QWORD *)&v76 = v68;
    *((_QWORD *)&v76 + 1) = v67;
    LOBYTE(v77) = v66 & 1;
    *((_QWORD *)&v77 + 1) = v69;
    *(_QWORD *)&v78 = v64;
    *((_QWORD *)&v78 + 1) = v63;
    LOBYTE(v79) = v42 & 1;
    *((_QWORD *)&v79 + 1) = v65;
    *(_QWORD *)&v80 = v44;
    *((_QWORD *)&v80 + 1) = v46;
    LOBYTE(v81) = v48 & 1;
    *((_QWORD *)&v81 + 1) = v51;
    *(_QWORD *)&v82 = v52;
    v32 = v49;
    *((_QWORD *)&v82 + 1) = v53;
    LOBYTE(v83) = v54 & 1;
    *((_QWORD *)&v83 + 1) = v55;
    LOBYTE(v84) = v70 & 1;
    *((_QWORD *)&v84 + 1) = sub_100092F5C;
    *(_QWORD *)&v85 = v33;
    *((_QWORD *)&v85 + 1) = sub_100092F68;
    v86 = v34;
    v74[8] = v84;
    v74[9] = v85;
    v75 = v34;
    v30 = v73;
    v74[4] = v80;
    v74[5] = v81;
    v74[6] = v82;
    v74[7] = v83;
    v74[0] = v76;
    v74[1] = v77;
    v74[2] = v78;
    v74[3] = v79;
    v56 = sub_100092F18();
    v57 = swift_getWitnessTable(&unk_1000D2FD8, v9);
    v18 = v71;
    sub_100091220((uint64_t)v74, (uint64_t)&type metadata for LibraryEmptyView, v9, v56, v57);
    sub_100092F78(&v76);
  }
  v58 = v72;
  v59 = sub_100092F18();
  v60 = swift_getWitnessTable(&unk_1000D2FD8, v9);
  v87 = v59;
  v88 = v60;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v32);
  (*(void (**)(uint64_t, char *, uint64_t))(v58 + 16))(v30, v18, v32);
  return (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v18, v32);
}

uint64_t sub_100091A0C(uint64_t a1)
{
  uint64_t result;

  result = sub_10005FD60(a1);
  if (!(_BYTE)result)
    return sub_100060018(0xFu, 0xCu);
  return result;
}

uint64_t sub_100091A64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t *v3;

  return sub_1000915B8(*v3, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2, a3);
}

uint64_t sub_100091A74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t OpaqueTypeConformance2;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48[16];
  uint64_t v49;
  _QWORD v50[2];

  v47 = a2;
  v3 = type metadata accessor for NavigationBarItem.TitleDisplayMode(0);
  v45 = *(_QWORD *)(v3 - 8);
  v46 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100004F7C((uint64_t *)&unk_100118CE0);
  __chkstk_darwin(v6);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100004F7C(&qword_10011B368);
  __chkstk_darwin(v9);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_100004F7C(&qword_10011B350);
  __chkstk_darwin(v43);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100004F7C(&qword_10011B380);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_100004F7C(&qword_10011B338);
  v18 = __chkstk_darwin(v44);
  v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v11 = static HorizontalAlignment.center.getter(v18);
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 1;
  v21 = sub_100004F7C(&qword_10011B388);
  sub_100091E54(a1, (uint64_t)&v11[*(int *)(v21 + 44)]);
  v22 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v8, 1, 1, v22);
  v23 = swift_allocObject(&unk_10010CA58, 184, 7);
  v24 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v23 + 144) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v23 + 160) = v24;
  *(_QWORD *)(v23 + 176) = *(_QWORD *)(a1 + 160);
  v25 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v23 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v23 + 96) = v25;
  v26 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v23 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v23 + 128) = v26;
  v27 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v23 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v23 + 32) = v27;
  v28 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v23 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v23 + 64) = v28;
  sub_1000938DC((_QWORD *)a1);
  sub_1000913A8((uint64_t)v8, (uint64_t)sub_1000938B4, v23, (uint64_t)v13);
  swift_release(v23);
  sub_10000526C((uint64_t)v8, (uint64_t *)&unk_100118CE0);
  sub_10000526C((uint64_t)v11, &qword_10011B368);
  v30 = v45;
  v29 = v46;
  (*(void (**)(char *, _QWORD, uint64_t))(v45 + 104))(v5, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v46);
  v31 = sub_10009379C();
  View.navigationBarTitleDisplayMode(_:)(v5, v43, v31);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v29);
  sub_10000526C((uint64_t)v13, &qword_10011B350);
  v32 = objc_msgSend((id)objc_opt_self(UIColor), "systemGroupedBackgroundColor");
  v33 = Color.init(uiColor:)(v32);
  LOBYTE(v11) = static Edge.Set.all.getter(v33);
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v20, v17, v14);
  v34 = v44;
  v35 = &v20[*(int *)(v44 + 36)];
  *(_QWORD *)v35 = v33;
  v35[8] = (char)v11;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  v49 = a1;
  v36 = sub_100004F7C(&qword_10011B340);
  v37 = sub_1000936F0();
  v38 = sub_1000050C8(&qword_10011B370);
  v39 = sub_10000522C(&qword_10011B378, &qword_10011B370, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  v50[0] = v38;
  v50[1] = v39;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v50, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  View.toolbar<A>(content:)(sub_1000939A4, v48, v34, v36, v37, OpaqueTypeConformance2);
  return sub_10000526C((uint64_t)v20, &qword_10011B338);
}

uint64_t sub_100091E54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD v52[4];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  _OWORD v58[9];

  v4 = sub_100004F7C(&qword_10011B3F8);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_100004F7C(&qword_10011B400);
  v8 = __chkstk_darwin(v57);
  v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v53 - v11;
  v55 = sub_100004F7C(&qword_10011B408);
  __chkstk_darwin(v55);
  v14 = (_OWORD *)((char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = sub_100004F7C(&qword_10011B410);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v16);
  v21 = (char *)&v53 - v20;
  v56 = static Edge.Set.horizontal.getter(v19);
  v23 = EdgeInsets.init(_all:)(20.0);
  v25 = v24;
  v27 = v26;
  v29 = v28;
  if ((*(_BYTE *)(a1 + 128) & 1) != 0)
  {
    v37 = *(_QWORD *)(a1 + 64);
    v36 = *(_QWORD *)(a1 + 72);
    v38 = *(_BYTE *)(a1 + 80);
    v39 = *(_QWORD *)(a1 + 88);
    swift_bridgeObjectRetain(v36);
    v40 = swift_bridgeObjectRetain(v39);
    v41 = static Alignment.center.getter(v40);
    sub_1000346C0(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v58, 0.0, 1, INFINITY, 0, v41, v42, v37, v36, v38, v39);
    swift_bridgeObjectRelease(v39);
    swift_bridgeObjectRelease(v36);
    v43 = v58[7];
    v14[6] = v58[6];
    v14[7] = v43;
    v14[8] = v58[8];
    v44 = v58[3];
    v14[2] = v58[2];
    v14[3] = v44;
    v45 = v58[5];
    v14[4] = v58[4];
    v14[5] = v45;
    v46 = v58[1];
    *v14 = v58[0];
    v14[1] = v46;
    swift_storeEnumTagMultiPayload(v14, v55, 0);
    v47 = sub_100004F7C(&qword_10011B420);
    v48 = sub_100093CDC();
    v49 = sub_100093D48();
    _ConditionalContent<>.init(storage:)(v14, v47, v57, v48, v49);
  }
  else
  {
    v54 = v5;
    v30 = __chkstk_darwin(v22);
    __chkstk_darwin(v30);
    v52[2] = &protocol witness table for Text;
    v52[3] = &protocol witness table for EmptyView;
    v52[0] = &type metadata for EmptyView;
    v52[1] = &protocol witness table for Text;
    ((void (*)(uint64_t (*)@<X0>(uint64_t@<X8>), uint64_t, uint64_t (*)@<X0>(uint64_t@<X8>), _QWORD *, uint64_t (*)(_QWORD), _QWORD, void *, void *))ContentUnavailableView.init(label:description:actions:))(sub_100093C84, v31, sub_100093C8C, v52, nullsub_1, 0, &type metadata for Text, &type metadata for Text);
    v32 = sub_10000522C(&qword_10011B418, &qword_10011B3F8, (uint64_t)&protocol conformance descriptor for ContentUnavailableView<A, B, C>);
    View.accessibilityIdentifier(_:)(0xD000000000000013, 0x80000001000DC2D0, v4, v32);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v7, v4);
    sub_100093C94((uint64_t)v10, (uint64_t)v12);
    sub_100007C8C((uint64_t)v12, (uint64_t)v14, &qword_10011B400);
    swift_storeEnumTagMultiPayload(v14, v55, 1);
    v33 = sub_100004F7C(&qword_10011B420);
    v34 = sub_100093CDC();
    v35 = sub_100093D48();
    _ConditionalContent<>.init(storage:)(v14, v33, v57, v34, v35);
    sub_10000526C((uint64_t)v12, &qword_10011B400);
  }
  sub_100007C8C((uint64_t)v21, (uint64_t)v18, &qword_10011B410);
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = v56;
  *(double *)(a2 + 24) = v23;
  *(_QWORD *)(a2 + 32) = v25;
  *(_QWORD *)(a2 + 40) = v27;
  *(_QWORD *)(a2 + 48) = v29;
  *(_BYTE *)(a2 + 56) = 0;
  v50 = sub_100004F7C(&qword_10011B438);
  sub_100007C8C((uint64_t)v18, a2 + *(int *)(v50 + 48), &qword_10011B410);
  sub_10000526C((uint64_t)v21, &qword_10011B410);
  return sub_10000526C((uint64_t)v18, &qword_10011B410);
}

uint64_t sub_100092310@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;

  v3 = *a1;
  v4 = a1[3];
  swift_bridgeObjectRetain(a1[1]);
  swift_bridgeObjectRetain(v4);
  v5 = Text.init(_:tableName:bundle:comment:)(v3);
  v7 = v6;
  v9 = v8;
  v11 = v10 & 1;
  v12 = static Font.headline.getter(v5, v6);
  static Font.Weight.semibold.getter(v12);
  v13 = Font.weight(_:)(v12);
  swift_release(v12);
  v14 = Text.font(_:)(v13, v5, v7, v11, v9);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  swift_release(v13);
  sub_10000B64C(v5, v7, v11);
  result = swift_bridgeObjectRelease(v9);
  *(_QWORD *)a2 = v14;
  *(_QWORD *)(a2 + 8) = v16;
  *(_BYTE *)(a2 + 16) = v18 & 1;
  *(_QWORD *)(a2 + 24) = v20;
  return result;
}

uint64_t sub_100092428@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v3 = a1[4];
  v4 = a1[7];
  swift_bridgeObjectRetain(a1[5]);
  swift_bridgeObjectRetain(v4);
  result = Text.init(_:tableName:bundle:comment:)(v3);
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 16) = v7 & 1;
  *(_QWORD *)(a2 + 24) = v8;
  return result;
}

uint64_t sub_1000924B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t OpaqueTypeConformance2;
  uint64_t v16;
  _BYTE v18[16];
  uint64_t v19;
  _QWORD v20[4];

  v2 = type metadata accessor for ToolbarItemPlacement(0);
  __chkstk_darwin(v2);
  v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_100004F7C(&qword_10011B370);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static ToolbarItemPlacement.topBarTrailing.getter(v7);
  v19 = a1;
  v10 = sub_100004F7C(&qword_10011B390);
  v11 = sub_1000050C8(&qword_10011B398);
  v12 = sub_1000050C8(&qword_100117EC8);
  v13 = sub_1000939B4();
  v14 = sub_10000522C(&qword_100117EE8, &qword_100117EC8, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v20[0] = v11;
  v20[1] = v12;
  v20[2] = v13;
  v20[3] = v14;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v20, &opaque type descriptor for <<opaque return type of View.accessibilityShowsLargeContentViewer<A>(_:)>>, 1);
  ToolbarItem<>.init(placement:content:)(v4, sub_1000939AC, v18, v10, OpaqueTypeConformance2);
  v16 = sub_10000522C(&qword_10011B378, &qword_10011B370, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  static ToolbarContentBuilder.buildBlock<A>(_:)(v9, v5, v16);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_10009264C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  _BYTE v25[16];
  uint64_t v26;

  v24[1] = a2;
  v3 = sub_100004F7C(&qword_10011B3C0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100004F7C(&qword_10011B3B0);
  __chkstk_darwin(v7);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100004F7C(&qword_10011B398);
  __chkstk_darwin(v10);
  v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100004F7C(&qword_10011B3D8);
  v14 = sub_100093AD4();
  Button.init(action:label:)(nullsub_1, 0, sub_1000928A0, 0, v13, v14);
  KeyPath = swift_getKeyPath(&unk_1000D6238, v15);
  v17 = swift_allocObject(&unk_10010CA80, 17, 7);
  *(_BYTE *)(v17 + 16) = 1;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v9, v6, v3);
  v18 = (uint64_t *)&v9[*(int *)(v7 + 36)];
  *v18 = KeyPath;
  v18[1] = (uint64_t)sub_100093C3C;
  v18[2] = v17;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v19 = sub_100093A38();
  View.accessibilityIdentifier(_:)(0xD00000000000001ELL, 0x80000001000DC290, v7, v19);
  sub_10000526C((uint64_t)v9, &qword_10011B3B0);
  v26 = a1;
  v20 = sub_100004F7C(&qword_100117EC8);
  v21 = sub_1000939B4();
  v22 = sub_10000522C(&qword_100117EE8, &qword_100117EC8, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  View.accessibilityShowsLargeContentViewer<A>(_:)(sub_100093C54, v25, v10, v20, v21, v22);
  return sub_10000526C((uint64_t)v12, &qword_10011B398);
}

uint64_t sub_1000928A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v42 = a1;
  v1 = sub_100004F7C(&qword_100117F50);
  __chkstk_darwin(v1);
  v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SymbolVariants(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v40 - v9;
  v40 = sub_100004F7C(&qword_100116838);
  v11 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100004F7C(&qword_100117F20);
  __chkstk_darwin(v14);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_100004F7C(&qword_10011B3F0);
  __chkstk_darwin(v41);
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = Image.init(systemName:)(0xD000000000000013, 0x80000001000DA250);
  v19 = static SymbolVariants.circle.getter(v43);
  SymbolVariants.fill.getter(v19);
  v20 = *(void (**)(char *, uint64_t))(v5 + 8);
  v20(v10, v4);
  View.symbolVariant(_:)(v8, &type metadata for Image, &protocol witness table for Image);
  v20(v8, v4);
  v21 = swift_release(v43);
  static SymbolRenderingMode.palette.getter(v21);
  v22 = type metadata accessor for SymbolRenderingMode(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v3, 0, 1, v22);
  KeyPath = swift_getKeyPath(&unk_1000D6268, v23);
  v25 = (uint64_t *)&v16[*(int *)(v14 + 36)];
  v26 = sub_100004F7C(&qword_100117F30);
  sub_100007C8C((uint64_t)v3, (uint64_t)v25 + *(int *)(v26 + 28), &qword_100117F50);
  *v25 = KeyPath;
  v27 = v40;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v16, v13, v40);
  sub_10000526C((uint64_t)v3, &qword_100117F50);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v27);
  v28 = Color.init(_:bundle:)(0xD000000000000010, 0x80000001000DC2B0, 0);
  v29 = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemFillColor");
  v30 = Color.init(uiColor:)(v29);
  sub_100007C8C((uint64_t)v16, (uint64_t)v18, &qword_100117F20);
  v31 = (uint64_t *)&v18[*(int *)(v41 + 36)];
  *v31 = v28;
  v31[1] = v30;
  v32 = sub_10000526C((uint64_t)v16, &qword_100117F20);
  v33 = static Font.title2.getter(v32);
  static Font.Weight.semibold.getter(v33);
  v34 = Font.weight(_:)(v33);
  swift_release(v33);
  v36 = swift_getKeyPath(&unk_1000D6298, v35);
  v37 = v42;
  sub_100007C8C((uint64_t)v18, v42, &qword_10011B3F0);
  v38 = (uint64_t *)(v37 + *(int *)(sub_100004F7C(&qword_10011B3D8) + 36));
  *v38 = v36;
  v38[1] = v34;
  return sub_10000526C((uint64_t)v18, &qword_10011B3F0);
}

uint64_t sub_100092C30(uint64_t a1)
{
  uint64_t v1;
  uint64_t OpaqueTypeConformance2;
  _QWORD v4[4];
  _QWORD v5[2];

  v4[2] = a1;
  v1 = sub_100004F7C(&qword_100116838);
  v5[0] = &type metadata for Image;
  v5[1] = &protocol witness table for Image;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v5, &opaque type descriptor for <<opaque return type of View.symbolVariant(_:)>>, 1);
  return Label.init(title:icon:)(sub_100093C5C, v4, sub_10002E444, 0, &type metadata for Text, v1, &protocol witness table for Text, OpaqueTypeConformance2);
}

uint64_t sub_100092CC8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v3 = a1[12];
  v4 = a1[15];
  swift_bridgeObjectRetain(a1[13]);
  swift_bridgeObjectRetain(v4);
  result = Text.init(_:tableName:bundle:comment:)(v3);
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 16) = v7 & 1;
  *(_QWORD *)(a2 + 24) = v8;
  return result;
}

uint64_t sub_100092D58()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t OpaqueTypeConformance2;
  uint64_t v11;
  _QWORD v13[4];
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _OWORD v18[10];
  uint64_t v19;

  v1 = *(_OWORD *)(v0 + 144);
  v18[8] = *(_OWORD *)(v0 + 128);
  v18[9] = v1;
  v19 = *(_QWORD *)(v0 + 160);
  v2 = *(_OWORD *)(v0 + 80);
  v18[4] = *(_OWORD *)(v0 + 64);
  v18[5] = v2;
  v3 = *(_OWORD *)(v0 + 112);
  v18[6] = *(_OWORD *)(v0 + 96);
  v18[7] = v3;
  v4 = *(_OWORD *)(v0 + 16);
  v18[0] = *(_OWORD *)v0;
  v18[1] = v4;
  v5 = *(_OWORD *)(v0 + 48);
  v18[2] = *(_OWORD *)(v0 + 32);
  v18[3] = v5;
  v13[2] = v18;
  v6 = sub_100004F7C(&qword_10011B330);
  v7 = sub_1000050C8(&qword_10011B338);
  v8 = sub_1000050C8(&qword_10011B340);
  v9 = sub_1000936F0();
  v14 = sub_1000050C8(&qword_10011B370);
  v15 = sub_10000522C(&qword_10011B378, &qword_10011B370, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v14, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  v14 = v7;
  v15 = v8;
  v16 = v9;
  v17 = OpaqueTypeConformance2;
  v11 = swift_getOpaqueTypeConformance2(&v14, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
  return NavigationStack.init<>(root:)(sub_1000936E8, v13, v6, v11);
}

uint64_t sub_100092E80@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100092EAC(unsigned __int8 *a1)
{
  return EnvironmentValues.isEnabled.setter(*a1);
}

_BYTE *sub_100092ED0(_BYTE *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

uint64_t sub_100092EE4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100092F08()
{
  return sub_100060018(0xFu, 0xCu);
}

unint64_t sub_100092F18()
{
  unint64_t result;

  result = qword_10011B328;
  if (!qword_10011B328)
  {
    result = swift_getWitnessTable(&unk_1000D61E4, &type metadata for LibraryEmptyView);
    atomic_store(result, (unint64_t *)&qword_10011B328);
  }
  return result;
}

uint64_t sub_100092F5C()
{
  uint64_t v0;

  return sub_100091A0C(*(_QWORD *)(v0 + 32));
}

uint64_t sub_100092F68()
{
  return sub_100060018(6u, 0xAu);
}

_QWORD *sub_100092F78(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v2 = a1[3];
  v3 = a1[5];
  v4 = a1[7];
  v5 = a1[9];
  v6 = a1[11];
  v7 = a1[13];
  v8 = a1[17];
  v9 = a1[18];
  v10 = a1[19];
  v12 = a1[20];
  v13 = a1[1];
  swift_bridgeObjectRelease(a1[15]);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v13);
  sub_10005CCBC(v8, v9);
  sub_10005CCBC(v10, v12);
  return a1;
}

uint64_t destroy for LibraryEmptyView(_QWORD *a1)
{
  uint64_t result;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(a1[7]);
  swift_bridgeObjectRelease(a1[9]);
  swift_bridgeObjectRelease(a1[11]);
  swift_bridgeObjectRelease(a1[13]);
  result = swift_bridgeObjectRelease(a1[15]);
  if (a1[17])
    result = swift_release(a1[18]);
  if (a1[19])
    return swift_release(a1[20]);
  return result;
}

uint64_t initializeWithCopy for LibraryEmptyView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v5;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v8;
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v10;
  v11 = (_OWORD *)(a2 + 136);
  v20 = *(_QWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v13 = *(_QWORD *)(a2 + 88);
  v12 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = v13;
  *(_QWORD *)(a1 + 96) = v12;
  v14 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 104) = v14;
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v15 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 120) = v15;
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRetain(v15);
  if (v20)
  {
    v16 = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 136) = v20;
    *(_QWORD *)(a1 + 144) = v16;
    swift_retain(v16);
  }
  else
  {
    *(_OWORD *)(a1 + 136) = *v11;
  }
  v17 = *(_QWORD *)(a2 + 152);
  if (v17)
  {
    v18 = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 152) = v17;
    *(_QWORD *)(a1 + 160) = v18;
    swift_retain(v18);
  }
  else
  {
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  }
  return a1;
}

uint64_t assignWithCopy for LibraryEmptyView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v12 = *(_QWORD *)(a2 + 72);
  v13 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v14 = *(_QWORD *)(a2 + 88);
  v15 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v16 = *(_QWORD *)(a2 + 104);
  v17 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 104) = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v17);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v18 = *(_QWORD *)(a2 + 120);
  v19 = *(_QWORD *)(a1 + 120);
  *(_QWORD *)(a1 + 120) = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease(v19);
  v20 = *(_QWORD *)(a1 + 136);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  v21 = *(_QWORD *)(a2 + 136);
  if (v20)
  {
    if (v21)
    {
      v22 = *(_QWORD *)(a2 + 144);
      v23 = *(_QWORD *)(a1 + 144);
      *(_QWORD *)(a1 + 136) = v21;
      *(_QWORD *)(a1 + 144) = v22;
      swift_retain(v22);
      swift_release(v23);
      goto LABEL_8;
    }
    swift_release(*(_QWORD *)(a1 + 144));
  }
  else if (v21)
  {
    v24 = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 136) = v21;
    *(_QWORD *)(a1 + 144) = v24;
    swift_retain(v24);
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
LABEL_8:
  v25 = *(_QWORD *)(a2 + 152);
  if (!*(_QWORD *)(a1 + 152))
  {
    if (v25)
    {
      v28 = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 152) = v25;
      *(_QWORD *)(a1 + 160) = v28;
      swift_retain(v28);
      return a1;
    }
LABEL_14:
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    return a1;
  }
  if (!v25)
  {
    swift_release(*(_QWORD *)(a1 + 160));
    goto LABEL_14;
  }
  v26 = *(_QWORD *)(a2 + 160);
  v27 = *(_QWORD *)(a1 + 160);
  *(_QWORD *)(a1 + 152) = v25;
  *(_QWORD *)(a1 + 160) = v26;
  swift_retain(v26);
  swift_release(v27);
  return a1;
}

__n128 initializeWithTake for LibraryEmptyView(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_QWORD *)(a1 + 160) = *((_QWORD *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for LibraryEmptyView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_bridgeObjectRelease(v8);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 72);
  v11 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v10;
  swift_bridgeObjectRelease(v11);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v12 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease(v12);
  v13 = *(_QWORD *)(a2 + 104);
  v14 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v13;
  swift_bridgeObjectRelease(v14);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v15 = *(_QWORD *)(a1 + 120);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease(v15);
  v16 = *(_QWORD *)(a2 + 136);
  v17 = *(_QWORD *)(a1 + 136);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  if (v17)
  {
    if (v16)
    {
      v18 = *(_QWORD *)(a2 + 144);
      v19 = *(_QWORD *)(a1 + 144);
      *(_QWORD *)(a1 + 136) = v16;
      *(_QWORD *)(a1 + 144) = v18;
      swift_release(v19);
      goto LABEL_8;
    }
    swift_release(*(_QWORD *)(a1 + 144));
  }
  else if (v16)
  {
    v20 = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 136) = v16;
    *(_QWORD *)(a1 + 144) = v20;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
LABEL_8:
  v21 = *(_QWORD *)(a2 + 152);
  if (!*(_QWORD *)(a1 + 152))
  {
    if (v21)
    {
      v24 = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 152) = v21;
      *(_QWORD *)(a1 + 160) = v24;
      return a1;
    }
LABEL_14:
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    return a1;
  }
  if (!v21)
  {
    swift_release(*(_QWORD *)(a1 + 160));
    goto LABEL_14;
  }
  v22 = *(_QWORD *)(a2 + 160);
  v23 = *(_QWORD *)(a1 + 160);
  *(_QWORD *)(a1 + 152) = v21;
  *(_QWORD *)(a1 + 160) = v22;
  swift_release(v23);
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryEmptyView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 168))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryEmptyView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 168) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 168) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryEmptyView()
{
  return &type metadata for LibraryEmptyView;
}

uint64_t sub_100093658(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for LibraryListView(255, *a1, a1[1], a4);
  v5 = type metadata accessor for _ConditionalContent(255, &type metadata for LibraryEmptyView, v4);
  sub_100092F18();
  swift_getWitnessTable(&unk_1000D2FD8, v4);
  return swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v5);
}

uint64_t sub_1000936D8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000DEABC, 1);
}

uint64_t sub_1000936E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100091A74(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1000936F0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10011B348;
  if (!qword_10011B348)
  {
    v1 = sub_1000050C8(&qword_10011B338);
    v2[0] = sub_1000050C8(&qword_10011B350);
    v2[1] = sub_10009379C();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>, 1);
    sub_10000522C(&qword_10011A0E8, &qword_10011A0F0, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011B348);
  }
  return result;
}

unint64_t sub_10009379C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011B358;
  if (!qword_10011B358)
  {
    v1 = sub_1000050C8(&qword_10011B350);
    sub_10000522C(&qword_10011B360, &qword_10011B368, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_100004864(&qword_100117E58, type metadata accessor for ShazamUpsellOverlayModifier, (uint64_t)&unk_1000D8008);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011B358);
  }
  return result;
}

uint64_t sub_100093838()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[7]);
  swift_bridgeObjectRelease(v0[9]);
  swift_bridgeObjectRelease(v0[11]);
  swift_bridgeObjectRelease(v0[13]);
  swift_bridgeObjectRelease(v0[15]);
  swift_bridgeObjectRelease(v0[17]);
  if (v0[19])
    swift_release(v0[20]);
  if (v0[21])
    swift_release(v0[22]);
  return swift_deallocObject(v0, 184, 7);
}

uint64_t sub_1000938B4()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 168);
  if (v1)
    return v1();
  return result;
}

_QWORD *sub_1000938DC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v2 = a1[3];
  v3 = a1[5];
  v4 = a1[7];
  v5 = a1[9];
  v6 = a1[11];
  v7 = a1[13];
  v8 = a1[15];
  v9 = a1[17];
  v10 = a1[18];
  v12 = a1[20];
  v13 = a1[19];
  swift_bridgeObjectRetain(a1[1]);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  sub_100011F44(v9, v10);
  sub_100011F44(v13, v12);
  return a1;
}

uint64_t sub_1000939A4()
{
  uint64_t v0;

  return sub_1000924B8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1000939AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10009264C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1000939B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011B3A0;
  if (!qword_10011B3A0)
  {
    v1 = sub_1000050C8(&qword_10011B398);
    sub_100093A38();
    sub_100004864((unint64_t *)&qword_100116570, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011B3A0);
  }
  return result;
}

unint64_t sub_100093A38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011B3A8;
  if (!qword_10011B3A8)
  {
    v1 = sub_1000050C8(&qword_10011B3B0);
    sub_10000522C(&qword_10011B3B8, &qword_10011B3C0, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_10000522C(&qword_10011B3C8, &qword_10011B3D0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011B3A8);
  }
  return result;
}

unint64_t sub_100093AD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011B3E0;
  if (!qword_10011B3E0)
  {
    v1 = sub_1000050C8(&qword_10011B3D8);
    sub_100093B58();
    sub_10000522C(&qword_100116538, &qword_100116540, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011B3E0);
  }
  return result;
}

unint64_t sub_100093B58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011B3E8;
  if (!qword_10011B3E8)
  {
    v1 = sub_1000050C8(&qword_10011B3F0);
    sub_100031CA0();
    sub_10000522C(&qword_1001178F8, &qword_100117900, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier2<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011B3E8);
  }
  return result;
}

uint64_t sub_100093BDC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100093C08(unsigned __int8 *a1)
{
  return EnvironmentValues.isEnabled.setter(*a1);
}

uint64_t sub_100093C2C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

_BYTE *sub_100093C3C(_BYTE *result)
{
  uint64_t v1;

  *result &= ~*(_BYTE *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_100093C54()
{
  uint64_t v0;

  return sub_100092C30(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100093C5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100092CC8(*(_QWORD **)(v1 + 16), a1);
}

uint64_t sub_100093C84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100092310(*(uint64_t **)(v1 + 16), a1);
}

uint64_t sub_100093C8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100092428(*(_QWORD **)(v1 + 16), a1);
}

uint64_t sub_100093C94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004F7C(&qword_10011B400);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100093CDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011B428;
  if (!qword_10011B428)
  {
    v1 = sub_1000050C8(&qword_10011B420);
    sub_100025078();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011B428);
  }
  return result;
}

unint64_t sub_100093D48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011B430;
  if (!qword_10011B430)
  {
    v1 = sub_1000050C8(&qword_10011B400);
    sub_10000522C(&qword_10011B418, &qword_10011B3F8, (uint64_t)&protocol conformance descriptor for ContentUnavailableView<A, B, C>);
    sub_100004864((unint64_t *)&qword_100116570, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011B430);
  }
  return result;
}

uint64_t sub_100093DE4()
{
  return sub_10000522C(&qword_10011B440, qword_10011B448, (uint64_t)&protocol conformance descriptor for NavigationStack<A, B>);
}

uint64_t sub_100093E1C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.Int8 + 64;
  v4[1] = &unk_1000D6358;
  v4[2] = (char *)&value witness table for () + 64;
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 4, v4, a1 + 32);
    return 0;
  }
  return result;
}

_QWORD *sub_100093EB0(_BYTE *a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);

  v3 = a1;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 24) & (unint64_t)~v6) + *(_QWORD *)(v5 + 64) > 0x18)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain(v9);
  }
  else
  {
    *a1 = *(_BYTE *)a2;
    a1[1] = *((_BYTE *)a2 + 1);
    v10 = (_QWORD *)((unint64_t)(a1 + 9) & 0xFFFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + 9) & 0xFFFFFFFFFFFFFFF8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = ((unint64_t)v10 + v6 + 16) & ~v6;
    v14 = ((unint64_t)v11 + v6 + 16) & ~v6;
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain(v12);
    v15(v13, v14, v4);
  }
  return v3;
}

uint64_t sub_100093F94(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = (a1 + 9) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v3 + 8));
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((v3 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_BYTE *sub_100093FDC(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = (_QWORD *)((unint64_t)(a1 + 9) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_QWORD *)((unint64_t)(a2 + 9) & 0xFFFFFFFFFFFFFFF8);
  v6 = v5[1];
  *v4 = *v5;
  v4[1] = v6;
  v7 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)v4 + v9 + 16) & ~v9;
  v11 = ((unint64_t)v5 + v9 + 16) & ~v9;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  swift_retain(v6);
  v12(v10, v11, v7);
  return a1;
}

_BYTE *sub_10009406C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  v5 = (_QWORD *)((unint64_t)(a1 + 9) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)((unint64_t)(a2 + 9) & 0xFFFFFFFFFFFFFFF8);
  v7 = v6[1];
  v8 = v5[1];
  *v5 = *v6;
  v5[1] = v7;
  swift_retain(v7);
  swift_release(v8);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 24))(((unint64_t)v5 + *(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), ((unint64_t)v6 + *(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

_BYTE *sub_100094100(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = (_OWORD *)((unint64_t)(a1 + 9) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_OWORD *)((unint64_t)(a2 + 9) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 32))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_BYTE *sub_100094170(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  unint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  a1[1] = a2[1];
  v5 = (unint64_t)(a1 + 9) & 0xFFFFFFFFFFFFFFF8;
  v6 = (_OWORD *)((unint64_t)(a2 + 9) & 0xFFFFFFFFFFFFFFF8);
  v7 = *(_QWORD *)(v5 + 8);
  *(_OWORD *)v5 = *v6;
  swift_release(v7);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 40))((*(unsigned __int8 *)(v8 + 80) + 16 + v5) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), ((unint64_t)v6 + *(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_1000941F4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  unint64_t *v15;
  unint64_t v16;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 24) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      v15 = (unint64_t *)((a1 + 9) & 0xFFFFFFFFFFFFFFF8);
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)v15 + v7 + 16) & ~v7);
      v16 = *v15;
      if (v16 >= 0xFFFFFFFF)
        LODWORD(v16) = -1;
      return (v16 + 1);
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1000942C8 + 4 * byte_1000D6330[(v9 - 1)]))();
}

void sub_100094340(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = &dword_100000004;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = &_mh_execute_header.magic + 1;
    }
  }
  else
  {
    v8 = 0;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t type metadata accessor for ObservableScrollView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100018E38(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ObservableScrollView);
}

uint64_t sub_10009454C(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_1000DEB7C, 1);
}

void sub_100094580(uint64_t a1@<X0>, double *a2@<X8>)
{
  swift_getWitnessTable(&unk_1000D63F8, a1);
  *a2 = sub_1000B3674();
}

uint64_t sub_1000945C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[16];
  uint64_t v46;
  uint64_t v47;
  unsigned __int8 *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  _QWORD v53[5];

  v4 = v3;
  v44 = a3;
  v5 = *(_QWORD *)(a1 + 24);
  v36 = *(_QWORD *)(a1 + 16);
  v6 = type metadata accessor for ObservableScrollView.OffsetPreferenceKey(255, v36, v5, a2);
  WitnessTable = swift_getWitnessTable(&unk_1000D6414, v6);
  v38 = v6;
  v40 = WitnessTable;
  v9 = type metadata accessor for SizeModifier(255, v6, WitnessTable, v8);
  v10 = type metadata accessor for ModifiedContent(255, v36, v9);
  v53[2] = v5;
  v53[3] = swift_getWitnessTable(&unk_1000D4F10, v9);
  v35 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v10);
  v11 = type metadata accessor for ScrollView(0, v10, v35);
  v37 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v35 - v12;
  v14 = sub_1000050C8(&qword_10011B4D0);
  v15 = type metadata accessor for ModifiedContent(0, v11, v14);
  v43 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v35 - v16;
  v39 = sub_100043B64();
  v41 = type metadata accessor for _PreferenceActionModifier(255, v6, WitnessTable, v39);
  v18 = type metadata accessor for ModifiedContent(0, v15, v41);
  v42 = *(_QWORD *)(v18 - 8);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (char *)&v35 - v22;
  v24 = v4[1];
  v46 = v36;
  v47 = v5;
  v48 = v4;
  ScrollView.init(_:showsIndicators:content:)(*v4, v24, sub_100094BBC, v45, v10, v35);
  v53[0] = 0x69566C6C6F726373;
  v53[1] = 0xEA00000000007765;
  v25 = swift_getWitnessTable(&protocol conformance descriptor for ScrollView<A>, v11);
  View.coordinateSpace<A>(name:)(v53, v11, &type metadata for String, v25, &protocol witness table for String);
  swift_bridgeObjectRelease(0xEA00000000007765);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v11);
  v27 = *((_QWORD *)v4 + 1);
  v26 = *((_QWORD *)v4 + 2);
  v28 = swift_allocObject(&unk_10010CB70, 32, 7);
  *(_QWORD *)(v28 + 16) = v27;
  *(_QWORD *)(v28 + 24) = v26;
  v29 = sub_100094C10();
  v51 = v25;
  v52 = v29;
  swift_retain(v26);
  v30 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v15);
  View.onPreferenceChange<A>(_:perform:)(v38, sub_100094BEC, v28, v15, v38, v30, v40, v39);
  v31 = swift_release(v28);
  (*(void (**)(char *, uint64_t, __n128))(v43 + 8))(v17, v15, v31);
  v32 = swift_getWitnessTable(&protocol conformance descriptor for _PreferenceActionModifier<A>, v41);
  v49 = v30;
  v50 = v32;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v18);
  sub_100093E10((uint64_t)v21, v18, (uint64_t)v23);
  v33 = *(void (**)(char *, uint64_t))(v42 + 8);
  v33(v21, v18);
  sub_100091208((uint64_t)v23, v18, v44);
  return ((uint64_t (*)(char *, uint64_t))v33)(v23, v18);
}

uint64_t sub_100094960@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t WitnessTable;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];

  v25 = a3;
  v5 = type metadata accessor for CoordinateSpace(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (uint64_t *)((char *)&WitnessTable - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for ObservableScrollView.OffsetPreferenceKey(255, a1, a2, v9);
  WitnessTable = swift_getWitnessTable(&unk_1000D6414, v10);
  v23 = type metadata accessor for SizeModifier(255, v10, WitnessTable, v11);
  v12 = type metadata accessor for ModifiedContent(0, a1, v23);
  v24 = *(_QWORD *)(v12 - 8);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&WitnessTable - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&WitnessTable - v16;
  type metadata accessor for ObservableScrollView(0, a1, a2, v18);
  v28[0] = 0x69566C6C6F726373;
  v28[1] = 0xEA00000000007765;
  AnyHashable.init<A>(_:)(v8, v28, &type metadata for String, &protocol witness table for String);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for CoordinateSpace.named(_:), v5);
  sub_1000B6088(v10, (uint64_t)v8, (uint64_t)sub_100094BA4, 0, a1, v10, a2, WitnessTable, (uint64_t)v15);
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  v19 = swift_getWitnessTable(&unk_1000D4F10, v23);
  v26 = a2;
  v27 = v19;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v12);
  sub_100093E10((uint64_t)v15, v12, (uint64_t)v17);
  v20 = *(void (**)(char *, uint64_t))(v24 + 8);
  v20(v15, v12);
  sub_100091208((uint64_t)v17, v12, v25);
  return ((uint64_t (*)(char *, uint64_t))v20)(v17, v12);
}

void sub_100094BA4(double *a1@<X8>, double a2@<D1>)
{
  *a1 = a2;
}

uint64_t type metadata accessor for ObservableScrollView.OffsetPreferenceKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100018E38(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ObservableScrollView.OffsetPreferenceKey);
}

uint64_t sub_100094BBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100094960(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_100094BC8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100094BEC(double *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(double))(v1 + 16))(*a1);
}

unint64_t sub_100094C10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011B4D8[0];
  if (!qword_10011B4D8[0])
  {
    v1 = sub_1000050C8(&qword_10011B4D0);
    result = swift_getWitnessTable(&protocol conformance descriptor for _CoordinateSpaceModifier<A>, v1);
    atomic_store(result, qword_10011B4D8);
  }
  return result;
}

uint64_t sub_100094C5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

uint64_t sub_100094C64(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t WitnessTable;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *a1;
  v5 = type metadata accessor for ObservableScrollView.OffsetPreferenceKey(255, *a1, a1[1], a4);
  WitnessTable = swift_getWitnessTable(&unk_1000D6414, v5);
  v8 = type metadata accessor for SizeModifier(255, v5, WitnessTable, v7);
  v9 = type metadata accessor for ModifiedContent(255, v4, v8);
  swift_getWitnessTable(&unk_1000D4F10, v8);
  v10 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v9);
  v11 = type metadata accessor for ScrollView(255, v9, v10);
  v12 = sub_1000050C8(&qword_10011B4D0);
  v13 = type metadata accessor for ModifiedContent(255, v11, v12);
  v14 = sub_100043B64();
  v15 = type metadata accessor for _PreferenceActionModifier(255, v5, WitnessTable, v14);
  v16 = type metadata accessor for ModifiedContent(255, v13, v15);
  swift_getWitnessTable(&protocol conformance descriptor for ScrollView<A>, v11);
  sub_100094C10();
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v13);
  swift_getWitnessTable(&protocol conformance descriptor for _PreferenceActionModifier<A>, v15);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
}

uint64_t sub_100094DCC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_getWitnessTable(&unk_1000D6414, a2);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

double sub_100094DF8(uint64_t a1)
{
  __n128 v2;
  void *v3;
  unsigned int v4;
  double result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;

  v8 = 0;
  v9 = 0.0;
  v6 = 0;
  v7 = 0;
  sub_100094FD8();
  v2 = swift_retain(a1);
  v3 = (void *)UIColor.init(_:)(v2);
  v4 = objc_msgSend(v3, "getRed:green:blue:alpha:", &v9, &v8, &v7, &v6);

  result = 0.0;
  if (v4)
    return v9;
  return result;
}

double sub_100094EAC(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;

  v2 = sub_100094DF8(a1);
  if (v2 >= 0.04045)
    v3 = pow((v2 + 0.055) / 1.055, 2.4);
  else
    v3 = v2 / 12.92;
  sub_100094DF8(a1);
  if (v4 >= 0.04045)
    v5 = pow((v4 + 0.055) / 1.055, 2.4);
  else
    v5 = v4 / 12.92;
  sub_100094DF8(a1);
  if (v6 >= 0.04045)
    v7 = pow((v6 + 0.055) / 1.055, 2.4);
  else
    v7 = v6 / 12.92;
  return v3 * 0.2126 + v5 * 0.7152 + v7 * 0.0722;
}

unint64_t sub_100094FD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100117388;
  if (!qword_100117388)
  {
    v1 = objc_opt_self(UIColor);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100117388);
  }
  return result;
}

uint64_t sub_100095014(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Song(0);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_100095050(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Song(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_100095084(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1000950C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_10009510C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_100095150(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_100095194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000951A0);
}

uint64_t sub_1000951A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Song(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1000951DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000951E8);
}

uint64_t sub_1000951E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Song(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MusicKitSong(uint64_t a1)
{
  uint64_t result;

  result = qword_10011B5B8;
  if (!qword_10011B5B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MusicKitSong);
  return result;
}

uint64_t sub_100095264(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for Song(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1000952CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = sub_100004F7C(&qword_10011B5F0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = Song.previewAssets.getter(v3);
  if (!v6)
    goto LABEL_7;
  v7 = v6;
  v8 = *(_QWORD *)(v6 + 16);
  v9 = type metadata accessor for PreviewAsset(0);
  v10 = *(_QWORD *)(v9 - 8);
  if (v8)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v5, v7 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), v9);
    v11 = 0;
  }
  else
  {
    v11 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v5, v11, 1, v9);
  swift_bridgeObjectRelease(v7);
  type metadata accessor for PreviewAsset(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v5, 1, v9) == 1)
  {
    sub_100095428((uint64_t)v5);
LABEL_7:
    v12 = type metadata accessor for URL(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a1, 1, 1, v12);
  }
  PreviewAsset.url.getter();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v5, v9);
}

uint64_t sub_100095428(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100004F7C(&qword_10011B5F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100095468()
{
  char *v0;
  char *v1;
  id v2;
  NSURL *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;

  v1 = v0;
  v2 = objc_allocWithZone((Class)AVURLAsset);
  URL._bridgeToObjectiveC()(v3);
  v5 = v4;
  v17 = objc_msgSend(v2, "initWithURL:options:", v4, 0);

  v6 = objc_msgSend(objc_allocWithZone((Class)AVPlayerItem), "initWithAsset:", v17);
  objc_msgSend(v6, "setPreferredForwardBufferDuration:", 0.0);
  v7 = objc_msgSend(objc_allocWithZone((Class)AVQueuePlayer), "initWithPlayerItem:", v6);
  objc_msgSend(v7, "setMuted:", 1);
  v8 = objc_msgSend((id)objc_opt_self(AVPlayerLayer), "playerLayerWithPlayer:", v7);
  v9 = OBJC_IVAR____TtC16MusicRecognitionP33_CD8D04CF73D338E472373D718D0990B827AnimatedArtworkPlayerUIView_playerLayer;
  v10 = *(void **)&v1[OBJC_IVAR____TtC16MusicRecognitionP33_CD8D04CF73D338E472373D718D0990B827AnimatedArtworkPlayerUIView_playerLayer];
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicRecognitionP33_CD8D04CF73D338E472373D718D0990B827AnimatedArtworkPlayerUIView_playerLayer] = v8;

  v11 = *(void **)&v1[v9];
  if (v11)
  {
    v12 = (void *)objc_opt_self(AVPlayerLooper);
    v13 = v11;
    v14 = objc_msgSend(v12, "playerLooperWithPlayer:templateItem:", v7, v6);
    v15 = *(void **)&v1[OBJC_IVAR____TtC16MusicRecognitionP33_CD8D04CF73D338E472373D718D0990B827AnimatedArtworkPlayerUIView_playbackLooper];
    *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicRecognitionP33_CD8D04CF73D338E472373D718D0990B827AnimatedArtworkPlayerUIView_playbackLooper] = v14;

    objc_msgSend(v7, "play");
    v16 = objc_msgSend(v1, "layer");
    objc_msgSend(v16, "addSublayer:", v13);

    v6 = v13;
    v7 = v16;
  }

}

uint64_t type metadata accessor for AnimatedArtworkPlayerUIView()
{
  return objc_opt_self(_TtC16MusicRecognitionP33_CD8D04CF73D338E472373D718D0990B827AnimatedArtworkPlayerUIView);
}

uint64_t sub_1000957C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000957D0);
}

uint64_t sub_1000957D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000957E0);
}

uint64_t type metadata accessor for AnimatedArtworkPlayerView(uint64_t a1)
{
  return sub_100078C78(a1, qword_10011B688, (uint64_t)&nominal type descriptor for AnimatedArtworkPlayerView);
}

uint64_t sub_1000957FC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000DED08, 1);
}

id sub_10009580C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  objc_class *v6;
  char *v7;
  id v8;
  id v9;
  objc_super v11;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  v5 = *(void **)(v0 + *(int *)(type metadata accessor for AnimatedArtworkPlayerViewRepresentable(0) + 20));
  v6 = (objc_class *)type metadata accessor for AnimatedArtworkPlayerUIView();
  v7 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v7[OBJC_IVAR____TtC16MusicRecognitionP33_CD8D04CF73D338E472373D718D0990B827AnimatedArtworkPlayerUIView_playerLayer] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC16MusicRecognitionP33_CD8D04CF73D338E472373D718D0990B827AnimatedArtworkPlayerUIView_playbackLooper] = 0;
  v11.receiver = v7;
  v11.super_class = v6;
  v8 = v5;
  v9 = objc_msgSendSuper2(&v11, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_100095468();

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v9;
}

uint64_t sub_100095920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100095EF4(&qword_10011B758, (uint64_t)&unk_1000D65F8);
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100095980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100095EF4(&qword_10011B758, (uint64_t)&unk_1000D65F8);
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1000959E0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100095EF4(&qword_10011B758, (uint64_t)&unk_1000D65F8);
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

id sub_100095A14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  id v7;

  v5 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v2, v5);
  v7 = *(id *)(v2 + *(int *)(a1 + 20));
  *(_QWORD *)(a2 + *(int *)(type metadata accessor for AnimatedArtworkPlayerViewRepresentable(0) + 20)) = v7;
  return v7;
}

uint64_t type metadata accessor for AnimatedArtworkPlayerViewRepresentable(uint64_t a1)
{
  return sub_100078C78(a1, qword_10011B718, (uint64_t)&nominal type descriptor for AnimatedArtworkPlayerViewRepresentable);
}

uint64_t *sub_100095A98(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v11);
  }
  else
  {
    v7 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    v10 = v9;
  }
  return a1;
}

void sub_100095B24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

}

uint64_t sub_100095B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v9 = v8;
  return a1;
}

uint64_t sub_100095BC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  return a1;
}

uint64_t sub_100095C30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100095C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  return a1;
}

uint64_t sub_100095CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100095CFC);
}

uint64_t sub_100095D00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100095D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100095D88);
}

uint64_t sub_100095D8C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_100095E04(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100095E78()
{
  return sub_100095EF4(&qword_10011B750, (uint64_t)&unk_1000D65A8);
}

uint64_t sub_100095E9C()
{
  return sub_100095EF4(&qword_10011B750, (uint64_t)&unk_1000D65A8);
}

uint64_t sub_100095EC0(uint64_t a1)
{
  uint64_t result;

  result = sub_100095EF4(&qword_10011B758, (uint64_t)&unk_1000D65F8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100095EF4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for AnimatedArtworkPlayerViewRepresentable(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_100095F34()
{
  uint64_t v0;
  double latitude;
  double longitude;
  double v3;
  double v4;
  double latitudeDelta;
  double longitudeDelta;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  id v14;
  unint64_t v15;
  Class isa;
  uint64_t v17;
  CLLocationCoordinate2D v18;
  MKCoordinateRegion v19;

  objc_msgSend(*(id *)(v0 + 40), "coordinate");
  latitude = v18.latitude;
  longitude = v18.longitude;
  v19 = MKCoordinateRegionMakeWithDistance(v18, 1000.0, 1000.0);
  v3 = v19.center.latitude;
  v4 = v19.center.longitude;
  latitudeDelta = v19.span.latitudeDelta;
  longitudeDelta = v19.span.longitudeDelta;
  v7 = sub_100004F7C(&qword_10011B858);
  inited = swift_initStackObject(v7, &v17);
  *(_OWORD *)(inited + 16) = xmmword_1000D32A0;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MKLaunchOptionsMapCenterKey);
  *(_QWORD *)(inited + 40) = v9;
  v10 = (void *)objc_opt_self(NSValue);
  *(_QWORD *)(inited + 48) = objc_msgSend(v10, "valueWithMKCoordinate:", v3, v4);
  *(_QWORD *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(MKLaunchOptionsMapSpanKey);
  *(_QWORD *)(inited + 64) = v11;
  *(_QWORD *)(inited + 72) = objc_msgSend(v10, "valueWithMKCoordinateSpan:", latitudeDelta, longitudeDelta);
  v12 = sub_1000B4234(inited);
  v13 = objc_msgSend(objc_allocWithZone((Class)MKPlacemark), "initWithCoordinate:addressDictionary:", 0, latitude, longitude);
  v14 = objc_msgSend(objc_allocWithZone((Class)MKMapItem), "initWithPlacemark:", v13);
  v15 = sub_100096108(v12);
  swift_bridgeObjectRelease(v12);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v15);
  objc_msgSend(v14, "openInMapsWithLaunchOptions:", isa);

}

unint64_t sub_100096108(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  unint64_t result;
  int64_t i;
  char *v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  int64_t v15;
  char *v16;
  uint64_t *v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;
  void *v27;
  unint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  unint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  _OWORD v47[2];

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_100004F7C(&qword_10011B860);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v39 = v1 + 64;
  v4 = -1 << *(_BYTE *)(v1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 64);
  v38 = (unint64_t)(63 - v4) >> 6;
  v7 = &v44;
  v8 = &v46;
  result = swift_bridgeObjectRetain(v1);
  i = 0;
  v11 = (char *)&type metadata for Any + 8;
  if (v6)
    goto LABEL_10;
LABEL_11:
  v21 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v21 >= v38)
    goto LABEL_32;
  v22 = *(_QWORD *)(v39 + 8 * v21);
  v23 = i + 1;
  if (!v22)
  {
    v23 = i + 2;
    if (i + 2 >= v38)
      goto LABEL_32;
    v22 = *(_QWORD *)(v39 + 8 * v23);
    if (!v22)
    {
      v23 = i + 3;
      if (i + 3 >= v38)
        goto LABEL_32;
      v22 = *(_QWORD *)(v39 + 8 * v23);
      if (!v22)
      {
        v23 = i + 4;
        if (i + 4 >= v38)
          goto LABEL_32;
        v22 = *(_QWORD *)(v39 + 8 * v23);
        if (!v22)
        {
          v24 = i + 5;
          if (i + 5 < v38)
          {
            v22 = *(_QWORD *)(v39 + 8 * v24);
            if (v22)
            {
              v23 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v23 = v24 + 1;
              if (__OFADD__(v24, 1))
                goto LABEL_36;
              if (v23 >= v38)
                break;
              v22 = *(_QWORD *)(v39 + 8 * v23);
              ++v24;
              if (v22)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_100049CD8(v1);
          return (unint64_t)v3;
        }
      }
    }
  }
LABEL_26:
  v6 = (v22 - 1) & v22;
  v20 = __clz(__rbit64(v22)) + (v23 << 6);
  for (i = v23; ; v20 = v19 | (i << 6))
  {
    v25 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v20);
    v26 = v25[1];
    v27 = *(void **)(*(_QWORD *)(v1 + 56) + 8 * v20);
    v42 = *v25;
    v43 = v26;
    v41 = v27;
    v28 = sub_100096890();
    swift_bridgeObjectRetain(v26);
    v29 = v27;
    swift_dynamicCast(v7, &v41, v28, v11, 7);
    v30 = v42;
    v31 = v43;
    sub_1000968CC(v7, v8);
    sub_1000968CC(v8, v47);
    sub_1000968CC(v47, &v45);
    result = sub_10009D490(v30, v31);
    v32 = result;
    if ((v33 & 1) != 0)
    {
      v40 = v6;
      v12 = v8;
      v13 = v7;
      v14 = v1;
      v15 = i;
      v16 = v11;
      v17 = (uint64_t *)(v3[6] + 16 * result);
      swift_bridgeObjectRelease(v17[1]);
      *v17 = v30;
      v17[1] = v31;
      v11 = v16;
      i = v15;
      v1 = v14;
      v7 = v13;
      v8 = v12;
      v6 = v40;
      v18 = (_QWORD *)(v3[7] + 32 * v32);
      _s16MusicRecognition11AnyPlaylistVwxx_0(v18);
      result = (unint64_t)sub_1000968CC(&v45, v18);
      if (!v40)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v34 = (uint64_t *)(v3[6] + 16 * result);
    *v34 = v30;
    v34[1] = v31;
    result = (unint64_t)sub_1000968CC(&v45, (_OWORD *)(v3[7] + 32 * result));
    v35 = v3[2];
    v36 = __OFADD__(v35, 1);
    v37 = v35 + 1;
    if (v36)
      goto LABEL_34;
    v3[2] = v37;
    if (!v6)
      goto LABEL_11;
LABEL_10:
    v19 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_10009645C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));

  swift_release(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));

  v1 = v0 + OBJC_IVAR____TtC16MusicRecognition19LocationModuleModel___observationRegistrar;
  v2 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_1000964E0()
{
  uint64_t v0;

  sub_10009645C();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100096504()
{
  return type metadata accessor for LocationModuleModel(0);
}

uint64_t type metadata accessor for LocationModuleModel(uint64_t a1)
{
  uint64_t result;

  result = qword_10011B790;
  if (!qword_10011B790)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LocationModuleModel);
  return result;
}

uint64_t sub_100096548(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[9];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = &unk_1000D6708;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[4] = &unk_1000D6708;
  v4[5] = &unk_1000D6720;
  v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for ObservationRegistrar(319);
  if (v3 <= 0x3F)
  {
    v4[8] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 9, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1000965EC(uint64_t a1, char *a2, void *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  Class isa;
  NSString v18;
  id v19;
  id v20;
  id v21;
  id v22;
  char *v23;
  Class v24;
  Class v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  Class v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v5 = v4;
  v40 = a2;
  v9 = type metadata accessor for Date(0);
  v41 = *(_QWORD *)(v9 - 8);
  v42 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Locale(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v5 + 72) = 0;
  *(_QWORD *)(v5 + 80) = 0;
  v16 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
  static Locale.current.getter();
  isa = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  objc_msgSend(v16, "setLocale:", isa);

  v18 = String._bridgeToObjectiveC()();
  objc_msgSend(v16, "setLocalizedDateFormatFromTemplate:", v18);

  *(_QWORD *)(v5 + 88) = v16;
  v19 = objc_msgSend(objc_allocWithZone((Class)NSRelativeDateTimeFormatter), "init");
  v20 = objc_msgSend(v19, "setUnitsStyle:", 0);
  *(_QWORD *)(v5 + 96) = v19;
  ObservationRegistrar.init()(v20);
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 40) = a3;
  *(_QWORD *)(v5 + 48) = a4;
  swift_retain(a1);
  v21 = a3;
  swift_retain(a4);
  v22 = v19;
  v23 = v40;
  v24 = Date._bridgeToObjectiveC()().super.isa;
  static Date.now.getter();
  v25 = Date._bridgeToObjectiveC()().super.isa;
  v26 = v42;
  v27 = *(void (**)(char *, uint64_t))(v41 + 8);
  v27(v11, v42);
  v28 = objc_msgSend(v22, "localizedStringForDate:relativeToDate:", v24, v25);

  v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v31 = v30;

  *(_QWORD *)(v5 + 24) = v29;
  *(_QWORD *)(v5 + 32) = v31;
  v32 = *(id *)(v5 + 88);
  v33 = Date._bridgeToObjectiveC()().super.isa;
  v34 = objc_msgSend(v32, "stringFromDate:", v33);

  v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
  v37 = v36;

  v27(v23, v26);
  *(_QWORD *)(v5 + 56) = v35;
  *(_QWORD *)(v5 + 64) = v37;
  return v5;
}

unint64_t sub_100096890()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011B868[0];
  if (!qword_10011B868[0])
  {
    v1 = objc_opt_self(NSValue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, qword_10011B868);
  }
  return result;
}

_OWORD *sub_1000968CC(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1000968DC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 80));
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    result = swift_initClassMetadata2(a1, 0, 1, &v4, a1 + 96);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_10009694C()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t type metadata accessor for ConditionalValue.Storage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100018E38(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ConditionalValue.Storage);
}

_QWORD *sub_100096994(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  v3 = a2[1];
  v4 = a1[1];
  a1[1] = v3;
  swift_retain(v3);
  swift_release(v4);
  return a1;
}

_QWORD *sub_1000969D4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  v4 = a1[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release(v4);
  return a1;
}

uint64_t sub_100096A04(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_100096A4C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for ConditionalValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100018E38(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ConditionalValue);
}

uint64_t sub_100096A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return static DynamicProperty._makeProperty<A>(in:container:fieldOffset:inputs:)(a1, a2, a3, a4, a6, a5);
}

double sub_100096AAC()
{
  return sub_100096AD4((uint64_t)&unk_1000D6930, (uint64_t)&unk_1000D6958);
}

double sub_100096AC0()
{
  return sub_100096AD4((uint64_t)&unk_1000D68E8, (uint64_t)&unk_1000D6910);
}

double sub_100096AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  double v8;

  KeyPath = swift_getKeyPath(a1, a2);
  v6 = swift_getKeyPath(a2, v5);
  static Published.subscript.getter(&v8, v2, KeyPath, v6);
  swift_release(KeyPath);
  swift_release(v6);
  return v8;
}

double sub_100096B3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  double v7;

  KeyPath = swift_getKeyPath(&unk_1000D6978, a2);
  v5 = swift_getKeyPath(&unk_1000D69A0, v4);
  static Published.subscript.getter(&v7, v2, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  return v7;
}

uint64_t sub_100096BAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  Swift::String v11;
  uint64_t countAndFlagsBits;
  uint64_t v14;
  Swift::String v15;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_previewController + 24);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_previewController + 32);
  sub_10000C9C8((_QWORD *)(v0 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_previewController), v1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  KeyPath = swift_getKeyPath(&unk_1000D69C0, v4);
  v7 = swift_getKeyPath(&unk_1000D69E8, v6);
  static Published.subscript.getter(&v14, v3, KeyPath, v7);
  swift_release(v3);
  swift_release(KeyPath);
  swift_release(v7);
  LODWORD(KeyPath) = v14;
  v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  if ((_DWORD)KeyPath == 1)
    v9 = 0x80000001000DC610;
  else
    v9 = 0x80000001000DC5F0;
  v15._object = (void *)0xE000000000000000;
  v10 = 0xD000000000000015;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v15._countAndFlagsBits = 0;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)(&v9 - 1), (Swift::String_optional)0, (NSBundle)v8, v11, v15)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_100096CE0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(uint64_t, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  Swift::String *v24;
  id v25;
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, __n128);
  __n128 v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[3];
  Swift::String v63;

  v4 = v3;
  v54 = a3;
  v61 = a2;
  v6 = sub_100004F7C(&qword_10011BA90);
  v59 = *(_QWORD *)(v6 - 8);
  v60 = v6;
  __chkstk_darwin(v6);
  v58 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100004F7C(&qword_10011BA98);
  v56 = *(_QWORD *)(v8 - 8);
  v57 = v8;
  __chkstk_darwin(v8);
  v55 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100004F7C(&qword_10011BA88);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100004F7C(&qword_100119BE0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = v4 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel__previewProgress;
  v62[0] = 0;
  Published.init(initialValue:)(v62, &type metadata for Double);
  v19 = *(void (**)(uint64_t, char *, uint64_t))(v15 + 32);
  v19(v18, v17, v14);
  v20 = v4 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel__backgroundOpacity;
  v62[0] = 0x3FF0000000000000;
  Published.init(initialValue:)(v62, &type metadata for Double);
  v19(v20, v17, v14);
  v21 = v4 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel__previewButtonWidth;
  v62[0] = 0;
  Published.init(initialValue:)(v62, &type metadata for CGFloat);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v21, v13, v10);
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_10005BBAC((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    v22 = &_swiftEmptySetSingleton;
  }
  v23 = v54;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_cancellables) = v22;
  v24 = (Swift::String *)(v4 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_mediaPlaybackToolTipLabel);
  v25 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v63._object = (void *)0xE000000000000000;
  v26._object = (void *)0x80000001000DC5C0;
  v26._countAndFlagsBits = 0xD000000000000020;
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  v63._countAndFlagsBits = 0;
  v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(v26, (Swift::String_optional)0, (NSBundle)v25, v27, v63);

  *v24 = v28;
  sub_100007AE0((uint64_t)a1, v4 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_previewController);
  v29 = v61;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_buttonColor) = v61;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_backgroundColor) = v23;
  v30 = a1[3];
  v31 = a1[4];
  sub_10000C9C8(a1, v30);
  v32 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v31 + 8);
  swift_retain(v29);
  v33 = swift_retain(v23);
  v34 = v32(v30, v31, v33);
  swift_beginAccess(v34 + OBJC_IVAR____TtC16MusicRecognition27SongPreviewStatusController__progress, v62, 33, 0);
  v35 = v55;
  Published.projectedValue.getter(v14);
  swift_endAccess(v62);
  swift_release(v34);
  v36 = swift_allocObject(&unk_10010CE80, 24, 7);
  swift_weakInit(v36 + 16, v4);
  v37 = sub_1000975B4(&qword_10011BAA0, &qword_10011BA98);
  v38 = v57;
  v39 = Publisher<>.sink(receiveValue:)(sub_1000975A4, v36, v57, v37);
  v40 = swift_release(v36);
  (*(void (**)(char *, uint64_t, __n128))(v56 + 8))(v35, v38, v40);
  v41 = v4 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_cancellables;
  swift_beginAccess(v4 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_cancellables, v62, 33, 0);
  AnyCancellable.store(in:)(v41);
  swift_endAccess(v62);
  swift_release(v39);
  v42 = a1[3];
  v43 = a1[4];
  sub_10000C9C8(a1, v42);
  v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 8))(v42, v43);
  swift_beginAccess(v44 + OBJC_IVAR____TtC16MusicRecognition27SongPreviewStatusController__playbackStatus, v62, 33, 0);
  v45 = sub_100004F7C(&qword_100119BE8);
  v46 = v58;
  Published.projectedValue.getter(v45);
  swift_endAccess(v62);
  swift_release(v44);
  v47 = swift_allocObject(&unk_10010CE80, 24, 7);
  swift_weakInit(v47 + 16, v4);
  v48 = sub_1000975B4(&qword_10011BAA8, &qword_10011BA90);
  v49 = v60;
  v50 = Publisher<>.sink(receiveValue:)(sub_1000975AC, v47, v60, v48);
  v51 = swift_release(v47);
  (*(void (**)(char *, uint64_t, __n128))(v59 + 8))(v46, v49, v51);
  swift_beginAccess(v41, v62, 33, 0);
  AnyCancellable.store(in:)(v41);
  swift_endAccess(v62);
  swift_release(v50);
  swift_release(v29);
  swift_release(v23);
  _s16MusicRecognition11AnyPlaylistVwxx_0(a1);
  return v4;
}

uint64_t sub_10009721C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v6 = result;
    KeyPath = swift_getKeyPath(&unk_1000D6930, v5);
    v9 = swift_getKeyPath(&unk_1000D6958, v8);
    v10 = v2;
    return static Published.subscript.setter(&v10, v6, KeyPath, v9);
  }
  return result;
}

uint64_t sub_1000972A4(_BYTE *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];

  v2 = a2 + 16;
  if (*a1)
  {
    swift_beginAccess(v2, v12, 0, 0);
    result = swift_weakLoadStrong(v2);
    if (!result)
      return result;
    v5 = result;
    KeyPath = swift_getKeyPath(&unk_1000D68E8, v4);
    v8 = swift_getKeyPath(&unk_1000D6910, v7);
    v11 = 0;
  }
  else
  {
    swift_beginAccess(v2, v12, 0, 0);
    result = swift_weakLoadStrong(v2);
    if (!result)
      return result;
    v5 = result;
    KeyPath = swift_getKeyPath(&unk_1000D68E8, v9);
    v8 = swift_getKeyPath(&unk_1000D6910, v10);
    v11 = 0x3FF0000000000000;
  }
  return static Published.subscript.setter(&v11, v5, KeyPath, v8);
}

uint64_t sub_100097374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;

  v1 = v0 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel__previewProgress;
  v2 = sub_100004F7C(&qword_100119BE0);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel__backgroundOpacity, v2);
  v4 = v0 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel__previewButtonWidth;
  v5 = sub_100004F7C(&qword_10011BA88);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_buttonColor));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_backgroundColor));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_cancellables));
  _s16MusicRecognition11AnyPlaylistVwxx_0((_QWORD *)(v0
                                                   + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_previewController));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_mediaPlaybackToolTipLabel
                                      + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100097468()
{
  return type metadata accessor for SongPreviewPlaybackViewModel(0);
}

uint64_t type metadata accessor for SongPreviewPlaybackViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_10011B9C0;
  if (!qword_10011B9C0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SongPreviewPlaybackViewModel);
  return result;
}

void sub_1000974AC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[8];

  sub_100061FEC(319, &qword_100119B48, (uint64_t)&type metadata for Double);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = v6[0];
    sub_100061FEC(319, (unint64_t *)&unk_10011B9D0, (uint64_t)&type metadata for CGFloat);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      v6[3] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[4] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v6[6] = "(";
      v6[7] = &unk_1000D6898;
      swift_updateClassMetadata2(a1, 256, 8, v6, a1 + 80);
    }
  }
}

uint64_t sub_100097580()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000975A4(uint64_t *a1)
{
  uint64_t v1;

  return sub_10009721C(a1, v1);
}

uint64_t sub_1000975AC(_BYTE *a1)
{
  uint64_t v1;

  return sub_1000972A4(a1, v1);
}

uint64_t sub_1000975B4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_1000050C8(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for Published<A>.Publisher, v4);
    atomic_store(result, a1);
  }
  return result;
}

double sub_1000975F4@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, double *a3@<X8>)
{
  return sub_100097630(a1, a2, (uint64_t)&unk_1000D6930, (uint64_t)&unk_1000D6958, a3);
}

uint64_t sub_100097608(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1000976BC(a1, a2, a3, a4, (uint64_t)&unk_1000D6930, (uint64_t)&unk_1000D6958);
}

double sub_10009761C@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, double *a3@<X8>)
{
  return sub_100097630(a1, a2, (uint64_t)&unk_1000D68E8, (uint64_t)&unk_1000D6910, a3);
}

double sub_100097630@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, double *a5@<X8>)
{
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  double result;
  double v12;

  v7 = *a1;
  KeyPath = swift_getKeyPath(a3, a2);
  v10 = swift_getKeyPath(a4, v9);
  static Published.subscript.getter(&v12, v7, KeyPath, v10);
  swift_release(KeyPath);
  swift_release(v10);
  result = v12;
  *a5 = v12;
  return result;
}

uint64_t sub_1000976A8(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1000976BC(a1, a2, a3, a4, (uint64_t)&unk_1000D68E8, (uint64_t)&unk_1000D6910);
}

uint64_t sub_1000976BC(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v7 = *a1;
  v8 = *a2;
  KeyPath = swift_getKeyPath(a5, a2);
  v11 = swift_getKeyPath(a6, v10);
  v13 = v7;
  swift_retain(v8);
  return static Published.subscript.setter(&v13, v8, KeyPath, v11);
}

double sub_100097730@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, double *a3@<X8>)
{
  return sub_100097630(a1, a2, (uint64_t)&unk_1000D68E8, (uint64_t)&unk_1000D6910, a3);
}

uint64_t sub_100097754(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1000976BC(a1, a2, a3, a4, (uint64_t)&unk_1000D68E8, (uint64_t)&unk_1000D6910);
}

double sub_100097778@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, double *a3@<X8>)
{
  return sub_100097630(a1, a2, (uint64_t)&unk_1000D6930, (uint64_t)&unk_1000D6958, a3);
}

uint64_t sub_10009779C(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1000976BC(a1, a2, a3, a4, (uint64_t)&unk_1000D6930, (uint64_t)&unk_1000D6958);
}

uint64_t sub_1000977D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_previewController + 24);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_previewController + 32);
  sub_10000C9C8((_QWORD *)(v0 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_previewController), v1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  KeyPath = swift_getKeyPath(&unk_1000D69C0, v4);
  v7 = swift_getKeyPath(&unk_1000D69E8, v6);
  static Published.subscript.getter(&v10, v3, KeyPath, v7);
  swift_release(v3);
  swift_release(KeyPath);
  swift_release(v7);
  if (v10 == 1)
  {
    if (qword_100116100 != -1)
      swift_once(&qword_100116100, sub_10008018C);
    v8 = &qword_100124610;
  }
  else
  {
    if (qword_1001160F8 != -1)
      swift_once(&qword_1001160F8, sub_100080170);
    v8 = &qword_100124600;
  }
  return *v8;
}

uint64_t sub_1000978E8(uint64_t a1)
{
  return sub_100034F88(a1, (SEL *)&selRef_labelColor, &qword_10011BAB0);
}

uint64_t sub_1000978FC(uint64_t a1)
{
  return sub_100034F88(a1, (SEL *)&selRef_systemBackgroundColor, &qword_10011BAB8);
}

uint64_t sub_100097910()
{
  uint64_t result;

  result = static Color.white.getter();
  qword_10011BAC0 = result;
  return result;
}

uint64_t sub_10009792C()
{
  uint64_t result;

  result = static Color.black.getter();
  qword_10011BAC8 = result;
  return result;
}

uint64_t sub_100097948(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  uint64_t v36;
  uint64_t v37;

  v37 = a1;
  v2 = type metadata accessor for ColorScheme(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100004F7C(&qword_100118670);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v36 - v10;
  v12 = v1 + *(int *)(type metadata accessor for TrackPageMetadata(0) + 32);
  sub_100007C8C(v12, (uint64_t)v11, &qword_100118670);
  v13 = type metadata accessor for AnyAlbum(0);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48);
  if (v14(v11, 1, v13) == 1)
  {
    sub_10000526C((uint64_t)v11, &qword_100118670);
LABEL_12:
    if (qword_100116290 != -1)
      swift_once(&qword_100116290, sub_1000978E8);
    v26 = qword_10011BAB0;
    swift_retain(qword_10011BAB0);
    return v26;
  }
  v36 = v2;
  v15 = &v11[*(int *)(v13 + 20)];
  v16 = *((_QWORD *)v15 + 3);
  v17 = *((_QWORD *)v15 + 4);
  sub_10000C9C8(v15, v16);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 16))(v16, v17);
  sub_10000B600((uint64_t)v11, type metadata accessor for AnyAlbum);
  if (!v18)
    goto LABEL_12;
  sub_100007C8C(v12, (uint64_t)v9, &qword_100118670);
  if (v14(v9, 1, v13) == 1)
  {
    sub_10000526C((uint64_t)v9, &qword_100118670);
LABEL_11:
    swift_release(v18);
    goto LABEL_12;
  }
  v19 = &v9[*(int *)(v13 + 20)];
  v20 = *((_QWORD *)v19 + 3);
  v21 = *((_QWORD *)v19 + 4);
  sub_10000C9C8(v19, v20);
  v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 24))(v20, v21);
  sub_10000B600((uint64_t)v9, type metadata accessor for AnyAlbum);
  if (!v22)
    goto LABEL_11;
  v23 = v36;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for ColorScheme.light(_:), v36);
  v24 = static ColorScheme.== infix(_:_:)(v37, v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v23);
  if ((v24 & 1) != 0)
  {
    if (qword_1001162A0 != -1)
      swift_once(&qword_1001162A0, sub_100097910);
    v25 = &qword_10011BAC0;
  }
  else
  {
    if (qword_1001162A8 != -1)
      swift_once(&qword_1001162A8, sub_10009792C);
    v25 = &qword_10011BAC8;
  }
  v28 = *v25;
  swift_retain(*v25);
  v29 = sub_100094EAC(v18);
  v30 = sub_100094EAC(v28);
  swift_release(v28);
  if (v30 >= v29)
    v31 = v29;
  else
    v31 = v30;
  if (v29 > v30)
    v32 = v29;
  else
    v32 = v30;
  if ((v32 + 0.05) / (v31 + 0.05) >= 3.0)
  {
    v33 = sub_100094EAC(v18);
    v34 = sub_100094EAC(v22);
    if (v34 >= v33)
      v35 = v33;
    else
      v35 = v34;
    if (v33 > v34)
      v34 = v33;
    if ((v34 + 0.05) / (v35 + 0.05) >= 4.5)
    {
      swift_release(v22);
      return v18;
    }
    else
    {
      if (qword_100116290 != -1)
        swift_once(&qword_100116290, sub_1000978E8);
      v26 = qword_10011BAB0;
      swift_retain(qword_10011BAB0);
      swift_release(v18);
      swift_release(v22);
    }
  }
  else
  {
    swift_release(v18);
    return v22;
  }
  return v26;
}

uint64_t sub_100097D38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  uint64_t v36;
  uint64_t v37;

  v37 = a1;
  v2 = type metadata accessor for ColorScheme(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100004F7C(&qword_100118670);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v36 - v10;
  v12 = v1 + *(int *)(type metadata accessor for TrackPageMetadata(0) + 32);
  sub_100007C8C(v12, (uint64_t)v11, &qword_100118670);
  v13 = type metadata accessor for AnyAlbum(0);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48);
  if (v14(v11, 1, v13) == 1)
  {
    sub_10000526C((uint64_t)v11, &qword_100118670);
LABEL_12:
    if (qword_100116298 != -1)
      swift_once(&qword_100116298, sub_1000978FC);
    v26 = qword_10011BAB8;
    swift_retain(qword_10011BAB8);
    return v26;
  }
  v36 = v2;
  v15 = &v11[*(int *)(v13 + 20)];
  v16 = *((_QWORD *)v15 + 3);
  v17 = *((_QWORD *)v15 + 4);
  sub_10000C9C8(v15, v16);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 16))(v16, v17);
  sub_10000B600((uint64_t)v11, type metadata accessor for AnyAlbum);
  if (!v18)
    goto LABEL_12;
  sub_100007C8C(v12, (uint64_t)v9, &qword_100118670);
  if (v14(v9, 1, v13) == 1)
  {
    sub_10000526C((uint64_t)v9, &qword_100118670);
LABEL_11:
    swift_release(v18);
    goto LABEL_12;
  }
  v19 = &v9[*(int *)(v13 + 20)];
  v20 = *((_QWORD *)v19 + 3);
  v21 = *((_QWORD *)v19 + 4);
  sub_10000C9C8(v19, v20);
  v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 24))(v20, v21);
  sub_10000B600((uint64_t)v9, type metadata accessor for AnyAlbum);
  if (!v22)
    goto LABEL_11;
  v23 = v36;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for ColorScheme.light(_:), v36);
  v24 = static ColorScheme.== infix(_:_:)(v37, v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v23);
  if ((v24 & 1) != 0)
  {
    if (qword_1001162A0 != -1)
      swift_once(&qword_1001162A0, sub_100097910);
    v25 = &qword_10011BAC0;
  }
  else
  {
    if (qword_1001162A8 != -1)
      swift_once(&qword_1001162A8, sub_10009792C);
    v25 = &qword_10011BAC8;
  }
  v28 = *v25;
  swift_retain(*v25);
  v29 = sub_100094EAC(v18);
  v30 = sub_100094EAC(v28);
  swift_release(v28);
  if (v30 >= v29)
    v31 = v29;
  else
    v31 = v30;
  if (v29 > v30)
    v32 = v29;
  else
    v32 = v30;
  if ((v32 + 0.05) / (v31 + 0.05) >= 3.0)
  {
    v33 = sub_100094EAC(v18);
    v34 = sub_100094EAC(v22);
    if (v34 >= v33)
      v35 = v33;
    else
      v35 = v34;
    if (v33 > v34)
      v34 = v33;
    if ((v34 + 0.05) / (v35 + 0.05) >= 4.5)
    {
      swift_release(v18);
      return v22;
    }
    else
    {
      if (qword_100116298 != -1)
        swift_once(&qword_100116298, sub_1000978FC);
      v26 = qword_10011BAB8;
      swift_retain(qword_10011BAB8);
      swift_release(v18);
      swift_release(v22);
    }
  }
  else
  {
    swift_release(v22);
    return v18;
  }
  return v26;
}

uint64_t sub_100098128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v1 = sub_100004F7C(&qword_100118670);
  __chkstk_darwin(v1);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TrackPageMetadata(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(*(id *)(v0 + *(int *)(v5 + 20)), "albumName");
  if (v8)
  {
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v12 = v11;

    sub_10009AAF0(v0, (uint64_t)v7);
    if (v12)
    {
      v13 = type metadata accessor for TrackPageMetadata;
      v14 = (uint64_t)v7;
LABEL_8:
      sub_10000B600(v14, v13);
      return v10;
    }
  }
  else
  {
    sub_10009AAF0(v0, (uint64_t)v7);
  }
  sub_100007C8C((uint64_t)&v7[*(int *)(v4 + 32)], (uint64_t)v3, &qword_100118670);
  v15 = type metadata accessor for AnyAlbum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v3, 1, v15) != 1)
  {
    v16 = &v3[*(int *)(v15 + 20)];
    v17 = *((_QWORD *)v16 + 3);
    v18 = *((_QWORD *)v16 + 4);
    sub_10000C9C8(v16, v17);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 40))(v17, v18);
    sub_10000B600((uint64_t)v7, type metadata accessor for TrackPageMetadata);
    v13 = type metadata accessor for AnyAlbum;
    v14 = (uint64_t)v3;
    goto LABEL_8;
  }
  sub_10000B600((uint64_t)v7, type metadata accessor for TrackPageMetadata);
  sub_10000526C((uint64_t)v3, &qword_100118670);
  return 0;
}

uint64_t sub_1000982F4()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + *(int *)(type metadata accessor for TrackPageMetadata(0)
                                                                      + 20)), "genres"));
  v2 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for String);

  if (v2[2])
  {
    v3 = v2[4];
    swift_bridgeObjectRetain(v2[5]);
  }
  else
  {
    v3 = 0;
  }
  swift_bridgeObjectRelease(v2);
  return v3;
}

uint64_t sub_100098380()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v1 = sub_100004F7C(&qword_100118580);
  __chkstk_darwin(v1);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TrackPageMetadata(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(*(id *)(v0 + *(int *)(v5 + 20)), "title");
  if (v8)
  {
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v12 = v11;

    sub_10009AAF0(v0, (uint64_t)v7);
    if (v12)
    {
      v13 = type metadata accessor for TrackPageMetadata;
      v14 = (uint64_t)v7;
LABEL_8:
      sub_10000B600(v14, v13);
      return v10;
    }
  }
  else
  {
    sub_10009AAF0(v0, (uint64_t)v7);
  }
  sub_100007C8C((uint64_t)&v7[*(int *)(v4 + 24)], (uint64_t)v3, &qword_100118580);
  v15 = type metadata accessor for AnySong(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v3, 1, v15) != 1)
  {
    v16 = &v3[*(int *)(v15 + 20)];
    v17 = *((_QWORD *)v16 + 3);
    v18 = *((_QWORD *)v16 + 4);
    sub_10000C9C8(v16, v17);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
    sub_10000B600((uint64_t)v7, type metadata accessor for TrackPageMetadata);
    v13 = type metadata accessor for AnySong;
    v14 = (uint64_t)v3;
    goto LABEL_8;
  }
  sub_10000B600((uint64_t)v7, type metadata accessor for TrackPageMetadata);
  sub_10000526C((uint64_t)v3, &qword_100118580);
  return 0;
}

uint64_t sub_10009854C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = sub_100004F7C(&qword_100118580);
  __chkstk_darwin(v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TrackPageMetadata(0);
  v5 = objc_msgSend(*(id *)(v0 + *(int *)(v4 + 20)), "appleMusicID");
  if (v5)
  {
    v6 = v5;
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);

  }
  else
  {
    sub_100007C8C(v0 + *(int *)(v4 + 24), (uint64_t)v3, &qword_100118580);
    v8 = type metadata accessor for AnySong(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v3, 1, v8) == 1)
    {
      sub_10000526C((uint64_t)v3, &qword_100118580);
      return 0;
    }
    else
    {
      v9 = &v3[*(int *)(v8 + 20)];
      v10 = *((_QWORD *)v9 + 3);
      v11 = *((_QWORD *)v9 + 4);
      sub_10000C9C8(v9, v10);
      v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
      sub_10000B600((uint64_t)v3, type metadata accessor for AnySong);
    }
  }
  return v7;
}

uint64_t type metadata accessor for TrackPageMetadata(uint64_t a1)
{
  uint64_t result;

  result = qword_10011BB28;
  if (!qword_10011BB28)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TrackPageMetadata);
  return result;
}

uint64_t *sub_1000986D0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v18);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v10;
    v11 = (char *)a1 + v9;
    v12 = (char *)a2 + v9;
    v13 = type metadata accessor for AnySong(0);
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    v16 = v10;
    if (v15(v12, 1, v13))
    {
      v17 = sub_100004F7C(&qword_100118580);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v19 = type metadata accessor for URL(0);
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v12, 1, v19))
      {
        v21 = sub_100004F7C((uint64_t *)&unk_100118CE0);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v11, v12, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v11, 0, 1, v19);
      }
      v22 = *(int *)(v13 + 20);
      v23 = *(_OWORD *)&v12[v22 + 24];
      *(_OWORD *)&v11[v22 + 24] = v23;
      (**(void (***)(void))(v23 - 8))();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    v24 = a3[7];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v27 = type metadata accessor for AnyArtist(0);
    v28 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      v29 = sub_100004F7C(&qword_100118678);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      v30 = type metadata accessor for URL(0);
      v31 = *(_QWORD *)(v30 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v26, 1, v30))
      {
        v32 = sub_100004F7C((uint64_t *)&unk_100118CE0);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v25, v26, v30);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v25, 0, 1, v30);
      }
      v33 = *(int *)(v27 + 20);
      v34 = *(_OWORD *)&v26[v33 + 24];
      *(_OWORD *)&v25[v33 + 24] = v34;
      (**(void (***)(void))(v34 - 8))();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    v35 = a3[8];
    v36 = (char *)a1 + v35;
    v37 = (char *)a2 + v35;
    v38 = type metadata accessor for AnyAlbum(0);
    v39 = *(_QWORD *)(v38 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
    {
      v40 = sub_100004F7C(&qword_100118670);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      v41 = type metadata accessor for URL(0);
      v42 = *(_QWORD *)(v41 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v37, 1, v41))
      {
        v43 = sub_100004F7C((uint64_t *)&unk_100118CE0);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v36, v37, v41);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v36, 0, 1, v41);
      }
      v44 = *(int *)(v38 + 20);
      v45 = *(_OWORD *)&v37[v44 + 24];
      *(_OWORD *)&v36[v44 + 24] = v45;
      (**(void (***)(void))(v45 - 8))();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
    }
  }
  return a1;
}

uint64_t sub_100098A94(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

  v5 = a1 + a2[6];
  v6 = type metadata accessor for AnySong(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    v7 = type metadata accessor for URL(0);
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v5, v7);
    _s16MusicRecognition11AnyPlaylistVwxx_0((_QWORD *)(v5 + *(int *)(v6 + 20)));
  }
  v9 = a1 + a2[7];
  v10 = type metadata accessor for AnyArtist(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
  {
    v11 = type metadata accessor for URL(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v9, v11);
    _s16MusicRecognition11AnyPlaylistVwxx_0((_QWORD *)(v9 + *(int *)(v10 + 20)));
  }
  v13 = a1 + a2[8];
  v14 = type metadata accessor for AnyAlbum(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14);
  if (!(_DWORD)result)
  {
    v16 = type metadata accessor for URL(0);
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v13, 1, v16))
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v13, v16);
    return _s16MusicRecognition11AnyPlaylistVwxx_0((_QWORD *)(v13 + *(int *)(v14 + 20)));
  }
  return result;
}

uint64_t sub_100098C58(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = (char *)(a1 + v8);
  v11 = (char *)(a2 + v8);
  v12 = type metadata accessor for AnySong(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v9;
  if (v14(v11, 1, v12))
  {
    v16 = sub_100004F7C(&qword_100118580);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v17 = type metadata accessor for URL(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v11, 1, v17))
    {
      v19 = sub_100004F7C((uint64_t *)&unk_100118CE0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v10, v11, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v10, 0, 1, v17);
    }
    v20 = *(int *)(v12 + 20);
    v21 = *(_OWORD *)&v11[v20 + 24];
    *(_OWORD *)&v10[v20 + 24] = v21;
    (**(void (***)(void))(v21 - 8))();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v22 = a3[7];
  v23 = (char *)(a1 + v22);
  v24 = (char *)(a2 + v22);
  v25 = type metadata accessor for AnyArtist(0);
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    v27 = sub_100004F7C(&qword_100118678);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    v28 = type metadata accessor for URL(0);
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v24, 1, v28))
    {
      v30 = sub_100004F7C((uint64_t *)&unk_100118CE0);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v23, v24, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v23, 0, 1, v28);
    }
    v31 = *(int *)(v25 + 20);
    v32 = *(_OWORD *)&v24[v31 + 24];
    *(_OWORD *)&v23[v31 + 24] = v32;
    (**(void (***)(void))(v32 - 8))();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  v33 = a3[8];
  v34 = (char *)(a1 + v33);
  v35 = (char *)(a2 + v33);
  v36 = type metadata accessor for AnyAlbum(0);
  v37 = *(_QWORD *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
  {
    v38 = sub_100004F7C(&qword_100118670);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    v39 = type metadata accessor for URL(0);
    v40 = *(_QWORD *)(v39 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v35, 1, v39))
    {
      v41 = sub_100004F7C((uint64_t *)&unk_100118CE0);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v34, v35, v39);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v34, 0, 1, v39);
    }
    v42 = *(int *)(v36 + 20);
    v43 = *(_OWORD *)&v35[v42 + 24];
    *(_OWORD *)&v34[v42 + 24] = v43;
    (**(void (***)(void))(v43 - 8))();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  return a1;
}

uint64_t sub_100098FF0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(char *, uint64_t, uint64_t);
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(char *, uint64_t, uint64_t);
  int v47;
  int v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(char *, uint64_t, uint64_t);
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(char *, uint64_t, uint64_t);
  int v68;
  int v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  v11 = a3[6];
  v12 = (char *)(a1 + v11);
  v13 = (char *)(a2 + v11);
  v14 = type metadata accessor for AnySong(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (v18)
    {
      sub_10000B600((uint64_t)v12, type metadata accessor for AnySong);
      goto LABEL_7;
    }
    v23 = type metadata accessor for URL(0);
    v24 = *(_QWORD *)(v23 - 8);
    v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
    v26 = v25(v12, 1, v23);
    v27 = v25(v13, 1, v23);
    if (v26)
    {
      if (!v27)
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v12, v13, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v12, 0, 1, v23);
LABEL_16:
        sub_100012EA4(&v12[*(int *)(v14 + 20)], &v13[*(int *)(v14 + 20)]);
        goto LABEL_17;
      }
    }
    else
    {
      if (!v27)
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 24))(v12, v13, v23);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v23);
    }
    v31 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_16;
  }
  if (v18)
  {
LABEL_7:
    v22 = sub_100004F7C(&qword_100118580);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_17;
  }
  v19 = type metadata accessor for URL(0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v13, 1, v19))
  {
    v21 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v12, v13, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v12, 0, 1, v19);
  }
  v28 = *(int *)(v14 + 20);
  v29 = &v12[v28];
  v30 = *(_QWORD *)&v13[v28 + 24];
  *((_QWORD *)v29 + 3) = v30;
  *((_QWORD *)v29 + 4) = *(_QWORD *)&v13[v28 + 32];
  (**(void (***)(void))(v30 - 8))();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_17:
  v32 = a3[7];
  v33 = (char *)(a1 + v32);
  v34 = (char *)(a2 + v32);
  v35 = type metadata accessor for AnyArtist(0);
  v36 = *(_QWORD *)(v35 - 8);
  v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48);
  v38 = v37(v33, 1, v35);
  v39 = v37(v34, 1, v35);
  if (!v38)
  {
    if (v39)
    {
      sub_10000B600((uint64_t)v33, type metadata accessor for AnyArtist);
      goto LABEL_23;
    }
    v44 = type metadata accessor for URL(0);
    v45 = *(_QWORD *)(v44 - 8);
    v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
    v47 = v46(v33, 1, v44);
    v48 = v46(v34, 1, v44);
    if (v47)
    {
      if (!v48)
      {
        (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v33, v34, v44);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v33, 0, 1, v44);
LABEL_32:
        sub_100012EA4(&v33[*(int *)(v35 + 20)], &v34[*(int *)(v35 + 20)]);
        goto LABEL_33;
      }
    }
    else
    {
      if (!v48)
      {
        (*(void (**)(char *, char *, uint64_t))(v45 + 24))(v33, v34, v44);
        goto LABEL_32;
      }
      (*(void (**)(char *, uint64_t))(v45 + 8))(v33, v44);
    }
    v52 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    goto LABEL_32;
  }
  if (v39)
  {
LABEL_23:
    v43 = sub_100004F7C(&qword_100118678);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    goto LABEL_33;
  }
  v40 = type metadata accessor for URL(0);
  v41 = *(_QWORD *)(v40 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v34, 1, v40))
  {
    v42 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v33, v34, v40);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v33, 0, 1, v40);
  }
  v49 = *(int *)(v35 + 20);
  v50 = &v33[v49];
  v51 = *(_QWORD *)&v34[v49 + 24];
  *((_QWORD *)v50 + 3) = v51;
  *((_QWORD *)v50 + 4) = *(_QWORD *)&v34[v49 + 32];
  (**(void (***)(void))(v51 - 8))();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
LABEL_33:
  v53 = a3[8];
  v54 = (char *)(a1 + v53);
  v55 = (char *)(a2 + v53);
  v56 = type metadata accessor for AnyAlbum(0);
  v57 = *(_QWORD *)(v56 - 8);
  v58 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v57 + 48);
  v59 = v58(v54, 1, v56);
  v60 = v58(v55, 1, v56);
  if (!v59)
  {
    if (v60)
    {
      sub_10000B600((uint64_t)v54, type metadata accessor for AnyAlbum);
      goto LABEL_39;
    }
    v65 = type metadata accessor for URL(0);
    v66 = *(_QWORD *)(v65 - 8);
    v67 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v66 + 48);
    v68 = v67(v54, 1, v65);
    v69 = v67(v55, 1, v65);
    if (v68)
    {
      if (!v69)
      {
        (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v54, v55, v65);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v54, 0, 1, v65);
LABEL_48:
        sub_100012EA4(&v54[*(int *)(v56 + 20)], &v55[*(int *)(v56 + 20)]);
        return a1;
      }
    }
    else
    {
      if (!v69)
      {
        (*(void (**)(char *, char *, uint64_t))(v66 + 24))(v54, v55, v65);
        goto LABEL_48;
      }
      (*(void (**)(char *, uint64_t))(v66 + 8))(v54, v65);
    }
    v73 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    goto LABEL_48;
  }
  if (v60)
  {
LABEL_39:
    v64 = sub_100004F7C(&qword_100118670);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    return a1;
  }
  v61 = type metadata accessor for URL(0);
  v62 = *(_QWORD *)(v61 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v55, 1, v61))
  {
    v63 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v54, v55, v61);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v54, 0, 1, v61);
  }
  v70 = *(int *)(v56 + 20);
  v71 = &v54[v70];
  v72 = *(_QWORD *)&v55[v70 + 24];
  *((_QWORD *)v71 + 3) = v72;
  *((_QWORD *)v71 + 4) = *(_QWORD *)&v55[v70 + 32];
  (**(void (***)(void))(v72 - 8))();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
  return a1;
}

uint64_t sub_100099694(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  __int128 v45;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = type metadata accessor for AnySong(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100004F7C(&qword_100118580);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = type metadata accessor for URL(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13))
    {
      v15 = sub_100004F7C((uint64_t *)&unk_100118CE0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v8, v9, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
    }
    v16 = *(int *)(v10 + 20);
    v17 = &v8[v16];
    v18 = &v9[v16];
    v19 = *((_OWORD *)v18 + 1);
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *((_OWORD *)v17 + 1) = v19;
    *((_QWORD *)v17 + 4) = *((_QWORD *)v18 + 4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v20 = a3[7];
  v21 = (char *)(a1 + v20);
  v22 = (char *)(a2 + v20);
  v23 = type metadata accessor for AnyArtist(0);
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    v25 = sub_100004F7C(&qword_100118678);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    v26 = type metadata accessor for URL(0);
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v22, 1, v26))
    {
      v28 = sub_100004F7C((uint64_t *)&unk_100118CE0);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v21, v22, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v21, 0, 1, v26);
    }
    v29 = *(int *)(v23 + 20);
    v30 = &v21[v29];
    v31 = &v22[v29];
    v32 = *((_OWORD *)v31 + 1);
    *(_OWORD *)v30 = *(_OWORD *)v31;
    *((_OWORD *)v30 + 1) = v32;
    *((_QWORD *)v30 + 4) = *((_QWORD *)v31 + 4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  v33 = a3[8];
  v34 = (char *)(a1 + v33);
  v35 = (char *)(a2 + v33);
  v36 = type metadata accessor for AnyAlbum(0);
  v37 = *(_QWORD *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
  {
    v38 = sub_100004F7C(&qword_100118670);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    v39 = type metadata accessor for URL(0);
    v40 = *(_QWORD *)(v39 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v35, 1, v39))
    {
      v41 = sub_100004F7C((uint64_t *)&unk_100118CE0);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v34, v35, v39);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v34, 0, 1, v39);
    }
    v42 = *(int *)(v36 + 20);
    v43 = &v34[v42];
    v44 = &v35[v42];
    v45 = *((_OWORD *)v44 + 1);
    *(_OWORD *)v43 = *(_OWORD *)v44;
    *((_OWORD *)v43 + 1) = v45;
    *((_QWORD *)v43 + 4) = *((_QWORD *)v44 + 4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  return a1;
}

uint64_t sub_100099A10(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t, uint64_t);
  int v24;
  int v25;
  uint64_t v26;
  char *v27;
  char *v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(char *, uint64_t, uint64_t);
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(char *, uint64_t, uint64_t);
  int v50;
  int v51;
  uint64_t v52;
  char *v53;
  char *v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  __int128 v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(char *, uint64_t, uint64_t);
  int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(char *, uint64_t, uint64_t);
  int v76;
  int v77;
  uint64_t v78;
  char *v79;
  char *v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  __int128 v86;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  v9 = a3[6];
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  v12 = type metadata accessor for AnySong(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (v16)
    {
      sub_10000B600((uint64_t)v10, type metadata accessor for AnySong);
      goto LABEL_7;
    }
    v21 = type metadata accessor for URL(0);
    v22 = *(_QWORD *)(v21 - 8);
    v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
    v24 = v23(v10, 1, v21);
    v25 = v23(v11, 1, v21);
    if (v24)
    {
      if (!v25)
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v10, v11, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v10, 0, 1, v21);
LABEL_16:
        v31 = *(int *)(v12 + 20);
        v32 = &v10[v31];
        v33 = &v11[v31];
        _s16MusicRecognition11AnyPlaylistVwxx_0(v32);
        v34 = *((_OWORD *)v33 + 1);
        *(_OWORD *)v32 = *(_OWORD *)v33;
        *((_OWORD *)v32 + 1) = v34;
        *((_QWORD *)v32 + 4) = *((_QWORD *)v33 + 4);
        goto LABEL_17;
      }
    }
    else
    {
      if (!v25)
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 40))(v10, v11, v21);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v21);
    }
    v30 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_16;
  }
  if (v16)
  {
LABEL_7:
    v20 = sub_100004F7C(&qword_100118580);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_17;
  }
  v17 = type metadata accessor for URL(0);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v11, 1, v17))
  {
    v19 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v10, v11, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v10, 0, 1, v17);
  }
  v26 = *(int *)(v12 + 20);
  v27 = &v10[v26];
  v28 = &v11[v26];
  v29 = *((_OWORD *)v28 + 1);
  *(_OWORD *)v27 = *(_OWORD *)v28;
  *((_OWORD *)v27 + 1) = v29;
  *((_QWORD *)v27 + 4) = *((_QWORD *)v28 + 4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_17:
  v35 = a3[7];
  v36 = (char *)(a1 + v35);
  v37 = (char *)(a2 + v35);
  v38 = type metadata accessor for AnyArtist(0);
  v39 = *(_QWORD *)(v38 - 8);
  v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48);
  v41 = v40(v36, 1, v38);
  v42 = v40(v37, 1, v38);
  if (!v41)
  {
    if (v42)
    {
      sub_10000B600((uint64_t)v36, type metadata accessor for AnyArtist);
      goto LABEL_23;
    }
    v47 = type metadata accessor for URL(0);
    v48 = *(_QWORD *)(v47 - 8);
    v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48);
    v50 = v49(v36, 1, v47);
    v51 = v49(v37, 1, v47);
    if (v50)
    {
      if (!v51)
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v36, v37, v47);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v36, 0, 1, v47);
LABEL_32:
        v57 = *(int *)(v38 + 20);
        v58 = &v36[v57];
        v59 = &v37[v57];
        _s16MusicRecognition11AnyPlaylistVwxx_0(v58);
        v60 = *((_OWORD *)v59 + 1);
        *(_OWORD *)v58 = *(_OWORD *)v59;
        *((_OWORD *)v58 + 1) = v60;
        *((_QWORD *)v58 + 4) = *((_QWORD *)v59 + 4);
        goto LABEL_33;
      }
    }
    else
    {
      if (!v51)
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 40))(v36, v37, v47);
        goto LABEL_32;
      }
      (*(void (**)(char *, uint64_t))(v48 + 8))(v36, v47);
    }
    v56 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    goto LABEL_32;
  }
  if (v42)
  {
LABEL_23:
    v46 = sub_100004F7C(&qword_100118678);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    goto LABEL_33;
  }
  v43 = type metadata accessor for URL(0);
  v44 = *(_QWORD *)(v43 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v37, 1, v43))
  {
    v45 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v36, v37, v43);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v36, 0, 1, v43);
  }
  v52 = *(int *)(v38 + 20);
  v53 = &v36[v52];
  v54 = &v37[v52];
  v55 = *((_OWORD *)v54 + 1);
  *(_OWORD *)v53 = *(_OWORD *)v54;
  *((_OWORD *)v53 + 1) = v55;
  *((_QWORD *)v53 + 4) = *((_QWORD *)v54 + 4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
LABEL_33:
  v61 = a3[8];
  v62 = (char *)(a1 + v61);
  v63 = (char *)(a2 + v61);
  v64 = type metadata accessor for AnyAlbum(0);
  v65 = *(_QWORD *)(v64 - 8);
  v66 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v65 + 48);
  v67 = v66(v62, 1, v64);
  v68 = v66(v63, 1, v64);
  if (!v67)
  {
    if (v68)
    {
      sub_10000B600((uint64_t)v62, type metadata accessor for AnyAlbum);
      goto LABEL_39;
    }
    v73 = type metadata accessor for URL(0);
    v74 = *(_QWORD *)(v73 - 8);
    v75 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v74 + 48);
    v76 = v75(v62, 1, v73);
    v77 = v75(v63, 1, v73);
    if (v76)
    {
      if (!v77)
      {
        (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v62, v63, v73);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v62, 0, 1, v73);
LABEL_48:
        v83 = *(int *)(v64 + 20);
        v84 = &v62[v83];
        v85 = &v63[v83];
        _s16MusicRecognition11AnyPlaylistVwxx_0(v84);
        v86 = *((_OWORD *)v85 + 1);
        *(_OWORD *)v84 = *(_OWORD *)v85;
        *((_OWORD *)v84 + 1) = v86;
        *((_QWORD *)v84 + 4) = *((_QWORD *)v85 + 4);
        return a1;
      }
    }
    else
    {
      if (!v77)
      {
        (*(void (**)(char *, char *, uint64_t))(v74 + 40))(v62, v63, v73);
        goto LABEL_48;
      }
      (*(void (**)(char *, uint64_t))(v74 + 8))(v62, v73);
    }
    v82 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
    goto LABEL_48;
  }
  if (v68)
  {
LABEL_39:
    v72 = sub_100004F7C(&qword_100118670);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    return a1;
  }
  v69 = type metadata accessor for URL(0);
  v70 = *(_QWORD *)(v69 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v63, 1, v69))
  {
    v71 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v62, v63, v69);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v62, 0, 1, v69);
  }
  v78 = *(int *)(v64 + 20);
  v79 = &v62[v78];
  v80 = &v63[v78];
  v81 = *((_OWORD *)v80 + 1);
  *(_OWORD *)v79 = *(_OWORD *)v80;
  *((_OWORD *)v79 + 1) = v81;
  *((_QWORD *)v79 + 4) = *((_QWORD *)v80 + 4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
  return a1;
}

uint64_t sub_10009A0C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10009A0D4);
}

uint64_t sub_10009A0D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = sub_100004F7C(&qword_100118580);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[6];
    }
    else
    {
      v16 = sub_100004F7C(&qword_100118678);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
      {
        v8 = v16;
        v15 = a3[7];
      }
      else
      {
        v8 = sub_100004F7C(&qword_100118670);
        v14 = *(_QWORD *)(v8 - 8);
        v15 = a3[8];
      }
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5]);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_10009A1D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10009A1DC);
}

uint64_t sub_10009A1DC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5]) = (a2 - 1);
      return result;
    }
    v13 = sub_100004F7C(&qword_100118580);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[6];
    }
    else
    {
      v16 = sub_100004F7C(&qword_100118678);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[7];
      }
      else
      {
        v10 = sub_100004F7C(&qword_100118670);
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[8];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_10009A2D4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[5];

  v2 = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    v10[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    sub_1000466EC(319, &qword_10011BB38, type metadata accessor for AnySong);
    if (v5 <= 0x3F)
    {
      v10[2] = *(_QWORD *)(v4 - 8) + 64;
      sub_1000466EC(319, &qword_10011BB40, type metadata accessor for AnyArtist);
      if (v7 <= 0x3F)
      {
        v10[3] = *(_QWORD *)(v6 - 8) + 64;
        sub_1000466EC(319, (unint64_t *)&unk_10011BB48, type metadata accessor for AnyAlbum);
        if (v9 <= 0x3F)
        {
          v10[4] = *(_QWORD *)(v8 - 8) + 64;
          swift_initStructMetadata(a1, 256, 5, v10, a1 + 16);
        }
      }
    }
  }
}

uint64_t sub_10009A3CC()
{
  return sub_100004864((unint64_t *)&qword_100117E18, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
}

uint64_t sub_10009A3F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v1 = sub_100004F7C(&qword_100118678);
  __chkstk_darwin(v1);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TrackPageMetadata(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(*(id *)(v0 + *(int *)(v5 + 20)), "artist");
  if (v8)
  {
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v12 = v11;

    sub_10009AAF0(v0, (uint64_t)v7);
    if (v12)
    {
      v13 = type metadata accessor for TrackPageMetadata;
      v14 = (uint64_t)v7;
LABEL_8:
      sub_10000B600(v14, v13);
      return v10;
    }
  }
  else
  {
    sub_10009AAF0(v0, (uint64_t)v7);
  }
  sub_100007C8C((uint64_t)&v7[*(int *)(v4 + 28)], (uint64_t)v3, &qword_100118678);
  v15 = type metadata accessor for AnyArtist(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v3, 1, v15) != 1)
  {
    v16 = &v3[*(int *)(v15 + 20)];
    v17 = *((_QWORD *)v16 + 3);
    v18 = *((_QWORD *)v16 + 4);
    sub_10000C9C8(v16, v17);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
    sub_10000B600((uint64_t)v7, type metadata accessor for TrackPageMetadata);
    v13 = type metadata accessor for AnyArtist;
    v14 = (uint64_t)v3;
    goto LABEL_8;
  }
  sub_10000B600((uint64_t)v7, type metadata accessor for TrackPageMetadata);
  sub_10000526C((uint64_t)v3, &qword_100118678);
  return 0;
}

uint64_t sub_10009A5C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10009A5E0(a1, (SEL *)&selRef_creationDate, a2);
}

uint64_t sub_10009A5D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10009A5E0(a1, (SEL *)&selRef_releaseDate, a2);
}

uint64_t sub_10009A5E0@<X0>(uint64_t a1@<X0>, SEL *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  v5 = objc_msgSend(*(id *)(v3 + *(int *)(a1 + 20)), *a2);
  if (v5)
  {
    v6 = v5;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    v7 = type metadata accessor for Date(0);
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a3;
    v10 = 0;
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a3;
    v10 = 1;
  }
  return v8(v9, v10, 1, v7);
}

uint64_t sub_10009A664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v5 = sub_100004F7C(&qword_100118670);
  __chkstk_darwin(v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007C8C(v2 + *(int *)(a1 + 32), (uint64_t)v7, &qword_100118670);
  v8 = type metadata accessor for AnyAlbum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8) == 1)
  {
    sub_10000526C((uint64_t)v7, &qword_100118670);
    v9 = type metadata accessor for URL(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a2, 1, 1, v9);
  }
  else
  {
    sub_100007C8C((uint64_t)v7, a2, (uint64_t *)&unk_100118CE0);
    return sub_10000B600((uint64_t)v7, type metadata accessor for AnyAlbum);
  }
}

uint64_t sub_10009A770(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = sub_100004F7C(&qword_100118670);
  __chkstk_darwin(v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007C8C(v1 + *(int *)(a1 + 32), (uint64_t)v5, &qword_100118670);
  v6 = type metadata accessor for AnyAlbum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6) == 1)
  {
    sub_10000526C((uint64_t)v5, &qword_100118670);
    return 0;
  }
  else
  {
    v8 = &v5[*(int *)(v6 + 20)];
    v9 = *((_QWORD *)v8 + 3);
    v10 = *((_QWORD *)v8 + 4);
    sub_10000C9C8(v8, v9);
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(v9, v10);
    sub_10000B600((uint64_t)v5, type metadata accessor for AnyAlbum);
  }
  return v7;
}

uint64_t sub_10009A878(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = sub_100004F7C(&qword_100118580);
  __chkstk_darwin(v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007C8C(v1 + *(int *)(a1 + 24), (uint64_t)v5, &qword_100118580);
  v6 = type metadata accessor for AnySong(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6) == 1)
  {
    sub_10000526C((uint64_t)v5, &qword_100118580);
    return 0;
  }
  else
  {
    v8 = &v5[*(int *)(v6 + 20)];
    v9 = *((_QWORD *)v8 + 3);
    v10 = *((_QWORD *)v8 + 4);
    sub_10000C9C8(v8, v9);
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
    sub_10000B600((uint64_t)v5, type metadata accessor for AnySong);
  }
  return v7;
}

uint64_t sub_10009A980(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = sub_100004F7C(&qword_100118580);
  __chkstk_darwin(v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007C8C(v1 + *(int *)(a1 + 24), (uint64_t)v5, &qword_100118580);
  v6 = type metadata accessor for AnySong(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6) == 1)
  {
    sub_10000526C((uint64_t)v5, &qword_100118580);
    return 0;
  }
  else
  {
    v8 = &v5[*(int *)(v6 + 20)];
    v9 = *((_QWORD *)v8 + 3);
    v10 = *((_QWORD *)v8 + 4);
    sub_10000C9C8(v8, v9);
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(v9, v10);
    sub_10000B600((uint64_t)v5, type metadata accessor for AnySong);
  }
  return v7;
}

id sub_10009AA88(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + *(int *)(a1 + 20)), "matchLocation");
}

uint64_t sub_10009AAB4(uint64_t a1)
{
  uint64_t result;

  result = sub_100004864(&qword_10011BB88, type metadata accessor for TrackPageMetadata, (uint64_t)&unk_1000D6A24);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10009AAF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TrackPageMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_10009AB34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  Swift::String v6;
  Swift::String v7;
  void *object;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  Swift::String v18;
  Swift::String v19;
  void *v20;
  NSString v21;
  void *v23;
  uint64_t v24;
  Swift::String v25;
  Swift::String v26;

  v2 = v1;
  v4 = (void *)objc_opt_self(NSBundle);
  v5 = objc_msgSend(v4, "mainBundle");
  v25._object = (void *)0xE000000000000000;
  v6._object = (void *)0x80000001000DC6A0;
  v6._countAndFlagsBits = 0xD00000000000001ELL;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v25._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v25)._object;

  if (a1)
  {
    v24 = a1;
    swift_errorRetain(a1);
    v9 = sub_100004F7C(&qword_1001174D8);
    v10 = sub_100010498(0, (unint64_t *)&qword_1001196A8, NSError_ptr);
    if ((swift_dynamicCast(&v23, &v24, v9, v10, 6) & 1) != 0)
    {
      v11 = v23;
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSURLErrorDomain);
      v14 = v13;
      v15 = sub_10005BA60((uint64_t)&off_100107AD8);
      v16 = (void *)sub_1000AC948(v12, v14, v15);
      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease(v15);
      if (v16)
      {
        swift_bridgeObjectRelease(object);

        v17 = objc_msgSend(v4, "mainBundle");
        v18._countAndFlagsBits = 0xD000000000000023;
        v26._object = (void *)0xE000000000000000;
        v18._object = (void *)0x80000001000DC6F0;
        v19._countAndFlagsBits = 0;
        v19._object = (void *)0xE000000000000000;
        v26._countAndFlagsBits = 0;
        object = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v26)._object;

      }
    }
  }
  v20 = *(void **)(v2 + OBJC_IVAR____TtC16MusicRecognition11NoMatchView_noMatchLabel);
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v20, "setText:", v21);

  return objc_msgSend(v20, "setNeedsDisplay");
}

void sub_10009AD54()
{
  qword_10011BB90 = 0x6C632E776F727261;
  *(_QWORD *)algn_10011BB98 = 0xEF657369776B636FLL;
}

id sub_10009AD84()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.262745098, 0.533333333, 0.996078431, 1.0);
  qword_10011BBA0 = (uint64_t)result;
  return result;
}

id sub_10009ADD4()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.0588235294, 0.129411765, 0.250980392, 1.0);
  qword_10011BBA8 = (uint64_t)result;
  return result;
}

id sub_10009AE28(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  objc_class *ObjectType;
  uint64_t v12;
  id v13;
  char *v14;
  uint64_t v15;
  id v16;
  objc_super v18;

  ObjectType = (objc_class *)swift_getObjectType(v6, a6);
  v12 = OBJC_IVAR____TtC16MusicRecognition11NoMatchView_noMatchLabel;
  v13 = objc_allocWithZone((Class)UILabel);
  v14 = v6;
  *(_QWORD *)&v6[v12] = objc_msgSend(v13, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v15 = OBJC_IVAR____TtC16MusicRecognition11NoMatchView_retryButton;
  *(_QWORD *)&v14[v15] = objc_msgSend(objc_allocWithZone((Class)UIButton), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v14[OBJC_IVAR____TtC16MusicRecognition11NoMatchView_noMatchLabelVerticalAnchor] = 0;

  v18.receiver = v14;
  v18.super_class = ObjectType;
  v16 = objc_msgSendSuper2(&v18, "initWithFrame:", a1, a2, a3, a4);
  sub_10009AF3C();

  return v16;
}

uint64_t sub_10009AF3C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  id v11;
  NSString v12;
  void *v13;
  id v14;
  Swift::String v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  id v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String v22;
  void *object;
  NSString v24;
  void *v25;
  id v26;
  uint64_t v27;
  id v28;
  NSString v29;
  id v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  char *v37;
  char *v38;
  NSString v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  uint64_t countAndFlagsBits;
  Class isa;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  id v67;
  char *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  Swift::String v72;
  Swift::String v73;
  Swift::String v74;

  v1 = v0;
  v2 = sub_100004F7C(&qword_10011A9B0);
  __chkstk_darwin(v2);
  v68 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (_QWORD *)type metadata accessor for UIButton.Configuration.CornerStyle(0);
  v66 = *(v4 - 1);
  v67 = v4;
  __chkstk_darwin(v4);
  v65 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UIButton.Configuration(0);
  v70 = *(_QWORD *)(v6 - 8);
  v71 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v0, "setLayoutMargins:", 0.0, 34.0, 0.0, 17.0);
  v9 = *(void **)&v0[OBJC_IVAR____TtC16MusicRecognition11NoMatchView_noMatchLabel];
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v0, "addSubview:", v9);
  v10 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", 16.0, UIFontWeightSemibold);
  objc_msgSend(v9, "setFont:", v10);

  v11 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  objc_msgSend(v9, "setTextColor:", v11);

  if (qword_1001161B8 != -1)
    swift_once(&qword_1001161B8, sub_100080564);
  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setAccessibilityIdentifier:", v12);

  v13 = (void *)objc_opt_self(NSBundle);
  v14 = objc_msgSend(v13, "mainBundle");
  v73._object = (void *)0xE000000000000000;
  v15._object = (void *)0x80000001000DC6A0;
  v15._countAndFlagsBits = 0xD00000000000001ELL;
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  v73._countAndFlagsBits = 0;
  v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v73);

  v72 = v17;
  v18._countAndFlagsBits = 8236;
  v18._object = (void *)0xE200000000000000;
  String.append(_:)(v18);
  v19 = objc_msgSend(v13, "mainBundle");
  v20._countAndFlagsBits = 0xD000000000000021;
  v74._object = (void *)0xE000000000000000;
  v20._object = (void *)0x80000001000DC6C0;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v74._countAndFlagsBits = 0;
  v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, (Swift::String_optional)0, (NSBundle)v19, v21, v74);

  String.append(_:)(v22);
  swift_bridgeObjectRelease(v22._object);
  object = v72._object;
  v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v1, "setAccessibilityLabel:", v24);

  objc_msgSend(v1, "setIsAccessibilityElement:", 1);
  v25 = *(void **)&v1[OBJC_IVAR____TtC16MusicRecognition11NoMatchView_retryButton];
  objc_msgSend(v25, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v1, "addSubview:", v25);
  v26 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:", 5, 21.0);
  static UIButton.Configuration.filled()(v26);
  if (qword_1001162B0 != -1)
    swift_once(&qword_1001162B0, sub_10009AD54);
  v27 = *(_QWORD *)algn_10011BB98;
  swift_bridgeObjectRetain(*(_QWORD *)algn_10011BB98);
  v28 = v26;
  v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v27);
  v30 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v29, v28);

  v69 = v28;
  UIButton.Configuration.image.setter(v30);
  if (qword_1001162B8 != -1)
    swift_once(&qword_1001162B8, sub_10009AD84);
  v31 = qword_10011BBA0;
  v32 = (id)qword_10011BBA0;
  UIButton.Configuration.baseForegroundColor.setter(v31);
  v34 = v70;
  v33 = v71;
  if (qword_1001162C0 != -1)
    swift_once(&qword_1001162C0, sub_10009ADD4);
  v35 = qword_10011BBA8;
  v36 = (id)qword_10011BBA8;
  UIButton.Configuration.baseBackgroundColor.setter(v35);
  v37 = v65;
  (*(void (**)(char *, _QWORD, id))(v66 + 104))(v65, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v67);
  UIButton.Configuration.cornerStyle.setter(v37);
  v38 = v68;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v68, v8, v33);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v38, 0, 1, v33);
  UIButton.configuration.setter(v38);
  objc_msgSend(v25, "setContentVerticalAlignment:", 3);
  objc_msgSend(v25, "setContentHorizontalAlignment:", 3);
  objc_msgSend(v25, "setUserInteractionEnabled:", 0);
  v68 = v8;
  if (qword_1001161C0 != -1)
    swift_once(&qword_1001161C0, sub_100080594);
  v39 = String._bridgeToObjectiveC()();
  objc_msgSend(v25, "setAccessibilityIdentifier:", v39);

  v67 = (id)objc_opt_self(NSLayoutConstraint);
  v40 = sub_100004F7C(&qword_100116D90);
  v41 = swift_allocObject(v40, 80, 7);
  *(_OWORD *)(v41 + 16) = xmmword_1000D1CD0;
  v42 = objc_msgSend(v9, "leadingAnchor");
  v43 = objc_msgSend(v1, "layoutMarginsGuide");
  v44 = objc_msgSend(v43, "leadingAnchor");

  v45 = objc_msgSend(v42, "constraintEqualToAnchor:", v44);
  *(_QWORD *)(v41 + 32) = v45;
  v46 = objc_msgSend(v9, "trailingAnchor");
  v47 = objc_msgSend(v25, "leadingAnchor");
  v48 = objc_msgSend(v46, "constraintEqualToAnchor:", v47);

  *(_QWORD *)(v41 + 40) = v48;
  v49 = objc_msgSend(v25, "trailingAnchor");
  v50 = objc_msgSend(v1, "layoutMarginsGuide");
  v51 = objc_msgSend(v50, "trailingAnchor");

  v52 = objc_msgSend(v49, "constraintEqualToAnchor:", v51);
  *(_QWORD *)(v41 + 48) = v52;
  v53 = objc_msgSend(v25, "centerYAnchor");
  v54 = objc_msgSend(v1, "centerYAnchor");
  v55 = objc_msgSend(v53, "constraintEqualToAnchor:", v54);

  *(_QWORD *)(v41 + 56) = v55;
  v56 = objc_msgSend(v25, "widthAnchor");
  v57 = objc_msgSend(v56, "constraintEqualToConstant:", 51.0);

  *(_QWORD *)(v41 + 64) = v57;
  v58 = objc_msgSend(v25, "heightAnchor");
  v59 = objc_msgSend(v58, "constraintEqualToConstant:", 51.0);

  *(_QWORD *)(v41 + 72) = v59;
  v72._countAndFlagsBits = v41;
  specialized Array._endMutation()(v60);
  countAndFlagsBits = v72._countAndFlagsBits;
  sub_100010498(0, (unint64_t *)&qword_1001177E0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(countAndFlagsBits);
  objc_msgSend(v67, "activateConstraints:", isa);

  return (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v68, v71);
}

id sub_10009B83C(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  objc_super v14;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v6 = OBJC_IVAR____TtC16MusicRecognition11NoMatchView_noMatchLabel;
  v7 = objc_allocWithZone((Class)UILabel);
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v9 = OBJC_IVAR____TtC16MusicRecognition11NoMatchView_retryButton;
  *(_QWORD *)&v8[v9] = objc_msgSend(objc_allocWithZone((Class)UIButton), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v8[OBJC_IVAR____TtC16MusicRecognition11NoMatchView_noMatchLabelVerticalAnchor] = 0;

  v14.receiver = v8;
  v14.super_class = ObjectType;
  v10 = objc_msgSendSuper2(&v14, "initWithCoder:", a1);
  v11 = v10;
  if (v10)
  {
    v12 = v10;
    sub_10009AF3C();

  }
  return v11;
}

void sub_10009B968(uint64_t a1, uint64_t a2)
{
  char *v2;
  char v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  Class isa;
  uint64_t v15;
  objc_super v16;

  v16.receiver = v2;
  v16.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v16, "layoutSubviews");
  if (!*(_QWORD *)&v2[OBJC_IVAR____TtC16MusicRecognition11NoMatchView_noMatchLabelVerticalAnchor])
  {
    v3 = sub_10009DC2C();
    v4 = *(void **)&v2[OBJC_IVAR____TtC16MusicRecognition11NoMatchView_noMatchLabel];
    if ((v3 & 1) != 0)
    {
      v5 = objc_msgSend(v4, "_tightBoundingBoxLayoutGuide");
      v6 = objc_msgSend(v5, "topAnchor");

      v7 = objc_msgSend(v2, "SBUISA_systemApertureObstructedAreaLayoutGuide");
      v8 = objc_msgSend(v7, "bottomAnchor");

    }
    else
    {
      v6 = objc_msgSend(v4, "centerYAnchor");
      v8 = objc_msgSend(v2, "centerYAnchor");
    }
    v9 = objc_msgSend(v6, "constraintEqualToAnchor:", v8);

    v10 = (void *)objc_opt_self(NSLayoutConstraint);
    v11 = sub_100004F7C(&qword_100116D90);
    v12 = swift_allocObject(v11, 40, 7);
    *(_OWORD *)(v12 + 16) = xmmword_1000D3AA0;
    *(_QWORD *)(v12 + 32) = v9;
    v15 = v12;
    specialized Array._endMutation()(v12);
    sub_100010498(0, (unint64_t *)&qword_1001177E0, NSLayoutConstraint_ptr);
    v13 = v9;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v15);
    objc_msgSend(v10, "activateConstraints:", isa);

  }
}

uint64_t type metadata accessor for NoMatchView()
{
  return objc_opt_self(_TtC16MusicRecognition11NoMatchView);
}

uint64_t sub_10009BBD4()
{
  unint64_t v0;
  uint64_t v2;

  v0 = sub_100007434();
  EnvironmentValues.subscript.getter(&v2, &_s20ViewConfigurationKeyVN, &_s20ViewConfigurationKeyVN, v0);
  return v2;
}

uint64_t sub_10009BC0C(char a1)
{
  if (!a1)
    return 0x7974706D65;
  if (a1 == 1)
    return 0xD000000000000022;
  return 0xD000000000000024;
}

uint64_t sub_10009BC64(char a1, id a2)
{
  id v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v17;
  id v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v27;
  _QWORD v28[2];
  uint64_t v29;
  unint64_t v30;
  __int128 v31;
  __int128 v32;

  v4 = objc_msgSend(a2, "userInfo");
  if (!v4)
  {
    v31 = 0u;
    v32 = 0u;
LABEL_14:
    sub_10009D33C((uint64_t)&v31);
    v10 = 0;
    v11 = 0;
    goto LABEL_15;
  }
  v5 = v4;
  v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v4, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  *(_QWORD *)&v31 = 0xD000000000000010;
  *((_QWORD *)&v31 + 1) = 0x80000001000DC7B0;
  AnyHashable.init<A>(_:)(&v29, &v31, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v6 + 16) && (v7 = sub_10009D42C((uint64_t)&v29), (v8 & 1) != 0))
  {
    sub_100053034(*(_QWORD *)(v6 + 56) + 32 * v7, (uint64_t)&v31);
  }
  else
  {
    v31 = 0u;
    v32 = 0u;
  }
  sub_10009D45C((uint64_t)&v29);
  swift_bridgeObjectRelease(v6);
  if (!*((_QWORD *)&v32 + 1))
    goto LABEL_14;
  v9 = swift_dynamicCast(&v29, &v31, (char *)&type metadata for Any + 8, &type metadata for String, 6);
  if (v9)
    v10 = v29;
  else
    v10 = 0;
  if (v9)
    v11 = v30;
  else
    v11 = 0;
LABEL_15:
  v12 = objc_msgSend(a2, "userInfo");
  if (!v12)
  {
    v31 = 0u;
    v32 = 0u;
LABEL_25:
    sub_10009D33C((uint64_t)&v31);
    v17 = 2;
    goto LABEL_26;
  }
  v13 = v12;
  v14 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v12, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  *(_QWORD *)&v31 = 0xD000000000000013;
  *((_QWORD *)&v31 + 1) = 0x80000001000DC790;
  AnyHashable.init<A>(_:)(&v29, &v31, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v14 + 16) && (v15 = sub_10009D42C((uint64_t)&v29), (v16 & 1) != 0))
  {
    sub_100053034(*(_QWORD *)(v14 + 56) + 32 * v15, (uint64_t)&v31);
  }
  else
  {
    v31 = 0u;
    v32 = 0u;
  }
  sub_10009D45C((uint64_t)&v29);
  swift_bridgeObjectRelease(v14);
  if (!*((_QWORD *)&v32 + 1))
    goto LABEL_25;
  if (swift_dynamicCast(&v29, &v31, (char *)&type metadata for Any + 8, &type metadata for Bool, 6))
    v17 = v29;
  else
    v17 = 2;
LABEL_26:
  v18 = objc_msgSend(a2, "userInfo");
  if (!v18)
  {
    v31 = 0u;
    v32 = 0u;
LABEL_37:
    sub_10009D33C((uint64_t)&v31);
    goto LABEL_38;
  }
  v19 = v18;
  v20 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v18, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  if (qword_1001162C8 != -1)
    swift_once(&qword_1001162C8, sub_10009C560);
  v28[0] = qword_10011BBF0;
  v28[1] = *(_QWORD *)algn_10011BBF8;
  swift_bridgeObjectRetain(*(_QWORD *)algn_10011BBF8);
  AnyHashable.init<A>(_:)(&v29, v28, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v20 + 16) && (v21 = sub_10009D42C((uint64_t)&v29), (v22 & 1) != 0))
  {
    sub_100053034(*(_QWORD *)(v20 + 56) + 32 * v21, (uint64_t)&v31);
  }
  else
  {
    v31 = 0u;
    v32 = 0u;
  }
  sub_10009D45C((uint64_t)&v29);
  swift_bridgeObjectRelease(v20);
  if (!*((_QWORD *)&v32 + 1))
    goto LABEL_37;
  if ((swift_dynamicCast(&v29, &v31, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) == 0)
  {
LABEL_38:
    v27 = 0;
    goto LABEL_39;
  }
  v23 = v29;
  v24 = v30;
  sub_100010498(0, &qword_10011BCF0, NSKeyedUnarchiver_ptr);
  v25 = sub_100010498(0, (unint64_t *)&qword_1001174F0, SHMediaItem_ptr);
  v27 = (void *)static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)(v25, v23, v24, v25);
  sub_10004B228(v23, v24);
LABEL_39:
  sub_10009CCC0(a1, a2, v27, v10, v11, v17);

  return swift_bridgeObjectRelease(v11);
}

uint64_t sub_10009C088(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_1000D6CC0, a2);
  v6 = v2;
  v4 = sub_100004864((unint64_t *)&qword_100116618, type metadata accessor for ViewConfiguration, (uint64_t)&unk_1000D6CA4);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v4);
  swift_release(KeyPath);
  return *(unsigned __int8 *)(v2 + 16);
}

void *sub_10009C10C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v8;

  KeyPath = swift_getKeyPath(&unk_1000D6D10, a2);
  v8 = v2;
  v4 = sub_100004864((unint64_t *)&qword_100116618, type metadata accessor for ViewConfiguration, (uint64_t)&unk_1000D6CA4);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v8, KeyPath, v4);
  swift_release(KeyPath);
  v5 = *(void **)(v2 + 32);
  v6 = v5;
  return v5;
}

uint64_t sub_10009C198(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v3 = v2;
  KeyPath = swift_getKeyPath(&unk_1000D6D38, a2);
  v8 = v2;
  v5 = sub_100004864((unint64_t *)&qword_100116618, type metadata accessor for ViewConfiguration, (uint64_t)&unk_1000D6CA4);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v8, KeyPath, v5);
  swift_release(KeyPath);
  v6 = *(_QWORD *)(v2 + 40);
  swift_bridgeObjectRetain(*(_QWORD *)(v3 + 48));
  return v6;
}

uint64_t sub_10009C22C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_1000D6D60, a2);
  v6 = v2;
  v4 = sub_100004864((unint64_t *)&qword_100116618, type metadata accessor for ViewConfiguration, (uint64_t)&unk_1000D6CA4);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v4);
  swift_release(KeyPath);
  return *(unsigned __int8 *)(v2 + 56);
}

uint64_t sub_10009C2B0(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  unint64_t v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0xD000000000000022;
    else
      v3 = 0xD000000000000024;
    if (v2 == 1)
      v4 = 0x80000001000D8BE0;
    else
      v4 = 0x80000001000D8C10;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0xD000000000000022;
      else
        v6 = 0xD000000000000024;
      if (v5 == 1)
        v7 = 0x80000001000D8BE0;
      else
        v7 = 0x80000001000D8C10;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE500000000000000;
    v3 = 0x7974706D65;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE500000000000000;
  v6 = 0x7974706D65;
  if (v3 != 0x7974706D65)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v6, v7, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
  v7 = v4;
LABEL_22:
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

Swift::Int sub_10009C3AC(char a1)
{
  unint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5);
  if (a1)
  {
    if (a1 == 1)
      v2 = 0xD000000000000022;
    else
      v2 = 0xD000000000000024;
    if (a1 == 1)
      v3 = 0x80000001000D8BE0;
    else
      v3 = 0x80000001000D8C10;
  }
  else
  {
    v3 = 0xE500000000000000;
    v2 = 0x7974706D65;
  }
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_10009C44C(uint64_t a1, unsigned __int8 a2)
{
  int v2;
  unint64_t v3;
  unint64_t v4;

  v2 = a2;
  if (a2)
  {
    if (a2 == 1)
      v3 = 0xD000000000000022;
    else
      v3 = 0xD000000000000024;
    if (v2 == 1)
      v4 = 0x80000001000D8BE0;
    else
      v4 = 0x80000001000D8C10;
  }
  else
  {
    v4 = 0xE500000000000000;
    v3 = 0x7974706D65;
  }
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v4);
}

Swift::Int sub_10009C4C4(uint64_t a1, char a2)
{
  unint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6);
  if (a2)
  {
    if (a2 == 1)
      v3 = 0xD000000000000022;
    else
      v3 = 0xD000000000000024;
    if (a2 == 1)
      v4 = 0x80000001000D8BE0;
    else
      v4 = 0x80000001000D8C10;
  }
  else
  {
    v4 = 0xE500000000000000;
    v3 = 0x7974706D65;
  }
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

void sub_10009C560()
{
  qword_10011BBF0 = 0x657449616964656DLL;
  *(_QWORD *)algn_10011BBF8 = 0xE90000000000006DLL;
}

uint64_t sub_10009C588(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10009C2B0(*a1, *a2);
}

Swift::Int sub_10009C594()
{
  char *v0;

  return sub_10009C3AC(*v0);
}

uint64_t sub_10009C59C(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_10009C44C(a1, *v1);
}

Swift::Int sub_10009C5A4(uint64_t a1)
{
  char *v1;

  return sub_10009C4C4(a1, *v1);
}

unint64_t sub_10009C5AC@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_10009DB84(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10009C5D8@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_10009BC0C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_10009C600(uint64_t *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  KeyPath = swift_getKeyPath(&unk_1000D6CC0, a2);
  v7 = v4;
  v6 = sub_100004864((unint64_t *)&qword_100116618, type metadata accessor for ViewConfiguration, (uint64_t)&unk_1000D6CA4);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v6);
  swift_release(KeyPath);
  *a3 = *(_BYTE *)(v4 + 16);
}

double sub_10009C68C(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1000D6CC0, a2);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_100004864((unint64_t *)&qword_100116618, type metadata accessor for ViewConfiguration, (uint64_t)&unk_1000D6CA4);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_10009DC18, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

void *sub_10009C734(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v8;

  KeyPath = swift_getKeyPath(&unk_1000D6CE8, a2);
  v8 = v2;
  v4 = sub_100004864((unint64_t *)&qword_100116618, type metadata accessor for ViewConfiguration, (uint64_t)&unk_1000D6CA4);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v8, KeyPath, v4);
  swift_release(KeyPath);
  v5 = *(void **)(v2 + 24);
  v6 = v5;
  return v5;
}

id sub_10009C7C0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  void *v7;
  uint64_t v9;

  v4 = *a1;
  KeyPath = swift_getKeyPath(&unk_1000D6CE8, a2);
  v9 = v4;
  v6 = sub_100004864((unint64_t *)&qword_100116618, type metadata accessor for ViewConfiguration, (uint64_t)&unk_1000D6CA4);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v9, KeyPath, v6);
  swift_release(KeyPath);
  v7 = *(void **)(v4 + 24);
  *a3 = v7;
  return v7;
}

void sub_10009C84C(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  _QWORD v7[5];
  uint64_t v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1000D6CE8, a2);
  v7[2] = v3;
  v7[3] = v2;
  v8 = v3;
  v5 = sub_100004864((unint64_t *)&qword_100116618, type metadata accessor for ViewConfiguration, (uint64_t)&unk_1000D6CA4);
  v6 = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, KeyPath, sub_10009DC04, v7, (char *)&type metadata for () + 8, v5);
  swift_release(KeyPath);

}

id sub_10009C900@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  void *v7;
  uint64_t v9;

  v4 = *a1;
  KeyPath = swift_getKeyPath(&unk_1000D6D10, a2);
  v9 = v4;
  v6 = sub_100004864((unint64_t *)&qword_100116618, type metadata accessor for ViewConfiguration, (uint64_t)&unk_1000D6CA4);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v9, KeyPath, v6);
  swift_release(KeyPath);
  v7 = *(void **)(v4 + 32);
  *a3 = v7;
  return v7;
}

void sub_10009C98C(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  _QWORD v7[5];
  uint64_t v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1000D6D10, a2);
  v7[2] = v3;
  v7[3] = v2;
  v8 = v3;
  v5 = sub_100004864((unint64_t *)&qword_100116618, type metadata accessor for ViewConfiguration, (uint64_t)&unk_1000D6CA4);
  v6 = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, KeyPath, sub_10009DBF0, v7, (char *)&type metadata for () + 8, v5);
  swift_release(KeyPath);

}

uint64_t sub_10009CA40@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v4 = *a1;
  KeyPath = swift_getKeyPath(&unk_1000D6D38, a2);
  v9 = v4;
  v6 = sub_100004864((unint64_t *)&qword_100116618, type metadata accessor for ViewConfiguration, (uint64_t)&unk_1000D6CA4);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v9, KeyPath, v6);
  swift_release(KeyPath);
  v7 = *(_QWORD *)(v4 + 48);
  *a3 = *(_QWORD *)(v4 + 40);
  a3[1] = v7;
  return swift_bridgeObjectRetain(v7);
}

uint64_t sub_10009CAD0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[7];
  uint64_t v9;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_1000D6D38, a2);
  v8[2] = v4;
  v8[3] = v3;
  v8[4] = v2;
  v9 = v4;
  v6 = sub_100004864((unint64_t *)&qword_100116618, type metadata accessor for ViewConfiguration, (uint64_t)&unk_1000D6CA4);
  swift_bridgeObjectRetain(v2);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_10009D788, v8, (char *)&type metadata for () + 8, v6);
  swift_release(KeyPath);
  return swift_bridgeObjectRelease(v2);
}

void sub_10009CB8C(uint64_t *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  KeyPath = swift_getKeyPath(&unk_1000D6D60, a2);
  v7 = v4;
  v6 = sub_100004864((unint64_t *)&qword_100116618, type metadata accessor for ViewConfiguration, (uint64_t)&unk_1000D6CA4);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v6);
  swift_release(KeyPath);
  *a3 = *(_BYTE *)(v4 + 56);
}

double sub_10009CC18(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1000D6D60, a2);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_100004864((unint64_t *)&qword_100116618, type metadata accessor for ViewConfiguration, (uint64_t)&unk_1000D6CA4);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_10009DBDC, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

void sub_10009CCC0(char a1, void *a2, void *a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[2];
  uint64_t v42;
  void *v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v7 = v6;
  v45 = a4;
  v46 = a5;
  if (a1 != 2)
    goto LABEL_18;
  KeyPath = swift_getKeyPath(&unk_1000D6D10, a2);
  v47 = v6;
  v13 = sub_100004864((unint64_t *)&qword_100116618, type metadata accessor for ViewConfiguration, (uint64_t)&unk_1000D6CA4);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v47, KeyPath, v13);
  swift_release(KeyPath);
  v14 = *(void **)(v6 + 32);
  if (v14 && (v15 = objc_msgSend(v14, "shazamID")) != 0)
  {
    v16 = v15;
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v19 = v18;

    if (!a3)
      goto LABEL_11;
  }
  else
  {
    v17 = 0;
    v19 = 0;
    if (!a3)
      goto LABEL_11;
  }
  v20 = objc_msgSend(a3, "shazamID");
  if (v20)
  {
    v21 = v20;
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v24 = v23;

    if (v19)
      goto LABEL_12;
LABEL_9:
    if (!v24)
      return;
    v19 = v24;
    goto LABEL_16;
  }
LABEL_11:
  v22 = 0;
  v24 = 0;
  if (!v19)
    goto LABEL_9;
LABEL_12:
  if (!v24)
  {
LABEL_16:
    swift_bridgeObjectRelease(v19);
LABEL_18:
    v26 = swift_getKeyPath(&unk_1000D6CC0, a2);
    v44 = a6;
    __chkstk_darwin(v26);
    v42 = v7;
    LOBYTE(v43) = a1;
    v47 = v7;
    v27 = sub_100004864((unint64_t *)&qword_100116618, type metadata accessor for ViewConfiguration, (uint64_t)&unk_1000D6CA4);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v47, v26, sub_10009D6F8, v41, (char *)&type metadata for () + 8, v27);
    swift_release(v26);
    v29 = swift_getKeyPath(&unk_1000D6CE8, v28);
    __chkstk_darwin(v29);
    v42 = v7;
    v43 = a2;
    v47 = v7;
    v30 = a2;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v47, v29, sub_10009D710, v41, (char *)&type metadata for () + 8, v27);
    swift_release(v29);

    v32 = swift_getKeyPath(&unk_1000D6D10, v31);
    __chkstk_darwin(v32);
    v42 = v7;
    v43 = a3;
    v47 = v7;
    v33 = a3;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v47, v32, sub_10009D74C, v41, (char *)&type metadata for () + 8, v27);
    swift_release(v32);

    v35 = swift_getKeyPath(&unk_1000D6D38, v34);
    __chkstk_darwin(v35);
    v36 = v46;
    v41[0] = v7;
    v41[1] = v45;
    v42 = v46;
    v47 = v7;
    swift_bridgeObjectRetain(v46);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v47, v35, sub_10009D788, &v40, (char *)&type metadata for () + 8, v27);
    swift_release(v35);
    swift_bridgeObjectRelease(v36);
    v37 = v44 & 1;
    v39 = swift_getKeyPath(&unk_1000D6D60, v38);
    __chkstk_darwin(v39);
    v42 = v7;
    LOBYTE(v43) = v37;
    v47 = v7;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v47, v39, sub_10009D7A4, v41, (char *)&type metadata for () + 8, v27);
    swift_release(v39);
    return;
  }
  if (v17 == v22 && v19 == v24)
  {
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v24);
    return;
  }
  v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v19, v22, v24, 0);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v24);
  if ((v25 & 1) == 0)
    goto LABEL_18;
}

uint64_t sub_10009D0E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  v1 = v0 + OBJC_IVAR____TtC16MusicRecognition17ViewConfiguration___observationRegistrar;
  v2 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10009D14C()
{
  return type metadata accessor for ViewConfiguration(0);
}

uint64_t type metadata accessor for ViewConfiguration(uint64_t a1)
{
  uint64_t result;

  result = qword_10011BC38;
  if (!qword_10011BC38)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ViewConfiguration);
  return result;
}

uint64_t sub_10009D190(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = &unk_1000D6B98;
  v4[1] = &unk_1000D6BB0;
  v4[2] = &unk_1000D6BB0;
  v4[3] = &unk_1000D6BC8;
  v4[4] = &unk_1000D6BE0;
  result = type metadata accessor for ObservationRegistrar(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ViewConfiguration.ViewName(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10009D274 + 4 * byte_1000D6B45[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10009D2A8 + 4 * asc_1000D6B40[v4]))();
}

uint64_t sub_10009D2A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10009D2B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10009D2B8);
  return result;
}

uint64_t sub_10009D2C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10009D2CCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10009D2D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10009D2D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ViewConfiguration.ViewName()
{
  return &type metadata for ViewConfiguration.ViewName;
}

unint64_t sub_10009D2F8()
{
  unint64_t result;

  result = qword_10011BCE8;
  if (!qword_10011BCE8)
  {
    result = swift_getWitnessTable(&unk_1000D6C7C, &type metadata for ViewConfiguration.ViewName);
    atomic_store(result, (unint64_t *)&qword_10011BCE8);
  }
  return result;
}

uint64_t sub_10009D33C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100004F7C(&qword_10011A350);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10009D37C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v0 = type metadata accessor for ViewConfiguration(0);
  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  *(_BYTE *)(v1 + 16) = 0;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_BYTE *)(v1 + 56) = 0;
  result = ObservationRegistrar.init()(v1);
  qword_10011BC00 = v1;
  return result;
}

double sub_10009D3D8@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  double result;

  if (qword_1001162D0 != -1)
    swift_once(&qword_1001162D0, sub_10009D37C);
  v2 = qword_10011BC00;
  *a1 = qword_10011BC00;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

unint64_t sub_10009D42C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_10009D5F0(a1, v4);
}

uint64_t sub_10009D45C(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for AnyHashable - 1) + 8))();
  return a1;
}

unint64_t sub_10009D490(uint64_t a1, uint64_t a2)
{
  Swift::Int v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6);
  String.hash(into:)(v6, a1, a2);
  v4 = Hasher._finalize()();
  return sub_10009D7F0(a1, a2, v4);
}

unint64_t sub_10009D4F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for EditorialVideoArtworkFlavor(0);
  v6 = sub_100004864(&qword_10011BCF8, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialVideoArtworkFlavor, (uint64_t)&protocol conformance descriptor for EditorialVideoArtworkFlavor);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_10009D8D0(a1, v7);
}

unint64_t sub_10009D564(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::Int v5;
  _QWORD v7[9];

  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v4 = v3;
  Hasher.init(_seed:)(v7);
  String.hash(into:)(v7, v2, v4);
  v5 = Hasher._finalize()();
  swift_bridgeObjectRelease(v4);
  return sub_10009DA10(a1, v5);
}

unint64_t sub_10009D5F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_10009D6B4(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = static AnyHashable.== infix(_:_:)(v9, a1);
      sub_10009D45C((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_10009D6B4(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for AnyHashable - 1) + 16))(a2, a1);
  return a2;
}

void sub_10009D6F8()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 16) = *(_BYTE *)(v0 + 24);
}

void sub_10009D710()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void **)(v0 + 24);
  v3 = *(void **)(v1 + 24);
  *(_QWORD *)(v1 + 24) = v2;
  v4 = v2;

}

void sub_10009D74C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void **)(v0 + 24);
  v3 = *(void **)(v1 + 32);
  *(_QWORD *)(v1 + 32) = v2;
  v4 = v2;

}

uint64_t sub_10009D788()
{
  return sub_10009D7B4();
}

void sub_10009D7A4()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 56) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_10009D7B4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[2];
  v2 = v0[4];
  v3 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 40) = v0[3];
  *(_QWORD *)(v1 + 48) = v2;
  swift_bridgeObjectRetain(v2);
  return swift_bridgeObjectRelease(v3);
}

unint64_t sub_10009D7F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = v10[1];
    v12 = *v10 == a1 && v11 == a2;
    if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
    {
      v13 = ~v5;
      do
      {
        v6 = (v6 + 1) & v13;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v14 = (_QWORD *)(v9 + 16 * v6);
        v15 = v14[1];
        v16 = *v14 == a1 && v15 == a2;
      }
      while (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_10009D8D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  uint64_t v14;
  char v15;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v18 = a1;
  v5 = type metadata accessor for EditorialVideoArtworkFlavor(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      v14 = sub_100004864(&qword_10011BD00, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialVideoArtworkFlavor, (uint64_t)&protocol conformance descriptor for EditorialVideoArtworkFlavor);
      v15 = dispatch thunk of static Equatable.== infix(_:_:)(v8, v18, v5, v14);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v15 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_10009DA10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v7 == v10 && v9 == v11)
    {
LABEL_16:
      swift_bridgeObjectRelease_n(v9, 2);
      return v5;
    }
    v13 = v11;
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v13);
    if ((v14 & 1) == 0)
    {
      v15 = ~v4;
      v5 = (v5 + 1) & v15;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
          v9 = v17;
          v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
          if (v16 == v18 && v9 == v19)
            break;
          v21 = v19;
          v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v9, v18, v19, 0);
          swift_bridgeObjectRelease(v9);
          swift_bridgeObjectRelease(v21);
          if ((v22 & 1) == 0)
          {
            v5 = (v5 + 1) & v15;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_10009DB84(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100107C10, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

ValueMetadata *_s20ViewConfigurationKeyVMa()
{
  return &_s20ViewConfigurationKeyVN;
}

void sub_10009DBDC()
{
  sub_10009D7A4();
}

void sub_10009DBF0()
{
  sub_10009D74C();
}

void sub_10009DC04()
{
  sub_10009D710();
}

void sub_10009DC18()
{
  sub_10009D6F8();
}

uint64_t sub_10009DC2C()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;

  v1 = objc_msgSend(v0, "window");
  if (!v1 || (v2 = v1, v3 = objc_msgSend(v1, "windowScene"), v2, !v3))
  {
    v6 = (void *)static UISceneSessionRole.activitySystemAperture.getter();
    goto LABEL_10;
  }
  v4 = objc_msgSend(v3, "session");

  v5 = objc_msgSend(v4, "role");
  v6 = (void *)static UISceneSessionRole.activitySystemAperture.getter();
  if (!v5)
  {
LABEL_10:

    v14 = 0;
    return v14 & 1;
  }
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v9 = v8;
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v12 = v11;
  if (v7 == v10 && v9 == v11)
    v14 = 1;
  else
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);

  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v12);
  return v14 & 1;
}

uint64_t *sub_10009DD5C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a2[1];
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for URL(0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_retain(v7);
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (uint64_t *)((char *)v4 + v13);
    v16 = (uint64_t *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (char *)v4 + v14;
    v19 = (char *)a2 + v14;
    v20 = *((_QWORD *)v19 + 1);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *((_QWORD *)v18 + 1) = v20;
    v18[16] = v19[16];
    v21 = *((_QWORD *)v19 + 3);
    *((_QWORD *)v18 + 3) = v21;
    v22 = a3[8];
    v23 = (uint64_t *)((char *)v4 + v22);
    v24 = (uint64_t *)((char *)a2 + v22);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v20);
    swift_bridgeObjectRetain(v21);
  }
  swift_retain(v25);
  return v4;
}

uint64_t sub_10009DE70(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_release(*(_QWORD *)(a1 + 8));
  v4 = a1 + a2[5];
  v5 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[6] + 8));
  v6 = a1 + a2[7];
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + 24));
  return swift_release(*(_QWORD *)(a1 + a2[8] + 8));
}

uint64_t sub_10009DEF8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for URL(0);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_retain(v6);
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v12);
  v15 = (_QWORD *)(a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = a1 + v13;
  v18 = a2 + v13;
  v19 = *(_QWORD *)(v18 + 8);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_QWORD *)(v17 + 8) = v19;
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
  v20 = *(_QWORD *)(v18 + 24);
  *(_QWORD *)(v17 + 24) = v20;
  v21 = a3[8];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRetain(v20);
  swift_retain(v24);
  return a1;
}

uint64_t sub_10009DFE4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  swift_retain(v7);
  swift_release(v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v15 = v14[1];
  v16 = v13[1];
  v13[1] = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  *(_QWORD *)v18 = *(_QWORD *)(a2 + v17);
  v20 = *(_QWORD *)(a2 + v17 + 8);
  v21 = *(_QWORD *)(a1 + v17 + 8);
  *(_QWORD *)(v18 + 8) = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v21);
  *(_BYTE *)(v18 + 16) = *(_BYTE *)(v19 + 16);
  v22 = *(_QWORD *)(v19 + 24);
  v23 = *(_QWORD *)(v18 + 24);
  *(_QWORD *)(v18 + 24) = v22;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRelease(v23);
  v24 = a3[8];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (_QWORD *)(a2 + v24);
  v27 = v26[1];
  v28 = v25[1];
  *v25 = *v26;
  v25[1] = v27;
  swift_retain(v27);
  swift_release(v28);
  return a1;
}

_OWORD *sub_10009E104(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  __int128 v13;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  v11 = (_OWORD *)((char *)a1 + v10);
  v12 = (_OWORD *)((char *)a2 + v10);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  return a1;
}

uint64_t sub_10009E198(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release(v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  v16 = v12[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease(v16);
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_QWORD *)(a2 + v17 + 8);
  v21 = *(_QWORD *)(a1 + v17 + 8);
  *(_QWORD *)v18 = *(_QWORD *)(a2 + v17);
  *(_QWORD *)(v18 + 8) = v20;
  swift_bridgeObjectRelease(v21);
  *(_BYTE *)(v18 + 16) = *(_BYTE *)(v19 + 16);
  v22 = *(_QWORD *)(v18 + 24);
  *(_QWORD *)(v18 + 24) = *(_QWORD *)(v19 + 24);
  swift_bridgeObjectRelease(v22);
  v23 = a3[8];
  v24 = *(_QWORD *)(a1 + v23 + 8);
  *(_OWORD *)(a1 + v23) = *(_OWORD *)(a2 + v23);
  swift_release(v24);
  return a1;
}

uint64_t sub_10009E27C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10009E288);
}

uint64_t sub_10009E288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10009E30C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10009E318);
}

uint64_t sub_10009E318(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for ToolbarShareButton(uint64_t a1)
{
  uint64_t result;

  result = qword_10011BD60;
  if (!qword_10011BD60)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ToolbarShareButton);
  return result;
}

uint64_t sub_10009E3D4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_1000D6DF8;
  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_1000D6E10;
    v4[3] = &unk_1000D6E28;
    v4[4] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10009E468(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000DEFC8, 1);
}

uint64_t sub_10009E478@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t OpaqueTypeConformance2;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t KeyPath;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char *v48;
  void *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  void *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  void *v71;
  unint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;

  v2 = v1;
  v69 = a1;
  v68 = type metadata accessor for NavigationBarButtonStyle(0);
  v3 = __chkstk_darwin(v68);
  v64 = (uint64_t *)((char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v3);
  v65 = (uint64_t)&v61 - v5;
  v62 = type metadata accessor for ToolbarShareButton(0);
  v6 = *(_QWORD *)(v62 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v62);
  v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100004F7C(&qword_10011BDA8);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100004F7C(&qword_10011BDB0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v61 - v17;
  v19 = sub_100004F7C(&qword_10011BDB8);
  v20 = *(_QWORD *)(v19 - 8);
  v66 = v19;
  v67 = v20;
  __chkstk_darwin(v19);
  v63 = (char *)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009EB28(v2, (uint64_t)v8);
  v22 = *(unsigned __int8 *)(v6 + 80);
  v23 = (v22 + 16) & ~v22;
  v24 = swift_allocObject(&unk_10010D1A0, v23 + v7, v22 | 7);
  sub_10000B4D4((uint64_t)v8, v24 + v23, type metadata accessor for ToolbarShareButton);
  v25 = sub_100004F7C(&qword_100116838);
  v70 = &type metadata for Image;
  v71 = &protocol witness table for Image;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v70, &opaque type descriptor for <<opaque return type of View.symbolVariant(_:)>>, 1);
  Button.init(action:label:)(sub_10009EC30, v24, sub_10009EA28, 0, v25, OpaqueTypeConformance2);
  v27 = v62;
  v28 = (uint64_t *)(v2 + *(int *)(v62 + 24));
  v29 = *v28;
  v30 = v28[1];
  v31 = sub_10009EC5C();
  View.accessibilityIdentifier(_:)(v29, v30, v9, v31);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v32 = (uint64_t *)(v2 + *(int *)(v27 + 28));
  v33 = *v32;
  v34 = v32[3];
  swift_bridgeObjectRetain(v32[1]);
  swift_bridgeObjectRetain(v34);
  v35 = Text.init(_:tableName:bundle:comment:)(v33);
  v37 = v36;
  v39 = v38;
  LOBYTE(v10) = v40 & 1;
  ModifiedContent<>.accessibilityLabel(_:)();
  sub_10000B64C(v35, v37, v10);
  swift_bridgeObjectRelease(v39);
  sub_10009ECA8((uint64_t)v16);
  KeyPath = swift_getKeyPath(&unk_1000D6E90, v41);
  v43 = (uint64_t)v64;
  *v64 = KeyPath;
  v44 = sub_100004F7C(&qword_100116698);
  swift_storeEnumTagMultiPayload(v43, v44, 0);
  v45 = v65;
  sub_10000B4D4(v43, v65, type metadata accessor for NavigationBarButtonStyle);
  v46 = sub_10009ECF0();
  v47 = sub_100004864(&qword_100116870, type metadata accessor for NavigationBarButtonStyle, (uint64_t)&unk_1000D2ACC);
  v48 = v63;
  v49 = (void *)v13;
  v50 = v13;
  v51 = (void *)v68;
  View.buttonStyle<A>(_:)(v45, v50);
  sub_10009ED74(v45);
  sub_10009ECA8((uint64_t)v18);
  v52 = *(_QWORD *)(v2 + 8);
  v74 = *(_BYTE *)v2;
  v75 = v52;
  sub_100004F7C(qword_10011BDD0);
  State.projectedValue.getter(&v70);
  v53 = v70;
  v54 = v71;
  v55 = v72;
  v56 = v2 + *(int *)(v27 + 20);
  v70 = v49;
  v71 = v51;
  v72 = v46;
  v73 = v47;
  v57 = swift_getOpaqueTypeConformance2(&v70, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  v58 = v66;
  View.sharingPicker(isPresented:item:subject:message:)(v53, v54, v55, v56, 0, 0, 0, 0, 0, 0, 0, 0, v66, v57);
  swift_release(v54);
  v59 = swift_release(v53);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v67 + 8))(v48, v58, v59);
}

uint64_t sub_10009E914(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;

  v2 = static Animation.default.getter();
  withAnimation<A>(_:_:)(v3);
  swift_release(v2);
  v4 = type metadata accessor for ToolbarShareButton(0);
  return (*(uint64_t (**)(void))(a1 + *(int *)(v4 + 32)))();
}

double sub_10009E98C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double result;
  BOOL v4;
  uint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  swift_retain(v1);
  v2 = sub_100004F7C(qword_10011BDD0);
  State.wrappedValue.getter(&v5, v2);
  v4 = (v5 & 1) == 0;
  State.wrappedValue.setter(&v4, v2);
  *(_QWORD *)&result = swift_release(v1).n128_u64[0];
  return result;
}

uint64_t sub_10009EA28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t);
  uint64_t v10;
  uint64_t v11;

  v0 = type metadata accessor for SymbolVariants(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v10 - v5;
  v11 = Image.init(systemName:)(0xD000000000000013, 0x80000001000D9110);
  v7 = static SymbolVariants.circle.getter();
  SymbolVariants.fill.getter(v7);
  v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v6, v0);
  View.symbolVariant(_:)(v4, &type metadata for Image, &protocol witness table for Image);
  v8(v4, v0);
  return swift_release(v11);
}

uint64_t sub_10009EB28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ToolbarShareButton(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10009EB6C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = (int *)type metadata accessor for ToolbarShareButton(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;
  swift_release(*(_QWORD *)(v0 + v4 + 8));
  v8 = v7 + v1[5];
  v9 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + v1[6] + 8));
  v10 = v7 + v1[7];
  swift_bridgeObjectRelease(*(_QWORD *)(v10 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v10 + 24));
  swift_release(*(_QWORD *)(v7 + v1[8] + 8));
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10009EC30()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ToolbarShareButton(0) - 8) + 80);
  return sub_10009E914(v0 + ((v1 + 16) & ~v1));
}

unint64_t sub_10009EC5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011BDC0;
  if (!qword_10011BDC0)
  {
    v1 = sub_1000050C8(&qword_10011BDA8);
    result = swift_getWitnessTable(&protocol conformance descriptor for Button<A>, v1);
    atomic_store(result, (unint64_t *)&qword_10011BDC0);
  }
  return result;
}

uint64_t sub_10009ECA8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100004F7C(&qword_10011BDB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10009ECF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011BDC8;
  if (!qword_10011BDC8)
  {
    v1 = sub_1000050C8(&qword_10011BDB0);
    sub_10009EC5C();
    sub_100004864((unint64_t *)&qword_100116570, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011BDC8);
  }
  return result;
}

uint64_t sub_10009ED74(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NavigationBarButtonStyle(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_10009EDB0()
{
  uint64_t v0;

  return sub_10009E98C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10009EDC8()
{
  uint64_t v0;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v0 = sub_1000050C8(&qword_10011BDB8);
  v3 = sub_1000050C8(&qword_10011BDB0);
  v4 = type metadata accessor for NavigationBarButtonStyle(255);
  v5 = sub_10009ECF0();
  v6 = sub_100004864(&qword_100116870, type metadata accessor for NavigationBarButtonStyle, (uint64_t)&unk_1000D2ACC);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v3, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  v3 = v0;
  v4 = OpaqueTypeConformance2;
  return swift_getOpaqueTypeConformance2(&v3, &opaque type descriptor for <<opaque return type of View.sharingPicker(isPresented:item:subject:message:)>>, 1);
}

uint64_t sub_10009EE80(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = "\t";
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 0, 3, v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t sub_10009EF04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64) + 7;
  if (v7 > 7
    || (*(_DWORD *)(v6 + 80) & 0x100000) != 0
    || ((v8 + ((v7 + 9) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v11 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v11 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16));
    swift_retain(v11);
  }
  else
  {
    v12 = ~v7;
    v13 = *(_QWORD *)a2;
    v14 = *(_BYTE *)(a2 + 8);
    sub_1000422C4(*(_QWORD *)a2, v14);
    *(_QWORD *)a1 = v13;
    *(_BYTE *)(a1 + 8) = v14;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))((a1 + v7 + 9) & v12, (a2 + v7 + 9) & v12, v5);
    *(_QWORD *)((v8 + ((a1 + v7 + 9) & v12)) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v8 + ((a2 + v7 + 9) & v12)) & 0xFFFFFFFFFFFFF8);
  }
  return a1;
}

uint64_t sub_10009F010(uint64_t a1, uint64_t a2)
{
  sub_100007CD0(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t sub_10009F058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_1000422C4(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 + 9 + a1) & ~v9;
  v11 = (v9 + 9 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v10, v11);
  *(_QWORD *)((*(_QWORD *)(v8 + 64) + 7 + v10) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v8 + 64) + 7 + v11) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_10009F0FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_1000422C4(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_100007CD0(v8, v9);
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v11 + 9 + a1) & ~v11;
  v13 = (v11 + 9 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 24))(v12, v13);
  *(_QWORD *)((*(_QWORD *)(v10 + 64) + 7 + v12) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v10 + 64) + 7 + v13) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_10009F1AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 9 + a1) & ~v5;
  v7 = (v5 + 9 + a2) & ~v5;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v6, v7);
  *(_QWORD *)((*(_QWORD *)(v4 + 64) + 7 + v6) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v4 + 64) + 7 + v7) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_10009F234(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_100007CD0(v8, v9);
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v11 + 9 + a1) & ~v11;
  v13 = ((unint64_t)a2 + v11 + 9) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 40))(v12, v13);
  *(_QWORD *)((*(_QWORD *)(v10 + 64) + 7 + v12) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v10 + 64) + 7 + v13) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_10009F2D0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0xFE)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  if (v6 >= a2)
  {
    if (v5 > 0xFE)
    {
      return (*(uint64_t (**)(uint64_t))(v4 + 48))((a1 + v7 + 9) & ~v7);
    }
    else
    {
      v12 = *(unsigned __int8 *)(a1 + 8);
      if (v12 > 1)
        return (v12 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  else
  {
    if (((((*(_QWORD *)(v4 + 64) + ((v7 + 9) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_10009F35C + 4 * byte_1000D6EC0[v10]))();
  }
}

void sub_10009F3DC(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0xFEu)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 >= a3)
  {
    v10 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + (((_DWORD)v7 + 9) & ~(_DWORD)v7) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v8 = a3 - v6 + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X13 }
  }
  if (((*(_DWORD *)(v5 + 64) + (((_DWORD)v7 + 9) & ~(_DWORD)v7) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v11 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + ((v7 + 9) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v11;
  }
  __asm { BR              X10 }
}

void sub_10009F4E4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x10009F55CLL);
}

void sub_10009F4EC(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x10009F4F4);
  JUMPOUT(0x10009F55CLL);
}

void sub_10009F534()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x10009F55CLL);
}

void sub_10009F53C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x10009F55CLL);
}

uint64_t sub_10009F544@<X0>(unsigned int a1@<W1>, unsigned int a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a1)
    goto LABEL_6;
  if (a2 <= 0xFE)
  {
    if (a1 > 0xFE)
      JUMPOUT(0x10009F550);
    *(_BYTE *)(v6 + 8) = -(char)a1;
LABEL_6:
    JUMPOUT(0x10009F55CLL);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))((v6 + v5 + 9) & a3);
}

uint64_t type metadata accessor for ScrollFadingView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100018E38(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ScrollFadingView);
}

uint64_t sub_10009F580(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_1000DF02C, 1);
}

uint64_t sub_10009F5B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t OpaqueTypeConformance2;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v38 = a2;
  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = __chkstk_darwin(a1);
  v36 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v6 + 16);
  v39 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000050C8(&qword_10011BE58);
  v34 = v10;
  v32 = *(_QWORD *)(a1 + 24);
  v11 = v32;
  v12 = type metadata accessor for EmptyVisualEffect(255);
  v13 = sub_10009FA30();
  v40 = v12;
  v41 = v13;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v40, &opaque type descriptor for <<opaque return type of VisualEffect.opacity(_:)>>, 1);
  v40 = v7;
  v41 = v10;
  v42 = v11;
  v43 = OpaqueTypeConformance2;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v40, &opaque type descriptor for <<opaque return type of View.visualEffect<A>(_:)>>, 0);
  v37 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v15 = __chkstk_darwin(OpaqueTypeMetadata2);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v33 = (uint64_t)&v32 - v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v9, v2 + *(int *)(a1 + 36), v7);
  v19 = v4;
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v21 = v36;
  v20(v36, v2, a1);
  v22 = *(unsigned __int8 *)(v19 + 80);
  v23 = (v22 + 32) & ~v22;
  v24 = swift_allocObject(&unk_10010D260, v23 + v5, v22 | 7);
  v25 = v32;
  *(_QWORD *)(v24 + 16) = v7;
  *(_QWORD *)(v24 + 24) = v25;
  (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v24 + v23, v21, a1);
  v26 = v34;
  v27 = OpaqueTypeConformance2;
  View.visualEffect<A>(_:)(sub_10009FB04, v24, v7, v34, v25, OpaqueTypeConformance2);
  v28 = swift_release(v24);
  (*(void (**)(char *, uint64_t, __n128))(v39 + 8))(v9, v7, v28);
  v40 = v7;
  v41 = v26;
  v42 = v25;
  v43 = v27;
  swift_getOpaqueTypeConformance2(&v40, &opaque type descriptor for <<opaque return type of View.visualEffect<A>(_:)>>, 1);
  v29 = v33;
  sub_100093E10((uint64_t)v17, OpaqueTypeMetadata2, v33);
  v30 = *(void (**)(char *, uint64_t))(v37 + 8);
  v30(v17, OpaqueTypeMetadata2);
  sub_100091208(v29, OpaqueTypeMetadata2, v38);
  return ((uint64_t (*)(uint64_t, uint64_t))v30)(v29, OpaqueTypeMetadata2);
}

uint64_t sub_10009F84C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v5;
  double v6;
  uint64_t v7;
  unint64_t v8;

  type metadata accessor for ScrollFadingView(0, a4, a5, a4);
  sub_10009F8CC();
  v6 = v5;
  v7 = type metadata accessor for EmptyVisualEffect(0);
  v8 = sub_10009FA30();
  return VisualEffect.opacity(_:)(v7, v8, v6);
}

void sub_10009F8CC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  char v9;
  _BYTE v11[24];
  __int128 v12;
  uint64_t v13;
  _QWORD v14[5];
  CGRect v15;
  char v16;

  v1 = v0;
  v2 = type metadata accessor for NamedCoordinateSpace(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = xmmword_1000D6F60;
  v13 = 0x3FF0000000000000;
  static CoordinateSpaceProtocol<>.scrollView.getter(v4);
  GeometryProxy.bounds(of:)(v14, v6);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  sub_10009FB74((uint64_t)v14, (uint64_t)&v15);
  if ((v16 & 1) == 0 && CGRectGetMinY(v15) > 0.0)
  {
    v7 = *v0;
    v8 = *((_BYTE *)v1 + 8);
    sub_1000422C4(*v1, v8);
    v9 = sub_100006F64(v7, v8);
    sub_100007CD0(v7, v8);
    if ((v9 & 1) == 0)
      swift_beginAccess(&v12, v11, 1, 0);
  }
}

unint64_t sub_10009FA30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011BE60;
  if (!qword_10011BE60)
  {
    v1 = type metadata accessor for EmptyVisualEffect(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for EmptyVisualEffect, v1);
    atomic_store(result, (unint64_t *)&qword_10011BE60);
  }
  return result;
}

uint64_t sub_10009FA78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for ScrollFadingView(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v8 | 7;
  v12 = v4 + v9;
  sub_100007CD0(*(_QWORD *)(v4 + v9), *(_BYTE *)(v4 + v9 + 8));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v12 + *(int *)(v6 + 36), v5);
  return swift_deallocObject(v4, v10, v11);
}

uint64_t sub_10009FB04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *(_QWORD *)(v4 + 16);
  v8 = *(_QWORD *)(v4 + 24);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ScrollFadingView(0, v7, v8, a4) - 8) + 80);
  return sub_10009F84C(a1, a2, v4 + ((v9 + 32) & ~v9), v7, v8);
}

uint64_t sub_10009FB74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004F7C(&qword_10011BE68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10009FBBC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *a1;
  v2 = a1[1];
  v3 = sub_1000050C8(&qword_10011BE58);
  v6 = type metadata accessor for EmptyVisualEffect(255);
  v7 = sub_10009FA30();
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of VisualEffect.opacity(_:)>>, 1);
  v6 = v1;
  v7 = v3;
  v8 = v2;
  v9 = OpaqueTypeConformance2;
  return swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.visualEffect<A>(_:)>>, 1);
}

uint64_t sub_10009FC3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t TupleTypeMetadata2;
  uint64_t v15;
  uint64_t WitnessTable;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[16];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v37 = a1;
  v41 = a2;
  v3 = type metadata accessor for AccessibilityChildBehavior(0);
  v39 = *(_QWORD *)(v3 - 8);
  v40 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v36 = v6;
  v7 = sub_1000050C8(&qword_100116F40);
  v8 = type metadata accessor for ModifiedContent(255, v6, v7);
  v9 = sub_1000050C8(&qword_100116540);
  v10 = type metadata accessor for ModifiedContent(255, v8, v9);
  v11 = sub_1000050C8(&qword_100116550);
  v12 = type metadata accessor for ModifiedContent(255, v10, v11);
  v13 = sub_1000050C8(&qword_1001189F0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v12, v13, 0, 0);
  v15 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v15);
  v17 = type metadata accessor for HStack(0, v15, WitnessTable);
  v35 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v19 = (char *)&v34 - v18;
  v20 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v17);
  v46 = v17;
  v47 = v20;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v46, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 0);
  v22 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v23 = __chkstk_darwin(OpaqueTypeMetadata2);
  v25 = (char *)&v34 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __chkstk_darwin(v23);
  v28 = (char *)&v34 - v27;
  v29 = *(_QWORD *)(v37 + 24);
  v43 = v36;
  v44 = v29;
  v45 = v38;
  v30 = static VerticalAlignment.center.getter(v26);
  v31 = HStack.init(alignment:spacing:content:)(v30, 0x4020000000000000, 0, sub_1000A3764, v42, v15, WitnessTable);
  static AccessibilityChildBehavior.combine.getter(v31);
  View.accessibilityElement(children:)(v5, v17, v20);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v5, v40);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v19, v17);
  v46 = v17;
  v47 = v20;
  swift_getOpaqueTypeConformance2(&v46, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  sub_100093E10((uint64_t)v25, OpaqueTypeMetadata2, (uint64_t)v28);
  v32 = *(void (**)(char *, uint64_t))(v22 + 8);
  v32(v25, OpaqueTypeMetadata2);
  sub_100091208((uint64_t)v28, OpaqueTypeMetadata2, v41);
  return ((uint64_t (*)(char *, uint64_t))v32)(v28, OpaqueTypeMetadata2);
}

uint64_t sub_10009FF0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t WitnessTable;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[2];
  uint64_t v66[9];

  v54 = a1;
  v62 = a4;
  v6 = sub_100004F7C(&qword_1001189E8);
  __chkstk_darwin(v6);
  v58 = (uint64_t)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_100004F7C(&qword_1001189F0);
  v8 = __chkstk_darwin(v61);
  v59 = (uint64_t)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v60 = (uint64_t)&v50 - v10;
  v11 = sub_1000050C8(&qword_100116F40);
  v12 = type metadata accessor for ModifiedContent(0, a2, v11);
  v51 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v50 - v13;
  v15 = sub_1000050C8(&qword_100116540);
  v16 = type metadata accessor for ModifiedContent(0, v12, v15);
  v55 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v50 - v17;
  v19 = sub_1000050C8(&qword_100116550);
  v20 = type metadata accessor for ModifiedContent(0, v16, v19);
  v57 = *(_QWORD *)(v20 - 8);
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v53 = (uint64_t)&v50 - v24;
  v52 = a2;
  v56 = type metadata accessor for SongMetadataRowView(0, a2, a3, v25);
  v50 = a3;
  v26 = View.lineLimit(_:)(1, 0, a2, a3);
  v27 = static Font.subheadline.getter(v26);
  v28 = sub_10000522C(&qword_100116F38, &qword_100116F40, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v66[6] = a3;
  v66[7] = v28;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v12);
  View.font(_:)(v27, v12, WitnessTable);
  v30 = swift_release(v27);
  v31 = (*(uint64_t (**)(char *, uint64_t, __n128))(v51 + 8))(v14, v12, v30);
  LODWORD(v66[0]) = static HierarchicalShapeStyle.secondary.getter(v31);
  v32 = sub_10000522C(&qword_100116538, &qword_100116540, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v66[4] = WitnessTable;
  v66[5] = v32;
  v33 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
  View.foregroundStyle<A>(_:)(v66, v16, &type metadata for HierarchicalShapeStyle, v33, &protocol witness table for HierarchicalShapeStyle);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v18, v16);
  v34 = sub_10000522C(&qword_100116548, &qword_100116550, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
  v66[2] = v33;
  v66[3] = v34;
  v35 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v20);
  v36 = v53;
  sub_100093E10((uint64_t)v23, v20, v53);
  v37 = v57;
  v38 = *(void (**)(char *, uint64_t))(v57 + 8);
  v38(v23, v20);
  v40 = sub_1000A0408(v54, v52, v50, v39);
  v42 = v41;
  v43 = v58;
  sub_1000A0848((uint64_t)v40, v41, v56, v58);
  v44 = swift_release(v42);
  v45 = static Alignment.trailing.getter(v44);
  v46 = v59;
  sub_100034A78(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v59, 0.0, 1, 0.0, 1, v45, v47);
  sub_10000526C(v43, &qword_1001189E8);
  v48 = v60;
  sub_100007C48(v46, v60, &qword_1001189F0);
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v23, v36, v20);
  v66[0] = (uint64_t)v23;
  sub_100007C8C(v48, v46, &qword_1001189F0);
  v66[1] = v46;
  v65[0] = v20;
  v65[1] = v61;
  v63 = v35;
  v64 = sub_1000A3890(&qword_10011BF00, &qword_1001189F0, (void (*)(void))sub_1000A3770);
  sub_100027640(v66, 2uLL, (uint64_t)v65);
  sub_10000526C(v48, &qword_1001189F0);
  v38((char *)v36, v20);
  sub_10000526C(v46, &qword_1001189F0);
  return ((uint64_t (*)(char *, uint64_t))v38)(v23, v20);
}

uint64_t (*sub_1000A0408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v7 = type metadata accessor for SongMetadataRowView(0, a2, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v11 = (char *)&v16 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v16 - v10, a1, v7);
  v12 = *(unsigned __int8 *)(v8 + 80);
  v13 = (v12 + 32) & ~v12;
  v14 = swift_allocObject(&unk_10010D340, v13 + v9, v12 | 7);
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v14 + v13, v11, v7);
  return sub_1000A3AE4;
}

uint64_t sub_1000A04DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  void (*v29)(char *, uint64_t);
  uint8_t *v30;
  void (**v31)(void);
  uint64_t v32;
  _QWORD *v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v2 = v1;
  v4 = type metadata accessor for OpenURLAction(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v38 = (uint8_t **)((char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_100004F7C((uint64_t *)&unk_100118CE0);
  __chkstk_darwin(v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v34 - v15;
  v39 = a1;
  sub_100007C8C(v1 + *(int *)(a1 + 44), (uint64_t)v9, (uint64_t *)&unk_100118CE0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    return sub_10000526C((uint64_t)v9, (uint64_t *)&unk_100118CE0);
  v37 = v5;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
  if (qword_100115DD8 != -1)
    swift_once(&qword_100115DD8, sub_10000C418);
  v18 = type metadata accessor for Logger(0);
  sub_10000B5E8(v18, (uint64_t)qword_100124478);
  v19 = (*(uint64_t (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc(12, -1);
    v36 = v4;
    v23 = (uint8_t *)v22;
    v24 = swift_slowAlloc(32, -1);
    v41 = v24;
    v35 = v1;
    *(_DWORD *)v23 = 136315138;
    v34 = v23 + 4;
    v25 = sub_100004864((unint64_t *)&qword_1001168E8, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    v26 = dispatch thunk of CustomStringConvertible.description.getter(v10, v25);
    v28 = v27;
    v40 = sub_1000529F4(v26, v27, &v41);
    v2 = v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v34, v23 + 12);
    swift_bridgeObjectRelease(v28);
    v29 = *(void (**)(char *, uint64_t))(v11 + 8);
    v29(v14, v10);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Opening %s", v23, 0xCu);
    swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    v30 = v23;
    v4 = v36;
    swift_slowDealloc(v30, -1, -1);
  }
  else
  {
    v29 = *(void (**)(char *, uint64_t))(v11 + 8);
    v29(v14, v10);
  }

  v31 = (void (**)(void))(v2 + *(int *)(v39 + 48));
  v32 = v37;
  if (*v31)
    (*v31)();
  v33 = v38;
  sub_100006A38(v38);
  OpenURLAction.callAsFunction(_:)(v16);
  (*(void (**)(_QWORD *, uint64_t))(v32 + 8))(v33, v4);
  return ((uint64_t (*)(char *, uint64_t))v29)(v16, v10);
}

uint64_t sub_1000A0848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  int v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t KeyPath;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _OWORD v110[3];
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  uint64_t v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char v136;

  v102 = a2;
  v100 = a1;
  v109 = a4;
  v105 = sub_100004F7C(&qword_10011BF40);
  v6 = __chkstk_darwin(v105);
  v106 = (char *)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(v6);
  v99 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100004F7C(&qword_10011BF48);
  __chkstk_darwin(v9);
  v103 = (uint64_t)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100004F7C(&qword_10011BF28);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v101 = (char *)&v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100004F7C(&qword_10011BF18);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v95 - v18;
  v20 = sub_100004F7C((uint64_t *)&unk_100118CE0);
  __chkstk_darwin(v20);
  v22 = (char *)&v95 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = a3;
  sub_100007C8C(v4 + *(int *)(a3 + 44), (uint64_t)v22, (uint64_t *)&unk_100118CE0);
  v23 = type metadata accessor for URL(0);
  v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v22, 1, v23);
  v108 = v14;
  if (v24 == 1)
  {
    sub_10000526C((uint64_t)v22, (uint64_t *)&unk_100118CE0);
    v25 = (_QWORD *)(v4 + *(int *)(v107 + 40));
    v26 = v25[1];
    *(_QWORD *)&v119 = *v25;
    *((_QWORD *)&v119 + 1) = v26;
    v27 = sub_10000B110();
    swift_bridgeObjectRetain(v26);
    v28 = Text.init<A>(_:)(&v119, &type metadata for String, v27);
    v30 = v29;
    v32 = v31;
    v34 = v33 & 1;
    v35 = static Font.subheadline.getter(v28);
    v36 = v106;
    v37 = v35;
    v38 = Text.font(_:)(v35, v28, v30, v34, v32);
    v40 = v39;
    v42 = v41;
    v107 = v43;
    swift_release(v37);
    v44 = v42 & 1;
    sub_10000B64C(v28, v30, v34);
    v45 = swift_bridgeObjectRelease(v32);
    v46 = static Color.primary.getter(v45);
    v47 = v107;
    v48 = Text.foregroundColor(_:)(v46, v38, v40, v44, v107);
    v50 = v49;
    LOBYTE(v37) = v51;
    v104 = v52;
    swift_release(v46);
    LOBYTE(v37) = v37 & 1;
    sub_10000B64C(v38, v40, v44);
    swift_bridgeObjectRelease(v47);
    KeyPath = swift_getKeyPath(&unk_1000D7088, v53);
    v130 = v48;
    v131 = v50;
    v132 = v37;
    v55 = v104;
    v133 = v104;
    v134 = KeyPath;
    v135 = 1;
    v136 = 0;
    v56 = static Alignment.trailing.getter();
    sub_100034894(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v110, 0.0, 1, 0.0, 1, v56, v57);
    sub_10000B64C(v48, v50, v37);
    swift_release(KeyPath);
    swift_bridgeObjectRelease(v55);
    v127 = v116;
    v128 = v117;
    v129 = v118;
    v123 = v112;
    v124 = v113;
    v58 = v115;
    v125 = v114;
    v126 = v115;
    v119 = v110[0];
    v120 = v110[1];
    v59 = v111;
    v121 = v110[2];
    v122 = v111;
    v60 = v117;
    *((_OWORD *)v36 + 8) = v116;
    *((_OWORD *)v36 + 9) = v60;
    *((_QWORD *)v36 + 20) = v129;
    v61 = v124;
    *((_OWORD *)v36 + 4) = v123;
    *((_OWORD *)v36 + 5) = v61;
    *((_OWORD *)v36 + 6) = v125;
    *((_OWORD *)v36 + 7) = v58;
    v62 = v120;
    *(_OWORD *)v36 = v119;
    *((_OWORD *)v36 + 1) = v62;
    *((_OWORD *)v36 + 2) = v121;
    *((_OWORD *)v36 + 3) = v59;
    swift_storeEnumTagMultiPayload(v36, v105, 1);
    v63 = sub_100004F7C(&qword_10011BF38);
    v64 = sub_1000A37F4();
    v65 = sub_1000A3890(&qword_10011BF30, &qword_10011BF38, (void (*)(void))sub_100011FD8);
    return _ConditionalContent<>.init(storage:)(v36, v108, v63, v64, v65);
  }
  v96 = v12;
  v97 = v17;
  v98 = v19;
  sub_10000526C((uint64_t)v22, (uint64_t *)&unk_100118CE0);
  v67 = swift_allocObject(&unk_10010D318, 32, 7);
  *(_QWORD *)(v67 + 16) = v100;
  v68 = v102;
  *(_QWORD *)(v67 + 24) = v102;
  v69 = __chkstk_darwin(v68);
  v70 = v107;
  v93 = *(_OWORD *)(v107 + 16);
  v94 = v4;
  swift_retain(v69);
  v71 = sub_100004F7C(&qword_100116F30);
  v72 = sub_100011FD8();
  v73 = v101;
  Button.init(action:label:)(sub_100054708, v67, sub_1000A3928, &v92, v71, v72);
  v74 = v103;
  sub_100007C8C(v4 + *(int *)(v70 + 52), v103, &qword_10011BF48);
  v75 = type metadata accessor for SongMetadataRowViewModel(0);
  v76 = v70;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 48))(v74, 1, v75) == 1)
  {
    sub_10000526C(v74, &qword_10011BF48);
    v77 = v99;
    (*(void (**)(void))(v104 + 16))();
    v78 = v105;
    v79 = (uint64_t)v106;
    v80 = v11;
    v81 = v96;
LABEL_6:
    v84 = &v77[*(int *)(v76 + 40)];
    v82 = *(_QWORD *)v84;
    v83 = *((_QWORD *)v84 + 1);
    swift_bridgeObjectRetain(v83);
    goto LABEL_7;
  }
  v82 = *(_QWORD *)(v74 + 48);
  v83 = *(_QWORD *)(v74 + 56);
  swift_bridgeObjectRetain(v83);
  sub_1000A137C(v74);
  v77 = v99;
  (*(void (**)(void))(v104 + 16))();
  v78 = v105;
  v79 = (uint64_t)v106;
  v80 = v11;
  v81 = v96;
  if (!v83)
    goto LABEL_6;
LABEL_7:
  (*(void (**)(char *, uint64_t))(v104 + 8))(v77, v76);
  *(_QWORD *)&v119 = v82;
  *((_QWORD *)&v119 + 1) = v83;
  v85 = sub_10000522C(&qword_10011BF20, &qword_10011BF28, (uint64_t)&protocol conformance descriptor for Button<A>);
  v86 = sub_10000B110();
  v87 = (uint64_t)v97;
  View.accessibilityLabel<A>(_:)(&v119, v80, &type metadata for String, v85, v86);
  swift_bridgeObjectRelease(v83);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v73, v80);
  v88 = (uint64_t)v98;
  sub_100007C48(v87, (uint64_t)v98, &qword_10011BF18);
  sub_100007C8C(v88, v79, &qword_10011BF18);
  swift_storeEnumTagMultiPayload(v79, v78, 0);
  v89 = sub_100004F7C(&qword_10011BF38);
  v90 = sub_1000A37F4();
  v91 = sub_1000A3890(&qword_10011BF30, &qword_10011BF38, (void (*)(void))sub_100011FD8);
  _ConditionalContent<>.init(storage:)(v79, v108, v89, v90, v91);
  return sub_10000526C(v88, &qword_10011BF18);
}

uint64_t sub_1000A0F88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  _QWORD v34[2];

  v6 = (_QWORD *)(a1 + *(int *)(type metadata accessor for SongMetadataRowView(0, a2, a3, a4) + 40));
  v7 = v6[1];
  v34[0] = *v6;
  v34[1] = v7;
  v8 = sub_10000B110();
  swift_bridgeObjectRetain(v7);
  v9 = Text.init<A>(_:)(v34, &type metadata for String, v8);
  v11 = v10;
  v13 = v12;
  v15 = v14 & 1;
  v16 = static Font.subheadline.getter(v9);
  v17 = Text.font(_:)(v16, v9, v11, v15, v13);
  v19 = v18;
  v21 = v20;
  v23 = v22;
  swift_release(v16);
  LOBYTE(v16) = v21 & 1;
  sub_10000B64C(v9, v11, v15);
  v24 = swift_bridgeObjectRelease(v13);
  v25 = static Color.blue.getter(v24);
  v34[0] = v25;
  v26 = Text.foregroundStyle<A>(_:)(v34, v17, v19, v21 & 1, v23, &type metadata for Color, &protocol witness table for Color);
  v28 = v27;
  LOBYTE(v15) = v29;
  v31 = v30;
  sub_10000B64C(v17, v19, v16);
  swift_release(v25);
  swift_bridgeObjectRelease(v23);
  result = swift_getKeyPath(&unk_1000D7088, v32);
  *(_QWORD *)a5 = v26;
  *(_QWORD *)(a5 + 8) = v28;
  *(_BYTE *)(a5 + 16) = v15 & 1;
  *(_QWORD *)(a5 + 24) = v31;
  *(_QWORD *)(a5 + 32) = result;
  *(_QWORD *)(a5 + 40) = 1;
  *(_BYTE *)(a5 + 48) = 0;
  return result;
}

uint64_t sub_1000A10FC@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _DWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v45 = a2;
  v46 = a3;
  v47 = a4;
  v5 = (int *)sub_100004F7C(qword_10011BE70);
  __chkstk_darwin(v5);
  v7 = (_QWORD *)((char *)v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_100004F7C((uint64_t *)&unk_100118CE0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)v41 - v12;
  v14 = *a1;
  sub_1000682EC(*a1);
  v43 = v16;
  v44 = v15;
  v41[1] = v17;
  v42 = v18;
  sub_100068BAC();
  v20 = v19;
  v22 = v21;
  if (v14 == 2)
  {
    v24 = *((_QWORD *)a1 + 4);
    v23 = *((_QWORD *)a1 + 5);
    sub_10000C9C8((_QWORD *)a1 + 1, v24);
    (*(void (**)(uint64_t, uint64_t))(v23 + 32))(v24, v23);
  }
  else
  {
    v25 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v11, 1, 1, v25);
  }
  if (v22)
    v26 = v22;
  else
    v26 = 0xE000000000000000;
  if (!v22)
    v20 = 0;
  sub_100007C48((uint64_t)v11, (uint64_t)v13, (uint64_t *)&unk_100118CE0);
  *v7 = swift_getKeyPath(&unk_1000D6FB0, v27);
  v28 = sub_100004F7C(&qword_1001166A0);
  swift_storeEnumTagMultiPayload(v7, v28, 0);
  v29 = Text.init(_:tableName:bundle:comment:)(v44);
  v30 = (char *)v7 + v5[9];
  *(_QWORD *)v30 = v29;
  *((_QWORD *)v30 + 1) = v31;
  v30[16] = v32 & 1;
  *((_QWORD *)v30 + 3) = v33;
  v34 = (_QWORD *)((char *)v7 + v5[10]);
  *v34 = v20;
  v34[1] = v26;
  sub_100007C48((uint64_t)v13, (uint64_t)v7 + v5[11], (uint64_t *)&unk_100118CE0);
  v35 = (char *)v7 + v5[13];
  v36 = type metadata accessor for SongMetadataRowViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v35, 1, 1, v36);
  v37 = (_QWORD *)((char *)v7 + v5[12]);
  v39 = v46;
  v38 = v47;
  *v37 = v45;
  v37[1] = v39;
  sub_100007C48((uint64_t)v7, v38, qword_10011BE70);
  return sub_1000A137C((uint64_t)a1);
}

uint64_t sub_1000A137C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SongMetadataRowViewModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1000A13B8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[6];

  sub_1000A36D8(319, (unint64_t *)&qword_1001167D8, (uint64_t (*)(uint64_t))&type metadata accessor for OpenURLAction, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
    if (v5 <= 0x3F)
    {
      v10[1] = *(_QWORD *)(v4 - 8) + 64;
      v10[2] = &unk_1000D6FF8;
      sub_1000A36D8(319, (unint64_t *)&qword_100116718, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      if (v7 <= 0x3F)
      {
        v10[3] = *(_QWORD *)(v6 - 8) + 64;
        v10[4] = &unk_1000D7010;
        sub_1000A36D8(319, &qword_10011BEF8, type metadata accessor for SongMetadataRowViewModel, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
        if (v9 <= 0x3F)
        {
          v10[5] = *(_QWORD *)(v8 - 8) + 64;
          swift_initStructMetadata(a1, 0, 6, v10, a1 + 32);
        }
      }
    }
  }
}

uint64_t *sub_1000A14D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  unsigned int (*v33)(const void *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  unint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  void (*v53)(unint64_t, unint64_t, uint64_t);
  uint64_t v55;
  size_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  size_t __n;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v62 = type metadata accessor for OpenURLAction(0);
  v4 = *(_QWORD *)(v62 - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v67 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v67 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v64 = v5 + v7 + 1;
  v66 = v6;
  v65 = *(_QWORD *)(v6 + 64) + 7;
  v68 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v68 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = v9;
  if (*(_DWORD *)(v8 + 84))
    v11 = *(_QWORD *)(v8 + 64);
  else
    v11 = *(_QWORD *)(v8 + 64) + 1;
  v12 = type metadata accessor for Date.FormatStyle(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_DWORD *)(v13 + 80);
  v15 = *(_QWORD *)(v13 + 64);
  __n = v11;
  v16 = v9 | *(_DWORD *)(v4 + 80) & 0xF8 | v14 | v7;
  if (v16 <= 7
    && ((v9 | *(_DWORD *)(v13 + 80) | *(_DWORD *)(v4 + 80) | v7) & 0x100000) == 0
    && ((v15 + v14 + ((v14 + 64) & ~v14)) & ~v14)
     + v15
     + ((v14
       + 16
       + ((v11
         + 7
         + ((v9 + ((v65 + (v64 & ~(unint64_t)v7)) & 0xFFFFFFFFFFFFFFF8) + 16) & ~(unint64_t)v9)) & 0xFFFFFFFFFFFFFFF8)) & ~(v14 | 7)) <= 0x18)
  {
    v58 = v11 + 7;
    v21 = *((unsigned __int8 *)a2 + v5);
    v55 = v15 + v14;
    if (v21 >= 2)
    {
      if (v5 <= 3)
        v22 = v5;
      else
        v22 = 4;
      __asm { BR              X12 }
    }
    v59 = *(_DWORD *)(v13 + 84);
    v56 = ((v15 + v14 + ((v14 + 64) & ~v14)) & ~v14) + v15;
    v57 = v12;
    v60 = v14 + 16;
    v61 = *(_QWORD *)(v12 - 8);
    v23 = ~(unint64_t)v7;
    v24 = ~(unint64_t)v9;
    if (v21 == 1)
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v4 + 16))(a1, a2, v62);
      v25 = 1;
    }
    else
    {
      v26 = *a2;
      *a1 = *a2;
      swift_retain(v26);
      v25 = 0;
    }
    *((_BYTE *)a1 + v5) = v25;
    v27 = ((unint64_t)a1 + v64) & v23;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v66 + 16))(v27, ((unint64_t)a2 + v64) & v23, v67);
    v28 = (_QWORD *)((v65 + v27) & 0xFFFFFFFFFFFFFFF8);
    v29 = (_QWORD *)((v65 + (((unint64_t)a2 + v64) & v23)) & 0xFFFFFFFFFFFFFFF8);
    *v28 = *v29;
    v30 = v29[1];
    v28[1] = v30;
    v31 = (void *)(((unint64_t)v28 + v9 + 16) & v24);
    v32 = (const void *)(((unint64_t)v29 + v10 + 16) & v24);
    v33 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48);
    swift_bridgeObjectRetain(v30);
    if (v33(v32, 1, v68))
    {
      memcpy(v31, v32, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v31, v32, v68);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v31, 0, 1, v68);
    }
    v34 = v14 | 7;
    v35 = ~(v14 | 7);
    v36 = ((unint64_t)v31 + v58) & 0xFFFFFFFFFFFFFFF8;
    v37 = ((unint64_t)v32 + v58) & 0xFFFFFFFFFFFFFFF8;
    if (*(_QWORD *)v37 < 0xFFFFFFFFuLL)
    {
      *(_OWORD *)v36 = *(_OWORD *)v37;
    }
    else
    {
      v38 = *(_QWORD *)(v37 + 8);
      *(_QWORD *)v36 = *(_QWORD *)v37;
      *(_QWORD *)(v36 + 8) = v38;
      swift_retain(v38);
      v34 = v14 | 7;
    }
    v39 = v61;
    v40 = ~v14;
    v41 = (_QWORD *)((v36 + v34 + 16) & v35);
    v42 = v37 + v34 + 16;
    v43 = (_QWORD *)(v42 & v35);
    if (v59 < 0)
    {
      v45 = (*(uint64_t (**)(unint64_t))(v61 + 48))((v60
                                                                    + (((unint64_t)v43 + 55) & 0xFFFFFFFFFFFFFFF8)) & v40);
      v39 = v61;
      if (v45)
      {
LABEL_34:
        memcpy(v41, v43, v56);
        return a1;
      }
    }
    else
    {
      v44 = *(_QWORD *)((v42 & v35) + 0x20);
      if (v44 >= 0xFFFFFFFF)
        LODWORD(v44) = -1;
      if ((_DWORD)v44 != -1)
        goto LABEL_34;
    }
    *(_BYTE *)v41 = *(_BYTE *)v43;
    v46 = v43[4];
    v41[4] = v46;
    v41[5] = v43[5];
    v47 = v39;
    (**(void (***)(uint64_t, uint64_t))(v46 - 8))((uint64_t)(v41 + 1), (uint64_t)(v43 + 1));
    v48 = (_QWORD *)(((unint64_t)v41 + 55) & 0xFFFFFFFFFFFFFFF8);
    v49 = (_QWORD *)(((unint64_t)v43 + 55) & 0xFFFFFFFFFFFFFFF8);
    *v48 = *v49;
    v50 = v49[1];
    v48[1] = v50;
    v51 = ((unint64_t)v48 + v60) & v40;
    v52 = ((unint64_t)v49 + v60) & v40;
    v53 = *(void (**)(unint64_t, unint64_t, uint64_t))(v47 + 16);
    swift_bridgeObjectRetain(v50);
    v53(v51, v52, v57);
    v53((v55 + v51) & v40, (v55 + v52) & v40, v57);
    return a1;
  }
  v19 = *a2;
  *a1 = *a2;
  v20 = v19 + (((v16 | 7) + 16) & ~(unint64_t)(v16 | 7));
  swift_retain(v19);
  return (uint64_t *)v20;
}

uint64_t sub_1000A1970(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t result;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);

  v4 = type metadata accessor for OpenURLAction(0);
  v5 = *(_QWORD *)(v4 - 8);
  if (*(_QWORD *)(v5 + 64) <= 8uLL)
    v6 = 8;
  else
    v6 = *(_QWORD *)(v5 + 64);
  v7 = *((unsigned __int8 *)a1 + v6);
  if (v7 >= 2)
  {
    if (v6 <= 3)
      v8 = v6;
    else
      v8 = 4;
    __asm { BR              X13 }
  }
  if (v7 == 1)
    (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(a1, v4);
  else
    v9 = swift_release(*a1);
  v10 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v11 = ((unint64_t)a1 + v6 + *(unsigned __int8 *)(v10 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  (*(void (**)(unint64_t, __n128))(v10 + 8))(v11, v9);
  v12 = (*(_QWORD *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v12 + 8));
  v13 = type metadata accessor for URL(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = (v12 + *(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v14 + 48))(v15, 1, v13))
    (*(void (**)(unint64_t, uint64_t))(v14 + 8))(v15, v13);
  v16 = v15 + *(_QWORD *)(v14 + 64);
  if (!*(_DWORD *)(v14 + 84))
    ++v16;
  v17 = (_QWORD *)((v16 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (*v17 >= 0xFFFFFFFFuLL)
    swift_release(v17[1]);
  v18 = type metadata accessor for Date.FormatStyle(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = (uint64_t)v17 + (v20 | 7) + 16;
  v22 = v21 & ~(v20 | 7);
  v23 = ~v20;
  v24 = *(_QWORD *)(v19 + 64);
  if ((*(_DWORD *)(v19 + 84) & 0x80000000) != 0)
  {
    result = (*(uint64_t (**)(unint64_t))(v19 + 48))((v20 + ((v22 + 55) & 0xFFFFFFFFFFFFFFF8) + 16) & v23);
    if ((_DWORD)result)
      return result;
LABEL_24:
    _s16MusicRecognition11AnyPlaylistVwxx_0((_QWORD *)(v22 + 8));
    v27 = (v22 + 55) & 0xFFFFFFFFFFFFFFF8;
    swift_bridgeObjectRelease(*(_QWORD *)(v27 + 8));
    v28 = (v20 + v27 + 16) & v23;
    v29 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v29(v28, v18);
    return ((uint64_t (*)(uint64_t, uint64_t))v29)((v24 + v20 + v28) & v23, v18);
  }
  v25 = *(_QWORD *)((v21 & ~(v20 | 7)) + 0x20);
  if (v25 >= 0xFFFFFFFF)
    LODWORD(v25) = -1;
  result = (v25 + 1);
  if ((_DWORD)v25 == -1)
    goto LABEL_24;
  return result;
}

uint64_t *sub_1000A1C08(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  unsigned int (*v27)(const void *, uint64_t, uint64_t);
  int v28;
  uint64_t v29;
  size_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for OpenURLAction(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_QWORD *)(v7 + 64) <= 8uLL)
    v8 = 8;
  else
    v8 = *(_QWORD *)(v7 + 64);
  v9 = *((unsigned __int8 *)a2 + v8);
  if (v9 >= 2)
  {
    if (v8 <= 3)
      v10 = v8;
    else
      v10 = 4;
    __asm { BR              X13 }
  }
  if (v9 == 1)
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
    v11 = 1;
  }
  else
  {
    v12 = *a2;
    *a1 = *a2;
    swift_retain(v12);
    v11 = 0;
  }
  *((_BYTE *)a1 + v8) = v11;
  v13 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v8 + v14 + 1;
  v16 = ((unint64_t)a1 + v15) & ~v14;
  v17 = ((unint64_t)a2 + v15) & ~v14;
  (*(void (**)(unint64_t, unint64_t))(v13 + 16))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64) + 7;
  v19 = (_QWORD *)((v18 + v16) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)((v18 + v17) & 0xFFFFFFFFFFFFFFF8);
  *v19 = *v20;
  v21 = v20[1];
  v19[1] = v21;
  v22 = type metadata accessor for URL(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(unsigned __int8 *)(v23 + 80);
  v25 = (void *)(((unint64_t)v19 + v24 + 16) & ~v24);
  v26 = (const void *)(((unint64_t)v20 + v24 + 16) & ~v24);
  v27 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48);
  swift_bridgeObjectRetain(v21);
  if (v27(v26, 1, v22))
  {
    v28 = *(_DWORD *)(v23 + 84);
    v29 = *(_QWORD *)(v23 + 64);
    if (v28)
      v30 = *(_QWORD *)(v23 + 64);
    else
      v30 = v29 + 1;
    memcpy(v25, v26, v30);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v23 + 16))(v25, v26, v22);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v25, 0, 1, v22);
    v28 = *(_DWORD *)(v23 + 84);
    v29 = *(_QWORD *)(v23 + 64);
  }
  if (v28)
    v31 = v29;
  else
    v31 = v29 + 1;
  v32 = ((unint64_t)v25 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  v33 = ((unint64_t)v26 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v33 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v32 = *(_OWORD *)v33;
  }
  else
  {
    v34 = *(_QWORD *)(v33 + 8);
    *(_QWORD *)v32 = *(_QWORD *)v33;
    *(_QWORD *)(v32 + 8) = v34;
    swift_retain(v34);
  }
  v35 = type metadata accessor for Date.FormatStyle(0);
  v36 = *(_QWORD *)(v35 - 8);
  v37 = *(unsigned __int8 *)(v36 + 80);
  v38 = v33 + (v37 | 7);
  v39 = (_QWORD *)((v32 + (v37 | 7) + 16) & ~(v37 | 7));
  v40 = (_QWORD *)((v38 + 16) & ~(v37 | 7));
  v41 = ~v37;
  v42 = *(_QWORD *)(v36 + 64);
  if ((*(_DWORD *)(v36 + 84) & 0x80000000) == 0)
  {
    v43 = *(_QWORD *)(((v38 + 16) & ~(v37 | 7)) + 0x20);
    if (v43 >= 0xFFFFFFFF)
      LODWORD(v43) = -1;
    v44 = v42 + v37;
    if ((_DWORD)v43 != -1)
      goto LABEL_28;
LABEL_30:
    *(_BYTE *)v39 = *(_BYTE *)v40;
    v45 = v40[4];
    v39[4] = v45;
    v39[5] = v40[5];
    (**(void (***)(uint64_t, uint64_t))(v45 - 8))((uint64_t)(v39 + 1), (uint64_t)(v40 + 1));
    v46 = (_QWORD *)(((unint64_t)v39 + 55) & 0xFFFFFFFFFFFFFFF8);
    v47 = (_QWORD *)(((unint64_t)v40 + 55) & 0xFFFFFFFFFFFFFFF8);
    *v46 = *v47;
    v48 = v47[1];
    v46[1] = v48;
    v49 = ((unint64_t)v46 + v37 + 16) & v41;
    v50 = ((unint64_t)v47 + v37 + 16) & v41;
    v51 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16);
    swift_bridgeObjectRetain(v48);
    v51(v49, v50, v35);
    v51((v44 + v49) & v41, (v44 + v50) & v41, v35);
    return a1;
  }
  v44 = v42 + v37;
  if (!(*(unsigned int (**)(unint64_t))(v36 + 48))((v37
                                                                     + (((unint64_t)v40 + 55) & 0xFFFFFFFFFFFFFFF8)
                                                                     + 16) & v41))
    goto LABEL_30;
LABEL_28:
  memcpy(v39, v40, ((v44 + ((v37 + 64) & ~v37)) & ~v37) + v42);
  return a1;
}

uint64_t *sub_1000A1FA8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  __n128 v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t (*v31)(void *, uint64_t, uint64_t);
  int v32;
  size_t v33;
  uint64_t v34;
  _QWORD *v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  size_t v51;
  unint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t);
  void *v59;
  const void *v60;
  size_t v61;
  uint64_t (*v62)(unint64_t, uint64_t, uint64_t);
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t, uint64_t);
  int v80;
  uint64_t v81;
  size_t v82;
  uint64_t *v83;

  v5 = a1;
  if (a1 != a2)
  {
    v6 = type metadata accessor for OpenURLAction(0);
    v7 = *(_QWORD *)(v6 - 8);
    if (*(_QWORD *)(v7 + 64) <= 8uLL)
      v8 = 8;
    else
      v8 = *(_QWORD *)(v7 + 64);
    v9 = *((unsigned __int8 *)v5 + v8);
    if (v9 >= 2)
    {
      if (v8 <= 3)
        v10 = v8;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 1)
      (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v5, v6);
    else
      v11 = swift_release(*v5);
    v12 = *((unsigned __int8 *)a2 + v8);
    if (v12 >= 2)
    {
      if (v8 <= 3)
        v13 = v8;
      else
        v13 = 4;
      __asm { BR              X12 }
    }
    if (v12 == 1)
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t, __n128))(v7 + 16))(v5, a2, v6, v11);
      *((_BYTE *)v5 + v8) = 1;
    }
    else
    {
      v14 = *a2;
      *v5 = *a2;
      *((_BYTE *)v5 + v8) = 0;
      swift_retain(v14);
    }
  }
  v15 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for OpenURLAction(0) - 8) + 64);
  if (v15 <= 8)
    v15 = 8;
  v16 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = v15 + v17 + 1;
  v19 = ((unint64_t)v5 + v18) & ~v17;
  v20 = ((unint64_t)a2 + v18) & ~v17;
  (*(void (**)(unint64_t, unint64_t))(v16 + 24))(v19, v20);
  v21 = *(_QWORD *)(v16 + 64) + 7;
  v22 = (_QWORD *)((v21 + v19) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_QWORD *)((v21 + v20) & 0xFFFFFFFFFFFFFFF8);
  *v22 = *v23;
  v24 = v23[1];
  v25 = v22[1];
  v22[1] = v24;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease(v25);
  v26 = type metadata accessor for URL(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(unsigned __int8 *)(v27 + 80);
  v29 = (void *)(((unint64_t)v22 + v28 + 16) & ~v28);
  v30 = (void *)(((unint64_t)v23 + v28 + 16) & ~v28);
  v31 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 48);
  LODWORD(v23) = v31(v29, 1, v26);
  v32 = v31(v30, 1, v26);
  if ((_DWORD)v23)
  {
    if (!v32)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 16))(v29, v30, v26);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v29, 0, 1, v26);
      goto LABEL_32;
    }
  }
  else
  {
    if (!v32)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 24))(v29, v30, v26);
      goto LABEL_32;
    }
    (*(void (**)(void *, uint64_t))(v27 + 8))(v29, v26);
  }
  if (*(_DWORD *)(v27 + 84))
    v33 = *(_QWORD *)(v27 + 64);
  else
    v33 = *(_QWORD *)(v27 + 64) + 1;
  memcpy(v29, v30, v33);
LABEL_32:
  if (*(_DWORD *)(v27 + 84))
    v34 = *(_QWORD *)(v27 + 64);
  else
    v34 = *(_QWORD *)(v27 + 64) + 1;
  v35 = (_QWORD *)(((unint64_t)v29 + v34 + 7) & 0xFFFFFFFFFFFFFFF8);
  v36 = (unint64_t *)(((unint64_t)v30 + v34 + 7) & 0xFFFFFFFFFFFFFFF8);
  v37 = *v36;
  if (*v35 < 0xFFFFFFFFuLL)
  {
    if (v37 >= 0xFFFFFFFF)
    {
      v40 = v36[1];
      *v35 = v37;
      v35[1] = v40;
      swift_retain(v40);
      goto LABEL_42;
    }
  }
  else
  {
    if (v37 >= 0xFFFFFFFF)
    {
      v38 = v36[1];
      v39 = v35[1];
      *v35 = v37;
      v35[1] = v38;
      swift_retain(v38);
      swift_release(v39);
      goto LABEL_42;
    }
    swift_release(v35[1]);
  }
  *(_OWORD *)v35 = *(_OWORD *)v36;
LABEL_42:
  v41 = type metadata accessor for Date.FormatStyle(0);
  v42 = *(_QWORD *)(v41 - 8);
  v43 = *(unsigned __int8 *)(v42 + 80);
  v44 = (char *)v36 + (v43 | 7);
  v45 = ((unint64_t)v35 + (v43 | 7) + 16) & ~(v43 | 7);
  v46 = (unint64_t)(v44 + 16) & ~(v43 | 7);
  v47 = *(unsigned int *)(v42 + 84);
  v48 = ~v43;
  v49 = *(_QWORD *)(v42 + 64);
  v50 = v49 + v43;
  v51 = ((v49 + v43 + ((v43 + 64) & ~v43)) & ~v43) + v49;
  if ((v47 & 0x80000000) != 0)
  {
    v81 = v49 + v43;
    v83 = v5;
    v62 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v42 + 48);
    v80 = v62((v43 + 16 + ((v45 + 55) & 0xFFFFFFFFFFFFFFF8)) & v48, v47, v41);
    v50 = v81;
    v53 = v62((v43 + 16 + ((v46 + 55) & 0xFFFFFFFFFFFFFFF8)) & v48, v47, v41);
    v5 = v83;
    if (!v80)
      goto LABEL_46;
LABEL_49:
    if (!v53)
    {
      *(_BYTE *)v45 = *(_BYTE *)v46;
      v63 = *(_QWORD *)(v46 + 32);
      *(_QWORD *)(v45 + 32) = v63;
      *(_QWORD *)(v45 + 40) = *(_QWORD *)(v46 + 40);
      (**(void (***)(uint64_t, uint64_t))(v63 - 8))(v45 + 8, v46 + 8);
      v64 = (_QWORD *)((v45 + 55) & 0xFFFFFFFFFFFFFFF8);
      v65 = (_QWORD *)((v46 + 55) & 0xFFFFFFFFFFFFFFF8);
      *v64 = *v65;
      v66 = v65[1];
      v64[1] = v66;
      v67 = ((unint64_t)v64 + v43 + 16) & v48;
      v68 = ((unint64_t)v65 + v43 + 16) & v48;
      v69 = *(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16);
      swift_bridgeObjectRetain(v66);
      v69(v67, v68, v41);
      v69((v50 + v67) & v48, (v50 + v68) & v48, v41);
      return v5;
    }
    v59 = (void *)v45;
    v60 = (const void *)v46;
    v61 = v51;
    goto LABEL_51;
  }
  v52 = *(_QWORD *)(((unint64_t)(v44 + 16) & ~(v43 | 7)) + 0x20);
  if (v52 >= 0xFFFFFFFF)
    LODWORD(v52) = -1;
  v53 = v52 + 1;
  if (*(_QWORD *)(v45 + 32) <= 0xFFFFFFFEuLL)
    goto LABEL_49;
LABEL_46:
  if (v53)
  {
    v82 = v51;
    _s16MusicRecognition11AnyPlaylistVwxx_0((_QWORD *)(v45 + 8));
    v54 = v41;
    v55 = v50;
    v56 = (v45 + 55) & 0xFFFFFFFFFFFFFFF8;
    swift_bridgeObjectRelease(*(_QWORD *)(v56 + 8));
    v57 = (v43 + v56 + 16) & v48;
    v58 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
    v58(v57, v54);
    v58((v55 + v57) & v48, v54);
    v59 = (void *)v45;
    v60 = (const void *)v46;
    v61 = v82;
LABEL_51:
    memcpy(v59, v60, v61);
    return v5;
  }
  v70 = v41;
  v71 = v50;
  *(_BYTE *)v45 = *(_BYTE *)v46;
  sub_100012EA4((_QWORD *)(v45 + 8), (_QWORD *)(v46 + 8));
  v72 = (_QWORD *)((v45 + 55) & 0xFFFFFFFFFFFFFFF8);
  v73 = (_QWORD *)((v46 + 55) & 0xFFFFFFFFFFFFFFF8);
  *v72 = *v73;
  v74 = v73[1];
  v75 = v72[1];
  v72[1] = v74;
  swift_bridgeObjectRetain(v74);
  swift_bridgeObjectRelease(v75);
  v76 = ((unint64_t)v72 + v43 + 16) & v48;
  v77 = ((unint64_t)v73 + v43 + 16) & v48;
  v78 = *(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 24);
  v78(v76, v77, v70);
  v78((v71 + v76) & v48, (v71 + v77) & v48, v70);
  return v5;
}

_QWORD *sub_1000A25E8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  int v25;
  size_t v26;
  size_t v27;
  size_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  _OWORD *v44;
  _OWORD *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for OpenURLAction(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_QWORD *)(v7 + 64) <= 8uLL)
    v8 = 8;
  else
    v8 = *(_QWORD *)(v7 + 64);
  v9 = *((unsigned __int8 *)a2 + v8);
  if (v9 >= 2)
  {
    if (v8 <= 3)
      v10 = v8;
    else
      v10 = 4;
    __asm { BR              X13 }
  }
  if (v9 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 32))(a1, a2, v6);
    v11 = 1;
  }
  else
  {
    v11 = 0;
    *a1 = *a2;
  }
  *((_BYTE *)a1 + v8) = v11;
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = v8 + v13 + 1;
  v15 = ((unint64_t)a1 + v14) & ~v13;
  v16 = ((unint64_t)a2 + v14) & ~v13;
  (*(void (**)(unint64_t, unint64_t))(v12 + 32))(v15, v16);
  v17 = *(_QWORD *)(v12 + 64) + 7;
  v18 = (_OWORD *)((v17 + v15) & 0xFFFFFFFFFFFFFFF8);
  v19 = (_OWORD *)((v17 + v16) & 0xFFFFFFFFFFFFFFF8);
  *v18 = *v19;
  v20 = type metadata accessor for URL(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = (void *)(((unint64_t)v18 + v22 + 16) & ~v22);
  v24 = (const void *)(((unint64_t)v19 + v22 + 16) & ~v22);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v24, 1, v20))
  {
    v25 = *(_DWORD *)(v21 + 84);
    v26 = *(_QWORD *)(v21 + 64);
    if (v25)
      v27 = v26;
    else
      v27 = v26 + 1;
    memcpy(v23, v24, v27);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 32))(v23, v24, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v23, 0, 1, v20);
    v25 = *(_DWORD *)(v21 + 84);
    v26 = *(_QWORD *)(v21 + 64);
  }
  if (v25)
    v28 = v26;
  else
    v28 = v26 + 1;
  v29 = ((unint64_t)v23 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  v30 = ((unint64_t)v24 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v30 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v29 = *(_OWORD *)v30;
  }
  else
  {
    v31 = *(_QWORD *)(v30 + 8);
    *(_QWORD *)v29 = *(_QWORD *)v30;
    *(_QWORD *)(v29 + 8) = v31;
  }
  v32 = type metadata accessor for Date.FormatStyle(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(unsigned __int8 *)(v33 + 80);
  v35 = v30 + (v34 | 7);
  v36 = (char *)((v29 + (v34 | 7) + 16) & ~(v34 | 7));
  v37 = (char *)((v35 + 16) & ~(v34 | 7));
  v38 = ~v34;
  v39 = *(_QWORD *)(v33 + 64);
  if ((*(_DWORD *)(v33 + 84) & 0x80000000) == 0)
  {
    v40 = *(_QWORD *)(((v35 + 16) & ~(v34 | 7)) + 0x20);
    if (v40 >= 0xFFFFFFFF)
      LODWORD(v40) = -1;
    v41 = v39 + v34;
    if ((_DWORD)v40 != -1)
      goto LABEL_28;
LABEL_30:
    *v36 = *v37;
    v42 = *(_OWORD *)(v37 + 8);
    v43 = *(_OWORD *)(v37 + 24);
    *((_QWORD *)v36 + 5) = *((_QWORD *)v37 + 5);
    *(_OWORD *)(v36 + 24) = v43;
    *(_OWORD *)(v36 + 8) = v42;
    v44 = (_OWORD *)((unint64_t)(v36 + 55) & 0xFFFFFFFFFFFFFFF8);
    v45 = (_OWORD *)((unint64_t)(v37 + 55) & 0xFFFFFFFFFFFFFFF8);
    *v44 = *v45;
    v46 = ((unint64_t)v44 + v34 + 16) & v38;
    v47 = ((unint64_t)v45 + v34 + 16) & v38;
    v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 32);
    v48(v46, v47, v32);
    v48((v41 + v46) & v38, (v41 + v47) & v38, v32);
    return a1;
  }
  v41 = v39 + v34;
  if (!(*(unsigned int (**)(unint64_t))(v33 + 48))((v34
                                                                     + ((unint64_t)(v37 + 55) & 0xFFFFFFFFFFFFFFF8)
                                                                     + 16) & v38))
    goto LABEL_30;
LABEL_28:
  memcpy(v36, v37, ((v41 + ((v34 + 64) & ~v34)) & ~v34) + v39);
  return a1;
}

_QWORD *sub_1000A2958(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  __n128 v11;
  unsigned int v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t (*v30)(void *, uint64_t, uint64_t);
  int v31;
  int v32;
  size_t v33;
  uint64_t v34;
  _QWORD *v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  size_t v51;
  unint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t);
  void *v59;
  const void *v60;
  size_t v61;
  uint64_t (*v62)(unint64_t, uint64_t, uint64_t);
  __int128 v63;
  __int128 v64;
  _OWORD *v65;
  _OWORD *v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t, uint64_t);
  __int128 v70;
  __int128 v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t, uint64_t);
  int v81;
  uint64_t v82;
  size_t v83;
  _QWORD *v84;

  v5 = a1;
  if (a1 != a2)
  {
    v6 = type metadata accessor for OpenURLAction(0);
    v7 = *(_QWORD *)(v6 - 8);
    if (*(_QWORD *)(v7 + 64) <= 8uLL)
      v8 = 8;
    else
      v8 = *(_QWORD *)(v7 + 64);
    v9 = *((unsigned __int8 *)v5 + v8);
    if (v9 >= 2)
    {
      if (v8 <= 3)
        v10 = v8;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v5, v6);
    else
      v11 = swift_release(*v5);
    v12 = *((unsigned __int8 *)a2 + v8);
    if (v12 >= 2)
    {
      if (v8 <= 3)
        v13 = v8;
      else
        v13 = 4;
      __asm { BR              X12 }
    }
    if (v12 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t, __n128))(v7 + 32))(v5, a2, v6, v11);
      v14 = 1;
    }
    else
    {
      v14 = 0;
      *v5 = *a2;
    }
    *((_BYTE *)v5 + v8) = v14;
  }
  v15 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for OpenURLAction(0) - 8) + 64);
  if (v15 <= 8)
    v15 = 8;
  v16 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = v15 + v17 + 1;
  v19 = ((unint64_t)v5 + v18) & ~v17;
  v20 = ((unint64_t)a2 + v18) & ~v17;
  (*(void (**)(unint64_t, unint64_t))(v16 + 40))(v19, v20);
  v21 = *(_QWORD *)(v16 + 64) + 7;
  v22 = (_QWORD *)((v21 + v19) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_QWORD *)((v21 + v20) & 0xFFFFFFFFFFFFFFF8);
  *v22 = *v23;
  v24 = v22[1];
  v22[1] = v23[1];
  swift_bridgeObjectRelease(v24);
  v25 = type metadata accessor for URL(0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(unsigned __int8 *)(v26 + 80);
  v28 = (void *)(((unint64_t)v22 + v27 + 16) & ~v27);
  v29 = (void *)(((unint64_t)v23 + v27 + 16) & ~v27);
  v30 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
  v31 = v30(v28, 1, v25);
  v32 = v30(v29, 1, v25);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(void *, void *, uint64_t))(v26 + 32))(v28, v29, v25);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v28, 0, 1, v25);
      goto LABEL_33;
    }
  }
  else
  {
    if (!v32)
    {
      (*(void (**)(void *, void *, uint64_t))(v26 + 40))(v28, v29, v25);
      goto LABEL_33;
    }
    (*(void (**)(void *, uint64_t))(v26 + 8))(v28, v25);
  }
  if (*(_DWORD *)(v26 + 84))
    v33 = *(_QWORD *)(v26 + 64);
  else
    v33 = *(_QWORD *)(v26 + 64) + 1;
  memcpy(v28, v29, v33);
LABEL_33:
  if (*(_DWORD *)(v26 + 84))
    v34 = *(_QWORD *)(v26 + 64);
  else
    v34 = *(_QWORD *)(v26 + 64) + 1;
  v35 = (_QWORD *)(((unint64_t)v28 + v34 + 7) & 0xFFFFFFFFFFFFFFF8);
  v36 = (unint64_t *)(((unint64_t)v29 + v34 + 7) & 0xFFFFFFFFFFFFFFF8);
  v37 = *v36;
  if (*v35 < 0xFFFFFFFFuLL)
  {
    if (v37 >= 0xFFFFFFFF)
    {
      v40 = v36[1];
      *v35 = v37;
      v35[1] = v40;
      goto LABEL_43;
    }
  }
  else
  {
    if (v37 >= 0xFFFFFFFF)
    {
      v38 = v36[1];
      v39 = v35[1];
      *v35 = v37;
      v35[1] = v38;
      swift_release(v39);
      goto LABEL_43;
    }
    swift_release(v35[1]);
  }
  *(_OWORD *)v35 = *(_OWORD *)v36;
LABEL_43:
  v41 = type metadata accessor for Date.FormatStyle(0);
  v42 = *(_QWORD *)(v41 - 8);
  v43 = *(unsigned __int8 *)(v42 + 80);
  v44 = (char *)v36 + (v43 | 7);
  v45 = ((unint64_t)v35 + (v43 | 7) + 16) & ~(v43 | 7);
  v46 = (unint64_t)(v44 + 16) & ~(v43 | 7);
  v47 = *(unsigned int *)(v42 + 84);
  v48 = ~v43;
  v49 = *(_QWORD *)(v42 + 64);
  v50 = v49 + v43;
  v51 = ((v49 + v43 + ((v43 + 64) & ~v43)) & ~v43) + v49;
  if ((v47 & 0x80000000) != 0)
  {
    v82 = v49 + v43;
    v84 = v5;
    v62 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v42 + 48);
    v81 = v62((v43 + 16 + ((v45 + 55) & 0xFFFFFFFFFFFFFFF8)) & v48, v47, v41);
    v50 = v82;
    v53 = v62((v43 + 16 + ((v46 + 55) & 0xFFFFFFFFFFFFFFF8)) & v48, v47, v41);
    v5 = v84;
    if (!v81)
      goto LABEL_47;
LABEL_50:
    if (!v53)
    {
      *(_BYTE *)v45 = *(_BYTE *)v46;
      v63 = *(_OWORD *)(v46 + 8);
      v64 = *(_OWORD *)(v46 + 24);
      *(_QWORD *)(v45 + 40) = *(_QWORD *)(v46 + 40);
      *(_OWORD *)(v45 + 24) = v64;
      *(_OWORD *)(v45 + 8) = v63;
      v65 = (_OWORD *)((v45 + 55) & 0xFFFFFFFFFFFFFFF8);
      v66 = (_OWORD *)((v46 + 55) & 0xFFFFFFFFFFFFFFF8);
      *v65 = *v66;
      v67 = ((unint64_t)v65 + v43 + 16) & v48;
      v68 = ((unint64_t)v66 + v43 + 16) & v48;
      v69 = *(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 32);
      v69(v67, v68, v41);
      v69((v50 + v67) & v48, (v50 + v68) & v48, v41);
      return v5;
    }
    v59 = (void *)v45;
    v60 = (const void *)v46;
    v61 = v51;
    goto LABEL_52;
  }
  v52 = *(_QWORD *)(((unint64_t)(v44 + 16) & ~(v43 | 7)) + 0x20);
  if (v52 >= 0xFFFFFFFF)
    LODWORD(v52) = -1;
  v53 = v52 + 1;
  if (*(_QWORD *)(v45 + 32) <= 0xFFFFFFFEuLL)
    goto LABEL_50;
LABEL_47:
  if (v53)
  {
    v83 = v51;
    _s16MusicRecognition11AnyPlaylistVwxx_0((_QWORD *)(v45 + 8));
    v54 = v41;
    v55 = v50;
    v56 = (v45 + 55) & 0xFFFFFFFFFFFFFFF8;
    swift_bridgeObjectRelease(*(_QWORD *)(v56 + 8));
    v57 = (v43 + v56 + 16) & v48;
    v58 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
    v58(v57, v54);
    v58((v55 + v57) & v48, v54);
    v59 = (void *)v45;
    v60 = (const void *)v46;
    v61 = v83;
LABEL_52:
    memcpy(v59, v60, v61);
    return v5;
  }
  *(_BYTE *)v45 = *(_BYTE *)v46;
  _s16MusicRecognition11AnyPlaylistVwxx_0((_QWORD *)(v45 + 8));
  v70 = *(_OWORD *)(v46 + 8);
  v71 = *(_OWORD *)(v46 + 24);
  *(_QWORD *)(v45 + 40) = *(_QWORD *)(v46 + 40);
  *(_OWORD *)(v45 + 24) = v71;
  *(_OWORD *)(v45 + 8) = v70;
  v72 = (_QWORD *)((v45 + 55) & 0xFFFFFFFFFFFFFFF8);
  v73 = v41;
  v74 = v50;
  v75 = (_QWORD *)((v46 + 55) & 0xFFFFFFFFFFFFFFF8);
  *v72 = *v75;
  v76 = v72[1];
  v72[1] = v75[1];
  swift_bridgeObjectRelease(v76);
  v77 = ((unint64_t)v72 + v43 + 16) & v48;
  v78 = ((unint64_t)v75 + v43 + 16) & v48;
  v79 = *(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 40);
  v79(v77, v78, v73);
  v79((v74 + v77) & v48, (v74 + v78) & v48, v73);
  return v5;
}

uint64_t sub_1000A2F74(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  int v35;
  unsigned int v36;
  int v37;
  int v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unsigned int v44;
  uint64_t v46;

  v6 = type metadata accessor for OpenURLAction(0);
  if (*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) <= 8uLL)
    v7 = 8;
  else
    v7 = *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64);
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  v46 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v46 - 8);
  v12 = *(unsigned int *)(v11 + 84);
  if ((_DWORD)v12)
    v13 = v12 - 1;
  else
    v13 = 0;
  if (v10 <= v13)
    v14 = v13;
  else
    v14 = v10;
  v15 = type metadata accessor for Date.FormatStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int *)(v16 + 84);
  if (v17 <= 0x7FFFFFFF)
    v18 = 0x7FFFFFFF;
  else
    v18 = *(_DWORD *)(v16 + 84);
  v19 = v18 - 1;
  if (v14 <= v19)
    v20 = v19;
  else
    v20 = v14;
  if (v20 <= 0x7FFFFFFF)
    v21 = 0x7FFFFFFF;
  else
    v21 = v20;
  if ((_DWORD)v12)
    v22 = *(_QWORD *)(v11 + 64);
  else
    v22 = *(_QWORD *)(v11 + 64) + 1;
  if (!a2)
    return 0;
  v23 = v15;
  v24 = *(unsigned __int8 *)(v9 + 80);
  v25 = v7 + v24 + 1;
  v26 = *(_QWORD *)(v9 + 64) + 7;
  v27 = *(unsigned __int8 *)(v11 + 80);
  v28 = v27 + 16;
  v29 = *(_DWORD *)(v16 + 80);
  v30 = *(_DWORD *)(v16 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v31 = v22 + 7;
  v32 = v29 + 16;
  if (a2 <= v21)
    goto LABEL_41;
  v33 = ((*(_QWORD *)(v16 + 64) + v29 + ((v29 + 64) & ~v29)) & ~v29)
      + *(_QWORD *)(v16 + 64)
      + ((v32 + ((v31 + ((v28 + ((v26 + (v25 & ~v24)) & 0xFFFFFFFFFFFFFFF8)) & ~v27)) & 0xFFFFFFFFFFFFFFF8)) & v30);
  v34 = 8 * v33;
  if (v33 <= 3)
  {
    v36 = ((a2 - v21 + ~(-1 << v34)) >> v34) + 1;
    if (HIWORD(v36))
    {
      v35 = *(_DWORD *)(a1 + v33);
      if (!v35)
        goto LABEL_41;
      goto LABEL_32;
    }
    if (v36 > 0xFF)
    {
      v35 = *(unsigned __int16 *)(a1 + v33);
      if (!*(_WORD *)(a1 + v33))
        goto LABEL_41;
      goto LABEL_32;
    }
    if (v36 < 2)
    {
LABEL_41:
      v39 = (v25 + a1) & ~v24;
      if ((_DWORD)v10 == v21)
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v39, v10, v8);
      v40 = (v26 + v39) & 0xFFFFFFFFFFFFFFF8;
      if ((v20 & 0x80000000) == 0)
      {
        v41 = *(_QWORD *)(v40 + 8);
        if (v41 >= 0xFFFFFFFF)
          LODWORD(v41) = -1;
        return (v41 + 1);
      }
      v42 = (v28 + v40) & ~v27;
      if (v13 == v21)
      {
        if (v12 < 2)
          return 0;
        v44 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v42, v12, v46);
      }
      else if ((v17 & 0x80000000) != 0)
      {
        v44 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v16 + 48))((v32 + ((((v32 + ((v31 + v42) & 0xFFFFFFFFFFFFFFF8)) & v30) + 55) & 0xFFFFFFFFFFFFFFF8)) & ~v29, v17, v23);
      }
      else
      {
        v43 = *(_QWORD *)(((v32 + ((v31 + v42) & 0xFFFFFFFFFFFFFFF8)) & v30) + 0x20);
        if (v43 >= 0xFFFFFFFF)
          LODWORD(v43) = -1;
        v44 = v43 + 1;
      }
      if (v44 >= 2)
        return v44 - 1;
      else
        return 0;
    }
  }
  v35 = *(unsigned __int8 *)(a1 + v33);
  if (!*(_BYTE *)(a1 + v33))
    goto LABEL_41;
LABEL_32:
  v37 = (v35 - 1) << v34;
  if (v33 > 3)
    v37 = 0;
  if ((_DWORD)v33)
  {
    if (v33 <= 3)
      v38 = v33;
    else
      v38 = 4;
    __asm { BR              X12 }
  }
  return v21 + v37 + 1;
}

void sub_1000A3290(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  int v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  size_t v22;
  unsigned int v23;
  unsigned int v24;
  int v25;

  v7 = type metadata accessor for OpenURLAction(0);
  if (*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) <= 8uLL)
    v8 = 8;
  else
    v8 = *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64);
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v10 = *(_DWORD *)(v9 + 84);
  v11 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v12 = *(_DWORD *)(v11 + 84);
  if (v12)
    v13 = v12 - 1;
  else
    v13 = 0;
  if (v10 <= v13)
    v14 = v13;
  else
    v14 = v10;
  v15 = 0;
  v16 = *(_QWORD *)(type metadata accessor for Date.FormatStyle(0) - 8);
  if (*(_DWORD *)(v16 + 84) <= 0x7FFFFFFFu)
    v18 = 0x7FFFFFFF;
  else
    v18 = *(_DWORD *)(v16 + 84);
  v19 = v18 - 1;
  if (v14 > v18 - 1)
    v19 = v14;
  if (v19 <= 0x7FFFFFFF)
    v20 = 0x7FFFFFFF;
  else
    v20 = v19;
  if (v12)
    v21 = *(_QWORD *)(v11 + 64);
  else
    v21 = *(_QWORD *)(v11 + 64) + 1;
  v17 = *(_DWORD *)(v16 + 80);
  v22 = ((v17
        + 16
        + ((v21
          + 7
          + ((*(unsigned __int8 *)(v11 + 80)
            + 16
            + ((*(_QWORD *)(v9 + 64)
              + 7
              + ((v8 + *(unsigned __int8 *)(v9 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))) & 0xFFFFFFFFFFFFFFF8)) & (v17 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8))
      + ((*(_QWORD *)(v16 + 64)
        + v17
        + ((v17 + 64) & ~(unint64_t)v17)) & ~(unint64_t)v17)
      + *(_QWORD *)(v16 + 64);
  if (a3 > v20)
  {
    if (v22 > 3)
    {
      v15 = &_mh_execute_header.magic + 1;
      if (v20 >= a2)
LABEL_37:
        __asm { BR              X19 }
LABEL_30:
      v24 = ~v20 + a2;
      if (v22 < 4)
      {
        if ((_DWORD)v22)
        {
          v25 = v24 & ~(-1 << (8 * v22));
          bzero(a1, v22);
          if ((_DWORD)v22 == 3)
          {
            *(_WORD *)a1 = v25;
            a1[2] = BYTE2(v25);
          }
          else if ((_DWORD)v22 == 2)
          {
            *(_WORD *)a1 = v25;
          }
          else
          {
            *a1 = v25;
          }
        }
      }
      else
      {
        bzero(a1, v22);
        *(_DWORD *)a1 = v24;
      }
      __asm { BR              X10 }
    }
    v23 = ((a3 - v20 + ~(-1 << (8 * v22))) >> (8 * v22)) + 1;
    if (HIWORD(v23))
    {
      v15 = &dword_100000004;
      if (v20 >= a2)
        goto LABEL_37;
      goto LABEL_30;
    }
    if (v23 >= 0x100)
      v15 = 2;
    else
      v15 = v23 > 1;
  }
  if (v20 >= a2)
    goto LABEL_37;
  goto LABEL_30;
}

void sub_1000A35A8()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = v0;
  JUMPOUT(0x1000A35C8);
}

void sub_1000A35B0()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = v0;
  JUMPOUT(0x1000A35C8);
}

void sub_1000A35B8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = v0;
  JUMPOUT(0x1000A35C8);
}

void sub_1000A3654()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x1000A35C8);
}

void sub_1000A3690()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x1000A35C8);
}

void sub_1000A3698()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x1000A35C8);
}

void sub_1000A36A8()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x1000A35C8);
}

uint64_t type metadata accessor for SongMetadataRowView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100018E38(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SongMetadataRowView);
}

void sub_1000A36D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_1000A3730(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_1000DF09C, 1);
}

uint64_t sub_1000A3764@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_10009FF0C(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_1000A3770()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011BF08;
  if (!qword_10011BF08)
  {
    v1 = sub_1000050C8(&qword_1001189E8);
    sub_1000A37F4();
    sub_1000A3890(&qword_10011BF30, &qword_10011BF38, (void (*)(void))sub_100011FD8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011BF08);
  }
  return result;
}

unint64_t sub_1000A37F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011BF10;
  if (!qword_10011BF10)
  {
    v1 = sub_1000050C8(&qword_10011BF18);
    sub_10000522C(&qword_10011BF20, &qword_10011BF28, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_100004864((unint64_t *)&qword_100116570, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011BF10);
  }
  return result;
}

uint64_t sub_1000A3890(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_1000050C8(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A3904()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000A3928@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1000A0F88(v2[4], v2[2], v2[3], a1, a2);
}

uint64_t sub_1000A3934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);

  v5 = *(_QWORD *)(v4 + 16);
  v6 = (int *)type metadata accessor for SongMetadataRowView(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = (char *)(v4 + v9);
  v12 = sub_100004F7C(&qword_1001166A0);
  if (swift_getEnumCaseMultiPayload(v4 + v9, v12) == 1)
  {
    v13 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v4 + v9, v13);
  }
  else
  {
    v14 = swift_release(*(_QWORD *)v11);
  }
  (*(void (**)(char *, uint64_t, __n128))(*(_QWORD *)(v5 - 8) + 8))(&v11[v6[9]], v5, v14);
  swift_bridgeObjectRelease(*(_QWORD *)&v11[v6[10] + 8]);
  v15 = &v11[v6[11]];
  v16 = type metadata accessor for URL(0);
  v17 = *(_QWORD *)(v16 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    (*(void (**)(char *, uint64_t))(v17 + 8))(v15, v16);
  v18 = &v11[v6[12]];
  if (*(_QWORD *)v18)
    swift_release(*((_QWORD *)v18 + 1));
  v19 = &v11[v6[13]];
  v20 = type metadata accessor for SongMetadataRowViewModel(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v19, 1, v20))
  {
    _s16MusicRecognition11AnyPlaylistVwxx_0((_QWORD *)v19 + 1);
    swift_bridgeObjectRelease(*((_QWORD *)v19 + 7));
    v21 = &v19[*(int *)(v20 + 28)];
    v22 = type metadata accessor for Date.FormatStyle(0);
    v23 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v22 - 8) + 8);
    v23(v21, v22);
    v23(&v19[*(int *)(v20 + 32)], v22);
  }
  return swift_deallocObject(v4, v9 + v10, v8 | 7);
}

uint64_t sub_1000A3AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v5 = type metadata accessor for SongMetadataRowView(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  return sub_1000A04DC(v5);
}

uint64_t sub_1000A3B20(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t WitnessTable;
  _QWORD v13[2];

  v1 = *a1;
  v2 = sub_1000050C8(&qword_100116F40);
  v3 = type metadata accessor for ModifiedContent(255, v1, v2);
  v4 = sub_1000050C8(&qword_100116540);
  v5 = type metadata accessor for ModifiedContent(255, v3, v4);
  v6 = sub_1000050C8(&qword_100116550);
  v7 = type metadata accessor for ModifiedContent(255, v5, v6);
  v8 = sub_1000050C8(&qword_1001189F0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v7, v8, 0, 0);
  v10 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v10);
  v13[0] = type metadata accessor for HStack(255, v10, WitnessTable);
  v13[1] = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v13[0]);
  return swift_getOpaqueTypeConformance2(v13, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
}

void sub_1000A3C24(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;

  if ((_BYTE)a3 == 0xFF)
  {
    sub_100082EFC();
    return;
  }
  sub_10001DDD4(a1, a2, a3);
  if ((SHSession.Result.wasCancelled.getter(a1, a2, a3) & 1) != 0)
  {
    sub_100083584(0);
    sub_1000100FC(a1, a2, a3);
    return;
  }
  if ((_BYTE)a3)
  {
    if (a3 != 1)
    {
      v22 = a1;
      swift_errorRetain(a1);
      v6 = sub_100004F7C(&qword_1001174D8);
      v7 = sub_100010498(0, (unint64_t *)&qword_1001196A8, NSError_ptr);
      if ((swift_dynamicCast(&v21, &v22, v6, v7, 0) & 1) != 0)
      {
        v8 = (uint64_t)v21;
        v9 = v21;
        sub_100083584(v8);
        sub_1000100FC(a1, a2, 2u);

        swift_errorRelease(v22);
        return;
      }
      swift_errorRelease(v22);
    }
    goto LABEL_20;
  }
  sub_10001DDD4(a1, a2, 0);
  v10 = objc_msgSend(a1, "mediaItems");
  v11 = sub_100010498(0, (unint64_t *)&qword_1001175E0, SHMatchedMediaItem_ptr);
  v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

  if ((unint64_t)v12 >> 62)
  {
    if (v12 < 0)
      v17 = v12;
    else
      v17 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v12);
    v13 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease(v12);
  }
  else
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v12);
  if (v13)
  {
    v14 = objc_msgSend(a1, "mediaItems");
    v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v11);

    if ((unint64_t)v15 >> 62)
    {
      if (v15 < 0)
        v18 = v15;
      else
        v18 = v15 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v15);
      v19 = _CocoaArrayWrapper.endIndex.getter(v18);
      swift_bridgeObjectRelease(v15);
      if (v19)
      {
LABEL_14:
        if ((v15 & 0xC000000000000001) == 0)
        {
          if (!*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          v16 = *(id *)(v15 + 32);
LABEL_17:
          v20 = v16;
          swift_bridgeObjectRelease(v15);
          sub_100082FD0(v20);
          sub_1000100FC(a1, a2, 0);
          sub_1000100FC(a1, a2, 0);

          return;
        }
LABEL_31:
        v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0);
        goto LABEL_17;
      }
    }
    else if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_14;
    }
    swift_bridgeObjectRelease(v15);
    __break(1u);
    goto LABEL_31;
  }
  sub_1000100FC(a1, a2, 0);
LABEL_20:
  sub_100083584(0);
  sub_1000100FC(a1, a2, a3);
}

void sub_1000A3F40(void *a1, void *a2, uint64_t a3)
{
  char *v3;
  int v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  NSString v12;
  void *v13;
  NSString v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  SEL *v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  char *v28;
  id v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;

  v7 = ~(_BYTE)a3;
  v8 = sub_100004F7C(&qword_100116D98);
  __chkstk_darwin(v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v7)
  {
    sub_10001DDD4(a1, a2, a3);
    if ((SHSession.Result.wasCancelled.getter(a1, a2, a3) & 1) != 0)
    {
      v11 = *(void **)&v3[OBJC_IVAR____TtC16MusicRecognition22ListeningAccessoryView_listeningView];
      objc_msgSend(v11, "setHidden:", 0);
      if (qword_100115EE8 != -1)
        swift_once(&qword_100115EE8, sub_10004A3B0);
LABEL_5:
      v12 = String._bridgeToObjectiveC()();
      objc_msgSend(v11, "setState:", v12);

      objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC16MusicRecognition22ListeningAccessoryView_imageView], "setHidden:", 1);
      sub_1000100FC(a1, a2, a3);
      return;
    }
    if ((_BYTE)a3)
    {
      if (a3 != 1)
      {
        v37 = a1;
        swift_errorRetain(a1);
        v16 = sub_100004F7C(&qword_1001174D8);
        v17 = sub_100010498(0, (unint64_t *)&qword_1001196A8, NSError_ptr);
        if ((swift_dynamicCast(&v36, &v37, v16, v17, 0) & 1) != 0)
        {
          v10 = *(char **)&v3[OBJC_IVAR____TtC16MusicRecognition22ListeningAccessoryView_listeningView];
          v18 = (uint64_t)v36;
          v19 = (SEL *)&selRef_processInfo;
          objc_msgSend(v10, "setHidden:", 0);
          if (qword_100115EE8 == -1)
          {
LABEL_13:
            v20 = String._bridgeToObjectiveC()();
            objc_msgSend(v10, "setState:", v20);

            objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC16MusicRecognition22ListeningAccessoryView_imageView], v19[23], 1);
            sub_1000100FC(a1, a2, 2u);

            swift_errorRelease(v37);
            return;
          }
LABEL_39:
          swift_once(&qword_100115EE8, sub_10004A3B0);
          goto LABEL_13;
        }
        swift_errorRelease(v37);
      }
LABEL_25:
      v11 = *(void **)&v3[OBJC_IVAR____TtC16MusicRecognition22ListeningAccessoryView_listeningView];
      objc_msgSend(v11, "setHidden:", 0);
      if (qword_100115EE8 != -1)
        swift_once(&qword_100115EE8, sub_10004A3B0);
      goto LABEL_5;
    }
    sub_10001DDD4(a1, a2, 0);
    v21 = objc_msgSend(a1, "mediaItems");
    v22 = sub_100010498(0, (unint64_t *)&qword_1001175E0, SHMatchedMediaItem_ptr);
    v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v21, v22);

    if ((unint64_t)v23 >> 62)
    {
      if (v23 < 0)
        v33 = v23;
      else
        v33 = v23 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v23);
      v24 = _CocoaArrayWrapper.endIndex.getter(v33);
      swift_bridgeObjectRelease(v23);
    }
    else
    {
      v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v23);
    if (!v24)
    {
      sub_1000100FC(a1, a2, 0);
      goto LABEL_25;
    }
    v19 = (SEL *)objc_msgSend(a1, "mediaItems");
    v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v22);

    if ((unint64_t)v18 >> 62)
    {
      if (v18 < 0)
        v34 = v18;
      else
        v34 = v18 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v18);
      v35 = _CocoaArrayWrapper.endIndex.getter(v34);
      swift_bridgeObjectRelease(v18);
      if (v35)
      {
LABEL_19:
        if ((v18 & 0xC000000000000001) == 0)
        {
          if (!*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_39;
          }
          v25 = *(id *)(v18 + 32);
          goto LABEL_22;
        }
LABEL_37:
        v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0);
LABEL_22:
        v26 = v25;
        swift_bridgeObjectRelease(v18);
        objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC16MusicRecognition22ListeningAccessoryView_imageView], "setHidden:", 0);
        objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC16MusicRecognition22ListeningAccessoryView_listeningView], "setHidden:", 1);
        v27 = type metadata accessor for TaskPriority(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v10, 1, 1, v27);
        type metadata accessor for MainActor(0);
        v28 = v3;
        v29 = v26;
        v30 = static MainActor.shared.getter(v29);
        v31 = (_QWORD *)swift_allocObject(&unk_10010D4E0, 48, 7);
        v31[2] = v30;
        v31[3] = &protocol witness table for MainActor;
        v31[4] = v28;
        v31[5] = v29;
        v32 = sub_1000A9F18((uint64_t)v10, (uint64_t)&unk_10011BFD0, (uint64_t)v31);
        swift_release(v32);
        sub_1000100FC(a1, a2, 0);
        sub_1000100FC(a1, a2, 0);

        return;
      }
    }
    else if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_19;
    }
    swift_bridgeObjectRelease(v18);
    __break(1u);
    goto LABEL_37;
  }
  v13 = *(void **)&v3[OBJC_IVAR____TtC16MusicRecognition22ListeningAccessoryView_listeningView];
  objc_msgSend(v13, "setHidden:", 0);
  if (qword_100115EF0 != -1)
    swift_once(&qword_100115EF0, sub_10004A3D0);
  v14 = String._bridgeToObjectiveC()();
  objc_msgSend(v13, "setState:", v14);

  v15 = *(void **)&v3[OBJC_IVAR____TtC16MusicRecognition22ListeningAccessoryView_imageView];
  objc_msgSend(v15, "setHidden:", 1);
  objc_msgSend(v15, "setAccessibilityIdentifier:", 0);
}

void sub_1000A45A0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  void *v23;

  if ((_BYTE)a3 == 0xFF)
  {
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC16MusicRecognition21WaveformAccessoryView_waveformView), "setHidden:", 0);
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC16MusicRecognition21WaveformAccessoryView_listeningView), "setHidden:", 1);
    return;
  }
  sub_10001DDD4(a1, a2, a3);
  if ((SHSession.Result.wasCancelled.getter(a1, a2, a3) & 1) != 0)
  {
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC16MusicRecognition21WaveformAccessoryView_waveformView), "setHidden:", 1);
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC16MusicRecognition21WaveformAccessoryView_listeningView), "setHidden:", 1);
    sub_1000100FC(a1, a2, a3);
    return;
  }
  if ((_BYTE)a3)
  {
    if (a3 != 1)
    {
      v23 = a1;
      swift_errorRetain(a1);
      v7 = sub_100004F7C(&qword_1001174D8);
      v8 = sub_100010498(0, (unint64_t *)&qword_1001196A8, NSError_ptr);
      if ((swift_dynamicCast(&v22, &v23, v7, v8, 0) & 1) != 0)
      {
        v9 = *(void **)(v3 + OBJC_IVAR____TtC16MusicRecognition21WaveformAccessoryView_waveformView);
        v10 = v22;
        objc_msgSend(v9, "setHidden:", 1);
        objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC16MusicRecognition21WaveformAccessoryView_listeningView), "setHidden:", 1);
        sub_1000100FC(a1, a2, 2u);

        swift_errorRelease(v23);
        return;
      }
      swift_errorRelease(v23);
    }
    goto LABEL_20;
  }
  sub_10001DDD4(a1, a2, 0);
  v11 = objc_msgSend(a1, "mediaItems");
  v12 = sub_100010498(0, (unint64_t *)&qword_1001175E0, SHMatchedMediaItem_ptr);
  v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

  if ((unint64_t)v13 >> 62)
  {
    if (v13 < 0)
      v18 = v13;
    else
      v18 = v13 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v13);
    v14 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v13);
  }
  else
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v13);
  if (v14)
  {
    v15 = objc_msgSend(a1, "mediaItems");
    v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v12);

    if ((unint64_t)v16 >> 62)
    {
      if (v16 < 0)
        v19 = v16;
      else
        v19 = v16 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v16);
      v20 = _CocoaArrayWrapper.endIndex.getter(v19);
      swift_bridgeObjectRelease(v16);
      if (v20)
      {
LABEL_14:
        if ((v16 & 0xC000000000000001) == 0)
        {
          if (!*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          v17 = *(id *)(v16 + 32);
LABEL_17:
          v21 = v17;
          swift_bridgeObjectRelease(v16);
          objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC16MusicRecognition21WaveformAccessoryView_waveformView), "setHidden:", 1);
          objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC16MusicRecognition21WaveformAccessoryView_listeningView), "setHidden:", 0);
          sub_1000100FC(a1, a2, 0);
          sub_1000100FC(a1, a2, 0);

          return;
        }
LABEL_31:
        v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0);
        goto LABEL_17;
      }
    }
    else if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_14;
    }
    swift_bridgeObjectRelease(v16);
    __break(1u);
    goto LABEL_31;
  }
  sub_1000100FC(a1, a2, 0);
LABEL_20:
  objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC16MusicRecognition21WaveformAccessoryView_waveformView), "setHidden:", 1);
  objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC16MusicRecognition21WaveformAccessoryView_listeningView), "setHidden:", 1);
  sub_1000100FC(a1, a2, a3);
}

void sub_1000A49C8(void *a1, void *a2, uint64_t a3)
{
  char *v3;
  int v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  void *v35;

  v7 = ~(_BYTE)a3;
  v8 = sub_100004F7C(&qword_100116D98);
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v7)
  {
    *(_QWORD *)&v3[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_maximumLayoutMode] = 4;
    *(_QWORD *)&v3[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_preferredLayoutMode] = 3;
    if (qword_100115EE0 != -1)
      swift_once(&qword_100115EE0, sub_100045C0C);
    if (*(_BYTE *)(qword_100124510 + OBJC_IVAR____TtC16MusicRecognition15MusicRecognizer_isRetryAttempt) == 1)
      sub_10000FA88(84.0);
    v33 = objc_retain(*(id *)(*(_QWORD *)&v3[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_matchingFlowView]
                            + OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_listeningView));
    sub_100078EEC();
    goto LABEL_9;
  }
  sub_10001DDD4(a1, a2, a3);
  if ((SHSession.Result.wasCancelled.getter(a1, a2, a3) & 1) != 0)
  {
    v11 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
    type metadata accessor for MainActor(0);
    v12 = v3;
    v13 = static MainActor.shared.getter(v12);
    v14 = (_QWORD *)swift_allocObject(&unk_10010D508, 40, 7);
    v14[2] = v13;
    v14[3] = &protocol witness table for MainActor;
    v14[4] = v12;
    v15 = sub_1000A9F18((uint64_t)v10, (uint64_t)&unk_10011BFD8, (uint64_t)v14);
    swift_release(v15);
LABEL_26:
    sub_1000100FC(a1, a2, a3);
    return;
  }
  if ((_BYTE)a3)
  {
    if (a3 != 1)
    {
      v35 = a1;
      swift_errorRetain(a1);
      v16 = sub_100004F7C(&qword_1001174D8);
      v17 = sub_100010498(0, (unint64_t *)&qword_1001196A8, NSError_ptr);
      if ((swift_dynamicCast(&v34, &v35, v16, v17, 0) & 1) != 0)
      {
        v18 = *(void **)(*(_QWORD *)&v3[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_matchingFlowView]
                       + OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_listeningView);
        v19 = v34;
        v20 = v18;
        sub_100078EEC();

        sub_1000100FC(a1, a2, 2u);
        swift_errorRelease(v35);
        return;
      }
      swift_errorRelease(v35);
    }
    goto LABEL_25;
  }
  sub_10001DDD4(a1, a2, 0);
  v21 = objc_msgSend(a1, "mediaItems");
  v22 = sub_100010498(0, (unint64_t *)&qword_1001175E0, SHMatchedMediaItem_ptr);
  v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v21, v22);

  if ((unint64_t)v23 >> 62)
  {
    if (v23 < 0)
      v29 = v23;
    else
      v29 = v23 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v23);
    v24 = _CocoaArrayWrapper.endIndex.getter(v29);
    swift_bridgeObjectRelease(v23);
  }
  else
  {
    v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v23);
  if (!v24)
  {
    sub_1000100FC(a1, a2, 0);
LABEL_25:
    v28 = objc_retain(*(id *)(*(_QWORD *)&v3[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_matchingFlowView]
                            + OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_listeningView));
    sub_100078EEC();

    goto LABEL_26;
  }
  v25 = objc_msgSend(a1, "mediaItems");
  v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, v22);

  if (!((unint64_t)v26 >> 62))
  {
    if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_19;
LABEL_35:
    swift_bridgeObjectRelease(v26);
    __break(1u);
    goto LABEL_36;
  }
  if (v26 < 0)
    v30 = v26;
  else
    v30 = v26 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v26);
  v31 = _CocoaArrayWrapper.endIndex.getter(v30);
  swift_bridgeObjectRelease(v26);
  if (!v31)
    goto LABEL_35;
LABEL_19:
  if ((v26 & 0xC000000000000001) != 0)
  {
LABEL_36:
    v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0);
    goto LABEL_22;
  }
  if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v27 = *(id *)(v26 + 32);
LABEL_22:
    v33 = v27;
    swift_bridgeObjectRelease(v26);
    sub_100010530();
    sub_1000100FC(a1, a2, 0);
    sub_1000100FC(a1, a2, 0);
LABEL_9:

    return;
  }
  __break(1u);
}

void sub_1000A4E5C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  void *v27;

  if ((_BYTE)a3 == 0xFF)
  {
    sub_1000BDE18();
    return;
  }
  sub_10001DDD4(a1, a2, a3);
  if ((SHSession.Result.wasCancelled.getter(a1, a2, a3) & 1) != 0)
  {
    v7 = objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC16MusicRecognition30AmbientCompactMatchingFlowView_imageView), "layer");
    objc_msgSend(v7, "removeAllAnimations");

    sub_1000100FC(a1, a2, a3);
    return;
  }
  if ((_BYTE)a3)
  {
    if (a3 != 1)
    {
      v27 = a1;
      swift_errorRetain(a1);
      v8 = sub_100004F7C(&qword_1001174D8);
      v9 = sub_100010498(0, (unint64_t *)&qword_1001196A8, NSError_ptr);
      if ((swift_dynamicCast(&v26, &v27, v8, v9, 0) & 1) != 0)
      {
        v10 = *(void **)(v3 + OBJC_IVAR____TtC16MusicRecognition30AmbientCompactMatchingFlowView_imageView);
        v11 = v26;
        v12 = objc_msgSend(v10, "layer");
        objc_msgSend(v12, "removeAllAnimations");

        sub_1000100FC(a1, a2, 2u);
        swift_errorRelease(v27);
        return;
      }
      swift_errorRelease(v27);
    }
    goto LABEL_20;
  }
  sub_10001DDD4(a1, a2, 0);
  v13 = objc_msgSend(a1, "mediaItems");
  v14 = sub_100010498(0, (unint64_t *)&qword_1001175E0, SHMatchedMediaItem_ptr);
  v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v14);

  if ((unint64_t)v15 >> 62)
  {
    if (v15 < 0)
      v22 = v15;
    else
      v22 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v15);
    v16 = _CocoaArrayWrapper.endIndex.getter(v22);
    swift_bridgeObjectRelease(v15);
  }
  else
  {
    v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v15);
  if (v16)
  {
    v17 = objc_msgSend(a1, "mediaItems");
    v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v14);

    if ((unint64_t)v18 >> 62)
    {
      if (v18 < 0)
        v23 = v18;
      else
        v23 = v18 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v18);
      v24 = _CocoaArrayWrapper.endIndex.getter(v23);
      swift_bridgeObjectRelease(v18);
      if (v24)
      {
LABEL_14:
        if ((v18 & 0xC000000000000001) == 0)
        {
          if (!*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          v19 = *(id *)(v18 + 32);
LABEL_17:
          v25 = v19;
          swift_bridgeObjectRelease(v18);
          v20 = objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC16MusicRecognition30AmbientCompactMatchingFlowView_imageView), "layer");
          objc_msgSend(v20, "removeAllAnimations");

          sub_1000100FC(a1, a2, 0);
          sub_1000100FC(a1, a2, 0);

          return;
        }
LABEL_31:
        v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0);
        goto LABEL_17;
      }
    }
    else if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_14;
    }
    swift_bridgeObjectRelease(v18);
    __break(1u);
    goto LABEL_31;
  }
  sub_1000100FC(a1, a2, 0);
LABEL_20:
  v21 = objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC16MusicRecognition30AmbientCompactMatchingFlowView_imageView), "layer");
  objc_msgSend(v21, "removeAllAnimations");

  sub_1000100FC(a1, a2, a3);
}

void sub_1000A523C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  void *v7;
  char *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  _QWORD aBlock[5];
  uint64_t v31;

  if ((_BYTE)a3 == 0xFF)
  {
    v7 = *(void **)(v3 + OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_listeningView);
    objc_msgSend(v7, "setAlpha:", 1.0);
    objc_msgSend(v7, "setHidden:", 0);
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_matchView), "setHidden:", 1);
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_noMatchView), "setHidden:", 1);
    v8 = sub_10004ED78();
    objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_listeningView], "setAlpha:", 1.0);
    v9 = (void *)objc_opt_self(UIView);
    v10 = swift_allocObject(&unk_10010D490, 24, 7);
    *(_QWORD *)(v10 + 16) = v8;
    aBlock[4] = sub_1000A7164;
    v31 = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000A5684;
    aBlock[3] = &unk_10010D4A8;
    v11 = _Block_copy(aBlock);
    v12 = v31;
    v13 = v8;
    swift_release(v12);
    objc_msgSend(v9, "animateWithDuration:delay:options:animations:completion:", 24, v11, 0, 1.2, 0.0);
    _Block_release(v11);

    return;
  }
  sub_10001DDD4(a1, a2, a3);
  if ((SHSession.Result.wasCancelled.getter(a1, a2, a3) & 1) != 0)
  {
    sub_1000500A4(0);
    sub_1000100FC(a1, a2, a3);
    return;
  }
  if ((_BYTE)a3)
  {
    if (a3 != 1)
    {
      aBlock[0] = a1;
      swift_errorRetain(a1);
      v14 = sub_100004F7C(&qword_1001174D8);
      v15 = sub_100010498(0, (unint64_t *)&qword_1001196A8, NSError_ptr);
      if ((swift_dynamicCast(&v29, aBlock, v14, v15, 0) & 1) != 0)
      {
        v16 = (uint64_t)v29;
        v17 = v29;
        sub_1000500A4(v16);
        sub_1000100FC(a1, a2, 2u);

        swift_errorRelease(aBlock[0]);
        return;
      }
      swift_errorRelease(aBlock[0]);
    }
    goto LABEL_20;
  }
  sub_10001DDD4(a1, a2, 0);
  v18 = objc_msgSend(a1, "mediaItems");
  v19 = sub_100010498(0, (unint64_t *)&qword_1001175E0, SHMatchedMediaItem_ptr);
  v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v18, v19);

  if ((unint64_t)v20 >> 62)
  {
    if (v20 < 0)
      v25 = v20;
    else
      v25 = v20 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v20);
    v21 = _CocoaArrayWrapper.endIndex.getter(v25);
    swift_bridgeObjectRelease(v20);
  }
  else
  {
    v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v20);
  if (v21)
  {
    v22 = objc_msgSend(a1, "mediaItems");
    v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v22, v19);

    if ((unint64_t)v23 >> 62)
    {
      if (v23 < 0)
        v26 = v23;
      else
        v26 = v23 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v23);
      v27 = _CocoaArrayWrapper.endIndex.getter(v26);
      swift_bridgeObjectRelease(v23);
      if (v27)
      {
LABEL_14:
        if ((v23 & 0xC000000000000001) == 0)
        {
          if (!*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          v24 = *(id *)(v23 + 32);
LABEL_17:
          v28 = v24;
          swift_bridgeObjectRelease(v23);
          sub_10004F92C(v28);
          sub_1000100FC(a1, a2, 0);
          sub_1000100FC(a1, a2, 0);

          return;
        }
LABEL_31:
        v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0);
        goto LABEL_17;
      }
    }
    else if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_14;
    }
    swift_bridgeObjectRelease(v23);
    __break(1u);
    goto LABEL_31;
  }
  sub_1000100FC(a1, a2, 0);
LABEL_20:
  sub_1000500A4(0);
  sub_1000100FC(a1, a2, a3);
}

uint64_t sub_1000A5684(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v1(v3);
  return swift_release(v2);
}

uint64_t sub_1000A56B0(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;

  v2 = *(_QWORD *)(a1 + 32);
  if (!a2)
    return swift_continuation_throwingResume(*(_QWORD *)(a1 + 32));
  v4 = sub_100004F7C(&qword_1001174D8);
  v5 = swift_allocError(v4, &protocol self-conformance witness table for Error, 0, 0);
  *v6 = a2;
  v7 = a2;
  return swift_continuation_throwingResumeWithError(v2, v5);
}

uint64_t sub_1000A5724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unsigned __int8 v17;
  _QWORD v19[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_10000526C(a1, &qword_100116D98);
    v9 = 7168;
    v10 = *(_QWORD *)(a3 + 16);
    if (!v10)
    {
LABEL_6:
      v16 = 0;
      return swift_task_create(v9, v16, (char *)&type metadata for () + 8, a2, a3);
    }
  }
  else
  {
    v17 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v9 = v17 | 0x1C00;
    v10 = *(_QWORD *)(a3 + 16);
    if (!v10)
      goto LABEL_6;
  }
  v11 = *(_QWORD *)(a3 + 24);
  ObjectType = swift_getObjectType(v10, v8);
  swift_unknownObjectRetain(v10);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v11);
  v15 = v14;
  swift_unknownObjectRelease(v10);
  if (!(v15 | v13))
    goto LABEL_6;
  v19[0] = 0;
  v19[1] = 0;
  v16 = v19;
  v19[2] = v13;
  v19[3] = v15;
  return swift_task_create(v9, v16, (char *)&type metadata for () + 8, a2, a3);
}

void sub_1000A58B4(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  Class isa;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  objc_super v57;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = sub_100004F7C(&qword_100116D98);
  __chkstk_darwin(v5);
  v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57.receiver = v3;
  v57.super_class = ObjectType;
  objc_msgSendSuper2(&v57, "viewDidLoad");
  v8 = objc_msgSend(v3, "view");
  if (!v8)
  {
    __break(1u);
    goto LABEL_11;
  }
  v9 = v8;
  v10 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  objc_msgSend(v9, "setBackgroundColor:", v10);

  v11 = objc_msgSend(v3, "view");
  if (!v11)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v12 = v11;
  objc_msgSend(v11, "setLayoutMargins:", 32.0, 32.0, 32.0, 32.0);

  v13 = objc_msgSend(v3, "view");
  if (!v13)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v14 = v13;
  objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v15 = *(void **)&v3[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionAmbientViewController_matchingFlowView];
  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v16 = objc_msgSend(v3, "view");
  if (!v16)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v17 = v16;
  v55 = v7;
  objc_msgSend(v16, "addSubview:", v15);

  v18 = sub_100004F7C(&qword_100116D90);
  v19 = swift_allocObject(v18, 64, 7);
  *(_OWORD *)(v19 + 16) = xmmword_1000D1CE0;
  v20 = objc_msgSend(v15, "topAnchor");
  v21 = objc_msgSend(v3, "view");
  if (!v21)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v22 = v21;
  v23 = objc_msgSend(v21, "layoutMarginsGuide");

  v24 = objc_msgSend(v23, "topAnchor");
  v25 = objc_msgSend(v20, "constraintEqualToAnchor:", v24);

  *(_QWORD *)(v19 + 32) = v25;
  v26 = objc_msgSend(v15, "bottomAnchor");
  v27 = objc_msgSend(v3, "view");
  if (!v27)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v28 = v27;
  v29 = objc_msgSend(v27, "layoutMarginsGuide");

  v30 = objc_msgSend(v29, "bottomAnchor");
  v31 = objc_msgSend(v26, "constraintEqualToAnchor:", v30);

  *(_QWORD *)(v19 + 40) = v31;
  v32 = objc_msgSend(v15, "leadingAnchor");
  v33 = objc_msgSend(v3, "view");
  if (!v33)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v34 = v33;
  v35 = objc_msgSend(v33, "layoutMarginsGuide");

  v36 = objc_msgSend(v35, "leadingAnchor");
  v37 = objc_msgSend(v32, "constraintEqualToAnchor:", v36);

  *(_QWORD *)(v19 + 48) = v37;
  v38 = objc_msgSend(v15, "trailingAnchor");
  v39 = objc_msgSend(v3, "view");
  if (v39)
  {
    v40 = v39;
    v41 = (void *)objc_opt_self(NSLayoutConstraint);
    v42 = objc_msgSend(v40, "layoutMarginsGuide");

    v43 = objc_msgSend(v42, "trailingAnchor");
    v44 = objc_msgSend(v38, "constraintEqualToAnchor:", v43);

    *(_QWORD *)(v19 + 56) = v44;
    v56 = v19;
    specialized Array._endMutation()(v45);
    v46 = v56;
    sub_100010498(0, (unint64_t *)&qword_1001177E0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v46);
    objc_msgSend(v41, "activateConstraints:", isa);

    v48 = type metadata accessor for TaskPriority(0);
    v49 = (uint64_t)v55;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v55, 1, 1, v48);
    v50 = swift_allocObject(&unk_10010D3B0, 24, 7);
    swift_unknownObjectWeakInit(v50 + 16, v3);
    type metadata accessor for MainActor(0);
    swift_retain(v50);
    v52 = static MainActor.shared.getter(v51);
    v53 = (_QWORD *)swift_allocObject(&unk_10010D3D8, 40, 7);
    v53[2] = v52;
    v53[3] = &protocol witness table for MainActor;
    v53[4] = v50;
    swift_release(v50);
    v54 = sub_1000AA064(v49, (uint64_t)&unk_10011BF90, (uint64_t)v53);
    swift_release(v54);
    sub_1000A5E34();
    return;
  }
LABEL_17:
  __break(1u);
}

double sub_1000A5E34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (**v3)();
  uint64_t v4;
  uint64_t v5;
  uint64_t (**v6)();
  uint64_t v7;
  uint64_t v8;
  void (**v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  double (**v12)(void *);
  uint64_t v13;
  double result;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionAmbientViewController_matchingFlowView);
  v2 = swift_allocObject(&unk_10010D3B0, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16, v0);
  v3 = (uint64_t (**)())(v1 + OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_retryHandler);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_retryHandler + 8);
  *v3 = sub_1000A66F4;
  v3[1] = (uint64_t (*)())v2;
  swift_release(v4);
  v5 = swift_allocObject(&unk_10010D3B0, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16, v0);
  v6 = (uint64_t (**)())(v1 + OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_cancellationHandler);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_cancellationHandler + 8);
  *v6 = sub_1000A6728;
  v6[1] = (uint64_t (*)())v5;
  swift_release(v7);
  v8 = swift_allocObject(&unk_10010D3B0, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16, v0);
  v9 = (void (**)(uint64_t))(v1
                                     + OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_appleMusicURLHandler);
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_appleMusicURLHandler + 8);
  *v9 = sub_100010794;
  v9[1] = (void (*)(uint64_t))v8;
  swift_release(v10);
  v11 = swift_allocObject(&unk_10010D3B0, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, v0);
  v12 = (double (**)(void *))(v1
                                       + OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_displayMatchedMediaItemHandler);
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_displayMatchedMediaItemHandler + 8);
  *v12 = sub_1000A6878;
  v12[1] = (double (*)(void *))v11;
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

uint64_t sub_1000A5FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4[12] = a1;
  v4[13] = a4;
  v5 = sub_100004F7C(&qword_100118B70);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100004F7C(&qword_100116DC8);
  v4[15] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[16] = v7;
  v4[17] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100004F7C(&qword_10011A5C0);
  v4[18] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[19] = v9;
  v4[20] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MainActor(0);
  v4[21] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  return swift_task_switch(sub_1000A6090, v11, v12);
}

uint64_t sub_1000A6090()
{
  uint64_t v0;
  uint64_t v1;
  char *Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 104);
  swift_release(*(_QWORD *)(v0 + 168));
  v1 += 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    if (qword_100115EE0 != -1)
      swift_once(&qword_100115EE0, sub_100045C0C);
    v3 = *(_QWORD *)(v0 + 160);
    v4 = *(_QWORD *)(v0 + 136);
    v25 = *(_QWORD *)(v0 + 144);
    v26 = *(_QWORD *)(v0 + 152);
    v6 = *(_QWORD *)(v0 + 120);
    v5 = *(_QWORD *)(v0 + 128);
    v7 = *(_QWORD *)(v0 + 112);
    v8 = *(_QWORD *)(v0 + 104) + 16;
    swift_beginAccess(qword_100124510 + OBJC_IVAR____TtC16MusicRecognition15MusicRecognizer__result, v0 + 40, 33, 0);
    v9 = sub_100004F7C(&qword_100116DD8);
    Published.projectedValue.getter(v9);
    swift_endAccess(v0 + 40);
    v10 = sub_100010498(0, (unint64_t *)&qword_100118B88, OS_dispatch_queue_ptr);
    *(_QWORD *)(v0 + 88) = static OS_dispatch_queue.main.getter();
    v11 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 1, 1, v11);
    v12 = sub_10000522C(&qword_100116DE8, &qword_100116DC8, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v13 = sub_100048EE8();
    Publisher.receive<A>(on:options:)(v0 + 88, v7, v6, v10, v12, v13);
    sub_10000526C(v7, &qword_100118B70);

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    v14 = swift_allocObject(&unk_10010D3B0, 24, 7);
    swift_beginAccess(v8, v0 + 64, 0, 0);
    v15 = (void *)swift_unknownObjectWeakLoadStrong(v8);
    swift_unknownObjectWeakInit(v14 + 16, v15);

    v16 = sub_10000522C(&qword_10011A5C8, &qword_10011A5C0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v17 = Publisher<>.sink(receiveValue:)(sub_1000A7138, v14, v25, v16);
    v18 = swift_release(v14);
    (*(void (**)(uint64_t, uint64_t, __n128))(v26 + 8))(v3, v25, v18);
    v19 = *(_QWORD *)&Strong[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionAmbientViewController_musicRecognitionCancellable];
    *(_QWORD *)&Strong[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionAmbientViewController_musicRecognitionCancellable] = v17;

    swift_release(v19);
  }
  v20 = Strong == 0;
  v21 = *(_QWORD *)(v0 + 160);
  v22 = *(_QWORD *)(v0 + 136);
  v23 = *(_QWORD *)(v0 + 112);
  **(_BYTE **)(v0 + 96) = v20;
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1000A6350(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  id v8;
  _BYTE v9[24];

  v2 = *(void **)a1;
  v3 = *(void **)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = objc_retain(*(id *)(Strong
                           + OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionAmbientViewController_matchingFlowView));
    sub_1000A523C(v2, v3, v4);

  }
}

id sub_1000A63E8(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v4;
  objc_class *ObjectType;
  uint64_t v8;
  id v9;
  char *v10;
  NSString v11;
  id v12;
  objc_super v14;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType(v3, a2);
  *(_QWORD *)&v4[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionAmbientViewController_musicRecognitionCancellable] = 0;
  v8 = OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionAmbientViewController_matchingFlowView;
  v9 = objc_allocWithZone((Class)type metadata accessor for AmbientMatchingFlowView());
  v10 = v4;
  *(_QWORD *)&v4[v8] = objc_msgSend(v9, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);

  if (a2)
  {
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v11 = 0;
  }
  v14.receiver = v10;
  v14.super_class = ObjectType;
  v12 = objc_msgSendSuper2(&v14, "initWithNibName:bundle:", v11, a3);

  return v12;
}

id sub_1000A653C(void *a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  id v6;
  char *v7;
  id v8;
  objc_super v10;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  *(_QWORD *)&v2[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionAmbientViewController_musicRecognitionCancellable] = 0;
  v5 = OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionAmbientViewController_matchingFlowView;
  v6 = objc_allocWithZone((Class)type metadata accessor for AmbientMatchingFlowView());
  v7 = v2;
  *(_QWORD *)&v2[v5] = objc_msgSend(v6, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);

  v10.receiver = v7;
  v10.super_class = ObjectType;
  v8 = objc_msgSendSuper2(&v10, "initWithCoder:", a1);

  return v8;
}

uint64_t type metadata accessor for MusicRecognitionAmbientViewController()
{
  return objc_opt_self(_TtC16MusicRecognition37MusicRecognitionAmbientViewController);
}

uint64_t sub_1000A6638()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000A665C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000A6688(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10011BF8C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000101B8;
  return sub_1000A5FA8(a1, v4, v5, v6);
}

uint64_t sub_1000A66F4()
{
  uint64_t v0;

  return sub_10000F4CC(v0, 0xEu, (uint64_t)&unk_10010D468, (uint64_t)&unk_10011BFC8, (uint64_t (*)(char *, uint64_t, uint64_t))sub_1000AA080);
}

uint64_t sub_1000A6728()
{
  uint64_t v0;

  return sub_10000F4CC(v0, 0xDu, (uint64_t)&unk_10010D440, (uint64_t)&unk_10011BFB8, (uint64_t (*)(char *, uint64_t, uint64_t))sub_1000A9F18);
}

double sub_1000A675C(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t Strong;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  double result;
  _BYTE v16[24];

  v4 = sub_100004F7C(&qword_100116D98);
  __chkstk_darwin(v4);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v8 = (void *)Strong;
    sub_1000107A4(0xBu);

  }
  v9 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 1, 1, v9);
  type metadata accessor for MainActor(0);
  v10 = a1;
  v11 = static MainActor.shared.getter(v10);
  v12 = (_QWORD *)swift_allocObject(&unk_10010D400, 40, 7);
  v12[2] = v11;
  v12[3] = &protocol witness table for MainActor;
  v12[4] = v10;
  v13 = sub_1000A5724((uint64_t)v6, (uint64_t)&unk_10011BFA0, (uint64_t)v12);
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

double sub_1000A6878(void *a1)
{
  uint64_t v1;

  return sub_1000A675C(a1, v1);
}

uint64_t sub_1000A6880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[15] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[16] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[17] = v6;
  v4[18] = v7;
  return swift_task_switch(sub_1000A68EC, v6, v7);
}

uint64_t sub_1000A68EC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0 + 2;
  v2 = v0[15];
  v3 = (void *)objc_opt_self(SHMediaItem);
  v0[2] = v0;
  v0[3] = sub_10000F950;
  v4 = swift_continuation_init(v0 + 2, 1);
  v0[10] = _NSConcreteStackBlock;
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_1000A56B0;
  v5[3] = &unk_10010D418;
  v5[4] = v4;
  objc_msgSend(v3, "presentMediaItem:completionHandler:", v2, v5);
  return swift_continuation_await(v1);
}

uint64_t sub_1000A6994(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  NSString v20;
  uint64_t v21;
  Class isa;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[5];
  _QWORD v27[5];
  _QWORD v28[2];
  uint64_t v29;
  ValueMetadata *v30;
  _UNKNOWN **v31;

  v30 = &type metadata for MusicRecognitionLifeCycle;
  v31 = &off_10010DDD0;
  LOWORD(v28[0]) = a1;
  BYTE2(v28[0]) = BYTE2(a1);
  v28[1] = a2;
  v29 = a3;
  v3 = qword_100116360;
  swift_bridgeObjectRetain(a3);
  if (v3 != -1)
    swift_once(&qword_100116360, sub_1000B6408);
  v4 = type metadata accessor for Logger(0);
  sub_10000B5E8(v4, (uint64_t)qword_10011CA80);
  sub_100007AE0((uint64_t)v28, (uint64_t)v27);
  v5 = sub_100007AE0((uint64_t)v28, (uint64_t)v26);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc(22, -1);
    v9 = swift_slowAlloc(64, -1);
    v25 = v9;
    *(_DWORD *)v8 = 136315395;
    v10 = sub_10000C9C8(v27, v27[3]);
    v11 = v10[1];
    v12 = v10[2];
    swift_bridgeObjectRetain(v12);
    v24 = sub_1000529F4(v11, v12, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v8 + 4, v8 + 12);
    swift_bridgeObjectRelease(v12);
    _s16MusicRecognition11AnyPlaylistVwxx_0(v27);
    *(_WORD *)(v8 + 12) = 2081;
    v13 = sub_10000C9C8(v26, v26[3]);
    v14 = sub_1000B71B0(*(_BYTE *)v13, *((_BYTE *)v13 + 1), *((_BYTE *)v13 + 2));
    v15 = sub_100010498(0, &qword_10011BFA8, NSObject_ptr);
    v16 = Dictionary.description.getter(v14, &type metadata for String, v15, &protocol witness table for String);
    v18 = v17;
    swift_bridgeObjectRelease(v14);
    v24 = sub_1000529F4(v16, v18, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v8 + 14, v8 + 22);
    swift_bridgeObjectRelease(v18);
    _s16MusicRecognition11AnyPlaylistVwxx_0(v26);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Send analytics event: %s, payload: %{private}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy(v9, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    _s16MusicRecognition11AnyPlaylistVwxx_0(v27);
    _s16MusicRecognition11AnyPlaylistVwxx_0(v26);
  }

  v19 = v29;
  swift_bridgeObjectRetain(v29);
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v19);
  v21 = sub_1000B71B0(v28[0], BYTE1(v28[0]), SBYTE2(v28[0]));
  sub_100010498(0, &qword_10011BFA8, NSObject_ptr);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v21);
  AnalyticsSendEvent(v20, isa);

  return _s16MusicRecognition11AnyPlaylistVwxx_0(v28);
}

uint64_t sub_1000A6CBC(__int16 a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  NSString v20;
  uint64_t v21;
  Class isa;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[5];
  _QWORD v27[5];
  _QWORD v28[2];
  uint64_t v29;
  ValueMetadata *v30;
  _UNKNOWN **v31;

  v30 = &type metadata for MatchLifeCycle;
  v31 = &off_10010DF00;
  LOWORD(v28[0]) = a1 & 0xFF01;
  v28[1] = a2;
  v29 = a3;
  v3 = qword_100116360;
  swift_bridgeObjectRetain(a3);
  if (v3 != -1)
    swift_once(&qword_100116360, sub_1000B6408);
  v4 = type metadata accessor for Logger(0);
  sub_10000B5E8(v4, (uint64_t)qword_10011CA80);
  sub_100007AE0((uint64_t)v28, (uint64_t)v27);
  v5 = sub_100007AE0((uint64_t)v28, (uint64_t)v26);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc(22, -1);
    v9 = swift_slowAlloc(64, -1);
    v25 = v9;
    *(_DWORD *)v8 = 136315395;
    v10 = sub_10000C9C8(v27, v27[3]);
    v11 = v10[1];
    v12 = v10[2];
    swift_bridgeObjectRetain(v12);
    v24 = sub_1000529F4(v11, v12, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v8 + 4, v8 + 12);
    swift_bridgeObjectRelease(v12);
    _s16MusicRecognition11AnyPlaylistVwxx_0(v27);
    *(_WORD *)(v8 + 12) = 2081;
    v13 = (char *)sub_10000C9C8(v26, v26[3]);
    v14 = sub_1000B72D4(*v13, v13[1]);
    v15 = sub_100010498(0, &qword_10011BFA8, NSObject_ptr);
    v16 = Dictionary.description.getter(v14, &type metadata for String, v15, &protocol witness table for String);
    v18 = v17;
    swift_bridgeObjectRelease(v14);
    v24 = sub_1000529F4(v16, v18, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v8 + 14, v8 + 22);
    swift_bridgeObjectRelease(v18);
    _s16MusicRecognition11AnyPlaylistVwxx_0(v26);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Send analytics event: %s, payload: %{private}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy(v9, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    _s16MusicRecognition11AnyPlaylistVwxx_0(v27);
    _s16MusicRecognition11AnyPlaylistVwxx_0(v26);
  }

  v19 = v29;
  swift_bridgeObjectRetain(v29);
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v19);
  v21 = sub_1000B72D4(v28[0], SBYTE1(v28[0]));
  sub_100010498(0, &qword_10011BFA8, NSObject_ptr);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v21);
  AnalyticsSendEvent(v20, isa);

  return _s16MusicRecognition11AnyPlaylistVwxx_0(v28);
}

uint64_t sub_1000A6FE0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10011BF9C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000101B8;
  return sub_1000A6880(a1, v4, v5, v6);
}

uint64_t sub_1000A704C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000A7070()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_10011BFB4);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_100010C20;
  return sub_10000F5E4();
}

uint64_t sub_1000A70D4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_10011BFC4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100010C20;
  return sub_10000F218(a1);
}

void sub_1000A7138(uint64_t a1)
{
  uint64_t v1;

  sub_1000A6350(a1, v1);
}

uint64_t sub_1000A7140()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1000A7164()
{
  uint64_t v0;

  return sub_10008DBF4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1000A716C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000A717C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000A7184()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000A71B8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_100118CDC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_100010C20;
  return sub_10004AB88(a1, v4, v5, v7, v6);
}

uint64_t sub_1000A7234()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000A7260(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_100116E04);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_100010C20;
  return sub_10000FBB4(a1, v4, v5, v6);
}

_QWORD *sub_1000A72D0(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_100004F7C(&qword_100116698);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for ColorScheme(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v4, a2, v8);
      v9 = v4;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *v4 = *a2;
      swift_retain(v13);
      v9 = v4;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = a3[5];
    v15 = a3[6];
    v16 = (_QWORD *)((char *)v4 + v14);
    v17 = (_QWORD *)((char *)a2 + v14);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = (_QWORD *)((char *)v4 + v15);
    v20 = (_QWORD *)((char *)a2 + v15);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = a3[7];
    v23 = a3[8];
    v12 = *(_QWORD *)((char *)a2 + v22);
    *(_QWORD *)((char *)v4 + v22) = v12;
    *((_BYTE *)v4 + v23) = *((_BYTE *)a2 + v23);
    swift_retain(v18);
    swift_retain(v21);
  }
  swift_retain(v12);
  return v4;
}

double sub_1000A73E4(_QWORD *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  double result;

  v4 = sub_100004F7C(&qword_100116698);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  swift_release(*(_QWORD *)((char *)a1 + a2[5] + 8));
  swift_release(*(_QWORD *)((char *)a1 + a2[6] + 8));
  *(_QWORD *)&result = swift_release(*(_QWORD *)((char *)a1 + a2[7])).n128_u64[0];
  return result;
}

_QWORD *sub_1000A7474(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_100004F7C(&qword_100116698);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = a3[5];
  v13 = a3[6];
  v14 = (_QWORD *)((char *)a1 + v12);
  v15 = (_QWORD *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (_QWORD *)((char *)a1 + v13);
  v18 = (_QWORD *)((char *)a2 + v13);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = a3[7];
  v21 = a3[8];
  v22 = *(_QWORD *)((char *)a2 + v20);
  *(_QWORD *)((char *)a1 + v20) = v22;
  *((_BYTE *)a1 + v21) = *((_BYTE *)a2 + v21);
  swift_retain(v16);
  swift_retain(v19);
  swift_retain(v22);
  return a1;
}

_QWORD *sub_1000A7560(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  if (a1 != a2)
  {
    sub_10000526C((uint64_t)a1, &qword_100116698);
    v6 = sub_100004F7C(&qword_100116698);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for ColorScheme(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v12 = a3[5];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  *v13 = *v14;
  v15 = v13[1];
  v16 = v14[1];
  v13[1] = v16;
  swift_retain(v16);
  swift_release(v15);
  v17 = a3[6];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  *v18 = *v19;
  v20 = v18[1];
  v21 = v19[1];
  v18[1] = v21;
  swift_retain(v21);
  swift_release(v20);
  v22 = a3[7];
  v23 = *(_QWORD *)((char *)a2 + v22);
  v24 = *(_QWORD *)((char *)a1 + v22);
  *(_QWORD *)((char *)a1 + v22) = v23;
  swift_retain(v23);
  swift_release(v24);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

char *sub_1000A7698(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_100004F7C(&qword_100116698);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v8] = *(_OWORD *)&a2[v8];
  v9 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  a1[v9] = a2[v9];
  return a1;
}

char *sub_1000A775C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (a1 != a2)
  {
    sub_10000526C((uint64_t)a1, &qword_100116698);
    v6 = sub_100004F7C(&qword_100116698);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  *(_QWORD *)v9 = *(_QWORD *)v10;
  v11 = *((_QWORD *)v9 + 1);
  *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
  swift_release(v11);
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v13 + 1);
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  swift_release(v15);
  v16 = a3[7];
  v17 = *(_QWORD *)&a1[v16];
  *(_QWORD *)&a1[v16] = *(_QWORD *)&a2[v16];
  swift_release(v17);
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

uint64_t sub_1000A7878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000A7884);
}

uint64_t sub_1000A7884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_100004F7C(&qword_100117800);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1000A7904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000A7910);
}

uint64_t sub_1000A7910(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100004F7C(&qword_100117800);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for SongArtworkView(uint64_t a1)
{
  uint64_t result;

  result = qword_10011C070;
  if (!qword_10011C070)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SongArtworkView);
  return result;
}

void sub_1000A79C8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  sub_100020154(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_1000D7118;
    v4[2] = &unk_1000D7118;
    v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[4] = &unk_1000D7130;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

uint64_t sub_1000A7A54(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000DF124, 1);
}

void sub_1000A7A64()
{
  qword_10011BFE0 = 0x636973756DLL;
  *(_QWORD *)algn_10011BFE8 = 0xE500000000000000;
}

uint64_t sub_1000A7A84(uint64_t a1)
{
  return sub_1000A7ABC(0.5, a1, (SEL *)&selRef_blackColor, &qword_10011BFF0);
}

uint64_t sub_1000A7A9C(uint64_t a1)
{
  return sub_1000A7ABC(0.3, a1, (SEL *)&selRef_grayColor, &qword_10011BFF8);
}

uint64_t sub_1000A7ABC(double a1, uint64_t a2, SEL *a3, uint64_t *a4)
{
  id v6;
  id v7;
  uint64_t result;

  v6 = objc_msgSend((id)objc_opt_self(UIColor), *a3);
  v7 = objc_msgSend(v6, "colorWithAlphaComponent:", a1);

  result = Color.init(uiColor:)(v7);
  *a4 = result;
  return result;
}

uint64_t sub_1000A7B3C()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v25;
  _OWORD v26[2];
  uint64_t v27;

  v0 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v0);
  v2 = (_OWORD *)((char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = sub_100004F7C(&qword_100117690);
  sub_10000C484(v3, qword_10011C000);
  v4 = sub_10000B5E8(v3, (uint64_t)qword_10011C000);
  v5 = (char *)v2 + *(int *)(v0 + 20);
  v6 = enum case for RoundedCornerStyle.continuous(_:);
  v7 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  __asm { FMOV            V0.2D, #15.0 }
  *v2 = _Q0;
  v13 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  v14 = objc_msgSend(v13, "colorWithAlphaComponent:", 0.15);

  v15 = Color.init(uiColor:)(v14);
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v26, 0, 0, _swiftEmptyArrayStorage, 0.5, 10.0, 0.0);
  sub_10000B340((uint64_t)v2, v4, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v16 = v4 + *(int *)(sub_100004F7C(&qword_1001176B0) + 36);
  v17 = v26[1];
  *(_OWORD *)v16 = v26[0];
  *(_OWORD *)(v16 + 16) = v17;
  *(_QWORD *)(v16 + 32) = v27;
  v18 = sub_100004F7C(&qword_1001176B8);
  *(_QWORD *)(v4 + *(int *)(v18 + 52)) = v15;
  *(_WORD *)(v4 + *(int *)(v18 + 56)) = 256;
  swift_retain(v15);
  v20 = static Alignment.center.getter(v19);
  v22 = v21;
  v23 = (uint64_t *)(v4 + *(int *)(sub_100004F7C(&qword_1001176C0) + 36));
  *v23 = v20;
  v23[1] = v22;
  swift_release(v15);
  return sub_10001E69C((uint64_t)v2);
}

uint64_t sub_1000A7D28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  _QWORD v82[3];

  v2 = v1;
  v4 = sub_100004F7C(&qword_10011C0B8);
  __chkstk_darwin(v4);
  v81 = (uint64_t)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v78);
  v7 = (_OWORD *)((char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for SongArtworkView(0);
  v69 = *(_QWORD *)(v8 - 8);
  v9 = *(_QWORD *)(v69 + 64);
  __chkstk_darwin(v8);
  v71 = (uint64_t)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_100004F7C((uint64_t *)&unk_100118CE0);
  __chkstk_darwin(v73);
  v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_100004F7C(&qword_10011C0C0);
  __chkstk_darwin(v70);
  v13 = (uint64_t *)((char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v76 = sub_100004F7C(&qword_10011C0C8);
  v74 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v15 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_100004F7C(&qword_10011C0D0);
  __chkstk_darwin(v72);
  v79 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_100004F7C(&qword_10011C0D8);
  __chkstk_darwin(v75);
  v18 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_100004F7C(&qword_10011C0E0);
  v19 = __chkstk_darwin(v77);
  v80 = (char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v13 = static Alignment.center.getter(v19);
  v13[1] = v21;
  v22 = sub_100004F7C(&qword_10011C0E8);
  sub_1000A8348(v2, (uint64_t)v13 + *(int *)(v22 + 44));
  v23 = v2;
  v24 = *(_QWORD *)(v2 + *(int *)(v8 + 28));
  if (UIAccessibilityIsVideoAutoplayEnabled() && !UIAccessibilityIsReduceMotionEnabled())
  {
    KeyPath = swift_getKeyPath(&unk_1000D7198, v25);
    v68 = a1;
    v28 = KeyPath;
    v82[0] = v24;
    v29 = sub_100004864((unint64_t *)&qword_10011C108, type metadata accessor for SongArtworkViewModel, (uint64_t)&unk_1000D7E08);
    ObservationRegistrar.access<A, B>(_:keyPath:)(v82, v28, v29);
    v30 = v28;
    a1 = v68;
    swift_release(v30);
    v31 = v24 + OBJC_IVAR____TtC16MusicRecognition20SongArtworkViewModel___animatedArtworkURL;
    swift_beginAccess(v24 + OBJC_IVAR____TtC16MusicRecognition20SongArtworkViewModel___animatedArtworkURL, v82, 0, 0);
    sub_100007C8C(v31, (uint64_t)v11, (uint64_t *)&unk_100118CE0);
  }
  else
  {
    v26 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v11, 1, 1, v26);
  }
  v32 = v23;
  v33 = v71;
  sub_10000B340(v32, v71, type metadata accessor for SongArtworkView);
  v34 = *(unsigned __int8 *)(v69 + 80);
  v35 = (v34 + 16) & ~v34;
  v36 = swift_allocObject(&unk_10010D530, v35 + v9, v34 | 7);
  sub_1000A9370(v33, v36 + v35);
  v37 = sub_10000522C(&qword_10011C0F0, &qword_10011C0C0, (uint64_t)&protocol conformance descriptor for ZStack<A>);
  v38 = sub_10005A83C();
  View.onChange<A>(of:initial:_:)(v11, 0, sub_1000A93B4, v36, v70, v73, v37, v38);
  swift_release(v36);
  sub_10000526C((uint64_t)v11, (uint64_t *)&unk_100118CE0);
  sub_10000526C((uint64_t)v13, &qword_10011C0C0);
  v39 = (char *)v7 + *(int *)(v78 + 20);
  v40 = enum case for RoundedCornerStyle.continuous(_:);
  v41 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 104))(v39, v40, v41);
  __asm { FMOV            V0.2D, #15.0 }
  *v7 = _Q0;
  v47 = (uint64_t)v79;
  v48 = (uint64_t)&v79[*(int *)(v72 + 36)];
  sub_10000B340((uint64_t)v7, v48, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v48 + *(int *)(sub_100004F7C(&qword_100117BE8) + 36)) = 256;
  v49 = v74;
  v50 = v76;
  (*(void (**)(uint64_t, char *, uint64_t))(v74 + 16))(v47, v15, v76);
  sub_10001E69C((uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v15, v50);
  if (qword_1001162F0 != -1)
    swift_once(&qword_1001162F0, sub_1000A7B3C);
  v51 = sub_100004F7C(&qword_100117690);
  v52 = sub_10000B5E8(v51, (uint64_t)qword_10011C000);
  v53 = static Alignment.center.getter(v52);
  v55 = v54;
  v56 = (uint64_t)&v18[*(int *)(v75 + 36)];
  sub_100007C8C(v52, v56, &qword_100117690);
  v57 = (uint64_t *)(v56 + *(int *)(sub_100004F7C(&qword_10011C0F8) + 36));
  *v57 = v53;
  v57[1] = v55;
  sub_100007C48(v47, (uint64_t)v18, &qword_10011C0D0);
  v58 = v81;
  v59 = sub_1000A8C20(v81);
  v60 = static Alignment.center.getter(v59);
  v62 = v61;
  v63 = (uint64_t)v80;
  v64 = (uint64_t)&v80[*(int *)(v77 + 36)];
  sub_100007C8C(v58, v64, &qword_10011C0B8);
  v65 = (uint64_t *)(v64 + *(int *)(sub_100004F7C(&qword_10011C100) + 36));
  *v65 = v60;
  v65[1] = v62;
  sub_100007C8C((uint64_t)v18, v63, &qword_10011C0D8);
  sub_10000526C(v58, &qword_10011C0B8);
  sub_10000526C((uint64_t)v18, &qword_10011C0D8);
  return sub_100007C48(v63, a1, &qword_10011C0E0);
}

uint64_t sub_1000A8348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];

  v63 = a2;
  v3 = sub_100004F7C(&qword_10011C120);
  __chkstk_darwin(v3);
  v60 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_100004F7C(&qword_10011C128);
  v5 = __chkstk_darwin(v62);
  v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v61 = (uint64_t)&v54 - v8;
  v9 = type metadata accessor for SongArtworkView(0);
  v10 = *(_QWORD *)(v9 - 8);
  v54 = v9;
  v55 = v10;
  v11 = v9;
  v12 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100004F7C((uint64_t *)&unk_100118CE0);
  __chkstk_darwin(v14);
  v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100004F7C(&qword_10011C130);
  v58 = *(_QWORD *)(v17 - 8);
  v59 = v17;
  __chkstk_darwin(v17);
  v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_100004F7C(&qword_10011C138);
  v20 = __chkstk_darwin(v57);
  v22 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v56 = (uint64_t)&v54 - v23;
  v24 = *(_QWORD *)(a1 + *(int *)(v11 + 28));
  v25 = a1;
  KeyPath = swift_getKeyPath(&unk_1000D71C0, v26);
  v67[0] = v24;
  v28 = sub_100004864((unint64_t *)&qword_10011C108, type metadata accessor for SongArtworkViewModel, (uint64_t)&unk_1000D7E08);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v67, KeyPath, v28);
  swift_release(KeyPath);
  v29 = v24 + OBJC_IVAR____TtC16MusicRecognition20SongArtworkViewModel__artworkURL;
  swift_beginAccess(v24 + OBJC_IVAR____TtC16MusicRecognition20SongArtworkViewModel__artworkURL, v67, 0, 0);
  sub_100007C8C(v29, (uint64_t)v16, (uint64_t *)&unk_100118CE0);
  sub_10000B340(v25, (uint64_t)v13, type metadata accessor for SongArtworkView);
  v30 = *(unsigned __int8 *)(v55 + 80);
  v31 = (v30 + 16) & ~v30;
  v32 = swift_allocObject(&unk_10010D580, v31 + v12, v30 | 7);
  sub_1000A9370((uint64_t)v13, v32 + v31);
  v33 = sub_100004F7C(&qword_10011C140);
  v34 = sub_1000A9594();
  AsyncImage.init(url:scale:transaction:content:)(v16, 0, sub_1000A9548, v32, v33, v34, 1.0);
  v35 = v54;
  v36 = (uint64_t *)(v25 + *(int *)(v54 + 24));
  v37 = v25;
  v38 = *v36;
  v39 = v36[1];
  v64 = v38;
  v65 = v39;
  v40 = sub_100004F7C(&qword_10011C118);
  State.wrappedValue.getter(&v66, v40);
  v41 = v66;
  v43 = v58;
  v42 = v59;
  (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v22, v19, v59);
  *(_QWORD *)&v22[*(int *)(v57 + 36)] = v41;
  (*(void (**)(char *, uint64_t))(v43 + 8))(v19, v42);
  v44 = v56;
  sub_100007C48((uint64_t)v22, v56, &qword_10011C138);
  v45 = v60;
  sub_1000A87F4(v60);
  v46 = (uint64_t *)(v37 + *(int *)(v35 + 20));
  v47 = *v46;
  v48 = v46[1];
  v64 = v47;
  v65 = v48;
  State.wrappedValue.getter(&v66, v40);
  v49 = v66;
  sub_100007C8C((uint64_t)v45, (uint64_t)v7, &qword_10011C120);
  *(_QWORD *)&v7[*(int *)(v62 + 36)] = v49;
  sub_10000526C((uint64_t)v45, &qword_10011C120);
  v50 = v61;
  sub_100007C48((uint64_t)v7, v61, &qword_10011C128);
  sub_100007C8C(v44, (uint64_t)v22, &qword_10011C138);
  sub_100007C8C(v50, (uint64_t)v7, &qword_10011C128);
  v51 = v63;
  sub_100007C8C((uint64_t)v22, v63, &qword_10011C138);
  v52 = sub_100004F7C(&qword_10011C160);
  sub_100007C8C((uint64_t)v7, v51 + *(int *)(v52 + 48), &qword_10011C128);
  sub_10000526C(v50, &qword_10011C128);
  sub_10000526C(v44, &qword_10011C138);
  sub_10000526C((uint64_t)v7, &qword_10011C128);
  return sub_10000526C((uint64_t)v22, &qword_10011C138);
}

uint64_t sub_1000A87F4@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  id v21;
  uint64_t v22;
  _QWORD v24[3];

  v3 = sub_100004F7C((uint64_t *)&unk_100118CE0);
  __chkstk_darwin(v3);
  v5 = (char *)&v24[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v24[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v24[-1] - v11;
  v13 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for SongArtworkView(0) + 28));
  if (UIAccessibilityIsVideoAutoplayEnabled() && !UIAccessibilityIsReduceMotionEnabled())
  {
    KeyPath = swift_getKeyPath(&unk_1000D7198, v14);
    v24[0] = v13;
    v18 = sub_100004864((unint64_t *)&qword_10011C108, type metadata accessor for SongArtworkViewModel, (uint64_t)&unk_1000D7E08);
    ObservationRegistrar.access<A, B>(_:keyPath:)(v24, KeyPath, v18);
    swift_release(KeyPath);
    v19 = v13 + OBJC_IVAR____TtC16MusicRecognition20SongArtworkViewModel___animatedArtworkURL;
    swift_beginAccess(v13 + OBJC_IVAR____TtC16MusicRecognition20SongArtworkViewModel___animatedArtworkURL, v24, 0, 0);
    sub_100007C8C(v19, (uint64_t)v5, (uint64_t *)&unk_100118CE0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
    {
      v20 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v20(v12, v5, v6);
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
      v21 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemFillColor");
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      v20(a1, v10, v6);
      v22 = type metadata accessor for AnimatedArtworkPlayerView(0);
      *(_QWORD *)&a1[*(int *)(v22 + 20)] = v21;
      return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a1, 0, 1, v22);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  }
  sub_10000526C((uint64_t)v5, (uint64_t *)&unk_100118CE0);
  v15 = type metadata accessor for AnimatedArtworkPlayerView(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a1, 1, 1, v15);
}

uint64_t sub_1000A8A68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  _BYTE v20[16];

  v5 = type metadata accessor for SongArtworkView(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = type metadata accessor for AnimationCompletionCriteria(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(a2, 1, v12);
  if ((_DWORD)result != 1)
  {
    v14 = static Animation.spring(response:dampingFraction:blendDuration:)(0.5, 1.0, 0.0);
    v15 = static AnimationCompletionCriteria.logicallyComplete.getter();
    __chkstk_darwin(v15);
    *(_QWORD *)&v20[-16] = a3;
    sub_10000B340(a3, (uint64_t)&v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for SongArtworkView);
    v16 = *(unsigned __int8 *)(v6 + 80);
    v17 = (v16 + 16) & ~v16;
    v18 = swift_allocObject(&unk_10010D558, v17 + v7, v16 | 7);
    sub_1000A9370((uint64_t)&v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], v18 + v17);
    withAnimation<A>(_:completionCriteria:_:completion:)(v14, v11, sub_1000A9408, &v20[-32], sub_1000A9424, v18, (char *)&type metadata for () + 8);
    swift_release(v14);
    v19 = swift_release(v18);
    return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v9 + 8))(v11, v8, v19);
  }
  return result;
}

uint64_t sub_1000A8C20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;

  v32 = a1;
  v1 = type metadata accessor for ColorScheme(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v31 - v6;
  v8 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v8);
  v10 = (_OWORD *)((char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_100004F7C(&qword_10011C110);
  __chkstk_darwin(v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (char *)v10 + *(int *)(v8 + 20);
  v15 = enum case for RoundedCornerStyle.continuous(_:);
  v16 = type metadata accessor for RoundedCornerStyle(0);
  v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v14, v15, v16);
  __asm { FMOV            V0.2D, #15.0 }
  *v10 = _Q0;
  v23 = static Color.primary.getter(v17);
  sub_10000B340((uint64_t)v10, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_QWORD *)&v13[*(int *)(v11 + 52)] = v23;
  *(_WORD *)&v13[*(int *)(v11 + 56)] = 256;
  sub_10001E69C((uint64_t)v10);
  sub_100006A6C(v7);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v5, enum case for ColorScheme.light(_:), v1);
  v24 = static ColorScheme.== infix(_:_:)(v7, v5);
  v25 = *(void (**)(char *, uint64_t))(v2 + 8);
  v25(v5, v1);
  v25(v7, v1);
  if ((v24 & 1) != 0)
  {
    if (qword_1001162E0 != -1)
      swift_once(&qword_1001162E0, sub_1000A7A84);
    v26 = &qword_10011BFF0;
  }
  else
  {
    if (qword_1001162E8 != -1)
      swift_once(&qword_1001162E8, sub_1000A7A9C);
    v26 = &qword_10011BFF8;
  }
  v27 = *v26;
  swift_retain(*v26);
  v28 = v32;
  sub_100007C8C((uint64_t)v13, v32, &qword_10011C110);
  v29 = v28 + *(int *)(sub_100004F7C(&qword_10011C0B8) + 36);
  *(_QWORD *)v29 = v27;
  *(_OWORD *)(v29 + 8) = xmmword_1000D70F0;
  *(_QWORD *)(v29 + 24) = 0x4020000000000000;
  return sub_10000526C((uint64_t)v13, &qword_10011C110);
}

void sub_1000A8EB8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v31 = a2;
  v34 = a3;
  v4 = type metadata accessor for ArtworkUnavailableView(0);
  v32 = *(_QWORD *)(v4 - 8);
  v33 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100004F7C(&qword_10011C168);
  __chkstk_darwin(v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Image.ResizingMode(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for AsyncImagePhase(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (uint64_t *)((char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v15 + 16))(v17, a1, v14);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v15 + 88))(v17, v14) == enum case for AsyncImagePhase.success(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v15 + 96))(v17, v14);
    v18 = *v17;
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for Image.ResizingMode.stretch(_:), v10);
    v19 = Image.resizable(capInsets:resizingMode:)(v13, v18, 0.0, 0.0, 0.0, 0.0);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v20 = *(_BYTE *)(v31 + *(int *)(type metadata accessor for SongArtworkView(0) + 32));
    *(_QWORD *)v9 = v19;
    *((_QWORD *)v9 + 1) = 0;
    v9[16] = 1;
    v9[17] = v20;
    swift_storeEnumTagMultiPayload(v9, v7, 0);
    swift_retain_n(v19, 2);
    v21 = sub_100004F7C(&qword_10011C158);
    v22 = sub_1000A9618();
    v23 = sub_100004864((unint64_t *)&qword_100117310, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkUnavailableView, (uint64_t)&protocol conformance descriptor for ArtworkUnavailableView);
    _ConditionalContent<>.init(storage:)(v9, v21, v33, v22, v23);
    swift_release_n(v19, 2);
    swift_release(v18);
  }
  else
  {
    v24 = v33;
    if (qword_1001162D8 != -1)
      swift_once(&qword_1001162D8, sub_1000A7A64);
    v25 = qword_10011BFE0;
    v26 = *(_QWORD *)algn_10011BFE8;
    swift_bridgeObjectRetain(*(_QWORD *)algn_10011BFE8);
    ArtworkUnavailableView.init(placeholderImage:widthRatio:heightRatio:)(v25, v26, 0, 1, 0, 1);
    v27 = v32;
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v9, v6, v24);
    swift_storeEnumTagMultiPayload(v9, v7, 1);
    v28 = sub_100004F7C(&qword_10011C158);
    v29 = sub_1000A9618();
    v30 = sub_100004864((unint64_t *)&qword_100117310, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkUnavailableView, (uint64_t)&protocol conformance descriptor for ArtworkUnavailableView);
    _ConditionalContent<>.init(storage:)(v9, v28, v24, v29, v30);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v24);
    (*(void (**)(uint64_t *, uint64_t))(v15 + 8))(v17, v14);
  }
}

uint64_t sub_1000A9220(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[3];

  v1 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SongArtworkView(0) + 20));
  v2 = *v1;
  v3 = v1[1];
  v6[1] = v2;
  v6[2] = v3;
  v6[0] = 0x3FF0000000000000;
  v4 = sub_100004F7C(&qword_10011C118);
  return State.wrappedValue.setter(v6, v4);
}

double sub_1000A9290()
{
  uint64_t v0;
  __n128 v1;
  double result;

  v0 = static Animation.easeIn(duration:)(0.35);
  withAnimation<A>(_:_:)(v1);
  *(_QWORD *)&result = swift_release(v0).n128_u64[0];
  return result;
}

uint64_t sub_1000A92FC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[3];

  v1 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SongArtworkView(0) + 24));
  v2 = *v1;
  v3 = v1[1];
  v6[1] = v2;
  v6[2] = v3;
  v6[0] = 0;
  v4 = sub_100004F7C(&qword_10011C118);
  return State.wrappedValue.setter(v6, v4);
}

uint64_t sub_1000A9370(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SongArtworkView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A93B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SongArtworkView(0) - 8) + 80);
  return sub_1000A8A68(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_1000A9408()
{
  uint64_t v0;

  return sub_1000A9220(*(_QWORD *)(v0 + 16));
}

double sub_1000A9424()
{
  type metadata accessor for SongArtworkView(0);
  return sub_1000A9290();
}

uint64_t sub_1000A9450()
{
  uint64_t v0;

  return sub_1000A92FC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1000A9474()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = (int *)type metadata accessor for SongArtworkView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (_QWORD *)(v0 + v4);
  v7 = sub_100004F7C(&qword_100116698);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v7) == 1)
  {
    v8 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
  }
  else
  {
    swift_release(*v6);
  }
  swift_release(*(_QWORD *)((char *)v6 + v1[5] + 8));
  swift_release(*(_QWORD *)((char *)v6 + v1[6] + 8));
  swift_release(*(_QWORD *)((char *)v6 + v1[7]));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

void sub_1000A9548(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SongArtworkView(0) - 8) + 80);
  sub_1000A8EB8(a1, v2 + ((v5 + 16) & ~v5), a2);
}

unint64_t sub_1000A9594()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011C148;
  if (!qword_10011C148)
  {
    v1 = sub_1000050C8(&qword_10011C140);
    sub_1000A9618();
    sub_100004864((unint64_t *)&qword_100117310, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkUnavailableView, (uint64_t)&protocol conformance descriptor for ArtworkUnavailableView);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011C148);
  }
  return result;
}

unint64_t sub_1000A9618()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011C150;
  if (!qword_10011C150)
  {
    v1 = sub_1000050C8(&qword_10011C158);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011C150);
  }
  return result;
}

unint64_t sub_1000A9680()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011C170;
  if (!qword_10011C170)
  {
    v1 = sub_1000050C8(&qword_10011C0E0);
    sub_1000A9704();
    sub_10000522C(&qword_10011C190, &qword_10011C100, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011C170);
  }
  return result;
}

unint64_t sub_1000A9704()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011C178;
  if (!qword_10011C178)
  {
    v1 = sub_1000050C8(&qword_10011C0D8);
    sub_1000A9788();
    sub_10000522C(&qword_10011C188, &qword_10011C0F8, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011C178);
  }
  return result;
}

unint64_t sub_1000A9788()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_10011C180;
  if (!qword_10011C180)
  {
    v1 = sub_1000050C8(&qword_10011C0D0);
    v2[0] = sub_1000050C8(&qword_10011C0C0);
    v2[1] = sub_1000050C8((uint64_t *)&unk_100118CE0);
    v2[2] = sub_10000522C(&qword_10011C0F0, &qword_10011C0C0, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    v2[3] = sub_10005A83C();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    sub_10000522C(&qword_10011A0F8, &qword_100117BE8, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011C180);
  }
  return result;
}

uint64_t Color.init(_:dark:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000A99D8(a1, a2);
  swift_release(a1);
  swift_release(a2);
  return v4;
}

id static UIColor.dynamicColor(light:dark:)(void *a1, void *a2)
{
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  _QWORD v11[5];
  uint64_t v12;

  v4 = swift_allocObject(&unk_10010D5E0, 32, 7);
  *(_QWORD *)(v4 + 16) = a2;
  *(_QWORD *)(v4 + 24) = a1;
  v5 = objc_allocWithZone((Class)UIColor);
  v11[4] = sub_1000A9B1C;
  v12 = v4;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_1000A9988;
  v11[3] = &unk_10010D5F8;
  v6 = _Block_copy(v11);
  v7 = a2;
  v8 = a1;
  v9 = objc_msgSend(v5, "initWithDynamicProvider:", v6);
  _Block_release(v6);
  swift_release(v12);
  return v9;
}

id sub_1000A9988(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t (*v4)(void);
  id v5;
  void *v6;

  v4 = *(uint64_t (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v6 = (void *)v4();
  swift_release(v3);

  return v6;
}

uint64_t sub_1000A99D8(uint64_t a1, uint64_t a2)
{
  __n128 v4;
  void *v5;
  __n128 v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  __n128 v15;
  _QWORD v17[5];
  uint64_t v18;

  sub_100094FD8();
  v4 = swift_retain(a1);
  v5 = (void *)UIColor.init(_:)(v4);
  v6 = swift_retain(a2);
  v7 = (void *)UIColor.init(_:)(v6);
  v8 = swift_allocObject(&unk_10010D630, 32, 7);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v5;
  v9 = objc_allocWithZone((Class)UIColor);
  v17[4] = sub_1000A9B1C;
  v18 = v8;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_1000A9988;
  v17[3] = &unk_10010D648;
  v10 = _Block_copy(v17);
  v11 = v7;
  v12 = v5;
  v13 = objc_msgSend(v9, "initWithDynamicProvider:", v10);
  _Block_release(v10);
  v14 = v18;

  v15 = swift_release(v14);
  return Color.init(_:)(v13, v15);
}

uint64_t sub_1000A9AF0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000A9B20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000A9B30(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_1000A9B38(void *a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;

  v2 = *(void **)(v1 + 16);
  v3 = *(void **)(v1 + 24);
  if (objc_msgSend(a1, "userInterfaceStyle") == (id)2)
    v4 = v2;
  else
    v4 = v3;
  return v4;
}

uint64_t sub_1000A9B74()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1[3] = v0;
  v2 = type metadata accessor for MusicSubscription(0);
  v1[4] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[5] = v3;
  v4 = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[6] = v4;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to static MusicSubscription.current.getter[1]);
  v1[7] = v5;
  *v5 = v1;
  v5[1] = sub_1000A9BF4;
  return static MusicSubscription.current.getter(v4);
}

uint64_t sub_1000A9BF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1000A9D44;
  else
    v3 = sub_1000A9C58;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000A9C58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(os_unfair_lock_s **)(v3 + OBJC_IVAR____TtC16MusicRecognition33MusicSubscriptionStatusController_lock);
  v5 = swift_task_alloc(32);
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = v2;
  v6 = swift_task_alloc(32);
  *(_QWORD *)(v6 + 16) = sub_1000AB024;
  *(_QWORD *)(v6 + 24) = v5;
  v4 += 4;
  os_unfair_lock_lock(v4);
  (*(void (**)(void))(v6 + 16))();
  os_unfair_lock_unlock(v4);
  result = swift_task_dealloc(v6);
  if (!v1)
  {
    v8 = swift_task_dealloc(v5);
    if ((MusicSubscription.canBecomeSubscriber.getter(v8) & 1) != 0)
      sub_1000AA5D4();
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 32));
    swift_task_dealloc(*(_QWORD *)(v0 + 48));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

uint64_t sub_1000A9D44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  if (qword_100115DD8 != -1)
    swift_once(&qword_100115DD8, sub_10000C418);
  v1 = *(_QWORD *)(v0 + 64);
  v2 = type metadata accessor for Logger(0);
  sub_10000B5E8(v2, (uint64_t)qword_100124478);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 64);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    swift_errorRetain(v7);
    v10 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v0 + 16) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v8 + 4, v8 + 12);
    *v9 = v10;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Error fetching Apple Music subscription status with error: %@", v8, 0xCu);
    v11 = sub_100004F7C((uint64_t *)&unk_100116E50);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 64));
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000A9F18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v20[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_10000526C(a1, &qword_100116D98);
    v9 = 7168;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
    {
LABEL_3:
      v11 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v10, v8);
      swift_unknownObjectRetain(v10);
      v13 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v11);
      v15 = v14;
      swift_unknownObjectRelease(v10);
      goto LABEL_6;
    }
  }
  else
  {
    v16 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v9 = v16 | 0x1C00;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
      goto LABEL_3;
  }
  v13 = 0;
  v15 = 0;
LABEL_6:
  v17 = swift_allocObject(&unk_10010D6E8, 32, 7);
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  if (v15 | v13)
  {
    v20[0] = 0;
    v20[1] = 0;
    v18 = v20;
    v20[2] = v13;
    v20[3] = v15;
  }
  else
  {
    v18 = 0;
  }
  return swift_task_create(v9, v18, (char *)&type metadata for () + 8, &unk_10011A370, v17);
}

uint64_t sub_1000AA064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000AA09C(a1, a2, a3, (uint64_t)&unk_10010D738, &qword_10011C2C8, (uint64_t)&unk_10011C2C0);
}

uint64_t sub_1000AA080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000AA09C(a1, a2, a3, (uint64_t)&unk_10010D710, &qword_100118A88, (uint64_t)&unk_10011C2B0);
}

uint64_t sub_1000AA09C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD v27[4];

  v12 = type metadata accessor for TaskPriority(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(a1, 1, v12) == 1)
  {
    sub_10000526C(a1, &qword_100116D98);
    v15 = 7168;
    v16 = *(_QWORD *)(a3 + 16);
    if (v16)
    {
LABEL_3:
      v17 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v16, v14);
      swift_unknownObjectRetain(v16);
      v19 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v17);
      v21 = v20;
      swift_unknownObjectRelease(v16);
      goto LABEL_6;
    }
  }
  else
  {
    v22 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
    v15 = v22 | 0x1C00;
    v16 = *(_QWORD *)(a3 + 16);
    if (v16)
      goto LABEL_3;
  }
  v19 = 0;
  v21 = 0;
LABEL_6:
  v23 = swift_allocObject(a4, 32, 7);
  *(_QWORD *)(v23 + 16) = a2;
  *(_QWORD *)(v23 + 24) = a3;
  v24 = sub_100004F7C(a5);
  if (v21 | v19)
  {
    v27[0] = 0;
    v27[1] = 0;
    v25 = v27;
    v27[2] = v19;
    v27[3] = v21;
  }
  else
  {
    v25 = 0;
  }
  return swift_task_create(v15, v25, v24, a6, v23);
}

uint64_t sub_1000AA1F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v0 = type metadata accessor for MusicDataRequest.ExecutionMethod(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MusicSubscriptionStatusController(0);
  v5 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v6 = v5 + OBJC_IVAR____TtC16MusicRecognition33MusicSubscriptionStatusController__musicSubscription;
  v7 = type metadata accessor for MusicSubscription(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = OBJC_IVAR____TtC16MusicRecognition33MusicSubscriptionStatusController_lock;
  v9 = sub_100004F7C(&qword_10011C2A0);
  v10 = swift_allocObject(v9, 20, 7);
  *(_DWORD *)(v10 + 16) = 0;
  *(_QWORD *)(v5 + v8) = v10;
  ObservationRegistrar.init()(v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for MusicDataRequest.ExecutionMethod.firstParty(_:), v0);
  result = static MusicDataRequest.preferredExecutionMethod.setter(v3);
  qword_1001247E8 = v5;
  return result;
}

uint64_t sub_1000AA308@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[3];

  KeyPath = swift_getKeyPath(&unk_1000D7240, a1);
  v8[0] = v2;
  v5 = sub_100004864((unint64_t *)&qword_1001174E8, type metadata accessor for MusicSubscriptionStatusController, (uint64_t)&unk_1000D7214);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v8, KeyPath, v5);
  swift_release(KeyPath);
  v6 = v2 + OBJC_IVAR____TtC16MusicRecognition33MusicSubscriptionStatusController__musicSubscription;
  swift_beginAccess(v2 + OBJC_IVAR____TtC16MusicRecognition33MusicSubscriptionStatusController__musicSubscription, v8, 0, 0);
  return sub_10001BF54(v6, a2);
}

uint64_t sub_1000AA3B8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[3];

  v4 = *a1;
  KeyPath = swift_getKeyPath(&unk_1000D7240, a2);
  v9[0] = v4;
  v6 = sub_100004864((unint64_t *)&qword_1001174E8, type metadata accessor for MusicSubscriptionStatusController, (uint64_t)&unk_1000D7214);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v9, KeyPath, v6);
  swift_release(KeyPath);
  v7 = v4 + OBJC_IVAR____TtC16MusicRecognition33MusicSubscriptionStatusController__musicSubscription;
  swift_beginAccess(v4 + OBJC_IVAR____TtC16MusicRecognition33MusicSubscriptionStatusController__musicSubscription, v9, 0, 0);
  return sub_10001BF54(v7, a3);
}

uint64_t sub_1000AA468(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  _BYTE v12[16];
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;

  v4 = sub_100004F7C(&qword_1001174E0);
  __chkstk_darwin(v4);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10001BF54(a1, (uint64_t)v6);
  v7 = *a2;
  KeyPath = swift_getKeyPath(&unk_1000D7240, v8);
  v13 = v7;
  v14 = v6;
  v15 = v7;
  v10 = sub_100004864((unint64_t *)&qword_1001174E8, type metadata accessor for MusicSubscriptionStatusController, (uint64_t)&unk_1000D7214);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v15, KeyPath, sub_1000AB3F8, v12, (char *)&type metadata for () + 8, v10);
  swift_release(KeyPath);
  return sub_10000526C((uint64_t)v6, &qword_1001174E0);
}

uint64_t sub_1000AA56C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _BYTE v5[24];

  v3 = a1 + OBJC_IVAR____TtC16MusicRecognition33MusicSubscriptionStatusController__musicSubscription;
  swift_beginAccess(a1 + OBJC_IVAR____TtC16MusicRecognition33MusicSubscriptionStatusController__musicSubscription, v5, 33, 0);
  sub_1000AB118(a2, v3);
  return swift_endAccess(v5);
}

uint64_t sub_1000AA5D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v14;

  v1 = v0;
  v2 = sub_100004F7C(&qword_100116D98);
  __chkstk_darwin(v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100115DD8 != -1)
    swift_once(&qword_100115DD8, sub_10000C418);
  v5 = type metadata accessor for Logger(0);
  sub_10000B5E8(v5, (uint64_t)qword_100124478);
  v6 = Logger.logObject.getter();
  v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Started observing subscription updates", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  v9 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
  v10 = swift_allocObject(&unk_10010D698, 24, 7);
  swift_weakInit(v10 + 16, v1);
  v11 = (_QWORD *)swift_allocObject(&unk_10010D6C0, 40, 7);
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = v10;
  v12 = sub_1000A9F18((uint64_t)v4, (uint64_t)&unk_10011C288, (uint64_t)v11);
  return swift_release(v12);
}

uint64_t sub_1000AA764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4[6] = a4;
  v5 = type metadata accessor for MusicSubscription(0);
  v4[7] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[8] = v6;
  v4[9] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100004F7C(&qword_1001174E0);
  v4[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MusicSubscription.Updates(0);
  v4[11] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[12] = v9;
  v4[13] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MusicSubscription.Updates.Iterator(0);
  v4[14] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v4[15] = v11;
  v4[16] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000AA838, 0, 0);
}

uint64_t sub_1000AA838()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = v0[12];
  v1 = v0[13];
  v3 = v0[11];
  v4 = v0[6] + 16;
  v5 = static MusicSubscription.subscriptionUpdates.getter();
  MusicSubscription.Updates.makeAsyncIterator()(v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess(v4, v0 + 2, 0, 0);
  v6 = sub_100004864(&qword_10011C298, (uint64_t (*)(uint64_t))&type metadata accessor for MusicSubscription.Updates.Iterator, (uint64_t)&protocol conformance descriptor for MusicSubscription.Updates.Iterator);
  v0[17] = v6;
  v7 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[18] = v7;
  *v7 = v0;
  v7[1] = sub_1000AA918;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0[10], v0[14], v6);
}

uint64_t sub_1000AA918()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 144));
  if (v0)
  {
    *(_QWORD *)(v2 + 160) = v0;
    v3 = sub_1000AAC10;
  }
  else
  {
    *(_QWORD *)(v2 + 152) = 0;
    v3 = sub_1000AA980;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000AA980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) != 1)
  {
    v4 = *(_QWORD *)(v0 + 48) + 16;
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 32))(*(_QWORD *)(v0 + 72), v1, v2);
    Strong = swift_weakLoadStrong(v4);
    if (Strong)
    {
      v6 = Strong;
      v7 = *(_QWORD *)(v0 + 152);
      v8 = *(_QWORD *)(v0 + 72);
      v9 = *(os_unfair_lock_s **)(Strong + OBJC_IVAR____TtC16MusicRecognition33MusicSubscriptionStatusController_lock);
      v10 = swift_task_alloc(32);
      *(_QWORD *)(v10 + 16) = v6;
      *(_QWORD *)(v10 + 24) = v8;
      v11 = swift_task_alloc(32);
      *(_QWORD *)(v11 + 16) = sub_1000AB3E4;
      *(_QWORD *)(v11 + 24) = v10;
      v9 += 4;
      os_unfair_lock_lock(v9);
      (*(void (**)(void))(v11 + 16))();
      os_unfair_lock_unlock(v9);
      if (v7)
        return swift_task_dealloc(v11);
      swift_release(v6);
      swift_task_dealloc(v11);
      Strong = swift_task_dealloc(v10);
    }
    if ((MusicSubscription.canBecomeSubscriber.getter(Strong) & 1) != 0)
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
      v13 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
      *(_QWORD *)(v0 + 168) = v13;
      *v13 = v0;
      v13[1] = sub_1000AAC70;
      return dispatch thunk of AsyncIteratorProtocol.next()(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
    }
    if (qword_100115DD8 != -1)
      swift_once(&qword_100115DD8, sub_10000C418);
    v14 = type metadata accessor for Logger(0);
    v15 = sub_10000B5E8(v14, (uint64_t)qword_100124478);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Stopped observing subscription updates", v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }
    v20 = *(_QWORD *)(v0 + 64);
    v19 = *(_QWORD *)(v0 + 72);
    v21 = *(_QWORD *)(v0 + 56);

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    v1 = *(_QWORD *)(v0 + 80);
  }
  v22 = *(_QWORD *)(v0 + 128);
  v23 = *(_QWORD *)(v0 + 104);
  v24 = *(_QWORD *)(v0 + 72);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(v22, *(_QWORD *)(v0 + 112));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v1);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000AAC10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v0 + 160);
  v1 = sub_100004F7C(&qword_1001174D8);
  v2 = swift_dynamicCast(v1, v0 + 40, v1, &type metadata for Never, 7);
  return swift_willThrowTypedImpl(v2, &type metadata for Never, &protocol witness table for Never);
}

uint64_t sub_1000AAC70()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 168));
  if (v0)
  {
    *(_QWORD *)(v2 + 160) = v0;
    v3 = sub_1000AAC10;
  }
  else
  {
    *(_QWORD *)(v2 + 152) = 0;
    v3 = sub_1000AA980;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000AACD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  _BYTE v13[16];
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;

  v4 = sub_100004F7C(&qword_1001174E0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for MusicSubscription(0);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v6, a2, v7);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  KeyPath = swift_getKeyPath(&unk_1000D7240, v9);
  v14 = a1;
  v15 = v6;
  v16 = a1;
  v11 = sub_100004864((unint64_t *)&qword_1001174E8, type metadata accessor for MusicSubscriptionStatusController, (uint64_t)&unk_1000D7214);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v16, KeyPath, sub_1000AB100, v13, (char *)&type metadata for () + 8, v11);
  swift_release(KeyPath);
  return sub_10000526C((uint64_t)v6, &qword_1001174E0);
}

uint64_t sub_1000AAE1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_10000526C(v0 + OBJC_IVAR____TtC16MusicRecognition33MusicSubscriptionStatusController__musicSubscription, &qword_1001174E0);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicRecognition33MusicSubscriptionStatusController_lock));
  v1 = v0 + OBJC_IVAR____TtC16MusicRecognition33MusicSubscriptionStatusController___observationRegistrar;
  v2 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1000AAE94()
{
  return type metadata accessor for MusicSubscriptionStatusController(0);
}

uint64_t type metadata accessor for MusicSubscriptionStatusController(uint64_t a1)
{
  uint64_t result;

  result = qword_10011C1D8;
  if (!qword_10011C1D8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MusicSubscriptionStatusController);
  return result;
}

void sub_1000AAED8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  sub_1000AAF6C(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4 = type metadata accessor for ObservationRegistrar(319);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 3, v6, a1 + 80);
    }
  }
}

void sub_1000AAF6C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10011C1E8)
  {
    v2 = type metadata accessor for MusicSubscription(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10011C1E8);
  }
}

uint64_t sub_1000AAFC0(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10008ABF8;
  return v6(a1);
}

uint64_t sub_1000AB024()
{
  uint64_t v0;

  return sub_1000AACD8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1000AB03C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000AB060()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000AB08C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10011C284);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000101B8;
  return sub_1000AA764(a1, v4, v5, v6);
}

uint64_t sub_1000AB100()
{
  uint64_t v0;

  return sub_1000AA56C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1000AB118(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004F7C(&qword_1001174E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000AB160(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_1000AB1C8;
  return v5(v2 + 32);
}

uint64_t sub_1000AB1C8()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_BYTE **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 24));
  *v2 = *(_BYTE *)(v1 + 32);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1000AB218(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 40) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 48) = v3;
  *v3 = v2;
  v3[1] = sub_1000AB280;
  return v5(v2 + 16);
}

uint64_t sub_1000AB280()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v5;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 40);
  v5 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 48));
  v3 = *(_BYTE *)(v1 + 32);
  *(_OWORD *)v2 = *(_OWORD *)(v1 + 16);
  *(_BYTE *)(v2 + 16) = v3;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_1000AB2D8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000AB2FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_10011C2AC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1000101B8;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_10011C2A8 + dword_10011C2A8))(a1, v4);
}

uint64_t sub_1000AB36C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_10011C2BC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100010C20;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_10011C2B8 + dword_10011C2B8))(a1, v4);
}

uint64_t sub_1000AB3E4()
{
  return sub_1000AB024();
}

uint64_t sub_1000AB3F8()
{
  return sub_1000AB100();
}

uint64_t sub_1000AB40C()
{
  return sub_1000AB93C((uint64_t)&unk_1000D7330, &OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel__confirmationDialogPresented);
}

uint64_t sub_1000AB420()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  return swift_task_switch(sub_1000AB438, 0, 0);
}

uint64_t sub_1000AB438(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t);

  v3 = v2[5];
  KeyPath = swift_getKeyPath(&unk_1000D72E0, a2);
  v5 = swift_task_alloc(32);
  *(_QWORD *)(v5 + 16) = v3;
  *(_BYTE *)(v5 + 24) = 0;
  v2[6] = OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel___observationRegistrar;
  v2[2] = v3;
  v6 = sub_1000AC8DC();
  v2[7] = v6;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v2 + 2, KeyPath, sub_1000AC934, v5, (char *)&type metadata for () + 8, v6);
  swift_release(KeyPath);
  swift_task_dealloc(v5);
  v7 = *(_QWORD **)(v3 + OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel_musicLibraryController);
  v8 = v7[6];
  v9 = v7[7];
  sub_10000C9C8(v7 + 3, v8);
  v10 = *(int **)(v9 + 24);
  v13 = (uint64_t (*)(uint64_t, uint64_t))((char *)v10 + *v10);
  v11 = (_QWORD *)swift_task_alloc(v10[1]);
  v2[8] = v11;
  *v11 = v2;
  v11[1] = sub_1000AB548;
  return v13(v8, v9);
}

uint64_t sub_1000AB548()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1000AB6C8;
  else
    v3 = sub_1000AB5AC;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000AB5AC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  if (*(_BYTE *)(*(_QWORD *)(v0 + 40) + OBJC_IVAR____TtC16MusicRecognition20ContextMenuViewModel_member))
    v1 = 67848;
  else
    v1 = 2312;
  sub_1000A6994(v1, 0xD000000000000028, 0x80000001000D90E0);
  if (qword_100115DD8 != -1)
    swift_once(&qword_100115DD8, sub_10000C418);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_10000B5E8(v2, (uint64_t)qword_100124478);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Removed song from Music Library", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000AB6C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  BOOL v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *(_QWORD *)(v2 + 56);
  v4 = *(_QWORD *)(v2 + 40);
  KeyPath = swift_getKeyPath(&unk_1000D72E0, a2);
  v6 = swift_task_alloc(32);
  *(_QWORD *)(v6 + 16) = v4;
  *(_BYTE *)(v6 + 24) = 1;
  *(_QWORD *)(v2 + 24) = v4;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v2 + 24, KeyPath, sub_1000AC934, v6, (char *)&type metadata for () + 8, v3);
  swift_release(KeyPath);
  swift_task_dealloc(v6);
  if (qword_100115DD8 != -1)
    swift_once(&qword_100115DD8, sub_10000C418);
  v7 = *(_QWORD *)(v2 + 72);
  v8 = type metadata accessor for Logger(0);
  sub_10000B5E8(v8, (uint64_t)qword_100124478);
  swift_errorRetain(v7);
  v9 = swift_errorRetain(v7);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.error.getter();
  v12 = os_log_type_enabled(v10, v11);
  v13 = *(_QWORD *)(v2 + 72);
  if (v12)
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v14 = 138412290;
    swift_errorRetain(v13);
    v16 = _swift_stdlib_bridgeErrorToNSError(v13);
    *(_QWORD *)(v2 + 32) = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v2 + 32, v2 + 40, v14 + 4, v14 + 12);
    *v15 = v16;
    swift_errorRelease(v13);
    swift_errorRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Removing song from Music Library failed: %@", v14, 0xCu);
    v17 = sub_100004F7C((uint64_t *)&unk_100116E50);
    swift_arrayDestroy(v15, 1, v17);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);

    swift_errorRelease(v13);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v2 + 72));
    swift_errorRelease(v13);
    swift_errorRelease(v13);

  }
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1000AB914()
{
  return sub_1000AB93C((uint64_t)&unk_1000D7308, &OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel__addToPlaylistSheetPresented);
}

uint64_t sub_1000AB928()
{
  return sub_1000AB93C((uint64_t)&unk_1000D72E0, &OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel__isSongInLibrary);
}

uint64_t sub_1000AB93C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  unint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1, a2);
  v7 = v2;
  v5 = sub_1000AC8DC();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v5);
  swift_release(KeyPath);
  return *(unsigned __int8 *)(v2 + *a2);
}

uint64_t sub_1000AB9A8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  return swift_task_switch(sub_1000AB9C0, 0, 0);
}

uint64_t sub_1000AB9C0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = v2[5];
  KeyPath = swift_getKeyPath(&unk_1000D72E0, a2);
  v5 = swift_task_alloc(32);
  *(_QWORD *)(v5 + 16) = v3;
  *(_BYTE *)(v5 + 24) = 1;
  v2[6] = OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel___observationRegistrar;
  v2[2] = v3;
  v6 = sub_1000AC8DC();
  v2[7] = v6;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v2 + 2, KeyPath, sub_1000AC934, v5, (char *)&type metadata for () + 8, v6);
  swift_release(KeyPath);
  swift_task_dealloc(v5);
  v2[8] = objc_msgSend(objc_allocWithZone((Class)UINotificationFeedbackGenerator), "init");
  v7 = type metadata accessor for MainActor(0);
  v2[9] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  return swift_task_switch(sub_1000ABADC, v8, v9);
}

uint64_t sub_1000ABADC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 64);
  objc_msgSend(v1, "notificationOccurred:", 0, swift_release(*(_QWORD *)(v0 + 72)).n128_f64[0]);

  return swift_task_switch(sub_1000ABB30, 0, 0);
}

uint64_t sub_1000ABB30()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v1 = *(_QWORD **)(*(_QWORD *)(v0 + 40)
                  + OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel_musicLibraryController);
  v2 = v1[6];
  v3 = v1[7];
  sub_10000C9C8(v1 + 3, v2);
  v4 = *(int **)(v3 + 16);
  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc(v4[1]);
  *(_QWORD *)(v0 + 80) = v5;
  *v5 = v0;
  v5[1] = sub_1000ABBB8;
  return v7(v2, v3);
}

uint64_t sub_1000ABBB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1000ABD38;
  else
    v3 = sub_1000ABC1C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000ABC1C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  if (*(_BYTE *)(*(_QWORD *)(v0 + 40) + OBJC_IVAR____TtC16MusicRecognition20ContextMenuViewModel_member))
    v1 = 67847;
  else
    v1 = 2311;
  sub_1000A6994(v1, 0xD000000000000028, 0x80000001000D90E0);
  if (qword_100115DD8 != -1)
    swift_once(&qword_100115DD8, sub_10000C418);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_10000B5E8(v2, (uint64_t)qword_100124478);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Added song to Music Library", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000ABD38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  BOOL v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *(_QWORD *)(v2 + 56);
  v4 = *(_QWORD *)(v2 + 40);
  KeyPath = swift_getKeyPath(&unk_1000D72E0, a2);
  v6 = swift_task_alloc(32);
  *(_QWORD *)(v6 + 16) = v4;
  *(_BYTE *)(v6 + 24) = 0;
  *(_QWORD *)(v2 + 24) = v4;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v2 + 24, KeyPath, sub_1000AC934, v6, (char *)&type metadata for () + 8, v3);
  swift_release(KeyPath);
  swift_task_dealloc(v6);
  if (qword_100115DD8 != -1)
    swift_once(&qword_100115DD8, sub_10000C418);
  v7 = *(_QWORD *)(v2 + 88);
  v8 = type metadata accessor for Logger(0);
  sub_10000B5E8(v8, (uint64_t)qword_100124478);
  swift_errorRetain(v7);
  v9 = swift_errorRetain(v7);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.error.getter();
  v12 = os_log_type_enabled(v10, v11);
  v13 = *(_QWORD *)(v2 + 88);
  if (v12)
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v14 = 138412290;
    swift_errorRetain(v13);
    v16 = _swift_stdlib_bridgeErrorToNSError(v13);
    *(_QWORD *)(v2 + 32) = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v2 + 32, v2 + 40, v14 + 4, v14 + 12);
    *v15 = v16;
    swift_errorRelease(v13);
    swift_errorRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Adding song to Music Library failed: %@", v14, 0xCu);
    v17 = sub_100004F7C((uint64_t *)&unk_100116E50);
    swift_arrayDestroy(v15, 1, v17);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);

    swift_errorRelease(v13);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v2 + 88));
    swift_errorRelease(v13);
    swift_errorRelease(v13);

  }
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_1000ABF80()
{
  qword_10011C2D0 = 1937075312;
  *(_QWORD *)algn_10011C2D8 = 0xE400000000000000;
}

void sub_1000ABF9C()
{
  qword_10011C2E0 = 0x69662E6873617274;
  *(_QWORD *)algn_10011C2E8 = 0xEA00000000006C6CLL;
}

uint64_t sub_1000ABFC4(uint64_t result, char a2)
{
  *(_BYTE *)(result
           + OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel__confirmationDialogPresented) = a2;
  return result;
}

uint64_t sub_1000ABFD4(uint64_t result, char a2)
{
  *(_BYTE *)(result
           + OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel__addToPlaylistSheetPresented) = a2;
  return result;
}

void sub_1000ABFE4(uint64_t *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;

  v4 = *a1;
  KeyPath = swift_getKeyPath(&unk_1000D72E0, a2);
  v7 = v4;
  v6 = sub_1000AC8DC();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v6);
  swift_release(KeyPath);
  *a3 = *(_BYTE *)(v4 + OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel__isSongInLibrary);
}

double sub_1000AC060(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  unint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1000D72E0, a2);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_1000AC8DC();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_1000AC934, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

double sub_1000AC0F0(char *a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  double result;
  uint64_t v7;
  uint64_t KeyPath;
  unint64_t v9;
  _QWORD v10[3];
  char v11;
  uint64_t v12;
  char v13[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v7 = Strong;
    KeyPath = swift_getKeyPath(&unk_1000D72E0, v5);
    __chkstk_darwin(KeyPath);
    v10[2] = v7;
    v11 = v2;
    v12 = v7;
    v9 = sub_1000AC8DC();
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v12, KeyPath, sub_1000AC8C4, v10, (char *)&type metadata for () + 8, v9);
    swift_release(v7);
    *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  }
  return result;
}

uint64_t sub_1000AC1D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1000AC4DC(v0 + OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel_classicalProvider);
  v1 = v0 + OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel_songCampaignURL;
  v2 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel_musicLibraryController));
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel_songAddStatusCancellable));
  v3 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel_openInClassicalTitle
                 + 8);
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel_openInClassicalTitle
                                      + 24));
  swift_bridgeObjectRelease(v3);
  v4 = v0 + OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel___observationRegistrar;
  v5 = type metadata accessor for ObservationRegistrar(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_1000AC28C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;

  v1 = v0 + OBJC_IVAR____TtC16MusicRecognition20ContextMenuViewModel_shazamAppStoreURL;
  v2 = type metadata accessor for URL(0);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC16MusicRecognition20ContextMenuViewModel_shazamURL, v2);
  v4 = v0 + OBJC_IVAR____TtC16MusicRecognition20ContextMenuViewModel___observationRegistrar;
  v5 = type metadata accessor for ObservationRegistrar(0);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  sub_1000AC4DC(v0 + OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel_classicalProvider);
  v3(v0 + OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel_songCampaignURL, v2);
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel_musicLibraryController));
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel_songAddStatusCancellable));
  v7 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel_openInClassicalTitle
                 + 8);
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel_openInClassicalTitle
                                      + 24));
  swift_bridgeObjectRelease(v7);
  v6(v0 + OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel___observationRegistrar, v5);
  return v0;
}

uint64_t sub_1000AC3A4()
{
  uint64_t v0;

  sub_1000AC28C();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1000AC3C8()
{
  return type metadata accessor for ContextMenuForSubscribedUserViewModel(0);
}

uint64_t type metadata accessor for ContextMenuForSubscribedUserViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_10011C340;
  if (!qword_10011C340)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ContextMenuForSubscribedUserViewModel);
  return result;
}

void sub_1000AC40C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[9];

  v8[0] = &unk_1000D7298;
  v8[1] = &unk_1000D7298;
  v8[2] = &unk_1000D7298;
  sub_10004E618(319);
  if (v3 <= 0x3F)
  {
    v8[3] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for URL(319);
    if (v5 <= 0x3F)
    {
      v8[4] = *(_QWORD *)(v4 - 8) + 64;
      v8[5] = (char *)&value witness table for Builtin.NativeObject + 64;
      v8[6] = &unk_1000D72B0;
      v8[7] = &unk_1000D72C8;
      v6 = type metadata accessor for ObservationRegistrar(319);
      if (v7 <= 0x3F)
      {
        v8[8] = *(_QWORD *)(v6 - 8) + 64;
        swift_updateClassMetadata2(a1, 256, 9, v8, a1 + 216);
      }
    }
  }
}

uint64_t sub_1000AC4DC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100004F7C(&qword_100118660);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000AC51C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  void (*v26)(uint64_t, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = v5;
  v35 = a5;
  v36 = a4;
  v37 = a2;
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD **)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v35 - v15;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel__confirmationDialogPresented) = 0;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel__addToPlaylistSheetPresented) = 0;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel__isSongInLibrary) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel_songAddStatusCancellable) = 0;
  v17 = v6 + OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel_openInClassicalTitle;
  swift_retain(v6);
  v18 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000018, 0x80000001000DB8B0);
  *(_QWORD *)v17 = v18;
  *(_QWORD *)(v17 + 8) = v19;
  *(_BYTE *)(v17 + 16) = v20 & 1;
  *(_QWORD *)(v17 + 24) = v21;
  ObservationRegistrar.init()(v18);
  v22 = (void (*)(uint64_t, uint64_t, uint64_t))v11[2];
  v22(v6 + OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel_songCampaignURL, a4, v10);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel_musicLibraryController) = a1;
  v23 = v35;
  sub_1000AC7FC(v35, v6 + OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel_classicalProvider);
  swift_retain(a1);
  v24 = swift_release(v6);
  ((void (*)(char *, uint64_t, uint64_t, __n128))v22)(v16, a3, v10, v24);
  v25 = ((uint64_t (*)(char *, uint64_t, uint64_t))v22)(v14, v37, v10);
  *(_BYTE *)(v6 + OBJC_IVAR____TtC16MusicRecognition20ContextMenuViewModel__shareSheetFromOverflow) = 0;
  ObservationRegistrar.init()(v25);
  v26 = (void (*)(uint64_t, char *, uint64_t))v11[4];
  v26(v6 + OBJC_IVAR____TtC16MusicRecognition20ContextMenuViewModel_shazamAppStoreURL, v16, v10);
  v26(v6 + OBJC_IVAR____TtC16MusicRecognition20ContextMenuViewModel_shazamURL, v14, v10);
  *(_BYTE *)(v6 + OBJC_IVAR____TtC16MusicRecognition20ContextMenuViewModel_member) = 1;
  v38 = *(_QWORD *)(*(_QWORD *)(v6
                              + OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel_musicLibraryController)
                  + 16);
  v27 = v38;
  v28 = swift_allocObject(&unk_10010D778, 24, 7);
  swift_weakInit(v28 + 16, v6);
  swift_retain(v6);
  swift_retain(v27);
  v29 = sub_100004F7C(&qword_1001190B0);
  v30 = sub_1000AC870();
  v31 = Publisher<>.sink(receiveValue:)(sub_1000AC868, v28, v29, v30);
  swift_release(v28);
  swift_release(v38);
  v32 = *(_QWORD *)(v6
                  + OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel_songAddStatusCancellable);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel_songAddStatusCancellable) = v31;
  swift_release(v6);
  swift_release(v32);
  sub_1000AC4DC(v23);
  v33 = (void (*)(uint64_t, uint64_t))v11[1];
  v33(v36, v10);
  v33(a3, v10);
  v33(v37, v10);
  return v6;
}

uint64_t sub_1000AC7FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004F7C(&qword_100118660);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000AC844()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1000AC868(char *a1)
{
  uint64_t v1;

  return sub_1000AC0F0(a1, v1);
}

unint64_t sub_1000AC870()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011B150;
  if (!qword_10011B150)
  {
    v1 = sub_1000050C8(&qword_1001190B0);
    result = swift_getWitnessTable(&protocol conformance descriptor for CurrentValueSubject<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011B150);
  }
  return result;
}

void sub_1000AC8C4()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16)
           + OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel__isSongInLibrary) = *(_BYTE *)(v0 + 24);
}

unint64_t sub_1000AC8DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100119E20;
  if (!qword_100119E20)
  {
    v1 = type metadata accessor for ContextMenuForSubscribedUserViewModel(255);
    result = swift_getWitnessTable(&unk_1000D8850, v1);
    atomic_store(result, &qword_100119E20);
  }
  return result;
}

void sub_1000AC934()
{
  sub_1000AC8C4();
}

uint64_t sub_1000AC948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v4;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  id v23;
  uint64_t v24;

  v4 = (uint64_t)v3;
  v8 = objc_msgSend(v3, "domain");
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  if (v9 == a1 && v11 == a2)
  {
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v11, a1, a2, 0);
    swift_bridgeObjectRelease(v11);
    if ((v13 & 1) == 0)
      goto LABEL_10;
  }
  if (sub_1000ACB30((uint64_t)objc_msgSend(v3, "code"), a3))
  {
    v14 = v3;
    return v4;
  }
LABEL_10:
  v15 = objc_msgSend(v3, "underlyingErrors");
  v16 = sub_100004F7C(&qword_1001174D8);
  v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v16);

  v18 = *(_QWORD *)(v17 + 16);
  if (v18)
  {
    v19 = 0;
    while (1)
    {
      v24 = *(_QWORD *)(v17 + 8 * v19 + 32);
      swift_errorRetain(v24);
      v20 = sub_1000ACAF4();
      if ((swift_dynamicCast(&v23, &v24, v16, v20, 6) & 1) != 0)
      {
        v21 = v23;
        v4 = sub_1000AC948(a1, a2, a3);

        if (v4)
          break;
      }
      if (v18 == ++v19)
        goto LABEL_16;
    }
    swift_bridgeObjectRelease(v17);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease(v17);
    return 0;
  }
  return v4;
}

unint64_t sub_1000ACAF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1001196A8;
  if (!qword_1001196A8)
  {
    v1 = objc_opt_self(NSError);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1001196A8);
  }
  return result;
}

BOOL sub_1000ACB30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v4 = static Hasher._hash(seed:_:)(*(_QWORD *)(a2 + 40), a1);
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(v8 + 8 * v6) == a1)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(_QWORD *)(v8 + 8 * v11);
    result = v12 == a1;
    if (v12 == a1)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

BOOL sub_1000ACBF8(unsigned __int8 a1, uint64_t a2)
{
  Swift::UInt v3;
  Swift::Int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  int v12;
  _QWORD v13[9];

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v3 = a1;
  Hasher.init(_seed:)(v13);
  Hasher._combine(_:)(v3);
  v4 = Hasher._finalize()();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(unsigned __int8 *)(v8 + v6) == (_DWORD)v3)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(unsigned __int8 *)(v8 + v11);
    result = v12 == (_DWORD)v3;
    if (v12 == (_DWORD)v3)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

double destroy for SongMetadataView(_QWORD *a1)
{
  double result;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  _s16MusicRecognition11AnyPlaylistVwxx_0(a1 + 4);
  swift_bridgeObjectRelease(a1[9]);
  if (a1[10])
    *(_QWORD *)&result = swift_release(a1[11]).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for SongMetadataView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = a2 + 32;
  v7 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v7;
  v8 = v7;
  v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  v9(a1 + 32, v6, v8);
  v10 = *(_QWORD *)(a2 + 80);
  v11 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v11;
  swift_bridgeObjectRetain(v11);
  if (v10)
  {
    v12 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = v10;
    *(_QWORD *)(a1 + 88) = v12;
    swift_retain(v12);
  }
  else
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  }
  return a1;
}

uint64_t assignWithCopy for SongMetadataView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  sub_100012EA4((_QWORD *)(a1 + 32), (_QWORD *)(a2 + 32));
  v8 = *(_QWORD *)(a2 + 72);
  v9 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 80);
  if (!*(_QWORD *)(a1 + 80))
  {
    if (v10)
    {
      v13 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = v10;
      *(_QWORD *)(a1 + 88) = v13;
      swift_retain(v13);
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    return a1;
  }
  if (!v10)
  {
    swift_release(*(_QWORD *)(a1 + 88));
    goto LABEL_7;
  }
  v11 = *(_QWORD *)(a2 + 88);
  v12 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 80) = v10;
  *(_QWORD *)(a1 + 88) = v11;
  swift_retain(v11);
  swift_release(v12);
  return a1;
}

__n128 initializeWithTake for SongMetadataView(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for SongMetadataView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease(v6);
  _s16MusicRecognition11AnyPlaylistVwxx_0((_QWORD *)(a1 + 32));
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  v8 = *(_QWORD *)(a2 + 72);
  v9 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 80);
  if (!*(_QWORD *)(a1 + 80))
  {
    if (v10)
    {
      v13 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = v10;
      *(_QWORD *)(a1 + 88) = v13;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    return a1;
  }
  if (!v10)
  {
    swift_release(*(_QWORD *)(a1 + 88));
    goto LABEL_7;
  }
  v11 = *(_QWORD *)(a2 + 88);
  v12 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 80) = v10;
  *(_QWORD *)(a1 + 88) = v11;
  swift_release(v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for SongMetadataView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SongMetadataView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SongMetadataView()
{
  return &type metadata for SongMetadataView;
}

uint64_t sub_1000AD06C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000DF208, 1);
}

uint64_t sub_1000AD07C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _OWORD *v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  _QWORD v93[4];

  v86 = a2;
  v3 = sub_100004F7C(&qword_10011C4B8);
  v4 = __chkstk_darwin(v3);
  v85 = (uint64_t)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v84 = (uint64_t *)((char *)&v77 - v6);
  v80 = type metadata accessor for AccessibilityTraits(0);
  v79 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v8 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100004F7C(&qword_100117F88);
  __chkstk_darwin(v9);
  v77 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_100004F7C(&qword_10011C4C0);
  v11 = __chkstk_darwin(v82);
  v78 = (uint64_t)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v81 = (uint64_t)&v77 - v13;
  v83 = a1;
  v14 = *a1;
  v15 = a1[3];
  swift_bridgeObjectRetain(a1[1]);
  swift_bridgeObjectRetain(v15);
  v16 = Text.init(_:tableName:bundle:comment:)(v14);
  v18 = v17;
  v20 = v19;
  v22 = v21 & 1;
  v23 = static Font.title2.getter(v16);
  v24 = Text.font(_:)(v23, v16, v18, v22, v20);
  v26 = v25;
  v28 = v27;
  v30 = v29;
  swift_release(v23);
  v31 = v28 & 1;
  sub_10000B64C(v16, v18, v22);
  v32 = swift_bridgeObjectRelease(v20);
  v33 = static Font.Weight.bold.getter(v32);
  v34 = Text.fontWeight(_:)(*(_QWORD *)&v33, 0, v24, v26, v31, v30);
  v36 = v35;
  LOBYTE(v20) = v37;
  v39 = v38;
  sub_10000B64C(v24, v26, v31);
  v40 = swift_bridgeObjectRelease(v30);
  *(_QWORD *)&v87 = v34;
  *((_QWORD *)&v87 + 1) = v36;
  LOBYTE(v88) = v20 & 1;
  *((_QWORD *)&v88 + 1) = v39;
  static AccessibilityTraits.isHeader.getter(v40);
  v41 = (uint64_t)v77;
  View.accessibilityAddTraits(_:)(v8, &type metadata for Text, &protocol witness table for Text);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v8, v80);
  sub_10000B64C(v87, *((uint64_t *)&v87 + 1), v88);
  v42 = swift_bridgeObjectRelease(*((_QWORD *)&v88 + 1));
  LOBYTE(v30) = static Edge.Set.bottom.getter(v42);
  v43 = EdgeInsets.init(_all:)(22.0);
  v45 = v44;
  v47 = v46;
  v49 = v48;
  v50 = v78;
  sub_100007C8C(v41, v78, &qword_100117F88);
  v51 = v50 + *(int *)(v82 + 36);
  *(_BYTE *)v51 = v30;
  *(double *)(v51 + 8) = v43;
  *(_QWORD *)(v51 + 16) = v45;
  *(_QWORD *)(v51 + 24) = v47;
  *(_QWORD *)(v51 + 32) = v49;
  *(_BYTE *)(v51 + 40) = 0;
  sub_10000526C(v41, &qword_100117F88);
  v52 = v81;
  v53 = sub_100007C48(v50, v81, &qword_10011C4C0);
  v61 = static HorizontalAlignment.leading.getter(v53, v54, v55, v56, v57, v58, v59, v60);
  v62 = (uint64_t)v84;
  *v84 = v61;
  *(_QWORD *)(v62 + 8) = 0;
  *(_BYTE *)(v62 + 16) = 0;
  sub_100004F7C(&qword_10011C4C8);
  v93[0] = v83[9];
  v63 = v93[0];
  sub_10004476C((uint64_t)v83, (uint64_t)&v87);
  v64 = (_OWORD *)swift_allocObject(&unk_10010D830, 112, 7);
  v65 = v90;
  v64[3] = v89;
  v64[4] = v65;
  v66 = v92;
  v64[5] = v91;
  v64[6] = v66;
  v67 = v88;
  v64[1] = v87;
  v64[2] = v67;
  swift_bridgeObjectRetain(v63);
  v68 = sub_100004F7C(&qword_10011C4D0);
  v69 = sub_100004F7C(&qword_10011C4D8);
  v70 = sub_10000522C(&qword_10011C4E0, &qword_10011C4D0, (uint64_t)&protocol conformance descriptor for [A]);
  v71 = sub_10000522C(&qword_10011C4E8, &qword_10011C4D8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v72 = sub_1000ADC24();
  ForEach<>.init(_:content:)(v93, sub_1000ADC1C, v64, v68, &type metadata for SongMetadataRowViewModel.SupportedMetadata, v69, v70, v71, v72);
  sub_100007C8C(v52, v50, &qword_10011C4C0);
  v73 = v85;
  sub_100007C8C(v62, v85, &qword_10011C4B8);
  v74 = v86;
  sub_100007C8C(v50, v86, &qword_10011C4C0);
  v75 = sub_100004F7C(&qword_10011C4F8);
  sub_100007C8C(v73, v74 + *(int *)(v75 + 48), &qword_10011C4B8);
  sub_10000526C(v62, &qword_10011C4B8);
  sub_10000526C(v52, &qword_10011C4C0);
  sub_10000526C(v73, &qword_10011C4B8);
  return sub_10000526C(v50, &qword_10011C4C0);
}

uint64_t sub_1000AD5C8@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unsigned __int8 *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88[6];

  v87 = a3;
  v81 = type metadata accessor for Divider(0);
  v80 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v79 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100004F7C(&qword_1001180E0);
  v83 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v78 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100004F7C(&qword_10011C500);
  v9 = __chkstk_darwin(v8);
  v86 = (uint64_t)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v85 = (uint64_t)&v77 - v11;
  v12 = type metadata accessor for SongMetadataRowViewModel(0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (unsigned __int8 *)&v77 - v16;
  v18 = sub_100004F7C(qword_10011BE70);
  __chkstk_darwin(v18);
  v20 = (char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100004F7C(&qword_10011C508);
  v22 = __chkstk_darwin(v21);
  v82 = (uint64_t)&v77 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v22);
  v26 = (char *)&v77 - v25;
  __chkstk_darwin(v24);
  v28 = (char *)&v77 - v27;
  v29 = *a1;
  v30 = a2;
  v31 = a2 + 32;
  v84 = v6;
  if (v29 == 2)
  {
    sub_100007AE0(v31, (uint64_t)v88);
    if (qword_1001160D0 != -1)
      swift_once(&qword_1001160D0, sub_10008009C);
    v32 = qword_1001245B0;
    v33 = *(_QWORD *)algn_1001245B8;
    swift_bridgeObjectRetain(*(_QWORD *)algn_1001245B8);
    v34 = v15;
    v35 = 2;
    v36 = v32;
    v37 = v33;
  }
  else
  {
    sub_100007AE0(v31, (uint64_t)v88);
    v34 = v15;
    v35 = v29;
    v36 = 0;
    v37 = 0;
  }
  sub_100067A1C(v35, v88, v36, v37, v34);
  sub_1000ADC68((uint64_t)v15, (uint64_t)v17);
  sub_10004476C(v30, (uint64_t)v88);
  v38 = (_OWORD *)swift_allocObject(&unk_10010D858, 112, 7);
  v39 = v88[3];
  v38[3] = v88[2];
  v38[4] = v39;
  v40 = v88[5];
  v38[5] = v88[4];
  v38[6] = v40;
  v41 = v88[1];
  v38[1] = v88[0];
  v38[2] = v41;
  v42 = sub_1000A10FC(v17, (uint64_t)sub_1000ADCFC, (uint64_t)v38, (uint64_t)v20);
  v43 = static Edge.Set.bottom.getter(v42);
  v44 = EdgeInsets.init(_all:)(12.0);
  v46 = v45;
  v48 = v47;
  v50 = v49;
  sub_100007C8C((uint64_t)v20, (uint64_t)v26, qword_10011BE70);
  v51 = &v26[*(int *)(v21 + 36)];
  *v51 = v43;
  *((double *)v51 + 1) = v44;
  *((_QWORD *)v51 + 2) = v46;
  *((_QWORD *)v51 + 3) = v48;
  *((_QWORD *)v51 + 4) = v50;
  v51[40] = 0;
  sub_10000526C((uint64_t)v20, qword_10011BE70);
  v52 = sub_100007C48((uint64_t)v26, (uint64_t)v28, &qword_10011C508);
  v53 = *(_QWORD *)(v30 + 72);
  v54 = *(_QWORD *)(v53 + 16);
  if (v54 && v29 == *(unsigned __int8 *)(v54 + v53 + 31))
  {
    v55 = 1;
    v56 = v84;
    v57 = v85;
  }
  else
  {
    v58 = v79;
    v59 = Divider.init()(v52);
    v60 = static Edge.Set.bottom.getter(v59);
    v61 = EdgeInsets.init(_all:)(12.0);
    v63 = v62;
    v65 = v64;
    v67 = v66;
    v68 = v80;
    v69 = (uint64_t)v78;
    v70 = v81;
    (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v78, v58, v81);
    v56 = v84;
    v71 = v69 + *(int *)(v84 + 36);
    *(_BYTE *)v71 = v60;
    *(double *)(v71 + 8) = v61;
    *(_QWORD *)(v71 + 16) = v63;
    *(_QWORD *)(v71 + 24) = v65;
    *(_QWORD *)(v71 + 32) = v67;
    *(_BYTE *)(v71 + 40) = 0;
    (*(void (**)(char *, uint64_t))(v68 + 8))(v58, v70);
    v57 = v85;
    sub_100007C48(v69, v85, &qword_1001180E0);
    v55 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v83 + 56))(v57, v55, 1, v56);
  v72 = v82;
  sub_100007C8C((uint64_t)v28, v82, &qword_10011C508);
  v73 = v86;
  sub_100007C8C(v57, v86, &qword_10011C500);
  v74 = v87;
  sub_100007C8C(v72, v87, &qword_10011C508);
  v75 = sub_100004F7C(&qword_10011C510);
  sub_100007C8C(v73, v74 + *(int *)(v75 + 48), &qword_10011C500);
  sub_10000526C(v57, &qword_10011C500);
  sub_10000526C((uint64_t)v28, &qword_10011C508);
  sub_10000526C(v73, &qword_10011C500);
  return sub_10000526C(v72, &qword_10011C508);
}

uint64_t sub_1000ADB04()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v1 = v0;
  v2 = sub_100004F7C(&qword_10011C4A0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v5 = static HorizontalAlignment.leading.getter(v3, v6, v7, v8, v9, v10, v11, v12);
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 0;
  v13 = sub_100004F7C(&qword_10011C4A8);
  sub_1000AD07C(v1, (uint64_t)&v5[*(int *)(v13 + 44)]);
  if (qword_1001160C8 != -1)
    swift_once(&qword_1001160C8, sub_10008006C);
  v14 = qword_1001245A0;
  v15 = *(_QWORD *)algn_1001245A8;
  v16 = sub_10000522C(&qword_10011C4B0, &qword_10011C4A0, (uint64_t)&protocol conformance descriptor for VStack<A>);
  View.accessibilityIdentifier(_:)(v14, v15, v2, v16);
  return sub_10000526C((uint64_t)v5, &qword_10011C4A0);
}

uint64_t sub_1000ADC1C@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1000AD5C8(a1, v2 + 16, a2);
}

unint64_t sub_1000ADC24()
{
  unint64_t result;

  result = qword_10011C4F0;
  if (!qword_10011C4F0)
  {
    result = swift_getWitnessTable(&unk_1000D4C04, &type metadata for SongMetadataRowViewModel.SupportedMetadata);
    atomic_store(result, (unint64_t *)&qword_10011C4F0);
  }
  return result;
}

uint64_t sub_1000ADC68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SongMetadataRowViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000ADCB0()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  _s16MusicRecognition11AnyPlaylistVwxx_0(v0 + 6);
  swift_bridgeObjectRelease(v0[11]);
  if (v0[12])
    swift_release(v0[13]);
  return swift_deallocObject(v0, 112, 7);
}

uint64_t sub_1000ADCFC()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 96);
  if (v1)
    return v1();
  return result;
}

unint64_t sub_1000ADD28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011C518;
  if (!qword_10011C518)
  {
    v1 = sub_1000050C8((uint64_t *)&unk_10011C520);
    sub_10000522C(&qword_10011C4B0, &qword_10011C4A0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_10004A368();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011C518);
  }
  return result;
}

void sub_1000ADDAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  NSString v7;
  NSString v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  NSObject *v14;
  NSString v15;
  Class isa;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  unsigned int v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  void *v37;
  uint64_t v38;
  _QWORD *v39;
  NSObject *log;
  id v41;
  uint64_t v42;

  v1 = v0;
  v2 = OBJC_IVAR____TtC16MusicRecognition21RunningBoardAssertion_assertion;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC16MusicRecognition21RunningBoardAssertion_assertion);
  if (v3)
  {
    v4 = v3;
    if (objc_msgSend(v4, "isValid"))
      sub_1000AE2AC();

  }
  v5 = objc_msgSend((id)objc_opt_self(RBSProcessIdentifier), "identifierForCurrentProcess");
  v6 = objc_msgSend((id)objc_opt_self(RBSTarget), "targetWithProcessIdentifier:", v5);

  v7 = String._bridgeToObjectiveC()();
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend((id)objc_opt_self(RBSDomainAttribute), "attributeWithDomain:name:", v7, v8);

  v10 = sub_100004F7C(&qword_100116D90);
  v11 = swift_allocObject(v10, 40, 7);
  *(_OWORD *)(v11 + 16) = xmmword_1000D3AA0;
  *(_QWORD *)(v11 + 32) = v9;
  v41 = (id)v11;
  specialized Array._endMutation()(v11);
  v12 = objc_allocWithZone((Class)RBSAssertion);
  v13 = v6;
  v14 = v9;
  v15 = String._bridgeToObjectiveC()();
  sub_1000AEAE0();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v41);
  v17 = objc_msgSend(v12, "initWithExplanation:target:attributes:", v15, v13, isa);

  v18 = *(void **)(v1 + v2);
  *(_QWORD *)(v1 + v2) = v17;

  v19 = *(void **)(v1 + v2);
  if (!v19)
    goto LABEL_9;
  objc_msgSend(v19, "addObserver:", v1);
  v20 = *(void **)(v1 + v2);
  if (!v20)
    goto LABEL_9;
  v41 = 0;
  v21 = objc_msgSend(v20, "acquireWithError:", &v41);
  v22 = v41;
  if (v21)
  {
    v23 = v41;
LABEL_9:
    if (qword_100115DD8 != -1)
      swift_once(&qword_100115DD8, sub_10000C418);
    v24 = type metadata accessor for Logger(0);
    v25 = sub_10000B5E8(v24, (uint64_t)qword_100124478);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Acquired assertion", v28, 2u);
      swift_slowDealloc(v28, -1, -1);

    }
    else
    {

      v26 = v13;
    }
    goto LABEL_20;
  }
  v29 = v41;
  v30 = _convertNSErrorToError(_:)(v22);

  swift_willThrow(v31);
  if (qword_100115DD8 != -1)
    swift_once(&qword_100115DD8, sub_10000C418);
  v32 = type metadata accessor for Logger(0);
  sub_10000B5E8(v32, (uint64_t)qword_100124478);
  swift_errorRetain(v30);
  v33 = swift_errorRetain(v30);
  v34 = Logger.logObject.getter(v33);
  v35 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v34, v35))
  {
    log = v34;
    v36 = (uint8_t *)swift_slowAlloc(12, -1);
    v39 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v36 = 138412290;
    swift_errorRetain(v30);
    v37 = (void *)_swift_stdlib_bridgeErrorToNSError(v30);
    v41 = v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v36 + 4, v36 + 12);
    *v39 = v37;
    swift_errorRelease(v30);
    swift_errorRelease(v30);
    _os_log_impl((void *)&_mh_execute_header, log, v35, "Unable to acquire assertion %@", v36, 0xCu);
    v38 = sub_100004F7C((uint64_t *)&unk_100116E50);
    swift_arrayDestroy(v39, 1, v38);
    swift_slowDealloc(v39, -1, -1);
    swift_slowDealloc(v36, -1, -1);

    swift_errorRelease(v30);
  }
  else
  {

    swift_errorRelease(v30);
    swift_errorRelease(v30);
    swift_errorRelease(v30);
    v14 = v34;
  }

  v26 = *(NSObject **)(v1 + v2);
  *(_QWORD *)(v1 + v2) = 0;
LABEL_20:

}

void sub_1000AE2AC()
{
  uint64_t v0;
  void *v1;
  unsigned int v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  _QWORD *v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC16MusicRecognition21RunningBoardAssertion_assertion);
  if (!v1)
    goto LABEL_4;
  v21 = 0;
  v2 = objc_msgSend(v1, "invalidateSyncWithError:", &v21);
  v3 = v21;
  if (v2)
  {
    v4 = v21;
LABEL_4:
    if (qword_100115DD8 != -1)
      swift_once(&qword_100115DD8, sub_10000C418);
    v5 = type metadata accessor for Logger(0);
    v6 = sub_10000B5E8(v5, (uint64_t)qword_100124478);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Invalidated assertion", v9, 2u);
      swift_slowDealloc(v9, -1, -1);
    }

    return;
  }
  v10 = v21;
  v11 = _convertNSErrorToError(_:)(v3);

  swift_willThrow(v12);
  if (qword_100115DD8 != -1)
    swift_once(&qword_100115DD8, sub_10000C418);
  v13 = type metadata accessor for Logger(0);
  sub_10000B5E8(v13, (uint64_t)qword_100124478);
  swift_errorRetain(v11);
  v14 = swift_errorRetain(v11);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(12, -1);
    v18 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v17 = 138412290;
    swift_errorRetain(v11);
    v19 = (void *)_swift_stdlib_bridgeErrorToNSError(v11);
    v21 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v17 + 4, v17 + 12);
    *v18 = v19;
    swift_errorRelease(v11);
    swift_errorRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Unable to invalidate assertion %@", v17, 0xCu);
    v20 = sub_100004F7C((uint64_t *)&unk_100116E50);
    swift_arrayDestroy(v18, 1, v20);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    swift_errorRelease(v11);
  }
  else
  {
    swift_errorRelease(v11);
    swift_errorRelease(v11);
    swift_errorRelease(v11);

  }
}

uint64_t type metadata accessor for RunningBoardAssertion()
{
  return objc_opt_self(_TtC16MusicRecognition21RunningBoardAssertion);
}

void sub_1000AE6A4(void *a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;

  if (qword_100115DD8 != -1)
    swift_once(&qword_100115DD8, sub_10000C418);
  v2 = type metadata accessor for Logger(0);
  sub_10000B5E8(v2, (uint64_t)qword_100124478);
  v9 = a1;
  v3 = Logger.logObject.getter(v9);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v5 = 138412290;
    v10 = v9;
    v7 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v10, &v11, v5 + 4, v5 + 12);
    *v6 = v9;

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Assertion will invalidate %@", v5, 0xCu);
    v8 = sub_100004F7C((uint64_t *)&unk_100116E50);
    swift_arrayDestroy(v6, 1, v8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
}

void sub_1000AE854(void *a1, uint64_t a2)
{
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  os_log_type_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *oslog;
  uint64_t v15;
  uint64_t v16;

  if (qword_100115DD8 != -1)
    swift_once(&qword_100115DD8, sub_10000C418);
  v4 = type metadata accessor for Logger(0);
  sub_10000B5E8(v4, (uint64_t)qword_100124478);
  v5 = a1;
  swift_errorRetain(a2);
  v6 = v5;
  v7 = swift_errorRetain(a2);
  oslog = Logger.logObject.getter(v7);
  v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v8))
  {
    v9 = swift_slowAlloc(22, -1);
    v10 = (_QWORD *)swift_slowAlloc(16, -1);
    *(_DWORD *)v9 = 138412546;
    v15 = (uint64_t)v6;
    v11 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v9 + 4, v9 + 12);
    *v10 = v6;

    *(_WORD *)(v9 + 12) = 2112;
    if (a2)
    {
      swift_errorRetain(a2);
      v12 = _swift_stdlib_bridgeErrorToNSError(a2);
      v15 = v12;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v9 + 14, v9 + 22);
    }
    else
    {
      v15 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v9 + 14, v9 + 22);
      v12 = 0;
    }
    v10[1] = v12;
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    _os_log_impl((void *)&_mh_execute_header, oslog, v8, "Assertion did invalidate %@ with error %@", (uint8_t *)v9, 0x16u);
    v13 = sub_100004F7C((uint64_t *)&unk_100116E50);
    swift_arrayDestroy(v10, 2, v13);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

  }
  else
  {

    swift_errorRelease(a2);
    swift_errorRelease(a2);

  }
}

unint64_t sub_1000AEAE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011C5C0;
  if (!qword_10011C5C0)
  {
    v1 = objc_opt_self(RBSAttribute);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10011C5C0);
  }
  return result;
}

uint64_t sub_1000AEB1C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v4 = (int *)type metadata accessor for ArtistProfileViewModel(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = a1[3];
  v8 = a1[4];
  sub_10000C9C8(a1, v7);
  *v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
  v6[1] = v9;
  v10 = a1[3];
  v11 = a1[4];
  sub_10000C9C8(a1, v10);
  (*(void (**)(uint64_t, uint64_t))(v11 + 32))(v10, v11);
  v12 = a1[3];
  v13 = a1[4];
  sub_10000C9C8(a1, v12);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 24))(v12, v13);
  v15 = (_QWORD *)((char *)v6 + v4[6]);
  *v15 = v14;
  v15[1] = v16;
  v17 = a1[3];
  v18 = a1[4];
  sub_10000C9C8(a1, v17);
  v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 40))(v17, v18);
  v20 = (_QWORD *)((char *)v6 + v4[7]);
  *v20 = v19;
  v20[1] = v21;
  v22 = a1[3];
  v23 = a1[4];
  sub_10000C9C8(a1, v22);
  *(_QWORD *)((char *)v6 + v4[8]) = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 48))(v22, v23);
  sub_1000AECC0((uint64_t)v6, a2);
  return _s16MusicRecognition11AnyPlaylistVwxx_0(a1);
}

uint64_t type metadata accessor for ArtistProfileViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_10011C628;
  if (!qword_10011C628)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ArtistProfileViewModel);
  return result;
}

uint64_t sub_1000AECC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArtistProfileViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1000AED04(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for URL(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain(v7);
    if (v13(v10, 1, v11))
    {
      v14 = sub_100004F7C((uint64_t *)&unk_100118CE0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = a3[6];
    v17 = a3[7];
    v18 = (uint64_t *)((char *)v4 + v16);
    v19 = (uint64_t *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = (uint64_t *)((char *)v4 + v17);
    v22 = (uint64_t *)((char *)a2 + v17);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = a3[8];
    v15 = *(uint64_t *)((char *)a2 + v24);
    *(uint64_t *)((char *)v4 + v24) = v15;
    swift_bridgeObjectRetain(v20);
    swift_bridgeObjectRetain(v23);
  }
  swift_retain(v15);
  return v4;
}

uint64_t sub_1000AEE4C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + a2[5];
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[6] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7] + 8));
  return swift_release(*(_QWORD *)(a1 + a2[8]));
}

_QWORD *sub_1000AEEEC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain(v6);
  if (v12(v9, 1, v10))
  {
    v13 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = a3[6];
  v15 = a3[7];
  v16 = (_QWORD *)((char *)a1 + v14);
  v17 = (_QWORD *)((char *)a2 + v14);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = (_QWORD *)((char *)a1 + v15);
  v20 = (_QWORD *)((char *)a2 + v15);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = a3[8];
  v23 = *(_QWORD *)((char *)a2 + v22);
  *(_QWORD *)((char *)a1 + v22) = v23;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRetain(v21);
  swift_retain(v23);
  return a1;
}

_QWORD *sub_1000AF00C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  v17 = a3[6];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  *v18 = *v19;
  v20 = v19[1];
  v21 = v18[1];
  v18[1] = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v21);
  v22 = a3[7];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  *v23 = *v24;
  v25 = v24[1];
  v26 = v23[1];
  v23[1] = v25;
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRelease(v26);
  v27 = a3[8];
  v28 = *(_QWORD *)((char *)a2 + v27);
  v29 = *(_QWORD *)((char *)a1 + v27);
  *(_QWORD *)((char *)a1 + v27) = v28;
  swift_retain(v28);
  swift_release(v29);
  return a1;
}

_OWORD *sub_1000AF1B0(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  return a1;
}

_QWORD *sub_1000AF29C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  v17 = a3[6];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  v22 = v18[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease(v22);
  v23 = a3[7];
  v24 = (_QWORD *)((char *)a1 + v23);
  v25 = (_QWORD *)((char *)a2 + v23);
  v27 = *v25;
  v26 = v25[1];
  v28 = v24[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease(v28);
  v29 = a3[8];
  v30 = *(_QWORD *)((char *)a1 + v29);
  *(_QWORD *)((char *)a1 + v29) = *(_QWORD *)((char *)a2 + v29);
  swift_release(v30);
  return a1;
}

uint64_t sub_1000AF408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000AF414);
}

uint64_t sub_1000AF414(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1000AF494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000AF4A0);
}

uint64_t sub_1000AF4A0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_1000AF518(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_1000D7408;
  sub_10000880C(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_1000D7420;
    v4[3] = &unk_1000D7420;
    v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

void sub_1000AF5A4()
{
  qword_10011C670 = 0x6C69662E79616C70;
  *(_QWORD *)algn_10011C678 = 0xE90000000000006CLL;
}

void sub_1000AF5CC()
{
  qword_10011C680 = 0x69662E6573756170;
  *(_QWORD *)algn_10011C688 = 0xEA00000000006C6CLL;
}

uint64_t sub_1000AF5F4()
{
  uint64_t result;

  result = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)(1.0, 170.0, 15.0, 0.0);
  qword_10011C690 = result;
  return result;
}

void sub_1000AF628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  void (*v8)(_BYTE *, uint64_t);
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[7];
  uint64_t v29;

  v1 = type metadata accessor for LayoutDirection(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  v7 = &v28[-v6];
  sub_10000711C(&v28[-v6]);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v2 + 104))(v5, enum case for LayoutDirection.leftToRight(_:), v1);
  static LayoutDirection.== infix(_:_:)(v7, v5);
  v8 = *(void (**)(_BYTE *, uint64_t))(v2 + 8);
  v8(v5, v1);
  v8(v7, v1);
  v9 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SongPreviewPlaybackView(0) + 20));
  v10 = *v9;
  v11 = v9[1];
  v12 = *((unsigned __int8 *)v9 + 16);
  v13 = type metadata accessor for SongPreviewPlaybackViewModel(0);
  v14 = sub_100004864(&qword_10011C780, type metadata accessor for SongPreviewPlaybackViewModel, (uint64_t)&unk_1000D68B0);
  v15 = StateObject.wrappedValue.getter(v10, v11, v12, v13, v14);
  KeyPath = swift_getKeyPath(&unk_1000D75C0, v16);
  v19 = swift_getKeyPath(&unk_1000D75E8, v18);
  static Published.subscript.getter((uint64_t *)((char *)&v29 + 1), v15, KeyPath, v19);
  swift_release(v15);
  swift_release(KeyPath);
  swift_release(v19);
  v20 = StateObject.wrappedValue.getter(*v9, v9[1], *((unsigned __int8 *)v9 + 16), v13, v14);
  v21 = *(_QWORD *)(v20 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_previewController + 24);
  v22 = *(_QWORD *)(v20 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_previewController + 32);
  sub_10000C9C8((_QWORD *)(v20 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_previewController), v21);
  v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22);
  v25 = swift_getKeyPath(&unk_1000D7500, v24);
  v27 = swift_getKeyPath(&unk_1000D7528, v26);
  static Published.subscript.getter(&v29, v23, v25, v27);
  swift_release(v23);
  swift_release(v25);
  swift_release(v27);
  swift_release(v20);
}

uint64_t *sub_1000AF888(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = sub_100004F7C(&qword_1001166A8);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *a1 = *a2;
      swift_retain(v13);
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = *(int *)(a3 + 20);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = *(_QWORD *)v16;
    v18 = *((_QWORD *)v16 + 1);
    v19 = v16[16];
    sub_1000AF9BC(*(_QWORD *)v16, v18);
    *(_QWORD *)v15 = v17;
    *((_QWORD *)v15 + 1) = v18;
    v15[16] = v19;
    v20 = *(int *)(a3 + 24);
    v21 = (uint64_t *)((char *)a1 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    if (*v22)
    {
      v23 = v22[1];
      *v21 = *v22;
      v21[1] = v23;
      swift_retain(v23);
    }
    else
    {
      *(_OWORD *)v21 = *(_OWORD *)v22;
    }
  }
  return a1;
}

uint64_t sub_1000AF9BC(uint64_t a1, uint64_t a2)
{
  return swift_retain(a2);
}

double sub_1000AF9C4(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double result;
  _QWORD *v7;

  v4 = sub_100004F7C(&qword_1001166A8);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  sub_1000AFA60(*(_QWORD *)((char *)a1 + *(int *)(a2 + 20)), *(_QWORD *)((char *)a1 + *(int *)(a2 + 20) + 8));
  v7 = (_QWORD *)((char *)a1 + *(int *)(a2 + 24));
  if (*v7)
    *(_QWORD *)&result = swift_release(v7[1]).n128_u64[0];
  return result;
}

uint64_t sub_1000AFA60(uint64_t a1, uint64_t a2)
{
  return swift_release(a2);
}

uint64_t *sub_1000AFA68(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  v6 = sub_100004F7C(&qword_1001166A8);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = *(int *)(a3 + 20);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *(_QWORD *)v14;
  v16 = *((_QWORD *)v14 + 1);
  v17 = v14[16];
  sub_1000AF9BC(*(_QWORD *)v14, v16);
  *(_QWORD *)v13 = v15;
  *((_QWORD *)v13 + 1) = v16;
  v13[16] = v17;
  v18 = *(int *)(a3 + 24);
  v19 = (uint64_t *)((char *)a1 + v18);
  v20 = (uint64_t *)((char *)a2 + v18);
  if (*v20)
  {
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    swift_retain(v21);
  }
  else
  {
    *(_OWORD *)v19 = *(_OWORD *)v20;
  }
  return a1;
}

uint64_t *sub_1000AFB70(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if (a1 != a2)
  {
    sub_10000526C((uint64_t)a1, &qword_1001166A8);
    v6 = sub_100004F7C(&qword_1001166A8);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v12 = *(int *)(a3 + 20);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *(_QWORD *)v14;
  v16 = *((_QWORD *)v14 + 1);
  v17 = v14[16];
  sub_1000AF9BC(*(_QWORD *)v14, v16);
  v18 = *(_QWORD *)v13;
  v19 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v13 = v15;
  *((_QWORD *)v13 + 1) = v16;
  v13[16] = v17;
  sub_1000AFA60(v18, v19);
  v20 = *(int *)(a3 + 24);
  v21 = (uint64_t *)((char *)a1 + v20);
  v22 = (uint64_t *)((char *)a2 + v20);
  v23 = *(uint64_t *)((char *)a1 + v20);
  v24 = *v22;
  if (!v23)
  {
    if (v24)
    {
      v27 = v22[1];
      *v21 = v24;
      v21[1] = v27;
      swift_retain(v27);
      return a1;
    }
LABEL_12:
    *(_OWORD *)v21 = *(_OWORD *)v22;
    return a1;
  }
  if (!v24)
  {
    swift_release(v21[1]);
    goto LABEL_12;
  }
  v25 = v22[1];
  v26 = v21[1];
  *v21 = v24;
  v21[1] = v25;
  swift_retain(v25);
  swift_release(v26);
  return a1;
}

char *sub_1000AFCCC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_100004F7C(&qword_1001166A8);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = *(int *)(a3 + 24);
  v10 = &a1[v8];
  v11 = &a2[v8];
  *(_OWORD *)v10 = *(_OWORD *)v11;
  v10[16] = v11[16];
  v12 = &a1[v9];
  v13 = &a2[v9];
  v14 = *(_QWORD *)v13;
  if (*(_QWORD *)v13)
  {
    v15 = *((_QWORD *)v13 + 1);
    *(_QWORD *)v12 = v14;
    *((_QWORD *)v12 + 1) = v15;
  }
  else
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
  }
  return a1;
}

char *sub_1000AFDA8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (a1 != a2)
  {
    sub_10000526C((uint64_t)a1, &qword_1001166A8);
    v6 = sub_100004F7C(&qword_1001166A8);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = v10[16];
  v12 = *(_QWORD *)v9;
  v13 = *((_QWORD *)v9 + 1);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  v9[16] = v11;
  sub_1000AFA60(v12, v13);
  v14 = *(int *)(a3 + 24);
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = *(_QWORD *)&a1[v14];
  v18 = *(_QWORD *)v16;
  if (!v17)
  {
    if (v18)
    {
      v21 = *((_QWORD *)v16 + 1);
      *(_QWORD *)v15 = v18;
      *((_QWORD *)v15 + 1) = v21;
      return a1;
    }
LABEL_11:
    *(_OWORD *)v15 = *(_OWORD *)v16;
    return a1;
  }
  if (!v18)
  {
    swift_release(*((_QWORD *)v15 + 1));
    goto LABEL_11;
  }
  v19 = *((_QWORD *)v16 + 1);
  v20 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v15 = v18;
  *((_QWORD *)v15 + 1) = v19;
  swift_release(v20);
  return a1;
}

uint64_t sub_1000AFED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000AFEE0);
}

uint64_t sub_1000AFEE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_100004F7C(&qword_10011C698);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_1000AFF6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000AFF78);
}

uint64_t sub_1000AFF78(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100004F7C(&qword_10011C698);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = a2;
  return result;
}

uint64_t type metadata accessor for SongPreviewPlaybackView(uint64_t a1)
{
  uint64_t result;

  result = qword_10011C6F8;
  if (!qword_10011C6F8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SongPreviewPlaybackView);
  return result;
}

void sub_1000B0030(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_1000B00AC(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_1000D7458;
    v4[2] = &unk_1000D7470;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

void sub_1000B00AC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10011C708)
  {
    v2 = type metadata accessor for LayoutDirection(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10011C708);
  }
}

uint64_t sub_1000B0100(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000DF2D0, 1);
}

void sub_1000B0110(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  void (**v91)(double *@<X8>, double@<D2>, double@<D3>);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t (**v95)(double *);
  uint64_t v96;
  uint64_t v97;
  double *v98;
  uint64_t v99;
  uint64_t v100;
  double v101;
  uint64_t v102;
  double *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  double v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  double *v135;
  uint64_t v136;
  char v137[8];
  uint64_t v138;
  uint64_t v139;
  _QWORD v140[2];
  double v141;
  uint64_t v142;
  uint64_t v143;

  v135 = a2;
  v3 = type metadata accessor for CoordinateSpace(0);
  v133 = *(_QWORD *)(v3 - 8);
  v134 = v3;
  __chkstk_darwin(v3);
  v132 = (char *)&v105 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SongPreviewPlaybackView(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v136 = (uint64_t)&v105 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_100004F7C(&qword_10011C748);
  v108 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin(v110);
  v106 = (char *)&v105 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_100004F7C(&qword_10011C750);
  __chkstk_darwin(v109);
  v107 = (char *)&v105 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_100004F7C(&qword_10011C758);
  __chkstk_darwin(v118);
  v111 = (uint64_t)&v105 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = sub_100004F7C(&qword_10011C760);
  __chkstk_darwin(v117);
  v116 = (uint64_t)&v105 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = sub_100004F7C(&qword_10011C768);
  v12 = __chkstk_darwin(v126);
  v119 = (char *)&v105 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v123 = (char *)&v105 - v14;
  v125 = sub_100004F7C(&qword_10011C770);
  __chkstk_darwin(v125);
  v124 = (char *)&v105 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = sub_100004F7C(&qword_10011C778);
  v16 = __chkstk_darwin(v130);
  v131 = (uint64_t)&v105 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v128 = (uint64_t)&v105 - v19;
  __chkstk_darwin(v18);
  v129 = (uint64_t)&v105 - v20;
  v21 = (_QWORD *)(a1 + *(int *)(v5 + 20));
  v22 = *v21;
  v23 = v21[1];
  v24 = *((unsigned __int8 *)v21 + 16);
  v25 = type metadata accessor for SongPreviewPlaybackViewModel(0);
  v26 = sub_100004864(&qword_10011C780, type metadata accessor for SongPreviewPlaybackViewModel, (uint64_t)&unk_1000D68B0);
  v27 = StateObject.wrappedValue.getter(v22, v23, v24, v25, v26);
  v127 = *(_QWORD *)(v27 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_backgroundColor);
  swift_retain(v127);
  v28 = swift_release(v27);
  v29 = StateObject.projectedValue.getter(v22, v23, v24, v25, v26, v28);
  KeyPath = swift_getKeyPath(&unk_1000D74D8, v30);
  ObservedObject.Wrapper.subscript.getter(&v141, KeyPath, v29, v26);
  swift_release(KeyPath);
  swift_release(v29);
  v122 = v141;
  v121 = v142;
  v32 = v143;
  v139 = 0;
  State.init(wrappedValue:)(v140, &v139, &type metadata for CGFloat);
  v33 = v140[0];
  v120 = v140[1];
  v34 = a1;
  v112 = a1;
  v35 = a1;
  v36 = v136;
  sub_1000B1B60(v35, v136);
  v37 = *(unsigned __int8 *)(v6 + 80);
  v114 = ((v37 + 16) & ~v37) + v7;
  v38 = (v37 + 16) & ~v37;
  v115 = v38;
  v113 = v37 | 7;
  v39 = swift_allocObject(&unk_10010D8B8, v114, v37 | 7);
  sub_1000B1BA8(v36, v39 + v38);
  v138 = v34;
  v40 = sub_100004F7C(&qword_1001189B0);
  v41 = sub_1000B1C20();
  v42 = v106;
  Button.init(action:label:)(sub_1000B1BEC, v39, sub_1000B1C18, v137, v40, v41);
  v43 = StateObject.wrappedValue.getter(*v21, v21[1], *((unsigned __int8 *)v21 + 16), v25, v26);
  v44 = *(_QWORD *)(v43 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_previewController + 24);
  v45 = *(_QWORD *)(v43 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_previewController + 32);
  sub_10000C9C8((_QWORD *)(v43 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_previewController), v44);
  v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 8))(v44, v45);
  v48 = swift_getKeyPath(&unk_1000D7500, v47);
  v50 = swift_getKeyPath(&unk_1000D7528, v49);
  static Published.subscript.getter(&v141, v46, v48, v50);
  swift_release(v46);
  swift_release(v48);
  swift_release(v50);
  v51 = &OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_buttonColor;
  if (LOBYTE(v141))
    v51 = &OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_backgroundColor;
  v52 = *(double *)(v43 + *v51);
  swift_retain(*(_QWORD *)&v52);
  swift_release(v43);
  v54 = swift_getKeyPath(&unk_1000D7548, v53);
  v141 = v52;
  v55 = swift_retain(*(_QWORD *)&v52);
  v56 = AnyShapeStyle.init<A>(_:)(&v141, &type metadata for Color, &protocol witness table for Color, v55);
  v57 = v108;
  v58 = (uint64_t)v107;
  v59 = v110;
  (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v107, v42, v110);
  v60 = swift_release(*(_QWORD *)&v52);
  v61 = (uint64_t *)(v58 + *(int *)(v109 + 36));
  *v61 = v54;
  v61[1] = v56;
  (*(void (**)(char *, uint64_t, __n128))(v57 + 8))(v42, v59, v60);
  v62 = StateObject.wrappedValue.getter(*v21, v21[1], *((unsigned __int8 *)v21 + 16), v25, v26);
  v64 = swift_getKeyPath(&unk_1000D7578, v63);
  v66 = swift_getKeyPath(&unk_1000D75A0, v65);
  static Published.subscript.getter(&v141, v62, v64, v66);
  swift_release(v64);
  swift_release(v66);
  v67 = Color.opacity(_:)(v141);
  swift_release(v62);
  LOBYTE(v62) = static Edge.Set.all.getter(v68);
  v69 = v111;
  sub_100007C8C(v58, v111, &qword_10011C750);
  v70 = v69 + *(int *)(v118 + 36);
  *(_QWORD *)v70 = v67;
  *(_BYTE *)(v70 + 8) = v62;
  sub_10000526C(v58, &qword_10011C750);
  v71 = v116;
  sub_100007C8C(v69, v116, &qword_10011C758);
  v72 = v117;
  *(_WORD *)(v71 + *(int *)(v117 + 36)) = 256;
  sub_10000526C(v69, &qword_10011C758);
  v73 = StateObject.wrappedValue.getter(*v21, v21[1], *((unsigned __int8 *)v21 + 16), v25, v26);
  v74 = sub_1000977D0();
  v76 = v75;
  swift_bridgeObjectRetain(v75);
  swift_release(v73);
  v77 = sub_1000B1E34();
  v78 = (uint64_t)v119;
  View.accessibilityIdentifier(_:)(v74, v76, v72, v77);
  swift_bridgeObjectRelease(v76);
  sub_10000526C(v71, &qword_10011C760);
  v79 = StateObject.wrappedValue.getter(*v21, v21[1], *((unsigned __int8 *)v21 + 16), v25, v26);
  *(double *)&v80 = COERCE_DOUBLE(sub_100096BAC());
  v82 = v81;
  swift_release(v79);
  v141 = *(double *)&v80;
  v142 = v82;
  v83 = sub_10000B110();
  v84 = (uint64_t)v123;
  ModifiedContent<>.accessibilityLabel<A>(_:)(&v141, v126, &type metadata for String, v83);
  swift_bridgeObjectRelease(v82);
  sub_10000526C(v78, &qword_10011C768);
  v86 = v132;
  v85 = v133;
  v87 = v134;
  (*(void (**)(char *, _QWORD, uint64_t))(v133 + 104))(v132, enum case for CoordinateSpace.local(_:), v134);
  v88 = (uint64_t)v124;
  v89 = &v124[*(int *)(v125 + 36)];
  v90 = sub_100004F7C(&qword_10011C7C8);
  (*(void (**)(char *, char *, uint64_t))(v85 + 16))(&v89[*(int *)(v90 + 36)], v86, v87);
  *(_QWORD *)v89 = &type metadata for PreviewButtonWidthPreferenceKey;
  v91 = (void (**)(double *@<X8>, double@<D2>, double@<D3>))&v89[*(int *)(v90 + 40)];
  *v91 = sub_10003E680;
  v91[1] = 0;
  sub_100007C8C(v84, v88, &qword_10011C768);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v86, v87);
  sub_10000526C(v84, &qword_10011C768);
  v92 = v136;
  sub_1000B1B60(v112, v136);
  v93 = swift_allocObject(&unk_10010D8E0, v114, v113);
  sub_1000B1BA8(v92, v93 + v115);
  v94 = v128;
  sub_100007C8C(v88, v128, &qword_10011C770);
  v95 = (uint64_t (**)(double *))(v94 + *(int *)(v130 + 36));
  *v95 = sub_1000B20A8;
  v95[1] = (uint64_t (*)(double *))v93;
  sub_10000526C(v88, &qword_10011C770);
  v96 = v129;
  sub_1000B20E4(v94, v129);
  v97 = v131;
  sub_100007C8C(v96, v131, &qword_10011C778);
  v98 = v135;
  v99 = v127;
  *(_QWORD *)v135 = v127;
  *((_QWORD *)v98 + 1) = v33;
  v100 = v120;
  v101 = v122;
  *((_QWORD *)v98 + 2) = v120;
  v98[3] = v101;
  v102 = v121;
  *((_QWORD *)v98 + 4) = v121;
  *((_QWORD *)v98 + 5) = v32;
  v103 = v98;
  v104 = sub_100004F7C(&qword_10011C7D0);
  sub_100007C8C(v97, (uint64_t)v103 + *(int *)(v104 + 48), &qword_10011C778);
  swift_retain(*(_QWORD *)&v101);
  swift_retain(v102);
  swift_retain(v99);
  swift_retain(v100);
  sub_10000526C(v96, &qword_10011C778);
  sub_10000526C(v97, &qword_10011C778);
  swift_release(v102);
  swift_release(*(_QWORD *)&v101);
  swift_release(v100);
  swift_release(v99);
}

double sub_1000B0B5C(uint64_t a1)
{
  uint64_t v2;
  void (**v3)(void);
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;

  v2 = type metadata accessor for SongPreviewPlaybackView(0);
  v3 = (void (**)(void))(a1 + *(int *)(v2 + 24));
  if (*v3)
    (*v3)();
  v4 = (uint64_t *)(a1 + *(int *)(v2 + 20));
  v5 = *v4;
  v6 = v4[1];
  v7 = *((unsigned __int8 *)v4 + 16);
  v8 = type metadata accessor for SongPreviewPlaybackViewModel(0);
  v9 = sub_100004864(&qword_10011C780, type metadata accessor for SongPreviewPlaybackViewModel, (uint64_t)&unk_1000D68B0);
  v10 = StateObject.wrappedValue.getter(v5, v6, v7, v8, v9);
  v11 = *(_QWORD *)(v10 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_previewController + 24);
  v12 = *(_QWORD *)(v10 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_previewController + 32);
  sub_10000C9C8((_QWORD *)(v10 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_previewController), v11);
  (*(void (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  return result;
}

uint64_t sub_1000B0C2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  _OWORD v32[13];
  _OWORD v33[2];
  _OWORD v34[14];
  _OWORD v35[3];

  v30 = a2;
  v3 = type metadata accessor for AccessibilityTraits(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_100004F7C(&qword_1001189A8);
  v7 = __chkstk_darwin(v29);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v29 - v11;
  v13 = static Alignment.center.getter(v10);
  v15 = v14;
  sub_1000B0F20(a1, (uint64_t)v32);
  *(_QWORD *)&v31 = v13;
  *((_QWORD *)&v31 + 1) = v15;
  v16 = sub_100004F7C(&qword_10011C7D8);
  v17 = swift_allocObject(v16, ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72), *(unsigned __int8 *)(v4 + 80) | 7);
  *(_OWORD *)(v17 + 16) = xmmword_1000D1CC0;
  static AccessibilityTraits.startsMediaSession.getter();
  *(_QWORD *)&v34[0] = v17;
  v18 = sub_100004864(&qword_10011C7E0, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityTraits, (uint64_t)&protocol conformance descriptor for AccessibilityTraits);
  v19 = sub_100004F7C(&qword_10011C7E8);
  v20 = sub_10000522C(&qword_10011C7F0, &qword_10011C7E8, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(v34, v19, v20, v3, v18);
  v21 = sub_100004F7C(&qword_10011C7A0);
  v22 = sub_10000522C(&qword_10011C798, &qword_10011C7A0, (uint64_t)&protocol conformance descriptor for ZStack<A>);
  View.accessibilityAddTraits(_:)(v6, v21, v22);
  v23 = *(void (**)(char *, uint64_t))(v4 + 8);
  v23(v6, v3);
  v34[12] = v32[11];
  v34[13] = v32[12];
  v35[0] = v33[0];
  *(_OWORD *)((char *)v35 + 9) = *(_OWORD *)((char *)v33 + 9);
  v34[8] = v32[7];
  v34[9] = v32[8];
  v34[10] = v32[9];
  v34[11] = v32[10];
  v34[4] = v32[3];
  v34[5] = v32[4];
  v34[6] = v32[5];
  v34[7] = v32[6];
  v34[0] = v31;
  v34[1] = v32[0];
  v34[2] = v32[1];
  v34[3] = v32[2];
  v24 = sub_1000B2134(v34);
  static AccessibilityTraits.isImage.getter(v24);
  ModifiedContent<>.accessibilityRemoveTraits(_:)(v6, v29);
  v23(v6, v3);
  v25 = sub_10000526C((uint64_t)v9, &qword_1001189A8);
  v26 = static Alignment.center.getter(v25);
  sub_100034ADC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v30, 0.0, 1, INFINITY, 0, v26, v27);
  return sub_10000526C((uint64_t)v12, &qword_1001189A8);
}

void sub_1000B0F20(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(_QWORD);
  __n128 v12;
  void (*v13)(char *, uint64_t, __n128);
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  double v75;
  double v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  __n128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  double v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  __n128 v119;
  double v120;
  double v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  BOOL v133;
  void (*v134)(_QWORD, _QWORD, _QWORD);
  uint64_t v135;
  char *v136;
  char v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  char v141;
  int v142;
  int v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  double v147;
  uint64_t v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  uint64_t v155;
  uint64_t v156;
  void (*v157)(char *, uint64_t, __n128);
  unsigned int v158;
  void (*v159)(char *, _QWORD, uint64_t);
  _BOOL4 v160;
  char *v161;
  uint64_t v162;
  double v163;
  uint64_t v164;
  uint64_t v165;
  int v166;
  int v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  _BYTE v175[7];
  char v176;
  _BYTE v177[7];
  char v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  _OWORD v185[2];
  _BYTE v186[128];
  _BYTE v187[7];
  char v188;
  _BYTE v189[7];
  char v190;
  _QWORD v191[2];
  char v192;
  _BYTE v193[7];
  char *v194;
  char v195;
  _BYTE v196[7];
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  double v201;
  double v202;
  double v203;
  double v204;
  uint64_t v205;
  uint64_t v206;
  BOOL v207;
  uint64_t v208;
  unsigned __int8 v209;
  uint64_t v210;
  unsigned __int8 v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  unsigned __int8 v215;
  char *v216;
  unsigned __int8 v217;
  uint64_t v218;
  uint64_t v219;

  v4 = type metadata accessor for Image.ResizingMode(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v155 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100116318 != -1)
    swift_once(&qword_100116318, sub_1000AF5CC);
  v8 = qword_10011C680;
  v9 = *(_QWORD *)algn_10011C688;
  swift_bridgeObjectRetain(*(_QWORD *)algn_10011C688);
  v10 = Image.init(systemName:)(v8, v9);
  v11 = *(void (**)(_QWORD))(v5 + 104);
  v158 = enum case for Image.ResizingMode.stretch(_:);
  v159 = (void (*)(char *, _QWORD, uint64_t))v11;
  v11(v7);
  v172 = Image.resizable(capInsets:resizingMode:)(v7, v10, 0.0, 0.0, 0.0, 0.0);
  v12 = swift_release(v10);
  v13 = *(void (**)(char *, uint64_t, __n128))(v5 + 8);
  v161 = v7;
  v162 = v4;
  v157 = v13;
  v13(v7, v4, v12);
  v14 = *(int *)(type metadata accessor for SongPreviewPlaybackView(0) + 20);
  v165 = a1;
  v15 = (_QWORD *)(a1 + v14);
  v16 = *(_QWORD *)(a1 + v14);
  v17 = *(_QWORD *)(a1 + v14 + 8);
  v18 = *(unsigned __int8 *)(a1 + v14 + 16);
  v19 = type metadata accessor for SongPreviewPlaybackViewModel(0);
  v20 = sub_100004864(&qword_10011C780, type metadata accessor for SongPreviewPlaybackViewModel, (uint64_t)&unk_1000D68B0);
  v21 = StateObject.wrappedValue.getter(v16, v17, v18, v19, v20);
  KeyPath = swift_getKeyPath(&unk_1000D75C0, v22);
  v25 = swift_getKeyPath(&unk_1000D75E8, v24);
  static Published.subscript.getter(v186, v21, KeyPath, v25);
  swift_release(v21);
  swift_release(KeyPath);
  swift_release(v25);
  v26 = *(_QWORD *)v186;
  v27 = *v15;
  v28 = v15[1];
  v29 = *((unsigned __int8 *)v15 + 16);
  v30 = v19;
  v174 = v19;
  v31 = StateObject.wrappedValue.getter(v27, v28, v29, v19, v20);
  v33 = swift_getKeyPath(&unk_1000D75C0, v32);
  v35 = swift_getKeyPath(&unk_1000D75E8, v34);
  static Published.subscript.getter(v186, v31, v33, v35);
  swift_release(v31);
  swift_release(v33);
  swift_release(v35);
  v36 = *(_QWORD *)v186;
  v38 = static Alignment.center.getter(v37);
  _FrameLayout.init(width:height:alignment:)(&v208, v26, 0, v36, 0, v38, v39);
  v170 = v210;
  v171 = v208;
  v166 = v211;
  v167 = v209;
  v168 = v213;
  v169 = v212;
  v40 = StateObject.wrappedValue.getter(*v15, v15[1], *((unsigned __int8 *)v15 + 16), v30, v20);
  v41 = *(_QWORD *)(v40 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_previewController + 24);
  v42 = *(_QWORD *)(v40 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_previewController + 32);
  sub_10000C9C8((_QWORD *)(v40 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_previewController), v41);
  v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 8))(v41, v42);
  v45 = swift_getKeyPath(&unk_1000D7500, v44);
  v47 = swift_getKeyPath(&unk_1000D7528, v46);
  static Published.subscript.getter(v186, v43, v45, v47);
  swift_release(v43);
  swift_release(v45);
  swift_release(v47);
  LODWORD(v156) = v186[0];
  swift_release(v40);
  v48 = *v15;
  v49 = v15[1];
  v50 = *((unsigned __int8 *)v15 + 16);
  v173 = v20;
  v51 = StateObject.wrappedValue.getter(v48, v49, v50, v174, v20);
  v52 = *(_QWORD *)(v51 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_previewController + 24);
  v53 = *(_QWORD *)(v51 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_previewController + 32);
  sub_10000C9C8((_QWORD *)(v51 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_previewController), v52);
  v54 = (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 8))(v52, v53);
  v56 = swift_getKeyPath(&unk_1000D7500, v55);
  v58 = swift_getKeyPath(&unk_1000D7528, v57);
  static Published.subscript.getter(v186, v54, v56, v58);
  swift_release(v54);
  swift_release(v56);
  swift_release(v58);
  LODWORD(v155) = v186[0];
  v59 = swift_release(v51);
  v163 = static UnitPoint.center.getter(v59);
  v61 = v60;
  if (qword_100116320 != -1)
    swift_once(&qword_100116320, sub_1000AF5F4);
  v62 = qword_10011C690;
  v64 = v173;
  v63 = v174;
  v65 = StateObject.wrappedValue.getter(*v15, v15[1], *((unsigned __int8 *)v15 + 16), v174, v173);
  v66 = *(_QWORD *)(v65 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_previewController + 24);
  v67 = *(_QWORD *)(v65 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_previewController + 32);
  sub_10000C9C8((_QWORD *)(v65 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_previewController), v66);
  v68 = (*(uint64_t (**)(uint64_t, uint64_t))(v67 + 8))(v66, v67);
  v70 = swift_getKeyPath(&unk_1000D7500, v69);
  v72 = swift_getKeyPath(&unk_1000D7528, v71);
  static Published.subscript.getter(v186, v68, v70, v72);
  swift_release(v68);
  swift_release(v70);
  swift_release(v72);
  v73 = v186[0];
  swift_release(v65);
  v74 = qword_100116310;
  v164 = v62;
  swift_retain(v62);
  if (v74 != -1)
    swift_once(&qword_100116310, sub_1000AF5A4);
  v160 = v73 == 1;
  if ((_DWORD)v155 == 1)
    v75 = 1.0;
  else
    v75 = 0.0;
  if ((_DWORD)v156 == 1)
    v76 = 1.0;
  else
    v76 = 0.0;
  v77 = qword_10011C670;
  v78 = *(_QWORD *)algn_10011C678;
  swift_bridgeObjectRetain(*(_QWORD *)algn_10011C678);
  v79 = Image.init(systemName:)(v77, v78);
  v81 = v161;
  v80 = v162;
  v159(v161, v158, v162);
  v159 = (void (*)(char *, _QWORD, uint64_t))Image.resizable(capInsets:resizingMode:)(v81, v79, 0.0, 0.0, 0.0, 0.0);
  v82 = swift_release(v79);
  v157(v81, v80, v82);
  v83 = StateObject.wrappedValue.getter(*v15, v15[1], *((unsigned __int8 *)v15 + 16), v63, v64);
  v85 = swift_getKeyPath(&unk_1000D75C0, v84);
  v87 = swift_getKeyPath(&unk_1000D75E8, v86);
  static Published.subscript.getter(v186, v83, v85, v87);
  swift_release(v83);
  swift_release(v85);
  swift_release(v87);
  v88 = *(_QWORD *)v186;
  v89 = StateObject.wrappedValue.getter(*v15, v15[1], *((unsigned __int8 *)v15 + 16), v63, v64);
  v91 = swift_getKeyPath(&unk_1000D75C0, v90);
  v93 = swift_getKeyPath(&unk_1000D75E8, v92);
  static Published.subscript.getter(v186, v89, v91, v93);
  swift_release(v89);
  swift_release(v91);
  swift_release(v93);
  v94 = *(_QWORD *)v186;
  v96 = static Alignment.center.getter(v95);
  _FrameLayout.init(width:height:alignment:)(&v214, v88, 0, v94, 0, v96, v97);
  v158 = v215;
  v161 = v216;
  v162 = v214;
  LODWORD(v157) = v217;
  v155 = v219;
  v156 = v218;
  sub_1000AF628();
  v99 = v98;
  v100 = StateObject.wrappedValue.getter(*v15, v15[1], *((unsigned __int8 *)v15 + 16), v63, v64);
  v101 = *(_QWORD *)(v100 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_previewController + 24);
  v102 = *(_QWORD *)(v100 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_previewController + 32);
  sub_10000C9C8((_QWORD *)(v100 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_previewController), v101);
  v103 = (*(uint64_t (**)(uint64_t, uint64_t))(v102 + 8))(v101, v102);
  v105 = swift_getKeyPath(&unk_1000D7500, v104);
  v107 = swift_getKeyPath(&unk_1000D7528, v106);
  static Published.subscript.getter(v186, v103, v105, v107);
  swift_release(v103);
  swift_release(v105);
  swift_release(v107);
  LODWORD(v103) = v186[0];
  swift_release(v100);
  if ((_DWORD)v103 == 1)
    v108 = 0.0;
  else
    v108 = 1.0;
  v110 = v173;
  v109 = v174;
  v111 = StateObject.wrappedValue.getter(*v15, v15[1], *((unsigned __int8 *)v15 + 16), v174, v173);
  v112 = *(_QWORD *)(v111 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_previewController + 24);
  v113 = *(_QWORD *)(v111 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_previewController + 32);
  sub_10000C9C8((_QWORD *)(v111 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_previewController), v112);
  v114 = (*(uint64_t (**)(uint64_t, uint64_t))(v113 + 8))(v112, v113);
  v116 = swift_getKeyPath(&unk_1000D7500, v115);
  v118 = swift_getKeyPath(&unk_1000D7528, v117);
  static Published.subscript.getter(v186, v114, v116, v118);
  swift_release(v114);
  swift_release(v116);
  swift_release(v118);
  LODWORD(v114) = v186[0];
  v119 = swift_release(v111);
  if ((_DWORD)v114 == 1)
    v120 = 0.0;
  else
    v120 = 1.0;
  v121 = static UnitPoint.center.getter(v119);
  v123 = v122;
  v124 = qword_10011C690;
  v125 = StateObject.wrappedValue.getter(*v15, v15[1], *((unsigned __int8 *)v15 + 16), v109, v110);
  v126 = *(_QWORD *)(v125 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_previewController + 24);
  v127 = *(_QWORD *)(v125 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_previewController + 32);
  sub_10000C9C8((_QWORD *)(v125 + OBJC_IVAR____TtC16MusicRecognition28SongPreviewPlaybackViewModel_previewController), v126);
  v128 = (*(uint64_t (**)(uint64_t, uint64_t))(v127 + 8))(v126, v127);
  v130 = swift_getKeyPath(&unk_1000D7500, v129);
  v132 = swift_getKeyPath(&unk_1000D7528, v131);
  static Published.subscript.getter(v186, v128, v130, v132);
  swift_release(v128);
  swift_release(v130);
  swift_release(v132);
  LODWORD(v128) = v186[0];
  swift_release(v125);
  v133 = (_DWORD)v128 == 1;
  *(_DWORD *)((char *)&v181 + 1) = *(_DWORD *)v175;
  DWORD1(v181) = *(_DWORD *)&v175[3];
  v134 = (void (*)(_QWORD, _QWORD, _QWORD))v159;
  v136 = v161;
  v135 = v162;
  *(_QWORD *)&v179 = v159;
  *((_QWORD *)&v179 + 1) = v162;
  LOBYTE(v180) = v158;
  DWORD1(v180) = *(_DWORD *)&v177[3];
  *(_DWORD *)((char *)&v180 + 1) = *(_DWORD *)v177;
  *((_QWORD *)&v180 + 1) = v161;
  v137 = (char)v157;
  LOBYTE(v181) = (_BYTE)v157;
  v139 = v155;
  v138 = v156;
  *((_QWORD *)&v181 + 1) = v156;
  *(_QWORD *)&v182 = v155;
  *((_QWORD *)&v182 + 1) = v99;
  *(_QWORD *)&v183 = 0;
  *((double *)&v183 + 1) = v108;
  *(double *)&v184 = v120;
  *((double *)&v184 + 1) = v120;
  *(double *)v185 = v121;
  *((_QWORD *)&v185[0] + 1) = v123;
  *(_QWORD *)&v185[1] = v124;
  BYTE8(v185[1]) = (_DWORD)v128 == 1;
  *(_OWORD *)&v186[112] = *(_OWORD *)((char *)v185 + 9);
  *(_OWORD *)&v186[103] = v185[0];
  *(_OWORD *)&v186[87] = v184;
  *(_OWORD *)&v186[71] = v183;
  *(_OWORD *)&v186[7] = v179;
  *(_OWORD *)&v186[23] = v180;
  *(_OWORD *)&v186[55] = v182;
  v178 = v158;
  v140 = v158;
  v176 = (char)v157;
  *(_DWORD *)v193 = *(_DWORD *)v177;
  *(_DWORD *)&v193[3] = *(_DWORD *)&v177[3];
  *(_DWORD *)v196 = *(_DWORD *)v175;
  *(_DWORD *)&v196[3] = *(_DWORD *)&v175[3];
  v190 = v167;
  v188 = v166;
  *(_OWORD *)&v186[39] = v181;
  v141 = v167;
  v142 = *(_DWORD *)v189;
  *(_DWORD *)(a2 + 20) = *(_DWORD *)&v189[3];
  *(_DWORD *)(a2 + 17) = v142;
  LOBYTE(v142) = v188;
  v143 = *(_DWORD *)v187;
  *(_DWORD *)(a2 + 36) = *(_DWORD *)&v187[3];
  *(_DWORD *)(a2 + 33) = v143;
  v144 = v171;
  v145 = v172;
  *(_QWORD *)a2 = v172;
  *(_QWORD *)(a2 + 8) = v144;
  *(_BYTE *)(a2 + 16) = v141;
  *(_QWORD *)(a2 + 24) = v170;
  *(_BYTE *)(a2 + 32) = v142;
  v146 = v168;
  *(_QWORD *)(a2 + 40) = v169;
  *(_QWORD *)(a2 + 48) = v146;
  *(double *)(a2 + 56) = v76;
  *(double *)(a2 + 64) = v75;
  v147 = v163;
  *(double *)(a2 + 72) = v75;
  *(double *)(a2 + 80) = v147;
  *(_QWORD *)(a2 + 88) = v61;
  v148 = v164;
  *(_QWORD *)(a2 + 96) = v164;
  *(_BYTE *)(a2 + 104) = v160;
  v149 = *(_OWORD *)v186;
  v150 = *(_OWORD *)&v186[16];
  v151 = *(_OWORD *)&v186[32];
  *(_OWORD *)(a2 + 153) = *(_OWORD *)&v186[48];
  *(_OWORD *)(a2 + 137) = v151;
  *(_OWORD *)(a2 + 121) = v150;
  *(_OWORD *)(a2 + 105) = v149;
  v152 = *(_OWORD *)&v186[64];
  v153 = *(_OWORD *)&v186[80];
  v154 = *(_OWORD *)&v186[96];
  *(_OWORD *)(a2 + 217) = *(_OWORD *)&v186[112];
  *(_OWORD *)(a2 + 201) = v154;
  *(_OWORD *)(a2 + 185) = v153;
  *(_OWORD *)(a2 + 169) = v152;
  v191[0] = v134;
  v191[1] = v135;
  v192 = v140;
  v194 = v136;
  v195 = v137;
  v197 = v138;
  v198 = v139;
  v199 = v99;
  v200 = 0;
  v201 = v108;
  v202 = v120;
  v203 = v120;
  v204 = v121;
  v205 = v123;
  v206 = v124;
  v207 = v133;
  swift_retain(v145);
  swift_retain(v148);
  sub_1000B2188((uint64_t *)&v179);
  swift_retain(v124);
  sub_1000B21BC(v191);
  swift_release(v148);
  swift_release(v145);
}

uint64_t sub_1000B1A40(double *a1, uint64_t a2)
{
  double v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  double v15;

  v2 = *a1;
  v3 = (uint64_t *)(a2 + *(int *)(type metadata accessor for SongPreviewPlaybackView(0) + 20));
  v4 = *v3;
  v5 = v3[1];
  v6 = *((unsigned __int8 *)v3 + 16);
  v7 = type metadata accessor for SongPreviewPlaybackViewModel(0);
  v8 = sub_100004864(&qword_10011C780, type metadata accessor for SongPreviewPlaybackViewModel, (uint64_t)&unk_1000D68B0);
  v9 = StateObject.wrappedValue.getter(v4, v5, v6, v7, v8);
  KeyPath = swift_getKeyPath(&unk_1000D75C0, v10);
  v13 = swift_getKeyPath(&unk_1000D75E8, v12);
  v15 = v2 * 0.3;
  return static Published.subscript.setter(&v15, v9, KeyPath, v13);
}

void sub_1000B1B18(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  *a2 = static Alignment.center.getter(a1);
  a2[1] = v4;
  v5 = sub_100004F7C(&qword_10011C740);
  sub_1000B0110(v2, (double *)((char *)a2 + *(int *)(v5 + 44)));
}

uint64_t sub_1000B1B60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SongPreviewPlaybackView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000B1BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SongPreviewPlaybackView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_1000B1BEC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SongPreviewPlaybackView(0) - 8) + 80);
  return sub_1000B0B5C(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_1000B1C18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1000B0C2C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1000B1C20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011C788;
  if (!qword_10011C788)
  {
    v1 = sub_1000050C8(&qword_1001189B0);
    sub_1000B1C8C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011C788);
  }
  return result;
}

unint64_t sub_1000B1C8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011C790;
  if (!qword_10011C790)
  {
    v1 = sub_1000050C8(&qword_1001189A8);
    sub_10000522C(&qword_10011C798, &qword_10011C7A0, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    sub_100004864((unint64_t *)&qword_100116570, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011C790);
  }
  return result;
}

double sub_1000B1D30@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, double *a3@<X8>)
{
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  double result;
  double v9;

  v4 = *a1;
  KeyPath = swift_getKeyPath(&unk_1000D75C0, a2);
  v7 = swift_getKeyPath(&unk_1000D75E8, v6);
  static Published.subscript.getter(&v9, v4, KeyPath, v7);
  swift_release(KeyPath);
  swift_release(v7);
  result = v9;
  *a3 = v9;
  return result;
}

uint64_t sub_1000B1DAC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1000D75C0, a2);
  v6 = swift_getKeyPath(&unk_1000D75E8, v5);
  v8 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v8, v3, KeyPath, v6);
}

unint64_t sub_1000B1E34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011C7A8;
  if (!qword_10011C7A8)
  {
    v1 = sub_1000050C8(&qword_10011C760);
    sub_1000B1EB8();
    sub_10000522C(&qword_100118900, &qword_100118908, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011C7A8);
  }
  return result;
}

unint64_t sub_1000B1EB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011C7B0;
  if (!qword_10011C7B0)
  {
    v1 = sub_1000050C8(&qword_10011C758);
    sub_1000B1F3C();
    sub_10000522C(&qword_10011A0E8, &qword_10011A0F0, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011C7B0);
  }
  return result;
}

unint64_t sub_1000B1F3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011C7B8;
  if (!qword_10011C7B8)
  {
    v1 = sub_1000050C8(&qword_10011C750);
    sub_10000522C(&qword_10011C7C0, &qword_10011C748, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_10000522C(&qword_100117908, &qword_100117910, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011C7B8);
  }
  return result;
}

uint64_t sub_1000B1FDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = type metadata accessor for SongPreviewPlaybackView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (_QWORD *)(v0 + v4);
  v7 = sub_100004F7C(&qword_1001166A8);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v7) == 1)
  {
    v8 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
  }
  else
  {
    swift_release(*v6);
  }
  sub_1000AFA60(*(_QWORD *)((char *)v6 + *(int *)(v1 + 20)), *(_QWORD *)((char *)v6 + *(int *)(v1 + 20) + 8));
  v9 = (_QWORD *)((char *)v6 + *(int *)(v1 + 24));
  if (*v9)
    swift_release(v9[1]);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1000B20A8(double *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SongPreviewPlaybackView(0) - 8) + 80);
  return sub_1000B1A40(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_1000B20E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004F7C(&qword_10011C778);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1000B2134(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[2];
  v3 = a1[14];
  v4 = a1[30];
  swift_release(a1[16]);
  swift_release(v2);
  swift_release(v3);
  swift_release(v4);
  return a1;
}

uint64_t *sub_1000B2188(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  swift_retain(a1[14]);
  swift_retain(v2);
  return a1;
}

_QWORD *sub_1000B21BC(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[14];
  swift_release(*a1);
  swift_release(v2);
  return a1;
}

ValueMetadata *type metadata accessor for PreviewButtonWidthPreferenceKey()
{
  return &type metadata for PreviewButtonWidthPreferenceKey;
}

uint64_t sub_1000B2200()
{
  return sub_10000522C(&qword_10011C7F8, &qword_10011C800, (uint64_t)&protocol conformance descriptor for ZStack<A>);
}

unint64_t sub_1000B222C(uint64_t a1)
{
  unint64_t result;

  result = sub_1000B2250();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1000B2250()
{
  unint64_t result;

  result = qword_10011C808[0];
  if (!qword_10011C808[0])
  {
    result = swift_getWitnessTable(&unk_1000D7630, &type metadata for PreviewButtonWidthPreferenceKey);
    atomic_store(result, qword_10011C808);
  }
  return result;
}

_QWORD *sub_1000B2294(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v55;

  v2 = v1;
  v4 = sub_100004F7C(&qword_100117528);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v55 - v8;
  v10 = v1 + 4;
  v11 = v1[7];
  v12 = v1[8];
  sub_10000C9C8(v1 + 4, v11);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
  v13 = type metadata accessor for Date(0);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48);
  v15 = v14(v9, 1, v13);
  sub_100068DE8((uint64_t)v9);
  if (v15 == 1 || sub_1000ACBF8(0, a1))
  {
    v16 = _swiftEmptyArrayStorage;
  }
  else
  {
    v16 = sub_100049728(0, 1, 1, _swiftEmptyArrayStorage);
    v18 = v16[2];
    v17 = v16[3];
    if (v18 >= v17 >> 1)
      v16 = sub_100049728((_QWORD *)(v17 > 1), v18 + 1, 1, v16);
    v16[2] = v18 + 1;
    *((_BYTE *)v16 + v18 + 32) = 0;
  }
  v19 = v2[7];
  v20 = v2[8];
  sub_10000C9C8(v10, v19);
  (*(void (**)(uint64_t, uint64_t))(v20 + 16))(v19, v20);
  v22 = v21;
  swift_bridgeObjectRelease(v21);
  if (v22 && !sub_1000ACBF8(1u, a1))
  {
    if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
      v16 = sub_100049728(0, v16[2] + 1, 1, v16);
    v24 = v16[2];
    v23 = v16[3];
    if (v24 >= v23 >> 1)
      v16 = sub_100049728((_QWORD *)(v23 > 1), v24 + 1, 1, v16);
    v16[2] = v24 + 1;
    *((_BYTE *)v16 + v24 + 32) = 1;
  }
  v25 = v2[7];
  v26 = v2[8];
  sub_10000C9C8(v10, v25);
  (*(void (**)(uint64_t, uint64_t))(v26 + 40))(v25, v26);
  v28 = v27;
  swift_bridgeObjectRelease(v27);
  if (v28 && !sub_1000ACBF8(2u, a1))
  {
    if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
      v16 = sub_100049728(0, v16[2] + 1, 1, v16);
    v30 = v16[2];
    v29 = v16[3];
    if (v30 >= v29 >> 1)
      v16 = sub_100049728((_QWORD *)(v29 > 1), v30 + 1, 1, v16);
    v16[2] = v30 + 1;
    *((_BYTE *)v16 + v30 + 32) = 2;
  }
  v31 = v2[7];
  v32 = v2[8];
  sub_10000C9C8(v10, v31);
  (*(void (**)(uint64_t, uint64_t))(v32 + 48))(v31, v32);
  v34 = v33;
  swift_bridgeObjectRelease(v33);
  if (v34 && !sub_1000ACBF8(3u, a1))
  {
    if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
      v16 = sub_100049728(0, v16[2] + 1, 1, v16);
    v36 = v16[2];
    v35 = v16[3];
    if (v36 >= v35 >> 1)
      v16 = sub_100049728((_QWORD *)(v35 > 1), v36 + 1, 1, v16);
    v16[2] = v36 + 1;
    *((_BYTE *)v16 + v36 + 32) = 3;
  }
  v37 = v2[7];
  v38 = v2[8];
  sub_10000C9C8(v10, v37);
  (*(void (**)(uint64_t, uint64_t))(v38 + 24))(v37, v38);
  v39 = v14(v7, 1, v13);
  sub_100068DE8((uint64_t)v7);
  if (v39 != 1 && !sub_1000ACBF8(4u, a1))
  {
    if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
      v16 = sub_100049728(0, v16[2] + 1, 1, v16);
    v41 = v16[2];
    v40 = v16[3];
    if (v41 >= v40 >> 1)
      v16 = sub_100049728((_QWORD *)(v40 > 1), v41 + 1, 1, v16);
    v16[2] = v41 + 1;
    *((_BYTE *)v16 + v41 + 32) = 4;
  }
  v42 = v2[7];
  v43 = v2[8];
  sub_10000C9C8(v10, v42);
  (*(void (**)(uint64_t, uint64_t))(v43 + 64))(v42, v43);
  v45 = v44;
  swift_bridgeObjectRelease(v44);
  if (v45 && !sub_1000ACBF8(5u, a1))
  {
    if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
      v16 = sub_100049728(0, v16[2] + 1, 1, v16);
    v47 = v16[2];
    v46 = v16[3];
    if (v47 >= v46 >> 1)
      v16 = sub_100049728((_QWORD *)(v46 > 1), v47 + 1, 1, v16);
    v16[2] = v47 + 1;
    *((_BYTE *)v16 + v47 + 32) = 5;
  }
  v49 = v2[7];
  v48 = v2[8];
  sub_10000C9C8(v10, v49);
  (*(void (**)(uint64_t, uint64_t))(v48 + 56))(v49, v48);
  v51 = v50;
  swift_bridgeObjectRelease(v50);
  if (v51 && !sub_1000ACBF8(6u, a1))
  {
    if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
      v16 = sub_100049728(0, v16[2] + 1, 1, v16);
    v53 = v16[2];
    v52 = v16[3];
    if (v53 >= v52 >> 1)
      v16 = sub_100049728((_QWORD *)(v52 > 1), v53 + 1, 1, v16);
    v16[2] = v53 + 1;
    *((_BYTE *)v16 + v53 + 32) = 6;
  }
  return v16;
}

uint64_t destroy for SongMetadataViewModel(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  _s16MusicRecognition11AnyPlaylistVwxx_0(a1 + 4);
  return swift_bridgeObjectRelease(a1[9]);
}

uint64_t initializeWithCopy for SongMetadataViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = a2 + 32;
  v7 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v7;
  v8 = v7;
  v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  v9(a1 + 32, v6, v8);
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v10;
  swift_bridgeObjectRetain(v10);
  return a1;
}

uint64_t assignWithCopy for SongMetadataViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  sub_100012EA4((_QWORD *)(a1 + 32), (_QWORD *)(a2 + 32));
  v8 = *(_QWORD *)(a2 + 72);
  v9 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  return a1;
}

uint64_t assignWithTake for SongMetadataViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease(v6);
  _s16MusicRecognition11AnyPlaylistVwxx_0((_QWORD *)(a1 + 32));
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  v8 = *(_QWORD *)(a2 + 72);
  v9 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease(v9);
  return a1;
}

ValueMetadata *type metadata accessor for SongMetadataViewModel()
{
  return &type metadata for SongMetadataViewModel;
}

void sub_1000B2A1C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  v6[0] = "\b";
  v2 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 80));
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v6[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    sub_100070170(319);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      swift_initClassMetadata2(a1, 0, 4, v6, a1 + 96);
    }
  }
}

uint64_t sub_1000B2AC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  _QWORD v6[2];
  _QWORD v7[3];
  uint64_t v8;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  v7[0] = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v1 = v7[0];
  v7[1] = v2;
  KeyPath = swift_getKeyPath(&unk_1000D7748, v7);
  v6[0] = v1;
  v6[1] = v2;
  v4 = swift_getKeyPath(&unk_1000D7780, v6);
  static Published.subscript.getter(&v8, v0, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  return v8;
}

uint64_t sub_1000B2B48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[2];
  _QWORD v9[3];
  uint64_t v10;

  v4 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  v9[0] = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v3 = v9[0];
  v9[1] = v4;
  KeyPath = swift_getKeyPath(&unk_1000D7748, v9);
  v8[0] = v3;
  v8[1] = v4;
  v6 = swift_getKeyPath(&unk_1000D7780, v8);
  v10 = a1;
  swift_retain(v1);
  return static Published.subscript.setter(&v10, v1, KeyPath, v6);
}

uint64_t sub_1000B2BD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _QWORD *v21;
  uint64_t v22;

  v2 = type metadata accessor for MusicPlayer.Queue.Entry(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100004F7C(&qword_10011B188);
  __chkstk_darwin(v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100004F7C(&qword_10011B190);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = dispatch thunk of SystemMusicPlayer.queue.getter(v10);
  dispatch thunk of MusicPlayer.Queue.currentEntry.getter();
  v14 = swift_release(v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v3 + 48))(v8, 1, v2, v14))
  {
    v15 = &qword_10011B188;
    v16 = (uint64_t)v8;
LABEL_5:
    result = sub_10000526C(v16, v15);
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    return result;
  }
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
  v17 = sub_10000526C((uint64_t)v8, &qword_10011B188);
  MusicPlayer.Queue.Entry.item.getter(v17);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v18 = type metadata accessor for MusicPlayer.Queue.Entry.Item(0);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v12, 1, v18) == 1)
  {
    v15 = &qword_10011B190;
    v16 = (uint64_t)v12;
    goto LABEL_5;
  }
  *(_QWORD *)(a1 + 24) = v18;
  *(_QWORD *)(a1 + 32) = &protocol witness table for MusicPlayer.Queue.Entry.Item;
  v21 = sub_1000446F4((_QWORD *)a1);
  return (*(uint64_t (**)(_QWORD *, char *, uint64_t))(v19 + 32))(v21, v12, v18);
}

void sub_1000B2DB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  int v27;
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;

  v1 = v0;
  v2 = *(_QWORD *)v0;
  v3 = type metadata accessor for MusicPlayer.PlaybackStatus(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v29[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B2BD4((uint64_t)v29);
  v7 = v30;
  if (v30)
  {
    v8 = v31;
    sub_10000C9C8(v29, v30);
    v9 = dispatch thunk of MusicItem.id.getter(v7, v8);
    v11 = v10;
    _s16MusicRecognition11AnyPlaylistVwxx_0(v29);
  }
  else
  {
    sub_10000526C((uint64_t)v29, &qword_10011C890);
    v9 = 0;
    v11 = 0;
  }
  v12 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 104);
  v13 = *(_QWORD *)(v2 + 80);
  v14 = *(_QWORD *)(v2 + 88);
  v15 = dispatch thunk of MusicItem.id.getter(v13, *(_QWORD *)(v14 + 8));
  v17 = v16;
  if (!v11)
  {
    swift_bridgeObjectRelease(v16);
    goto LABEL_12;
  }
  if (v9 == v15 && v11 == v16)
  {
    swift_bridgeObjectRelease(v11);
    v20 = swift_bridgeObjectRelease(v17);
    goto LABEL_15;
  }
  v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v11, v15, v16, 0);
  swift_bridgeObjectRelease(v11);
  v20 = swift_bridgeObjectRelease(v17);
  if ((v19 & 1) == 0)
  {
LABEL_12:
    v21 = sub_100004F7C(&qword_10011C898);
    v22 = swift_allocObject(v21, 72, 7);
    *(_OWORD *)(v22 + 16) = xmmword_1000D1CC0;
    *(_QWORD *)(v22 + 56) = v13;
    *(_QWORD *)(v22 + 64) = v14;
    v23 = sub_1000446F4((_QWORD *)(v22 + 32));
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v23, v12, v13);
    type metadata accessor for MusicPlayer.Queue(0);
    v24 = dispatch thunk of MusicPlayer.Queue.__allocating_init(arrayLiteral:)(v22);
    dispatch thunk of SystemMusicPlayer.queue.setter(v24);
    goto LABEL_13;
  }
LABEL_15:
  v25 = MusicPlayer.state.getter(v20);
  dispatch thunk of MusicPlayer.State.playbackStatus.getter();
  v26 = swift_release(v25);
  v27 = (*(uint64_t (**)(char *, uint64_t, __n128))(v4 + 88))(v6, v3, v26);
  if (v27 == enum case for MusicPlayer.PlaybackStatus.stopped(_:))
    return;
  if (v27 == enum case for MusicPlayer.PlaybackStatus.playing(_:))
    goto LABEL_19;
  if (v27 == enum case for MusicPlayer.PlaybackStatus.paused(_:))
  {
LABEL_13:
    sub_1000B3050(v1);
    return;
  }
  if (v27 == enum case for MusicPlayer.PlaybackStatus.interrupted(_:))
  {
LABEL_19:
    dispatch thunk of MusicPlayer.pause()();
    return;
  }
  if (v27 != enum case for MusicPlayer.PlaybackStatus.seekingForward(_:)
    && v27 != enum case for MusicPlayer.PlaybackStatus.seekingBackward(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

double sub_1000B3050(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  double result;
  uint64_t v11;

  v2 = sub_100004F7C(&qword_100116D98);
  __chkstk_darwin(v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  type metadata accessor for MainActor(0);
  swift_retain(a1);
  v7 = static MainActor.shared.getter(v6);
  v8 = (_QWORD *)swift_allocObject(&unk_10010DB28, 40, 7);
  v8[2] = v7;
  v8[3] = &protocol witness table for MainActor;
  v8[4] = a1;
  v9 = sub_1000A9F18((uint64_t)v4, (uint64_t)&unk_10011C8A8, (uint64_t)v8);
  *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  return result;
}

uint64_t sub_1000B312C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[3] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[4] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[5] = v6;
  v4[6] = v7;
  return swift_task_switch(sub_1000B3198, v6, v7);
}

uint64_t sub_1000B3198()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  v3 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of MusicPlayer.play()
                         + async function pointer to dispatch thunk of MusicPlayer.play());
  v1 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of MusicPlayer.play() + 1));
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_1000B3200;
  return v3();
}

uint64_t sub_1000B3200()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 56);
  *(_QWORD *)(*v1 + 64) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1000B3260;
  else
    v4 = sub_1000482F4;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_1000B3260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  swift_release(*(_QWORD *)(v0 + 32));
  if (qword_100115DD8 != -1)
    swift_once(&qword_100115DD8, sub_10000C418);
  v1 = *(_QWORD *)(v0 + 64);
  v2 = type metadata accessor for Logger(0);
  sub_10000B5E8(v2, (uint64_t)qword_100124478);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 64);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    swift_errorRetain(v7);
    v10 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v0 + 16) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v8 + 4, v8 + 12);
    *v9 = v10;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Error playing: %@", v8, 0xCu);
    v11 = sub_100004F7C((uint64_t *)&unk_100116E50);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 64));
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

char *sub_1000B3434()
{
  char *v0;
  uint64_t v1;
  __n128 v2;
  char *v3;
  uint64_t v4;

  v1 = *(_QWORD *)v0;
  v2 = swift_release(*((_QWORD *)v0 + 2));
  (*(void (**)(char *, __n128))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))(&v0[*(_QWORD *)(*(_QWORD *)v0 + 104)], v2);
  swift_release(*(_QWORD *)&v0[*(_QWORD *)(*(_QWORD *)v0 + 112)]);
  v3 = &v0[*(_QWORD *)(*(_QWORD *)v0 + 120)];
  v4 = sub_100004F7C(&qword_10011A358);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t sub_1000B34B4()
{
  uint64_t v0;

  sub_1000B3434();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t type metadata accessor for SongPreviewAppleMusicPlaybackController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100018E38(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SongPreviewAppleMusicPlaybackController);
}

uint64_t sub_1000B34E4()
{
  return sub_1000B2AC0();
}

void sub_1000B3504()
{
  sub_1000B2DB0();
}

uint64_t sub_1000B3524()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000B3550(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10011C8A4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000101B8;
  return sub_1000B312C(a1, v4, v5, v6);
}

uint64_t sub_1000B35BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1000B2AC0();
  *a1 = result;
  return result;
}

uint64_t sub_1000B35E4(_QWORD *a1)
{
  uint64_t v1;

  swift_retain(*a1);
  return sub_1000B2B48(v1);
}

uint64_t sub_1000B360C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1000B2AC0();
  *a1 = result;
  return result;
}

uint64_t sub_1000B3634(_QWORD *a1)
{
  uint64_t v1;

  swift_retain(*a1);
  return sub_1000B2B48(v1);
}

uint64_t sub_1000B365C()
{
  return 16;
}

__n128 sub_1000B3668(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

double sub_1000B3674()
{
  return 0.0;
}

uint64_t sub_1000B367C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  void (*v13)(char *, uint64_t);
  void (*v14)(char *, uint64_t);
  Swift::String v15;
  uint64_t v16;
  Swift::String v17;
  Swift::String v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  Swift::String v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Swift::String v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  Swift::String v31;
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *);
  unsigned int v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);

  v56 = type metadata accessor for _AssistantIntent.PhraseToken(0);
  v0 = *(_QWORD *)(v56 - 8);
  __chkstk_darwin(v56);
  v2 = (char *)&v44 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100004F7C(&qword_10011C8C0);
  v4 = __chkstk_darwin(v3);
  v50 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v7 = (char *)&v44 - v6;
  v8 = sub_100004F7C(&qword_10011C8C8);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000169A8();
  _AssistantIntent.Phrase.init(stringLiteral:)(0x7A696E676F636552, 0xEF636973754D2065, &type metadata for RecognizeMusicIntent, v12);
  v52 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v11, &type metadata for RecognizeMusicIntent, v12);
  v13 = *(void (**)(char *, uint64_t))(v9 + 8);
  v13(v11, v8);
  v14 = v13;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 1, &type metadata for RecognizeMusicIntent, v12);
  v15._countAndFlagsBits = 0xD000000000000015;
  v15._object = (void *)0x80000001000DCAB0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  v55 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  v54 = *(void (**)(char *))(v0 + 104);
  v16 = v56;
  v54(v2);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v2, v3);
  v57 = *(void (**)(char *, uint64_t))(v0 + 8);
  v57(v2, v16);
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for RecognizeMusicIntent, v12);
  v51 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v11, &type metadata for RecognizeMusicIntent, v12);
  v53 = v8;
  v44 = v14;
  v14(v11, v8);
  _AssistantIntent.Phrase.init(stringLiteral:)(0x796669746E656449, 0xEE00636973754D20, &type metadata for RecognizeMusicIntent, v12);
  v49 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v11, &type metadata for RecognizeMusicIntent, v12);
  v14(v11, v8);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 1, &type metadata for RecognizeMusicIntent, v12);
  v18._countAndFlagsBits = 0xD000000000000014;
  v18._object = (void *)0x80000001000DCAD0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  v19 = v55;
  v20 = (void (*)(char *, uint64_t, uint64_t))v54;
  ((void (*)(char *, _QWORD, uint64_t))v54)(v2, v55, v16);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v2, v3);
  v57(v2, v16);
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for RecognizeMusicIntent, v12);
  v48 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v11, &type metadata for RecognizeMusicIntent, v12);
  v22 = v53;
  v23 = v44;
  v44(v11, v53);
  _AssistantIntent.Phrase.init(stringLiteral:)(0x754D20686374614DLL, 0xEB00000000636973, &type metadata for RecognizeMusicIntent, v12);
  v47 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v11, &type metadata for RecognizeMusicIntent, v12);
  v23(v11, v22);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(17, 1, &type metadata for RecognizeMusicIntent, v12);
  v24._object = (void *)0x80000001000DCAF0;
  v24._countAndFlagsBits = 0xD000000000000011;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  v25 = v19;
  v26 = v56;
  v20(v2, v25, v56);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v2, v3);
  v27 = v26;
  v57(v2, v26);
  v28._countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for RecognizeMusicIntent, v12);
  v46 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v11, &type metadata for RecognizeMusicIntent, v12);
  v23(v11, v22);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000012, 0x80000001000DCB10, &type metadata for RecognizeMusicIntent, v12);
  v45 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v11, &type metadata for RecognizeMusicIntent, v12);
  v23(v11, v22);
  v29 = v23;
  v30 = v50;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(5, 1, &type metadata for RecognizeMusicIntent, v12);
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  ((void (*)(char *, _QWORD, uint64_t))v54)(v2, v55, v27);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v2, v3);
  v57(v2, v27);
  v32._countAndFlagsBits = 0x7369687420;
  v32._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v30, &type metadata for RecognizeMusicIntent, v12);
  v33 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v11, &type metadata for RecognizeMusicIntent, v12);
  v34 = v53;
  v23(v11, v53);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000017, 0x80000001000DCB30, &type metadata for RecognizeMusicIntent, v12);
  v35 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v11, &type metadata for RecognizeMusicIntent, v12);
  v23(v11, v34);
  _AssistantIntent.Phrase.init(stringLiteral:)(0x676E6973206F6857, 0xEF3F736968742073, &type metadata for RecognizeMusicIntent, v12);
  v36 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v11, &type metadata for RecognizeMusicIntent, v12);
  v29(v11, v34);
  v37 = sub_100004F7C(&qword_10011C8D0);
  v38 = swift_allocObject(v37, 112, 7);
  *(_OWORD *)(v38 + 16) = xmmword_1000D7800;
  v39 = v51;
  *(_QWORD *)(v38 + 32) = v52;
  *(_QWORD *)(v38 + 40) = v39;
  v40 = v48;
  *(_QWORD *)(v38 + 48) = v49;
  *(_QWORD *)(v38 + 56) = v40;
  v41 = v46;
  *(_QWORD *)(v38 + 64) = v47;
  *(_QWORD *)(v38 + 72) = v41;
  *(_QWORD *)(v38 + 80) = v45;
  *(_QWORD *)(v38 + 88) = v33;
  *(_QWORD *)(v38 + 96) = v35;
  *(_QWORD *)(v38 + 104) = v36;
  v42 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v38);
  return v42;
}

void sub_1000B3CE0()
{
  qword_100124810 = (uint64_t)&_swiftEmptyArrayStorage;
}

uint64_t sub_1000B3CF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];

  v0 = type metadata accessor for _AssistantIntent(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[0] = sub_10001D340();
  v11[1] = v4;
  v5 = sub_1000169A8();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(v11, sub_1000B367C, 0, &j___s10AppIntents16_AssistantIntentV21ParameterValueBuilderO10buildBlockSayAC0F0VGyFZ, 0, &type metadata for RecognizeMusicIntent, v5);
  v6 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v7 = sub_100004F7C(&qword_10011C8B8);
  v8 = swift_allocObject(v7, 40, 7);
  *(_OWORD *)(v8 + 16) = xmmword_1000D1CC0;
  *(_QWORD *)(v8 + 32) = v6;
  v9 = static _AssistantIntent.Builder.buildBlock(_:)();
  swift_bridgeObjectRelease(v8);
  return v9;
}

uint64_t sub_1000B3DF0()
{
  if (qword_100116328 != -1)
    swift_once(&qword_100116328, sub_1000B3CE0);
  return swift_bridgeObjectRetain(qword_100124810);
}

ValueMetadata *type metadata accessor for MusicRecognitonIntents()
{
  return &type metadata for MusicRecognitonIntents;
}

unint64_t sub_1000B3E40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100004F7C(&qword_10011C968);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v7 = *(v6 - 3);
    v8 = *(v6 - 2);
    v10 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    result = sub_10009D490(v7, v8);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v4[6] + 16 * result);
    *v13 = v7;
    v13[1] = v8;
    v14 = (_QWORD *)(v4[7] + 16 * result);
    *v14 = v10;
    v14[1] = v9;
    v15 = v4[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v6 += 4;
    v4[2] = v17;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000B3F60(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100004F7C(&qword_10011B860);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_100007C8C(v7, (uint64_t)&v16, &qword_10011C970);
    v8 = v16;
    v9 = v17;
    result = sub_10009D490(v16, v17);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v8;
    v12[1] = v9;
    result = (unint64_t)sub_1000968CC(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 48;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000B4094(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t result;
  char v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = sub_100004F7C(&qword_100119088);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v26 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v26);
    return (unint64_t)v8;
  }
  sub_100004F7C(&qword_100119090);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = (char *)v5 + *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v28 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_100007C8C(v13, (uint64_t)v5, &qword_100119088);
    v15 = *v5;
    v16 = v5[1];
    result = sub_10009D490(*v5, v16);
    if ((v18 & 1) != 0)
      break;
    v19 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v20 = (uint64_t *)(v8[6] + 16 * result);
    *v20 = v15;
    v20[1] = v16;
    v21 = v8[7];
    v22 = type metadata accessor for Playlist(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v19, v10, v22);
    v23 = v8[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_12;
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v26 = v28;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1000B4234(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void **v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100004F7C(&qword_10011C978);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (void **)(a1 + 48);
  while (1)
  {
    v7 = (uint64_t)*(v6 - 2);
    v8 = (uint64_t)*(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    v10 = v9;
    result = sub_10009D490(v7, v8);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v4[6] + 16 * result);
    *v13 = v7;
    v13[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v10;
    v14 = v4[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v4[2] = v16;
    v6 += 3;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000B434C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100004F7C(&qword_10011C958);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_100007C8C(v7, (uint64_t)&v14, &qword_10011C960);
    v8 = v14;
    result = sub_10009D560(v14);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v4[6] + 8 * result) = v8;
    result = (unint64_t)sub_1000968CC(&v15, (_OWORD *)(v4[7] + 32 * result));
    v11 = v4[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4[2] = v13;
    v7 += 40;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id sub_1000B4478(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  Swift::String v6;
  Swift::String v7;
  void *object;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  Swift::String v18;
  Swift::String v19;
  void *v20;
  NSString v21;
  void *v23;
  uint64_t v24;
  Swift::String v25;
  Swift::String v26;

  v2 = v1;
  v4 = (void *)objc_opt_self(NSBundle);
  v5 = objc_msgSend(v4, "mainBundle");
  v25._object = (void *)0xE000000000000000;
  v6._object = (void *)0x80000001000DC6A0;
  v6._countAndFlagsBits = 0xD00000000000001ELL;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v25._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v25)._object;

  if (a1)
  {
    v24 = a1;
    swift_errorRetain(a1);
    v9 = sub_100004F7C(&qword_1001174D8);
    v10 = sub_100010498(0, (unint64_t *)&qword_1001196A8, NSError_ptr);
    if ((swift_dynamicCast(&v23, &v24, v9, v10, 6) & 1) != 0)
    {
      v11 = v23;
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSURLErrorDomain);
      v14 = v13;
      v15 = sub_10005BA60((uint64_t)&off_100107B08);
      v16 = (void *)sub_1000AC948(v12, v14, v15);
      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease(v15);
      if (v16)
      {
        swift_bridgeObjectRelease(object);

        v17 = objc_msgSend(v4, "mainBundle");
        v18._countAndFlagsBits = 0xD000000000000023;
        v26._object = (void *)0xE000000000000000;
        v18._object = (void *)0x80000001000DC6F0;
        v19._countAndFlagsBits = 0;
        v19._object = (void *)0xE000000000000000;
        v26._countAndFlagsBits = 0;
        object = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v26)._object;

      }
    }
  }
  v20 = *(void **)(v2 + OBJC_IVAR____TtC16MusicRecognition18AmbientNoMatchView_titleLabel);
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v20, "setText:", v21);

  return objc_msgSend(v20, "setNeedsDisplay");
}

id sub_1000B4698()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.470588235, 0.470588235, 0.501960784, 0.36);
  qword_10011C8D8 = (uint64_t)result;
  return result;
}

id sub_1000B46EC(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  char *v7;
  objc_class *ObjectType;
  uint64_t v13;
  id v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  objc_super v20;

  v7 = v6;
  ObjectType = (objc_class *)swift_getObjectType(v6, a6);
  v13 = OBJC_IVAR____TtC16MusicRecognition18AmbientNoMatchView_retryButton;
  v14 = objc_allocWithZone((Class)UIButton);
  v15 = v6;
  *(_QWORD *)&v7[v13] = objc_msgSend(v14, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v16 = OBJC_IVAR____TtC16MusicRecognition18AmbientNoMatchView_titleLabel;
  *(_QWORD *)&v15[v16] = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v17 = OBJC_IVAR____TtC16MusicRecognition18AmbientNoMatchView_stackView;
  *(_QWORD *)&v15[v17] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);

  v20.receiver = v15;
  v20.super_class = ObjectType;
  v18 = objc_msgSendSuper2(&v20, "initWithFrame:", a1, a2, a3, a4);
  sub_1000B4828();

  return v18;
}

uint64_t sub_1000B4828()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  id v27;
  char *v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t inited;
  void *v37;
  NSString *v38;
  char *v39;
  id v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  char *v49;
  void *v50;
  char *v51;
  NSString v52;
  id v53;
  id v54;
  id v55;
  Swift::String v56;
  Swift::String v57;
  void *v58;
  void *object;
  NSString v60;
  NSString v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  uint64_t v76;
  _QWORD *v77;
  Class isa;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  id v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96[80];
  _QWORD *v97;
  Swift::String v98;

  v1 = sub_100004F7C(&qword_10011A9B0);
  __chkstk_darwin(v1);
  v89 = (char *)&v80 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100004F7C(&qword_10011C920);
  __chkstk_darwin(v3);
  v90 = (char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for AttributeContainer(0);
  v87 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v86 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for AttributedString.FormattingOptions(0);
  __chkstk_darwin(v84);
  v83 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100004F7C(&qword_10011C928);
  __chkstk_darwin(v7);
  v82 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v81 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for AttributedString(0);
  v92 = *(_QWORD *)(v11 - 8);
  v93 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for UIButton.Configuration.CornerStyle(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for UIButton.Configuration(0);
  v19 = *(_QWORD *)(v18 - 8);
  v94 = v18;
  v95 = v19;
  __chkstk_darwin(v18);
  v21 = (char *)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v22 = *(void **)&v0[OBJC_IVAR____TtC16MusicRecognition18AmbientNoMatchView_stackView];
  objc_msgSend(v22, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v0, "addSubview:", v22);
  v23 = *(void **)&v0[OBJC_IVAR____TtC16MusicRecognition18AmbientNoMatchView_titleLabel];
  objc_msgSend(v22, "addArrangedSubview:", v23);
  v91 = v0;
  v24 = *(void **)&v0[OBJC_IVAR____TtC16MusicRecognition18AmbientNoMatchView_retryButton];
  objc_msgSend(v22, "addArrangedSubview:", v24);
  objc_msgSend(v22, "setCustomSpacing:afterView:", v23, 21.0);
  objc_msgSend(v22, "setAxis:", 1);
  objc_msgSend(v22, "setDistribution:", 0);
  objc_msgSend(v22, "setAlignment:", 3);
  v25 = v24;
  static UIButton.Configuration.filled()(objc_msgSend(v24, "setTranslatesAutoresizingMaskIntoConstraints:", 0));
  v85 = (id)objc_opt_self(UIColor);
  UIButton.Configuration.baseForegroundColor.setter(objc_msgSend(v85, "whiteColor"));
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v14);
  UIButton.Configuration.cornerStyle.setter(v17);
  if (qword_100116330 != -1)
    swift_once(&qword_100116330, sub_1000B4698);
  v26 = qword_10011C8D8;
  v27 = (id)qword_10011C8D8;
  UIButton.Configuration.baseBackgroundColor.setter(v26);
  v28 = v81;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000026, 0x80000001000DCBA0);
  v29 = type metadata accessor for Locale(0);
  v30 = v82;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v82, 1, 1, v29);
  v97 = _swiftEmptyArrayStorage;
  v31 = sub_1000B5414();
  v32 = sub_100004F7C(&qword_10011C938);
  v33 = sub_1000B545C();
  v34 = v83;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v97, v32, v33, v84, v31);
  AttributedString.init(localized:options:table:bundle:locale:comment:)(v28, v34, 0, 0, 0, v30, 0, 0, 256);
  v35 = sub_100004F7C(&qword_10011C948);
  inited = swift_initStackObject(v35, v96);
  *(_OWORD *)(inited + 16) = xmmword_1000D1CC0;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v37 = (void *)objc_opt_self(UIFont);
  v38 = NSFontAttributeName;
  v39 = v21;
  v40 = objc_msgSend(v37, "systemFontOfSize:weight:", 34.0, UIFontWeightSemibold);
  *(_QWORD *)(inited + 64) = sub_100010498(0, &qword_10011C950, UIFont_ptr);
  *(_QWORD *)(inited + 40) = v40;
  v41 = sub_1000B434C(inited);
  v42 = v86;
  AttributeContainer.init(_:)(v41);
  AttributedString.setAttributes(_:)(v42);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v42, v88);
  v44 = v92;
  v43 = v93;
  v45 = v90;
  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v90, v13, v93);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v45, 0, 1, v43);
  UIButton.Configuration.attributedTitle.setter(v45);
  v46 = v94;
  v47 = v95;
  v48 = *(void (**)(char *, char *, uint64_t))(v95 + 16);
  v49 = v89;
  v90 = v39;
  v48(v89, v39, v94);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v49, 0, 1, v46);
  UIButton.configuration.setter(v49);
  v50 = v25;
  if (qword_1001161C0 != -1)
    swift_once(&qword_1001161C0, sub_100080594);
  v51 = v13;
  v52 = String._bridgeToObjectiveC()();
  objc_msgSend(v50, "setAccessibilityIdentifier:", v52);

  objc_msgSend(v23, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v53 = objc_msgSend(v37, "systemFontOfSize:weight:", 62.0, UIFontWeightSemibold);
  objc_msgSend(v23, "setFont:", v53);

  v54 = objc_msgSend(v85, "whiteColor");
  objc_msgSend(v23, "setTextColor:", v54);

  v55 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v98._object = (void *)0xE000000000000000;
  v56._object = (void *)0x80000001000DC6A0;
  v56._countAndFlagsBits = 0xD00000000000001ELL;
  v57._countAndFlagsBits = 0;
  v57._object = (void *)0xE000000000000000;
  v98._countAndFlagsBits = 0;
  v58 = v50;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v56, (Swift::String_optional)0, (NSBundle)v55, v57, v98)._object;

  v60 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v23, "setText:", v60);

  if (qword_1001161B8 != -1)
    swift_once(&qword_1001161B8, sub_100080564);
  v61 = String._bridgeToObjectiveC()();
  objc_msgSend(v23, "setAccessibilityIdentifier:", v61);

  v62 = (void *)objc_opt_self(NSLayoutConstraint);
  v63 = sub_100004F7C(&qword_100116D90);
  v64 = swift_allocObject(v63, 64, 7);
  *(_OWORD *)(v64 + 16) = xmmword_1000D1CE0;
  v65 = objc_msgSend(v22, "centerXAnchor");
  v66 = v91;
  v67 = objc_msgSend(v91, "centerXAnchor");
  v68 = objc_msgSend(v65, "constraintEqualToAnchor:", v67);

  *(_QWORD *)(v64 + 32) = v68;
  v69 = objc_msgSend(v22, "centerYAnchor");
  v70 = objc_msgSend(v66, "centerYAnchor");
  v71 = objc_msgSend(v69, "constraintEqualToAnchor:constant:", v70, -13.0);

  *(_QWORD *)(v64 + 40) = v71;
  v72 = objc_msgSend(v58, "heightAnchor");
  v73 = objc_msgSend(v72, "constraintEqualToConstant:", 76.0);

  *(_QWORD *)(v64 + 48) = v73;
  v74 = objc_msgSend(v58, "widthAnchor");
  v75 = objc_msgSend(v74, "constraintEqualToConstant:", 234.0);

  *(_QWORD *)(v64 + 56) = v75;
  v97 = (_QWORD *)v64;
  specialized Array._endMutation()(v76);
  v77 = v97;
  sub_100010498(0, (unint64_t *)&qword_1001177E0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v77);
  objc_msgSend(v62, "activateConstraints:", isa);

  (*(void (**)(char *, uint64_t))(v92 + 8))(v51, v93);
  return (*(uint64_t (**)(char *, uint64_t))(v95 + 8))(v90, v94);
}

id sub_1000B525C(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  objc_super v15;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v6 = OBJC_IVAR____TtC16MusicRecognition18AmbientNoMatchView_retryButton;
  v7 = objc_allocWithZone((Class)UIButton);
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v9 = OBJC_IVAR____TtC16MusicRecognition18AmbientNoMatchView_titleLabel;
  *(_QWORD *)&v8[v9] = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v10 = OBJC_IVAR____TtC16MusicRecognition18AmbientNoMatchView_stackView;
  *(_QWORD *)&v8[v10] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);

  v15.receiver = v8;
  v15.super_class = ObjectType;
  v11 = objc_msgSendSuper2(&v15, "initWithCoder:", a1);
  v12 = v11;
  if (v11)
  {
    v13 = v11;
    sub_1000B4828();

  }
  return v12;
}

uint64_t type metadata accessor for AmbientNoMatchView()
{
  return objc_opt_self(_TtC16MusicRecognition18AmbientNoMatchView);
}

unint64_t sub_1000B5414()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011C930;
  if (!qword_10011C930)
  {
    v1 = type metadata accessor for AttributedString.FormattingOptions(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for AttributedString.FormattingOptions, v1);
    atomic_store(result, (unint64_t *)&qword_10011C930);
  }
  return result;
}

unint64_t sub_1000B545C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011C940;
  if (!qword_10011C940)
  {
    v1 = sub_1000050C8(&qword_10011C938);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10011C940);
  }
  return result;
}

ValueMetadata *type metadata accessor for SongPlaybackView()
{
  return &type metadata for SongPlaybackView;
}

uint64_t sub_1000B54B8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000DF458, 1);
}

void sub_1000B54C8()
{
  qword_10011C980 = 3028656112;
  *(_QWORD *)algn_10011C988 = 0xA400000000000000;
}

uint64_t sub_1000B54E4()
{
  uint64_t result;

  result = static Font.title3.getter();
  qword_10011C990 = result;
  return result;
}

void sub_1000B5500()
{
  qword_10011C998 = static Font.Weight.regular.getter();
}

uint64_t sub_1000B551C()
{
  uint64_t result;

  result = static Font.title.getter();
  qword_10011C9A0 = result;
  return result;
}

uint64_t sub_1000B5538()
{
  id v0;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "tertiaryLabelColor");
  result = Color.init(uiColor:)(v0);
  qword_10011C9A8 = result;
  return result;
}

uint64_t sub_1000B5574@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t KeyPath;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  __n128 v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  double v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(char *, char *, uint64_t);
  char *v104;
  char *v105;
  char *v106;
  char *v107;
  void (*v108)(char *, uint64_t, __n128);
  __n128 v109;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  char *v127;
  unint64_t v128;
  char *v129;
  uint64_t v130;
  _QWORD v131[4];
  uint64_t v132;
  uint64_t v133;
  char v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char v138;

  v127 = a2;
  v124 = type metadata accessor for Image.Scale(0);
  v123 = *(_QWORD *)(v124 - 8);
  __chkstk_darwin(v124);
  v122 = (char *)&v111 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = type metadata accessor for Text.Suffix(0);
  v113 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v112 = (char *)&v111 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = sub_100004F7C(&qword_10011C9B8);
  v119 = *(_QWORD *)(v121 - 8);
  __chkstk_darwin(v121);
  v118 = (char *)&v111 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = sub_100004F7C(&qword_10011C9C0);
  __chkstk_darwin(v120);
  v7 = (char *)&v111 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = sub_100004F7C(&qword_10011C9C8);
  v130 = *(_QWORD *)(v126 - 8);
  v8 = __chkstk_darwin(v126);
  v125 = (char *)&v111 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v117 = (char *)&v111 - v11;
  __chkstk_darwin(v10);
  v129 = (char *)&v111 - v12;
  v115 = *(_QWORD *)a1;
  v116 = *(_QWORD *)(a1 + 8);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_BYTE *)(a1 + 32);
  v132 = *(_QWORD *)(a1 + 16);
  v133 = v13;
  v15 = sub_10000B110();
  swift_bridgeObjectRetain(v13);
  v128 = v15;
  v16 = Text.init<A>(_:)(&v132, &type metadata for String, v15);
  v18 = v17;
  v20 = v19;
  v22 = v21;
  if (qword_100116350 != -1)
    swift_once(&qword_100116350, sub_1000B551C);
  v23 = v20 & 1;
  v24 = Text.font(_:)(qword_10011C9A0, v16, v18, v23, v22);
  v26 = v25;
  v28 = v27;
  v30 = v29;
  sub_10000B64C(v16, v18, v23);
  swift_bridgeObjectRelease(v22);
  KeyPath = swift_getKeyPath(&unk_1000D78F8, v31);
  v132 = v24;
  v133 = v26;
  v134 = v28 & 1;
  v135 = v30;
  v136 = KeyPath;
  v137 = 3;
  v138 = 0;
  if ((v14 & 1) != 0)
  {
    if (qword_100116338 != -1)
      swift_once(&qword_100116338, sub_1000B54C8);
    v131[0] = qword_10011C980;
    v131[1] = *(_QWORD *)algn_10011C988;
    swift_bridgeObjectRetain(*(_QWORD *)algn_10011C988);
    v34 = Text.init<A>(_:)(v131, &type metadata for String, v128);
    v36 = v35;
    v38 = v37;
    v40 = v39;
    if (qword_100116358 != -1)
      swift_once(&qword_100116358, sub_1000B5538);
    v41 = v38 & 1;
    v42 = Text.foregroundColor(_:)(qword_10011C9A8, v34, v36, v38 & 1, v40);
    v44 = v43;
    v46 = v45;
    v48 = v47 & 1;
    sub_10000B64C(v34, v36, v41);
    v49 = swift_bridgeObjectRelease(v40);
    v50 = static Font.title2.getter(v49);
    v51 = Text.font(_:)(v50, v42, v44, v48, v46);
    v53 = v52;
    v55 = v54;
    v57 = v56;
    swift_release(v50);
    sub_10000B64C(v42, v44, v48);
    swift_bridgeObjectRelease(v46);
    v33 = v112;
    static Text.Suffix.alwaysVisible(_:)(v51, v53, v55 & 1, v57);
    sub_10000B64C(v51, v53, v55 & 1);
    swift_bridgeObjectRelease(v57);
  }
  else
  {
    v33 = v112;
    static Text.Suffix.none.getter();
  }
  v58 = v126;
  v59 = sub_100004F7C(&qword_100116F30);
  v60 = sub_100011FD8();
  v61 = v118;
  View.textSuffix(_:)(v33, v59, v60);
  (*(void (**)(char *, uint64_t))(v113 + 8))(v33, v114);
  sub_10000B64C(v132, v133, v134);
  swift_bridgeObjectRelease(v135);
  v62 = swift_release(v136);
  v63 = v123;
  v64 = v122;
  v65 = v124;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v123 + 104))(v122, enum case for Image.Scale.small(_:), v124, v62);
  v67 = swift_getKeyPath(&unk_1000D7928, v66);
  v68 = v120;
  v69 = (uint64_t *)&v7[*(int *)(v120 + 36)];
  v70 = sub_100004F7C(&qword_10011C9D0);
  (*(void (**)(char *, char *, uint64_t))(v63 + 16))((char *)v69 + *(int *)(v70 + 28), v64, v65);
  *v69 = v67;
  v71 = v119;
  v72 = v121;
  (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v7, v61, v121);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v65);
  v73 = (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v61, v72);
  v74 = static Font.Weight.bold.getter(v73);
  sub_1000B5EEC();
  v75 = v117;
  View.fontWeight(_:)(*(_QWORD *)&v74, 0, v68);
  sub_10000526C((uint64_t)v7, &qword_10011C9C0);
  v76 = v130;
  v77 = v58;
  (*(void (**)(char *, char *, uint64_t))(v130 + 32))(v129, v75, v58);
  v132 = v115;
  v133 = v116;
  swift_bridgeObjectRetain(v116);
  v78 = Text.init<A>(_:)(&v132, &type metadata for String, v128);
  v80 = v79;
  v82 = v81;
  v84 = v83;
  if (qword_100116340 != -1)
    swift_once(&qword_100116340, sub_1000B54E4);
  v85 = v82 & 1;
  v86 = Text.font(_:)(qword_10011C990, v78, v80, v82 & 1, v84);
  v88 = v87;
  v90 = v89;
  v92 = v91;
  sub_10000B64C(v78, v80, v85);
  swift_bridgeObjectRelease(v84);
  if (qword_100116348 != -1)
    swift_once(&qword_100116348, sub_1000B5500);
  v93 = v90 & 1;
  v94 = Text.fontWeight(_:)(qword_10011C998, 0, v86, v88, v90 & 1, v92);
  v96 = v95;
  v98 = v97;
  v100 = v99 & 1;
  sub_10000B64C(v86, v88, v93);
  swift_bridgeObjectRelease(v92);
  v102 = swift_getKeyPath(&unk_1000D78F8, v101);
  v103 = *(void (**)(char *, char *, uint64_t))(v76 + 16);
  v104 = v125;
  v105 = v129;
  v103(v125, v129, v77);
  v106 = v127;
  v103(v127, v104, v77);
  v107 = &v106[*(int *)(sub_100004F7C(&qword_10011C9E8) + 48)];
  *(_QWORD *)v107 = v94;
  *((_QWORD *)v107 + 1) = v96;
  v107[16] = v100;
  *((_QWORD *)v107 + 3) = v98;
  *((_QWORD *)v107 + 4) = v102;
  *((_QWORD *)v107 + 5) = 2;
  v107[48] = 0;
  sub_100025480(v94, v96, v100);
  v108 = *(void (**)(char *, uint64_t, __n128))(v130 + 8);
  swift_bridgeObjectRetain(v98);
  v109 = swift_retain(v102);
  v108(v105, v77, v109);
  sub_10000B64C(v94, v96, v100);
  swift_release(v102);
  swift_bridgeObjectRelease(v98);
  return ((uint64_t (*)(char *, uint64_t))v108)(v104, v77);
}

uint64_t sub_1000B5D44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD v20[2];
  char v21;

  v3 = sub_100004F7C(&qword_1001189B8);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_OWORD *)(v1 + 16);
  v20[0] = *(_OWORD *)v1;
  v20[1] = v7;
  v21 = *(_BYTE *)(v1 + 32);
  *(_QWORD *)v6 = static HorizontalAlignment.leading.getter(v4, v8, v9, v10, v11, v12, v13, v14);
  *((_QWORD *)v6 + 1) = 0x4014000000000000;
  v6[16] = 0;
  v15 = sub_100004F7C(&qword_10011C9B0);
  v16 = sub_1000B5574((uint64_t)v20, &v6[*(int *)(v15 + 44)]);
  v17 = static Alignment.leading.getter(v16);
  sub_100034B40(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a1, 0.0, 1, 0.0, 1, v17, v18);
  return sub_10000526C((uint64_t)v6, &qword_1001189B8);
}

uint64_t sub_1000B5E4C()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_1000B5E6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for Image.Scale(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.imageScale.setter(v4);
}

unint64_t sub_1000B5EEC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10011C9D8;
  if (!qword_10011C9D8)
  {
    v1 = sub_1000050C8(&qword_10011C9C0);
    v2[0] = sub_1000050C8(&qword_100116F30);
    v2[1] = sub_100011FD8();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.textSuffix(_:)>>, 1);
    sub_10000522C(&qword_10011C9E0, &qword_10011C9D0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011C9D8);
  }
  return result;
}

unint64_t sub_1000B5F9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011C9F0;
  if (!qword_10011C9F0)
  {
    v1 = sub_1000050C8(&qword_1001189C0);
    sub_10000522C(qword_10011C9F8, &qword_1001189B8, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011C9F0);
  }
  return result;
}

uint64_t sub_1000B6034(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1000B6054(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

uint64_t type metadata accessor for WeakContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100018E38(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WeakContainer);
}

uint64_t sub_1000B6088@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a7;
  v25 = a9;
  v26 = a5;
  v23 = a1;
  v24 = a3;
  v13 = type metadata accessor for CoordinateSpace(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for SizeModifier(0, a6, a8, v17);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (uint64_t *)((char *)&v23 - v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a2, v13);
  sub_10006E638(v23, (uint64_t)v16, v24, a4, a6, a8, v21);
  swift_retain(a4);
  View.modifier<A>(_:)(v21, v26, v18, v27);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v19 + 8))(v21, v18);
}

uint64_t destroy for MusicRecognitionLifeCycle(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
}

uint64_t _s16MusicRecognition25MusicRecognitionLifeCycleVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for MusicRecognitionLifeCycle(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t assignWithTake for MusicRecognitionLifeCycle(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

ValueMetadata *type metadata accessor for MusicRecognitionLifeCycle()
{
  return &type metadata for MusicRecognitionLifeCycle;
}

uint64_t getEnumTagSinglePayload for MusicRecognitionLifeCycle.OriginType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF5)
    goto LABEL_17;
  if (a2 + 11 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 11) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 11;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 11;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 11;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v8 = v6 - 12;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MusicRecognitionLifeCycle.OriginType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1000B6388 + 4 * byte_1000D79E5[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1000B63BC + 4 * asc_1000D79E0[v4]))();
}

uint64_t sub_1000B63BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000B63C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000B63CCLL);
  return result;
}

uint64_t sub_1000B63D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000B63E0);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1000B63E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000B63EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MusicRecognitionLifeCycle.OriginType()
{
  return &type metadata for MusicRecognitionLifeCycle.OriginType;
}

uint64_t sub_1000B6408()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10000C484(v0, qword_10011CA80);
  sub_10000B5E8(v0, (uint64_t)qword_10011CA80);
  return Logger.init(subsystem:category:)(0xD00000000000001ALL, 0x80000001000DCBD0, 0x636974796C616E61, 0xE900000000000073);
}

uint64_t sub_1000B6480(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1000B64B8 + 4 * byte_1000D79EA[a1]))(0xD000000000000011, 0x80000001000D8C90);
}

uint64_t sub_1000B64B8()
{
  return 0x6572616873;
}

uint64_t sub_1000B64CC()
{
  return 0x6973754D6E65706FLL;
}

uint64_t sub_1000B64EC()
{
  return 2036427888;
}

uint64_t sub_1000B64FC()
{
  return 0x7265764F6E65706FLL;
}

uint64_t sub_1000B651C()
{
  return 0x726968546E65706FLL;
}

uint64_t sub_1000B6540()
{
  return 0x7A6168536E65706FLL;
}

uint64_t sub_1000B655C()
{
  return 0x64616F6C6E776F64;
}

uint64_t sub_1000B6574()
{
  return 0x62694C6F54646461;
}

uint64_t sub_1000B6594()
{
  return 0x73616C436E65706FLL;
}

uint64_t sub_1000B65B8()
{
  return 0x616C506F54646461;
}

uint64_t sub_1000B65DC()
{
  return 0x6374614D6E65706FLL;
}

uint64_t sub_1000B665C()
{
  return 0x74726F53706174;
}

uint64_t sub_1000B6688(char a1)
{
  return *(_QWORD *)&aControlcaction[8 * a1];
}

uint64_t sub_1000B66A8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1000B6824(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1000B6480);
}

Swift::Int sub_1000B66B4(uint64_t a1, uint64_t a2)
{
  return sub_1000B68BC(a1, a2, (uint64_t (*)(uint64_t))sub_1000B6480);
}

uint64_t sub_1000B66C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000B692C(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1000B6480);
}

Swift::Int sub_1000B66CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000B6978(a1, a2, a3, (uint64_t (*)(uint64_t))sub_1000B6480);
}

uint64_t sub_1000B66D8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_1000B73A8(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_1000B6704@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1000B6480(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1000B672C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1000B6824(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1000B6688);
}

Swift::Int sub_1000B6738(uint64_t a1, uint64_t a2)
{
  return sub_1000B68BC(a1, a2, (uint64_t (*)(uint64_t))sub_1000B6688);
}

uint64_t sub_1000B6744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000B692C(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1000B6688);
}

Swift::Int sub_1000B6750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000B6978(a1, a2, a3, (uint64_t (*)(uint64_t))sub_1000B6688);
}

unint64_t sub_1000B675C@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1000B73F8(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1000B6788@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1000B6688(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1000B67B4()
{
  unint64_t result;

  result = qword_10011CA98;
  if (!qword_10011CA98)
  {
    result = swift_getWitnessTable(&unk_1000D7AE0, &type metadata for MusicRecognitionLifeCycle.OriginType);
    atomic_store(result, (unint64_t *)&qword_10011CA98);
  }
  return result;
}

uint64_t sub_1000B67F8(char a1)
{
  return *(_QWORD *)&aControlcaction_0[8 * a1];
}

uint64_t sub_1000B6818(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1000B6824(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1000B67F8);
}

uint64_t sub_1000B6824(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;

  v6 = *a2;
  v7 = a5(*a1);
  v9 = v8;
  v10 = a5(v6);
  if (v7 == v10 && v9 == v11)
  {
    v14 = 1;
    v13 = v9;
  }
  else
  {
    v13 = v11;
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
  }
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v13);
  return v14 & 1;
}

Swift::Int sub_1000B68B0(uint64_t a1, uint64_t a2)
{
  return sub_1000B68BC(a1, a2, (uint64_t (*)(uint64_t))sub_1000B67F8);
}

Swift::Int sub_1000B68BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  unsigned __int8 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[9];

  v5 = *v3;
  Hasher.init(_seed:)(v10);
  v6 = a3(v5);
  v8 = v7;
  String.hash(into:)(v10, v6, v7);
  swift_bridgeObjectRelease(v8);
  return Hasher._finalize()();
}

uint64_t sub_1000B6920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000B692C(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1000B67F8);
}

uint64_t sub_1000B692C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  unsigned __int8 *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = a4(*v4);
  v8 = v7;
  String.hash(into:)(a1, v6, v7);
  return swift_bridgeObjectRelease(v8);
}

Swift::Int sub_1000B696C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000B6978(a1, a2, a3, (uint64_t (*)(uint64_t))sub_1000B67F8);
}

Swift::Int sub_1000B6978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  unsigned __int8 *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[9];

  v6 = *v4;
  Hasher.init(_seed:)(v11);
  v7 = a4(v6);
  v9 = v8;
  String.hash(into:)(v11, v7, v8);
  swift_bridgeObjectRelease(v9);
  return Hasher._finalize()();
}

unint64_t sub_1000B69D8@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1000B78E8(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1000B6A04@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1000B67F8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t *sub_1000B6A2C(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  unint64_t *v2;
  char v3;
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  size_t v7;
  unint64_t *v8;
  void *v9;
  uint64_t v11;

  v2 = (unint64_t *)isStackAllocationSafe;
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = v3 & 0x3F;
  v5 = (1 << v3) + 63;
  v6 = v5 >> 6;
  v7 = 8 * (v5 >> 6);
  if (v4 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v5 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    v8 = sub_1000B6D98((unint64_t *)((char *)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, (uint64_t)v2);
    if (v1)
      swift_willThrow(v8);
    else
      return v8;
  }
  else
  {
    v9 = (void *)swift_slowAlloc(v7, -1);
    bzero(v9, v7);
    v2 = sub_1000B6D98((unint64_t *)v9, v6, (uint64_t)v2);
    swift_slowDealloc(v9, -1, -1);
  }
  return v2;
}

uint64_t sub_1000B6B7C(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_100004F7C(&qword_10011CAA0);
  result = static _DictionaryStorage.copy(original:)(a1);
  v3 = (_QWORD *)result;
  v4 = 0;
  v28 = a1;
  v7 = *(_QWORD *)(a1 + 64);
  v6 = a1 + 64;
  v5 = v7;
  v8 = 1 << *(_BYTE *)(v6 - 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v5;
  v25 = v6;
  v26 = (unint64_t)(v8 + 63) >> 6;
  v27 = result + 64;
  if ((v9 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(v28 + 48) + 16 * i);
    v17 = *v16;
    v18 = v16[1];
    v19 = *(_QWORD *)(*(_QWORD *)(v28 + 56) + 16 * i + 8);
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v19);
    v20 = String._bridgeToObjectiveC()();
    result = swift_bridgeObjectRelease(v19);
    *(_QWORD *)(v27 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v21 = (_QWORD *)(v3[6] + 16 * i);
    *v21 = v17;
    v21[1] = v18;
    *(_QWORD *)(v3[7] + 8 * i) = v20;
    v22 = v3[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v24;
    if (v10)
      goto LABEL_4;
LABEL_5:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v13 >= v26)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v25 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v26)
        return (uint64_t)v3;
      v14 = *(_QWORD *)(v25 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v26)
          return (uint64_t)v3;
        v14 = *(_QWORD *)(v25 + 8 * v4);
        if (!v14)
          break;
      }
    }
LABEL_18:
    v10 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v26)
    return (uint64_t)v3;
  v14 = *(_QWORD *)(v25 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v26)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v25 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t *sub_1000B6D98(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v4 = 0;
  v5 = 0;
  v6 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (v9)
  {
    v11 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v12 = v11 | (v5 << 6);
LABEL_5:
    v13 = (uint64_t *)(*(_QWORD *)(a3 + 56) + 16 * v12);
    v15 = *v13;
    v14 = v13[1];
    v16 = v15 & 0xFFFFFFFFFFFFLL;
    if ((v14 & 0x2000000000000000) != 0)
      v17 = HIBYTE(v14) & 0xF;
    else
      v17 = v16;
    if (v17)
    {
      *(unint64_t *)((char *)result + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v4++, 1))
      {
        __break(1u);
        return (unint64_t *)sub_1000B6EF4(result, a2, v4, a3);
      }
    }
  }
  v18 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v18 >= v10)
    return (unint64_t *)sub_1000B6EF4(result, a2, v4, a3);
  v19 = *(_QWORD *)(v6 + 8 * v18);
  ++v5;
  if (v19)
    goto LABEL_23;
  v5 = v18 + 1;
  if (v18 + 1 >= v10)
    return (unint64_t *)sub_1000B6EF4(result, a2, v4, a3);
  v19 = *(_QWORD *)(v6 + 8 * v5);
  if (v19)
    goto LABEL_23;
  v5 = v18 + 2;
  if (v18 + 2 >= v10)
    return (unint64_t *)sub_1000B6EF4(result, a2, v4, a3);
  v19 = *(_QWORD *)(v6 + 8 * v5);
  if (v19)
  {
LABEL_23:
    v9 = (v19 - 1) & v19;
    v12 = __clz(__rbit64(v19)) + (v5 << 6);
    goto LABEL_5;
  }
  v20 = v18 + 3;
  if (v20 >= v10)
    return (unint64_t *)sub_1000B6EF4(result, a2, v4, a3);
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v5 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v5 >= v10)
      return (unint64_t *)sub_1000B6EF4(result, a2, v4, a3);
    v19 = *(_QWORD *)(v6 + 8 * v5);
    ++v20;
    if (v19)
      goto LABEL_23;
  }
LABEL_29:
  __break(1u);
  return result;
}

Swift::Int sub_1000B6EF4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  Swift::Int result;
  Swift::Int v9;
  unint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  unint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[9];

  if (!a3)
    return (Swift::Int)&_swiftEmptyDictionarySingleton;
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain(a4);
    return v4;
  }
  sub_100004F7C(&qword_10011C968);
  result = static _DictionaryStorage.allocate(capacity:)(v5);
  v9 = result;
  v39 = a1;
  v40 = a2;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v41 = v11;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_40;
      if (v15 >= v40)
        return v9;
      v16 = v39[v15];
      v17 = v11 + 1;
      if (!v16)
      {
        v17 = v11 + 2;
        if (v11 + 2 >= v40)
          return v9;
        v16 = v39[v17];
        if (!v16)
        {
          v17 = v11 + 3;
          if (v11 + 3 >= v40)
            return v9;
          v16 = v39[v17];
          if (!v16)
          {
            v18 = v11 + 4;
            if (v11 + 4 >= v40)
              return v9;
            v16 = v39[v18];
            if (!v16)
            {
              while (1)
              {
                v17 = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_41;
                if (v17 >= v40)
                  return v9;
                v16 = v39[v17];
                ++v18;
                if (v16)
                  goto LABEL_24;
              }
            }
            v17 = v11 + 4;
          }
        }
      }
LABEL_24:
      v10 = (v16 - 1) & v16;
      v41 = v17;
      v14 = __clz(__rbit64(v16)) + (v17 << 6);
    }
    v19 = 16 * v14;
    v20 = v4;
    v21 = (uint64_t *)(*(_QWORD *)(v4 + 48) + v19);
    v23 = *v21;
    v22 = v21[1];
    v24 = (uint64_t *)(*(_QWORD *)(v4 + 56) + v19);
    v25 = *v24;
    v26 = v24[1];
    Hasher.init(_seed:)(v42);
    swift_bridgeObjectRetain(v22);
    swift_bridgeObjectRetain(v26);
    String.hash(into:)(v42, v23, v22);
    result = Hasher._finalize()();
    v27 = -1 << *(_BYTE *)(v9 + 32);
    v28 = result & ~v27;
    v29 = v28 >> 6;
    if (((-1 << v28) & ~*(_QWORD *)(v12 + 8 * (v28 >> 6))) != 0)
    {
      v30 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v12 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v33 = v29 == v32;
        if (v29 == v32)
          v29 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v12 + 8 * v29);
      }
      while (v34 == -1);
      v30 = __clz(__rbit64(~v34)) + (v29 << 6);
    }
    *(_QWORD *)(v12 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
    v35 = 16 * v30;
    v36 = (_QWORD *)(*(_QWORD *)(v9 + 48) + v35);
    *v36 = v23;
    v36[1] = v22;
    v37 = (_QWORD *)(*(_QWORD *)(v9 + 56) + v35);
    *v37 = v25;
    v37[1] = v26;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    v4 = v20;
    v11 = v41;
    if (!v5)
      return v9;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1000B71B0(unsigned __int8 a1, unsigned __int8 a2, char a3)
{
  int v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t *v16;
  uint64_t v17;
  _BYTE v19[128];

  v6 = a2;
  v7 = sub_100004F7C((uint64_t *)&unk_100119770);
  inited = swift_initStackObject(v7, v19);
  *(_OWORD *)(inited + 16) = xmmword_1000D2320;
  *(_QWORD *)(inited + 32) = 0x6E6F69746341;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  *(_QWORD *)(inited + 48) = sub_1000B6480(a1);
  *(_QWORD *)(inited + 56) = v9;
  *(_QWORD *)(inited + 64) = 0x6E696769726FLL;
  *(_QWORD *)(inited + 72) = 0xE600000000000000;
  if (v6 == 12)
  {
    v10 = 0;
    v11 = 0xE000000000000000;
  }
  else
  {
    v10 = sub_1000B6688(a2);
  }
  *(_QWORD *)(inited + 80) = v10;
  *(_QWORD *)(inited + 88) = v11;
  *(_QWORD *)(inited + 96) = 0x7265626D656DLL;
  *(_QWORD *)(inited + 104) = 0xE600000000000000;
  v12 = 48;
  if ((a3 & 1) != 0)
    v12 = 49;
  if (a3 == 2)
    v13 = 0;
  else
    v13 = v12;
  v14 = 0xE100000000000000;
  if (a3 == 2)
    v14 = 0xE000000000000000;
  *(_QWORD *)(inited + 112) = v13;
  *(_QWORD *)(inited + 120) = v14;
  v15 = sub_1000B3E40(inited);
  v16 = sub_1000B6A2C(v15);
  swift_bridgeObjectRelease(v15);
  v17 = sub_1000B6B7C((uint64_t)v16);
  swift_release(v16);
  return v17;
}

uint64_t sub_1000B72D4(char a1, char a2)
{
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t *v10;
  uint64_t v11;
  _BYTE v13[96];

  v4 = sub_100004F7C((uint64_t *)&unk_100119770);
  inited = swift_initStackObject(v4, v13);
  v6 = inited;
  *(_OWORD *)(inited + 16) = xmmword_1000D32A0;
  *(_QWORD *)(inited + 32) = 0x686374614DLL;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  v7 = 48;
  if ((a1 & 1) != 0)
    v7 = 49;
  *(_QWORD *)(inited + 48) = v7;
  *(_QWORD *)(inited + 56) = 0xE100000000000000;
  *(_QWORD *)(inited + 64) = 0x6E696769726FLL;
  *(_QWORD *)(inited + 72) = 0xE600000000000000;
  *(_QWORD *)(inited + 80) = sub_1000B67F8(a2);
  *(_QWORD *)(v6 + 88) = v8;
  v9 = sub_1000B3E40(v6);
  v10 = sub_1000B6A2C(v9);
  swift_bridgeObjectRelease(v9);
  v11 = sub_1000B6B7C((uint64_t)v10);
  swift_release(v10);
  return v11;
}

uint64_t sub_1000B73A8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = _findStringSwitchCaseWithCache(cases:string:cache:)(&off_100107C78, a1, a2, &unk_1001163D0);
  swift_bridgeObjectRelease(a2);
  if (v3 >= 0x13)
    return 19;
  else
    return v3;
}

unint64_t sub_1000B73F8(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100107E60, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 0xC)
    return 12;
  else
    return v3;
}

uint64_t sub_1000B7444(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_WORD *)a1 = *(_WORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for MatchLifeCycle(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t assignWithTake for MatchLifeCycle(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t _s16MusicRecognition25MusicRecognitionLifeCycleVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1000B7550(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MatchLifeCycle()
{
  return &type metadata for MatchLifeCycle;
}

uint64_t getEnumTagSinglePayload for MusicRecognitionLifeCycle.ActionType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEE)
    goto LABEL_17;
  if (a2 + 18 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 18) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 18;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 18;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 18;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x13;
  v8 = v6 - 19;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MusicRecognitionLifeCycle.ActionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 18 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 18) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xED)
    return ((uint64_t (*)(void))((char *)&loc_1000B767C + 4 * byte_1000D7A02[v4]))();
  *a1 = a2 + 18;
  return ((uint64_t (*)(void))((char *)sub_1000B76B0 + 4 * byte_1000D79FD[v4]))();
}

uint64_t sub_1000B76B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000B76B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000B76C0);
  return result;
}

uint64_t sub_1000B76CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000B76D4);
  *(_BYTE *)result = a2 + 18;
  return result;
}

uint64_t sub_1000B76D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000B76E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MusicRecognitionLifeCycle.ActionType()
{
  return &type metadata for MusicRecognitionLifeCycle.ActionType;
}

unint64_t sub_1000B7700()
{
  unint64_t result;

  result = qword_10011CAA8;
  if (!qword_10011CAA8)
  {
    result = swift_getWitnessTable(&unk_1000D7BAC, &type metadata for MusicRecognitionLifeCycle.ActionType);
    atomic_store(result, (unint64_t *)&qword_10011CAA8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MatchLifeCycle.OriginType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MatchLifeCycle.OriginType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1000B7820 + 4 * byte_1000D7A0C[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1000B7854 + 4 * byte_1000D7A07[v4]))();
}

uint64_t sub_1000B7854(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000B785C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000B7864);
  return result;
}

uint64_t sub_1000B7870(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000B7878);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1000B787C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000B7884(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MatchLifeCycle.OriginType()
{
  return &type metadata for MatchLifeCycle.OriginType;
}

unint64_t sub_1000B78A4()
{
  unint64_t result;

  result = qword_10011CAB0;
  if (!qword_10011CAB0)
  {
    result = swift_getWitnessTable(&unk_1000D7C5C, &type metadata for MatchLifeCycle.OriginType);
    atomic_store(result, (unint64_t *)&qword_10011CAB0);
  }
  return result;
}

unint64_t sub_1000B78E8(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100107FA0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 0xA)
    return 10;
  else
    return v3;
}

uint64_t sub_1000B793C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t KeyPath;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[16];
  uint64_t v19;
  _BYTE *v20;
  _BYTE v21[16];
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;

  v3 = v2;
  v6 = sub_100004F7C((uint64_t *)&unk_100118CE0);
  v7 = __chkstk_darwin(v6);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v11 = &v18[-v10];
  sub_100008944(a1, (uint64_t)&v18[-v10]);
  KeyPath = swift_getKeyPath(&unk_1000D7E28, v12);
  v22 = v3;
  v23 = v11;
  v24 = v3;
  v14 = sub_1000B7FE0();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v24, KeyPath, sub_1000B7FC0, v21, (char *)&type metadata for () + 8, v14);
  swift_release(KeyPath);
  sub_100007B24((uint64_t)v11);
  sub_100008944(a2, (uint64_t)v11);
  sub_100008944((uint64_t)v11, (uint64_t)v9);
  v16 = swift_getKeyPath(&unk_1000D7E50, v15);
  v19 = v3;
  v20 = v9;
  v24 = v3;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v24, v16, sub_1000B8050, v18, (char *)&type metadata for () + 8, v14);
  swift_release(v16);
  sub_100007B24((uint64_t)v9);
  return sub_100007B24((uint64_t)v11);
}

uint64_t sub_1000B7ABC@<X0>(uint64_t a1@<X8>)
{
  return sub_1000B7BD4((uint64_t)&unk_1000D7E28, &OBJC_IVAR____TtC16MusicRecognition20SongArtworkViewModel__artworkURL, a1);
}

uint64_t sub_1000B7AD0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1000B7C80(a1, a2, (uint64_t)&unk_1000D7E28, &OBJC_IVAR____TtC16MusicRecognition20SongArtworkViewModel__artworkURL, a3);
}

uint64_t sub_1000B7AE4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  unint64_t v10;
  _BYTE v12[16];
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;

  v4 = sub_100004F7C((uint64_t *)&unk_100118CE0);
  __chkstk_darwin(v4);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100008944(a1, (uint64_t)v6);
  v7 = *a2;
  KeyPath = swift_getKeyPath(&unk_1000D7E28, v8);
  v13 = v7;
  v14 = v6;
  v15 = v7;
  v10 = sub_1000B7FE0();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v15, KeyPath, sub_1000B80CC, v12, (char *)&type metadata for () + 8, v10);
  swift_release(KeyPath);
  return sub_100007B24((uint64_t)v6);
}

uint64_t sub_1000B7BC0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000B7BD4((uint64_t)&unk_1000D7E50, &OBJC_IVAR____TtC16MusicRecognition20SongArtworkViewModel___animatedArtworkURL, a1);
}

uint64_t sub_1000B7BD4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  unint64_t v7;
  uint64_t v8;
  _QWORD v10[3];

  KeyPath = swift_getKeyPath(a1, a2);
  v10[0] = v3;
  v7 = sub_1000B7FE0();
  ObservationRegistrar.access<A, B>(_:keyPath:)(v10, KeyPath, v7);
  swift_release(KeyPath);
  v8 = v3 + *a2;
  swift_beginAccess(v8, v10, 0, 0);
  return sub_100008944(v8, a3);
}

uint64_t sub_1000B7C6C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1000B7C80(a1, a2, (uint64_t)&unk_1000D7E50, &OBJC_IVAR____TtC16MusicRecognition20SongArtworkViewModel___animatedArtworkURL, a3);
}

uint64_t sub_1000B7C80@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _QWORD *a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t KeyPath;
  unint64_t v9;
  uint64_t v10;
  _QWORD v12[3];

  v7 = *a1;
  KeyPath = swift_getKeyPath(a3, a2);
  v12[0] = v7;
  v9 = sub_1000B7FE0();
  ObservationRegistrar.access<A, B>(_:keyPath:)(v12, KeyPath, v9);
  swift_release(KeyPath);
  v10 = v7 + *a4;
  swift_beginAccess(v10, v12, 0, 0);
  return sub_100008944(v10, a5);
}

uint64_t sub_1000B7D1C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  unint64_t v10;
  _BYTE v12[16];
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;

  v4 = sub_100004F7C((uint64_t *)&unk_100118CE0);
  __chkstk_darwin(v4);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100008944(a1, (uint64_t)v6);
  v7 = *a2;
  KeyPath = swift_getKeyPath(&unk_1000D7E50, v8);
  v13 = v7;
  v14 = v6;
  v15 = v7;
  v10 = sub_1000B7FE0();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v15, KeyPath, sub_1000B80B8, v12, (char *)&type metadata for () + 8, v10);
  swift_release(KeyPath);
  return sub_100007B24((uint64_t)v6);
}

uint64_t sub_1000B7DF8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  _BYTE v6[24];

  v4 = a1 + *a3;
  swift_beginAccess(v4, v6, 33, 0);
  sub_1000B8070(a2, v4);
  return swift_endAccess(v6);
}

uint64_t sub_1000B7E5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_100007B24(v0 + OBJC_IVAR____TtC16MusicRecognition20SongArtworkViewModel__artworkURL);
  sub_100007B24(v0 + OBJC_IVAR____TtC16MusicRecognition20SongArtworkViewModel___animatedArtworkURL);
  v1 = v0 + OBJC_IVAR____TtC16MusicRecognition20SongArtworkViewModel___observationRegistrar;
  v2 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1000B7ECC()
{
  return type metadata accessor for SongArtworkViewModel(0);
}

uint64_t type metadata accessor for SongArtworkViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_10011CAF8;
  if (!qword_10011CAF8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SongArtworkViewModel);
  return result;
}

void sub_1000B7F10(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  sub_10000880C(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = v6[0];
    v4 = type metadata accessor for ObservationRegistrar(319);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 3, v6, a1 + 80);
    }
  }
}

uint64_t sub_1000B7F98@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1000B7C80(a1, a2, (uint64_t)&unk_1000D7E28, &OBJC_IVAR____TtC16MusicRecognition20SongArtworkViewModel__artworkURL, a3);
}

uint64_t sub_1000B7FC0()
{
  uint64_t v0;

  return sub_1000B7DF8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &OBJC_IVAR____TtC16MusicRecognition20SongArtworkViewModel__artworkURL);
}

unint64_t sub_1000B7FE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011C108;
  if (!qword_10011C108)
  {
    v1 = type metadata accessor for SongArtworkViewModel(255);
    result = swift_getWitnessTable(&unk_1000D7E08, v1);
    atomic_store(result, (unint64_t *)&qword_10011C108);
  }
  return result;
}

uint64_t sub_1000B8028@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1000B7C80(a1, a2, (uint64_t)&unk_1000D7E50, &OBJC_IVAR____TtC16MusicRecognition20SongArtworkViewModel___animatedArtworkURL, a3);
}

uint64_t sub_1000B8050()
{
  uint64_t v0;

  return sub_1000B7DF8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &OBJC_IVAR____TtC16MusicRecognition20SongArtworkViewModel___animatedArtworkURL);
}

uint64_t sub_1000B8070(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004F7C((uint64_t *)&unk_100118CE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000B80B8()
{
  return sub_1000B8050();
}

uint64_t sub_1000B80CC()
{
  return sub_1000B7FC0();
}

void **initializeBufferWithCopyOfBuffer for DeviceToDeviceEncryptionView(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void **assignWithCopy for DeviceToDeviceEncryptionView(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a1;
  v4 = *a2;
  *a1 = *a2;
  v5 = v4;

  return a1;
}

void **assignWithTake for DeviceToDeviceEncryptionView(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceToDeviceEncryptionView(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceToDeviceEncryptionView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceToDeviceEncryptionView()
{
  return &type metadata for DeviceToDeviceEncryptionView;
}

uint64_t sub_1000B8230(uint64_t a1, void *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v9 = LocalizedStringKey.init(stringLiteral:)(0x4C5F4D415A414853, 0xEE00474E4944414FLL);
  v10 = v3;
  LOBYTE(v11) = v4 & 1;
  v12 = v5;
  v6 = objc_allocWithZone((Class)sub_100004F7C(&qword_10011CB98));
  v7 = UIHostingController.init(rootView:)(&v9);
  if (a2)
    objc_msgSend(a2, "setPresentingViewController:", v7, v9, v10, v11, v12);
  return v7;
}

uint64_t sub_1000B82C4(uint64_t a1)
{
  void **v1;

  return sub_1000B8230(a1, *v1);
}

uint64_t sub_1000B82D8(uint64_t a1, char a2)
{
  return UIViewControllerRepresentable.sizeThatFits(_:uiViewController:context:)(a1, a2 & 1);
}

uint64_t sub_1000B8310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1000B83D4();
  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1000B8360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1000B83D4();
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1000B83B0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1000B83D4();
  UIViewControllerRepresentable.body.getter(a1, v2);
  __break(1u);
}

unint64_t sub_1000B83D4()
{
  unint64_t result;

  result = qword_10011CB90;
  if (!qword_10011CB90)
  {
    result = swift_getWitnessTable(&unk_1000D7EA0, &type metadata for DeviceToDeviceEncryptionView);
    atomic_store(result, (unint64_t *)&qword_10011CB90);
  }
  return result;
}

uint64_t sub_1000B841C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t *v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v45 = a5;
  v41 = a4;
  v42 = a2;
  v43 = a3;
  v46 = a6;
  v8 = sub_100004F7C((uint64_t *)&unk_100118CE0);
  __chkstk_darwin(v8);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ShazamUpsellViewModel(0);
  __chkstk_darwin(v11);
  v13 = (uint64_t *)((char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = (int *)type metadata accessor for ShazamUpsellOverlayModifier(0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v41 - v18;
  v20 = type metadata accessor for ModifiedContent(0, a4, v14);
  v44 = *(_QWORD *)(v20 - 8);
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v25 = (char *)&v41 - v24;
  sub_100007C8C(a1, (uint64_t)v10, (uint64_t *)&unk_100118CE0);
  sub_10007416C((uint64_t)v10, v13);
  v26 = &v17[v14[6]];
  *(_QWORD *)v26 = swift_getKeyPath(&unk_1000D7F70, v27);
  v28 = sub_100004F7C(&qword_100116698);
  swift_storeEnumTagMultiPayload(v26, v28, 0);
  v29 = &v17[v14[7]];
  *(_QWORD *)v29 = swift_getKeyPath(&unk_1000D7FA0, v30);
  v31 = sub_100004F7C(&qword_100116688);
  swift_storeEnumTagMultiPayload(v29, v31, 0);
  v49 = 0x4051800000000000;
  v33 = v42;
  v32 = v43;
  sub_100011F44(v42, v43);
  v34 = sub_10006BCD4();
  ScaledMetric.init(wrappedValue:)(&v49, &type metadata for Double, v34);
  sub_10000B4D4((uint64_t)v13, (uint64_t)v17, type metadata accessor for ShazamUpsellViewModel);
  v35 = (uint64_t *)&v17[v14[5]];
  *v35 = v33;
  v35[1] = v32;
  sub_10000B4D4((uint64_t)v17, (uint64_t)v19, type metadata accessor for ShazamUpsellOverlayModifier);
  v36 = v14;
  v37 = v45;
  View.modifier<A>(_:)(v19, v41, v36, v45);
  sub_10000B600((uint64_t)v19, type metadata accessor for ShazamUpsellOverlayModifier);
  v38 = sub_100004864(&qword_100117E58, type metadata accessor for ShazamUpsellOverlayModifier, (uint64_t)&unk_1000D8008);
  v47 = v37;
  v48 = v38;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v20);
  sub_100093E10((uint64_t)v23, v20, (uint64_t)v25);
  v39 = *(void (**)(char *, uint64_t))(v44 + 8);
  v39(v23, v20);
  sub_100091208((uint64_t)v25, v20, v46);
  return ((uint64_t (*)(char *, uint64_t))v39)(v25, v20);
}

uint64_t type metadata accessor for ShazamUpsellOverlayModifier(uint64_t a1)
{
  return sub_100078C78(a1, (uint64_t *)&unk_10011CC00, (uint64_t)&nominal type descriptor for ShazamUpsellOverlayModifier);
}

double sub_1000B874C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  double result;
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;

  v0 = type metadata accessor for UserInterfaceSizeClass(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100004F7C(&qword_1001186E8);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100004F7C(&qword_100116690);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v22 - v12;
  __chkstk_darwin(v11);
  v15 = (uint64_t *)((char *)&v22 - v14);
  type metadata accessor for ShazamUpsellOverlay(0);
  sub_100006D34(v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v13, enum case for UserInterfaceSizeClass.compact(_:), v0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1 + 56))(v13, 0, 1, v0);
  v16 = (uint64_t)&v6[*(int *)(v4 + 48)];
  sub_100007C8C((uint64_t)v15, (uint64_t)v6, &qword_100116690);
  sub_100007C8C((uint64_t)v13, v16, &qword_100116690);
  v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  if (v17((uint64_t)v6, 1, v0) == 1)
  {
    sub_10000526C((uint64_t)v13, &qword_100116690);
    sub_10000526C((uint64_t)v15, &qword_100116690);
    if (v17(v16, 1, v0) == 1)
    {
      sub_10000526C((uint64_t)v6, &qword_100116690);
      return 8.0;
    }
  }
  else
  {
    sub_100007C8C((uint64_t)v6, (uint64_t)v10, &qword_100116690);
    if (v17(v16, 1, v0) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v3, v16, v0);
      v19 = sub_100004864(&qword_1001186F0, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
      v20 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v3, v0, v19);
      v21 = *(void (**)(char *, uint64_t))(v1 + 8);
      v21(v3, v0);
      sub_10000526C((uint64_t)v13, &qword_100116690);
      sub_10000526C((uint64_t)v15, &qword_100116690);
      v21(v10, v0);
      sub_10000526C((uint64_t)v6, &qword_100116690);
      result = 8.0;
      if ((v20 & 1) != 0)
        return result;
      return 80.0;
    }
    sub_10000526C((uint64_t)v13, &qword_100116690);
    sub_10000526C((uint64_t)v15, &qword_100116690);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v10, v0);
  }
  sub_10000526C((uint64_t)v6, &qword_1001186E8);
  return 80.0;
}

double sub_1000B8A64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  double result;
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;

  v0 = type metadata accessor for UserInterfaceSizeClass(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100004F7C(&qword_1001186E8);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100004F7C(&qword_100116690);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v22 - v12;
  __chkstk_darwin(v11);
  v15 = (uint64_t *)((char *)&v22 - v14);
  type metadata accessor for ShazamUpsellOverlay(0);
  sub_100006D34(v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v13, enum case for UserInterfaceSizeClass.compact(_:), v0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1 + 56))(v13, 0, 1, v0);
  v16 = (uint64_t)&v6[*(int *)(v4 + 48)];
  sub_100007C8C((uint64_t)v15, (uint64_t)v6, &qword_100116690);
  sub_100007C8C((uint64_t)v13, v16, &qword_100116690);
  v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  if (v17((uint64_t)v6, 1, v0) == 1)
  {
    sub_10000526C((uint64_t)v13, &qword_100116690);
    sub_10000526C((uint64_t)v15, &qword_100116690);
    if (v17(v16, 1, v0) == 1)
    {
      sub_10000526C((uint64_t)v6, &qword_100116690);
      return 10.0;
    }
  }
  else
  {
    sub_100007C8C((uint64_t)v6, (uint64_t)v10, &qword_100116690);
    if (v17(v16, 1, v0) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v3, v16, v0);
      v19 = sub_100004864(&qword_1001186F0, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
      v20 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v3, v0, v19);
      v21 = *(void (**)(char *, uint64_t))(v1 + 8);
      v21(v3, v0);
      sub_10000526C((uint64_t)v13, &qword_100116690);
      sub_10000526C((uint64_t)v15, &qword_100116690);
      v21(v10, v0);
      sub_10000526C((uint64_t)v6, &qword_100116690);
      result = 10.0;
      if ((v20 & 1) != 0)
        return result;
      return 28.0;
    }
    sub_10000526C((uint64_t)v13, &qword_100116690);
    sub_10000526C((uint64_t)v15, &qword_100116690);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v10, v0);
  }
  sub_10000526C((uint64_t)v6, &qword_1001186E8);
  return 28.0;
}

uint64_t sub_1000B8D78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  double v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t result;
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[2];
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  uint64_t v94;

  v70[1] = a1;
  v70[0] = sub_100004F7C(&qword_100116EE8);
  __chkstk_darwin(v70[0]);
  v83 = (char *)v70 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_100004F7C(&qword_100117BE8);
  __chkstk_darwin(v80);
  v76 = (uint64_t)v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v79);
  v73 = (char *)v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ShazamUpsellOverlay(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_100004F7C(&qword_10011CD68);
  __chkstk_darwin(v78);
  v10 = (char *)v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_100004F7C(&qword_10011CD70);
  __chkstk_darwin(v82);
  v81 = (uint64_t)v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_100004F7C(&qword_10011CD78);
  __chkstk_darwin(v75);
  v74 = (char *)v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t *)(v1 + *(int *)(v5 + 24));
  v14 = v13[1];
  v72 = *v13;
  v15 = v13[3];
  v71 = v13[2];
  v77 = v1;
  sub_10000B340(v1, (uint64_t)v8, type metadata accessor for ShazamUpsellOverlay);
  v16 = *(unsigned __int8 *)(v6 + 80);
  v17 = (v16 + 16) & ~v16;
  v18 = v17 + v7;
  v19 = v16 | 7;
  v20 = swift_allocObject(&unk_10010E130, v18, v16 | 7);
  sub_10000B4D4((uint64_t)v8, v20 + v17, type metadata accessor for ShazamUpsellOverlay);
  sub_10000B340(v1, (uint64_t)v8, type metadata accessor for ShazamUpsellOverlay);
  v21 = swift_allocObject(&unk_10010E158, v18, v19);
  sub_10000B4D4((uint64_t)v8, v21 + v17, type metadata accessor for ShazamUpsellOverlay);
  v22 = v14;
  swift_bridgeObjectRetain(v14);
  v23 = swift_bridgeObjectRetain(v15);
  LOBYTE(v19) = static Edge.Set.all.getter(v23);
  v24 = EdgeInsets.init(_all:)(10.0);
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v84 = 0;
  v32 = static Alignment.center.getter(v31);
  *(_QWORD *)&v85 = v72;
  *((_QWORD *)&v85 + 1) = v14;
  *(_QWORD *)&v86 = v71;
  *((_QWORD *)&v86 + 1) = v15;
  v33 = v15;
  v87 = 0uLL;
  *(_QWORD *)&v88 = sub_1000BD42C;
  *((_QWORD *)&v88 + 1) = v20;
  *(_QWORD *)&v89 = sub_1000BD66C;
  *((_QWORD *)&v89 + 1) = v21;
  LOBYTE(v90) = v19;
  *((double *)&v90 + 1) = v24;
  *(_QWORD *)&v91 = v26;
  *((_QWORD *)&v91 + 1) = v28;
  *(_QWORD *)&v92 = v30;
  BYTE8(v92) = v84;
  *(_QWORD *)&v93 = 9;
  *((_QWORD *)&v93 + 1) = v32;
  v94 = v34;
  v35 = v73;
  v36 = &v73[*(int *)(v79 + 20)];
  v37 = enum case for RoundedCornerStyle.continuous(_:);
  v38 = type metadata accessor for RoundedCornerStyle(0);
  v39 = v37;
  v40 = (uint64_t)v74;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 104))(v36, v39, v38);
  __asm { FMOV            V0.2D, #16.0 }
  *v35 = _Q0;
  v46 = v76;
  sub_10000B340((uint64_t)v35, v76, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v46 + *(int *)(v80 + 36)) = 256;
  sub_100007C8C(v46, (uint64_t)&v10[*(int *)(v78 + 36)], &qword_100117BE8);
  v47 = v92;
  *((_OWORD *)v10 + 6) = v91;
  *((_OWORD *)v10 + 7) = v47;
  *((_OWORD *)v10 + 8) = v93;
  *((_QWORD *)v10 + 18) = v94;
  v48 = v88;
  *((_OWORD *)v10 + 2) = v87;
  *((_OWORD *)v10 + 3) = v48;
  v49 = v90;
  *((_OWORD *)v10 + 4) = v89;
  *((_OWORD *)v10 + 5) = v49;
  v50 = v86;
  *(_OWORD *)v10 = v85;
  *((_OWORD *)v10 + 1) = v50;
  sub_1000BD6A8(&v85);
  sub_10000526C(v46, &qword_100117BE8);
  sub_10000B600((uint64_t)v35, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  swift_bridgeObjectRelease(0);
  swift_bridgeObjectRelease(v33);
  swift_bridgeObjectRelease(v22);
  sub_10005CCBC((uint64_t)sub_1000BD42C, v20);
  v51 = v21;
  v52 = (uint64_t)v83;
  sub_10005CCBC((uint64_t)sub_1000BD66C, v51);
  v53 = sub_1000B874C();
  v54 = sub_1000B8A64();
  v55 = sub_1000B874C();
  LOBYTE(v22) = static Edge.Set.all.getter(v56);
  v57 = v81;
  sub_100007C8C((uint64_t)v10, v81, &qword_10011CD68);
  v58 = v57 + *(int *)(v82 + 36);
  *(_BYTE *)v58 = v22;
  *(_QWORD *)(v58 + 8) = 0x4020000000000000;
  *(double *)(v58 + 16) = v53;
  *(double *)(v58 + 24) = v54;
  *(double *)(v58 + 32) = v55;
  *(_BYTE *)(v58 + 40) = 0;
  v59 = sub_10000526C((uint64_t)v10, &qword_10011CD68);
  v60 = static Color.black.getter(v59);
  v61 = Color.opacity(_:)(0.1);
  swift_release(v60);
  sub_100007C8C(v57, v40, &qword_10011CD70);
  v62 = v75;
  v63 = (uint64_t *)(v40 + *(int *)(v75 + 36));
  *v63 = v61;
  v63[1] = 0x4034000000000000;
  v63[2] = 0;
  v63[3] = 0;
  sub_10000526C(v57, &qword_10011CD70);
  v64 = enum case for DynamicTypeSize.xLarge(_:);
  v65 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 104))(v52, v64, v65);
  v66 = sub_100004864(&qword_100116F80, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  result = dispatch thunk of static Equatable.== infix(_:_:)(v52, v52, v65, v66);
  if ((result & 1) != 0)
  {
    v68 = sub_1000BD86C(&qword_10011CD80, &qword_10011CD78, (void (*)(void))sub_1000BD720);
    v69 = sub_10000522C(&qword_100116F88, &qword_100116EE8, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
    View.dynamicTypeSize<A>(_:)(v52, v62, v70[0], v68, v69);
    sub_10000526C(v52, &qword_100116EE8);
    return sub_10000526C(v40, &qword_10011CD78);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000B9428(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v2 = type metadata accessor for OpenURLAction(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_100004F7C((uint64_t *)&unk_100118CE0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1 + *(int *)(type metadata accessor for ShazamUpsellOverlay(0) + 24);
  v14 = type metadata accessor for ShazamUpsellViewModel(0);
  sub_100007C8C(v13 + *(int *)(v14 + 24), (uint64_t)v8, (uint64_t *)&unk_100118CE0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_10000526C((uint64_t)v8, (uint64_t *)&unk_100118CE0);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  sub_100006A38(v5);
  OpenURLAction.callAsFunction(_:)(v12);
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1000B95B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t result;
  uint64_t (**v13)(void);

  v3 = ASCAppStateInstalling;
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v6 = v5;
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  if (v4 == v7 && v6 == v8)
  {
    swift_bridgeObjectRelease_n(v6, 2);
  }
  else
  {
    v10 = v8;
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v7, v8, 0);
    swift_bridgeObjectRelease(v6);
    result = swift_bridgeObjectRelease(v10);
    if ((v11 & 1) == 0)
      return result;
  }
  result = type metadata accessor for ShazamUpsellOverlay(0);
  v13 = (uint64_t (**)(void))(a2 + *(int *)(result + 28));
  if (*v13)
    return (*v13)();
  return result;
}

uint64_t *sub_1000B9680(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *__dst;
  int *v62;
  unsigned int (*v63)(char *, uint64_t, uint64_t);

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = (int *)type metadata accessor for ShazamUpsellViewModel(0);
    v10 = v9[6];
    __dst = (char *)v4 + v10;
    v11 = (char *)a2 + v10;
    v12 = type metadata accessor for URL(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    v63 = v14;
    v62 = a3;
    if (v14(v11, 1, v12))
    {
      v15 = sub_100004F7C((uint64_t *)&unk_100118CE0);
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    v17 = v13;
    v18 = v9[7];
    v19 = (uint64_t *)((char *)v4 + v18);
    v20 = (uint64_t *)((char *)a2 + v18);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = v9[8];
    v23 = (char *)v4 + v22;
    v24 = (char *)a2 + v22;
    v25 = *((_QWORD *)v24 + 1);
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *((_QWORD *)v23 + 1) = v25;
    v23[16] = v24[16];
    v26 = *((_QWORD *)v24 + 3);
    *((_QWORD *)v23 + 3) = v26;
    v27 = v9[9];
    v28 = (char *)v4 + v27;
    v29 = (char *)a2 + v27;
    v30 = *((_QWORD *)v29 + 1);
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *((_QWORD *)v28 + 1) = v30;
    v28[16] = v29[16];
    v31 = *((_QWORD *)v29 + 3);
    *((_QWORD *)v28 + 3) = v31;
    v32 = v9[10];
    v33 = (char *)v4 + v32;
    v34 = (char *)a2 + v32;
    swift_bridgeObjectRetain(v21);
    swift_bridgeObjectRetain(v25);
    swift_bridgeObjectRetain(v26);
    swift_bridgeObjectRetain(v30);
    swift_bridgeObjectRetain(v31);
    if (v63(v34, 1, v12))
    {
      v35 = sub_100004F7C((uint64_t *)&unk_100118CE0);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v33, v34, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v33, 0, 1, v12);
    }
    v36 = v62[5];
    v37 = (uint64_t *)((char *)v4 + v36);
    v38 = (uint64_t *)((char *)a2 + v36);
    if (*v38)
    {
      v39 = v38[1];
      *v37 = *v38;
      v37[1] = v39;
      swift_retain(v39);
    }
    else
    {
      *(_OWORD *)v37 = *(_OWORD *)v38;
    }
    v40 = v62[6];
    v41 = (uint64_t *)((char *)v4 + v40);
    v42 = (uint64_t *)((char *)a2 + v40);
    v43 = sub_100004F7C(&qword_100116698);
    if (swift_getEnumCaseMultiPayload(v42, v43) == 1)
    {
      v44 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v41, v42, v44);
      v45 = 1;
    }
    else
    {
      v46 = *v42;
      *v41 = *v42;
      swift_retain(v46);
      v45 = 0;
    }
    swift_storeEnumTagMultiPayload(v41, v43, v45);
    v47 = v62[7];
    v48 = (uint64_t *)((char *)v4 + v47);
    v49 = (uint64_t *)((char *)a2 + v47);
    v50 = sub_100004F7C(&qword_100116688);
    if (swift_getEnumCaseMultiPayload(v49, v50) == 1)
    {
      v51 = type metadata accessor for UserInterfaceSizeClass(0);
      v52 = *(_QWORD *)(v51 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v52 + 48))(v49, 1, v51))
      {
        v53 = sub_100004F7C(&qword_100116690);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        v54 = 1;
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v52 + 16))(v48, v49, v51);
        v54 = 1;
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v48, 0, 1, v51);
      }
    }
    else
    {
      v55 = *v49;
      *v48 = *v49;
      swift_retain(v55);
      v54 = 0;
    }
    swift_storeEnumTagMultiPayload(v48, v50, v54);
    v56 = v62[8];
    v57 = (char *)v4 + v56;
    v58 = (char *)a2 + v56;
    v59 = sub_100004F7C(&qword_10011CBA0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
  }
  return v4;
}

uint64_t sub_1000B9A5C(uint64_t a1, int *a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v4 = (int *)type metadata accessor for ShazamUpsellViewModel(0);
  v5 = a1 + v4[6];
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v4[7] + 8));
  v9 = a1 + v4[8];
  swift_bridgeObjectRelease(*(_QWORD *)(v9 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v9 + 24));
  v10 = a1 + v4[9];
  swift_bridgeObjectRelease(*(_QWORD *)(v10 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v10 + 24));
  v11 = a1 + v4[10];
  if (!v8(v11, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v6);
  v12 = (_QWORD *)(a1 + a2[5]);
  if (*v12)
    swift_release(v12[1]);
  v13 = (_QWORD *)(a1 + a2[6]);
  v14 = sub_100004F7C(&qword_100116698);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
  }
  else
  {
    swift_release(*v13);
  }
  v16 = (_QWORD *)(a1 + a2[7]);
  v17 = sub_100004F7C(&qword_100116688);
  if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
  {
    v18 = type metadata accessor for UserInterfaceSizeClass(0);
    v19 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18))
      (*(void (**)(_QWORD *, uint64_t))(v19 + 8))(v16, v18);
  }
  else
  {
    swift_release(*v16);
  }
  v20 = a1 + a2[8];
  v21 = sub_100004F7C(&qword_10011CBA0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
}

_QWORD *sub_1000B9C54(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  unsigned int (*v60)(char *, uint64_t, uint64_t);

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = (int *)type metadata accessor for ShazamUpsellViewModel(0);
  v8 = v7[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  v60 = v13;
  if (v13(v10, 1, v11))
  {
    v14 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = v12;
  v16 = v7[7];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = v7[8];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = *((_QWORD *)v22 + 1);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *((_QWORD *)v21 + 1) = v23;
  v21[16] = v22[16];
  v24 = *((_QWORD *)v22 + 3);
  *((_QWORD *)v21 + 3) = v24;
  v25 = v7[9];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = *((_QWORD *)v27 + 1);
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *((_QWORD *)v26 + 1) = v28;
  v26[16] = v27[16];
  v29 = *((_QWORD *)v27 + 3);
  *((_QWORD *)v26 + 3) = v29;
  v30 = v7[10];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRetain(v29);
  if (v60(v32, 1, v11))
  {
    v33 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v31, v32, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v31, 0, 1, v11);
  }
  v34 = a3[5];
  v35 = (_QWORD *)((char *)a1 + v34);
  v36 = (_QWORD *)((char *)a2 + v34);
  if (*v36)
  {
    v37 = v36[1];
    *v35 = *v36;
    v35[1] = v37;
    swift_retain(v37);
  }
  else
  {
    *(_OWORD *)v35 = *(_OWORD *)v36;
  }
  v38 = a3[6];
  v39 = (_QWORD *)((char *)a1 + v38);
  v40 = (_QWORD *)((char *)a2 + v38);
  v41 = sub_100004F7C(&qword_100116698);
  if (swift_getEnumCaseMultiPayload(v40, v41) == 1)
  {
    v42 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v39, v40, v42);
    v43 = 1;
  }
  else
  {
    v44 = *v40;
    *v39 = *v40;
    swift_retain(v44);
    v43 = 0;
  }
  swift_storeEnumTagMultiPayload(v39, v41, v43);
  v45 = a3[7];
  v46 = (_QWORD *)((char *)a1 + v45);
  v47 = (_QWORD *)((char *)a2 + v45);
  v48 = sub_100004F7C(&qword_100116688);
  if (swift_getEnumCaseMultiPayload(v47, v48) == 1)
  {
    v49 = type metadata accessor for UserInterfaceSizeClass(0);
    v50 = *(_QWORD *)(v49 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v50 + 48))(v47, 1, v49))
    {
      v51 = sub_100004F7C(&qword_100116690);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      v52 = 1;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v50 + 16))(v46, v47, v49);
      v52 = 1;
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v46, 0, 1, v49);
    }
  }
  else
  {
    v53 = *v47;
    *v46 = *v47;
    swift_retain(v53);
    v52 = 0;
  }
  swift_storeEnumTagMultiPayload(v46, v48, v52);
  v54 = a3[8];
  v55 = (char *)a1 + v54;
  v56 = (char *)a2 + v54;
  v57 = sub_100004F7C(&qword_10011CBA0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
  return a1;
}

char *sub_1000B9FF8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *((_QWORD *)a2 + 1);
  v7 = *((_QWORD *)a1 + 1);
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  v8 = *((_QWORD *)a2 + 3);
  v9 = *((_QWORD *)a1 + 3);
  *((_QWORD *)a1 + 3) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = (int *)type metadata accessor for ShazamUpsellViewModel(0);
  v11 = v10[6];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = type metadata accessor for URL(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    v19 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 24))(v12, v13, v14);
LABEL_7:
  v20 = v10[7];
  v21 = &a1[v20];
  v22 = &a2[v20];
  *(_QWORD *)v21 = *(_QWORD *)v22;
  v23 = *((_QWORD *)v22 + 1);
  v24 = *((_QWORD *)v21 + 1);
  *((_QWORD *)v21 + 1) = v23;
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRelease(v24);
  v25 = v10[8];
  v26 = &a1[v25];
  v27 = &a2[v25];
  *(_QWORD *)v26 = *(_QWORD *)&a2[v25];
  v28 = *(_QWORD *)&a2[v25 + 8];
  v29 = *(_QWORD *)&a1[v25 + 8];
  *((_QWORD *)v26 + 1) = v28;
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRelease(v29);
  v26[16] = v27[16];
  v30 = *((_QWORD *)v27 + 3);
  v31 = *((_QWORD *)v26 + 3);
  *((_QWORD *)v26 + 3) = v30;
  swift_bridgeObjectRetain(v30);
  swift_bridgeObjectRelease(v31);
  v32 = v10[9];
  v33 = &a1[v32];
  v34 = &a2[v32];
  *(_QWORD *)v33 = *(_QWORD *)&a2[v32];
  v35 = *(_QWORD *)&a2[v32 + 8];
  v36 = *(_QWORD *)&a1[v32 + 8];
  *((_QWORD *)v33 + 1) = v35;
  swift_bridgeObjectRetain(v35);
  swift_bridgeObjectRelease(v36);
  v33[16] = v34[16];
  v37 = *((_QWORD *)v34 + 3);
  v38 = *((_QWORD *)v33 + 3);
  *((_QWORD *)v33 + 3) = v37;
  swift_bridgeObjectRetain(v37);
  swift_bridgeObjectRelease(v38);
  v39 = v10[10];
  v40 = &a1[v39];
  v41 = &a2[v39];
  LODWORD(v33) = v16(&a1[v39], 1, v14);
  v42 = v16(v41, 1, v14);
  if ((_DWORD)v33)
  {
    if (!v42)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v40, v41, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v40, 0, 1, v14);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v42)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v40, v14);
LABEL_12:
    v43 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 24))(v40, v41, v14);
LABEL_13:
  v44 = a3[5];
  v45 = &a1[v44];
  v46 = &a2[v44];
  v47 = *(_QWORD *)&a1[v44];
  v48 = *(_QWORD *)&a2[v44];
  if (v47)
  {
    if (v48)
    {
      v49 = *((_QWORD *)v46 + 1);
      v50 = *((_QWORD *)v45 + 1);
      *(_QWORD *)v45 = v48;
      *((_QWORD *)v45 + 1) = v49;
      swift_retain(v49);
      swift_release(v50);
      goto LABEL_20;
    }
    swift_release(*((_QWORD *)v45 + 1));
  }
  else if (v48)
  {
    v51 = *((_QWORD *)v46 + 1);
    *(_QWORD *)v45 = v48;
    *((_QWORD *)v45 + 1) = v51;
    swift_retain(v51);
    goto LABEL_20;
  }
  *(_OWORD *)v45 = *(_OWORD *)v46;
LABEL_20:
  if (a1 != a2)
  {
    v52 = a3[6];
    v53 = (uint64_t *)&a1[v52];
    v54 = (uint64_t *)&a2[v52];
    sub_10000526C((uint64_t)&a1[v52], &qword_100116698);
    v55 = sub_100004F7C(&qword_100116698);
    if (swift_getEnumCaseMultiPayload(v54, v55) == 1)
    {
      v56 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v53, v54, v56);
      v57 = 1;
    }
    else
    {
      v58 = *v54;
      *v53 = *v54;
      swift_retain(v58);
      v57 = 0;
    }
    swift_storeEnumTagMultiPayload(v53, v55, v57);
    v59 = a3[7];
    v60 = (uint64_t *)&a1[v59];
    v61 = (uint64_t *)&a2[v59];
    sub_10000526C((uint64_t)&a1[v59], &qword_100116688);
    v62 = sub_100004F7C(&qword_100116688);
    if (swift_getEnumCaseMultiPayload(v61, v62) == 1)
    {
      v63 = type metadata accessor for UserInterfaceSizeClass(0);
      v64 = *(_QWORD *)(v63 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v64 + 48))(v61, 1, v63))
      {
        v65 = sub_100004F7C(&qword_100116690);
        memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
        v66 = 1;
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v64 + 16))(v60, v61, v63);
        v66 = 1;
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v60, 0, 1, v63);
      }
    }
    else
    {
      v67 = *v61;
      *v60 = *v61;
      swift_retain(v67);
      v66 = 0;
    }
    swift_storeEnumTagMultiPayload(v60, v62, v66);
  }
  v68 = a3[8];
  v69 = &a1[v68];
  v70 = &a2[v68];
  v71 = sub_100004F7C(&qword_10011CBA0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 24))(v69, v70, v71);
  return a1;
}

_OWORD *sub_1000BA4C8(_OWORD *a1, char *a2, int *a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  _OWORD *v20;
  char *v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;

  v6 = *((_OWORD *)a2 + 1);
  *a1 = *(_OWORD *)a2;
  a1[1] = v6;
  v7 = (int *)type metadata accessor for ShazamUpsellViewModel(0);
  v8 = v7[6];
  v9 = (char *)a1 + v8;
  v10 = &a2[v8];
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    v14 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *(_OWORD *)((char *)a1 + v7[7]) = *(_OWORD *)&a2[v7[7]];
  v15 = v7[8];
  v16 = (_OWORD *)((char *)a1 + v15);
  v17 = &a2[v15];
  v18 = *((_OWORD *)v17 + 1);
  *v16 = *(_OWORD *)v17;
  v16[1] = v18;
  v19 = v7[9];
  v20 = (_OWORD *)((char *)a1 + v19);
  v21 = &a2[v19];
  v22 = *((_OWORD *)v21 + 1);
  *v20 = *(_OWORD *)v21;
  v20[1] = v22;
  v23 = v7[10];
  v24 = (char *)a1 + v23;
  v25 = &a2[v23];
  if (v13(&a2[v23], 1, v11))
  {
    v26 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v24, v25, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v24, 0, 1, v11);
  }
  v27 = a3[5];
  v28 = (_QWORD *)((char *)a1 + v27);
  v29 = (uint64_t *)&a2[v27];
  v30 = *v29;
  if (*v29)
  {
    v31 = v29[1];
    *v28 = v30;
    v28[1] = v31;
  }
  else
  {
    *(_OWORD *)v28 = *(_OWORD *)v29;
  }
  v32 = a3[6];
  v33 = (char *)a1 + v32;
  v34 = &a2[v32];
  v35 = sub_100004F7C(&qword_100116698);
  if (swift_getEnumCaseMultiPayload(v34, v35) == 1)
  {
    v36 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v33, v34, v36);
    swift_storeEnumTagMultiPayload(v33, v35, 1);
  }
  else
  {
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  v37 = a3[7];
  v38 = (char *)a1 + v37;
  v39 = &a2[v37];
  v40 = sub_100004F7C(&qword_100116688);
  if (swift_getEnumCaseMultiPayload(v39, v40) == 1)
  {
    v41 = type metadata accessor for UserInterfaceSizeClass(0);
    v42 = *(_QWORD *)(v41 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v39, 1, v41))
    {
      v43 = sub_100004F7C(&qword_100116690);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v38, v39, v41);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v38, 0, 1, v41);
    }
    swift_storeEnumTagMultiPayload(v38, v40, 1);
  }
  else
  {
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  v44 = a3[8];
  v45 = (char *)a1 + v44;
  v46 = &a2[v44];
  v47 = sub_100004F7C(&qword_10011CBA0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
  return a1;
}

char *sub_1000BA7EC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;

  v6 = *((_QWORD *)a2 + 1);
  v7 = *((_QWORD *)a1 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *((_QWORD *)a2 + 3);
  v9 = *((_QWORD *)a1 + 3);
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)a1 + 3) = v8;
  swift_bridgeObjectRelease(v9);
  v10 = (int *)type metadata accessor for ShazamUpsellViewModel(0);
  v11 = v10[6];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = type metadata accessor for URL(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    v19 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v12, v13, v14);
LABEL_7:
  v20 = v10[7];
  v21 = &a1[v20];
  v22 = (uint64_t *)&a2[v20];
  v24 = *v22;
  v23 = v22[1];
  v25 = *((_QWORD *)v21 + 1);
  *(_QWORD *)v21 = v24;
  *((_QWORD *)v21 + 1) = v23;
  swift_bridgeObjectRelease(v25);
  v26 = v10[8];
  v27 = &a1[v26];
  v28 = &a2[v26];
  v29 = *(_QWORD *)&a2[v26 + 8];
  v30 = *(_QWORD *)&a1[v26 + 8];
  *(_QWORD *)v27 = *(_QWORD *)&a2[v26];
  *((_QWORD *)v27 + 1) = v29;
  swift_bridgeObjectRelease(v30);
  v27[16] = v28[16];
  v31 = *((_QWORD *)v27 + 3);
  *((_QWORD *)v27 + 3) = *((_QWORD *)v28 + 3);
  swift_bridgeObjectRelease(v31);
  v32 = v10[9];
  v33 = &a1[v32];
  v34 = &a2[v32];
  v35 = *(_QWORD *)&a2[v32 + 8];
  v36 = *(_QWORD *)&a1[v32 + 8];
  *(_QWORD *)v33 = *(_QWORD *)&a2[v32];
  *((_QWORD *)v33 + 1) = v35;
  swift_bridgeObjectRelease(v36);
  v33[16] = v34[16];
  v37 = *((_QWORD *)v33 + 3);
  *((_QWORD *)v33 + 3) = *((_QWORD *)v34 + 3);
  swift_bridgeObjectRelease(v37);
  v38 = v10[10];
  v39 = &a1[v38];
  v40 = &a2[v38];
  LODWORD(v34) = v16(&a1[v38], 1, v14);
  v41 = v16(v40, 1, v14);
  if ((_DWORD)v34)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v39, v40, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v39, 0, 1, v14);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v39, v14);
LABEL_12:
    v42 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v39, v40, v14);
LABEL_13:
  v43 = a3[5];
  v44 = &a1[v43];
  v45 = &a2[v43];
  v46 = *(_QWORD *)&a1[v43];
  v47 = *(_QWORD *)&a2[v43];
  if (v46)
  {
    if (v47)
    {
      v48 = *((_QWORD *)v45 + 1);
      v49 = *((_QWORD *)v44 + 1);
      *(_QWORD *)v44 = v47;
      *((_QWORD *)v44 + 1) = v48;
      swift_release(v49);
      goto LABEL_20;
    }
    swift_release(*((_QWORD *)v44 + 1));
  }
  else if (v47)
  {
    v50 = *((_QWORD *)v45 + 1);
    *(_QWORD *)v44 = v47;
    *((_QWORD *)v44 + 1) = v50;
    goto LABEL_20;
  }
  *(_OWORD *)v44 = *(_OWORD *)v45;
LABEL_20:
  if (a1 != a2)
  {
    v51 = a3[6];
    v52 = &a1[v51];
    v53 = &a2[v51];
    sub_10000526C((uint64_t)&a1[v51], &qword_100116698);
    v54 = sub_100004F7C(&qword_100116698);
    if (swift_getEnumCaseMultiPayload(v53, v54) == 1)
    {
      v55 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v52, v53, v55);
      swift_storeEnumTagMultiPayload(v52, v54, 1);
    }
    else
    {
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    v56 = a3[7];
    v57 = &a1[v56];
    v58 = &a2[v56];
    sub_10000526C((uint64_t)&a1[v56], &qword_100116688);
    v59 = sub_100004F7C(&qword_100116688);
    if (swift_getEnumCaseMultiPayload(v58, v59) == 1)
    {
      v60 = type metadata accessor for UserInterfaceSizeClass(0);
      v61 = *(_QWORD *)(v60 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v58, 1, v60))
      {
        v62 = sub_100004F7C(&qword_100116690);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v57, v58, v60);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v57, 0, 1, v60);
      }
      swift_storeEnumTagMultiPayload(v57, v59, 1);
    }
    else
    {
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    }
  }
  v63 = a3[8];
  v64 = &a1[v63];
  v65 = &a2[v63];
  v66 = sub_100004F7C(&qword_10011CBA0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 40))(v64, v65, v66);
  return a1;
}

uint64_t sub_1000BAC50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000BAC5C);
}

uint64_t sub_1000BAC5C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for ShazamUpsellViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + a3[5]);
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = sub_100004F7C(&qword_100117800);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v13 = v11;
      v14 = a3[6];
    }
    else
    {
      v15 = sub_100004F7C(&qword_1001182E8);
      v12 = *(_QWORD *)(v15 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v13 = v15;
        v14 = a3[7];
      }
      else
      {
        v13 = sub_100004F7C(&qword_10011CBA0);
        v12 = *(_QWORD *)(v13 - 8);
        v14 = a3[8];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1 + v14, a2, v13);
  }
}

uint64_t sub_1000BAD64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000BAD70);
}

uint64_t sub_1000BAD70(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = type metadata accessor for ShazamUpsellViewModel(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + a4[5]) = a2;
      return result;
    }
    v13 = sub_100004F7C(&qword_100117800);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[6];
    }
    else
    {
      v16 = sub_100004F7C(&qword_1001182E8);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[7];
      }
      else
      {
        v10 = sub_100004F7C(&qword_10011CBA0);
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[8];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1000BAE68(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[5];

  v2 = type metadata accessor for ShazamUpsellViewModel(319);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    v10[1] = &unk_1000D7FF0;
    sub_10004360C(319, (unint64_t *)&qword_100117870, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme);
    if (v5 <= 0x3F)
    {
      v10[2] = *(_QWORD *)(v4 - 8) + 64;
      sub_1000435B4(319);
      if (v7 <= 0x3F)
      {
        v10[3] = *(_QWORD *)(v6 - 8) + 64;
        sub_1000BAF3C(319);
        if (v9 <= 0x3F)
        {
          v10[4] = *(_QWORD *)(v8 - 8) + 64;
          swift_initStructMetadata(a1, 256, 5, v10, a1 + 16);
        }
      }
    }
  }
}

void sub_1000BAF3C(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10011CC10)
  {
    v2 = sub_10006BCD4();
    v3 = type metadata accessor for ScaledMetric(a1, &type metadata for Double, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10011CC10);
  }
}

uint64_t sub_1000BAF94(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000DF69C, 1);
}

uint64_t sub_1000BAFA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  double v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD *v48;
  __int128 v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t, uint64_t);
  int v53;
  uint64_t *v54;
  char v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _OWORD v75[3];

  v73 = a2;
  v70 = type metadata accessor for UserInterfaceSizeClass(0);
  v68 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v64 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_100004F7C(&qword_1001186E8);
  __chkstk_darwin(v71);
  v67 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100004F7C(&qword_100116690);
  v6 = __chkstk_darwin(v5);
  v65 = (uint64_t)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v74 = (uint64_t)&v63 - v9;
  __chkstk_darwin(v8);
  v69 = (uint64_t *)((char *)&v63 - v10);
  v11 = type metadata accessor for ShazamUpsellViewModel(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (int *)type metadata accessor for ShazamUpsellOverlay(0);
  v15 = __chkstk_darwin(v14);
  v17 = (uint64_t *)((char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  v19 = (char *)&v63 - v18;
  v66 = sub_100004F7C(&qword_10011CC68);
  __chkstk_darwin(v66);
  v21 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100004F7C(&qword_10011CC70);
  __chkstk_darwin(v22);
  v72 = (uint64_t)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B340(a1, (uint64_t)v13, type metadata accessor for ShazamUpsellViewModel);
  v24 = (uint64_t *)(a1 + *(int *)(type metadata accessor for ShazamUpsellOverlayModifier(0) + 20));
  v25 = *v24;
  v26 = v24[1];
  *v17 = swift_getKeyPath(&unk_1000D8058, v27);
  v28 = sub_100004F7C(&qword_1001166A0);
  swift_storeEnumTagMultiPayload(v17, v28, 0);
  v29 = (_QWORD *)((char *)v17 + v14[5]);
  *v29 = swift_getKeyPath(&unk_1000D7FA0, v30);
  v31 = sub_100004F7C(&qword_100116688);
  swift_storeEnumTagMultiPayload(v29, v31, 0);
  sub_10000B4D4((uint64_t)v13, (uint64_t)v17 + v14[6], type metadata accessor for ShazamUpsellViewModel);
  v32 = v14[7];
  v33 = v68;
  v34 = (_QWORD *)((char *)v17 + v32);
  *v34 = v25;
  v34[1] = v26;
  v35 = (uint64_t)v17;
  v36 = (uint64_t)v21;
  sub_10000B4D4(v35, (uint64_t)v19, type metadata accessor for ShazamUpsellOverlay);
  v37 = v25;
  v38 = (uint64_t)v67;
  v39 = v26;
  v40 = v74;
  sub_100011F44(v37, v39);
  v41 = sub_100004F7C(&qword_10011CBA0);
  v42 = ScaledMetric.wrappedValue.getter(v75, v41);
  v43 = *(double *)v75;
  if (*(double *)v75 > 70.0)
    v43 = 70.0;
  v44 = v43;
  v45 = static Alignment.center.getter(v42);
  _FrameLayout.init(width:height:alignment:)(v75, 0, 1, *(_QWORD *)&v44, 0, v45, v46);
  sub_10000B340((uint64_t)v19, (uint64_t)v21, type metadata accessor for ShazamUpsellOverlay);
  v47 = v70;
  v48 = (_OWORD *)(v36 + *(int *)(v66 + 36));
  v49 = v75[1];
  *v48 = v75[0];
  v48[1] = v49;
  v48[2] = v75[2];
  sub_10000B600((uint64_t)v19, type metadata accessor for ShazamUpsellOverlay);
  v50 = v69;
  sub_100006D34(v69);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v33 + 104))(v40, enum case for UserInterfaceSizeClass.compact(_:), v47);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(v40, 0, 1, v47);
  v51 = v38 + *(int *)(v71 + 48);
  sub_100007C8C((uint64_t)v50, v38, &qword_100116690);
  sub_100007C8C(v40, v51, &qword_100116690);
  v52 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
  if (v52(v38, 1, v47) == 1)
  {
    sub_10000526C(v40, &qword_100116690);
    sub_10000526C((uint64_t)v50, &qword_100116690);
    v53 = v52(v51, 1, v47);
    if (v53 == 1)
      v54 = &qword_100116690;
    else
      v54 = &qword_1001186E8;
    if (v53 == 1)
      v55 = -1;
    else
      v55 = 0;
  }
  else
  {
    v56 = v65;
    sub_100007C8C(v38, v65, &qword_100116690);
    if (v52(v51, 1, v47) == 1)
    {
      sub_10000526C(v40, &qword_100116690);
      sub_10000526C((uint64_t)v50, &qword_100116690);
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v56, v47);
      v55 = 0;
      v54 = &qword_1001186E8;
    }
    else
    {
      v57 = v64;
      (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v64, v51, v47);
      v58 = sub_100004864(&qword_1001186F0, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
      v55 = dispatch thunk of static Equatable.== infix(_:_:)(v56, v57, v47, v58);
      v59 = *(void (**)(char *, uint64_t))(v33 + 8);
      v59(v57, v47);
      v54 = &qword_100116690;
      sub_10000526C(v74, &qword_100116690);
      sub_10000526C((uint64_t)v50, &qword_100116690);
      v59((char *)v56, v47);
    }
  }
  v60 = sub_10000526C(v38, v54);
  __chkstk_darwin(v60);
  *(&v63 - 2) = a1;
  v61 = v72;
  sub_1000BB7A8(v55 & 1, (void (*)(uint64_t))sub_1000BBA6C, v72);
  sub_10000526C(v36, &qword_10011CC68);
  return sub_1000BBA74(v61, v73);
}

double sub_1000BB5AC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  double result;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  v4 = type metadata accessor for ColorScheme(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (_QWORD *)((char *)&v32 - v9);
  v11 = sub_100004F7C(&qword_10011CCB0);
  v12 = swift_allocObject(v11, 48, 7);
  *(_OWORD *)(v12 + 16) = xmmword_1000D32A0;
  type metadata accessor for ShazamUpsellOverlayModifier(0);
  sub_100006A6C(v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, enum case for ColorScheme.light(_:), v4);
  v13 = static ColorScheme.== infix(_:_:)(v10, v8);
  v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v8, v4);
  v15 = ((uint64_t (*)(_QWORD *, uint64_t))v14)(v10, v4);
  if ((v13 & 1) != 0)
  {
    v16 = objc_msgSend((id)objc_opt_self(UIColor), "systemGray6Color");
    v17 = Color.init(uiColor:)(v16);
  }
  else
  {
    v17 = static Color.black.getter(v15);
  }
  *(_QWORD *)(v12 + 32) = v17;
  v18 = static Color.clear.getter(v17);
  *(_QWORD *)(v12 + 40) = v18;
  v33 = v12;
  specialized Array._endMutation()(v18);
  Gradient.init(colors:)(v33);
  v19.n128_f64[0] = static UnitPoint.bottom.getter();
  v20 = v19.n128_f64[0];
  v22 = v21;
  v23 = static UnitPoint.center.getter(v19);
  v25 = LinearGradient.init(gradient:startPoint:endPoint:)(&v33, v20, v22, v23, v24);
  v26 = v33;
  v32 = v34;
  v27 = v35;
  v28 = v36;
  v29 = static Edge.Set.all.getter(v25);
  sub_100007C8C(a1, a2, &qword_10011CC68);
  v30 = a2 + *(int *)(sub_100004F7C(&qword_10011CC80) + 36);
  *(_QWORD *)v30 = v26;
  result = *(double *)&v32;
  *(_OWORD *)(v30 + 8) = v32;
  *(_QWORD *)(v30 + 24) = v27;
  *(_QWORD *)(v30 + 32) = v28;
  *(_BYTE *)(v30 + 40) = v29;
  return result;
}

uint64_t sub_1000BB7A8@<X0>(char a1@<W0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD v23[2];

  v4 = v3;
  v23[1] = a3;
  v7 = sub_100004F7C(&qword_10011CC68);
  __chkstk_darwin(v7);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100004F7C(&qword_10011CC78);
  __chkstk_darwin(v10);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100004F7C(&qword_10011CC80);
  __chkstk_darwin(v13);
  v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    a2(v4);
    sub_100007C8C((uint64_t)v15, (uint64_t)v12, &qword_10011CC80);
    swift_storeEnumTagMultiPayload(v12, v10, 0);
    v16 = sub_1000BBABC();
    v17 = sub_1000BBB40();
    _ConditionalContent<>.init(storage:)(v12, v13, v7, v16, v17);
    v18 = (uint64_t)v15;
    v19 = &qword_10011CC80;
  }
  else
  {
    sub_100007C8C(v4, (uint64_t)v9, &qword_10011CC68);
    sub_100007C8C((uint64_t)v9, (uint64_t)v12, &qword_10011CC68);
    swift_storeEnumTagMultiPayload(v12, v10, 1);
    v20 = sub_1000BBABC();
    v21 = sub_1000BBB40();
    _ConditionalContent<>.init(storage:)(v12, v13, v7, v20, v21);
    v18 = (uint64_t)v9;
    v19 = &qword_10011CC68;
  }
  return sub_10000526C(v18, v19);
}

uint64_t sub_1000BB98C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = static HorizontalAlignment.center.getter(a1);
  v6 = a2 + *(int *)(sub_100004F7C(&qword_10011CC50) + 36);
  sub_1000BAFA4(v2, v6);
  v7 = VerticalEdge.rawValue.getter(1);
  v8 = Edge.init(rawValue:)((2 * v7));
  v9 = static SafeAreaRegions.container.getter();
  v10 = v6 + *(int *)(sub_100004F7C(&qword_10011CC58) + 36);
  *(_QWORD *)v10 = v9;
  *(_QWORD *)(v10 + 8) = 0;
  *(_BYTE *)(v10 + 16) = 1;
  *(_BYTE *)(v10 + 17) = v8;
  *(_QWORD *)(v10 + 24) = v5;
  v11 = sub_100004F7C(&qword_10011CC60);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a2, a1, v11);
}

uint64_t type metadata accessor for ShazamUpsellOverlay(uint64_t a1)
{
  return sub_100078C78(a1, qword_10011CD10, (uint64_t)&nominal type descriptor for ShazamUpsellOverlay);
}

double sub_1000BBA6C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000BB5AC(a1, a2);
}

uint64_t sub_1000BBA74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004F7C(&qword_10011CC70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000BBABC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011CC88;
  if (!qword_10011CC88)
  {
    v1 = sub_1000050C8(&qword_10011CC80);
    sub_1000BBB40();
    sub_10000522C(&qword_10011CCA0, &qword_10011CCA8, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011CC88);
  }
  return result;
}

unint64_t sub_1000BBB40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011CC90;
  if (!qword_10011CC90)
  {
    v1 = sub_1000050C8(&qword_10011CC68);
    sub_100004864(&qword_10011CC98, type metadata accessor for ShazamUpsellOverlay, (uint64_t)&unk_1000D80A4);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011CC90);
  }
  return result;
}

_QWORD *sub_1000BBBC4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  _QWORD *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v62;
  char *__dst;
  _QWORD *v64;
  uint64_t v65;
  _QWORD *v66;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    v13 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = sub_100004F7C(&qword_1001166A0);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v14 = *a2;
      *a1 = *a2;
      swift_retain(v14);
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v15 = *(int *)(a3 + 20);
    v16 = (_QWORD *)((char *)a1 + v15);
    v17 = (_QWORD *)((char *)a2 + v15);
    v18 = sub_100004F7C(&qword_100116688);
    if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
    {
      v19 = type metadata accessor for UserInterfaceSizeClass(0);
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19))
      {
        v21 = sub_100004F7C(&qword_100116690);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v20 + 16))(v16, v17, v19);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v16, 0, 1, v19);
      }
      v23 = v16;
      v24 = v18;
      v25 = 1;
    }
    else
    {
      v22 = *v17;
      *v16 = *v17;
      swift_retain(v22);
      v23 = v16;
      v24 = v18;
      v25 = 0;
    }
    swift_storeEnumTagMultiPayload(v23, v24, v25);
    v64 = a1;
    v65 = a3;
    v26 = *(int *)(a3 + 24);
    v27 = (_QWORD *)((char *)a1 + v26);
    v28 = (char *)a2 + v26;
    v29 = *(_QWORD *)((char *)a2 + v26 + 8);
    *v27 = *(_QWORD *)((char *)a2 + v26);
    v27[1] = v29;
    v30 = *(_QWORD *)((char *)a2 + v26 + 24);
    v27[2] = *(_QWORD *)((char *)a2 + v26 + 16);
    v27[3] = v30;
    v31 = (int *)type metadata accessor for ShazamUpsellViewModel(0);
    v32 = v31[6];
    __dst = (char *)v27 + v32;
    v33 = &v28[v32];
    v34 = type metadata accessor for URL(0);
    v35 = *(_QWORD *)(v34 - 8);
    v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
    swift_bridgeObjectRetain(v29);
    swift_bridgeObjectRetain(v30);
    v66 = a2;
    v62 = v35;
    if (v36(v33, 1, v34))
    {
      v37 = sub_100004F7C((uint64_t *)&unk_100118CE0);
      memcpy(__dst, v33, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(__dst, v33, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(__dst, 0, 1, v34);
    }
    v38 = v36;
    v39 = v31[7];
    v40 = (_QWORD *)((char *)v27 + v39);
    v41 = &v28[v39];
    v42 = *((_QWORD *)v41 + 1);
    *v40 = *(_QWORD *)v41;
    v40[1] = v42;
    v43 = v31[8];
    v44 = (char *)v27 + v43;
    v45 = &v28[v43];
    v46 = *((_QWORD *)v45 + 1);
    *(_QWORD *)v44 = *(_QWORD *)v45;
    *((_QWORD *)v44 + 1) = v46;
    v44[16] = v45[16];
    v47 = *((_QWORD *)v45 + 3);
    *((_QWORD *)v44 + 3) = v47;
    v48 = v31[9];
    v49 = (char *)v27 + v48;
    v50 = &v28[v48];
    v51 = *((_QWORD *)v50 + 1);
    *(_QWORD *)v49 = *(_QWORD *)v50;
    *((_QWORD *)v49 + 1) = v51;
    v49[16] = v50[16];
    v52 = *((_QWORD *)v50 + 3);
    *((_QWORD *)v49 + 3) = v52;
    v53 = v31[10];
    v54 = (char *)v27 + v53;
    v55 = &v28[v53];
    swift_bridgeObjectRetain(v42);
    swift_bridgeObjectRetain(v46);
    swift_bridgeObjectRetain(v47);
    swift_bridgeObjectRetain(v51);
    swift_bridgeObjectRetain(v52);
    if (v38(v55, 1, v34))
    {
      v56 = sub_100004F7C((uint64_t *)&unk_100118CE0);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v54, v55, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v54, 0, 1, v34);
    }
    v13 = v64;
    v57 = *(int *)(v65 + 28);
    v58 = (_QWORD *)((char *)v64 + v57);
    v59 = (_QWORD *)((char *)v66 + v57);
    if (*v59)
    {
      v60 = v59[1];
      *v58 = *v59;
      v58[1] = v60;
      swift_retain(v60);
    }
    else
    {
      *(_OWORD *)v58 = *(_OWORD *)v59;
    }
  }
  return v13;
}

double sub_1000BBF84(_QWORD *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  char *v16;
  char *v17;
  char *v18;
  double result;
  _QWORD *v20;

  v4 = sub_100004F7C(&qword_1001166A0);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  v6 = (_QWORD *)((char *)a1 + a2[5]);
  v7 = sub_100004F7C(&qword_100116688);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for UserInterfaceSizeClass(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
      (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  v10 = (char *)a1 + a2[6];
  swift_bridgeObjectRelease(*((_QWORD *)v10 + 1));
  swift_bridgeObjectRelease(*((_QWORD *)v10 + 3));
  v11 = (int *)type metadata accessor for ShazamUpsellViewModel(0);
  v12 = &v10[v11[6]];
  v13 = type metadata accessor for URL(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (!v15(v12, 1, v13))
    (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v13);
  swift_bridgeObjectRelease(*(_QWORD *)&v10[v11[7] + 8]);
  v16 = &v10[v11[8]];
  swift_bridgeObjectRelease(*((_QWORD *)v16 + 1));
  swift_bridgeObjectRelease(*((_QWORD *)v16 + 3));
  v17 = &v10[v11[9]];
  swift_bridgeObjectRelease(*((_QWORD *)v17 + 1));
  swift_bridgeObjectRelease(*((_QWORD *)v17 + 3));
  v18 = &v10[v11[10]];
  if (!v15(v18, 1, v13))
    (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
  v20 = (_QWORD *)((char *)a1 + a2[7]);
  if (*v20)
    *(_QWORD *)&result = swift_release(v20[1]).n128_u64[0];
  return result;
}

_QWORD *sub_1000BC16C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  unsigned int (*v63)(char *, uint64_t, uint64_t);

  v6 = sub_100004F7C(&qword_1001166A0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = *(int *)(a3 + 20);
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v15 = sub_100004F7C(&qword_100116688);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for UserInterfaceSizeClass(0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
    {
      v18 = sub_100004F7C(&qword_100116690);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v17 + 16))(v13, v14, v16);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
    }
    v20 = v13;
    v21 = v15;
    v22 = 1;
  }
  else
  {
    v19 = *v14;
    *v13 = *v14;
    swift_retain(v19);
    v20 = v13;
    v21 = v15;
    v22 = 0;
  }
  swift_storeEnumTagMultiPayload(v20, v21, v22);
  v60 = a3;
  v61 = a2;
  v23 = *(int *)(a3 + 24);
  v24 = (_QWORD *)((char *)a1 + v23);
  v25 = (_QWORD *)((char *)a2 + v23);
  v62 = a1;
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  v27 = v25[3];
  v24[2] = v25[2];
  v24[3] = v27;
  v28 = (int *)type metadata accessor for ShazamUpsellViewModel(0);
  v29 = v28[6];
  v30 = (char *)v24 + v29;
  v31 = (char *)v25 + v29;
  v32 = type metadata accessor for URL(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRetain(v27);
  v63 = v34;
  if (v34(v31, 1, v32))
  {
    v35 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  }
  v36 = v33;
  v37 = v28[7];
  v38 = (_QWORD *)((char *)v24 + v37);
  v39 = (_QWORD *)((char *)v25 + v37);
  v40 = v39[1];
  *v38 = *v39;
  v38[1] = v40;
  v41 = v28[8];
  v42 = (char *)v24 + v41;
  v43 = (char *)v25 + v41;
  v44 = *((_QWORD *)v43 + 1);
  *(_QWORD *)v42 = *(_QWORD *)v43;
  *((_QWORD *)v42 + 1) = v44;
  v42[16] = v43[16];
  v45 = *((_QWORD *)v43 + 3);
  *((_QWORD *)v42 + 3) = v45;
  v46 = v28[9];
  v47 = (char *)v24 + v46;
  v48 = (char *)v25 + v46;
  v49 = *((_QWORD *)v48 + 1);
  *(_QWORD *)v47 = *(_QWORD *)v48;
  *((_QWORD *)v47 + 1) = v49;
  v47[16] = v48[16];
  v50 = *((_QWORD *)v48 + 3);
  *((_QWORD *)v47 + 3) = v50;
  v51 = v28[10];
  v52 = (char *)v24 + v51;
  v53 = (char *)v25 + v51;
  swift_bridgeObjectRetain(v40);
  swift_bridgeObjectRetain(v44);
  swift_bridgeObjectRetain(v45);
  swift_bridgeObjectRetain(v49);
  swift_bridgeObjectRetain(v50);
  if (v63(v53, 1, v32))
  {
    v54 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v52, v53, v32);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v52, 0, 1, v32);
  }
  v55 = *(int *)(v60 + 28);
  v56 = (_QWORD *)((char *)v62 + v55);
  v57 = (_QWORD *)((char *)v61 + v55);
  if (*v57)
  {
    v58 = v57[1];
    *v56 = *v57;
    v56[1] = v58;
    swift_retain(v58);
  }
  else
  {
    *(_OWORD *)v56 = *(_OWORD *)v57;
  }
  return v62;
}

_QWORD *sub_1000BC4F4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v73;
  _QWORD *v74;

  if (a1 != a2)
  {
    sub_10000526C((uint64_t)a1, &qword_1001166A0);
    v6 = sub_100004F7C(&qword_1001166A0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
    v12 = *(int *)(a3 + 20);
    v13 = (_QWORD *)((char *)a1 + v12);
    v14 = (_QWORD *)((char *)a2 + v12);
    sub_10000526C((uint64_t)a1 + v12, &qword_100116688);
    v15 = sub_100004F7C(&qword_100116688);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for UserInterfaceSizeClass(0);
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
      {
        v18 = sub_100004F7C(&qword_100116690);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v17 + 16))(v13, v14, v16);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
      }
      v20 = v13;
      v21 = v15;
      v22 = 1;
    }
    else
    {
      v19 = *v14;
      *v13 = *v14;
      swift_retain(v19);
      v20 = v13;
      v21 = v15;
      v22 = 0;
    }
    swift_storeEnumTagMultiPayload(v20, v21, v22);
  }
  v73 = a3;
  v74 = a2;
  v23 = *(int *)(a3 + 24);
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  *(_QWORD *)v24 = *(_QWORD *)((char *)a2 + v23);
  v26 = *(_QWORD *)((char *)a2 + v23 + 8);
  v27 = *(_QWORD *)((char *)a1 + v23 + 8);
  *((_QWORD *)v24 + 1) = v26;
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRelease(v27);
  *((_QWORD *)v24 + 2) = *((_QWORD *)v25 + 2);
  v28 = *((_QWORD *)v25 + 3);
  v29 = *((_QWORD *)v24 + 3);
  *((_QWORD *)v24 + 3) = v28;
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRelease(v29);
  v30 = (int *)type metadata accessor for ShazamUpsellViewModel(0);
  v31 = v30[6];
  v32 = &v24[v31];
  v33 = &v25[v31];
  v34 = type metadata accessor for URL(0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 1, v34);
  v38 = v36(v33, 1, v34);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
LABEL_17:
    v39 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(char *, char *, uint64_t))(v35 + 24))(v32, v33, v34);
LABEL_18:
  v40 = v30[7];
  v41 = &v24[v40];
  v42 = &v25[v40];
  *(_QWORD *)v41 = *(_QWORD *)v42;
  v43 = *((_QWORD *)v42 + 1);
  v44 = *((_QWORD *)v41 + 1);
  *((_QWORD *)v41 + 1) = v43;
  swift_bridgeObjectRetain(v43);
  swift_bridgeObjectRelease(v44);
  v45 = v30[8];
  v46 = &v24[v45];
  v47 = &v25[v45];
  *(_QWORD *)v46 = *(_QWORD *)&v25[v45];
  v48 = *(_QWORD *)&v25[v45 + 8];
  v49 = *(_QWORD *)&v24[v45 + 8];
  *((_QWORD *)v46 + 1) = v48;
  swift_bridgeObjectRetain(v48);
  swift_bridgeObjectRelease(v49);
  v46[16] = v47[16];
  v50 = *((_QWORD *)v47 + 3);
  v51 = *((_QWORD *)v46 + 3);
  *((_QWORD *)v46 + 3) = v50;
  swift_bridgeObjectRetain(v50);
  swift_bridgeObjectRelease(v51);
  v52 = v30[9];
  v53 = &v24[v52];
  v54 = &v25[v52];
  *(_QWORD *)v53 = *(_QWORD *)&v25[v52];
  v55 = *(_QWORD *)&v25[v52 + 8];
  v56 = *(_QWORD *)&v24[v52 + 8];
  *((_QWORD *)v53 + 1) = v55;
  swift_bridgeObjectRetain(v55);
  swift_bridgeObjectRelease(v56);
  v53[16] = v54[16];
  v57 = *((_QWORD *)v54 + 3);
  v58 = *((_QWORD *)v53 + 3);
  *((_QWORD *)v53 + 3) = v57;
  swift_bridgeObjectRetain(v57);
  swift_bridgeObjectRelease(v58);
  v59 = v30[10];
  v60 = &v24[v59];
  v61 = &v25[v59];
  LODWORD(v53) = v36(&v24[v59], 1, v34);
  v62 = v36(v61, 1, v34);
  if ((_DWORD)v53)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v60, v61, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v60, 0, 1, v34);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v60, v34);
LABEL_23:
    v63 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    goto LABEL_24;
  }
  (*(void (**)(char *, char *, uint64_t))(v35 + 24))(v60, v61, v34);
LABEL_24:
  v64 = *(int *)(v73 + 28);
  v65 = (_QWORD *)((char *)a1 + v64);
  v66 = (char *)v74 + v64;
  v67 = *(_QWORD *)((char *)a1 + v64);
  v68 = *(_QWORD *)((char *)v74 + v64);
  if (!v67)
  {
    if (v68)
    {
      v71 = *((_QWORD *)v66 + 1);
      *v65 = v68;
      v65[1] = v71;
      swift_retain(v71);
      return a1;
    }
LABEL_30:
    *(_OWORD *)v65 = *(_OWORD *)v66;
    return a1;
  }
  if (!v68)
  {
    swift_release(v65[1]);
    goto LABEL_30;
  }
  v69 = *((_QWORD *)v66 + 1);
  v70 = v65[1];
  *v65 = v68;
  v65[1] = v69;
  swift_retain(v69);
  swift_release(v70);
  return a1;
}

char *sub_1000BC9AC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  __int128 v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;

  v6 = sub_100004F7C(&qword_1001166A0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_100004F7C(&qword_100116688);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for UserInterfaceSizeClass(0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
    {
      v14 = sub_100004F7C(&qword_100116690);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v9, v10, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    }
    swift_storeEnumTagMultiPayload(v9, v11, 1);
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v45 = a3;
  v15 = *(int *)(a3 + 24);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = *(_OWORD *)&a2[v15 + 16];
  *(_OWORD *)v16 = *(_OWORD *)&a2[v15];
  *((_OWORD *)v16 + 1) = v18;
  v19 = (int *)type metadata accessor for ShazamUpsellViewModel(0);
  v20 = v19[6];
  v21 = &v16[v20];
  v22 = &v17[v20];
  v23 = type metadata accessor for URL(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  if (v25(v22, 1, v23))
  {
    v26 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  *(_OWORD *)&v16[v19[7]] = *(_OWORD *)&v17[v19[7]];
  v27 = v19[8];
  v28 = &v16[v27];
  v29 = &v17[v27];
  v30 = *((_OWORD *)v29 + 1);
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *((_OWORD *)v28 + 1) = v30;
  v31 = v19[9];
  v32 = &v16[v31];
  v33 = &v17[v31];
  v34 = *((_OWORD *)v33 + 1);
  *(_OWORD *)v32 = *(_OWORD *)v33;
  *((_OWORD *)v32 + 1) = v34;
  v35 = v19[10];
  v36 = &v16[v35];
  v37 = &v17[v35];
  if (v25(&v17[v35], 1, v23))
  {
    v38 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v36, v37, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v36, 0, 1, v23);
  }
  v39 = *(int *)(v45 + 28);
  v40 = &a1[v39];
  v41 = &a2[v39];
  v42 = *(_QWORD *)v41;
  if (*(_QWORD *)v41)
  {
    v43 = *((_QWORD *)v41 + 1);
    *(_QWORD *)v40 = v42;
    *((_QWORD *)v40 + 1) = v43;
  }
  else
  {
    *(_OWORD *)v40 = *(_OWORD *)v41;
  }
  return a1;
}

char *sub_1000BCCB0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  char *v65;

  if (a1 != a2)
  {
    sub_10000526C((uint64_t)a1, &qword_1001166A0);
    v6 = sub_100004F7C(&qword_1001166A0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    v8 = *(int *)(a3 + 20);
    v9 = &a1[v8];
    v10 = &a2[v8];
    sub_10000526C((uint64_t)&a1[v8], &qword_100116688);
    v11 = sub_100004F7C(&qword_100116688);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for UserInterfaceSizeClass(0);
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      {
        v14 = sub_100004F7C(&qword_100116690);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v9, v10, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  v64 = a3;
  v65 = a2;
  v15 = *(int *)(a3 + 24);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = *(_QWORD *)&a2[v15 + 8];
  v19 = *(_QWORD *)&a1[v15 + 8];
  *(_QWORD *)v16 = *(_QWORD *)&a2[v15];
  *((_QWORD *)v16 + 1) = v18;
  swift_bridgeObjectRelease(v19);
  v20 = *((_QWORD *)v17 + 3);
  v21 = *((_QWORD *)v16 + 3);
  *((_QWORD *)v16 + 2) = *((_QWORD *)v17 + 2);
  *((_QWORD *)v16 + 3) = v20;
  swift_bridgeObjectRelease(v21);
  v22 = (int *)type metadata accessor for ShazamUpsellViewModel(0);
  v23 = v22[6];
  v24 = &v16[v23];
  v25 = &v17[v23];
  v26 = type metadata accessor for URL(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
  v29 = v28(v24, 1, v26);
  v30 = v28(v25, 1, v26);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if (v30)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v24, v26);
LABEL_16:
    v31 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 40))(v24, v25, v26);
LABEL_17:
  v32 = v22[7];
  v33 = &v16[v32];
  v34 = &v17[v32];
  v36 = *(_QWORD *)v34;
  v35 = *((_QWORD *)v34 + 1);
  v37 = *((_QWORD *)v33 + 1);
  *(_QWORD *)v33 = v36;
  *((_QWORD *)v33 + 1) = v35;
  swift_bridgeObjectRelease(v37);
  v38 = v22[8];
  v39 = &v16[v38];
  v40 = &v17[v38];
  v41 = *(_QWORD *)&v17[v38 + 8];
  v42 = *(_QWORD *)&v16[v38 + 8];
  *(_QWORD *)v39 = *(_QWORD *)&v17[v38];
  *((_QWORD *)v39 + 1) = v41;
  swift_bridgeObjectRelease(v42);
  v39[16] = v40[16];
  v43 = *((_QWORD *)v39 + 3);
  *((_QWORD *)v39 + 3) = *((_QWORD *)v40 + 3);
  swift_bridgeObjectRelease(v43);
  v44 = v22[9];
  v45 = &v16[v44];
  v46 = &v17[v44];
  v47 = *(_QWORD *)&v17[v44 + 8];
  v48 = *(_QWORD *)&v16[v44 + 8];
  *(_QWORD *)v45 = *(_QWORD *)&v17[v44];
  *((_QWORD *)v45 + 1) = v47;
  swift_bridgeObjectRelease(v48);
  v45[16] = v46[16];
  v49 = *((_QWORD *)v45 + 3);
  *((_QWORD *)v45 + 3) = *((_QWORD *)v46 + 3);
  swift_bridgeObjectRelease(v49);
  v50 = v22[10];
  v51 = &v16[v50];
  v52 = &v17[v50];
  LODWORD(v46) = v28(&v16[v50], 1, v26);
  v53 = v28(v52, 1, v26);
  if ((_DWORD)v46)
  {
    if (!v53)
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v51, v52, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v51, 0, 1, v26);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (v53)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v51, v26);
LABEL_22:
    v54 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 40))(v51, v52, v26);
LABEL_23:
  v55 = *(int *)(v64 + 28);
  v56 = &a1[v55];
  v57 = &v65[v55];
  v58 = *(_QWORD *)&a1[v55];
  v59 = *(_QWORD *)&v65[v55];
  if (!v58)
  {
    if (v59)
    {
      v62 = *((_QWORD *)v57 + 1);
      *(_QWORD *)v56 = v59;
      *((_QWORD *)v56 + 1) = v62;
      return a1;
    }
LABEL_29:
    *(_OWORD *)v56 = *(_OWORD *)v57;
    return a1;
  }
  if (!v59)
  {
    swift_release(*((_QWORD *)v56 + 1));
    goto LABEL_29;
  }
  v60 = *((_QWORD *)v57 + 1);
  v61 = *((_QWORD *)v56 + 1);
  *(_QWORD *)v56 = v59;
  *((_QWORD *)v56 + 1) = v60;
  swift_release(v61);
  return a1;
}

uint64_t sub_1000BD0F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000BD104);
}

uint64_t sub_1000BD104(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;
  int v17;

  v6 = sub_100004F7C(&qword_100116768);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_100004F7C(&qword_1001182E8);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_7:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = type metadata accessor for ShazamUpsellViewModel(0);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_7;
  }
  v16 = *(_QWORD *)(a1 + a3[7]);
  if (v16 >= 0xFFFFFFFF)
    LODWORD(v16) = -1;
  v17 = v16 - 1;
  if (v17 < 0)
    v17 = -1;
  return (v17 + 1);
}

uint64_t sub_1000BD1E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000BD1F0);
}

uint64_t sub_1000BD1F0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v8 = sub_100004F7C(&qword_100116768);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = sub_100004F7C(&qword_1001182E8);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_7:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for ShazamUpsellViewModel(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[6];
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + a4[7]) = a2;
  return result;
}

void sub_1000BD2C0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[4];

  sub_10004360C(319, (unint64_t *)&qword_1001167D8, (uint64_t (*)(uint64_t))&type metadata accessor for OpenURLAction);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1000435B4(319);
    if (v5 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v4 - 8) + 64;
      v6 = type metadata accessor for ShazamUpsellViewModel(319);
      if (v7 <= 0x3F)
      {
        v8[2] = *(_QWORD *)(v6 - 8) + 64;
        v8[3] = &unk_1000D7FF0;
        swift_initStructMetadata(a1, 256, 4, v8, a1 + 16);
      }
    }
  }
}

unint64_t sub_1000BD37C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011CD50;
  if (!qword_10011CD50)
  {
    v1 = sub_1000050C8(&qword_10011CC50);
    sub_10000522C(&qword_10011CD58, &qword_10011CC60, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_10000522C(&qword_10011CD60, &qword_10011CC58, (uint64_t)&protocol conformance descriptor for _InsetViewModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011CD50);
  }
  return result;
}

uint64_t sub_1000BD418(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000DF6C4, 1);
}

uint64_t sub_1000BD42C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ShazamUpsellOverlay(0) - 8) + 80);
  return sub_1000B9428(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_1000BD45C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  char *v18;
  char *v19;
  char *v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;

  v1 = (int *)type metadata accessor for ShazamUpsellOverlay(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v23 = *(_QWORD *)(v2 + 64);
  v24 = v0;
  v5 = (_QWORD *)(v0 + v4);
  v6 = sub_100004F7C(&qword_1001166A0);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v6) == 1)
  {
    v7 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v4, v7);
  }
  else
  {
    swift_release(*v5);
  }
  v8 = (_QWORD *)((char *)v5 + v1[5]);
  v9 = sub_100004F7C(&qword_100116688);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for UserInterfaceSizeClass(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v8, v10);
  }
  else
  {
    swift_release(*v8);
  }
  v12 = (char *)v5 + v1[6];
  swift_bridgeObjectRelease(*((_QWORD *)v12 + 1));
  swift_bridgeObjectRelease(*((_QWORD *)v12 + 3));
  v13 = (int *)type metadata accessor for ShazamUpsellViewModel(0);
  v14 = &v12[v13[6]];
  v15 = type metadata accessor for URL(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (!v17(v14, 1, v15))
    (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v15);
  swift_bridgeObjectRelease(*(_QWORD *)&v12[v13[7] + 8]);
  v18 = &v12[v13[8]];
  swift_bridgeObjectRelease(*((_QWORD *)v18 + 1));
  swift_bridgeObjectRelease(*((_QWORD *)v18 + 3));
  v19 = &v12[v13[9]];
  swift_bridgeObjectRelease(*((_QWORD *)v19 + 1));
  swift_bridgeObjectRelease(*((_QWORD *)v19 + 3));
  v20 = &v12[v13[10]];
  if (!v17(v20, 1, v15))
    (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v15);
  v21 = (_QWORD *)((char *)v5 + v1[7]);
  if (*v21)
    swift_release(v21[1]);
  return swift_deallocObject(v24, v4 + v23, v3 | 7);
}

uint64_t sub_1000BD66C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ShazamUpsellOverlay(0) - 8) + 80);
  return sub_1000B95B8(a1, v1 + ((v3 + 16) & ~v3));
}

_QWORD *sub_1000BD6A8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[6];
  v5 = a1[7];
  v6 = a1[8];
  v7 = a1[9];
  swift_bridgeObjectRetain(a1[5]);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  sub_100011F44(v4, v5);
  sub_100011F44(v6, v7);
  return a1;
}

uint64_t sub_1000BD720()
{
  return sub_1000BD86C(&qword_10011CD88, &qword_10011CD70, (void (*)(void))sub_1000BD744);
}

unint64_t sub_1000BD744()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011CD90;
  if (!qword_10011CD90)
  {
    v1 = sub_1000050C8(&qword_10011CD68);
    sub_1000BD7C8();
    sub_10000522C(&qword_10011A0F8, &qword_100117BE8, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011CD90);
  }
  return result;
}

unint64_t sub_1000BD7C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011CD98;
  if (!qword_10011CD98)
  {
    v1 = sub_1000050C8(&qword_10011CDA0);
    sub_1000BD86C(&qword_10011CDA8, &qword_10011CDB0, (void (*)(void))sub_10005D0B8);
    sub_10000522C(&qword_10011CDB8, &qword_10011CDC0, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011CD98);
  }
  return result;
}

uint64_t sub_1000BD86C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_1000050C8(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000BD8D4()
{
  _QWORD v1[4];

  v1[0] = sub_1000050C8(&qword_10011CD78);
  v1[1] = sub_1000050C8(&qword_100116EE8);
  v1[2] = sub_1000BD86C(&qword_10011CD80, &qword_10011CD78, (void (*)(void))sub_1000BD720);
  v1[3] = sub_10000522C(&qword_100116F88, &qword_100116EE8, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
}

id sub_1000BD97C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.447058824, 0.447058824, 0.447058824, 0.6);
  qword_10011CDC8 = (uint64_t)result;
  return result;
}

int64x2_t sub_1000BD9C8()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4042000000000000uLL);
  xmmword_10011CDD0 = (__int128)result;
  return result;
}

void sub_1000BD9E0()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  Class isa;

  v1 = v0;
  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = *(void **)&v0[OBJC_IVAR____TtC16MusicRecognition30AmbientCompactMatchingFlowView_imageView];
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v1, "addSubview:", v2);
  v3 = (void *)objc_opt_self(NSLayoutConstraint);
  v4 = sub_100004F7C(&qword_100116D90);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_1000D1CE0;
  v6 = objc_msgSend(v2, "centerXAnchor");
  v7 = objc_msgSend(v1, "centerXAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

  *(_QWORD *)(v5 + 32) = v8;
  v9 = objc_msgSend(v2, "centerYAnchor");
  v10 = objc_msgSend(v1, "centerYAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

  *(_QWORD *)(v5 + 40) = v11;
  v12 = objc_msgSend(v2, "heightAnchor");
  if (qword_100116370 != -1)
    swift_once(&qword_100116370, sub_1000BD9C8);
  v13 = objc_retainAutoreleasedReturnValue(objc_msgSend(v12, "constraintEqualToConstant:", *((double *)&xmmword_10011CDD0
                                                                                           + 1)));

  *(_QWORD *)(v5 + 48) = v13;
  v14 = objc_msgSend(v2, "widthAnchor");
  v15 = objc_msgSend(v14, "constraintEqualToConstant:", *(double *)&xmmword_10011CDD0);

  *(_QWORD *)(v5 + 56) = v15;
  specialized Array._endMutation()(v16);
  sub_100010498(0, (unint64_t *)&qword_1001177E0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v5);
  objc_msgSend(v3, "activateConstraints:", isa);

}

id sub_1000BDD34(void *a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  id v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = OBJC_IVAR____TtC16MusicRecognition30AmbientCompactMatchingFlowView_imageView;
  v6 = objc_allocWithZone((Class)UIImageView);
  v7 = v2;
  *(_QWORD *)&v2[v5] = objc_msgSend(v6, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);

  v12.receiver = v7;
  v12.super_class = ObjectType;
  v8 = objc_msgSendSuper2(&v12, "initWithCoder:", a1);
  v9 = v8;
  if (v8)
  {
    v10 = v8;
    sub_1000BD9E0();

  }
  return v9;
}

void sub_1000BDE18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  CGFloat v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  Class isa;
  id v9;
  id v10;
  NSString v11;
  id v12;
  void *v13;
  void *v14;
  CGFloat v15;
  void *v16;
  CGAffineTransform v17;
  CGAffineTransform aBlock;

  v1 = v0;
  v2 = sub_100004F7C(&qword_100116D90);
  v3 = COERCE_DOUBLE(swift_allocObject(v2, 56, 7));
  *(_OWORD *)(*(_QWORD *)&v3 + 16) = xmmword_1000D8100;
  v4 = (void *)objc_opt_self(UIColor);
  *(_QWORD *)(*(_QWORD *)&v3 + 32) = objc_msgSend(v4, "whiteColor");
  v5 = objc_msgSend(v4, "whiteColor");
  *(_QWORD *)(*(_QWORD *)&v3 + 40) = v5;
  if (qword_100116368 != -1)
    v5 = (id)swift_once(&qword_100116368, sub_1000BD97C);
  v6 = (void *)qword_10011CDC8;
  *(_QWORD *)(*(_QWORD *)&v3 + 48) = qword_10011CDC8;
  aBlock.a = v3;
  specialized Array._endMutation()(v5);
  sub_100010498(0, (unint64_t *)&qword_100117388, UIColor_ptr);
  v7 = v6;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(*(_QWORD *)&v3);
  v9 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPaletteColors:", isa);

  v10 = v9;
  v11 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v11, v10);

  v13 = *(void **)(v1 + OBJC_IVAR____TtC16MusicRecognition30AmbientCompactMatchingFlowView_imageView);
  objc_msgSend(v13, "setImage:", v12);
  objc_msgSend(v13, "transform");
  CGAffineTransformScale(&v17, &aBlock, 0.9, 0.9);
  aBlock = v17;
  objc_msgSend(v13, "setTransform:", &aBlock);
  v14 = (void *)objc_opt_self(UIView);
  v15 = COERCE_DOUBLE(swift_allocObject(&unk_10010E238, 24, 7));
  swift_unknownObjectWeakInit(*(_QWORD *)&v15 + 16, v1);
  *(_QWORD *)&aBlock.tx = sub_1000BE1D0;
  aBlock.ty = v15;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_1000A5684;
  *(_QWORD *)&aBlock.d = &unk_10010E250;
  v16 = _Block_copy(&aBlock);
  swift_release(*(_QWORD *)&aBlock.ty);
  objc_msgSend(v14, "animateWithDuration:delay:options:animations:completion:", 24, v16, 0, 1.2, 0.0);

  _Block_release(v16);
}

void sub_1000BE0F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  id v4;
  _QWORD v5[6];
  _BYTE v6[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(id *)(Strong + OBJC_IVAR____TtC16MusicRecognition30AmbientCompactMatchingFlowView_imageView);

    v5[0] = 0x3FF0000000000000;
    v5[1] = 0;
    v5[2] = 0;
    v5[3] = 0x3FF0000000000000;
    v5[4] = 0;
    v5[5] = 0;
    objc_msgSend(v4, "setTransform:", v5);

  }
}

uint64_t type metadata accessor for AmbientCompactMatchingFlowView()
{
  return objc_opt_self(_TtC16MusicRecognition30AmbientCompactMatchingFlowView);
}

uint64_t sub_1000BE1AC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1000BE1D0()
{
  uint64_t v0;

  sub_1000BE0F4(v0);
}

uint64_t sub_1000BE1D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000BE1E8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_1000BE1F0()
{
  id v0;
  NSString v1;
  id v2;

  v0 = objc_allocWithZone((Class)NSUserDefaults);
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "initWithSuiteName:", v1);

  qword_10011CE10 = (uint64_t)v2;
}

uint64_t initializeBufferWithCopyOfBuffer for LibraryItemDetailView(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for LibraryItemDetailView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for LibraryItemDetailView(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryItemDetailView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 9))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryItemDetailView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 9) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryItemDetailView()
{
  return &type metadata for LibraryItemDetailView;
}

uint64_t sub_1000BE3AC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000DF734, 1);
}

void sub_1000BE3BC()
{
  strcpy((char *)&qword_10011CE18, "e.square.fill");
  unk_10011CE26 = -4864;
}

uint64_t sub_1000BE3EC()
{
  uint64_t result;
  uint64_t v1;
  char v2;
  uint64_t v3;

  result = LocalizedStringKey.init(stringLiteral:)(0xD00000000000001BLL, 0x80000001000DCCE0);
  qword_10011CE28 = result;
  unk_10011CE30 = v1;
  byte_10011CE38 = v2 & 1;
  qword_10011CE40 = v3;
  return result;
}

uint64_t sub_1000BE430@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;

  v6 = sub_100004F7C(&qword_10011CE50);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v34 - v10;
  v12 = sub_100004F7C(&qword_10011CE58);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v34 - v17;
  v19 = __chkstk_darwin(v16);
  v21 = (char *)&v34 - v20;
  v29 = static HorizontalAlignment.leading.getter(v19, v22, v23, v24, v25, v26, v27, v28);
  v30 = 0x3FF0000000000000;
  if ((a2 & 1) != 0)
    v30 = 0x4000000000000000;
  *(_QWORD *)v18 = v29;
  *((_QWORD *)v18 + 1) = v30;
  v18[16] = 0;
  v31 = sub_100004F7C(&qword_10011CE60);
  sub_1000BE620(a1, a2, (uint64_t)&v18[*(int *)(v31 + 44)]);
  sub_100007C48((uint64_t)v18, (uint64_t)v21, &qword_10011CE58);
  sub_1000BEFE0((uint64_t)a1, (uint64_t)v11);
  sub_100007C8C((uint64_t)v21, (uint64_t)v15, &qword_10011CE58);
  sub_100007C8C((uint64_t)v11, (uint64_t)v9, &qword_10011CE50);
  sub_100007C8C((uint64_t)v15, a3, &qword_10011CE58);
  v32 = sub_100004F7C(&qword_10011CE68);
  sub_100007C8C((uint64_t)v9, a3 + *(int *)(v32 + 48), &qword_10011CE50);
  sub_10000526C((uint64_t)v11, &qword_10011CE50);
  sub_10000526C((uint64_t)v21, &qword_10011CE58);
  sub_10000526C((uint64_t)v9, &qword_10011CE50);
  return sub_10000526C((uint64_t)v15, &qword_10011CE58);
}

uint64_t sub_1000BE620@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v46 = a3;
  v5 = sub_100004F7C(&qword_10011CED0);
  v6 = __chkstk_darwin(v5);
  v47 = (uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v9 = (char *)&v42 - v8;
  v10 = sub_100004F7C(&qword_10011AAF8);
  v43 = *(_QWORD *)(v10 - 8);
  v44 = v10;
  v11 = __chkstk_darwin(v10);
  v45 = (uint64_t)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v14 = (char *)&v42 - v13;
  v15 = sub_100004F7C(&qword_10011CED8);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v16);
  v21 = (char *)&v42 - v20;
  __chkstk_darwin(v19);
  v23 = (char *)&v42 - v22;
  v24 = objc_msgSend(a1, "title");
  if (v24)
  {
    v25 = v24;
    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    v28 = v27;

    *(_QWORD *)v21 = static VerticalAlignment.center.getter(v29);
    *((_QWORD *)v21 + 1) = 0x4014000000000000;
    v21[16] = 0;
    v30 = sub_100004F7C(&qword_10011CEF0);
    sub_1000BF6A0(v26, v28, a1, a2 & 1, (uint64_t)&v21[*(int *)(v30 + 44)]);
    swift_bridgeObjectRelease(v28);
    v31 = sub_100004F7C(&qword_10011CEE0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v21, 0, 1, v31);
  }
  else
  {
    v32 = sub_100004F7C(&qword_10011CEE0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v21, 1, 1, v32);
  }
  sub_100007C48((uint64_t)v21, (uint64_t)v23, &qword_10011CED8);
  sub_1000BE998(a1, (uint64_t)v14);
  if ((a2 & 1) != 0)
  {
    sub_1000BEBD8(a1, (uint64_t)v9);
    v33 = 0;
  }
  else
  {
    v33 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56))(v9, v33, 1, v44);
  sub_100007C8C((uint64_t)v23, (uint64_t)v18, &qword_10011CED8);
  v34 = v45;
  sub_100007C8C((uint64_t)v14, v45, &qword_10011AAF8);
  v35 = v47;
  sub_100007C8C((uint64_t)v9, v47, &qword_10011CED0);
  v36 = (uint64_t)v18;
  v37 = (uint64_t)v18;
  v38 = v34;
  v39 = v46;
  sub_100007C8C(v36, v46, &qword_10011CED8);
  v40 = sub_100004F7C(&qword_10011CEE8);
  sub_100007C8C(v38, v39 + *(int *)(v40 + 48), &qword_10011AAF8);
  sub_100007C8C(v35, v39 + *(int *)(v40 + 64), &qword_10011CED0);
  sub_10000526C((uint64_t)v9, &qword_10011CED0);
  sub_10000526C((uint64_t)v14, &qword_10011AAF8);
  sub_10000526C((uint64_t)v23, &qword_10011CED8);
  sub_10000526C(v35, &qword_10011CED0);
  sub_10000526C(v38, &qword_10011AAF8);
  return sub_10000526C(v37, &qword_10011CED8);
}

uint64_t sub_1000BE998@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  _QWORD v28[2];
  char v29;
  uint64_t v30;

  v4 = objc_msgSend(a1, "subtitle");
  if (v4 || (v4 = objc_msgSend(a1, "artist")) != 0)
  {
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v7 = v6;

    v8 = static Font.caption.getter();
    v9 = Text.font(_:)(v8, v5, v7, 0, _swiftEmptyArrayStorage);
    v11 = v10;
    v13 = v12;
    v15 = v14;
    swift_bridgeObjectRelease(v7);
    swift_release(v8);
    v16 = v13 & 1;
    v17 = Color.init(_:bundle:)(0xD000000000000016, 0x80000001000DA310, 0);
    v28[0] = v17;
    v18 = Text.foregroundStyle<A>(_:)(v28, v9, v11, v13 & 1, v15, &type metadata for Color, &protocol witness table for Color);
    v20 = v19;
    v22 = v21;
    v24 = v23;
    sub_10000B64C(v9, v11, v16);
    swift_release(v17);
    swift_bridgeObjectRelease(v15);
    v28[0] = v18;
    v28[1] = v20;
    v29 = v22 & 1;
    v30 = v24;
    if (qword_100116148 != -1)
      swift_once(&qword_100116148, sub_100080304);
    View.accessibilityIdentifier(_:)(qword_1001246A0, *(_QWORD *)algn_1001246A8, &type metadata for Text, &protocol witness table for Text);
    sub_10000B64C(v18, v20, v22 & 1);
    swift_bridgeObjectRelease(v24);
    v25 = sub_100004F7C(&qword_100117F88);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a2, 0, 1, v25);
  }
  else
  {
    v27 = sub_100004F7C(&qword_100117F88);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(a2, 1, 1, v27);
  }
}

uint64_t sub_1000BEBD8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  id v22;
  void *v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v57[2];
  char v58;
  uint64_t v59;

  v56 = a2;
  v3 = type metadata accessor for Date.FormatStyle.TimeStyle(0);
  v51 = *(_QWORD *)(v3 - 8);
  v52 = (char *)v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Date.FormatStyle.DateStyle(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100004F7C(&qword_100117F88);
  v54 = *(_QWORD *)(v10 - 8);
  v55 = v10;
  __chkstk_darwin(v10);
  v53 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100004F7C(&qword_100117528);
  __chkstk_darwin(v12);
  v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Date(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v21 = (char *)&v51 - v20;
  v22 = objc_msgSend(a1, "creationDate");
  if (!v22)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
    goto LABEL_7;
  }
  v23 = v22;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  v24 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v24(v14, v19, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
LABEL_7:
    sub_10000526C((uint64_t)v14, &qword_100117528);
    v49 = 1;
    v48 = v56;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56))(v48, v49, 1, v55);
  }
  v25 = ((uint64_t (*)(char *, char *, uint64_t))v24)(v21, v14, v15);
  v26 = static Date.FormatStyle.DateStyle.long.getter(v25);
  static Date.FormatStyle.TimeStyle.shortened.getter(v26);
  v27 = Date.formatted(date:time:)(v9, v5);
  v29 = v28;
  (*(void (**)(char *, char *))(v51 + 8))(v5, v52);
  v30 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v31 = static Font.caption.getter(v30);
  v32 = Text.font(_:)(v31, v27, v29, 0, _swiftEmptyArrayStorage);
  v34 = v33;
  LOBYTE(v27) = v35;
  v51 = v36;
  v52 = v21;
  v37 = v36;
  swift_bridgeObjectRelease(v29);
  swift_release(v31);
  LOBYTE(v29) = v27 & 1;
  v38 = Color.init(_:bundle:)(0xD000000000000010, 0x80000001000DC2B0, 0);
  v57[0] = v38;
  v39 = Text.foregroundStyle<A>(_:)(v57, v32, v34, v27 & 1, v37, &type metadata for Color, &protocol witness table for Color);
  v41 = v40;
  LOBYTE(v27) = v42;
  v44 = v43;
  sub_10000B64C(v32, v34, v29);
  swift_release(v38);
  swift_bridgeObjectRelease(v51);
  v57[0] = v39;
  v57[1] = v41;
  v45 = v27 & 1;
  v58 = v27 & 1;
  v59 = v44;
  if (qword_100116150 != -1)
    swift_once(&qword_100116150, sub_100080330);
  v46 = v53;
  View.accessibilityIdentifier(_:)(qword_1001246B0, *(_QWORD *)algn_1001246B8, &type metadata for Text, &protocol witness table for Text);
  sub_10000B64C(v39, v41, v45);
  swift_bridgeObjectRelease(v44);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v52, v15);
  v47 = (uint64_t)v46;
  v48 = v56;
  sub_100007C48(v47, v56, &qword_100117F88);
  v49 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56))(v48, v49, 1, v55);
}

uint64_t sub_1000BEFE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  char v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t KeyPath;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t result;
  unint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;

  v83 = a2;
  v3 = sub_100004F7C(&qword_100116EE8);
  __chkstk_darwin(v3);
  v5 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100004F7C(&qword_10011CE70);
  __chkstk_darwin(v6);
  v81 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Font.TextStyle(0);
  v79 = *(_QWORD *)(v8 - 8);
  v80 = v8;
  __chkstk_darwin(v8);
  v78 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_100004F7C(&qword_100117BE8);
  __chkstk_darwin(v73);
  v11 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v12);
  v14 = (_OWORD *)((char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v72 = sub_100004F7C(&qword_10011CE78);
  __chkstk_darwin(v72);
  v16 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_100004F7C(&qword_10011CE80);
  __chkstk_darwin(v74);
  v75 = (uint64_t)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_100004F7C(&qword_10011CE88);
  __chkstk_darwin(v77);
  v76 = (uint64_t)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_100004F7C(&qword_10011CE90);
  __chkstk_darwin(v71);
  v82 = (char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100004F7C(&qword_10011CE98);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v70 = (char *)&v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SHLibrary(0);
  v23 = static SHLibrary.localizedAttribution(for:)(a1);
  if (!v24)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v83, 1, 1, v20);
  v25 = v23;
  v26 = v24;
  v66 = v21;
  v67 = v20;
  v68 = v3;
  v69 = static Edge.Set.all.getter(v23);
  v27 = objc_msgSend((id)objc_opt_self(UIColor), "systemGray6Color");
  v28 = Color.init(uiColor:)(v27);
  v29 = static Edge.Set.all.getter(v28);
  v30 = (char *)v14 + *(int *)(v12 + 20);
  v31 = (uint64_t)v5;
  v32 = enum case for RoundedCornerStyle.continuous(_:);
  v33 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v30, v32, v33);
  __asm { FMOV            V0.2D, #4.0 }
  *v14 = _Q0;
  sub_10001E658((uint64_t)v14, (uint64_t)v11);
  *(_WORD *)&v11[*(int *)(v73 + 36)] = 256;
  sub_100007C8C((uint64_t)v11, (uint64_t)&v16[*(int *)(v72 + 36)], &qword_100117BE8);
  *(_QWORD *)v16 = v25;
  *((_QWORD *)v16 + 1) = v26;
  v16[16] = 0;
  *((_QWORD *)v16 + 3) = _swiftEmptyArrayStorage;
  v16[32] = v69;
  *(_OWORD *)(v16 + 40) = xmmword_1000D8140;
  *(_OWORD *)(v16 + 56) = xmmword_1000D8140;
  v16[72] = 0;
  *((_QWORD *)v16 + 10) = v28;
  v16[88] = v29;
  sub_100025480(v25, v26, 0);
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  swift_retain(v28);
  sub_10000526C((uint64_t)v11, &qword_100117BE8);
  sub_10001E69C((uint64_t)v14);
  sub_10000B64C(v25, v26, 0);
  swift_release(v28);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  v40 = v78;
  v39 = v79;
  v41 = v80;
  (*(void (**)(char *, _QWORD, uint64_t))(v79 + 104))(v78, enum case for Font.TextStyle.caption2(_:), v80);
  v42 = type metadata accessor for Font.Design(0);
  v43 = (uint64_t)v81;
  v44 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v81, 1, 1, v42);
  v45 = static Font.Weight.semibold.getter(v44);
  v46 = static Font.system(_:design:weight:)(v40, v43, *(_QWORD *)&v45, 0);
  sub_10000526C(v43, &qword_10011CE70);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v41);
  KeyPath = swift_getKeyPath(&unk_1000D81B8, v47);
  v49 = v75;
  sub_100007C8C((uint64_t)v16, v75, &qword_10011CE78);
  v50 = (uint64_t *)(v49 + *(int *)(v74 + 36));
  *v50 = KeyPath;
  v50[1] = v46;
  sub_10000526C((uint64_t)v16, &qword_10011CE78);
  v51 = Color.init(_:bundle:)(0xD000000000000016, 0x80000001000DA310, 0);
  v52 = v76;
  sub_100007C8C(v49, v76, &qword_10011CE80);
  v53 = v77;
  *(_QWORD *)(v52 + *(int *)(v77 + 36)) = v51;
  sub_10000526C(v49, &qword_10011CE80);
  v54 = sub_1000BFF90();
  v55 = (uint64_t)v82;
  View.accessibilityIdentifier(_:)(0xD000000000000011, 0x80000001000DCCC0, v53, v54);
  sub_10000526C(v52, &qword_10011CE88);
  v56 = enum case for DynamicTypeSize.xxxLarge(_:);
  v57 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 104))(v31, v56, v57);
  v58 = sub_100004864(&qword_100116F80, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  result = dispatch thunk of static Equatable.== infix(_:_:)(v31, v31, v57, v58);
  if ((result & 1) != 0)
  {
    v60 = sub_1000C01A0();
    v61 = sub_10000522C(&qword_100116F88, &qword_100116EE8, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
    v62 = v70;
    View.dynamicTypeSize<A>(_:)(v31, v71, v68, v60, v61);
    sub_10000526C(v31, &qword_100116EE8);
    sub_10000526C(v55, &qword_10011CE90);
    v64 = v66;
    v63 = v67;
    v65 = v83;
    (*(void (**)(uint64_t, char *, uint64_t))(v66 + 32))(v83, v62, v67);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v64 + 56))(v65, 0, 1, v63);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000BF6A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t KeyPath;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t *v69;
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t *v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD v109[2];
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  char v116;

  v102 = a3;
  v108 = a5;
  v91 = sub_100004F7C(&qword_100117F30);
  __chkstk_darwin(v91);
  v93 = (uint64_t *)((char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_100004F7C(&qword_100117F50);
  __chkstk_darwin(v9);
  v92 = (char *)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_100004F7C(&qword_10011CEF8);
  __chkstk_darwin(v90);
  v94 = (uint64_t *)((char *)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v96 = sub_100004F7C(&qword_10011CF00);
  __chkstk_darwin(v96);
  v95 = (uint64_t)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_100004F7C(&qword_10011CF08);
  v103 = *(_QWORD *)(v106 - 8);
  v13 = __chkstk_darwin(v106);
  v98 = (char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v97 = (char *)&v89 - v15;
  v16 = sub_100004F7C(&qword_10011CF10);
  v17 = __chkstk_darwin(v16);
  v107 = (uint64_t)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v105 = (char *)&v89 - v19;
  v20 = sub_100004F7C(&qword_10011CF18);
  v21 = __chkstk_darwin(v20);
  v104 = (uint64_t)&v89 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v21);
  v100 = (char *)&v89 - v24;
  __chkstk_darwin(v23);
  v101 = (uint64_t)&v89 - v25;
  v26 = swift_bridgeObjectRetain(a2);
  v28 = static Font.callout.getter(v26, v27);
  static Font.Weight.semibold.getter(v28);
  v29 = Font.weight(_:)(v28);
  swift_release(v28);
  v30 = Text.font(_:)(v29, a1, a2, 0, _swiftEmptyArrayStorage);
  v32 = v31;
  LOBYTE(v28) = v33;
  v35 = v34;
  swift_bridgeObjectRelease(a2);
  swift_release(v29);
  LOBYTE(v29) = v28 & 1;
  LODWORD(v109[0]) = static HierarchicalShapeStyle.primary.getter(v36);
  v37 = Text.foregroundStyle<A>(_:)(v109, v30, v32, v28 & 1, v35, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  sub_10000B64C(v30, v32, v29);
  swift_bridgeObjectRelease(v35);
  v45 = a4 & 1;
  if (v45)
    v46 = 0;
  else
    v46 = 2;
  KeyPath = swift_getKeyPath(&unk_1000D81E8, v44);
  v49 = swift_getKeyPath(&unk_1000D8218, v48);
  v109[0] = v37;
  v109[1] = v39;
  v50 = v41 & 1;
  v110 = v41 & 1;
  v99 = v43;
  v111 = v43;
  v112 = KeyPath;
  v113 = v46;
  v114 = v45;
  v115 = v49;
  v116 = 0;
  if (qword_100116140 != -1)
    swift_once(&qword_100116140, sub_1000802D8);
  v51 = qword_100124690;
  v52 = *(_QWORD *)algn_100124698;
  v53 = sub_100004F7C(&qword_10011CF20);
  v54 = sub_1000C0234();
  v55 = (uint64_t)v100;
  View.accessibilityIdentifier(_:)(v51, v52, v53, v54);
  sub_10000B64C(v37, v39, v50);
  swift_release(v49);
  swift_release(KeyPath);
  swift_bridgeObjectRelease(v99);
  v56 = v101;
  sub_100007C48(v55, v101, &qword_10011CF18);
  if (objc_msgSend(v102, "explicitContent"))
  {
    if (qword_100116380 != -1)
      swift_once(&qword_100116380, sub_1000BE3BC);
    v57 = qword_10011CE18;
    v58 = unk_10011CE20;
    swift_bridgeObjectRetain(unk_10011CE20);
    v59 = Image.init(systemName:)(v57, v58);
    v60 = static Font.caption.getter(v59);
    v62 = swift_getKeyPath(&unk_1000D81B8, v61);
    v63 = (uint64_t)v92;
    static SymbolRenderingMode.palette.getter(v64);
    v65 = type metadata accessor for SymbolRenderingMode(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v63, 0, 1, v65);
    v67 = swift_getKeyPath(&unk_1000D8248, v66);
    v68 = v93;
    sub_100007C8C(v63, (uint64_t)v93 + *(int *)(v91 + 28), &qword_100117F50);
    *v68 = v67;
    v69 = v94;
    sub_100007C8C((uint64_t)v68, (uint64_t)v94 + *(int *)(v90 + 36), &qword_100117F30);
    *v69 = v59;
    v69[1] = v62;
    v69[2] = v60;
    swift_retain(v59);
    swift_retain(v62);
    swift_retain(v60);
    sub_10000526C((uint64_t)v68, &qword_100117F30);
    sub_10000526C(v63, &qword_100117F50);
    swift_release(v60);
    swift_release(v62);
    v70 = swift_release(v59);
    v71 = static Color.white.getter(v70);
    v72 = Color.init(_:bundle:)(0xD000000000000016, 0x80000001000DA310, 0);
    v73 = v95;
    sub_100007C8C((uint64_t)v69, v95, &qword_10011CEF8);
    v74 = v96;
    v75 = (uint64_t *)(v73 + *(int *)(v96 + 36));
    *v75 = v71;
    v75[1] = v72;
    sub_10000526C((uint64_t)v69, &qword_10011CEF8);
    if (qword_100116158 != -1)
      swift_once(&qword_100116158, sub_100080358);
    v76 = qword_1001246C0;
    v77 = *(_QWORD *)algn_1001246C8;
    v78 = sub_1000C02C0();
    v79 = (uint64_t)v98;
    View.accessibilityIdentifier(_:)(v76, v77, v74, v78);
    sub_10000526C(v73, &qword_10011CF00);
    v81 = (uint64_t)v105;
    v80 = v106;
    if (qword_100116388 != -1)
      swift_once(&qword_100116388, sub_1000BE3EC);
    v82 = (uint64_t)v97;
    ModifiedContent<>.accessibilityLabel(_:)(qword_10011CE28, unk_10011CE30, byte_10011CE38, qword_10011CE40, v80);
    sub_10000526C(v79, &qword_10011CF08);
    sub_100007C48(v82, v81, &qword_10011CF08);
    v83 = 0;
  }
  else
  {
    v83 = 1;
    v81 = (uint64_t)v105;
    v80 = v106;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v103 + 56))(v81, v83, 1, v80);
  v84 = v104;
  sub_100007C8C(v56, v104, &qword_10011CF18);
  v85 = v107;
  sub_100007C8C(v81, v107, &qword_10011CF10);
  v86 = v108;
  sub_100007C8C(v84, v108, &qword_10011CF18);
  v87 = sub_100004F7C(&qword_10011CF30);
  sub_100007C8C(v85, v86 + *(int *)(v87 + 48), &qword_10011CF10);
  sub_10000526C(v81, &qword_10011CF10);
  sub_10000526C(v56, &qword_10011CF18);
  sub_10000526C(v85, &qword_10011CF10);
  return sub_10000526C(v84, &qword_10011CF18);
}

uint64_t sub_1000BFE88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v3 = sub_100004F7C(&qword_1001189F8);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void **)v1;
  v8 = *(_BYTE *)(v1 + 8);
  *(_QWORD *)v6 = static HorizontalAlignment.leading.getter(v4, v9, v10, v11, v12, v13, v14, v15);
  *((_QWORD *)v6 + 1) = 0x4020000000000000;
  v6[16] = 0;
  v16 = sub_100004F7C(&qword_10011CE48);
  v17 = sub_1000BE430(v7, v8, (uint64_t)&v6[*(int *)(v16 + 44)]);
  v18 = static Alignment.leading.getter(v17);
  sub_100034BA4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a1, 0.0, 1, 0.0, 1, v18, v19);
  return sub_10000526C((uint64_t)v6, &qword_1001189F8);
}

unint64_t sub_1000BFF90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011CEA0;
  if (!qword_10011CEA0)
  {
    v1 = sub_1000050C8(&qword_10011CE88);
    sub_1000C0014();
    sub_10000522C(&qword_100117008, (uint64_t *)&unk_100117010, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011CEA0);
  }
  return result;
}

unint64_t sub_1000C0014()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011CEA8;
  if (!qword_10011CEA8)
  {
    v1 = sub_1000050C8(&qword_10011CE80);
    sub_1000C0098();
    sub_10000522C(&qword_100116538, &qword_100116540, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011CEA8);
  }
  return result;
}

unint64_t sub_1000C0098()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011CEB0;
  if (!qword_10011CEB0)
  {
    v1 = sub_1000050C8(&qword_10011CE78);
    sub_1000C011C();
    sub_10000522C(&qword_10011A0F8, &qword_100117BE8, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011CEB0);
  }
  return result;
}

unint64_t sub_1000C011C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011CEB8;
  if (!qword_10011CEB8)
  {
    v1 = sub_1000050C8(&qword_10011CEC0);
    sub_1000253E0();
    sub_10000522C(&qword_10011A0E8, &qword_10011A0F0, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011CEB8);
  }
  return result;
}

unint64_t sub_1000C01A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011CEC8;
  if (!qword_10011CEC8)
  {
    v1 = sub_1000050C8(&qword_10011CE90);
    sub_1000BFF90();
    sub_100004864((unint64_t *)&qword_100116570, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011CEC8);
  }
  return result;
}

unint64_t sub_1000C0234()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011CF28;
  if (!qword_10011CF28)
  {
    v1 = sub_1000050C8(&qword_10011CF20);
    sub_100011FD8();
    sub_10000522C(&qword_1001181C0, &qword_1001181C8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011CF28);
  }
  return result;
}

unint64_t sub_1000C02C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011CF38;
  if (!qword_10011CF38)
  {
    v1 = sub_1000050C8(&qword_10011CF00);
    sub_1000C0344();
    sub_10000522C(&qword_1001178F8, &qword_100117900, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier2<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011CF38);
  }
  return result;
}

unint64_t sub_1000C0344()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011CF40;
  if (!qword_10011CF40)
  {
    v1 = sub_1000050C8(&qword_10011CEF8);
    sub_1000C03C8();
    sub_10000522C(&qword_100117F28, &qword_100117F30, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011CF40);
  }
  return result;
}

unint64_t sub_1000C03C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011CF48;
  if (!qword_10011CF48)
  {
    v1 = sub_1000050C8(&qword_10011CF50);
    sub_10000522C(&qword_100116538, &qword_100116540, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011CF48);
  }
  return result;
}

unint64_t sub_1000C0450()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011CF58;
  if (!qword_10011CF58)
  {
    v1 = sub_1000050C8(&qword_100118A00);
    sub_10000522C(qword_10011CF60, &qword_1001189F8, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011CF58);
  }
  return result;
}

uint64_t sub_1000C04D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  swift_retain(v3);
  return a1;
}

uint64_t sub_1000C050C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 16));
}

_QWORD *sub_1000C0514(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  v3 = a2[2];
  v4 = a1[2];
  a1[1] = a2[1];
  a1[2] = v3;
  swift_retain(v3);
  swift_release(v4);
  return a1;
}

uint64_t sub_1000C0554(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  swift_release(v4);
  return a1;
}

uint64_t type metadata accessor for SafeAreaModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100018E38(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SafeAreaModifier);
}

uint64_t sub_1000C0598(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_1000DF7B8, 1);
}

uint64_t sub_1000C05CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t WitnessTable;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[4];

  v42 = a3;
  v43 = a4;
  v41 = a2;
  v44 = a1;
  v45 = a7;
  v39 = a6;
  v9 = type metadata accessor for SafeAreaModifier(255, a5, a6, a4);
  WitnessTable = swift_getWitnessTable(&unk_1000D82C0, v9);
  v11 = type metadata accessor for _ViewModifier_Content(255, v9, WitnessTable);
  v12 = sub_1000050C8(&qword_10011A2E0);
  v13 = type metadata accessor for _PreferenceWritingModifier(255, a5, a6);
  v14 = type metadata accessor for ModifiedContent(255, v12, v13);
  v48[2] = sub_10006E6C0();
  v48[3] = swift_getWitnessTable(&protocol conformance descriptor for _PreferenceWritingModifier<A>, v13);
  v15 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v14);
  v16 = type metadata accessor for GeometryReader(255, v14, v15);
  v17 = swift_getWitnessTable(&protocol conformance descriptor for GeometryReader<A>, v16);
  v38 = type metadata accessor for _BackgroundModifier(255, v16, v17);
  v18 = type metadata accessor for ModifiedContent(0, v11, v38);
  v40 = *(_QWORD *)(v18 - 8);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (char *)&v38 - v22;
  v24 = (_QWORD *)swift_allocObject(&unk_10010E3C0, 56, 7);
  v25 = v39;
  v24[2] = a5;
  v24[3] = v25;
  v26 = v42;
  v24[4] = v41;
  v24[5] = v26;
  v27 = v43;
  v24[6] = v43;
  swift_retain(v27);
  v28 = GeometryReader.init(content:)(sub_1000C0AC8, v24, v14, v15);
  v30 = v29;
  v48[0] = v28;
  v48[1] = v29;
  v31 = static Alignment.center.getter(v28);
  v33 = v32;
  v34 = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v11);
  View.background<A>(_:alignment:)(v48, v31, v33, v11, v16, v34, v17);
  swift_release(v30);
  v35 = swift_getWitnessTable(&protocol conformance descriptor for _BackgroundModifier<A>, v38);
  v46 = v34;
  v47 = v35;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v18);
  sub_100093E10((uint64_t)v21, v18, (uint64_t)v23);
  v36 = *(void (**)(char *, uint64_t))(v40 + 8);
  v36(v21, v18);
  sub_100091208((uint64_t)v23, v18, v45);
  return ((uint64_t (*)(char *, uint64_t))v36)(v23, v18);
}

uint64_t sub_1000C0880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t WitnessTable;
  void (*v27)(char *, uint64_t);
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t KeyPath;
  uint64_t v38;

  v29[1] = a1;
  v29[2] = a4;
  v33 = a2;
  v34 = a7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a6, a5, &protocol requirements base descriptor for PreferenceKey, &associated type descriptor for PreferenceKey.Value);
  v30 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v31 = AssociatedTypeWitness;
  __chkstk_darwin(AssociatedTypeWitness);
  v12 = (char *)v29 - v11;
  v13 = sub_1000050C8(&qword_10011A2E0);
  v14 = type metadata accessor for _PreferenceWritingModifier(255, a5, a6);
  v15 = type metadata accessor for ModifiedContent(0, v13, v14);
  v32 = *(_QWORD *)(v15 - 8);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v16);
  v21 = (char *)v29 - v20;
  v22 = static Color.clear.getter(v19);
  KeyPath = swift_getKeyPath(&unk_1000D8310, v23);
  v38 = v22;
  v24 = GeometryProxy.safeAreaInsets.getter();
  a3(v24);
  v25 = sub_10006E6C0();
  View.preference<A>(key:value:)(v33, v12, v13, a5, v25, a6);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v31);
  swift_release(KeyPath);
  swift_release(v38);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for _PreferenceWritingModifier<A>, v14);
  v35 = v25;
  v36 = WitnessTable;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v15);
  sub_100093E10((uint64_t)v18, v15, (uint64_t)v21);
  v27 = *(void (**)(char *, uint64_t))(v32 + 8);
  v27(v18, v15);
  sub_100091208((uint64_t)v21, v15, v34);
  return ((uint64_t (*)(char *, uint64_t))v27)(v21, v15);
}

uint64_t sub_1000C0A90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;

  return sub_1000C05CC(a1, *v3, v3[1], v3[2], *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_1000C0AA4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1000C0AC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1000C0880(a1, *(_QWORD *)(v2 + 32), *(void (**)(uint64_t))(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1000C0AD8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1000C0B00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1000C0B28(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.foregroundColor.setter(v1);
}

uint64_t sub_1000C0B50(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.foregroundColor.setter(v1);
}

uint64_t sub_1000C0B78(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *a1;
  v5 = a1[1];
  v6 = type metadata accessor for SafeAreaModifier(255, *a1, v5, a4);
  WitnessTable = swift_getWitnessTable(&unk_1000D82C0, v6);
  v8 = type metadata accessor for _ViewModifier_Content(255, v6, WitnessTable);
  v9 = sub_1000050C8(&qword_10011A2E0);
  v10 = type metadata accessor for _PreferenceWritingModifier(255, v4, v5);
  v11 = type metadata accessor for ModifiedContent(255, v9, v10);
  sub_10006E6C0();
  swift_getWitnessTable(&protocol conformance descriptor for _PreferenceWritingModifier<A>, v10);
  v12 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v11);
  v13 = type metadata accessor for GeometryReader(255, v11, v12);
  v14 = swift_getWitnessTable(&protocol conformance descriptor for GeometryReader<A>, v13);
  v15 = type metadata accessor for _BackgroundModifier(255, v13, v14);
  v16 = type metadata accessor for ModifiedContent(255, v8, v15);
  swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v8);
  swift_getWitnessTable(&protocol conformance descriptor for _BackgroundModifier<A>, v15);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
}

uint64_t sub_1000C0CD0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1000C0D2C + 4 * byte_1000D8380[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain(v6);
  return v7;
}

void sub_1000C0F80(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;

  switch(swift_getEnumCaseMultiPayload(a1, a2))
  {
    case 0u:
    case 1u:
      v4 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      v3 = *(_QWORD *)(a1 + *(int *)(sub_100004F7C(&qword_10011A7E0) + 48) + 8);
      goto LABEL_4;
    case 2u:
    case 4u:
    case 5u:
    case 6u:
      v3 = *(_QWORD *)(a1 + 8);
LABEL_4:
      swift_release(v3);
      break;
    case 3u:
    case 7u:
      v5 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
      break;
    case 8u:
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
      v6 = (int *)type metadata accessor for StreamingService(0);
      v7 = a1 + v6[5];
      v8 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + v6[6] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + v6[7] + 8));
      break;
    default:
      return;
  }
}

void sub_1000C10A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;

  v3 = (char *)sub_1000C10F4 + 4 * byte_1000D8392[swift_getEnumCaseMultiPayload(a2, a3)];
  __asm { BR              X10 }
}

uint64_t sub_1000C10F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;

  v3 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v0, v2, v3);
  v4 = *(int *)(sub_100004F7C(&qword_10011A7E0) + 48);
  v5 = (_QWORD *)(v0 + v4);
  v6 = (_QWORD *)(v2 + v4);
  v7 = v6[1];
  *v5 = *v6;
  v5[1] = v7;
  swift_retain(v7);
  swift_storeEnumTagMultiPayload(v0, v1, 0);
  return v0;
}

uint64_t sub_1000C1328(uint64_t result, uint64_t a2, uint64_t a3)
{
  char *v5;

  if (result != a2)
  {
    sub_100078238(result);
    v5 = (char *)&loc_1000C1388 + 4 * byte_1000D839B[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t _s6ActionOMa(uint64_t a1)
{
  return sub_100078C78(a1, qword_10011D058, (uint64_t)&_s6ActionOMn);
}

_OWORD *sub_1000C15E8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  switch(swift_getEnumCaseMultiPayload(a2, a3))
  {
    case 0u:
      v6 = type metadata accessor for URL(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = sub_100004F7C(&qword_10011A7E0);
      *(_OWORD *)((char *)a1 + *(int *)(v7 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v7 + 48));
      v8 = a1;
      v9 = a3;
      v10 = 0;
      goto LABEL_8;
    case 1u:
      v11 = type metadata accessor for URL(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
      v12 = sub_100004F7C(&qword_10011A7E0);
      *(_OWORD *)((char *)a1 + *(int *)(v12 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v12 + 48));
      v8 = a1;
      v9 = a3;
      v10 = 1;
      goto LABEL_8;
    case 3u:
      v13 = type metadata accessor for URL(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
      v8 = a1;
      v9 = a3;
      v10 = 3;
      goto LABEL_8;
    case 7u:
      v14 = type metadata accessor for URL(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
      v8 = a1;
      v9 = a3;
      v10 = 7;
      goto LABEL_8;
    case 8u:
      *a1 = *a2;
      v15 = (int *)type metadata accessor for StreamingService(0);
      v16 = v15[5];
      v17 = (char *)a1 + v16;
      v18 = (char *)a2 + v16;
      v19 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
      *(_OWORD *)((char *)a1 + v15[6]) = *(_OWORD *)((char *)a2 + v15[6]);
      *(_OWORD *)((char *)a1 + v15[7]) = *(_OWORD *)((char *)a2 + v15[7]);
      *((_BYTE *)a1 + v15[8]) = *((_BYTE *)a2 + v15[8]);
      v8 = a1;
      v9 = a3;
      v10 = 8;
LABEL_8:
      swift_storeEnumTagMultiPayload(v8, v9, v10);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *sub_1000C17CC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  if (a1 != a2)
  {
    sub_100078238((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        v6 = type metadata accessor for URL(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        v7 = sub_100004F7C(&qword_10011A7E0);
        *(_OWORD *)((char *)a1 + *(int *)(v7 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v7 + 48));
        v8 = a1;
        v9 = a3;
        v10 = 0;
        goto LABEL_9;
      case 1u:
        v11 = type metadata accessor for URL(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
        v12 = sub_100004F7C(&qword_10011A7E0);
        *(_OWORD *)((char *)a1 + *(int *)(v12 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v12 + 48));
        v8 = a1;
        v9 = a3;
        v10 = 1;
        goto LABEL_9;
      case 3u:
        v13 = type metadata accessor for URL(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
        v8 = a1;
        v9 = a3;
        v10 = 3;
        goto LABEL_9;
      case 7u:
        v14 = type metadata accessor for URL(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
        v8 = a1;
        v9 = a3;
        v10 = 7;
        goto LABEL_9;
      case 8u:
        *a1 = *a2;
        v15 = (int *)type metadata accessor for StreamingService(0);
        v16 = v15[5];
        v17 = (char *)a1 + v16;
        v18 = (char *)a2 + v16;
        v19 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
        *(_OWORD *)((char *)a1 + v15[6]) = *(_OWORD *)((char *)a2 + v15[6]);
        *(_OWORD *)((char *)a1 + v15[7]) = *(_OWORD *)((char *)a2 + v15[7]);
        *((_BYTE *)a1 + v15[8]) = *((_BYTE *)a2 + v15[8]);
        v8 = a1;
        v9 = a3;
        v10 = 8;
LABEL_9:
        swift_storeEnumTagMultiPayload(v8, v9, v10);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1000C19C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t sub_1000C19CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_1000C19DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_storeEnumTagMultiPayload(a1, a3, a2);
}

uint64_t sub_1000C19EC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _BYTE v6[32];
  _BYTE v7[32];
  _QWORD v8[9];

  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_getTupleTypeLayout2(v7, v4, (char *)&value witness table for () + 64);
    v8[0] = v7;
    swift_getTupleTypeLayout2(v6, v4, (char *)&value witness table for () + 64);
    v8[1] = v6;
    v8[2] = (char *)&value witness table for () + 64;
    v8[3] = v4;
    v8[4] = (char *)&value witness table for () + 64;
    v8[5] = (char *)&value witness table for () + 64;
    v8[6] = (char *)&value witness table for () + 64;
    v8[7] = v4;
    result = type metadata accessor for StreamingService(319);
    if (v5 <= 0x3F)
    {
      v8[8] = *(_QWORD *)(result - 8) + 64;
      swift_initEnumMetadataMultiPayload(a1, 256, 9, v8);
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1000C1AB8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1000C2304(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for ButtonRole);
}

uint64_t sub_1000C1AC4(uint64_t a1, uint64_t a2)
{
  return sub_1000C23E8(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for ButtonRole);
}

_QWORD *sub_1000C1AD0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  return sub_1000C2460(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for ButtonRole);
}

_QWORD *sub_1000C1ADC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  return sub_1000C251C(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for ButtonRole);
}

_OWORD *sub_1000C1AE8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  return sub_1000C25F4(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for ButtonRole);
}

_QWORD *sub_1000C1AF4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  return sub_1000C2678(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for ButtonRole);
}

uint64_t sub_1000C1B00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000C1B0C);
}

uint64_t sub_1000C1B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000C2730(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for ButtonRole);
}

uint64_t sub_1000C1B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000C1B24);
}

uint64_t sub_1000C1B24(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1000C27C4(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ButtonRole);
}

uint64_t type metadata accessor for SyncAction(uint64_t a1)
{
  return sub_100078C78(a1, qword_10011D0E8, (uint64_t)&nominal type descriptor for SyncAction);
}

uint64_t sub_1000C1B44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000C2858(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonRole);
}

uint64_t sub_1000C1B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000C1B5C);
}

uint64_t sub_1000C1B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000C2730(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for ButtonRole);
}

uint64_t sub_1000C1B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000C1B74);
}

uint64_t sub_1000C1B74(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1000C27C4(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ButtonRole);
}

uint64_t type metadata accessor for AsyncThrowingAction(uint64_t a1)
{
  return sub_100078C78(a1, qword_10011D180, (uint64_t)&nominal type descriptor for AsyncThrowingAction);
}

uint64_t *sub_1000C1B94(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = sub_100004F7C(&qword_1001166A0);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *a1 = *a2;
      swift_retain(v13);
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = a3[5];
    v15 = a3[6];
    v16 = (uint64_t *)((char *)a1 + v14);
    v17 = (uint64_t *)((char *)a2 + v14);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = (uint64_t *)((char *)a1 + v15);
    v20 = (uint64_t *)((char *)a2 + v15);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = a3[7];
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = type metadata accessor for URL(0);
    v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v21);
    v26(v23, v24, v25);
  }
  return a1;
}

uint64_t sub_1000C1CD4(_QWORD *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v4 = sub_100004F7C(&qword_1001166A0);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[6] + 8));
  v6 = (char *)a1 + a2[7];
  v7 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t *sub_1000C1D7C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);

  v6 = sub_100004F7C(&qword_1001166A0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = a3[5];
  v13 = a3[6];
  v14 = (uint64_t *)((char *)a1 + v12);
  v15 = (uint64_t *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (uint64_t *)((char *)a1 + v13);
  v18 = (uint64_t *)((char *)a2 + v13);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = a3[7];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = type metadata accessor for URL(0);
  v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRetain(v19);
  v24(v21, v22, v23);
  return a1;
}

uint64_t *sub_1000C1E90(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  if (a1 != a2)
  {
    sub_1000C1FC4((uint64_t)a1);
    v6 = sub_100004F7C(&qword_1001166A0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v12 = a3[5];
  v13 = (uint64_t *)((char *)a1 + v12);
  v14 = (uint64_t *)((char *)a2 + v12);
  *v13 = *v14;
  v15 = v14[1];
  v16 = v13[1];
  v13[1] = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  v17 = a3[6];
  v18 = (uint64_t *)((char *)a1 + v17);
  v19 = (uint64_t *)((char *)a2 + v17);
  *v18 = *v19;
  v20 = v19[1];
  v21 = v18[1];
  v18[1] = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v21);
  v22 = a3[7];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
  return a1;
}

uint64_t sub_1000C1FC4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100004F7C(&qword_1001166A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_1000C2004(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = sub_100004F7C(&qword_1001166A0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v8] = *(_OWORD *)&a2[v8];
  v9 = a3[7];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

char *sub_1000C20E0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  if (a1 != a2)
  {
    sub_1000C1FC4((uint64_t)a1);
    v6 = sub_100004F7C(&qword_1001166A0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v12 = *(_QWORD *)v10;
  v11 = *((_QWORD *)v10 + 1);
  v13 = *((_QWORD *)v9 + 1);
  *(_QWORD *)v9 = v12;
  *((_QWORD *)v9 + 1) = v11;
  swift_bridgeObjectRelease(v13);
  v14 = a3[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v18 = *(_QWORD *)v16;
  v17 = *((_QWORD *)v16 + 1);
  v19 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v15 = v18;
  *((_QWORD *)v15 + 1) = v17;
  swift_bridgeObjectRelease(v19);
  v20 = a3[7];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
  return a1;
}

uint64_t sub_1000C21F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000C21FC);
}

uint64_t sub_1000C2200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000C220C);
}

uint64_t type metadata accessor for _OpenAction(uint64_t a1)
{
  return sub_100078C78(a1, qword_10011D218, (uint64_t)&nominal type descriptor for _OpenAction);
}

void sub_1000C2224(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  sub_1000090FC(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = &unk_1000D83D0;
    v6[2] = &unk_1000D83D0;
    v4 = type metadata accessor for URL(319);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 4, v6, a1 + 16);
    }
  }
}

uint64_t sub_1000C22B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000C22C0);
}

uint64_t sub_1000C22C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000C2730(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for ButtonRole);
}

uint64_t sub_1000C22CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000C22D8);
}

uint64_t sub_1000C22D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1000C27C4(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ButtonRole);
}

uint64_t type metadata accessor for AsyncAction(uint64_t a1)
{
  return sub_100078C78(a1, qword_10011D2B0, (uint64_t)&nominal type descriptor for AsyncAction);
}

uint64_t *sub_1000C22F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1000C2304(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for URL);
}

uint64_t *sub_1000C2304(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t *v5;
  int v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v5 = a1;
  v6 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v6 & 0x20000) != 0)
  {
    v18 = *a2;
    *v5 = *a2;
    v5 = (uint64_t *)(v18 + ((v6 + 16) & ~(unint64_t)v6));
  }
  else
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    v10 = *(int *)(a3 + 24);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = a4(0);
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    v14(v11, v12, v13);
    v15 = *(int *)(a3 + 28);
    v16 = (uint64_t *)((char *)v5 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
  }
  swift_retain(v18);
  return v5;
}

uint64_t sub_1000C23DC(uint64_t a1, uint64_t a2)
{
  return sub_1000C23E8(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for URL);
}

uint64_t sub_1000C23E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v6 = a1 + *(int *)(a2 + 24);
  v7 = a3(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 28) + 8));
}

_QWORD *sub_1000C2454(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  return sub_1000C2460(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for URL);
}

_QWORD *sub_1000C2460(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  v8 = a2[3];
  a1[2] = a2[2];
  a1[3] = v8;
  v9 = *(int *)(a3 + 24);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = a4(0);
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  v13(v10, v11, v12);
  v14 = *(int *)(a3 + 28);
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  swift_retain(v17);
  return a1;
}

_QWORD *sub_1000C2510(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  return sub_1000C251C(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for URL);
}

_QWORD *sub_1000C251C(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  *a1 = *a2;
  v8 = a2[1];
  v9 = a1[1];
  a1[1] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  a1[2] = a2[2];
  v10 = a2[3];
  v11 = a1[3];
  a1[3] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = a4(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  v16 = *(int *)(a3 + 28);
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v19 = v18[1];
  v20 = v17[1];
  *v17 = *v18;
  v17[1] = v19;
  swift_retain(v19);
  swift_release(v20);
  return a1;
}

_OWORD *sub_1000C25E8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  return sub_1000C25F4(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for URL);
}

_OWORD *sub_1000C25F4(_OWORD *a1, _OWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = a4(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

_QWORD *sub_1000C266C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  return sub_1000C2678(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for URL);
}

_QWORD *sub_1000C2678(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v8 = a2[1];
  v9 = a1[1];
  *a1 = *a2;
  a1[1] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = a2[3];
  v11 = a1[3];
  a1[2] = a2[2];
  a1[3] = v10;
  swift_bridgeObjectRelease(v11);
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = a4(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = *(int *)(a3 + 28);
  v17 = *(_QWORD *)((char *)a1 + v16 + 8);
  *(_OWORD *)((char *)a1 + v16) = *(_OWORD *)((char *)a2 + v16);
  swift_release(v17);
  return a1;
}

uint64_t sub_1000C2718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000C2724);
}

uint64_t sub_1000C2724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000C2730(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for URL);
}

uint64_t sub_1000C2730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  unint64_t v5;
  uint64_t v9;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v5 = *(_QWORD *)(a1 + 8);
    if (v5 >= 0xFFFFFFFF)
      LODWORD(v5) = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = a4(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v9);
  }
}

uint64_t sub_1000C27AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000C27B8);
}

uint64_t sub_1000C27B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1000C27C4(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for URL);
}

uint64_t sub_1000C27C4(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v6;
  uint64_t v8;

  v6 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = a5(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6 + *(int *)(a4 + 24), a2, a2, v8);
  }
  return result;
}

uint64_t type metadata accessor for ShareAction(uint64_t a1)
{
  return sub_100078C78(a1, qword_10011D348, (uint64_t)&nominal type descriptor for ShareAction);
}

uint64_t sub_1000C284C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000C2858(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for URL);
}

uint64_t sub_1000C2858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v6;
  _QWORD v7[4];

  v7[0] = &unk_1000D83D0;
  v7[1] = &unk_1000D83D0;
  result = a4(319);
  if (v6 <= 0x3F)
  {
    v7[2] = *(_QWORD *)(result - 8) + 64;
    v7[3] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 256, 4, v7, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t *sub_1000C28D8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_100004F7C(&qword_1001166A0);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *a1 = *a2;
      swift_retain(v13);
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = a3[5];
    v15 = a3[6];
    v16 = (uint64_t *)((char *)a1 + v14);
    v17 = (uint64_t *)((char *)a2 + v14);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = (uint64_t *)((char *)a1 + v15);
    v20 = (uint64_t *)((char *)a2 + v15);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = a3[7];
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = type metadata accessor for URL(0);
    v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v21);
    v26(v23, v24, v25);
    v27 = a3[8];
    v28 = (uint64_t *)((char *)a1 + v27);
    v29 = (uint64_t *)((char *)a2 + v27);
    v12 = v29[1];
    *v28 = *v29;
    v28[1] = v12;
  }
  swift_retain(v12);
  return a1;
}

double sub_1000C2A34(_QWORD *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double result;

  v4 = sub_100004F7C(&qword_1001166A0);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[6] + 8));
  v6 = (char *)a1 + a2[7];
  v7 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  *(_QWORD *)&result = swift_release(*(_QWORD *)((char *)a1 + a2[8] + 8)).n128_u64[0];
  return result;
}

uint64_t *sub_1000C2AF4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;

  v6 = sub_100004F7C(&qword_1001166A0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = a3[5];
  v13 = a3[6];
  v14 = (uint64_t *)((char *)a1 + v12);
  v15 = (uint64_t *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (uint64_t *)((char *)a1 + v13);
  v18 = (uint64_t *)((char *)a2 + v13);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = a3[7];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = type metadata accessor for URL(0);
  v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRetain(v19);
  v24(v21, v22, v23);
  v25 = a3[8];
  v26 = (uint64_t *)((char *)a1 + v25);
  v27 = (uint64_t *)((char *)a2 + v25);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  swift_retain(v28);
  return a1;
}

uint64_t *sub_1000C2C28(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  if (a1 != a2)
  {
    sub_1000C1FC4((uint64_t)a1);
    v6 = sub_100004F7C(&qword_1001166A0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v12 = a3[5];
  v13 = (uint64_t *)((char *)a1 + v12);
  v14 = (uint64_t *)((char *)a2 + v12);
  *v13 = *v14;
  v15 = v14[1];
  v16 = v13[1];
  v13[1] = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  v17 = a3[6];
  v18 = (uint64_t *)((char *)a1 + v17);
  v19 = (uint64_t *)((char *)a2 + v17);
  *v18 = *v19;
  v20 = v19[1];
  v21 = v18[1];
  v18[1] = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v21);
  v22 = a3[7];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
  v26 = a3[8];
  v27 = (uint64_t *)((char *)a1 + v26);
  v28 = (uint64_t *)((char *)a2 + v26);
  v29 = v28[1];
  v30 = v27[1];
  *v27 = *v28;
  v27[1] = v29;
  swift_retain(v29);
  swift_release(v30);
  return a1;
}

char *sub_1000C2D88(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = sub_100004F7C(&qword_1001166A0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v8] = *(_OWORD *)&a2[v8];
  v9 = a3[7];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  *(_OWORD *)&a1[a3[8]] = *(_OWORD *)&a2[a3[8]];
  return a1;
}

char *sub_1000C2E78(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if (a1 != a2)
  {
    sub_1000C1FC4((uint64_t)a1);
    v6 = sub_100004F7C(&qword_1001166A0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v12 = *(_QWORD *)v10;
  v11 = *((_QWORD *)v10 + 1);
  v13 = *((_QWORD *)v9 + 1);
  *(_QWORD *)v9 = v12;
  *((_QWORD *)v9 + 1) = v11;
  swift_bridgeObjectRelease(v13);
  v14 = a3[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v18 = *(_QWORD *)v16;
  v17 = *((_QWORD *)v16 + 1);
  v19 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v15 = v18;
  *((_QWORD *)v15 + 1) = v17;
  swift_bridgeObjectRelease(v19);
  v20 = a3[7];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
  v24 = a3[8];
  v25 = *(_QWORD *)&a1[v24 + 8];
  *(_OWORD *)&a1[v24] = *(_OWORD *)&a2[v24];
  swift_release(v25);
  return a1;
}

uint64_t sub_1000C2FA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000C2FB4);
}

uint64_t sub_1000C2FB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_100004F7C(&qword_100116768);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = type metadata accessor for URL(0);
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_1000C3068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000C3074);
}

uint64_t sub_1000C3078(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_100004F7C(&qword_100116768);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      return result;
    }
    v10 = type metadata accessor for URL(0);
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for OpenAction(uint64_t a1)
{
  return sub_100078C78(a1, qword_10011D3E0, (uint64_t)&nominal type descriptor for OpenAction);
}

void sub_1000C3138(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  sub_1000090FC(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = &unk_1000D83D0;
    v6[2] = &unk_1000D83D0;
    v4 = type metadata accessor for URL(319);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      v6[4] = (char *)&value witness table for () + 64;
      swift_initStructMetadata(a1, 256, 5, v6, a1 + 16);
    }
  }
}

uint64_t sub_1000C31D4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000DFA04, 1);
}

uint64_t sub_1000C31E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = type metadata accessor for OpenURLAction(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100006A38(v5);
  v6 = type metadata accessor for OpenAction(0);
  OpenURLAction.callAsFunction(_:)(a1 + *(int *)(v6 + 28));
  v7 = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(uint64_t))(a1 + *(int *)(v6 + 32)))(v7);
}

uint64_t sub_1000C3294@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C32C8(type metadata accessor for OpenAction, (uint64_t)&unk_10010E4C8, (uint64_t)sub_1000C4060, (uint64_t)sub_1000C4074, a1);
}

uint64_t sub_1000C32C8@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  Swift::String v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[16];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v35 = a4;
  v37 = a5;
  v9 = a1(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v13 = (char *)&v34 - v12;
  v14 = sub_100004F7C(&qword_1001168A8);
  v36 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B340(v5, (uint64_t)v13, a1);
  v17 = *(unsigned __int8 *)(v10 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = swift_allocObject(a2, v18 + v11, v17 | 7);
  sub_10000B4D4((uint64_t)v13, v19 + v18, a1);
  v39 = v5;
  v20 = sub_100004F7C(&qword_1001164F8);
  v21 = sub_10000522C(&qword_100116530, &qword_1001164F8, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  Button.init(action:label:)(a3, v19, v35, v38, v20, v21);
  v22 = (uint64_t *)(v5 + *(int *)(v9 + 20));
  v23 = v22[1];
  v40 = *v22;
  v41 = v23;
  swift_bridgeObjectRetain(v23);
  v24._countAndFlagsBits = 32;
  v24._object = (void *)0xE100000000000000;
  String.append(_:)(v24);
  v25 = v40;
  v26 = v41;
  if (qword_100116188 != -1)
    swift_once(&qword_100116188, sub_100080460);
  v27 = qword_100124720;
  v28 = *(void **)algn_100124728;
  v40 = v25;
  v41 = v26;
  swift_bridgeObjectRetain(v26);
  v29._countAndFlagsBits = v27;
  v29._object = v28;
  String.append(_:)(v29);
  swift_bridgeObjectRelease(v26);
  v30 = v40;
  v31 = v41;
  v32 = sub_10000522C(&qword_1001168A0, &qword_1001168A8, (uint64_t)&protocol conformance descriptor for Button<A>);
  View.accessibilityIdentifier(_:)(v30, v31, v14, v32);
  swift_bridgeObjectRelease(v31);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v16, v14);
}

uint64_t sub_1000C34FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = type metadata accessor for OpenURLAction(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100006A38(v5);
  v6 = type metadata accessor for _OpenAction(0);
  OpenURLAction.callAsFunction(_:)(a1 + *(int *)(v6 + 28));
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1000C358C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C32C8(type metadata accessor for _OpenAction, (uint64_t)&unk_10010E568, (uint64_t)sub_1000C4460, (uint64_t)sub_1000C44B4, a1);
}

uint64_t sub_1000C35C0@<X0>(uint64_t a1@<X8>)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;

  v27[1] = a1;
  v2 = type metadata accessor for ShareAction(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100004F7C(&qword_10011D428);
  v27[0] = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, &v1[*(int *)(v2 + 24)], v6);
  sub_10000B340((uint64_t)v1, (uint64_t)v5, type metadata accessor for ShareAction);
  v13 = *(unsigned __int8 *)(v3 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = swift_allocObject(&unk_10010E4F0, v14 + v4, v13 | 7);
  sub_10000B4D4((uint64_t)v5, v15 + v14, type metadata accessor for ShareAction);
  ShareLink<>.init<>(item:subject:message:onPresentationChanged:)(v9, 0, 0, 0, 0, 0, 0, 0, 0, sub_1000C40D0, v15);
  v16 = *((_QWORD *)v1 + 1);
  v28 = *(_QWORD *)v1;
  v29 = v16;
  swift_bridgeObjectRetain(v16);
  v17._countAndFlagsBits = 32;
  v17._object = (void *)0xE100000000000000;
  String.append(_:)(v17);
  v18 = v28;
  v19 = v29;
  if (qword_100116188 != -1)
    swift_once(&qword_100116188, sub_100080460);
  v20 = qword_100124720;
  v21 = *(void **)algn_100124728;
  v28 = v18;
  v29 = v19;
  swift_bridgeObjectRetain(v19);
  v22._countAndFlagsBits = v20;
  v22._object = v21;
  String.append(_:)(v22);
  swift_bridgeObjectRelease(v19);
  v23 = v28;
  v24 = v29;
  v25 = sub_10000522C(&qword_10011D430, &qword_10011D428, (uint64_t)&protocol conformance descriptor for ShareLink<A, B, C, D>);
  View.accessibilityIdentifier(_:)(v23, v24, v10, v25);
  swift_bridgeObjectRelease(v24);
  return (*(uint64_t (**)(char *, uint64_t))(v27[0] + 8))(v12, v10);
}

uint64_t sub_1000C382C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3978(type metadata accessor for SyncAction, (uint64_t)&unk_10010E5E0, (uint64_t)sub_1000C46D4, (uint64_t)sub_1000C4270, a1);
}

uint64_t sub_1000C3860(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000DF9DC, 1);
}

uint64_t sub_1000C3870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[2] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[3] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[4] = v6;
  v4[5] = v7;
  return swift_task_switch(sub_1000C38DC, v6, v7);
}

uint64_t sub_1000C38DC()
{
  uint64_t v0;
  uint64_t v1;
  int **v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (int **)(v1 + *(int *)(type metadata accessor for AsyncAction(0) + 28));
  v5 = (uint64_t (*)(void))((char *)*v2 + **v2);
  v3 = (_QWORD *)swift_task_alloc((*v2)[1]);
  *(_QWORD *)(v0 + 48) = v3;
  *v3 = v0;
  v3[1] = sub_100035E58;
  return v5();
}

uint64_t sub_1000C3944@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3978(type metadata accessor for AsyncAction, (uint64_t)&unk_10010E518, (uint64_t)sub_1000C41E4, (uint64_t)sub_1000C4270, a1);
}

uint64_t sub_1000C3978@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45[16];
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;

  v40 = a3;
  v41 = a4;
  v39 = a2;
  v44 = a5;
  v7 = a1(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v11 = (char *)&v39 - v10;
  v12 = sub_100004F7C(&qword_1001180C0);
  __chkstk_darwin(v12);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100004F7C(&qword_1001168A8);
  v42 = *(_QWORD *)(v15 - 8);
  v43 = v15;
  __chkstk_darwin(v15);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (char *)v5 + *(int *)(v7 + 24);
  v19 = type metadata accessor for ButtonRole(0);
  v20 = *(_QWORD *)(v19 - 8);
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v14, v18, v19);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v14, 0, 1, v19);
  sub_10000B340((uint64_t)v5, (uint64_t)v11, a1);
  v21 = *(unsigned __int8 *)(v8 + 80);
  v22 = (v21 + 16) & ~v21;
  v23 = swift_allocObject(v39, v22 + v9, v21 | 7);
  sub_10000B4D4((uint64_t)v11, v23 + v22, a1);
  v46 = v5;
  v24 = sub_100004F7C(&qword_1001164F8);
  v25 = sub_10000522C(&qword_100116530, &qword_1001164F8, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  Button.init(role:action:label:)(v14, v40, v23, v41, v45, v24, v25);
  v26 = v5[1];
  v47 = *v5;
  v48 = v26;
  swift_bridgeObjectRetain(v26);
  v27._countAndFlagsBits = 32;
  v27._object = (void *)0xE100000000000000;
  String.append(_:)(v27);
  v29 = v47;
  v28 = v48;
  if (qword_100116188 != -1)
    swift_once(&qword_100116188, sub_100080460);
  v30 = qword_100124720;
  v31 = *(void **)algn_100124728;
  v47 = v29;
  v48 = v28;
  swift_bridgeObjectRetain(v28);
  v32._countAndFlagsBits = v30;
  v32._object = v31;
  String.append(_:)(v32);
  swift_bridgeObjectRelease(v28);
  v33 = v47;
  v34 = v48;
  v35 = sub_10000522C(&qword_1001168A0, &qword_1001168A8, (uint64_t)&protocol conformance descriptor for Button<A>);
  v36 = v33;
  v37 = v43;
  View.accessibilityIdentifier(_:)(v36, v34, v43, v35);
  swift_bridgeObjectRelease(v34);
  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v17, v37);
}

double sub_1000C3C18(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t a3, uint64_t a4, uint64_t (*a5)(char *, uint64_t, uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double result;
  uint64_t v26;

  v10 = a2(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v14 = (char *)&v26 - v13;
  v15 = sub_100004F7C(&qword_100116D98);
  __chkstk_darwin(v15);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  sub_10000B340(a1, (uint64_t)v14, a2);
  v19 = type metadata accessor for MainActor(0);
  v20 = static MainActor.shared.getter(v19);
  v21 = *(unsigned __int8 *)(v11 + 80);
  v22 = (v21 + 32) & ~v21;
  v23 = swift_allocObject(a3, v22 + v12, v21 | 7);
  *(_QWORD *)(v23 + 16) = v20;
  *(_QWORD *)(v23 + 24) = &protocol witness table for MainActor;
  sub_10000B4D4((uint64_t)v14, v23 + v22, a2);
  v24 = a5(v17, a4, v23);
  *(_QWORD *)&result = swift_release(v24).n128_u64[0];
  return result;
}

uint64_t sub_1000C3D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[2] = a1;
  v4[3] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[4] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[5] = v6;
  v4[6] = v7;
  return swift_task_switch(sub_1000C3DD8, v6, v7);
}

uint64_t sub_1000C3DD8()
{
  uint64_t v0;
  uint64_t v1;
  int **v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v1 = *(_QWORD *)(v0 + 24);
  v2 = (int **)(v1 + *(int *)(type metadata accessor for AsyncThrowingAction(0) + 28));
  v5 = (uint64_t (*)(void))((char *)*v2 + **v2);
  v3 = (_QWORD *)swift_task_alloc((*v2)[1]);
  *(_QWORD *)(v0 + 56) = v3;
  *v3 = v0;
  v3[1] = sub_1000C3E40;
  return v5();
}

uint64_t sub_1000C3E40()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 56);
  *(_QWORD *)(*v1 + 64) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    swift_errorRelease(v0);
    v4 = *(_QWORD *)(v2 + 40);
    v5 = *(_QWORD *)(v2 + 48);
    v6 = sub_1000C485C;
  }
  else
  {
    v4 = *(_QWORD *)(v2 + 40);
    v5 = *(_QWORD *)(v2 + 48);
    v6 = sub_1000C3EAC;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_1000C3EAC()
{
  uint64_t v0;
  uint64_t v1;
  BOOL *v2;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(BOOL **)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 32));
  *v2 = v1 != 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000C3EF0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C3978(type metadata accessor for AsyncThrowingAction, (uint64_t)&unk_10010E590, (uint64_t)sub_1000C455C, (uint64_t)sub_1000C4270, a1);
}

uint64_t sub_1000C3F24(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000DF9B4, 1);
}

uint64_t sub_1000C3F34(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000DF98C, 1);
}

uint64_t sub_1000C3F44(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000DF964, 1);
}

uint64_t sub_1000C3F54(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000DF93C, 1);
}

uint64_t sub_1000C3F64()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  v1 = (int *)type metadata accessor for OpenAction(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (_QWORD *)(v0 + v4);
  v7 = sub_100004F7C(&qword_1001166A0);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v7) == 1)
  {
    v8 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
  }
  else
  {
    swift_release(*v6);
  }
  v9 = v4 + v5;
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v6 + v1[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v6 + v1[6] + 8));
  v10 = (char *)v6 + v1[7];
  v11 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  swift_release(*(_QWORD *)((char *)v6 + v1[8] + 8));
  return swift_deallocObject(v0, v9, v3 | 7);
}

uint64_t sub_1000C4060()
{
  return sub_1000C4474(type metadata accessor for OpenAction, sub_1000C31E4);
}

uint64_t sub_1000C4074()
{
  return sub_1000C4718((uint64_t)sub_1000C4088, (uint64_t)sub_1000C4094);
}

uint64_t sub_1000C4088@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C44D4(type metadata accessor for OpenAction, a1);
}

uint64_t sub_1000C4094@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1000C4284(*(_QWORD *)(v1 + 16), type metadata accessor for OpenAction, (uint64_t (*)(uint64_t, uint64_t))&Image.init(systemName:), a1);
}

uint64_t sub_1000C40BC()
{
  return sub_1000C4130(type metadata accessor for ShareAction, (uint64_t (*)(_QWORD))&type metadata accessor for URL);
}

uint64_t sub_1000C40D0(char a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for ShareAction(0);
  if ((a1 & 1) != 0)
  {
    v4 = *(unsigned __int8 *)(*(_QWORD *)(result - 8) + 80);
    return (*(uint64_t (**)(void))(v1 + *(int *)(result + 28) + ((v4 + 16) & ~v4)))();
  }
  return result;
}

uint64_t sub_1000C411C()
{
  return sub_1000C4130(type metadata accessor for AsyncAction, (uint64_t (*)(_QWORD))&type metadata accessor for ButtonRole);
}

uint64_t sub_1000C4130(uint64_t (*a1)(_QWORD), uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a1(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 + 16) & ~v6;
  v8 = v7 + *(_QWORD *)(v5 + 64);
  v9 = v6 | 7;
  v10 = v2 + v7;
  swift_bridgeObjectRelease(*(_QWORD *)(v2 + v7 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v10 + 24));
  v11 = v10 + *(int *)(v4 + 24);
  v12 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  swift_release(*(_QWORD *)(v10 + *(int *)(v4 + 28) + 8));
  return swift_deallocObject(v2, v8, v9);
}

double sub_1000C41E4()
{
  return sub_1000C4208(type metadata accessor for AsyncAction, (uint64_t)&unk_10010E540, (uint64_t)&unk_10011D440, (uint64_t (*)(char *, uint64_t, uint64_t))sub_1000A9F18);
}

double sub_1000C4208(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return sub_1000C3C18(v4 + ((v9 + 16) & ~v9), a1, a2, a3, a4);
}

uint64_t sub_1000C4270()
{
  return sub_1000C4718((uint64_t)sub_1000C42DC, (uint64_t)sub_1000C42E0);
}

uint64_t sub_1000C4284@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t (*a3)(uint64_t, uint64_t)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = (uint64_t *)(a1 + *(int *)(a2(0) + 24));
  v7 = *v6;
  v8 = v6[1];
  swift_bridgeObjectRetain(v8);
  result = a3(v7, v8);
  *a4 = result;
  return result;
}

uint64_t sub_1000C42E4()
{
  return sub_1000C458C(type metadata accessor for AsyncAction);
}

uint64_t sub_1000C42F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AsyncAction(0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc(dword_10011D43C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1000101B8;
  return sub_1000C3870(a1, v5, v6, v7);
}

uint64_t sub_1000C4374()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;

  v1 = (int *)type metadata accessor for _OpenAction(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (_QWORD *)(v0 + v4);
  v7 = sub_100004F7C(&qword_1001166A0);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v7) == 1)
  {
    v8 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
  }
  else
  {
    swift_release(*v6);
  }
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v6 + v1[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v6 + v1[6] + 8));
  v9 = (char *)v6 + v1[7];
  v10 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1000C4460()
{
  return sub_1000C4474(type metadata accessor for _OpenAction, sub_1000C34FC);
}

uint64_t sub_1000C4474(uint64_t (*a1)(_QWORD), uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return a2(v2 + ((v3 + 16) & ~v3));
}

uint64_t sub_1000C44B4()
{
  return sub_1000C4718((uint64_t)sub_1000C44C8, (uint64_t)sub_1000C4520);
}

uint64_t sub_1000C44C8@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C44D4(type metadata accessor for _OpenAction, a1);
}

uint64_t sub_1000C44D4@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v4 = *(_QWORD *)(v2 + 16);
  v5 = (_QWORD *)(v4 + *(int *)(a1(0) + 20));
  v6 = v5[1];
  *(_QWORD *)a2 = *v5;
  *(_QWORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = &_swiftEmptyArrayStorage;
  return swift_bridgeObjectRetain(v6);
}

uint64_t sub_1000C4520@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1000C4284(*(_QWORD *)(v1 + 16), type metadata accessor for _OpenAction, (uint64_t (*)(uint64_t, uint64_t))&Image.init(_internalSystemName:), a1);
}

uint64_t sub_1000C4548()
{
  return sub_1000C4130(type metadata accessor for AsyncThrowingAction, (uint64_t (*)(_QWORD))&type metadata accessor for ButtonRole);
}

double sub_1000C455C()
{
  return sub_1000C4208(type metadata accessor for AsyncThrowingAction, (uint64_t)&unk_10010E5B8, (uint64_t)&unk_10011D450, (uint64_t (*)(char *, uint64_t, uint64_t))sub_1000AA064);
}

uint64_t sub_1000C4580()
{
  return sub_1000C458C(type metadata accessor for AsyncThrowingAction);
}

uint64_t sub_1000C458C(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a1(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 32) & ~v4;
  v6 = v5 + *(_QWORD *)(v3 + 64);
  v7 = v4 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v1 + 16));
  v8 = v1 + v5;
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + v5 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + v5 + 24));
  v9 = v1 + v5 + *(int *)(v2 + 24);
  v10 = type metadata accessor for ButtonRole(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  swift_release(*(_QWORD *)(v8 + *(int *)(v2 + 28) + 8));
  return swift_deallocObject(v1, v6, v7);
}

uint64_t sub_1000C463C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AsyncThrowingAction(0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc(dword_10011D44C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_100010C20;
  return sub_1000C3D6C(a1, v5, v6, v7);
}

uint64_t sub_1000C46C0()
{
  return sub_1000C4130(type metadata accessor for SyncAction, (uint64_t (*)(_QWORD))&type metadata accessor for ButtonRole);
}

uint64_t sub_1000C46D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = type metadata accessor for SyncAction(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return (*(uint64_t (**)(void))(v0 + *(int *)(v1 + 28) + ((v2 + 16) & ~v2)))();
}

uint64_t sub_1000C4718(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v4[4];
  _BYTE v5[16];
  uint64_t v6;

  v6 = *(_QWORD *)(v2 + 16);
  v4[2] = v6;
  return Label.init(title:icon:)(a1, v5, a2, v4, &type metadata for Text, &type metadata for Image, &protocol witness table for Text, &protocol witness table for Image);
}

uint64_t sub_1000C476C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = *(_QWORD **)(v1 + 16);
  v3 = v2[1];
  *(_QWORD *)a1 = *v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = &_swiftEmptyArrayStorage;
  return swift_bridgeObjectRetain(v3);
}

uint64_t sub_1000C478C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  swift_bridgeObjectRetain(v5);
  result = Image.init(systemName:)(v4, v5);
  *a1 = result;
  return result;
}

unint64_t sub_1000C47D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011D458;
  if (!qword_10011D458)
  {
    v1 = sub_1000050C8(&qword_10011D460);
    sub_10000522C(&qword_10011D430, &qword_10011D428, (uint64_t)&protocol conformance descriptor for ShareLink<A, B, C, D>);
    sub_10004A368();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011D458);
  }
  return result;
}

uint64_t *sub_1000C4860(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = type metadata accessor for URL(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100004F7C((uint64_t *)&unk_100118CE0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_100004F7C(&qword_10011CBA0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    v15 = *(int *)(a3 + 24);
    v16 = (uint64_t *)((char *)a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = sub_100004F7C(&qword_100116698);
    if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
    {
      v19 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v16, v17, v19);
      v20 = v16;
      v21 = v18;
      v22 = 1;
    }
    else
    {
      v23 = *v17;
      *v16 = *v17;
      swift_retain(v23);
      v20 = v16;
      v21 = v18;
      v22 = 0;
    }
    swift_storeEnumTagMultiPayload(v20, v21, v22);
  }
  return a1;
}

double sub_1000C49E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  double result;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = a1 + *(int *)(a2 + 20);
  v7 = sub_100004F7C(&qword_10011CBA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = (_QWORD *)(a1 + *(int *)(a2 + 24));
  v9 = sub_100004F7C(&qword_100116698);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v8).n128_u64[0];
  }
  return result;
}

char *sub_1000C4AC4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_100004F7C(&qword_10011CBA0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  v13 = *(int *)(a3 + 24);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_100004F7C(&qword_100116698);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    v17 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
    v18 = v14;
    v19 = v16;
    v20 = 1;
  }
  else
  {
    v21 = *(_QWORD *)v15;
    *(_QWORD *)v14 = *(_QWORD *)v15;
    swift_retain(v21);
    v18 = v14;
    v19 = v16;
    v20 = 0;
  }
  swift_storeEnumTagMultiPayload(v18, v19, v20);
  return a1;
}

char *sub_1000C4C20(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_100004F7C(&qword_10011CBA0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  if (a1 != a2)
  {
    v16 = *(int *)(a3 + 24);
    v17 = &a1[v16];
    v18 = &a2[v16];
    sub_10000526C((uint64_t)&a1[v16], &qword_100116698);
    v19 = sub_100004F7C(&qword_100116698);
    if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
    {
      v20 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v17, v18, v20);
      v21 = v17;
      v22 = v19;
      v23 = 1;
    }
    else
    {
      v24 = *(_QWORD *)v18;
      *(_QWORD *)v17 = *(_QWORD *)v18;
      swift_retain(v24);
      v21 = v17;
      v22 = v19;
      v23 = 0;
    }
    swift_storeEnumTagMultiPayload(v21, v22, v23);
  }
  return a1;
}

char *sub_1000C4DE0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_100004F7C(&qword_10011CBA0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  v13 = *(int *)(a3 + 24);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_100004F7C(&qword_100116698);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    v17 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload(v14, v16, 1);
  }
  else
  {
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  return a1;
}

char *sub_1000C4F38(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100004F7C((uint64_t *)&unk_100118CE0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_100004F7C(&qword_10011CBA0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  if (a1 != a2)
  {
    v16 = *(int *)(a3 + 24);
    v17 = &a1[v16];
    v18 = &a2[v16];
    sub_10000526C((uint64_t)&a1[v16], &qword_100116698);
    v19 = sub_100004F7C(&qword_100116698);
    if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
    {
      v20 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
      swift_storeEnumTagMultiPayload(v17, v19, 1);
    }
    else
    {
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1000C50F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000C5100);
}

uint64_t sub_1000C5100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_100004F7C((uint64_t *)&unk_100118CE0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = sub_100004F7C(&qword_10011CBA0);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      v8 = sub_100004F7C(&qword_100117800);
      v12 = *(_QWORD *)(v8 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1000C51A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000C51B0);
}

uint64_t sub_1000C51B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = sub_100004F7C((uint64_t *)&unk_100118CE0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = sub_100004F7C(&qword_10011CBA0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_100004F7C(&qword_100117800);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for LibraryItemArtwork(uint64_t a1)
{
  uint64_t result;

  result = qword_10011D4D8;
  if (!qword_10011D4D8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LibraryItemArtwork);
  return result;
}

void sub_1000C5298(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[3];

  sub_1000A36D8(319, (unint64_t *)&qword_100116718, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1000BAF3C(319);
    if (v5 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_1000A36D8(319, (unint64_t *)&qword_100117870, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v7 <= 0x3F)
      {
        v8[2] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 3, v8, a1 + 16);
      }
    }
  }
}

uint64_t sub_1000C5368(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000DFA7C, 1);
}

double sub_1000C5378@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  double result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  __int128 v32;

  v29 = a4;
  v30 = a5;
  v28 = a3;
  v9 = sub_100004F7C((uint64_t *)&unk_100118CE0);
  __chkstk_darwin(v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v28 - v17;
  v19 = sub_100004F7C(qword_100119528);
  __chkstk_darwin(v19);
  v21 = (char *)&v28 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007C8C(a1, (uint64_t)v11, (uint64_t *)&unk_100118CE0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_10000526C((uint64_t)v11, (uint64_t *)&unk_100118CE0);
    v22 = type metadata accessor for URLRequest(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v11, v12);
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v18, v12);
    URLRequest.init(url:cachePolicy:timeoutInterval:)(v16, 0, 60.0);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    v23 = type metadata accessor for URLRequest(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v21, 0, 1, v23);
  }
  v24 = sub_100004F7C(&qword_10011D518);
  sub_100007C48((uint64_t)v21, a6 + *(int *)(v24 + 44), qword_100119528);
  v25 = objc_msgSend((id)objc_opt_self(NSURLSessionConfiguration), "defaultSessionConfiguration");
  objc_msgSend(v25, "setURLCache:", a2);
  *(_QWORD *)(a6 + *(int *)(v24 + 48)) = objc_msgSend((id)objc_opt_self(NSURLSession), "sessionWithConfiguration:", v25);
  v26 = v28;
  *(_QWORD *)(a6 + 16) = v29;
  *(_QWORD *)(a6 + 24) = v30;
  *(_QWORD *)(a6 + 32) = v26;
  v31 = 0x8000000000000000;
  State.init(wrappedValue:)(&v32, &v31, &type metadata for CachedAsyncImagePhase);

  sub_10000526C(a1, (uint64_t *)&unk_100118CE0);
  result = *(double *)&v32;
  *(_OWORD *)a6 = v32;
  return result;
}

uint64_t sub_1000C563C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v0 = type metadata accessor for Color.RGBColorSpace(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v3 + 104))(v2, enum case for Color.RGBColorSpace.sRGB(_:));
  result = Color.init(_:red:green:blue:opacity:)(v2, 0.819607843, 0.819607843, 0.839215686, 1.0);
  qword_10011D468 = result;
  return result;
}

void sub_1000C56D0()
{
  qword_10011D470 = 0x636973756DLL;
  *(_QWORD *)algn_10011D478 = 0xE500000000000000;
}

uint64_t sub_1000C56F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[3];

  v36 = a1;
  v35 = type metadata accessor for LibraryItemArtwork(0);
  v2 = *(_QWORD *)(v35 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  __chkstk_darwin(v35);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100004F7C((uint64_t *)&unk_100118CE0);
  __chkstk_darwin(v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100004F7C(&qword_10011D518);
  __chkstk_darwin(v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_100004F7C(&qword_10011D520);
  __chkstk_darwin(v34);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100004F7C(&qword_10011D528);
  __chkstk_darwin(v13);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007C8C(v1, (uint64_t)v7, (uint64_t *)&unk_100118CE0);
  v17 = static Animation.easeInOut.getter(v16);
  v18 = Transaction.init(animation:)(v17);
  sub_10000B340(v1, (uint64_t)v4, type metadata accessor for LibraryItemArtwork);
  v19 = *(unsigned __int8 *)(v2 + 80);
  v20 = (v19 + 16) & ~v19;
  v21 = swift_allocObject(&unk_10010E658, v20 + v3, v19 | 7);
  sub_10006BD20((uint64_t)v4, v21 + v20);
  v22 = objc_msgSend((id)objc_opt_self(NSURLCache), "sharedURLCache");
  sub_1000C5378((uint64_t)v7, v22, v18, (uint64_t)sub_1000C65D4, v21, (uint64_t)v10);
  v23 = sub_100004F7C(&qword_10011CBA0);
  ScaledMetric.wrappedValue.getter(v37, v23);
  v24 = *(_QWORD *)&v37[0];
  v25 = ScaledMetric.wrappedValue.getter(v37, v23);
  v26 = *(_QWORD *)&v37[0];
  v27 = static Alignment.center.getter(v25);
  _FrameLayout.init(width:height:alignment:)(v37, v24, 0, v26, 0, v27, v28);
  sub_100007C8C((uint64_t)v10, (uint64_t)v12, &qword_10011D518);
  v29 = &v12[*(int *)(v34 + 36)];
  v30 = v37[1];
  *(_OWORD *)v29 = v37[0];
  *((_OWORD *)v29 + 1) = v30;
  *((_OWORD *)v29 + 2) = v37[2];
  sub_10000526C((uint64_t)v10, &qword_10011D518);
  sub_100007C8C((uint64_t)v12, (uint64_t)v15, &qword_10011D520);
  v15[*(int *)(v13 + 36)] = 1;
  sub_10000526C((uint64_t)v12, &qword_10011D520);
  v31 = sub_1000C6620();
  View.accessibilityHidden(_:)(1, v13, v31);
  return sub_10000526C((uint64_t)v15, &qword_10011D528);
}

uint64_t sub_1000C59F0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t OpaqueTypeConformance2;
  char *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD v83[2];

  v69 = a1;
  v82 = a2;
  v2 = type metadata accessor for AccessibilityChildBehavior(0);
  v73 = *(_QWORD *)(v2 - 8);
  v74 = v2;
  __chkstk_darwin(v2);
  v70 = (char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_100004F7C(&qword_10011D550);
  __chkstk_darwin(v71);
  v5 = (uint64_t *)((char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_100004F7C(&qword_10011D558);
  v75 = *(_QWORD *)(v6 - 8);
  v76 = v6;
  __chkstk_darwin(v6);
  v68 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_100004F7C(&qword_10011D560);
  v8 = __chkstk_darwin(v81);
  v72 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v77 = (uint64_t)&v67 - v10;
  v79 = sub_100004F7C(&qword_10011D568);
  __chkstk_darwin(v79);
  v80 = (uint64_t)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_100004F7C(&qword_100117BE8);
  __chkstk_darwin(v67);
  v13 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v14);
  v16 = (_OWORD *)((char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = type metadata accessor for Image.ResizingMode(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100004F7C(&qword_10011D570);
  __chkstk_darwin(v21);
  v23 = (uint64_t *)((char *)&v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v78 = sub_100004F7C(&qword_10011D578);
  v24 = __chkstk_darwin(v78);
  v26 = (char *)&v67 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v24);
  if (v29 >> 62)
  {
    *v5 = static Alignment.center.getter(v27);
    v5[1] = v49;
    v50 = sub_100004F7C(&qword_10011D580);
    v51 = sub_1000C607C(v69, (uint64_t)v5 + *(int *)(v50 + 44));
    v52 = v70;
    static AccessibilityChildBehavior.combine.getter(v51);
    v53 = sub_10000522C(&qword_10011D588, &qword_10011D550, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    v54 = v68;
    v55 = v71;
    View.accessibilityElement(children:)(v52, v71, v53);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v52, v74);
    sub_10000526C((uint64_t)v5, &qword_10011D550);
    if (qword_100116138 != -1)
      swift_once(&qword_100116138, sub_1000802AC);
    v56 = qword_100124680;
    v57 = *(_QWORD *)algn_100124688;
    v83[0] = v55;
    v83[1] = v53;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v83, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    v59 = v72;
    v60 = v76;
    View.accessibilityIdentifier(_:)(v56, v57, v76, OpaqueTypeConformance2);
    (*(void (**)(char *, unint64_t))(v75 + 8))(v54, v60);
    v43 = &qword_10011D560;
    v61 = (uint64_t)v59;
    v62 = v77;
    sub_100007C48(v61, v77, &qword_10011D560);
    v63 = v80;
    sub_100007C8C(v62, v80, &qword_10011D560);
    swift_storeEnumTagMultiPayload(v63, v79, 1);
    v64 = sub_1000C670C(&qword_10011D590, &qword_10011D578, (void (*)(void))sub_1000C677C, (void (*)(void))sub_10004A368);
    v65 = sub_1000C6800();
    _ConditionalContent<>.init(storage:)(v63, v78, v81, v64, v65);
    v48 = v62;
  }
  else
  {
    v77 = (uint64_t)&v67 - v28;
    v30 = v29;
    (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, enum case for Image.ResizingMode.stretch(_:), v17);
    swift_retain(v30);
    v76 = v30;
    v31 = Image.resizable(capInsets:resizingMode:)(v20, v30, 0.0, 0.0, 0.0, 0.0);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    v32 = (char *)v16 + *(int *)(v14 + 20);
    v33 = enum case for RoundedCornerStyle.continuous(_:);
    v34 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v32, v33, v34);
    __asm { FMOV            V0.2D, #8.0 }
    *v16 = _Q0;
    sub_10000B340((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
    *(_WORD *)&v13[*(int *)(v67 + 36)] = 256;
    sub_100007C8C((uint64_t)v13, (uint64_t)v23 + *(int *)(v21 + 36), &qword_100117BE8);
    *v23 = v31;
    swift_retain(v31);
    sub_10000526C((uint64_t)v13, &qword_100117BE8);
    sub_10001E69C((uint64_t)v16);
    swift_release(v31);
    if (qword_100116130 != -1)
      swift_once(&qword_100116130, sub_100080284);
    v40 = qword_100124670;
    v41 = *(_QWORD *)algn_100124678;
    v42 = sub_1000C677C();
    View.accessibilityIdentifier(_:)(v40, v41, v21, v42);
    sub_10000526C((uint64_t)v23, &qword_10011D570);
    v43 = &qword_10011D578;
    v44 = v77;
    sub_100007C48((uint64_t)v26, v77, &qword_10011D578);
    v45 = v80;
    sub_100007C8C(v44, v80, &qword_10011D578);
    swift_storeEnumTagMultiPayload(v45, v79, 0);
    v46 = sub_1000C670C(&qword_10011D590, &qword_10011D578, (void (*)(void))sub_1000C677C, (void (*)(void))sub_10004A368);
    v47 = sub_1000C6800();
    _ConditionalContent<>.init(storage:)(v45, v78, v81, v46, v47);
    sub_100058BD0(v76);
    v48 = v44;
  }
  return sub_10000526C(v48, v43);
}

uint64_t sub_1000C607C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  char *v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t KeyPath;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _OWORD v60[2];
  uint64_t v61;

  v57 = a1;
  v59 = a2;
  v2 = type metadata accessor for ColorScheme(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (uint64_t *)((char *)&v57 - v7);
  v9 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v9);
  v11 = (_OWORD *)((char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_100004F7C(&qword_10011D5A8);
  v13 = __chkstk_darwin(v12);
  v58 = (uint64_t)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v57 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v57 - v18;
  v20 = (char *)v11 + *(int *)(v9 + 20);
  v21 = enum case for RoundedCornerStyle.continuous(_:);
  v22 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v20, v21, v22);
  __asm { FMOV            V0.2D, #8.0 }
  *v11 = _Q0;
  v28 = sub_100004F7C(&qword_10011CCB0);
  v29 = swift_allocObject(v28, 48, 7);
  *(_OWORD *)(v29 + 16) = xmmword_1000D32A0;
  type metadata accessor for LibraryItemArtwork(0);
  sub_100006A6C(v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, enum case for ColorScheme.light(_:), v2);
  LOBYTE(v21) = static ColorScheme.== infix(_:_:)(v8, v6);
  v30 = *(void (**)(char *, uint64_t))(v3 + 8);
  v30(v6, v2);
  v31 = ((uint64_t (*)(_QWORD *, uint64_t))v30)(v8, v2);
  if ((v21 & 1) != 0)
  {
    v32 = (void *)objc_opt_self(UIColor);
    v33 = Color.init(uiColor:)(objc_msgSend(v32, "systemGray5Color", v57));
  }
  else
  {
    v33 = static Color.gray.getter(v31);
  }
  *(_QWORD *)(v29 + 32) = v33;
  if (qword_100116390 != -1)
    v33 = swift_once(&qword_100116390, sub_1000C563C);
  v34 = qword_10011D468;
  *(_QWORD *)(v29 + 40) = qword_10011D468;
  *(_QWORD *)&v60[0] = v29;
  specialized Array._endMutation()(v33);
  v35 = *(_QWORD *)&v60[0];
  v36 = swift_retain(v34);
  v37 = static UnitPoint.top.getter(v36);
  v39 = v38;
  v40 = static UnitPoint.bottom.getter();
  v42 = v41;
  Gradient.init(colors:)(v35);
  LinearGradient.init(gradient:startPoint:endPoint:)(v60, v37, v39, v40, v42);
  sub_10000B340((uint64_t)v11, (uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v43 = &v17[*(int *)(v12 + 52)];
  v44 = v60[1];
  *(_OWORD *)v43 = v60[0];
  *((_OWORD *)v43 + 1) = v44;
  *((_QWORD *)v43 + 4) = v61;
  *(_WORD *)&v17[*(int *)(v12 + 56)] = 256;
  sub_10001E69C((uint64_t)v11);
  sub_100007C48((uint64_t)v17, (uint64_t)v19, &qword_10011D5A8);
  if (qword_100116398 != -1)
    swift_once(&qword_100116398, sub_1000C56D0);
  v45 = qword_10011D470;
  v46 = *(_QWORD *)algn_10011D478;
  swift_bridgeObjectRetain(*(_QWORD *)algn_10011D478);
  v47 = Image.init(_internalSystemName:)(v45, v46);
  v48 = static Font.title.getter();
  KeyPath = swift_getKeyPath(&unk_1000D8728, v49);
  v52 = static Color.white.getter(v51);
  v53 = v58;
  sub_100007C8C((uint64_t)v19, v58, &qword_10011D5A8);
  v54 = v59;
  sub_100007C8C(v53, v59, &qword_10011D5A8);
  v55 = (uint64_t *)(v54 + *(int *)(sub_100004F7C(&qword_10011D5B0) + 48));
  *v55 = v47;
  v55[1] = KeyPath;
  v55[2] = v48;
  v55[3] = v52;
  swift_retain(v47);
  swift_retain(KeyPath);
  swift_retain(v48);
  swift_retain(v52);
  sub_10000526C((uint64_t)v19, &qword_10011D5A8);
  swift_release(v52);
  swift_release(v48);
  swift_release(KeyPath);
  swift_release(v47);
  return sub_10000526C(v53, &qword_10011D5A8);
}

uint64_t sub_1000C64C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v1 = type metadata accessor for LibraryItemArtwork(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v0 + v4, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v4, v7);
  v9 = v6 + *(int *)(v1 + 20);
  v10 = sub_100004F7C(&qword_10011CBA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = (_QWORD *)(v6 + *(int *)(v1 + 24));
  v12 = sub_100004F7C(&qword_100116698);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
  }
  else
  {
    swift_release(*v11);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1000C65D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LibraryItemArtwork(0) - 8) + 80);
  return sub_1000C59F0(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_1000C6620()
{
  return sub_1000C670C(&qword_10011D530, &qword_10011D528, (void (*)(void))sub_1000C6644, (void (*)(void))sub_1000C66C8);
}

unint64_t sub_1000C6644()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011D538;
  if (!qword_10011D538)
  {
    v1 = sub_1000050C8(&qword_10011D520);
    sub_10000522C(&qword_10011D540, &qword_10011D518, (uint64_t)&unk_1000D43B8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011D538);
  }
  return result;
}

unint64_t sub_1000C66C8()
{
  unint64_t result;

  result = qword_10011D548;
  if (!qword_10011D548)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for _AccessibilityIgnoresInvertColorsViewModifier, &type metadata for _AccessibilityIgnoresInvertColorsViewModifier);
    atomic_store(result, (unint64_t *)&qword_10011D548);
  }
  return result;
}

uint64_t sub_1000C670C(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_1000050C8(a2);
    a3();
    a4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000C677C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011D598;
  if (!qword_10011D598)
  {
    v1 = sub_1000050C8(&qword_10011D570);
    sub_10000522C(&qword_10011A0F8, &qword_100117BE8, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011D598);
  }
  return result;
}

unint64_t sub_1000C6800()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10011D5A0;
  if (!qword_10011D5A0)
  {
    v1 = sub_1000050C8(&qword_10011D560);
    v2[0] = sub_1000050C8(&qword_10011D550);
    v2[1] = sub_10000522C(&qword_10011D588, &qword_10011D550, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_10004A368();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011D5A0);
  }
  return result;
}

uint64_t sub_1000C68BC()
{
  return sub_1000C670C(&qword_10011D5B8, qword_10011D5C0, (void (*)(void))sub_1000C6620, (void (*)(void))sub_10004A368);
}

uint64_t sub_1000C68F0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  v5[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 80));
  if (v3 <= 0x3F)
  {
    v5[1] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for ObservationRegistrar(319);
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      result = swift_initClassMetadata2(a1, 0, 3, v5, a1 + 96);
      if (!result)
        return 0;
    }
  }
  return result;
}

char *sub_1000C698C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v5;
  uint64_t v6;

  v5 = (char *)swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v6 = *(_QWORD *)v5;
  ObservationRegistrar.init()(v5);
  *((_QWORD *)v5 + 2) = a1;
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v6 + 80) - 8) + 32))(&v5[*(_QWORD *)(*(_QWORD *)v5 + 104)], a2);
  return v5;
}

unint64_t sub_1000C6A00(uint64_t a1)
{
  uint64_t (*v1)();
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  id v26;
  void *v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (**v36)();
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  id v74;
  void *v75;
  char *v76;
  uint64_t v77;
  void (*v78)(uint64_t, char *, uint64_t);
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t (**v82)();
  uint64_t (*v83)();
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  unint64_t v89;
  unint64_t v90;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  id v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t (*v108)();
  void (*v109)(char *, uint64_t, uint64_t, uint64_t);
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;

  v108 = *(uint64_t (**)())v1;
  v2 = (_QWORD *)*((_QWORD *)v108 + 10);
  v107 = *(v2 - 1);
  __chkstk_darwin(a1);
  v104 = v3;
  v105 = (char *)&v92 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = _s6ActionOMa(0);
  __chkstk_darwin(v114);
  v5 = (char *)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = type metadata accessor for ContextMenuItemSection(0);
  v113 = *(_QWORD *)(v115 - 8);
  v6 = __chkstk_darwin(v115);
  v97 = (char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v110 = (char *)&v92 - v9;
  __chkstk_darwin(v8);
  v11 = (char *)&v92 - v10;
  v12 = sub_100004F7C((uint64_t *)&unk_100118CE0);
  v13 = __chkstk_darwin(v12);
  v111 = (char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v16 = (char *)&v92 - v15;
  v17 = type metadata accessor for URL(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v99 = (char *)&v92 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v19);
  v23 = (char *)&v92 - v22;
  __chkstk_darwin(v21);
  v25 = (char *)&v92 - v24;
  v103 = (id)*((_QWORD *)v1 + 2);
  v26 = objc_msgSend(v103, "webURL");
  v100 = v18;
  v98 = v23;
  v112 = v17;
  v106 = v5;
  if (!v26)
  {
    v109 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
    v109(v16, 1, 1, v17);
    goto LABEL_7;
  }
  v27 = v26;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  v28 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  v28(v16, v23, v17);
  v109 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  v109(v16, 0, 1, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
LABEL_7:
    sub_10000526C((uint64_t)v16, (uint64_t *)&unk_100118CE0);
    v102 = _swiftEmptyArrayStorage;
    goto LABEL_8;
  }
  v102 = v2;
  v28(v25, v16, v17);
  v29 = sub_100004F7C(&qword_10011D648);
  v30 = type metadata accessor for ContextMenuItem(0);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(_QWORD *)(v31 + 72);
  v33 = *(unsigned __int8 *)(v31 + 80);
  v34 = (v33 + 32) & ~v33;
  v35 = swift_allocObject(v29, v34 + v32, v33 | 7);
  *(_OWORD *)(v35 + 16) = xmmword_1000D1CC0;
  v36 = (uint64_t (**)())&v5[*(int *)(sub_100004F7C(&qword_10011A7E0) + 48)];
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v5, v25, v17);
  *v36 = sub_1000C756C;
  v36[1] = v1;
  swift_storeEnumTagMultiPayload(v5, v114, 0);
  swift_retain(v1);
  UUID.init()(v37);
  v38 = sub_10000B4D4((uint64_t)v5, v35 + v34 + *(int *)(v30 + 20), _s6ActionOMa);
  UUID.init()(v38);
  v39 = v115;
  v40 = &v11[*(int *)(v115 + 20)];
  *(_QWORD *)v40 = 0;
  *((_QWORD *)v40 + 1) = 0;
  *(_QWORD *)&v11[*(int *)(v39 + 24)] = v35;
  v41 = sub_100049520(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
  v43 = *(_QWORD *)(v41 + 16);
  v42 = *(_QWORD *)(v41 + 24);
  if (v43 >= v42 >> 1)
    v41 = sub_100049520(v42 > 1, v43 + 1, 1, v41);
  v2 = v102;
  v102 = (_QWORD *)v41;
  *(_QWORD *)(v41 + 16) = v43 + 1;
  sub_10000B4D4((uint64_t)v11, v41+ ((*(unsigned __int8 *)(v113 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80))+ *(_QWORD *)(v113 + 72) * v43, type metadata accessor for ContextMenuItemSection);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v25, v112);
LABEL_8:
  v44 = sub_100004F7C(&qword_10011D648);
  v45 = type metadata accessor for ContextMenuItem(0);
  v46 = *(_QWORD *)(v45 - 8);
  v47 = *(_QWORD *)(v46 + 72);
  v48 = *(unsigned __int8 *)(v46 + 80);
  v49 = (v48 + 32) & ~v48;
  v96 = v44;
  v94 = v49 + v47;
  v93 = v48 | 7;
  v50 = swift_allocObject(v44, v49 + v47, v48 | 7);
  v92 = xmmword_1000D1CC0;
  *(_OWORD *)(v50 + 16) = xmmword_1000D1CC0;
  v95 = v49;
  v101 = v50 + v49;
  v51 = v107;
  v52 = v105;
  (*(void (**)(char *, char *, _QWORD *))(v107 + 16))(v105, (char *)v1 + *(_QWORD *)(*(_QWORD *)v1 + 104), v2);
  v53 = *(unsigned __int8 *)(v51 + 80);
  v54 = v2;
  v55 = (v53 + 32) & ~v53;
  v56 = (v104 + v55 + 7) & 0xFFFFFFFFFFFFFFF8;
  v57 = (v56 + 15) & 0xFFFFFFFFFFFFFFF8;
  v58 = swift_allocObject(&unk_10010E778, v57 + 8, v53 | 7);
  *(_QWORD *)(v58 + 16) = v54;
  *(_QWORD *)(v58 + 24) = *((_QWORD *)v108 + 11);
  (*(void (**)(uint64_t, char *, _QWORD *))(v51 + 32))(v58 + v55, v52, v54);
  v59 = v103;
  *(_QWORD *)(v58 + v56) = v103;
  *(_QWORD *)(v58 + v57) = v1;
  v60 = (uint64_t)v106;
  *(_QWORD *)v106 = &unk_10011D658;
  *(_QWORD *)(v60 + 8) = v58;
  swift_storeEnumTagMultiPayload(v60, v114, 2);
  v108 = v1;
  swift_retain(v1);
  v61 = v59;
  v62 = v101;
  UUID.init()(v61);
  v107 = v45;
  v63 = sub_10000B4D4(v60, v62 + *(int *)(v45 + 20), _s6ActionOMa);
  v64 = (uint64_t)v110;
  UUID.init()(v63);
  v65 = v115;
  v66 = (_QWORD *)(v64 + *(int *)(v115 + 20));
  *v66 = 0;
  v66[1] = 0;
  *(_QWORD *)(v64 + *(int *)(v65 + 24)) = v50;
  v67 = (unint64_t)v102;
  if ((swift_isUniquelyReferenced_nonNull_native(v102) & 1) == 0)
    v67 = sub_100049520(0, *(_QWORD *)(v67 + 16) + 1, 1, v67);
  v68 = (uint64_t)v111;
  v69 = v112;
  v71 = *(_QWORD *)(v67 + 16);
  v70 = *(_QWORD *)(v67 + 24);
  if (v71 >= v70 >> 1)
    v67 = sub_100049520(v70 > 1, v71 + 1, 1, v67);
  *(_QWORD *)(v67 + 16) = v71 + 1;
  v72 = (*(unsigned __int8 *)(v113 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80);
  v73 = *(_QWORD *)(v113 + 72);
  sub_10000B4D4(v64, v67 + v72 + v73 * v71, type metadata accessor for ContextMenuItemSection);
  v74 = objc_msgSend(v61, "webURL");
  if (!v74)
  {
    v109((char *)v68, 1, 1, v69);
    goto LABEL_18;
  }
  v75 = v74;
  v76 = v98;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  v77 = v100;
  v78 = *(void (**)(uint64_t, char *, uint64_t))(v100 + 32);
  v78(v68, v76, v69);
  v109((char *)v68, 0, 1, v69);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48))(v68, 1, v69) == 1)
  {
LABEL_18:
    sub_10000526C(v68, (uint64_t *)&unk_100118CE0);
    return v67;
  }
  v79 = v99;
  v78((uint64_t)v99, (char *)v68, v69);
  v80 = swift_allocObject(v96, v94, v93);
  *(_OWORD *)(v80 + 16) = v92;
  v81 = v80 + v95;
  v82 = (uint64_t (**)())(v60 + *(int *)(sub_100004F7C(&qword_10011A7E0) + 48));
  (*(void (**)(uint64_t, char *, uint64_t))(v77 + 16))(v60, v79, v69);
  v83 = v108;
  *v82 = sub_1000C755C;
  v82[1] = v83;
  swift_storeEnumTagMultiPayload(v60, v114, 1);
  swift_retain(v83);
  UUID.init()(v84);
  v85 = sub_10000B4D4(v60, v81 + *(int *)(v107 + 20), _s6ActionOMa);
  v86 = (uint64_t)v97;
  UUID.init()(v85);
  v87 = v115;
  v88 = (_QWORD *)(v86 + *(int *)(v115 + 20));
  *v88 = 0;
  v88[1] = 0;
  *(_QWORD *)(v86 + *(int *)(v87 + 24)) = v80;
  v90 = *(_QWORD *)(v67 + 16);
  v89 = *(_QWORD *)(v67 + 24);
  if (v90 >= v89 >> 1)
    v67 = sub_100049520(v89 > 1, v90 + 1, 1, v67);
  *(_QWORD *)(v67 + 16) = v90 + 1;
  sub_10000B4D4(v86, v67 + v72 + v90 * v73, type metadata accessor for ContextMenuItemSection);
  (*(void (**)(char *, uint64_t))(v100 + 8))(v99, v69);
  return v67;
}

uint64_t sub_1000C7250(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);

  v5 = *a3;
  v6 = type metadata accessor for MainActor(0);
  v3[2] = v6;
  v3[3] = static MainActor.shared.getter(v6);
  v7 = *(_QWORD *)(v5 + 88);
  v3[4] = v7;
  v8 = *(int **)(v7 + 40);
  v9 = *(_QWORD *)(v5 + 80);
  v3[5] = v9;
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  v10 = (_QWORD *)swift_task_alloc(v8[1]);
  v3[6] = v10;
  *v10 = v3;
  v10[1] = sub_1000C72F8;
  return v12(a2, v9, v7);
}

uint64_t sub_1000C72F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 48));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1000C7368, v2, v3);
}

uint64_t sub_1000C7368()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  sub_1000C757C(0x12u);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id *sub_1000C73AC()
{
  id *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;

  v1 = *v0;

  (*(void (**)(char *))(*(_QWORD *)(v1[10] - 8) + 8))((char *)v0 + *((_QWORD *)*v0 + 13));
  v2 = (char *)v0 + *((_QWORD *)*v0 + 14);
  v3 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return v0;
}

uint64_t sub_1000C7418()
{
  uint64_t v0;

  sub_1000C73AC();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t type metadata accessor for LibraryItemContextMenuModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100018E38(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LibraryItemContextMenuModel);
}

uint64_t sub_1000C7448()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = v2 | 7;
  v5 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);

  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v4);
}

uint64_t sub_1000C74CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  _QWORD *v8;

  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = v0 + v3;
  v6 = *(_QWORD *)(v0 + v4);
  v7 = *(uint64_t **)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFF8));
  v8 = (_QWORD *)swift_task_alloc(dword_10011D654);
  *(_QWORD *)(v1 + 16) = v8;
  *v8 = v1;
  v8[1] = sub_1000101B8;
  return sub_1000C7250(v5, v6, v7);
}

uint64_t sub_1000C755C()
{
  return sub_1000C757C(0);
}

uint64_t sub_1000C756C()
{
  return sub_1000C757C(5u);
}

uint64_t sub_1000C757C(unsigned __int8 a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t KeyPath;
  unint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  char v16;
  _QWORD v19[3];

  v2 = type metadata accessor for MusicSubscription(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v19[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100004F7C(&qword_1001174E0);
  __chkstk_darwin(v6);
  v9 = (char *)&v19[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001162F8 != -1)
    swift_once(&qword_1001162F8, sub_1000AA1F8);
  v10 = qword_1001247E8;
  KeyPath = swift_getKeyPath(&unk_1000D87D8, v7);
  v19[0] = v10;
  v12 = sub_100060204();
  ObservationRegistrar.access<A, B>(_:keyPath:)(v19, KeyPath, v12);
  swift_release(KeyPath);
  v13 = v10 + OBJC_IVAR____TtC16MusicRecognition33MusicSubscriptionStatusController__musicSubscription;
  swift_beginAccess(v10 + OBJC_IVAR____TtC16MusicRecognition33MusicSubscriptionStatusController__musicSubscription, v19, 0, 0);
  sub_10001BF54(v13, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2))
  {
    sub_10000526C((uint64_t)v9, &qword_1001174E0);
    v14 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v9, v2);
    v15 = sub_10000526C((uint64_t)v9, &qword_1001174E0);
    v16 = MusicSubscription.canBecomeSubscriber.getter(v15);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if ((v16 & 1) != 0)
      v14 = 0;
    else
      v14 = 0x10000;
  }
  return sub_1000A6994(v14 | a1 | 0x900u, 0xD000000000000028, 0x80000001000D90E0);
}

uint64_t sub_1000C7770(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_1000D8870, a2);
  v6 = v2;
  v4 = sub_100004864(&qword_100116878, type metadata accessor for ContextMenuViewModel, (uint64_t)&unk_1000D8850);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v4);
  swift_release(KeyPath);
  return *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC16MusicRecognition20ContextMenuViewModel__shareSheetFromOverflow);
}

uint64_t sub_1000C77FC(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t (*v7)(_QWORD);
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  if (qword_100115DD8 != -1)
    swift_once(&qword_100115DD8, sub_10000C418);
  v3 = type metadata accessor for Logger(0);
  sub_10000B5E8(v3, (uint64_t)qword_100124478);
  v4 = swift_retain_n(v1, 2);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = a1;
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    *(_DWORD *)v8 = 136315138;
    v20 = v9;
    v10 = type metadata accessor for URL(0);
    v11 = sub_100004864((unint64_t *)&qword_1001168E8, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    v12 = dispatch thunk of CustomStringConvertible.description.getter(v10, v11);
    v14 = v13;
    v19 = sub_1000529F4(v12, v13, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v8 + 4, v8 + 12);
    swift_release_n(v1, 2);
    v15 = v14;
    a1 = v7;
    swift_bridgeObjectRelease(v15);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Opening Shazam App Store URL %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

    swift_release_n(v1, 2);
  }
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC16MusicRecognition20ContextMenuViewModel_member))
    v16 = 67845;
  else
    v16 = 2309;
  v17 = sub_1000A6994(v16, 0xD000000000000028, 0x80000001000D90E0);
  return a1(v17);
}

void sub_1000C7A34(uint64_t *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  KeyPath = swift_getKeyPath(&unk_1000D8870, a2);
  v7 = v4;
  v6 = sub_100004864(&qword_100116878, type metadata accessor for ContextMenuViewModel, (uint64_t)&unk_1000D8850);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v6);
  swift_release(KeyPath);
  *a3 = *(_BYTE *)(v4 + OBJC_IVAR____TtC16MusicRecognition20ContextMenuViewModel__shareSheetFromOverflow);
}

double sub_1000C7AC8(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1000D8870, a2);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_100004864(&qword_100116878, type metadata accessor for ContextMenuViewModel, (uint64_t)&unk_1000D8850);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_1000C7CF8, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_1000C7B70(uint64_t result, char a2)
{
  *(_BYTE *)(result + OBJC_IVAR____TtC16MusicRecognition20ContextMenuViewModel__shareSheetFromOverflow) = a2;
  return result;
}

uint64_t sub_1000C7B80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;

  v1 = v0 + OBJC_IVAR____TtC16MusicRecognition20ContextMenuViewModel_shazamAppStoreURL;
  v2 = type metadata accessor for URL(0);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC16MusicRecognition20ContextMenuViewModel_shazamURL, v2);
  v4 = v0 + OBJC_IVAR____TtC16MusicRecognition20ContextMenuViewModel___observationRegistrar;
  v5 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1000C7C18()
{
  return type metadata accessor for ContextMenuViewModel(0);
}

uint64_t type metadata accessor for ContextMenuViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_10011D6A0;
  if (!qword_10011D6A0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ContextMenuViewModel);
  return result;
}

uint64_t sub_1000C7C5C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[5];

  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = v5[0];
    v5[2] = &unk_1000D8838;
    v5[3] = &unk_1000D8838;
    result = type metadata accessor for ObservationRegistrar(319);
    if (v4 <= 0x3F)
    {
      v5[4] = *(_QWORD *)(result - 8) + 64;
      result = swift_updateClassMetadata2(a1, 256, 5, v5, a1 + 80);
      if (!result)
        return 0;
    }
  }
  return result;
}

void sub_1000C7CF8()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC16MusicRecognition20ContextMenuViewModel__shareSheetFromOverflow) = *(_BYTE *)(v0 + 24);
}

ValueMetadata *type metadata accessor for LibraryItemView()
{
  return &type metadata for LibraryItemView;
}

uint64_t sub_1000C7D20(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000DFBE4, 1);
}

uint64_t sub_1000C7D30@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v27;
  uint64_t v28;

  v4 = sub_100004F7C((uint64_t *)&unk_100118CE0);
  __chkstk_darwin(v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LibraryItemArtwork(0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v27 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v27 - v14;
  v16 = objc_msgSend(a1, "artworkURL");
  if (v16)
  {
    v17 = v16;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v16);

    v18 = type metadata accessor for URL(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v6, 0, 1, v18);
  }
  else
  {
    v19 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v6, 1, 1, v19);
  }
  sub_100007EE4((uint64_t)v6, (uint64_t)v13);
  v28 = 0x404E000000000000;
  v20 = sub_10006BCD4();
  ScaledMetric.init(wrappedValue:)(&v28, &type metadata for Double, v20);
  v21 = &v13[*(int *)(v7 + 24)];
  *(_QWORD *)v21 = swift_getKeyPath(&unk_1000D8908, v22);
  v23 = sub_100004F7C(&qword_100116698);
  swift_storeEnumTagMultiPayload(v21, v23, 0);
  sub_10006BD20((uint64_t)v13, (uint64_t)v15);
  sub_10006BD64((uint64_t)v15, (uint64_t)v10);
  sub_10006BD64((uint64_t)v10, a2);
  v24 = a2 + *(int *)(sub_100004F7C(&qword_10011D7A8) + 48);
  *(_QWORD *)v24 = a1;
  *(_BYTE *)(v24 + 8) = 0;
  v25 = a1;
  sub_10006BDD0((uint64_t)v15);

  return sub_10006BDD0((uint64_t)v10);
}

uint64_t sub_1000C7F50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void **v2;
  void *v4;
  uint64_t v5;

  v4 = *v2;
  *(_QWORD *)a2 = static VerticalAlignment.center.getter(a1);
  *(_QWORD *)(a2 + 8) = 0x4028000000000000;
  *(_BYTE *)(a2 + 16) = 0;
  v5 = sub_100004F7C(&qword_10011D7A0);
  return sub_1000C7D30(v4, a2 + *(int *)(v5 + 44));
}

unint64_t sub_1000C7FA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011D7B0;
  if (!qword_10011D7B0)
  {
    v1 = sub_1000050C8(&qword_10011D7B8);
    result = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v1);
    atomic_store(result, (unint64_t *)&qword_10011D7B0);
  }
  return result;
}

uint64_t destroy for CircularProgressView(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[2]);
  swift_release(a1[3]);
  return swift_release(a1[4]);
}

uint64_t *initializeWithCopy for CircularProgressView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  v6 = a2[3];
  a1[2] = v5;
  a1[3] = v6;
  v8 = a2[4];
  v7 = a2[5];
  a1[4] = v8;
  a1[5] = v7;
  swift_retain(v3);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v8);
  return a1;
}

uint64_t *assignWithCopy for CircularProgressView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  a1[1] = a2[1];
  v6 = a1[2];
  v7 = a2[2];
  a1[2] = v7;
  swift_retain(v7);
  swift_release(v6);
  v8 = a1[3];
  v9 = a2[3];
  a1[3] = v9;
  swift_retain(v9);
  swift_release(v8);
  v10 = a2[4];
  v11 = a1[4];
  a1[4] = v10;
  swift_retain(v10);
  swift_release(v11);
  a1[5] = a2[5];
  return a1;
}

_QWORD *assignWithTake for CircularProgressView(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  *a1 = *(_QWORD *)a2;
  swift_release(v4);
  a1[1] = *(_QWORD *)(a2 + 8);
  swift_release(a1[2]);
  v5 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  swift_release(v5);
  v6 = a1[4];
  a1[4] = *(_QWORD *)(a2 + 32);
  swift_release(v6);
  a1[5] = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for CircularProgressView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CircularProgressView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CircularProgressView()
{
  return &type metadata for CircularProgressView;
}

uint64_t sub_1000C8234(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000DFC4C, 1);
}

uint64_t sub_1000C8244@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  double v17;
  char v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (**v24)(double *@<X8>, double@<D2>, double@<D3>);
  double v25;
  uint64_t v26;
  uint64_t (*v27)(double *);
  __int128 v28;
  uint64_t v29;
  uint64_t (**v30)(double *);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  __int128 v38;
  _OWORD v39[12];
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  _OWORD v54[18];

  v2 = v1;
  v35 = a1;
  v34 = sub_100004F7C(&qword_10011D7C0);
  __chkstk_darwin(v34);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CoordinateSpace(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_100004F7C(&qword_10011D7C8);
  v9 = __chkstk_darwin(v33);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = static Alignment.center.getter(v9);
  v14 = v13;
  sub_1000C8590((uint64_t *)v1, (uint64_t)v39);
  v51 = v39[10];
  v52 = v39[11];
  v53 = v40;
  v47 = v39[6];
  v48 = v39[7];
  v49 = v39[8];
  v50 = v39[9];
  v43 = v39[2];
  v44 = v39[3];
  v45 = v39[4];
  v46 = v39[5];
  v41 = v39[0];
  v42 = v39[1];
  v38 = *(_OWORD *)(v1 + 8);
  v54[0] = *(_OWORD *)(v1 + 8);
  v15 = sub_100004F7C(&qword_10011D7D0);
  v16 = State.wrappedValue.getter(&v37, v15);
  v17 = v37 * 0.5;
  v18 = static Edge.Set.all.getter(v16);
  v19 = EdgeInsets.init(_all:)(v17);
  *(_QWORD *)&v54[0] = v12;
  *((_QWORD *)&v54[0] + 1) = v14;
  v54[11] = v51;
  v54[12] = v52;
  *(_QWORD *)&v54[13] = v53;
  v54[7] = v47;
  v54[8] = v48;
  v54[9] = v49;
  v54[10] = v50;
  v54[3] = v43;
  v54[4] = v44;
  v54[5] = v45;
  v54[6] = v46;
  v54[1] = v41;
  v54[2] = v42;
  BYTE8(v54[13]) = v18;
  *(double *)&v54[14] = v19;
  *((_QWORD *)&v54[14] + 1) = v20;
  *(_QWORD *)&v54[15] = v21;
  *((_QWORD *)&v54[15] + 1) = v22;
  LOBYTE(v54[16]) = 0;
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for CoordinateSpace.local(_:), v5);
  v23 = v34;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(&v4[*(int *)(v34 + 36)], v8, v5);
  *(_QWORD *)v4 = &type metadata for CircularWidthHeightPreferenceKey;
  v24 = (void (**)(double *@<X8>, double@<D2>, double@<D3>))&v4[*(int *)(v23 + 40)];
  *v24 = sub_10003E680;
  v24[1] = 0;
  sub_100007C8C((uint64_t)v4, (uint64_t)&v11[*(int *)(v33 + 36)], &qword_10011D7C0);
  memcpy(v11, v54, 0x101uLL);
  sub_1000C8894(v54);
  sub_10000526C((uint64_t)v4, &qword_10011D7C0);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1000C88FC(v39);
  v25 = *(double *)v2;
  v26 = *(_QWORD *)(v2 + 32);
  v36 = *(_QWORD *)(v2 + 24);
  v37 = v25;
  v27 = (uint64_t (*)(double *))swift_allocObject(&unk_10010E8A8, 64, 7);
  v28 = *(_OWORD *)(v2 + 16);
  *((_OWORD *)v27 + 1) = *(_OWORD *)v2;
  *((_OWORD *)v27 + 2) = v28;
  *((_OWORD *)v27 + 3) = *(_OWORD *)(v2 + 32);
  v29 = v35;
  sub_100007C8C((uint64_t)v11, v35, &qword_10011D7C8);
  v30 = (uint64_t (**)(double *))(v29 + *(int *)(sub_100004F7C(&qword_10011D7D8) + 36));
  *v30 = sub_1000C89A0;
  v30[1] = v27;
  sub_1000454F8(&v37);
  sub_1000C89F8((uint64_t)&v38);
  sub_1000454F8(&v36);
  swift_retain(v26);
  return sub_10000526C((uint64_t)v11, &qword_10011D7C8);
}

uint64_t sub_1000C8590@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[5];
  uint64_t v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  int v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int16 v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v4 = *a1;
  v33 = *a1;
  v38 = Color.opacity(_:)(0.5);
  v54 = *(_OWORD *)(a1 + 1);
  v5 = sub_100004F7C(&qword_10011D7D0);
  State.wrappedValue.getter(&v46, v5);
  v6 = StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v39, 0, 0, _swiftEmptyArrayStorage, *(double *)&v46, 10.0, 0.0);
  v37 = v39[0];
  v7 = v39[2];
  v36 = v39[3];
  v8 = v39[4];
  v9 = static Alignment.center.getter(v6);
  v34 = v10;
  v35 = v9;
  v54 = *(_OWORD *)(a1 + 3);
  v55 = a1[5];
  sub_100004F7C(&qword_10011D7E0);
  Binding.wrappedValue.getter(&v46);
  v11 = v46;
  v54 = *(_OWORD *)(a1 + 1);
  swift_retain(v4);
  State.wrappedValue.getter(&v46, v5);
  v12 = StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(&v40, 1, 0, _swiftEmptyArrayStorage, *(double *)&v46, 10.0, 0.0);
  v13 = v40;
  LODWORD(v4) = v41;
  v14 = v42;
  v15 = v43;
  v16 = v44;
  v17 = v45;
  v18 = static Alignment.center.getter(v12);
  v20 = v19;
  v22 = static UnitPoint.center.getter(v21);
  v24 = v23;
  v25 = static Animation.easeOut.getter();
  v54 = *(_OWORD *)(a1 + 3);
  v55 = a1[5];
  Binding.wrappedValue.getter(&v46);
  v26 = v46;
  *(_QWORD *)&v46 = 0;
  *((_QWORD *)&v46 + 1) = v11;
  *(_QWORD *)&v47 = v13;
  *((_QWORD *)&v47 + 1) = __PAIR64__(v14, v4);
  *(_QWORD *)&v48 = v15;
  *((_QWORD *)&v48 + 1) = v16;
  *(_QWORD *)&v49 = v17;
  *((_QWORD *)&v49 + 1) = v33;
  LOWORD(v50) = 256;
  *((_QWORD *)&v50 + 1) = v18;
  *(_QWORD *)&v51 = v20;
  *((_QWORD *)&v51 + 1) = 0xBFF921FB54442D18;
  *(double *)&v52 = v22;
  *((_QWORD *)&v52 + 1) = v24;
  *(_QWORD *)&v53 = v25;
  *((_QWORD *)&v53 + 1) = v26;
  v27 = v47;
  *(_OWORD *)(a2 + 72) = v46;
  v28 = v48;
  *(_OWORD *)(a2 + 120) = v49;
  *(_OWORD *)(a2 + 104) = v28;
  v29 = v53;
  *(_OWORD *)(a2 + 168) = v52;
  v30 = v50;
  *(_OWORD *)(a2 + 152) = v51;
  *(_OWORD *)(a2 + 136) = v30;
  *(_OWORD *)(a2 + 88) = v27;
  *(_OWORD *)(a2 + 184) = v29;
  v31 = v39[1];
  *(_QWORD *)a2 = v37;
  *(_QWORD *)(a2 + 8) = v31;
  *(_QWORD *)(a2 + 16) = v7;
  *(_QWORD *)(a2 + 24) = v36;
  *(_QWORD *)(a2 + 32) = v8;
  *(_QWORD *)(a2 + 40) = v38;
  *(_WORD *)(a2 + 48) = 256;
  *(_QWORD *)(a2 + 56) = v35;
  *(_QWORD *)(a2 + 64) = v34;
  *(_QWORD *)&v54 = 0;
  *((_QWORD *)&v54 + 1) = v11;
  v55 = v13;
  v56 = v4;
  v57 = v14;
  v58 = v15;
  v59 = v16;
  v60 = v17;
  v61 = v33;
  v62 = 256;
  v63 = v18;
  v64 = v20;
  v65 = 0xBFF921FB54442D18;
  v66 = v22;
  v67 = v24;
  v68 = v25;
  v69 = v26;
  swift_bridgeObjectRetain(v36);
  swift_retain(v38);
  sub_1000C8A20(&v46);
  sub_1000C8A68(&v54);
  swift_release(v38);
  return swift_bridgeObjectRelease(v36);
}

uint64_t sub_1000C885C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C8244(a1);
}

_QWORD *sub_1000C8894(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[5];
  v3 = a1[7];
  v4 = a1[16];
  v5 = a1[18];
  swift_retain(a1[25]);
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  swift_bridgeObjectRetain(v4);
  swift_retain(v5);
  return a1;
}

_QWORD *sub_1000C88FC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[3];
  v3 = a1[5];
  v4 = a1[14];
  v5 = a1[23];
  swift_release(a1[16]);
  swift_bridgeObjectRelease(v4);
  swift_release(v3);
  swift_bridgeObjectRelease(v2);
  swift_release(v5);
  return a1;
}

uint64_t sub_1000C8964()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1000C89A0(double *a1)
{
  uint64_t v1;
  double v2;
  uint64_t v3;
  double v5;
  __int128 v6;

  v2 = *a1 * 0.1;
  v6 = *(_OWORD *)(v1 + 24);
  v5 = v2;
  v3 = sub_100004F7C(&qword_10011D7D0);
  return State.wrappedValue.setter(&v5, v3);
}

uint64_t sub_1000C89F8(uint64_t a1)
{
  swift_retain(*(_QWORD *)(a1 + 8));
  return a1;
}

_QWORD *sub_1000C8A20(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[5];
  v3 = a1[7];
  swift_retain(a1[14]);
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  return a1;
}

_QWORD *sub_1000C8A68(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[5];
  v3 = a1[14];
  swift_release(a1[7]);
  swift_bridgeObjectRelease(v2);
  swift_release(v3);
  return a1;
}

ValueMetadata *type metadata accessor for CircularWidthHeightPreferenceKey()
{
  return &type metadata for CircularWidthHeightPreferenceKey;
}

unint64_t sub_1000C8AC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011D7E8;
  if (!qword_10011D7E8)
  {
    v1 = sub_1000050C8(&qword_10011D7D8);
    sub_1000C8B48();
    sub_10000522C(&qword_10011D820, &qword_10011D828, (uint64_t)&protocol conformance descriptor for _PreferenceActionModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011D7E8);
  }
  return result;
}

unint64_t sub_1000C8B48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011D7F0;
  if (!qword_10011D7F0)
  {
    v1 = sub_1000050C8(&qword_10011D7C8);
    sub_1000C8BCC();
    sub_10000522C(&qword_10011D818, &qword_10011D7C0, (uint64_t)&unk_1000D4F10);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011D7F0);
  }
  return result;
}

unint64_t sub_1000C8BCC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10011D7F8;
  if (!qword_10011D7F8)
  {
    v1 = sub_1000050C8(&qword_10011D800);
    sub_10000522C(&qword_10011D808, &qword_10011D810, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10011D7F8);
  }
  return result;
}

unint64_t sub_1000C8C50(uint64_t a1)
{
  unint64_t result;

  result = sub_1000C8C74();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1000C8C74()
{
  unint64_t result;

  result = qword_10011D830;
  if (!qword_10011D830)
  {
    result = swift_getWitnessTable(&unk_1000D89D4, &type metadata for CircularWidthHeightPreferenceKey);
    atomic_store(result, (unint64_t *)&qword_10011D830);
  }
  return result;
}

void sub_1000C8CB8(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0 && a2)
  {
    swift_errorRetain(a2);
    if (qword_100115DD8 != -1)
      swift_once(&qword_100115DD8, sub_10000C418);
    v10 = type metadata accessor for Logger(0);
    sub_10000B5E8(v10, (uint64_t)qword_100124478);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a3, v6);
    swift_errorRetain(a2);
    v11 = swift_errorRetain(a2);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc(22, -1);
      v23 = (uint64_t *)swift_slowAlloc(8, -1);
      v24 = swift_slowAlloc(32, -1);
      v26 = v24;
      *(_DWORD *)v14 = 136315394;
      v15 = sub_1000C92E8();
      v16 = dispatch thunk of CustomStringConvertible.description.getter(v6, v15);
      v18 = v17;
      v25 = sub_1000529F4(v16, v17, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v14 + 4, v14 + 12);
      swift_bridgeObjectRelease(v18);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      *(_WORD *)(v14 + 12) = 2112;
      swift_errorRetain(a2);
      v19 = _swift_stdlib_bridgeErrorToNSError(a2);
      v25 = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v14 + 14, v14 + 22);
      v20 = v23;
      *v23 = v19;
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Failed to launch url: %s error: %@", (uint8_t *)v14, 0x16u);
      v21 = sub_100004F7C((uint64_t *)&unk_100116E50);
      swift_arrayDestroy(v20, 1, v21);
      swift_slowDealloc(v20, -1, -1);
      v22 = v24;
      swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v14, -1, -1);

      swift_errorRelease(a2);
    }
    else
    {
      swift_errorRelease(a2);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      swift_errorRelease(a2);
      swift_errorRelease(a2);

    }
  }
}

void sub_1000C8F88(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  id v7;

  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v7 = a3;
  v6(a2, a3);
  swift_release(v5);

}

void sub_1000C8FE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  Class isa;
  void *v12;
  NSURL *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  _QWORD aBlock[5];
  uint64_t v23;
  char v24[128];

  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = objc_msgSend(objc_allocWithZone((Class)_LSOpenConfiguration), "init");
  v6 = sub_100004F7C(&qword_100118BF8);
  inited = swift_initStackObject(v6, v24);
  *(_OWORD *)(inited + 16) = xmmword_1000D32A0;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(FBSOpenApplicationOptionKeyUnlockDevice);
  *(_QWORD *)(inited + 40) = v8;
  *(_QWORD *)(inited + 72) = &type metadata for Bool;
  *(_BYTE *)(inited + 48) = 1;
  *(_QWORD *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(FBSOpenApplicationOptionKeyPromptUnlockDevice);
  *(_QWORD *)(inited + 88) = v9;
  *(_QWORD *)(inited + 120) = &type metadata for Bool;
  *(_BYTE *)(inited + 96) = 1;
  v10 = sub_1000B3F60(inited);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v10);
  objc_msgSend(v5, "setFrontBoardOptions:", isa);

  v12 = (void *)objc_opt_self(LSAppLink);
  URL._bridgeToObjectiveC()(v13);
  v15 = v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v16 = *(unsigned __int8 *)(v3 + 80);
  v17 = (v16 + 16) & ~v16;
  v18 = swift_allocObject(&unk_10010E970, v17 + v4, v16 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v18 + v17, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  aBlock[4] = sub_1000C9284;
  v23 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000C8F88;
  aBlock[3] = &unk_10010E988;
  v19 = _Block_copy(aBlock);
  v20 = v23;
  v21 = v5;
  swift_release(v20);
  objc_msgSend(v12, "openWithURL:configuration:completionHandler:", v15, v21, v19);
  _Block_release(v19);

}

uint64_t sub_1000C9224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1000C9284(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  sub_1000C8CB8(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_1000C92D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000C92E0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_1000C92E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1001168E8;
  if (!qword_1001168E8)
  {
    v1 = type metadata accessor for URL(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for URL, v1);
    atomic_store(result, (unint64_t *)&qword_1001168E8);
  }
  return result;
}

uint64_t initializeWithCopy for AnyPlaylist(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

_QWORD *assignWithCopy for AnyPlaylist(_QWORD *a1, _QWORD *a2)
{
  sub_100012EA4(a1, a2);
  return a1;
}

__n128 initializeWithTake for AnyPlaylist(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AnyPlaylist(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  _s16MusicRecognition11AnyPlaylistVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyPlaylist(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyPlaylist(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyPlaylist()
{
  return &type metadata for AnyPlaylist;
}

uint64_t sub_1000C947C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = v0[4];
  sub_10000C9C8(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t sub_1000C94C0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = v0[4];
  sub_10000C9C8(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t sub_1000C9504()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = v0[4];
  sub_10000C9C8(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2) & 1;
}

uint64_t sub_1000C954C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = v0[4];
  sub_10000C9C8(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 32))(v1, v2);
}

uint64_t storeEnumTagSinglePayload for MusicRecognitionPlatterPresentationStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1000C95DC + 4 * byte_1000D8A65[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1000C9610 + 4 * byte_1000D8A60[v4]))();
}

uint64_t sub_1000C9610(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000C9618(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000C9620);
  return result;
}

uint64_t sub_1000C962C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000C9634);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1000C9638(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000C9640(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MusicRecognitionPlatterPresentationStyle()
{
  return &type metadata for MusicRecognitionPlatterPresentationStyle;
}

unint64_t sub_1000C9660()
{
  unint64_t result;

  result = qword_10011D838;
  if (!qword_10011D838)
  {
    result = swift_getWitnessTable(&unk_1000D8AFC, &type metadata for MusicRecognitionPlatterPresentationStyle);
    atomic_store(result, &qword_10011D838);
  }
  return result;
}

uint64_t sub_1000C96A4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1[2] = v0;
  v2 = sub_100004F7C((uint64_t *)&unk_100118CE0);
  v1[3] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for URL(0);
  v1[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[5] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[6] = swift_task_alloc(v5);
  v1[7] = swift_task_alloc(v5);
  return swift_task_switch(sub_1000C9738, 0, 0);
}

uint64_t sub_1000C9738()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  _QWORD *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v14)(uint64_t);

  v1 = objc_msgSend(*(id *)(v0 + 16), "artworkURL");
  if (!v1)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 40) + 56))(*(_QWORD *)(v0 + 24), 1, 1, *(_QWORD *)(v0 + 32));
    goto LABEL_5;
  }
  v2 = v1;
  v4 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v1);

  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  v7(v6, v3, v5);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v6, 0, 1, v5);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v6, 1, v5) == 1)
  {
LABEL_5:
    sub_100007B24(*(_QWORD *)(v0 + 24));
    v11 = *(_QWORD *)(v0 + 48);
    v12 = *(_QWORD *)(v0 + 24);
    swift_task_dealloc(*(_QWORD *)(v0 + 56));
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    v10 = *(uint64_t (**)(uint64_t))(v0 + 8);
    v9 = 0;
    return v10(v9);
  }
  v7(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  v14 = (uint64_t (*)(uint64_t))((char *)&dword_100118CF0 + dword_100118CF0);
  v8 = (_QWORD *)swift_task_alloc(unk_100118CF4);
  *(_QWORD *)(v0 + 64) = v8;
  *v8 = v0;
  v8[1] = sub_1000C9878;
  v9 = *(_QWORD *)(v0 + 56);
  v10 = v14;
  return v10(v9);
}

uint64_t sub_1000C9878(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t (*v5)();

  v4 = *v2;
  swift_task_dealloc(*(_QWORD *)(*v2 + 64));
  if (v1)
  {
    swift_errorRelease(v1);
    v5 = sub_1000C9954;
  }
  else
  {
    *(_QWORD *)(v4 + 72) = a1;
    v5 = sub_1000C98F0;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1000C98F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 72);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 32));
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 24);
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1000C9954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 32));
  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 24);
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1000C99AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v5[13] = a4;
  v5[14] = a5;
  v5[11] = a2;
  v5[12] = a3;
  v5[10] = a1;
  v6 = sub_100004F7C(&qword_10011D850);
  v5[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (*(_QWORD *)(*(_QWORD *)(sub_100004F7C(&qword_10011B0D0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[16] = swift_task_alloc(v7);
  v5[17] = swift_task_alloc(v7);
  v8 = sub_100004F7C(&qword_10011D858);
  v5[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100004F7C(&qword_10011B0C8);
  v5[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100004F7C(&qword_1001190E8);
  v5[20] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v5[21] = v11;
  v5[22] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (*(_QWORD *)(*(_QWORD *)(sub_100004F7C(&qword_10011B0D8) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[23] = swift_task_alloc(v12);
  v5[24] = swift_task_alloc(v12);
  v5[25] = swift_task_alloc(v12);
  v13 = sub_100004F7C(&qword_10011D860);
  v5[26] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v5[27] = v14;
  v5[28] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100004F7C(&qword_10011D868);
  v5[29] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v5[30] = v16;
  v5[31] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for MusicDataRequest.ExecutionMethod(0);
  v5[32] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v5[33] = v18;
  v5[34] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for MusicAuthorization.Status(0);
  v5[35] = v19;
  v20 = *(_QWORD *)(v19 - 8);
  v5[36] = v20;
  v21 = (*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[37] = swift_task_alloc(v21);
  v5[38] = swift_task_alloc(v21);
  return swift_task_switch(sub_1000C9BB0, 0, 0);
}

uint64_t sub_1000C9BB0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[34];
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v0[33] + 104))(v1, enum case for MusicDataRequest.ExecutionMethod.firstParty(_:), v0[32]);
  static MusicDataRequest.preferredExecutionMethod.setter(v1);
  v2 = (_QWORD *)swift_task_alloc(async function pointer to static MusicAuthorization.request()[1]);
  v0[39] = v2;
  *v2 = v0;
  v2[1] = sub_1000C9C28;
  return static MusicAuthorization.request()(v0[38]);
}

uint64_t sub_1000C9C28()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 312));
  return swift_task_switch(sub_1000C9C7C, 0, 0);
}

uint64_t sub_1000C9C7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  char v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t KeyPath;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v1 = *(_QWORD *)(v0 + 280);
  (*(void (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v0 + 288) + 104))(*(_QWORD *)(v0 + 296), enum case for MusicAuthorization.Status.authorized(_:), v1);
  v2 = sub_100004864(&qword_10011D870, (uint64_t (*)(uint64_t))&type metadata accessor for MusicAuthorization.Status, (uint64_t)&protocol conformance descriptor for MusicAuthorization.Status);
  dispatch thunk of RawRepresentable.rawValue.getter(v1, v2);
  dispatch thunk of RawRepresentable.rawValue.getter(v1, v2);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 296);
  v7 = *(_QWORD *)(v0 + 304);
  v9 = *(_QWORD *)(v0 + 280);
  v10 = *(_QWORD *)(v0 + 288);
  v11 = *(_QWORD *)(v0 + 112);
  if (v3 != v5 || v4 != v6)
  {
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, *(_QWORD *)(v0 + 24), v5, *(_QWORD *)(v0 + 40), 0);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v4);
    v15 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v15(v8, v9);
    v15(v7, v9);
    if ((v14 & 1) == 0 || !v11)
      goto LABEL_8;
LABEL_7:
    v16 = *(_QWORD *)(v0 + 232);
    v18 = *(_QWORD *)(v0 + 104);
    v17 = *(_QWORD *)(v0 + 112);
    KeyPath = swift_getKeyPath(&unk_1000D8B28, v13);
    swift_bridgeObjectRetain_n(v17, 2);
    *(_QWORD *)(v0 + 48) = MusicItemID.init(_:)(v18, v17, v20);
    *(_QWORD *)(v0 + 56) = v21;
    v22 = type metadata accessor for Song(0);
    *(_QWORD *)(v0 + 320) = v22;
    v23 = sub_100004864(&qword_10011D878, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
    MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v0 + 48, v22, &protocol witness table for Song, v23);
    v24 = sub_100004F7C(&qword_100116D90);
    *(_QWORD *)(v0 + 328) = v24;
    v25 = swift_allocObject(v24, 56, 7);
    *(_OWORD *)(v25 + 16) = xmmword_1000D8100;
    sub_100004F7C(&qword_10011D880);
    *(_QWORD *)(v25 + 32) = static PartialMusicProperty<A>.albums.getter();
    *(_QWORD *)(v25 + 40) = static PartialMusicProperty<A>.artists.getter();
    v26 = static PartialMusicProperty<A>.editorialVideoArtworks.getter(&protocol witness table for Song);
    *(_QWORD *)(v25 + 48) = v26;
    specialized Array._endMutation()(v26);
    MusicCatalogResourceRequest.properties.setter(v25, v16);
    MusicCatalogResourceRequest.limit.setter(1, 0, v16);
    v27 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
    *(_QWORD *)(v0 + 336) = v27;
    *v27 = v0;
    v27[1] = sub_1000CA0F0;
    return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 232));
  }
  swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 24), 2);
  v12 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v12(v8, v9);
  v12(v7, v9);
  if (v11)
    goto LABEL_7;
LABEL_8:
  if (qword_100115DD8 != -1)
    swift_once(&qword_100115DD8, sub_10000C418);
  v29 = type metadata accessor for Logger(0);
  v30 = sub_10000B5E8(v29, (uint64_t)qword_100124478);
  v31 = Logger.logObject.getter(v30);
  v32 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v33 = 0;
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "Unexpected MusicKit authorization status", v33, 2u);
    swift_slowDealloc(v33, -1, -1);
  }
  v35 = *(_QWORD *)(v0 + 88);
  v34 = *(_QWORD *)(v0 + 96);
  v36 = *(_QWORD *)(v0 + 80);

  v37 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v36, 1, 1, v37);
  v38 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v35, 1, 1, v38);
  v39 = type metadata accessor for Album(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v34, 1, 1, v39);
  v40 = *(_QWORD *)(v0 + 296);
  v41 = *(_QWORD *)(v0 + 272);
  v42 = *(_QWORD *)(v0 + 248);
  v43 = *(_QWORD *)(v0 + 224);
  v45 = *(_QWORD *)(v0 + 192);
  v44 = *(_QWORD *)(v0 + 200);
  v47 = *(_QWORD *)(v0 + 176);
  v46 = *(_QWORD *)(v0 + 184);
  v48 = *(_QWORD *)(v0 + 152);
  v49 = *(_QWORD *)(v0 + 144);
  v50 = *(_QWORD *)(v0 + 136);
  v51 = *(_QWORD *)(v0 + 128);
  v52 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 304));
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000CA0F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 336);
  *(_QWORD *)(*(_QWORD *)v1 + 344) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1000CABB0;
  else
    v3 = sub_1000CA154;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000CA154()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v2 = (uint64_t *)(v0 + 192);
  v1 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 320);
  v4 = *(_QWORD *)(v0 + 200);
  v6 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 176);
  v7 = *(_QWORD *)(v0 + 160);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 208));
  sub_100050D88(v4);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  sub_1000CAF98(v4, v1);
  v8 = *(_QWORD *)(v3 - 8);
  v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v9(v1, 1, v3) == 1)
  {
    v10 = &qword_10011B0D8;
LABEL_5:
    sub_10000526C(*v2, v10);
    v16 = *(_QWORD *)(v0 + 152);
    v17 = type metadata accessor for Album(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
    goto LABEL_7;
  }
  v2 = (uint64_t *)(v0 + 144);
  v11 = *(_QWORD *)(v0 + 144);
  v12 = *(_QWORD *)(v0 + 320);
  v13 = *(_QWORD *)(v0 + 192);
  Song.albums.getter();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v13, v12);
  v14 = sub_100004F7C(&qword_1001190C8);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v11, 1, v14) == 1)
  {
    v10 = (uint64_t *)&unk_10011D858;
    goto LABEL_5;
  }
  v18 = *(_QWORD *)(v0 + 144);
  sub_100050DA4(*(_QWORD *)(v0 + 152));
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v18, v14);
LABEL_7:
  v20 = (uint64_t *)(v0 + 184);
  v19 = *(_QWORD *)(v0 + 184);
  v21 = *(_QWORD *)(v0 + 320);
  sub_1000CAF98(*(_QWORD *)(v0 + 200), v19);
  if (v9(v19, 1, v21) == 1)
  {
    v22 = &qword_10011B0D8;
LABEL_13:
    v33 = *(_QWORD *)(v0 + 240);
    v32 = *(_QWORD *)(v0 + 248);
    v35 = *(_QWORD *)(v0 + 224);
    v34 = *(_QWORD *)(v0 + 232);
    v36 = *(_QWORD *)(v0 + 208);
    v37 = *(_QWORD *)(v0 + 216);
    v38 = *v20;
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 112));
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v35, v36);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
    sub_10000526C(v38, v22);
    v39 = *(_QWORD *)(v0 + 136);
    v40 = type metadata accessor for Artist(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v39, 1, 1, v40);
    v41 = *(_QWORD *)(v0 + 152);
    v42 = *(_QWORD *)(v0 + 136);
    v44 = *(_QWORD *)(v0 + 88);
    v43 = *(_QWORD *)(v0 + 96);
    sub_100007C48(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 80), &qword_10011B0D8);
    sub_100007C48(v42, v44, &qword_10011B0D0);
    sub_100007C48(v41, v43, &qword_10011B0C8);
    v45 = *(_QWORD *)(v0 + 296);
    v46 = *(_QWORD *)(v0 + 272);
    v47 = *(_QWORD *)(v0 + 248);
    v48 = *(_QWORD *)(v0 + 224);
    v50 = *(_QWORD *)(v0 + 192);
    v49 = *(_QWORD *)(v0 + 200);
    v52 = *(_QWORD *)(v0 + 176);
    v51 = *(_QWORD *)(v0 + 184);
    v53 = *(_QWORD *)(v0 + 152);
    v58 = *(_QWORD *)(v0 + 144);
    v59 = *(_QWORD *)(v0 + 136);
    v60 = *(_QWORD *)(v0 + 128);
    v61 = *(_QWORD *)(v0 + 120);
    swift_task_dealloc(*(_QWORD *)(v0 + 304));
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    swift_task_dealloc(v52);
    swift_task_dealloc(v53);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v20 = (uint64_t *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 120);
  v24 = *(_QWORD *)(v0 + 320);
  v25 = *(_QWORD *)(v0 + 184);
  Song.artists.getter();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v25, v24);
  v26 = sub_100004F7C(&qword_1001190D8);
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v23, 1, v26) == 1)
  {
    v22 = (uint64_t *)&unk_10011D850;
    goto LABEL_13;
  }
  v20 = (uint64_t *)(v0 + 128);
  v28 = *(_QWORD *)(v0 + 128);
  v29 = *(_QWORD *)(v0 + 120);
  sub_100050DC0(v28);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v29, v26);
  v30 = type metadata accessor for Artist(0);
  *(_QWORD *)(v0 + 352) = v30;
  v31 = *(_QWORD *)(v30 - 8);
  *(_QWORD *)(v0 + 360) = v31;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v28, 1, v30) == 1)
  {
    v22 = &qword_10011B0D0;
    goto LABEL_13;
  }
  v55 = swift_allocObject(*(_QWORD *)(v0 + 328), 40, 7);
  *(_OWORD *)(v55 + 16) = xmmword_1000D3AA0;
  sub_100004F7C(&qword_10011D888);
  v56 = static PartialMusicProperty<A>.biography.getter();
  *(_QWORD *)(v55 + 32) = v56;
  specialized Array._endMutation()(v56);
  *(_QWORD *)(v0 + 368) = v55;
  v57 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of MusicPropertyContainer.with(_:)[1]);
  *(_QWORD *)(v0 + 376) = v57;
  *v57 = v0;
  v57[1] = sub_1000CA5B8;
  return dispatch thunk of MusicPropertyContainer.with(_:)(*(_QWORD *)(v0 + 136), v55, v30, &protocol witness table for Artist);
}

uint64_t sub_1000CA5B8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 368);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 376);
  *(_QWORD *)(*(_QWORD *)v1 + 384) = v0;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease(v4);
  if (v0)
  {
    v5 = sub_1000CA7BC;
  }
  else
  {
    v6 = v2[44];
    v7 = v2[45];
    v8 = v2[16];
    swift_bridgeObjectRelease(v2[14]);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v6);
    v5 = sub_1000CA64C;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1000CA64C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 352);
  v2 = *(_QWORD *)(v0 + 360);
  v4 = *(_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 248);
  v5 = *(_QWORD *)(v0 + 232);
  v6 = *(_QWORD *)(v0 + 136);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 8))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 208));
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 56))(v6, 0, 1, v1);
  v7 = *(_QWORD *)(v0 + 152);
  v8 = *(_QWORD *)(v0 + 136);
  v10 = *(_QWORD *)(v0 + 88);
  v9 = *(_QWORD *)(v0 + 96);
  sub_100007C48(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 80), &qword_10011B0D8);
  sub_100007C48(v8, v10, &qword_10011B0D0);
  sub_100007C48(v7, v9, &qword_10011B0C8);
  v11 = *(_QWORD *)(v0 + 296);
  v12 = *(_QWORD *)(v0 + 272);
  v13 = *(_QWORD *)(v0 + 248);
  v14 = *(_QWORD *)(v0 + 224);
  v16 = *(_QWORD *)(v0 + 192);
  v15 = *(_QWORD *)(v0 + 200);
  v18 = *(_QWORD *)(v0 + 176);
  v17 = *(_QWORD *)(v0 + 184);
  v19 = *(_QWORD *)(v0 + 152);
  v21 = *(_QWORD *)(v0 + 144);
  v22 = *(_QWORD *)(v0 + 136);
  v23 = *(_QWORD *)(v0 + 128);
  v24 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 304));
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000CA7BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v1 = *(_QWORD *)(v0 + 352);
  v2 = *(_QWORD *)(v0 + 360);
  v4 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 224);
  v6 = *(_QWORD *)(v0 + 200);
  v5 = *(_QWORD *)(v0 + 208);
  v7 = *(_QWORD *)(v0 + 128);
  sub_10000526C(*(_QWORD *)(v0 + 152), &qword_10011B0C8);
  sub_10000526C(v6, &qword_10011B0D8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v7, v1);
  v8 = *(_QWORD *)(v0 + 384);
  if (qword_100115DD8 != -1)
    swift_once(&qword_100115DD8, sub_10000C418);
  v9 = *(_QWORD *)(v0 + 112);
  v10 = type metadata accessor for Logger(0);
  sub_10000B5E8(v10, (uint64_t)qword_100124478);
  swift_errorRetain(v8);
  swift_bridgeObjectRetain(v9);
  v11 = swift_errorRetain(v8);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter();
  v14 = os_log_type_enabled(v12, v13);
  v16 = *(_QWORD *)(v0 + 240);
  v15 = *(_QWORD *)(v0 + 248);
  v17 = *(_QWORD *)(v0 + 232);
  v18 = *(_QWORD *)(v0 + 112);
  if (v14)
  {
    v43 = *(_QWORD *)(v0 + 232);
    v19 = *(_QWORD *)(v0 + 104);
    v41 = *(_QWORD *)(v0 + 240);
    v20 = swift_slowAlloc(22, -1);
    v21 = (uint64_t *)swift_slowAlloc(8, -1);
    v38 = swift_slowAlloc(32, -1);
    v45 = v38;
    *(_DWORD *)v20 = 136315394;
    swift_bridgeObjectRetain(v18);
    *(_QWORD *)(v0 + 64) = sub_1000529F4(v19, v18, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72, v20 + 4, v20 + 12);
    swift_bridgeObjectRelease_n(v18, 3);
    *(_WORD *)(v20 + 12) = 2112;
    swift_errorRetain(v8);
    v22 = _swift_stdlib_bridgeErrorToNSError(v8);
    *(_QWORD *)(v0 + 72) = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80, v20 + 14, v20 + 22);
    *v21 = v22;
    swift_errorRelease(v8);
    swift_errorRelease(v8);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Error fetching metadata for song %s: %@", (uint8_t *)v20, 0x16u);
    v23 = sub_100004F7C((uint64_t *)&unk_100116E50);
    swift_arrayDestroy(v21, 1, v23);
    swift_slowDealloc(v21, -1, -1);
    swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1, -1);
    swift_slowDealloc(v20, -1, -1);

    swift_errorRelease(v8);
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v15, v43);
  }
  else
  {

    swift_errorRelease(v8);
    swift_errorRelease(v8);
    swift_bridgeObjectRelease_n(v18, 2);
    swift_errorRelease(v8);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  v24 = *(_QWORD *)(v0 + 88);
  v25 = *(_QWORD *)(v0 + 96);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 320) - 8) + 56))(*(_QWORD *)(v0 + 80), 1, 1);
  v26 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v24, 1, 1, v26);
  v27 = type metadata accessor for Album(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v25, 1, 1, v27);
  v28 = *(_QWORD *)(v0 + 296);
  v29 = *(_QWORD *)(v0 + 272);
  v30 = *(_QWORD *)(v0 + 248);
  v31 = *(_QWORD *)(v0 + 224);
  v33 = *(_QWORD *)(v0 + 192);
  v32 = *(_QWORD *)(v0 + 200);
  v35 = *(_QWORD *)(v0 + 176);
  v34 = *(_QWORD *)(v0 + 184);
  v36 = *(_QWORD *)(v0 + 152);
  v39 = *(_QWORD *)(v0 + 144);
  v40 = *(_QWORD *)(v0 + 136);
  v42 = *(_QWORD *)(v0 + 128);
  v44 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 304));
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v42);
  swift_task_dealloc(v44);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000CABB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = *(_QWORD *)(v0 + 344);
  if (qword_100115DD8 != -1)
    swift_once(&qword_100115DD8, sub_10000C418);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = type metadata accessor for Logger(0);
  sub_10000B5E8(v3, (uint64_t)qword_100124478);
  swift_errorRetain(v1);
  swift_bridgeObjectRetain(v2);
  v4 = swift_errorRetain(v1);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.error.getter();
  v7 = os_log_type_enabled(v5, v6);
  v9 = *(_QWORD *)(v0 + 240);
  v8 = *(_QWORD *)(v0 + 248);
  v10 = *(_QWORD *)(v0 + 232);
  v11 = *(_QWORD *)(v0 + 112);
  if (v7)
  {
    v36 = *(_QWORD *)(v0 + 232);
    v12 = *(_QWORD *)(v0 + 104);
    v34 = *(_QWORD *)(v0 + 240);
    v13 = swift_slowAlloc(22, -1);
    v14 = (uint64_t *)swift_slowAlloc(8, -1);
    v31 = swift_slowAlloc(32, -1);
    v38 = v31;
    *(_DWORD *)v13 = 136315394;
    swift_bridgeObjectRetain(v11);
    *(_QWORD *)(v0 + 64) = sub_1000529F4(v12, v11, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72, v13 + 4, v13 + 12);
    swift_bridgeObjectRelease_n(v11, 3);
    *(_WORD *)(v13 + 12) = 2112;
    swift_errorRetain(v1);
    v15 = _swift_stdlib_bridgeErrorToNSError(v1);
    *(_QWORD *)(v0 + 72) = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80, v13 + 14, v13 + 22);
    *v14 = v15;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Error fetching metadata for song %s: %@", (uint8_t *)v13, 0x16u);
    v16 = sub_100004F7C((uint64_t *)&unk_100116E50);
    swift_arrayDestroy(v14, 1, v16);
    swift_slowDealloc(v14, -1, -1);
    swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v31, -1, -1);
    swift_slowDealloc(v13, -1, -1);

    swift_errorRelease(v1);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v8, v36);
  }
  else
  {

    swift_errorRelease(v1);
    swift_errorRelease(v1);
    swift_bridgeObjectRelease_n(v11, 2);
    swift_errorRelease(v1);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  v17 = *(_QWORD *)(v0 + 88);
  v18 = *(_QWORD *)(v0 + 96);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 320) - 8) + 56))(*(_QWORD *)(v0 + 80), 1, 1);
  v19 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v17, 1, 1, v19);
  v20 = type metadata accessor for Album(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v18, 1, 1, v20);
  v21 = *(_QWORD *)(v0 + 296);
  v22 = *(_QWORD *)(v0 + 272);
  v23 = *(_QWORD *)(v0 + 248);
  v24 = *(_QWORD *)(v0 + 224);
  v26 = *(_QWORD *)(v0 + 192);
  v25 = *(_QWORD *)(v0 + 200);
  v28 = *(_QWORD *)(v0 + 176);
  v27 = *(_QWORD *)(v0 + 184);
  v29 = *(_QWORD *)(v0 + 152);
  v32 = *(_QWORD *)(v0 + 144);
  v33 = *(_QWORD *)(v0 + 136);
  v35 = *(_QWORD *)(v0 + 128);
  v37 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 304));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v35);
  swift_task_dealloc(v37);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000CAF54@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = a1[3];
  v4 = a1[4];
  sub_10000C9C8(a1, v3);
  result = dispatch thunk of SongFilter.id.getter(v3, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1000CAF98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100004F7C(&qword_10011B0D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000CAFE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000CAFEC);
}

uint64_t sub_1000CAFEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_100004F7C((uint64_t *)&unk_100118CE0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1000CB070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000CB07C);
}

uint64_t sub_1000CB07C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100004F7C((uint64_t *)&unk_100118CE0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for AnySong(uint64_t a1)
{
  uint64_t result;

  result = qword_10011D8E8;
  if (!qword_10011D8E8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AnySong);
  return result;
}

void sub_1000CB138(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  sub_10000880C(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "(";
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

uint64_t sub_1000CB1A8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (_QWORD *)(v1 + *(int *)(a1 + 20));
  v3 = v2[3];
  v4 = v2[4];
  sub_10000C9C8(v2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
}

uint64_t sub_1000CB1F0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (_QWORD *)(v1 + *(int *)(a1 + 20));
  v3 = v2[3];
  v4 = v2[4];
  sub_10000C9C8(v2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 40))(v3, v4);
}

uint64_t sub_1000CB240(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for URL(0);
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (*(_QWORD *)(*(_QWORD *)(sub_100004F7C((uint64_t *)&unk_100118CE0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[7] = swift_task_alloc(v5);
  v2[8] = swift_task_alloc(v5);
  v6 = type metadata accessor for MainActor(0);
  v2[9] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v2[10] = v7;
  v2[11] = v8;
  return swift_task_switch(sub_1000CB308, v7, v8);
}

uint64_t sub_1000CB308()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _QWORD *v21;

  v1 = *(void **)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_placeholderArtworkView);
  v2 = objc_msgSend(*(id *)(v0 + 16), "artworkURL");
  v3 = *(_QWORD *)(v0 + 64);
  if (!v2)
  {
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 40) + 56);
    v8(*(_QWORD *)(v0 + 64), 1, 1, *(_QWORD *)(v0 + 32));
    goto LABEL_5;
  }
  v4 = v2;
  v6 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  v7 = *(_QWORD *)(v0 + 32);
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v2);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v3, v5, v7);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v9 = 1;
  v8(v3, 0, 1, v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v3, 1, v7) == 1)
LABEL_5:
    v9 = 0;
  v10 = *(void **)(v0 + 16);
  v11 = *(_QWORD *)(v0 + 24);
  sub_100007B24(*(_QWORD *)(v0 + 64));
  objc_msgSend(v1, "setHidden:", v9);
  v12 = *(void **)(v11 + OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_albumArtImageView);
  *(_QWORD *)(v0 + 96) = v12;
  v13 = objc_msgSend(v10, "artworkURL");
  v14 = *(_QWORD *)(v0 + 56);
  if (v13)
  {
    v15 = v13;
    v17 = *(_QWORD *)(v0 + 40);
    v16 = *(_QWORD *)(v0 + 48);
    v18 = *(_QWORD *)(v0 + 32);
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v13);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v14, v16, v18);
    v8(v14, 0, 1, v18);
    v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v18);
    v20 = 0;
    if (v19 != 1)
      goto LABEL_11;
  }
  else
  {
    v8(*(_QWORD *)(v0 + 56), 1, 1, *(_QWORD *)(v0 + 32));
  }
  v20 = 1;
LABEL_11:
  sub_100007B24(*(_QWORD *)(v0 + 56));
  objc_msgSend(v12, "setHidden:", v20);
  v21 = (_QWORD *)swift_task_alloc(dword_10011D844);
  *(_QWORD *)(v0 + 104) = v21;
  *v21 = v0;
  v21[1] = sub_1000CB4F8;
  return sub_1000C96A4();
}

uint64_t sub_1000CB4F8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 104);
  *(_QWORD *)(*v1 + 112) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_1000CB550, *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88));
}

uint64_t sub_1000CB550()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 112);
  v2 = *(void **)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 72));
  objc_msgSend(v2, "setImage:", v1);

  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1000CB5CC()
{
  return sub_1000CB5F4(&OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView____lazy_storage___placeholderViewCenterYConstraint, &OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_placeholderArtworkView);
}

id sub_1000CB5E0()
{
  return sub_1000CB5F4(&OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView____lazy_storage___albumArtImageViewCenterYConstraint, &OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_albumArtImageView);
}

id sub_1000CB5F4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v6 = objc_msgSend(*(id *)(v2 + *a2), "centerYAnchor");
    v7 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_albumArtContainerView), "centerYAnchor");
    v8 = objc_msgSend(v6, "constraintEqualToAnchor:constant:", v7, 391.0);

    v9 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v8;
    v5 = v8;

    v4 = 0;
  }
  v10 = v4;
  return v5;
}

id sub_1000CB6C4()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.6, 0.6, 0.6, 1.0);
  qword_10011D920 = (uint64_t)result;
  return result;
}

id sub_1000CB70C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.447058824, 0.447058824, 0.447058824, 0.6);
  qword_10011D928 = (uint64_t)result;
  return result;
}

void sub_1000CB758()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  v1 = objc_msgSend(v0, "colorWithAlphaComponent:", 0.15);

  qword_10011D930 = (uint64_t)v1;
}

id sub_1000CB7C4()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.0980392157, 0.0980392157, 0.0980392157, 1.0);
  qword_10011D938 = (uint64_t)result;
  return result;
}

__n128 sub_1000CB808()
{
  __n128 result;

  __asm { FMOV            V0.2D, #24.0 }
  xmmword_10011D940 = (__int128)result;
  return result;
}

void sub_1000CB81C()
{
  qword_10011D950 = 0x636973756DLL;
  *(_QWORD *)algn_10011D958 = 0xE500000000000000;
}

void sub_1000CB83C(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  void *v7;
  objc_class *ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  objc_super v37;

  v7 = v6;
  ObjectType = (objc_class *)swift_getObjectType(v6, a6);
  v13 = type metadata accessor for ArtworkUnavailableView(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v37 - v18;
  v20 = qword_1001163C8;
  v21 = v7;
  if (v20 != -1)
    swift_once(&qword_1001163C8, sub_1000CB81C);
  v22 = qword_10011D950;
  v23 = *(_QWORD *)algn_10011D958;
  swift_bridgeObjectRetain(*(_QWORD *)algn_10011D958);
  ArtworkUnavailableView.init(placeholderImage:widthRatio:heightRatio:)(v22, v23, 0, 1, 0, 1);
  v24 = objc_allocWithZone((Class)sub_100004F7C(&qword_10011D9E8));
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
  v25 = (void *)UIHostingController.init(rootView:)(v17);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  v26 = objc_msgSend(v25, "view");

  if (v26)
  {
    *(_QWORD *)&v21[OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_placeholderArtworkView] = v26;
    v27 = OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_albumArtContainerView;
    *(_QWORD *)&v21[v27] = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v28 = OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_albumArtImageView;
    *(_QWORD *)&v21[v28] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v29 = OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_titleLabel;
    *(_QWORD *)&v21[v29] = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v30 = OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_artistLabel;
    *(_QWORD *)&v21[v30] = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v31 = OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_shazamLogoImageView;
    *(_QWORD *)&v21[v31] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v32 = OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_shazamCountLabel;
    *(_QWORD *)&v21[v32] = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v33 = OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_trackDetailsStackView;
    *(_QWORD *)&v21[v33] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v34 = OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_shazamCountStackView;
    *(_QWORD *)&v21[v34] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v35 = OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_appleMusicButton;
    *(_QWORD *)&v21[v35] = objc_msgSend(objc_allocWithZone((Class)UIButton), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    *(_QWORD *)&v21[OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView____lazy_storage___albumArtImageViewCenterYConstraint] = 0;
    *(_QWORD *)&v21[OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView____lazy_storage___placeholderViewCenterYConstraint] = 0;

    v37.receiver = v21;
    v37.super_class = ObjectType;
    v36 = objc_msgSendSuper2(&v37, "initWithFrame:", a1, a2, a3, a4);
    sub_1000CBBCC();

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1000CBBCC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  NSString v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  double v23;
  NSString v24;
  char *v25;
  void *v26;
  NSString v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  double v33;
  NSString v34;
  void *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  id v39;
  void *v40;
  uint64_t v41;
  id v42;
  Class isa;
  id v44;
  id v45;
  NSString v46;
  void *v47;
  id v48;
  id v49;
  double v50;
  NSString v51;
  char *v52;
  void *v53;
  NSString v54;
  id v55;
  Swift::String v56;
  Swift::String v57;
  void *object;
  NSString v59;
  id v60;
  char *v61;
  NSString v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  char *v67;
  uint64_t v68;
  char *v69;
  id v70;
  double v71;
  CGFloat v72;
  double v73;
  CGFloat v74;
  double v75;
  CGFloat v76;
  double v77;
  CGFloat v78;
  CGFloat v79;
  uint64_t v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  id v124;
  id v125;
  id v126;
  id v127;
  id v128;
  id v129;
  id v130;
  id v131;
  id v132;
  id v133;
  id v134;
  id v135;
  id v136;
  id v137;
  id v138;
  id v139;
  id v140;
  id v141;
  id v142;
  id v143;
  id v144;
  uint64_t v145;
  Class v146;
  uint64_t v148;
  id v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  id v154;
  id v155;
  id v156;
  id v157;
  id v158;
  id v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  Swift::String v165;
  CGRect v166;

  v1 = v0;
  v2 = sub_100004F7C(&qword_10011A9B0);
  __chkstk_darwin(v2);
  v153 = (char *)&v148 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UIButton.Configuration.CornerStyle(0);
  v151 = *(_QWORD *)(v4 - 8);
  v152 = v4;
  __chkstk_darwin(v4);
  v150 = (char *)&v148 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = type metadata accessor for UIButton.Configuration(0);
  v6 = *(_QWORD *)(v162 - 8);
  __chkstk_darwin(v162);
  v8 = (char *)&v148 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v9 = *(void **)&v0[OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_trackDetailsStackView];
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v1, "addSubview:", v9);
  v10 = *(void **)&v1[OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_titleLabel];
  objc_msgSend(v9, "addArrangedSubview:", v10);
  v11 = *(void **)&v1[OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_artistLabel];
  objc_msgSend(v9, "addArrangedSubview:", v11);
  objc_msgSend(v9, "setAxis:", 1);
  objc_msgSend(v9, "setDistribution:", 0);
  v158 = v9;
  objc_msgSend(v9, "setAlignment:", 0);
  v12 = *(void **)&v1[OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_albumArtContainerView];
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v1, "addSubview:", v12);
  v163 = v1;
  v13 = *(void **)&v1[OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_albumArtImageView];
  objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v159 = v12;
  objc_msgSend(v12, "addSubview:", v13);
  objc_msgSend(v13, "_setContinuousCornerRadius:", 20.0);
  objc_msgSend(v13, "setClipsToBounds:", 1);
  v14 = objc_msgSend(v13, "layer");
  if (qword_1001163B0 != -1)
    swift_once(&qword_1001163B0, sub_1000CB758);
  v160 = v8;
  v161 = v6;
  v15 = objc_msgSend((id)qword_10011D930, "CGColor");
  objc_msgSend(v14, "setBorderColor:", v15);

  v16 = objc_msgSend(v13, "layer");
  objc_msgSend(v16, "setBorderWidth:", 0.5);

  v17 = objc_msgSend(v13, "layer");
  objc_msgSend(v17, "setBorderPathIsBounds:", 1);

  if (qword_1001161B0 != -1)
    swift_once(&qword_1001161B0, sub_100080534);
  v18 = String._bridgeToObjectiveC()();
  objc_msgSend(v13, "setAccessibilityIdentifier:", v18);

  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v19 = (void *)objc_opt_self(UIFont);
  v20 = objc_msgSend(v19, "systemFontOfSize:weight:", 38.0, UIFontWeightSemibold);
  objc_msgSend(v10, "setFont:", v20);

  v21 = (void *)objc_opt_self(UIColor);
  v22 = objc_msgSend(v21, "whiteColor");
  objc_msgSend(v10, "setTextColor:", v22);

  objc_msgSend(v10, "setNumberOfLines:", 2);
  LODWORD(v23) = 1132068864;
  objc_msgSend(v10, "setContentCompressionResistancePriority:forAxis:", 0, v23);
  if (qword_1001161A8 != -1)
    swift_once(&qword_1001161A8, sub_10008050C);
  v24 = String._bridgeToObjectiveC()();
  objc_msgSend(v10, "setAccessibilityIdentifier:", v24);

  v25 = v163;
  v26 = *(void **)&v163[OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_placeholderArtworkView];
  objc_msgSend(v26, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v159, "addSubview:", v26);
  objc_msgSend(v26, "_setContinuousCornerRadius:", 20.0);
  objc_msgSend(v26, "setClipsToBounds:", 1);
  if (qword_1001160D8 != -1)
    swift_once(&qword_1001160D8, sub_1000800BC);
  v27 = String._bridgeToObjectiveC()();
  objc_msgSend(v26, "setAccessibilityIdentifier:", v27);

  v28 = objc_msgSend(v26, "layer");
  v29 = objc_msgSend((id)qword_10011D930, "CGColor");
  objc_msgSend(v28, "setBorderColor:", v29);

  v30 = objc_msgSend(v26, "layer");
  objc_msgSend(v30, "setBorderWidth:", 0.5);

  v31 = objc_msgSend(v26, "layer");
  objc_msgSend(v31, "setBorderPathIsBounds:", 1);

  objc_msgSend(v26, "setOverrideUserInterfaceStyle:", 2);
  objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v32 = objc_msgSend(v19, "systemFontOfSize:weight:", 34.0, UIFontWeightRegular);
  objc_msgSend(v11, "setFont:", v32);

  objc_msgSend(v11, "setNumberOfLines:", 1);
  if (qword_1001163A0 != -1)
    swift_once(&qword_1001163A0, sub_1000CB6C4);
  v157 = v26;
  objc_msgSend(v11, "setTextColor:", qword_10011D920);
  LODWORD(v33) = 1132068864;
  objc_msgSend(v11, "setContentCompressionResistancePriority:forAxis:", 0, v33);
  if (qword_1001161A0 != -1)
    swift_once(&qword_1001161A0, sub_1000804E0);
  v34 = String._bridgeToObjectiveC()();
  objc_msgSend(v11, "setAccessibilityIdentifier:", v34);

  v35 = *(void **)&v25[OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_shazamCountStackView];
  objc_msgSend(v35, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v25, "addSubview:", v35);
  v36 = *(void **)&v25[OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_shazamLogoImageView];
  objc_msgSend(v35, "addArrangedSubview:", v36);
  objc_msgSend(v35, "setCustomSpacing:afterView:", v36, 4.0);
  v37 = *(void **)&v25[OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_shazamCountLabel];
  objc_msgSend(v35, "addArrangedSubview:", v37);
  objc_msgSend(v35, "setAxis:", 0);
  objc_msgSend(v35, "setDistribution:", 0);
  v149 = v35;
  objc_msgSend(v35, "setAlignment:", 0);
  v148 = sub_100004F7C(&qword_100116D90);
  v38 = swift_allocObject(v148, 56, 7);
  *(_OWORD *)(v38 + 16) = xmmword_1000D8100;
  *(_QWORD *)(v38 + 32) = objc_msgSend(v21, "blackColor");
  v39 = objc_msgSend(v21, "blackColor");
  *(_QWORD *)(v38 + 40) = v39;
  if (qword_1001163A8 != -1)
    v39 = (id)swift_once(&qword_1001163A8, sub_1000CB70C);
  v40 = (void *)qword_10011D928;
  *(_QWORD *)(v38 + 48) = qword_10011D928;
  v164 = v38;
  specialized Array._endMutation()(v39);
  v41 = v164;
  sub_100010498(0, (unint64_t *)&qword_100117388, UIColor_ptr);
  v42 = v40;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v41);
  v44 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPaletteColors:", isa);

  v45 = v44;
  v46 = String._bridgeToObjectiveC()();
  v47 = (void *)objc_opt_self(UIImage);
  v48 = objc_msgSend(v47, "systemImageNamed:withConfiguration:", v46, v45);

  v156 = v45;
  v154 = v36;
  v155 = v48;
  objc_msgSend(v36, "setImage:", v48);
  v49 = objc_msgSend(v19, "systemFontOfSize:weight:", 20.0, UIFontWeightMedium);
  objc_msgSend(v37, "setFont:", v49);

  objc_msgSend(v37, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v37, "setTextColor:", qword_10011D928);
  LODWORD(v50) = 1132068864;
  objc_msgSend(v37, "setContentCompressionResistancePriority:forAxis:", 0, v50);
  if (qword_1001160A8 != -1)
    swift_once(&qword_1001160A8, sub_10007FFB4);
  v51 = String._bridgeToObjectiveC()();
  objc_msgSend(v37, "setAccessibilityIdentifier:", v51);

  v52 = v163;
  v53 = *(void **)&v163[OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_appleMusicButton];
  objc_msgSend(v53, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v54 = String._bridgeToObjectiveC()();
  objc_msgSend(v53, "setAccessibilityIdentifier:", v54);

  v55 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v56._countAndFlagsBits = 0xD00000000000001FLL;
  v165._object = (void *)0xE000000000000000;
  v56._object = (void *)0x80000001000DC1F0;
  v57._countAndFlagsBits = 0;
  v57._object = (void *)0xE000000000000000;
  v165._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v56, (Swift::String_optional)0, (NSBundle)v55, v57, v165)._object;

  v59 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v53, "setAccessibilityLabel:", v59);

  v60 = objc_msgSend(v52, "addSubview:", v53);
  v61 = v160;
  static UIButton.Configuration.filled()(v60);
  v62 = String._bridgeToObjectiveC()();
  v63 = objc_msgSend(v47, "imageNamed:", v62);

  UIButton.Configuration.image.setter(v63);
  v64 = v162;
  if (qword_1001163B8 != -1)
    swift_once(&qword_1001163B8, sub_1000CB7C4);
  v65 = qword_10011D938;
  v66 = (id)qword_10011D938;
  UIButton.Configuration.baseBackgroundColor.setter(v65);
  v67 = v150;
  (*(void (**)(char *, _QWORD, uint64_t))(v151 + 104))(v150, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v152);
  UIButton.Configuration.cornerStyle.setter(v67);
  v68 = v161;
  v69 = v153;
  (*(void (**)(char *, char *, uint64_t))(v161 + 16))(v153, v61, v64);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v69, 0, 1, v64);
  UIButton.configuration.setter(v69);
  v70 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v70, "bounds");
  v72 = v71;
  v74 = v73;
  v76 = v75;
  v78 = v77;

  v166.origin.x = v72;
  v166.origin.y = v74;
  v166.size.width = v76;
  v166.size.height = v78;
  v79 = CGRectGetWidth(v166) + -98.0;
  v153 = (char *)objc_opt_self(NSLayoutConstraint);
  v80 = swift_allocObject(v148, 216, 7);
  *(_OWORD *)(v80 + 16) = xmmword_1000D8BA0;
  v81 = v159;
  v82 = objc_msgSend(v159, "leadingAnchor");
  v83 = objc_msgSend(v52, "leadingAnchor");
  v84 = objc_msgSend(v82, "constraintEqualToAnchor:constant:", v83, 24.0);

  *(_QWORD *)(v80 + 32) = v84;
  v85 = objc_msgSend(v81, "heightAnchor");
  v86 = objc_msgSend(v85, "constraintEqualToConstant:", v79);

  *(_QWORD *)(v80 + 40) = v86;
  v87 = objc_msgSend(v81, "widthAnchor");
  v88 = objc_msgSend(v81, "heightAnchor");
  v89 = objc_msgSend(v87, "constraintEqualToAnchor:", v88);

  *(_QWORD *)(v80 + 48) = v89;
  v90 = objc_msgSend(v81, "centerYAnchor");
  v91 = objc_msgSend(v52, "centerYAnchor");
  v92 = objc_msgSend(v90, "constraintEqualToAnchor:", v91);

  *(_QWORD *)(v80 + 56) = v92;
  v93 = objc_msgSend(v13, "centerXAnchor");
  v94 = objc_msgSend(v81, "centerXAnchor");
  v95 = objc_msgSend(v93, "constraintEqualToAnchor:", v94);

  *(_QWORD *)(v80 + 64) = v95;
  v96 = objc_msgSend(v13, "heightAnchor");
  v97 = objc_msgSend(v81, "heightAnchor");
  v98 = objc_msgSend(v96, "constraintEqualToAnchor:", v97);

  *(_QWORD *)(v80 + 72) = v98;
  v99 = objc_msgSend(v13, "widthAnchor");
  v100 = objc_msgSend(v81, "widthAnchor");
  v101 = objc_msgSend(v99, "constraintEqualToAnchor:", v100);

  *(_QWORD *)(v80 + 80) = v101;
  *(_QWORD *)(v80 + 88) = sub_1000CB5F4(&OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView____lazy_storage___albumArtImageViewCenterYConstraint, &OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_albumArtImageView);
  v102 = v158;
  v103 = objc_msgSend(v158, "leadingAnchor");
  v104 = objc_msgSend(v81, "trailingAnchor");
  v105 = objc_msgSend(v103, "constraintEqualToAnchor:constant:", v104, 38.0);

  *(_QWORD *)(v80 + 96) = v105;
  v106 = objc_msgSend(v102, "trailingAnchor");
  v107 = objc_msgSend(v52, "trailingAnchor");
  v108 = objc_msgSend(v106, "constraintEqualToAnchor:", v107);

  *(_QWORD *)(v80 + 104) = v108;
  v109 = objc_msgSend(v102, "centerYAnchor");
  v110 = objc_msgSend(v52, "centerYAnchor");
  v111 = objc_msgSend(v109, "constraintEqualToAnchor:", v110);

  *(_QWORD *)(v80 + 112) = v111;
  v112 = objc_msgSend(v53, "trailingAnchor");
  v113 = objc_msgSend(v52, "trailingAnchor");
  v114 = objc_msgSend(v112, "constraintEqualToAnchor:", v113);

  *(_QWORD *)(v80 + 120) = v114;
  v115 = objc_msgSend(v53, "widthAnchor");
  v116 = objc_msgSend(v115, "constraintEqualToConstant:", 149.0);

  *(_QWORD *)(v80 + 128) = v116;
  v117 = objc_msgSend(v53, "heightAnchor");
  v118 = objc_msgSend(v117, "constraintEqualToConstant:", 50.0);

  *(_QWORD *)(v80 + 136) = v118;
  v119 = objc_msgSend(v53, "bottomAnchor");
  v120 = objc_msgSend(v81, "bottomAnchor");
  v121 = objc_msgSend(v119, "constraintEqualToAnchor:", v120);

  *(_QWORD *)(v80 + 144) = v121;
  v122 = v149;
  v123 = objc_msgSend(v149, "leadingAnchor");
  v124 = objc_msgSend(v102, "leadingAnchor");
  v125 = objc_msgSend(v123, "constraintEqualToAnchor:", v124);

  *(_QWORD *)(v80 + 152) = v125;
  v126 = objc_msgSend(v122, "centerYAnchor");
  v127 = objc_msgSend(v53, "centerYAnchor");
  v128 = objc_msgSend(v126, "constraintEqualToAnchor:", v127);

  *(_QWORD *)(v80 + 160) = v128;
  v129 = v154;
  v130 = objc_msgSend(v154, "heightAnchor");
  if (qword_1001163C0 != -1)
    swift_once(&qword_1001163C0, sub_1000CB808);
  v131 = objc_retainAutoreleasedReturnValue(objc_msgSend(v130, "constraintEqualToConstant:", *((double *)&xmmword_10011D940
                                                                                             + 1)));

  *(_QWORD *)(v80 + 168) = v131;
  v132 = objc_msgSend(v129, "widthAnchor");
  v133 = objc_msgSend(v132, "constraintEqualToConstant:", *(double *)&xmmword_10011D940);

  *(_QWORD *)(v80 + 176) = v133;
  v134 = v157;
  v135 = objc_msgSend(v157, "centerXAnchor");
  v136 = objc_msgSend(v81, "centerXAnchor");
  v137 = objc_msgSend(v135, "constraintEqualToAnchor:", v136);

  *(_QWORD *)(v80 + 184) = v137;
  v138 = objc_msgSend(v134, "heightAnchor");
  v139 = objc_msgSend(v81, "heightAnchor");
  v140 = objc_msgSend(v138, "constraintEqualToAnchor:", v139);

  *(_QWORD *)(v80 + 192) = v140;
  v141 = objc_msgSend(v134, "widthAnchor");
  v142 = objc_msgSend(v81, "widthAnchor");
  v143 = objc_msgSend(v141, "constraintEqualToAnchor:", v142);

  *(_QWORD *)(v80 + 200) = v143;
  v144 = sub_1000CB5F4(&OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView____lazy_storage___placeholderViewCenterYConstraint, &OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_placeholderArtworkView);
  *(_QWORD *)(v80 + 208) = v144;
  v164 = v80;
  specialized Array._endMutation()(v144);
  v145 = v164;
  sub_100010498(0, (unint64_t *)&qword_1001177E0, NSLayoutConstraint_ptr);
  v146 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v145);
  objc_msgSend(v153, "activateConstraints:", v146);

  return (*(uint64_t (**)(char *, uint64_t))(v161 + 8))(v160, v162);
}

void sub_1000CD0F8(void *a1, uint64_t a2)
{
  void *v2;
  void *v3;
  objc_class *ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  objc_super v31;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v6 = type metadata accessor for ArtworkUnavailableView(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v31 - v11;
  v13 = qword_1001163C8;
  v14 = v3;
  if (v13 != -1)
    swift_once(&qword_1001163C8, sub_1000CB81C);
  v15 = qword_10011D950;
  v16 = *(_QWORD *)algn_10011D958;
  swift_bridgeObjectRetain(*(_QWORD *)algn_10011D958);
  ArtworkUnavailableView.init(placeholderImage:widthRatio:heightRatio:)(v15, v16, 0, 1, 0, 1);
  v17 = objc_allocWithZone((Class)sub_100004F7C(&qword_10011D9E8));
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  v18 = (void *)UIHostingController.init(rootView:)(v10);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  v19 = objc_msgSend(v18, "view");

  if (v19)
  {
    *(_QWORD *)&v14[OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_placeholderArtworkView] = v19;
    v20 = OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_albumArtContainerView;
    *(_QWORD *)&v14[v20] = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v21 = OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_albumArtImageView;
    *(_QWORD *)&v14[v21] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v22 = OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_titleLabel;
    *(_QWORD *)&v14[v22] = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v23 = OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_artistLabel;
    *(_QWORD *)&v14[v23] = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v24 = OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_shazamLogoImageView;
    *(_QWORD *)&v14[v24] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v25 = OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_shazamCountLabel;
    *(_QWORD *)&v14[v25] = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v26 = OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_trackDetailsStackView;
    *(_QWORD *)&v14[v26] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v27 = OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_shazamCountStackView;
    *(_QWORD *)&v14[v27] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v28 = OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_appleMusicButton;
    *(_QWORD *)&v14[v28] = objc_msgSend(objc_allocWithZone((Class)UIButton), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    *(_QWORD *)&v14[OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView____lazy_storage___albumArtImageViewCenterYConstraint] = 0;
    *(_QWORD *)&v14[OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView____lazy_storage___placeholderViewCenterYConstraint] = 0;

    v31.receiver = v14;
    v31.super_class = ObjectType;
    v29 = objc_msgSendSuper2(&v31, "initWithCoder:", a1);
    if (v29)
    {
      v30 = v29;
      sub_1000CBBCC();

    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for AmbientMatchView()
{
  return objc_opt_self(_TtC16MusicRecognition16AmbientMatchView);
}

uint64_t sub_1000CD594()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self(_TtC16MusicRecognitionP33_B401A82AE4238854179C4CF9E34E19D219ResourceBundleClass);
}
